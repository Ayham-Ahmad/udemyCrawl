{
  "courses": [
    {
      "title": "RedM /Fivem Modding & Mapping: From Zero to Expert",
      "url": "https://www.udemy.com/course/redm-fivem-modding-mapping-from-zero-to-expert/",
      "bio": "RedM /Fivem Modding & Mapping",
      "objectives": [
        "How to create custom maps for RedM and FiveM",
        "How to use tools like Codewalker, OpenIV, and more",
        "How to import and use custom props or objects (modding)",
        "Techniques for placing, editing, and optimizing objects in the game world",
        "Methods for creating high-performance, low-size, and visually polished maps",
        "Editing and customizing existing in-game maps",
        "Managing textures, collisions, and LODs effectively",
        "Properly integrating mapping and modding files into the server",
        "Optimization techniques to ensure smooth gameplay and high FPS",
        "Practical tips and real workflows for professional map development"
      ],
      "course_content": {},
      "requirements": [
        "You don't need any prior experience you'll learn everything in this course."
      ],
      "description": "Sıfırdan kendi özel RedM veya FiveM sunucunuzu kurmaya hazır mısınız?\nBu kursta, başarılı bir rol yapma deneyiminin en temel iki unsuru olan harita tasarımı ve senaryo geliştirme hakkında bilmeniz gereken her şeyi öğreneceksiniz.\nRedM ve FiveM topluluğunda deneyimli bir geliştirici olan Efe Yalçın liderliğindeki bu kurs, sunucu geliştirmenin hem yaratıcı hem de teknik taraflarında size adım adım rehberlik edecek. Sunucu kurulumunun temelleriyle başlayacak, ardından özel harita oluşturma, prop yerleştirme, ortam optimizasyonu ve Lua kullanarak gelişmiş betiklemeye geçeceksiniz.\nKurs boyunca, uygulamalı örnekler ve örnek projeler aracılığıyla gerçek dünya tekniklerini öğreneceksiniz; böylece bilginizi doğrudan kendi işinize uygulayabileceksiniz.\nİster eğlence amaçlı bir sunucu kurun, ister bir topluluk büyütün veya ticari bir proje başlatın; bu kurs size gerçek iş akışları, profesyonel araçlar ve gerçekten işe yarayan pratik ipuçları sunar.\nHiçbir ön deneyime ihtiyacınız yok; sadece tutkunuz, yaratıcılığınız ve yeni bir şeyler öğrenme isteğiniz yeterli.\nBu kursun sonunda şunları yapabileceksiniz:\nKendi FiveM veya RedM sunucunuzu kurun ve çalıştırın\nÖzel haritalar ve sürükleyici ortamlar tasarlayın\nBenzersiz oyun içi özellikler için komut dosyaları oluşturun ve değiştirin\nSunucunuzu performans ve istikrar açısından optimize edin\nGerçek geliştirici teknikleriyle güvenle çalışın\nToplulukla daha etkili bir şekilde işbirliği yapın ve ekip çalışmasını geliştirin\nBecerilerinizi gerçek projelere uygulayın veya serbest çalışmaya başlayın",
      "target_audience": [
        "Anyone who wants to create their own RedM or FiveM server",
        "Developers interested in learning map design and script development for roleplay servers",
        "Those who want to learn Lua scripting from scratch",
        "Beginners looking to start server development with no prior experience",
        "Server owners who want to customize and upgrade their existing servers",
        "Designers aiming to enhance the roleplay experience through custom maps and systems",
        "Anyone who wants to improve their technical skills to work freelance or grow their own project"
      ]
    },
    {
      "title": "How to create a Multiplayer FPS in Unity",
      "url": "https://www.udemy.com/course/how-to-create-a-multiplayer-fps-in-unity/",
      "bio": "Do you want to create a Multiplayer FPS? From scratch? Look no further, here you learn it all!",
      "objectives": [
        "Create a fully featured Multiplayer FPS and create other multiplayer games"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Series",
          "Introduction to Networking"
        ],
        "Setup": [
          "Unity (Environment) Setup",
          "Network Setup",
          "Player Setup (Part 1)",
          "Player Setup (Part 2)",
          "Game Controller Setup - Pickups",
          "Game Controller Setup - Score",
          "Zombies"
        ],
        "Making things look pretty": [
          "Adding more detail",
          "Deployment"
        ],
        "Bonus": [
          "Zombie Points",
          "Paid pickups",
          "Paid sections"
        ],
        "Making things look pretty - Part 2": [
          "FPS view arms",
          "TPS view body and animations",
          "FPS Animation",
          "New Map",
          "New Map (Bonus 21:9)"
        ]
      },
      "requirements": [
        "Unity 5 Personal Edition",
        "Basic programming knowledge makes things easier"
      ],
      "description": "Ever wanted to create your own Multiplayer FPS? Now you can!\n\"But.. it's hard.\" No, it isn't, you just need motivation and some basic programming knowledge.\nWith this course you are going to learn the basics of Networking in games, how to create a first person shooter in Unity and then how to make it multiplayer. As soon as you get the concept, you'll be able to create any kind of multiplayer game!",
      "target_audience": [
        "New Unity game developers",
        "New Unity Multiplayer game developers",
        "New FPS game developers"
      ]
    },
    {
      "title": "Create Action 3D RPG Game in Unity",
      "url": "https://www.udemy.com/course/3d-rpg-horror-action-game-in-unity/",
      "bio": "3D RPG Horror Action Game",
      "objectives": [
        "Build 3D Unity Game",
        "Write Program in C#",
        "Design",
        "Player & Enemy Controller"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "New Project"
        ],
        "Player&Camera Setting": [
          "Player & Camera Setting",
          "Camera Orbit Script 1",
          "Camera Orbit Script 2",
          "Player Movement",
          "Player Jump"
        ],
        "Enemy Setting": [
          "Enemy Object",
          "Navmesh"
        ],
        "Enemy&Player Attack System": [
          "Enemy Chase Player",
          "Enemy Attack Player",
          "Player Attack Enemy"
        ],
        "Make Environment": [
          "importing Environment"
        ],
        "Importing Zombie Assets": [
          "Importing zombie Asset"
        ],
        "Player Controller": [
          "Player Controller"
        ],
        "Player&Enemy Animation": [
          "Player Animator",
          "Player Animation Code",
          "Enemy Animation"
        ],
        "Player UI Health": [
          "Player Healthbar"
        ],
        "Audio Manager": [
          "Audio Manager"
        ]
      },
      "requirements": [
        "Have a PC or Mac",
        "No prior coding experience required"
      ],
      "description": "Learn how to create and program your very own 3D Platformer game using Unity, an industry-standard game development program used by many large gaming studios and indie developers across the world.\nIn this course you won’t just be learning programming concepts, but tying these concepts to real game development uses.\nThis course has been designed to be easily understandable to everyone, so whether you’re a complete beginner, an artist looking to expand their game development range or a programmer interested in understanding game design, this course will help you gain a greater understanding of development.\n\nAt the end of this course you will have developed the ability to create such game elements as:\n\n\n\n\nFull 3D Character Movement\nUnity Installation and setup\nphysics\nEnemy Pathfinding\nbasic artificial intelligent\ncamera animation and cutscene\nAnimating Characters\nState-based Enemy AI\nFully-featured  Battles\nComplete Health System\nAudio system using Audio Mixer\nUnity's Cinemachine Camera system\nPlayer Attack system\nEnemy Attack System\nCamera Look System\nPlayer Jump\nScripting,Scripting and Scripting\nImporting Zombie Assets\nAdventure RPG game\nand a tone more\nStart learning today and let me help you become a game developer!\nWho this course is for:\nAnyone who wants to make their own 3D games.\nPeople who want to create and publish their own games.\nComplete beginners with an interest in learning game development.\nDevelopers who want to re-skill across to game development.\nPeople interested in working in the game design industy.\nCompetent and confident with using a computer...",
      "target_audience": [
        "Beginners"
      ]
    },
    {
      "title": "Learn to create a 2D Racing car game for FREE PART 3.",
      "url": "https://www.udemy.com/course/learn-to-create-a-2d-racing-car-game-for-free-part-3/",
      "bio": "Learn how to create a cool 2D top down racing car game with the unity game engine.",
      "objectives": [],
      "course_content": {
        "Adding lap time features on our track": [
          "Setting the trigger for our lap timer",
          "Adding code for our lap timer",
          "Activating our best time using code"
        ],
        "Damaging our car through a health system": [
          "Adding health and damage to our car",
          "Creating two ways to do an explosion effect",
          "Creating a lives system to blow up the car.",
          "Fixing our car explosion sound."
        ]
      },
      "requirements": [
        "You will need to download unity and visual studio which is free and then be willing to learn game design.",
        "Basic understanding of the C# language and Unity"
      ],
      "description": "THIS COURSE WILL BE UPLOADED IN PARTS DUE TO VIDEO TIME RESTRICTIONS.\n\n\nIn my course we will start at the bottom and work our way up to advanced game design like AI path finding, we will be creating a car controller and many features with in our game.\nThis course is designed for beginner level and up as i will explain everything in best detail as i can, at the end of the course we will have made a racing car game like micro machines which in the 1980's was an amazing car game.\nIn this part of the course you will learn\nSetting the trigger for our lap timer\nAdding code for our lap timer\nActivating our best time using code\nAdding health and damage to our car\nCreating two ways to do an explosion effect\nCreating a lives system to blow up the car\nFixing our car explosion sound.",
      "target_audience": [
        "Students that want to learn to be a game designer."
      ]
    },
    {
      "title": "Unity Basics: Create a Flappy Bird Clone from Scratch",
      "url": "https://www.udemy.com/course/flappy-bird-your-intro-guide-to-unity-game-development/",
      "bio": "Craft the iconic Flappy Bird Game and learn Unity Game Design techniques like animations, background parallax, and more!",
      "objectives": [
        "Set up and navigate the Unity interface",
        "Implement game physics and controls",
        "Create engaging 2D graphics and animations",
        "Develop a fully functional Flappy Bird clone",
        "Troubleshoot and debug common issues"
      ],
      "course_content": {
        "Rigidbody 2D": [
          "Read Me Before Enrolling",
          "Introduction to Unity's internal 2D physics",
          "Constrains"
        ],
        "Sprites": [
          "Importing sprites",
          "Sprite sorting layers"
        ],
        "Bobbing animation": [
          "Simple bobbing animation"
        ],
        "Plugins": [
          "Installing the DoTween plugin"
        ],
        "Seamless texture scrolling": [
          "Seamless ground scrolling"
        ],
        "Touch input": [
          "Configuring touch input using the new input system"
        ],
        "Rigidbody 2D Forces": [
          "Keeping the bird in the air"
        ],
        "Collision": [
          "Adding collision"
        ],
        "Bird Rotation": [
          "Bird rotation according to its Y velocity."
        ],
        "Basic UI": [
          "Basic UI"
        ]
      },
      "requirements": [
        "No prior experience required",
        "A computer with internet access",
        "Willingness to learn and experiment"
      ],
      "description": "Tired of feeling stuck on the sidelines of the game development world? Do you dream of creating your own games, but feel overwhelmed by the technical complexities? You're not alone. Many aspiring game developers struggle to get started, intimidated by the learning curve and unsure where to begin.\n\n\nImagine the satisfaction of bringing your game ideas to life, seeing your very first creation come to life within Unity. This course unlocks that possibility, guiding you step-by-step through the creation of the iconic Flappy Bird game.\n\n\nForget complex jargon and intimidating tutorials. This course is specifically designed for absolute beginners. You'll master the fundamentals of Unity in an engaging and practical way, building a playable game while learning essential concepts like scene creation, scripting, animation, and game design principles.\n\n\nHere's what sets this course apart:\nNo prior coding experience required. We'll walk you through everything you need to know, starting from scratch.\nLearn by doing. Build a complete game while mastering valuable skills.\nDetailed, step-by-step instructions. We break down complex concepts into easy-to-follow steps.\nFun and engaging atmosphere. Learning shouldn't feel like a chore!\n\n\nStop wishing and start creating! Enroll today and unlock your full potential as a game developer. This course empowers you to confidently take your first steps on an exciting game development journey.\n\n\nOvercome your self-doubt. This course is designed to be accessible and achievable, even for complete beginners. With clear instructions and a supportive community, you'll be surprised by what you can accomplish.\n\n\nJoin us and turn your game development dreams into reality!",
      "target_audience": [
        "Beginners with no prior experience in game development",
        "Aspiring game developers looking to learn Unity",
        "Gamers interested in creating their own games"
      ]
    },
    {
      "title": "Unreal Generalist: Practical Materials & Effects",
      "url": "https://www.udemy.com/course/unreal-generalist-practical-materials-effects/",
      "bio": "Craft Stunning Materials: Holograms, Fire FX, Chameleon Shaders & Beyond",
      "objectives": [
        "Master material creation in Unreal Engine — from foundational setups to advanced, production-ready systems.",
        "Design optimized VFX materials for Niagara and volumetric VDB-based effects.",
        "Build complex surface behaviors like water condensation, toxic fluid flow, and holographic projections.",
        "Explore multiple material workflows and understand when and why to use each approach.",
        "Create a reusable, modular material library—your own set of \"Lego pieces\" to speed up future production work."
      ],
      "course_content": {
        "Simple Base Material": [
          "Setting Up The Project",
          "Content Source",
          "Support Discord",
          "Setting Up A Simple Base Material",
          "Testing And Tweaking"
        ],
        "Advanced Material": [
          "Starting Advanced Material",
          "Expanding Advanced Material",
          "Continue To Expand Advanced Material",
          "Adding And Controlling Variation"
        ],
        "2-Way Material Blend": [
          "Creating 2-Way Material",
          "Refining 2-Way Material"
        ],
        "Distance Field Ambient Occlusion Material": [
          "Creating DFAO Material",
          "DFAO Material Part 1",
          "DFAO Material Part 2",
          "DFAO Material Part 3",
          "DFAO Material Part 4",
          "DFAO Material Part 5"
        ],
        "Stack Layer Material": [
          "Stack Layer Material Part 1",
          "Stack Layer Material Part 2"
        ],
        "Glass Condensation": [
          "Glass Condensation Part 1",
          "Glass Condensation Part 2",
          "Glass Condensation Part 3"
        ],
        "Parallax Occlusion Mapping": [
          "Challenge: Medieval House",
          "POM Material"
        ],
        "Auto Terrain Material": [
          "Auto Terrain Material Part 1",
          "Auto Terrain Material Part 2",
          "Auto Terrain Material Part 3"
        ],
        "VFX Materials": [
          "VFX Part 1",
          "VFX Part 2",
          "VFX Part 3",
          "VFX Part 4",
          "VFX Embergen",
          "VFX Part 5",
          "VFX Part 6"
        ],
        "High-Velocity Burnup VFX": [
          "High-Velocity Burnup VFX Part 1",
          "High-Velocity Burnup VFX Part 2"
        ]
      },
      "requirements": [
        "Basic understanding of Unreal Engine’s Material Editor.",
        "No advanced math or code required.",
        "Familiarity with tools like Substance Designer or Embergen is a good to have, but not essential."
      ],
      "description": "In this course, we’ll start by building a clean, simple base material with essential controls for Base Color, Roughness, AO, Metallic, and Normal adjustments.\nFrom there, we level up — adding detail normals, object radius-based tiling, custom tiling parameters, and a texture variation function to push visual quality even further.\nNext, we dive into 2-way material blending, exploring multiple blending techniques. That sets us up to create a DFAO shader featuring various blending types, including Z-up masking for terrain and props.\nWe’ll then repurpose our existing material functions to create a stacked layer material — showing you how to reuse your tools efficiently across different material types while keeping everything organized and scalable.\nYou'll also build a glass condensation shader, complete with fogging, refraction, water droplets, and running water — featuring a dynamic 4-way masking system, reusable in other FX and perfect for cinematics and high-fidelity projects.\nWe’ll cover Parallax Occlusion Mapping, then tackle auto terrain materials using slope masks and edge noise to drive natural transitions for large environments.\nFrom there, it’s VFX time: advanced flipbook setups, Niagara integration, Embergen basics, and VDB workflows — everything you need to craft cinematic real-time effects.\nYou’ll reuse flipbooks to create atmospheric burnup and wind resistance effects, develop a chameleon shader that blends characters into surfaces, and construct a dynamic multi-layered hologram.\nAnd finally? We bring it all together in the toxic river — a complex effect combining everything we’ve learned into one stunning showcase.\nThis course is built for generalists who want to work smarter, not harder — and leave with a flexible toolkit ready for production.\nLet’s build.",
      "target_audience": [
        "Ideal for Unreal Engine artists or technical artists interested in building complex, production-level shaders."
      ]
    },
    {
      "title": "Fundamentals of Vegetation in Video Games",
      "url": "https://www.udemy.com/course/basics-of-vegetation-in-video-games/",
      "bio": "The course is aimed at beginners in vegetation creation and is purely theoretical.",
      "objectives": [
        "Best tools to use and where to find the best vegetation resources",
        "All the tree creation steps for a Populus tree (structure, 3d branches as textures, full branch creation with plans)",
        "A few breakdown examples for multiple trees & ground vegetation (pine and palm + bush, ferns, grass, plants & flowers)",
        "How important shaders are",
        "Different wind types",
        "How to optimize your foliage in engine (UE5)"
      ],
      "course_content": {
        "Things to Know": [
          "Which software are available",
          "Where to get textures & scanned models"
        ],
        "Tree Creation (theorical)": [
          "All you need to know about leafy tree creation"
        ],
        "Examples": [
          "Pine & Palm Trees",
          "Ground Cover Vegetation"
        ],
        "In Engine (UE5)": [
          "Why shaders matter",
          "Different Wind Type",
          "How to optimize vegetation in UE5"
        ]
      },
      "requirements": [
        "Owning a computer with Windows 10 or Windows 11",
        "Winrar or 7zip to decompress file."
      ],
      "description": "If you have always wanted to learn about vegetation but didn't know where to start, this course is for you! Entirely oriented to beginners, learn all the tips and tricks to know before starting your vegetation journey.\n\n\nPlease note that this course is focused on beginners in vegetation creation and is purely theoretical. This means that no model creation is performed during this course.\n\n\nYou don't need to buy this course if you already have an \"Unreal Complete Scene\" course.\n\n\nWhat I will learn?\nBest tools to use and where to find the best vegetation resources\nAll the tree creation steps for a Populus tree (structure, 3d branches as textures, full branch creation with plans)\nA few breakdown examples for multiple trees & ground vegetation (pine and palm + bush, ferns, grass, plants & flowers)\nHow important shaders are\nDifferent wind types\nHow to optimize your foliage in engine (UE5)\n\n\nWhat I will get?\n~3h30 of breakdown video\n1080/30fps resolution\nSoftware Used:\nSpeedtree 9.5.2\nUnreal Engine 5.3.2\n3ds Max 2023\n\n\nLevel:\nAnyone who wants to learn the basics of vegetation for video games.\n\n\nPrerequisite:\nOwning a computer with Windows 10 (64Bits) / Not tested on Windows 11\nWinrar or 7zip to decompress file.\n\n\nAbout copyrights:\nAll you can find in this course are for personal usage only. You cannot share it, sell it or make it available for free on any platform.",
      "target_audience": [
        "Anyone who wants to learn the basics of vegetation for video games."
      ]
    },
    {
      "title": "Unity Game Dev for Freelancers with Playfab and Photon",
      "url": "https://www.udemy.com/course/unity-game-dev-course-for-freelancers-with-playfab-photon/",
      "bio": "Learn how to use Unity, Playfab and Photon PUN to become a freelance game developer by building a multiplayer 2D system!",
      "objectives": [
        "How to Sell Your Game Development Services on Various Online Platforms",
        "Where to Sell Game Development Solutions",
        "How to Converse With Potential Clients and Engage Them",
        "How to Extract Information From Potential Clients and Understand Their Requirements Fully",
        "Use Price Bracketing to Determine the Client's Budget",
        "Create a Statement of Work Which Clearly Tells What Solutions You Will Be Providing",
        "Set Milestones and Create Well Defined Modules to Get Paid for Work Done",
        "Create a Basic 2D Platfomer",
        "Add Basic Back-end Functionality Using Playfab into The 2D Platfomer",
        "Add Multi-player features Inside the Platformer using Photon PUN. This will be a 2 player game",
        "How to Complete Projects Successfully"
      ],
      "course_content": {
        "Things You Must Know Before Starting": [
          "What you need to know before starting this course",
          "Why you should take this course?"
        ],
        "Engage Potential Clients, Gather Requirements, Define Scope of Work, and Start": [
          "Types of Clients That you Should Avoid",
          "Types of Clients to Avoid (Continued)",
          "General Rules and Principles",
          "Importance of Well Defined Requirements",
          "Most Popular Websites For Providing Game Development Services",
          "Handling Clien Inquiries and Types of Clients (Part 1)",
          "Handling Client Inquiries and Types of Clients (Part 2)",
          "Conversing with The Client and Closing The Deal",
          "Common Techniques/Tricks to Generate More Sales",
          "Example Conversation with A Cleint"
        ],
        "Integrating Playfab Login and Register System": [
          "Getting The Project Ready for Playfab",
          "Importing Playfab Editor Extensions",
          "Creating Register and Login System (Part 1)",
          "Creating Register and Login System (Part 2)",
          "Creating Register and Login System (Part 3)",
          "Creating Register and Login System (Part 4)",
          "Creating Register and Login System (Part 5)",
          "Sending a Verification Email to a New User",
          "Playfab Cloud Script for Win/Loss Data",
          "Sending Video to The Client For Module 1",
          "Adding Forgot Password and Account Recovery Feature"
        ],
        "Integrating Friends System, Leaderboard and Personal Best Times": [
          "Defining module 2",
          "References For Module 2",
          "Creating the Main Menu for The Main Menu Scene",
          "Cloud Script to Update Win Loss Data",
          "Updating Player Statistics Using Playfab Cloud Script",
          "Creating the Leaderboard Screen and Menu (Part 1)",
          "Creating the Leaderboard Screen and Menu (Part 2)",
          "Creating the Leaderboard Screen and Menu (Part 3)",
          "Creating the Leaderboard Screen and Menu (Part 4)",
          "Creating the Leaderboard Screen and Menu (Part 5)",
          "Creating the Leaderboard Screen and Menu (Part 6)",
          "Creating the Leaderboard Screen and Menu (Part 7)",
          "Creating the Leaderboard Screen and Menu (Part 8)",
          "Creating the Leaderboard Screen and Menu (Part 9)",
          "Creating the Friends Request and Friends System (Part 1)",
          "Creating the Friends Request and Friends System (Part 2)",
          "Creating the Friends Request and Friends System (Part 3)",
          "Creating the Friends Request and Friends System (Part 4)",
          "Creating the Friends Request and Friends System (Part 5)",
          "Creating the Friends Request and Friends System (Part 6)",
          "Creating the Friends Request and Friends System (Part 7)",
          "Creating the Friends Request and Friends System (Part 8)",
          "Creating the Friends Request and Friends System (Part 9)",
          "Settings to Create And Android Build",
          "Testing The Android Build - Test 1",
          "Completion of Module and Cloud Script Placed Inside Code"
        ],
        "Sounds and Music for Menus + Fixing Bugs": [
          "Placing Sound and Music Files into Our Project",
          "We will create the Functions to Play Music and Sounds",
          "Adding Friends Leaderboard and Fixing Bugs",
          "Fixing Layout Group for Leaderboards (Optional)"
        ],
        "Integrating PUN 2 Plugin into Our Project with Character Controls ($350-$500)": [
          "Connecting to the Photon Servers",
          "Creating a Room using Photon",
          "Creating the Photon Lobby Script (Part 1)",
          "Creating the Photon Lobby Script (Part 2)",
          "Creating the Photon Lobby Script (Part 3)",
          "Creating Player Avatar Capsule",
          "Creating the Disconnection Canvas",
          "Destroying Photon Room Objects",
          "Adding You Text To The Local Player",
          "Syncronizing Animations Using Photon",
          "Setting Up Player States (Part 1)",
          "Setting Up Player States (Part 2): Sync Movement and Flip Value",
          "Setting Up Player States (Part 3): Lag Compensation for Movement",
          "Setting Up Player States (Part 4): Detecting Ground",
          "Setting Up Player States (Part 5): Integrating Jump Without Compensation",
          "Setting Up Player States (Part 6): Integrating Basic Lag Compensation",
          "Setting Up Player States (Part 7): Adding Variable Jump",
          "Setting Up Player States (Part 8): Adding Jump Animations",
          "Setting Up Player States (Part 9): Setting Up Slope Movement",
          "Sending Video the The Client For Payment"
        ],
        "Creation of Character Selection System ($200)": [
          "Creating Character Selection System (Part 1)",
          "Creating Character Selection System (Part 2)",
          "Spawning Selected Character into Multi-player scene"
        ],
        "Creation of Win Loss System and Updating User Data ($200)": [
          "Creating A Win/Lose Collider",
          "Creating the Win Lose Canvas",
          "Executing Cloud Script to Update Player Data",
          "Creating the Ready Go Canvas and System",
          "Creating Level 1 and Level 2 Spawning System",
          "Updating the Leaderboard and Submitting Completion Time"
        ],
        "Creation of Levels Using Tilesets + Level Design ($300)": [
          "Placing a Background in the Multi-player Scene",
          "Creating the First Tilemap with Some Tiles",
          "Setting Up Reset Collider or Trap Collider",
          "Fixing Collision Bugs in Our Controller"
        ],
        "Mobile Controls and Android Build Module ($200)": [
          "Downloading and Integrating the Mobile Virtual Joystick Package",
          "Integrating Jump Button for Mobile"
        ]
      },
      "requirements": [
        "Some Knowledge About Unity's Basic Features is Required",
        "You should know how to navigate the Unity Editor",
        "You should know how to set up an external editor for script editing",
        "You should know how to at least create an Android build and install it on an Android Phone",
        "Your Unity Installation Should Include WebGl, Windows, Linux and Android Modules",
        "You should know about commonly used Unity Events, IEnumerators, and Unity's Physics Components",
        "You should have basic knowledge about C# and and programming fundamentals",
        "This course is not intended for absolute beginners, as I do not explain in things in great detail"
      ],
      "description": "EVEN IF YOU DO NOT WISH TO OFFER YOUR GAME DEVELOPMENT SKILLS AS A SERVICE, THE MULTIPLAYER GAME THAT WE WILL MAKE WITH PLAYFAB AS A BACK-END WILL BE EXTREMELY USEFUL FOR YOU! YOU CAN JUST SKIP THE PART WHERE I TEACH THE STUDENTS ABOUT HOW TO COMMUNICATE WITH CLIENTS AND BASIC SALES TECHNIQUES\nDo you dream of building your own multiplayer games in Unity? Are you a freelancer looking to expand your skill set and take on more clients? Look no further than this comprehensive Unity game development course!\nIn this course, you will learn how to create engaging multiplayer games using the power of Photon PUN2 and PlayFab. With step-by-step guidance, you'll gain a deep understanding of the Photon multiplayer framework and how to integrate it with PlayFab's backend services. From matchmaking and player synchronization to leaderboards, you'll master the tools and techniques necessary to create seamless online gaming experiences.\nWith a focus on real-world scenarios, this course will teach you how to create an end-to-end multiplayer game from scratch. You'll start with the basics of Unity and C# programming, and then dive into Photon's powerful multiplayer features. You'll learn how to set up a PlayFab account, integrate it with Photon, and build a fully-functional multiplayer game.\nWhether you're an experienced Unity developer or a beginner looking to break into the industry, this course has something for everyone. By the end of the course, you'll have the skills and confidence to create your own multiplayer games in Unity and succeed as a freelancer in the game development industry.\nEnroll now and take the first step toward building your own online gaming empire\nIn this course, I will teach you everything that you need to know to start freelancing as a Unity Game Developer. I will cover most of the important features that clients on online marketplaces such as Fiverr, Upwork and Guru require. I will:\n- Teach you how to communicate with clients and how to respond to various types of clients\n- Teach you how to Gather requirements and define modules for your client so you can get paid consistently\n- Teach you how to send videos to your clients to show the work that you have done and then get paid for that\nTo do this we will develop a 2D Multiplayer Game Using Unity with Photon PUN for multiplayer integration, and PlayFab as a back-end for storing user data. We will:\n- Create a 2D platformer from scratch using free graphics. We will pretend that the client provided those graphics to us\n- Create a login, register, and verification system using Playfab as a backend\n- Use Photon PUN and its various features to setup random online matches between players.\nThe objective of the game (we will pretend that the objective was given to us by the client) will be to reach to the end of the level before the opponent does. The Multi-player levels will include:\n- Traps and Pits the the player has to either jump over or avoid\n- Enemies with basic AI. They will try to attack the player and either cause a game over or slow the player down\n- A complete system where when one player reaches the end, the game automatically ends with one player winning and the other losing\nAs we will be using Photon PUN, the player avatars will not be able to fire back at the enemies or use any projectile system, since we will cover only basic synchronization which itself is a task that even AAA studios struggle with.",
      "target_audience": [
        "People who wish to learn Game Development and Start freelancing",
        "People who wish to learn how to sell game development solutions as a side gig to earn extra cash",
        "People who wish to learn how to Develop a Mutli-player Platform Game Using Unity with the Photon PUN Plugin with Playfab Backend Features",
        "Game Developers that are looking to quit their 9 to 5 job to start their own business as a service provider"
      ]
    },
    {
      "title": "Unity Game Development For Complete Beginners",
      "url": "https://www.udemy.com/course/unity-game-development-for-complete-beginners/",
      "bio": "A Complete Beginner Guide in getting started with Unity 3D, C# and making games.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "How to install unity",
          "Tour of Unity Editor",
          "Gameplay in Unity 2D",
          "Sorting layers and order in layers",
          "Scripting in Unity",
          "3D Objects in Unity",
          "Material Colors to Game Objects"
        ],
        "Coding": [
          "Move a Simple Cube with the Arrow Keys",
          "Make a cube jump in unity"
        ],
        "Colliders and Ui": [
          "Colliders in Unity",
          "Canvas and it’s UI Elements"
        ],
        "Creating Your First Game": [
          "Creating a small 2d infinite runner game in 10 minutes"
        ],
        "More You Can learn": [
          "Space Shooter Game",
          "Particle System For Beginners"
        ]
      },
      "requirements": [
        "Programming basics"
      ],
      "description": "In this course, you will how to get started with unity. This covers the basic functionalities of Unity editor. This course is using totally new features and coding practices and is compatible to work with all the newer versions of unity.\nLearn how to small and big video games using Unity, the world-leading free-to-use game development tool. With our online tutorials, you'll be amazed at how easy it is to create a game.\nYou will get full lifetime access to this course. You will learn to create 3Dand 2D games.\nAnyone who wants to learn to create games: Unity is a fantastic platform that enables you to make production-quality games. Furthermore, these games can be created for Windows, macOS, iOS, Android, and Web from a single source!\nDive in and learn Unity now, you won't be disappointed!\nWho this course is for:\nBeginner and Intermediate level unity Developers.\nSome programming experience required.\nArtists who want to learn to bring their assets into games.\nDevelopers who want to enhance their basic game development skills according to new practices.\nYou probably already have everything you need to get started but we will guide you from the basics. Unity is a free download. With regular access to an internet connection, you'll be able to engage in our thriving community. Even if you have no experience with coding, or with 3D packages, we will guide you through everything from first principles. Starting slow, then building on what you learn, you'll soon have a very solid working knowledge of Unity.",
      "target_audience": [
        "Unity developers who wants to learn game development"
      ]
    },
    {
      "title": "Unreal Engine 5 Tactical FPS Game Development PC & Mobile",
      "url": "https://www.udemy.com/course/unreal-engine-5-tactical-fps-game-development-pc-mobile/",
      "bio": "Build a complete Tactical Shooter Game with Blueprints for PC & Android. Includes publishing to Itch io & Play Store.",
      "objectives": [
        "Unreal Engine Advanced Blueprint",
        "How Create Tactical FPS Game for Android",
        "Game Quest System",
        "Create Virtual Joystick For Android Inputs",
        "Make Mini Map With Point of Interest",
        "Export Game For Android",
        "Publish Your Game On Play Store"
      ],
      "course_content": {
        "Setup Unreal Engine 5.5.4 For Android Development": [
          "Install Unreal Engine 5.5.4 For Android Development",
          "Create Default Third Person Project",
          "Setup SDK NDK JDK For Unreal Engine 5.5.4",
          "Package Apk And Install On Real Device"
        ],
        "Learn Basic About Unreal Engine 5 Bluprints": [
          "Information About Unreal Engine 5 Bluprints",
          "Create New Project",
          "Create Player Character Bluprints",
          "Create Controller And Game Mode Bluprint"
        ],
        "Enhanced Input System": [
          "Setup Movement Input In To Character",
          "Add Mouse Movement Input For Character",
          "Add Jump And Sprinting Input",
          "Add Virtual Joystick Controller Support"
        ],
        "Basic Animation Blueprints": [
          "Create Idle Walk Run Animation Inside Animation Bluprint",
          "Implement Falling Animation"
        ],
        "Setup First Person Character With Animations": [
          "Import All Content Inside Your Project",
          "Setup Fps Character Mesh In Character BP",
          "Setup Animation Blueprint For FPS Character",
          "Create Blueprint Interfaces To Communicate Between Blueprints",
          "Create Data Table For Weapons",
          "Create Pistol AnimState",
          "Create Weapon Actor With Data Table",
          "Change First Person Character Animation Based On Weapon Type"
        ],
        "Setup All Weapons Animation": [
          "Complete Our Pistol Animation",
          "Setup Knife Animation State",
          "Setup Granade Animation State",
          "Setup SMG Animation State",
          "Setup Shotgun Animation State",
          "Setup Rifle Animation State",
          "Setup Sniper Animation State.mp4",
          "Setup RPG Animation State",
          "Important Video Fixing Issues & Project File"
        ],
        "Weapons Mechanic": [
          "Setup Weapon Animation Logic Using Interfaces",
          "Add Weapon Animation In Data Table",
          "Add Weapon Muzzle Flash Particle",
          "Spawn Camera Shake While Shooting",
          "Add Weapon Sound FX",
          "Create Dummy NPC With Damage Counter",
          "Weapon Damage System",
          "Spawn Bullet Decal Where bullet Hit",
          "Spawn Bullet Hole Decal Based On Surface Type",
          "Play Bullet Impact Sound At location",
          "Spaw Hit Particle Where Bullet Hit",
          "Remove Decal Spawn On Player And Optimize Blueprint",
          "Line Trace Distance Based On Weapon Type",
          "Damage Based On Weapon Type",
          "Shot RPG Shell With Fall Of Damage System",
          "Throw Grenade With Music System",
          "Add Punching And Knife Damage System",
          "Add Random Weapon Recoil"
        ],
        "Optimize Character Movement": [
          "Force Player To Run Only Forward Direction",
          "Fix FIrst Person Character Overlap On Other Object",
          "Make Dynamic Footstep Based On Surface",
          "Setup Random Weapon Damage Rate",
          "Player Crouch System"
        ],
        "Inventory System With UI": [
          "Make A Inventory Ui To Show Current Weapon",
          "Subtract Weapon Ammo",
          "Reload Ammo Counter With Ui",
          "Optimize Our Blueprint Nodes",
          "Create Inventory System Using Actor Component",
          "Show Item On Inventory Part 1",
          "Show Item On Inventory Part 2",
          "Change Selected Weapon based On Inventory Item Click",
          "Optimization Gun System And Auto Reload",
          "Fixing Grenade Reloading Issue",
          "Fixing RPG Reloading Issue.mp4",
          "Fixing Some Weapon Mechanics Bugs",
          "Setup Sniper Scoping System With UI",
          "Sniper Scope Wiggle Animation And Change Scope",
          "Remove Sniper Scope While Changing Weapon",
          "Change Weapon Sensitivity Based On Weapon State",
          "Block Aiming State For Some Weapon Types"
        ],
        "Create Weapon Pickup System": [
          "Create Weapon Pickup Actor",
          "Move Inventory System To Game Mode Blueprints",
          "Spawn Weapon Modularly",
          "Save Pickup Weapon And Ammo In Inventory",
          "Alignment Weapon in Inventory Based On Data Table Row",
          "Create Save Game Data Blueprint",
          "Hide Empty Items From Inventory Ui"
        ]
      },
      "requirements": [
        "Example: No programming experience needed. You will learn everything you need to know"
      ],
      "description": "Are you ready to create your very own Tactical FPS game like IGI or Counter-Strike, fully in Blueprints and ready for both PC and Android? In this step-by-step course, we will build a full game using Unreal Engine 5.5.4—from character setup to weapon mechanics, and from UI systems to Play Store publishing!\nWhether you're a beginner or an intermediate Unreal Engine user, this course covers everything you need to know to build a polished tactical shooter experience and publish it to Itch io and the Google Play Store.\n\n\nCourse Content Overview:\nSetup Unreal Engine 5.5.4 For Android Development\nIntro to Blueprint Visual Scripting\nEnhanced Input System\nBasic Animation Blueprints\nFirst Person Character Setup With Animations\nWeapon Mechanics + Recoil + Bullet Hole Decals\nInventory & Pickup System\nTactical Level Design\nMap & Minimap System\nGame Objective & Quest System\nMath Puzzle Mini-Game\nEnemy AI – Army Character\nFootstep System Based on Surface Type\nGame Optimization Techniques\nGraphic Settings UI Menu\nSetup Input UI for Mobile Devices\nPublishing Game on Itch io (PC)\nPublishing Game on Play Console (Android)\nWho This Course is For:\nAspiring game developers using Unreal Engine\nBeginners looking to make their first FPS game\nIndie devs who want to publish games for Android and PC\nStudents or hobbyists learning Blueprint scripting",
      "target_audience": [
        "Anyone interested in mobile game development"
      ]
    },
    {
      "title": "JavaScript Card War Game Project Course",
      "url": "https://www.udemy.com/course/javascript-card-game-course/",
      "bio": "Create a dynamic fully functional card game using JavaScript - source code is included build your own version",
      "objectives": [
        "How to use JavaScript",
        "How to create elements dynamically",
        "Manipulate elements using JavaScript",
        "Explore JavaScript Document Object Model"
      ],
      "course_content": {
        "Introduction to JavaScript project building a card game": [
          "Battle Card Game Introduction"
        ],
        "Card war game using JavaScript": [
          "Game Area Setup page setup HTML and JavaScript",
          "Source Code setup",
          "Start the Game Applying steps to create game structure",
          "Source Code",
          "Create Deck of Cards using JavaScript Arrays",
          "Source Code",
          "Create Game Players Dynamic values JavaScript",
          "Source Code",
          "Deal the cards with JavaScript",
          "Source Code",
          "Make Cards for Players each players hand of cards using JavaScript",
          "Source Code",
          "Make the Card Look Better CSS and HTML structure",
          "Source Code",
          "Game Logic and next steps to developing functional game",
          "Source Code",
          "Handle Winner of Deal and logic to handle win",
          "Source Code",
          "Multiple Rounds Attack more interactive fun within the game",
          "Source Code",
          "Fix Playoff Function using JavaScript shorten and reuse code",
          "Source Code",
          "Game Restart option to replay game for player JavaScript",
          "Source Code",
          "Tweaks and Fixes debugging application and improving the user experience",
          "Source Code",
          "Battle Game Code Review and improvements",
          "Debug of Playoff Issue final bug fixes and game improvements",
          "Source Code"
        ],
        "Bonus Section Next steps": [
          "Bonus Lecture",
          "Supplementary Learning Materials: Downloadable Content, Practical Examples, and"
        ]
      },
      "requirements": [
        "Fundamental JavaScript concepts",
        "Access to computer",
        "Use of editor to write code"
      ],
      "description": "Learn more about JavaScript - DOM manipulation while building a fun interactive game from scratch\nCard war game - highest card wins the pot of cards -\nGame outline\nLet the user select the number of players\nUse JavaScript to create a deck of cards (52)\nDeal the cards to each player evenly\nFlip the top card for each player\nCheck which card it the highest value - if there is a tie run a playoff\nOn tie run the playoff function checking to see the players followup cards and who has the highest.  If the player runs out of cards they lose.\nLet the player determine how many rounds of attack will be run\nKeep running steps 4-7 until one player holds all the cards and is the winner\nOnce a winner is determined allow the player to restart the game build the sequence again\nCourse Covers\nElement selection and manipulation\nCreating arrays in JavaScript - Array methods and array data handling\nAdding event listeners to listen for user interactions\nUpdating element style properties and values on the fly\nAdding and removing element classes\nCreating elements dynamically and adding them to the page\nApplying game play logic and game development logic\nBig fixes and debugging applications\nChecking game logic and applying game logic to create play path\nSource Code is included\nNo libraries, no shortcuts just learning JavaScript making it DYNAMIC and INTERACTIVE web application.\nStep by step learning with all steps included.\nBeginner JavaScript knowledge is required as the course covers only JavaScript relevant to the building of the game.  Also HTML and CSS knowledge is essential as scope of this course is all JavaScript focused.\nAlong with friendly support in the Q&A to help you learn and answer any questions you may have.\nTry it now you have nothing to lose, comes with a 30 day money back guarantee.\nStart building your own version of the game today!!!!",
      "target_audience": [
        "Beginners to JavaScript",
        "Anyone who wants to practice writing JavaScript",
        "Web developers",
        "Anyone who wants to learn to make a JavaScript game without any libraries",
        "Beginners to JavaScript curious about Document Object Model and JavaScript Methods"
      ]
    },
    {
      "title": "Ultimate Guide to Blender & Unity® Game Design & Development",
      "url": "https://www.udemy.com/course/ultimateguideblenderunity/",
      "bio": "*Includes FREE book! Learn 3D modelling and rendering in Blender and Photoshop. Make a Super Marlo Runner game in Unity®",
      "objectives": [
        "Build a 3D platform runner game in Unity®",
        "Code in C#.",
        "Make original game art in Blender.",
        "Texture 3D models in Photoshop.",
        "Create 3D models of 13 different buildings."
      ],
      "course_content": {
        "Introduction to the Course": [
          "Gameplay from the Marlo Game"
        ],
        "Introduction to Blender": [
          "Intro and Setting Changes",
          "Camera Controls",
          "Emulated Numbpad Camera",
          "Basic Object Manipulation",
          "Frequently Used Tools",
          "Mirror Modifier"
        ],
        "Buildings (Blender Projects)": [
          "Low Poly House",
          "Low Poly Large House",
          "Low Poly Castle",
          "Low Poly Church",
          "Low Poly Lighthouse",
          "Low Poly LogHouse",
          "Low Poly Store",
          "Low Poly Office Building",
          "Low Poly Eiffel Tower",
          "Low Poly Greek Temple",
          "Low Poly Japanese Pagoda",
          "Low Poly Chinese Pagoda",
          "Low Poly Taipei",
          "($1000 value!) Source Files"
        ],
        "Let's Make a Super Marlo Runner!": [
          "Introduction to Unity - Part 1",
          "Introduction to Unity - Part 2"
        ],
        "Making the Game (Unity Projects)": [
          "Movement - Part 1",
          "Movement - Part 2",
          "Movement - Part 3",
          "Blocks - Part 1",
          "Blocks - Part 2",
          "Speed Blocks and Enemies - Part 1",
          "Speed Blocks and Enemies - Part 2",
          "Speed Blocks and Enemies - Part 3",
          "More Enemies - Part 1",
          "More Enemies - Part 2",
          "Powerup and Finish Line - Part 1",
          "Powerup and Finish Line - Part 2",
          "Background and Interface - Part 1",
          "Background and Interface - Part 2",
          "Background and Interface - Part 3",
          "Fine Tunings - Part 1",
          "Fine Tunings - Part 2",
          "Fine Tunings - Part 3",
          "Level Design - Part 1",
          "Level Design - Part 2"
        ],
        "Adding Artwork to the Game (Blender and Photoshop Projects)": [
          "Overview of Blender",
          "Artwork in Blender - Part 1",
          "Artwork in Blender - Part 2",
          "Artwork in Blender - Part 3",
          "Artwork in Blender - Part 4",
          "Artwork in Blender - Part 5",
          "Integrating Art - Part 1",
          "Integrating Art - Part 2",
          "Integrating Art - Part 3"
        ],
        "Finishing the Game (Unity Projects)": [
          "Integrating the Character",
          "Adding Model to Player",
          "Jumping and Running",
          "Movement Stutter",
          "Wall Jumping",
          "Power Up",
          "Swapping Background Art",
          "Background Adjustments",
          "Transparency Order",
          "Challenge Time!"
        ],
        "Marlo Game Resources": [
          "($2000 value!) Source Code and Art Assets",
          "($32.79 value) FREE BOOK",
          "Please leave us a rating.",
          "Bonus Lecture: Get 155 courses!"
        ]
      },
      "requirements": [
        "Download and install Unity® 5.4.3f1 and Blender 2.78c or higher.",
        "This course was recorded on a Mac, but you can use a PC."
      ],
      "description": "Let's learn game design and development with practical projects that take you from zero to hero in one ultimate course.\nIn Part 1 digital artist Kevin Liao from Mammoth Interactive will teach you how to use Blender to make low-poly art. You draw 13 3D models of buildings from scratch.\nThis course is perfect for beginners. We begin with a thorough introduction to the Blender interface. Blender is a powerful (and free) program that can be used to make art assets.\nArt you make in Blender is easy to add to games or other projects. Even if you're not an artist, you can make basic art models!\nIn Part 2 Glauco Pires teams up with Kevin to show you how to build a 3D platform runner game in Unity®. You learn how to set up the project, code the game's functionality, make original artwork and integrate the artwork into the game.\nIncluded in this course is material for beginners to get comfortable with the interfaces. Please note that we reuse this content in similar courses because it is introductory material. You can find some material in this course in the following related courses:\nMake a Fully Featured Game: Code in C#, Make Low Poly Models\nMake a Unity Platform Game & Low Poly Characters in Blender\nBuild and model a Super MARLO runner clone in Unity\nBuild 43 Models & a 3D Runner Game in Unity® with C# Code\nMake Games and Web Apps: Unity, React and Redux Masterclass\nMake 3 Games in SpriteKit & 13 Low Poly Buildings in Blender\nA Beginner's Guide to Low Poly Models in Blender\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nThis course is project-based, so you will not learn a bunch of useless coding practices. At the end of this course, you will have real-world apps to use in your portfolio.\nWe feel that project-based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation.\nLearn to make a game today and get a head start for tomorrow. People who can master technology will rule the future.\nSource code and art assets are included in this course. Your purchase includes the free e-book \"Build a Super Marlo Runner Game in Unity®\" by Mammoth Interactive.\nEnroll now to join the Mammoth community",
      "target_audience": [
        "Complete beginners. No prior coding or digital art skills necessary.",
        "People who want to make games.",
        "Beginners who want to make 3D models."
      ]
    },
    {
      "title": "Learn to Make 2.5D Side Scroller in Unity for Beginners",
      "url": "https://www.udemy.com/course/learn-to-make-25d-side-scroller-in-unity-for-beginners/",
      "bio": "Create 2.5D Side Scroller Zombie Shooter in Unity and C# 2024",
      "objectives": [
        "Master Basic Player Controls",
        "Create and Animate Characters",
        "Design Interactive Levels",
        "Implement Enemy AI",
        "Build Game UI"
      ],
      "course_content": {
        "Player": [
          "Adding Player",
          "Player Movement",
          "Jumping",
          "Fix Jumping",
          "Changing directions",
          "Adding animations",
          "Animations",
          "Extra Animations"
        ],
        "Shooting": [
          "Shooting Mechanics",
          "Create Projectile",
          "Bullet",
          "Impact effect",
          "Shooting Delay",
          "Shooting animation"
        ],
        "Health system": [
          "Setting up Health",
          "Health UI",
          "Health system",
          "Immortal Time",
          "Immortality effect"
        ],
        "Enemy": [
          "Adding enemy",
          "Damaging player",
          "Enemy Health",
          "Enemy death",
          "Enemy Healthbar"
        ],
        "Camera": [
          "Camera"
        ],
        "Environment": [
          "Adding Environment",
          "Skybox",
          "Lights"
        ],
        "Menu": [
          "Main menu UI",
          "Buttons",
          "Credits",
          "Pause UI",
          "Pause mechanics"
        ],
        "Game over": [
          "Game over UI",
          "Game over mechanics",
          "Die animation",
          "Die effect"
        ],
        "Pickups": [
          "Adding crystals",
          "Pickup mechanics",
          "Score UI",
          "Extra health"
        ],
        "Obstacles": [
          "Spinning blade",
          "Moving obstacle",
          "Shooting obstacle"
        ]
      },
      "requirements": [
        "Mac or PC capable of running Unity 3D",
        "Unity 2020 or Higher"
      ],
      "description": "Welcome to our comprehensive course on creating a 2.5D Side Scroller Shooter Game in Unity for beginners! This course is designed to take you from a complete novice to a confident game developer, capable of creating your own engaging side scroller shooter games. Throughout this course, you will learn the fundamental skills needed to develop a fully functional 2.5D game using Unity, one of the most popular game development engines.\n\n\nOur course is structured to be accessible and easy to follow, ensuring that even those with no prior experience in game development or programming can succeed. We start with the basics of Unity and gradually build up to more complex concepts and techniques, providing hands-on projects and practical examples at every step.\n\n\nIn this course, you will master basic player controls by implementing and customizing player movement, including jumping, running, and shooting mechanics in a 2.5D environment. You will learn how to create and animate characters, understanding how to design, animate, and integrate 2.5D characters using Unity's animation tools. Additionally, you will develop skills in designing interactive levels, crafting engaging and interactive levels with platforms, obstacles, and enemy placements.\n\n\nWe will also cover how to implement enemy AI, teaching you to create and program basic enemy AI that can patrol, chase, and attack the player. Finally, you will understand the basics of building game UI, including designing and implementing user interfaces such as health bars, score displays, and game menus.\n\n\nThis course is perfect for aspiring game developers, Unity beginners, students and hobbyists, indie game developers, and programming enthusiasts who are eager to apply their skills to game development. By the end of this course, you will have a solid foundation in 2.5D game development and the confidence to continue exploring and creating your own unique games.\n\n\nJoin us on this exciting journey and turn your game development dreams into reality!",
      "target_audience": [
        "Aspiring Game Developers: Individuals looking to start a career in game development and want to learn the basics of creating a 2.5D side scroller shooter in Unity.",
        "Unity Beginners: Those new to Unity who want a hands-on project to learn the essentials of the engine and game development.",
        "Students and Hobbyists: Students studying game design or hobbyists passionate about game creation who want to expand their skills.",
        "Indie Game Developers: Indie developers who want to create their own 2.5D side scroller shooter game and need guidance on where to start.",
        "Programming Enthusiasts: Individuals with a basic understanding of programming who are interested in applying their skills to game development in Unity."
      ]
    },
    {
      "title": "How To Create a Weapon Customization System in UE5",
      "url": "https://www.udemy.com/course/how-to-create-weapon-customization-system-in-ue5/",
      "bio": "Build a Fully Functional Modular Weapon Customization System in Unreal Engine 5 Using Blueprints and UMG – No C++.",
      "objectives": [
        "Build a modular weapon customization system from scratch",
        "How to create a modular weapon system with multiple attachable components (e.g., scopes, barrels, grips",
        "How to use Structs, Enums, and DataTables to manage your data",
        "UMG techniques:"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course",
          "Project Starter Files"
        ],
        "Creating the Base Weapon System Class": [
          "Creating the Base Weapon Blueprint",
          "Add weapon to data table",
          "create the widget component class",
          "Show the interaction widget",
          "Spawning and Attaching the weapon to the cahracter",
          "weapon drop part 1",
          "Droping weapon part 2 & Swapping weapon",
          "Current and max ammo Widget",
          "Swap weapon animation",
          "Weapon Comparision widget info part1",
          "Weapon Comparision widget info part2"
        ],
        "Weapon Station": [
          "Create the station base class",
          "Create the station mesh and add interaction",
          "Add preview weapon and camera transition",
          "Create dynamic button for the station UI",
          "Station weapon details"
        ],
        "Weapon Accessories": [
          "Create the weapon accessory Class Master",
          "Create the accessories widget",
          "Spawn Station Accessories",
          "Spawn Accssorie on weapon",
          "Remove Accessory from weapon",
          "Set Accessories info",
          "Update weapon when accessories are Equipped or Unequipped",
          "Fire Weapon Part One",
          "Fire Weapon Part Two",
          "Weapon Reload",
          "Switch weapon in station & close station widget",
          "Drop weapon update",
          "Spawn accessories on drop weapon"
        ]
      },
      "requirements": [
        "Basic understanding of Unreal Engine 5 interface and navigation",
        "Comfortable with Blueprints, including: Variables and data types (e.g., bools, floats, structs)",
        "Basic logic flow (branches, functions, events)"
      ],
      "description": "Want to learn how to build a complete weapon customization system in Unreal Engine 5? In this course, I’ll guide you step-by-step through creating a modular system where players can swap scopes, barrels, grips, and more—just like you see in many modern games.\nPlease note:\nThis course is not for total beginners. If it’s your very first time using Unreal Engine, or you’re not yet familiar with variables or the basic interface, I recommend starting with an intro course first. But if you’ve spent some time with UE4 or UE5 and understand the basics, you’ll be able to follow along and learn a ton in the process.\nYou’ll learn how to work with Blueprints, UMG, DataTables, structs, enums, sockets, and more. And while we’re building a weapon system, the techniques you’ll learn can easily be used for character customization, car upgrades, equipment loadouts, or any other modular system you can imagine.\nThis course is all about hands-on, practical learning, and I’m here to help every step of the way. If you get stuck or have questions, feel free to reach out—I want to make sure you get the most out of this course and walk away with skills you can apply to all your future game projects.\n\n\nYou’re welcome to join our community on Discord! It’s a great place to ask questions, get feedback, and connect with other students. I’m active there and happy to help if you ever get stuck. You’ll also get access to free assets, project files, and other helpful resources to support your learning. The invite link is available inside the course—hope to see you there!",
      "target_audience": [
        "Indie developers, students, and hobbyists looking to implement a professional weapon customization system in their game",
        "Unreal Engine users with at least 6 months of experience in UE4 or UE5"
      ]
    },
    {
      "title": "Niagara for Beginners in Unreal Engine 4",
      "url": "https://www.udemy.com/course/niagara-for-beginners-in-unreal-engine-4/",
      "bio": "Learn everything you need to know in order to make your own VFX inside Unreal Engine 4 with Niagara!",
      "objectives": [],
      "course_content": {
        "Creating a magical effect with Niagara in UE4": [
          "1. Intro & Setup",
          "2. Creating a Niagara Emitter",
          "3. Creating the Spark Material",
          "4. Creating our Niagara System",
          "5. Flare Material",
          "6. Final Touches"
        ]
      },
      "requirements": [
        "You need Unreal Engine 4 or more to take this course. No experience is needed but is nice to have some basic understanding of the Editor's UI."
      ],
      "description": "Ever wanted to create your own VFX for your games?\nCreating Visual Effects can be a very complex task, but after finishing this course you will be able to become more confident about how to use Niagara, the Visual Effects system inside Unreal Engine.\nYou will end up with a beautiful magical effect that would fit perfect into games with fantasy style.\nYou will learn how to navigate your way into Niagara's interface.\nThen you will understand how Niagara works and how you can use it with different Emitters and Systems.\nYou will also learn materials, but this time we will focus on teaching you how you can use the most common Material Properties and nodes to create VFXs.\nLastly, we will take a look at little details inside Niagara, so we can create a mesmerizing effect that has AAA quality.\nBy the end of watching this course, you will understand Niagara, Materials for VFX and be able to create your own effects using your imagination. Niagara is used in a wide range of features in game development, so this will be the first step you take towards your VFX career as a VFX artist in the video game industry!",
      "target_audience": [
        "Beginner game developers who want to learn Niagara in Unreal Engine to do Visual Effects"
      ]
    },
    {
      "title": "Unreal Engine 5: Learn Blueprints Through Multiple Projects",
      "url": "https://www.udemy.com/course/unreal-engine-5-learn-blueprints-through-multiple-projects/",
      "bio": "Enhance your Unreal skills and learn about Character Animations, Blueprints, Portals, Niagara Effects and more!",
      "objectives": [
        "A lot of Blueprints as the entire course is using Blueprints Only",
        "Downloading and migrating assets for your projects",
        "Create character animation blueprints, setup animation states as well as animation logic. We'll also cover how animation montages and aim offsets work.",
        "Create a fun rolling-ball game, in this project you will learn about actors and how to create them. We'll also build our level including a points system.",
        "Create a portal system that can be spawned and used to Teleport. You will also learn how to create portal effects using the Niagara System.",
        "Camera & Input controls"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Rolling Ball - Beginner level": [
          "Project Creation",
          "Assets",
          "Import Project Assets",
          "Input Actions",
          "Camera Controls",
          "Reset Camera View",
          "The Portal Actor",
          "Fnishing The Portal",
          "Jump Portal - Part 1",
          "Jump Portal - Part 2",
          "Player HUD",
          "Updating the HUD: Score & Retries",
          "Star & Bomb Pickups",
          "Finishing the Bomb",
          "Bomb Spark Effect",
          "The Game Instance",
          "Respawning",
          "Virtual Camera",
          "Main Menu",
          "Build Level 1",
          "Improving The Ball Respawn",
          "Test your knowledege"
        ],
        "Revenant Character - Beginner Level": [
          "Assets & Project Creation",
          "Animation Blueprint",
          "Character Input",
          "Character Mouse Input",
          "Blend Spaces",
          "Aim Offsets",
          "Montages",
          "Creating Additive Aniamtions(Aim Offsets)",
          "Test your knowledege"
        ],
        "Portals - Intermediate": [
          "Project Setup",
          "Relative Location Vs World",
          "Portal Actor - Part 1 - Getting Started",
          "Portal Actor - Part 2 - Material & RTT Creation",
          "Portal Actor - Part 3 - Material Implementation",
          "Portal Actor - Part 4 - A Second Portal Material",
          "Portal Actor - Part 5 - Seeing through portal clearly",
          "Portal Logic - Part 1 - Looking At Player",
          "Portal Logic - Part 2 - Field of View Mapping to Distance",
          "Portal Logic - Part 3 - Overlap Events",
          "Portal Logic - Part 4 - Testing to jump & Code improvements",
          "Spawning Portal",
          "Niagara Portal",
          "Final Fixes",
          "Test your knowledege"
        ],
        "What is next?": [
          "Summary"
        ]
      },
      "requirements": [
        "Basic understanding of Unreal Engine is required and some experience with Blueprints"
      ],
      "description": "In this Unreal Engine 5 course, you'll learn Blueprints by making three different projects.\nTwo of the projects are at a beginner level while the third one is a bit more intermediate level.\n\nIn the first project, called Ball Roll, we'll create a fun ball-rolling game. You gain points by pickups and must make sure to reach the goal to complete the level.\n\nIn the second project, Revenant Character, we will download a character from the market place, animate him and test the character in our project. You will learn how to setup a basic Animation Blueprint and configure the different animations for your character.\nFor the third project, Portals, we'll create a portal system, allowing the player to spawn portals and teleport through them, similar to the game portals.\n\n\nBall Roll: Beginner Level\nIn this project, we'll create a fun \"ball-rolling\" game. You will learn about actors, asset migration, blueprints, game modes and much more. We'll finally also build a fun testing level.\n\n- Learn about Game Modes\n- Create a simple points system\n- Learn about how to use the HUD & Widgets\n- Learn to migrate assets from one project to another\n- Learn about the Camera & Controls\n- Create fun levels using actors we'll create, such as \"Jump Pad\" and \"Portal\".\n- Learn to use assets we will import from the market place for building up our levels.\n- Build fun level, and use this as a basic project to build the rest for yourself if needed.\n\nRevenant Character: Beginner Level\nIn this project, we'll download the Revenant character from the market place.\nWe will then create animations for him and test it in our level.\n\nYou will learn about:\n- Montages\n- Blend Spaces\n- Animation Blueprints\n- Aim Offsets\n- Event Graph vs Animation Blueprint\n\n\nPortals: Intermediate Level\nIn this project, we will create a Portal system to spawn portals which you can go through and pop out from the other side.\n\n- Learn about how to create a portal system\n- Learn about materials and material instances\n- Create a portal actor which will be spawned in the level\n- Learn to use an existing template (FPS) and change it to help us quickly prototype our game.\n- Learn to create portal effects using Niagara.",
      "target_audience": [
        "All levels welcome, but mainly intended for beginner developers already having some expereince with Unreal Engine and Blueprints."
      ]
    },
    {
      "title": "Quick Tips for Unity Chapter One",
      "url": "https://www.udemy.com/course/ultimate-guide-increase-productivity-with-unity/",
      "bio": "This guide helps Unity creators save time and boost productivity with latest techniques on how to work faster & smart.",
      "objectives": [
        "Unity creators save time and boost productivity.",
        "Techniques on how to work faster with programmer and artist toolsets, individually or on a team.",
        "Unity should be a joy to use . When millions of users repeat a task multiple times per day, every second or mouse click adds up.",
        "We want creators to waste less time and be more productive."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Editor Workflow Introduction",
          "The Package Manager",
          "Shortcuts Manager",
          "Focused Inspectors",
          "Presets",
          "Scene Visibility",
          "Scene Picking",
          "Searching",
          "Inspector Debug Mode",
          "Quick Search",
          "13 Small Editor Workflow Tips",
          "Sprite Atlas",
          "10 2D Workflow Tips",
          "Prefab Workflow",
          "Textmesh Pro",
          "Snapping",
          "Animation Workflow",
          "Custom Gizmos and Icons",
          "Progressive Lightmapper",
          "Light Probes"
        ]
      },
      "requirements": [
        "Basic use of unity with C#"
      ],
      "description": "This guide helps Unity creators save time and boost productivity with latest techniques on how to work faster and smarter with programmer and artist toolsets, individually or on a team.\nThis first version of unity was launched in 2005 with only MacOS support and until now unity is updating rapidly with tons of new functionalities and it's really hard to get extra time and learn new techniques to match with unity pace and that's where this course comes and help you and saved your a ton of time.\nThe techniques/tips/tricks here work with new and existing features in Unity 2020 LTS and above. Whether you are a new or experienced Unity developer, reference this guide to speed up workflows in every stage of your game development .\nPrimarily this course covers 4 major Parts:\nEditor workflows\nThe Package Manager\nShortcuts Manager\nFocused Inspectors\nPresets\nScene Visibility\nScene Picking\nSearching\nInspector Debug Mode\nQuickSearch\n13 small Editor Workflow Tips\nArtist workflows\n2D Art and Workflow Tips\nSprite Atlas\n10 2D Workflow Tips\nPrefab Workflows\nText Mesh Pro\nSnapping\nAnimation Workflow\nCustom Gizmos and Icons\nProgressive Lightmapper\nLight Probes\nDeveloper workflows\nAttributes\nCustom windows and Inspectors\nCustom menus\nEnter Play Mode settings\nScript templates\nAddressables\nPreprocessor directives\nScriptableObjects\nManaging assemblies\nIDE support\nDebugging\nVisual Studio shortcuts\nDevice Simulator\nConsole Log Entry\nCustom Compiler status\nTeam workflows\nSource Control\nUnity Accelerator\nUnity Build Server\n\nAfter the enrollment you will have this course for full lifetime access and you can find additional productivity tips, techniques and best practices in the Additional Content Section. I will be keep updating and extending this course with latest topics in the Additional Content Section.",
      "target_audience": [
        "Developers who are already working with unity and also will be beneficial for beginners."
      ]
    },
    {
      "title": "Develop a working AI for your Games in Unity ® & Blender!",
      "url": "https://www.udemy.com/course/develop-a-working-ai-for-your-games-in-unity-blender/",
      "bio": "Create awesome assets for your Games and Develop a working AI for said Games using Unity!",
      "objectives": [
        "Learn to code for game development in Unity ® C#",
        "Build professional 3D models for video games and more",
        "Make a path-finding algorithm",
        "Develop a creative and technical eye",
        "Use the A* algorithm to make a 2D game in Unity ®",
        "Find art references and make blueprints in Adobe Photoshop",
        "Learn cutting-edge tools to stand out in the field",
        "And More!"
      ],
      "course_content": {
        "Intro to Unity": [
          "Introduction",
          "Unity Editor",
          "Moving a Cube",
          "Materials",
          "Lights",
          "Particle System",
          "Applying Physics",
          "Asset Store"
        ],
        "Intro to Coding": [
          "Introduction",
          "Variables",
          "Methods",
          "If Blocks",
          "Loops"
        ],
        "Intro to Inputs": [
          "Introduction",
          "Key Presses",
          "Moving a Player",
          "Jumping",
          "Moving Forward",
          "Cycling Cameras"
        ],
        "Intro to Prefabs": [
          "Introduction",
          "Introduction to Prefabs",
          "Random Angles",
          "Explosion Effects",
          "Adding Explosion Effects"
        ],
        "Intro to VR": [
          "Introduction",
          "Activating VR",
          "Building a Castle",
          "Lowering the Door",
          "Triggering",
          "Interface",
          "UPDATE - Using the Unity Package with Unity 5.6"
        ],
        "(Project) Pathfinding Algorithm Game": [
          "Gameplay",
          "Introduction",
          "Motivation",
          "Project Setup",
          "Node",
          "String Map",
          "A-Star Setup",
          "A-Star Loop",
          "Auxiliary Methods",
          "Finishing the Algorithm",
          "Importing 2D Assets"
        ],
        "Building a Level": [
          "Building a Level",
          "From console to Visual",
          "Adding Tanks",
          "Identifying Nodes"
        ],
        "Creating Movement": [
          "Moving the Tank",
          "Visually Moving the tank",
          "Smooth Movement",
          "Smooth Rotation",
          "Ordering the Tank to move",
          "Speeding the Player up",
          "Spawning Logic",
          "Crate Visuals",
          "Adding Crates to Valid Positions",
          "Collecting Crates"
        ],
        "Game Interface": [
          "Score Counting",
          "User Interface",
          "Starting the Game",
          "Game Over Screen",
          "Highscore"
        ],
        "Finale and Resources": [
          "Sounds",
          "Challenge",
          "Source and Assets - Mammoth Interactive"
        ]
      },
      "requirements": [
        "To follow along with the course, you will need the latest version of Unity ®",
        "Unity® is free to download. Please download and install Unity® before purchasing this course.",
        "A computer capable of running Blender",
        "Blender is free to download. Please download and install Blender before purchasing this course.",
        "Photoshop (free trial available), or a free alternative like Gimp",
        "This course was recorded on a Mac, but you can use a PC"
      ],
      "description": "We at Mammoth Interactive value input from students like you. Feel free to leave us your feedback.\nThe best coding program online. Beginner's guide for aspiring game developers. Learn C# and programming fundamentals.\nThis course is the result of a very successful KickStarter!\nLearning Unity AI you will created some great Games such as:\nA Super Tank on a maze that will find the best way to go to a point you click. The tank will collect objects along its path.\nA colorful 2D space dodger game where you play as a simple spaceship gliding around a level.\nA good pathfinding system to find the best path for the player to navigate to wherever you click\nAnd many others!\nThe possibilities are endless.\nYour instructor Glauco Pires has a decade's experience in game development. He makes games in Unity, Unreal, and HTML languages. He works with languages like C#, C++, and JavaScript.\nstraightforward coding skills\nclean development techniques\nthoughtful developer advice\nWith Glauco you will learn to make games in the most efficient and cleanest way possible.\nWith artificial intelligence, you can make your games more…\ncomplex\nrandom\ninteresting\nvaluable\n…without putting in more effort thanks to algorithms.\nThese days, you must make more complex games. Players want to believe they are playing against something complex, something lifelike.\nWhy Unity®?\nUnity® is one of the most popular platforms in game development. You can use Unity® to build 2D and 3D games. Unity® is cross-platform, which means it is easy to use with other platforms.\nCreate a professional 3D model for video games and more! No prior knowledge required. Learn to use Blender and Photoshop\nDesign low-poly models for games. Developed for highly efficient learning.\nLearn with digital artist Kevin Liao from Mammoth Interactive how to use Blender to make low-poly art . You draw 5 3D models of characters for use in game development or other creations of your choice.\nThis course is perfect for beginners. We begin with a thorough introduction to the Blender interface. Blender is a powerful (and free) program that can be used to make art assets. The art you make in Blender is easy to add to games or other projects. Even if you're not an artist, you can make basic art models.\nWith Blender you can make for FREE high quality art to export anywhere you could want: a game engine like Unity, animations in short films, ads, TV series, feature films, and your 3D printer. You name it.\nBy the end of the course You'll have a fully formed model of a sleek jet. You'll be hungry to learn more and astonished at the power at your fingertips.\nYou'll learn how to produce as efficiently as I do. Learn how to develop a creative and technical eye.\nWhy choose Mammoth Interactive?\nWe prioritize learning by doing. We blend theory with practical projects to ensure you get a hands-on experience by building projects alongside your instructor. Our experienced instructors know how to explain topics clearly at a logical pace. Check out our huge catalog of courses for more content.\nAlso now included in these bundles are our extra courses. If you want to learn to use other programs such as Camtasia or Sketch, you get more content than what you paid for this way!\nWe really hope you decide to purchase this course and take your knowledge to the next level. Let's get started.\nEnroll now to join the Mammoth community!",
      "target_audience": [
        "Anyone who wants to be a game developer with unique skills.",
        "Game developers who want to build game art.",
        "Anyone who wants to make games with smart automated features.",
        "Anyone who wants to make 3D models.",
        "Anyone who wants to learn the technology that is shaping how we interact with the world around us",
        "Beginners who want to learn how to use Blender.",
        "Anyone who wants to learn Programming and Game Development in Unity®"
      ]
    },
    {
      "title": "Unreal Engine 5 - Core Item System and Inventory System",
      "url": "https://www.udemy.com/course/unreal-engine-5-core-item-system-and-inventory-system/",
      "bio": "Master Unreal Engine 5 by creating a core item system (including equippable, and consumable items) in C++ and Blueprints",
      "objectives": [
        "Core Unreal Engine 5 C++ workflows for data-driven systems",
        "How to bridge C++ systems with Blueprint-driven UI",
        "Best practices for separating item definitions (static data) from instances (runtime data)",
        "How to handle equippable items, including stats and durability",
        "How to handle consumable items, including custom on-use effects",
        "Save and Load item instances in both C++ and in Blueprints",
        "Spawn items into the game world and add particle effects",
        "Building expandable gameplay systems that can evolve with your project"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course",
          "What You’ll Learn & How We’ll Work",
          "Course Book"
        ],
        "Item System and Inventory Design Overview": [
          "What is an Item System?",
          "Item Definition Assets",
          "Item Factory",
          "Item Instances",
          "Basic Inventory Design"
        ],
        "Project Setup": [
          "Install Unreal Engine",
          "Jet Brains Rider",
          "Creating a Project with C++ and Blueprints",
          "UPDATE: A quick note on Unreal 5.6+",
          "C++ and Blueprints Programming Fundamentals",
          "Section Quiz - Programming Fundamentals"
        ],
        "Item Data Definition": [
          "Creating the Item Definition Class",
          "Display Item Structure",
          "Adding Item System Debugging",
          "Item Gameplay Information Structure",
          "Gameplay Tags",
          "Item Type Tags",
          "Item Rarity Tags",
          "Get Primary Asset IDs",
          "Item Instances",
          "Custom Item Loging",
          "Item Helper Functions",
          "Add and Remove to Item Stack Count",
          "Item Instance Events",
          "Item Factory",
          "Play Test - Creating Items in Unreal Engine",
          "Section Quiz - Base Items and Foundation for our Item System"
        ],
        "Creating Equippable Items": [
          "Equippable Item Definition - Slot Tags",
          "Equippable Item Definition - Attributes",
          "Play Test - Equippable Item Data Assets",
          "Equippable Item Definition - Final Touches",
          "Equippable Item Instance - Expanding the Item Instance Class",
          "Item Factory - Building Equippable Items",
          "Item Factory - Customizing an Equippable Item Factory Method Part 1",
          "Item Factory - Customizing an Equippable Item Factory Method Part 2",
          "Play Test - Creating Equippable Items",
          "Section Quiz - Equippable Items"
        ],
        "Creating Consumable Items": [
          "Consumable Item Definition - Item Type",
          "Consumable Item Definition - Consume Effects",
          "Consumable Item Definition - Consumable Item Interface",
          "Consumable Item Instance - Consume Item Implementation",
          "Play Test - Consuming an Item",
          "Item Factory - Creating Consumable Items",
          "Section Quiz - Consumable Items"
        ],
        "In Game Item Spawning": [
          "Base Spawnable Item",
          "Creating the Spawnable Blueprint",
          "Item Particle Effects",
          "Updating the Item Factory",
          "Play Test - Spawning Items in Game",
          "Adding Customer Developer Settings",
          "Play Test - Testing Default Settings",
          "Section Quiz - Spawnable Items"
        ],
        "Item Saving and Loading": [
          "The Basics of Saving and Loading in Unreal Engine",
          "Creating an Item Save Structure",
          "Adding a Get Save Data Method",
          "Setting up Unreal Engine's Asset Manager",
          "Play Test - Using the Get Save Data Function",
          "Get Equipment Save Data",
          "Creating a Custom Async Function to Load Items Part 1",
          "Creating a Custom Async Function to Load Items Part 2",
          "Play Test - Test the Async Load Function",
          "Initialize Items from Save Data",
          "Section Quiz - Item Saving and Loading"
        ],
        "Basic Inventory": [
          "Inventory Component",
          "Inventory Item Button Widget Part 1",
          "Inventory Item Button Widget Part 2",
          "Adding Item Information to the Inventory",
          "Adding Item Details Panel Widget",
          "Refining the Item Details Panel for Different Item Types",
          "Removing Items from Inventory",
          "Adding a Consume Button",
          "Play Test - Finishing the Inventory",
          "Section Quiz - Basic Inventory"
        ],
        "Course Complete!": [
          "Thanks for taking the course!",
          "Final Test"
        ]
      },
      "requirements": [
        "An eagerness to learn and build a game",
        "Basic understanding of Unreal Engine 5 (Blueprints or C++)",
        "Unreal Engine 5 installed (latest stable version recommended)",
        "A willingness to dive into C++ — we’ll walk through everything step-by-step"
      ],
      "description": "Build a Core Item System in Unreal Engine 5 — Step by Step\nIf you’ve ever wanted to create an item and inventory system in Unreal Engine that feels flexible, expandable, and game-ready, this course is for you!\n\nOver the course, you’ll build a data-driven item system from the ground up — complete with basic items, equippable items, consumable items, saving and loading, spawning items, and a fully functional inventory UI built in Blueprints.\nBy the end, you’ll know how to:\nCreate Item Definitions (data assets) for basic items, equippable gear, and consumable items with custom effects.\nUse a custom Item Factory to generate items from data assets and from save files\nExpand a custom item instance classes to support items-specific data.\nImplement Saving and Loading systems to maintain state of your items\nCreate a Spawnable Items with particle effects and use Developer Settings to create Item System defaults\nBuild a Blueprint Inventory Component to store, manage, and interact with items.\nCreate an Inventory widget that shows item details, stats, and allows consuming or deleting items.\nWhat You’ll Learn\nCore Unreal Engine 5 C++ workflows for data-driven systems\nHow to bridge C++ systems with Blueprint-driven UI\nBest practices for separating item definitions (static data) from instances (runtime data)\nHow to handle equippable items, including stats and durability\nHow to handle consumable items, including custom on-use effects\nSave and Load item instances in both C++ and in Blueprints\nSpawn items into the game world and add particle effects\nBuilding expandable gameplay systems that can evolve with your project\nWho This Course is For\nUnreal Engine developers who want to level up their C++ and systems design skills\nIndie developers building RPGs, survival games, or any project that needs an item/inventory system\nBlueprint users who want to start incorporating C++ into their projects\nDevelopers looking for clean, reusable game architecture\nAnyone looking to build a game and needs a core item system\nRequirements\nAn eagerness to learn and build a game\nBasic understanding of Unreal Engine 5 (Blueprints or C++)\nUnreal Engine 5 installed (latest stable version recommended)\nA willingness to dive into C++ — we’ll walk through everything step-by-step\nBy the end of this course, you’ll have a complete, working item and inventory system that you can use, customize, and expand for your own Unreal Engine projects.",
      "target_audience": [
        "Unreal Engine developers who want to level up their C++ and systems design skills",
        "Indie developers building RPGs, survival games, or any project that needs an item/inventory system",
        "Blueprint users who want to start incorporating C++ into their projects",
        "Anyone looking to build a game and needs a core item system"
      ]
    },
    {
      "title": "Desarrollo de Videojuegos en Unity 3d 4.3",
      "url": "https://www.udemy.com/course/desarrollo-de-videojuegos-en-unity-3d/",
      "bio": "Aprenda a desarrollar videojuegos en Unity 3d",
      "objectives": [
        "Aprenda a utilizar las herramientas proporcionadas por unity 3d.",
        "Aprenderá a crear script para dotar de vida a los diferentes objetos del juego",
        "Aprenderá a crear Niveles utilizando la herramienta terrain de unity3d",
        "Desarrollará un videojuego de aventura en primera persona el cual consistirá de dos niveles donde se aplicarán todos los conocimientos adquiridos durante la realización del curso."
      ],
      "course_content": {
        "Introducción a Unity 3d": [
          "Descargar e Instalar Unity 3d",
          "Componentes de la Pantalla Principal",
          "Creación de nuevos proyectos, adicionar materiales a los objetos"
        ],
        "Scripts": [
          "Modificar posición de Objeto en unity3d - Declaración de Variables",
          "Declaración de Variables privadas - propiedades en objetos",
          "Movimiento de Objetos por cuadro y por tiempo",
          "Escalar Objetos",
          "Rotación de Objetos"
        ],
        "Asset Store": [
          "Como utilizar Asset Store para conseguir modelos 3d para nuestros juegos."
        ],
        "Control de Entradas por el usuario": [
          "Configuración de la Clase Input - Uso de GetKeyDown()",
          "Uso de GetKey()",
          "Uso de GetKeyUp()",
          "Uso del Mouse",
          "Uso del Mouse II"
        ],
        "Camaras": [
          "Modificar Color de Fondo",
          "Modos de Camara",
          "Campo de Visión de la Camara",
          "Configuración de planos de la Cámara para Optimizar el juego",
          "Seguir un Objetivo",
          "Creación de una cámara en primera persona",
          "Character Controler - Fps Controler",
          "Character Controler 3rd Person Controler"
        ],
        "Terrenos": [
          "Herramientas para la creación de Terrenos",
          "Texturizado de Terreno",
          "Colocar Cielo y Agua en el escenario",
          "Agregar Arboles, Arbustos y Rocas a nuestro escenario"
        ],
        "Iluminación": [
          "Luces del tipo Point Light",
          "Luces del Tipo Directional Light",
          "Luces del tipo Spot Light",
          "Luz Ambient Light"
        ],
        "Fisicas": [
          "Preparando un objeto para detectar colisiones(Colliders)",
          "Trabajo con Cuerpos Rigidos (RigidBody)",
          "Triggers",
          "Detectar Colisiones con OnCollisionEnter() - uso del Debug.log()",
          "Uso de Etiquetas",
          "Controladores de Colisiones y Destroy()",
          "Uso de Raycast para Detectar Colisiones"
        ],
        "Particulas": [
          "Sistema de Particulas",
          "Subsistema de Particulas",
          "Editor de Particulas y Efectos precontruidos"
        ],
        "Audio": [
          "Audio Source y Audio Listener",
          "usar sonidos y musicas desde código"
        ]
      },
      "requirements": [
        "El curso es de nivel básico intermedio por lo cual no es necesario ningún tipo de conocimiento previo, aunque es recomendable conocimiento de programación."
      ],
      "description": "El curso de desarrollo de videojuegos en unity 3d le enseñará a utilizar las diferentes herramientas proporcionadas por el engine para desarrollar de forma profesional videojuegos.\nEl curso incluye el software necesario en su versión Free así como los modelos 3d, sonidos, música etc que necesitará para realizar los proyectos del curso. También incluimos un manual de javascript para conocer los fundamentos del lenguaje que utilizaremos a lo largo del curso.\nAl finalizar el curso habrá desarrollado un demo de videojuego el cual le ayudará a comprender las diferentes etapas en el desarrollo de juegos.",
      "target_audience": [
        "Aquellas personas que quieran comenzar el apasionante mundo de la creación de juegos para PC y moviles."
      ]
    },
    {
      "title": "Unreal Engine Open Sci-Fi Box With Animation",
      "url": "https://www.udemy.com/course/unreal-engine-open-sci-fi-box-with-animation/",
      "bio": "Are you ready to take your game development skills to new heights? Join our FREE course and learn how to use Unrea",
      "objectives": [],
      "course_content": {
        "Using Blender To Make Box Open Animation ( You Can Skip This Part )": [
          "Unreal Engine Box Open Animation Using Blender"
        ],
        "Unreal Engine Open Sci-Fi Box With Animation": [
          "Setup Box Actor With Animation",
          "Create Widget For Interaction",
          "Ai Move To Box Open Location",
          "Setup Component Move To Location",
          "Setup Animation BP",
          "Setup Anim Notify State"
        ]
      },
      "requirements": [
        "Open A Sci-Fi Box With Animation"
      ],
      "description": "Certainly! Here’s an engaging Udemy course description for your “Unreal Engine Open Sci-Fi Box With Animation”:\nOpen Sci-Fi Box With Animation\nAre you ready to take your game development skills to new heights? Join our FREE Udemy course and learn how to use Unreal Engine To Open a Sci-Fi Box With Animation mechanics using Unreal Engine 5. Learn how to create an Interaction system from scratch using Unreal Engine. Whether you’re a beginner or an experienced developer, this course covers it all\n1. Introduction to Unreal Engine 5:\n- Understanding the basics of Unreal Engine 5.\n- Navigating the UE5 interface and toolset.\n\n\n2. Blueprints Visual Scripting:\n- Creating and managing Blueprints for game logic.\n- Implementing gameplay mechanics without extensive coding.\n\n\n3. Testing and Debugging:\n- Testing your game on various mobile devices.\n- Identifying and fixing common issues and bugs.\n\n\nCourse Highlights:\nSet up character movement blueprints.\nMaster character animation\nIntegrate rope physics seamlessly.\nCreate dynamic swing animations.\nOptimize for lifelike movement.\nBuild epic gameplay mechanics\nEnroll Now: Unreal Engine 5 Parkour Swing Course\nUnlock your creativity and swing into action!\nThis course ensures that all learning objectives are realistic and achievable, providing step-by-step guidance and hands-on projects to cement your understanding.\nFeel free to customize this description further to match your style. Happy swinging and teaching!",
      "target_audience": [
        "Anyone interested in game development In Unreal Engine"
      ]
    },
    {
      "title": "How to Create a 2D Game in Your Phone with Godot (No PC)",
      "url": "https://www.udemy.com/course/how-to-create-a-2d-game-in-your-phone-with-godot-no-pc/",
      "bio": "Create games from start to finish without a PC!",
      "objectives": [],
      "course_content": {
        "Creating The Game": [
          "Setting Up The Project",
          "Creating The Player Scene",
          "Player UI",
          "Coding The Player Movement",
          "Animating And Rotating The Player",
          "Preparing For Collisions",
          "Creating The Enemy",
          "The Main Game Scene",
          "Heads Up Display",
          "Finishing Up"
        ]
      },
      "requirements": [
        "None, just a mobile phone able to run Godot"
      ],
      "description": "It's a comprehensive tutorial designed to guide aspiring game developers through the process of creating a 2D mobile game using the Godot Engine. This course is tailored for beginners who are eager to delve into mobile game development without prior extensive experience.\nThroughout the course, participants will gain hands-on experience in building a complete 2D game from the ground up. The curriculum covers essential aspects of game development, including:\nUnderstanding the Godot Interface: Familiarizing oneself with the Godot editor and its powerful tools, laying a solid foundation for efficient game development.\nProject Structuring: Learning how to organize and manage game projects effectively, ensuring scalability and ease of maintenance.\nPlayer Character Development: Implementing player movement, sprite animations, and controls tailored for mobile devices.\nEnemy Design and Behavior: Creating enemy characters with defined behaviors, including random spawning and movement patterns.\nGame Mechanics Implementation: Developing core gameplay elements such as scoring systems, collision detection, and game-over conditions.\nUser Interface (UI) Design: Constructing intuitive and responsive interfaces suitable for mobile gaming, enhancing user experience.\nBy the end of the course, students will have developed a fully functional 2D mobile game, equipped with the knowledge to tackle more complex projects in the future. The course emphasizes practical application, encouraging learners to apply the concepts taught to create unique and engaging games.",
      "target_audience": [
        "People wanting to create games without a PC"
      ]
    },
    {
      "title": "How to Build a Racing Game in Unity | Anything World",
      "url": "https://www.udemy.com/course/how-to-build-a-racing-game-in-unity-anything-world/",
      "bio": "Unity Game Development, Building a Game from Scratch, Implementing Racing Mechanics",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to set up the car in your game",
          "How to set up your wheel colliders and position the wheel mesh",
          "How to set up the driving mechanics in your game",
          "How to implement the drifting logic into your game.",
          "How to set up the UI and camera placement in your racing game.",
          "How to set up the timer logic for your game.",
          "Create logic for your gauges and the text for your gears, speed and rotation",
          "How to set up your tyre's screech effect"
        ]
      },
      "requirements": [
        "This course requires basic Unity knowledge. It assumes you are familiar with Unity's basic concepts like Scenes, GameObjects, Components, and Prefabs"
      ],
      "description": "Ready to turn your gaming dreams into reality? Buckle up, because, in this course, we're revving up the fun! You'll learn how to build an arcade racing game from scratch using Unity. We'll take you through all the steps from getting set up with your scene and importing your 3D models to implementing the car mechanics including drifting and gear shifting.\nPlus, we’ll teach you how to create logic for your gauges and the game's User Interface (UI), including gears, speed and the engine's rotation per minute. On top of that, you will also learn how to store the fastest lap, and since we're storing the fastest lap we will also teach you how to prevent cheating.\nAll the code you need is included and the course is taught by a pro developer with 10+ years of experience in the gaming industry, including six years as a Unity Evangelist teaching people of all levels how to build games in Unity. We promise you're in good hands! And what's even better? It's FREE!\nThis course is published by Anything World - an AI-powered platform bringing 3D models to life at scale. Anything World is a Verified Solution Provider on the Unity Asset Store and provides access to thousands of game-ready 3D models with their SDK. Animate your 3D models with the Animate Anything tool – simply upload your 3D model and let AI do the heavy lifting.",
      "target_audience": [
        "Intermediate Unity Developer"
      ]
    },
    {
      "title": "ブロック崩しを作って学ぶ！Unityゲーム開発入門",
      "url": "https://www.udemy.com/course/unity-block-breaking/",
      "bio": "プログラミング未経験でも大丈夫！作ったゲームをAndroidにインストールしたりWebで公開して友達に遊んでもらおう！",
      "objectives": [
        "Unityの基本的な使い方",
        "ブロック崩しの開発手順",
        "ゲーム開発に必須な要素",
        "ゲームデータの出力方法"
      ],
      "course_content": {
        "はじめに": [
          "コースの説明",
          "Unityとは",
          "Unityのインストール"
        ],
        "ブロック崩し開発": [
          "プロジェクトの作成",
          "エディターの画面説明",
          "レイアウト変更",
          "エディターの基本操作",
          "壁を作ってみよう",
          "ブロックを作ってみよう",
          "Hierarchyの整理",
          "ボールを作って落下させてみよう",
          "ボールを跳ね返らせよう",
          "プログラムでボールに力を加えよう",
          "プログラムの予測変換が出ない場合の解決方法",
          "バーを作ってみよう",
          "バーの移動を制限しよう",
          "ブロックを破壊しよう",
          "色を変えてみよう",
          "Projectの整理",
          "画面サイズの設定",
          "ゲームクリアを作ろう",
          "ゲームオーバーを作ろう",
          "リトライを作ろう",
          "跳ね返す角度を変えよう",
          "ボールを徐々に早くしよう",
          "クリックしてからボールを動かそう",
          "スコアを作ろう",
          "エフェクトをつけよう",
          "エフェクトがループし続けてしまう場合の解決方法",
          "プロジェクト設定の確認",
          "ボールに軌跡をつけよう",
          "効果音とBGMを鳴らそう"
        ],
        "ゲームの出力": [
          "Androidで遊べるようにしてみよう",
          "Webで遊べるようにしてみよう",
          "出力ファイルを「～.wasm.～」にする方法"
        ],
        "おわりに": [
          "メッセージ"
        ]
      },
      "requirements": [
        "Unityが動作するパソコン、キーボード、マウス"
      ],
      "description": "『Unity』というゲームを作るためのツールを使って、実際にブロック崩しを作りながらゲーム開発について学んでいきます。\n\n\nコースの最後には、完成したゲームを自分のAndroidスマートフォンにインストールしたり、Web上に公開するまでの手順を解説しているので、身近な人に遊んでもらうこともできます。\n\n\nブロック崩しというシンプルな題材ですが、ボールとバーが当たる位置によって跳ね返す角度を変えたり、ボールが徐々にスピードアップしていく機能も実装します。\nまた、スコアの表示、爆発のエフェクト、サウンドなどゲームにおいて重要な要素も色々盛り込んでいます。\n\n\n想定している受講者は、\nゲームを作ってみたいけど何から手を付けたら良いかわからない\nというような方です。\n\n\n途中で『C#』というプログラム言語を書いていくことになりますが、全くプログラムを書いたことがないという方でも大丈夫です！\nあまり細かい説明はせず、必要なことだけをその都度説明するようにしているので怖がる必要はありません。\n\n\n※ゲームを一本作り切ることに重きを置いているので、逆にプログラミングを一からしっかり学びたいという方にはあまりオススメできません。\n\n\nそれでは、一緒にゲームを作っていきましょう！",
      "target_audience": [
        "ゲームを作ってみたいけど、何から手をつけたらいいかわからない方",
        "Unityの基本的な使い方を学びたい方"
      ]
    },
    {
      "title": "Der komplette Unity Kurs - Werde C# Spieleentwickler",
      "url": "https://www.udemy.com/course/der-komplette-unity-kurs/",
      "bio": "Lerne Spieleentwicklung und Programmierung mit C# und Unity in diesem praktischen Kurs und erstelle tolle 3D Spiele.",
      "objectives": [
        "Spieleentwicklung mit Unity und C#",
        "Objektorientiertes Programmieren mit C#",
        "Tolle 3D und 2D Spielwelten erstellen",
        "Erstellung von Anwendungen für PC, iOS und Android",
        "Entwicklung cleverer Algorithmen",
        "Spielekonzepte erstellen und umsetzen"
      ],
      "course_content": {
        "Projekt \"Cube Goal\" - Erstelle dein erstes 3D Spiel mit Unity und C#": [
          "Cube Goal",
          "Unity installieren und das erste Projekt aufsetzen",
          "Eine Bitte an dich",
          "Unity Grundlagen (Layout und grundsätzliche Funktionalität)",
          "Cheat Sheet 1",
          "Spiel \"Cube Goal\" vorbereiten",
          "Wie du mit diesem Kurs GEWINNST",
          "Dein erstes C# Script",
          "Die Update Methode",
          "Den Spieler bewegen",
          "Physic (Rigidbody) für das Spieler-Movement verwenden",
          "Quiz Grundlagen",
          "Spieler Kollisionen mit Ziel",
          "Level Design",
          "Mehrere Level (Szenen Management und GameManager)",
          "Builden und Time.DeltaTime zur FPS Kompensation",
          "StartView (Canvas und User-Interface)",
          "EndView",
          "Spieler springen lassen",
          "Sounds einbauen",
          "Motivation als Schlüssel zum Erfolg"
        ],
        "Ein echtes C# Programm erstellen (C# Grundlagen lernen)": [
          "Ein Projekt mit Visual Studio erstellen",
          "Das Interface von Visual Studio verstehen",
          "Variablen",
          "Debugging",
          "Arrays",
          "Schleifen",
          "Übung: E-Mail Liste",
          "If-Statements",
          "User Experience",
          "Klassen",
          "Access Modifier",
          "Konstruktor",
          "Methoden"
        ],
        "Memory Spiel": [
          "Vorschau des Memory Spiels",
          "Memory Spiel anlegen, Assets importieren und Level einrichten",
          "Memory Game Algorithmus",
          "Weitere Entwicklungen",
          "Animation von Karten mit Vektoren und Quaternionen",
          "Sound und 3D Objekte hinzufügen",
          "Add-On: Karten-Misch-Algorithmus",
          "Add-On: Karte doppelt anklicken"
        ],
        "RPG Spiel": [
          "Vorschau des RPG Games",
          "RPG Game anlegen und NavMesh erklären",
          "Charakter mit der Maus bewegen (Click to Move)",
          "Environment (Welt) einbauen",
          "Hauptcharakter einbauen",
          "Animationen für den Hauptcharakter",
          "Kamera Bewegung (Spieler folgen)",
          "Einen zweiten Charakter (NPC) hinzufügen",
          "UI Elemente triggern",
          "Dialoge erstellen und anzeigen",
          "Gegner hinzufügen",
          "Angreifen",
          "Lebenspunkte",
          "Lebenspunkte berechnen",
          "Player und Enemy Death",
          "Lebenspunkte in 3D Welt anzeigen",
          "Spielstände speichern"
        ],
        "Scifi First Person Shooter": [
          "Scifi Shooter Vorschau",
          "Scifi Shooter erstellen und Waffe importieren",
          "Standard Assets importieren und Character Controller",
          "Level und Lighting",
          "Bullets schießen",
          "Bullet Effekt (Particle System)",
          "Turrets implementieren"
        ],
        "Abschluss": [
          "Dein eigenes Spiel",
          "So geht's weiter"
        ],
        "Bonus": [
          "Wie du deine IT-Karriere startest"
        ]
      },
      "requirements": [
        "Du solltest Spaß im Umgang mit Technik haben :-)"
      ],
      "description": "Wenn du Spieleentwickler werden möchtest um eigene Spiele zu entwickeln oder um einen Job als Game-Developer/Programmierer/Designer in der Games-Branche zu bekommen, dann ist mein Unity Kurs ideal für dich. Ich bin diesen Weg selber gegangen und weiß daher genau worauf es ankommt:\nIn meinem kompletten Unity Kurs lernst du alles, was du über Unity wissen musst, um eigene Spiele entwickeln zu können. Der gesamte Kurs ist praktisch orientiert. Jedes Spiel, das wir gemeinsam entwickeln, bringt dir spezifische Systeme von Unity, C# und der Prinzipien der Spieleentwicklung bei.\nDie folgenden Spiele werden wir gemeinsam erstellen (siehe Kurs-Video für Vorschau der Spiele):\nCube Goal (bewege einen Cube durch von dir erstellte Level) Genre: Hyper-Casual, Thema: Grundlagen\nEchtes C# Programm zum lernen der C# Grundlagen (Variablen, Methoden, Klassen, Schleifen uvm.)\nMemory Game (erstelle das klassische Kartenspiel Memory) Genre: Kartenspiel, Thema: Algorithmen\nRPG Game (erstelle ein funktionsfähiges top-down Fantasy RPG) Genre: RPG, Thema: Scripting, Animationen und Game Design\nSciFi First Person Shooter (lerne physikalische Schussmechaniken mit der Portal-Gun) Genre: Shooter, Thema: Scripting und Gameplay\nFolgende Themen wirst du am Ende dieses Kurses gelernt haben:\nC# Programmierung für Unity\nVariablen\nKlassen\nMethoden\nIf-Statements\nWichtige Methoden der Unity Engine\nLevel mit Unity erstellen\nPrimitive Level\nTerrain (Welt) Level\nSpielekonzepte erstellen\nSpielekonzepte mit Algorithmen umsetzen\nAlgorithmen analysieren\nAssets importieren und aufbereiten\n3D Modelle + Charaktere verwenden\nAnimationen verwenden mit Unitys Mechanim-System\nSpiele exportieren\nHunderte Best-Practices um aus dir den besten Start zu liefern\nMit mehr als 7 Jahren Erfahrung als selbstständiger Developer, mehreren erfolgreich veröffentlichten Spielen und mehr als 75.000 Studenten in meinen Kursen, biete ich dir absolutes Expertenwissen.\n\n\nSchreib dich am besten sofort ein um noch heute ein neues und spannendes Kapitel in deinem Leben zu beginnen.\n\n\nBis gleich,\nJannick :-)\n\n\nPS: Wie jeden anderen meiner Kurse auch, halte ich diesen Kurs stetig auf dem laufenden und füge regelmäßig neue Inhalte hinzu.",
      "target_audience": [
        "An alle die Spieleentwickler, Game Designer oder Programmierer werden wollen",
        "An Programmierer die Spiele mit Unity entwickeln möchten",
        "An alle die sich für Games interessieren und wissen wollen, wie man Spiele erstellt"
      ]
    },
    {
      "title": "Sıfırdan Oyun Geliştirme Kursu | Temel Unity C# Eğitimi",
      "url": "https://www.udemy.com/course/sfrdan-oyun-gelistirme-kursu-temel-unity-c-egitimi/",
      "bio": "Sıfırdan Unity C# ile ilk 2D Oyununuzu Geliştirmeyi Öğrenin !",
      "objectives": [
        "Unity ile temel oyun projeleri geliştirin: Unity'de temel araçları kullanarak sıfırdan oyun projeleri oluşturmayı ve oyun tasarımının temellerini öğrenin.",
        "Oyun mekaniği tasarımı ve kodlamayı öğrenin: Basit oyun mekaniklerini tasarlayın ve bu mekanikleri C# diliyle nasıl kodlayacağınızı öğrenin.",
        "C# programlama dilinde temel beceriler kazanın: Değişkenler, döngüler ve koşullu ifadeler gibi C# programlama temellerini öğrenerek oyun geliştirme sürecine uyg",
        "Unity'de fizik motorunu kullanmayı öğrenin: Oyunlarınıza gerçekçi fizik kuralları ekleyin, objelerin hareketini ve çarpışmalarını kontrol edin.",
        "Oyun içinde etkileşimli UI oluşturmayı öğrenin: Unity'de kullanıcı arayüzü (UI) elemanları oluşturun ve C# ile bu arayüzlerin etkileşimlerini sağlayın.",
        "Animasyon sistemlerini kurmayı öğrenin: Unity'de karakter animasyonlarını oluşturun, kontrol edin ve oyun içinde animasyonları yönetmeyi öğrenin."
      ],
      "course_content": {
        "Giriş": [
          "Kursun Amacı ve Tanıtımı",
          "Oyun Geliştirirken Yapay Zeka Kullanımı ve Kursa Başlamadan Önce Tavsiyeler"
        ],
        "Program Kurulumları ve Unity Arayüz Kullanımı": [
          "Bölüm Tanıtımı: Hangi Programları Kullanacağız ?",
          "Neden Unity Kullanmalıyız ?",
          "Unity Kurulumu ve Ayarları",
          "Visual Studio Kurulumu ve Ayarları",
          "Unity Proje Dosyası Nasıl Oluşturulur ?",
          "Unity Arayüzünü Tanıyalım",
          "Unity Console Penceresi",
          "Unity Component Sistemi",
          "Unity Inspector Penceresi ve Öğrendiklerimizle Pratik Yapalım"
        ],
        "Unity için Temel C# Eğitimi": [
          "Bölüm Tanıtımı",
          "C# | Sayılar",
          "C# | Metinler",
          "C# | Değişkenler",
          "C# | Boolean Mantığı",
          "C# | If-Else",
          "C# | Döngüler",
          "C# | Fonksiyonlar",
          "C# | Diziler",
          "Bölüm Finali"
        ],
        "Unity | 2D Oyunumuzu Yapmaya Başlıyoruz": [
          "Bölüm Tanıtımı",
          "Unity Proje Dosyamızı Oluşturalım",
          "Assetlerimizi Import Edelim",
          "Unity 2D Platformer Karakter Hareket Mekaniği",
          "Unity 2D Platformer Karakter Zıplama Mekaniği",
          "Karakter Animasyonları Yapımı",
          "Animator Penceresi Kullanımı",
          "Unity 2D Tile Palette Kullanımı",
          "Para Toplama Sistemi",
          "Sahne Sıfırlama Sistemi",
          "Unity Cinemachine Kullanımı",
          "Unity 2D Platformer Düşman Hareket Mekaniği",
          "Oyun Haritamızı Genişletiyoruz",
          "Unity Particle System Kullanımı",
          "Unity Post Processing Kullanımı",
          "Unity UI Canvas Sistemi",
          "Ana Menü Tasarlıyoruz",
          "Unity 2D Projemizi Build Alıyoruz",
          "Final Konuşması"
        ]
      },
      "requirements": [
        "Herhangi bir programlama bilgisine ihtiyacınız yok! Bu kurs, oyun geliştirme ve programlamaya sıfırdan başlayacak herkes için uygun. Gerekli tüm bilgileri adım adım öğreneceksiniz."
      ],
      "description": "Bu kurs, oyun geliştirme dünyasına sıfırdan adım atmak isteyen herkes için tasarlanmış kapsamlı bir başlangıç rehberidir. Hiçbir ön bilgi gerektirmeyen bu eğitimde, Unity'nin temellerinden başlayarak, C# programlama dilinin oyun geliştirmede nasıl kullanıldığını öğreneceksiniz. Hem teorik bilgiler hem de pratik uygulamalarla donatılmış bu kurs, sizi kendi oyunlarınızı geliştirebilecek seviyeye getirecek.\nKursumuzun ilk bölümünde, Unity'yi kurma ve arayüzünü tanıma aşamalarından başlayarak, oyun geliştirme dünyasına sağlam bir giriş yapacaksınız. Bu süreçte, Unity'nin sunduğu güçlü araçları ve bu araçların nasıl verimli bir şekilde kullanılacağını öğreneceksiniz. Unity ile oyun geliştirme sadece bir oyun motorunu kullanmayı değil, aynı zamanda bir geliştirici olarak yaratıcı düşünme becerilerinizi de nasıl geliştirebileceğinizi öğretecektir.\nİkinci bölümde, programlama temellerini öğrenmeye başlayacağız. Bu bölüm, özellikle C# dilini hiç bilmeyen veya yeni başlayanlar için ideal. Değişkenler, döngüler, koşul ifadeleri ve daha birçok temel C# kavramını adım adım öğrenirken, bu bilgileri Unity projelerine nasıl entegre edebileceğinizi de göreceksiniz. Bu sayede, hem C# dilinde uzmanlaşacak hem de bu dili oyunlarınızda nasıl kullanacağınızı anlayacaksınız.\nÜçüncü bölümde ise, edindiğiniz bilgi ve becerileri kullanarak ilk oyun projenizi geliştireceğiz. Bu bölümde, sıfırdan bir 2D oyun oluşturacak ve oyununuzun temel mekaniklerini kuracaksınız. Karakter hareketleri, engeller ve oyun içinde etkileşim gibi temel unsurları uygulamalı olarak öğreneceksiniz. Ayrıca, bu süreçte karşılaşabileceğiniz yaygın problemleri nasıl çözebileceğinizi ve oyun geliştirmenin püf noktalarını da keşfedeceksiniz.\nBu kurs, sadece bir başlangıç değil, aynı zamanda oyun geliştirme alanında bir kariyer inşa etmenize yardımcı olacak sağlam bir temel sunar. Kursu tamamladıktan sonra, Unity ve C# konusundaki bilginizi daha da ileriye taşıyabilir, kendi projelerinizi geliştirmeye başlayabilir veya oyun geliştirme alanında daha ileri düzey kurslarla kendinizi geliştirmeye devam edebilirsiniz.\nEğer oyun geliştirme hayaliniz varsa, bu kurs sizi o hayale bir adım daha yaklaştıracak. Hayalinizdeki oyunları geliştirmek ve kendi projelerinizi hayata geçirmek için gerekli olan tüm bilgi ve becerileri bu kursta bulacaksınız. Hadi, hemen şimdi başlayın ve oyun geliştirmenin heyecan verici dünyasına adım atın!",
      "target_audience": [
        "Oyun geliştirmeye meraklı herkes için! Bu kurs, 7'den 70'e oyun geliştirmeyi öğrenmek isteyen, programlama bilgisi olmayan ya da sıfırdan başlayacak herkese uygundur. Eğlenceli ve kolay anlaşılır içeriklerle, herkes kendi oyununu yapmayı öğrenebilir."
      ]
    },
    {
      "title": "Crie Seu Jogo | Unreal Engine 4 #game multiplayer Aventura",
      "url": "https://www.udemy.com/course/crie-seu-jogo-unreal-engine-4-game-multiplayer-aventura/",
      "bio": "Na Prática, como construir um game",
      "objectives": [
        "Criação Unreal",
        "Programação",
        "Blueprints",
        "Game Design",
        "Orientação a Objetos",
        "User Interface",
        "Sistema de menu",
        "Sistema de gold",
        "Planejar seu jogos",
        "Organizar suas ideias",
        "sistema de plataformas",
        "mundos interativos",
        "cenários e mapas"
      ],
      "course_content": {
        "Instalação NOVA 2020": [
          "Instalação",
          "02 Instalação Pt.2"
        ],
        "Introdução e Planejamento": [
          "Planejar Jogo",
          "Planejar Jogo Pt.2"
        ],
        "Criando Projeto! NOVA 2020": [
          "03 Escolhendo o projeto",
          "04 Breve Blueprints",
          "05 Janelas Unreal",
          "06 MOVIMENTAÇÃO DE OBJETOS"
        ],
        "Introdução Variáveis NOVA! 2020": [
          "07 Variável Nome",
          "08 variável string",
          "09 variável texto",
          "10 variável boolean",
          "11 variável integer",
          "12 variável float",
          "13 variável vetor",
          "14 variável Transformar",
          "15 variável rotator"
        ],
        "Básicos da programação": [
          "16 variável Sequência",
          "17 variável Comentários",
          "18 variável Ramificação"
        ],
        "User Interface 2020 Base": [
          "19 ActorBeginOverLap \"Teletransportar\"",
          "Interface",
          "Interface TextVar",
          "Interface Show Mouse",
          "Interface Score TextVar",
          "Interface Health e Experiência !",
          "Interface Health Text / Max Health",
          "Interface Health Limitar Regen / Max Health",
          "Interface Exp Text",
          "Interface Imagem / Estrela Bario",
          "Interface Quantidade Estrela Text",
          "Interface Moeda e Life",
          "Item Coletavel Blueprints",
          "Moeda Coletável Blueprints",
          "Life Coletável Blueprints",
          "Importar Assets",
          "Terreno | Mapa",
          "Vegetação | Mapa",
          "Fonte Texto | Nova fonte do jogo!",
          "Estrela Coletável"
        ],
        "Multiplayer Iniciando": [
          "Iniciando o Multiplayer",
          "Ideia para o primeiro Modo de jogo",
          "Hud"
        ],
        "Proteja seu Projeto !": [
          "Fazendo BackUp Projeto Zippar",
          "Ao Jogo Após Formatar",
          "16 Sequência"
        ],
        "Introdução a variável CURSO ANTIGO!": [
          "Introdução",
          "Introdução",
          "Entendendo Sobre variável",
          "Variável Name",
          "Váriavel String",
          "Variável Text",
          "Variável Float",
          "Variável Integer",
          "Variável Boolean",
          "Iniciando",
          "Iniciando Desafios",
          "Evoluindo Desafios",
          "Evoluindo Desafios Pt.2"
        ],
        "Sobre Mapas CURSO ANTIGO!": [
          "Criando Novo Mapa",
          "Dificultando mapa Música no level",
          "Alterando entre mapas",
          "Criando Terreno Pt.1",
          "Criando Terreno Pt.2"
        ]
      },
      "requirements": [
        "Requisitos mínimos para executar a Unreal Engine 4: Sistema Operacional: Windows 7/8 64-bits ou Superior, Processador: Quad-core Intel ou AMD, 2.5 GHz ou superior Placa de vídeo: placa gráfica compatível com DirectX 11 Memória: 8 GB RAM Requisitos recomendados pela Epic: Recomendações de hardware para começar a desenvolver jogos com a Unreal Engine 4: Sistema Operacional: Windows 7 64-bit ou Mac OS X 10.9.2 ou mais atual Processador: Quad-core Intel ou AMD, 2.5 GHz ou superior Placa de vídeo: NVIDIA GeForce 470 GTX ou AMD Radeon 6870 HD series card ou superior Memória: 8 GB RAM",
        "Requisitos recomendados pela Epic: Recomendações de hardware para começar a desenvolver jogos com a Unreal Engine 4: Sistema Operacional: Windows 7 64-bit ou Mac OS X 10.9.2 ou mais atual Processador: Quad-core Intel ou AMD, 2.5 GHz ou superior Placa de vídeo: NVIDIA GeForce 470 GTX ou AMD Radeon 6870 HD series card ou superior Memória: 8 GB RAM"
      ],
      "description": "Um jogo pode facilmente se perde seu propósito novas ideias surgiram a cada passo.\nDescreva de forma clara seu jogo antes de iniciado para que tenha sucesso, a criação de um jogo é uma possibilidade de criar um universo totalmente novo com sua visão, então, armazene as informações que deseja atribuir para seu jogo, para que se torne mais possível acessa-las em um outro momento.\nVamos atingir alguns temas descritos a baixo e em breve novos temas serão adicionados\nIntrodução\nManipular  Unreal Engine 4.\nUtilizar Blueprints de forma básica para seus projetos.\nCriar um game para Desktop.\nCriar interfaces de usuários\nCriar um jogo novo\nMultiplayer\nUser Interface para multiplayer\nsistema de menu\nmodo de jogos diferentes\nsistema de gold\nsistema de energia\nsistema de vida\nsistema de fome\nsounds effects\nsound ambient\nsistema de plataformas\ncenários e mapas\nA quem indico o curso:\nProgramadores e Designer de jogos iniciantes e intermediários\nQuem deseja aprender um universo totalmente novo de criação de jogos\nQuem deseja ingressar nesta profissão ou tê-la como Hobby",
      "target_audience": [
        "Todos que desejam adquirir conhecimento em unreal engine 4 ou sobre blueprints"
      ]
    },
    {
      "title": "Stwórz swoją pierwszą grę 2D w Unity",
      "url": "https://www.udemy.com/course/unity-gra2d/",
      "bio": "Od podstaw",
      "objectives": [
        "Po ukończeniu kursu, uczestnicy będą potrafili atrakcyjną grę na bazie prostej grafiki 2D"
      ],
      "course_content": {
        "Zapoznanie z narzędziami": [
          "Tworzenie nowego projektu i konfigurowanie edytora",
          "Różnice w obserwowaniu świata i działaniu kamery w grach 2D i 3D",
          "Sprite'y - definicja i konfiguracja",
          "Atlasy sprite'ów",
          "SpriteRenderer - ustawienia materiału i koloru",
          "Tworzenie sceny - podział na warstwy",
          "Prefaby w grach 2D"
        ],
        "Tworzenie bohatera": [
          "Tworzymy bohatera kolidującego z platformami",
          "Animacja \"idle\" dla bohatera",
          "Dodajemy animację \"run\"",
          "Kontrolowanie animacji \"run\" z poziomu skryptu - część 1.",
          "Kontrolowanie animacji \"run\" z poziomu skryptu - część 2.",
          "Kontrolowanie animacji \"run\" z poziomu skryptu - część 3.",
          "Poruszanie bohatera w lewo i w prawo",
          "Podskakiwanie bohatera (animacja + skrypt)",
          "Błędy - wytykanie i naprawianie - część 1.",
          "Błędy - wytykanie i naprawianie - część 2.",
          "Dodanie LayerMask do kontroli skakania"
        ],
        "Interaktywna kamera i budowanie sceny": [
          "Kamera podążająca za bohaterem",
          "Kamera pozioma i ustawienie tła",
          "Budowanie podłoża poziomu",
          "Naprawianie prześwitów między sprite'ami",
          "Tworzenie skryptu do efektu paralaksy",
          "Konfigurowanie elementów sceny dla efektu paralaksy",
          "Kilka wskazówek przed budowaniem własnej mapy",
          "Naprawianie usterek w stworzonej mapie i poprawa gameplay"
        ],
        "Przeszkody i nagrody": [
          "Pierwszy kontakt z kaktusem",
          "Animacja ukłucia kolcem kaktusa",
          "Resetowanie bohatera po kontakcie z kaktusem - część 1.",
          "Resetowanie bohatera po kontakcie z kaktusem - część 2",
          "Zbieranie skrzynek przez bohatera",
          "Przygotowanie GUI dla licznika",
          "Skrypt obsługujący licznik",
          "System obsługi punktów restartu",
          "Kolorowanie punktów startowych wraz z postępem gry",
          "Ruchome platformy - część 1.",
          "Ruchome platformy - część 2.",
          "Ruchome platformy - część 3.",
          "Ruchome platformy - część 4.",
          "Ruchome platformy - część 5.",
          "Ruchome platformy - część 6."
        ],
        "Efakty dodatkowe": [
          "Dźwięki - tło muzyczne",
          "Dźwięki zdarzeń",
          "Particle - przygotowanie eksplozji",
          "Particle - instancjonowanie prefabu i jego autodestrukcja",
          "Zakończenie - pomysły na kolejne przeszkody"
        ],
        "Test": [
          "Test końcowy"
        ]
      },
      "requirements": [
        "Kurs jest przeznaczony dla osób, które zapoznały się już z interfejsem edytora Unity i jego obsługą na bardzo podstawowym poziomie"
      ],
      "description": "Obierz kurs na... programowanie gier 2D w Unity!\nCały świat gra w gry — bez względu na wiek, wykształcenie, status społeczny, płeć. Prawie każdy lubi choć przez chwilę zająć umysł zupełnie innym sposobem myślenia — i nie zawsze konieczne są do tego zaawansowane sprzęty czy realistyczne efekty w 3D. Wielu ludzi szuka szybkiej rozrywki na dwadzieścia minut w tramwaju lub kolejce do dentysty. Dla takiego gracza istotne będą dobry pomysł i akcja z poczuciem humoru — których zapewne Tobie nie brakuje. Teraz przyszedł czas, by połączyć je z wiedzą zaprezentowaną w szkoleniu Unity. Kurs video. Poziom pierwszy. Tworzenie gry 2D i rozpocząć przygodę jako twórca rozrywkowych aplikacji! Każdego roku rynek gier jest zalewany nowościami — w tym wielkimi produkcjami w 3D. Ale to proste tytuły 2D, takie jak Angry Birds i Cut the Rope, cieszą się największym zainteresowaniem użytkowników i stają się elementami kultury masowej. Tworzenie gier to bez wątpienia dochodowe zajęcie i coraz więcej programistów, nawet tych niezbyt doświadczonych, poświęca swój czas i próbuje sił w branży. Jeśli i Tobie marzy się kariera dewelopera gier, skorzystaj z narzędzi 2D, które oferuje Ci Unity. Pozwalają sprawnie i w krótkim czasie stworzyć atrakcyjną grę na bazie prostej grafiki 2D, która jest dużo tańsza niż skomplikowane modele 3D. Więcej na ten temat dowiesz się ze szkolenia Unity. Kurs video. Poziom pierwszy. Tworzenie gry 2D.\nCo Cię czeka podczas naszego profesjonalnego szkolenia?\nNauczysz się obsługi narzędzi 2D w Unity.\nZaimportujesz lub samodzielnie stworzysz potrzebną grafikę.\nZaplanujesz scenę gry, przetestujesz ją i dokonasz w niej niezbędnych poprawek.\nZaanimujesz postacie na bazie animacji poklatkowej.\nZaprogramujesz efekt paralaksy dla widoku 2D.\nPoznasz elementy języka C#.\nSkonfigurujesz widoki kamery ortogonalnej.\nPrzygotujesz i zaprogramujesz przeszkody i nagrody dla bohatera.\nObsłużysz kolizje i symulacje fizyczne.\nUruchomisz dźwięki w aplikacji.\nDodasz do swojej gry efekty audiowizualne.\nStworzysz interfejs użytkownika.\nA po zakończeniu szkolenia...\nBędziesz w stanie samodzielne zbudować grę 2D!\nPrzygotowaliśmy dla Ciebie czterdzieści sześć lekcji podzielonych na pięć rozdziałów. Podczas fascynującej nauki z naszym ekspertem i dzięki pomocnym tutorialom dowiesz się, jak rozdzielić atlas grafik na poszczególne sprite’y, stworzyć animację z pojedynczych kratek i kontrolować ją za pomocą skryptów. Przygotujesz poszczególne poziomy (levele) własnej gry, wiedząc, czego się wystrzegać i znając błędy najczęściej popełniane przy ich budowaniu. W połączeniu z Twoją fantazją i zastosowaną grafiką 2D umożliwi Ci to napisanie własnego projektu, który będzie bawił Twoich przyjaciół i pomoże otworzyć drzwi do kariery.\nDwa wymiary gry\nUnity to świetna aplikacja przeznaczona do tworzenia gier 3D i 2D. Produkty stworzone w Unity mogą działać na wielu platformach: Windows, Mac OS i Linux spośród stacjonarnych, a także na większości mobilnych: Android, iOS, Windows Phone czy BlackBerry. Sporą część rynku gier zajmują właśnie lekkie gry 2D, napisane głównie z myślą o urządzeniach mobilnych, które mają mniejszą wydajność. Blisko połowa wszystkich developerów aplikacji mobilnych deklaruje, że używa Unity w swojej pracy zawodowej, a na świecie jest zarejestrowanych 3,3 miliona developerów Unity. Jeśli te liczby jeszcze Cię nie przekonały do rozpoczęcia przygody ze szkoleniem Unity. Kurs video. Poziom pierwszy. Tworzenie gry 2D, to wyobraź sobie, że aż 600 milionów graczy gra w gry stworzone w Unity.\nKolejny level kariery\nZawód programisty gier jest niezwykle pożądany i świetnie opłacany. Według prognoz to profesja, w której specjalistów będzie brakowało jeszcze przez wiele lat, i stąd proponowane wysokie pensje. Rynek rozrywkowy również z roku na rok powiększa swoje przychody. Co więcej, to jeden z niewielu zawodów, w których można pograć podczas wykonywania obowiązków służbowych. Wystarczy tylko stworzyć grę. W odróżnieniu od gier 3D, w których niezbędna jest umiejętność tworzenia trójwymiarowych modeli, w grach 2D możemy użyć zupełnie innej grafiki — obrazków wykonanych przez dzieci lub własnych zdjęć. To pozwala stworzyć unikatową kolekcję, czy to aplikacji edukacyjnych, braintrainingowych, albo też po prostu wygenerować czasopożeracza na sprzedaż. Bo kiedy skończoną grę umieścisz w sklepie internetowym, będzie mógł ją pobrać na komputer, telefon lub tablet, każdy — niezależnie od branży, zawodu i wieku. Dla kogo ten kurs? Unity. Kurs video. Poziom pierwszy. Tworzenie gry 2D jest przeznaczony dla osób, które zapoznały się już z interfejsem edytora Unity i jego obsługą na bardzo podstawowym poziomie. W trakcie kursu samodzielnie stworzysz animacje z zestawu klatek, a następnie oprogramujesz sterowanie bohaterem za pomocą skryptów C#. Wyjaśnione zostanie tworzenie sprite’ów z atlasów połączonych grafik oraz przygotowanie z nich modułowych elementów do budowania scenerii gry. Tu nie ma miejsca na niepewność. W trakcie kursu nasz ekspert na bieżąco będzie wyjaśniał Ci niuanse, które napotka początkujący programista, aby już na starcie wyeliminować najczęstsze błędy i problemy. Ukończenie szkolenia Unity. Kurs video. Poziom pierwszy. Tworzenie gry 2D otwiera drogę do podjęcia pracy w branży gier lub wydawania własnych tytułów!\nTylko dla wtajemniczonych\nPrzygotowaliśmy dla Ciebie informacje, które pozwolą Ci zrozumieć specjalistyczną terminologię, posługiwać się nią i które będą dostępne od ręki. Nie potrzebujesz już wertować opasłych tomów ani przeszukiwać internetowej otchłani. Zajmij się projektowaniem gier, a przy okazji dowiedz się więcej o sprite’ach, czyli elementach graficznych gier 2D. Jest to geometria płaska z naklejoną teksturą — obiekt nie posiada głębi (trzeciego wymiaru). Zacznij operować orthographic camera — kamerą patrzącą prostopadle na płaszczyznę bez zbiegów perspektywicznych — oraz stwórz i obsłuż własne animacje poklatkowe. Przekonaj się, ile radości z rozrywki daje zastosowany efekt paralaksy. Wykonaj podstawowe symulacje fizyczne, a na koniec zoptymalizuj i zwiększ wydajność swojej gry 2D, napisanej dzięki szkoleniu Unity. Kurs video. Poziom pierwszy. Tworzenie gry 2D. Kurs prowadzony jest na Unity 5.0.\nPoznaj naszego eksperta\nArkadiusz Brzegowy, rocznik 1977. Od dzieciństwa pasjonat komputerów. Pierwsze programy pisał na Atari 65XE w Basicu. Kontakt z grafiką 3D miał pod koniec nauki w technikum, jeszcze na DOS-owej wersji 3D Studio. Karierę w branży gier rozpoczął pod koniec studiów na krakowskiej Akademii Górniczo-Hutniczej przy projekcie Hell-Copter wydanym przez Ubisoft. Projektowanie gier i interaktywnych multimediów kontynuował, pracując w Onet oraz w założonych przez siebie firmach Artyści Nowych Mediów i Feel3D. Jego podstawową działalnością jest projektowanie aplikacji 3D dla przemysłu i na rynek rozrywkowy. Tworzy między innymi gry, symulatory przemysłowe, aplikacje z wykorzystaniem hełmów VR i rękawic zanurzeniowych oraz aplikacje rzeczywistości rozszerzonej. Specjalizuje się w tworzeniu dzieł w Unity, od kilku lat jest też resellerem Unity w Polsce — prowadzi doradztwo i szkolenia w zakresie tej technologii. Po godzinach stara się oderwać od komputera, aby czerpać radość z wielu dziedzin życia. Gra na perkusji, ściga się gokartami, piecze domowy chleb i pokazuje dzieciom świat. To wszystko zresztą jest inspiracją do tworzenia gier i aplikacji. „Mechanizmy 2D w Unity to narzędzia, za pomocą których poza komercyjnymi projektami możesz okazjonalnie tworzyć małe gry spersonalizowane, virale, galerie własnych zdjęć czy interaktywne kartki pocztowe. Baw się tym z zaangażowaniem, a doświadczenie przyjdzie samo — szybciej, niż myślisz!”",
      "target_audience": [
        "Wszyscy, którzy myślą o karierze game developera"
      ]
    },
    {
      "title": "Unity 2D Mobil Oyununu Yapımı && Reklam Ekleme",
      "url": "https://www.udemy.com/course/unity-ile-mobil-oyununu-yapreklam-koypara-kazanmaya-basla/",
      "bio": "Yaptığımız Oyunu GooglePlaye yükleyeceğiz, Reklamlar sayesinde gelir elde etmeye başlayacağız.",
      "objectives": [
        "Mobil Mantıkta Oyun Yapmayı,",
        "Oyunlarınızı mobil cihazlara uygun şekilde entegre etmeyi,",
        "Yaptığınız Oyunu GooglePlaye yüklemeyi,",
        "Kendi yaptığınız oyuna \"Banner\" reklam ekleyerek gelir elde etmeyi öğrenebileceksiniz"
      ],
      "course_content": {
        "Tanıtım": [
          "Tanıtım Videosu"
        ],
        "ÖNEMLİ UYARI": [
          "!!!LÜTFEN EĞİTİME BAŞLAMADAN ÖNCE İZLEYİN!!!"
        ],
        "Temel Eğitim(OPSİYONEL)": [
          "Unity Arayüz Tanıtım",
          "Scene & Game Panelleri",
          "Sahnede Nesne Oluşturma ve Hareket Ettirme",
          "Gameobject-Componenet İlişkisi",
          "Materyaller",
          "Textures",
          "3d Oyunlarda Kamera Kullanımı",
          "Oyunlarda Işık Elementi",
          "Canvas Öğelerine Giriş",
          "3d Oyunlar İçin Oyun Alanı Oluşturma -1",
          "3d Oyunlar İçin Oyun Alanı Oluşturma -2",
          "3d Oyunlar İçin Oyun Alanı Oluşturma -3",
          "Animasyon-1",
          "Animasyon-2",
          "Animator",
          "Mixamo & 3d Karakter"
        ],
        "c# Temel Eğitim": [
          "C# Giriş",
          "Fonksiyonlar",
          "Veri Tipleri",
          "Veri Tipleri-2",
          "Var Değişkeni",
          "Karşılaştırma Operatörleri",
          "Mantıksal Operatörler",
          "Component Tanımlama",
          "Private -Public Erişim",
          "If (Koşul)",
          "For Döngüsü",
          "While -Do while Döngüsü",
          "Diziler ve Listeler",
          "Foreach",
          "For ve Array Uygulama"
        ],
        "Platformer Oyun Yapımı": [
          "Proje Oluşturma ve Assetler",
          "Tile Palet-Tiles Kullanımı ve Spriteler",
          "Level Oluşturma ve Layerlar",
          "Player Oluşturma",
          "Karakter Hareketleri-1",
          "Karakter Hareketleri-2",
          "Karakter Sağa Sola Dönme",
          "Karakterin Koşma Animasyonu",
          "Karakter Jump Animasyonu",
          "Tuzak Oluşturma",
          "Hareketli Tuzak",
          "Öldükten Sonra Yeniden Başlama",
          "Meyve Toplama",
          "Meyve Sayılarını Kontrol Etme",
          "Sonraki Bölüme Geçme",
          "Karakter Hasar Animasyonu",
          "Bölümler Arası Geçiş Animasyon",
          "Çift Sıçrama ve Düşme Animasyonu",
          "Bölüm Seçme ve Bölüm Kilitleri",
          "Main Menu Yapımı-1",
          "Main Menu Yapımı-2",
          "Main Menu Yapımı-3",
          "Pause Menü Yapımı",
          "Müzikler ve Ses Efektleri",
          "Ses Efektleri-2",
          "Score Sistemi",
          "Düşman Yapımı-1",
          "Düşman Yapımı-2",
          "Düşmana Hasar Verme",
          "Range Enemy Yapımı",
          "Uçan Düşman Yapımı",
          "Sarkıt Tipli Tuzak",
          "Hareketli Testere",
          "Level Düzeltme ve Ekleme",
          "Trambolin Yapımı",
          "Hareketli Platform -1",
          "Hareketli Platform-2",
          "Player Can Sistemi",
          "Level Seçme Menüsü -Düzeltmeler",
          "Player Camera",
          "Mobil Kontroller"
        ],
        "Çıktı Alma İşlemleri": [
          "Tamamlanan Oyunun Çıktısını Alma-1",
          "Çıktı Kontrol-2",
          "Reklam Hazırlığı-3",
          "Reklam Hazırlığı-4",
          "Test Reklamı Ekleme",
          "Gerçek Reklam Ekleme"
        ],
        "Google Play de Oyunumuzu Yayınlama": [
          "Google Play İşlemleri",
          "Google Play Sayfası-1",
          "Google Play Sayfası -2",
          "Hata Ayıklama (.aab)"
        ]
      },
      "requirements": [
        "Projeler Temel seviye c# ve unity bilgisi ile oluşturulmuş olup tane tane işlenmiştir. Hiç birşey bilmiyor iseniz de buradan başlayabilirsiniz.Önceden bilgi sahibi iseniz bilgileriniz süreci daha hızlı ilerletmenize yardımcı olacaktır."
      ],
      "description": "Kursumuz giriş seviyesi genel Unity konuları ile başlayarak Oyun yapımı aşamasında gerekli olan  ekranları ve oyun elementlerini tanımaya çalışacağız.Dolasıyla hiç bir unity bilginiz olmasa bile bu konular üstünden unity ye biraz alışmanız mümkündür, bu noktada sadece 2d değil 3d oyunlar içinde gerekli kavramlar da anlatılmıştır. Sonrasında ise  giriş seviyesinde lazım olcak kadar c# ile kursumuz  devam etmektedir .Sonrasında platformer oyun modelinde mobil oyun projesinibaşından sonuna kadar beraber  yapacağız Bu oyun tipinde gerekli olabilcek birçok mekaniği işlemeye özen gösterdim,burdan yola çıkarak kendinize ait bir oyunu rahatlık ile geliştirebilirsinizz ayrıca bu esnada menu yapımı -level geçişler-skor tutma gibi kavramlarıda işleyeceğiz. Proje bitimlerinde çokca sorun olan mobil için çıktı alınması ve oyunu görsel ve kontrol açısından mobile uyumlu hale getirilmesi gibi konularıda işleyeceğiz  ve projelerimizi GooglePlay platformuna yükleme bu uygulamalara reklam eklereyerek gelir elde etme gibi konuları işleyeceğiz. Kurs sonunda kendi kendinize oyun yapabilecek noktaya gelebileceksiniz. Unutmamalı ki en başarılı oyunlar en karmaşık  ve en zor oyunlar değil insanları en çok mutlu eden ve keyif veren oyunlar olmuştur, dolayısıyla basit ama keyifli,farklı fikirler bulabilmek bunları geliştirebilmek kadar önemlidir. Fikrinizi geliştirin! Unity ye aktarın ve kodlamaya başlayın Google play e yükleyerek belkide milyonlara ulaşacaksınız.Unutmayın ki herşey basit bir fikir ve bu fikir için adım atmakla başladı.  Hedefleri olan herkesi bekliyorum...",
      "target_audience": [
        "Mobil oyun yaparak reklamlar üstünden gelir elde etmek isteyen herkese uygundur."
      ]
    },
    {
      "title": "Godot 4: Crie seu primeiro jogo na Godot usando GDScript",
      "url": "https://www.udemy.com/course/godot-4-crie-seu-primeiro-jogo-na-godot-usando-gdscript/",
      "bio": "Aprenda a desenvolver um jogo completo, do início ao fim, utilizando a Godot 4 e a linguagem de programação GDScript!",
      "objectives": [
        "Desenvolver jogos na Godot",
        "Programar na linguagem GDScript",
        "Scripts, Variáveis, Condições e Funções",
        "Utilizarr \"Signals\" e \"Groups\"",
        "Criar seus próprios \"Signals\"",
        "Inserir e configurar animações",
        "Criar um sistema de spawn infinito e aleatório",
        "Tocar Músicas e Efeitos Sonoros",
        "Trabalhar com a Interface de Usuário (UI)",
        "Exportar o jogo para jogá-lo fora da Godot"
      ],
      "course_content": {
        "Primeiros Passos": [
          "Baixando a Godot 4",
          "Criando o Projeto",
          "Conhecendo a Interface e os Menus",
          "Configurações Iniciais",
          "Baixando e Importando os Assets"
        ],
        "Criando o Jogador": [
          "Criando o Piso da Fase",
          "Adicionando o Piso à Fase",
          "Criando e Animando o Jogador",
          "Criando um Script e entendendo como ele Funciona",
          "Entendendo o que são e como utilizar as Variáveis",
          "Programando a Movimentação do Jogador",
          "Fazendo com que o Jogador Olhe para a direção que está andando",
          "Rodando as Animações do Jogador pelo código"
        ],
        "Criando e Programando a Serra e o Diamante": [
          "Criando e Animando a Serra",
          "Programando a Queda da Serra",
          "Identificando a Colisão da Serra com \"Signal\" e \"Group\"",
          "Criando o Diamante",
          "Programando o Diamante e Identificando sua Colisão",
          "Destruindo o Diamante ao ser Coletado"
        ],
        "Criando e Programando um Gerador de Objetos": [
          "Criando um Gerador de Objetos",
          "Criando e Programando o Cronômetro do Gerador",
          "Entendendo o que são e como usar as Arrays",
          "Programando o Gerador de Objetos - Parte 1/2",
          "Programando o Gerador de Objetos - Parte 2/2",
          "Destruindo os Objetos após X segundos"
        ],
        "Sistema de Pontuação e UI (Interface do Usuário)": [
          "Programando um Sistema de Pontuação",
          "Criando o Texto de Pontuação (UI)",
          "Mostrando a Pontuação na Tela (usando \"Signal\")"
        ],
        "Game Over e UI (Interface do Usuário)": [
          "Programando o Game Over",
          "Criando a Tela de Game Over (UI)",
          "Ativando a Tela de Game Over",
          "Reiniciando o jogo no Game Over"
        ],
        "Efeito Sonoro e Músicas": [
          "Criando e Programando um Gerenciador de Sons",
          "Tocando os Sons e Músicas na hora certa"
        ],
        "Ajustes Finais e Exportando o Jogo": [
          "Inserindo um Background e configurando seu \"Z-Index\"",
          "Impedindo que o Jogador saia da Tela",
          "Fechando o Jogo ao apertar ESC",
          "Exportando o Jogo",
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Não é necessário ter experiência com programação ou com a Godot (vamos no passo-a-passo de tudo)",
        "Godot Engine (100% gratuita)",
        "Uma paixão por Aprender e Desenvolver Jogos :)"
      ],
      "description": "Neste curso nós iremos aprender a desenvolver um Jogo do Zero (desde o início do projeto até sua build final). E para criá-lo, estaremos utilizando a poderosíssima Godot Engine e a incrível Linguagem de Programação GDScript.\n\n\nCurso voltado para Iniciantes na área, ou seja, todas as aulas foram gravadas e editadas dando o máximo de atenção aos detalhes;\n\n\nIremos desde os primeiros passos (instalação do programa) até os passos finais (exportando o jogo em um arquivo que pode ser enviado para outras pessoas);\n\n\nAprenderemos como criar um Controle para personagens 2D, configurando seu movimento e olhar nas direções - inserindo e programando suas animações; um sistema para spawnar objetos de maneira aleatória e infinita; configurar colisões e Signals; utilizar o incrível AutoLoad; programar Efeitos Sonoros e Músicas; trabalhar com UI e muito mais;\n\n\nNa hora da programação, aprenderemos também o que são Variáveis, Condições, Funções, Arrays e mais, com a Linguagem de Programação GDScript;\n\n\nEntenderemos como que funciona a Godot e como que podemos criar nossos jogos nela, em 37 aulas bem elaboradas, totalizando mais de 8 horas de conteúdo!\n\n\nE é claro, se tiver qualquer dúvida durante as aulas, não hesite em perguntar no campo de perguntas. Ficarei muito feliz em lhe ajudar.\nE também, se estiver com dúvidas em relação a compra do curso, dê uma olhada nas classificações e avaliações dele.\nEspero que aprenda diversas coisas novas com as aulas e que também se divirta bastante com o jogo que estaremos criando nelas!\n\n\nAbraços :)",
      "target_audience": [
        "Desenvolvedores Indie de Jogos",
        "Quem está querendo entender um pouco mais sobre criação de jogos na Godot",
        "Quem sempre quis criar um jogo 2D"
      ]
    },
    {
      "title": "【한글자막】 Unreal Engine 5 : 강의 하나로 Dynamic Sky 시스템 완벽 마스터하기!",
      "url": "https://www.udemy.com/course/unreal-engine-5-dynamic-sky-weather-system-korean/",
      "bio": "Blueprint, Niagara VFX, Material 을 통해 언리얼 엔진 5 에서 Dynamic Sky 및 날씨 시스템 구축하기",
      "objectives": [
        "드래그 앤 드롭 조명 솔루션이 포함된 Dynamic Sky 시스템",
        "해당 날씨에 맞는 여러 하늘 프리셋",
        "달과 별이 있는 밤하늘",
        "셀 폭격 및 삼면 투영 머티리얼",
        "물리적 머티리얼을 사용한 다양한 풋스텝 FX",
        "다양한 나이아가라 날씨 VFX 제작",
        "고급 파티클 동작을 위한 커스텀 나이아가라 모듈 스크립트 작성",
        "Material /Niagara /Blueprint 에 대한 모범 코딩 사례 알아보기",
        "아름다운 Volumetric 클라우드 머티리얼 제작하기",
        "조명에 대한 다양한 속성 심층 분석",
        "날씨 시스템용 데칼 머티리얼 만들기",
        "블루프린트 및 머티리얼 파라미터 수집을 통한 날씨 FX 애니메이션화하기"
      ],
      "course_content": {
        "Unreal Engine 5 : 강의 하나로 Dynamic Sky 시스템 완벽 마스터하기!": [
          "강의 소개",
          "Dynamic Sky 날씨 시스템에는 무엇이 필요한가요?",
          "자주 묻는 질문 몇 가지...",
          "시작 프로젝트 생성하기",
          "도움을 구하는 방법",
          "머티리얼 단축키 치트 시트"
        ],
        "낮 밤 사이클": [
          "낮 밤 사이클 섹션 개요",
          "환경 조명 믹서",
          "BP Dynamic Sky 액터",
          "구성 스크립트",
          "시간대",
          "달 회전 처리",
          "Blueprint 매크로",
          "미니 챌린지 답안",
          "밤 하늘",
          "블루프린트 속성 조정",
          "하늘 구체",
          "머티리얼 리프레셔",
          "밤하늘의 별",
          "버텍스 노멀 (Vertex Normal)",
          "채널 마스크 매개변수",
          "별 가시성",
          "달 (Moon)",
          "섹션 챌린지: 달 가시성",
          "작업 공유: 여러분의 하늘을 공유해보세요",
          "BP에서 더 많은 속성 조정하기",
          "선택적 챌린지: 나만의 태양 추가하기",
          "섹션 마무리"
        ],
        "구름 (Clouds)": [
          "구름 섹션 개요",
          "블루프린트 Enum",
          "2D 구름",
          "2D 구름 조정",
          "하늘 분위기 틴트",
          "블루프린트에서 2D 구름 조정",
          "평면 투영",
          "Volumetric 구름",
          "볼륨 질감",
          "Volumetric 고급 출력",
          "영향력 반경 리팩토링",
          "레이어 내 표준 고도",
          "구름용 매크로 변형",
          "Volumetric 구름 패닝",
          "블루프린트에서 Volumetric 구름 조정하기",
          "다중 샘플러 유형 지원",
          "작업 공유: 여러분의 Volumetric 구름을 공유해보세요",
          "섹션 챌린지: Volumetric 구름 변형",
          "선택 챌린지: 새로운 Volumetric 구름 변형",
          "섹션 마무리"
        ],
        "랜드스케이프": [
          "랜드스케이프 섹션 개요",
          "랜드스케이프 준비하기",
          "노이즈 스컬프팅",
          "텍스쳐 폭격 기본값",
          "텍스쳐 폭격 Voronoi",
          "삼면 투영 기본값",
          "삼면 투영 재구축",
          "UV 삼면 투영",
          "삼면 폭격",
          "작업 공유: 여러분의 머티리얼을 공유해보세요",
          "랜드스케이프 레이어 프로세스",
          "MF_TextureBombingVoronoi",
          "MF_ComputeLandscapeUV",
          "랜드스케이프 레이어 조합",
          "그라운드 레이어 기본 색상",
          "기본 색상 매개변수",
          "그라운드 레이어 노멀 및 ORD",
          "경사 레이어",
          "경사 블렌드",
          "작업 공유: 여러분의 랜드스케이프 머티리얼을 공유해보세요",
          "야간 설정 조정",
          "섹션 마무리"
        ],
        "눈오는 날씨": [
          "눈오는 날씨 섹션 개요",
          "눈 오는 날씨를 위한 조명",
          "데이터 에셋",
          "블루프린트 구조",
          "날씨 전환",
          "전체 새로 고침",
          "눈 블렌드 마스크",
          "MF_SnowyWeatherBlend",
          "머티리얼 매개변수 모음",
          "섹션 챌린지: 눈 객체 블렌드",
          "작업 공유: 여러분의 눈 블렌드를 공유해보세요",
          "Anim 알림",
          "블루프린트 매크로 라이브러리",
          "데칼 머티리얼",
          "나이아가라 리프레셔",
          "풋프린트 나이아가라 시스템",
          "작업 공유: 여러분의 향상된 실력을 공유해보세요",
          "날씨 입자 준비",
          "NMS_GetCameraProperties",
          "눈 입자",
          "눈 연기 입자",
          "나이아가라 시스템 구성 요소 토글",
          "섹션 과제: 사용자 매개변수",
          "눈 커버리지 애니메이션",
          "기본값 동기화",
          "눈 애니메이션 조정하기",
          "작업 공유: 여러분의 눈오는 날씨를 공유해보세요",
          "섹션 마무리"
        ],
        "비오는 날씨": [
          "비오는 날씨 섹션 개요",
          "비오는 데이터 에셋",
          "비오는 날을 위한 조명",
          "웅덩이의 속성",
          "잔물결 (Ripples)",
          "웅덩이 물결",
          "MF_GenerateRainyWeatherPuddles",
          "스무스 스텝",
          "비 토글",
          "리퀴드 마스터 머티리얼",
          "메인 빗방울",
          "거리별 밝기",
          "룩업 각도별 밝기",
          "충돌 이벤트",
          "빗방울 튐",
          "GPU 비",
          "섹션 챌린지: Rain FX 토글",
          "작업 공유: 여러분의 향상된 실력을 공유해보세요",
          "Rain FX 사용자 매개변수",
          "피지컬 머티리얼",
          "랜드스케이프 피지컬 머티리얼 출력",
          "물웅덩이 물튀김",
          "경고! 화려한 영상이 기다리고 있습니다!",
          "번개 플래시",
          "번개 볼트",
          "섹션 도전 과제: 번개 토글",
          "작업 공유: 여러분의 번개를 공유해보세요",
          "표면의 빗방울",
          "포스트 프로세스 빗방울 FX",
          "시스템에 포스트 프로세스 FX 추가",
          "궁극의 도전: 물웅덩이 애니메이션",
          "작업 공유: 여러분의 솔루션을 공유해보세요",
          "솔루션: 물웅덩이 애니메이션",
          "섹션 마무리"
        ],
        "완강하신 것을 축하드립니다!": [
          "최종 수정하기",
          "다이나믹 낮 밤 사이클",
          "런타임 중 날씨 전환",
          "다음 단계는 무엇인가요?",
          "언리얼엔진 5 학습여정 계속하기...",
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "Material 또는 Niagara 경험이 필요함 (또는 과거에 머티리얼 또는 나이아가라 강좌를 수강한 적이 있는 분)"
      ],
      "description": "언리얼 엔진 5의 Dynamic Sky 및 날씨 시스템을 위한 최고의 강의에 오신 것을 환영합니다.\n이 강의에서는 역동적인 낮과 밤의 주기, 매혹적인 volumetric 클라우드, 발자국과 복잡한 눈 입자로 완성된 실감나는 눈 날씨, 실제와 같은 빗방울과 웅덩이, 매혹적인 번개 효과가 있는 비오는 날씨까지 갖춘 강력한 스카이 시스템을 제작하는 여정을 시작하게 될 것입니다.\n무엇보다도 처음부터 모든 것을 함께 배워나간다는 점이 가장 큰 장점입니다.\n\n\n첫 번째 섹션에서는 기본적인 낮과 밤의 주기를 만드는 방법을 살펴보겠습니다.\n별, 달, 디테일한 변수를 활용하여 스카이 시스템의 모양을 미세 조정해보도록 하겠습니다. 이 여정은 간소화된 조명 솔루션을 제공하는 Blueprint Dynamic Sky Actor 를 제작하는 것으로 시작됩니다. 거기서부터 블루프린트 매크로를 사용하여 기본 시간대 시스템의 기초를 다지는 구성 스크립트를 사용합니다. 진행하면서 스카이 스피어 와 스카이 머티리얼 의 개념을 살펴보고 블루프린트 변수를 통해 커스터마이징 가능한 별과 달을 소개합니다.\n\n\n두 번째 섹션에서는 Dynamic Sky 시스템에 2D 클라우드와 volumetric 클라우드를 도입해 보겠습니다.\n이 모험은 블루프린트 enum 을 생성하여 뚜렷한 클라우드 모드를 정의하는 것으로 시작합니다.  그런 다음 이전 섹션에서 구축한 스카이 머티리얼을 개선하여 2D 구름을 매끄럽게 통합합니다. 또한 평면 투영에 대해 자세히 알아보고 하늘에 volumetric 클라우드를 투영하는 데 있어 평면 투영이 어떤 역할을 하는지 알아보겠습니다. 사실감을 높이기 위해 볼륨 텍스처와 volumetric 고급 출력을 살펴보고, 복잡한 디테일과 매력적인 모양을 위해 정규화된 고도 마스크와 매크로 변형을 활용합니다. 애니메이션으로 구름에 생기를 불어넣은 후에는 블루프린트에 더 많은 속성을 노출하여 최종 모양을 더욱 세밀하게 제어할 수 있게 됩니다.\n\n\n세 번째 섹션에서는 텍스처 bombing, 삼면 투영 및 경사 블렌딩을 가능하게 하는 자동 랜드스케이프 머티리얼로 보완된 기본 랜드스케이프를 구성해 보겠습니다.\n먼저 노이즈 텍스처를 사용하여 기본적인 랜드스케이프를 조각하는 것으로 프로세스를 시작합니다. 그런 다음 텍스처 bombing 과 삼면 투영 의 개념을 살펴보고 랜드스케이프의 타일링 기능을 혁신적으로 개선해 보겠습니다.\n\n\n네 번째 섹션에서는 발자국, 눈 입자, 풍경과 객체에 대한 눈 블렌딩, 동적 눈 블렌딩을 통해 시스템에 눈 내리는 날씨를 도입해 보겠습니다.\n그 여정은 테스트 환경에서 눈 내리는 날씨 조명을 살펴보는 것으로 시작됩니다. 데이터 에셋의 개념과 블루프린트 구조, 다양한 조명 속성과 날씨 전환 메커니즘의 저장소 역할을 하는 블루프린트 구조에 대해 소개합니다. 랜드스케이프와 객체 모두를 위한 눈 블렌드 마스크를 만든 다음, 글로벌 날씨 FX 제어를 위한 머티리얼 파라미터 컬렉션을 사용하는 방법에 대한 인사이트를 제공합니다. 또한 눈이 내리는 상황에서 발자국을 선택적으로 스폰하는 애님 노티파이, 블루프린트 매크로 라이브러리, 데칼 머티리얼, 나이아가라 시스템도 살펴봅니다. 또한 효율적인 파티클 생성을 위한 커스텀 나이아가라 모듈을 개발하여 이를 템플릿으로 사용하여 눈 파티클을 제작할 것입니다. 마지막으로 블루프린트 내에 타임라인을 사용하여 동적 눈 블렌딩을 구현할 것입니다.\n\n\n마지막 섹션에서는 빗방울, 물 웅덩이, 상호작용하는 스플래시, 번개, 포스트 프로세스 빗방울 FX로 완성된 비오는 날씨를 다뤄보겠습니다.\n이 여정은 비오는 날씨를 위한 새로운 데이터 에셋을 만드는 것으로 시작됩니다. 절차적 웅덩이를 생성하고 머티리얼 내에서 플립북 애니메이션을 사용하여 잔물결을 만드는 복잡한 과정을 자세히 살펴봅니다. 물결 생성을 위한 커스텀 머티리얼 함수와 웅덩이를 풍경과 블렌딩하는 방법도 다룹니다. 그런 다음 마스터 액체 머티리얼과 비 나이아가라 시스템을 구축하여 퍼포먼스가 뛰어난 비 FX를 제작하는 기술을 익히게 됩니다. 거리와 시야각에 따라 빗방울 밝기를 조절하기 위한 커스텀 나이아가라 입력 스크립팅과 도트 프로덕트 활용법까지 살펴봅니다. 콜리전 이벤트를 통한 스플래시 생성과 비 FX를 위한 사용자 파라미터들은 원활하게 통합될 것입니다. 또한 물리적 머티리얼의 개념과 표면 유형을 정의하는 방법을 살펴보고 캐릭터가 웅덩이를 밟을 때 스플래시를 스폰할 수 있도록 할 것입니다. 마지막으로 번개에 대한 머티리얼을 만들고 함께 제공되는 나이아가라 시스템에 대한 작업을 시작합니다. 마지막으로 표면 빗방울을 시스템의 사후 머티리얼로 변환합니다.\n\n\n이 강의는 언리얼 엔진 5에서 하늘과 날씨 시스템을 만들기 위한 가장 포괄적인 내용을 담은 온라인 강의입니다.\n강의 내내 응용 과제와 섹션 과제를 통해 각 단계를 이해하고 따라할 수 있는 능력을 기를 수 있습니다!",
      "target_audience": [
        "Dynamic Sky 시스템을 구축하는 방법을 알고 싶은 중급 언리얼 사용자",
        "고급 Material 및 Niagara 기술을 배우고자 하는 분"
      ]
    },
    {
      "title": "Crie jogos do ZERO ao AVANÇADO sem complicações",
      "url": "https://www.udemy.com/course/crie-jogos-do-zero-ao-avancado/",
      "bio": "Crie jogos sem digitar códigos, do zero.",
      "objectives": [
        "Criar diferentes tipos de jogos",
        "Criar jogos sem precisar digitar sequer uma linha de código",
        "Criar jogos multiplayer",
        "Inserir anúncios dentro do jogo",
        "Criar sistema de inventário"
      ],
      "course_content": {},
      "requirements": [
        "Nenhum pré requisito"
      ],
      "description": "Muitas pessoas sonham em criar os próprios jogos e não sabem por onde começar, ou até mesmo já tentaram criar jogos mas se frustraram com programações complicadas. Mas agora é a OPORTUNIDADE de você começar a criar jogos do zero e sem dificuldades.\n\n\nE o melhor de tudo é que você criará os seus jogos sem precisar ficar decorando e digitando códigos, pois utilizaremos a GDEVELOP, que é uma ferramenta leve, gratuita e que nos permite programar sem ter que digitar códigos, através do sistema de programação visual, que é prático, rápido e intuitivo.\n\n\nEste curso é ideal para você que está começando totalmente do zero ou até mesmo já iniciou no mundo da criação de jogos, mas não se deu muito bem com a programação via códigos.\n\n\nNo curso você aprenderá desde os conceitos mais básicos para entender o que é um jogo, os elementos que o compõe, etapas do desenvolvimento, passando por temas mais práticos, até chegar em assuntos intermediários como a criação de jogos multiplayer online.\n\n\nNo decorrer das aulas, você aprenderá a criar jogos de nave, plataforma e estilo RPG, cenários de diferentes tipos, gerenciar animações de personagens e inimigos, sistemas de ataques, menus de configurações do jogo, programar diferentes tipos de inimigos, criação de sistema de inventário, como colocar anúncios em jogos mobile e até mesmo como criar um jogo multiplayer online e muito mais.\n\n\nO curso é totalmente online e você pode ver e rever as aulas quando, como e quantas vezes quiser.\nAs aulas são bem práticas e você aprenderá passo a passo e de forma bem explicada, para que até o mais leigo no assunto possa aprender.",
      "target_audience": [
        "Pessoas leigas que querem aprender a criar jogos",
        "Pessoas que começaram a criar jogos mas não se adaptaram com a programação via script",
        "Designers e artistas que querem criar jogos sem ter que programar via scripts"
      ]
    },
    {
      "title": "Desarrollo de videojuegos 2D con Game Maker Studio",
      "url": "https://www.udemy.com/course/curso-de-desarrollo-de-videojuegos-con-game-maker-studio/",
      "bio": "Aprende a crear videojuegos 2D y llega incluso a poder vivir bien siendo tu propio jefe con este apasionante trabajo",
      "objectives": [
        "Crear sus propios juegos",
        "Conocer la terminología propia del mundo del desarrollo de videojuegos"
      ],
      "course_content": {},
      "requirements": [
        "Este curso parte de cero, y por tanto, los únicos requisitos para hacerlo son las ganas de aprender, y la ilusión de crear tus propios videojuegos"
      ],
      "description": "Aprende los conceptos y herramientas básicas para desarrollar videojuegos 2D. Podrás vivir bien de forma autónoma con esta actividad.\nDesarrolla videojuegos 2D y vive de ellos, sin jefes, sin horarios, dirigiendo tu propia vida.\nEste curso está desarrollado de forma totalmente práctica, creando un videojuego sencillo para ilustrar todos los temas presentados.\nCon tests de aprovechamiento del curso, para que controles tu  avance.\nGrupo SYNCROM tiene dos divisiones dedicadas al desarrollo de videojuegos para Android desde 2013. Este curso es fruto de toda la experiencia de todos estos años.\nUsamos el mejor motor de desarrollo 2D del mercado: Game Maker Studio, que lo podrás descargar de forma gratuita.\nProfesores expertos en desarrollo de videojuegos, de México, Argentina y España.\n\n\nEste curso te ofrece todo el poder de tu imaginación para poder diseñar tus propios videojuegos.\n\nAprender a desarrollar videojuegos es una actividad dentro del mundo de desarrollo de software muy diferente a la creación de software de gestión general, como hacen las mayoría de los programadores.\nSi eres programador de aplicaciones de gestión, tendrás que aprender nuevos conceptos, y pensar de forma diferente como hasta ahora lo habías hecho.\nSi nunca has programado nada, te iniciaremos poco a poco en este mundo con el estupendo entorno de desarrollo que es Game Maker Studio.\nEste motor de desarrollo de videojuegos permite compilar a varios sistemas, como Windows, Android, iOS, Ubuntu, etc. Los módulos de exportación a estos sistemas son de pago, pero podrás descargarte una versión gratuita para Windows.\nSi ves que esto es tu vida, como ya lo hemos visto muchas personas, podrás dedicarte a hacer juegos para Android, o para iOS, y vivir de ello, sin jefes, sin horarios, sin presiones.\nEsto no será sencillo. No decimos que lo sea. Pero cualquier persona puede hacerlo, si decide tomárselo en serio, como un trabajo. Pero estará trabajando ciertamente en algo realmente gratificante y divertido.\nAl finalizar el curso, serás capaz de crear tus propios juegos. Es cierto que al principio serán sencillos, pero a medida que vayas consolidando los conocimientos, cada vez serán más complejos y con más funcionalidades.\nComo CEO de Grupo SYNCROM no me queda otra cosa que desearte que aprendas mucho y que sea hoy el día en que empieces a cumplir tus sueños.\nHace ya unos años tuve una visión: Hacer videojuegos para Android.\nHoy en día, esa visión se ha convertido en una rama fundamental dentro de la estrategia de la empresa, con dos divisiones creadas para ello, y con profesionales de diferentes zonas del mundo (Europa, Asia y Latino América).\nEste curso ha sido desarrollado por personas que van a formar a personas, por profesionales que van a formar a profesionales, por gente con mucha ilusión y pasión por los juegos, que esperan formar a otros como ellos.\nTe esperamos a tí.\nAprende a crear videojuegos y fórjate un futuro profesional.",
      "target_audience": [
        "Este curso está dirigido a todas aquellas personas que deseen aprender a crear videojuegos de una forma sencilla y divertida",
        "Si te gustan los juegos 2D y quieres aprender cómo poder hacerlos, este es tu curso",
        "Si tienes decisión, y ganas de aprender, y quieres dedicarte profesionalmente al mundo de los videojuegos, este es tu curso",
        "Si quieres crear un negocio basado en la explotación de tus propios juegos en Google Play, este es tu curso"
      ]
    },
    {
      "title": "Criando um Game Avançado com a Unreal Engine e Blueprints",
      "url": "https://www.udemy.com/course/unreal-4-blueprints-criando-o-game-swat-combat-street-war/",
      "bio": "Desenvolva jogo TPS avançado com IA - BT, inimigos com armas, animações avançadas, aranhas que atacam e tudo sem codar!",
      "objectives": [
        "CURSO TOTALMENTE COMPATÍVEL COM A UNREAL ENGINE 5! CRIEI DIVERSAS AULAS EXPLICANDO TELAS, BLUEPRINTS E COMO FAZER O CONTEÚDO DO CURSO JÁ NA UNREAL 5",
        "Colocar inimigos patrulhando a rua, nos terraços dos prédios e que percebem e atiram no jogador na rua e do alto dos edifícios",
        "Criar Pick-up de Health(Saúde), Pickup de Ammo(Munição) e Pick-up de Arma que permite o jogador aumentar o Heath, a Munição e adquirir uma nova arma",
        "Como habilitar e programar seu game para utilização de Gamepad/Joystick Padrão XBOX",
        "Como criar Blueprints de Animação mais avançadas com maior controle das animações do jogo",
        "Criar Waypoints (pontos de patrulhamento) do inimigo",
        "Criar inimigos inteligentes que atiram, patrulham e perseguem o jogador de forma mais avançada",
        "Aprender a criar e utilizar Animations Montages",
        "Como Fazer Retargetting de Animações para Personagem da Mixamo sem a necessidade de digitar todos os bones mapeados para o skeleton padrão da Unreal",
        "Como criar evento de disparo contínuo da arma sem necessitar do evento tick",
        "Aprender a evitar que o jogador entre no cenário com programação exclusiva elaborada no curso que cria capsula de colisão de tamanho dinâmico",
        "A trabalhar e programar Sound Cues para inserir Som dos passos do Jogador, Som ambiente, Som de Recarregamento da Arma, Som Tiro, Som Ar-condicionado, etc",
        "Inserir Efeito de Muzzle Flash nas armas do Jogador e Inimigo",
        "Criar HUDs para aparecerem na tela com indicação de quantidade de munição para cada uma das duas armas do jogador"
      ],
      "course_content": {},
      "requirements": [
        "Vontade de aprender a desenvolver um game do zero",
        "Computador com Internet",
        "Requisitos mínimos para executar a Unreal Engine 4: Sistema Operacional: Windows 7/8/10 64-bits Processador: Quad-core Intel ou AMD, 2.5 GHz ou superior e Memória: Mínimo de 8 GB RAM",
        "Placa de vídeo: NVIDIA GeForce 470 GTX ou AMD Radeon 6870 HD series card ou superiores com DirectX 11, DirectX 12 ou superior. Obs: Placas com DirectX versão 10 não funcionam com os atuais editores da Unreal Engine"
      ],
      "description": "Garantia de 30 dias da Udemy. Invista no seu futuro sem risco!\nCrie seu game TPS com patrulhas, inimigos e aranhas com  IA - BT(Inteligência Artificial com Behaviour Tree) usando apenas Blueprints e meu suporte completo durante todo o curso.\nVocê já domina o básico da Unreal e quer elevar seu nível e criar jogos que impressionam pela qualidade e complexidade?\nEste curso é o próximo degrau evolutivo. Aqui você não vai criar um protótipo simples, mas sim um jogo TPS (Tiro em Terceira Pessoa) avançado, repleto de mecânicas profissionais e inteligência artificial robusta, tudo sem escrever uma única linha de código.\nTRANSFORME SEU PORTFÓLIO. Crie um projeto que demonstre habilidades de alto nível:\nSISTEMAS DE IA AVANÇADOS: Inimigos que patrulham, investigam e atacam com comportamento realista. Crie soldados alienígenas que usam táticas de combate e aranhas gigantes que atacam em bando.\nANIMAÇÕES RESPONSIVAS: Vá beyond do básico. Domine Blend Spaces, Animation Montages e o poderoso Layered Blend per Bone para criar animações complexas de troca de arma, recarga e recoil (coice) que afetam apenas partes específicas do corpo.\nSISTEMA DE ARMAS COMPLETO: Programe um arsenal com troca de armas, mira (zoom), dano variável por parte do corpo, HUD dinâmico mostrando munição e vida, e efeitos visuais impactantes como muzzle flash e marcas de bala.\nCONTROLE POLIDO: Configure inputs refinados para teclado e joystick (gamepad), garantindo uma jogabilidade suave e profissional.\nAMBIENTE IMERSIVO: Integre um level design urbano detalhado, sons espaciais com atenuação (passos, tiros, ambiente) e sistemas de partículas para sangue e impactos.\nSISTEMAS DE GAME DESIGN: Implemente pick-ups de vida e munição, dano balanceado e todos os elementos de um jogo completo, do início ao fim.\nNÃO APENAS APRENDA, IMPRESSIONE. Este é o projeto que vai destacar seu portfólio.\nPara quem é este curso?\nPara quem já superou o básico da Unreal Engine e das Blueprints e está pronto para mergulhar em conceitos avançados de game design, arquitetura de sistemas e inteligência artificial. É o treinamento que separa um hobbyist de um desenvolvedor preparado para desafios maiores.\nChegou a hora de criar algo épico.\nClique em \"Inscrever-se\" e domine o desenvolvimento avançado de jogos.\nOi Tudo bem com você?\nEu sou o Professor Marcos Pacheco e vou te guiar e te apoiar durante todo este curso...\nO curso foi gravado utilizando a Unreal Engine 4. Caso prefira, você pode instalar a versão 4.27.2 e seguir exatamente como mostrado nas aulas. No entanto, se já quiser usar a Unreal Engine 5, incluí diversas aulas explicando as principais diferenças de interface entre as versões. E, se tiver qualquer dúvida, estou à disposição para te ajudar.\nAprenda a desenvolver um jogo TPS completo na Unreal Engine, com inimigos armados que atiram e perseguem o jogador, patrulhas no chão, nos andares superiores e nas varandas, além de aranhas que detectam e atacam o jogador com inteligência artificial. E o melhor: tudo isso sem escrever uma linha de código, utilizando apenas os Blueprints da Unreal Engine. Durante todo o curso, você contará com meu suporte como professor formado em Computação, pronto para tirar todas as suas dúvidas e te guiar passo a passo no processo de criação do jogo do curso.\nA Unreal Engine se destaca como uma ferramenta extremamente versátil, oferecendo valor significativo em diversas indústrias. Este software não apenas impulsiona o campo dos jogos, que continua a crescer e ser lucrativo, mas também abre portas para oportunidades interdisciplinares em setores diversos. O grande desafio reside em suprir a crescente demanda por profissionais qualificados, uma necessidade especialmente urgente no Brasil, onde a disponibilidade de talentos especializados ainda é restrita.\nA Unreal Engine é o mais famoso e principal motor (Engine) para desenvolvimento de jogos da atualidade.\nÉ a mesma tecnologia que deu vida ao Fortnite, Gears of War, Borderlands, Batman: Arkham, Mass Effect, Final Fantasy VII Remake, e muitos outros games de sucesso.\nE o melhor:\nVocê não precisa ter conhecimentos prévios para começar a desenvolver seus games\nVocê pode programar jogos inteiros sem usar códigos usando as Blueprints\nÉ totalmente gratuita em sua versão full (completa).\nVocê terá a sua disposição diversos mapas, assets, personagens, materiais, animações e muito mais totalmente gratuitos no marketplace da Epic Games.\nNeste curso você irá evoluir ainda mais seu aprendizado de desenvolvimento de jogos utilizando a Unreal Engine e as Blueprints. Durante este curso, você mergulhará na prática e aprenderá a criar um jogo avançado no estilo \"tiro em terceira pessoa\" (TPS).\nAs Blueprints são representações visuais que utilizam nós e conexões para configurar a lógica de todos os elementos do seu jogo, sem a necessidade de escrever código manualmente. Elas são uma poderosa ferramenta da Unreal Engine, permitindo que você desenvolva funcionalidades complexas de forma intuitiva e acessível, mesmo sem proficiência em programação convencional.\nVocê irá aprender usando Blueprints:\nA programar inimigos ainda mais inteligentes e armados, que atiram e perseguem o jogador.\nInimigos que fazem patrulhamento e atacam quando percebem a presença do jogador.\nInimigos que atiram no player do telhado dos prédios\nAranhas gigantes que vagam pelo cenário de uma cidade e que atacam o jogador ao perceber sua presença.\n\n\nVocê pode se inscrever neste curso sem riscos, pois terá 30 dias para experimentar o curso ou ter seu dinheiro de volta, com  reembolso garantido pela Udemy.\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\n\n\nObserve a seguir de forma detalhada o que você irá aprender neste curso:\n\n\nCriar um jogo desde a criação do projeto vazio até a finalização do game.\nProgramar os inputs de movimentação do jogador pelo teclado(andar, correr, atirar, recarregar, etc).\nDeixar seu game apto para ser jogado com joystick(gamepad).\nCriar blend spaces de animação para modo de equipar e trocar armas do jogador e inimigo.\nComo criar uma Animation Montage e ter maior controle sobre as animações a exemplo do tranco(coice) que arma fornece ao corpo do jogador quando ele está atirando.\nConfigurar a colocação e retirada das armas das costas do jogador.\nUtilizar o nó Layered blend per bone que vai permitir você programar animações para atuar ao mesmo tempo e em regiões específicas do corpo do jogador.\nCriar de waypoints (pontos de patrulhamento do inimigo) onde o inimigo (soldado alien) irá ficar patrulhando locais de rua, terraços e sacadas estabelecidos no seu level design.\nProgramar a inteligência artificial para que, dentre outros comportamentos, o inimigo perceba a presença do jogador, saia do patrulhamento e comece a atirar no jogador.\nProgramar a inteligência artificial para que as aranhas aliens gigantes e inimigos percebam a presença do jogador e comecem a atacar\nFazer retargeting de animações apenas com a carga(load) de um arquivo pré-configurado sem a necessidade de digitar todos os bones(ossos) de mapeamento de skeleton(esqueleto) mixamo-unreal.\nCriar pick-ups que poderão ser coletados pelo jogador para obter nova arma, aumentar health(saúde) e munição.\nInserir e configurar atenuação de diversos sons para o game: som ambiente, som de recarga das armas, som dos passos do jogador, som dos passos das aranhas, som ar-condicionado, som impacto das cápsulas de balas(bullets) no chão, som de tiro diferente para cada arma e outros.\nInserir e configurar no seu projeto um level design gratuito e avançado de cena urbana.\nCriar, inserir e programar indicadores de tela(HUDs) com ícones de indicação de munição de cada arma, saúde (health) do jogador e mira crosshair das armas.\nProgramar zoom-in e zoom-out da visualização da visão do jogador.\nProgramar quantidade de dano diferente que cada arma  e ataque irá causar tanto no jogador quanto nos inimigos a depender da parte do corpo atingida pelos tiros das armas e ataques de aranha.\nInserir e configurar sistema de partículas de sangue vermelho para inimigo e sangue verde para aranha.\nInserir e configurar efeitos visuais com marcas de balas com decal materials e muzzle flash da arma com partículas.\nE muito mais...\n\n\nA área de games no Brasil está bombando e é só o começo...\nNo Brasil, mais de 1.000 estúdios estão ativos na indústria de desenvolvimento de jogos, evidenciando o crescimento e a variedade do mercado nacional (Fonte: Visual Capitalist). Globalmente, existem inúmeros estúdios espalhados principalmente pela América do Norte, Europa e Ásia, com destacada presença no Japão, China e Coreia do Sul.\nAlém dos mais de 1.000 estúdios ativos na indústria de desenvolvimento de jogos, existem várias outras empresas relacionadas ao setor de games, totalizando um número significativo no mercado. As oportunidades para um programador de games são diversas e incluem:\n\n\nDesenvolvimento de Jogos: Criação de jogos para diferentes plataformas como consoles, PC e dispositivos móveis.\nRealidade Virtual e Aumentada: Exploração de novas tecnologias imersivas para experiências de jogo inovadoras.\nEducação e Treinamento: Desenvolvimento de simuladores educacionais e programas de treinamento usando tecnologia de jogos.\nAplicativos Corporativos: Desenvolvimento de aplicativos empresariais com gamificação para engajamento de funcionários e clientes.\nE-sports: Oportunidades em desenvolvimento de software para competições de e-sports e plataformas de streaming.\nCarreira de Desenvolvedor de Jogos\nAtualmente, há cerca de 3,2 bilhões de jogadores em todo o mundo, com previsão de alcançar 3,5 bilhões até 2025 (Fonte: Visual Capitalist). Essa vasta base de consumidores continua a impulsionar a demanda por profissionais qualificados no setor de desenvolvimento de jogos.\nOportunidades com a Unreal Engine\nPara aqueles familiarizados com a Unreal Engine, as possibilidades vão além da criação de jogos:\nJogos: Desenvolvimento de jogos AAA, realidade virtual e aumentada.\nArquitetura: Visualização e modelagem arquitetônica em tempo real.\nMarketing: Produção de conteúdos interativos e envolventes para campanhas publicitárias.\nEngenharia: Simulações e prototipagem de produtos.\nCinema: Uso em efeitos especiais e animação.\nNão espere mais... Com um mercado em ascensão e a oportunidade de testar por 30 dias, embarque agora nesta empolgante jornada de aprendizado para iniciar sua carreira como desenvolvedor de jogos, com meu apoio integral durante todo o percurso.\nVocê pode se inscrever neste curso sem riscos, pois terá 30 dias para experimentar o curso ou ter seu dinheiro de volta, com  reembolso garantido pela Udemy,\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\nPossuo mais de 20 mil alunos na Udemy e a maioria deles está satisfeito com minha didática de ensino ;)\nAproveite!\n\n\nVocê já pensou em fazer um curso na Udemy onde o professor realmente responde suas dúvidas, te orienta, e te acompanha de verdade durante toda a sua jornada?\nPois é exatamente isso que você vai encontrar nos meus cursos.\nDesde a primeira aula, você pode enviar quantas perguntas quiser, relacionadas aos conteúdos do curso, e eu estarei lá para te apoiar, corrigir seus erros e esclarecer suas dúvidas.\nNada de estudar sozinho ou ficar travado sem saber o que fazer. Aqui o aprendizado é interativo e com acompanhamento.\nEntão, use e abuse da ferramenta de perguntas da Udemy Ela é seu canal direto comigo — e eu adoro quando os alunos participam.\n\n\nUm grande abraço,\nNos encontramos já...\nProfessor Marcos Pacheco",
      "target_audience": [
        "Qualquer Pessoa Interessada em Desenvolver Games mesmo sem saber programar",
        "Programadores e Programadoras que desejam mais uma alternativa de desenvolvimento de games usando ferramenta poderosa de desenvolvimento de games de forma visual: as blueprints"
      ]
    },
    {
      "title": "Intensivo de Videojuegos y Metaversos en VR. Diploma y Cert.",
      "url": "https://www.udemy.com/course/intensivo-de-videojuegos-en-vr-diploma-y-cert/",
      "bio": "Crea un videojuego completo para Realidad Virtual y el Metaverso usando el motor gráfico Unreal Engine desde cero.",
      "objectives": [
        "Gracias a nuestro curso podrás crear videojuegos tanto para ordenador, como para Realidad Virtual, de una manera sencilla y divertida."
      ],
      "course_content": {
        "Introducción": [
          "Compromiso de calidad",
          "Curso Introducción al Unreal Engine sin conocimientos previos",
          "Introducción",
          "Recursos para el curso",
          "Teoría sobre la Realidad Virtual",
          "Recursos para Unreal"
        ],
        "Nuestro Player": [
          "Player VR",
          "Equipación"
        ],
        "Enemigos": [
          "Planteamiento enemigo",
          "Industria Enemiga",
          "Ejercicio Enemigo I",
          "Solución Ejercicio Enemigo I",
          "Enemigos y Animaciones",
          "Root Bone",
          "Configurar Enemigo",
          "Ejercicio II",
          "Solución Ejercicio II",
          "Find Look At Rotation",
          "Ataque de Enemigos",
          "Anim Notify"
        ],
        "Nuestro Player 2.0": [
          "Linetrace y Daño",
          "Ejercicio I",
          "Solución Ejercicio I",
          "Headshot",
          "Ejercicio II",
          "Solución Ejercicio II",
          "Munición",
          "Ejercicio III",
          "Solución Ejercicio III",
          "Linterna",
          "Particle System",
          "Particle System 2.0",
          "Ejercicio IV",
          "Solución Ejercicio IV",
          "¡Recuerda! No abuses de las partículas."
        ],
        "Enemigo 2.0": [
          "Child Actor",
          "Nuevo enemigo operativo",
          "Nuevo enemigo operativo 2.0"
        ],
        "HUDs": [
          "Heridas",
          "Heridas 2.0",
          "Creación de menu",
          "Widget Interaction",
          "Ejercicio",
          "Solución Ejercicio",
          "Cambiar de Player",
          "GAME OVER",
          "GAME OVER 2.0",
          "Ejercicio II",
          "Solución Ejercicio II"
        ],
        "Sonidos": [
          "Physics Material",
          "Sonidos",
          "Sonidos 2.0"
        ],
        "Nivel y Ambientación": [
          "Configurando la atmósfera",
          "Enriquecer escena",
          "Farola y retoque final"
        ],
        "DIPLOMA": [
          "RECIBE TU DIPLOMA certificado por Epic Authorized Instructor"
        ],
        "CLASES BONUS PARA VR": [
          "Introducción clases Bonus",
          "LineTrace",
          "Función LineTrace",
          "Teleport",
          "Ejercicio",
          "Ejercicio",
          "Personalizar Teleport",
          "Personalizar Teleport 2"
        ]
      },
      "requirements": [
        "No hay ningún requisito. Solo las ganas de aprender y trabajar en esta industria."
      ],
      "description": "Te enseñamos a crear un videojuego completo, desde cero, con Realidad Virtual. El futuro de los juegos de ordenador y consola es la VR, y ahora es el momento perfecto para que te adelantes al resto y hagas tus propios juegos con este curso.\nLa industria de la VR está adelantando en beneficios a los juegos tradicionales de forma muy rápida. No tardes en actualizarte o aprender desde cero.\nAl finalizar el curso te entregamos un DIPLOMA acreditado por un Epic Authorized Instructor.\n\n\n-Recuerda que tienes nuestro curso básico gratuito de Unreal Engine para dominar los conceptos básicos-\nSOBRE NOSOTROS, LA CALIDAD DE NUESTROS CURSOS Y EL APOYO QUE NOS DA DE LA INDUSTRIA:\nVRSchool es una escuela que lleva funcionando desde 2015, con más de 200 alumnos en sus instalaciones en Málaga, Sevilla y Madrid.\nAhora nos volvemos digitales, y también partnerts de Epic (creadores del Fortnite), volviéndonos Unreal Engine Authorized Instructors. Además de contar con el apoyo y experiencia de la gran productora digital VirtualMente.\nNuestros alumnos han trabajado, junto a nosotros, para Intel, Toshiba, Ford, San Miguel, la cadena FOX (en la serie Vis a Vis), DELL, y muchas más grandes empresas, por lo que todos nuestros cursos, y alumnos, se nutren de todos estos trabajos.\nContamos además con grandes premios por parte de Art Futura, Fantastic Film Fest, Festival de Málaga o los premios Enterprise 2.0.\nUnreal Engine 4 es un sencillo motor gráfico, fácil de aprender, pero tan potente que es usado en series de televisión como The Mandaloria, para crear decorados en tiempo real, o producciones cinematográficas, en anuncios de TV, videojuegos triple A, y mucho más. Lo que lo convierte en el principal motor gráfico del mercado del fotorealismo en tiempo real.\nIgualmente es una gran herramienta para empresas, para crear mundos y experiencias para la Realidad Virtual, o incluso para ArchViz, con representaciones fotorealistas de infoarquitecturas en tiempo real.\nA pesar de lo sencillo de su uso, y de aprenderlo, en poco tiempo se pueden crear experiencias increíbles.\nTe invitamos a que hagas todos nuestros cursos, y te lleves los diplomas que damos con cada uno de ellos. De esta forma podrás trabajar para las grandes marcas que ya trabajan con nosotros, en nuestra escuela, nuestra productora, y nuestros alumnos.\nNo pierdas esta oferta de ser profesional en una de las industrias donde más se está buscando personal.\n¡APÚNTATE AHORA!",
      "target_audience": [
        "Para cualquiera que quiera iniciarse en este software de forma rápida y crear videojuegos."
      ]
    },
    {
      "title": "Stwórz Własną GRĘ PLATFORMOWĄ w UNITY",
      "url": "https://www.udemy.com/course/stworz-wlasna-gre-platformowa-w-unity/",
      "bio": "Tworzenie PIERWSZEJ Gry w UNITY",
      "objectives": [
        "Stworzenie swojej pierwszej gry",
        "Programowania w Unity C# i korzystanie z dobrych praktyk pisania skryptów",
        "Eksportowanie gry + Udostępnienie gry do internetu",
        "Tworzenie ciekawych map",
        "Tworzenie interfejsu użytownika",
        "Ruch i Fizyka Postaci: Kurs zapewni umiejętności niezbędne do programowania płynnych ruchów postaci, skakania i interakcji z otoczeniem",
        "Importowanie plików do silnika Unity",
        "Obsługa i zapoznanie się z interfejsem Unity i Visual Studio"
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp",
          "Instalacja potrzebnego oprogramowania",
          "Stworzenie pierwszego projektu",
          "Omówienie interfejsu Unity"
        ],
        "Dodatkowe": [
          "Podstawy programowania w Unity C#"
        ],
        "Tworzenie Gry Platformowej": [
          "Asset Store - Importowanie plików używanych w kursie",
          "Przygotowanie pierwszej mapy gry",
          "Stworzenie i pourszanie gracza",
          "Cinemachine - Kamera podążająca za graczem",
          "Skok Gracza",
          "Animacje postaci",
          "Zbieralne przedmioty i System Prefabów",
          "Programowanie: Przydatne atrybuty w Unity",
          "Dźwięki",
          "Pierwszy interfejs i wyświetlanie punktów",
          "Pierwsza przeszkoda",
          "Interfejs restartu poziomu",
          "Dodanie pierwszego przeciwnika",
          "Pokonywanie przeciwnika",
          "Particle System - Efekty w grze",
          "Efekt zbierania owoców",
          "Platforma na, którą można wskoczyć",
          "Podwójny skok",
          "Przygotowanie drugiego poziomu",
          "Dodanie latającego przeciwnika",
          "Przechodzenie między poziomami",
          "Przygotowanie trzeciego poziomu",
          "Trzeci strzelający przeciwnik",
          "Tło w grze",
          "Menu Główne"
        ],
        "Finalizacja Gry": [
          "Build gry",
          "WebGL",
          "Opublikowanie gry na serwisie Itch.io"
        ]
      },
      "requirements": [
        "Nie musisz posiadać żadnych umiejętności."
      ],
      "description": "Stwórz Własną GRĘ PLATFORMOWĄ w UNITY - Twój przewodnik od pomysłu do finalnej publikacji!\n\nMarzysz o stworzeniu własnej gry platformowej? Chcesz przekształcić swoją wizję w rzeczywistość i podzielić się nią ze światem? Ten kurs jest dla Ciebie! Niezależnie od tego, czy jesteś kompletnym początkującym, czy masz już pewne doświadczenie w tworzeniu gier, ten kurs pomoże Ci zrealizować Twoje marzenie o stworzeniu własnej gry.\nPo ukończeniu tego kursu będziesz potrafić:\nStworzyć swoją pierwszą grę platformową – Zrozumiesz podstawy tworzenia gier w Unity i zrealizujesz swój projekt od zera.\nZrozumieć podstawy programowania w C# – Odkryjesz moc języka programowania C#, który jest sercem wielu gier tworzonych w Unity. Nawet jeśli nie masz doświadczenia w programowaniu, w kursie nauczysz się podstaw tego języka.\nProjektować intuicyjne interfejsy – Nauczysz się tworzyć przyjazne dla użytkownika menu i interfejsy gry, które przyciągną i zatrzymają graczy.\nPublikować swoją grę w internecie – Dowiesz się, jak udostępnić swoją grę światu, dzięki czemu inni gracze będą mogli cieszyć się Twoim dziełem.\nTworzenie gier to nie tylko umiejętność, ale też pasja. Ten kurs da Ci solidne podstawy, by rozpocząć przygodę z tworzeniem gier i otworzyć przed Tobą drzwi do fascynującego świata gier. Każdy moduł kursu został zaprojektowany tak, abyś czuł się pewnie na każdym etapie tworzenia swojego projektu, od koncepcji po publikację.\nDołącz do nas i rozpocznij swoją podróż w świecie tworzenia gier platformowych w Unity!",
      "target_audience": [
        "Kurs jest przeznaczony dla początkujących chących postawić swoje pierwsze kroki w Unity, lub chcących zgłębić swoją wiedzę z tworzenia gier"
      ]
    },
    {
      "title": "2023 Unity C# || Sıfırdan Hyper Casual Oyun Geliştirme",
      "url": "https://www.udemy.com/course/2022-unity-c-sifirdan-hyper-casual-oyun-gelistirme/",
      "bio": "Sıfırdan \"Colorful Ball 3D\" hyper casual oyununu geliştirip Android ve Ios marketlerde yayınlamayı öğren.",
      "objectives": [
        "Hyper Casual oyun mekanikleri ve algoritmaları.",
        "Unity ile sıfırdan Android ve IOS marketlerde Hyper Casual oyun yayınlama.",
        "Reklam sistemi, uygulama içi satın almalar ve animasyon tasarımları.",
        "Efektler, arayüz ve oyun tasarım teknikleri."
      ],
      "course_content": {
        "Başlangıç": [
          "Nasıl bir oyun yapacağız",
          "Telefon ekranını efektif kullanma",
          "Projenin temel ayarlarının yapılması",
          "Dokunmatik kontroller ve topun hareket etmesi",
          "Hareket metoduna karar verme",
          "İndirilebilir Dosyalar"
        ],
        "Hareket Metodu ve Topun Sınırlandırılması": [
          "Velocity yöntemi",
          "Vektörel sınırlandırılmaların oluşturulması",
          "Renklendirilmelerin yapılması",
          "Hareket metodunun optimize edilmesi",
          "Telefon için oyun başlangıcı oluşturulması",
          "Vektörel sınırlandırmaların hatalarının giderilmesi"
        ],
        "Çarpışmalar ve Efektler": [
          "Ana oyuncunun farklı renklerle çarpışması",
          "Ana oyuncunun dağılma efekti",
          "Kamera sallanma hareketi",
          "Ekrana beyaz efekt gelmesi",
          "Basit level tasarımı",
          "TextMeshPro kullanımı",
          "Particle System kar efekti"
        ],
        "Arayüz Tasarımları ve Animasyonlar": [
          "Reklam kaldırma ve mağaza butonları",
          "Animasyon oluşturma",
          "Ayarlar arayüzünün oluşturulması",
          "Ayarlar butonu ve layout grup animasyonları",
          "Buton animasyonlarının scriptle bağlanması",
          "Buton ses ve titreşim aç kapat işlemleri",
          "Gizlilik sözleşmesi ve kullanıcı şartlarının oyuna linklenmesi",
          "Butonlar için kayıt sistemi",
          "Hareket ettir animasyonu ve yazıların oluşturulması"
        ],
        "Level Oluşturma ve Sahne Düzeni": [
          "İlk levelin tasarlanması",
          "Oyun başlayınca arayüzün kapanması",
          "Sahneyi resetleme ve zamanın yavaşlatılması",
          "Kamera ayarları ve test etme",
          "Arayüz butonlarına basınca oyunun başlaması hatası",
          "Objeleri yok etme ve telefonlar için optimizasyon"
        ],
        "Oyun Sonu ve Altın Kazanma": [
          "Oyun sonu ayarları ve altın kazanma fonksiyonu",
          "Altın kazanma arayüz düzenlemesi",
          "Oyun sonu ekranı tasarımı",
          "Oyun sonu ekranının scripte bağlanması",
          "Level ilerleme barı tasarımı",
          "Level ilerleme barının scripte bağlanması kodlanması",
          "Test etme ve kontroller"
        ],
        "Google Admob Reklam Entegrasyonu (Güncellendi 2023)": [
          "Admob kurulumu",
          "Banner reklamı",
          "Interstitial (Geçiş) reklamı",
          "Rewarded (Ödüllü) reklamı",
          "Ödüllü reklamların scriptle düzenlenmesi",
          "Oyun sonu penceresi reklam ödül animasyonu",
          "Reklam ödül verme ve yeni Admob Sdk entegrasyonu"
        ],
        "(Opsiyonel) Unity Ads Reklam Entegrasyonu": [
          "Unity Ads kurulumu",
          "Unity Ads Interstitial (Geçiş) reklamı",
          "Unity Ads Rewarded (Ödüllü) reklamı",
          "Unity Ads Banner reklamı"
        ],
        "Loading Ekranı": [
          "Loading sahnesi oluşturulması",
          "TextMeshPro hatası ve level sisteminin oluşturulması",
          "DontDestrolonLoad kullanımı ve banner reklam trafik kaybı önlenmesi"
        ],
        "Mağaza Sistemi - Satılacak Itemler": [
          "Trail Renderer efekt oluşturma",
          "Uygulama içi satın alma arayüzünü oluşturma",
          "Efektlerin mağazadaki görsellerini düzenleme ve resimleri ölçeklendirme",
          "Satın almaları düzenleme",
          "Itemleri scriptle bağlama",
          "Kilit sistemi",
          "Kilit kayıt sistemi",
          "Item otomatik seçme ve kilit sistemini kaldırma",
          "IAPManager - Mağaza sistemi entegrasyonu",
          "Reklam kaldırma ve altın satın alma",
          "Reklam kaldırıldıktan sonra kayıt işlemleri"
        ]
      },
      "requirements": [
        "Unity orta seviye ve ileri seviye bilgisi olan geliştiriciler içindir.",
        "Örneklerle kendini pekiştirmek ve yeni şeyler öğrenmek isteyen herkes için."
      ],
      "description": "Kursumuz Hyper Casual oyun geliştirmek isteyen ve Android-IOS marketlerde kendi oyununun yayınlanmasını isteyen herkese yöneliktir. Son zamanlarda birçok mobil oyun geliştiren firma, Hyper-Casual oyun alanına yönelmektedir. Bunun sebebi kısa zamanda çok para kazanma isteği ve yapımlarının diğer oyunlara göre daha basit olmasıdır. Sizde bir firmada çalışmak veya kendi firmanızı kurmak istiyorsanız bu kurs tam size göre. Bir oyunun en başından en sonuna nasıl yapıldığını çok detaylı bir şekilde işlemekteyim. Oyun içerisinde yaptığımız herşey öylesine değil, tam anlamıyla mağazada kaliteli bir oyun olarak çıkması açısından, yüksek çözünürlüklü grafikler ve animasyonlar kullanılarak yapılmaktadır. Burada gördüğünüz metodlar ve algoritmalar ilk defa görüyor isen başlarda seni zorlayabilir ancak oyun yapmak isteyen herkesin bu süreçlerden geçtiğini unutma. Bu kursu tam anlamıyla izleyip kendini zorlayıp buradaki yeni şeyleri öğrendiğin zaman, eminim ki yaptığım bu Hyper-Casual oyunun kat ve kat daha iyilerini yapacağından eminim. Yaratıcılığın bir sınırı olmadığı gibi yaşında bir öneminin olmadığını unutma. Nereden başlayacağım diye düşünme, direk kendini yangının içine at. Oyun yapımında gördüğün her detay seni daha da geliştiricektir. Şimdiden kolay gelsin :).\nKursumuza toplamda 3 adet Hyper-Casual oyun eklenicektir sürekli olarak güncellenicektir. Kurs ile ilgili fikir sahibi olacağın başlıklar :\n1-Hyper Casual oyun nedir ve nasıl olmalıdır ?\n2-Protatip nedir ve nasıl yapılır ?\n3-Hyper-Casual geliştiren firmalar nasıl çalışmaktadır?\n4-Unity ile nasıl animasyon ve arayüz tasarlanır ?\n5-Reklam sistemi nasıl olmalıdır ?\n6-Uygulama içi satın alma sistemi nasıl olmalıdır ?\n7-Oyun mekaniği nasıl tasarlanmalıdır ve oyuncunun gözünden nasıl bakılmalıdır ?\n8-Android ve IOS mağazalara nasıl oyun eklenir ?",
      "target_audience": [
        "Unity ile oyun geliştirmek isteyen herkes bu örneklerle kendini çok daha ileri bir seviyeye taşıyabilir.",
        "Hyper Casual oyun firmalarında çalışmak isteyen herkese yönelik.",
        "Bir şeylerin temelini ve gidişatını, oyunun baştan sona tam anlamıyla nasıl yapıldığını öğrenmek isteyen herkes için.",
        "Kendi oyunlarına sahip olmak ve mağazalarda yayınlamak isteyen herkese yönelik."
      ]
    },
    {
      "title": "Desarrollo de juegos con Unreal Engine de 0 a profesional",
      "url": "https://www.udemy.com/course/desarrollo-de-juegos-con-unreal-engine-4-de-0-a-profesional/",
      "bio": "La guía completa para crear juegos, mundos interactivos realistas o aplicaciones en Unreal Engine de forma profesional",
      "objectives": [
        "Crear un videojuego 3d AAA con inteligencia artificial, menús, distintos niveles y con acabados profesionales listo para publicarse en Steam, consolas u otras plataformas.",
        "Aprender nociones de diseño de juego básicas y avanzadas así como de balance de jugabilidad y curva de dificultad.",
        "Utilizar Unreal Engine 4 para desarrollar videojuegos tanto indies como Triple A",
        "Dominar los increíbles blueprints de Unreal Engine 4 para poder programar juegos sin necesidad de picar código de forma eficiente y limpia.",
        "Conocer, usar y crear de forma profesional los materiales, partículas, sistemas de interfaces, de clases, luces y herramientas para generar entornos, personajes y animaciones de Unreal Engine 4.",
        "Usar software profesional externo de creación de modelos, texturas y sonidos para importar y usar en Unreal Engine 4.",
        "Aplicar nociones de teoría del color y de la estética para aplicarlas a los videojuegos; en otras palabras, desarrollar el \"ojímetro\"!"
      ],
      "course_content": {
        "Introducción": [
          "Presentación del curso",
          "Conoce a tu profesor Carlos Coronado",
          "Curso compatible con Unreal Engine 5",
          "Curso premiado por EPIC GAMES, empresa propietaria de Unreal Engine!",
          "Acerca de las dudas en el curso",
          "Archivos del curso y juego completo para descargar",
          "Clases en directo gratuitas en Twitch",
          "Discord hispano de Unreal Engine para desarolladores",
          "Clases y desarrollo profesional de juegos en directo por TWITCH! Únete!"
        ],
        "Descargar y configurar Unreal Engine": [
          "Descargar Epic Games Launcher",
          "Descargar Epic Games Launcher para Mac",
          "Interfaz de Epic Games Launcher",
          "Descarga de Unreal Engine 4 y creación de proyecto"
        ],
        "La interfaz de Unreal Engine 4": [
          "técnicas para navegar por el visor de forma rápida",
          "Crear, mover, rotar y escalar objetos",
          "Poner objetos con la pestaña \"Modes\"",
          "Breve introducción a los geniales Blueprints",
          "Compila tu primer juego!"
        ],
        "Creación de entornos con Unreal Engine": [
          "Luz dinámica y luz estática",
          "Ventajas de la luz estática",
          "La niebla y la luz solar",
          "Crea una cueva!",
          "Conclusiones tras tu primera cueva",
          "Crea una cueva estupenda Parte I",
          "Crea una cueva estupenda Parte II",
          "Conclusiones tras crear tu primer entorno realista!"
        ],
        "La pestaña Learn, marketplace y recursos AAA gratuitos": [
          "CAMBIOS en el Marketplace. Este desaparece y llega FAB",
          "Assets de Infinity Blade NO disponibles en Fab y como solucionarlo!",
          "Introducción al marketplace",
          "Navegar por el marketplace",
          "Assets GRATIS AAA de Epic Games",
          "Content Examples",
          "Explorando Content Examples I",
          "Explorando Content Examples II",
          "Explorando Content Examples III",
          "Importando assets AAA gratuitos a nuestro proyecto"
        ],
        "Diseñar un juego": [
          "Introducción al diseño de juegos",
          "El Gameloop",
          "Niveles y retos variados",
          "Previsión de la programación"
        ],
        "Crear nuestro primer nivel jugable": [
          "Crear un nuevo nivel",
          "Creando la parte izquierda",
          "Creando la parte elevada derecha",
          "Puertas, paredes y jugabilidad vertical",
          "Pequeños ajustes y desactivar Auto-Exposure",
          "Skybox 3DExterior y zona no jugable"
        ],
        "Programa sin saber picar código gracias a los blueprints": [
          "Qué son los blueprints y qué programaremos",
          "Character blueprint, class blueprints y level blueprints",
          "Mejorando al jugador",
          "Sobre la programación de blueprints",
          "Creando un botón mediante \"Begin Overlap\"",
          "Creando una puerta interactiva",
          "Mejorando a la puerta",
          "El peligro de Add Actor Local Offset",
          "Animando a la puerta como es debido",
          "Repaso a lo aprendido",
          "Refinando la puerta",
          "Descanso! Importar partículas",
          "Crear una puerta doble",
          "Si has llegado hasta aquí, FELICIDADES!!",
          "Level Blueprints VS Class Blueprints",
          "Crear un item coleccionable",
          "Componentes de una Class",
          "Destroy Actor y Event Overlap",
          "Set Actor Hidden Ingame",
          "Cast de una class al jugador",
          "Tu primer contador",
          "La importancia de la class jugador",
          "Comunicación entre level blueprint y jugador",
          "Límite de contador automático con Get All Actors of Class",
          "Repaso a lo aprendido",
          "EXTRA! Jugando con Strings y Append",
          "Acostúmbrate a compilar en development y shipping"
        ],
        "Arte y diseño de entornos": [
          "Introducción",
          "Tapar geometría y cohesión",
          "Integrar objetos con la zona de gameplay",
          "Diferenciar zonas por estética",
          "Continuidad y aspecto",
          "MUY IMPORTANTE! Narrativa Ambiental",
          "Jugando con la suciedad",
          "Detalles y creatividad para resolver problemas",
          "Zonas especiales",
          "Zonas interiores especiales",
          "Vegetación",
          "El toque final"
        ],
        "Iluminación": [
          "Iluminación básica",
          "Iluminación de relleno",
          "Iluminación creativa",
          "Teoría general de la iluminación",
          "La importancia de la silueta",
          "Conectando el fondo con la zona de gameplay",
          "Lightmaps"
        ]
      },
      "requirements": [
        "Solo conocimientos básicos de informática son requeridos.",
        "Utilizaremos Unreal Engine 4 (que enseñaremos a descargarlo en las primeras clases) la gran mayoría de clases del curso.",
        "Empezamos DESDE CERO (nivel amateur) hasta llegar a NIVEL AVANZADO (listo para entrar a trabajar como Junior en la industria del videojuego o crear tus propios juegos de calidad AAA)",
        "PC con Windows 7/8/10, x64 o bien un Mac con Mac OS X 10.9.2 o superior.",
        "Para algunas secciones concretas también utilizaremos software gratuito como Audacity e incluso 3ds Max y Photoshop (para aprender a importar tus propios modelos, texturas y sonidos dentro de Unreal Engine!) Por otra parte, si solo quieres centrarte en aprender Unreal en el curso se te ofrece una carpeta con todo el contenido que vayamos a crear fuera de Unreal por si solo quieres aprender de Unreal (la gran parte del curso). En pocas palabras, nos centraremos en aprender Ue4 pero también tocaremos otros programas complementarios!"
      ],
      "description": "En este curso aprenderás todo lo necesario  para dominar Unreal Engine 4 y Unreal Engine 5 mientras creas un juego. Este curso te permitirá entrar a trabajar con Unreal en la industria del videojuego o crear tus propios juegos de calidad profesional para consolas (Switch Ps4, Xbox), dispositivos móviles o plataformas como Steam. Unreal Engine 4 es el motor más famoso y versátil de la industria y con el han sido desarrollados infinidad de juegos de prestigio como Fortnite o Rocket League y también infinidad de juegos Indies!\n\nQué hace este curso especial?\n\nEl hecho que diferencia este curso de otros es que todo lo explicado (desde la primera clase hasta la última) se explica mediante ejemplos prácticos al mismo tiempo que desarrollamos un juego de altísima calidad tanto gráfica como jugable; crearemos al mismo tiempo que aprendemos desde sistemas de menús y configuraciones gráficas a inteligencia artificial pasando por creación de entornos 3d realistas o conceptos de diseño y balanceo de juego!\n\nNinguna de las clases están enfocadas a explicar teoría, todo lo contrario! Siempre, siempre usaremos al mismo tiempo que explicamos los conceptos aprendidos en ejemplos prácticos que nos servirán para desarrollar un juego al mismo tiempo. Este es el orden en el que aprenderemos y aplicaremos los conocimientos:\nEmpezaremos descargando Unreal Engine y familiarizándonos con su Interfaz y herramientas básicas.\nCrearemos un entorno 3d hyper realista a las pocas horas de empezar el curso para que veas que eres capaz de crear entornos de calidad AAA de forma rápida y eficiente.\nTras esta prueba de fuego exploraremos el contenido gratuito de calidad AAA que nos trae Unreal y desarrollaremos el documento de diseño (GDD) del juego que desarrollaremos durante el curso.\nUna vez con las ideas claras iniciaremos nuestra odisea por los increíbles blueprints, el sistema de programación de Unreal Engine 4 super potente en el que no tendrás que picar ni una linea de código. Con estos conocimientos realizaremos la base de nuestro juego.\nDespués de crear la base jugable nos dedicaremos a acabar un nivel a nivel estético, texturas, modelos, iluminación etc para darle el toque final mientras aprendemos distintas herramientas de creación de niveles y sistemas avanzados de iluminación.\nSeguidamente refinaremos la jugabilidad con el módulo 2 de blueprints en el que haremos la interfaz, el evento de muerte y veremos métodos para solucionar bugs y errores.\nEs en este punto en el que veremos un aspecto muy importante pero olvidado por muchos curso y desarrolladores: el sonido. Ambientaremos nuestro juego con sonidos profesionales y aprenderemos a crear nuestros propios sonidos.\nEn la siguientes secciones aprenderemos aspectos avanzados como aprender a importar texturas a Unreal, la creación de materiales y partículas y distintos trucos para ambientar nuestros niveles y dar variedad a nuestros entornos.\nPor fin llegaremos ya a la inteligencia artificial y los blueprints avanzados con los que crearemos un enemigo capaz de perseguirnos y crearemos el menú principal del juego con incluso opciones de configuración gráfica.\nPara acabar, acabaremos el resto de niveles del juego y aprenderemos a importar nuestros propios modelos desde un software externo y crear nuestras propias partículas dentro de Unreal Engine. Una vez realizado todo esto haremos la compilación final del juego. NOTA IMPORTANTE: El juego compilado viene incluido listo para descargar en el curso!\n\n\nQué nos hace unos buenos maestros?\nJuan Gabriel Gomila es actualmente el instructor en Español de Udemy con más estudiantes en sus cursos, activo desde 2015 y profesor de la universidad de Mallorca. Cuenta con su propia empresa de creación de videojuegos llamada Frogames y ha lanzado una infinidad de juegos para diversas plataformas.\n\nCarlos Coronado Muñoz (instructor con el que aprenderéis durante gran parte del curso) ha desarrollado más de 5 juegos en solitario con Unreal Engine 4 para diversas plataformas entre las que se incluyen Nintendo Switch, Playstation 4, Steam o VR. Algunos de sus juegos como MIND: Path to Thalamus han ganado premios internacionales como el TITANIUM Indie Game of the Year Award o son considerador directamente GOTY por desarrolladores, youtubes y periodistas de prestigio como Infernium. Además, es profesor de creación de juegos con Unreal Engine 4 y proyectos desde hace más de 4 años en la universidad de Barcelona (la única universidad de habla hispana que logra llegar al TOP 50 de QS World University Rankings). Además, sus cursos sobre Unreal Engine han sido premiados por EPIC GAMES con un Epic Mega Grant!",
      "target_audience": [
        "Apasionados de los videojuegos con ganas de crear sus propios juegos con herramientas profesionales y gratuitas! (Unreal Engine 4 es el motor de Fortnite, Rocket League y muchisimos otros!)",
        "Creadores y estudios de videojuegos con ganas de aprender Unreal Engine 4 y profundizar en el.",
        "Diseñadores, artistas y programadores que quieran trabajar con Unreal Engine en la industria del videojuego."
      ]
    },
    {
      "title": "Competitive Multiplayer Game Development Course on Unity",
      "url": "https://www.udemy.com/course/competitive-multiplayer-game-development-course-on-unity/",
      "bio": "How to create a simple multiplayer game project in unity",
      "objectives": [],
      "course_content": {
        "Wstęp": [
          "Intro",
          "PART I - Setting up the project",
          "PART II - Creating the player and movement",
          "Part III - Creating an attack",
          "PART IV - Spawning mines",
          "PART V - Adding effects and UI",
          "PART VI - Creating a menu scene and building the project"
        ]
      },
      "requirements": [
        "Basic knowledge of Unity Engine. Basic understanding of creating C# scripts for unity."
      ],
      "description": "After this course, you will be able to:\n- Create a multiplayer project from ground up\n- Set up the server for your project online\n- Make use of Elympics matchmaking system\n\n\nPART I - setting up the project\nHow to set up your own project? After first part of the course, it will be a piece of cake! Moreover, all the necessary assets you will be using in developing your project are here! Download them and let’s begin!\n\n\nPART II - creating the player and movement\nAfter setting up the project, it’s time to create a moving player character, that responds to your input and keeps it’s position consistent between the instances.\n\n\nPART III - creating an attack\nNow, with your character created, it’s time to arm yourself with combat skills. In this part, you will give the player the ability to attack, block and damage his opponent!\n\n\nPART IV - spawning mines\nHow to develop more combat options? By spawning synchronized objects and giving the player an ability to spawn mines that will arm and explode on collision with a player!\n\n\nPART V - adding effects and UI\nDon’t forget about the art aspect of the game! In this part you’ll connect visual effects and UI to what’s happening in the game. You will connect the health bar to the synchronized HP value of the player, and give him a small particle effect, triggered by being damaged.\n\n\nPART VI - creating a menu scene and building the project\nTo finish your project, you will create a menu scene, and hook it up to the matchmaking system provided by the Elympics plugin. Then you’ll learn how to create your project's server and client builds.",
      "target_audience": [
        "Unity Engine users on any level, that could be interested in learning how to develop basic server authoritative multiplayer games."
      ]
    },
    {
      "title": "(55+ SAAT) Unity 2023,C#| Sıfırdan Unity ile 10 Oyun Projesi",
      "url": "https://www.udemy.com/course/unityoyun/",
      "bio": "Unity Eğitimi || Unity 2D || Unity 3D || Unity 2018 || Unity 2019 || Unity 2021 || Unity 2022 || Unity 2023 || Unity",
      "objectives": [
        "Unity oyun motoru ile 2D ve 3D oyunlar geliştirebileceksiniz.",
        "C# programlama diline hakimiyetinizi arttıracaksınız.",
        "Unity ile geliştirdiğiniz oyunları Internetten ve Android Market'ten paylaşabilecek hale gelecekseniz.",
        "Nesneye yönelik programlama mantığını öğreneceksiniz.",
        "Multiplayer oyun yapabileceksiniz.",
        "Sıfırdan ileri seviyeye 2D ve 3D oyun programlamayı öğreneceksiniz."
      ],
      "course_content": {
        "Unity Kurulumu": [
          "KURSUNUZA HOŞGELDİNİZ",
          "LÜTFEN OKUYUNUZ - Bu duyuru hem sizin hem de benim için oldukça önemlidir !",
          "Bir eğitim setine nasıl çalışmalıyız?",
          "Youtube Duyuru",
          "Unity 2018.1.0 ve Visual Studio'yu 2017 Kurulumu",
          "Unity Sürümleri Hakkında",
          "Windows için Unity 2019.3 ve Visual Studio 2019 Kurulumu",
          "MacOS işletim sistemi için Unity Hub Notu",
          "Macbook için Unity 2019.3 ve Visual Studio 2019 Kurulumu",
          "Kurulumlar ile ilgili özet notu"
        ],
        "Bilgilendirme - Tanıtım": [
          "Kursa nasıl çalışmalıyız?",
          "Bir oyun nasıl yapılır, basamakları nelerdir?",
          "Unity oyun motorunu kısaca tanıyalım...",
          "Soru/Cevap bölümünü nasıl kullanmalıyız?"
        ],
        "Oyunlarımızı internete yükleyip oynama ve Android Uygulaması haline getirme": [
          "Aklınıza en son gelmesi gereken ama en başta gelen sorular ortadan kalksın :)",
          "Webgl ile internet ortamına oyunu yükleme",
          "Android telefonlar ve tabletler için oyunun çıktısını alma (apk)"
        ],
        "Unity Arayüzünü Tanıma": [
          "Unity'nin arayüzünü tanımaya giriş",
          "Sahne ve Oyun penceresi",
          "Hiyerarşi",
          "Assets ve Console",
          "Oyundaki bir nesneyi hareket ettirme, döndürme, boyutunu ayarlama",
          "Inspector Penceresi",
          "Assets kısmında klasörleme , Prefab ve Material"
        ],
        "Unity - C# Dersleri": [
          "Debug.Log (Console'a ilk yazımızı yazdırıyoruz.)",
          "Değişkenler",
          "Aritmetik İşlemler",
          "Sayısal değikenlerin değerini azaltma ve arttırma işlemleri",
          "If - else if - else yapısı",
          "Switch - Case yapısı",
          "While Döngüsü",
          "Do-While Döngüsü",
          "For Döngüsü",
          "Foreach Döngüsü",
          "Diziler - 1",
          "Diziler - 2",
          "Listeler",
          "Metotlar (Fonksiyonlar)",
          "Metotlar (Fonksiyonlar) (Ayrıntılı)",
          "Sınıf Kavramı (Class)"
        ],
        "Tavsiyeler": [
          "Ses ve görüntü dosyaları bulmak için faydalı siteler",
          "Ücretsiz görseller için",
          "Ücretsiz ses dosyaları için",
          "Ücretsiz yazı tipleri için",
          "Android ve IOS uygulama için TEST süreci"
        ],
        "1. OYUN - Sayı Tahmini Oyunu - **2D**": [
          "Debug.Log() Fonksiyonu, Neden kullanıyoruz?",
          "Kullanıcıdan Girdi (Input) nasıl alınır?",
          "Oyun mekaniğini oluşturuyoruz (Bilgisayarın tahmini).",
          "Fonksiyonların Kullanımı ve Kapsülleme Yöntemi"
        ],
        "2. OYUN - Adadan Kaçış Oyunu (Hikaye Tabanlı- Story Based) - **2D**": [
          "Sprites ne işe yarar ? (Oyunda kullanılan görseller)",
          "Hikayemiz ve Obje Kontrolü",
          "Düzenlenebilir Objenin Script'ini oluşturma",
          "Durumların Tamamlanması - Oyun Sonu"
        ],
        "3. OYUN - Sayı Tahmini Oyunu UI (Kullanıcı Arayüzü) - **2D**": [
          "Anchors ve Buton Ekleme",
          "Sahneler Arası Geçiş - Text Mesh Pro - Görsel Düzenleme",
          "Oyun Mekaniği - toString Fonksiyonu - Random.Range Fonksiyonu"
        ],
        "4. OYUN - Platform Oyunu - **2D**": [
          "Malzemeler",
          "Proje oluşturma",
          "Arkaplanı oluşturma",
          "Sahneye Player objesini dahil ediyoruz",
          "Zemin ve Player'a çarpışma kontrolü sağlayan objeyi ekliyoruz",
          "Player objemize vücut ekliyoruz",
          "Player objemize hareket kazandırıyoruz",
          "Player objesinin yüzünün yönünü ayarlıyoruz",
          "Player objesine zıplama işlevi kazandırıyoruz",
          "Player'a ok atabilme işlevi kazandırıyoruz",
          "Player'ın ardarda ok atmasını engelleme işlemleri",
          "Player'ın bekleme animasyonunun oluşturulması",
          "Player'ın yürüme animasyonunun oluşturulması",
          "Player'ın zıplama animasyonunu oluşturuyoruz",
          "Player'ın saldırı animasyonunu oluşturuyoruz",
          "Player'ın ölüm animasyonunu oluşturuyoruz",
          "Enemy'nin hareket işlemlerini yapıyoruz",
          "Oyundaki toplam düşman sayısını hesaplama",
          "Enemy'i öldürme ve bir takım düzenleme işlemleri",
          "Enemy öldüğünde efekt oluşturma işlemleri (BULUT GÖRSELİ EKLENECEK)",
          "Oyundaki ok sayısı kontrolünü sağlama işlemleri",
          "Oyun içerisindeki müzikleri ekleme işlemleri",
          "Okların sahneden çıktığında yok olması işlemleri",
          "Oyuna skor ekleme işlemleri",
          "Kameranın hareket işlemleri",
          "Oyuna SÜRE ekleme işlemi",
          "Panellerin UI aşaması",
          "Panellerin bir süre sonra devreye girmesi ve birtakım düzenlemeler",
          "Sahne geçişlerini sağlama ve birtakım düzenlemeler",
          "Oyun SONU Kontrolleri"
        ]
      },
      "requirements": [
        "Eğitim setimi hiçbir programlama ve Unity bilgisi olmayan kardeşlerim için hazırladım.",
        "Hiçbir kodlama bilgisine sahip olmanıza gerek yok. Anlamadığınız yerleri sizlere ayrıntısına kadar anlattım.",
        "Dersleri seyrederken anlamadığınız ya da aklınıza takılan bir yer olduğunda yardımcı olacağım. Gerekirse o dersi baştan anlatıp güncellerim.",
        "Unity 2D oyun üzerine yoğunlaşacağız. Büyük ölçüde ilerleme kaydettikten sonra 3D oyun kodlamaya da başlayacağız."
      ],
      "description": "Unity ile şimdilik 10 oyunu detaylı bir şekilde anlattım. Ve her geçen gün kursumuza yeni oyunlar eklenmeye devam edecektir.\nUnity eğitim setini bitirdikten sonra;\nC# programlama dilindeki Unity Kütüphanesini tanıyacaksanız ve etkili bir biçimde kullanabileceksiniz.\nUnity ile kendi 2D ve 3D oyunlarınızı yapabiliyor hale geleceksiniz.\nC# Programlama dilinin ilkelerini sıfırdan öğrenip bu dile hakimiyetinizi arttıracaksınız.\nUnity Araçlarını öğreneceksiniz ve Unity'i artık tanıyor hale geleceksiniz.\nOyun içerisinde var olan karakterlerin, nesnelerin nasıl oluşturulduğunu öğreneceksiniz..\nOyun geliştirmeyi sıfırdan ileri seviyeye kadar öğrenmiş olacaksınız.\nNesneye yönelik programlama mantığını öğreneceksiniz.\n3D Multiplayer oyun yapımını öğreneceksiniz.\nVe sayamadığım bir sürü bilgiye bu Unity eğitim setim sayesinde sahip olacaksınız.\n\n\nMOTİVASYONUNUZU YÜKSEK TUTUN! SADECE EĞİTİME ODAKLANIN!\n\n\n\"Başarmak için, başarıya olan tutkunuzun, başarısızlığa olan korkunuzu yenmesi gerekiyor.\" (Bill Cosby)\n“Riskler, insanların ölçüsüdür. Risk almayan insanlar, sahip oldukları şeyleri korumaya çalışırlar. Riskleri alanlar ise, sonunda daha fazlasına sahip olurlar.” (Paul Arden)\n“Sadece çok ileri gitme riskini alanlar ne kadar ileri gidebildiklerini görür.” (T.S. Elliot)\n“Yol sizi nereye götürüyorsa oraya gitmeyin, yol olmayan yerden gidin ki; iz bırakın.” (Ralph Waldo Emerson)\n\n\n“Konfor alanından çıkmadan başarı beklemek, aynı şeyleri yaparak farklı sonuçları beklemek kadar bizi yerimizde saydırır. Siz konfor alanınızdayken asla harika sonuçlar ortaya çıkmaz. Tüm göstermemiz gereken şey, biraz cesaret.”",
      "target_audience": [
        "Unity oyun motoru ile 2D ve 3D oyun yapımını öğrenmek isteyenler",
        "C# ile Unity 2D ve 3D oyun geliştirmek isteyenler",
        "Unity'de karşılaştığı probleme dair aklına takılan sorulara cevap bulmak isteyenler",
        "2D ve 3D oyun projesini nasıl yapmak istediğine dair cevap arayanlar. Yol haritası isteyenler.",
        "3D Multiplayer oyun yapmak isteyenler"
      ]
    },
    {
      "title": "Crea tu propio juego con Python",
      "url": "https://www.udemy.com/course/crea-tu-propio-juego-con-python/",
      "bio": "Uso de la libreria Pygame para desarrollo de juegos con Python",
      "objectives": [
        "Manejo de la libreria Pygame para la realizacion de juegos",
        "Que mas se puede hacer con Python",
        "Profundizar en el lenguaje de programacion Python",
        "Avanzar como desarrollador"
      ],
      "course_content": {
        "Introducción": [
          "Valoracion",
          "Instalacion de Pygame junto con los requisitos necesarios",
          "Plantilla base de Pygame"
        ],
        "Conceptos basicos": [
          "Dibujo de lineas y figuras",
          "Carga de imagenes y posiciones al azar",
          "Mover objetos",
          "Colisiones",
          "Textos",
          "Tiempo"
        ],
        "Creando nuestro juego": [
          "Preparativos juego meteoritos",
          "Clase Nave / Jugador",
          "Clase Misil / Disparo",
          "Clase Asteroide / Meteorito",
          "Colision",
          "Sonido",
          "Marcador",
          "GameOver",
          "Distribucion"
        ],
        "Extras": [
          "Instalacion de Python",
          "Editores",
          "Resumen de Python"
        ],
        "Acceso al codigo usado en el curso": [
          "Github 01",
          "Github"
        ],
        "Anexo": [
          "Mas contenido sobre Python"
        ],
        "Despedida": [
          "Finalizacion curso"
        ]
      },
      "requirements": [
        "Conocimientos de programacion con Python",
        "Recomiendo realizar antes el curso de Python"
      ],
      "description": "Mediante la libreria Pygame de Python podremos crear nuestros propios juegos con este lenguaje de programacion.\nPython es un lenguaje muy versatil con el que podras realizar todo tipo de aplicaciones.\nRecomiendo que estes familiarizado con este lenguaje, puedes ver mi curso de Python en Udemy o a traves de mi canal de youtube.\nUsado tambien para analisis y visualizacion de datos, machine learning, deep learning, etc.\nHay una enorme comunidad apoyando este lenguaje con numerosos frameworks y librerias que nos facilitan mucho la programacion.\nTanto Python como los editores mostrados y usados en el curso son Open Source, se pueden descargar y usar libremente.\nLos videos son totalmente practicos e iremos poco a poco avanzando con las estructuras basicas.\nSi como estudiante estas adaptado a otros editores o navegadores, no hay ningun problema en usarlo.\nPara cualquier duda no dudeis en contactar conmigo a traves de los diferentes canales y redes sociales, pasaros tambien por mi canal YouTube donde tengo numerosos tutoriales publicados sobre HTML, CSS, JavaScript, Python...\nEn el canal YouTube podreis acceder a los diferentes contenidos a traves de las listas que he creado para categorizar  los distintos tutoriales que he subido al canal.\nTambien podeis contactar via emal.\nEspero os sea util el curso y que sea un buen comienzo en la Programacion de juegos, muchas gracias.\nNota: si algun enlace del curso no funciona, cambia \"ticoticotaa\" por \"josecodetech\".",
      "target_audience": [
        "Desarrolladores de Python que quieran iniciarse en la creacion de juegos con Pygame"
      ]
    },
    {
      "title": "【Unityアプリ収益化入門2】コピペで簡単課金実装！！アプリ内課金を最短距離で実装する ユニティスマホアプリ開発コース",
      "url": "https://www.udemy.com/course/unity_in_app_purchase/",
      "bio": "ゼロから学ぶ課金実装！Google Play & App Store におけるアプリ内課金実装に必要な要素を一つずつ解説します。アプリ内課金の３要素である消費型・非消費型・月額課金の各実装方法とアプリリリース設定まで解説！テキスト学習可能！",
      "objectives": [
        "アプリ内課金(消費型・非消費型・月額課金)実装における全体の流れ",
        "後戻りのないアプリ内課金機能 実装の手順",
        "GooglePlayConsoleにおける課金機能設定方法と申請内容",
        "AppStoreConnectにおける課金機能設定方法と申請内容",
        "アプリ内課金を実装するアプリに必要なリリース設定",
        "アップルIDでのサインイン方法",
        "課金処理のコード処理内容",
        "サーバーでのデータ保存方法",
        "課金機能を使用したバナー広告削除機能の実装方法",
        "サーバーサービスにおける課金履歴の確認方法"
      ],
      "course_content": {
        "概要のご説明": [
          "概要のご説明"
        ],
        "初期設定": [
          "はじめに",
          "講座用パッケージの導入",
          "admobプラグインの導入"
        ],
        "サーバーを使用したログイン機能の実装": [
          "はじめに",
          "サーバーサービスの候補と選定理由説明",
          "選定したサーバーサービスの概要",
          "サーバー側アカウント登録&初期設定",
          "Unity側初期設定",
          "テスト通信",
          "サーバー側関数 呼び出しの基礎",
          "ログイン機能の実装"
        ],
        "【iOS必須】アップルアカウントログイン機能の実装　Sign In with Apple の実装": [
          "<追記有り>はじめに",
          "AppleDeveloper側　Sign in with Apple設定",
          "サーバー側　Sign in with Apple設定",
          "Unity側　Sign in with Apple実装",
          "Sign in with Apple 実機確認"
        ],
        "課金機能　実施内容全体の把握と前準備": [
          "はじめに メモ　課金の流れ実装の流れ　消費型、非消費型、サブスクを説明",
          "GooglePlay 課金決済手数料の軽減申請",
          "AppStore 課金決済手数料の軽減申請",
          "課金商品の価格とIDの決定"
        ],
        "課金機能　GooglePlay 課金設定": [
          "はじめに",
          "Unity側設定　UnityIAPの設定",
          "GooglePlay用 内部テストファイル作成",
          "Google Play Cosnole 内部テスト用ファイルアップロード",
          "Google Play Console テスターアカウントの設定",
          "Google Play Console 課金設定 消費型・非消費型",
          "Google Play Console 課金設定 月額課金"
        ],
        "課金機能　AppStoreConnect 課金設定": [
          "はじめに",
          "App Store Connect 有料App契約設定",
          "App Store Connect テスターアカウント設定",
          "App Store Connect 課金設定 消費型・非消費型",
          "App Store Connect 課金設定 月額課金"
        ],
        "サーバー側　課金設定": [
          "はじめに",
          "サーバー側 課金アイテム設定",
          "サーバー側 GooglePlay課金連携設定",
          "サーバー側 App Store Connect課金連携設定"
        ],
        "課金機能　コード実装〜実機確認": [
          "はじめに",
          "<追記有り>Unity 課金実装 スクリプト設定",
          "Unity 課金実装 オブジェクト設定",
          "実機確認用　GooglePlay内部テストファイルアップロード　内部テストリンク取得",
          "Android 内部テスト 実機確認",
          "Android 実機確認後 サーバー側とGooglePlayConsoleでの変化",
          "iOS実機確認",
          "iOS 実機確認後 サーバー側の変化",
          "AppStoreConnect「審査に関する情報」の設定",
          "アプリリリース時の注意点"
        ],
        "バナー広告 削除機能の実装": [
          "はじめに",
          "バナー広告の実装",
          "サーバーでのセーブ方法",
          "バナー広告 削除機能の実装",
          "バナー広告削除機能　実機確認"
        ]
      },
      "requirements": [
        "Unityチュートリアルを実施した経験があること",
        "Android端末をお持ちであること(GooglePlayへリリースする場合)",
        "iOS端末をお持ちであること(AppStoreへリリースする場合)",
        "macOSのPCをお持ちであること(AppStoreへリリースする場合)"
      ],
      "description": "〓アップデート情報〓\n2025年 8月　レクチャー39：Unity 課金実装 スクリプト設定\n記事内にUnityIAP 5.0.1対応のコードを追記しました。\n\n\n2022年12月　セクション7：課金機能 AppStoreConnect 課金設定\nレクチャー31：App Store Connect テスターアカウント設定\n記事を最新のAppStoreConnectページに対応しました。\n\n\n2022年10月　セクション9：課金機能 コード実装～実機確認\nレクチャー39：Unity 課金実装 スクリプト設定\n記事内にUnityIAPパッケージのバージョンアップに伴うエラー対応について追記しました。\n\n\n2022年 5月　セクション4：【iOS必須】アップルアカウントログイン機能の実装 Sign In with Apple の実装\nレクチャー13：はじめに\n記事内に Sign In with Apple 実装要否の解釈を追記しました。\n\n\nセクション9：課金機能 コード実装～実機確認\nレクチャー39：Unity 課金実装 スクリプト設定\n記事内にリストア機能の実装方法を追記しました。\n\n\n2021年11月　セクション９「アプリリリース時の注意点について」の記事に\nサブスクアプリのApple審査リジェクト内容詳細と対策を追記しました。\n\n\n\n\n〓コースの説明〓\nこの講座はUnity製スマホアプリに課金機能を付けることができる講座となっております。\n画像付きのテキストでテキストベースでの復習もサポート。\n\n\nこの講座は以下の方を対象としています。\n・Unityでアプリ課金収入を得たい方\n・課金実装手順を知りたい方\n・時間がないので効率的に開発を進めたい方\n・サーバーでのレシート検証方法を知りたい方\n・実際に動くコードがほしい方\n\n\n＜概要＞\n具体的な解説内容としては、消費型・非消費型・月額課金の課金3種類全ての実装方法を解説します。\n購入ボタンが押されたら、無料のサーバーサービスを使って、不正がないか検証、購入判定を行うことができるようになります。\niOSでは、サーバーサービスを使うと、アップルIDでのサインイン機能が審査の観点から必要なため、その実装も行います。\nまた、具体例として、課金によるバナー広告削除機能の実装についても解説しています。\n\n\n＜詳細＞\n課金の種類は大きく分けて３種類あり、それぞれについて実装することができるようになります。\n消費型 課金　：パズドラの魔法石のように使うとなくなってしまう課金\n非消費型 課金：バナー広告削除などの一度購入したらずっと効果が続く課金\n月額課金　　：動画視聴サービスの視聴権利を付与するような月額課金です。\nこちらは、サブスクリプションの略でサブスク課金と言われたりします。\n\n\nまた、課金処理を進めるにあたって、行わなければならないのは、購入の検証です。\n課金決済をユーザーが行うと、ストア側から電子的な購入データであるレシートを発行します。\nそのレシートの正当性を検証して、正しいレシートである場合にのみサービスを提供する必要があります。\nこれをレシート検証と言います。こちらは、端末上で行う「ローカル検証」とサーバー上で行う「リモート検証」があります。\nローカル検証では改ざんの危険があること、課金の履歴が確認できないという問題がありますので、\nリモート検証で、不正防止を行い、課金の履歴をサーバー上で確認できるようにしています。\n検証というと難しく聞こえるかもしれませんが、すべてサーバーサービス(10万ユーザーに達するまで無料)が\n代わりに処理するので難しいことは不要で実装することができます。\n\n\n\n\n「ネットの情報で課金実装はできるのではないか？」と疑問を持たれた方もいらっしゃると思います。\nネット上には課金実装の情報があることは確かです。しかし、情報がすごく断片的であったり、\n本職の方が書かれていて難しすぎてよくわからない、情報が古い、そもそも間違っている、といった現状となっています。\n私が行ったように、いろいろな情報を集めて、実装まで行うことは可能だとは思います。\nしかし、その過程でいくつも問題が発生し、私はかなり回り道をしました。詳細は講座内でお話ししますが、\n1、2ヶ月くらいかけた実装が無駄になった経験もしました。\nこの講座は、私のように回り道をしないよう最短距離で課金実装を行える内容としています。\n\n\n\n\n〓注意点〓\n最後に注意点が3点あります。\n・リリースについて\n本講座の内容で課金機能を実際に運用できており、内容に問題がないと考えていますが、\n実際のお金の処理となりますので、自己責任のもとリリースを行ってください。\n・ご質問について\nオリジナルプロジェクトについてのご質問はサポート対象外とさせていただきます。\n・動画について\n私はしゃべるのが得意ではないので、サンプルの動画を見ていただき、\n音声について懸念がある方は購入を控えて下さい。ただ、ほぼ全ての動画に付けているテキストには力をいれていますので、\n動画を確認せずとも実装できる内容にはしております。\n\n\n\n\nそれでは、興味がある方は購入をお願い致します。\n※ご満足いただけない場合、30日以内であれば返金が可能です。",
      "target_audience": [
        "Unity製スマートフォンアプリで収入を得たい方",
        "Unity製アプリで課金機能を実装したい方",
        "アプリ内課金の実装の流れを学びたい方",
        "最短で課金機能を実装したい方",
        "実際に課金機能が動作するコードが欲しい方"
      ]
    },
    {
      "title": "Temel Unity Dersleri - Sıfırdan 6 Adet Oyun Yapımı",
      "url": "https://www.udemy.com/course/unity-dersleri/",
      "bio": "Oyun geliştirme sektöründeki kariyerinize burdan başlayın. Oyun yaparak programlama öğrenin!",
      "objectives": [
        "Kursu bitiren her ogrenci C# ve Unity Oyun Motorunu kullanarak oyun gelistirebilecektir.",
        "Kurs sirasinda yapilan 6 adet oyun projesini portfolyolarina ekliyebileceklerdir."
      ],
      "course_content": {
        "Giris ve Yuklemeler": [
          "Kursa Hosgeldiniz",
          "Neden Unity?",
          "Unity'yi Bilgisayariniza Yuklemek",
          "Ilk Projemiz"
        ],
        "Unity Temel Bilgiler": [
          "Unity Arayuzune Genel Bakis",
          "Navigasyon ve Pozisyonlama",
          "Sahne Ekrani",
          "Oyun Ekrani",
          "Toolbar",
          "Hiyerarsi",
          "Proje Penceresi",
          "Inspector Penceresi",
          "Isik Penceresi",
          "Component Tabanli Mimari",
          "Prefabler"
        ],
        "Proje: 1 - Text Tabanli Macera Oyunu": [
          "Text Tabanli Macera Oyunu - 1",
          "Text Tabanli Macera Oyunu - 2",
          "Text Tabanli Macera Oyunu - 3",
          "Text Tabanli Macera Oyunu - 4",
          "Text Tabanli Macera Oyunu - Build Almak"
        ],
        "Proje: 2 - UI": [
          "Yeni Bolumler Olusturmak",
          "Baslangic Leveli",
          "Kazanma ve Kaybetme Levellari",
          "Oyun Leveli"
        ],
        "Proje: 3 - Flappy Bird": [
          "Proje Dosyalari",
          "Flappy Bird - 1",
          "Flappy Bird - 2",
          "Flappy Bird - 3",
          "Flappy Bird - 4",
          "Flappy Bird - 5",
          "Flappy Bird - 6",
          "Flappy Bird - 7",
          "Flappy Bird - 8",
          "Flappy Bird - 9",
          "Flappy Bird - 10",
          "Flappy Bird - 11",
          "Flappy Bird - 12",
          "Flappy Bird - 13",
          "Flappy Bird - 14",
          "Flappy Bird - 15"
        ],
        "Proje: 4 - Quiz Oyunu": [
          "Quiz Oyunu - 1",
          "Quiz - 2",
          "Quiz - 3",
          "Quiz - 4",
          "Quiz - 5",
          "Quiz - 6",
          "Quiz - 7"
        ],
        "Proje: 5 - Platformer": [
          "Platformer - Assetler",
          "Platformer - 1",
          "Platformer - 2",
          "Platformer - 3",
          "Platformer - 4",
          "Platformer - 5",
          "Platformer - 6",
          "Platformer - 7",
          "Platformer - 8",
          "Platformer - 9",
          "Platformer - 10",
          "Platformer - 11",
          "Saglik Spritesheet",
          "Platformer - 12",
          "Platformer - 13",
          "Platformer - 14",
          "Platformer - 15",
          "Platformer - 16",
          "Platformer - 17",
          "Platformer - 18",
          "Platformer - 19",
          "Platformer - 20",
          "Platformer - 21",
          "Platformer - 22",
          "Platformer - 23"
        ],
        "Proje: 6 - Multiplayer Oyun": [
          "Son oyun anketi sonucu",
          "Multiplayer - 1",
          "Multiplayer - 2",
          "Multiplayer - 3",
          "Multiplayer - 4",
          "Multiplayer - 5",
          "Multiplayer - 6",
          "Multiplayer - 7",
          "Multiplayer - 8",
          "Multiplayer - 9",
          "Multiplayer - 10"
        ],
        "Ekstralar": [
          "Discord Odasi",
          "Son Oyun Anketi",
          "Script Download"
        ]
      },
      "requirements": [
        "Kurs yeni baslayanlari hedeflemektedir ve herhangi bir on bilgi veya yetenek gerektirmemektedir.",
        "Ileri seviye Unity kullanicilari icin uygun bir kurs degildir."
      ],
      "description": "Bu kurs oyun programlaya meraklı olanlar ve bu sektöre bir kariyer hedefleyenler icin doğru başlangıç noktasıdır. Proje merkezli bir egitim tekniği izlenecek olan bu kursta öğrenciler sıfırdan başlayarak Unity Oyun Motorunu kullanmayı öğrenecek ve kurs sonuna kadar 6 adet oyunu sıfırdan yapıp bitirecektir.\n\nGereklilikler:\nUnity 3D oyun motorunu çalıştırabilecek kapasitede bir bilgisayar.\nInternet bağlantısı.\nNeler Öğreneceksiniz:\nC# dilini öğreneceksiniz.\nOyun programlama ve tasarımının temel ilkelerini öğreneceksiniz.\nUnity 3D ile kendi başınıza oyun geliştirebilecek kadar bilgi sahibi olacaksınız.\nTemel Bilgisayar Grafikleri bilgisine sahip olacaksınız.\nNelere Sahip Olacaksınız:\nSadece kurs öğrencilerinin kullanabileceği Soru/Cevap bölümü.\nKurs öğrencilerine özel, direkt kurs eğitmeniyle ve diğer katılımcılarla sesli görüşüp sorularınızı sorabileceğiniz discord odası.\nKursa hayatınız boyunca istediğiniz yerden erişme imkanı.\nGelecek olan tüm güncellemelerden ve ekstra içerikten ücretsiz olarak yararlanma.",
      "target_audience": [
        "Oyun yapimina ilgi duyan herkes bu kursa katilabilir. Burada ogrendikleriyle kendi oyunlarini yapmaya baslayabilirler.",
        "Programlama ogrenmek isteyen ogrenciler; sikilmadan, oyun yaparak programlamaya giris yapabilirler.",
        "Oyun sektorune giris yapmak isteyen programcilar icin sektore iyi bir giris olacaktir."
      ]
    },
    {
      "title": "Character Rigging Quality Assurance for Games and Animation",
      "url": "https://www.udemy.com/course/character-rigging-quality-assurance-for-games-and-animation/",
      "bio": "Ensure your character rigs are polished, functional, and ready for any game engine with pro-level quality checks.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No rigging experience needed this is comprehensive quality checking of rigging not rigging itself.",
        "Basic knowledge of Maya or Blender",
        "Word or Notepad for documentation",
        "Photoshop or even just Paint will work for your screenshots (They can also be dropped in your Word or Notepad doc)"
      ],
      "description": "Welcome to the Course!\nWe’re thrilled to have you here! Be sure to join our official [Discord Community] where you can ask questions, share your work, and connect with fellow artists. Our team at Baka Bros Entertainment is here to support your growth every step of the way.\nAbout Your Instructor\nYour instructor, Daniel Peterson, is a Lead Game Artist with a Master’s degree in Game Art. He has contributed to four published games and brings a wealth of real-world experience to this course.\nWhat This Course Covers\nIf you want to make your character rigs feel professional and responsive, this is the course for you! Whether you’re working with your own rigs or a purchased character rig, you’ll learn how to test, refine, and get the most out of your biped setup.\nNo prior rigging knowledge required\nYou will need access to a rigged character to follow along\nFast and focused—under 2 hours of core content\nLearn exactly what makes a great biped animation-ready\nWhy Take This Course?\nDaniel’s goal is to help you level up fast with concise, practical tutorials that respect your time. If you're a game developer, animator, or technical artist looking to improve your workflow—this is the place to start.\nHe's stoked to see you grow, and together, we’re going to make some awesome game content!\nExplore More\nIf you find this course helpful, be sure to check out our other game development tutorials on Udemy—including full project-based courses in modeling, texturing, and VFX using Maya, Substance Painter, and Unreal Engine 5.\nJoin the Discord\nExplore our other courses\nLet’s make amazing games—together!\nLet’s get started!\n—Daniel & the Baka Bros Team",
      "target_audience": [
        "Riggers",
        "Non-Rigger Project Manager",
        "Game or Animation Producers",
        "Art Leads and Creative Directors",
        "Anyone who paid for a rig and wants to make sure it works properly"
      ]
    },
    {
      "title": "【プログラミング初心者でも安心！】Unityを使ってARアプリを作ろう！",
      "url": "https://www.udemy.com/course/unityar-f/",
      "bio": "VRやARのコンテンツは見ているだけでワクワクしませんか？ゲーム開発ツール『Unity』とARツール『Vuforia』を使って、プログラミング初心者でも簡単にARアプリを作成できるコースです。",
      "objectives": [
        "VRとARの違いやそれぞれの利点について理解することができます",
        "Unityを使ったアプリを作れるようになります",
        "ARツールを使ったアプリを作れるようになります",
        "Unityで作ったARアプリをiPhoneで遊べるようになります"
      ],
      "course_content": {},
      "requirements": [
        "初歩的なPC操作の知識",
        "カメラがついているMacかWindowsのPC(ビデオでは、Macを利用して解説します)",
        "iPhoneとiOSデベロッパーアカウント(あればiPhoneにアプリを入れることができます)"
      ],
      "description": "※VuforiaのバージョンがUntiy.2017用のパッケージ対応のみの配布となってしまいました。Unity5.xバージョンのVuforiaのバージョンについては、後述の【ソフトウェアについて】をご一読ください。\nこのコースは、VRやARって何？という方でも、実際にプログラミングをしてARアプリを作るところまでをサポートしています。利用するツールは、無料で利用できる3Dゲーム開発ツール『Unity』と、UnityやAndroidやiPhoneなど様々なサービスと連携しているARツール『Vuforia』(基本利用は無料)です。\n様々な社会現象まで起こして話題の『ポケモンGO』や最近(2017年9月8日現在) では、AppleからARツール『ARKit』が発表されたり、色々なイベントでVRやARを使ったコンテンツが利用され始めているため、今から作り始める時期としてはピッタリな分野です。\nUnityを初めて触れる方でもプログラミングを初めて学習される方でもWebのツールダウンロードから環境設定なども丁寧に動画で解説しているため、簡単に始めることができます。\nコースの最後には、UnityのアプリをiPhoneに入れるためにiPhoneアプリ開発ツールの『Xcode』のダウンロードからUnityで作ったアプリを入れるところまでを解説しているため、コースを終了後いろんな場所で周りの人に遊んでもらえると思います。\n\n\n\n【デバイスについて】\n本コースでは、Mac PC と iPhone 5s(セクション7のみ)を利用しています。\nしかし、UnityのARアプリの開発のプログラミングでは、Mac PCでもWindowsPCのどちらでも大丈夫です。\nWindowsPCの方は、ダウンロード部分とUnityなどの立ち上げ部分だけをMacではなく、WindowsPCとして補完してご覧いただけますと幸いです。\n\n\n【ソフトウェアについて】\n本コースのソフトウェアのバージョンは、下記のものを利用しています。\nUnity version：5.6.2\nVuforia：6.2.10 (「Vuforiaについての説明とダウンロードの手順」というレクチャーにパッケージファイルが置いてあります)\n\n\n【カリキュラム構成】\nセクション1 ：コース説明とVRやARについての解説\n\nセクション2：Unityの基本操作とプログラミングについて解説\nセクション3：Vuforiaについて解説\nセクション4:：ARを使って魔法使いになろう！\nセクション5：カードバトルをARで作ろう！\nセクション6：ARのサッカーボールに指で触れて爆弾を回避するゲームを作ろう！\nセクション7：Xcodeについての説明とUnityで作ったアプリを入れる方法",
      "target_audience": [
        "プログラミングに興味がある方",
        "VRやARに興味がある方",
        "ゲームを作ってみたい方",
        "3DゲームやUnityに興味がある方"
      ]
    },
    {
      "title": "LÖVE 2D : Apprenez à créer des jeux 2D facilement avec LUA",
      "url": "https://www.udemy.com/course/love-2d-apprenez-a-creer-des-jeux-2d-facilement-avec-lua/",
      "bio": "Découvrez le monde du développement de jeux avec LUA et Löve2D (Framework basé sur la SDL). Votre premier jeu vidéo 2D !",
      "objectives": [
        "Utiliser le framework Löve2D",
        "Programmer avec le langage LUA",
        "Créer des jeux 2D facilement",
        "Apprendre les bonnes pratiques avec un expert",
        "S'initier à la programmation",
        "Faire un premier pas en tant que développeur de jeux indépendant",
        "Apprendre les mêmes outils que ceux utilisés pour le jeu Balatro"
      ],
      "course_content": {
        "Initiation au développement de jeux 2D avec LÖVE": [
          "Téléchargement de Löve2D",
          "Création d'un projet et premières lignes de code LUA",
          "Prise en main du player vidéo d'Udemy pour suivre au mieux une formation !",
          "Initiation à la programmation avec LUA (variables et tableaux)",
          "Les conditions avec LUA",
          "Avant de passer à la suite du cours Love & LUA",
          "Gestion des inputs : Détection des touches du clavier",
          "Dessiner des formes à l'écran et les colorer",
          "Modification de la police d'écriture",
          "Déplacer une forme grâce au clavier",
          "Afficher des images à l'écran",
          "Détection des collisions entre deux éléments 2D",
          "Déclencher des effets sonores",
          "Les boucles avec LUA et affichage de tiles à l'écran",
          "Optimisation du code pour de meilleures performances",
          "Changement d'écran : Transition entre 2 maps",
          "Externalisation des maps pour conserver un code propre",
          "Création d'un autre map basée sur des tiles",
          "Transition entre deux maps",
          "Ramassage d'objets et gestion d'un inventaire",
          "Utilisation d'une sprite sheet : Chargement du personnage",
          "Animation du personnage 2D",
          "Mode multijoueur en ligne : Programmation du serveur",
          "Mode multi : Gestion des clients via sockets",
          "Modification du design et utilisation de nouvelles tiles",
          "Programmation de la flèche (arc) du joueur",
          "Programmation du tir de la flèche sur les ennemis",
          "Compilation et publication du jeu",
          "Vendre son jeu en ligne en passant par Gumroad"
        ],
        "Vidéos complémentaires sur Love2D": [
          "Utiliser une manette de jeu (Xbox, switch pro, Playstation...)",
          "Jeu en réseau via sockets / UDP et envoie de données entre client et serveur",
          "Lire et écrire dans des fichiers avec le filesystem de Love",
          "PODCAST : Comment arriver à terminer un projet de jeu vidéo indépendant ?"
        ],
        "Conclusion": [
          "BONUS"
        ]
      },
      "requirements": [
        "Souhaiter apprendre à créer des jeux",
        "Savoir télécharger et lancer un logiciel"
      ],
      "description": "Cette formation va vous initier à la conception de jeux 2D avec LÖVE. Vous n'avez pas besoin de connaissances particulières, simplement avoir envie d'apprendre avec un expert certifié et reconnu qui vous transmettra les bonnes pratiques.\nCette formation débutera par des notions fondamentales afin que vous puissiez prendre en main LÖVE et LUA puis nous poursuivrons notre apprentissage de la création de jeux 2D en développant un petit projet. Nous mettrons donc en pratique nos connaissances afin de bien assimiler toutes les notions.\nNous apprendrons à programmer avec LUA, langage extrêmement simple à utiliser et nous verrons les différentes fonctions proposées par Löve2D. LÖVE est basé sur la SDL, c'est à dire qu'il propose les fonctionnalités de la SDL mais utilise le langage LUA. Cela vous permet de faire la même chose qu'avec la SDL mais sans la complexité du langage C.\nLes outils de développement présentés dans ce cours sont ceux utilisés dans le jeu Balatro. Cela vous donne une idée de ce qu'il est possible de réaliser avec Love et LUA.\nA l'issue de cette formation vous maîtriserez les principales fonctionnalités du framework. Vous serez en mesure de développer vos jeux 2D avec LÖVE. Nous verrons même comment créer un mode multijoueur en ligne grâce aux sockets.\nIl s'agit donc d'une formation complète qui vous permettra de faire un premier pas dans le monde du développement de jeux vidéo.\nNous allons faire le tour des principales fonctionnalités de Löve2D à savoir :\nCréer un projet\nUtiliser les variables et tableaux\nProgrammer des conditions\nGérer les entrées clavier / souris\nAfficher des éléments à l'écran\nDéplacer un personnage avec le clavier\nGérer les collisions\nJouer du son\nUtiliser des tiles pour créer nos maps\nMettre en réseau un jeu avec les sockets\nTirer sur des ennemis\nRamasser des objets\nChanger d'écran de jeu\nAnimer les personnages\nGérer un inventaire\nCompiler le projet\n...\nC'est l'idéal pour débuter dans la création de jeux vidéo de façon simple, rapide et concrète.\nN'attendez plus, rejoignez ma formation, vous ne le regretterez pas, c'est satisfait ou 100% remboursé !",
      "target_audience": [
        "Toutes les personnes souhaitant s'initier à la création de jeux",
        "Les développeurs qui veulent apprendre Löve, un framework basé sur la SDL"
      ]
    },
    {
      "title": "Unity İle Hyper Casual Oyun Programlama",
      "url": "https://www.udemy.com/course/unity-ile-hyper-casual-oyun-programlama/",
      "bio": "Unity ile Mobil Oyun Programlama Eğitimi",
      "objectives": [
        "Hyper Casual oyunların temel özellikleri",
        "Unity ile Hyper Casual oyun programlama",
        "C# ile modüler programlama"
      ],
      "course_content": {
        "C# ile Nesne Tabanlı Programlamaya Giriş": [
          "Programlama Dilleri ve İlk Projenin Oluşturulması - Merhaba Dünya",
          "Algoritma Nedir?",
          "Değişken Tipleri ve Matematiksel İşlemler",
          "Koşullar #1 / Boolean Değişken Tipi ve If-Else-Else If",
          "Yorum Satırları",
          "Koşullar #2 / Ve - Veya Operatörleri",
          "Diziler #1 / Dizi Tanımı"
        ],
        "Hyper Casual Runner Oyun Mekaniği ve Oyunu Mobil Android Cihazda Çalıştırma": [
          "Giriş - Hyper Casual oyun nedir? Unity ile projeye giriş.",
          "Karakter Kontrolleri",
          "Ana Mekaniklerin Kodlanması",
          "Tuzak Sistemi ve Köprü Oluşturmanın Kodlanması",
          "Menü Sistemlerinin Programlanması",
          "Oyunu Android Cihazlarda Çalıştırma"
        ],
        "Hyper Casual Oyununun Geliştirilmesi": [
          "Objeleri Prefab Yapma ve Oyuna Seslerin Eklenmesi",
          "Para Sistemi ve Skor Toplama",
          "Oyunun Bazı Kısımlarının Düzeltilmesi",
          "Günlük Ödül Sisteminin Programlanması",
          "Market Sisteminin Programlanması",
          "Çoklu Sahne Sisteminin Oyuna Eklenmesi ve Bazı Mobil Problemlerin Çözülmesi",
          "Oyuna Google Reklam Modülü İle Reklam Eklenmesi",
          "Oyuna Çoklu Dil Desteğinin Eklenmesi"
        ]
      },
      "requirements": [
        "Orta düzeyde Unity bilgisi",
        "Orta düzeyde C# ile nesne tabanlı programlama bilgisi"
      ],
      "description": "Kursumuz sürekli güncellenecek, giriş dersleri eklenerek \"Sıfırdan Hyper Casual Oyun Programlama\" kursu olarak güncellenecektir.\nSon zamanlarda çok popüler olan Hyper Casual oyunların nasıl olması gerektiğini öğreniyor olacağız ve bir Hyper Casual oyun programlayacağız. Unity ile oyun programlarken aynı zamanda C#'da modüler programlamayı öğreneceğiz. Modüler programlama sayesinde oyunumuz geliştirmeye ve değiştirmeye esnek bir yapıya sahip olacaktır. Unity ile kullanıcı ara yüzünün nasıl yapılacağı, animasyonların nasıl yapılıp kontrol edileceğini ve Hyper Casual oyun için gerekli sistemlerin nasıl yapılacağını öğreneceğiz.\nUnity ile oyunumuza nasıl reklam ekleneceğini öğreneceğiz. Google Admob'u oyunumuza nasıl entegre edebileceğimizi öğreneceğiz ve çeşitli reklamları doğru yerlerde çağıracağız.\nBu eğitim sürecinde yapmış olacağımız Hyper Casual oyun, geliştirilebilir bir yapıya sahip olacak.\nEğitim sürecinde genel olarak öğreneceğimiz konu başlıkları aşağıdaki gibidir:\n- Hyper Casual oyun nedir ve nasıl olmalıdır?\n- Unity ile kullanıcı ara yüzü nasıl yapılır?\n- Unity ile animasyon sistemi nasıl kullanılır?\n- Hyper Casual oyunlar için karakter kontrollerinin kodlanması\n- Temel Hyper-Casual Runner oyun mekanikleri\n- Oyuna Google Admob reklamlarının eklenmesi\n- Hyper Casual oyunlar için Level sisteminin kodlanması\n- Günlük Ödül Sistemi Nasıl Yapılır?\n- Market Sistemi Nasıl Yapılır?\n- Çoklu Dil Desteği Nasıl Eklenir?\nEğitimimizin amacı, eğitim sonunda kişinin bir firmada Hyper Casual oyun programlayıcısı olarak çalışabilecek bir düzeye gelebilmesini sağlamak ve Unity oyun motoru bilgisini bir üst seviyeye taşımaktır. Eğitim sürecinde sorularınızı eğitmenimize sorabilir ve hızlıca cevaplar alabilirsiniz. Eğitim sürecinde tüm öğrencilerimize başarılar dileriz.",
      "target_audience": [
        "Oyun programlamak isteyen herkes"
      ]
    },
    {
      "title": "ULTIMATE Scratch Scrolling Platformer Bootcamp",
      "url": "https://www.udemy.com/course/make-a-scrolling-platformer-in-scratch/",
      "bio": "Learn how to create a Scrolling Platformer in Scratch",
      "objectives": [],
      "course_content": {
        "Platform Engine": [
          "Setting up the project",
          "Adding Gravity",
          "Stopping the player from going through walls",
          "Making the level bigger"
        ],
        "Making the game fun": [
          "Adding Coins to the game",
          "Making the Portal"
        ]
      },
      "requirements": [
        "Just a basic understanding of Scratch or other programming languages"
      ],
      "description": "Master Scrolling Platformers in Scratch: Create Your Own Side-Scrolling Adventure!\nEver wanted to make a side-scrolling platformer game like Mario or Sonic the Hedgehog? In this Scratch course, you'll learn everything you need to create your own scrolling platformer from start to finish, even if you’re new to game design!\nWhat You'll Learn:\nPlatformer Basics: Understand the core mechanics of platformers, including player movement, jumping, gravity, and collision detection.\nScrolling Backgrounds and Levels: Create immersive, side-scrolling environments that move as the player explores, giving your game a true sense of adventure.\nObstacle Design and Power-Ups: Design challenging obstacles to keep players on their toes, and add exciting power-ups for an extra layer of gameplay.\nCharacter Animation and Game Polish: Bring your game to life with character animations, sound effects, and finishing touches that make it feel professional and polished.\nBy the end of this course, you’ll have built your own scrolling platformer game in Scratch that you can customize, share, and play with friends! Whether you're an aspiring game developer or just looking for a fun project, this course will teach you the skills to create engaging, fun-to-play games.\nReady to start scrolling? Jump into Scratch and create your own platformer today!",
      "target_audience": [
        "Anyone"
      ]
    },
    {
      "title": "Aprenda Desenvolvimento de Jogos 2D com GDevelop",
      "url": "https://www.udemy.com/course/gdevelop-crie-jogos-de-maneira-pratica-facil-e-dinamica/",
      "bio": "Curso completo de criação de Jogos 2D: Domine GDevelop, Crie e Anime Suas Próprias Artes e Publique no Mercado!",
      "objectives": [
        "Utilizar a Engine GDevelop",
        "Criar jogos em 2D",
        "Programação Visual",
        "Exportar jogos para PC, Mobile e Web",
        "Publicar jogos em Lojas Virtuais",
        "Criar Artes para Jogos 2D"
      ],
      "course_content": {
        "Introdução": [
          "Aperte Start",
          "Agradecimento"
        ],
        "Inkscape: Criando Artes para Jogos": [
          "Introdução ao Vetor",
          "Baixando a Ferramenta",
          "Criando Sua Primeira Arte: Pac-Man",
          "Prática Livre com Inkscape",
          "Criando um Item Coletável",
          "Criando Alguns Inimigos"
        ],
        "Cores no Design de Jogos": [
          "Psicologia das Cores: Visão Geral",
          "Combinações de Cores"
        ],
        "Criando Template de Jogo Completo (Projeto Tamagotchi)": [
          "Introdução e Notas",
          "Criando a Base para o Cenário",
          "Personagem - Estados Default/Feliz",
          "Personagem - Estados Fome/Comendo",
          "Personagem - Entediado/Brincando",
          "Personagem - Sujo/Banho",
          "Personagem - Morte",
          "Botões de Interação do Jogo",
          "Detalhando o Cenário",
          "Extra: Nascimento do Personagem"
        ],
        "Animação das Sprites": [
          "Métodos de Animação 2D",
          "Exportando as Artes Criadas no Inkscape",
          "Download do DragonBones",
          "Problema Frequente/Site Fora do Ar - Como Resolver?",
          "Conhecendo o Programa",
          "Estrutura Óssea da Animação",
          "Animações do Personagem (Estado Feliz)",
          "Finalizando Animação (Estado Feliz)",
          "Animações do Personagem (Estado Entediado)",
          "Animações do Personagem (Estado Brincando)",
          "Animações do Personagem (Estado com Fome)",
          "Animações do Personagem (Estado Comendo)",
          "Animações do Personagem (Estados Sujo e Banho)",
          "Exportando Animações para Uso na Engine"
        ],
        "Introdução a GDevelop": [
          "Conhecendo o site da GDevelop",
          "Criando uma conta de usuário",
          "Instalando a GDevelop",
          "Conheccendo a interface - Jogo Alô Mundo",
          "Gerenciamento de contas (Nova Interface)",
          "Criando a conta na GDevelop",
          "Alterando a senha e outros detalhes",
          "Gerenciando meus projetos"
        ],
        "Construindo o jogo Tamagotchi (Bichinho virtual)": [
          "Estruturando o projeto",
          "Construindo o Menu",
          "Background",
          "Animações",
          "Inteligência Artificial - 1 parte",
          "Inteligência Artificial - 2 parte",
          "Programando a interação",
          "Mecânica de Game Over",
          "Melhorando o game",
          "Game Over",
          "Colocando som nas coisas",
          "Exportando o jogo para web",
          "Exportar o jogo para Android",
          "Melhorando o projeto",
          "Como publicar o jogo no itch.io"
        ],
        "Estórias Interativas": [
          "Construindo o projeto",
          "Programando nossa cena inicial",
          "Implementando nossas cenas intermediárias",
          "Finalizando nosso projeto",
          "Exportando o projeto"
        ],
        "Desenvolvendo o Projeto Tamagotchi": [
          "Sobre a Seção"
        ],
        "Jogo Asteroids": [
          "Construindo o projeto",
          "Animando o player",
          "Movimentando o player",
          "Programando a rotação da nave",
          "Programando a fumaça da nave",
          "Programando o tiro",
          "Construindo os asteroides",
          "Destruindo os asteroides",
          "adicionando som ao jogo",
          "Inicio de jogo",
          "HUD do jogo",
          "Mecânica de dano",
          "Exportando o jogo"
        ]
      },
      "requirements": [
        "Conceitos básicos de informática"
      ],
      "description": "O curso Crie Jogos 2D com GDevelop: Da Arte até Publicação nas Lojas foi idealizado para todas as pessoas que querem criar e publicar seus próprios jogos 2D sem precisar aprender uma linguagem de programação.\nAlém de aprender GDevelop do zero, os alunos terão a oportunidade de desenvolver suas próprias artes para utilizar em seus projetos, mesmo que nunca tenham trabalhado com artes digitais antes. Além disso, o curso proporcionará conhecimentos essenciais sobre como publicar esses jogos no mercado, capacitando os alunos a compartilhar suas criações com o público.\nPara quem não conhece, o GDevelop é um motor (engine) de jogos 2D de código aberto gratuito no qual você pode criar jogos para as plataformas PC, Mobile e Web. O mesmo emprega um sistema baseado em eventos, semelhante aos motores Construct e Stencyl, o que possibilita você programar as ações do jogo de uma maneira fácil e visual sem precisar conhecer uma linguagem de programação.\nO curso tem como objetivo ensinar os principais conceitos sobre o motor GDevelop por meio do desenvolvimento de vários Jogos. Cada jogo que é implementado você aprende/revisa um novo recurso da ferramenta como por exemplo, utilizar sons, partículas, interagir com objetos em cena e muito mais.\nO curso é ideal para quem esta iniciando no mundo do desenvolvimento de jogos, pois todo o conteúdo é apresentado ao aluno de maneira prática, fácil e dinâmica.\nDurante o curso você construirá vários jogos, como por exemplo:\n\nSpin Game\nTamagotchi\nTurma da Mônica\nHitman Game\nTurret Defender\nDino Runner\nAsteroids\nE vários outros...\nAlém de todas as etapas de criação, os alunos aprenderão a exportar e publicar seus jogos em diferentes plataformas, incluindo PC, Web e Mobile (Android), e terão insights sobre a publicação no marketplace Itch-io.\nA escolha do GDevelop como ferramenta para o desenvolvimento dos jogos destaca-se como uma grande vantagem para iniciantes e desenvolvedores que não querem lidar com códigos, pois é um motor de fácil aprendizado, gratuito e sem restrições, contribuindo para uma experiência de aprendizado mais acessível e eficaz.\nInscreva-se e comece a aprender agora mesmo!",
      "target_audience": [
        "Desenvolvedores de Jogos Iniciantes",
        "Estudantes de Jogos Digitais",
        "Aspirantes a Desenvolvedores de Jogos",
        "Game Designers Iniciantes",
        "Artistas e Não Programadores"
      ]
    },
    {
      "title": "Unity - Kurs Tworzenia Gier MEGAPAKIET",
      "url": "https://www.udemy.com/course/unity-kurs-tworzenia-gier/",
      "bio": "Kurs od zupełnych podstaw do stworzenia własnej gry 3D",
      "objectives": [
        "Tworzenie gier 3D",
        "Programowanie C#"
      ],
      "course_content": {
        "Kurs 1": [
          "Pobieranie i instalacja",
          "Pliki do pobrania",
          "Interfejs",
          "03 - Nawigacja po scenie",
          "04 - Wstawianie obiektów i transformacje",
          "05 - Zaznaczanie grupowe",
          "06 - Podstawowe parametry obiektu",
          "07 - Hierarchia i transformacje obiektów potomnych",
          "08 - Komponenty",
          "09 - Prefabrykaty",
          "10 - Zasoby projektu",
          "11 - Materiały i tekstury",
          "12 - Oświetlenie",
          "13 - Wypiekanie mapy światła",
          "14 - Ustawienia graficzne",
          "15 - Kamery",
          "16 - Tekst i obrazy na ekranie - prosty GUI",
          "17 - Animacje",
          "18 - Dźwięki 2D i 3D",
          "19 - Prawa fizyki",
          "20 - Postać FPS - First person controller",
          "21- Zmiany w nowej wersji Unity",
          "22- Tworzenie terenu - poprawiony",
          "23 - Skybox",
          "24 Tworzenie własnych drzew",
          "25 - Masowe rozmieszczanie roślinności",
          "26 - Drzewa ruszające się na wietrze",
          "27 - Kompilacja do pliku EXE i html"
        ],
        "Dodatek - Kurs C#": [
          "01 - Pobieranie i instalacja",
          "02 - Pierwszy program - wyświetlanie tekstu na ekranie",
          "03 - Zmienne i stałe",
          "04 - Pobieranie danych od użytkownika",
          "05 - Typ wyliczeniowy",
          "06 - Rzutowanie",
          "07 - Konwersja typów",
          "08 - Opakowywanie i rozpakowywanie typu",
          "09 - Operatory arytmetyczne",
          "10 - Operatory bitowe",
          "11 - Operatory relacji",
          "12 - Operatory logiczne",
          "13 - Operator warunkowy",
          "14 - Operatory przypisania",
          "15 - Pre oraz post inkrementacja i dekrementacja",
          "16 - Tablice",
          "17 - Aplikacja Windows Forms",
          "18 - Pętla FOR",
          "19 - Instrukcja wyboru warunkowego IF ... ELSE",
          "20 - Symbole sterujące",
          "21 - Typ znaku i warunki zagnieżdżone",
          "22 - Okno dialogowe - obiekt MessageBox",
          "23 - Kilka własnych okien w aplikacji",
          "24 - Operacje tekstowe",
          "25 - Pętla FOREACH",
          "26 - Pętla warunkowa DO ... WHILE",
          "27 - Pętla warunkowa WHILE",
          "28 - Sterowanie pętlą za pomocą instrukcji BREAK i CONTINUE",
          "29 - Instrukcja SWITCH",
          "30 - Przechwytywanie i rzucanie wyjątków",
          "31 - Zdarzenia",
          "32 - Klasy (pola, konstruktor, metody, destruktor)",
          "33 - Przekazywanie argumentów",
          "34 - Dziedziczenie, przeciążanie i przesłanianie",
          "35 - Interfejsy i modyfikatory override oraz virtual",
          "36 - Statyczne pola, metody i klasy",
          "37 - Właściwości klasy",
          "38 - This",
          "39 - Delegacje",
          "40 - Struktury",
          "41 - Data i czas (UTC i lokalny)",
          "42 - Wątki (BackgroundWorker)",
          "43 - Obiekt Timer",
          "44 - Grafika-nowy",
          "45 - Zapis i odczyt z pliku oraz OpenFileDialog i SaveFileDi",
          "46 - Operacje na folderach i plikach",
          "47 - Pole tekstowe z wzorcem MaskedTextBox",
          "48 - Pola typu RadioButon i CheckBox oraz obiekt grupujący",
          "49 - Lista prosta i selekcji (ListBox i CheckedListBox)",
          "50 - Lista rozwijana ComboBox",
          "51 - Kalendarz",
          "52 - Zakładki - TabControl",
          "53 - Drzewo - TreeView",
          "54 - Lista złożona - ListView",
          "55 - 01 - Kolekcja - List",
          "55 - 02 - Kolekcja - Dictionary",
          "55 - 03 - Kolekcja - Queue",
          "55 - 04 - Kolekcja - Stack",
          "56 - Przelicznik walut",
          "57 - Sprawdzanie numerów NIP,PESEL,REGON i EAN",
          "58 - Edytor tekstu formatowanego",
          "59 - Własna przeglądarka internetowa"
        ],
        "Kurs 2": [
          "01 - Tworzenie skryptów i wyświetlanie informacji w konsoli",
          "02 - Zmienne jako parametry komponentów",
          "03 - Podstawowe informacje o wektorach",
          "04 - Klasa Vector3 oraz rysowanie lini pomocniczych - klasa Debug",
          "05 - Przemieszczanie obiektów za pomocą kodu",
          "06 - Interpolacja liniowa (Lerp)",
          "07 - Obroty w układzie Eulera",
          "08 - Obrót w kwaternionach",
          "09 - Uzyskiwanie uchwytu do dowolnego obiektu na scenie",
          "10 - Uzyskiwanie dostępu do komponentu w obiekcie",
          "11 - Wywoływanie metod innego skryptu oraz odwoływanie się do innego komponentup",
          "12 - Dodawanie komponentów i skryptów z poziomu innego skryptu",
          "13 - Rzucanie promieni",
          "14 - Wykrywanie kolizji w trybie trigger (zbieranie przedmiotów, obsługa windy)",
          "15 - Wykrywanie kolizji obiektów fizycznych - skrypt kopania piłki",
          "16 - Odtwarzanie dźwięków z poziomu skryptu (zmontowany)",
          "17 - Oddziaływanie siłami na bryły sztywne",
          "18 - Obsługa urządzeń sterujących 01",
          "18 - Obsługa urządzeń sterujących 02",
          "19 - Zarządzanie animacją z poziomu skryptów 01",
          "20 - Tworzenie obiektów dynamicznie (z poziomu kodu)",
          "19 - Zarządzanie animacją z poziomu skryptów 02",
          "21 - Patchfinding - znajdowanie drogi",
          "22 - GUI (Legacy) 01",
          "22 - GUI (Legacy) 02",
          "23 - Nowy interfejs użytkownika"
        ],
        "Kurs 3": [
          "01 - Pobieranie i omówienie zawartości MOCAP",
          "02 - Importowanie postaci - Ustawienia Avatara",
          "03 - Importowanie animacji MOCAP",
          "04 - Komponent Animator",
          "05 - Skrypt Śledzącej kamery",
          "06 - Animator controller",
          "07 - Blend tree",
          "08 - Sterowana postać TPP - kontrola animacji z poziomu skryptu",
          "09 - Zdarzenia animacji mocap",
          "10 - Maska i warstwy animacji"
        ],
        "Kurs 4": [
          "01 - Obiekty i obszar gry",
          "02 - Skrypt modyfikujący dodatkowe detale",
          "03 - Interakcja obiektów z graczem",
          "04 - 01 - Interakcja gracza",
          "04 - 02 - Interakcja gracza",
          "05 - Licznik FPS",
          "06 - Menu gry",
          "07 - Montowanie kół",
          "08 - Skrypt Samochodu",
          "09 - Zakończenie gry",
          "10 - Animacja kół samochodu i dźwięk silnika"
        ]
      },
      "requirements": [
        "brak wymagań"
      ],
      "description": "Czy grając w grę 3D zastanawiałeś się „Jak oni to zrobili?”. Może miałeś kiedyś pomysł na własną grę, ale zrezygnowałeś „bo to za trudne”?\n\n\nPrzedstawiamy ci kurs, który pozwoli tworzyć własną grę 3D bez posiadania doktoratu z matematyki, informatyki czy grafiki komputerowej. Ludzie posiadający ogromne umiejętności z wielu dziedzin stworzyli środowisko Unity, które pozwoli dać upust twojej kreatywności i przy odrobienie samozaparcia, zrealizować najbardziej szalone pomysły na poziomie znanym z gier AAA.\n\n\nPoszukaj w internecie historii gry The Forest. Gra survivalowa, która wniosła sporo świeżości do tego gatunku, była pomysłem zaledwie 4 osób. Nie obyło się bez komplikacji, ale już pierwsze wersje alpha pojawiające się na platformie Steam pozytywnie zaskoczyły wszystkich. Oczywiście w miarę czasu zespół się rozrósł i gra również rozwinęła się, ale środowisko Unity umożliwiło start gry ze świetną oprawą graficzną i złożoną sztuczną inteligencją postaci.\n\n\nWarto wspomnieć, że środowisko Unity jest dostępne w wersji darmowej. Dopiero, gdy twoja gra zacznie zarabiać większe pieniądze musisz niewielki procent dochodów oddać jego autorom.\nUzyskasz także dostęp do ogromnej ilości obiektów i postaci 3D oraz animacji MOCAP poprzez Unity Asset Store. Dostępne są tam także moduły tworzone przez inne osoby pozwalające rozszerzyć funkcjonalność Unity. Spora część tych materiałów jest darmowa i pozwoli szybko stworzyć coś co zadziwi Twoich znajomych. Kto wie, może dołączą do twojej ekipy i stworzycie coś równie dobrego jak The Forest.\nDzięki Unity powstało sporo gier dobrze ocenianych przez graczy, jak chociażby: The Long Dark, Firewatch, Wasteland 2, DreamFall Chapters, Syberia 3, RimWorld.\nJeśli z kolei jesteś grafikiem lub tylko programujesz i tworzenie gier Cię nie pociąga, możesz tworzyć przy użyciu Unity dla Asset Store, zarówno darmowe treści jak i odpłatne.\nUnity pozwala także tworzyć gry na różne platformy równocześnie: Android, Mac OS, Linux , Windows, a nawet przeglądarki internetowe.\nPierwsza część kursu przeprowadzi cię krok po kroku od procesu instalacji, poprzez obsługę interfejsu, edycję obiektów, tworzenie terenu i roślinności, ustawianie oświetlenia i kamer oraz wstawianie dźwięków i tworzenie prostych animacji. Stworzysz także sterowaną przez gracza postać FPP – czyli postać której oczami obserwowany jest świat gry.\n\n\nJako dodatek między pierwszą, drugą częścią kursu Unity, zamieściliśmy kurs C#, który od zupełnych podstaw omawia zagadnienia związane z programowaniem i wykorzystywany jest w samym Unity. C# (C Sharp) jest obiektowym językiem programowania, bardzo zbliżonym do języków C++, Delphi czy Java. Oprócz tego, że jest to język przyszłościowy, doskonale nadaje się do efektywnej nauki programowania obiektowego i zapewnia łatwą „przesiadkę” z/na inne języki. Kurs omawia programowanie dla platformy .NET i przeznaczony jest dla osób, które chcą rozpocząć przygodę z programowaniem oraz tych bardziej zaawansowanych, które chcą przesiąść się na język bardziej uniwersalny niż Delphi czy C++.\nW drugiej części kursu Unity poznasz wektory i tajniki tworzenia skryptów pozwalających na oddziaływanie siłami na obiekty w grze, ich interakcję miedzy sobą, wykrywanie kolizji i obsługi kontrolerów. Poznasz dwa sposoby na tworzenie interfejsu użytkownika w grze. Stworzysz także inteligentnego robota, który sam będzie znajdował drogę i zmierzał do wyznaczonego celu.\n\n\nTrzecia część nauczy cię przenoszenia ruchów aktora na dowolną postać w grze. Poznasz skrypt pozwalający na śledzenie za pomocą kamery dowolnego obiektu w grze. Stworzysz także postać TPP, czyli postać sterowną przez gracza z kamerą za jej plecami.\n\n\nW czwartej części wykorzystasz całą zdobytą wiedzę do stworzenia gry, pozwalającej na zgodne z prawami fizyki podnoszenie, obracanie i rzucanie przedmiotów, a także ich interakcje.\nGra będzie posiadała także menu z ustawieniami graficznymi działającymi bez ponownego uruchamianie gry.",
      "target_audience": [
        "osoby początkujące i średnio zaawansowane"
      ]
    },
    {
      "title": "Unreal Engine 5 (UE5): Corso Completo in C++ 2025",
      "url": "https://www.udemy.com/course/unreal-engine-5-ue5-corso-completo-per-principianti/",
      "bio": "Impara a programmare in C++, da Zero a Hero",
      "objectives": [
        "Creare un progetto per la prima volta",
        "Creazione di un overlay HUD (Heads Up Display) su schermo che mostra le barre di avanzamento in tempo reale",
        "Come utilizzare l'Event Tick e gli eventi a tempo in UE5",
        "Scoprire l'interfaccia di Unreal Engine 5",
        "Imparare a programmare in C++",
        "Creare giochi su Unreal Engine, in C++"
      ],
      "course_content": {
        "Introduzione a Unreal Engine 5": [
          "Introduzione",
          "Installazione di Visual Studio 2019 o 2022",
          "Problemi con VS2019 o 2022? Niente paura, c'è Visual Studio Code!",
          "Scaricare e Installare Unreal Engine 5",
          "Quale versione di Unreal Engine utilizzare?",
          "Unreal Engine 5: Scopriamo e testiamo",
          "Server Discord",
          "Creare un nuovo progetto",
          "Aprire un progetto",
          "Salvare un progetto",
          "Ripristinare un progetto",
          "Se Generate non appare"
        ],
        "Presentazione di Unreal Engine 5": [
          "Esploriamo l'interfaccia di Unreal",
          "Spostarsi nella scena",
          "Selezionare gli oggetti della scena",
          "Spostare gli oggetti nella scena",
          "Far ruotare gli oggetti",
          "Ridimensionare gli oggetti",
          "Modificare la posizione nel pannello Details",
          "World e Local",
          "Magnetismo",
          "Surface snapping",
          "Differenti viste della scena",
          "Spostarsi rapidamente nella scena"
        ],
        "Introduzione al C++": [
          "Creazione di una classe",
          "Scoperta dei files H e CPP",
          "Dichiarazione e Implementazione di classi in C++",
          "Mostrare del testo",
          "I Commenti",
          "Creare e mostrare una variabile di numero intero",
          "Variabile di tipo float",
          "Variabile di tipo boolean",
          "Variabile di tipo text",
          "Creare una funzione",
          "Creare una funzione con argomenti",
          "Funzioni che ritornano un valore",
          "Funzioni con parametri di default",
          "Funzioni con più parametri di default",
          "Le condizioni",
          "Scorciatoie per le operazioni"
        ],
        "[Progetto] Shooter Game": [
          "Cosa andremo a realizzare",
          "Preparazione della scena",
          "Impostazione della telecamera",
          "Il player",
          "Far muovere il player",
          "Design del proiettile",
          "Far muovere i proiettili",
          "Conversione del proiettile in Blueprint",
          "Generazione dei Proiettili",
          "Creazione del nemico",
          "Collisione giocatore-nemico",
          "Collisione proiettile-nemico",
          "Creazione della modalità di gioco",
          "Generazione di nemici",
          "Correzione di eventuali problemi dello spawn",
          "Riavvio del gioco",
          "Widget del gioco",
          "Blueprint del widget",
          "Generazione del Widget",
          "Aggiungere lo Score & il Game Over nel Widget",
          "Scegliere degli asset",
          "Modificare il punto di partenza del bullet",
          "Aggiornamento a Unreal Engine 5.3 e Implementazione del Nuovo Sistema di Input"
        ],
        "[Secondo Progetto] Mixamo": [
          "Quello che andremo a realizzare",
          "Risorse del progetto",
          "Creazione del primo livello",
          "Scaricare i personaggi e le animazioni",
          "Importare personaggi e animazioni in UE5"
        ],
        "[Secondo Progetto] La classe del personaggio": [
          "Creazione della classe del personaggio",
          "Creazione del blueprint del personaggio",
          "Accedere alla capsula di collisione",
          "Accedere al Character Movement Component",
          "Accedere al SkeletalMesh Component",
          "Abbassare il personaggio al livello della capsula",
          "PITCH - YAW - ROLL",
          "Ridimensionare il personaggio",
          "Aggiungere le braccia della telecamera",
          "Incarnare il personaggio"
        ],
        "[Secondo Progetto] Gestione degli input": [
          "Aggiungere gli input in Unreal",
          "Utilizzare le Axis e Action in C++",
          "Spostare il personaggio avanti e indietro",
          "Velocità della camminata e corsa",
          "Spostare il personaggio a destra e sinistra",
          "Ruotare il personaggio quando si sposta",
          "Zoom",
          "Far Saltare il personaggio",
          "Far abbassare il personaggio"
        ],
        "[Secondo Progetto] Animazioni": [
          "Alla scoperta dell’Animation Blueprint",
          "Creazione della classe derivata di AnimInstance",
          "Variabili e animazioni per la camminata",
          "Selezionare l'Animation Blueprint",
          "Creare un BlendSpace",
          "Creare delle Animazioni"
        ],
        "[Secondo Progetto] Animazione del salto": [
          "Far saltare il personaggio",
          "Jump con il tasto Spacebar"
        ],
        "[Secondo Progetto] Rumori dei passi": [
          "Rumori dei passi",
          "Rumori del salto",
          "Differenza fra Notify e Notify State",
          "Creare una classe derivata di AnimInstance",
          "References dei 3 rumori dei passi",
          "Gestire i suoni",
          "Megascans - Quixel Bridge",
          "Creare 3 Physicals Materials",
          "Define",
          "Chiamare la funzione che detetta il materiale",
          "Funzione che detetta i materiali"
        ]
      },
      "requirements": [
        "Consigliato: PC desktop con Windows 7 (o versioni successive) a 64 bit o Mac con Mac OS X 10.9.2 o versioni successive",
        "Consigliato: 8 GB di RAM",
        "Consigliato: processore Intel o AMD quad-core, 2,5 GHz o superiore",
        "Consigliato: scheda video compatibile con DirectX 11",
        "Unreal Engine 5 funzionerà su desktop e laptop con specifiche in base a queste, ma le prestazioni potrebbero risentirne"
      ],
      "description": "Questo titolo sottolinea l'approccio completo del corso a Unreal Engine 5, mette in evidenza la specificità della lingua di programmazione C++ e chiaramente indica che è adatto ai principianti, pur richiedendo alcune competenze di base.\n\n\nBenvenuto.a in questo corso dedicato al nuovo Unreal Engine 5.\nUE5 è utilizzato allo stesso modo da professionisti e principianti per creare straordinari contenuti in tempo reale con l'aiuto del nuovo Lumen Lighting System e del Nanite Virtualized Geometry Engine. Non è mai stato così facile iniziare a sviluppatore giochi, a creare dei modelli di architettura o di un prodotto specifico e creare contenuti straordinari.\nDiventerai un \"Unreal Engine Zero\" a \"Hero\" in poche ore e un esperto del motore, dal layout generale UE5 fino alla creazione di un gioco perfettamente funzionante.\n\n\nVediamo di che cosa tratta il corso:\nIntroduzione a Unreal Engine 5\nPanoramica della nuova interfaccia utente UE5\nCome impostare il tuo primo progetto\nCreare il tuo primo livello\n\n\nIntroduzione completa a materiali e shader\nCome creare materiali utilizzando l'editor dei nodi dei materiali\n\n\nEsplora il l'Unreal Marketplace di Epic\nCome utilizzare Unreal Marketplace per ottenere mesh, materiali, funzioni e molto altro gratuiti e a pagamento\n\n\nImportazione di mesh e risorse esterne in Unreal Engine 5\nUna procedura dettagliata su come importare file FBX direttamente in UE5\nCome risolvere eventuali problemi materiali all'importazione\n\n\nIntroduzione completa al motore di scripting Blueprint\nCome costruire i tuoi primi progetti e creare eventi in UE5\nEsempi più approfonditi della creazione dei tuoi primi progetti UE5\nCome creare e utilizzare le variabili e le funzioni Blueprint",
      "target_audience": [
        "Principianti che vogliono imparare a programmare giochi in C++ su Unreal Engine 5"
      ]
    },
    {
      "title": "Unity: Crie um Jogo de Plataforma 2D",
      "url": "https://www.udemy.com/course/unity-crie-um-jogo-de-plataforma-2d/",
      "bio": "Aprenda a criar um jogo de plataforma 2D (com pulo, wall jump, plataformas que somem e muito +) na Unity Engine e C#",
      "objectives": [
        "Desenvolver jogos na Unity 2021 (mas também se aplica a outras versões)",
        "Programar em C#",
        "Scripts, Variáveis, Condições e Métodos",
        "Utilizar Coroutines no código",
        "Criar um controle de personagem 2D",
        "Inserir e configurar animações no jogador",
        "Criar inimigos que caminham em pontos específicos do cenário",
        "Montar fases 2D utlizando Tilemaps",
        "Como funciona o sistema de colisão da Unity",
        "Adicionar música e efeitos sonoros",
        "Trocar de fases",
        "Reiniciar a fase quando o jogador morrer",
        "Mexer com a Interface de Usuário (UI)",
        "Criar um menu principal e uma tela de créditos",
        "Exportar o jogo para jogá-lo fora da Unity"
      ],
      "course_content": {
        "Primeiros Passos": [
          "Baixando e instalando a Unity Engine",
          "Baixando e instalando o Visual Studio Code (VSC)",
          "Criando o projeto na Unity",
          "Mudando a cor da interface da Unity",
          "Conhecendo a interface da Unity",
          "Baixando e importando os assets do jogo"
        ],
        "Movimentação do Jogador": [
          "Criando e configurando o Jogador",
          "Criando o nosso primeiro Script e entendendo como ele funciona",
          "Entendendo o que são Variáveis",
          "Programando a Movimentação do Jogador",
          "Quiz 1.0",
          "Espelhando a imagem do Jogador",
          "Organizando o código com Headers (Cabeçalhos)",
          "Criando a Animação do Jogador \"Parado\"",
          "Criando a Animação do Jogador \"Andando\"",
          "Programando as Animações do jogador \"Parado\" e \"Andando\"",
          "Programando o Pulo do Jogador",
          "Animando o \"Pulo\" do Jogador",
          "Programando o Wall Jump do Jogador (pulo na parede)",
          "Animando o \"Wall Jump\" do Jogador",
          "Adicionando Comentários no código"
        ],
        "Coletáveis do Jogo": [
          "Criando e Animando o Coletável \"Maçã\"",
          "Programando a Coleta do coletável",
          "Criando o Efeito de Explosão",
          "Rodando o Efeito Especial ao coletar a Maçã",
          "Destruindo um gameObject depois de X segundos",
          "Criando e Animando a Banana e o Kiwi (coletáveis)",
          "Quiz 2.0"
        ],
        "Vida do Jogador, Obstáculos e Inimigos": [
          "Criando um Espinho e dando Dano no Jogador",
          "Criando e Animando uma Serra",
          "Impedindo que o Jogador se mova depois de morrer",
          "Criando e Tocando a Animação do Jogador \"Levando Dano\"",
          "Destruindo o gameObject do Jogador ao morrer",
          "Rodando o Efeito Especial quando o Jogador morre",
          "Reiniciando a fase depois de morrer",
          "Criando e Animando o inimigo \"Pássaro\"",
          "Programando a Movimentação dos inimigos com Arrays - Parte 1/2",
          "Programando a Movimentação dos inimigos com Arrays - Parte 2/2",
          "Fazendo o inimigo olhar na direção que está andando",
          "Criando e Animando o inimigo \"Morcego\" e ajustando algumas coisinhas",
          "Criando os Prefabs dos obstáculos e dos inimigos"
        ],
        "Objetos da Fase": [
          "Criando uma Plataforma Atravessável",
          "Criando e programando uma Mola",
          "Animando a Mola",
          "Criando algumas caixas",
          "Criando e Animando a Plataforma Armadilha",
          "Programando a Plataforma Armadilha",
          "Criando os Prefabs dos Objetos da Fase",
          "Quiz 3.0"
        ],
        "Criando as Fases": [
          "Criando e Entendendo uma Tile Palette",
          "Configurando a Câmera da Fase",
          "Criando nossa Primeira Fase (com Tile Maps)",
          "Corrigindo o bug de colisão dos tiles",
          "Adicionando Objetos, Obstáculos e Inimigos na nossa fase",
          "Criando um Sistema de Efeitos Sonoros",
          "Programando o Sistema de Efeitos Sonoros",
          "Inserindo uma Música de Fundo",
          "Passando de Fase",
          "Continuando a música entre as fases",
          "Criando novas fases"
        ],
        "Menu Principal e Tela de Créditos": [
          "Criando o \"Texto de Título\" do Menu Principal",
          "Criando o \"Background\" e \"Imagem\" do Menu Principal",
          "Criando os \"Botões\" do Menu Principal",
          "Criando a Tela de Créditos",
          "Programando os Botões do Menu Principal",
          "Programando a Tela de Créditos"
        ],
        "Finalizando e Exportando o Jogo": [
          "Retornando ao Menu a partir das fases",
          "Exportando o Jogo Final",
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Não é necessário ter experiência com programação ou com a Unity (vamos no passo-a-passo de tudo)",
        "Versão gratuita da Unity (usaremos a 2021, mas os ensinamentos valem para algumas outras versões também)",
        "Visual Studio Code da Microsoft (é grátis)",
        "Uma paixão por Aprender e Desenvolver Jogos :)"
      ],
      "description": "Neste curso nós iremos aprender a desenvolver um Jogo de Plataforma 2D (desde o início do projeto até sua build final). Para criá-lo, estaremos utilizando a poderosíssima Unity Engine e a incrível Linguagem de Programação C#\n\n\nCurso voltado para Iniciantes na área, ou seja, todas as aulas foram gravadas e editadas dando o máximo de atenção aos detalhes;\n\n\nIremos desde os primeiros passos (instalação dos programas) até os passos finais (exportando o jogo em um arquivo que pode ser enviado para outras pessoas);\n\n\nAprenderemos como criar um Controle para personagens 2D, com movimento, pulo, deslizar na parede e wall jump - inserindo e configurando as animações de cada ação; Inimigos que caminham entre pontos pré-estabelecidos (lhe dando mais controle no level design); Itens coletáveis que somem quando o jogador encosta neles; Molas que jogam o jogador para cima (lhe dando aquele impulso extra para chegar em lugares mais altos); Criar fases 2D utilzando Tilemaps e Spritesheets; Plataformas que desaparecem depois que o jogador sobe nelas; Espinhos e Serras giratórias para deixar o jogo mais desafiador e muito mais;\n\n\nNa hora da programação, aprenderemos também o que são Variáveis, Condições, Métodos, Arrays e mais, com a Linguagem de Programação C# (criada pela Microsoft);\n\n\nEntenderemos como que funciona a Unity e como que podemos criar nossos jogos nela, em mais de 60 aulas bem elaboradas, totalizando mais de 15 horas de conteúdo!\n\n\nE é claro, se tiver qualquer dúvida durante as aulas, não hesite em perguntar no campo de perguntas. Ficarei muito feliz em lhe ajudar.\nE também, se estiver com dúvidas em relação a compra do curso, dê uma olhada nas classificações e avaliações dele.\nEspero que aprenda diversas coisas novas com as aulas e que também se divirta bastante com o jogo que estaremos criando nelas!\n\n\nAbraços :)",
      "target_audience": [
        "Desenvolvedores Indie de Jogos",
        "Quem está querendo entender um pouco mais sobre criação de jogos na Unity",
        "Quem sempre quis criar um jogo 2D"
      ]
    },
    {
      "title": "Aprende a desarrollar videojuegos con Unity 2021 [Breakout]",
      "url": "https://www.udemy.com/course/aprende-a-desarrollar-videojuegos-con-unity-2021-breakout/",
      "bio": "Breakout",
      "objectives": [
        "Conceptos básicos de C# como variables, sentencias if y arreglos.",
        "Detección de colisiones, leer Input del usuario y crear movimientos del jugador.",
        "Crear power ups.",
        "Recolectar y destruir GameObjects.",
        "Implementar efectos de sonido, música ambiental, y efectos con animaciones."
      ],
      "course_content": {
        "Introducción": [
          "Bienvenida",
          "Nunca he programado"
        ],
        "Hola Unity": [
          "Introducción",
          "Instalación de Unity",
          "El proyecto",
          "La interfáz de Unity",
          "Importación de assets",
          "Cómo hacer preguntas"
        ],
        "Básicos": [
          "Introducción",
          "Diseño orientado a componentes",
          "Start y comentarios",
          "Debug.Log",
          "Update",
          "Accediendo a la posición de un objeto (Transform)",
          "Mover un objeto (Suma de vectores)",
          "Leer el input del teclado",
          "Time.deltaTime"
        ],
        "Breakout": [
          "Introducción",
          "La escena del juego",
          "Paddle",
          "Bola",
          "Comportamiento de la bola",
          "Reto: Límites del área de juego",
          "Solución: Límites del área del juego",
          "Comportamiento de la bola continuación",
          "Haciendo el Paddle más interesante",
          "Reto: Velocidad de la bola",
          "Solución: Velocidad de la bola",
          "Comportamiento de los bloques",
          "Prefabs"
        ],
        "Dándole sentido al juego": [
          "Introducción",
          "GameManager",
          "Find",
          "FindObjectOfType",
          "Propiedades",
          "Reto: Destruir la bola",
          "Solución: Destruir la bola",
          "Tags para detectar el límite inferior",
          "Reto: Multiples vidas para el jugador",
          "Solución: Multiples vidas para el jugador",
          "Lanzmiento inicial",
          "Reiniciando la bola",
          "Límites del Paddle",
          "Midiendo el tiempo del juego"
        ],
        "La interfáz de usuario": [
          "Introducción",
          "Los elementos de la interfaz de usuario",
          "Pantalla de derrota",
          "Reto: Pantalla de victoria",
          "Solución: Pantalla de victoria",
          "UIController",
          "Cargar una escena al presionar un botón",
          "Reto: Cargar Main Menu",
          "Solución: Cargar Main Menu",
          "Mostrar vidas del jugador",
          "Reto: Mostrar el tiempo en la pantalla de victoria",
          "Solución: Mostrar el tiempo en la pantalla de victoria",
          "Reto: Crear el menú principal",
          "Solución: Crear el menú principal"
        ],
        "Implementación de arte": [
          "Introducción",
          "Agregar arte a la escena del juego",
          "Animación con Sprites",
          "Creando explosiones en la escena con Instantiate"
        ],
        "Audio": [
          "Introducción",
          "Componentes de audio",
          "AudioController",
          "Reto: Implementación de audio",
          "Solución: Implementación de audio"
        ],
        "Expandiendo las mecánicas del juego": [
          "Introducción",
          "Paddle grande (Corutinas)",
          "Súper bola",
          "Disparos desde el Paddle",
          "Crear instancias de power-ups"
        ],
        "Puliendo el juego": [
          "Introducción",
          "Corregir bola lenta en el eje Y",
          "Problemas con las balas",
          "Trail para la súper bola",
          "Mejorando el código de OnDestroy",
          "Power-ups que no se destruyen",
          "Configuración del Canvas",
          "Sonidos al presionar un botón",
          "Reto: Componente de movimiento de los power-ups",
          "Solución: Componente de movimiento de los power-ups",
          "GameManager como Singleton",
          "Crear ejecutable del juego",
          "Reto: Modificaciones al juego"
        ]
      },
      "requirements": [
        "No es necesaria experiencia previa en programación o en Unity.",
        "Entendimiento básico de matemáticas (orden de las operaciones, suma, resta, multipicación) facilitarán la comprensión de cierta lógica en el código.",
        "Una computadora capaz de correr Unity."
      ],
      "description": "Este curso está desarrollado por miembros del equipo de certificación de Unity Technologies.\nSi estás interesado en aprender las bases para desarrollar increíbles juegos utilizando las mejores prácticas, entonces este curso es para ti. Este curso es el único de su tipo ya que no solo te enseña a programar dentro de Unity, si nunca has programado, este curso incluye un curso de programación en C# dentro, ahora no tienes excusa para empezar a desarrollar videojuegos. Desarrolla un videojuego con Unity 2021 [Breakout] te da una introducción a la programación en C# y a Unity, te propone los fundamentos del desarrollo utilizando buenas prácticas. El proyecto del curso está inspirado en el legendario Breakout con mecánicas y gameplay ideales para comenzar a aprender.\nEn este curso verás:\nCurso básico de programación en C#\nDetección de colisiones, leer el input del usuario y crear movimientos del jugador\nCreación de power ups.\nRecolectar y destruir GameObjects.\nImplementar efectos de sonido, música de fondo y efectos con animaciones.\nDistribución de tu juego para que lo compartas con tus amigos.\n¡Y mucho más!\nEste curso también incluye todos los assets necesarios para crear tu juego y contenido adicional que será un gran material de apoyo si te estás iniciando en el desarrollo de videojuegos.\n¿Por qué aprender desarrollo de videojuegos con Unity?\nLa Industria del Videojuego es una industria que vale $160 billones de dólares a nivel mundial. Para 2023, se espera que ese número llegue a los $200 billones de dólares. Con Unity siendo el motor de juegos más utilizado a través de múltiples plataformas, nunca ha sido un mejor momento para entrar en el campo. Como aprenderás en este curso, los tipos de juegos que puedes crear con Unity y C# son ilimitados. El desarrollo de videojuegos es un gran pasatiempo, permitiéndote aprender una nueva habilidad al mismo tiempo que juegas tu juego y lo compartes con tu familia y amigos. También es una carrera emocionante y gratificante, donde muchos desarrolladores exitosos, incluido yo, hemos aprendido las bases del desarrollo de videojuegos con cursos como este y no en un salón de clases tradicional. Todo gran juego empieza en algún lado, así que ¿por qué no empezar el tuyo? Mientras que las personas suelen encontrar la programación o la creación de juegos intimidante, este curso utiliza una técnica de enseñanza que te permitirá obtener una comprensión profunda de los conceptos mientras desarrollas tus juegos. Gracias a la comunidad de Unity, podrás conectarte con otros desarrolladores, trabajar juntos en nuevos proyectos y hacer algunos juegos increíbles.\n¿Por qué aprender de mi?\nPertenezco al equipo de certificación de Unity donde me encargo de escribir y validar las preguntas que contestan quienes buscan certificarse con esta herramienta.\nAprender a programar videojuegos puede sonar intimidante para muchos, es por eso que este curso está diseñado de la manera más amigable pero sin dejar de lado los divertidos retos que poco a poco subirán de dificultad. Creo que la mejor forma de aprender a programar es haciéndolo; por lo tanto, este es un curso altamente interactivo. Los retos únicos integrados a lo largo de este curso se asegurará de que no solo sepas programar algo, sino de que entiendas la lógica que está detrás. Como un ingeniero autodidacta me doy cuenta de que no hay muchos cursos de buena calidad que permitan a los principiantes captar realmente los conceptos esenciales del desarrollo de videojuegos.\nHe trabajado con Unity desde la versión 2.0 y he desarrollado videojuegos para consolas de Nintendo y Playstation, también me he divertido con algunos desarrollos en móviles y realidad virtual, he trabajado para empresas grandes y también he participado en desarrollos independientes, además tengo varios años de experiencia enseñando desarrollo de videojuegos en diversas universidades.\nAl terminar este curso entenderás los conceptos básicos de la programación en C# y serás capaz de desarrollar tus propios juegos. También te sentirás confiado sabiendo que has dominado las últimas y más grandes técnicas en el desarrollo de videojuegos que te impulsarán a lograr el éxito en tus aspiraciones personales y profesionales.\n¡Únete a mi hoy en esta gran aventura! Te veo dentro del curso.",
      "target_audience": [
        "El estudiante ideal para este curso es alguien que esté interesado en el desarrollo de videojuegos con Unity y C# y que esté buscando un curso interactivo basado en retos..",
        "Personas interesadas en desarrollar juegos en Unity utilizando buenas prácticas.",
        "Este curso no es para alguien que es un desarrollador avanzado de juegos. Este curso tampoco es para estudiantes que no están interesados en aprender a programar ya que obtendrás una introducción a los fundamentos de la programación en C#."
      ]
    },
    {
      "title": "Unreal Engine 4: Dal Game Design al Videogioco Completo",
      "url": "https://www.udemy.com/course/unreal-engine-4-a-crash-course-to-indie-game-making/",
      "bio": "Impara a creare un gioco su Unreal Engine 4 dall'idea al prodotto finale!",
      "objectives": [
        "Creare il Design di un Videogame",
        "Programmare un videogame",
        "Creare un gioco su Unreal Engine 4",
        "Imparare e Programmare su Unreal Engine 4",
        "Creare un videogioco in tutte le sue fasi",
        "Make Videogame Design",
        "Programming game",
        "Learn programming on UE4",
        "Create game on UE4",
        "Create Game from start to end"
      ],
      "course_content": {
        "Introduzione": [
          "Introduzione",
          "Ottenere il Massimo",
          "Presentiamoci!"
        ],
        "Base Del Progetto - Primi Passi": [
          "Introduzione + Cosa è e come si realizza l'idea di un videogioco",
          "Studio della Reference",
          "Il Game Design Document",
          "Il Game Design Scheme",
          "Creiamo il nostro progetto su UE4"
        ],
        "La Programmazione e Le Blueprint": [
          "Il Blueprint Editor",
          "Le Variabili",
          "Gli Array, Le Mappe e i Set",
          "I Flow Control",
          "Funzioni ed Eventi",
          "Classi e Classi Figlie",
          "Comunicazione tra le Classi",
          "La Gestione del Tempo",
          "Quiz di fine sezione"
        ],
        "Il Character": [
          "Il PlayerController - Input di Movimento e Rotazione",
          "Il Player Controller - Action Input e Utility",
          "Il Character - Classe di Base",
          "Il Character - Fare Danni",
          "Il Character - Ricezione Danni",
          "Il Character - Le Protezioni",
          "Il Character - La Morte",
          "EXTRA: Il Character - Animation Blueprint",
          "EXTRA: Il Character - Debug Utilities",
          "EXTRA: Il Character - Ottimizzazione del Danno"
        ],
        "Gli Interagibili - Le Box": [
          "Le Box - Classe di Base",
          "Le Box - Rilevare Collisioni",
          "Le Box - Tipologie di Box",
          "Le Box - Danni e Distruzione",
          "Le Box - Attivazione e Disattivazione",
          "Le Box - Spawn dei Collezionabili",
          "Le Box - Conteggio Box nella GameMode",
          "Le Box Parametriche - Salto Singolo, Salto Continuo, Vita",
          "Le Box Avanzate - Checkpoint, Multi Salto e TriggerBox",
          "Le Box Avanzate - Esplosive (TNT, NITRO)",
          "Le Box Avanzate - Protezione"
        ],
        "Gli Interagibili - I Collezionabili": [
          "I Collezionabili - Classe base",
          "I Collezionabili - Animazione di Spawn",
          "I Collezionabili - Ricezione Danni e Lancio",
          "I Collezionabili - Overlap Durante il Lancio e i Tipi Figli"
        ],
        "Gli Interagibili - Le trappole": [
          "Le Trappole - Classe di Base e Danni",
          "Le Trappole - A Tempo",
          "Le Trappole - Ad Interazione",
          "Potenziamo le trappole a tempo"
        ],
        "Gli Interagibili - I Portali": [
          "Classe Base dei Portali + Portale Vittoria",
          "EXTRA: Importare Content Pack durante lo sviluppo (Particellari)"
        ],
        "I Dinamici Ambientali": [
          "Dinamici Ambientali - Le Piattaforme Mobili",
          "Dinamici Ambientali - Zone di Morte Obbligata"
        ],
        "Prime Ottimizzazioni - Le Blueprint e Macro Library": [
          "CORREZIONE: Funzionalità relativa ad un asset ancora non creato",
          "Le Blueprint Function Library - Implementazione e Trasferimento Funzionalità",
          "Le Blueprint Macro Library - Implementazione e Trasferimento Funzionalità"
        ]
      },
      "requirements": [
        "Uso base dell'editor UE4 (Viewport, menu, settings, Actor View)",
        "Really Basic Know how to use Unreal Engine 4 Editor (Viewport, settings, and specific viewports)"
      ],
      "description": "Il primo corso italiano completo su Unreal engine 4 che ti spiegherà le basi del videogame making ricreando un grande classico dei generi platform come Crash Bandicoot.\n\n\nSe vuoi imparare tutto del videogame making da come si ragiona l'idea di un videogioco e si creano i documenti alla programmazione in generale fino a creare un prototipo tecnico funzionante allora sei nel posto giusto!\nin questo corso creerai:\nIl concept del videogioco partendo dall'idea fino ai documenti essenziali GDD(Documento di Game Design) e GDS(Schema di Game Design)\nImparerai le basi dell'informatica e la programmazione con le Blueprint di Unreal Engine 4\nUn prototipo tecnico funzionante e modulare di un gioco su Unreal Engine 4\nUn prototipo più raffinato grazie all'importazione di asset di produzione\nL'organizzazione e la strutturazione ordinata del tuo codice e del tuo progetto\nTi immergerai totalmente nello sviluppo di un progetto indie in tutte le sue varie fasi.\nAttraverso più di 90 lezioni mirate attraverserai tutto quello che è necessario per sviluppare un videogioco a prescindere dal genere.\nTi immergerai nella creazione di un platform stile Crash bandicoot dalle sue fasi di prototipo iniziale fino ad importare asset completi e farli funzionare perfettamente nella struttura che hai creato.\nTesterai il tuo metodo di studio attraverso challenge impegnative che metteranno alla prova tutte le conoscenze che hai acquisito e che ti renderanno in grado di espandere la tua idea in qualsiasi modo tu voglia.\ni Quiz di fine sezione ti aiuteranno a sedimentare la tua conoscenza e a renderti padrone della materia.\nAlla fine del corso sarai in grado di usare le tue conoscenze per costruire il gioco dei tuoi sogni senza più avere il timore di dove cominciare.\nSarai in grado di lavorare sia solo che in team e potenziare cosi il tuo lavoro\nFarai anche networking con me e con gli altri studenti per potenziare ancora di più il tuo apprendimento e velocizzare il tuo percorso.\nE per ultimo ma non meno importante saprai usare in maniera ottimale uno degli engine più acclamati e professionali dell'industria videoludica e cioè Unreal Engine 4\nPerchè imparare da me\nQuello che ti insegnerò non sono semplici istruzioni o metodi per realizzare un solo gioco.\nIn questo corso ti passerò tantissimi strumenti e un mindset che ti metteranno sulla giusta strada per entrare nell'industria del videogame making in maniera professionale.\nIl mio obiettivo è renderti capace di ragionare autonomamente e grazie alla teoria spiegata in maniera semplice ed ad un costante esercizio pratico potrai padroneggiare gli strumenti e usarli a tuo piacimento.\n\n\nEhi ma aspetta c'è di più !\nIl corso migliorerà costantemente attraverso i tuoi feedback e riceverai costantemente aggiornamenti su nuovi contenuti che verranno aggiunti.\nSe sei interessato anche ad approfondire la tua conoscenza su altri tipo di giochi o su differenti tecnologie allora controlla gli altri corsi udemy che saranno disponibili nei prossimi mesi.\nUnisciti a me in questo percorso e costruisci da oggi favolosi videogiochi in UE4!",
      "target_audience": [
        "Videogamers che vogliono entrare nel mondo del videogame making",
        "Developer software che vogliono imparare a sviluppare videogame",
        "Game Designer che vogliono approfondire la loro conoscenza e imparare a programmare il proprio gioco",
        "2D o 3D Artist che vogliono imparare il Game Design e la programmazione su Unreal Engine",
        "Sviluppatori di Videogame che vogliono imparare a usare Unreal Engine 4 e a conoscerne l'architettura"
      ]
    },
    {
      "title": "Learn 2D game development with unity and C#",
      "url": "https://www.udemy.com/course/learn-2d-game-development-with-unity-and-c/",
      "bio": "Learn 2D game development with unity and C#",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Environment Part 1": [
          "1)New Project",
          "2)Import the asset to the project",
          "3) Player Setting",
          "4)Player movement",
          "5)Player jump",
          "5)Player jump",
          "6)Enemy object",
          "7)Enemy Movement",
          "8)Game Over",
          "9)create Level",
          "10)Player Flip"
        ]
      },
      "requirements": [
        "no need"
      ],
      "description": "Learn how to create your very own 2D RPG game for mobile or PC using Unity2D, an industry-standard program used by many large gaming studios and indie developers across the world.\nYou won’t just be learning programming concepts in this course, but tying these concepts to real game development uses. You will have access to a course forum where you can discuss the topics covered in the course as well as the next steps to take once the course is complete.\nThis course has been designed to be easily understandable to everyone,we start from scrach,easy codes to hard codes and every code will be explained so whether you’re a complete beginner, an artist looking to expand your game development range or a programmer interested in understanding mobile game design, this course will help you gain a greater understanding of development.\nAt the end of this course you will have developed the ability to create such PC game elements as:\nCreating the world\nMake enemy\nMake player units\nAdvertisment with unity with update 2021\nJumping\nMaking diffrent Enemies\nLearning C# codes\n\n\nStart learning today and let me help you become a mobile and PC game developer!\n\n\n\n\nUnderstand how to earn revenue using advertising in their games\nLearn C#, a modern versatile programming language\nUnderstand the capabilities of mobile development in Unity\nDevelop strong and transferable problem solving skills\nGain an understanding of the game development process\n\n\nMac or PC capable of running Unity 2D\nThe latest version of Unity 2019 or 2020\n\n\nAnyone who wants to make their own mobile and pc games\nAnyone interested in learning to publish apps and games to the Play Store or stream\nComplete beginners with an interest in learning mobile and PC game development\nDevelopers who want to re-skill across to mobile development\nPeople who want to create and publish their own mobile or PC games",
      "target_audience": [
        "Beginner to Intermediate"
      ]
    },
    {
      "title": "Aprenda Unity 3D - Projeto Zelda",
      "url": "https://www.udemy.com/course/aprenda-unity-3d-projeto-zelda/",
      "bio": "Crie um protótipo 3D inspirado no clássico Zelda a link to the past",
      "objectives": [
        "Básico de Programação (Começando do zero)",
        "Mecânicas e Animações do Personagem",
        "IA para o Inimigo",
        "Montagem do Cenário",
        "Pós Processamento e Clima",
        "Sistema dinâmico de Câmeras"
      ],
      "course_content": {
        "Introdução": [
          "Boas Vindas",
          "Grupo de Alunos e Suporte",
          "Download e Instalação - Unity Hub",
          "Como ativar a Licença Gratuita da Unity",
          "Abrindo um novo Projeto - Escolha do Render Pipeline",
          "Interface e Configuração do Layout de Trabalho",
          "Conta na Unity, Asset Store e Assets do Projeto",
          "Package Manager - Cinemachine e Post Processing",
          "Intro. a Programação - Sequência lógica, métodos, variáveis e operadores",
          "Intro. Programação - Estrutura da classe, métodos e contexto",
          "Componentes, Configuração da Iluminação da Cena",
          "Preparando o Personagem",
          "Programando o Movimento do Player",
          "Programando a Rotação do Player",
          "Aplicando a Animação de Caminhada",
          "Aplicando a Animação de Atack, Layer de Animação e Máscara de Avatar",
          "Adicionando o Sistema de Câmera Dinâmico",
          "Importando as Partículas, Organizando o Projeto",
          "Adicionando FX ao Attack e Comportamento de Animação",
          "Programando o Attack, Cortando a Grama",
          "Preparando o Inimigo Slime, configurando o Animator",
          "[Slime] - Programando o HIT, DIE, HP, Corroutine",
          "[IA] - Criando o sistema de Máquina de Estado, Fluxograma, Preparação do Script",
          "[IA] Programando a Máquina de Estado - Parte 1",
          "[IA] Programando a Máquina de Estado - Parte 2",
          "[IA] Programando a Máquina de Estado - Parte 3",
          "[IA] Programando a Máquina de Estado - Parte 4",
          "[IA] Programando a Máquina de Estado - Parte 5",
          "[IA] Programando a Máquina de Estado - Parte 6",
          "Refinando as Mecânicas de Attack do Inimigo, Matrix de Colisão",
          "Level Design - Com e sem uma Ferramenta de Criação",
          "Configurando os Sensores da Câmera, Inserindo Paredes Invisíveis",
          "Post Processamento e Gerenciamento Dinâmico do Clima",
          "Aplicando o NavMesh no novo Mapa",
          "Refinando a IA e removendo BUGS previstos",
          "Coletando Item e Exibindo na HUD",
          "Dropando Itens",
          "Detectando Chão, Aplicando Gravidade e Sistema de Pulo",
          "Aprenda Unity PRO - Apresentação"
        ]
      },
      "requirements": [
        "É necessário ter um computador capaz de rodar a Unity e Jogos em 3D"
      ],
      "description": "Neste curso você irá aprender tudo o que precisa para criar um protótipo de um jogo inspirado em Zelda.\nVamos além do básico principalmente no que se trata de IA para inimigos, onde iremos planejar e executar uma IA baseado em máquina de estados onde o inimigo terá diversos comportamentos distintos o que irá dar a você o conhecimento necessário para criar inimigos muito mais elaborados para seus jogos.\nNeste curso você também irá aprender a manipular via script o recurso de PostProcessing e também manipular via Script o sistema de partículas.\nO Conteúdo deste curso vai abrir sua mente sobre as possibilidades de desenvolvimento e também servirá para você ver que nem todo curso aborda só o básico do básico.\nSeja bem vindo e bons estudos.",
      "target_audience": [
        "Pessoas que queiram iniciar na área de desenvolvimento de jogos 3D"
      ]
    },
    {
      "title": "Unreal Engine 4: Oyun Geliştirme Dünyasına İlk Adım",
      "url": "https://www.udemy.com/course/unreal-engine-4-oyun-gelistirme/",
      "bio": "Platformun ilk Türkçe UE4 dersi ile sıfırdan iki adet oyun geliştirip, Android/IOS markette yayınlayın ve para kazanın!",
      "objectives": [
        "Unreal Engine ile Windows, Android, iOS platformlarında da oyun geliştireceksiniz.",
        "Oyununuzu Google Play ve App Store'da yayınlamayı öğreneceksiniz.",
        "Reklam geliri ve satış geliri modelleri ile oyununuzu kullanıma sunabileceksiniz.",
        "Güçlü bir problem çözme ve algoritma kurma becerisi edineceksiniz.",
        "Platformun ilk Türkçe ve en güncel kursu ile özellikle mobil oyun geliştirme sorunlarınıza çözüm bulacaksınız.",
        "UE4.25 ile gelen yeni güncel ayarları öğreneceksiniz."
      ],
      "course_content": {
        "Nereden Başlamalıyım? Yeni Sürüm ve Eski Sürümler Tek Kursta": [
          "2021 Güncellemesi!",
          "Temel Gereksinimler ve Uyarılar"
        ],
        "(4.25 ve Sonrası için) Giriş": [
          "4.25+ için Unreal Engine ve Android Studio Kurulumu"
        ],
        "(4.25 ve Sonrası için) Panelle Etkileşim": [
          "İlk Proje Oluşturma ve Temel Unreal Engine Komutları",
          "Temel Unreal Engine Komutları ve Geliştirici Ekranı #2",
          "Temel Unreal Engine Komutları ve Geliştirici Ekranı 3",
          "Temel Proje Ayarları ve Uyarılar",
          "Temel Sahne Tasarımı"
        ],
        "(4.25 ve Sonrası için) Temel İşlevler (Genişletilmiş)": [
          "Trigger Box ve Blueprint Ön bakış",
          "Level İşlemleri ve Widget Tasarımı"
        ],
        "(4.24 ve Öncesi için) Giriş": [
          "Bu Kursun İlerleyişi",
          "Unreal Engine Yükleme (Windows)",
          "Diğer Yüklemeler (Android Studio)"
        ],
        "(4.24 ve Öncesi için) Panelle Etkileşim": [
          "Temel Unreal Engine Komutları",
          "Temel Proje Ayarları",
          "Blueprint'e Giriş"
        ],
        "(4.24 ve Öncesi için) Oyun Proje Bilgisi ve Temel İşlevlere Giriş": [
          "İlk Level ve Karşılama Ekranı",
          "Karşılama Ekranının Widget Tasarımı ve Blueprint ile Bağlantısı",
          "Karşılama Ekranı Tasarımlarının ve Level Girişinin Tamamlanması",
          "Box Trigger, Level Başlama ve Bitme Noktası, Ayarlar Menüsünün Tamamlanması"
        ],
        "Işık, Kamera ve Ses": [
          "Işıklandırma",
          "Karakter Üzerinde Işıklandırma",
          "Kamera",
          "Tuş Ayarları",
          "[YENİLENDİ] Ses"
        ],
        "Projenin Birleştirilmesi": [
          "Doku Ekleme ve Giriş Seviyesinde Proje Ödevi"
        ],
        "Aktif Blueprint İşlevleri": [
          "Save ve Load Dosyalarını Oluşturmak",
          "Kayıt Sorgulama ve Leveller Arası Geçiş",
          "[YENİLENDİ] Grafik Ayar Menüsü - Tasarım",
          "[YENİLENDİ] Grafik Ayar Menüsü -Blueprint İşlemleri - 1",
          "[YENİLENDİ] Grafik Ayar Menüsü -Blueprint İşlemleri - 2",
          "[YENİLENDİ] Grafik Ayar Menüsü -Blueprint İşlemleri - 3",
          "[YENİLENDİ] Grafik Ayar Menüsü - Özel Grafik Ayarları - 1",
          "[YENİLENDİ] Grafik Ayar Menüsü - Özel Grafik Ayarları - 2",
          "Ses Ayar Menüsü",
          "Işık Ayar Menüsü",
          "Blueprint ile Level İçi İşlemler"
        ]
      },
      "requirements": [
        "PC veya Mac",
        "Harici Ekran Kartı ve en az 4GB RAM",
        "Güçlü ve sürdürülebilir bir öğrenme arzusu",
        "SSD Hard disk (Tavsiye Edilir)"
      ],
      "description": "UE4 İLE ÜÇ AŞAMADA OYUN ÜRETİN:\nUnreal Engine Sistemini Tanıyın\nAndroid, IOS, Windows Hatta Linux için Oyununuzu Geliştirin\nGoogle Play ve Apple Store Mağazalarınızı Açın, Yayınlayın ve Gelir Elde Edin\nBirlikte sıfırdan başlayıp, oyununuza reklam kodu ekleme, oyun içi satın alma ve yayınlama aşamasına kadar ilerliyoruz!\nBaşından sonuna Türkçe olan Unreal Engine 4 dersi ile PC veya Mobil platformlarda oyun geliştirmeyi, mobil marketlerde oyununuzu yayınlamayı, oyun içi satın almayı, AdMob reklamları veya direk satış kanallarıyla oyununuzdan gelir elde etmeyi öğreneceksiniz.\nKurs süresince SIFIRDAN 2 OYUN geliştirme projelerini de ders içerisinde tüm detaylarıyla size gösteriyor olacağım. Bu sayede kursta öğreneceğiniz bilgileri, yayınlanmış bir proje üzerinden pekiştirecek, bu projelerin nasıl oluştuğunu daha net bir şekilde kavrayacaksınız.\nEk olarak;\nWindows işletim sisteminde WMVARE programı kurulumu anlatılmıştır.\nSanal makina üzerinden Apple Store sisteminde oyun yayınlama işlemi anlatılmıştır.\nApple Store güncel mağaza süreçlerinin tamamı anlatılmıştır.\nGoogle Play güncel mağaza süreçlerinin tamamı anlatılmıştır.\nKurs müfredatı dışında kalan 3D model temini, 3D modele animasyon ekleme süreçleri de anlatılmıştır.\nUE4.24 ve öncesi ile UE4.25 ve sonrası arasındaki sistem ayarları ayrımı anlatılmıştır.\n2021 güncellemesi ile tüm kurs yenilenmiş ve UE4 sürümlerine göre bölümlere ayrılmıştır.\nYeni Kavram Sistemi\nKursun yayınlandığı günden bugüne gelen benzer soruların derlemesinden oluşan videolu soru çözümleri eklenmiştir. Müfredat içerisinde anahtar kelimeyi aratarak, ihtiyaç duyduğunuz çözümü uygulamalı olarak öğrenebilirsiniz.",
      "target_audience": [
        "Sıfırdan mobil oyun geliştirmek isteyenler",
        "Unreal Engine ile modern oyun geliştirmenin inceliklerini kavramayı arzulayanlar",
        "Geliştirdikleri oyunların nasıl yayınlanacağını öğrenmek isteyenler",
        "Oyunlarından gelir elde etmeyi hedefleyenler",
        "Google Play ve Apple Store Mağazalarında oyun yayınlamak isteyenler"
      ]
    },
    {
      "title": "【Unity C# ゲーム開発脱初心者】本格将棋開発講座",
      "url": "https://www.udemy.com/course/ild-unity-shogi/",
      "bio": "将棋のルールを知らなくても大丈夫！Unityを使ってゼロから将棋をプログラミングしていきます。将棋のルールを噛み砕いて図や動きで解説→プログラミングを進めていくので誰にでも分かりやすい内容になっています！",
      "objectives": [
        "ゲーム開発に必要な思考方法",
        "ゲーム開発に必要なUnityのスキル",
        "ボードゲームのプログラミングの基礎",
        "応用可能なボードゲーム制作手法"
      ],
      "course_content": {
        "紹介": [
          "紹介",
          "Q&Aガイドライン",
          "コースの進め方"
        ],
        "このコースで使うC#基礎おさらい": [
          "前提知識とコメントとログ",
          "よく使う型と変数",
          "変数の生存期間",
          "4.変数の代入（型キャスト）",
          "const(定数)",
          "enum(列挙型)",
          "コンソールログの使い方",
          "演算と演算子",
          "比較演算子",
          "if文",
          "switch文",
          "for文",
          "while文",
          "配列",
          "2次元配列",
          "List",
          "13.Listの応用",
          "Dictionary",
          "foreachと配列関係まとめ",
          "関数入門①",
          "関数入門②",
          "クラス入門①",
          "クラス入門②",
          "スクリプトからコンポーネントへアクセス",
          "自作クラスへのアクセス方法",
          "アクセスレベルについて",
          "3と5の倍数で文字を表示する",
          "AudioSource(サウンド)の操作①",
          "AudioSource(サウンド)の操作②"
        ],
        "本編": [
          "#0 ざっくりと将棋のルール確認",
          "#1 プロジェクト作成と素材準備",
          "#1 ダウンロードURL詳細メモ",
          "#2 3Dオブジェクト作成",
          "#3 2D(UI)オブジェクト作成",
          "#4 GameSceneDirector作成とUI初期設定",
          "#5 タイル表示",
          "#6 ユニット表示",
          "#7 UnitController作成と初期設定",
          "#8 ユニット初期化関数",
          "#9 ユニット選択",
          "#10 ユニット移動",
          "#11 ユニット移動範囲制限",
          "#12 ユニット移動カーソル",
          "#13 ターン制御",
          "#14 持ち駒タイル作成",
          "#15 相手の駒を取る",
          "#16 桂馬の動き",
          "#17 銀の動き",
          "#18 金の動き",
          "#19 玉の動き",
          "#20 角の動き",
          "#21 飛車の動き",
          "#22 香車の動き",
          "#23 成駒の動き",
          "#24 玉の動き②",
          "#25 持ち駒の動き",
          "#26 駒の移動範囲から王手を除外する",
          "#27 成",
          "#28 勝敗チェック",
          "#29 ランダムに指すCPU",
          "#30 サウンド",
          "#31 TitleScene作成",
          "#32 デバッグ方法(最後に)",
          "#33 (EXステージ)カメラを動かせるようにしてみよう！",
          "#34 (EXステージ)演出を追加してみよう！",
          "#35 持ち駒が置ける場所のバグ修正",
          "#36 成りのバグ修正"
        ]
      },
      "requirements": [
        "パソコンの基本的な操作",
        "Unityである程度ゲーム開発をしたことがある",
        "脱初心者を目指している"
      ],
      "description": "ボードゲーム制作を通してゲームクリエイターへの一歩を踏み出そう！\nつまづきやすい部分は資料付きで解説を入れたり、画面ズームを使って進めていくので挫折しにくい構成になっています。\n1レクチャーを10分程度にまとめたハンズオン形式となっているので\n毎日少しづつでも、動画でやっていることを真似するだけでもOKなので、効率的に学習できる内容となっています。\n\n\n今回の題材は将棋\n主にボードゲームのロジックが学習できる内容になっています。\nゲームロジックを実装して、幅広いゲーム開発の知識を手に入れよう！\n初心者→脱初心者→初級者→中級者の中で、脱初心者向けにあたるコースです。\n\n\nこちらのコースでは\nC#の基本的な使い方\n将棋のルール\n将棋の作り方\nが効率的に学習できます。\nなるべくスクリプト（プログラミング）を利用して制作していくので\n将棋に限らず、アイデア次第で汎用的なボードゲームを制作する知識も身につきます。\n\n\nまた、私のコースは日々頂いたレビューに対応しアップデートを行なっていきますので\n高評価＆レビューいただけますと励みになります。",
      "target_audience": [
        "ボードゲーム制作にチャレンジしたい",
        "最初から最後まで一貫してゲームを作りたい",
        "脱初心者を目指している",
        "ゲーム制作の実例を知りたい方"
      ]
    },
    {
      "title": "Unity: Curso Completo Profesional de Programación desde Cero",
      "url": "https://www.udemy.com/course/unity-curso-completo-profesional-de-programacion-desde-cero/",
      "bio": "Aprende paradigmas de programación desde nivel básico a experto & sé proficiente en desarrollo de algoritmos para Unity.",
      "objectives": [
        "Entender en su totalidad la herramienta de Processing & Unity, así como sus APIs.",
        "Comprender qué es un lenguaje de programación.",
        "Utilizar correctamente IDEs para generar código que sea compilable.",
        "Entender en su totalidad conceptos de programación como Variables, estructuras de control & ciclos.",
        "Utilizar eficazmente sistemas de estructuras de datos para guardar información.",
        "Comprender perfectamente el funcionamiento de los métodos ó funciones en un lenguaje de programación.",
        "Entender en su totalidad el funcionamiento técnico de diferentes estructuras de datos como arreglos y listas.",
        "Comprender técnicamente programación orientada en objetos & clases y ejecutarla a la perfección para todo tipo de desarrollo.",
        "Integrar de manera exitosa el API de Processing en Java para ser utilizada en diferentes proyectos.",
        "Integrar de Manera exitosa conceptos de programación para hacer desarrollos gráficos en Processing.",
        "Comprender completamente la matemática detrás de las transformaciones en computación gráfica e implementarlas de manera exitosa.",
        "Obtener conceptos robustos en ingeniería de computación gráfica y su utilidad en desarrollo de videojuegos y programación gráfica.",
        "Entender el concepto de control de versiones para trabajo eficiente con código.",
        "Utilizar eficazmente la interfaz de Unity.",
        "Utilizar eficazmente la Documentación de Unity & ser capaz de solventar problemas con ella.",
        "Entender el funcionamiento de los Prefabs, capas & tags en Unity.",
        "Comprender todo el Pipeline de Renderizado de Unity utilizando materiales, texturas y diferentes sistemas de iluminación en tiempo real.",
        "Comprender la jerarquía de Unity y su utilidad en organización.",
        "Integrar de manera exitosa el API de Unity en el lenguaje de C# para ser utilizada en diferentes proyectos.",
        "Importar modelos & animaciones de software externo para ser utilizados en diferentes proyectos. Comprensión de manejo de estados por código.",
        "Exportar un proyecto de Unity a diferentes plataformas como Windows, Mac, Web Y Android."
      ],
      "course_content": {
        "Bienvenida": [
          "¡Hola a todos!"
        ],
        "Introducción a la programación. Processing.": [
          "¿Qué es programar? / Descarguemos Processing",
          "¿Qué es un lenguaje de programación? ¿Cuántos hay?",
          "Veámos Processing. ¿Qué hace cada botón? ¿Qué es un compilador?¿Qué es un error?",
          "¡Hola Mundo!",
          "Variables: Entero",
          "Variables: Float / Double. Decimales",
          "Variables: String / Asignación de Variables.",
          "Variables: Boolean.",
          "Estructuras de control: If / Añadiendo comentarios.",
          "Estructuras de control: Else",
          "Estructuras de control: Else If",
          "Estructuras de control: Y / Ó",
          "Estructuras de control: Mayor que, Menor que.",
          "Estructuras de control: If Anidado. Operaciones con booleanos.",
          "Utilizando el Debbuger.",
          "Funciones Cíclicas: While",
          "Funciones Cíclicas: For",
          "Funciones Cíclicas: For Anidado.",
          "Break / Return en Ciclos",
          "Funciones. Conceptos Básicos.",
          "Funciones: Argumentos ó Parámetros",
          "Funciones: Retorno de datos.",
          "Funciones: Recursividad",
          "¡No siempre tenemos que saberlo todo!",
          "¿Qué es RGB? / Utilizando la documentación para buscar funciones."
        ],
        "Arreglos & Listas": [
          "¿Qué es un arreglo?",
          "Declarando Arreglos",
          "Comprendiendo mejor los arreglos.",
          "Practicando con arreglos: Búsqueda",
          "Practicando con arreglos: Ordenamiento Parte 1",
          "Practicando con arreglos: Ordenamiento Parte 2",
          "¿Qué es una lista?",
          "Trabajemos con listas. / Introducción a programación con objetos."
        ],
        "Programación Orientada a Objetos": [
          "¿Qué es una clase?",
          "Clases: Parte 1",
          "Clases: Parte 2",
          "Clases: Parte 3",
          "Clases: Parte 4",
          "Clases: Parte 5",
          "Clases: Parte 6",
          "Clases: Parte 7",
          "Clases: Recapitulación."
        ],
        "Control de Versiones": [
          "¿Qué es control de versiones? / Descargando GitHub Desktop",
          "Utilizando el control de versiones"
        ],
        "Computación Gráfica - Processing": [
          "¿Qué es un vector?",
          "Renderizar un cuadrado. Conceptos. ¿Qué es render?",
          "Renderizar un cuadrado: Creando clase punto.",
          "Renderizar un cuadrado: Creando clase línea",
          "Renderizar un cuadrado: Creando clase cuadrado.",
          "Matrices de transformación: ¿Qué son? / Traslación",
          "Matrices de transformación: Traslación Parte 2",
          "Matrices de transformación: Traslación Parte 3. Implementación",
          "Matrices de transformación: Traslación Parte 4. Implementación",
          "Matrices de transformación: Traslación Parte 5. Implementación",
          "Matrices de transformación: Traslación Parte 6. Implementación",
          "Matrices de transformación: Escala Parte 1",
          "Matrices de transformación: Escala Parte 2",
          "Matrices de transformación: Escala Parte 3",
          "Matrices de transformación: Escala Parte 4. Problema Matemático.",
          "Matrices de transformación: Escala Parte 5.",
          "Matrices de transformación: Rotación Parte 1",
          "Matrices de transformación: Rotación Parte 2. Implementación.",
          "Conceptos: Frames por segundo",
          "Función Draw()",
          "Matrices de transformación: Utilizando animaciones para probarlas.",
          "Funciones de Processing - Aplicando lo aprendido.",
          "Ejercicio de Animación: Parte 1",
          "Ejercicio de Animación: Parte 2 - Suma de vectores",
          "Ejercicio de Animación: Parte 3 - Ciclo For Each",
          "Ejercicio de Animación 2",
          "Matrices de Transformación en 3 dimensiones."
        ],
        "Unity - Introducción": [
          "Descargando Unity",
          "Interfaz de Unity Parte 1",
          "Interfaz de Unity Parte 2",
          "Interfaz de Unity Parte 3. Componentes.",
          "Documentación de Unity",
          "Utilizando Visual Studio O Rider para programar."
        ],
        "Trabajando con Unity": [
          "Compilando en Visual Studio O Rider",
          "¿Cómo funcionan los scripts en Unity?",
          "Prefabs, Capas y Tags"
        ],
        "Iluminación & Render en Unity": [
          "Tipos de Luces",
          "Materiales & Texturas",
          "Iluminación Global",
          "Probadores de Luz: Iluminación Global",
          "Probadores de Reflejo: Iluminación Global",
          "BackFace Culling - Vector normal de Geometría.",
          "Utilizando Cookies en Iluminación para sombras."
        ],
        "Proyecto #1 en Unity": [
          "¿Qué vamos a hacer?",
          "Creando el Nivel",
          "Comprendiendo Componentes Iniciales / Creando Prefabs",
          "Obteniendo Componentes Por Código / Clase Rigid Body",
          "Set & Get en C# / Serialized Field / Función Explotar",
          "Creando Explosión. OnMouseDown.",
          "Instanciando GameObjects: Instantiate / Obteniendo Input del teclado",
          "Enparentando Objetos en la jerarquía.",
          "Obteniendo Clases necesarias en una lista para acceder a métodos de la clase",
          "Reseteando Posición para cada objeto de la lista.",
          "Generando Colores aleatorios para el Material del Enemigo",
          "Generando Posición Y Escala Aleatoria",
          "Eliminado Enemigos / Destroy",
          "Nuevo Tipo de Dato: Enumerador / Enum."
        ]
      },
      "requirements": [
        "¡Breve experiencia con conceptos de programación & unity es levemente recomendable pero para nada necesario!",
        "Por lo demás no se preocupen, ¡Vamos de 0 a nivel Profesional!"
      ],
      "description": "¿Quieres empezar a trabajar Unity? ¿No sabes programar mucho? ¿Quieres aprender acerca de variables, estructuras de control, funciones, estructuras de datos, programación orientada a objetos, clases y conceptos de ingeniería en computación gráfica para hacer desarrollos profesionales? ¡Este curso es para ti!\n¡No debes tener experiencia previa en absoluto! Aprenderás toda la interfaz. TODOS los conceptos necesarios para programar y desarrollar sin mayor inconveniente. Comprenderás todo el API de Unity, programarás utilizando técnicas de la industria y métodos enseñados en carreras de ingeniería. Tendrás conceptos matemáticos y técnicos FUNDAMENTALES para sobresalir de tu competencia.\nHaremos varios ejercicios, primero utilizaremos un software llamado processing. Es perfecto para empezar. Veremos técnicas de la industria y utilizaremos técnicas imprescindibles que permitirán que tu trabajo tenga la máxima calidad posible. Al final, tendrás un proyecto que atacar con nivel PROFESIONAL que debes terminar por tu cuenta!. Mejor aún, ¡Encontraste el curso más completo, más nuevo, más económico y actualizado de Unity, Processing & Programación en general en todo Udemy en español!\n¡Te esperamos!",
      "target_audience": [
        "Cualquier persona que desee aprender a programar en Unity ó Processing desde 0.",
        "Cualquier persona que desee profundizar sus conocimientos en Unity ó Processing.",
        "Cualquier persona que desee aprender a programar desde 0 para luego migrar a otro lenguaje.",
        "Cualquier persona que desee entender los conceptos de computación gráfica requeridos por el software.",
        "Cualquier persona que desee aprender fundamentos de programación o paradigmas como Clases, Objetos y estructuras de datos para mejorar su proficiencia en el entendimiento de programación & desarrollo de sistemas."
      ]
    },
    {
      "title": "Criando primeiro jogo FPS na Unreal Engine 4 com Blueprint",
      "url": "https://www.udemy.com/course/criando-primeiro-game-fps-na-unreal-engine-4-com-blueprint/",
      "bio": "Crie seu primeiro game FPS usando o sistema de Blueprint da Unreal Engine 4",
      "objectives": [
        "Criar programação de jogos SEM DIGITAR UMA LINHA CÓDIGOS de Linguagem de Programação",
        "Criar códigos utilizando Blueprints.",
        "Criar sistemas de Fire, Aim, Reload, Run, Crouch e muito mais",
        "Criar Efeitos de Som e MuzzeFlash em uma Arma",
        "Começar a Entender e Utilizar a Inteligência Artificial da UE4",
        "Criar ordas de Inimigos",
        "Criar animação Física RAGDOLL de personagens",
        "Utilização de VFX no seu game",
        "Criar um HUD",
        "Criar Sistema de Critical Damage e Normal Damage",
        "Utilizando Line Trace By Channel e Sphere Trace By Channel",
        "E muito mais"
      ],
      "course_content": {
        "Modulo - 1 - Introdução": [
          "Introdução",
          "2 - Criando o primeiro projeto",
          "3 - Entendendo a Interface da UR4",
          "4 - Introdução ao Bluesprint (Variáveis)",
          "5 - Importando Assets para Unreal"
        ],
        "Modulo - 2 - Movimentação": [
          "1 - Adicionando o personagem ao Novo Projeto",
          "2 - Movimentação 1-5 - [Blueprint]",
          "3 - Movimentação 2-5 - [EventGraph]",
          "4 - Movimentação 3-5 - [AnimGraph 1-2]",
          "5 - Movimentação 4-5 - [AnimGraph 2-2]",
          "6 - FirstPersonCamera",
          "7 - Aim Rotation"
        ],
        "Modulo - 3 - Arma 1-2": [
          "1 - Criando Socket para a arma",
          "2 - Anexando arma ao personagem",
          "3 - Enumerações e estruturas das Armas",
          "4 - Preenchendo as estruturas das armas",
          "5 - Switch weapon 1-2",
          "6 - Switch weapon 2-2",
          "7 - Mira ADS",
          "8 - Atirando 1-2",
          "9 - Atirando 2-2"
        ],
        "Modulo - 4 - Arma 2-2": [
          "1 - Hud temporário",
          "2 - Muzzle Flash",
          "3 - Recoil",
          "4 - Munição do chão",
          "5 - Attachment",
          "6 - Sistema de Reload 1-3",
          "7 - Sistema de Reload 2-3",
          "8 - Sistema de Reload 3-3",
          "9 - Animação de Tiro"
        ],
        "Modulo - 5 - Viewport": [
          "1 - Criando Hud 1-2",
          "2 - Criando Hud 2-2",
          "3 - Sons",
          "4 - Criando Mine_Map",
          "5 - Dynamic Crosshair",
          "6 - Loadscreen"
        ],
        "Modulo - 6 - Sistemas": [
          "1 - Vida e Armadura",
          "2 - Configurando IA",
          "3 - Introdução ao LineTrace",
          "4 - Bullet Hole",
          "5 - Dano 1-2",
          "6 - Dano 2-2",
          "7 - Spawn do Inimigo"
        ]
      },
      "requirements": [
        "Unreal Engine 4 Instalado | Free Software",
        "Não é necessário ter conhecimento de nenhuma linguagem de programação para criar esse game. Você ira aprender como fazer os códigos usando Blueprint, uma incrível funcionalidade da Unreal Engine 4.",
        "Vontade de Aprender"
      ],
      "description": "Este curso é destinado para qualquer pessoa que queira programar e criar os seus jogos e não sabe usar linguagem de programação C++, C# ou outra. Você ira ulizando os Blueprint da Unreal Engine 4 para fazer todo o sistema de programação do jogo, mesmo se não tiver experiência começando do zero!\nNeste curso Todos os recursos utilizados são gratuitos e com muita qualidade que você utilizar em seus próprios games, mesmo comercialmente.\nAqui você ira aprender a usar uma das mais famosas e uma das mais poderosas engines totalmente gratuita de jogos da atualidade: A Unreal Engine 4, uma engine de criação de jogos free, onde você ira poder utiliza 100% da ferramenta sem pagar nada, vender seu jogo e ainda n vai precisar pagar não pra usar, so vantagens não é mesmo, esta esperando o quê, adquira o curso, com preço promocional e mergulhe no conhecimento. Aqui Você ira criar um seu primeiro game FPS e ira aprender todos os conceitos iniciais sobre as principais Blueprint para criar games na Unreal.\nVocê vai desenvolver do zero e com toda a minha ajuda e suporte um game com sistema de:\nArmas\nKillcount\nHUD\nMini-mapa\nDano\nInimigos [IA]\nSequencias de Animações\ne muito mais!!\n-> Invista em CONHECIMENTO, invista em VOCÊ! <-",
      "target_audience": [
        "Esse curso tem como finalidade, ensinar a quem ainda não tem conhecimento da Unreal Engine 4 e de suas incriveis funcinalidades. Ensinando os primeiros passos na criaação dos códigos em Blueprint, para seu primeiro game FPS.",
        "Este curso é para qualquer pessoa que queira aprender Unreal Engine 4 e as ferramentas usadas por profissionais na indústria de games.",
        "Quem deseja aprender a desenvolver jogos na Unreal 4 usando somente o codigo de blueprints."
      ]
    },
    {
      "title": "Curso de desarrollo de Videojuegos NFT de la A a la Z",
      "url": "https://www.udemy.com/course/desarrollo-videojuegos-nft/",
      "bio": "¡Aprende a desarrollar Videojuegos PlayToEarn con los Videojuegos NFT de la Tecnología Blockchain!",
      "objectives": [
        "Estudio de los Videojuegos Play To Earn más famosos de la actualidad como Axie Infinity o CryptoKitties",
        "Creación de una Blockchain local con el uso de Ganache con la Interfaz Gráfica de Usuario (GUI) de Ganache y con el uso de la línea de comandos (CLI)",
        "Creación de un proyecto real con Solidity, haciendo el despliegue del Smart Contract en la Blockchain local de Ganache",
        "Desarrollo, aplicación y verificación de proyectos reales con el uso de Truffle",
        "Estudio teórico de los Tokens NFT y creación del Smart Contract ERC-721 para controlar los Tokens NFT",
        "Estudio de las fases de creación de Videojuegos NFT",
        "Creación de un Videojuego NFT siguiendo los juegos más populares de Play To Earn",
        "Estudio y despliegue del Videojuego NFT en Polygon",
        "Aprenderás los pilares fundamentales de Binance Smart Chain (BSC)",
        "Aprenderás a desplegar tus Videojuegos NFT en la Blockchain Binance Smart Chain (BSC)",
        "Desplegarás Videojuegos NFT mediante Docker",
        "Creación de una Blockchain con Python desde 0",
        "Creación de una Criptomoneda con Python desde 0"
      ],
      "course_content": {
        "Requisitos previos - Herramientas a utilizar en el curso": [
          "Google Chrome",
          "Remix",
          "Metamask",
          "Visual Studio Code (VSC)",
          "GitHub: Código del curso"
        ],
        "----------------- BLOQUE 0: INTRODUCCIÓN A LOS VIDEOJUEGOS NFT -----------------": [
          "BLOQUE 0: INTRODUCCIÓN A LOS VIDEOJUEGOS NFT"
        ],
        "Introducción a los Videojuegos NFT": [
          "La revolución de la tecnología Blockchain",
          "Smart Contracts, DApps & Videojuegos NFT",
          "Videojuegos Play To Earn",
          "Axie Infinity",
          "CryptoKitties",
          "Expansión de los NFT",
          "Arquitectura de los Videojuegos NFT",
          "¿Qué herramientas necesitamos para crear un Videojuego NFT?"
        ],
        "OpenSea": [
          "Qué es OpenSea",
          "Un recorrido extenso por OpenSea",
          "Creación de nuestro Token NFT en OpenSea",
          "¡Nuestro Token NFT a la venta en OpenSea!"
        ],
        "------------------- BLOQUE 1: GANACHE -------------------": [
          "BLOQUE 1: GANACHE"
        ],
        "Primeros pasos en Ganache": [
          "Plan de ataque",
          "Qué es Ganache",
          "Node.js",
          "IMPORTANTE: Posible error de instalación de Ganache cli",
          "Instalación de Ganache",
          "Creación de mi propio Workspace en Ganache",
          "Un recorrido por Ganache",
          "Conectar mi primer Smart Contract con Ganache",
          "Error de conexión de Ganache en Windows",
          "Importar una Wallet de Ganache a Metamask",
          "Introducción a Ganache CLI",
          "Comandos de configuración de Ganache CLI"
        ],
        "Mi primer proyecto Blockchain con Solidity y Ganache": [
          "Plan de ataque",
          "Enunciado del proyecto",
          "Declaraciones iniciales",
          "Evaluación de los alumnos",
          "Modificador: Únicamente el profesor puede evaluar a los alumnos",
          "Visualización de las notas",
          "Solicitar revisión de una nota",
          "Visualizar las revisiones solicitadas",
          "Sistema de evaluaciones universitarias en uso con Ganache",
          "Código del Smart Contract"
        ],
        "------------------- BLOQUE 2: TRUFFLE -------------------": [
          "BLOQUE 2: TRUFFLE"
        ],
        "Primeros pasos en Truffle": [
          "Introducción a Truffle",
          "IMPORTANTE: Posible error de instalación de Truffle",
          "Descargar Truffle para nuestra máquina",
          "Creación del Smart Contract para Truffle",
          "Creación de un directorio de trabajo",
          "Análisis del directorio de trabajo",
          "Enlazar Truffle con Ganache (truffle-config.js)",
          "Comandos básicos de Truffle",
          "Creación de un test para el Smart Contract",
          "Web3.js",
          "Instalar web3.js con NodeJs",
          "Truffle console",
          "Código del proyecto"
        ],
        "Truffle con detalle": [
          "Creación del directorio del proyecto",
          "Creación de un test del Smart Contract con Javascript - Parte 1",
          "Creación de un test del Smart Contract con Javascript - Parte 2",
          "Uso de truffle console",
          "Código del Proyecto - Parte 1",
          "Nuevas funcionalidades en el Smart Contract",
          "Testeo de nuevas funcionalidades",
          "Código del proyecto - Parte 2"
        ]
      },
      "requirements": [
        "Un ordenador con conexión a internet",
        "Es recomendable haber cursado el Curso Completo de Blockchain de cero a experto",
        "Es recomendable haber cursado el Curso de Smart Contracts y Blockchain de la A a la Z",
        "¡Muchas ganas de aprender!"
      ],
      "description": "¿Quieres convertirte en un desarrollador de la tecnología Blockchain?\n¿Quieres crear Videojuegos NFT desde cero y extraer un beneficio económico?\n¿Eres un emprendedor que quiere transformar su negocio con el poder de la tecnología Blockchain pero no sabes cómo conseguirlo?\n\n\nSi la respuesta a alguna de estas preguntas es Sí, entonces este curso es para ti.\nBlockchain es uno de los campos tecnológicos más punteros en el que todos quieren estar. Y es que Blockchain está cambiando la vida de las personas al igual que lo hizo la electricidad hace ya 100 años. Las palabras Blockchain, Cadena de Bloques, Bitcoin, Ethereum cada vez están más presente en la vida de todos nosotros, la revolución de las criptomonedas ya es una realidad.\nEste curso es único, pues lo hemos diseñado para que aprendas a programar desde cero Videojuegos NFT. Por ello vas a aprender a usar las herramientas necesarias para convertirte en un desarrollador completo de Blockchain.\nEs el único curso de todo Udemy en español que cubre los fundamentos y los pilares prácticos de construcción de Videojuegos NFT de la tecnología Blockchain.\nEl curso ha sido diseñado para cubrir los principios prácticos hasta los más avanzados de la tecnología Blockchain, empezando por las herramientas de desarrollo de Videojuegos NFT y siguiendo por el despliegue de estos Videojuegos NFT en redes reales de Blockchain.\nPor ello, vamos a aprender a usar OpenSea para vender Tokens NFT, Ganache como Blockchain local, Truffle para la creación de nuestros proyectos, creación de Smart Contracts de Tokens NFT, Videojuegos con el uso de Tokens NFT, despliegue de Videojuegos NFT en Polygon y Binance Smart Chain (BSC), además aprenderás a crear una Blockchain y una Criptomoneda con Python.\nEn el curso nos centraremos en:\nEstudio de los Videojuegos Play To Earn más famosos de la actualidad.\nPublicación de Tokens NFT en OpenSea de forma gratuita.\nCreación de una Blockchain local con el uso de Ganache con la Interfaz Gráfica de Usuario (GUI) de Ganache y con el uso de la línea de comandos (CLI).\nCreación de un proyecto real con Solidity, haciendo el despliegue del Smart Contract en la Blockchain local de Ganache.\nDesarrollo, aplicación y verificación de proyectos reales con el uso de Truffle.\nEstudio teórico de los Tokens NFT y creación del Smart Contract ERC-721 para controlar los Tokens NFT.\nEstudio de las fases de creación de Videojuegos NFT.\nCreación de un Videojuego NFT siguiendo los juegos más populares de Play To Earn.\nEstudio y despliegue del Videojuego NFT en Polygon.\nAprenderás los pilares fundamentales de Binance Smart Chain (BSC).\nAprenderás a desplegar tus Videojuegos NFT en la Blockchain Binance Smart Chain (BSC).\nDesplegarás Videojuegos NFT mediante Docker.\nAdemás, este curso viene acompañado de un BONUS que contempla lo siguiente:\nCreación de una Blockchain con Python desde 0\nCreación de una Criptomoneda con Python desde 0\nEste curso es ideal para cualquiera que quiera obtener conocimientos acerca de la desarrollo de Videojuegos NFT en Blockchain:\nEn particular te lo recomiendo si eres:\n- Un consultor freelance que tiene habilidades de programación y quiere transformar las empresas con el poder de la Blockchain\n- Empresarios y dueños visionarios que quieren subir sus empresas de categoría de nivel con el poder del Blockchain\n- Iniciados en Blockchain que quieren mejorar su portfolio con nuevos proyectos\n- Desarrolladores de Blockchain que desean incorporar la creación de Videojuegos NFT en sus skills\n- Apasionados en la tecnología que quieren ganar experiencia con la programación en Blockchain\n- Cualquier persona interesada en mejorar y adaptarse a los cambios tecnológicos presentes\nUna vez termines el curso, serás todo un desarrollador de Blockchain. ¡Te esperamos en clase para que por fin disfrutes de la creación de Videojuegos con Tokens NFT y que así puedas convertirte en todo un profesional!\n¡Nos vemos en clase!",
      "target_audience": [
        "Un consultor freelance que tiene habilidades de programación y quiere transformar las empresas con el poder de la Blockchain",
        "Empresarios y dueños visionarios que quieren subir sus empresas de categoría de nivel con el poder del Blockchain",
        "Iniciados en Blockchain que quieren mejorar su portfolio con nuevos proyectos",
        "Desarrolladores de Blockchain que desean incorporar la creación de Videojuegos NFT en sus skills",
        "Apasionados en la tecnología que quieren ganar experiencia con la programación en Blockchain",
        "Cualquier persona interesada en mejorar y adaptarse a los cambios tecnológicos presentes"
      ]
    },
    {
      "title": "Curso Completo de Unity 2D: Desarrolla un RPG desde Cero",
      "url": "https://www.udemy.com/course/curso-completo-de-unity-2d-desarrolla-un-rpg-desde-cero/",
      "bio": "Aprende a desarrollar un videojuego 2D estilo RPG desde cero utilizando Unity, con mecánicas completas para PC y Móviles",
      "objectives": [
        "Aprender las bases de Unity 2D",
        "Crear un videojuego 2D desde 0",
        "Aprender sobre programacion de videojuegos",
        "Terminar un videojuego RPG 2D en Unity",
        "Como crear un videojuego RPG 2D en Unity para Ordenadores y Telefonos moviles",
        "Hacer uso de Unity para implementar sistemas de combate, misiones y exploración en un RPG 2D",
        "Aprender a usar animaciones, tilesets y colisiones para crear mundos 2D interactivos",
        "Exportar y publicar tu juego para PC y móviles desde Unity",
        "Implementar NPCs con comportamientos variados como patrullaje, diálogo y combate"
      ],
      "course_content": {
        "Bienvenida al Curso :D": [
          "Bienvenida"
        ],
        "Introducción a Unity": [
          "Instalación de Unity",
          "Configuración Proyecto",
          "Familiarización con la interfaz",
          "Importación de assets",
          "Componentes Físicas y Colisiones",
          "Sistema de UI",
          "Primer Script, Programación C# en Unity",
          "Resumen Conclusión"
        ],
        "Personaje y movimiento (Parte 1)": [
          "Movimiento del personaje",
          "Crear Animaciones del personaje",
          "Añadir animaciones al personaje",
          "Ajustar dirección del personaje"
        ],
        "Creación del mapa (Parte 1)": [
          "Crear el Mapa / Tilemap",
          "Como usar el TilePallete",
          "Autotilling",
          "Elevaciones, tiles con colision",
          "Agua, tiles animados",
          "Colisión bordes"
        ],
        "Cámara y seguimiento": [
          "Camara Cinemachine"
        ],
        "Sistema de enemigos (Parte 1)": [
          "Movimiento del enemigo",
          "Crear animaciones del enemigo",
          "Inteligencia Artificial del enemigo NavMesh2d",
          "Añadir animaciones al enemigo"
        ],
        "Recursos y Objetos": [
          "Recoger recursos",
          "Animaciones recursos",
          "Prefabs"
        ],
        "Interfaz de usuario – HUD (Parte 1": [
          "UI-HUD Interfaz del inventario",
          "Patron Singleton abrir y cerrar inventario",
          "Mostrar recursos en el inventario",
          "Vida Jugador",
          "Menu Pausa"
        ],
        "NPCs": [
          "Crear movimiento basico NPCS",
          "Animaciones NPC",
          "Skins NPCS",
          "Rutas NPC",
          "Ovejas"
        ],
        "Creación del mapa (Parte 2)": [
          "Puentes",
          "Organizacion y gestion colisiones mejoradas",
          "Zonas elevadas",
          "Transporte Minas",
          "Nuevos edificios",
          "Arboles",
          "Expandir el Mapa"
        ]
      },
      "requirements": [
        "Sin conocimientos previos sobre programacion de videojuegos, aprenderemos todo paso a paso",
        "Ideal para personas curiosas por el desarrollo de videojuegos que quieran iniciarse con un proyecto real.",
        "El curso es 100% práctico, por lo que solo necesitas seguir las clases y practicar lo aprendido.",
        "No necesitas saber dibujar ni programar, trabajaremos con assets prehechos y explicaciones claras.",
        "Solo necesitas un ordenador con conexión a internet y ganas de aprender a crear videojuegos."
      ],
      "description": "¿Siempre has querido crear tu propio videojuego, pero no sabías por dónde empezar?\nEste curso es para ti.\nEn este curso práctico aprenderás a desarrollar un videojuego RPG 2D completo usando Unity, una de las herramientas más potentes y populares en la industria del desarrollo de videojuegos. No necesitas conocimientos previos: te llevaré paso a paso desde la instalación de Unity hasta la exportación de tu juego para PC y móviles.\nA lo largo de más de 18 secciones organizadas y progresivas, construiremos juntos un RPG 2D desde cero. Aprenderás a implementar:\n\n\nMovimiento fluido y animaciones del personaje principal\nDiseño y creación del mapa con Tilemaps\nCámara que sigue al jugador\nInteligencia artificial de enemigos y sistema de combate\nMisiones y lógica de progreso\nInterfaz de usuario (UI), HUD y sistema de subida de nivel\nMúsica, efectos de sonido e iluminación\nExportación del juego para Windows/ Web y Android\nY mucho más...\n\n\nEste curso está diseñado con un enfoque práctico y accesible para que puedas seguirlo a tu ritmo y ver resultados reales rápidamente .\n\nAl finalizar el curso, no solo habrás aprendido Unity, sino que tendrás tu propio RPG 2D jugable listo para compartir o mejorar.\nTanto si sueñas con trabajar en la industria de los videojuegos, lanzar tus propios proyectos o simplemente explorar tu creatividad, este curso te dará una base sólida para empezar con fuerza.",
      "target_audience": [
        "Cualquiera que quiera aprender a crear un videojuego 2D en Unity",
        "Gente que sepa de unity pero quiera aprender paso a paso a crear un juego RPG 2D",
        "Personas sin experiencia previa que quieran dar sus primeros pasos creando videojuegos 2D.",
        "Estudiantes de programación o diseño que quieran aplicar sus conocimientos en un proyecto práctico.",
        "Fans de los RPG clásicos que quieran aprender a crear sus propios juegos desde cero.",
        "Desarrolladores que conocen Unity pero quieren enfocarse en mecánicas típicas de los RPG 2D.",
        "Creadoras y creadores de contenido interesados en el desarrollo de videojuegos como hobby o futura profesión.",
        "Personas que han intentado aprender Unity pero necesitan una guía clara, práctica y progresiva.",
        "Ideal para quienes disfrutan aprendiendo con proyectos reales y guiados paso a paso."
      ]
    },
    {
      "title": "Learn to create a 2D Racing car game for FREE PART 8.",
      "url": "https://www.udemy.com/course/learn-to-create-a-2d-racing-car-game-for-free-part-8/",
      "bio": "Learn how to create a cool 2D top down racing car game with the unity game engine.",
      "objectives": [],
      "course_content": {
        "(Continued) Winning Race Victory Screen.": [
          "Creating a player winning victory screen.",
          "Adding a trigger and then coding the victory screen.",
          "Explaining a few changes to the tracks.",
          "Adding the AI gameover screen."
        ],
        "Adding Game Features To The Tracks.": [
          "Adding the police helicopter to the tracks.",
          "Creating the helicopter pathway for the track."
        ]
      },
      "requirements": [
        "You will need to download unity and visual studio which is free and then be willing to learn game design.",
        "Basic understanding of the C# language and Unity."
      ],
      "description": "THIS COURSE WILL BE UPLOADED IN PARTS DUE TO VIDEO TIME RESTRICTIONS.\n\n\nIn my course we will start at the bottom and work our way up to advanced game design like AI path finding, we will be creating a car controller and many features with in our game.\nThis course is designed for beginner level and up as i will explain everything in best detail as i can, at the end of the course we will have made a racing car game like micro machines which in the 1980's was an amazing car game.\nIn this part of the course you will learn\nCreating a player winning victory screen.\nAdding a trigger and then coding the victory screen.\nExplaining a few changes to the tracks.\nAdding the AI gameover screen.\nAdding the police helicopter to the tracks.\nCreating the helicopter pathway for the track.",
      "target_audience": [
        "Students that want to learn to be a game designer."
      ]
    },
    {
      "title": "Unreal Engine 5",
      "url": "https://www.udemy.com/course/unreal_engine5/",
      "bio": "Torne-se um game developer",
      "objectives": [
        "Construir jogos 3D",
        "Construir jogos utilizando a Unreal Engine 5",
        "Exportar jogos para as diversas plataformas existentes",
        "Publicar seus jogos"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação do curso",
          "Instalação do Epic Games Laucher e Unreal 5",
          "Nota Importante"
        ],
        "Conceitos básicos (UNREAL 5.1 / 5.2)": [
          "Conhecendo a Unreal Engine 5.2",
          "O que é Malha, material e textura na Unreal",
          "Malhas e texturas",
          "Colisão nos objetos",
          "O que é uma Blueprint?",
          "Minha primeira Blueprint",
          "O que é Level Blueprint?",
          "Programando a Level Brueprint do meu jogo",
          "O que é Blueprint Game Mode",
          "O que é uma Widget?",
          "Como trabalhar com Widgets - 1 Parte",
          "Como trabalhar com Widgets - 2 parte",
          "Dica"
        ],
        "Projeto - Jogo da Adivinhação (UNREAL 5.2)": [
          "Construção do projeto",
          "Construindo o menu",
          "Construindo a cena principal",
          "Programando o Menu e outros itens",
          "Programando o botão responder",
          "Fatoração do código",
          "Melhorando o jogo"
        ],
        "UNREAL 5.1 - Projeto FPS Survivor Horror": [
          "Criando o projeto inicial",
          "Dicas para fazer o dwonload das malhas e importar na Unreal",
          "Importando a malha e a animação do player",
          "Material de apoio: Como importar um modelo FBX",
          "Material de apoio: Como resolver o erro de congelamento ao importar modelos FBX",
          "Construindo a animação Blend Space do player",
          "Construindo a Animation Blueprint do player - IdleRun",
          "Epic Games Asset Store - Adicionando a arma ao nosso game",
          "Fixando a arma na mão do player",
          "Animação e mecânica de mirar",
          "Andar ou ficar parado enquando mira",
          "Animação de atirar",
          "escolhendo o inimigo no Mixamo",
          "importando o inimigo padrão",
          "Construindo o inimigo padrão",
          "Construindo a Inteligência Artificial",
          "Criando o ataque do inimigo",
          "Programando a Mêcanica de tiro",
          "Dano ao inimigo",
          "Animação de morte",
          "Construindo a HUD",
          "Pequena correção da bala e do Zombie",
          "Mecânica e animação de Hit ao atirar no inimigo",
          "Dano diferenciado no inimigo (Head and Body Shot)",
          "Partículas e sangue",
          "Correções no inimigo",
          "Barra de vida",
          "Mecânica de dano no player",
          "Criando nosso primeiro mapa",
          "Adicionando o mapa ao nosso jogo",
          "Spawn dos inimigos",
          "Mecânica de Horda de inimigos",
          "Melhoramentos",
          "Condição de vitória",
          "HUD - Informações dos Inimigos",
          "Programando os eventos da HUD (Inimigos)",
          "Criando mensagens para a HUD",
          "Velocidade aleatória para o inimigo",
          "Tela de vitória e derrota",
          "Efeito de sangue",
          "Mecânica de recuperação de vida",
          "Mecânica de munição",
          "Reload automático",
          "Itens coletáveis",
          "Adicionando som ao inimigo",
          "Adicionando limite ao mapa",
          "Construindo o menu do jogo",
          "Correções e alinhamentos",
          "Tarefa para casa (Criando meu mapa)",
          "Criando meu mapa",
          "Novo Menu",
          "Save Data",
          "Atualizando o SaveData",
          "Validando recursos de SaveData",
          "Construindo nosso novo mapa (bridge)",
          "Editando a colisão do mapa",
          "Procurando itens na Epic Games para adicionar aos mapas",
          "Inserindo itens no novo mapa",
          "Finalizando o mapa"
        ],
        "UNREAL 5.0 - Conceitos básicos": [
          "Conhecendo a Unreal Engine 5.0",
          "Atores, Malhas, textuas e materiais",
          "Criando minha primeira Blueprint",
          "Programando a Level Blueprint de um mapa",
          "Construindo o projeto - Catch Game Banana",
          "Criando o player - Catch Game Banana",
          "Programando as entradas do player - Catch Game Banana)",
          "Tratando a colisão - Catch Game Banana",
          "Widget",
          "Game Like",
          "Iniciando o projeto - Geometry Catcher Game",
          "Programando a widget - Geometry Catcher Game",
          "Demonstrando a implementação do desafio - Geometry Catcher Game"
        ],
        "UNREAL 5.0 - Projeto Infinete Matrix Game": [
          "Iniciando o projeto",
          "Criando os túneis - 1 Parte",
          "Criando os túneis - 2 Parte",
          "Adicionando obstáculos",
          "Condição de morte",
          "Menu principal",
          "Programando o menu",
          "Pontuação",
          "Game Over",
          "Gerando o executável"
        ],
        "UNREAL 5.0 - Projeto Jump Muffin (Som e Animação)": [
          "Criando o projeto",
          "Animação de Idle e Walk",
          "Animação de jump e Fall",
          "Animação de Morte",
          "Adicionando som ambiente",
          "Sons em animações",
          "Efeitos sonóros",
          "Controlando tudo ao mesmo tempo"
        ],
        "UNREAL 5.0 - Meu Primeiro FPS Game": [
          "Apresentação do projeto",
          "Criando o Player",
          "Confgurando a Câmera do Player",
          "Construindo a arma do Player",
          "Atirando",
          "Aplicando dano ao alvo"
        ],
        "Extra - Parada Obrigatória": [
          "Como criar o pitch de um jogo",
          "Como publicar um jogo no itch.io",
          "Indicação de estudo"
        ]
      },
      "requirements": [
        "Conhecimentos básicos sobre informática"
      ],
      "description": "Aprenda a criar jogos fantásticos com o Curso Unreal Engine 5.\nA Unreal Engine é um motor de jogo desenvolvido pela Epic Games que possui o sistema de Blueprints Visual Scripting, o que permite criar jogos inteiros sem escrever uma única linha de código!\nDurante o nosso curso você aprenderá muita coisa legal, como:\nConhecer a interface da Unreal Engine 5;\nTrabalhar com Blueprints\nTrabalhar com Level Blueprints\nCriar materiais\nCriar UI (User Interface)\nUtilizar e criar animações\nUtilizar recursos de áudio no jogo\nUtilizar sistema de partículas\nConstruir jogos baseado nos estilos FPS, Corrida Infinita, plataforma e muito mais.\nO curso é orientado a projetos, isto é, cada vez que você criar um novo jogo você aprenderá um novo recurso da Unreal Engine. Isso torna o aprendizado mais fácil do que apenas estudando aulas pontuais relacionadas a uma determinada tecnologia.\nDurante o curso você poderá tirar dúvidas com o professor via plataforma. Também poderá participar de uma comunidade de desenvolvedores no Telegram a fim de compartilhar seus conhecimentos e dúvidas.\nUm detalhe muito legal do nosso curso é que você irá aprender a publicar seus jogos na web criando um portifólio de produtos, ao fazer isso você estará divulgando seus jogos permitindo que várias pessoas possam se divertam jogando os mesmos.\nPessoal estou aguardando vocês em nosso curso, abraços.",
      "target_audience": [
        "Pessoas que querem aprender a criar os seus próprios jogos"
      ]
    },
    {
      "title": "Programación de videojuegos en Unity desde cero (C#)",
      "url": "https://www.udemy.com/course/programacion-de-videojuegos-en-unity-desde-cero/",
      "bio": "Aprende a programar en Unity utilizando el lenguaje de programación C# para crear tus propios videojuegos",
      "objectives": [
        "Aprenderás desde cero a programar en Unity para crear tus propios videojuegos utilizando el lenguaje de programación C#.",
        "Programarás componentes (scripts) de movimiento, mecánicas de juego, animaciones, sonido, inteligencia artificial básica, interfaz, etc.",
        "Comprenderás la lógica de programación en Unity y aprenderás a aplicar esta para crear tus propios componentes (scripts).",
        "Conocerás los fundamentos de la Programación Orienta a Objetos (POO) en C# y otros lenguajes de programación."
      ],
      "course_content": {
        "Bienvenida e introducción": [
          "Presentación e introducción al curso",
          "Lógica de programación",
          "Utiliza la lógica"
        ],
        "Programación orientada a objetos": [
          "Introducción: ¿Qué es la programación orienta a objetos?",
          "Lenguajes de programación",
          "Clases (class) en programación",
          "Variables",
          "Métodos",
          "Ejemplo de clase",
          "Ejercicio - Crea una clase",
          "Resolución del ejercicio"
        ],
        "Lógica de programación en Unity": [
          "Unity y monodevelop",
          "Clases Monobehaviour",
          "Consola de Unity",
          "Ejercicio - Crea un script en Unity",
          "Resolución del ejercicio"
        ],
        "Sentencias de control y enumerados": [
          "Introducción a sentencias de control",
          "Sentencia IF",
          "Sentencia FOR",
          "Sentencia WHILE",
          "Sentencia SWITCH",
          "Enumerados",
          "Ejercicio - Practicar con sentencias",
          "Resolución del ejercicio"
        ],
        "Componentes (scripts) en Unity": [
          "Comunicación entre componentes",
          "Ejemplo - Componentes salud y personaje",
          "Ejercicio - Amplia la funcionalidad del componente salud",
          "Resolución del ejercicio"
        ],
        "Vectores": [
          "Matemáticas de vectores",
          "Vectores en Unity",
          "Ejercicio - Trabajando con vectores",
          "Resolución del ejercicio"
        ],
        "Controlador del personaje": [
          "Introducción al controlador",
          "Prefab del personaje",
          "Método Update",
          "Mover y rotar objetos por código",
          "Inputs en Unity",
          "Movimiento de la cámara",
          "Ejercicio - Mejora del controlador",
          "Resolución del ejercicio"
        ],
        "Operaciones con objetos": [
          "Introducción a operaciones",
          "Creación y destrucción de objetos por código",
          "Gestión de colisiones",
          "Tags",
          "Ejercicio - El invocador de objetos",
          "Resolución del ejercicio"
        ],
        "Listas": [
          "Introducción a listas",
          "Operaciones con listas",
          "Ejemplo - Script usando listas",
          "Ejercicio - La fiesta de los números",
          "Resolución del ejercicio"
        ],
        "Disparo del personaje": [
          "Introducción al disparo",
          "Sistema de disparo",
          "Invoke y OnEnable",
          "Optimización (Pooling)",
          "Optimización de scripts",
          "Sistema de disparo optimizado",
          "Ejercicio - Minas",
          "Resolución del ejercicio"
        ]
      },
      "requirements": [
        "Debes tener instalado Unity, versión 5.5.0 en adelante (Compatible con versión 2017, 2018 (hasta 2018.1.9) y con el editor Visual Studio).",
        "Recomendamos tener un nivel básico de Unity (es suficiente con haber realizado el primer tutorial disponible en su web).",
        "NO necesitas conocimientos previos de programación ni desarrollo de videojuegos."
      ],
      "description": "La programación resulta un ejercicio muy estimulante que nos permite resolver un problema utilizando la lógica y la estructuración de ideas.\nUno de los principales objetivos del curso es enseñar a programar a aquellos que todavía ven la programación como un montón de líneas y palabras raras sin sentido en un documento. Queremos amenizar ese aprendizaje, de modo que el alumno aprenda los fundamentos básicos de la programación a la vez que ve un resultado práctico en un videojuego dentro de Unity.\nTambién está enfocado a desarrolladores que trabajan en Unity pero que no saben programar: artistas, diseñadores... De modo que si aprenden los conceptos básicos de programación podrán comunicar mejor sus ideas a los programadores, de la misma forma que el alumno podrá entender mejor el trabajo que se hace en código.\n\nEs posible que los que ya son programadores vean la primera parte del curso como algo que ya saben, pero posteriormente aprenderán a aplicar sus conocimientos en la lógica de scripting de Unity, lo cual les permitirá hacer todo tipo de juegos.\nEn algunas secciones del curso se incluyen unos paquetes de Unity, los cuales contienen un contenido pre-hecho a modo de modelos, animaciones, sonidos y algunos componentes; de modo que veamos como implementar este contenido desde código. En los recursos de las clases también se incluirán las soluciones en .txt y .cs para facilitar al alumno copiar directamente el código en texto si así lo desea.\n\nLa curva de aprendizaje comienza poco a poco con los conceptos básicos, pero a medida que avanzan las clases incluimos nuevas características o funcionalidades; de esta forma el alumno aprende de manera rápida y efectiva. Además, para fortalecer el aprendizaje, se propone al final de cada sección un ejercicio en el que el alumno pueda poner en práctica lo aprendido.\n\nAl finalizar el curso verás la programación con otros ojos: te darás cuenta de lo divertido que es programar, lo satisfactorio que es resolver un problema, ver que lo que programas funciona y te plantearás nuevos retos y soluciones para desarrollar videojuegos cada vez más complejos.\nBienvenido al mundo de la programación.",
      "target_audience": [
        "Desarrolladores Unity que quieren aprender a programar sus propios scripts en C#.",
        "Aquellos que no saben programar y quieren aprender a hacerlo creando videojuegos.",
        "Programadores que quieran aplicar sus conocimientos a la programación de videojuegos en Unity."
      ]
    },
    {
      "title": "Aprende a programar jugando con Scratch",
      "url": "https://www.udemy.com/course/aprende-a-programar-jugando-con-scratch/",
      "bio": "Una manera divertida de aprender y ejercitar el pensamiento computacional.",
      "objectives": [
        "Crear videojuegos de todo nivel de complejidad.",
        "Crear material educativo para explicar casi cualquier asignatura (desde matemáticas, física, historia... hasta música).",
        "Crear animaciones para aplicarlas en creaciones artísticas, cómics, etc.",
        "Al finalizar el curso habrán ejercitado el pensamiento computacional y lo podrán aplicar para seguir adelante, por ejemplo, aprender robótica con extensiones de Scratch, aprender un lenguaje más profesional como PHP, Java, etc... porque los conceptos fundamentales ya los tendrán."
      ],
      "course_content": {
        "Presentación": [
          "Introducción",
          "Pero... ¿qué es el pensamiento computacional?",
          "¿Scratch 2 o Scratch 3?"
        ],
        "Acceso a Scratch": [
          "Descarga e instalación de Scratch (para versión 2)",
          "Interfaz de Scratch: presentación del entorno de trabajo",
          "Cómo iniciar un proyecto nuevo",
          "Scratch online",
          "Scratch 3: Descarga e instalación",
          "Scratch 3: Interfaz y presentación del entorno",
          "Scratch 3: cómo iniciar un proyecto nuevo",
          "Scracth 3 en online",
          "Cuestionario"
        ],
        "Animaciones básicas": [
          "Sección 3: Notas previas para los usuarios de Scratch 3",
          "Movimiento más sonido",
          "Repetición de secuencias",
          "Los personajes pueden pensar y hablar...",
          "Reacción a un evento",
          "Cambio de apariencia",
          "Escenarios y personajes",
          "Eventos del teclado",
          "Control de unpersonaje mediante el ratón",
          "Movimientos aleatorios y colisiones",
          "Cuestionario"
        ],
        "Sistema de posicionamiento y direccionamiento": [
          "Sección 4: Notas previas para los usuarios de Scratch 3",
          "Sistema de coordenadas ejes x/y",
          "Control de movimientos y colisiones",
          "Cuestionario"
        ],
        "Elementos de programación": [
          "Sección 5: Notas previas para los usuarios de Scratch 3",
          "Selecciones",
          "Condiciones",
          "Repeticiones",
          "Práctica PS502 (tiburón vs. pececito)",
          "Cuestionario"
        ],
        "Animación avanzada": [
          "Sección 6: Notas previas para los usarios de Scratch 3",
          "Control de la rotación de los objetos",
          "Animación de objetos gráficos (sprites)",
          "Sincronización de movimientos",
          "Práctica PS604 (devolviendo pelotas)",
          "Control de objetos con la webcam",
          "Control de objetos con el micrófono",
          "Cuestionario"
        ],
        "Variables": [
          "Sección 7: Notas aclaratorias para el usuario de Scratch 3",
          "Concepto de variables",
          "Creación de variables personalizadas",
          "Listas",
          "Control de score (quiz)",
          "Cuestionario"
        ],
        "Dibujo de objetos y escenarios": [
          "Obtención de imágenes",
          "Creación con el editor de Scratch",
          "Cuestionario"
        ],
        "Buenas costumbres de programador": [
          "Definir objetivos claros",
          "Documentación del código",
          "Centralización del código",
          "Reducción del código repetitivo",
          "Intercomunicación entre objetos",
          "Práctica PS903 (catch game)",
          "Pensamiento computacional y diagramación lógica",
          "Cuestionario"
        ],
        "Revisión del juego de preguntas y respuestas": [
          "Diagrama del juego",
          "Mejorando el juego",
          "Cuestionario"
        ]
      },
      "requirements": [
        "El aprendizaje de Scratch está al alcance de cualquier persona que sepa utilizar un ordenador como simple usuario.",
        "Si sabes sumar, restar, dividir y multiplicar ya sabes toda la matemática que se necesita para ser un programador.",
        "¡Pero debes tener muchas muchas ganas de aprender jugando y de jugar aprendiendo!"
      ],
      "description": "Este curso tiene un doble objetivo; el primero es claro: la enseñanza de un lenguaje de programación al alcance de todos con el que podrán divertirse creando videojuegos de toda la complejidad que nos permita la imaginación, aplicaciones educativas y creaciones artítisticas interactivas de diverso tipo, todo con una asombrosa curva de aprendizaje... en pocos minutos de curso ya se visualizarán resultados, lo que facilita la rápida comprensión de los conceptos. Iremos paso a paso... no doy por sabido nada, por lo que cada detalle se explicará porqué  y para qué se hace.\nEl segundo objetivo es menos evidente: el desarrollo y el ejercicio del pensamiento computacional que es el proceso que nos permite formular problemas de manera que sus soluciones pueden ser representadas como secuencias de instrucciones y algoritmos. Al enfrentarnos a un problema... es pensar cómo lo resolvería un programa de ordenador. Y estos conceptos los aplicaremos al programar con Scratch... pero nos servirán en su totalidad si luego pasamos a estudiar un lenguaje más profesional, como Java, C, C++, etc. El alumno en este curso adquirirá los fundamentos de la programación... jugando. Y el pensamiento computacional, una vez que se aprende,  es como andar en bicicleta,... no lo olvidaremos más.\n¿Y porqué Scratch? El MIT creó este lenguaje pensando en los niños y eso fue una idea genial porque nos ha dado un lenguaje que, a diferencia de los típicos lenguajes de toda la vida, no es un jeroglífico ilegible sino que los programas se crean simplemente apilando bloques, como jugando al Lego. Y ya que tenemos un lenguaje de aprendizaje rápido, intuitivo, divertido... y gratuito... ¿por qué no lo va a aprovechar el resto de la humanidad?\nTodos los programas del curso funcionan con las versiones 2 y 3 de Scratch.\nVamos ¡a aprender!",
      "target_audience": [
        "Este curso va dirigido a un amplio abanico de tipo de alumnado... podrán sacar provecho los que aún son niños y hasta los que son abuelos de esos niños.",
        "¿En quiénes he pensado más al crear el curso? En los educadores, en los maestros de primaria y de secundaria que deben empezar a aplicar el pensamiento computacional que deben explicar a sus alumnos.",
        "También pensé en los padres... los que quieren ayudar a sus hijos en sus estudios de programación y en los que no quieren quedar como arcaicos y vetustos analfabetos digitales ante sus hijos... que ya están programando juegos en el ordenador...",
        "Pero también va dirigido a los jóvenes que quieren ver de qué se trata esto de la programación que, además de jugar aprendiendo y aprendiendo jugando, quizá se puede transformar en el primer paso a una salida profesional."
      ]
    },
    {
      "title": "EXPERTO en Programación Avanzada con Unity y C#",
      "url": "https://www.udemy.com/course/mariano-experto-programacion-videojuegos-unity-csharp-master-c/",
      "bio": "Aprende contenido AVANZADO como: C#, Visual Studio, POO, Patrones de Diseño, SOLID, Custom Editor, Git, GitHub, Errores",
      "objectives": [
        "Programación DESDE CERO con C# utilizando Unity y Visual Studio",
        "Escribir codigo limpio y escalable aplicando buenas practicas de programación",
        "Solucionar diferentes tipos de errores de manera rapida y eficiente",
        "Utilizar profesionalmente un sistema de control de versiones con Git",
        "Comprender conceptos básicos y avanzados de programación, para saber cómo sacarle el máximo provecho",
        "Prácticas 100% aplicables al mundo real que te servirán para afianzar todo lo estudiado"
      ],
      "course_content": {
        "Introducción": [
          "¿Qué es C#?",
          "Instalación",
          "Configuración de Unity",
          "Material de Estudio"
        ],
        "Fundamentos Básicos": [
          "Introducción",
          "Variables y Tipos de Datos",
          "Operadores",
          "Cadenas de texto",
          "Metodo / Función",
          "Enum",
          "Struct",
          "Array",
          "Conversión",
          "Constructor",
          "Conclusión"
        ],
        "Programación en Unity": [
          "Introducción",
          "Awake / Start",
          "Update / FixedUpdate / LateUpdate",
          "OnEnable / OnDisable / OnDestroy",
          "Collision vs Trigger",
          "OnBecameVisible / OnBecameInvisible",
          "Invoke / InvokeRepeating",
          "Coroutine",
          "Conclusión"
        ],
        "Atributos": [
          "Introducción",
          "Header / Space",
          "Tooltip / HelpURL",
          "Range / Min",
          "TextArea / Multiline",
          "SerializeField / HideInInspector",
          "ContextMenu / ContextMenuItem",
          "RequireComponent"
        ],
        "Estructuras de Control": [
          "Introducción",
          "If / Else",
          "Switch",
          "For / For Each / While",
          "Jump Statements"
        ],
        "Programación Orientada a Objetos (POO)": [
          "Introducción",
          "Herencia",
          "Polimorfismo",
          "Encapsulación",
          "Abstracción"
        ],
        "Colecciones": [
          "Introducción",
          "List",
          "Dictionary",
          "Stack",
          "Queue"
        ],
        "Interfaces & Generics": [
          "Introducción",
          "Interface",
          "Generic"
        ],
        "Acciones, Eventos y Delegados": [
          "Introducción",
          "Delegate",
          "Event vs UnityEvent",
          "Action vs UnityAction"
        ],
        "Organización de Proyecto": [
          "Introducción",
          "Convenciones de Código",
          "Documentación",
          "Script Template",
          "Clase Helper",
          "Validación",
          "Scriptable Objects",
          "Platform Dependent Compilation",
          "Namespaces",
          "Assembly Definitions"
        ]
      },
      "requirements": [
        "Conocimientos basicos de Unity",
        "Ganas de aprender, practicar, y superarse",
        "Todas las herramientas utilizadas en el curso son gratuitas, y los materiales de trabajo estan incluidos."
      ],
      "description": "Hola!\nTe doy la bienvenida al curso de EXPERTO en Programación Avanzada con Unity*y C#.\nComo programador, te puedo garantizar que el contenido de este curso es UNICO dentro de la plataforma, no solo por las prácticas y profundidad de las explicaciones, sino porque el mismo incluye temas que otros instructores dan por separado en diferentes cursos. Me animo a decir que este curso equivale a otros 3 cursos diferentes, por lo que básicamente estarías adquiriendo tres en uno.\nSumado a esto, vale decir que cuento con más de 5 años de experiencia en la industria de los videojuegos, por lo que en cada clase no solo te explicare el tema sino que te revelaré diferentes trucos y consejos que fui aprendiendo con el tiempo para que cuentes con estas herramientas desde un comienzo.\nSi sos un estudiante, emprendedor o desarrollador de videojuegos, con o sin experiencia en programación, este curso es para vos.\nEl curso esta dividido en 3 niveles: básico, intermedio y avanzado.\nBásico:\nTendremos una introducción a Unity, daremos los primeros pasos con C#, para luego estudiar las clases que nos provee Unity, atributos, estructuras de control y demás conceptos relacionados al motor gráfico.\nIntermedio:\nComenzaremos a estudiar la Programación Orientada a Objetos mediante una práctica real, seguido de temas más complejos como las colecciones, interfaces, generics, delegados y eventos, para luego cerrar con diferentes trucos y consejos a la hora de mantener organizado un proyecto de manera profesional.\nAvanzado:\nEstudiaremos cómo programar nuestras propias herramientas con Custom Editor, aprenderemos a utilizar un sistema de control de versiones para subir nuestro proyecto a un repositorio en GitHub y poder trabajarlo con otros desarrolladores mediante Git, estudiaremos los principios SOLID y los aplicaremos a un proyecto de prueba, veremos uno por uno los Patrones de Diseño que existen en programación, y por último cerraremos con diferentes métodos para depurar y resolver todo tipo de errores en nuestros proyectos.\nComo regalo, te dejaré dos secciones completas para que puedas disfrutar del contenido. Por eso te invito a que te pases por el curso, revises las clases gratuitas, y recuerda que si al adquirir el curso te arrepientes por algún motivo, tienes una garantía de 30 días para que te devuelvan el dinero.\nAsí que no hay excusas.\nSi quieres aprender y formarte para hacerte un lugar en la industria de los videojuegos, te espero en el curso.\nMuchas gracias!\n\n\n*El curso fue desarrollado con Unity 2022, pero el mismo es compatible con todas las versiones disponibles de Unity.",
      "target_audience": [
        "Estudiantes, empresas y emprendedores",
        "Toda persona que quiera trabajar con Unity y C#",
        "Cualquier desarrollador que tenga noción de Unity y quiera mejorar su habilidades en programación",
        "En resumen: toda persona interesada en el lenguaje de programación C#"
      ]
    },
    {
      "title": "Unity 3D 超入門 : C# と Unity を基礎から学んで VRゲーム / 3D ゲーム を作ろう！",
      "url": "https://www.udemy.com/course/unity3d-intro/",
      "bio": "プログラミング初心者でも大丈夫！ゼロから VR アプリ やエンドレスランなどの 3D ゲームを作っていきましょう。C# や Unity の使い方など ゲーム 作りの基礎が身につきます。",
      "objectives": [
        "VRアプリを作る",
        "エンドレスランゲームを作る",
        "C#の基礎",
        "Unityの基礎",
        "Oculus Goのビルド方法"
      ],
      "course_content": {},
      "requirements": [
        "パソコンと意欲があれば十分です。",
        "VRアプリをビルドしたい場合はOculas Goが必要になります。"
      ],
      "description": "Unityとは？\n無料で使えるゲームエンジンのことです。ゲームエンジンと言うと少し難しいですが、簡単に言うとゲームを作るためのツールのことですね。Unityを使えば、様々な端末に対応したゲームを作ることができます。例えばiOS、Android問わずスマートフォンや、PlayStation4、Nintendo Switchなどの据え置き機、近年ではVR/ARなどに向けたゲームを作ることができます。\n\n\nこのコースは\nUnityを使って簡単な3Dゲームを作成するコースです。プログラミング初心者でも理解できるようにわかりやすく解説しています。コースを通して一つの3Dゲームを作っていくので、ゲーム作りの流れを掴みたい方におすすめです。",
      "target_audience": [
        "3Dゲームを作りたい方",
        "VRアプリを作りたい方",
        "プログラミング初心者",
        "理論より実践に重きを置く方"
      ]
    },
    {
      "title": "[Part 2] Create Your Own Game in the MapleStory Worlds",
      "url": "https://www.udemy.com/course/part-2-create-your-own-game-in-the-maplestory-worlds/",
      "bio": "Learn how to use scripting language to create a 2D platformer game, \"My Adventure\" in the MapleStory Worlds.",
      "objectives": [],
      "course_content": {
        "Basic concepts and LuaScript": [
          "Table and Variable",
          "Function"
        ],
        "Understanding Network in MSW": [
          "Property Synchronization",
          "Function control",
          "What is Network",
          "Local UI and Input Logic"
        ]
      },
      "requirements": [
        "Basic programming skills to understand for/if statement",
        "Curiosity in game design and development",
        "Interest in the MapleStory Worlds platform"
      ],
      "description": "Part 2 offers you a broad coverage of Computer Network and algorithms. It may be challenging but I believe you can do this. Keep up the good work!\n\n\nWelcome to the MSW101 lecture for global users who are a potential “Content Creator” in the MapleStory Worlds platform! Have you ever imagined playing a game you created yourself? Have you ever thought of changing the rules or items of the game to enjoy it to the fullest? Go through the whole lecture, then you'll be able to make your fantasy fulfilled. Are you ready? Off you go!\n\n\nIf you are here after watching Part 1, you're on the right track! But if you haven't, come back to \"[Part 2] Create Your Own Game in the MapleStory Worlds\" after finishing up the previous course. That would give you better understanding about the topics in overall. In this course, we'll dive a little bit more deeper into LuaScript with examples of its different data types. Furthermore, concept of Network is introduced with illustrations.\n\n\n[PART 2]\n\n\nSection 2. Basic concepts and LuaScript: Few main concepts of the Maker; entity, component, property, model, service, and logic. Also, you’ll learn how to script using Lua.\nSection 3. Understanding Network in MSW: All about Network. Explanation of property synchronization and function control; deciding whether your function will run in the server or the client.\n\n\n\n\nKey takeaways :\nGame development skills in MSW Client by using LuaScript.\nAnyone can play your own game published in the MSW platform.\nYou can earn profit by monetizing your game by adding items and tickets.\n\n\nYou're already halfway through. Only one more to go. Enjoy learning!\n\n\n[본 강의는 넥슨X멋쟁이사자처럼의 MapleStory Worlds X Edu Creator Camp 2022의 지원을 받아 제작되었습니다.]",
      "target_audience": [
        "Open to anyone who is interested in the MSW platform",
        "MapleStory game players who wants to develop their own game"
      ]
    },
    {
      "title": "Desarrollo de videojuegos con Godot Engine: Kings and Pigs",
      "url": "https://www.udemy.com/course/desarrollo-de-videojuegos-con-godot-engine-kings-and-pigs/",
      "bio": "Amplía tus Conocimientos y Exporta Juegos 2D a Dispositivos Móviles",
      "objectives": [
        "Manejarse con GDScript en Godot Engine.",
        "Programación Orientada a Objetos.",
        "Exportación a dispositivos móviles, Windows y GNU/Linux.",
        "Desarrollo de un videojuego escalable y con potencial para actualizaciones a largo plazo."
      ],
      "course_content": {
        "Introducción - Desarrollo de Personaje": [
          "Introducción",
          "Importar",
          "Primera Escena",
          "Script de la Escena",
          "Preguntas sobre GDScript I",
          "Repaso de GDScript",
          "Escena del Rey",
          "Patron State I",
          "Patron State II",
          "Patron State III",
          "Enlaces de interés sobre el Patrón State"
        ],
        "Niveles": [
          "Niveles",
          "TileMap y TileSet",
          "Puertas I",
          "Puertas II",
          "Límites de la Cámara"
        ],
        "Inteligencia Artificial del Cerdito Base": [
          "IA de los Cerditos",
          "Animaciones del Cerdito",
          "Estados del Cerdito I",
          "Estados del Cerdito II",
          "IA del Cerdito I",
          "IA del Cerdito II",
          "IA del Cerdito III",
          "Final de la sección"
        ],
        "La Escena Principal": [
          "Escena Principal",
          "Corazones",
          "Script de la Escena",
          "Sección IV - 4 - Botones Virtuales"
        ],
        "Exportar la primera versión de Kings and Pigs": [
          "Recursos Necesarios",
          "Solución de botones que se muestran en PC.",
          "Configurar Proyecto y Exportar"
        ],
        "Items - Power Ups": [
          "Metodología con los Items",
          "Diamante que cambia la velocidad",
          "Más Vidas"
        ],
        "Mejorando las transiciones": [
          "Escena del componente \"Transiciones\"",
          "Transición \"Cutoff\" y recurso para Fade y Pixelation",
          "Script para Transiciones",
          "Activando la función \"load_level()\""
        ],
        "Algunas correcciones en el proyecto": [
          "Collision Layer y Mask, además de otras cosas",
          "Saltos Perfectos con \"Caída Libre\""
        ],
        "Más enemigos: Cerdito que lanza cajas": [
          "Más enemigos: Cerdito que lanza cajas I",
          "Más enemigos: Cerdito que lanza cajas II",
          "Más enemigos: Cerdito que lanza cajas III",
          "Más enemigos: Cerdito que lanza cajas IV",
          "Más enemigos: Cerdito que lanza cajas V",
          "Más enemigos: Cerdito que lanza cajas VI"
        ],
        "Más enemigos: Cerdito que lleva el cañón": [
          "Más enemigos: Cerdito que lleva el cañón I",
          "Más enemigos: Cerdito que lleva el cañón II",
          "Más enemigos: Cerdito que lleva el cañón III",
          "Más enemigos: Cerdito que lleva el cañón IV"
        ]
      },
      "requirements": [
        "Conocer un poco de Godot Engine.",
        "Saber algunos conceptos / fundamentos de la programación en cualquier lenguaje."
      ],
      "description": "¡Bienvenido al curso para aprender a desarrollar Kings and Pigs! Les enseñaré la metodología que he seguido para producir este juego de plataformas 2D en Godot Engine; entre los temas que se van a tratar están:\nEl uso de clases y objetos en Godot Engine.\nLa reutilización de recursos entre otros proyectos.\nIA o Inteligencia Artificial en juegos de plataformas.\nProgramación en GDScript y recomendaciones para el lenguaje.\nExportación a Android, Window y GNU/Linux.\nEn cada sección trabajaremos un elemento del juego. Cuando hayamos terminado, todo se juntará en una gran escena donde podremos jugar algunos minutos ;). La mayoría del tiempo estarán aprendiendo de GDScript y los conceptos de la programación orientada a objetos.",
      "target_audience": [
        "Estudiantes de programación que quieran conocimientos sobre el desarrollo de videojuegos.",
        "Desarrolladores de videojuegos que quieran probar Godot Engine con un proyecto de este tipo.",
        "Estudiantes que han probado Godot Engine antes y quieren profundizar más en metodologías para producir videojuegos con el motor."
      ]
    },
    {
      "title": "Creación de VideoJuegos sin Programación con Buildbox 2.X",
      "url": "https://www.udemy.com/course/creacion-de-videojuegos-sin-programacion-con-buildbox-2/",
      "bio": "Crea VideoJuegos para Android, iOs, Windows y Mac sin programación con Buildbox 2.X. Prueba Buildbox 30 días Gratis!",
      "objectives": [
        "Desarrollar tus propios Videojuegos sin programación",
        "Publicar tus propios juegos en las plataformas oficiales",
        "Monetizar los juegos diseñados"
      ],
      "course_content": {
        "Introducción y presentación": [
          "Cabecera",
          "¿Es rentable crear Videojuegos?",
          "¿Qué es Buildbox?",
          "Descargando Buildbox 2.x"
        ],
        "Recursos: Imágenes y sonidos": [
          "Recursos gráficos",
          "Recursos de sonido",
          "Convertir imágenes a PNG",
          "Convertir sonidos a MP3"
        ],
        "Los primeros pasos": [
          "Entorno 2D",
          "Descargando exportadores",
          "Conociendo el entorno",
          "Importar gráficos",
          "Teclas rápidas",
          "Alineación de escenas",
          "Efecto Parallax",
          "Mapa mental de juego",
          "Objeto enemigo (Parte 1)",
          "Objeto enemigo (Parte 2)",
          "Objeto plataforma",
          "Objeto con física",
          "Física en el mundo",
          "Personalizar controles",
          "Texto en pantalla",
          "Contador de monedas",
          "Contador de distancia",
          "Botón de Pausa",
          "Música",
          "Sonidos",
          "Actualizar Buildbox"
        ],
        "Efectos": [
          "Efecto Luz (Light)",
          "Efecto Estela (Trail)",
          "Efecto Bandera (Flag)",
          "Efecto Partículas (Particle)",
          "Efecto Espejo (Mirror)"
        ],
        "Lógica": [
          "Lógica Transformación (Transform)",
          "Lógica Teletransportación (Portal)",
          "Lógica Portero (Gatekeeper)",
          "Lógica Ruta (Path)",
          "Lógica Salto Mundo (Menu Jump)"
        ],
        "Física Avanzada": [
          "Objeto Rueda (Wheel)",
          "Efecto péndulo",
          "Lanzamiento de objeto"
        ],
        "Acciones (Actions)": [
          "Matar todo los enemigos (Kill all enemies)",
          "Invencible (Invincibility)",
          "Imán (Powerup Magnet)",
          "Ataque (Strike)",
          "Puntos de Control (Checkpoints)",
          "Configuración de juego (Gameplay)"
        ],
        "Compilación para Android": [
          "Eclipse y Android",
          "Generar y firmar el APK para Android"
        ],
        "Opciones avanzadas": [
          "Opciones avanzadas (Parte 1)",
          "Opciones avanzadas (Parte 2)",
          "Opciones avanzadas (Parte 3)",
          "Opciones avanzadas (Parte 4)",
          "Event Observer",
          "Animación de Menús"
        ],
        "Proyectos Completos": [
          "Nueva Actualización y nuevos Presets",
          "Freaky Bird",
          "La Gallina está de parto",
          "Need For Zombie",
          "GLTCH"
        ]
      },
      "requirements": [
        "Tener un ordenador o portátil con una conexión a Internet.",
        "Ganas de aprender a desarrollar su primer videojuego.",
        "Tener conocimientos básicos de sistema operativo Windows o Mac y saber instalar programas"
      ],
      "description": "Buildbox es una herramienta especialmente diseñada para desarrollar Videojuegos 2D con el mínimo esfuerzo y sin necesidad de conocimientos previos. Además podrás descargar Buildbox 30 días Gratis!\nTodo el entorno de desarrollo se basa en \"arrastrar y soltar\". Por lo que no se utiliza ningún lenguaje de programación. Simplemente será necesario el aprendizaje de sus funciones y características.\nCon Buildbox podrás desarrollar tus propios videojuegos de forma profesional. Muchos de los juegos desarrollados con Buildbox están en las primeras posiciones en los stores oficiales. Nunca antes una herramientas lo había puesto tan fácil.\nEn este curso aprenderás a:\nGestionar archivos de imágenes\nGestionar archivos de audio\nMonetizar tus creaciones\nCrear animaciones\nUtilizar física\nTrabajar con colisiones\nGestionar puntuaciones\nCrear el interface del juego\nCrear el menú de Inicio\nCrear la zona de control del juego\nCompilar y publicar en las tiendas oficiales\nTestear en tu dispositivo\n\n\nAprenderás en definitiva a desarrollar un videojuego al completo.",
      "target_audience": [
        "Este curso de desarrollo de videojuegos con Buildbox 2.x va dirigido a cualquier persona con ganas de crear sus propios juegos.",
        "No es necesario ningún conocimiento previo, ya que se parte desde la base y en ningún momento es necesario aprender programación."
      ]
    },
    {
      "title": "Técnicas de Storytelling e Narrativas em Games",
      "url": "https://www.udemy.com/course/introducao-ao-storytelling-em-games/",
      "bio": "Aprenda como criar universos narrativos para games utilizando técnicas de storytelling",
      "objectives": [
        "Compreender a evolução da narrativa em nos games através dos tempos.",
        "Aprender e desenvolver técnicas narrativas para entreter e envolver os jogadores.",
        "Compreender os truques utilizados por game designers para gerar o máximo de imersão em jogos digitais."
      ],
      "course_content": {
        "Módulo 1 - Passo-a-passo": [
          "1.0 - Empatia",
          "1.1 - Bits em Experiência",
          "1.2 - Suspensão de descrença",
          "1.3 - Estranhamento",
          "1.4 - Técnicas tradicionais",
          "1.5 - Interatividade",
          "Leitura complementar: O futuro da narrativa, uma escolha de cada vez"
        ],
        "Módulo 2 - Era Uma Vez": [
          "2.0 - Era Uma Vez",
          "2.1 - O que é um videogame",
          "2.2 - Trama e Narrativa",
          "2.3 - Abstração digital",
          "2.4 - Como tudo começou",
          "2.5 - Cinema vs Game",
          "2.6 - Fórmula de evolução",
          "2.7 - Custo de produção",
          "2.8 - Tecnologia vs Arte",
          "2.9 - Tabula rasa",
          "2.10 - Role playing",
          "2.11 - O poder da escolha",
          "2.12 - Menos é mais",
          "2.13 - Passeio da disney",
          "2.14 - História no ambiente",
          "2.15 - Usando abstração ao seu favor",
          "Leitura complementar: Narrativas nos games – ela deveria ser diferente?"
        ],
        "Era Uma Vez II": [
          "3.0 - Exemplos notáveis",
          "3.1 - Super Metroid",
          "3.2 - Prince of Persia",
          "3.3 - Earthbound",
          "3.4 - NIGHTS into dreams",
          "3.5 - Metal Gear Solid 2",
          "3.6 - Metal Gear Solid 4",
          "3.7 - Silent Hill SM",
          "3.8 - Narrativa interativa",
          "Leitura complementar: Dando tiro no pé – no melhor estilo de Hollywood"
        ],
        "Módulo 3 - A Cenoura Moral": [
          "4.0 - A Cenoura Moral",
          "4.1 - Definindo moral",
          "4.2 - Teoria do jogo 101",
          "4.3 - Recompensa",
          "4.4 - Como tratar o jogador",
          "4.5 - Ação e consequência",
          "4.6 - Foco",
          "4.7 - Moral como moeda",
          "4.8 - E onde entra a moral",
          "4.9 - Engajando o jogador",
          "4.10 - Exercícios teóricos",
          "4.11 - Q&A"
        ],
        "Conclusão": [
          "Material Complementar",
          "Conclusão e Agradecimentos"
        ]
      },
      "requirements": [
        "Este curso não requer conhecimento prévio de programação ou habilidades técnicas.",
        "Este curso não requer a instalação de nenhum programa ou ferramenta específica."
      ],
      "description": "O curso Técnicas de Storytelling e Narrativas em Games apresentará a evolução da narrativa nos games, delineada não somente por truques narrativos utilizados por equipes criativas para envolver jogadores de todas as idades, mas também pela evolução do mercado de jogos digitais, e como tudo isso afetou a criatividade no setor.\nUma boa história costuma ser interativa, visual, tem um clímax, é capaz de despertar emoções, usa diálogo realista, é apelativa aos sentidos, tem um personagem com o qual o público se identifica e tem um conflito facilmente identificado e que é resolvido. Jogos digitais podem conter todos esses elementos desde que haja um planejamento prévio durante a fase de concepção e planejamento.\n\nNo segundo módulo Gabriel Morato fala sobre a evolução da narrativa em jogos eletrônicos interativos em \"Era uma Vez: Press Start\", delineando não apenas os truques utilizados por designers para envolver os jogadores, mas também explicando a evolução do mercado e como isso afetou a criatividade no setor. Uma série de finais de jogos é analisada para mostrar alguns dos melhores truques já empregados nessa mídia ainda em sua infância.\nNo terceiro módulo, abre-se uma discussão sobre os truques psicológicos empregados em jogos para manipular jogadores, para então se adentrar no mundo de narrativa em games com opções morais – explicando como jogadores são afetados ao fazer escolhas em games que oferecem um leque entre bem e mal.\n** Este curso será atualizado constantemente pelo professor através de adição de novas aulas, atualização informações, aulas comentadas por outros especialistas da EBG, inserção de estudos de casos e exercícios práticos.",
      "target_audience": [
        "Desenvolvedores de jogos iniciantes ou experientes que desejam criar enredos envolventes para basear ou suportar as mecânicas dos seus jogos.",
        "Produtores de conteúdo que buscam novas formas de entreter e envolver o seu público alvo.",
        "Pessoas interessadas em aprender novas, criativas e interessantes formas de produzir conteúdo e transmitir mensagens através das diferentes mídias existentes.",
        "Público geral interessado em compreender o processo de desenvolvimento narrativo em games."
      ]
    },
    {
      "title": "EXPERTO en Realidad Aumentada con Unity y Vuforia Engine",
      "url": "https://www.udemy.com/course/introduccion-a-la-realidad-aumentada-unity-vuforia/",
      "bio": "Crea experiencias en Realidad Aumentada con Unity, Vuforia y C#.",
      "objectives": [
        "Crear proyectos profesionales de Realidad Aumentada para clientes o empresas interesadas en esta tecnología",
        "Manejar todas las herramientas que ofrece Vuforia",
        "Comprender conceptos básicos de Realidad Aumentada, para saber cómo sacarle el máximo provecho",
        "Prácticas aplicables al mundo real que te servirán para afianzar todo lo estudiado"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos intermedios de Unity",
        "Cámara web para hacer las pruebas en el editor",
        "Dispositivo con el sistema operativo Android",
        "Ganas de aprender, practicar, y superarse",
        "Todas las herramientas utilizadas en el curso son gratuitas, y los materiales de trabajo estan incluidos."
      ],
      "description": "Hola, bienvenidos al curso de EXPERTO en Realidad Aumentada con Unity y Vuforia.\n\n\nEn este curso intensivo, orientado a estudiantes, empresas y emprendedores, aprenderás desde 0 cómo desarrollar proyectos de Realidad Aumentada con Vuforia, plugin oficial de la empresa PTC ya integrado a Unity que nos permite desarrollar aplicaciones y videojuegos en Realidad Aumentada.\nEl mismo está orientado a trabajar con dispositivos móviles, por lo que no necesitas de ningún otro dispositivo especial para aplicar lo estudiado en el curso. Vuforia nos permite testear el proyecto dentro de Unity, y una vez listo, podemos pasarlo a nuestro celular para disfrutar de la experiencia desarrollada.\n\n\nÉste curso está dividido en 8 secciones:\nEn la primera, estudiaremos el mundo de la Realidad Aumentada, y daremos los primeros pasos con Vuforia Engine.\nEn la segunda parte, hablaremos sobre diseño de interfaz orientado a Realidad Aumentada, y cómo aplicar estos conceptos en nuestros proyectos de Unity.\nYa en las siguientes secciones, desarrollaremos 5 aplicaciones de Realidad Aumentada que yo mismo vendí a distintos clientes:\nUn plano que muestra modelos 3D hechos en SketchUp para un estudio de arquitectura.\nUn clon de MERGE Cube que proyecta el sistema solar con fines educativos.\nUna etiqueta de botella que muestra el video de una publicidad.\nUn catálogo de imágenes que se pueden ver con Rayos X.\nY un vehículo que se puede colocar en el suelo y cambiar de color.\nEn la última sección nos introduciremos en la Práctica final, donde desarrollaremos una aplicación desde cero, aplicando conceptos de arte y programación para lograr un producto acabado, completamente adaptable a las necesidades de cada cliente.\n\n\nMi nombre es Mariano Sosa, trabajo en un estudio de videojuegos como programador Unity, y también soy productor en mi emprendimiento dónde desarrollamos aplicaciones y videojuegos tanto en Realidad Aumentada como en Realidad Virtual. Ésto te garantiza a vos cómo alumno una excelente calidad del curso, y que el contenido es dado por alguien que vive de ésto, por lo que te transmitiré no solo mis conocimientos sino también la experiencia que fui ganando en ésta industria con el paso del tiempo.\nTe invito a que veas las clases gratuitas habilitadas en las secciones, que descargues los APK adjuntos para probar las aplicaciones en tu celular, y cualquier consulta no dudes en contactarte conmigo por mensaje privado.\n\n\nMuchas gracias, y te espero en el curso.",
      "target_audience": [
        "Estudiantes, empresas y emprendedores",
        "Toda persona que quiera trabajar con la Realidad Aumentada",
        "Cualquier desarrollador que tenga noción de Unity y quiera aprender a utilizar Vuforia",
        "En resumen: toda persona interesada en la Realidad Aumentada"
      ]
    },
    {
      "title": "Unity 3D | Photon Network ile Online Oyun Yapımı",
      "url": "https://www.udemy.com/course/unity-3d-photon-network-ile-online-oyun-yapimi/",
      "bio": "Unity 3D için tasarlanmış olan Photon Network ile online oyun yapımı",
      "objectives": [
        "Unity 3D'de istediğiniz türde bir online oyun yapabileceksiniz.",
        "Photon Network kullanımını öğreneceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Photon Network Kurulumu"
        ],
        "Photon Network'a Başlangıç": [
          "Lobiye Bağlanma ve Oda Kurma",
          "Oyuncu İsmi Belirleme",
          "Oda Ayarları",
          "UI ile Oda Ayarlarını Belirleme"
        ],
        "Photon View Nedir ve Nasıl Kullanılır ?": [
          "Karakter Oluşturma ve PhotonView kullanımı",
          "Owner ve PhotonView.isMine kavramları",
          "Owner ve PhotonView Kavramlarını Daha Ayrıntılı Olarak İnceledik"
        ],
        "PunRPC Nedir ve Nasıl Kullanılır ?": [
          "PunRPC (Uzaktan Erişim) ve Scene Objelerini Daha Ayrıntılı Olarak İnceledik"
        ],
        "PhotonStream Kullanımı": [
          "Karşıdakini Takılarak Görme Sorununu Düzeltme (Senkronizasyon)",
          "Karşıdaki Oyuncunun Animasyonunu Görme"
        ],
        "Öldürme ve Ölüm İşlemleri": [
          "Öldürme, Ölme, Ölüm Ekranı Bilgileri ve Tekrar Doğma"
        ],
        "Oda Listesi Nasıl Yapılır ?": [
          "Canvas Ayarları ve Oda Listesi"
        ],
        "Photon Network'ta Kullanılan Hazır Fonksiyonlar": [
          "Hazır Fonksiyonlar #1",
          "Hazır Fonksiyonlar #2",
          "Hazır Fonksiyonlar #3"
        ],
        "Oda İçi Sohbet Sistemi": [
          "Sohbet Sistemi #1",
          "Sohbet Sistemi (Geliştirme) #2"
        ],
        "Photon Network'a Özel Skor Sistemi Kullanımı": [
          "Skor Sistemi ve Skoru Kaydetme"
        ]
      },
      "requirements": [
        "Unity 3D ile ilgili ortalama bir bilgi seviyesinde olmalısınız.",
        "Photon Network ile ilgili herhangi bir bilgiye ihtiyacınız yok."
      ],
      "description": "Yeni İleri seviye Online RPG Oyun yapımı serisi için Youtube kanalımıza abone olabilirsiniz.\nYoutube: Perg Valley\n\n\nBu açıklama kısmının hepsini dikkatli bir şekilde okursanız kurs hakkında birçok bilgiye sahip olabilirsiniz. Sizin için bu kurs çok ileri düzey belkide çok basit düzeyde gelebilir. Önceden bilgi sahibi olmanız, satın alıp almamanıza karar vermek için yararlı olabilir.\nBu kursta Unity 3D için tasarlanmış olan Photon Network'un ücretsiz sürümünü kullanarak online bir oyun nasıl yapıldığını öğreneceksiniz. Bu kurs için Unity programı hakkında orta düzey bir bilginiz olması gerekli. Unity ile ilgili işlemler yapılırken, yapılan işlemleri sadece yüzeysel olarak anlattım. Photon Network ile ilgili olan işlemleri daha çok anlatmaya çalıştım. Karşılaştığınız yeni kodların açıklamalarını sesli bir şekilde anlattığım gibi ekranda da bu kodların açıklamalarını görebileceksiniz.\nYeni dersler eklenecektir. Photon Network kullanarak bir oyun yapacağız.\nHile engeli, ekstra güvenlik vb. konularına girilmeyecek.  Bu konu bir sonraki ders serimizde işlenecek. Perg Valley youtube kanalında yayınlanacak. Seriler yüklenmeye başlandığında bildirim göndereceğim.\n\n\nİyi çalışmalar...\n\n\nDers sırasında hiçbir işlem için para ödemenize gerek olmayacak. Ancak ilerde gelir elde etmek için geliştireceğiniz bir oyunun multiplayer sisteminin daha hızlı ve sağlıklı olması için daha güçlü sql server ve eş zamanlı daha fazla oyuncunun oyuna girebilmesi için photon network sistemine para yatırabilirsiniz. Bu terimleri ders sırasında daha detaylı olarak öğreneceksiniz.",
      "target_audience": [
        "Unity 3D'de online oyun yapmak isteyen kişiler."
      ]
    },
    {
      "title": "2Dシューティングゲーム開発入門：Unityインストラクターが教えるゲーム開発ハンズオンコース【スタジオしまづ】",
      "url": "https://www.udemy.com/course/unity2d-shooting/",
      "bio": "縦型シューティングゲーム開発を通して、Unityの基礎が学べる超入門講座！コース終了時には、ゲーム開発スキルと弾幕シューティングゲームがあなたの手に！",
      "objectives": [
        "Unityでの2Dシューティングゲーム開発を通して、 必須要素である当たり判定や敵の行動制御など他にも多くのことが学べます。",
        "初心者が一人で実装するには難易度が高い弾幕の実装方法"
      ],
      "course_content": {
        "はじめに": [
          "導入"
        ],
        "【追加コンテンツ】C#の基礎：わかっている方は飛ばしてください": [
          "はじめに",
          "C#演習問題準備動画",
          "コンソールとコメントアウト",
          "変数の宣言と代入",
          "変数の種類",
          "変数の演算",
          "変数の演算2",
          "比較演算子",
          "論理演算子",
          "if文とは",
          "else文",
          "else if文",
          "switch文とは",
          "while文とは",
          "for文とは",
          "breakとContinueとは",
          "配列とは",
          "List型とは",
          "関数とは",
          "関数の返り値",
          "クラスとは"
        ],
        "（必須）最新バージョンでの修正": [
          "Text"
        ],
        "【追加コンテンツ】Unityテクニック集": [
          "はじめに",
          "キーボード入力の取得方法",
          "TextObjectの取得方法と変更方法",
          "オブジェクトの表示、非表示をコードから行う方法",
          "シーンのリロード",
          "ObjectのPrefab化",
          "Prefab化したものをコードから生成する方法",
          "当たり判定",
          "繰り返し処理",
          "コルーチン",
          "テクニック集に小テスト追加!!",
          "確認テスト",
          "最後に"
        ],
        "【シーティング制作1】新規作成・自機の操作・弾の発射": [
          "新規作成と背景",
          "[追加コンテンツ]ステージの縦スクロール",
          "自機の作成",
          "自機の操作",
          "弾の発射"
        ],
        "【シーティング制作2】敵の実装": [
          "敵の移動",
          "敵の生成",
          "敵の無限生成",
          "敵の爆破",
          "敵の爆破エフェクト"
        ],
        "【シーティング制作3】スコアの実装": [
          "スコアの実装",
          "スコアの加算"
        ],
        "【シーティング制作4】リスタートの実装": [
          "リスタートの実装"
        ],
        "【シーティング制作5】音と移動範囲の制御": [
          "BGMとSEの実装",
          "移動範囲の制御"
        ],
        "追加教材：敵の攻撃実装と弾幕": [
          "敵の攻撃実装",
          "Bossの攻撃実装",
          "Bossの繰り返し攻撃&移動の実装",
          "弾幕実装の前に",
          "Bossの弾幕実装",
          "Boss：弾幕の実装"
        ]
      },
      "requirements": [
        "タイピングができる",
        "Unityのインストールが終了している"
      ],
      "description": "【追加項目】\n9/27：シューティングテクニック集\n10/6：C#の基礎（変数〜クラス）\n11月：テクニック集に小テスト追加！！\n11月：背景スクロール追加\n\n\n講座の説明文まで目を通してくださってありがとうございます。\n\n\n【この講座は以下の方を対象としています】\nUnityの基礎を身につけて個人ゲーム開発ライフを楽しみたい方\n本格2Dシューテイングゲームを開発してみたい方\n弾幕シューティングの作成方法を知りたい方\nコミケやインディーゲームのイベントで出展側として参加したい方\nオリジナルゲームを作ってポートフォリオを充実させ、ゲーム会社に就職したい方\n\n\n【習得できること】\n先日発表されたOculus Quest2やUnityの上場、EpicとAppleの論争など、近年ではゲーム開発に関わる分野が注目を集めています。そんな中Unityは「ゲーム開発の民社化」を掲げており、ゲーム会社に属さない個人でもゲーム開発をすることができるようになりました。この講座は、そのUnityを使って、ゲーム作成に関する知識がない初心者でも、本格2Dシューテイングゲームが作れる講座となっています。\n具体的な内容としては下記のスキルが身につきます。\nプロジェクトの作り方\nPlayer(主人公)の移動方法\n特定のボタンで攻撃\nEnemy(敵)のランダム生成方法\n当たり判定\n2Dエフェクトの付け方\nUIの作成と反映\nGameのリセット\nBGM・SEの実装\nオブジェクトの生成（+α 弾幕の作成）\nBossに体力の実装（記事のみ）\n\n\nこれらのスキルは、Unityを使ったゲーム開発をする上で基礎的かつ幅広く応用可能な内容となっています。また、弾幕の作成方法など難易度の高いスキルも含まれています。\n学習方法に関しては動画での解説だけでなく、テキスト形式での解説も添付してあるので、動画で概要をつかみテキストでじっくり学習することもできます。\n\n\nUnityは幅広いジャンルのゲームを開発することができますが、どのジャンルを開発するにも本講座で学ぶ内容は必要になってきます。Unity学習の第一歩として本講座を活用し、一緒にゲーム開発ライフを楽しみましょう！！！\n\n\n【注意：以下の内容は含まれていません】\n・Unityのインストール\n・ビルドしてからリリースするまでの手順",
      "target_audience": [
        "ゲーム開発に興味がある人",
        "Unityを始めたはいいけど何から手をつけていいのかわからない人",
        "Unityのチュートリアルを勉強したけど挫折してしまった人"
      ]
    },
    {
      "title": "Erstelle eigene VR Games mit Unity und Blender",
      "url": "https://www.udemy.com/course/vr-game-development/",
      "bio": "Lerne C#, Unity3D und 3D-Modeling für die Virtual Reality (und Desktop/Mobile) um vollständige Spiele zu erstellen.",
      "objectives": [
        "Arbeiten mit der Unity3d-Engine",
        "3D Modelle in Blender erstellen",
        "Programmieren in C#",
        "Komplette VR Inhalte (Spiele) entwickeln",
        "Simple Special-Effects (SFX) erstellen",
        "Interaktionen für VR programmieren (wie z.B Teleportieren)"
      ],
      "course_content": {
        "Arbeiten mit Unity3D": [
          "Coding mit Jannick",
          "Einleitung des Kurses",
          "Einführung in Unity",
          "Materialien und Scenen",
          "Eine Skybox erstellen",
          "VR in das Projekt implementieren",
          "Die Einstellung der Reflektionen",
          "Ein Spiel builden (eine .exe erstellen)",
          "Wichtiger Hinweis!"
        ],
        "Programmieren mit C# und Unity": [
          "Unterstützung beim Programmieren",
          "\"Hello World\" In der Konsole ausgeben",
          "Variablen",
          "Void Update",
          "If-Statements",
          "Operatoren",
          "Eigene Methoden schreiben",
          "Rückgabetypen",
          "Arrays",
          "Schleifen",
          "Private und Public",
          "C# Wissen",
          "Motivation als Schlüssel zum Erfolg"
        ],
        "Physik in Unity": [
          "Die Rigidbody Komponente",
          "Kollision und Trigger",
          "Physik in Unity"
        ],
        "3D Models erstellen mit Blender": [
          "Blender Herunterladen",
          "First Look und primitive Objekte erstellen",
          "Die Kamerasteuerung in Blender",
          "Object- und Edit Mode",
          "Face, Edge und Vertex",
          "Bewegen, Rotieren, Skalieren und Extrudieren",
          "Ein simples Haus erstellen",
          "Materialien in Blender",
          "Blender Export und Unity Import"
        ],
        "Ein VR Spiel erstellen": [
          "Das Projekt",
          "Blender: Revolver Part I (Vorbereitung)",
          "Blender: Revolver Part II (Griff)",
          "Blender: Revolver Part III (Körper)",
          "Blender: Revolver Part IV (Lauf und Magazin)",
          "Blender: Revolver Part V (Abzug)",
          "Blender: Revolver Part VI (Letzte Details)",
          "Blender: Revolver Part VII (Materials und Export)",
          "Unity: Revolver einbauen und an die Hand binden",
          "Unity: Zielen mit dem Revolver (Raycast)",
          "Unity: VR-Kontroller Input",
          "Unity: VR-Kontroller Vibration (haptic pulse)",
          "Blender: Eine Flasche erstellen",
          "Unity: Die Flasche in das Spiel implementieren",
          "Unity: Die Flasche einer simulierten Explosion aussetzen",
          "Unity: Die Flasche zerstören",
          "Blender: Eine Platform für die Flasche erstellen",
          "Unity: Die Platform einbauen",
          "Unity: Flaschen respawnen lassen",
          "Unity: Flaschengröße abhängig von der Größe des Tisches machen",
          "Blender: Die Flasche zerspringen lassen (Part I)",
          "Unity: Die Flasche zerspringen lassen (Part II)",
          "Unity: Einen Score einbauen",
          "Unity: Timer, Start und Neustart",
          "Unity: Sounds hinzufügen",
          "Unity: Revolver Partikel Effekt",
          "Unity: Die letzten Einstellung und Anpassungen"
        ],
        "Persistente Daten (Einen Highscore speichern)": [
          "Einen GameManager anlegen",
          "Ein Userinterface für VR erstellen",
          "Den Score erhöhen und anzeigen",
          "Das speichern und laden einer Variable (PlayerPrefs)",
          "Den Highscore updaten",
          "Die PlayerPrefs"
        ],
        "Interaktionen": [
          "Einen eigenen Teleporter programmieren"
        ],
        "Bonus": [
          "Abschluss",
          "Meine anderen Kurse für Spiele-Entwicklung"
        ]
      },
      "requirements": [
        "Zugang zu einer HTC Vive oder einer Oculus Rift und einem PC der genug Leistung hat um VR Content zu erstellen"
      ],
      "description": "Anforderungen\n\nKein Vorwissen nötig\nEine HTC Vive oder Oculus Rift\nEin PC oder Mac wird benötigt\nVor dem Kurs wird keine Software benötigt - Die Software im Kurs ist kostenlos\nBeschreibung\nIn diesem Kurs entwickeln wir, nach einer allgemeinen Einleitung in die spezifischen Programme, gemeinsam ein kleines VR-Spiel für die Rift/Vive: du wirst lernen wie du Unity3D, Visual Studio und Blender einsetzt, um Spiele und Erfahrungen für die Virtuelle Realität zu entwickeln.\nAufbau des Kurses\nIn insgesamt 6 Kapiteln behandeln wir alle Grundlagen der VR-Entwicklung.\nWir beginnen mit den Grundlagen. Ich zeige Dir die richtigen Programme und Tricks, so dass du schnell die Basics von Unity3D, C# und Blender beherrscht.\nDanach geht es an fortgeschrittene Themen und Techniken, die Dir beispielsweise ermöglichen Speicherstände zu erstellen um deinem Spiel mehr Sinn zu verleihen.\nInhalte des Kurses\nWie funktioniert Unity3D\nWas ist 3D Modeling\nC# und Visual Studio\nPlanen eines Spielkonzepts\nLebenslanges Zugriffsrecht auf alle Kursunterlagen\nVerständnis zur Programmierung und Design\n\n\nDieser Kurs wird dir neue Wege und Möglichkeiten bieten. Ich freue mich dich in meinem Kurs begrüßen zu können. Wenn du Fragen hast dann melde dich bitte direkt bei mir! Willkommen in der Welt der Entwickler :)\nAn welche Zielgruppe richtet sich dieser Kurs?\nAlle die Entwickeln lernen möchten\nAlle die Interesse an der Virtual Reality haben\nAlle die eine neue Einnahmequelle aufbauen möchten\nAlle die eigene Spiele erstellen möchten\nAlle die finanziell Unabhängig sein wollen\nAlle die ein Unternehmen starten oder Freelancer werden möchten",
      "target_audience": [
        "An absolute Anfänger die gerne Spiele für die Vive oder Rift entwickeln möchten"
      ]
    },
    {
      "title": "GoDot 4.0 Einsteigerkurs",
      "url": "https://www.udemy.com/course/godot4-einsteigerkurs/",
      "bio": "Entwickle mit GoDot 4.0 einen Pirate-2D-Plattformer und lerne dabei die Grundlagen der Engine",
      "objectives": [
        "Grundlegende Inhalte zum Thema Indie-Game-Development",
        "Grundlegender Umgang mit der Game Engine GoDot 4.0",
        "Organisation eines Indie-Game-Projektes inkl. OOP und Actors",
        "Grundlagen zum finalen Erstellen eines Computerspiels",
        "Einbinden von Assets, darunter animierte Sprites und Sounds"
      ],
      "course_content": {
        "Einführung": [
          "Theorieinput Game-Development",
          "Installation, GitHub, GitHub Desktop, Assets"
        ],
        "Character, Testlevel und Weaponactor": [
          "Character erstellen",
          "Test Level implementieren",
          "Lauf- und Sprunganimationen",
          "Waffen aufnehmen",
          "Attacken bei Spieler implementieren"
        ],
        "Levelactors hinzufügen und Partikelsystem": [
          "Actor erstellen",
          "Partikelsystem",
          "Leben und Gold Coin"
        ],
        "GUI": [
          "GUI"
        ],
        "Shooter": [
          "Shooter erstellen",
          "Projektile und Animation",
          "Hit-Reaction mit Spieler",
          "Kindklassen"
        ],
        "Gegner": [
          "Gegner Teil 1",
          "Gegner Teil 2",
          "Gegner Teil 3",
          "Gegner Teil 4"
        ],
        "LevelElemente, Deadzone, Menu, Custom Signals, Sound und Final Touches": [
          "Level Elemente und Spikes",
          "Dead Zone und Level Transition",
          "Start Menu Level 1 und 2 Winning Screen",
          "Spieler verliert und erhält Schaden mit Custom Signals",
          "Level Design",
          "Sounds und Abschluss"
        ]
      },
      "requirements": [
        "Python sollte grundlegend ein wenig bekannt sein, ansonsten Lust und Laune auf Game-Development"
      ],
      "description": "Willkommen in der wunderbaren Welt des Indie-Gamings!\nDu wolltest schon immer deinen eigenen 2D-Plattformer erstellen oder sogar ein ganzes 3D-Spiel? Dann starte mit diesem Kurs als Einstieg in die Gameentwicklung. Wenn du die Konzepte gut verstanden und verinnerlicht hast, kannst du nach dem Kurs jede Engine selbst erlernen und größere Projekte angehen!\nIn diesem Kurs wirst du einen kompletten Einstieg in GoDot 4.0 erhalten, darunter folgende Schwerpunkte:\n\n\nOrganisation eines Projektes\nGrundlagen GDScript/Python\nAnimierte Actors\nCharacter inkl. Bewegung, Sprung- Lauf und Idle-Animation\nAttacken des Spielers\nWaffen aufnehmen\nGegner inkl. Attacken und verschiedenen Stadien\nPartikelsystem als Explosion\nTile-Map inkl. Erstellung und Collission\nGUI\nMenü und besondere Level-Zonen\nEinbinden von Assets, darunter animierte Bilder und Sound\nCustom Signals zur Objektinteraktion\nuvm.\nDu erhältst einen kompletten Kurs, um motiviert und kreativ ein Spiel in GoDot 4.0 zu erstellen. Mit diesem Kurs ersparst du dir das umfangreiche Suchen im Netz und kannst dir hier alle grundlegenden Konzepte von GoDot erarbeiten.\nNach dem du den Kurs durchgearbeitet hast, kannst du selbständig weitere Inhalte dazu packen und deinen Traum vom eigenen Spiel erfüllen!\nMit einer lockeren Art und viel Spaß am Programmieren bauen wir zusammen ein ganz neues Spiel. Zusätzlich bringe ich dir ein paar Code-Skills bei, damit du auch nach dem Kurs gut mit GDScript respektive Python klar kommst.\nIch wünsche dir viel Spaß und viel Erfolg!",
      "target_audience": [
        "Wenn du an Indie-Game-Development interessiert bist und für dich GoDot 4.0 neu ist, bist du hier genau richtig!"
      ]
    },
    {
      "title": "Aprenda Desenvolvimento de Jogos 3D na Godot 4.0",
      "url": "https://www.udemy.com/course/desenvolvimento_3d_godot4/",
      "bio": "Tudo que você precisa saber, para COMEÇAR a criar JOGOS 3D.",
      "objectives": [
        "Desenvolvimento de Jogos 3D.",
        "Aprender a criar cenas a partir de modelos 3D.",
        "GDScript, línguagem nativa da Godot Game Engine.",
        "Transição animada de cenas (Efeitos de Fade In/Out).",
        "Godot 4.0.3 e Godot 4.1 (VERSÃO MAIS ATUALIZADA).",
        "Como utilizar o SISTEMA DE NAVEGAÇÃO 3D da Godot.",
        "Manipular e criar diversos objetos e cenas de INTERFACE.",
        "Como adicionar efeitos sonoros (SFX) e músicas de fundo (BGM) na Godot.",
        "Como utilizar de Meshes (Malhas 3D) para criar modelos 3D que irão auxiliar o visual do projeto.",
        "Como criar bibliotecas de Meshes (Malhas) para a construção de níveis 3D utilizando o GRIDMAP.",
        "Diversos usos de sinais (Signals) e corrotinas, além de SINGLETONS (Cenas autocarregadas).",
        "Como modificar os GRÁFICOS e SERRILHAMENTO (AA) do jogo por meio da INTERFACE do projeto."
      ],
      "course_content": {
        "Introdução ao Curso.": [
          "Agradecimento especial ao Quaternius (Artista 3D).",
          "Download da Godot 4.0.3",
          "Explicando como funciona a interface de projetos.",
          "Falando sobre os renderizadores que podem ser utilizados | Criação do projeto.",
          "Correção do erro de compatibilidade (Caso você vá utilizar o open gl/web gl).",
          "Configurações iniciais do projeto.",
          "Explicando como criar cenas a partir de modelos 3D."
        ],
        "Desenvolvimento inicial do Personagem.": [
          "Estrutura inicial do personagem.",
          "Código de movimentação em 8 direções | Configurando as inputs do personagem.",
          "Código de movimentação da câmera.",
          "Código de rotação do personagem baseado na direção de input.",
          "Código das animações do personagem.",
          "Correção de um bug na rotação do personagem."
        ],
        "Usando GRIDMAPS para a construção de níveis.": [
          "Criando a cena do nível e definindo ela como a cena principal do projeto.",
          "Criando o terreno de base (ROAD).",
          "Criando o GRIDMAP do chão.",
          "Criando o GRIDMAP da parede.",
          "Criando o GRIDMAP da cozinha.",
          "Construindo a cozinha e os fundos do restaurante com o GRIDMAP.",
          "Construindo a área do restaurante com o GRIDMAP.",
          "Configurando a região de navegação após construir o nível."
        ],
        "Usando WorldEnvironment/Directional Light para tornar o nível mais bonito.": [
          "Adicionando a luz direcional | sombra ao nível.",
          "Adicionando o céu e utilizando um material para mudar a iluminação do nível.",
          "Modificando as diversas propriedades gráficas da Godot 4.",
          "Adicionando uma fumaça volumétrica ao nível."
        ],
        "Criando e Programando o menu de configurações gráficas.": [
          "Estrutura do container das configurações (Parte 1).",
          "Estrutura do container das configurações (Parte 2).",
          "Estrutura do container que exibirá o FPS do jogo.",
          "Código do container das configurações (Parte 1).",
          "Código do container das configurações (Parte 2).",
          "Acessando e modificando os estados dos CheckButton.",
          "Integrando o Pause | Visibilidade das configurações | Estado do mouse.",
          "Acessando e modificando os estados dos OptionButton.",
          "Código para atualizar o FPS em tempo real."
        ],
        "Configurando os Sofás/Mesas/Iluminação do nível.": [
          "Código do sofá.",
          "Montando a cena da mesa.",
          "Código da mesa.",
          "Adicionando os pratos de comida ao prato da mesa.",
          "Modificando o mesh de navegação | Adicionando mesas/sofás e iluminação ao nível."
        ],
        "Configurando os objetos interativos (Fogão/Geladeira/Tábua de Cortar).": [
          "Código do Interactable Object (Objeto interativo).",
          "Código da Interactable Area (Área interativa).",
          "Criando o mesh de feedback.",
          "Criando a estrutura e código da placa de receitas | Código no personagem.",
          "Criando a estrutura e código do fogão.",
          "Alterando a rotação e posição do personagem de forma dinâmica (Bugfix).",
          "Criando a estrutura e código da geladeira.",
          "Utilizando o GRIDMAP da cozinha | Adicionando colisão ao fogão/geladeira.",
          "Criando a estrutura e código da tábua de cortar/ingredientes."
        ],
        "Configurando os Slots da Interface.": [
          "Configurando o slot do personagem.",
          "Configurando o slot dos objetos interativos.",
          "Criando o código de base dos slots.",
          "Adicionando e explicando os Singletons do projeto.",
          "Criando o código do slot do personagem.",
          "Criando o código do slot do objeto interativo."
        ],
        "Configurando os Containers da Interface.": [
          "Criando o container da geladeira.",
          "Criando o container do fogão.",
          "Criando o container da tábua de cortar.",
          "Criando o código de base dos containers (Parte 1).",
          "Criando o código de base dos containers (Parte 2).",
          "Criando o código de base dos containers (Parte 3).",
          "Criando o código do container da geladeira (Parte 1).",
          "Criando o código da geladeira (Parte 2) | Terminando o código das configurações.",
          "Criando o código do inventário do personagem.",
          "Atualizando o código do slot do personagem.",
          "Criando o código do container do fogão.",
          "Criando o código do container da tábua de cortar."
        ],
        "Integrando as animações de Cortar/Cozinhar com os itens feitos.": [
          "Criando o código da função de cozinhar | Integração das animações de cozinhar.",
          "Criando o mesh de feedback do item a ser recebido.",
          "Integrando o código de animação do mesh com o item recebido após cozinhar.",
          "Criando todo o código | integração das animações de Cortar."
        ]
      },
      "requirements": [
        "Conhecimento básico em lógica de programação para acompanhar as aulas.",
        "Um computador com uma placa gráfica que suporte a Vulkan (Recomendado)."
      ],
      "description": "Aprenda Desenvolvimento de Jogos 3D na Godot 4.0\n\n\nNesse curso de Godot + GDScript você aprenderá conceitos de programação e desenvolvimento de jogos 3D no geral, tais como:\n\n\nEfeitos sonoros (SFX) e músicas de fundo (BGM)\nUm personagem completo com câmera em terceira pessoa\nFunções/Funções com Retorno/Funções com Argumentos\nGrupos (Comunicação entre Objetos de forma simples e rápida)\nObjetos de Animação representados pela cor Roxa (AnimationPlayer)\nMovimentação dos clientes por meio do Sistema de Navegação 3D\nObjetos do tipo Control/Controle representados pela cor Verde (Objetos de Interface no geral)\nObjetos do tipo 3D representados pela cor Vermelha (CharacterBody3D, CollisionShape3D, Sprite3D, Camera3D etc)\nE MUITO MAIS\n\n\nO curso tem forte foco no desenvolvimento de jogos 3D, Sushi Hero, o jogo que iremos desenvolver durante o curso se passa em um restaurante, onde você como dono, precisa se responsabilizar pelo estoque de ingredientes contidos na geladeira, itens que serão tratados na mesa de cortar, além das receitas que serão preparadas no fogão. Você poderá consultar todas as receitas disponíveis na placa de receitas, isso tudo enquanto clientes controlados pelo sistema de navegação 3D da Godot estarão indo até o seu restaurante e pedindo alguma comida. Ficou sem estoque? Não se preocupe, o caminhão de ingredientes de tempos em tempos passará nos fundos do restaurante para que você possa repor o seu estoque de ingredientes, mas não se esqueça de vender algo para ter dinheiro o suficiente para comprar os ingredientes necessários, além disso não deixe os clientes esperando por muito tempo, eles podem ficar com raiva e ir embora, diminuindo a reputação do restaurante!\n\n\nPorque aprender Godot e GDScript?\n\n\nA Godot Game Engine está entre os Motores de Jogos mais populares, poderosos e flexíveis para o Desenvolvimento de Jogos e Aplicativos em 2023, com sua nova versão 4.1, ela conta com um poderoso renderizador, o Vulkan, além de diversas outras melhorias, como um código mais performático e comercial. A Godot também conta com a linguagem de programação nativa, o GDScript, ou seja, você consegue programar diretamente de dentro da Engine, sem a necessidade de um programa externo para fazer a integração do código com o projeto.\n\n\nAlém de todos os benefícios, a Godot é open source, ou seja, de código aberto! Você consegue acessar todo o código fonte da Engine diretamente pelo GitHub, além disso, ela é livre de Royalties, então se você quiser comercializar qualquer jogo desenvolvido por você utilizando a Engine, você tem direito, podendo ficar com 100% dos lucros, sem precisar criar uma conta ou assinar algum tipo de contrato com a Engine!\n\n\nVocê está pronto para aprender?",
      "target_audience": [
        "Apaixonados por desenvolvimento de jogos.",
        "Pessoas que querem migrar para a Godot Game Engine e desenvolver seus jogos 3D.",
        "Pessoas que querem aprender ou aperfeiçoar os seus conhecimentos no desenvolvimento de jogos 3D."
      ]
    },
    {
      "title": "Pythonオブジェクト指向プログラミング入門。難解なオブジェクト指向の概念をアプリを開発しながら徹底解説。",
      "url": "https://www.udemy.com/course/python-oop-1/",
      "bio": "基礎文法を学んだあと何をしたらいいの？ もっとキレイにコードを書きたい？ ゲームを作りながら楽しくオブジェクト指向プログラミングを学びましょう。基礎的なクラスの文法、デコレータ、インナークラスを組み合わせクリーンコードで実装する方法を習得。",
      "objectives": [
        "オブジェクト指向でプログラムを実装する方法",
        "役割ごとにモジュールとクラスを定義し、コードを整理整頓する方法",
        "クラス内クラス(インナークラス)を使ってコードを整理整頓する方法",
        "オブジェクト指向の概念や考え方",
        "オブジェクト指向でターミナルで遊べるゲーム開発の手法",
        "ChatGPTにコードレビューしてもらってコードを磨き上げる方法",
        "列挙型クラス(Enum)の定義と使い方",
        "クラスを継承し、メソッドをオーバーライドする方法",
        "デコレータ classmethod, abstractmethod, propertyの使い方",
        "ターミナルの文字の色を変えたりアスキーアートを表示させたりして表現豊かにゲームを作る方法",
        "任意のタイミングでターミナルに表示される文字列をクリアし、UXを向上させる方法",
        "複数のクラス、インスタンスを強調させてアプリケーションを実装する方法",
        "ランダムな結果になってしまうゲームを効率よくテストするための方法 (ユニットテストではありませんのでご注意ください)"
      ],
      "course_content": {
        "紹介": [
          "このコースで作るゲーム",
          "ごあいさつ",
          "このコースの資料"
        ],
        "クラス・オブジェクト指向プログラミングの復習": [
          "そもそもクラス・オブジェクト指向プログラミングとはなにか",
          "クラスを使ったプログラミングのメリット",
          "現実のものをクラスで表現した場合の例",
          "クラス基礎文法 - プロパティの設定",
          "クラス基礎文法 - メソッドの設定",
          "隠蔽(カプセル化)",
          "propertyデコレータ",
          "setterデコレータ",
          "getterとsetterで使う名前が同じなのはなぜか？ なぜ使い分けられるのか？",
          "クラス変数 (異なるインスタンス間共通で使える値)",
          "継承の基本",
          "メソッドオーバーライド (上書き)",
          "デコレータ・継承・オーバーライドのコーディング演習",
          "隠蔽とデコレータのコーディング演習",
          "Pythonは全てがオブジェクト",
          "オブジェクト指向プログラミングまとめ"
        ],
        "ゲームで使うフォントやアスキーアートのダウンロード": [
          "アスキーアートとフォントについて"
        ],
        "じゃんけんゲーム (クラスを使わない実装)": [
          "開発するじゃんけんゲームのアルゴリズムを図解",
          "じゃんけんゲーム開発で学ぶこと",
          "クラスを使わないじゃんけんゲーム完成コード",
          "ユーザーとコンピュータがじゃんけんの手の選択する処理の実装",
          "勝敗を判定する関数を実装",
          "再戦する場合とあいこの場合に繰り返す処理の実装",
          "ユーザーの手を選択させる関数を実装",
          "ユーザーの成績を表示する処理の実装",
          "じゃんけんのアスキーアートを表示させる処理の実装"
        ],
        "じゃんけんゲーム (クラス・オブジェクト指向を使った実装)": [
          "オブジェクト指向プログラミングによる、じゃんけんゲーム完成コード",
          "勝敗を記録するための Score クラスを実装",
          "じゃんけんの手の名称とアスキーアートを保持する Hand クラスを実装",
          "勝敗組み合わせ辞書を実装してコードを読みやすくする",
          "基底クラス Player クラスの実装と抽象メソッドの解説",
          "派生クラス CPU クラスの実装",
          "派生クラス User クラスの実装",
          "main.py に UserインスタンスとCPUインスタンスを実装",
          "勝敗を判定する Referee クラスの実装",
          "オブジェクト指向で作るじゃんけんゲームまとめ",
          "ChatGPTにじゃんけんゲームをコードレビューしてもらう方法",
          "ChatGPTによるmain.pyの分割提案コード",
          "main.pyの分割提案コードを反映させる",
          "ターミナルでCtrl+Cを押されたときの処理 (KeyboardInterrupt例外)を加える"
        ],
        "ブラックジャックゲームの概要": [
          "このコースでつくるブラックジャックのルール",
          "ブラックジャックで登場する主要キャラクター (クラス)",
          "ブラックジャックのクラス関係図",
          "ブラックジャックを作りながら学ぶこと",
          "アスキーアートをダウンロード",
          "完成コードのダウンロード"
        ],
        "ブラックジャックのアスキーアートを管理するクラス": [
          "アスキーアート表示を管理するクラスを定義",
          "キャッシュを使ってAA(アスキーアート)を表示する",
          "propertyデコレータを使ってAAを表示する"
        ],
        "カード一枚一枚を管理するクラス": [
          "カード1枚1枚を表現するCardクラスの概要",
          "Cardクラスの定義とインスタンス生成",
          "カードフェイス（表側)をAA表示するメソッド",
          "カード表裏どちらを表示させるか引数で指定してAA表示する",
          "カードの絵柄に色を付ける (ハートとダイヤで赤)"
        ],
        "カードデッキを管理するクラス": [
          "トランプカード52枚を生成し管理するデッキクラス",
          "デッキからカードを1枚引くメソッド"
        ],
        "[基底クラス] プレイヤーを管理するクラス": [
          "プレイヤーのデータと挙動を管理するPlayerクラスの概要",
          "プレイヤーのプロパティと挙動を実装する",
          "エースを引いたときに得点を調整するアルゴリズム",
          "スコア計算に関連するルールを列挙型クラスにまとめる",
          "ヒット時にバーストしたか判定する",
          "手札AAを横一列に表示させるアルゴリズムの概要",
          "手札AAを横一列に表示させるアルゴリズムを実装",
          "指定した枚数を表面で、残りを裏面でAA表示するように修正する",
          "カード表面を全て表示させ、得点も表示させるメソッド",
          "１ラウンドごとにスコア等をリセットするメソッド"
        ]
      },
      "requirements": [
        "ハンズオン(実際に手を動かしながらコードを記述する)でレクチャーを進めます。途中経過のコードをダウンロードできるようにしておりません。ご注意願います。(完成版コードはダウンロード可)",
        "Pythonの基礎文法を理解している方 (変数・データ構造・条件分岐・反復処理・デコレータの概念・例外処理・ファイル入出力などの基礎文法の解説は行いません)",
        "Pythonが実行できる環境 (本コースでは環境構築は扱いません)",
        "Pythonのクラスの文法を知っている方 (クラス定義、インスタンス化など)",
        "Pythonプログラミング経験者を対象にしていますので、進行が速い、と感じる可能性があります。ご注意ください。",
        "ターミナルでPythonプログラムを実行できる方",
        "レクチャーはPyCharmで行っています",
        "Python3.10以降を使用します。"
      ],
      "description": "基礎文法を学んだけど、次どうしたらいいの？\nもっとキレイなコードが書きたい\n自分が書いたコードでも修正するとき解読するところから始めている\nオブジェクト指向プログラミングは身につけるべき、と聞いた\nこんな方のためのコースです。\n\n\n自分が書いたコードがいつでも整理され、キレイに保たれ、バグが生じにくかったらどうでしょうか？\nオブジェクト指向プログラミング (OOP) はそれを実現するための技術・フレームワークです。\n\n\nビルを作る場面では地面を深く掘って基礎を固め、震度7でも倒壊しない堅牢な材質・構造にしますよね。\nプログラミングでも同じです。\n規模の大きなプログラムを作ろうと思ったら必ず使われるもの。それがオブジェクト指向プログラミングです。\n\n\n難しそうですか？\n大丈夫。必要なのはPython基礎文法の知識だけです。\n\n\nクラスの文法に自信がない？\n大丈夫。クラス定義の基礎文法、デコレータの取り扱い方を復習するセクションがあります。\n\n\n\n\n準備はいいですか？ 楽しくゲームを開発しながらオブジェクト指向プログラミング学びましょう。\n扱うテーマは「じゃんけん」と「ブラックジャック」です。\nゲーム開発が題材ですが「課題をOOPで整理整頓する」というフレームワークは実務でも役立ちます。\n\n\nじゃんけんゲームはOOP入門に最適です。OOPは課題を整理し、役割ごとのクラス設計が需要ですが、じゃんけんは役割が明確でルールも単純。\nまずはクラスを使わず関数のみで実装し、ゲームを完成させます。次に完成したゲームをOOPに沿ってリファクタリングします。\nこの過程であなたはオブジェクト指向プログラミングの利点が理解できるようになります。\n\n\nじゃんけんゲームではこんなことを学びます。\nオブジェクト指向は「現実世界の営み」をコードで表現する概念または技術の1つ、という考え方\nクラスとインスタンスの違い\nクラスを使わないパターンからつくり始め、徐々にクラスを使った実装にリファクタリングする方法\n役割ごとにモジュールとクラスに整理整頓する方法\n継承とオーバーライドを使ってクラスを作る方法\n複数のインスタンスを協調して稼働させる方法\nデコレータ`classmethod`の使い方\nデコレータ`abstractmethod`を使ってメソッドの実装を強制する方法\nターミナルにアスキーアートを表示させて表現力を豊かにする方法\n\n\n\n\n次はブラックジャックです。これはトランプを使ったゲームですね。じゃんけんと比べるとルールは複雑です。\nじゃんけんで基礎を身につけたあとは複雑な課題を整理・解決する応用力を身につけましょう。\n\n\nブラックジャックではこんなことを学びます。\nキャッシュを使ってアスキーアートを表示する方法 (ファイルIO(インプットアウトプット)は負荷が高いのでキャッシュという概念を学ぶ)\nデコレータ`property`を使ってメソッドをプロパティのように参照する方法、プロパティ代入時に所定の処理を挟む方法\n列挙型クラス(Enum)を使って関連する値をまとめる方法\nクラス内のクラス(インナークラス)を使って整理する方法\nターミナルで文字に色を付ける方法\nターミナルをクリアして見やすくする方法\nアスキーアート雛形に所定の文字を流し込む方法\n\n\nオブジェクト指向プログラミングを身に付ければあなたの技術力は一段高い次元に上がります。\n\n\n自分が書いたコードがいつでも整理され、キレイに保たれていたらどうでしょうか？\nさあ。一緒にオブジェクト指向プログラミングを学びましょう。",
      "target_audience": [
        "基礎文法を学んだけどそれをどう応用していいのかよくわからない方",
        "クラスの文法はなんとなく分かるけど、これを使ってどう活かせばいいのかよく分からない",
        "オブジェクト指向が大事、と聞いたことがあるけどイマイチ ピンとこない",
        "新入社員から中堅社員"
      ]
    },
    {
      "title": "How To Make A FULL Game in Godot 4.5 (FREE!)",
      "url": "https://www.udemy.com/course/how-to-make-a-full-game-in-godot-4-5-free/",
      "bio": "Create a full game in Godot, 100% free, while learning its fundamentals the right way",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "None, just a PC"
      ],
      "description": "Master Godot 4 by Creating a Crossy Road-Style Game\nWant to learn game development with Godot 4 but don’t know where to start? This beginner-friendly course will guide you through the entire process of creating a simple but playable Crossy Road-style game in just 1.5 hours.\nThrough hands-on lessons, you'll learn how to set up Godot, work with essential nodes, and implement player movement, tile maps, obstacles, and collisions. By the end, you'll have a solid understanding of Godot’s core concepts while building a fun, interactive project from scratch.\nWhat You’ll Learn:\n- How to properly ideate a game concept using a whiteboard\n- The basics of Godot’s node system and scene management\n- How to create and script a player character\n- Working with TileMaps to design game levels\n- Implementing collisions and obstacles to challenge the player\n- Adding a user interface for better player interaction\nThis course is perfect for beginners looking for a fast, practical introduction to Godot 4. Whether you're an aspiring game developer or just curious about Godot, this hands-on project will help you build confidence and skills quickly.\nJump in and start creating your first Godot game today!\nTrust me, you won't regret it! Start learning Godot the right way :)",
      "target_audience": [
        "People who want to learn how to create games"
      ]
    },
    {
      "title": "Unreal Engine 5.0: Базовый курс - с нуля до первого проекта",
      "url": "https://www.udemy.com/course/ue_five_for_beginners/",
      "bio": "Создание экшн арены с нуля для начинающих на Unreal Engine v 5.0",
      "objectives": [
        "Создание концепта проекта",
        "Создание уровней",
        "Создание и проработка персонажа",
        "Создание полноценной боевой системы",
        "Создание противников, их логики и боев с боссом",
        "Создание интерфейса игры",
        "Создание звуков и саундтрека игры"
      ],
      "course_content": {},
      "requirements": [
        "Установленный Unreal Engine 5",
        "Базовые навыки пользования компьютером"
      ],
      "description": "Хотите начать работать с Unreal Engine 5, но не знаете с чего начать? Уже имеете небольшой опыт, но хотели бы изучить новые механики Unreal Engine 5? Хочется создавать игры, но вы ничего еще не умеете? Этот курс позволит вам сделать первый шаг и создать простую игру, но с интересными и популярными механиками.\nМы разберем как начинается разработка проекта, как избежать типичных ошибок новичков, как создать игровые локации, разберем интерфейс, настройки анимации, как создать персонажа, дать ему оружие, как создать врагов нашему персонажу и финального босса. Вся информация выдается в очень подробном виде, в видео в разрешении 1080р.\nАвтор является действующим геймдизайнером в игровой студии и имеет опыт разработки дизайн документов к различным проектам, нескольких курсов и учебных игровых проектов, а также работает над коммерческими проектами. На все вопросы автор отвечает оперативно в течение 1-2 дней. Если возникают вопросы, вы всегда можете обратиться к автору.\nЧастые вопросы:\n1) Можно где-то скачать материалы или проект?\nОтвет: Нет, проект делается полностью с нуля, все элементы разрабатываются с нуля, а что берется из ассетов, доступны в Unreal маркете бесплатно. Проект недоступен для скачивания с целью сдерживания пиратства и кражи авторского контента.\n2) Смогу ли я найти работу после прохождения курса?\nОтвет: Чтобы стать полноценным специалистом уровня джуниора (младшего ГД и смежных профессий), необходимо разбираться в теме гораздо более глубоко. По личному опыту, в отрасль можно попасть при интенсивном обучении не менее полугода, а в среднем 1 года. Этот курс поможет сделать первый шаг, но для работы нужно больше знаний и опыта. Базовый курс №2 поможет продвинуться в этом направлении дальше, если тема игровой разработки осталась актуальной для вас после прохождения первых шагов.\n3) Чему я научусь в этом курсе?\nОтвет: Создавать самые стандартные механики популярных жанров. Начальный курс подразумевает изучения базовых знаний, которые необходимы для создания игровых проектов. Комбинируя этот курс с некоторыми другими, можно научиться создавать полноценные игры.\n4) В каком формате проходят занятия?\nОтвет: занятия проходят в формате видеоуроков. Каждый следующий урок использует наработки предыдущего, поэтому рекомендуется выполнять задания по порядку.\n5) Есть ли поддержка после курса?\nОтвет: вы всегда можете задать свой вопрос автору проекта, связанный с курсом и элементами в рамках проекта. Ограничений по времени после прохождения курса и прочего нет.",
      "target_audience": [
        "Для начинающих пользователей Unreal Engine 5",
        "Для пользователей начального и базового уровня Unreal Engine 4"
      ]
    },
    {
      "title": "สร้างเกม 3D ด้วยโปรแกรม Unity (ตั้งแต่เริ่มต้นจนเล่นได้จริง)",
      "url": "https://www.udemy.com/course/unity-3d-game/",
      "bio": "สร้างเกม 3 มิติ ตั้งแต่เริ่มต้นจนเล่นได้จริงบน PC ด้วยโปรแกรม Unity & C#",
      "objectives": [
        "เขียนคำสั่งสำหรับควบคุมตัวละครในเกม",
        "จัดการ Animation ด้วย Animator Controller",
        "การสร้างระบบ AI ด้วย NavMesh Agent",
        "ระบบเก็บคะแนน (Score)",
        "ระบบพลังชีวิต (HP)",
        "ระบบเก็บคะแนนสูงสุด (High Score)",
        "จัดการ Scene เกมและระบบเสียงในเกม",
        "เรียนรู้การ Export Game & Package"
      ],
      "course_content": {},
      "requirements": [
        "มีพื้นฐานการเขียนโปรแกรมภาษา C#",
        "มีพื้นฐานการใช้งานโปรแกรม Unity",
        "ใช้ Unity 2021.3.6f1 หรือสูงกว่าในการพัฒนาเกม"
      ],
      "description": "เรียนรู้เกี่ยวกับการสร้างเกม 3 มิติด้วยโปรแกรม Unity & C# โดยเนื้อหาในคอร์ส\nจะแบ่งออกเป็น 10 ส่วนหลักๆ ดังนี้\nจัดการโมเดลและแอนิเมชั่น\nเขียน Script ควบคุมการเคลื่อนที่ , การหมุน , การโจมตีของผู้เล่น\nเขียน Script สำหรับจัดมุมกล้องติดตามตัวละครผู้เล่น (Camera Follow)\nการจัดการ AI ในเกมเพื่อให้สามารถมองหาตำแหน่งและโจมตีผู้เล่นด้วย NavMesh Agent\nเขียน Script สำหรับทำอาวุธเพื่อให้ผู้เล่นใช้โจมตี AI\nเรียนรู้การทำระบบพลังชีวิต (HP) เพื่อใช้เป็นเงื่อนไขในการเล่นเกม\nออกแบบสภาพแวดล้อมในเกมด้วย Terrain และ Skybox\nจัดการเสียงด้วย Audio Source , Audio Clip เพื่อเพิ่มอรรถรสในการเล่นเกม\nการทำระบบจัดเก็บคะแนนสูงสุดในเกม (High Score)\nเรียนรู้การ Export เกมเพื่อใช้สำหรับเล่นบน PC และสร้างไฟล์ Package สำหรับเผยแพร่โปรเจกต์",
      "target_audience": [
        "ผู้ที่สนใจพัฒนาเกม 3 มิติด้วยโปรแกรม Unity"
      ]
    },
    {
      "title": "Unity - C# 2020 | Sıfırdan 2D-3D Oyun Geliştirmeyi Öğrenin",
      "url": "https://www.udemy.com/course/unity-c-sharp-2020-sifirdan-2d-3d-oyun-gelistirmeyi-ogrenin/",
      "bio": "Uygulamalı ve Çözümlü Olarak C# ve Unity'i Öğrenerek Hayalinizdeki Oyunu Üretin",
      "objectives": [
        "C# İle programlamayı sıfırdan öğrenin",
        "Unity Oyun motorunu mükemmel bir şekilde kullanın",
        "Oynanabilir 2D - 3D oyunlar yapın",
        "Oyun yaparken bilinmesi gereken teknikleri öğrenin",
        "Mükemmel oyun topluluğumuzun bir parçası olun"
      ],
      "course_content": {},
      "requirements": [
        "Unity oyun motorunu çalıştırabilecek bir bilgisayar ( Mac - Windows )",
        "Öğrenme ve kendini geliştirme isteği"
      ],
      "description": "Oynadığınız oyunların mutfak kısmında yer almak için harika bir fırsat. Artık hayalinizdeki oyunu 2D veya 3D olarak programlayabilir, Playstore,AppStore gibi mağazalarda yayınlayabilir ve gelir elde edebilirsiniz.\n\nSektöre adım atarak, kendini geliştirmek isteyenler için hazırlanmış bir eğitim seti olduğundan sizler bu eğitim setini bitirdikten sonra göreceksiniz ki başladığınız noktadan çok daha ileride, hayallerinizi gerçeğe dökebilir bir seviyeye geleceksiniz.Program gereksinimleri, yükleme ve arayüz bilgilerinin yanı sıra; halihazırda yapılmış, severek oynadığınız oyunların da nasıl yapıldığını öğrenecek, ufkunuzu genişleteceksiniz. Aslında imkansız gibi görünen bu işin, kendinizi geliştirerek ne kadar da kolaylaştığına şahitlik edeceksiniz.\n\nEğlenip, üretmenin yanı sıra bu işten gelir elde etmeye başladığınızda bunu bir meslek haline getirebilir ve hayatınızı bu işten kazanabilirsiniz.\n\nBu kursta 2'şer adet 2D - 3D oyun yapacağız. Her biri kolay ve orta seviyelerinde olacak. Sizlere kendi türlerinde oyunların nasıl yapıldığı hakkında bilgi verecek ve öncesinde öğrendiklerinizi uygulayarak pekiştirmenizi sağlayacak. Kendinizi geliştirmiş olmanın yanı sıra, elinizde geliştirebileceğiniz oyun projeleri ve istediğiniz projeye sıfırdan başlamaya yetecek kadar bilgi olacak.\n\n\nAyrıca bundan sonra geliştireceğim daha da ileri seviyede kursları hiç zorlanmadan bitirebilecek ve kendinizi çok daha geliştirebileceksiniz.",
      "target_audience": [
        "Bilgisayar kullanmayı bilen ve kendini geliştirmek isteyenler",
        "Kodlama öğrenmek ve kendini geliştirmek isteyenler",
        "Unity gibi harika bir oyun motorunu çok iyi kullanmak isteyenler",
        "Bu işe yeni başlayan ve hiç bilgisi olmayanlar",
        "Yazılım ve oyun bilgisi olup kendini geliştirmek isteyenler",
        "Hayallerindeki oyunu yapmak isteyenler"
      ]
    },
    {
      "title": "Unity3Dゲーム開発入門：Unityインストラクターと共に進める脱出ゲーム作成講座ハンズオンコース【スタジオしまづ】",
      "url": "https://www.udemy.com/course/unity3descape/",
      "bio": "人気ジャンルである脱出ゲーム開発を通して、Unityで３Dゲームの作り方を学ぶことができる入門講座。C#の基礎からデータベースを活用した効率的な開発手法や、アイテムのズーム機能・回転機能・合成機能などが学べる本格的な3D脱出ゲーム作成講座！",
      "objectives": [
        "3D脱出ゲームに必要な、オブジェクトのクリック、アイテムボックスの実装、アイテムの拡大表示と回転が習得できます。",
        "Unity3Dの基礎である、オブジェクトのクリック、アニメーションの方法がハンズオンで学べます。",
        "ゲームを動かすためのC#プログラミングに関する基礎的な文法をイラストと演習問題付きで学習できます。",
        "全てのプロジェクトを一から作ることで総合的なUnityのゲーム開発力が身につきます。"
      ],
      "course_content": {
        "【必修】はじめに": [
          "この講座の進め方"
        ],
        "【選択】Unityの基礎": [
          "はじめに",
          "Unityの画面説明",
          "Unityの操作説明",
          "Unityでゲームを作るには"
        ],
        "【選択】C#の基礎": [
          "はじめに",
          "コンソールとコメントアウト",
          "宣言と代入",
          "変数の種類",
          "変数の演算",
          "変数の演算２",
          "比較演算子",
          "論理演算子",
          "【演習問題の準備】変数の宣言〜演算子",
          "if文",
          "if - else文",
          "else if 文",
          "switch文",
          "while文",
          "for文",
          "breakとContinue",
          "列挙型",
          "【演習問題】if分〜列挙型までをやってください。",
          "配列",
          "List",
          "【演習問題】配列とリストの問題をやってください（リンク先の問題全て）",
          "関数の基礎",
          "関数の返り値",
          "【演習問題】リンク先の問題全て行ってください",
          "クラス",
          "【演習問題】リンク先の問題全て行ってください",
          "まとめ"
        ],
        "（必須）最新バージョンでの修正": [
          "Text"
        ],
        "【必修テクニック】アイテムボックスとデータベース": [
          "はじめに",
          "3Dオブジェクトのクリック判定",
          "アイテムの実装",
          "アイテムBoxの実装",
          "アイテムSlotの実装",
          "アイテムの左につめる実装",
          "アイテムデータベースの実装"
        ],
        "【必修テクニック】アイテム選択と設置": [
          "アイテム選択時のパネルの作成",
          "アイテム選択時のUI変更",
          "アイテム選択時のUI変更（１つだけ選択）",
          "アイテムの選択",
          "アイテムの使用 #1",
          "アイテム使用 #2 汎用性向上"
        ],
        "【必修テクニック】アイテムのズームと回転": [
          "アイテムズームの実装 #1 ボタンの設置",
          "アイテムズームの実装 #2 パネルの表示",
          "アイテムズームの実装 #3 選択時にパネルを表示",
          "アイテムズームの実装 #4 バグの修正",
          "アイテムズームの実装 #5 ズームオブジェクトの作成",
          "アイテムズームの実装 #6 データベースから生成",
          "アイテムズームの実装 #7 アイテムの多様化",
          "アイテム回転の実装 #1 簡易実装",
          "アイテム回転の実装 #2",
          "アイテム回転の実装 #3 バグの修正",
          "アイテムの設置",
          "アイテムの設置：選択アイテム"
        ],
        "【必修テクニック】パスワードギミックの実装": [
          "オブジェクトの作成",
          "クリックによる変更",
          "正解判定",
          "パスワードギミックの拡張",
          "宝箱のOpen",
          "ギミッククリア時の宝箱のOpen"
        ],
        "【必修テクニック】カメラの実装": [
          "カメラの設置",
          "カメラの回転",
          "ズームカメラの実装",
          "戻るパネルの実装",
          "まとめ"
        ],
        "【本編】ギミック設計とモデルの設置": [
          "はじめに",
          "フローチャートの作成",
          "モデルのインポート",
          "床と壁の設置",
          "家具の設置"
        ]
      },
      "requirements": [
        "Unityをインストールしている",
        "タイピングができる",
        "検索サイトでUnityを調べたことがある"
      ],
      "description": "【はじめに】\nみなさんこんにちは！スタジオしまづの嶋津です。今回は、3D脱出ゲームの講座を紹介します！\n3D脱出ゲームといえば、「The Room」など 企業が開発しているイメージが強いと思います。この講座ではそのような一昔前には個人で作れると思われていなかった3Dゲームを１から作れる内容となっています。\n\n\n特に、作業を効率的に実装する工夫として「データベースの作成」にポイントを当てています。ゲーム内のギミックが増えたとしても作業が２倍３倍に膨れ上がらない方法を習得できます。\nまた本講座はC#やUnityの基礎部分から解説しているので、3D脱出ゲーム開発だけではなく、VRやARにつながるUnityを使った3Dゲーム開発全般に応用できる内容になっています。\n\n\n※３Dモデルの作成については解説していません：教材ではフリー素材を使っています\n\n\n【講座内容】\n初心者の方でも挫折しないで進められるように、いきなりゲームを作り始めるのではなく\n・Unityの基礎（画面説明や操作説明）\n・C＃の基礎（イラスト解説と演習問題も用意）\n・脱出ゲーム開発でよく使用されるテクニック集\nについて学んでいくことで基礎力をつけ、その後本編として３D脱出ゲームの制作に取り掛かるという構成になっています。\nテクニック集と本編では、主に以下について解説しています（詳しくは上のコース内容をご覧ください）。\nアイテムボックスの作成と左詰めでアイテムを入れる方法\nデータベースの作り方\nボックス内のアイテムを選択して使う方法\nアイテムを拡大表示＆回転させる方法\nアイテムを設置する方法\nパスワードギミックの作り方\nギミッククリア時にイベント（宝箱を開ける等）を行う方法\n３Dでのカメラ移動とズームさせる方法\nドアを開けるなどのアニメーション作成方法\nアイテムの合成方法\n\n\n【講座の特徴と挫折しないための工夫】\n正直なところ、3D脱出ゲーム開発は難易度が高いです。そのせいなのか、1から全て解説している書籍やブログを私はみたことがありません。\n実際、本講座も私の2D脱出ゲーム講座より難しいです。\nただし、それをわかっているからこそ、その分解説やサポートに力を入れており、初めてUnityを始める方でもついて来られるように、以下の工夫と対策があります。\n・全てのプロジェクトとコードを1から作成しているので、動画の通りに進めれば必ずゲームが完成する\n・動画では追いつきづらい人のために、補助教材で作業の流れとソースコードを用意している（加藤先生が頑張ってくれました！）\n・困った時のQ&A対応がある(これはUdemy共通)\n\n\n【まとめ】\n３DのゲームもUnityを使うことで作れるようになりました。しかしUnityには便利な機能が多数用意されていることから、一人でゲームを作るとなると難しく感じたり、操作に迷う部分なども出てくると思います。\nそういったつまずきがちな部分でなるべく迷わず３Dゲーム開発へ集中するために、本講座をご活用していただければ幸いです。\nこの講座を3D制作のファーストステップとして活用し、自分のオリジナルゲームを世界に向けて発信しましょう！\n\n\n【注意：以下の内容は含まれておりません】\n・Unityのインストール\n・セーブ機能\n・BGMやSEの設定方法\n・ビルドしてからリリースするまでの手順\n\n\nこれらの学習については以下の講座がおすすめです。\nUnity2D脱出ゲーム開発入門：Unityインストラクターが基礎から教えるセーブ機能マスターコース\nUnity ゲーム開発：インディーゲームクリエイターが教える C#の基礎からゲームリリースまで\n(特に、2Dの脱出ゲームの講座を修了していると理解がスムーズになると思います。)",
      "target_audience": [
        "３D脱出ゲームや３Dのゲームを作成したい人",
        "Unityのチュートリアルを勉強したけど挫折してしまった人",
        "Unityを始めたはいいけど何から手をつけていいのかわからない人"
      ]
    },
    {
      "title": "Criando cenários com Unity e Blender",
      "url": "https://www.udemy.com/course/criando-cenarios-com-unity-e-blender/",
      "bio": "Crie assets para seus jogos utilizando o Blender 3D e monte o seu cenário dentro da Unity.",
      "objectives": [
        "Construir cenários modulares",
        "Texturizar modelos 3D",
        "Exportar modelos do Blende para a Unity",
        "Ajustar as texturas de materiais na Unity",
        "Resolver problemas com modelos durante a construção do cenário"
      ],
      "course_content": {
        "Introdução ao curso": [
          "Introdução ao curso",
          "Grupos de estudos",
          "Como solicitar suporte/ajuda",
          "Plano de estudo",
          "Um pouco mais sobre o Blender"
        ],
        "Conhecendo o Blender 2.79": [
          "Baixando e instalando o Blender 3D",
          "Download materiais",
          "Conhecendo a interface do Blender",
          "Atalhos do Blender",
          "Modelagem a partir de um cubo",
          "Modelagem poligonal",
          "Unidades de medidas",
          "Salvando e abrindo projetos",
          "Exportando e importando modelos 3D",
          "Aplicando texturas em materiais",
          "Fazendo o BAKE de materiais",
          "Abrindo e exportando a malha UV",
          "Modificadores"
        ],
        "Atualização - Unity 2020": [
          "Sobre a atualização",
          "Download recursos",
          "Introdução e instalação da Unity com Unity HUB",
          "Janelas, Abas e Atalhos",
          "Skybox e Lighting",
          "Pintando terreno e buraco para cavernas",
          "Criando e aplicando árvores + inserindo texturas",
          "Modelos, Materiais e Texturas",
          "Unity Package Manager + Post Processing"
        ],
        "Conhecendo a Unity": [
          "O que é a Unity 3D",
          "Conhecendo o espaço de trabalho",
          "Movimentar, Rotacionar e Escalonar objetos",
          "Inserindo objetos da Unity",
          "Importando recursos",
          "Inserindo componentes em GameObjects",
          "Visualizações do 3D View"
        ],
        "Importando e exportando pacotes da Unity": [
          "Exportando pacote",
          "Importando pacote",
          "Importando pacote da Unity Asset Store",
          "Sites para download de assets"
        ],
        "Materiais na Unity": [
          "Download materiais",
          "Ajustando materiais na Unity > 2017.3.1",
          "Criando e associando material em Gameobjects",
          "Criando normalmap",
          "Criando mapa de emissão",
          "Criando mapa de metal (metallic map)",
          "Material transparente",
          "Material de vidro (Glass FX Shader)"
        ],
        "Criando uma estação de metrô no Blender 2.8": [
          "Introdução ao módulo",
          "Resultado final",
          "Download Recursos",
          "Explicando como o projeto será criado",
          "Apresentando o Blender 2.8",
          "Criando a base do chão",
          "Modelando a escada",
          "Modelando a Base do chão 2",
          "Modelando as paredes",
          "Modelando o Arco",
          "Modelando o suporte do telhado",
          "Modelando um banco",
          "Modelando a parede entre as escadas",
          "Modelando as lâmpadas",
          "Criando materiais para os modelos",
          "Ajustando as normais",
          "Importando os materiais",
          "Ajustando os materiais",
          "Texturização 01",
          "Texturização 02",
          "Montando a estação",
          "Resoluções gerais",
          "Modelando o corrimão",
          "Modelando a escada",
          "Duplicando as escadas",
          "Animando a escada",
          "Animando todos os degraus",
          "Importando e ajustando a escada",
          "Finalizando os ajustes",
          "Considerações finais"
        ],
        "Criando cenário de trem": [
          "Prévia do resultado final",
          "Separando os materiais",
          "Modelando os trilhos",
          "Texturizando e exportando os trilhos",
          "Modelando o túnel",
          "Modelando a ponte",
          "Adicionando os trilhos no terreno",
          "Inserindo a ponte e túnel",
          "Criando Árvores",
          "Aplicando efeitos e finalizando o cenário",
          "Download materiais"
        ],
        "Criando cenário de porto": [
          "Prévia do resultado final",
          "Separando os materiais",
          "Modelando a Plataforma",
          "Modelando a Base da Plataforma",
          "Modelando Container 01",
          "Ajustando o Container 2",
          "Ajustando Container 03",
          "Modelando um Container HighPoly",
          "Modelando o Guindaste",
          "Montando a Plataforma na Unity",
          "Montando as bases laterais",
          "Montando os Guindastes",
          "Montando os Containers",
          "Ajustando os gráficos",
          "Considerações finais",
          "Download materiais",
          "Cenário final inundado"
        ],
        "Criando cenário de castelo": [
          "Prévia do resultado final",
          "Separando os materiais",
          "Modelando a ponte",
          "Modelando as barreiras",
          "Modelando as Barreiras parte 2",
          "Texturizando as Barreiras",
          "Modelando a Porta",
          "Modelando o castelo",
          "Modelando a porta e janela",
          "Modelando a Tocha",
          "Modelando uma rocha",
          "Montando o castelo",
          "Inserindo portas e janelas",
          "Ajustando as barreiras",
          "Montando as barreiras",
          "Ajustando o terreno",
          "Pintando o terreno",
          "Montando a ponte",
          "Ajustando o cenário",
          "Ajustando o cenário parte 2",
          "Finalizando o projeto",
          "Download materiais"
        ]
      },
      "requirements": [
        "Conhecimento básico em computação"
      ],
      "description": "Este curso foi desenvolvido para aqueles que gostam de modelagem 3D e construção de cenários. Aqui criamos assets usando o Blender 3D e posteriormente montamos o cenário dentro da Unity.\nUm dos tópicos estudados no curso, é a construção de cenários modulares, ou seja, a forma como o asset é modelado, pode ajudar no ganho de desempenho e também de um cenário bastante flexível. Os cenários modulares permitem que você ajuste o tamanho e altura do seu modelo sem perda de qualidade.\nAntes da construção do cenário, o curso aborda alguns tópicos essenciais para o entendimento do aluno, como uma breve introdução ao Blender, e também alguns módulos de Unity 3D, assim o aluno pode relembrar aquilo que já estudou antes de começar a criar os cenários.\nBlender 3D\nA ferramenta utilizada para a modelagem é o Blender 3D, que é Open Source e totalmente gratuito. Com essa ferramenta modelamos todos os assets dos jogos, abrimos a malha UV, texturizamos, exportamos os arquivos .FBX, entre outros.\nUnity 3D\nPara a construção do cenário é utilizado a Game Engine Unity, que é gratuita até um certo lucro Anual. O conteúdo do curso se aplica as mais recentes versões da Unity, por conta dos Shaders e ferramentas nativas. Dentro da Unity aplicamos iluminação, criamos e estruturamos os cenários, criamos o baked da iluminação, customizamos o cenário, criamos materiais, entre muitos outros tópicos.",
      "target_audience": [
        "Desenvolvedores de jogos",
        "Iniciantes em computação gráfica",
        "Qualquer pessoa que ama jogos"
      ]
    },
    {
      "title": "Tworzenie gier w Unity 2 - Projekty, Git, Android, PlayStore",
      "url": "https://www.udemy.com/course/unity-gamedev/",
      "bio": "Tworzenie gier i aplikacji w silniku Unity",
      "objectives": [
        "Programowania w C#",
        "Tworzenia gier i aplikacji",
        "Obsługi Unity",
        "Podstaw programów Blender, Inkscape, Audacity",
        "Podstaw zarządzania kontrolą wersji GIT w programie Sourcetree"
      ],
      "course_content": {
        "Wstęp": [
          "O kursie",
          "Discord i Newsletter",
          "Instalacja Unity",
          "Wprowadzenie do Unity",
          "Aktualizacja Unity"
        ],
        "Szybkie projekty UI": [
          "Kliknij, by zwiększyć wartość - UI",
          "Losowanie osoby z tablicy",
          "Tabliczka mnożenia",
          "Symulator kostki do gry",
          "Panel zarządzania meczem koszykówki",
          "Likwidacja nazistów",
          "Katalog broni"
        ],
        "Projekt - Gra 2D Obrona przed zombie": [
          "Omówienie projektu Obrona przed zombie",
          "Poruszanie za pomocą komponentu Transform",
          "Tworzenie Prefab oraz pobieranie pozycji kursora myszy",
          "Strzelanie w kierunku kursora myszy",
          "Poruszanie graczem WSAD",
          "Ograniczenie poruszania Math.Clamp",
          "Dodanie grafik do projektu, ruch zombiaka",
          "Wykrywanie kolizji",
          "Losowe pozycje do tworzenia zombiaków",
          "Tworzenie menu UI, przełączanie scen",
          "Dodaj funkcjonalność dodawania i wyświetlania punktów za każdego ubitego zombie",
          "Dodawanie punktów",
          "Dźwięki w grze",
          "Finalizowanie projektu"
        ],
        "Gra Platformowa 2D - Ozzzie": [
          "Omówienie projektu Ozzzie",
          "Kontrolowanie gracza za pomocą Rigidbody2D",
          "Strzelanie",
          "Zadawanie obrażeń",
          "Zwiększanie siły pocisku",
          "Zwiększanie rozmiaru pocisku",
          "Pobieranie punktów magii",
          "Odnawianie punktów magii",
          "Elementy obrony i hp",
          "Atak przeciwnika - strzelanie",
          "Ruch kamery",
          "Budowanie poziomu",
          "Menu",
          "Wzmocnienie tarczy gracza",
          "Zwiększenie masy i prędkości pocisku",
          "Ograniczenie skoku",
          "Informacje dotycząca tworzenia grafik",
          "Tworzenie grafiki maga w Inkscape",
          "Poprawa postaci Ozzziego",
          "Animacja skoku i strzału",
          "Tworzenie grafiki pocisku w Inkscape",
          "Tworzenie grafiki pocisku ślimaka",
          "Tworzenie grafiki poziomu",
          "Menu główne - elementy wizualne",
          "Gameover menu - elementy wizualne",
          "Reprezentacja statystyk - slidery",
          "Slidery ataku i obrony",
          "Projektowanie diablika",
          "Tworzenie przeciwnika patrolującego",
          "Przycisk do menu głównego",
          "Code Review",
          "Budowanie gry na PC",
          "Budowanie gry WebGL i przeniesienie jej na serwer www",
          "Likwidacja buga"
        ],
        "Przygotowanie systemu kontroli wersji GIT": [
          "Instalacja programu do kontroli wersji GIT - Sourcetree"
        ],
        "Spadające cyferki": [
          "Omówienie projektu Spadające Cyferki",
          "Utworzenie projektu z git",
          "Dodanie elementów UI",
          "Tworzenie obiektu pojedyńczej cyferki",
          "Dodanie funkcji opadania",
          "Tworzenie cyferek w losowym miejscu",
          "Aktualizacja punktów",
          "Tworzenie licznika czasu",
          "Podstawowa logika gry",
          "Menu",
          "Zmiana platformy i przeniesienie gry na urządzenie mobilne",
          "Efekt znikania cyferki",
          "Animacja Splasha",
          "Tworzenie cyferek w Inkscape",
          "Dodanie grafik cyferek do projektu",
          "Zmiana kolorów po kliknięciu",
          "Dodanie grafiki do UI Gry",
          "Zmiana koloru licznika czasu",
          "Poprawa wizualna menu",
          "Wybór liczby parzystej lub nieparzystej",
          "Dźwięki w grze",
          "Drobne zmiany przy elementach związanych z parzystością",
          "Ostatnie zmiany",
          "Zmiana ustawień do wgrania gry na Play Store",
          "Najnowsza wersja SDK",
          "Dodanie projektu na Play Store"
        ],
        "Nauka poza projektami": [
          "GIT - klonowanie projektu do nowego repozytorium",
          "GIT - Tworzenie nowego repozytorium do nauki",
          "Tworzenie systemu Drag and Drop",
          "Usprawnienie systemu Drag and Drop with snapping",
          "Scriptable objects"
        ],
        "Projekt Edukacyjny - Klasa 2": [
          "Omówienie projektu - Klasa 2",
          "Utworzenie projektu i repozytorium git",
          "Dodanie klasy Zadanie z Scriptable Object",
          "Tworzenie UI i przypisanie wartości z obiektu Zadanie",
          "Sprawdzanie odpowiedzi",
          "Dodanie punktacji i przełączanie zadań",
          "Wyświetlania numeru zadania",
          "Dostosowanie ilości przycisków do ilości odpowiedzi",
          "Losowe przypisanie wartości do przycisków",
          "Wstawianie odpowiedzi użytkownika do treści zadania",
          "Zmiana koloru wciśniętego przycisku",
          "Przypisanie zadań do lekcji",
          "Menu główne i przełączanie lekcji",
          "Poprawione naliczanie punktów",
          "Zapisywanie punktów za pomocą PlayerPrefs",
          "Panel ukończenia lekcji",
          "Dynamiczne dodawanie przycisków wyboru lekcji",
          "Ulepszone dodawanie punktów, bez powtórzeń",
          "Blokowanie kolejnych lekcji",
          "Zapisywanie numeru zadania aktualnej lekcji",
          "Wyświetlanie obrazu w zadaniu",
          "Poprawa wizualna UI",
          "Dźwięki poprawnej odpowiedzi i skończenia lekcji",
          "Panel z ustawieniami",
          "Pasek postępu",
          "Sprawdzenie pierwszej prawidłowej odpowiedzi",
          "Dodanie opcji wpisywania odpowiedzi",
          "Podsumowanie lekcji",
          "Zbudowanie gry i przeniesienie na telefon",
          "Zbudowanie gry na webgl i dodanie jej do strony www",
          "Wpisywanie odpowiedzi użytkownika do treści zadania",
          "Korekta buga ze zdjęciem",
          "Dodanie podpowiedzi",
          "Unity Ads 1",
          "Unity Ads 2",
          "Dodanie aplikacji na Play Store"
        ]
      },
      "requirements": [
        "Znajomość podstaw programowania lub chęci nauki",
        "Komputer z dostępem do internetu"
      ],
      "description": "Kurs Unity GameDev przeznaczony jest dla osób chcących tworzyć gry i aplikacje w silniku Unity.\nZaczniemy od prostych aplikacji, skupionych głównie na elementach UI stopniowo przechodząc do kolejnych, bardziej rozbudowanych projektów.\nWiększość lekcji omawianych jest na konkretnych przykładach w trakcie tworzenia projektów.\nKurs ten przeznaczony jest dla osób, które mają już podstawową wiedzę z zakresu programowania w C#. Warto jednak zaznaczyć, że w projektach używamy naprawdę podstawowych elementów programowania więc nawet osoby początkujące powinny sobie z nimi poradzić.\nDla osób, które dopiero zaczynają przygodę z programowaniem proponujemy nasz kurs Podstawy Programowania w C# na Udemy lub darmowy 2.5 godzinny kurs programowania na kanale youtube.",
      "target_audience": [
        "Osoby, które chcą zacząć lub rozwijać przygodę z programowaniem i tworzeniem gier/aplikacji w silniku Unity"
      ]
    },
    {
      "title": "Unity C# | 2D Oyun Geliştirme Eğitimi | 2025",
      "url": "https://www.udemy.com/course/unity2d-oyun-gelistirme-egitimi/",
      "bio": "Unity ve C# öğrenmeye başlayarak , kolaydan zora 6 adet 2D oyun geliştirmeyi adım adım öğrenin! | 2D Oyun Geliştirme",
      "objectives": [
        "Gerçek projeler üzerinden oyun geliştirmek",
        "Unity'de oyun geliştirirken aktif bir şekilde C# kullanmak",
        "Oyun geliştirmeye giriş yapmak",
        "Hazır kaynakları oyun sahnesinde kullanmak",
        "Oyun geliştirirken sorun çözme kabiliyetini arttırmak",
        "2D oyun geliştirmenin mantığını ve işleyişini kavramak"
      ],
      "course_content": {
        "Giriş": [
          "Oyun İçi Bazı Görüntüler"
        ],
        "Unity Kurulumu": [
          "Unity Kurulumu"
        ],
        "Unity Temelleri ve Arayüz": [
          "Unity'de Proje Oluşturmak",
          "Project, Inspector ve Hierarchy Panelleri",
          "Scene, Game ve Console Panelleri",
          "Araç Çubuğu,Pozisyon, Eğim ve Boyut (Toolbar,Position, Rotation, Scale)",
          "Texture ve Material",
          "Prefab",
          "Component (Bileşen) Nedir?",
          "Rigidbody2D",
          "Collider",
          "Asset Store(Varlık Mağazası) Kullanımı"
        ],
        "C# Programlama": [
          "Kod Dosyası Oluşturmak Ve Yorum Satırları",
          "Değişkenler Ve Veri Tipleri 1 (int, float)",
          "Değişkenler Ve Veri Tipleri 2 (char, boolean, string)",
          "Değişken İsimlendirme Kuralları (camel case & snake case)",
          "Debug.Log Fonksiyonu Ve Console Kullanımı",
          "Metotlar 1 - Hazır Metotlar (Start, Update)",
          "Metotlar 2 - Hazır Metotlar (Awake, FixedUpdate, LateUpdate)",
          "Metot Oluşturmak (void)",
          "Parametre Alan Metotlar",
          "Global/Local Değişken",
          "Erişim Belirleyicileri (Access Modifiers)",
          "Random.Range Fonksiyonu Ve Rastgele Değerler",
          "Operatörler 1 | Atama Operatörleri",
          "Operatörler 2 | Aritmetik Operatörler",
          "Operatörler 3 | Mantıksal Operatörler",
          "Operatörler 4 | Karşılaştırma Operatörleri",
          "Karar Yapıları (if, if-else, else if)",
          "Switch Case Yapısı",
          "Input 1 | Klavye Girdileri (getkey, getkeydown, getkeyup)",
          "Input 2 | Mouse Girdileri (getmousebuttondown, getmousebutton, getmousebuttonup)",
          "Input 3 | Eksenlerle Çalışmak (getaxis, getaxisraw)",
          "Transform Translate ve Axis Kullanarak Obje Hareketlendirme",
          "Time.deltaTime Kullanımı Ve Amacı",
          "Transform Rotate Kullanımı | Objeler Üzerinde Açısal İşlemler",
          "Input 4 | AnyKey ve AnyKeyDown",
          "Destroy Fonksiyonu | Obje Silme",
          "SetActive Kullanımı | Objeleri Aktif Ve Pasif Hale Getirmek",
          "Time.timeScale Kullanımı | Zaman Yönetimi",
          "Döngüler 1 | For Döngüsü",
          "Döngüler 2 | While Döngüsü",
          "Diziler 1 | Dizi Oluşturmak Ve Eleman Atamaları",
          "Diziler 2 | Dizi Fonksiyonları Ve Dizi İşlemleri",
          "Mathf.Clamp Kullanımı (Kelepçe)",
          "Mathf.Abs (Mutlak Değer)",
          "Mathf.Floor & Mathf.Ceil & Mathf.Round (Taban,Tavan ve Yuvarlama)",
          "Instantiate Komutu (Obje Oluşturma ve Klonlama)",
          "Coroutine & NewWaitForSeconds",
          "Coroutine 2 | StopAllCoroutines Kullanımı",
          "Enum Kullanımı"
        ],
        "Kaynaklar (Asset)": [
          "C# Programlama Kaynakları",
          "Color Changer (Renk Değiştirme) Oyunu Dosyaları",
          "Bouncing Dot Dosyaları",
          "Color Switch Dosyaları",
          "Doodle Jump Dosyaları",
          "Brick (Block) Breaker Dosyaları"
        ],
        "Color Changing (Renk Değiştirme) Oyunu": [
          "Color Changing Proje Tanıtımı",
          "Proje Ayarları ve Objelerin Oluşturulması",
          "Rastgele Renk İşlemleri (Switch case ve Random.Range)",
          "Klavye Girdisi ve Rastgele Renk Ataması (Input)",
          "Oyunun Kullanıcı Tarafından Kazanılması",
          "Array (Dizi) Kullanımı",
          "Ses Dosyası Eklemek",
          "Flappy Bird"
        ],
        "Bouncing Dot": [
          "Bouncing Dot Proje Tanıtımı",
          "Altıgenin Oluşturulması ve Renklendirilmesi",
          "Altıgenin Dönüş İşlemleri",
          "Top Oluşturmak ve Fiziksel Hareket",
          "Topa Rastgele Renk Vermek",
          "Oyunu Kaybetmek",
          "Skor Eklemek",
          "Rekor (Highscore) Oluşturmak",
          "Rekor(Highscore) Kaydetmek ve Çağırmak",
          "Bekleme Ekranı Oluşturmak",
          "Animasyonlu Yazı Oluşturmak",
          "Ses Eklemek",
          "Hata Giderme ve Düzeltme"
        ],
        "Color Switch": [
          "Proje Ayarları ve Gerekli Dosyaların İmport Edilmesi",
          "Çember Oluşturmak ve Sprite Editor Kullanımı",
          "Çemberi Döndürmek ve Center On Children İşlemi",
          "Top Oluşturmak ve Fiziksel Bileşenler",
          "Objeyi Hareketlendirmek - Velocity Kullanımı",
          "Rastgele Renk İşlemleri - Array Kullanımı",
          "Obje Etkileşimleri ve Çarpışmalar - OnTrigger",
          "Oyunu Kaybetmek ve Yeniden Başlatmak - Restart Level",
          "Oyunun Başlangıç Ayarları ve Küçük Güncellemeler",
          "Renk Değiştirici ve Bileşenleri",
          "Yıldız Oluşturmak ve Puan Toplamak",
          "Skoru Gösteren UI Nesnesi - Text Oluşturmak",
          "Kamera Takip Sistemi",
          "Bölüm Sonu ve Galibiyet",
          "Prefab Sistemi Oluşturmak ve Yeni Objeler Eklemek",
          "Otomatik Bölüm Oluşturucu Yazmak - Level Generator B1",
          "Otomatik Bölüm Oluşturucu Yazmak - Level Generator B2",
          "Obje Çeşitliliği ve Yeni Objeler",
          "Bölümler Arası Geçişler - Next Level"
        ],
        "Doodle Jump": [
          "Proje Ayarları ve Import İşlemleri",
          "Platform Oluşturmak ve Fiziksel Bileşenler",
          "Karakter Oluşturmak ve Bileşenleri Düzenlemek",
          "Karakter ve Platform Çarpışmaları - OnCollision",
          "2D Effector Kullanımı - Tek Yönlü Çarpışma",
          "Relative Velocity Kullanımı ve Çarpışmaları Güncellemek",
          "Karakter Kontrolü",
          "Kamera Takibi ve Vector3.Lerp",
          "Sonsuz Oyun (Infinite Level)"
        ],
        "Brick Breaker": [
          "Player Oluşturmak ve Hareket Ettirmek",
          "Top ve Fiziksel Özellikler",
          "Duvarlar ve Topla Etkileşimleri",
          "Topu Kaçırmak ve Oyunu Yeniden Başlatmak",
          "Blok Oluşturmak ve Temas",
          "Top Efekti (Trail Renderer)",
          "Yeni Blok ve Çatlama Efekti",
          "Oyunu Kazanmak ve İstatistikleri Yazdırmak",
          "Oyunu Kaybetme, Yeniden Başlatma ve İstatistik",
          "Top ve Player'a Güncelleme",
          "Blok Sesi ve Arka Plan Müziği"
        ]
      },
      "requirements": [
        "Öğrenme Arzusu"
      ],
      "description": "Unity Oyun Motoru ve 2D oyun geliştirmeye ilginiz var ve bunun için kaynak arıyorsanız bu kurs sizin için hazırlandı!\nBu kurs, Unity ve C# kullanarak 2D oyun geliştirmenin temellerini öğrenmek isteyenler için bir başlangıç noktasıdır. Eğer oyun geliştirmeye yeni başlayan biriyseniz veya mevcut becerilerinizi geliştirmek istiyorsanız, bu kurs size temel bilgileri sunacak ve oyun geliştirme yolculuğunuzda size rehberlik edecektir.\nBu eğitimde temel bir C# eğitimden başlayarak giderek zorlaşan ve daha detaylı bir hale gelen birbirinden farklı projeler geliştireceğiz. Her bölümde farklı ve yeni bilgiler öğrenip bunları daha sonraki bölümlerde kullanacağız.\nKurs boyunca, öğrenciler Unity'nin güçlü araçlarını kullanarak 2D oyunların nasıl oluşturulduğunu öğrenecekler. Oyun tasarımı, level tasarımı, sprite kullanımı, animasyon oluşturma, fizik motoru, UI tasarımı ve daha birçok konuda detaylı bilgi edinecekler. Ayrıca, C# programlama diliyle temel becerileri kazanacaklar ve bu becerileri oyunlarında nasıl kullanacaklarını öğrenecekler.\nKurs, hazır nesneler, interaktif örnekler, pratik uygulamalar ve projeler aracılığıyla öğrenmeyi destekleyecektir. Projeleri geliştirmeden önce ihtiyacınız olan gerekli kaynaklar ve dosyalar derslerden önce sizlerle paylaşılacaktır.\nKurs süresi boyunca geliştireceğimiz oyunlarda genellikle eğlenceli ve eğitim sırasında bizleri sıkmayacak tarzda oyunları ele almaya çalıştım. Burada öğrendiğimiz bilgileri farklı fikirlere uyarlayarak çok sayıda oyun geliştirebiliriz. Amacım kursun sonuna geldiğinizde öğrendiğiniz tüm bilgileri kendi fikirleriniz ve kendi projeleriniz üzerinde kullanabilir hale gelmenizdir.\nHazırsanız başlayabiliriz.",
      "target_audience": [
        "Unity'e başlayıp oyun geliştirmek isteyenler",
        "Var olan Unity ve C# bilgisini daha da arttırmak isteyenler",
        "2D oyun geliştirmeyi merak edenler",
        "Daha önce oynadıkları oyunların nasıl yapıldığını öğrenmek isteyenler",
        "Unity'i kolaydan zora adım adım öğrenmek isteyenler",
        "Unity'e başlamış olup , 2D oyun geliştirmeye yönelmek isteyenler"
      ]
    },
    {
      "title": "Unity 3D Temel C# ve Doğru Kodlama Eğitimi",
      "url": "https://www.udemy.com/course/unity-3d-temel-c-ve-dogru-kodlama-egitimi/",
      "bio": "Unity 3D oyun geliştirme temel dogru ve ileri seviye kodlama teknikleri, oop ve solid presipleri, design patternler",
      "objectives": [
        "Unity",
        "C#",
        "Unity 3D",
        "CSharp",
        "Temel Kodlama",
        "Doğru Kodlama Teknikleri",
        "Object Oriented Programming Prensipleri",
        "Solid Prensipleri",
        "Design Patterns",
        "GitHub"
      ],
      "course_content": {
        "Temel C# ve Unity Giris": [
          "Bilgilendirme",
          "Unity Hub Nedir Ne Isimize Yarar",
          "Ide Secimi Visual Studio Kurulumu",
          "Unity Temel Bilgiler",
          "Unity 3D Bilgilendirme 2D Farklar",
          "Temel C# Bilgileri ve Yazim Kurallari",
          "Veri Tipleri Ve Anlamlari Part 1",
          "Veri Tipleri Ve Anlamlari Part 2",
          "Veri Tipleri Ve Anlamlari Part 3",
          "Local Degisken vs Global Degisken Part 1",
          "Local Degisken vs Global Degisken Part 2",
          "Operatorler",
          "Karar Yapilari ve If Else Giris",
          "Mantik Operatorleri ve TernaryIf Giris",
          "Switch Case Islemleri",
          "Donguler",
          "Koleksiyon Yapilarimiz ve Kullanimi Part 1",
          "Koleksiyon Yapilarimiz ve Kullanimi Part 2",
          "Deger Tip Referans Tip Arasindaki Farklar",
          "Method Nedir",
          "Deger Donduren vs Deger Dondurmeyen Methodlar",
          "Parametre Nedir Method Overload Nedir",
          "Default Value Parametresi",
          "Params Keyword",
          "Ref ve Out Keyword'leri"
        ],
        "Object Oriented Programming": [
          "Oop Nedir Class Nedir Encapsulation Giris Part 1",
          "Encapsulation Part 2",
          "Encapsulation Part 3",
          "Inheritance Miras Almak",
          "Polymorphism Cok Bicimcilik",
          "Constructor Yapici Methodlar",
          "Abstract Class Soyut Class",
          "Interface",
          "Static Class",
          "Delegate",
          "Event ve UnityEvent",
          "Design Patterns ve Singleton Pattern"
        ],
        "Udemy Proje 1": [
          "Proje ve GitHub Olusturuyoruz",
          "Planlama ve Is Sirasi",
          "Core Dosyalar ve Paketler",
          "Pro Builder ve Player Olusturma",
          "Level Design Part 1",
          "Level Design Part 2",
          "StartFloor ve FinishFloor Olusturuyoruz",
          "Player Components Part 1",
          "Player Components Part 2",
          "Mover Ekliyoruz",
          "Rotator Ekliyoruz",
          "Particle System Ekliyoruz",
          "Fuel Ekliyoruz",
          "WallController Ekliyoruz",
          "StartFloorController Ekliyoruz",
          "FinishFloorController Part 1",
          "FinishFloorController Part 2",
          "GameManager ve Singleton Pattern",
          "GameManager Operasyonlari",
          "Menu Scene ve Canvas Part 1",
          "Menu Scene ve Canvas Part 2",
          "Level Ui GameOver Panel",
          "GameOver Panel Islemi",
          "Win Condition Ui Ekliyoruz",
          "Win Lose Bug Sorununu Cozuyoruz",
          "MoverWall Part 1",
          "MoverWall Part 2",
          "Yeni Levellar Olusturuyoruz",
          "Fuel Ui",
          "SoundManager Part 1",
          "SoundManager Part 2",
          "Pc Build"
        ],
        "Udemy Proje 2": [
          "Proje Olusturuyoruz",
          "Gerekli Assetler ve Paketler",
          "Sahne Tasarimi",
          "PlayerController ve Mover Olusturalim",
          "JumpWith Rigidbody",
          "Horizontal Move Yeni Input Sistemi",
          "Joystick ve Keyboard ile Ayni Anda Kontrol Etme",
          "Keyboard ile Ziplama Islemi",
          "Joystick ile Ziplama ve Kucuk Bug'larin giderilmesi",
          "Movement Bug Cozumu",
          "Floor Script Olusturuyoruz",
          "EnemyScript ve VerticalMover",
          "Enemy Kendi Kendisini Yok Etme",
          "EnemySpawner GameObject Olusturuyoruz",
          "EnemySpawner Script Olusturuyoruz",
          "GameManager ve Oyunu Durdurma",
          "Menu Scene",
          "Sahne Gecisleri",
          "TimeCounter Olusturuyoruz",
          "GameCanvas Script Olusturuyoruz",
          "EnemyManager ve Object Pool Pattern",
          "Kodlarimizi Somut Yapidan Soyuta Geciriyoruz",
          "Degistirilen Kodlari Duzenleyip Test Edelim",
          "Yeni Dusmanlar Olusturuyoruz",
          "Object Pool Pattern Guncelliyoruz Part 1",
          "Object Pool Pattern Guncelliyoruz Part 2",
          "Object Pool Pattern Guncelliyoruz Part 3",
          "Zorluk Sevisyesi ve ScriptableObject Part 1",
          "Zorluk Sevisyesi ve ScriptableObject Part 2",
          "Zorluk Sevisyesi ve ScriptableObject Part 3",
          "Zorluk Sevisyesi ve ScriptableObject Part 4",
          "Zorluk Sevisyesi ve ScriptableObject Part 5",
          "Model ve Kosu Animasyon Ekliyoruz",
          "Pc Build",
          "Mobile Entegrasyon",
          "Mobile Build"
        ],
        "Udemy Proje 3": [
          "Oyun Kurulumu",
          "GitHub Boyut Sorunu Part 1",
          "GitHub Boyut Sorunu Part 2",
          "Robot Model ve Sahne Duzenlemeleri",
          "New Input System Veri Alma",
          "Player Movement Script",
          "Rifle Idle Animation",
          "Rifle Walk Run Animations",
          "Kod ile Animasyon Gecislerini Yapalim",
          "Third Person Kamera Ekliyoruz",
          "Rotation Islemleri Mouse ile",
          "Y Rotator Bug Giderildi",
          "Weapon Model Ekliyoruz",
          "Weapon Script Ekliyoruz",
          "Gravity Script Olusturuyoruz",
          "Oyun Ui Tasarimini Olusturuyoruz",
          "Enemy Model ve Navigation Olusturuyoruz",
          "Enemy Hareket Islemleri",
          "Oyun Alanini Belirliyoruz",
          "Enemy Hareket Animasyonlari",
          "Health ve ScriptableObjects",
          "Player Saldiri Islemi",
          "Range Attack Olusturuyoruz",
          "Melee Attack Part 1",
          "Melee Attack Part 2",
          "Animator Ezme Islemi",
          "Inventory Part 1",
          "Inventory Part 2",
          "Yeni Animasyon Duzenlemeleri",
          "Attack Animasyon Duzenlemeleri",
          "Rifle Attack Animation",
          "Sword Attack Animation",
          "Enemy Attack Animation",
          "Enemy Attack Islemi",
          "Health Ui Darbeden Sonra Guncellenmesi",
          "State Machine Giris ve StateTransformer Olusturuyoruz",
          "State Machine Olusturuyoruz",
          "EnemyController ile State Machine Birlestiriyoruz",
          "Enemy ChaseState",
          "Attack State ve Genel Toparlama",
          "Dead State ve Attack Bug Duzeltiyoruz",
          "Enemy Olum Islemleri ve Animasyon",
          "Player Olum Animasyonu",
          "Enemy Spanwers ve ScriptableObjects Part 1",
          "Enemy Spanwers ve ScriptableObjects Part 2",
          "Enemy Manager Olusturuyoruz Part 1",
          "Enemy Manager Olusturuyoruz Part 2",
          "Menu Scene ve GameManager Part 1",
          "Menu Scene ve GameManager Part 2",
          "Wave Ayarlari",
          "Wave Enemy Sonsuz Dongu",
          "Wave Info Ui Olusturuyoruz",
          "Joystick Ayarlarini Ekliyoruz",
          "Joystick ve Keyboard Ayiriyoruz",
          "Local Multiplayer Ui Ayarlari",
          "Local Multiplayer Kod Ayarlari Part 1",
          "Local Multiplayer Kod Ayarlari Part 2",
          "Local Multiplayer Ui ve Sahne Gecisi Part 1",
          "Local Multiplayer Ui ve Sahne Gecisi Part 2",
          "En Yakin Dusmani Bulma",
          "Ses Ekliyoruz Part 1",
          "Ses Ekliyoruz Part 2",
          "Ses Ekliyoruz Part 3",
          "Ses Ekliyoruz Part 4",
          "Local Multiplayer Bug Gideriyoruz",
          "Karakter Rotation",
          "Bullet Particle Effect Ekleme Part 1",
          "Bullet Particle Effect Ekleme Part 2",
          "Pc Build"
        ],
        "Unity ve GitHub": [
          "GitHub Nedir Ne Isimize Yarar",
          "GitHub ile Unity Uygun Repository Olusturuyoruz",
          "Bilgilendirme Private Repository icin",
          "Unity Projemizi Github'a Verelim",
          "Unity ve GitHub Kullanimi",
          "Asset Store'dan GitHub Eklentisi Kullanimi"
        ]
      },
      "requirements": [
        "Temel düzeyde C# bilgisi, örnek, değisken nedir, Veri tipi nedir gibi bu bilgiler yeterli olacaktır. Bu bilgiler yok ise eğitim içinde bilenler icin tekrar, bilmeyenler için tekrar üstünden geçilecek bilgilerdir."
      ],
      "description": "Arkadaşlar selamlar bu kursu yapma amacım ve 3D olmasının amacı Unity'i tanımak ve C# ile ezbere dayanmayan öğretici ve açıklayıcı bir eğitim çıkarmaktır. Bu eğitimin içinde yaptıgımız bütün işlemleri kaynaklarıyla birlikte açıklayıp, anlatıyorum. Sadece Unity'e odaklanmıyoruz C# dili ve prensiplerine OOP(Object Oriented Programming) nedir, Solid prensipleri nedir ne işimize yarıyor, sürdürülebilir kod nedir, doğru kod yazımı nedir ve nasıl yazılır diye bunları eğitimimin içinde kullanıyor ve açıklıyorum. Design Pattern'leri kullanimi ve ne ise yaradiklarini acikliyorum tabi butun design pattern'lerden bahsedemiyoruz sadece yaygin olarak kullanilan pattern'lerden orngin singleton veya observer veya object pooling gibi pattern'lerden bahsediyoruz ve kullaniyoruz egitim icerisinde. Umarım yaptığım bu eğitimden benim kadar keyif alırsınız...\nArkadaşlar selamlar bu kursu yapma amacım ve 3D olmasının amacı Unity'i tanımak ve C# ile ezbere dayanmayan öğretici ve açıklayıcı bir eğitim çıkarmaktır. Bu eğitimin içinde yaptıgımız bütün işlemleri kaynaklarıyla birlikte açıklayıp, anlatıyorum. Sadece Unity'e odaklanmıyoruz C# dili ve prensiplerine OOP(Object Oriented Programming) nedir, Solid prensipleri nedir ne işimize yarıyor, sürdürülebilir kod nedir, doğru kod yazımı nedir ve nasıl yazılır diye bunları eğitimimin içinde kullanıyor ve açıklıyorum. Design Pattern'leri kullanimi ve ne ise yaradiklarini acikliyorum tabi butun design pattern'lerden bahsedemiyoruz sadece yaygin olarak kullanilan pattern'lerden orngin singleton veya observer veya object pooling gibi pattern'lerden bahsediyoruz ve kullaniyoruz egitim icerisinde. Umarım yaptığım bu eğitimden benim kadar keyif alırsınız...",
      "target_audience": [
        "Unity ile hobi veya profesyonel olarak oyun gelistiricek olan veya kariyerini bu yonde ilerletmek istiyenler icin uygun bir egitimdir."
      ]
    },
    {
      "title": "Oyun Programlamanın Temelleri (HTML 5 ve JS)",
      "url": "https://www.udemy.com/course/oyun-programlamann-temelleri-html-5-ve-js/",
      "bio": "Arkanoid, Yılan ve Mayın Tarlası Oyunları ile Oyun Programlama Mantığını Öğrenelim",
      "objectives": [
        "HTML 5 ve Javascript kullanarak oyun kodlayabilecekler",
        "Arkanoid oyununun algoritma mantığını kavrayabilecekler",
        "Math kütüphanesi içerisinde yer alan floor() ve random() fonksiyonlarını öğrenecekler",
        "setInterval() fonksiyonunun işlevini öğrenecekler",
        "Javascript de nesne ve dizi kullanımını öğrenecekler",
        "PabloJs kütüphanesi ile daire, dikdörtgen çizmesini öğrenecekler",
        "Jquery ile mouse ve klavye erişimini öğrenecekler",
        "Yılan oyununun algoritma mantığını kavrayabilecekler",
        "Mayın Tarlası oyununun algoritma mantığını kavrayabilecekler"
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Platformlar ve Kütüphaneler": [
          "Visual Studio Code Yükleme İşlemleri",
          "PabloJs Yükleme İşlemleri",
          "Jquery ve Bootstrap Yükleme İşlemleri"
        ],
        "Arkanoid Oyunu Geliştirme": [
          "Oyun Alanının Oluşturulması",
          "Koordinat Sistemi",
          "setInterval() Fonksiyonu",
          "Topu Hareket Ettirme",
          "Math.random() ve Math.floor() Fonksiyonları",
          "Oyun Sınırlarıyla Çarpışma",
          "Yayı Oluşturma",
          "mousemove() Fonksiyonu",
          "keydown() Fonksiyonu",
          "Yayı Hareket Ettirme",
          "Yay Sınırlarıyla Çarpışma",
          "Tuğla Oluşturma",
          "Tuğla Sınırlarıyla Çarpışma",
          "Birden Çok Tuğla Oluşturma",
          "Array() Fonksiyonu",
          "Birden Çok Tuğla İle Çarpışma",
          "Oyuna Level Sistemi Ekleme"
        ],
        "Mayın Tarlası Oyunu Geliştirme": [
          "Mayın Tarlası Oyunu Tanıtım",
          "Oyun Alanını Oluşturma",
          "Bombaları Oluşturma",
          "Mayın Tarlasını Oluşturma",
          "Bombaları Yerleştirme",
          "Kutulara Değer Atama",
          "Değerleri Yazma",
          "Kodları Kontrol Etme",
          "Kutulara Tıklama"
        ],
        "Renkli Yılan Oyunu Geliştirme": [
          "Oyun Alanını Hazırlama",
          "Yılanı Oluşturma",
          "Yılanı Renklendirme",
          "Yılanı Hareket Ettirme",
          "Yılanın Yönünü Değiştirme",
          "Yemek Oluşturma",
          "Oyun Alanını Düzenleme",
          "Yılana Yemek Yedirme",
          "Oyun Duvarlarına Çarpma"
        ],
        "Tank Ateşi Oyunu Geliştirme": [
          "Oyun Tanıtım",
          "Oyun Alanını Oluşturma",
          "Yukarı Yönlü Tank Oluşturma",
          "Tankın Diğer Yönlerini Oluşturma",
          "Tankı Hareket Ettirme 1",
          "Tankı Hareket Ettirme 2",
          "Kurşun Oluşturma",
          "Kurşunu Kontrol Etme",
          "Düşman Oluşturma",
          "Düşmanları Hareket Ettirme",
          "Düşmanların Hareket Sınırlarını Belirleme",
          "Düşmanları Vurma işlemi",
          "Düşmanların Tanka Çarpması",
          "Level Sistemini Oluşturma"
        ]
      },
      "requirements": [
        "Temel seviye HTML5 Bilgisi",
        "Temel seviye Javascript Bilgisi",
        "Oyun programlama isteği"
      ],
      "description": "Bu kurs ile oyun programlamanın temellerini öğreneceksiniz. Jquery ve PabloJs kütüphanelerini kullanarak baştan sona bir oyunun nasıl yazılacağını örnek bir proje üzerinde öğreneceksiniz. 2 ay önce Arkanoid,yılan ve mayın tarlası oyunlarının nasıl kodlandığını ingilizce olarak  yayınlamıştım. Sevilen bir içerik oldu ve çok ilgi gördüğü için bir video eğitim kursu olarak Udemy de türkçe olarak yayınlamayı uygun  gördüm. Bu eğitimi alan herkesin temel programlama mantığına hakim olacağına inancım tamdır.",
      "target_audience": [
        "Oyun Programlamanın temellerini öğrenmek isteyen herkes",
        "Arkanoid oyunu geliştirmek isteyenler",
        "PabloJs kütüphanesi ile ekrana çizim yapmak isteyenler",
        "Javascript nesne ve dizi kavramlarını öğrenmek isteyenler",
        "Javascript ile rastgele değerler üretmek isteyenler",
        "Jquery ile klavye ve mouse erişimini öğrenmek isteyenler",
        "Yılan oyunu geliştirmek isteyenler",
        "Mayın Tarlası oyunu geliştirmek isteyenler"
      ]
    },
    {
      "title": "Twórz gry komputerowe 3D w Unity - poziom zaawansowany",
      "url": "https://www.udemy.com/course/unity-gra3d-zaawansowany/",
      "bio": "Poznaj zaawansowane funkcje silnika Unity",
      "objectives": [
        "Kurs przygotuje Cię do pisania własnych gier 3D w Unity"
      ],
      "course_content": {
        "Wprowadzenie do kursu zaawansowanego": [
          "Co będzie, a czego nie będzie w kursie"
        ],
        "Przygotowanie postaci do gry": [
          "Importowanie modelu do gry",
          "Przygotowujemy postać do użycia w grze (podpięcie do riga)",
          "Podpinamy animację - idle",
          "Tworzenie sekwencji animacji (mecanim)",
          "Sterowanie postacią za pomocą klawiszy - naprzód - część I",
          "Sterowanie postacią za pomocą klawiszy - naprzód - część II",
          "Sterowanie postacią za pomocą klawiszy - skręcanie"
        ],
        "Wybór i implementacja kamery w widoku z trzeciej osoby": [
          "O tym, jak ważny jest wybór widoku i na co wpływa",
          "Kamera za głową bohatera - część I (CCTV)",
          "Kamera za głową bohatera - część II (FreeLook Rig)",
          "Kamera z góry - część I (kamera za graczem bez rozglądania)",
          "Kamera z góry - część II"
        ],
        "Przygody i przeszkoday": [
          "Przygotowanie sceny z assetami z Asset Store",
          "Zbieranie przedmiotów przez bohatera",
          "Przygotowanie GUI ekwipunku",
          "Aktywacja ekwipunku po zebraniu",
          "Aktywacja podpowiedzi w aktywnych miejscach",
          "Jeden uniwersalny skrypt dla wszystkich aktywnych miejsc",
          "Aktywacja ekwipunku po naciśnięciu klawisza",
          "Sprawdzenie, czy ekwipunek jest gotowy do użycia"
        ],
        "Efekty wizualne w scenie": [
          "Umieszczanie i dźwięków 3D w scenie",
          "Odpalanie dźwięków zdarzeniowych",
          "Mgła",
          "Flara soczewkowa, blur i rybie oko",
          "Realistyczne niebo"
        ],
        "Optymalizacja": [
          "Wykrywanie przyczyn spadku wydajności - profiler",
          "Redukcja Draw calls/SetPass calls - CPU",
          "Wąskie gardła dla GPU - geometria, pamięć video",
          "Oświetlenie - lightmapy",
          "Publikacja i wielkość pliku (Editor.log)"
        ],
        "Fizyka w Unity": [
          "Różnica pomiędzy grą tradycyjną a ściśle fizyczną",
          "Spadająca kula - ufizycznienie obiektu i grawitacja",
          "Zderzenia obiektów i materiały fizyczne",
          "Tarcie na pochylni",
          "Młyńskie koło",
          "Równoważnia",
          "Przyłożenie siły i momentu do obiektu w grze",
          "Prototyp gry flipper"
        ],
        "Kompilacja gry dla urządzeń mobilnych": [
          "Przygotowujemy środowisko (docs, Android SDK, konfiguracja edytora)",
          "Konfigurujemy tablet dla programisty",
          "Pierwsza kompilacja",
          "Dostosowanie aplikacji do tabletów",
          "Przerobienie obsługi klawiszami na dotykową",
          "Jeden kod niezależnie od platformy"
        ]
      },
      "requirements": [
        "Aby w pęłni skorzystać z kursu, przyda się podstawowa znajmość silnika Unity."
      ],
      "description": "Obierz kurs na... zaawansowany Unity!\nOto zaawansowany kurs jeszcze bardziej zaawansowanego środowiska do tworzenia gier 3D — Unity. Gry komputerowe to prawdziwy fenomen. Dziś trudno znaleźć dom, w którym w nic się nie gra. Jeśli chcesz zostać pełnoprawnym twórcą strzelanek, gier taktycznych lub symulatorów, sięgnij po Unity. Kurs video. Poziom drugi. Tworzenie gier komputerowych 3D. Z tym szkoleniem samodzielnie, od A do Z, zaprojektujesz grę według własnego scenariusza.\nCały świat gra w Twoją grę!\nCo więcej, pracując w Unity, większość czasu spędzisz nie w edytorze kodu, ale w swojej grze. Kurs przedstawia kulisy produkcji gier, nie zaciemniając treści skomplikowanymi terminami informatycznymi. Dzięki metodzie od ogółu do szczegółu tworzenie gier jest taką samą przyjemnością jak granie w nie!\nCo Cię czeka podczas naszego profesjonalnego szkolenia?\nPoznasz program Unity na poziomie ponadpodstawowym.\nNauczysz się importowania modelu postaci do gry.\nSkonfigurujesz postać w Unity oraz dodasz niezbędne animacje.\nZaprogramujesz sterowanie postacią za pomocą klawiszy.\nRozszerzysz swoją znajomość języka C#.\nWypróbujesz kilka sposobów obsługi kamery (dla różnych rodzajów gier).\nOpracujesz przygody bohatera gry na podstawie scenariusza.\nUruchomisz dźwięki w aplikacji.\nDodasz efekty audiowizualne do gry.\nSpróbujesz użycia podstaw symulacji fizycznych w Unity oraz połączeń fizycznych pomiędzy obiektami.\nPrzygotujesz prototyp prostej gry fizycznej.\nSkonfigurujesz środowisko do kompilacji dla urządzeń mobilnych (Android).\nDowiesz się więcej na temat optymalizacji gier.\nA po zakończeniu kursu...\nSamodzielne stworzysz grę 3D dla platformy PC/Mac, a także dla systemu Android.\nProfesjonalne szkolenie Unity. Kurs video. Poziom drugi. Tworzenie gier komputerowych 3D przygotuje Cię do pisania własnych, prostych gier. To także świetny start dla kogoś, kto chce podjąć pracę jako programista gier 3D oraz prezentacji i animacji interaktywnych, zarówno na urządzenia mobilne, jak i stacjonarne. Wraz z naszym ekspertem przygotujesz postać do użycia w grze oraz tchniesz w nią życie i wprawisz ją w ruch. Wybierzesz i zaimplementujesz kamerę tak, by ukazywała obraz z punktu widzenia osoby trzeciej. Wprowadzisz aktywację podpowiedzi w odpowiednich miejscach gry. Dodasz mgłę, wzmocnisz wrażenia dźwiękowe. Co istotne, poznasz różnice pomiędzy grą tradycyjną a ściśle fizyczną. Dowiesz się, w jaki sposób wykorzystać jeden kod, niezależnie od platformy. Czy to nie brzmi fascynująco?\nGranie się opłaca\nUnity. Kurs video. Poziom drugi. Tworzenie gier komputerowych 3D jest oparty na programie Unity Pro w wersji 5. Przyjęta metoda od ogółu do szczegółu pozwoli Ci dość szybko zaprojektować działającą interaktywną aplikację 3D, aby w dalszych krokach uszczegółowić poznane już informacje. W pierwszej części kursu samodzielnie zbudujesz mechanizm sterowania postacią oraz kamerą i nauczysz się tworzyć prosty scenariusz misji dla bohatera. W drugiej części natomiast stworzysz prostą grę fizyczną — prototyp gry typu flipper. Skomplikowany etap portowania gry na urządzenia mobilne z systemem Android został przedstawiony szczegółowo, krok po kroku. Przygotowanie środowiska do kompilacji dla Androida oraz testowanie gier na tablecie również jest objaśnione w sposób zwięzły i zrozumiały.\nTylko dla wtajemniczonych\nPrzygotowaliśmy dla Ciebie informacje, które pozwolą Ci zrozumieć specjalistyczną terminologię, posługiwać się nią — i będą dostępne od ręki. Nie będziesz już musiał wertować opasłych tomów ani przeszukiwać internetowej otchłani. Zajmij się projektowaniem gier, a przy okazji dowiedz się więcej o Mecanim — systemie animacji postaci wbudowanym w edytor Unity. Zapoznaj się także z PhysX, silnikiem fizycznym do gier opracowanym przez firmę Nvidia i zaimplementowanym w Unity. Interaktywna instrukcja Unity. Kurs video. Poziom drugi. Tworzenie gier komputerowych 3D w jednej z czterdziestu pięciu lekcji wyjaśni Ci, dlaczego podczas pracy nad grą powinno się monitorować ilość draw call i jaki wpływ mają one na wydajność gry. Po prostu musisz to wiedzieć! Kurs prowadzony jest na Unity 5 (wersja Pro)\nPoznaj naszego eksperta\nArkadiusz Brzegowy — rocznik 1977. Od dzieciństwa pasjonat komputerów. Pierwsze programy pisał na Atari 65XE w Basicu. Kontakt z grafiką 3D miał pod koniec szkoły średniej, jeszcze na DOS-owej wersji 3D Studio. Karierę w branży gier rozpoczął pod koniec studiów na krakowskiej Akademii Górniczo-Hutniczej przy projekcie Hell-Copter wydanym przez Ubisoft. Projektowanie gier i interaktywnych multimediów kontynuował, pracując w Onet oraz w założonych przez siebie firmach: najpierw w Artystach Nowych Mediów, a później w Feel3D. Jego podstawową działalnością jest projektowanie i programowanie aplikacji 3D dla przemysłu i na rynek rozrywkowy. Tworzył między innymi gry, symulatory przemysłowe, aplikacje z wykorzystaniem hełmów VR i rękawic zanurzeniowych oraz aplikacje rzeczywistości rozszerzonej. Aktualnie prawie wszystkie swoje projekty wykonuje w Unity, od kilku lat jest też resellerem Unity w Polsce — prowadzi doradztwo i szkolenia w zakresie tej technologii. Po godzinach stara się oderwać od komputera, aby czerpać radość z wielu dziedzin życia. Gra na perkusji, ściga się gokartami, piecze domowy chleb i pokazuje dzieciom świat. To wszystko zresztą jest inspiracją do tworzenia gier i aplikacji.\n„Zaczynajcie od małych projektów, ale każdy starajcie się doprowadzić do końca. To ważne. Napotkane problemy rozwiązujcie, zamiast je omijać. Właśnie na tym etapie najszybciej nabywa się doświadczenia”.\nArkadiusz Brzegowy",
      "target_audience": [
        "Ten kurs to świetny start dla kogoś, kto chce podjąć pracę jako programista gier 3D oraz prezentacji i animacji interaktywnych, zarówno na urządzenia mobilne, jak i stacjonarne."
      ]
    },
    {
      "title": "Unity 2D Rpg Oyun Yapımı",
      "url": "https://www.udemy.com/course/unity-2d-rpg-oyun-yapm/",
      "bio": "Inventory - Save - Loot vb... mekanikler",
      "objectives": [
        "Unity ve C# üzerine yoğun ve uygulamalı konular",
        "Inventory /Karakter paneli , Can barı/ Altın Toplamı gibi Canvas Öğeleri",
        "Farklı tipte yapay zekaya sahip düşman Mekanikleri",
        "Basit anlamda save sistemi",
        "Kısacası Bir oyunda olması gereken bir çok öğeyi (müzikler ,pause menusü,ana menü...) öğrenebileceksiniz",
        "2D oyunlar için fiziksel mekanikler"
      ],
      "course_content": {
        "Giriş": [
          "Kurs Tanıtımı",
          "!!!Önemli",
          "Assetler !!!"
        ],
        "Proje Temellerini Oluşturma": [
          "Boş Proje Oluşturma",
          "AssetStore Kullanımı ve Gerekli Assetlerin İndirilmesi",
          "Tile Parçalama ve Oyun Alanı Yapımı",
          "Tile Palette ve Grid İşlemleri",
          "Oyun Alanına Gerekli Eklemeler-1",
          "Oyun Alanına Gerekli Eklemeler -2",
          "Player Ekleme",
          "Player Animasyonu Oluşturma",
          "Karakter Hareket -İlk Kodlar",
          "Karakteri Döndürme",
          "Karakter Sıçrama",
          "Koşma Animasyonu",
          "Sıçrama ve Düşme Animasyonu",
          "Saldırı Animasyonu-1",
          "Saldırı Animasyonu-2",
          "Düşmana Hasar Verme",
          "Düşman Ölüm Efekti",
          "Düşman Hasar Alma Efekti",
          "Düşman Hasar İle İttirilmesi (Knockback)",
          "Player'a Hasar Verme",
          "Can ve Mana Bar Yapımı-1",
          "Can ve Mana Bar Yapımı-2",
          "Kodlar İle Barlar",
          "Düşman Hareketleri",
          "Düşman Zemini ve Duvarı Algılama",
          "Düşman Devriye Gezme Sistemi",
          "Bug Fixing",
          "Health Potion Yapımı",
          "Coin Toplama ve Banka Sistemi",
          "Toplanan Coinlerin Ekrana Yansıtılması",
          "Ninja Yıldızlarının Toplanması",
          "Ninja Yıldızı Fırlatma",
          "Ninja Yıldızları Düzeltmeler",
          "Particle Effect Yapımı",
          "Kamera Ayarları -1",
          "Kamera Ayarları -2",
          "Level ve Experience Sistemi",
          "Level Alma",
          "PlayerStatlarını Değiştirme",
          "Sesler ve Müzikler",
          "Sesler ve Müzikler-2",
          "Sesler ve Müzikler -3",
          "Pause Menu",
          "Pause Menu ve Settings",
          "Main Menu Yapımı",
          "Main Menu-2",
          "Options",
          "Müzik ve Ses Ayarlarını Kaydetme",
          "Müzik ve Ses Ayarlarını Kaydetme -2",
          "Player Level ve Experience Kaydetme",
          "Ninja Yıldızları Kaydetme",
          "Player Canını Kaydetme",
          "Player Canını Kaydetme-2",
          "Save Alanı",
          "Save Odası",
          "Silah Statları",
          "Hasarların Ekranda Gözükmesi",
          "Hasarların Gözükmesi -2",
          "Odalar Arası Kamera Geçişi",
          "Inventory Sistemi-1",
          "Inventory Sistemi-2",
          "Inventory Sistemi -3",
          "Inventory Sistemi-4",
          "Inventory Sistemi-5",
          "Inventory Sistemi-6",
          "Shop Sistemi-1",
          "Shop Sistemi-2",
          "Shop Sistemi-3",
          "Shop Sistemi-4",
          "Shop Sistemi-5",
          "Loot Sistemi-1",
          "Loot Sistemi-73",
          "Inventory Save -1",
          "Inventory Save -2",
          "Inventory Save -3",
          "Inventory Save Bug Fixing",
          "Eşyaları Giyme",
          "Eşyaları Giyme-2",
          "Karakter Paneli Oluşturma",
          "Karakter Paneli Oluşturma -2",
          "Bug Fixing Ve Yeni Level",
          "Level-2",
          "level-2 Devam",
          "Bölümleri Kaydetme",
          "Equip Itemın Karakter Panelinde Gözükmesi",
          "Enemy AI -1",
          "Enemy AI-2",
          "Enemy AI -3",
          "Enemy AI-4",
          "Enemy AI-5",
          "Enemy AI-6",
          "Enemy AI -7",
          "Dialog Sistemi -1",
          "Dialog Sistemi-2",
          "Çift Sıçrama ve Sıçrama Hassasiyeti",
          "Range Enemy-1",
          "Range Enemy-2",
          "Enemy Scriptleri Düzenleme-1",
          "Enemy Scriptlerini Düzenleme-2",
          "Enemy Scriptlerini Düzenleme-3",
          "Enemy Scripti Düzeltme -4",
          "Hareketli Platform",
          "Mushroom Enemy-1",
          "Mushroom Enemy-2",
          "Mushroom Enemy-3",
          "Mushroom Enemy-4",
          "Mushroom Enemy-5",
          "Boss-1",
          "Boss-2",
          "Boss-3",
          "Boss-4"
        ]
      },
      "requirements": [
        "Başlangıç seviyesi kadar c# ve unity bilgisi gerekebilir . elimden geldiğince her konuyu detaylandırmaya çalıştım ancak temel bilgi eksikliği eğitim tarafında mağdur olmanıza sebep olabilir"
      ],
      "description": "Oyun yapımının kodlamadan ibaret olmadığını uygulayarak göreceğiz , oyun yapım sürecinde karşılaşılabilecek birçok sorunu ve yöntemi bir proje üstünde aşmaya çalışacağız. Bir sahneden oluşan bir iki mekanik içeren ve buglarla dolu 7 8 oyuncuk yapmak yerine, birçok oyun türü için sağlam bir referans ve temel oluşturacak bir proje yapacağız. Size yolu göstermeye çalışacağım ne noktaya, ne kadar uzağa gideceğiniz sizin hayal gücünüze ve sınırlarınıza bağlı olacak, bu sihirli dünyaya hepinizi bekliyorum.\nBasit anlamda save sistemi, farklı tipte düşmanlar 3 fazdan oluşan bir boss ve bolca 2 boyutlu fiziksel mekaninkler kullandık. Başlangıç seviyesine uygun bir inventory ve shop sistemimizde mevcut olup bir çok sistem sizler tarafından değiştirilebilir ve geliştirilebilir şekilde hazırlandı\nTamamen uygulama ile ezbere dayalı şu şudur, bakın burda bu var, şunu şurdan çektik yerine nedenlere odaklanmaya çalıştım . Unity Çok kapsamlı ve detaylı bir oyun motoru bütün ekranlara bütün özelliklere biranda aşina olup \"Profesyonelleşmek\" malesef mümkün değil ama temel olarak hangi özellikleri nereden nasıl eklediğimizi anlayacağız ve zamanla üstüne koymak sizlere kalacak. Bu eğitim boyunca unity ile neler yapabileceğimizi öğreneceğiz ve öğrendiğiniz şeyleri farklı açılardan bakmayı göstermeye çalıscam yani öğrendiğiniz bir özellikle farklı şeylerde yapılabileceğini zamanla sizde göreceksiniz ve bu esnada bol bol zihnimizi çalıştıracağız.\nUmarım hepiniz hayallerinize benim ile bir adım daha yaklaşacaksınız.",
      "target_audience": [
        "Kursumuz başlangıç seviyesi ile başlayıp orta seviyede bitiyor. Ancak ilk unity ve c# deneyimi için uygun değildir."
      ]
    },
    {
      "title": "Unreal Engine 4 - Impara a creare un videogame",
      "url": "https://www.udemy.com/course/pixelsdesign-unrealengine4/",
      "bio": "Game Design e Programmazione con Unreal Engine 4, il miglior motore al mondo per la creazione dei videogames",
      "objectives": [
        "Creare un livello di gioco con modelli e materiali di alta qualità",
        "Posizionare Luci e postprocessing nel modo corretto per avere gli effetti desiderati",
        "Creare materiali semplici e complessi grazie alle funzioni di materiali",
        "Animare un modello tridimensionale nelle scene come un guerriero o un barbaro",
        "Girare un video di presentazione per il vostro gioco",
        "Animare un attacco o una magia come preferite",
        "Creare effetti speciali per magie, impatti, spade e scudi",
        "Padroneggiare il sistema di combattimento tra nemico e personaggio",
        "Sistema di danno, mana e vita a consumo e ripristinabile",
        "Blueprints e Logiche di gioco per immergervi completamente nella vostra esperienza",
        "Organizzare ondate di nemici e loro forza"
      ],
      "course_content": {
        "Introduzione": [
          "Download e client",
          "Tab, Opzioni principali e Contenuto iniziale"
        ],
        "Level Design": [
          "Fondamenti di Level Design",
          "Inserimento contenuto precreato",
          "Inserimento risorse da Unreal Engine Marketplace",
          "Inserimento contenuto personalizzato",
          "Creazione materiali semplici",
          "Istanze di materiali",
          "Master material parametrico",
          "Landscape Tool",
          "Materiali per Landscape",
          "Sculpting",
          "Painting",
          "Costruzione del livello",
          "Grass Tool",
          "Grass Tool per il bosco",
          "Foliage Tool",
          "Lighting",
          "Riflessioni",
          "Post Processing",
          "Suono ambiente",
          "Geometry Editing",
          "Animare un attore col Matinee",
          "Girare un video"
        ],
        "Blueprints per il character": [
          "Introduzione ai Blueprints",
          "Construction Script",
          "Event Graph",
          "Variabili",
          "Semplice Intelligenza Artificiale",
          "Inserire la mesh del nemico",
          "Creare l'animation BluePrint",
          "Inserire la mesh del Character",
          "Creare il Character"
        ],
        "Animazioni": [
          "Animazione del Player",
          "Movimenti del Character",
          "Alcune modifiche nel movimento",
          "Attacco combo",
          "Bloccare attacchi nemici",
          "Sistema di danno",
          "Animazioni con la State Machine - Character",
          "Animazione con la State Machine - Enemy",
          "Aggiungere un suono alle azioni",
          "Aggiungere suono ai passi",
          "Attacco dell'AI",
          "Sistema di danno verso il character",
          "Bloccare il danno con uno scudo",
          "Animazione colpito e morte del character"
        ],
        "Particle System": [
          "PS sulla spada",
          "PS sugli Hit",
          "Creare un PS personalizzato",
          "Iniserire un PS personalizzato tramite hit points",
          "Creare un PS per i proiettili",
          "Creare un Proiettile",
          "Castare una magia",
          "Piccoli cambiamenti"
        ],
        "GamePlay": [
          "Spawn del nemico",
          "Generare wave di nemici",
          "Healt Bar per l'enemy",
          "Healt Bar per il player",
          "Personalizzare l'HUD",
          "Barra ricaricabile",
          "Sistema di punteggio",
          "Pick up per gli oggetti",
          "Notifiche di gioco",
          "Blood Effect",
          "Camera Shake",
          "Menù iniziale",
          "Ultimi accorgimenti",
          "Creare un package giocabile"
        ]
      },
      "requirements": [
        "Conoscere e amare il mondo dei videogiochi",
        "Non smettere mai di giocare",
        "Saper usare un pc",
        "Tanta voglia di imparare"
      ],
      "description": "Giochi con una console (Playstation, Xbox, Nintendo ecc.) o con il tuo PC? Sei interessato a creare un'esperienza videoludica con le tue idee? Hai fatto il 50% del lavoro. Grazie alla tua esperienza da gamer potrai comprendere appieno le nozioni di Game Design e apprendere in fretta le capacità di Programmatore di videogiochi! Con questo corso imparerai ad utilizzare UNREL ENGINE 4, il miglior motore al mondo per la creazione dei videogiochi, con qualità grafica eccelsa e logica di programmazione user friendly.\nAttraverso il percorso, costituito da lezioni precise ed intuitive, l'insegnante ti guiderà nella creazione del tuo primo videogame, dandoti l'occasione di creare un prodotto originale su misura per i gamer come te.\nAlla fine del corso imparerai le principali tematiche di game design e di programmazione tramite blueprint, un geniale sistema algoritmico di decisioni e comportamenti dei modelli 3D. Potrai scriptare il mondo a tuo piacimento.\nNelle lezioni saranno disponibili per te delle risorse di altissimo livello che ti permetteranno di ottenere il massimo risultato in un tempo brevissimo, grazie all'importazione facile e di qualità di Unreal Engine 4.\nIl corso di Unreal Engine 4 ti aiuta a padroneggiare tutte le capacità che deve avere  un game designer:\n\n\n\n- Inserimento risorse\n- Creazione materiali\n- Creazione mondo di gioco\n- Sculpting\n- Painting\n- Grass Tool\n\n- Foliage Tool\n- Lighting\n- Reflections\n\n- Post Processing\n- Sounds\n- Geometry Editing\n- Blueprint\n\n- Animations\n- Special Effects\n- HUD\n- Sistema di danno e vita\n- Pick up\n- Combat system\n- Wave di nemici\n- Boss system\n\n\nIL TUO UNICO LIMITE SARA' LA TUA FANTASIA",
      "target_audience": [
        "Chi ama i videogiochi, chi li gioca e vuole creare un'esperienza personalizzata"
      ]
    },
    {
      "title": "Desenvolva seus próprios Shaders na Unity",
      "url": "https://www.udemy.com/course/shaders-na-unity/",
      "bio": "Construa seus próprios efeitos do zero com Shaders na Unity",
      "objectives": [
        "Desenvolvimento de aplicações gráficas na Unity",
        "Aprender a base Matemática para criação de Shaders",
        "Conhecer os principais fundamentos sobre iluminação em aplicações gráficas",
        "Criar seus próprios efeitos utilizando shaders de partículas.",
        "Aprender a técnica de Ray Marching para criação de objetos 3D",
        "Criação de componentes como Grama, Fogo, Particulas, Campo de Força"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação do Curso",
          "Introdução a plataforma Unity",
          "GameObjects e o Componente Transform",
          "Mesh Renderer",
          "Materiais",
          "Shaders"
        ],
        "Shader Básico": [
          "Introdução a Shaders e o Pipeline Gráfico",
          "Propriedades",
          "Vertex Shader",
          "Fragment Shader",
          "Texturas e Mapeamento UV",
          "Praticando - Parte 1",
          "Praticando - Parte 2"
        ],
        "Revisão Matemática - Vetores": [
          "Pontos e Vetores",
          "Magnitude de um Vetor",
          "Vetor Unitário/Normalizado",
          "Adição e Subtração de Vetores",
          "Multiplicação e Divisão de Vetor por escalar",
          "Produto Escalar",
          "Produto Vetorial",
          "Vetor Normal",
          "Vetor Normal - Visualização"
        ],
        "Shader Intermediário": [
          "Iluminação - Teoria",
          "Iluminação Ambiente e Difusa",
          "Iluminação Especular",
          "Transparent e Cutout Shader",
          "Arquivos CGInc"
        ],
        "Shader Avançado - Parte 1": [
          "Compute Buffers",
          "Geometry Shader - Teoria",
          "Geometry Shader - Prática",
          "Grass Shader",
          "Grass Shader + Wind",
          "Fire Shader - Parte 1",
          "Fire Shader - Parte 2",
          "Billboard Shader"
        ],
        "Shader Avançado - Parte 2": [
          "Compute Shader",
          "Trail Shader - Parte 1",
          "Trail Shader - Parte 2",
          "Ray Marching Shader - Teoria",
          "Ray Marching Shader - Parte 1",
          "Ray Marching Shader - Parte 2",
          "Ray Marching Shader - Parte 3",
          "Force Field Shader"
        ],
        "Extras": [
          "Rocket League Grass - Demo",
          "Rocket League Grass - Parte 1",
          "Rocket League Grass - Parte 2",
          "Butterflies - Demo - Aula em Breve"
        ]
      },
      "requirements": [
        "Conhecimento básico sobre programação"
      ],
      "description": "Se você deseja aprender a criar seus próprios códigos e efeitos em Shader, além de entender como funciona o processo do pipeline gráfico, você está no local certo.\nEsse curso oferece uma visão geral sobre a estrutura e funcionamento de códigos Shaders, desde o básico até o avançado, apresentando de forma simples e ilustrativa como esses códigos são executados no pipeline gráfico da máquina e fornecendo ao aluno um visão ampla da possibilidade de utilização de Shaders na criação dos mais diferentes efeitos.\nO objetivo do curso é que o aluno compreenda os fundamentos básicos da criação de códigos em Shader para que o mesmo tenha autonomia para criar suas próprias aplicações gráficas. Para que isso seja possível é ofertado também no curso uma revisão completa e direta, dos principais conceitos matemáticos inerentes a criação de efeitos com Shaders, tais como vetores e suas operações. Não se preocupe, os conceitos são simples, claros e apresentados de forma ilustrada.\nSe você está começando no desenvolvimento de aplicações gráficas ou até mesmo já tenha algum conhecimento mas ainda não compreende muito bem como tudo funciona, esse curso é para você.\n\nO curso conta com:\n43 aulas prontas;\nDisponibilização de todos os códigos e recurso utilizados durante as aulas.",
      "target_audience": [
        "Desenvolvedores de Jogos Iniciantes",
        "Entusiastas de desenvolvimento gráfico"
      ]
    },
    {
      "title": "สร้างเกม 2D ด้วยโปรแกรม Unity (ตั้งแต่เริ่มต้นจนเล่นได้จริง)",
      "url": "https://www.udemy.com/course/unity-2d-tutorial/",
      "bio": "สร้างเกม 2 มิติ ตั้งแต่เริ่มต้นจนเล่นได้จริงบน PC ด้วยโปรแกรม Unity และ C#",
      "objectives": [
        "เรียนรู้การใช้งานโปรแกรม Unity",
        "เรียนรู้การเขียน C# Script สำหรับสร้างเกม 2 มิติ",
        "จัดการ Animation ในเกม",
        "จัดการ Scene เกมและระบบเสียงในเกม",
        "ระบบพลังชีวิต (HP)",
        "ระบบเก็บคะแนน (Score)",
        "ระบบเก็บคะแนนสูงสุด (High Score)",
        "เรียนรู้การ Export Game & Package"
      ],
      "course_content": {
        "บทนำ": [
          "บทนำ",
          "ข้อกำหนดคอร์สเรียน"
        ],
        "ปูพื้นฐานการสร้างเกม 2 มิติ": [
          "รู้จักกับโปรแกรม Unity",
          "สมัคร Unity ID",
          "ติดตั้ง Unity Hub",
          "ติดตั้งโปรแกรม Unity",
          "สร้างโปรเจกต์",
          "องค์ประกอบของโปรแกรม Unity",
          "คำศัพท์พื้นฐาน",
          "Scene View & Game Object",
          "Rigidbody2D & Kinematics",
          "Collider2D",
          "การสร้าง C# Script",
          "ฟังก์ชั่น Start และ Update",
          "ฟังก์ชั่น Start และ Awake",
          "แก้ปัญหา Unity ไม่มี Autocomplete",
          "FixedUpdate และ LateUpdate",
          "รับค่าจากแป้นพิมพ์ (Keyboard)",
          "เคลื่อนที่วัตถุด้วย Rigidbody2D",
          "ล็อควัตถุด้วย Freeze",
          "AddForce",
          "การสร้าง Prefab",
          "การชนของวัตถุ (Collision2D)",
          "การกำหนดป้ายกำกับ (Tag)",
          "เช็คการชนด้วย OnCollision2D",
          "เช็คการชนด้วย OnTrigger2D",
          "ลบวัตถุด้วย Destroy",
          "Camera Follow",
          "สุ่มค่าด้วย Random",
          "ซ่อนวัตถุด้วย SetActive",
          "Restart Game",
          "ระบบคะแนนในเกม",
          "ออกแบบ UI",
          "แสดงคะแนนผ่าน UI",
          "เล่นเสียงตอนเก็บไอเท็ม",
          "เล่นเสียงตอนกระโดด",
          "Background Music",
          "การสร้าง Scene ใหม่",
          "การเปลี่ยน Scene ด้วย Script",
          "Export Game (Desktop)",
          "Export Package",
          "Import Package"
        ],
        "สร้างเกมแนว 2D Platform ด้วย Unity": [
          "แนะนำเนื้อหา",
          "สร้างโปรเจกต์",
          "นำ assets เข้ามาทำงาน",
          "สร้าง Prefab",
          "ออกแบบด่าน (Level Design)",
          "ผู้เล่น (Player)",
          "ควบคุมการเคลื่อนที่ของผู้เล่น",
          "ควบคุมการกระโดดของผู้เล่น",
          "Flip Player",
          "Animation Clip",
          "Animator Controller",
          "ควบคุม Animation ด้วย Script",
          "Check Grounded",
          "Camera Follow",
          "Physic Material2D",
          "Restart Game",
          "Move Object",
          "Move Object Script",
          "Player Platform",
          "Level Manager",
          "ไอเท็ม (Item)",
          "ระบบคะแนน",
          "แสดงผลคะแนน",
          "Enemy",
          "Move Enemy",
          "Move Condition",
          "Flip Enemy",
          "Hit Force",
          "ออกแบบพลังชีวิต",
          "ลดพลังชีวิต",
          "Game Over (UI)",
          "ระบบจบเกม",
          "แก้บัคผู้เล่น",
          "Play Again",
          "เล่นเสียงในเกม"
        ],
        "สร้างเกมแนว Endless Runner 2D": [
          "แนะนำเนื้อหา",
          "สร้างโปรเจกต์",
          "นำ asset มาทำงาน",
          "ตั้งค่าพื้นหลัง (Background)",
          "Texture Scroll",
          "Ground Scroll",
          "Player Run",
          "Player Jump",
          "Ground Check",
          "Jump Animation",
          "Jump Script",
          "Obstacle",
          "Move Obstacle",
          "Destroy Obstacle",
          "Create Obstacle",
          "WaitForSeconds",
          "Other Obstacle",
          "Random Obstacle",
          "Game Over",
          "Game Manager",
          "Stop Scroll",
          "GameOver Panel",
          "แสดงผล GameOver",
          "Play Again",
          "ออกจากเกม (Quit Game)",
          "ระบบคะแนน (Score)",
          "Score UI",
          "คะแนนสูงสุด (High Score)",
          "แสดงคะแนนสูงสุด"
        ],
        "[หัวข้อเสริม] - สร้างเกมแบบไม่เขียนโค้ดด้วยระบบ Visual Scripting": [
          "รู้จักกับ Visual Scripting",
          "ติดตั้ง Unity",
          "สร้างโปรเจกต์ Unity",
          "คำศัพท์พื้นฐานใน Unity",
          "Script Machine",
          "Graph System",
          "Node & Ports",
          "Group",
          "Graph Variables",
          "Math Operations",
          "Object Variables",
          "Game Design",
          "GetAxis",
          "Physic & Velocity",
          "Button Input",
          "Animation Clip",
          "Animator Controller",
          "Animation Graph",
          "Flip Player",
          "Cine Machine",
          "Restart Game",
          "OnCollisionEnter",
          "OnCollisionStay & Exit",
          "Items & IsTrigger",
          "Destroy & Prefab",
          "Score System",
          "User Interface",
          "Items Type"
        ]
      },
      "requirements": [
        "มีพื้นฐานการเขียนโปรแกรมภาษา C#",
        "ใช้ Unity 2021.3.11f1 หรือสูงกว่าในการพัฒนาเกม"
      ],
      "description": "เรียนรู้เกี่ยวกับการสร้างเกม 2 มิติด้วยโปรแกรม Unity & C# โดยเนื้อหา\nในคอร์สจะแบ่งออกเป็น 3  ส่วนหลักๆด้วยกัน ได้แก่\nพื้นฐานการสร้างเกมด้วยโปรแกรม Unity & C#\nเรียนรู้การใช้งานโปรแกรม Unity\nการสร้าง C# Script\nควบคุมตัวละครในเกมผ่านแป้นพิมพ์\nระบบคะแนนในเกม\nRestart Game\nจัดการระบบเสียงในเกม\nจัดการ Scene ในเกม\nUser Interface (UI)\nExport Game (Desktop)\nExport & Import Package\nสร้างเกมแนว 2D Platform\nจัดการ Animation ในเกม\nระบบพลังชีวิต (HP)\nการสร้าง AI อย่างง่าย\nระบบจบเกม (Game Over)\nสร้างเกมแนว Endless Runner\nจัดการฉากหลังในเกม\nการเล่นเสียงในเกม\nจัดการ Animation ในเกม\nระบบสร้างวัตถุอัตโนมัติในเกม\nระบบคะแนนสูงสุด (High Score)\nระบบออกจากเกม (Quit Game)\nหัวข้อเสริม (อัปเดตปี 2024)\nสร้างเกมแบบไม่เขียนโค้ดด้วยระบบ Visual Scripting\n*หมายเหตุ : Section \"หัวข้อเสริม\" เป็นหัวข้อที่ไม่เกี่ยวข้องกับเนื้อหาหลักในคอร์สเรียนท่านสามารถเรียนหรือไม่เรียนก็ได้",
      "target_audience": [
        "ผู้ที่สนใจพัฒนาเกม 2 มิติด้วยโปรแกรม Unity"
      ]
    },
    {
      "title": "【はじめてのメタバースづくり入門】UnityとC#とPhotonを使って自分の手で仮想空間を開発＆公開してみよう！",
      "url": "https://www.udemy.com/course/introduction_creating_metaverse/",
      "bio": "次世代インターネットとも呼ばれる三次元の仮想空間『Metaverse(メタバース)』をあなた自身の手で開発し、Web上への公開に至るまでの流れをハンズオン形式で学べる、メタバースづくりの入門講座です。",
      "objectives": [
        "オンラインで多人数による同時接続可能なインターネット上の仮想空間「Metaverse(メタバース)」を個人で開発する流れ",
        "メタバースという概念と現状の業界プレイヤーおよび活用事例",
        "UnityとPhotonそれぞれの基本的特徴と環境構築、アカウント作成方法",
        "Unityの基本的な操作方法とC#言語によるプログラミング",
        "メタバースにおけるアバターの移動、ジャンプ、アニメーション動作の開発",
        "メタバースにおける三人称視点カメラの回転操作、ズームイン/アウト、カメラ回転角度の制限、障害物が視界を遮らないようにする機能の開発",
        "Photon Fusionを活用したリアルタイムのマルチプレイヤーネットワーク同期処理の開発",
        "Photon Chatを活用したテキストチャットシステムの導入",
        "Unity Asset Storeからのアバターモデル、ワールド環境、Skybox(空模様)といった無料素材の導入＆配置",
        "インターネット上からの日本語フォントの入力＆表示プラグインおよびBGM無料素材の導入＆活用",
        "Webブラウザ上でのメタバースの公開"
      ],
      "course_content": {
        "講座の紹介": [
          "はじめに",
          "講座の目的、学習内容、受講前の注意点",
          "受講中のお願いと注意点"
        ],
        "メタバースについての基礎知識": [
          "メタバースとは",
          "メタバース市場のプレイヤーと活用事例"
        ],
        "Unityの特徴と環境構築": [
          "Unityとは",
          "Unityアカウントの作成",
          "UnityHubのダウンロード",
          "Unityバージョン2022.3.20fのダウンロード",
          "Unityプロジェクトの作成",
          "Unity キーボードショートカットに関するWindows/Macの比較参考情報",
          "UnityEditorの使い方",
          "UnityAssetStoreのアクセス方法"
        ],
        "アバター操作開発の準備": [
          "3Dアバターの導入",
          "Playerスクリプトの作成準備"
        ],
        "C#の基礎知識": [
          "C#とクラスとは",
          "Unityスクリプトの初期入力済みコードについて",
          "メンバー変数とは"
        ],
        "アバター操作の開発": [
          "アバターを移動させる",
          "移動方向とアバターの向きをそろえる",
          "アバターをジャンプさせる",
          "AnimatorControllerの作成",
          "アバターをアニメーションさせる"
        ],
        "三人称カメラ動作の開発": [
          "カメラをアバターに追従させる",
          "カメラをズームイン&ズームアウトさせる",
          "カメラがアバターの周りを回転できるようにする",
          "カメラとアバターの間に障害物が遮らないようにする"
        ],
        "Photon Fusionの特徴とUnityへの導入": [
          "Photon Fusionとは",
          "Photon Fusionの導入準備(Unity側)",
          "PhotonアカウントとアプリケーションIDの作成",
          "FusionSDKのインストールと初期設定"
        ],
        "オンラインマルチプレイのためのネットワーク同期処理開発": [
          "プレイヤー生成スクリプトの作成",
          "Playerオブジェクトのプレハブ化とCameraScriptの修正",
          "ネットワーク同期のためのPlayerスクリプト修正",
          "オンラインマルチプレイのテスト"
        ],
        "プレイヤー名表示の開発": [
          "アバター頭上のネームプレート作成",
          "プレイヤー名保存スクリプトの作成",
          "アバター頭上にプレイヤー名を表示させる",
          "日本語用フォントの導入"
        ]
      },
      "requirements": [
        "次のUnityバージョン2022.3システム最低要件を満たしたPCをお持ちの方　【Windowsの場合】 OSバージョン：Windows 7 (SP1+)、Windows 10、Windows 11、64 ビット版のみ)　　【macOSの場合】OSバージョン：Mojave 10.14 以降 (Intel エディター) Big Sur 11.0 (Apple シリコンエディター)",
        "PCのキーボードやマウス操作、ファイルマネージャー、Webブラウザ等基本的な操作ができる方",
        "Unity、C#、Photonの使用経験がなくても受講可能です。ただし、メタバース開発全体の大まかな流れを学ぶことを主軸とした講座のため、C#の文法やプラグインの内部構造に関する詳細な説明は省くことがあります。",
        "講座中の解説はWindowsのPC環境で行います。MacのPCをお持ちの方も受講可能ですが、Mac特有のキー操作やファイルマネージャー操作等は適宜講座中の言葉を読み替えて頂く必要がございます。",
        "講座ではメタバースをPCのWebブラウザ上で動作するように開発していきます。VRゴーグルで動作するメタバースの開発は行いません。"
      ],
      "description": "本講座は次世代インターネットとも呼ばれる三次元の仮想空間『Metaverse(メタバース)』をあなた自身の手で開発し、Web上への公開に至るまでの流れをハンズオン形式で学べる、メタバースづくりの入門講座です。\n\n\n「メタバースやインターネット上の仮想空間に興味がある」\n「最新技術を活用して新しい価値を生み出す可能性を探している」\n「自分だけの仮想空間を作って周りの人と一緒に使ってみたい」\n「メタバースの仕組みや個人開発する方法について学びたい」\n「Unity、PhotonやC#というメタバースの開発環境やプログラミング言語を学びたい」\n上記のようにお考えの方を主に受講の対象者としています。\n\n\n最近、様々なメディア等でメタバースという言葉を耳にするようになりましたが、なんとなく言葉の意味は知っていてもその仕組みや作り方について体系的に学習することができる教材はまだまだ世の中に少ない現状であると考えます。\n\n\nこちらの講座は『オンラインで多人数による同時接続が可能な、インターネット上の仮想空間であるメタバースを個人で開発する流れを学ぶこと』を目的とした、理論だけに留まらない実践コースです。\n\n\n講座中に実際のメタバース開発の現場でも使用される開発エンジンUnityとPhotonの使い方や、開発言語であるC#のプログラミングも同時に学習することが可能であり、本コースの受講終了後には、ソーシャルテクノロジーの進化系といわれる次世代インターネット空間であるメタバースを構築するために必要な知識とスキルを身に付けることができます。\n\n\n本講座を受講して、インターネット上にあなただけの世界観や想像を表現した仮想空間を開発＆公開できるようになり、メタバースによる新しいコミュニケーションと活動の可能性を広げましょう！",
      "target_audience": [
        "Metaverse(メタバース)やインターネット上の仮想空間に興味がある方",
        "最新技術を活用して新しい価値を生み出す可能性を探している方",
        "自分だけの仮想空間を作りあげて周りの人と一緒に使ってみたい方",
        "メタバースを個人開発する方法について学びたい方",
        "Unity、C#、Photonという開発環境や言語について学びたい方",
        "Photonを活用したReal Time Multi Player Networkの実装方法について学びたい方"
      ]
    },
    {
      "title": "Aprenda a criar jogos com a Godot 3.2 sem dificuldade.",
      "url": "https://www.udemy.com/course/aprenda-a-criar-jogos-com-a-godot-32-sem-dificuldade/",
      "bio": "Aprenda a programar fácil para criar games com a GODOT e desenvolva 4 games para testar seu conhecimento.",
      "objectives": [
        "Criar jogos com uma das ferramentas de desenvolvimento de games mais incríveis do mercado!",
        "Dominarão conceitos de extrema importância na programação por meio da linguagem gdscript.",
        "Programar sobre os nodes de modo a criar um ambiente interativo valendo-se não apenas da instrução do professor, mas das ideias adquiridas pelo próprio aluno.",
        "Criar animações para os objetos do jogo sem precisar de softwares de terceiros.",
        "Exportar para Windows e Android"
      ],
      "course_content": {
        "Explicação para melhor aproveitamento do curso": [
          "Explicação das seções"
        ],
        "Introdução (atualizada)": [
          "Download, descompactação e criação de atalho",
          "Tela de gerenciamento de projetos",
          "Criação de um projeto",
          "Conhecendo a interface do programa",
          "Organização das docks",
          "Cenas e nós",
          "Exemplo de criação de cena",
          "Mais exemplos de criação de cenas",
          "Criando personagem dentro de uma outra cena"
        ],
        "Introdução": [
          "Apresentação do curso",
          "Download e execução da GODOT 3.2",
          "Apresentação da tela de gerenciamento de projetos",
          "Criação do primeiro projeto",
          "Menu da Godot",
          "Workspaces",
          "Botões de ação",
          "Barra de ferramentas, viewport e output",
          "Paineis e docks",
          "Explicação sobre nós e cenas",
          "Exemplo super prático mostrando como funcionam os nodes",
          "Salvando a cena e definindo como principal",
          "Conhecendo as funções dos botões da tela de gerenciamento de projetos"
        ],
        "Criação de jogo de exemplo (atualizada)": [
          "Criação do projeto e importação de assets",
          "Criação do player",
          "Ajustando a escala do player",
          "Input map",
          "Movimentação da nave",
          "Controlando a nave",
          "Criação do inimigo",
          "Movimentação do inimigo",
          "Criação das packedscenes",
          "Instanciando inimigos",
          "Mudando de cena"
        ],
        "Criação de um Jogo de exemplo": [
          "Por que da seção?",
          "Exemplo de game - criação do projeto e organização das docks",
          "exemplo de game - importação e reimportação",
          "exemplo de game - criação do player",
          "exemplo de game - ajustando o tamanho do player",
          "input maps e criação do arquivo de script",
          "exemplo de game - movimento da nave",
          "exemplo de game - controlando a nave",
          "exemplo de game - criação do inimigo e do seu script",
          "exemplo de game - movimentação do inimigo",
          "criação dos packedScenes",
          "instanciando inimigos",
          "eliminando o inimigo com base na sua posição"
        ],
        "Programação parte I": [
          "Criação do primeiro arquivo de script",
          "Explicação sobre o GDSCRIPT e comentários",
          "Criação de variáveis",
          "Função print e exibição de textos",
          "Operações na GODOT",
          "Estrutura de decisão",
          "Comparando vidas",
          "Outras comparações",
          "If elif e else",
          "If dentro de outro if",
          "Uso do AND na estrutura de decisão",
          "Uso do OR na estrutura de decisão",
          "Uso do NOT ou exclamação"
        ],
        "Programação parte 2": [
          "ARRAY no gdscript",
          "Exemplo 2 de ARRAY",
          "Dicionário",
          "Estrutura de repetição com FOR exemplo 1",
          "Loop for com variáveis de controle",
          "For com array",
          "Loop for com array e dicionario",
          "Loop while",
          "Introdução as funções e explicação do processe physicsprocess",
          "Criação das primeiras funções",
          "Função de soma e subtração e escopo",
          "Funções e mais exemplos sobre variáveis locais",
          "Parâmetros em funções",
          "Função de pontos",
          "Explicação sobre uso do sinal de mais e da virgula na função print()",
          "função para ganhar e perder vidas no game",
          "Munição na Godot",
          "Funções com retornos"
        ],
        "Programação parte 3": [
          "Acessando as variáveis pelo inspector",
          "Exemplo práticos com Export",
          "Sobre o tipo Vector2",
          "Manipulando os nodes pelo código",
          "Exemplo envolvendo um Vector2",
          "Process, physicsProcess e input",
          "Entrada do teclado com is_key_pressed",
          "Entrada com ações do input map"
        ],
        "Game: Encontre a chave": [
          "parte 1 - Criação do projeto",
          "parte 2 - configuração do projeto",
          "parte 3 - importação dos sprites",
          "parte 4 - Dica para reimportar várias imagens de uma só vez",
          "parte 5 - criação do cenário",
          "parte 6 - criação da porta e da chave",
          "parte 7 - criação do player",
          "Parte 8 - explicação sobre os nodes usados até o momento",
          "Parte 9 - movimento do player",
          "Parte 10 - Colisores nas paredes",
          "parte 11 - pegando a chave",
          "parte 12 - finalização do primeiro jogo"
        ],
        "Game: Colete Bombas": [
          "parte 1 - criação do projeto e apresentação da ideia do game",
          "parte 2 - definições para o projeto e cena principal",
          "parte 3 - criação do player",
          "Parte 4 - movimentação do personagem",
          "parte 5 - virando o player pelo código",
          "parte 6 - restringindo a movimentação do player",
          "parte 7 - como alterar a posição do colisor pelo código",
          "parte 8 - criação da cena da bomba",
          "parte 9 - movimentação da bomba",
          "parte 10 - instanciando bombas",
          "parte 11 - destruindo a bomba com base na posição",
          "parte 12 - destruindo a bomba com base em colisão",
          "parte 13 - criando a pontuação do jogo",
          "parte 14 - criação da fumaça",
          "parte 15 - instanciação da fumaça",
          "parte 16 - criação da explosão de fumaça",
          "parte 17 - criação da cena de explosão",
          "parte 18 - script da explosão",
          "parte 19 - finalização do game 2"
        ]
      },
      "requirements": [
        "Ter um mínimo de conhecimento de informática."
      ],
      "description": "O curso aborda praticamente as partes essenciais para o desenvolvimento de jogos digitais 2D como: programação, manipulação dos elementos formadores dos jogos (nodes), animação, interação e muitas dicas para facilitar a criação de games.\nO mais interessante de tudo isso é que o curso está organizado de modo a permitir que o aluno perceba o quão simples é desenvolver na GODOT. Começando com um game de teste para que tenha uma ideia do conteúdo do curso, depois, passaremos a falar da parte essencial da programação usando GDSCRIPT, uma linguagem de programação baseada/inspirada em uma outra linguagem muito forte e amigável que é o PYTHON, em seguida, aprenderá sobre como trabalhar com INPUTS (entradas), como acessar os elementos do jogo (nodes) através do código e manipular suas propriedades via SCRIPT, o que é muito fácil quando temos a instrução certa de como isso pode ser feito.\nApós ter um bom domínio sobre estes assuntos, começaremos a trabalhar com projetos de jogos (4 projetos) e a partir dai, todo aprendizado é colocado em pratica. Por fim, um desafio será apresentado para que dê continuidade ao game de exemplo adicionado após a apresentação da interface.\nResumindo: É o curso ideal para todos que querem começar a desenvolver jogos nesta Engine que vem chamando muita atenção dos game designers!",
      "target_audience": [
        "Desenvolvedores iniciantes.",
        "Criadores de conteúdo digital interativo.",
        "Fãs de jogos digitais.",
        "Programadores em busca de criar jogos."
      ]
    },
    {
      "title": "Unity ゲーム開発：インディーゲームクリエイターが教える C#の基礎からゲームリリースまで【スタジオしまづ】",
      "url": "https://www.udemy.com/course/studio_shimazu_nfrpg/",
      "bio": "初心者OK！C#を使って複雑なGameを自分で開発しよう。コースの終わりにはオリジナルRPGを App Store＆Google Playでリリースしよう！！！",
      "objectives": [
        "Unityでゲームを開発する方法",
        "ゲームをストアにリリースする方法",
        "C#を中心とするプログラミングの基礎知識",
        "RPGゲームを作成する方法",
        "2Dゲームを作成する方法"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "Unityとスクリプトエディタのインストールと設定": [
          "はじめに",
          "Unityのインストール",
          "Unityの初期設定（スクリプトエディタの設定）"
        ],
        "Unityの基礎知識（コンポーネントについて）": [
          "はじめに",
          "（必修）Unityでゲームを作るには　〜Unityと仕組みとその操作方法の解説〜",
          "（必須）最新バージョンでの修正",
          "（必修）表示される文字の変更　〜Textコンポーネントについて〜",
          "Imageコンポーネントの操作",
          "HPバーの操作",
          "（必修）別オブジェクトの操作方法　〜オブジェクトの取得方法について〜",
          "演習",
          "セクションのまとめ"
        ],
        "追加動画（ショートカットキーの解説）": [
          "作業効率爆上がり！講師も使っているショートカットキーの解説"
        ],
        "C#の基礎": [
          "はじめに",
          "コンソールとコメントアウト",
          "変数の宣言",
          "変数の型",
          "数値の演算と演算子",
          "文字列の連結とFormat",
          "if文",
          "switch文と演習",
          "繰り返し処理 whileとfor",
          "配列の基礎と応用",
          "Listとforeach",
          "関数（メソッド）の作成と応用",
          "【演習】nからmまでの偶数の和を求める関数を作成せよ",
          "【演習】3のつく数字と3の倍数でアホになる演習問題",
          "classの作成と利用方法",
          "Propertyの作成と利用方法"
        ],
        "ノンフィールドRPGを作るための基礎 8つのテクニック": [
          "はじめに",
          "シーンの移動",
          "ボタン入力の取得",
          "タップ入力の取得",
          "オブジェクトの非表示/表示/破壊",
          "スクリプト上でのコンポーネントの取得と利用",
          "Textオブジェクトの取得と変更",
          "オブジェクトのプレファブ化",
          "オブジェクトの生成と親要素の変更（InstantiateとSetParent）",
          "セーブとロード（PlayerPrefsの利用）",
          "Json化（オブジェクトを文字列に変換）"
        ],
        "ノンフィールドRPGの作成": [
          "（必須）追加版のお知らせ！",
          "はじめに",
          "プロジェクトの作成&プラットフォームの指定&画面サイズの設定",
          "シーンの作成",
          "ボタンの作成",
          "ボタンによるシーンの移動",
          "進行度の更新",
          "PlayerStatusViewの作成",
          "PlayerModelの作成",
          "モンスターの出現タイミングの作成",
          "モンスターModelの作成",
          "出現モンスターの表示",
          "モンスターのタップ検出",
          "攻撃の実装",
          "モンスターHPの描画とステータスの更新",
          "PlayerModelの永続化",
          "セーブとロード",
          "複数画面サイズへの対応"
        ],
        "GooglePlayへのリリース": [
          "はじめに",
          "apkファイルの作成（ビルド）",
          "デベロッパー登録",
          "アプリ掲載情報の登録",
          "Google Play に.apkファイルを提出（リリース）"
        ],
        "AppStoreへのリリース": [
          "はじめに",
          "ビルド",
          "Certificate（証明書）の作成",
          "AppIDの作成",
          "Profileの作成",
          "アプリのアップロード",
          "スクリーンショットの用意"
        ],
        "追加レクチャーの解説": [
          "追加されたレクチャーの目的と解説"
        ]
      },
      "requirements": [
        "タイピングができる",
        "検索サイトでUnityを調べたことがある",
        "UnityをインストールできるPC（Mac/Windows）がある",
        "AppStoreにリリースしたい人はMacが必要"
      ],
      "description": "インディーゲームクリエイターに必要な開発、リリースなど総合的なUnityの力がこれ一本で身につく完全攻略版です。\n\n\nこの講座は以下の方を対象としています。\nAppStoreやGooglePlayにゲームをリリースしたい方\nコミケやインディーゲームのイベントで出展側として参加したい方\n自身のポートフォリオを充実させたい方\n\n\n初心者の方でもゲームをリリースできるように、講座の構成は\nUnityのインストール\nUnityでゲームを作る基礎（コードでものを変化させる簡単な方法）\nプログラミングの基礎（ゲーム開発に必要な最低限のスキル）\nゲーム開発のテクニック（ボタンの取得やデータの保存など）\nを1話完結形式で学び、基礎力をつけた後\nRPGの作成\nAppStore/Google Playへのリリース\nに取り掛かかります。講座を終えたときには自身のゲームを実際にストアに並べることができるようになっています。\nまた、初心者の方が動画学習で感じている「一時停止、写経、巻き戻し」の手間をなくすために、動画には補助テキストを設けています。動画を見終わった後にテキストを見ながら学習できるようになっています。\n\n\n一人でゲームを作るのは「資料を探し、学び、実践する」っというとてもエネルギーのいることです。また、リリースするとなるとゲーム開発以外のことにも多くの労力を使います。この講座はこれらのエネルギーをゲーム開発とリリースに集中するための講座です。自分のGameを世界に向けて発信しましょう！",
      "target_audience": [
        "自分のゲームをAppStoreやGoogle Playに並べたい人",
        "コミケやインディーゲームのイベントで出展側として参加したい人",
        "ゲームをリリースして、ポートフォリオを充実させ転職活動にいかしたい人",
        "Unityのチュートリアルを勉強したけど挫折してしまった人",
        "Unityを始めたはいいけど何から手をつけていいのかわからない人"
      ]
    },
    {
      "title": "Godot 4 : Créez vos jeux vidéo avec le moteur libre ultime !",
      "url": "https://www.udemy.com/course/godot-engine-creation-de-jeux-3d-avec-le-moteur-libre-et-gdscript/",
      "bio": "Apprendre la conception de jeux vidéo avec Godot Game Engine version 4, le moteur de jeu open source et gratuit.",
      "objectives": [
        "Utiliser le moteur de jeux godot engine 4",
        "Programmer des jeux avec GDScript (Python)",
        "Créer des jeux 3D avec Godot standard ou Godot mono",
        "Acquérir les notions fondamentales du développement de jeux",
        "Découvrir la version Mono de Godot 4",
        "Développer des jeux optimisés",
        "Apprendre le langage C#",
        "Créer un clone de Mario 64"
      ],
      "course_content": {
        "Les bases de Godot 4 (version Mono / .NET) et du langage de programmation C#": [
          "Présentation de cette formation et du premier projet de jeu 3D type platformer",
          "Prise en main du player vidéo d'Udemy pour suivre au mieux une formation !",
          "Installation de Godot 4 (version Mono basée sur .NET)",
          "La version web (en ligne) de godot | Pas d'installation et pas de téléchargement",
          "Les différents menus de Godot 4",
          "L'interface de Godot 4 et ses fenêtres",
          "Naviguer dans une scène 3D sous Godot 4 (raccourcis à connaître)",
          "Comprendre les composants (nœuds) qui permettent de caractériser les objets",
          "Comprendre le système de signaux (événements) pour détecter un event",
          "Les outils pour créer une interface utilisateur (GUI) avec Godot 4",
          "Découverte du code de base d'un script C#",
          "Comprendre comment utiliser les variables avec C#",
          "Comprendre et créer une fonction en C#",
          "Créer des conditions en C# pour déclencher du code si un event se produit",
          "Les tableaux avec C# pour stocker beaucoup de données",
          "Les boucles for, while et foreach en C#",
          "Changer la couleur d'un objet de jeu en C#",
          "Gérer les inputs (clavier / souris) en C#",
          "Gestion des collisions en C#",
          "Créer un script de déplacement pour un personnage 2D simple",
          "Exercice de codage : Testez vos connaissances en C#"
        ],
        "Développer un jeu de plateforme 3D avec Godot 4 et C# - Atelier pratique": [
          "Mise en place du projet Platformer3D sous Godot 4",
          "Modélisation des décors sous Blender partie 1 (iles)",
          "Modélisation des décors sous Blender partie 2 (objets)",
          "Modélisation des décors sous Blender partie 3 (palmiers)",
          "Importer les modèles 3D de Blender vers Godot et les configurer",
          "Ajout d'objets décoratifs (level design)",
          "Récupérer d'autres modèles 3D en ligne pour plus de décoration dans nos niveaux",
          "Configuration de l'environnement et des effets post-traitement pour un bon rendu",
          "Préparation du personnage joueur et configuration du modèle 3D Player",
          "Gestion des inputs de la souris pour orienter la caméra avec le curseur",
          "Script de déplacement du joueur au clavier + animation de marche / saut",
          "Création d'une porte fermée pour bloquer le passage",
          "Création d'un coffre à ouvrir pour récolter des objets",
          "Récupération d'une clé dans le coffre pour ouvrir la porte",
          "Pouvoir courir pour se déplacer plus vite dans le niveau",
          "Création d'un bouton à activer en sautant dessus",
          "Création d'une plateforme mobile animée actionnée par le bouton",
          "Préparation d'un monstre ennemi 3D",
          "Script de patrouille / déplacement autonome du monstre",
          "Rebondir quand on saute sur le dos du monstre",
          "Peaufiner le niveau, calculer le score et déclencher la fin du level"
        ],
        "FAQ du projet 'Platformer 3D' Godot Game Engine 4 .NET - Mes réponses vidéo": [
          "Comment créer un système de sauvegarde et conserver des données en mémoire ?",
          "Comment créer un système de checkpoint type Mario ?",
          "Comment afficher le score à l'écran (IHM) à la fin du niveau ?",
          "Comment mettre en place un système d'analytics / de tracking ?",
          "Comment télécharger et utiliser des plugins de l'Asset Library de Godot ?",
          "Un plugin qui ajoute des nœuds et des scripts à votre projet"
        ],
        "Astuces Godot Game Engine": [
          "Envoyer une requête HTTP pour télécharger des données en ligne via une URL",
          "Créer un filtre noir et blanc pour vos jeux",
          "Créer des transitions professionnelles grâce au système de Tween de Godot",
          "Sauvegarder facilement des données sur le disque grâce à ConfigFile",
          "Créez votre toute première extension (plugin) pour Godot",
          "Présentation de l'Asset Library et de mes assets publiés",
          "Poster un message sur Discord depuis Godot grâce aux WebHooks"
        ],
        "Utiliser l'IA générative et des LLM pour générer des données pour vos jeux": [
          "Générer des dialogues, quêtes, histoires avec l'intelligence artificielle (IA)"
        ],
        "Écrire un code de qualité et structuré grâce aux design patterns": [
          "Présentation de cette section sur l'architecture logicielle",
          "Principe de responsabilité unique",
          "Principe Open Closed",
          "Principe de Liskov",
          "Principe de ségrégation des interfaces",
          "Principe d'inversion des dépendances",
          "Design pattern Singleton",
          "Design pattern Factory",
          "Design pattern Command",
          "Design pattern Observer",
          "Design pattern State"
        ],
        "Présentation des prochains projets / ateliers + info importante": [
          "Avant de débuter les prochains projets, voir cette vidéo importante"
        ],
        "Initiation à Godot Game Engine": [
          "Introduction et téléchargement",
          "Important : A propos de cette formation Godot",
          "Découverte de l'interface de Godot",
          "Comprendre l'instanciation des nœuds avec Godot",
          "Importation de modèles 3D issus de Blender (ou d'autres logiciels 3D)",
          "Initiation à la programmation avec GDScript (Python) 1/2",
          "Initiation à la programmation avec GDScript (Python) 2/2",
          "Avant d'aller plus loin avec Godot",
          "Rejoindre le groupe privé"
        ],
        "Projet : Création d'un jeu de plateforme 3D": [
          "Importation des ressources (assets) du jeu",
          "Préparation du personnage principal",
          "Gestion des inputs (touches clavier) pour le déplacement du personnage",
          "Faire suivre la caméra afin de filmer le personnage",
          "Création du premier niveau du jeu avec nos modèles 3D",
          "Création des objets interactifs",
          "Amélioration des graphismes et beau rendu avec le post processing",
          "Animation d'éléments décoratifs avec l'outil d'animation de Godot",
          "Système de particules et création d'un feu animé",
          "Détection des collisions et déclenchement d'événements",
          "Ramassage d'objets et modification de la couleur du personnage par script",
          "Création d'un champ de force magique et déblocage du champ de force",
          "Création de pièces à ramasser et calcul de l'or",
          "Changement de niveaux (passer au niveau suivant)",
          "Ajout de musiques et d'effets sonores (SFX)",
          "Création du menu principal du jeu",
          "Création de l'interface utilisateur (HUD / GUI)",
          "Création des autres niveaux du jeu",
          "Compilation et publication du jeu"
        ],
        "Vidéos en vrac": [
          "Un outil (add-on) pour colorer rapidement vos objets 3D",
          "Présentation de mon kit de modèles 3D pour Godot Game Engine",
          "Petit guide pour débuter en 2D avec Godot",
          "PODCAST : Devenir développeur indé et arriver à finir ses projets"
        ]
      },
      "requirements": [
        "Souhaiter créer des jeux avec un outil gratuit et open source",
        "Souhaiter apprendre avec un expert certifié"
      ],
      "description": "Ce cours vous permettra d'apprendre à développer des jeux avec un outil libre et gratuit : Godot Game Engine au travers de 5 projets complets (plus des mini projets) ! Si vous souhaitez migrer d'un autre moteur de jeu à Godot ou si vous voulez simplement vous lancer avec Godot 4, cette formation est faite pour vous.\n\nNous développerons ensemble :\n- Un jeu de plateforme 3D type Mario avec le langage C#\n- Un jeu de plateforme 3D type Monkey Ball avec le langage GDScript\n- Un FPS en 3D type rétro avec le langage C#\n- Un jeu 2D en vue de côté avec le langage GD Script\n- Un City Builder 3D type Theme Park avec le langage GD Script\n- Et des mini projets 2D/3D en vrac\n\nGodot 4 est le moteur de jeux libre par excellence. Cette formation vous permettra d'apprendre à utiliser ce logiciel et à programmer avec GDScript, un langage très proche de Python. La version Mono de Godot propose quant à elle le langage C#.\nLa première partie est dédiée à l'apprentissage des bases afin de mettre tout le monde à niveau puis, dans la seconde partie, nous allons approfondir nos connaissances et développer un jeu 3D. Enfin, 4 autres projets complets suivront après le projet principal afin de vous permettre d'apprendre, de pratiquer et d'avoir de nombreuses références concrètes pour votre portfolio.\n\nVous n'avez pas besoin de connaissances particulières pour suivre cette formation, il vous faut simplement l'envie d'apprendre à créer des jeux. Godot 4 fonctionne sur tous les systèmes d'exploitation et vous permettra de compiler vos jeux pour les plateformes les plus courantes.\n\nVous apprendrez toutes les notions essentielles :\nInstancier des objets\nImporter des modèles 3D\nCoder avec GD Script ou C#\nMettre en place un personnage\nGérer les inputs clavier/souris\nProgrammer la caméra\nCréer des éléments interactifs\nMettre en place la lumière et l'éclairage\nAméliorer les graphismes\nAnimer des objets et personnages\nGérer les collisions\nUtiliser les materials\nJouer du son\nChanger de niveau\nCréer un menu\nCompiler et partager le projet\nLa liste n'est pas exhaustive car le contenu de ce cours est trop riche pour que tout puisse être listé ici. Je vous invite donc à consulter les quelques vidéos gratuites ainsi que le sommaire du cours pour prendre connaissance de son contenu.\n\n\nEn très bref, voilà ce que présente chaque atelier :\n- Le clone de Mario présente comment créer un personnage 3D qui peut se déplacer dans un environnement 3D. Il est possible d'interagir avec des objets, ouvrir un coffre, ramasser une clé, ouvrir une porte, sauter sur un interrupteur, activer une plateforme, sauter sur des ennemis etc.\n- Le clone de Monkey Ball montre comment créer un jeu dans lequel une boulle peut rouler dans un monde 3D. Le but du jeu est de ramasser des pots de peinture pour colorer la boulle afin d'être en mesure de traverser des portails magiques colorés si on a la bonne couleur.\n- Le clone de Theme Park / Roller coaster tycoon présente comment créer un jeu de gestion dans lequel on peut construire des attractions/bâtiments. Les visiteurs du parc vont entrer dans les attractions et cela rapportera de l'argent ce qui permettra d'acheter d'autres bâtiments. Le tout se passera sur une grille avec des cases constructibles.\n- Le FPS 3D montre comment recréer un FPS (jeu de tir) en 3D rétro un peu comme à l'époque de la PS1 ou de la Nintendo 64. Nous verrons comment coder l'arme, le tir, les ennemis, les médikits etc.\n- Le jeu 2D en vue de côté vous permettra d'apprendre à utiliser les outils 2D de Godot ainsi que le langage GDScript qui est très proche du langage Python. Si vous connaissez déjà Python, vous pourrez très facilement prendre en main GD Script.\n\n\nEt de nombreuses vidéos complémentaires sont disponibles pour vous aider à approfondir certains sujets.\nJe suis l'auteur du livre \"Développer des jeux avec Godot 4\" paru aux éditions d-booker et j'ai tout mis en œuvre pour créer la meilleure formation sur Godot Game Engine possible.\n\n\nC'est LA formation francophone la plus complète que vous pouvez trouver sur le net sur Godot alors n'attendez plus, rejoignez ce cours et lancez vous dans la création de jeux avec Godot Engine !\nCredit : Personnage de Godette par Pablo Dobarro.\n\nA tout de suite pour cette formation sur Godot 4 ultra complète !",
      "target_audience": [
        "Les curieux souhaitant apprendre le développement de jeux",
        "Les développeurs Unity ou Unreal souhaitant s'orienter vers Godot engine 4",
        "Les développeurs qui veulent utiliser un outil libre",
        "Ceux qui veulent apprendre les 2 versions de Godot existantes (standard / mono)"
      ]
    },
    {
      "title": "Fundamentos de desarrollo de videojuegos 3D con Unity 6 y C#",
      "url": "https://www.udemy.com/course/fundamentos-de-desarrollo-de-videojuegos-3d-con-unity-y-c/",
      "bio": "Aprende a crear videojuegos profesionales, atractivos y divertidos con este curso de Fundamentos de videojuegos en Unity",
      "objectives": [
        "Entender en su totalidad conceptos de programación en C# como Variables, estructuras de control & ciclos.",
        "Aprenderás desde CERO a programar videojuegos con Unity 3D y C#.",
        "Crear videojuegos visualmente atractivos y entretenidos.",
        "Animaciones, movimiento del personaje y de la cámara.",
        "Tendrás la capacidad de la resolución de errores y lógica orientada a los videojuegos.",
        "POO (programación orientada a objetos) en C#",
        "Importar modelos & animaciones de software externo para ser utilizados en diferentes proyectos."
      ],
      "course_content": {
        "Bienvenida": [
          "Plataforma de Udemy",
          "Comunicación exclusiva para alumnos",
          "Cronograma del curso"
        ],
        "Introducción a Unity": [
          "Intro a la sección",
          "Descarga e instalación de Unity Hub",
          "Descarga directa de versión de Unity para el curso (Opcional)",
          "Creación del proyecto",
          "Descarga de proyecto completo (Opcional)",
          "Interfaz de Unity 6, algo cambio?",
          "Interfaz de Unity",
          "Barra de información de Unity",
          "Menú principal de Unity",
          "Barra de herramientas de Unity",
          "Layout de Unity",
          "Ventanas principales del editor",
          "Ventanas del editor : Jerarquía - Hierarchy",
          "Ventanas del editor: Escena - Scene",
          "Ventanas del editor: Inspector",
          "Ventanas del editor : Juego - Game",
          "Ventanas del editor : Proyecto - Project",
          "Ventanas del editor : Consola - Console"
        ],
        "Practica 1 : Vaca": [
          "Introducción",
          "Creación de la vaca",
          "Introducción a las Transformaciones",
          "Posiciones Globales y locales",
          "Escala de los objetos",
          "Ventana de animación - Animation",
          "Animación a objetos simples",
          "Configuración de jerarquía de la vaca",
          "Animación de la vaca"
        ],
        "Practica 2 : Vaca + Escenario": [
          "Introducción",
          "Prefabs 1",
          "Prefabs 2",
          "Importar modelos 3D",
          "Administrador de paquetes",
          "Configuración de importación de modelos 3D",
          "Importar sprites",
          "Configuración de importación de sprites",
          "Terreno de unity",
          "Creación de escenario 1",
          "Creación de escenario 2",
          "Canvas de unity",
          "Canvas de unity: Puntos de anclaje",
          "Creación de menú principal",
          "Agregando sonidos al menú principal",
          "Fisicas: Rigidbody 3D",
          "Luces: Baking de luces para rendimiento",
          "!IMPORTANTE! Organizar todo lo que llevamos"
        ],
        "Practica 3 : Programación C#": [
          "Nuestro primer \"Hola mundo\"",
          "Estructura del primer script",
          "Variables 1",
          "Variables 2",
          "Comentarios",
          "Uso de variables",
          "Variables Globales y Locales",
          "Operadores",
          "Practica con strings",
          "Métodos 1",
          "Métodos 2",
          "Métodos 3",
          "Prioridad de operaciones",
          "Métodos con parámetros",
          "Condicionales 1",
          "Operadores de comparación",
          "Condicionales 2",
          "Condicionales 3",
          "Arrays",
          "Ciclos",
          "Practica 1 : Ciclos",
          "Practica 2 : Ciclos",
          "Arrays + Ciclos",
          "Objetos en C# Introducción",
          "Objetos en C# 1",
          "Objetos en C# 2",
          "Objetos en C# : Constructor",
          "Variables y Métodos estáticos",
          "Practica 1 : Variables y Métodos estáticos",
          "Herencia",
          "Cierre y aviso"
        ],
        "Practica 4 : C# + Unity + Proyecto 1": [
          "Introducción al scripting de Unity",
          "Métodos de Unity",
          "Mostrar variables en el Inspector",
          "Relación entre Objetos y Componentes de Unity",
          "Variables en el inspector de Unity",
          "Uso de variables en el inspector",
          "Componentes de Unity",
          "Mas componentes de unity",
          "Componente Rigidbody",
          "Detectar Colisiones en Unity",
          "Tags de Unity",
          "Detectar teclas (Input)",
          "Detectar Axis (Input)",
          "Mini proyecto : Configuración",
          "Mini proyecto : Movimiento del personaje",
          "Mini proyecto : Pulido de mecánica de movimiento",
          "Mini proyecto : Collectables",
          "Mini proyecto : Puntaje",
          "Mini proyecto : Estética",
          "Mini proyecto : Triggers"
        ],
        "Proyecto 2 : Recoger pollos": [
          "Introducción",
          "Configuración",
          "Movimiento del personaje",
          "Limites del juego",
          "Instanciar GameObjects",
          "Controlar la creación de GameObjects",
          "Posiciones Aleatorias para las Instancias",
          "Mini pendientes del juego",
          "Colisiones",
          "Interfaz de usuario UI",
          "Limpieza de codigo",
          "Transición de escenas",
          "Flujo del aplicativo",
          "Importar recursos 3D",
          "Sustituyendo los PlaceHolders 3D",
          "Animaciones de personajes",
          "Controlando animaciones con Scripts",
          "Como modificar animaciones",
          "Calcular Luces",
          "Música y efectos de sonido",
          "Compilar proyecto"
        ],
        "Proyecto 3: Cross Chicken": [
          "Creación del Proyecto",
          "Descarga de Assets",
          "Prototipado de nuestro Juego",
          "Movimiento de personaje",
          "Sistema de trafico 1",
          "Time deltatime que es?",
          "Sistema de trafico 2",
          "Resetear la posición de la gallina",
          "Limites del juego",
          "Explicación y configuración de GoalPos",
          "Mecánica de GoalPos",
          "LevelController inicial",
          "Limpieza de código 1",
          "Que son dependencias?",
          "Detener a nuestro jugador",
          "Guardar el mejor tiempo",
          "Creando el menú de Game Over",
          "Script del menú Game Over",
          "Limpieza de código : Refactor 1",
          "Refactor 2",
          "Refactor 3",
          "Eventos de botones en modo Game",
          "Creación de Menú principal",
          "Eventos en menú principal",
          "Cambiando los PlaceHolders de la UI: Menu principal",
          "Cambiando los PlaceHolders de la UI: Game",
          "Cambiando los PlaceHolders 3D",
          "Calculo de luces",
          "Animación de la gallina",
          "Transiciones de las animaciones"
        ],
        "Proyecto 4 : Juego de Granja": [
          "Descarga de proyecto completo (Opcional)",
          "Creación de nuestro proyecto en unity",
          "Descarga y configuración inicial de recursos",
          "Prototipado de nuestro Juego",
          "Cambio de aspecto del juego 1",
          "Cambio de aspecto del juego 2",
          "Cambio de aspecto del personaje",
          "PostProcesado de nuestro Juego",
          "Introducción al Sistema de Construcción",
          "Configuración inicial del sistema de construcción",
          "Sistema de construcción 1",
          "Sistema de construcción 2",
          "Sistema de construcción 3",
          "Introducción al sistema de plantas",
          "Configuración inicial del sistema de plantas",
          "Sistema de plantas 1",
          "Sistema de plantas 2",
          "Introducción al sistema recolector",
          "Sistema recolector 1",
          "Sistema recolector 2",
          "Sistema recolector 3",
          "Sistema recolector 4",
          "Introducción al sistema de canastas",
          "Sistema de canastas 1",
          "Sistema de canastas 2",
          "Sistema de canastas 3",
          "Sistema de canastas 4",
          "Introducción al movimiento del personaje",
          "Movimiento del personaje 1",
          "Movimiento del personaje 2",
          "Movimiento del personaje 3",
          "Animaciones del personaje 1",
          "Animaciones del personaje 2",
          "Animaciones del personaje 3",
          "Configuración inicial de IA",
          "Navegación del agente IA 1",
          "Navegación del agente IA 2",
          "Comprador de nuestra granja",
          "Animaciones de IA 1",
          "Animaciones de IA 2",
          "Ejercicio problema",
          "Solución al problema",
          "Ganando dinero",
          "Caja registradora",
          "Economía de nuestra granja",
          "Orquestador de IA 1",
          "Orquestador de IA 2",
          "Orquestador de IA 3",
          "Orquestador de IA 4",
          "Orquestador de IA 5",
          "Orquestador de IA 6",
          "Estados de nuestra IA 1",
          "Estados de nuestra IA 2",
          "Estados de nuestra IA 3",
          "Solución de errores con IA",
          "Manejar acumulación de IA",
          "Configuración inicial de la cola de compradores 1",
          "Cola de compradores 2",
          "Cola de compradores 3",
          "Seguimiento de la cámara del personaje",
          "Economía del juego funcionando al 100",
          "Últimos retoques"
        ]
      },
      "requirements": [
        "Todas las ganas del mundo por aprender sobre programación y desarrollo de videojuegos (no se necesita experiencia previa).",
        "Tener un ordenador o portátil cuanto mas potente mejor.",
        "Todas Las herramientas y recursos utilizadas en el curso son gratuitas"
      ],
      "description": "¡Bienvenido al curso definitivo de Fundamentos de Unity con C#! En este curso, te sumergirás en el fascinante mundo del desarrollo de videojuegos utilizando Unity, el motor de juegos líder en la industria.\n\n\nComenzaremos desde cero, familiarizándonos con la interfaz de Unity y explorando cada una de sus ventanas y herramientas esenciales. Desde el Layout predeterminado hasta las ventanas de Inspector, Jerarquía, Juego, Consola, Proyecto y Escena, te garantizamos una comprensión profunda que te permitirá sentirte cómodo y confiado al trabajar dentro del motor.\n\n\nA medida que avanzamos, abordaremos prácticas y proyectos que te llevarán desde conceptos básicos hasta la creación de experiencias de juego completas. En la Práctica 1, te sumergirás en temas cruciales como transformaciones, manipulación de GameObjects y animaciones. Luego, en la Práctica 2, explorarás prefabricados, importación de modelos 3D, gestión de paquetes, terrenos, interfaces de usuario, sonidos, físicas y luces.\n\n\nEn la Práctica 3, nos adentraremos en los fundamentos de la programación en C#, abordando variables, operadores, métodos, condicionales, matrices y programación orientada a objetos. La Práctica 4 te llevará a la combinación perfecta de C# y Unity, donde aprenderás a mostrar variables en el inspector, entender la relación entre la POO y los componentes de Unity, y trabajar con componentes esenciales como Rigidbody, Colliders, tags e input detection.\n\n\nNos sumergiremos en nuestro Primer proyecto, donde aplicarás todo lo aprendido hasta ahora para crear un juego desde cero. Desde el movimiento de personajes hasta la manipulación de animaciones, sonidos y efectos visuales, aprenderás a desarrollar un flujo de juego fluido y emocionante.\n\n\nFinalmente, nos embarcaremos en nuestro Proyecto final, donde pondremos a prueba todas las habilidades aprendidas al crear un cautivador juego de una granja. Desde el cultivo y la cosecha de productos hasta la gestión de la venta y la interacción con la IA que compra los productos, los estudiantes crearán una experiencia de juego completa desde cero.\n\n\nCon instrucción paso a paso, ejercicios prácticos y proyectos desafiantes, este curso te proporcionará las habilidades y la confianza necesarias para convertirte en un desarrollador de juegos competente y exitoso en Unity con C#. ¡Únete ahora y comienza tu viaje hacia la creación de tus propios mundos virtuales!",
      "target_audience": [
        "A todos los que quieran empezar a programar Videojuegos 3D a Nivel Profesional.",
        "Desarrolladores que quieran redireccionar su carrera al desarrollo de videojuegos.",
        "Principiantes en desarrollo de videojuegos que quieran tener bases de programación más sólidas."
      ]
    },
    {
      "title": "Unity 3D podstawy - 5 przykładowych gier",
      "url": "https://www.udemy.com/course/unity-3d-podstawy-5-przykadowych-gier/",
      "bio": "Arkanoid - Endless Runner - Kółko i krzyżyk - Split Screen Shooter - Navigation",
      "objectives": [
        "Kurs wideo 5 minigier w Unity 3D przeprowadzi Cię przez wiele podstawowych mechanik gamedev'u w Unity 3D - od najprostszych technik wejścia dla poruszania paletką, jak na przykład input get access, przez 2D controller, mechaniki, takie, jak podwójny skok, modyfikacje wejścia standardowego dla dwóch graczy, do systemów eventów w UI i physics raycaster'ów. Omówimy i wykorzystamy elementy fizyczne, takie, jak rigid body czy collidery. To wszystko i jeszcze więcej doprowadzi nas do stworzenia mechaniki Arkanoida, prostego Endless Runnera - z mechaniką scrollowania paralaksy - mechaniki gier typu szachy w UI oraz strzelania i podstawowej mechaniki gier RPG, czyli poruszania postacią za pomocą myszki."
      ],
      "course_content": {
        "Wstęp": [
          "Intro"
        ],
        "Poradnik 1 - Arkanoid": [
          "Intro",
          "1 - Wprowadzenie i podstawowe obiekty sceny",
          "2 - Poruszanie paletki",
          "3 - Poruszanie paletki CZ.2",
          "4 - Trigger i rejestrowanie utracenia piłeczki",
          "5 - Resetowanie gry, warunki przegranej",
          "6 - Zbieranie punktów"
        ],
        "Poradnik 2 - 2D Endless Runner": [
          "Intro",
          "1 - Omówienie projektu",
          "2 - Asset Store, podstawy tworzenia postaci gracza 2D",
          "3 - Inne podstawowe obiekty sceny",
          "4 - Ruchome podłoże w grach typu endless runner 2D",
          "5 - Kontrola postaci",
          "6 - Przeszkody, kolizje, eksplozje",
          "7 - UI, stan pauzy, zakończenie gry",
          "8 - Tło, mechanika podwójnego skoku",
          "9 - Inne podejścia do animacji 2D"
        ],
        "Poradnik 3 - Kółko i Krzyżyk w UI": [
          "Intro",
          "1 - Tworzenie planszy",
          "2 - Tworzenie i stawianie pionków",
          "3 - Logika dwuosobowej turowej gry planszowej",
          "4 - Funkcja CheckVictory - Zaawansowane możliwości C#",
          "5 - Stany Gry",
          "6 - Main Menu i przejścia między UI",
          "7 - Ustawienia gry",
          "8 - Ustawienia rozdzielczości",
          "9 - GridLayout i Dalsza rozbudowa gry"
        ],
        "Poradnik 4 - Split Screen Shooter": [
          "Intro",
          "1 - Modele 3D, 3D Character Controller",
          "2 - Input Settings, Sterowanie dla dwóch graczy",
          "3 - Konfiguracja kamery",
          "4 - Podstawy strzelania",
          "5 - Efekty strzału",
          "6 - Object Pooling",
          "7 - Własne Eksplozje",
          "8 - Śmierć gracza, pasek życia",
          "9 - Mikser, Skybox, Przeszkody",
          "10 - Raycast Shooting"
        ],
        "Poradnik 5 - Navigation": [
          "Intro",
          "1 - Podstawy Navigation System i Root Motion",
          "2 - Łączenie nawigacji i animacji",
          "3 - Event System i jego interfejsy",
          "4 - Atak i docelowa rotacja postaci",
          "5 - Atak, Śmierć, AICharacterController"
        ]
      },
      "requirements": [
        "Podstawy posługiwania się komputerem"
      ],
      "description": "Tworzenie gier w Unity 3D choć na pierwszy rzut oka może wydawać się skomplikowane, w rzeczywistości wcale takie nie jest. W tym kursie wideo poznasz podstawowe tajniki gamedev'u w Unity 3D i w efekcie stworzysz 5 minigier z mechaniką znaną z Arkanoida, Endless Runnera, szachów czy gier RPG. Gotowy na wyzwania i dobrą zabawę? Zatem do dzieła!\n\nKurs wideo 5 minigier w Unity 3D składa się z pięciu części, z których każda kończy się samodzielnym stworzeniem gry:\nArkanoid - w pierwszej części kursu wideo stworzymy prostą grę, opierając się wyłącznie na prostych assetach z Unity 3D oraz na prymitywach dostępnych na początek. Gra będzie miała mechanikę znaną z Arkanoida. Zdefiniujemy sobie fizykę, by kulka odbijała w odpowiedni sposób, nauczymy się używać podstawowego inputu, by poruszać paletką oraz zdefiniujemy triggery, które pozwolą nam zliczać punkty czy przegrane życia. Stworzymy też bardzo prosty interfejs w postaci liczników.\nEndless Runner - w drugiej części kursu wideo stworzymy prostą grę w stylu znanego Endless Runner 2D. Zawrzemy w niej prostą maszynę stanów animacji postaci, łącznie z podwójnym skokiem oraz umieraniem. Sprawimy, że nasza gra uruchamiać się będzie ponownie po zakończeniu oraz dodamy proste menu pauzy, z możliwością zatrzymywania gry w dowolnym momencie. Wszystkie komponenty i różne typy animacji 3D będą darmowymi assetami z Asset Store'a. Dodatkowo, przyjrzymy się podstawowym funkcjom komponentu Animation.\nKółko i krzyżyk w UI - w trzeciej części kursu wideo skupimy się na wykorzystaniu UI. Stworzymy menu główne z przejściami między stanami. Wykorzystamy między innymi takie kontrolki, jak slidery, listy rozwijane czy checkboxy. Zajmiemy się również tym, by nasza gra działała na różnych rozmiarach ekranów, przy różnych rozdzielczościach. Końcowym efektem będzie proste, parametryzowalne kółko i krzyżyk, z w pełni działającym menu.\nSplit Screen Shooter - w czwartej części kursu wideo opowiemy sobie o podstawach pracy z modelami 3D, między innymi o animacjach humanoidalnych i wykorzystaniu systemu avatarów do retargetowania ich między modelami. Zajrzymy również do słynnej paczki standardowych assetów i przyjrzymy się nieco jej zawartości. Dodamy do naszej sceny takie elementy, jak character controller, który pozwala na łatwe sterowanie postacią w stylu starych gier, jak Doom. Dodatkowo stworzymy system strzelania z dźwiękiem oraz efektami trafień, wykorzystujący object pooling do optymalizacji. Efektem końcowym będzie rozgrywka dla dwóch osób na podzielonym ekranie. Zajmiemy się również interfejsem i odpowiednią pracą kamer w tego typu grach.\nNavigation - w ostatniej, piątej części kursu wideo stworzymy prostą grę z fragmentem mechaniki gry strategicznej bądź RPG, czyli sterowaniem postacią za pomocą myszki. Będzie ona zawierała takie elementy, jak przeskoki dziur, sterowanie, łącznie z ustawianiem obrotu czy prosta walka. W tym celu wykorzystamy system nawigacji w Unity 3D, dowiemy się trochę o wypalaniu jej, o agentach, przeszkodach czy off-mesh linkach, służących na przykład do przeskoków.\nJesteś gotowy na świetną zabawę połączoną z praktyczną nauką gamedev'u? W takim razie zaczynamy nasz kurs wideo i wspólnie tworzymy 5 minigier w Unity 3D! Nie wierzysz, że możesz zrobić to sam? Wspólnie urzeczywistnijmy Twoje marzenia o przygodzie z gamedev'em!",
      "target_audience": [
        "Kurs wideo 5 minigier w Unity 3D został stworzony z myślą o osobach, które dopiero chcą zacząć swoją przygodę z game developmentem. Doświadczony twórca gier przeprowadzi Cię przez podstawowe funkcje Unity 3D"
      ]
    },
    {
      "title": "Criação de arte para games",
      "url": "https://www.udemy.com/course/criacao-de-arte-vetorizada-para-games/",
      "bio": "Aprenda como criar todos os elementos desde cenários, objetos de cena, background até personagens para jogos 2D",
      "objectives": [
        "Você aprenderá a criar objetos, personagens, plataformas, botões e backgrounds para o seu jogo 2D.",
        "Você aprenderá a criar gráficos de qualidade para jogos 2d, que podem ser utilizados em seus jogos ou até mesmo vendidos em lojas online de assets."
      ],
      "course_content": {
        "Introdução": [
          "Importante",
          "Ferramentas utilizadas para vetorizar",
          "Qual ferramenta iremos utilizar neste curso?"
        ],
        "Cores": [
          "Teoria das cores",
          "Circulo Cromático",
          "Como usar o circulo cromático"
        ],
        "Figuras Geométricas em tudo": [
          "Identificando figuras geométricas"
        ],
        "Interface": [
          "Conhecendo a interface",
          "ferramentas de desenho",
          "Transformação e alinhamento",
          "Path"
        ],
        "Criação de UI": [
          "Painel - 01",
          "Painel - 02",
          "Painel - 03",
          "Painel - 04",
          "Painel - 05",
          "Botões - 01",
          "Botões - 02",
          "Botões - 03",
          "Text Box 01",
          "Text Box 02",
          "Text Box 03",
          "Text 01",
          "Text 02",
          "Text 03"
        ],
        "Elementos de cena": [
          "Montanhas 01",
          "Montanhas 02",
          "Montanhas 03",
          "Background - Céu",
          "Background - Nuvens",
          "Árvores 01",
          "Árvores 02",
          "Árvore 03",
          "Árvore 04"
        ],
        "Tiles": [
          "Tiles 01",
          "Tiles 02"
        ],
        "Objetos de Cena": [
          "Poção",
          "Bomba",
          "Caneca"
        ],
        "HUD": [
          "Hud 01",
          "Hud 02"
        ],
        "Armas": [
          "Espada",
          "Martelo",
          "Arma de fogo"
        ]
      },
      "requirements": [
        "Você precisará apenas de um computador, mouse e teclado, o uso da mesa digitalizadora para desenhar é opcional.",
        "Utilizaremos no curso a ferramenta de edição de imagens, vetores e criação de ilustrações gráficas Gravit Designer (ferramenta gratuita)."
      ],
      "description": "Para você desenvolvedor que deseja aprender a criar suas próprias artes ou para você artista 2D que deseja aprimorar suas técnicas ou aprender a trabalhar nessa ferramenta de edição de imagens, vetores e criação de ilustrações gráficas que roda em paralelo ao seu navegador de internet ou que você pode fazer o  download , Gravit Designer é a solução para seus problemas.\nCom ferramentas e efeitos muito similares aos encontrados em softwares de edição robustos como Adobe Photoshop, Illustrator ou Corel Draw, Gravit Designer se torna uma boa alternativa, sendo mais leve e intuitiva, sem exigir um computador com desempenho excepcional.\nGravit Designer conta também com um vasto banco de imagens e tipografia grátis, além de ser compatível com os tipos de mídia digital mais utilizados hoje em dia. Sua biblioteca contém diversos modelos e templates que podem ser utilizados como inspiração ou como incremento para seus trabalhos. Você pode importar vetores e imagens do seu computador ou da internet; ou seja, são infinitas as possibilidades para as suas criações.\nNesse curso você irá aprender a dominar essa ferramenta e terá todas as instruções para fazer arte para games, você irá aprender todos os elementos necessários para criar toda a arte dos seus jogos, desde botões, barra de vida, plataformas, background, objetos de cena, entre muitas outras coisas.\nO curso passará por constante atualização, sempre trazendo novidades sobre a ferramenta.\nNão perca tempo e se inscreva agora mesmo!",
      "target_audience": [
        "Desenvolvedores que queiram aprender a criar suas próprias artes para seus jogos 2D.",
        "Artistas que desejem aprender ou aprimorar suas técnicas para a criação de artes para jogos 2D."
      ]
    },
    {
      "title": "Créer des jeux avec Python",
      "url": "https://www.udemy.com/course/creer-un-jeu-simple-avec-python/",
      "bio": "Programmer de petits jeux avec Python, du terminal au graphisme",
      "objectives": [
        "Revoir vos acquis sur Python",
        "Programmation objet",
        "Programmation d'une interface graphique avec PyGame"
      ],
      "course_content": {
        "Introduction": [
          "Message de bienvenue",
          "Introduction"
        ],
        "Bien se préparer pour Commencer": [
          "Installation de Python",
          "Installation Windows",
          "Installation Mac",
          "Installation Linux",
          "Comment éditer les codes source",
          "Comment trouver les sources du cours sur GITHUB",
          "Utilisation de GitHub"
        ],
        "Le jeu des allumettes": [
          "Présentation du projet",
          "Version alpha, je jeu fonctionne...",
          "Version beta, je jeu fonctionne et devient intelligent",
          "Version POO, Programmation Orienté Objet",
          "Version Graphique avec l'utilisation de PyGame"
        ],
        "Carrés magiques": [
          "Présentation",
          "Tentative de résolution",
          "L'algorithme de création des carrés magiques en quelques mots",
          "Commentaires sur la création d'un script Python",
          "Mise en place et clarification Pythonesque",
          "Mise en place de la structure du script",
          "Création du tableau de jeu",
          "Coming Soon!"
        ],
        "Alunissage": [
          "Présentation du projet",
          "Création de la structure standard du script",
          "Création d'une classe pour le module lunaire",
          "Une petite réflexion sur la structure du jeu, Python façon pseudo code",
          "Création de la classe Alunissage pour gérer les différentes parties du jeu",
          "Création de la méthode EnVol dans la classe Alunissage",
          "Création de la méthode Affichage dans la classe Alunissage",
          "Création de la méthode Pilotage de la classe Alunissage",
          "Création de la méthode Résultat de la classe Alunissage",
          "Création de la méthode Simulation de la classe Alunissage",
          "Quelques améliorations de jouabilité et debug",
          "Régler le problème de l'input",
          "On ajoute l'affichage des résultats finaux",
          "On fait le point avant de continuer",
          "Résolution des problèmes de la méthode Affichage",
          "Correction du bug \"Altitude négative\"",
          "Rassemblement des messages de jeu dans la méthode Affichage",
          "Amélioration de la gestion de la poussée par rapport au carburant brulé",
          "La classe Module devient paramétrable",
          "La classe Alunissage gère des niveaux",
          "Finalisation du jeu avec un nouvel affichage plus complet des niveaux",
          "La suite arrive bientôt"
        ],
        "Craps": [
          "Avant de commencer",
          "Pésentation du jeu de craps",
          "Préparation",
          "Coder en Python, c'est pseudo coder",
          "Un peu de nettoyage",
          "Mise en place de la méthode miser()",
          "On peaufine miser()",
          "et on termine enfin miser()",
          "Méthode lancer()",
          "Méthode lancer() avec d'abord l'affichage des règles du jeu",
          "La méthode analyse() c'est maintenant",
          "C'est enfin le moment de tester",
          "Corrections sur la méthode analyse()",
          "On refait une session de tests",
          "On améliore l'affichage... et on teste",
          "La grande boucle",
          "Test de la grande boucle et mise au point",
          "Finalisation",
          "Un dernier mot",
          "Ce n'est pas fini !",
          "Cette fois, nous avons un CRAPS qui répond aux exigences des meilleurs Casinos"
        ],
        "Morpion": [
          "Présentation du morpion et de ce que nous allons réaliser",
          "On commence par le commencement la classe Morpion et __init__",
          "On choisi qui commence avec méthode",
          "Affichage du tablea de jeu",
          "Mise en place de la boucle du jeu",
          "Enregistrement de l'état et de l'avancement du jeu",
          "Gestion du joueur humain",
          "La méthode terminée et son fameux bug",
          "Résolution du bug terminée",
          "Mise en place du jeu de l'ordinateur",
          "Coming Soon !"
        ],
        "Acey Ducey": [
          "Coming soon!"
        ],
        "Conclusion": [
          "Bravo et à bientôt !",
          "Session Bonus"
        ]
      },
      "requirements": [
        "Il vaut mieux déjà connaitre (un peu) Python !",
        "Ce n'est pas un cours stricto sensu mais un accompagnement pour développer un petit jeu simple"
      ],
      "description": "Cette série de vidéos n'est pas un cours mais plutôt un projet de développement. Cela s'adresse à tous ceux qui ont déjà fait un cours Python, ou qui connaissent un peu le langage mais qui manquent d'idée pour se lancer.\nOn va construire ensemble quelques petits jeux tout simples, mais sympa. Pas à pas, je vous présente le problème à résoudre, je vous laisse coder et ensuite vous comparez votre solution avec la mienne.\nOn commencera dans le terminal avec du procédural, puis programmation orientée objet et enfin interface graphique avec PyGame.\nIl y a une rapide introduction pour installer Python, trouver les sources des programmes sur GitHub et nous attaquerons ensuite rapidement. Pas de bla bla, des résultats !\nVous pouvez voir la liste des jeux plus détaillée dans le programme du cours, voici ce que vous trouverez :\n- Jeu des alumettes\nUne sorte de 21, on joue contre l'ordinateur. Chacun à tour de rôle enlève une alumette. Celui qui prend la dernière a perdu.\n- Carrés magiques\nUn jeu mathématique pour produire des carrés dans lesquels la somme des lignes est égale à celle des colonnes et des diagonales. Un vrai casse tête !\n- Alunissage !\nUn petit jeu tout simple en apparence mais qui va nous emmener très loin (vers l'infini et au delà !).\nAux manettes de votre module lunaire, vous devez alunir en douceur en vous aidant des retro fusées et en utilisant le carburant (limité) à bon escient.\nC'est non seulement super intéressant à programmer mais également à jouer !\n- Morpion\nLe grand classique des salles de classe et des cours de programmation, passage obligé !\n\n\nRemarque Importante\nComme je l'ai écrit au début, ce n'est pas un cours sur Python. Si vous voulez apprendre ce langage, j'ai 2 excellents cours pour cela. Regardez bien dans la la liste des formations que je propose et envoyez moi un petit message, je fais toujours un petit cadeau à mes étudiants...",
      "target_audience": [
        "Développeurs Python débutants qui veulent se confronter à un projet de développement simple",
        "Pythoneurs curieux qui cherchent un petit challenge à relever"
      ]
    },
    {
      "title": "【한글자막】 Unreal Engine 5 C++: 고급 액션 RPG 구축하기!",
      "url": "https://www.udemy.com/course/unreal-engine-5-advanced-action-rpg-korean/",
      "bio": "Unreal Engine 5에서 C++를 사용하여 Gameplay Ability System(GAS)으로 고급 RPG 컴뱃 경험을 구축해보세요!",
      "objectives": [
        "강력한 melee 콤보 시스템(가벼운 공격과 강한 공격 포함)",
        "Gameplay Ability System을 활용하여 몰입감 있는 RPG 전투 경험 제공",
        "커스텀 BTTask, BTTDecorator, BTService를 사용한 고급 적 AI",
        "고급 AI 행동을 위한 환경 쿼리 시스템",
        "방향성 히트 반응 및 롤링",
        "Melee 블록 및 parry 시스템",
        "특수 무기 능력과 분노 능력(비용 및 쿨다운 포함)",
        "강력한 UI 알림 시스템",
        "적이 웨이브로 생성되는 생존 전투 게임 모드",
        "메인 메뉴, 일시 정지 메뉴, 승리/패배 화면 및 로딩 화면",
        "효율적인 타겟 잠금 시스템",
        "근접 및 원거리 능력을 가진 다양한 종류의 적",
        "전투를 위한 커스텀 C++ 능력 작업/지연 액션",
        "BP와 C++에서 비동기적 및 동기적 로딩을 사용하는 모범 사례",
        "데이터 중심의 전투 통계 설계",
        "산업 표준 코드 관행 및 쉽게 확장 가능한 코드 구조"
      ],
      "course_content": {
        "강의 소개": [
          "강의 소개",
          "자주 묻는 질문",
          "새로운 C++ 프로젝트 생성하기",
          "테스트 맵 셋업하기",
          "도움 받는 방법",
          "하드 및 소프트 레퍼런스"
        ],
        "히어로 캐릭터 셋업": [
          "히어로 캐릭터 셋업 섹션 개요",
          "기본 클래스 구조",
          "디버그 헬퍼",
          "히어로 카메라 설정",
          "네이티브 게임플레이 태그",
          "인풋 구성 데이터 에셋",
          "커스텀 강화 인풋 컴포넌트",
          "인풋 바인딩",
          "캐릭터 애니메이션 인스턴스",
          "히어로 AnimBP",
          "히어로 애니메이션 인스턴스",
          "게임플레이 능력 시스템",
          "능력 활성화 정책",
          "무기 클래스 설정",
          "히어로 무기 설정",
          "스타트업 데이터",
          "연동된 로딩",
          "과제 공유: 진행 상황 공유하기",
          "섹션 마무리"
        ],
        "Melee 콤보 시스템": [
          "Melee 콤보 시스템 섹션 개요",
          "이번 섹션의 목표",
          "폰(Pawn) 확장 컴포넌트",
          "스폰된 무기 등록",
          "히어로 게임플레이 능력",
          "능력 인풋 액션",
          "히어로 능력 세트",
          "능력 인풋 바인딩",
          "몬타주 재생 및 대기",
          "게임플레이 이벤트 기다리기",
          "애니메이션 레이어 인터페이스",
          "Anim 레이어 마스터",
          "Anim 레이어 연결",
          "기본 무기 능력",
          "무기 능력 부여",
          "Unequip 도끼 다루기",
          "가벼운 공격 능력",
          "콤보 로직",
          "강한 공격 능력",
          "강한 공격 로직",
          "워리어 함수 라이브러리",
          "피니셔로 점프하기",
          "슬로우 모션 및 사운드 효과",
          "진행 상황 공유: 콤보 시스템 공유하기",
          "섹션 마무리"
        ],
        "히어로 컴뱃": [
          "히어로 컴뱃 섹션 개요",
          "이번 섹션의 목표",
          "적 캐릭터 설정",
          "그런틀링 가디언",
          "비동기 로딩",
          "적 무기 생성",
          "속성 세트",
          "게임플레이 효과",
          "자기 자신에게 게임플레이 효과 적용",
          "적 속성 Init",
          "폰 컴뱃 인터페이스",
          "무기 충돌 토글",
          "무기 시작 오버랩 처리",
          "타겟 상호작용 처리",
          "근접 공격 히트 알림",
          "공격 몬타주 설정",
          "게임플레이 효과 스펙 핸들 만들기",
          "히어로 데미지 인포",
          "타겟에 효과 스펙 핸들 적용",
          "관련 속성 캡처",
          "히어로 데미지 정보 가져오기",
          "최종 데미지 계산",
          "강한 공격을 통한 데미지 설정",
          "체력 속성 수정",
          "히트 리액트 능력",
          "히트 리액트 능력 트리거",
          "머티리얼 히트 효과",
          "히트 일시정지",
          "카메라 흔들기",
          "히트 리액트 사운드",
          "게임플레이 큐",
          "적 사망 능력",
          "BP 사망 인터페이스",
          "용해 머티리얼 효과",
          "용해 Niagara FX",
          "진행 상황 공유: 진행 상황 공유하기",
          "폰 UI 컴포넌트",
          "값 변경 브로드캐스트",
          "브로드캐스팅 대기",
          "적 Init 생성 위젯",
          "템플릿 위젯",
          "상태 바 채우기 색상 설정",
          "템플릿 아이콘 슬롯 위젯",
          "히어로 오버레이 위젯",
          "적 체력 위젯 컴포넌트",
          "적 체력 바 숨기기",
          "무기 아이콘 업데이트",
          "최종 조정",
          "진행 상황 공유: 전투 공유하기",
          "섹션 마무리"
        ],
        "적 AI": [
          "적 AI 섹션 개요",
          "적 전투 준비",
          "군중 추적 컴포넌트",
          "AI 지각",
          "일반적 팀 ID",
          "행동 트리",
          "AI 회피 설정",
          "행동 트리 노드 유형",
          "옵저버 중단",
          "타겟 액터로 향하기",
          "환경 쿼리 시스템",
          "커스텀 쿼리 컨텍스트",
          "Strafing 상태 토글",
          "방향 계산",
          "Strafing 블렌드 스페이스",
          "성공 확률 계산",
          "Dot 프로덕트 테스트",
          "적 근접 공격 능력",
          "태그로 능력 활성화",
          "타겟이 적군인지 확인",
          "근접 공격 히트 알림",
          "적 데미지 효과 스펙 핸들 만들기",
          "적 데미지 적용",
          "모션 워핑(Motion Warping)",
          "모션 워프 타겟 업데이트하기",
          "네이티브 BT 태스크 생성",
          "태스크에서 적 회전",
          "근접 공격 브랜치",
          "액터에 태그 데코레이터가 있는지 확인",
          "지속 시간 게임플레이 효과",
          "모두 중단할지 결정하는 로직",
          "가디언 공격 사운드 효과",
          "진행 상황 공유: AI 공유하기",
          "섹션 마무리"
        ],
        "히어로 컴뱃 능력": [
          "히어로 컴뱃 능력 섹션 개요",
          "미리 계획하기",
          "투 키 인풋 액션",
          "마지막 이동 인풋 가져오기",
          "롤링 거리",
          "레벨에서 값 가져오기",
          "롤링 사운드 효과",
          "히어로 히트 리액트 능력",
          "히어로 히트 리액트 트리거",
          "히어로 히트 효과",
          "히트 리액트 방향 계산",
          "히트 리액트 태그",
          "게임플레이 태그로 스위치",
          "히트 리액트 사운드 효과",
          "히어로 블록 능력",
          "게임플레이 큐를 소유자에 추가",
          "유효한 블록인지 확인",
          "성공적인 블록 알림",
          "성공적인 블록 처리",
          "완벽한 블록인지 확인",
          "완벽한 블록 알림",
          "반격 시작하기",
          "진행 상황 공유: 블록 능력 공유하기",
          "타겟 잠금 능력 셋업하기",
          "타겟 잠금 토글",
          "사용 가능한 타겟 가져오기",
          "가장 가까운 타겟 가져오기",
          "타겟 잠금 위젯 그리기",
          "타겟 잠금 위젯 위치 설정",
          "틱에서 태스크 실행",
          "타겟 잠금 틱",
          "타겟 잠금 중 타겟을 향하도록 회전",
          "타겟 잠금 포즈로 전환",
          "타겟 잠금 걷기 속도",
          "타겟 인풋 액션 전환",
          "타겟 잠금 맵핑 컨텍스트",
          "타겟 전환 알림",
          "타겟 전환 처리",
          "히어로 죽음",
          "타겟 잠금 조정",
          "진행 상황 공유: 타겟 잠금 능력 공유하기",
          "섹션 마무리"
        ],
        "원거리 적": [
          "원거리 적 섹션 개요",
          "원거리 적 시작 무기",
          "Glacer 시작 스탯",
          "Glacer 히트 리액트",
          "원거리 행동 트리",
          "사격 위치 찾기",
          "투사체 능력",
          "투사체 클래스",
          "투사체 생성",
          "투사체 히트",
          "투사체 히트 처리",
          "투사체 스펙 핸들",
          "투사체 스펙 핸들 만들기",
          "투사체 사운드 효과",
          "Glacer 근접 능력",
          "막을 수 없는 공격",
          "진행 상황 공유: 원거리 적 공유하기",
          "컴뱃 테스트 맵",
          "섹션 마무리"
        ],
        "보스 적": [
          "보스 적 섹션 개요",
          "보스 캐릭터 셋업",
          "Giant 시작 스탯",
          "보스 바 위젯",
          "보스 바 화면에 그리기",
          "Giant 히트 리액트",
          "Giant 죽음",
          "보스 바 제거",
          "Giant 행동 트리",
          "Giant 근접전투 능력",
          "손 충돌 상자",
          "수정 후 변화 속성",
          "상자 충돌 토글",
          "Giant 두 번째 근접 능력",
          "Giant 콤보",
          "적 소환 대기",
          "소환 능력",
          "게임플레이 이벤트 기다리기",
          "비동기 로딩 및 적 소환",
          "회전 고정",
          "적 소환 중지",
          "적 등장 효과",
          "적 등장 몽타주",
          "현재 체력 백분율 확인",
          "진행 상황 공유: 보스 전투 공유하기",
          "섹션 마무리"
        ],
        "히어로 스페셜 능력": [
          "히어로 스페셜 능력 섹션 개요",
          "이번 섹션의 목표",
          "분노 능력 태그",
          "분노 능력 블루프린트",
          "분노 Anim 몽타주",
          "분노 게임플레이 큐",
          "활성화 조건",
          "분노 소비",
          "분노 슬래시 셋업",
          "분노 슬래시 소환",
          "분노 슬래시 시작 겹침",
          "모든 공격에 대해 분노 슬래시",
          "분노 얻기",
          "특수 무기 능력 태그",
          "특수 무기 능력 부여",
          "가벼운 능력 몽타주",
          "가벼운 능력 데미지",
          "쿨다운 게임플레이 효과",
          "능력 아이콘 위젯",
          "능력 아이콘 업데이트",
          "능력 아이콘 변화",
          "능력 쿨다운 알림",
          "사용자 정의 지연 작업",
          "카운트다운 액션 클래스",
          "카운트다운 액션 구성",
          "카운트다운 로직",
          "쿨다운 업데이트",
          "쿨다운 재개",
          "진행 상황 공유: 능력 쿨다운을 공유해주세요",
          "무거운 능력",
          "무거운 능력 몽타주",
          "무거운 능력 데미지",
          "AOE 데미지 적용하기",
          "능력 쿨다운 커밋하기",
          "돌 클래스",
          "BP 돌",
          "주워오기 능력",
          "돌 시작 겹침",
          "돌 모으기",
          "돌 인풋 소비하기",
          "돌 소비하기",
          "소비된 돌",
          "인풋 키 위젯",
          "인풋 키 디스플레이 브로드캐스트",
          "디스플레이 인풋 키 기다리기",
          "돌 능력 소환",
          "돌 로직 소환",
          "Glacer 돌 소환 확률",
          "진행 상황 공유: 진척 사항 공유하기",
          "섹션 마무리"
        ],
        "서바이벌 게임 모드": [
          "서바이벌 게임 모드 섹션 개요",
          "게임 모드 테스트 맵",
          "서바이벌 게임 모드 클래스",
          "적 웨이브 스포너 테이블 행",
          "웨이브 진행 로직",
          "웨이브 카운트다운 위젯",
          "웨이브 카운트다운 위젯 그리기",
          "웨이브 인포 위젯",
          "다음 웨이브 적 미리 로드",
          "웨이브 적 스폰 시도",
          "적이 파괴된 경우",
          "웨이브 완료 시",
          "게임 모드 플레이테스트",
          "스폰된 적 등록",
          "마지막 웨이브 알리기",
          "플레이어 사망 시",
          "게임 난이도",
          "게임 난이도 확인",
          "작업 공유: 서바이벌 게임 모드 공유",
          "섹션 마무리"
        ]
      },
      "requirements": [
        "Unreal에서의 기본적인 C++ 경험이 필요합니다."
      ],
      "description": "【한글자막】 Unreal Engine 5 C++: 고급 액션 RPG 강의에 오신 것을 환영합니다! 온라인 강의 중 가장 포괄적인 RPG 강의로, 업계 표준 코딩 관행과 데이터 중심 디자인을 활용하여 AAA 수준의 RPG 전투 경험을 만들어봅니다.\n\n\n이 강의에서는 게임플레이 어빌리티 시스템(GAS)을 사용하여 복잡한 RPG 전투 시스템을 구현하며, 가벼운/강한 공격 콤보 시스템, 방향성 구르기, 히트 리액션, 방어와 패링, 타겟 잠금, 쿨다운이 있는 특수 능력, AI 회피, 스트레이핑 및 투사체 공격을 사용하는 고급 적 AI, 그리고 에픽 보스전 등 다양한 기능을 추가할 것입니다.\n\n\n강의 구성\n\n\n첫 섹션에서는 게임플레이 어빌리티 시스템(GAS)을 설정하고, 네이티브 Gameplay Tags와 데이터 에셋을 활용하여 인풋 바인딩을 진행합니다. 이후, 캐릭터가 레벨을 탐색할 수 있도록 설정한 뒤, GAS와 연결된 애니메이션 레이어를 조합하여 가벼운/강한 공격을 포함한 근접 콤보 시스템을 구축합니다.\n이를 기반으로 적 캐릭터를 추가하고, 속성, 전투 피드백, 캐릭터 사망 처리, 강력한 UI 알림 시스템을 구현합니다. 또한 비동기 로딩으로 시작 데이터를 처리하고, 데미지 처리를 위한 커스텀 함수 라이브러리를 만드는 방법도 배웁니다.\n\n\n다음 단계에서는 블루프린트와 C++ 행동 트리 노드를 조합하여 AI 회피와 스트레이핑 같은 고급 AI 행동을 구현합니다. 군중 추적 컴포넌트를 사용하여 디투어 기반의 AI 회피를 설정하고, 행동 트리의 노드 유형 및 환경 쿼리 시스템을 활용하여 strafing 위치를 결정합니다.\n\n\n적들이 데미지를 줄 수 있게 된 후에는, 우리의 영웅 캐릭터를 더욱 강화합니다. 방향성 구르기, 히트 리액션, 방어, 패링, 타겟 잠금 기능을 추가합니다. Motion Warping을 활용하여 동적인 구르기 거리를 처리하고, 타겟 잠금 기능의 대부분을 C++로 구현하는 방법을 배웁니다.\n\n\n마지막으로는 투사체를 발사하고 접근 시 후퇴하는 원거리 적을 추가하며, 강력한 근접 공격 및 다른 적을 소환하는 능력을 갖춘 보스 캐릭터를 만듭니다. 전투 시스템이 완성되면, 적들이 웨이브 형태로 등장하는 생존 게임 모드를 개발합니다. 승리 화면, 패배 화면, 일시 정지 메뉴, 메인 메뉴 등 여러 위젯을 생성한 후, 모든 요소를 실제 맵으로 포팅하여 적과의 장대한 전투를 펼칩니다.\n\n\n왜 이 강의를 선택해야 할까요?\n이 강의는 온라인에서 찾아볼 수 있는 강의 중에서 가장 포괄적인 RPG 강의입니다. 각 강의마다 세부적인 코드 변경 사항이 제공되며, 단계별 접근 방식을 통해 RPG 프로젝트를 체계적으로 완성할 수 있습니다. 지금 바로 강의에 수강신청하시어 꿈꾸던 RPG 프로젝트를 시작해보세요!",
      "target_audience": [
        "액션 RPG 프로젝트를 구축하고 싶은 학습자",
        "C++ 스킬을 향상시키고 싶은 학습자",
        "깔끔하고 전문적이며 확장 가능한 코드를 작성하고 싶은 학습자"
      ]
    },
    {
      "title": "Unreal Engine 5: Curso de Desarrollo con C++ y Blueprints",
      "url": "https://www.udemy.com/course/unreal-engine-5-curso-de-desarrollo-con-c-y-blueprints/",
      "bio": "Descubre el Poder de C++ en Unreal Engine para Desarrollar Juegos",
      "objectives": [
        "Dominar la programación en C++ aplicada a Unreal Engine para crear juegos y aplicaciones interactivas.",
        "Crear sistemas de juego avanzados utilizando la arquitectura y herramientas de Unreal Engine.",
        "Implementar lógica de juego compleja y optimizar el rendimiento utilizando técnicas avanzadas de programación en C++.",
        "Comprender y aplicar los principios clave de diseño y desarrollo de juegos en Unreal Engine.",
        "Desarrollar habilidades para resolver problemas y depurar errores en proyectos de desarrollo de juegos en Unreal Engine con C++."
      ],
      "course_content": {},
      "requirements": [
        "No se necesita experiencia previa, sólo conocimientos básicos de informática básica."
      ],
      "description": "Curso dirigido por Sergio Domínguez, Instructor Autorizado de Unreal Engine certificado por Epic Games con más de 20 años de experiencia en la docencia y el desarrollo de videojuegos comerciales y educativos.\nSumérgete en el emocionante mundo de la creación de juegos con mi curso \"Unreal Engine 5: Curso de Desarrollo con C++ y Blueprints\". Este curso te llevará desde los conceptos fundamentales de la programación en C++ hasta convertirte en un experto en el desarrollo de juegos con Unreal Engine. Aprenderás a dominar las herramientas esenciales de Unreal Engine, aprovechando al máximo su potencial para la creación de experiencias de juego envolventes.\nCon un enfoque práctico y proyectos interactivos, este curso te guiará a través de la construcción de juegos 3D desde cero, proporcionándote las habilidades necesarias para materializar tus ideas creativas. Desde la creación de personajes y escenarios hasta la implementación de mecánicas de juego complejas, adquirirás un conocimiento sólido de programación en C++ aplicada a la industria del desarrollo de juegos.\nMi enfoque pedagógico se centra en la aplicación práctica de los conceptos aprendidos. A medida que avanzas en el curso, desarrollarás proyectos reales que te permitirán consolidar tus habilidades y adquirir una comprensión profunda de cómo la programación en C++ se integra de manera efectiva en el desarrollo de juegos.\nEs un curso que se toma su tiempo para explicar todo los conceptos para asegurar un aprendizaje significativo. Si buscas algo más rápido, olvida este curso, pues seguramente haya otras opciones más de tu gusto.\n¡Únete a mí y descubre cómo transformar tus ideas en juegos emocionantes y visualmente impactantes con la potente combinación de C++ y Unreal Engine! Prepárate para embarcarte en un viaje de aprendizaje estimulante y convertirte en un desarrollador de juegos versátil y competente.",
      "target_audience": [
        "Este curso está diseñado para desarrolladores y programadores que desean dominar la creación de juegos con Unreal Engine utilizando C++ como lenguaje de programación principal.",
        "Es ideal para estudiantes de programación y desarrolladores que buscan avanzar en sus habilidades en el desarrollo de juegos.",
        "También es adecuado para profesionales del sector de los videojuegos que desean actualizar sus conocimientos y aprovechar al máximo las capacidades de Unreal Engine con C++."
      ]
    },
    {
      "title": "Programowanie i grafika dla dzieci i początkujących -Scratch",
      "url": "https://www.udemy.com/course/programowanie-dla-dzieci/",
      "bio": "Naucz się Scratch 3.0. Twórz gry, aplikacje i dobrze się baw! Dla dzieci i początkujących, rodziców i nauczycieli!",
      "objectives": [
        "Twórz mądre i zabawne gry",
        "Twórz grafiki, animacje i fajne efekty wizualne",
        "Programuj - jedna z najważniejszych umiejętności!",
        "Zrozum złożone koncepcje informatyczne, intuicyjnie stosując je w grach",
        "Naucz się tekstowych języków programowania 2x - 10x szybciej"
      ],
      "course_content": {
        "Podstawowe bloczki": [
          "Witaj w Scratchu: Tworzenie Konta i Zapoznanie z Programem",
          "Nasze pierwsze skrypty - ruch",
          "Efekty specjalne"
        ],
        "Wojna Czołgów": [
          "Wprowadzenie i Mechanika Gry",
          "Tworzenie Duszków i Ruch",
          "Współrzędne i Klonowanie Rakiet",
          "Duplikowanie Duszków i Skryptów",
          "Zmienne i System Straty Żyć",
          "Zmiennych Ciąg Dalszy i Koniec Gry",
          "Prędkość Rakiet i Kończenie Gry"
        ],
        "Głodna Żaba": [
          "Wprowadzenie do gry",
          "Edytor Graficzny i Tworzenie Żaby",
          "Kierunek, Ruch oraz Animacja i Sterowanie",
          "Tło Gry - Jezioro i Liście",
          "Cieniowanie kwiatów",
          "Tworzenie Przeciwnika i Klatek Animacji",
          "Animacja, Ruch Ptaka i Losowanie Pozycji",
          "Współrzędne oraz Wyjaśnienie Samodzielnego Zadania",
          "Czujniki i Żaba Ginie",
          "Zmienne i Punktacja Gry",
          "Mucha i Kończenie Gry"
        ],
        "Mobilne Rysowanie": [
          "Wprowadzenie i pierwsze kroki",
          "Tworzenie Dolnego Menu",
          "Tworzenie Bocznego Menu",
          "Pisak i Komunikaty",
          "Programowanie Pisaka",
          "Wskaźnik Pisaka oraz Zmienne",
          "Programowanie Wskaźnika i Kończenie Aplikacji",
          "Uruchamianie na Urządzeniu Mobilnym"
        ]
      },
      "requirements": [
        "Poziom początkujący."
      ],
      "description": "Na tym kursie nauczymy się programować, zaczynając od podstawowych bloków. To nie żart! Scratch, język programowania, którego używamy (opracowany przez MIT), jest tak zabawny, że sprawia, że programowanie wygląda jak gra.\nNauczymy się, poprzez praktykę. Kurs został zaprojektowany tak, aby tworzyć gry i aplikacje własnymi rękami. Ale tym, co czyni ten kurs naprawdę wyjątkowym, jest metoda nauczania, którą stosuję na kursach stacjonarnych w Pixel Amber School przez ostatnie lata. Uczymy się różnych zagadnień informatycznych, ale ukrywamy ich złożoność za postaciami, animacjami i zabawą!\nTo dlatego, że podczas tych starannie zaprojektowanych lekcji ćwiczymy naszą intuicję, aby zrozumieć, co chcemy osiągnąć i jak się tam dostać. Pomoże nam to szybko opanować podstawy. Podczas tego kursu nauczysz się tekstowych języków programowania z niesamowitą prędkością i szybko zrozumiesz każdy fragment kodu.\nTreść została zaprojektowana z myślą o dobrej zabawie! Uczymy się tworzyć animacje i fajne efekty. Stworzymy gry: Wojna Czołgów i Głodna Żaba oraz aplikację Mobilne Rysowanie . Gry są starannie dobrane, aby zoptymalizować naukę programowania i grafiki komputerowej podczas zabawy. Będę również regularnie aktualizować kurs o nowe treści!\n\n\nTen kurs jest przeznaczony dla:\n- rodzice lub nauczyciele, którzy chcą nauczyć dzieci programowania i grafiki komputerowej, pozwalając im bawić się w tym czasie\n- dzieci i początkujący, którzy chcą nauczyć się programować gry i samodzielnie tworzyć do nich grafiki i animacje\n- każdy, kto nie miał kontaktu z programowaniem i nie wie od czego zacząć\n\n\nNie mogę się doczekać Ciebie na moim kursie!\n\n\nKurs jest regularnie aktualizowany o nowe materiały, porady i wskazówki, które możesz wykorzystać w swoich grach i projektach!",
      "target_audience": [
        "- Dzieci (od 8-15 lat)",
        "- Absolutni początkujący w programowaniu i informatyce"
      ]
    },
    {
      "title": "Unity VR 超入門 : C# と Unity を基礎から学んで VR ゲーム を作ろう！",
      "url": "https://www.udemy.com/course/unity-vr-unity-c-5-vr/",
      "bio": "C# と Unity をゼロから学んで、 VR ゲームを作っていきましょう。基礎から学んでいくのでプログラミング初心者でも大丈夫です。NavMeshを使ったゲームAI,アニメーションなどについても学べます。",
      "objectives": [
        "VRゲームを作ってビルド",
        "UnityとC#の基礎",
        "ゾンビシューティングゲーム",
        "Nav Meshを使ったゲームAI",
        "アニメーション",
        "銃を撃つ",
        "魔法を使う",
        "物を破壊",
        "アセットストア"
      ],
      "course_content": {
        "はじめに": [
          "このコースの概要"
        ],
        "Unityの導入": [
          "ソースコード",
          "Unityとは",
          "Unity Hubとは",
          "UnityHubをインストール",
          "サインインする",
          "ライセンス認証",
          "Unityをインストールする",
          "プロジェクトを作成",
          "レイアウトを変える",
          "Unityのインターフェースの説明",
          "オブジェクトを作る",
          "コンポーネント",
          "Visual Studioを使えるようにする",
          "スクリプト"
        ],
        "【新】Unityを使ったC#の基礎": [
          "ソースコード",
          "プロジェクトを作成",
          "変数",
          "文字列に変数を埋め込む",
          "関数",
          "定数",
          "配列",
          "foreach",
          "クラス",
          "アクセス修飾子",
          "継承",
          "名前空間",
          "if"
        ],
        "Unityの基礎": [
          "ソースコード",
          "プロジェクトを作成",
          "オブジェクトを移動させる",
          "オブジェクトの大きさを変える",
          "オブジェクトの色を変える",
          "物理現象の適用",
          "Update関数",
          "矢印キーで水平方向の入力",
          "矢印キーで垂直方向の入力",
          "スクリプトを追加したオブジェクトを取得する",
          "オブジェクトのコンポーネントを取得する",
          "オブジェクトに力を加える",
          "他のオブジェクトを取得する",
          "他のオブジェクトのコンポーネントを取得する",
          "オブジェクトとぶつかった時の処理",
          "オブジェクトとすれ違った時の処理",
          "オブジェクトを消す",
          "Prefab",
          "Canvas",
          "文字を表示する",
          "Tag",
          "【注意】次のレクチャーの補足",
          "スクリプトでTextの内容を変える",
          "スクリプトでシーンを読み込む",
          "Invoke",
          "画面サイズが変わっても同じように表示されるようにする",
          "Vector3"
        ],
        "玉転がし": [
          "今回作るゲーム",
          "ゲーム作りの流れ",
          "プロジェクトを作成",
          "地面を作る",
          "壁を作る",
          "オブジェクトをまとめる",
          "壁に色をつける",
          "Playerを作成",
          "物理現象の適用",
          "Playerの移動",
          "スピード調整",
          "CameraがPlayerを追いかけるようにする",
          "アイテムを設置する",
          "アイテムとすれ違ったら消えるようにする",
          "アイテムを複製する",
          "アイテム残り個数を表示",
          "ゲームクリア時の処理",
          "壁と当たった時の処理",
          "Game Over!と表示させる",
          "最初から始まるようにする",
          "数秒後に最初から始まるようにする",
          "画面サイズが変わっても同じように表示されるようにする",
          "上から表示されるようにする"
        ],
        "【VR】Oculus GoでVRアプリをビルドしよう！": [
          "【注意】Unityのバージョン",
          "プロジェクトを作成",
          "Oculus developer登録",
          "Oculus Goを開発者モードにする",
          "プラットフォームを切り替える",
          "Texture Compressionの変更",
          "XR Plugin Managementの設定",
          "Scripting Backendの変更",
          "オブジェクトを配置する",
          "【注意】次のレクチャーの無視する箇所",
          "VR機器で動かす",
          "前のレクチャーの補足",
          "OpenVR only supports linear lightingというエラーが出た場合",
          "API Levelの変更"
        ],
        "【VR】キャラクターに近づくアプリ": [
          "今回作るアプリ",
          "アプリ作成の手順",
          "Unityのバージョン",
          "プロジェクトの作成",
          "必要なアセットをインポートする",
          "キャラクターを配置する",
          "VR上で歩けるようにする",
          "コントローラーを表示させる",
          "VR機器で動かす"
        ],
        "【VR】魔法が使えるようになるアプリ": [
          "今回作るアプリ",
          "アプリ作成の手順",
          "プロジェクトの作成",
          "次のレクチャーの補足",
          "必要なアセットをインポートする",
          "魔法の種類をみてみる",
          "VR用のカメラを追加する",
          "次のレクチャーの修正",
          "コントローラーを追加する",
          "魔法を使えるようにする",
          "VR機器で動かす"
        ],
        "【VR】シューティングアプリ": [
          "今回作るアプリ",
          "アプリ作成の手順",
          "Unityのバージョン",
          "プロジェクトの作成",
          "必要なアセットをインポートする",
          "次のレクチャーの変更点",
          "銃を使ってみよう",
          "VR用のカメラを追加する",
          "次のレクチャーの変更点",
          "撃たれたら爆発するオブジェクトを作成",
          "次のレクチャーの変更点",
          "VR上で撃てるようにする",
          "次のレクチャーの変更点",
          "VR機器で動かす"
        ],
        "【VR】ゾンビシューティング": [
          "今回作るゲーム",
          "スクリプト",
          "ゲーム作成の手順",
          "プロジェクトの作成",
          "必要なアセットをインポートする",
          "インポートしたアセットを確認する",
          "環境を作る",
          "VR用カメラを配置する",
          "ゾンビが向かってくるようにする",
          "ゾンビが攻撃してくるようにする",
          "ゾンビを配置する",
          "ゲームオーバー画面を作る",
          "銃を配置する",
          "【注意！】次のレクチャーの訂正",
          "弾を当てたらゾンビを倒す",
          "VRコントローラーに対応させる",
          "VR機器で動かす"
        ]
      },
      "requirements": [
        "ゲームをビルドする場合はOculusGoが必要ですが、設定すれば他のVR機器でもビルドできます。"
      ],
      "description": "【コースの概要】\nコース内では、\nVR ゲームの作成とビルド\nゾンビシューティングゲームの作成\nVR 上で銃を打てるようにする\nVR 上で魔法を使えるようにする\nといったようなチャレンジをしていきます。\nまた、このために必要な Unity と C# の基礎, NavMeshを使ったゲームAI, , アニメーション, アセットストア の使い方などについても詳細に解説します。\nこの講座を受講したら、あなたはどんな VR ゲームを作りますか？",
      "target_audience": [
        "VRゲームを作ってみたい方",
        "ゲームを作ってみたいプログラミング初心者",
        "基礎的なことはわかったから、ゲームを実際に作ってみたい方"
      ]
    },
    {
      "title": "[게임기획]제임스킴의 RPG 게임밸런스 기획",
      "url": "https://www.udemy.com/course/rpg-ppft/",
      "bio": "[게임기획]제임스킴과 함께 하는 RPG게임 밸런스 만들기",
      "objectives": [
        "게임기획",
        "게임밸런스 기획",
        "RPG 밸런스",
        "RPG 전투 밸런스",
        "성장 밸런스"
      ],
      "course_content": {
        "액션 RPG 게임 전투 , 성장, 경제 밸런스": [
          "액션 RPG 게임 전투 , 성장, 경제 밸런스"
        ],
        "RPG 전투의 플레이 시간에 맞는 체력 분배하기": [
          "RPG 전투의 플레이 시간에 맞는 체력 분배하기"
        ],
        "MORPG 게임의 전투 공식": [
          "MORPG 게임의 전투 공식"
        ],
        "스테이지별 몬스터의 기준 능력치 설정하기": [
          "스테이지별 몬스터의 기준 능력치 설정하기"
        ],
        "아군 총 공격력 능력치 설정하기": [
          "아군 총 공격력 능력치 설정하기"
        ],
        "적군 총 방어력 및 체력 구하기": [
          "적군 총 방어력 및 체력 구하기"
        ],
        "적군의 총 피해량 구하기": [
          "적군의 총 피해량 구하기"
        ],
        "플레이어 캐릭터의 방어력 및 체력 구하기": [
          "플레이어 캐릭터의 방어력 및 체력 구하기"
        ],
        "PVP 콘텐츠에서의 매칭 밸런스 작업하기(엘로레이팅)": [
          "PVP 콘텐츠에서의 매칭 밸런스 작업하기(엘로레이팅)"
        ]
      },
      "requirements": [
        "게임 제작에 관심이 있으면 됩니다. 큰 요구 사항은 필요하지 않습니다."
      ],
      "description": "강의 주제\n게임에서 재미에 가장 관여하는 부분 중 하나는 바로 게임의 밸런스입니다.\n게임의 밸런스를 맞추는 방법을 여러 자료와 이미지 등을 이용하여 상세히 설명하고,\n게임의 밸런스를 더욱 쉽게 이해할 수 있도록 만들어줍니다.\n강의 주제\n따라하면 취업되는 게임기획 강의를 만든 제임스킴의 실전 게임밸런스 기획 강좌입니다.액션 MORPG게임의 전투 밸런스 / 성장 밸런스 / 전투 공식 / 엘로레이팅의 개념과 실전 적용 계산 방식을 담았고, 실제 밸런스 작업에 쓰인 엑셀데이터와 pdf 파일 교안을 제공합니다. 액션 MORPG게임 전투 밸런스, 아군/적군 공격력과 방어력 수준을 정하고 게임 밸런스에 필요한 여러 다양한 기준을 만들어 밸런스를 하나씩 맞춰 나갑니다.\n강의 기획 배경\n밸런스 기획 관련한 강좌가 현재는 매우 찾기가 힘들며, 실제로 어떻게 밸런스를 맞추는지 알기가 어렵습니다. 실무 관점에서 밸런스를 맞추는 과정을 아주 디테일하게 제공하며, 따라하며 밸런스 기획을 이해하고 실제 게임개발에 쓸 수 있도록 구성했습니다.\n지식공유자가 생각하는 수강생 유형\n밸런스 기획에 관심 있지만 기초지식이 없는 사람 (어떠한 방식으로 접근해야 할지 모르는 사람)\n전투 밸런스를 맞추는 방법에 대해 상세히 알고 싶어하는 사람\n시스템/콘텐츠를 제외한 더 깊은 게임 기획의 분야를 알고 싶어하는 사람\n밸런스 기획을 준비하고, 관련된 포트폴리오를 준비하고 싶어하는 사람\n게임개발을 하고 있는 프로그래머 / 1인 개발을 하고 있는 아티스트인데 , 밸런스를 어떻게 맞춰야 하는지 모르겠는 사람\n게임회사 창업을 해서 게임 출시를 준비하고 있는 사장님\n수강생의 고민\n게임 기획에서 밸런스는 상당히 중요한 부분이지만, 상세히 공부할 수 있는 방법이 딱히 존재하지 않습니다.\n또 관련된 책을 사서 공부한다고 해도, 어려운 내용을 이해하기에는 어렵죠\n전투 밸런스의 대해 상세히 공부하고 싶지만 다루는 매체는 많지 않습니다.\n수강생의 고민 해결 방법\n수강생은 본 강의를 보고, 전투 밸런스를 맞추기 위한 여러 기준을 세우는 방법을 알게 됩니다.\n강의를 보고 직접 수치를 맞춰보면서 전투 밸런스를 맞추는 방법을 스스로 터득하게 됩니다.\n강의를 보고 자신만의 기준을 만들고, 기준에 맞게 수치를 만들고, 엑셀 작업을 하다 보면\n전투 밸런스의 대한 지식이 생기고, 포트폴리오를 만들 수 있는 능력이 생길 것입니다.\n또한 제공된 엑셀 파일을 보고 분석해 보면서 신규 게임 개발을 할때 밸런스를 어떻게 맞출\n수 있을지 지식을 습득해 실제 게임 개발에 써먹을 수 있게 됩니다.\n제 강의만의 특별한 장점 ?\n게임기획에 관심만 있으면 수강 가능!\n게임기획서 작성법에 대해 아무것도 모르는 사람도 차근차근 준비가 가능합니다 알차게 담았다!\n기초 스킬 부터, 다양한 실제 자료까지 알차게 채워진 내용으로 이해하고 실제 적용 할 수 있도록 도와 드립니다.\n다양한 강의 자료 제공!\n동영상 강의와 함께 PDF교재를 제공하여, 동영상을 보고 PDF로 복습하면서 내용을 잘 흡수할 수 있습니다.\n또한 실제 게임 밸런스를 잡는데 쓰인 방대한 양의 엑셀 파일을 무료 제공합니다.\n학습 목표\n전투 밸런스가 무엇인지, 전투 밸런스에 필요한 요소들을 알게 됩니다.\n밸런스를 맞추기 위해 필요한 전투 요소와 기준들을 강의를 보고 직접 세워봅니다.\n맞춰진 기준에 맞을 수 있도록 플레이어 및 몬스터의 능력치 수준을 순서대로 맞춰 나갑니다.\n전투 공식을 이용하여, 공격력&방어력 수준의 맞게 어느정도 피해량을 줄 수 있는지 알아봅니다.\n각 피해 량의 스킬이나 기본 공격이 차지하는 비율을 보고, 적당한 수치로 맞춰 나갑니다.\n강의 특징 점\n1. 이미지 및 표, 수치, 그래프를 이용하여 전투 밸런스의 대한 내용을 쉽게 이해할 수 있게 합니다.\n2. 전투 관련된 공식을 알려주어, 공식이 작동하는 원리와 밸런스의 어떠한 영향을 주는지 알려줍니다.\n3. 엑셀 기능을 이용한 수식화 하는 방법을 쉽게 할 수 있도록 알려줍니다.\n4. 교안뿐 만 아니라 여러 과정을 통해 수치가 맞춰진 엑셀 파일을 같이 포함해서 제공합니다.\n기타 강의 특징 점\n전투 관련된 수치가 맞춰진 엑셀 파일도 같이 포함해서 제공하기 때문에 강의에 내용을 쉽게 이해할 수 있도록 도와줍니다.\n뿐만 아니라 전투에 관련된 요소들의 대해 세세하게, 이미지와 함께 설명하기에 지루하지 않고, 쉽게 이해할 수 있습니다.\n처음 밸런스 기획을 접하더라도, 전투 밸런스의 대해서 확실하게 이해할 수 있도록 합니다.",
      "target_audience": [
        "밸런스 기획에 관심 있지만 기초지식이 없는 사람 (어떠한 방식으로 접근해야 할지 모르는 사람)",
        "전투 밸런스를 맞추는 방법에 대해 상세히 알고 싶어하는 사람",
        "시스템/콘텐츠를 제외한 더 깊은 게임 기획의 분야를 알고 싶어하는 사람",
        "밸런스 기획을 준비하고, 관련된 포트폴리오를 준비하고 싶어하는 사람",
        "게임개발을 하고 있는 프로그래머 / 1인 개발을 하고 있는 아티스트",
        "게임회사 창업을 해서 게임 출시를 준비하고 있는 사장님"
      ]
    },
    {
      "title": "Giochi Android: crea e pubblica giochi per Android con Unity",
      "url": "https://www.udemy.com/course/giochi-android-crea-e-pubblica-giochi-per-android-con-unity/",
      "bio": "Crea da zero giochi in 3D e 2D per Android con Unity e pubblicali nel Play Store. Corso adatto a tutti, Android facile!",
      "objectives": [
        "Sarai in grado di creare da zero un gioco in 3d per Android",
        "Sarai in grado di creare da zero un gioco in 2d per Android",
        "Conoscerai più approfonditamente Unity",
        "Sarai in grado di pubblicare nuovi giochi nel Google Play Store",
        "Sarai in grado di implementare i Google Play Services con una LeaderBoard (classifica) nei tuoi giochi",
        "Sarai in grado di creare autonomamente la grafica base per le tue applicazioni"
      ],
      "course_content": {
        "Introduzione, Download e Installazione": [
          "Presentazione del Corso",
          "Download e Installazione di Unity",
          "Registrazione di un nuovo account e impostazione del primo progetto",
          "Cominciamo ad ambientarci in Unity"
        ],
        "Gioco in 3D \"Zig Zag\"": [
          "Creiamo i primi oggetti del gioco Zig Zag",
          "Creiamo lo Script Controller per la palla",
          "Facciamo muovere la palla",
          "Cambiamo direzione alla palla ad ogni click",
          "Facciamo partire la palla al primo click dell'utente",
          "Impostiamo il GameOver e la caduta della palla",
          "Facciamo in modo che la Camera segua la Palla (parte 1)",
          "Facciamo in modo che la Camera segua la Palla (parte 2)",
          "Facciamo cadere le piattaforme (Parte 1)",
          "Facciamo cadere le piattaforme (Parte 2)",
          "Creiamo le piattaforme (Parte 1)",
          "Creiamo le piattaforme (Parte 2)",
          "Impostiamo la creazione Random delle Piattaforme (Parte 1)",
          "Impostiamo la creazione Random delle Piattaforme (Parte 2)",
          "Creiamo dei diamanti random lungo il percorso (Parte 1)",
          "Creiamo dei diamanti random lungo il percorso (Parte 2)",
          "Creiamo un effetto Particle quando i Diamanti scompaiono ( Parte 1)",
          "Creiamo un effetto Particle quando i Diamanti scompaiono ( Parte 2)",
          "Creiamo la scritta iniziale e le animazioni (Parte 1)",
          "Creiamo la scritta iniziale e le animazioni (Parte 2)",
          "Creiamo il pannello start e l'animazione",
          "Creiamo il pannello GameOver e la animazione",
          "Implementiamo lo script per gli oggetti UI (Parte 1)",
          "Implementiamo lo script per gli oggetti UI (Parte 2)",
          "Implementiamo lo ScoreManager e il GameManager per la gestione del gioco (P. 1)",
          "Implementiamo lo ScoreManager e il GameManager per la gestione del gioco (P. 2)",
          "Mostriamo i punteggi tramite le label",
          "3 Challenge",
          "Svolgimento dei 3 Challenge (Parte 1)",
          "Svolgimento dei 3 Challenge (Parte 2)",
          "Aggiungiamo un effetto audio al gioco (Parte 1)",
          "Aggiungiamo un effetto audio al gioco (Parte 2)",
          "Download del Progetto Zig Zag"
        ],
        "Pubblichiamo Il Gioco": [
          "Prepariamo il nostro smarphone al debug",
          "Download e Installazione di Java JDK",
          "Download e Installazione di Android SDK",
          "Preparazione di Unity alla creazione di file APK",
          "Download e Installazione di Inkscape per Windows",
          "Download e Installazione di Inkscape per Mac",
          "Creiamo un'icona per il nostro gioco",
          "Creiamo un account Google Developer",
          "Creiamo la pagina del gioco nella Google Play Console",
          "Creiamo le immagini per il Play Store",
          "Creiamo una Privacy Policy e la pubblichiamo",
          "Pubblichiamo il nostro gioco"
        ],
        "Gioco in 2D \"Tappy Chicken\"": [
          "Creiamo lo scenario per il gioco",
          "Creiamo il personaggio del gioco: Il Pollo",
          "Creiamo gli ostacoli per il gioco: 2 tronchi di albero",
          "Creiamo il progetto e facciamo le prime impostazioni (Parte 1)",
          "Creiamo il progetto e facciamo le prime impostazioni (Parte 2)",
          "Impostiamo il Player ovvero il Polletto! (Parte 1)",
          "Impostiamo il Player ovvero il Polletto! (Parte 2)",
          "Facciamo muovere i tronchi",
          "Creiamo i tronchi in serie",
          "Gestiamo il conteggio dei punti",
          "Mostriamo il punteggio sullo schermo",
          "Creiamo il Panel Game Over",
          "Animiamo il pannello Game Over e la scritta GAME OVER",
          "Attiviamo i due pulsanti nel pannello Game Over",
          "Impostiamo gli oggetti di inizio gioco",
          "Creiamo il GameManager e inseriamo il terreno nel gioco",
          "Ottimizziamo il Game Over",
          "Challenge di Fine Sezione",
          "Esecuzione dei Challenge assegnati"
        ],
        "Gioco in 3D \"Flick Soccer\"": [
          "Impostiamo il nuovo progetto",
          "Costruiamo la porta con i cilindri",
          "Impostiamo la palla",
          "Cominciamo ad implementare il codice per lo Swipe (Parte 1)",
          "Cominciamo ad implementare il codice per lo Swipe (Parte 2)",
          "Terminiamo l'implementazione del codice per lo Swipe gesture (Parte 1)",
          "Terminiamo l'implementazione del codice per lo Swipe gesture (Parte 2)",
          "Aggiungiamo l'effetto Trail Renderer alla palla",
          "Inseriamo il pubblico",
          "Aggiungiamo il portiere",
          "Diamo consistenza al portiere",
          "Facciamo muovere il portiere (Parte 1)",
          "Facciamo muovere il portiere (Parte 2)",
          "Conteggiamo i goal fatti (Parte 1)",
          "Conteggiamo i goal fatti (Parte 2)",
          "Conteggiamo i Goal mancati (Svolgimento del Challenge)",
          "Aggiungiamo la scritta \"Goal!\" ad ogni goal (svolgimento secondo challenge)",
          "Aggiungiamo l'audio con l'urlo della folla ogni vola che si fa goal (Challenge)",
          "Correggiamo i warnings apparsi",
          "Creiamo il file Apk"
        ],
        "LeaderBoard": [
          "Scarichiamo e importiamo il Google Play Services Package",
          "Creiamo la LeaderBoard in Google Play Console",
          "Compiliamo le void nello script di LeaderBoardManager",
          "Implementiamo il pulsante per mostrare la LeaderBoard",
          "Cambiamo il sistema per far partire il gioco",
          "Introduzione alla lezione successiva",
          "Pubblichiamo la nuova versione del gioco",
          "Creiamo gli Achievements ovvero gli obbiettivi",
          "Impostiamo il pulsante Achievements"
        ],
        "Sezione Bonus": [
          "Aggiornamento alla versione Unity 2018",
          "E adesso? Che fare? Come proseguire il viaggio..."
        ]
      },
      "requirements": [
        "Bisogna saper utillizare un Pc con Windows o un Mac",
        "Non sono richieste conoscenze di programmazione ma qualche base potrà di certo aiutare",
        "Bisogna avere una connessione ad internet"
      ],
      "description": "Hai sempre pensato che sviluppare giochi in 3d o in 2d fosse una cosa molto difficile e a solo appannaggio di pochi? Beh... hai sempre pensato in maniera sbagliata. Con la mia guida e l'uso di un fantastico software come Unity sarai in grado entro poco tempo di sviluppare giochi per Android da pubblicare nel Play Store di Google.\nCon questo corso di sviluppo giochi per Android ti guiderò passo passo nella creazione da zero di due giochi tridimensionali, e di un gioco bidimensionale, li cureremo in ogni loro aspetto e arriveremo insieme a pubblicarli nel Play Store per renderli disponibili al mondo intero! Così tutti i tuoi amici potranno giocare con un gioco interamente sviluppato da te.\nGrazie a questo corso sarai in grado di cominciare un'avventura fantastica che ti porterà a sviluppare i giochi che hai sempre desiderato saper creare... Potrai finalmente rendere reali tutti quei progetti che fino ad oggi pensavi di dover conservare solo nella tua mente... potrai finalmente realizzare quel gioco che fino ad oggi hai saputo immaginare ma non hai mai saputo realizzare e che credevi dovesse rimanere solo un lontano sogno...\nCon il mio corso ti prenderò per mano e ti accompagnerò nel mondo dello sviluppo di giochi in 3d e giochi in 2d per Android fino a renderti autonomo e quindi libero di poter sviluppare tutit quei progetti che hai sempre sognato poter realizzare.\nDurante il corso svilupperemo il gioco in 3D \"Zig Zag\" in cui l'utente dovrà pilotare una pallina sopra delle piattaforme che si estendono in maniera tridimensionale, il gioco in 2D \"Tappy Chicken\" in cui il giocatore dovrà salvare un polletto dallo schianto su un albero facendolo saltellare in una foresta molto particolare e il gioco in 3D \"Flick Soccer\" in cui il giocatore si troverà dentro uno stadio gremito e dovrà tirare dei calci di punizione cercando di far gol in una porta difesa da un tenace portiere.\nInoltre c'è una sezione interamente dedicata all'implementazione di una LeaderBoard in un gioco, vedremo passo passo come implementare il plugin Google Play Services per ottenere una classifica gestita da Google nei nostri giochi e mostrare ai giocatori gli obbiettivi raggiunti e la classifica generale con tutti i punteggi mondiali!\nIl mercato delle app e dei giochi per smarphone è ormai diventato stellare e adesso potrai anche tu cominciare a ricavarti una tua fetta che potrà portarti guadagni e grandi soddisfazioni in ambito lavorativo. Potrai arricchire il tuo curriculum con qualcosa di molto ricercato e potrai crearti una nuova attività basata sulla creazione di giochi e quindi sulla... fantasia!\nIl corso è completo, ovvero ti insegna a utilizzare Unity, a creare 2 giochi in 3d da zero e un gioco in 2d da zero, a preparare tutto il materiale grafico per il marketing nel mondo Android  e a pubblicare i giochi nel Play Store di Google.\nNon perdere altro tempo! Comincia oggi stesso il tuo cammino verso nuovi orizzonti e verso nuove prospettive di lavoro e di carriera... diventa un programmatore di giochi per Android, non te ne pentirai! Inoltre avrai la garanzia del SODDISFATTI O RIMBORSATI, potrai ricevere in qualsiasi momento (entro 30 giorni dall'acquisto) un COMPLETO RIMBORSO se per qualsiasi motivo non sarai soddisfatto del tuo acquisto... che si può volere di più?\n\n\nALCUNE RECENSIONI AL CORSO:\nSophie A. ha scritto: \"Corso ben strutturato e di facile comprensione. Magnifiche le sfide! Il  docente risponde sempre alle domande e lo fa in tempi brevi.\"\nStefano B. ha scritto: \"Ottimo corso.\"\nMarco F. ha scritto: \"Argomenti trattati in modo esaustivo.\"\nMary S. ha scritto: \"Personalmente non sono neofita della programmazione però questo è stato  il mio primo approccio a Unity, il mio parere è che il corso sia molto  completo, adatto anche ai meno esperti. In particolare, ho apprezzato che viene svolto tutto il percorso da zero  fino alla generazione dell'apk e la pubblicazione nel play store.  Suggerirei di inserire nuovi contenuti al corso, ad esempio la creazione  di un nuovo gioco ma con pù challenge da svolgere come esercizio per  migliorare le proprie abilità. Grazie dell'ottimo lavoro Massimiliano e complimenti per aver fatto  tutto ciò da autodidatta!\"\nAndrea C. ha scritto: \"Da neofita di Unity ritengo il corso molto valido: le lezioni sono  spiegate in modo chiaro e preciso, senza dare nulla per scontato; si  apprendono le nozioni fondamentali velocemente, sia per l'uso  dell'editor sia per la programmazione degli script.\"\n\n\nAGGIORNAMENTI:\n* 09/05/2018: Aggiunto nuovo gioco in 2D \"Tappy Chicken\"\n* 15/05/2018: Aggiunta lezione di aggiornamento per Unity 2018\n* 18/08/2018: Aggiunto nuovo gioco in 3D \"Flick Soccer\"\n* 01/11/2018: Aggiunta la sezione \"LeaderBoard\"\n\n\nMusic:\n\"Mischief Maker\"\n\"Thinking Music\"\n\"Hot Pursuit\"\n\"Surf Shimmy\"\n\"Sunday Dub\"\n\"Captain Scurvy\"\nby\nKevin MacLeod (incompetech(.)com)\nLicensed under Creative Commons: By Attribution 3.0 License\nhttp://creativecommons.org/licenses/by/3.0/",
      "target_audience": [
        "Chiunque voglia imparare a creare giochi per Android",
        "Chiunque voglia aumentare le proprie conoscenze e migliorare il proprio curriculum",
        "Chiunque abbia delle idee per dei nuovi giochi da proporre nel Play Store di Google",
        "Chiunque voglia approfondire la propria conoscenza di Unity"
      ]
    },
    {
      "title": "UNITY - Mobil Oyun Yapımı Eğitimi (Android) || 5 örnek oyun",
      "url": "https://www.udemy.com/course/mobiloyunegitimi/",
      "bio": "Telefon ve tabletler için oyun yapımı",
      "objectives": [
        "Unity3D oyun motorunu kullanarak mobil oyunlar (telefon-tablet) geliştirebileceksiniz.",
        "Geliştirdiğiniz oyunları birçok mobil cihazın(telefon-tablet) rahatlıkla çalıştırabileceği şekilde optimize edebileceksiniz.",
        "C# programlama dilini gerektiği kadar, fazla ayrıntıya girmeden öğreneceksiniz.",
        "Oyunlarınızı Google Play Store'de yayınlayabileceksiniz."
      ],
      "course_content": {
        "BAŞLANGIÇ": [
          "Önsöz",
          "Programlama ve Oyun Yapımı",
          "Oyun Motoru ve Unity 3D",
          "Unity Kurulumu ve İlk \".apk\" Çıktısının Alımı",
          "Kurulumda ve Çıktı Alırken Yaşanabilen Sorunların Çözümü",
          "Unity'nin Arayüzü",
          "Tekrar Testi"
        ],
        "C# DERSLERİ": [
          "İlk Kod // \"MERHABA UNITY\"",
          "Değişkenler // \"int, float, string ve bool\"",
          "Değişkenlerde Dikkat Edilecek Hususlar",
          "Değişkenleri Kullanalım",
          "Operatörler",
          "Koşul İfadeleri // \"if-else, switch-case\"",
          "Fonksiyonlar (Metodlar)",
          "Dizi ve Listeler // Array & List",
          "Döngüler // for, foreach, while",
          "Tekrar Testi"
        ],
        "UNITY DERSLERİ": [
          "Boyut ve Eksen // x, y, z",
          "Kamera ve Işık",
          "Nesneler ve Görünüş Özellikleri // Materyaller",
          "Unity'nin Ana Fonksiyonları // Awake, Start, Update, FixedUpdate, LateUpdate",
          "Nesnelerin Özelliklerine Erişme ve Hareket Ettirme // Rotate() , Translate()",
          "İsim(name) ve tag'ler(etiket); Erişim Çeşitleri",
          "Nesnelerde Çarpışma-1",
          "Nesnelerde Çarpışma-2",
          "Nesneleri Etkisizleştirme // Destroy, SetActive, Enabled",
          "Zamana Bağlı İşlemler // Time, Invoke",
          "Pozisyon ve Açı Değişkenleri // Vector3, Quaternion",
          "Değişkenlerde Tür Dönüşümü",
          "Nesnelerin klonlanması (çoğaltılması) // Prefab, Instantiate",
          "Nesnelerde Aile-Çocuk (parent-child) Kavramı",
          "Aile-Çocuk Kavramındaki YENİ GÜNCELLEME",
          "Kulanıcı Arayüzü(UI) - 1 // Canvas, Image",
          "Kulanıcı Arayüzü(UI) -2 // Button",
          "Kulanıcı Arayüzü(UI) -3 // TextMeshPro",
          "Parçacık(partikül) Efektleri // Particle System",
          "Koordinatlar Arası Hareket İşlemi // MoveTowards, Lerp",
          "Nesneye Göre Açı Değişimi // LookAt",
          "Veri Kaydetme(save game-load game) // PlayerPrefs",
          "Tekrar Testi"
        ],
        "MOBİL CİHAZLARDA DOKUNMA ve İVME İŞLEMİ": [
          "Dokunmatik İşlemler-1 // Touch",
          "Dokunmatik İşlemler-2 // Raycast",
          "Dokunmatik İşlemler-3 // OnMouseDown, OnMouseUp, OnMouseDrag",
          "İvme İşlemi // Input.acceleration",
          "Tekrar Testi"
        ],
        "UNITY DERSLERİ- devamı": [
          "Döngüden Çıkış // break, continue",
          "Coroutine Fonksiyonları-IEnumerator",
          "Oyunu Duraklatma ve Oyundan Çıkma İşlemi // timeScale, Quit()",
          "Sahneler Arası Geçiş // SceneManager",
          "Tekrar Testi"
        ],
        "UNITY'de SES": [
          "AudioSource Componenti",
          "AudioClip ve PlayOneShot",
          "Tekrar Testi"
        ],
        "UNITY'de ANİMASYON": [
          "Yeni Animasyon Oluşturma // Animation",
          "Animator Componenti",
          "Dışarıdan Farklı Bir Nesnenin Animasyonuyla Çalışmak",
          "Tekrar Testi"
        ],
        "UNITY'de FİZİK": [
          "Rigidbody Componenti",
          "Güç Fiziği // velocity, AddForce",
          "Işın Fiziği // Raycast",
          "Patlama Fiziği // AddExplosionForce",
          "Fizik Materyali // Physic Material",
          "Tekrar Testi"
        ],
        "UNITY'de YAPAY ZEKA": [
          "Fark etme - Görme Zekası // Vector3.Angle",
          "Karar verme Zekası // Vector3.Distance, Random.Range()",
          "Takip Etme, Yön Bulma Zekası // NavMeshAgent, Navigation, .destination",
          "Yön Bulmada Hareketli Engeller // NavMeshObstacle",
          "Tekrar Testi"
        ],
        "UNITY'DE OPTİMİZASYON": [
          "Optimizasyon-1",
          "Optimizasyon-2",
          "Optimizasyon-3",
          "Tekrar Testi"
        ]
      },
      "requirements": [
        "Sabırlı, azimli ve istekli olmak.",
        "Not alarak çalışmak."
      ],
      "description": "ÇOK ÖNEMLİ: Eğer daha önceden \"UNITY ile Mobil (Android) Oyun Yapımı\" adlı kursu satın almışsanız bu kursu satın almanıza gerek yok. Zira bu kursun içeriğindeki konular bahsi geçen kursta da bulunmaktadır. Şirketleşme sürecine girmiş bulunduğumuzdan bu isim değişikliğine gitmek durumunda kaldık. Bu sebeple 1000+ öğrenciye sahip ve 4.4 yıldız gibi yüksek bir ortalamaya sahip kursumuzu yayından kaldırmak durumunda kaldık.\n\nÖNEMLİ: Eğer İngilizce seviyeniz iyiyse ve İngilizce kelimelerin \"doğru telaffuzu\" sizin için vaz geçilmezse bu kurs size göre olmayabilir. Zira bu kursta İngilizce kelimelerin doğru telaffuzuna pek dikkat edilmedi. Eğer bu durum sizin için önemli değilse yazıyı okumaya devam edebilirsiniz.\n\nBu kurs, Unity ile yeni tanışmış veya tanışmak isteyen, mobil platformlar için (telefon-tablet) oyunlar geliştirmeye hevesli kursiyerler için uygundur. Kursun genel yapısı \"Hızlandırılmış Eğitim\" ilkeleri göz önüne alınarak dizayn edilmiştir. Bu tabir, kursun içeriğinin dar kapsamlı olduğunu değil tam aksine içerikten ödün vermeden, gereksiz uzunlukta ve ayrıntılara boğulmadan konuların anlatıldığı anlamına gelir. Bu sayede bir konu 5 dakikada anlatılabiliyorsa gereksiz yere 10 dakikanızı harcamadık diyebiliriz.\n\nŞüphesiz internet çağında yaşıyoruz. Haliyle bilgiye ulaşmak eskisinden çok daha hızlı ve kolay. Bu kursta anlatılan konular da internette mevcut; ancak bu kursun esas farkı \"anlatım biçimidir\" diyebiliriz. Nitekim aynı konuyu anlatan bazı kaynaklar kafa karıştırırken bazıları da bize değer katmaktadır. Bu kursun da esas farkı buradadır. Anlatım biçimi; kafa karıştırmadan ve gereksiz ayrıntılara değinilmeden, işin özüne parmak basarak konuların anlatılması şeklindedir. Son olarak aşağıdaki \"soru-cevap\" ifadelerine bakarak bu kurs hakkında bir yargıya varabilirsiniz:\n\nSoru 1) Kursta örneği verilen oyunların geliştirilmesinde veya kendi yaptığım oyunlarda bana yardımcı olur musunuz?\n\n- Malesef bu hususta yardımcı olamayız; aksi halde tüm kursiyerlerimin projelerine destek olmam gerekir ki bu da mümkün değil. Sorularınız, kursta anlatılan konularla sınırlı olmalıdır. Kendi oyun projeleriniz veya kursta anlatılan oyun projelerinin geliştirilmesi veya değiştirilmesi tamamen sizin tasarrufunuzdadır; lütfen bunun bilincinde olarak tercihinizi yapınız.\n\nSoru 2) Kurstaki konular hakkında sorduğum sorulara ortalama ne kadar sürede yanıt verirsiniz?\n\n- Aynı gün içerisinde veya bazen dakikalar içerisinde diyebilirim\n\nSoru 3) Bu kursu bitirdiğimde hangi seviyede olacağım?\n\n- Kursu tamamladığınızda ve anlatılan konuları \"özümsediğinizde\" sektörde \"junior developer\" diye tabir edilen, başlangıç düzeyindeki oyun geliştiricisi seviyesinde olacaksınız. Bunun üzerindeki seviyeler ( Middle -> Senior -> Lead) tamamen sizin çalışma arzunuza ve deneyiminize göre şekillenecektir.",
      "target_audience": [
        "Oyun geliştirmeye meraklı herkes."
      ]
    },
    {
      "title": "Criar Jogos na UNITY ENGINE 6: Curso de Game 3D COMPLETO RPG",
      "url": "https://www.udemy.com/course/criar-jogos-com-unity-curso-completo-de-rpg/",
      "bio": "Novo Curso de Jogo 3D e Desenvolvimento RPG na Unity 6: Combos, Física de Roupa, Quest, Inventário, Mapa + Programação",
      "objectives": [
        "Aprender a Criar e Integrar um Inventário Completo ao seu Jogo",
        "Física de Roupa - Cloth",
        "Sistema de Pontuações - XP e Subir de Level",
        "Combate Melee e Combo. Criar a logica de combate corpo a corpo que envolve um combo sequencial de 5 ataques e Attack Especial usando Shaders",
        "Sistema de Quest",
        "Level Design - Decorar Cenários para Ambientes mais Imersivos",
        "Prototipar uma Batalha contra um Boss Final",
        "Aprender a Coletar itens",
        "Criar Menu Interativo - UI",
        "Inicie sua carreira em design e desenvolvimento de jogos. Aprenda a teoria e a prática da criação de jogos usando o Unity",
        "Criar efeitos visuais e de som realistas, transições climáticas e reações ambientais durante batalhas com chefes.",
        "Uso de Nav Mesh: Configuração de áreas navegáveis para permitir que personagens NPC se movam pelo ambiente.",
        "Desenvolver jogos RPG completos usando Unity, incluindo sistemas de interações com NPCs.",
        "Classe de animação Avançada, com blend tree e layers, para combinar diferentes animações",
        "Implementar funcionalidades como Estado de Máquina para Boss Final e Inimigos",
        "Estruturar e otimizar o código para jogos de grande escala, abordando desde a criação de menus até o gerenciamento de inventário in-game.",
        "A capacidade de projetar e desenvolver jogos em 3D.",
        "Aprender a conectar diferentes sistemas de combate, movimentação e interação, transformando ideias em uma jogabilidade funcional e imersiva.",
        "Criação de Telas ( Start - Loading - Game Over)",
        "Criar HP e Stamina",
        "Criando Minimapa na Unity no estilo bússola",
        "Otimização Básica e Intermediária",
        "Árvove de Habilidades (SKILL TREE)",
        "Sistemas de Teletransporte - Fast Travel - Portal",
        "Game Design",
        "Aprenda a integrar todas as mecânicas do jogo de forma eficiente e coesa, garantindo que todos os elementos funcionem para proporcionar experiência em Game.",
        "UI Design - Dominar a UI da Unity",
        "Som Design e Audio Mixer",
        "Save e Load - JSON",
        "Configurar a Câmera 3° Pessoa com CineMachine",
        "Dominar Mecânica de Batalha - PARRY e DEFESA no estilo Souls Like",
        "Criar Skill - Magia de Fogo, Raios, Dash, Dodge e Stealh",
        "Mixamo: Importar Animações para uso na Unity + RIG",
        "Aprender Spawnar Poderes e Magias com Particle System",
        "Organizar o jogo com Game Manager",
        "Aprender o Básico de Programação em C# (Singleton - Switch - IF ELSE - Booleanas - Coroutines - Invoke)",
        "Fase Alpha de Desenvolvimento (Conteúdos Avançados)",
        "Aprender Animator ( Blend Tree - Parâmetros - Rig - Avatares - StateMachineBehavior )",
        "Lógica de Programação C# para Games.",
        "Importação de modelos 3D e Configurações de Cor Textura e Materiais",
        "Inputs: Como configurar e manipular inputs do jogador para interação em um Game 3D"
      ],
      "course_content": {},
      "requirements": [
        "Ter um Conhecimento básico de Informática e Windows"
      ],
      "description": "Inicie sua jornada em criar jogos 3D e aprender Unity em 2025! descubra como fazer um jogo do zero, mesmo sem experiência.\nNeste curso, você vai aprender a como criar um jogo e tudo sobre Unity, programação e desenvolvimento de jogos, criando projetos no estilo RPG e Souls Like, inspirados em grandes Games de sucesso:\nElder Ring  - Zelda -  Final Fantasy - God of War  - The Witcher\nVocê vai criar seu jogo 3D passo a passo, dominando programação de jogos, design de cenários, missões, inventários, batalhas e muito mais. O foco do Curso é Simplificar Tudo que for complexo, oferecendo uma metodologia Fácil e acessível e desenvolver habilidades do zero com a Unity umas das engines mais popular do mundo.\n\n\nA Unity é uma Engine poderosa assim como a Unreal Engine, Godot e RPG Maker.\nNa Unity você pode criar e publicar seus Jogos 2D 3D e Online e Desenvolver seus Games para todas as plataformas\nPC - Mobile - Playstation - Xbox - Steam - Nintendo.\n\n\nVocê vai aprender no seu próprio ritmo, se você deseja aprender a criar jogos, seja por hobby, desenvolver jogos Indie, esse é o curso indicado pra você que está começando agora ou simplesmente quer aprender sobre o Universo de Criar Jogos e RPG e Souls Like. Você vai aprender a fazer desde inventários, missões, batalhas e design de cenários.\n\n\nO que você vai aprender?\nIntrodução na Unity: Configuração do ambiente Unity, funções essenciais e interface.\nSistema de entrada do usuário: Preferências do jogador.\nDownload de Assets: Aprenda a utilizar recursos para seu jogo.\nConfigurações de materiais e luzes: Dê vida ao seu jogo.\nDesenvolvimento com C# para jogos: Crie a lógica por trás dos seus jogos.\nComo integrar todas as mecânicas do jogo de forma eficiente e coesa, garantindo uma experiência fluida e envolvente.\nNa Unity você pode desenvolver para PC, Console e Celular usando a Unity 3D.\nTópicos do curso:\nConfiguração do ambiente Unity\nProgramação em C#: Comece a escrever código para jogos 3D.\nFísica de Roupas com Cloth System.\nProgramar o Parry e Defesa\nProgramar o  Z Target\nPrototipagem e testes: Aprenda a criar protótipos de jogos.\nDesenvolvimento de sistemas de missões e Quests.\nXP e sistema de level.\nInventário e sistemas de coleta.\nCriação de batalhas contra inimigos básicos e boss.\nDesenvolvimento de combos, habilidades e Skills.\nHUD: Criação de telas de menu, inventário e game over.\nSave/load de jogos: Armazene o progresso do seu jogo.\n\n\nO que mais você vai aprender?\nDesign de Jogos e Level Design\nEdição de mapas com Terrain e Criação de Ambientes\nPost Processing\nImplementação de IA (Máquina de Estados) para bosses e inimigos.\nOtimização de jogos: Técnicas como Pooling, Occlusion Culling e Garbage Collector.\nVocê tem dúvidas se é possível fazer jogos sem experiência?\nentão este curso é ideal para você!.",
      "target_audience": [
        "Qualquer pessoa apaixonada por desenvolvimento de jogos, buscando aprender a criar sistemas profundos e interativos, como os encontrados nos grandes títulos de RPG.",
        "Para quem deseja aprender a criar jogos, seja por hobby ou quer desenvolver jogos Indie.",
        "Gostam do Universo Game RPG Souls Like e querem dar vida a sua criatividade.",
        "Estudantes ou entusiastas de Unity que já possuem conhecimento básico e desejam aprimorar suas habilidades em projetos complexos.",
        "Empreendedores e criadores de conteúdo digital 3D Blender e Maya interessados em desenvolver seus próprios jogos para publicação."
      ]
    },
    {
      "title": "はじめてのアンリアルエンジン【Unreal Engine 4】入門チュートリアル講座",
      "url": "https://www.udemy.com/course/unreal-engine-4-beginner-tutorial/",
      "bio": "Unreal Engine 4の基本を一気に知りたいアナタにオススメ！このコースは、多くの商業ゲーム開発に利用されているUE4を基礎から8時間程度で学べる初心者向けのコースです。このコースで最新のゲーム開発に触れてみましょう！",
      "objectives": [
        "Unreal Engine 4を使ったゲーム制作についての基礎を学ぶことができます。",
        "Unreal Engine 4の基本的な機能を理解することができます。",
        "Unreal Engine 4のインストールからゲームコンテンツ制作までノンストップで学習することができます。",
        "ゲームジャムに参加したり、簡単なゲームコンテンツが作れるようになります。"
      ],
      "course_content": {
        "はじめに": [
          "講座内容の説明、自己紹介",
          "イントロダクション"
        ],
        "UE4エディターのインターフェースについて": [
          "エディターインターフェース"
        ],
        "ビューポートの操作について": [
          "ビューポート"
        ],
        "ジオメトリブラシを使って簡単な形状を作成し、レベル内へと自由に配置する": [
          "ジオメトリブラシ"
        ],
        "基本的なレベルデザインを学び、レベルという空間内を作る": [
          "レベルデザイン - 1/3",
          "レベルデザイン - 2/3",
          "レベルデザイン - 3/3"
        ],
        "マテリアルを使って、メッシュに質感を追加する": [
          "マテリアル - 1/2",
          "マテリアル - 2/2"
        ],
        "ライティングの基礎を学び、レベル内で光と陰の表現ができるようにする": [
          "ライティング"
        ],
        "ブループリントの基礎的な内容を学び、ノードベースの簡単なプログラミングを行う": [
          "ブループリント - 1/3",
          "ブループリント - 2/3",
          "ブループリント - 3/3"
        ],
        "キーボードやゲームパッドの入力について": [
          "インプット"
        ],
        "コリジョンについてを理解し、自由に物体同士の当たり判定を制御する": [
          "コリジョン"
        ]
      },
      "requirements": [
        "初歩的なPC操作が可能。",
        "Unreal Engine 4を触ったことのない人でも大丈夫です。",
        "Unreal Engine 4をインストールできるPCが必要です。",
        "このコースはWindows10で実施しますが、MacOSでも操作可能です。",
        "このコースでは、Microsoft WindowsベースのPC上で説明します。他のオペレーティングシステム上でも実行できますが、OS固有のサポートを提供することはできない旨、あらかじめご了承ください。"
      ],
      "description": "この講座では多くの商業ゲームで実際に使われているUnreal Engine 4(以下UE4)の基礎を一気に学びます。\nUE4は、とても優れたゲームの統合開発環境です。ゲーム開発に必要な沢山のツールがエディター内に用意されています。\n最近では、ゲーム制作技術の応用として、ゲーム以外の様々な分野でも使われています。このコースでは、ゲーム制作に限らず、これからUE4を学ぼうとしている皆様のために用意したコースです。エディターの操作方法から基礎的なゲーム制作などに必要な知識をしっかりと学習することができます。\nレベルデザインやブループリントによるスクリプティング、初歩的なAIや映像制作でも使えるエフェクトやシーケンサーの使い方など、ほとんど全ての分野をカバーできるような総合的な内容となっております。\nUE4はPS4やXbox OneやSwitchなど多くのハイエンドゲーム制作で実際に使われています。この講座にて基本的なことを学び、更に実践的な内容を学習すればよりハイレベルなゲームやコンテンツも作れるようになります。",
      "target_audience": [
        "Unreal Engine 4を使ってゲームや映像などのコンテンツを作ってみたい方",
        "参考書籍などでUnreal Engine 4に挑戦したが、挫折してしまった方",
        "Unreal Engine 4を利用したゲーム制作に興味がある方ならどなたでも！"
      ]
    },
    {
      "title": "Unity ile 2D/3D Oyun Tasarımı",
      "url": "https://www.udemy.com/course/unity-ile-2d3d-oyun-tasarim/",
      "bio": "PC, Web, Mobile Platformlar için 2D ve 3D oyun yapımı",
      "objectives": [
        "A'dan Z'ye Unity kullanmayı öğreneceksiniz.",
        "Web ortamında çalışacak oyun yapımını öğreneceksiniz.",
        "PC ortamında arkadaşlarınızla paylaşabileceğiniz oyun yapımı tecrübeniz olacak.",
        "Mobil-Android platformunda çalışacak, oyun içi reklamlar vererek gelir elde edebileceğiniz oyun yapımını öğreneceksiniz."
      ],
      "course_content": {
        "Tanıtım & Kurulum": [
          "Eğitim Boyunca Yapacağımız Oyunlar",
          "Unity Kurulumu",
          "Unity Tanıtımı",
          "Quiz"
        ],
        "Space Shooter Oyun Yapımı": [
          "Oyun Alanı Kurulumu",
          "Karakter Hareketi",
          "Ateş Etme",
          "Düşman Gemisi Hareket Türü #1",
          "Düşman Gemisi Hareket Türü #2",
          "Arka Plan Müzik ve Ateş Etme Efektleri",
          "Kamera Takibatı",
          "Alan Temizleme",
          "Gemi Patlaması",
          "Particle Sistemleri",
          "Düşman Üretmek",
          "Skor Yönetimi",
          "Game Over Tasarımı",
          "Oyun Yükleme"
        ],
        "Takip Oyun Yapımı": [
          "Oyun Tanıtımı",
          "Karakter Hareketi",
          "Yol Tanımı",
          "Takipçi Hareketi",
          "Takipçi Rotasyonu",
          "Yakalanma",
          "GameOver Ekranı",
          "Level Tasarımı",
          "Motor Sesi",
          "İlave İstasyon Ekleme",
          "Ana Menu ve Oyun Sonu"
        ],
        "Defenders Oyun Yapımı": [
          "Karakter Hareketi #1",
          "Karakter Hareketi #2",
          "Yerçekimi",
          "Kamera Takibatı",
          "Arka Plan Müzik",
          "Düşman Karakteri",
          "Canvas Tasarımı",
          "Karakter Sağlık Kontrol Mekanizması",
          "Düşmanın Saldırması",
          "Düşman Sağlık Kontrolü",
          "Karakterin Ateş Etmesi",
          "Uzay Yıldızları Efektleri Hazırlanması",
          "Zaman-Sayaç Tasarımı",
          "Otomatik Düşman Üretmek",
          "Pause Menu Tasarımı",
          "Ana Menu Tasarımı",
          "Dosya Kayıt Sistemi",
          "Game Over Tasarımı",
          "Ekran Karartma Efekti",
          "Oyun Build sistemi"
        ],
        "Mobil Platform Oyun Yapımı": [
          "Ana Menu Tasarımı",
          "Level Tasarımı",
          "Karakter Hareketi",
          "Karakterin Değişik Yönlere Bakması",
          "Zıplama",
          "Animasyonlar",
          "Çift Zıplama",
          "Kamera Takibatı",
          "Ateş Etme",
          "Takılma Sorunu",
          "Mobil Butonlar Ekleme",
          "Mobil Butonlar",
          "Altın Toplama Kontrolü",
          "Efekt Kontrolü",
          "Serializable Konusu",
          "Power Up Tasarımı",
          "Level Tasarımı",
          "Toz Efekti",
          "Oyun İçi Kontrol Kodlaması",
          "Su Efekti",
          "Düşen Platformlar",
          "Parallax Efekti",
          "Bilgi Kaydetme Sistemi",
          "Skor",
          "Uçan Altınlar",
          "Can Kontrolü",
          "Düşman Hareketi",
          "Karakterin Ölmesi",
          "Düşmanın Ölmesi",
          "Düşman Yapay Zeka",
          "Ses #1",
          "Ses #2",
          "Big Boss #1",
          "Big Boss #2",
          "Big Boss #3",
          "Otomatik Düşman Üretmek",
          "Level Konusu #1",
          "Level Konusu #2",
          "Level Konusu #3",
          "Level Seçimi",
          "Data Kontrolü",
          "Buton Kontrolü",
          "Platform Değişimi #1",
          "Platform Değişimi #2",
          "Oyun ve Data Kontrolü",
          "Data Kontrolü Güncelleme",
          "Yeni Level Tasarımı",
          "Level Tasarımı Son",
          "Pause Menu #1",
          "Pause Menu #2",
          "Loading Ekranı",
          "Game Over",
          "Sosyal Medya",
          "Google Reklamları #1",
          "Google Reklamları #2",
          "Google Reklamları #3"
        ],
        "Bonus": [
          "Tilemap ve Cinemachine 1.Kısım",
          "Tilemap ve Cinemachine 2.Kısım"
        ]
      },
      "requirements": [
        "Unity oyun motorunu kullanabileceğiniz PC veya MAC.",
        "Kodlamayı öğrenme isteği",
        "Oyun tasarımını yapacağımız ücretsiz indirilebilen Unity Oyun Motoru.",
        "Kodlamalarımızı yapabileceğimiz ücretsiz indirilebilen Visual Studio Community"
      ],
      "description": "UNITY kullanarak oyun geliştirme eğitim programına Hoşgeldiniz.\nEğitim boyunca toplamda 26 saat içeriğe sahip olacaksınız.\n104 ders programında anlatılan tüm konular sayesinde oyun yapımı konusunda birçok detayı öğreneceksiniz.\n\n\nBunlardan bazıları ;\n\n\nOyun içinde karakter hareketi\nAnimasyonlar\nYapay yerçekimi\nSprite sheet konusu\nAsset Store\nCollider , Trigger konuları\nDosya kaydetme konuları\nParticle sistemler\nZaman-Sayaç tasarımı\nOtomatik düşman üretmek\nGameOver ekran tasarımı\nPause Menu tasarımı\nAna Menu tasarımı\nIndie oyun geliştiricilerin oyunları yüklediği platform olan itch-io 'ya oyununuzu yükleme aşamaları.\nPC ortamında çalışacak oyun yapımı\nMobile Android platformunda çalışacak 2D oyun\nMobil platform için Google reklamları\nMobil platformda kullanılacak butonları ekleme süreci.\nKamera hareketleri\nLevel Tasarımı\nParallax Efekti\nLoading Ekranı hazırlama\nOyun sonu Big Boss planlanması\nQuaternion Konusu\n3D Rotasyon\nCoroutines Konusu\nBonus - TileMap ve Cinemachine\n\n\n1.Bölüm' de Unity  kurulumu, tanıtılması ve program boyunca yapacağınız oyunlar almaktadır.\n2.Bölüm' de bir uzay oyunu olan Space-Shooter isimli oyunumuzun A'dan Z'ye yapımını öğreneceksiniz. Animasyonlar, Menu tasarımı ,Gemi hareketi gibi birçok konusunda detaylı bilgiye sahip olacaksınız.\n3.Bölüm' de 3D Takip isimli oyunda Karakter rotasyon, coroutines, Quaternion gibi konular hakkında bilgi sahibi olacaksınız.\n4.Bölüm' de üç boyutlu bir küre üzerinde kendimizin yaratacağı yapay yerçekimi sayesinde hareket etmeyi , Ateş etmeyi , Sağlık kontrolü , Skor kontrolü , Zamana karşı yarış , oyun içi Restart, Options gibi özelliklere sahip Defenders isimli oyun yapımını öğreneceksiniz.\n5.Bölüm' de ise Mobil Android platformu için oyun yapımını A'dan Z'ye öğreneceksiniz. Hazırladığınız oyuna Google reklamları eklemeyi, kamera hareketleri , meşhur Parallax efektini yapmayı , dosya kayıt sistemlerini , Loading ekranları  gibi toplamda 56 ders sayesinde  Big Head's Adventure isimli oyunumuzun yapımını öğreneceksiniz.\nHer bölüm içerisinde yer alan dersler için oyun içerisinde kullanacağınız(Game Asset) indirilebilir içerikleri kullanabileceksiniz.\n\n\nŞimdiden başarılar, bol kodlamalar.",
      "target_audience": [
        "Bilgisayar kullanabilen herkes için uygundur.",
        "Başlangıç düzeyindeki oyun yapımı öğrenmek isteyenler eğitimden faydalanabilirler.",
        "Önceden sahip olduğunuz programlama tecrübesi faydalı olabilir ama zorunlu değildir."
      ]
    },
    {
      "title": "Aprenda C# UNITY Jogo 3D de RPG (IA, Save, Batalha, Puzzle..",
      "url": "https://www.udemy.com/course/aprenda-a-criar-um-jogo-do-mario-3d-na-unity/",
      "bio": "Curso de C# Unity - passo a passo - Programação de Jogos 3D - RPG Aventura",
      "objectives": [
        "Importação e Configuração de Personagens 3D na Unity",
        "Controle de Personagens em Terceira pessoa",
        "Programação de Alavancas e Plataformas ativadas com peso (estilo God of War)",
        "Programação de IA (Inteligencia Artificial) para criar inimigos inteligentes",
        "Programação de Puzzles Elaborados",
        "Criação de Cenários / Level Design",
        "Criação e Programação de UI (User Interface)",
        "Sistema de Loja de Itens / Shop",
        "Programação para Teleportar o personagem usando os Canos verdes do Mario",
        "Inteligencia Artificial de Boss: Bowser",
        "Sistema de Save/Load Local com Chekcpoint",
        "Sistema de combos de soco",
        "Sistema de troca de Skin com Habilidade de Bola de Fogo",
        "Sistema de Carregamento de objeto (Pedra)"
      ],
      "course_content": {
        "Introdução": [
          "Ferramentas Básicas + Importação dos Assets",
          "Configurações Iniciais da importação do Mario",
          "Configurações Iniciais da importação do Mario Pt2",
          "Colisor e Física do Mario + Gravidade do Terreno",
          "Criando Controle de Animação do Mario",
          "Criando Controle de Animação do Mario Pt2",
          "Criando Controle de Animação do Mario Pt3",
          "Programação dos Movimentos do Mario Pt1",
          "Programação dos Movimentos do Mario Pt2",
          "Programação dos Movimentos do Mario Pt3",
          "Programação dos Movimentos do Mario Pt4",
          "Programação dos Movimentos do Mario Pt5",
          "Física de Contato dos Objetos",
          "Camera + Configuração dos Prefabs Pt1",
          "Configuração dos Prefabs Pt2",
          "Configuração dos Prefabs Pt3",
          "Configuração dos Prefabs Pt4",
          "Configuração dos Prefabs Pt5",
          "Level Design Pt1",
          "Level Design Pt2",
          "Programação Plataforma Pressionavel (Puzzle1)",
          "Programação Plataforma Pressionavel (Puzzle1) Pt2",
          "Programação da Pedra Usada na Plataforma Pressionavel Pt1",
          "Programação da Pedra Usada na Plataforma Pressionavel Pt2",
          "Programação da Pedra Usada na Plataforma Pressionavel Pt3",
          "Programação da Pedra Usada na Plataforma Pressionavel Pt4",
          "Programação da Pedra Usada na Plataforma Pressionavel Pt5",
          "Level Design Pt3",
          "Programação da Plataforma Prefab",
          "Programação Moedas",
          "Programação Moedas Pt2",
          "Programação Tijolos Quebráveis",
          "Programação Bloco de Interrogação",
          "Programação Spawn Cogumelo Verde da Vida",
          "AI - Artificial Inteligence: Programação Inimigo Goomba",
          "AI - Artificial Inteligence: Programação Inimigo Goomba Pt 2",
          "AI - Artificial Inteligence: Programação Inimigo Goomba Pt 3",
          "AI - Artificial Inteligence: Programação Inimigo Goomba Pt 4",
          "AI - Artificial Inteligence: Programação Inimigo Goomba Pt 5",
          "AI - Artificial Inteligence: Programação Inimigo Goomba Pt 6",
          "AI - Artificial Inteligence: Programação Inimigo Goomba Pt 7",
          "Programação Gameover + UI",
          "Programação Gameover + UI Pt2",
          "AI - Artificial Inteligence: Programação Inimigo Goomba Pt 8",
          "UI Interface do Usuário / HUD",
          "UI Interface do Usuário / HUD Pt2",
          "Cano Verde Mario - Teleport",
          "Level Design Pt4",
          "Puzzle Alavancas",
          "Puzzle Alavancas Pt2",
          "Puzzle Alavancas Pt3",
          "Armadilha Disco Metal estilo God of War",
          "Troncos Giratórios",
          "Level Design Pt5 - Shop",
          "Programação Shop (Sistema de Compra de Itens)",
          "Programação Shop (Sistema de Compra de Itens) Pt2",
          "Troca de Skin (Roupas) Comprada no Shop",
          "Programação Skill Bola de Fogo",
          "AI - Artificial Inteligence: Programação Goomba Parado",
          "Level Design Pt6 - Boss Bowser + Controle Som passos",
          "Bowser: Programação Inteligencia Artificial",
          "Bowser: Programação Inteligencia Artificial Pt2",
          "Bowser: Programação Inteligencia Artificial Pt3",
          "Programação Vitoria",
          "Combo de Socos",
          "Save/Load Game",
          "Save/Load Game + Checkpoint",
          "Compilação do Game"
        ]
      },
      "requirements": [
        "Nenhum requisito prévio"
      ],
      "description": "Aprenda a criar um Jogo Super completo em 3D na Unity.\nCurso Prático! Sem enrolação!\nNesse curso você irá aprender a importar personagens em 3D, Configurar suas animações conforme o uso dos botões ou comandos, irá criar um sistema para abrir uma porta que necessita que o usuário coloque uma pedra em cima de uma plataforma pressionável, semelhante as plataformas encontradas no jogo god of war. Também criaremos sistemas de Gameplay semelhantes aos encontrados nas franquias do Mario como quebrar tijolos ao pular, coletar moedas e itens especiais encontrados em blocos de interrogação, usar os canos verdes para se teleportar, andar sobre troncos giratórios, usar as moedas coletadas para comprar itens em uma loja, você aprenderá também a programar a inteligência artificial para monstros tradicionais e para o boss final do game, que neste caso utilizaremos o Bowser, também será ensinado um sistema de alavancas que alternam a liberação de travas criando um puzzle bem legal! Você aprenderá também sobre level Design, através de dicas e truques que facilitarão na construção de seus cenários. Aprenda também como criar um sistema de Save/Load eficiente para seus jogos e como salvar e carregar checkpoints. Além de muitas dicas para impulsionar sua carreira no Desenvolvimento de Games!\nAprenda passo a passo!",
      "target_audience": [
        "Apaixonados por criação de jogos"
      ]
    },
    {
      "title": "Roblox ile Sıfırdan Oyun Yapma | Lua Dilini Öğrenme",
      "url": "https://www.udemy.com/course/roblox-ile-sifirdan-oyun-yapma-lua-dilini-ogrenme/",
      "bio": "2023 | Sıfırdan Oyun Geliştirici Ol | Roblox Oyun Geliştir | Lua Programlama Dilini Öğren | Uygulamalarla Oyun Yapma",
      "objectives": [
        "Roblox ile oyun geliştirmeyi öğrenin",
        "Lua programlama dilini öğrenin",
        "Örnek projeler ile deneyim kazanın",
        "Kendi oyununuzu yapacak hale gelin"
      ],
      "course_content": {
        "Roblox Studio'ya Giriş": [
          "Tanıtım",
          "Tanıtım Makale",
          "Roblox Studio'yu Bilgisayarımıza İndiriyoruz",
          "Proje Oluşuturuyoruz",
          "Sahneyi Tanıyalım ve Sahnede Gezinelim",
          "Sahnemizde Obje Oluşturmayı Öğrenelim",
          "Explorer ve Properties Kavramlarını Öğrenelim",
          "Explorer ve Properties Makale",
          "ToolBox Kullanımını Öğrenelim",
          "Karmaşık Objeler Tasarlayalım",
          "Objelere Renk Verelim ve Doku Ekleyelim",
          "Basit Bir Platform Yapalım",
          "Platformu Roblox'ta Yayınlayın!",
          "Bölüm Sonu Sınavı"
        ],
        "Lua Diline Giriş": [
          "Lua Dili - Makale",
          "Print Fonksiyonunu Anlamak",
          "Veri Tiplerine Giriş Yapıyoruz",
          "Bool Veri Tipi",
          "Veri Tipleri Makale",
          "Sayı Veri Tipi",
          "String Veri Tipi",
          "if Yapısı",
          "if Yapısı - Makale",
          "Döngü Yapıları (while ve for)",
          "Fonksiyon Yazmayı Öğrenelim",
          "Bölüm Sonu Sınavı"
        ],
        "İlk Oyunumuzu Yapalım": [
          "Platform Tasarlayalım",
          "Platformu Zorlaştıralım",
          "Karakterimizin Canını Sıfırlıyoruz",
          "Humanoid Nedir?",
          "Event - Makale",
          "Oyun Tasarlamak İçin İpuçları"
        ]
      },
      "requirements": [
        "Herhangi bir deneyim gerektirmez",
        "Bir adet bilgisayar",
        "Kursa başlamadan önce Roblox Player ve Roblox Studio yüklü olursa daha iyi olur"
      ],
      "description": "Roblox, 2005 yılında Amerikalı oyun geliştiricisi David Baszucki tarafından kurulmuştur.Dünya çapında bir platformdur ve kullanıcıların kendi oyunlarını oluşturma ve paylaşma imkanı sunar. Bu oyunlar genellikle 3 boyutlu bir ortamda oynanır ve çeşitli kategorilerde olabilir, ancak genellikle çocuklar ve gençler için tasarlanmıştır. Roblox, online bir oyun platformudur ve genellikle internet tarayıcısı üzerinden erişilebilir.Roblox, genellikle 6-12 yaş aralığındaki çocuklar için tasarlanmış bir oyun platformudur. Ancak, oyunun kullanımı her yaş grubundan kişi tarafından oynanabilir.\nBu kursta Roblox Studio'ya giriş yapıyoruz ve Roblox Studio'da Lua dilini kullanarak oyun yapmayı öğreniyoruz.Öncelikle Roblox Studio'nun arayüzünü birlikte tanıyoruz.Roblox arayüzü, oyun platformunun kullanıcılarına sunulan görsel tasarımıdır. Roblox arayüzü, oyun oynarken ve oyun oluştururken kullanılabilen birçok araç ve seçenek içerir. Örneğin, oyun oynarken oyuncu adı, para miktarı, oyundaki yer göstergesi gibi bilgiler arayüzde görüntülenir. Ayrıca, oyun oluştururken de farklı araçları kullanarak oyun içeriğini oluşturabilir ve yönetebilirsiniz..Ardından basit oyunlar yaparak bilgilerimizi pekiştiriyoruz.Daha sonra Lua dilini öğrenerek oyun yapma becerilerimizi artıyoruz.Roblox nedir?Roblox nasıl oynanır?Roblox'ta nasıl hesap açılır?Roblox'ta nasıl oyun oluşturulur?Roblox'ta nasıl para kazanılır?Roblox'ta nasıl güvenlik ayarları yapılır?Roblox'ta nasıl eğlenceli oyunlar bulunur?Roblox'ta nasıl oyunların kodları öğrenilir?Roblox'ta nasıl arkadaşlar edinilir?Roblox'ta nasıl etkinliklere katılınır?Bu gibi soruların cevaplarını alabileceksiniz.",
      "target_audience": [
        "Başlangıç düzeyinde oyun yapmak/geliştirmek isteyenler",
        "Roblox ile oyun yapmak isteyenler",
        "Lua dilini öğrenmek isteyenler"
      ]
    },
    {
      "title": "CG ACADEMY - Corso di Unreal Engine 4 per principianti",
      "url": "https://www.udemy.com/course/corso-di-unreal-engine-4-da-principiante-a-esperto/",
      "bio": "Un corso pratico per imparare a creare videogiochi e ambienti interattivi con UE4 versione 4.11",
      "objectives": [
        "Utilizzare i metodi e le tecniche per creare videogiochi con Unreal Engine 4",
        "Utilizzare i metodi e le tecniche per creare ambientazioni virtuali interattive, come architetture visuali"
      ],
      "course_content": {
        "Introduzione": [
          "Download e installazione di Unreal Engine 4",
          "Struttura Directory",
          "Funzionalità - prima parte",
          "Funzionalità - seconda parte"
        ],
        "Blueprint e impostazione di un gioco": [
          "Blueprint: transizione camminata-corsa del Player",
          "Aggiungere un suono (passi) ad un evento",
          "Aggiungere l'Animation Starter Pack al progetto",
          "Camera shaking",
          "Blueprint class: aprire e chiudere una porta con effetto rumore",
          "Interazione tra oggetti - prima parte",
          "Interazione tra oggetti - seconda parte"
        ],
        "Creazione di personaggi personalizzati": [
          "Creare un Player personalizzato in Fuse e importarlo in Unreal Engine 4",
          "Impostazioni del Player personalizzato",
          "Creazione di un avversario con intelligenza artificiale (A.I.)"
        ],
        "Sistema danni e barra salute": [
          "Sistema danni - prima parte",
          "Sistema danni - seconda parte",
          "Creazione della barra salute del Player",
          "Creazione della barra salute dell'avversario",
          "Rigenerazione salute del Player"
        ],
        "Animazioni e interazione, armi ed equipaggiamento": [
          "Il Player si impossessa di un'automobile",
          "Animation blueprint del Player - prima parte",
          "Animation blueprint del Player - seconda parte",
          "Animation blueprint del Player - terza parte",
          "Animation blueprint del Player - quarta parte",
          "Raccolta di un'arma: equipaggiamento e disequipaggiamento",
          "Creazione animazioni per la raccolta dell'arma",
          "Creazione rotazione del Player up and down",
          "Creazione di un mirino - prima parte",
          "Creazione di un mirino - seconda parte",
          "Creazione di un mirino - terza parte"
        ],
        "Munizioni": [
          "Aggiunta munizioni e ricarica arma - prima parte",
          "Aggiunta munizioni e ricarica arma - seconda parte"
        ],
        "Packaging ed esportazione del gioco": [
          "Conclusioni - Esportare il gioco"
        ]
      },
      "requirements": [
        "Non è necessaria la conoscenza di modellazione 3D, ma un minimo di familiarità nel mondo della computer grafica",
        "Non è necessario avere nozioni di scripting e programmazione."
      ],
      "description": "Unreal Engine 4 è il motore di gioco più famoso, professionale, completo e performante in assoluto.\nLa sua interfaccia grafica, assai funzionale e user friendly, ti immedesimerà immediatamente nel fantastico mondo dei game developer.\nQuesto corso, realizzato da Angelo Imperatore per CG ACADEMY, strutturato in 32 lezioni, segue un percorso interattivo in cui, da subito, entrerai nel vivo della progettazione e della programmazione di un vero piccolo videogioco.\nUnreal Engine 4 ti facilita sin da subito l'apprendimento e l'uso, attraverso funzionalità intuitive e potenti, molti preset dei più importanti giochi (terza persona, prima persona, VR, platform 2D e 3D, puzzle, dall'alto... etc.) e ti regala asset, molti dei quali gratuiti, da scaricare dal comodissimo Launcher.\nL'editor di programmazione grafico, noto come Blueprint, è un vero e proprio potentissimo linguaggio di programmazione, strutturato con un sistema nodale, in luogo di quello scritto. Si tratta di un vero e proprio interprete di programmazione che ti mette a disposizione un'interfaccia utente visuale e numerose funzioni. In pratica non hai bisogno di conoscere alcun linguaggio di programmazione (C++, C#, Pyton, JavaScript...), che comunque puoi usare per implementare il tuo gioco.\nCon Unreal Engine 4, perfettamente gratuito, potrai creare il tuo videogioco, ma anche architetture visuali interattive, realtà virtuale e aumentata.\nLa versione utilizzata per questo corso è la 4.11.",
      "target_audience": [
        "Chiunque desideri creare un videogame",
        "Chiunque desideri creare ambientazioni virtuali interattive",
        "Tutti gli appassionati di videogiochi"
      ]
    },
    {
      "title": "Roblox: Aprende a programar interactivamente",
      "url": "https://www.udemy.com/course/roblox-aprende-a-programar-interactivamente/",
      "bio": "Mi filosofía: Aprender Haciendo. Y con Roblox vas a interactuar con tu código.",
      "objectives": [
        "Despertar la lógica para desarrollar programas",
        "Conocimientos básicos en programación",
        "Conocimientos básicos para desarrollo de juegos en Roblox",
        "Agilidad y destrezas para codificar"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Creación de cuenta para Roblox",
          "Descargar el IDE",
          "Iconos Anteriores más intuitivos",
          "Explicando el programa Roblox Studio",
          "Explicación de el flujo secuencial de un código (pseudocódigo)",
          "Explicación de un script, localScript y moduleScripts (correr servidor)",
          "Explicación de variables y tipos",
          "Introducción a los elementos llamados \"Value\"",
          "Metodología del curso"
        ],
        "Estructura de Control Condicional (IF)": [
          "Estructura de Control Condicional (IF)",
          "Ejecutar una acción cuando una condicion NO se cumple (else)",
          "Estructura del elseif",
          "Clase interactiva del IF",
          "Clase Interactiva else y elseif",
          "Encadenando estructuras condicionales (IF Anidados)",
          "Clase Interactiva IF Anidados parte 1",
          "Clase Interactiva IF Anidados parte 2",
          "Operador lógico AND en un IF",
          "Operador Lógico OR en un IF",
          "Operador Lógico NOT en un IF",
          "Empleando el AND en el elevador",
          "Preparando Interfaz para practicar con el IF parte 1",
          "Preparando Interfaz para practicar con el IF parte 2",
          "Preparando Interfaz para practicar con el IF parte 3",
          "Preparando Interfaz para practicar con el IF parte 4",
          "Practicando el IF con la interfaz parte 1",
          "Practicando el IF con la interfaz parte 2",
          "Practicando el IF con la interfaz parte 3",
          "Prácticas para el IF"
        ],
        "Ciclo While": [
          "Sintaxis y explicacion While",
          "Ejemplos del While",
          "Preparando terreno para clase interactiva del While (Opcional)",
          "El evento Touch de un objeto y variables de control",
          "Incrementando cantidad de jugadores al tocar el objeto",
          "Decrementando cantidad de jugadores al tocar el objeto",
          "Ciclo Infinito para control de cantidad de jugadores",
          "Clase Interactiva While: Aumentando cantidad de dinero mientras haya un jugador",
          "Romper ciclos con el comando Break",
          "Practicando el While y el IF parte 1",
          "Practicando el While y el IF parte 2",
          "Practicando el While y el IF parte 3",
          "Debugger: Probando pausadamente cada línea del código",
          "Práctica sobre While"
        ],
        "Ciclo For": [
          "Sintaxis y explicación del ciclo FOR",
          "Uso del Break en el For",
          "Uso del continue en el For",
          "Aclaración con las imágenes de los códigos",
          "Clase interactiva del For",
          "Preparando Escenario para el For (Opcional)",
          "Dirección de movimiento del objeto en GUI",
          "Moviendo el objeto a la derecha",
          "Moviendo el objeto a la izquierda",
          "Práctica del FOR"
        ],
        "Functions: Agrupación de instrucciones": [
          "Explicacion y sintaxis de la Function",
          "Flujo de instrucciones en una Function",
          "Diferencia entre variables locales y globales",
          "Paso de parametros en una function",
          "Llamada de una Function desde otra estructura",
          "Preparando Escenario Interactivo para las Functions parte 1",
          "Cambio de Turno en el Tic Tac Toe",
          "Trabajando en la lógica del tic tac toe parte 1",
          "Trabajando en la lógica del tic tac toe parte 2",
          "Ganando en el Tic Tac Toe",
          "Llamando funciones desde otro archivo (ModuleScripts) parte 1",
          "Llamando funciones desde otro archivo (ModuleScripts) parte 2",
          "Retornando Datos de una function parte 1",
          "Retornando Datos de una function parte 2",
          "Llamando funciones desde otro archivo (ModuleScripts) parte 3",
          "Verificando posiciones en el Tic Tac Toe",
          "Obteniendo el ganador del Tic Tac Toe",
          "Reiniciando el Tic Tac Toe",
          "Optimizando el Tic Tac Toe",
          "Empatando en Tic Tac Toe",
          "Functions en un ciclo",
          "Motivación",
          "Práctica sobre functions"
        ],
        "Estructuras de Datos": [
          "Sintaxis y Explicación de las tablas",
          "Insertando en una tabla",
          "Buscando en la tabla",
          "Eliminar en una tabla",
          "Nuevo recorrido de una tabla",
          "Práctica interactiva con tablas parte 1",
          "Práctica interactiva con tablas parte 2",
          "Insertando un nuevo Social Code en la tabla",
          "Eliminando un Social Code de la tabla",
          "Preparando escenario interactivo para las tablas",
          "Generando objetos en tiempo de ejecución",
          "Limitando creación y limpiando los objetos",
          "Evento click sobre el objeto y destruirlo"
        ],
        "Cierre del curso": [
          "Agradecimiento y motivación"
        ]
      },
      "requirements": [
        "No necesita experiencia en programación"
      ],
      "description": "Siempre han dicho que aprender a programar es difícil, no estoy del todo de acuerdo, aprender a programar requiere tiempo y esfuerzo, mucha práctica, pero sobre todo elegir bien con cual lenguaje de programación empezar y aún más importante, el entorno de desarrollo (programa para escribir el código) debe facilitar su uso y motivar a la persona para continuar con su proceso de aprendizaje. Un lenguaje muy complicado o un entorno robusto, poco intuitivo, desmotivará a cualquiera.\nEs por esto y más, que elegí enseñar a programar con Roblox, una plataforma que permite publicar nuestros juegos gratuitamente y además, utiliza el lenguaje LUA, un lenguaje bastante cómodo de entender, con un entorno de desarrollo muy práctico. ¿Y qué mejor manera de aprender que creando juegos?, aprender haciendo es una filosofía que me gusta aplicar en todos los cursos que he brindado en mis más de 12 años de docencia. En el curso veremos conceptos básicos de programación y los aplicaremos en algunas simulaciones de juegos, una base.\nObservar en vivo lo que estamos programando ayuda mucho en la comprensión de las bases de la programación, en el curso podrán jugar con los diferentes modelos que les brindaré, modificarlos, cambiar parámetros para analizar comportamiento, mover objetos con estructuras de programación, esto y más, con el fin de ayudarles a entender los principios básicos de programación, despertando la lógica, el razonamiento que todas las personas poseen.\nPara una persona que desea iniciar en el mundo de la programación, es importante que se sienta motivada a aprender, a dedicarle horas de práctica, pero todo esfuerzo trae su recompensa, los ingenieros en sistemas (Desarrolladores) están entre las carreras mejor remuneradas económicamente, también agregar los beneficios extras que una empresa les otorga para mantenerlos satisfechos.",
      "target_audience": [
        "Personas interesadas en aprender a programar"
      ]
    },
    {
      "title": "crea tu videojuego con el modo web gratuito constructor 3",
      "url": "https://www.udemy.com/course/crea-tu-videojuego-con-el-modo-web-gratuito-constructor-3/",
      "bio": "Este curso te permite desarrollar un juego para Android, IOS, Windows y celular con una plataforma sin código gratuita",
      "objectives": [
        "Sabrás cómo dibujar, posicionar, mover sprites. Luego administrará variables, iteraciones, bucles, mensajes y eventos en el juego."
      ],
      "course_content": {
        "Introduzione": [
          "Cómo configurar su cuenta de Constructor 3",
          "Cómo comenzar a diseñar tu propio juego de disparos",
          "Agregue enemigos, duplique instancias de sprites y administre balas con eventos.",
          "agregar comportamiento de enemigos, explosiones con panel de eventos",
          "Use variables locales o globales para administrar la puntuación y las vidas.",
          "Gestiona el evento Game Over y establece el comportamiento de los enemigos."
        ]
      },
      "requirements": [
        "habilidades básicas de computadora personal"
      ],
      "description": "En este curso aprenderás cómo mover sprites, usar iteraciones y eventos en un sistema profesional de programación de juegos: Construir 3. Puedes crear tu propio videojuego con un método visual simple. El curso enseña cómo usar un tutorial gratuito para programadores principiantes y profesionales.\n\n\nAl final del curso podrás crear un juego de disparos sin código y sin tener experiencia previa en programación.\n\n\nPuede probar su conocimiento descargando los recursos disponibles en las lecciones e intentando repetir los pasos explicados en nuestro video.\n\n\nAl final del curso, puede descargar todo el proyecto del videojuego Tank Shooter y hacer algunos ejercicios para modificarlo y crear su propio videojuego.",
      "target_audience": [
        "Puedes crear tu propio videojuego, programando con Construct 3. El curso enseña cómo usar un tutorial gratuito para programadores principiantes y profesionales."
      ]
    },
    {
      "title": "Scratch MIT Curso Completo & Metodologia STEAM",
      "url": "https://www.udemy.com/course/curso-completo-de-jogos-com-scratch/",
      "bio": "Aprenda o Scratch 3 para Criar Jogos e Apresentações Interativas e aplique seu conteúdo em Aulas Presenciais e Online.",
      "objectives": [
        "O Aluno será capaz de Criar seus Próprios Programas, Jogos ou Apresentações Online e compartilhar pela Internet.",
        "Entender os conceitos básicos de Animação e Jogos. Utilizados em qualquer outra Ferramenta de Desenvolvimento.",
        "Desenvolver a Habilidade da Programação de Jogos com o Scratch.",
        "Curso ideal para professores e pais, que desejam passar com confiança os fundamentos da programação para seus filhos.",
        "Professores entenderão como utilizar o Scratch em Sala de Aula e Aulas Online"
      ],
      "course_content": {
        "Scratch 3 para Aulas do Ensino Fundamental": [
          "Introdução ao Scratch 3",
          "Ferramentas de Desenho - Vetor e Bitmap",
          "Extensões do Scratch 3",
          "1o Ano - Língua Portuguesa - Vogais",
          "2o Ano - Ciências - Anatomia da Planta",
          "3o Ano - Inglês - Colors"
        ],
        "Crie 9 Jogos com Scratch 2": [
          "Apresentação dos Projetos - Crie 9 Jogos",
          "Teste os Games e Explore os 9 Projetos",
          "Download dos Gráficos para os Projetos"
        ],
        "Jogo #01 - Cena de Introdução": [
          "Download dos Arquivos Utilizados no Curso",
          "Iniciando Projeto Abertura do Jogo",
          "Criando Partícula de Coração",
          "Criando Cena de Introdução"
        ],
        "Jogo #02 - Jogo do Aviãozinho": [
          "Jogo do Aviãozinho Inicio do Projeto e Inimigos",
          "Movimentando o Aviãozinho",
          "Fazendo o Felpudo Atirar",
          "Explodindo os Inimigos",
          "Pontuação e Fim de Jogo",
          "Evento de Colisão Ajustes"
        ],
        "Jogo #03 - Felpudo Racing": [
          "Felpudo Race Criando o Projeto",
          "Movimentação dos Inimigos em Senóide",
          "Criando os Projéteis",
          "Destruindo os Inimigos",
          "Pontuação e Fim de Jogo",
          "Utilizando o Microfone para Atirar",
          "Novo Update no Jogo do Carrinho"
        ],
        "Jogo #04 - Ferramenta de Desenho": [
          "Ferramenta de Desenho",
          "Dicas sobre a Ferramentas de Desenho",
          "Utilizando a Mochila"
        ],
        "Jogo #05 - Enigma do Felpudo - Quizz": [
          "Projeto Enigma do Felpudo",
          "Criando a Lista de Perguntas",
          "Criando as Rotinas de Execução das Perguntas",
          "Evento de Fim de Jogo",
          "Criando HUD de Vidas ou Tentativas",
          "Implementando o Hud e Efeito de Dano ou Porrada"
        ],
        "Jogo #06 - Matemática Aplicada aos Jogos": [
          "Laços de Repetição para Criar Múltiplos Itens",
          "Animação do Item Moedinha",
          "Matemática Aplicada aos Jogos Seno e Coseno",
          "Matemática Resto e Arredondamento em Array de Itens"
        ],
        "Jogo #07 - Jogo do Labirinto": [
          "Jogo do Labirinto Movimentação",
          "HUD de Vidas e Fim de Jogo",
          "Animando e Pegando o Item Coração"
        ],
        "Jogo #08 - TimberMan": [
          "Timberman Iniciando o Projeto",
          "Criando Pilha de Blocos",
          "Movimentação do Personagem",
          "Animação e Reposicionamento dos Blocos",
          "Removendo da Lista e Criando Novos Blocos",
          "Verificando as Jogadas",
          "Evento de Fim de Jogo",
          "Barra de Energia",
          "Armazenando os Recordes",
          "Adicionando Música e Sons"
        ]
      },
      "requirements": [
        "Computador com Acesso à Internet"
      ],
      "description": "O Scratch é uma ferramenta criada no MIT para ensinar Conceitos Fundamentais de Programação, Lógica e Algoritmos.\nAlém de ser uma ferramenta para Desenhar e Criar Apresentações Animadas e Interativas, o Scratch é uma plataforma online e gratuita que se aplica no ensino de praticamente qualquer disciplina, desde o ensino fundamental até o superior.\n...\nSe você é professor de Ensino Fundamental ou Médio ou dá aulas em Escolas de Programação para Crianças, e gostaria de aprender o Scratch para utilizar nas suas aulas em Sala de Aula ou através de Ensino à Distância / Online, assista este material!\nAtravés deste curso, vou te ensinar o Scratch 3 e como aplicar o conteúdo e disciplinas do Ensino Fundamental e Médio utilizando a ferramenta.\nTambém vamos a fundo no Scratch para aprender Lógica de Programação e Algoritmos, criando juntos 9 Jogos Completos.\nConfira a sequencia programática destas aulas:\nIntrodução ao Scratch 3\nFerramentas de Desenho\nExtensões do Scratch 3\n1º ano - Língua Portuguesa - Vogais com Scratch 3\n2º ano - Ciências - Partes da Planta com Scratch 3\n3º ano - Língua Portuguesa - Vogais com Scratch 3\nCriação de 9 Jogos Completos utilizando o Scratch 2:\nJogo #01 - Cena de Introdução\nJogo #02 - Jogo do Aviãozinho\nJogo #03 - Felpudo Racing\nJogo #04 - Ferramenta de Desenho\nJogo #05 - Enigma do Felpudo - Quizz\nJogo #06 - Matemática Aplicada aos Jogos\nJogo #07 - Jogo do Labirinto\nJogo #08 - TimberMan\nJogo #09 - Chefão Final (Arkanoid Clone)\nAulas Bônus - Aplicações utilizando a WebCam no Scratch:\nPiano Virtual com Detecção de Movimento pela Câmera\nJogo do Ovo com Detecção de Direção pela Câmera\n*Pouca coisa muda do Scratch 2 para o Scratch 3, e falo sobre isto nas aulas iniciais do curso =)",
      "target_audience": [
        "Alunos que gostam de animação, jogos e desenhos animados",
        "Iniciantes em Lógica de Programação",
        "Iniciantes em Programação de Jogos ou Aplicativos",
        "Professores do Ensino Médio e Fundamental",
        "Professores que queiram saber criar atividades interativas para ensinar"
      ]
    },
    {
      "title": "Curso Fivem | Projetos e Desafios",
      "url": "https://www.udemy.com/course/cursofivem/",
      "bio": "Aprende de fato a criar recursos para servidores de Fivem!",
      "objectives": [
        "Desenvolvimento de Scripts.",
        "Otimização de Desempenho e Segurança.",
        "Identificação e Resolução Eficiente de Diversos Bugs.",
        "Ser independente!"
      ],
      "course_content": {
        "Programação em lua": [
          "Tipos de dados",
          "Váriaveis",
          "Concatenação",
          "Solução do exercício de concatenação",
          "Operadores aritméticos",
          "Funções",
          "Solução do exercício de funções",
          "Tabelas",
          "Solução do exercício de tabelas",
          "Operadores de comparação",
          "Estrutura condicional",
          "Solução do exercício de estruturas condicionais",
          "Operadores de comparação parte 2",
          "Solução do exercício de comparação",
          "Variável global VS Variável local",
          "Operador ternário",
          "Solução do exercício de operador ternário",
          "Estrutura de repetição com WHILE",
          "Estrutura de repetição com FOR",
          "Estrutura de repetição com REPEAT"
        ],
        "Servidor do discord": [
          "Como entrar"
        ],
        "Preparando ambiente": [
          "Programas essenciais",
          "Extenções VScode",
          "Baixando uma base VRPEX",
          "Configurando a key",
          "Configurando steam api key",
          "Permitindo portas do firewall",
          "Startando a base"
        ],
        "[ PARTE 1 ] Natives do Fivem": [
          "Obter a posição do player",
          "Verificar se o player está dentro de um veículo",
          "Criando um texto 3D",
          "Criando comandos personalizados",
          "Verficar se a tecla foi pressionada",
          "Criando um marcador",
          "Executando uma animação",
          "Criando objetos",
          "Criando um veículo",
          "Criando eventos"
        ],
        "[ PROJETO 1 ] Emprego de entregador de pizza * REALISTA *": [
          "Prévia do projeto",
          "Preparando ambiente",
          "Criando o marcador",
          "Criando o veículo de serviço",
          "Criando sistema dinâmico com texto 3D",
          "Criando sistema dinâmico com texto 3D no veículo",
          "Crirando o sistema de pegar a pizza na mão",
          "Função para guardar a pizza no veículo",
          "Criando as rotas",
          "Criando o sistema de entregar as pizzas",
          "Criando sistema de pagamento e o sistema de sair do serviço",
          "Finalizando projeto"
        ],
        "[ FUNÇÕES VRPEX] Banco de dados": [
          "Criando uma tabela",
          "Inserindo valores na tabela",
          "Artigo: INSERT",
          "Buscando valores na tabela",
          "Artigo: SELECT",
          "Tratativa de busca"
        ]
      },
      "requirements": [
        "Vontade de aprender!",
        "Um computador que rode o FIVEM."
      ],
      "description": "Se você é uma pessoa interessada em programação, mas tem enfrentado dificuldades para criar seus próprios scripts ou entender como eles funcionam, este curso é ideal para você. Irei apresentar os fundamentos da linguagem de programação Lua e ensinar como implementá-la no FiveM.\nVocê irá aprender sobre as principais funcionalidades e Natives (funções do GTA), além de aprofundar seu conhecimento para que você se torne capaz de criar scripts. Nossas aulas são objetivas e de fácil compreensão, e incluem exercícios para ajudá-lo a fixar o conteúdo.\nAo concluir este curso e praticar o que foi ensinado, você terá todas as habilidades necessárias para criar seus próprios scripts e, assim, poderá gerar uma renda. É importante destacar que este curso é destinado a pessoas que desejam aprender de verdade, e não apenas copiar e colar.\nPor isso, se você se identificou com o perfil e deseja se tornar um programador mais independente e autônomo, não perca esta oportunidade de investir em si mesmo e adquirir novos conhecimentos, não é tarde para evoluir!\n\nOfereço suporte total aqui na Udemy!\n\nTodas as dúvidas irei transformar em vídeo explicativo!\n\nTeremos tantos projetos em 'back-end' e com 'front-end'!\n\nQual é sua desculpa agora pra apreender, em?",
      "target_audience": [
        "Pessoas que buscam iniciar uma loja ou já possuem uma e desejam aprimorar seus conhecimentos.",
        "Pessoas que querem abrir um servidor ou já possuem e desejam aprimorar seus conhecimentos."
      ]
    },
    {
      "title": "Unity C#, Firebase: Multiplayer Oyun Altyapısı Geliştirme",
      "url": "https://www.udemy.com/course/unity-csharp-firebase-multiplayer-oyun-altyapisi-gelistirme/",
      "bio": "Firebase ile Unity Oyun Motoru Kullanarak Multiplayer Mobil Oyun Geliştirme Dinamiklerini Öğrenin!",
      "objectives": [
        "Unity3D oyun motoru ile multiplayer oyun geliştirme",
        "Google Cloud Platform (GCP): Firebase ve modülleri",
        "Firebase: Authentication",
        "Firebase: Realtime Database",
        "Temel C# programlama",
        "Asenkron programlama mantığı",
        "Multiplayer altyapısı"
      ],
      "course_content": {
        "Giriş": [
          "Eğitim Tanıtımı",
          "Unity3D Nedir?",
          "Google Cloud Platform: Firebase Nedir?",
          "Neden Multiplayer Oyun Geliştiriyoruz?",
          "Geliştireceğimiz Multiplayer Oyun Projeleri Hakkında"
        ],
        "Gerekli Program Kurulumları ve Tanımlamalar": [
          "Unity3D Oyun Motoru Kurulumu (Windows)",
          "Unity3D Oyun Motoru Kurulumu (Mac)",
          "GCP Üzerinde Firebase Projesi Oluşturma",
          "Firebase Unity SDK Kurulumu",
          "Android ve iOS Platformlarını Firebase Projesine Tanımlama",
          "Merhaba Dünya!"
        ],
        "Temel C# Programlama Eğitimi": [
          "Değişkenler",
          "Operatörler",
          "Koşul İfadeleri",
          "Döngüler",
          "Diziler",
          "Metotlar",
          "Class Yapıları"
        ],
        "Firebase: Authentication": [
          "Authentication Tanımlamaları",
          "Unity ile Authentication: E-Posta ve Şifre ile Kayıt Olma",
          "Unity ile Authentication: Misafir Olarak Kayıt Olma",
          "Unity ile Authentication: Giriş Yapma",
          "Unity ile Authentication: Parola Sıfırlama İşlemleri",
          "Otomatik Authentication Kayıtları Açacak Bir C# Scripti Yazınız."
        ],
        "Firebase: Realtime Database": [
          "Realtime Database Tanımlamaları",
          "Veritabanı Yapısı Oluşturma",
          "Unity ile Realtime Database Bağlantısı Kurma İşlemleri",
          "Unity ile Realtime Database: Veri Ekleme ve Güncelleme",
          "Unity ile Realtime Database: Veri Çekme",
          "Unity ile Realtime Database: Veri Silme",
          "Listener İşlemleri ile Belirli Bir Odayı Dinleme",
          "Unity ile Realtime Database: Veri Filtreleme",
          "Veritabanı Güvenliğini Kurallar ile Sağlama"
        ],
        "Multiplayer Oyun Geliştirme: Tic Tac Toe": [
          "Proje Oluşturma",
          "Veritabanı Yapısı Oluşturma",
          "Data Class Oluşturma",
          "DBManager Class Oluşturma",
          "AuthManager Class Oluşturma",
          "GameController Class Oluşturma",
          "Transaction Sahnesi Oluşturma",
          "Kayıt Olma Sahnesi Oluşturma",
          "Giriş Yapma Sahnesi Oluşturma",
          "Lobby Sahnesi Oluşturma",
          "Gameplay Sahnesi Oluşturma",
          "Result Sahnesi Oluşturma",
          "Sunucuya Kayıt Olma İşlemleri",
          "Sunucuya Giriş Yapma İşlemleri",
          "Otomatik Giriş Yapma (Auto Login)",
          "Oda Oluşturma",
          "Odaları Listeleme",
          "Odaya Katılma Daveti Gönderme",
          "Odaya Gelen Katılma Davetlerini Yönetme",
          "Odaya Giriş Yapma",
          "Gameplay Sahnesinde Multiplayer Oynama",
          "Oyunun Kazananını Belirleme",
          "Oyundan Ayrılma Senaryoları",
          "Veritabanı Güvenliği"
        ],
        "BONUS: Kupon Kodu": [
          "Bu Eğitim İçin İndirim Avantajı Sağlayan Kupon Kodu"
        ]
      },
      "requirements": [
        "Unity3D oyun motoru (2018.3.0 veya sonrası)",
        "Firebase erişimi için gmail hesabı",
        "Temel C# programlama bilgisi",
        "Temel Unity oyun motoru bilgisi"
      ],
      "description": "Bu eğitimde amaç, oyun dünyasında ve bulut teknolojisinde güncel konuları takip ederek multiplayer özelliği olan mobil tabanlı oyunlar geliştirmeniz için gerekli içeriği sağlamaktır. Eğitim süresince kullanılacak olan programlar, programlama dilleri ve teknolojiler, sıfırdan kurulum ve A'dan Z'ye ihtiyaç doğurabilecek temel bilgi seviyesi siz katılımcılara aktarılmaktadır. Bu bağlamda içerikte şu konulara değinilmektedir:\nUnity3D Oyun Motoru\nGoogle Cloud Platform: Firebase\nFirebase: Authentication\nFirebase: Realtime Database\nFirebase Unity SDK\nVisual Studio\nC# Programlama Dili Temel Bilgi\nMultiplayer Oyun Altyapısı\nFirebase NoSQL Veritabanı Yapısı\nTic Tac Toe Multiplayer Oyun Yapımı",
      "target_audience": [
        "Unity3D oyun motorunu kullanarak mobil multiplayer (çoklu oyunculu) oyun geliştirmek isteyen herkes",
        "Bulut teknolojisine meraklı olan ve bu konuda kendini geliştirmek isteyen herkes"
      ]
    },
    {
      "title": "Math for 3D/Games Programmers - Part I (FREE)",
      "url": "https://www.udemy.com/course/math-for-3dgames-programmers-unity-3d-free-version/",
      "bio": "Learn comprehensively real-world math used in 3D games programming",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Trigonometry": [
          "Intro",
          "Trigonometric Functions",
          "Generic Sine Function",
          "Polar Coordinates",
          "Generating Points on Circle",
          "Spherical Coordinates",
          "Generating Points on Sphere",
          "Exercises"
        ],
        "Complex Numbers": [
          "Intro",
          "Definition",
          "Operations",
          "Trigonometric Form",
          "Exponential Form"
        ],
        "Vectors": [
          "Intro",
          "What is a Vector",
          "Vector Creation from Two Points",
          "Vector as a Point",
          "Addition",
          "Subtraction",
          "Linear Interpolation",
          "Vector Length",
          "Normalization",
          "Normal Vector",
          "Perpendicular Vectors in 2D",
          "Dot Product",
          "Vector Projection",
          "Cross Product (Perpendicular Vector in 3D)",
          "Point in Triangle (in 2D)",
          "Normalized Vector Compression"
        ],
        "Geometrical Objects Equations": [
          "Intro",
          "Line",
          "Line - Line Equation",
          "Line - Implicit Equation",
          "Line - Parametric Equation",
          "Circle",
          "Circle - Implicit Equation",
          "Circle - Parametric Equation",
          "Sphere",
          "Plane",
          "Plane - Implicit Equation",
          "Plane - Parametric Equation",
          "Triangle",
          "Triangle - Barycentric Coordinates",
          "Equations Optimization",
          "Exercises"
        ]
      },
      "requirements": [
        "Basic knowledge of C# and Unity engine. High-school level of math"
      ],
      "description": "This is the FREE version of the course that includes only the first 4 chapters (of 9). The full version will be available as a separate course.\nDoes any of the following describe your feelings?\nDo you want to thoroughly learn 3D mathematics, starting from the basics (such as trigonometry and vectors) and ending with more advanced topics (derivatives/integrals)?\nDo you already have some idea about 3D mathematics, you use it every day in programming, but still everything doesn’t quite come together and you feel/know that you have some gaps?\nYou don’t know which book (and the choice is wide) for 3D mathematics will be suitable for you to learn? Moreover, most of them have several hundred pages.\nDo you care about understanding theory and formulas, but at the same time you want to see that this theory has actual, practical application in game/3D programming?\nDoes it irritate you when, in various sources on 3D mathematics, authors explain in great detail what vectors are, only to then overwhelm you with equations with partial derivatives or integrals, without discussing them first?\nVectors, Euler angles, matrices, quaternions, derivatives, integrals… Why, if at all, is all this necessary for games/3D programming?\nThe “Math for 3D/Games Programmers” course is the result of my many months of work on a video course which, on the one hand, is intended to be very practical, and on the other hand explains how the theoretical background of the topics discussed, including from time to time delving a little deeper into derivation of some mathematical formulas important for game/3D programmers.\nOn the one hand, there is a lot of very solid and often voluminous books on 3D mathematics for programmers available on the market (requiring a lot of time to work through them), yet they contain few practical examples – reading dry formulas without observing them in action can make them very difficult to understand. On the other hand, we have plenty of free mathematical programming libraries for solving specific programming problems, but whose inner workings can be “dark magic” to us. This course is in the middle – we learn as much theory as needed to understand a given topic, and at the same time we learn this theory on specific sample programs.\nInterestingly, in many sources, such as the thick books mentioned above, topics such as vectors and matrices (in general, linear algebra) are explained very carefully, but for unknown reasons these sources assume that the reader is familiar with derivatives and integrals (calculus in general). This is, to say the least, a strange approach – if you need to explain vectors to someone, they certainly don’t know derivatives yet. By contrast, in this course, two large separate chapters are devoted to derivatives and integrals from a practical perspective. The chapter on derivatives, due to its extremely wide applications, is the largest in the entire course.\nThe sample programs are written in C# on the Unity 3D engine due to its ubiquity and ease of use. Additionally, using Unity 3D frees us from the need to write code that is not important from the point of view of the topics discussed. For example, we do not have to write code that draws 3D objects in a low-level graphics API such as DirectX, we just use the ready-made and basic Unity functionality. This ensures that all demo programs are concise and focus on the mathematical aspects of the problems being discussed. This also means that even though the demo programs are written in C# / Unity, porting them to other languages and engines will not be a major problem.\nThe course is intended for all programmers who are already involved in or want to be involved in programming video games and 3D applications/simulations. The course assumes that you already have at least a basic understanding of 3D mathematics from high school, and that concepts such as the 2D/3D coordinate system or quadratic equation are familiar to you. I’m also assuming that you already have at least a basic understanding of any game engine like Unity 3D.",
      "target_audience": [
        "Students, junior and mid software developers who work in the field of video games or related, who want to get a solid understanding of mathematics"
      ]
    },
    {
      "title": "Die komplette Unity & C# Masterclass - Entwickle 5 Spiele",
      "url": "https://www.udemy.com/course/die_unity_masterclass/",
      "bio": "Unity 2019 ermöglicht professionelle Spiele-Entwicklung. Lerne im Kurs deine eigenen 2D und 3D Spiele zu programmieren!",
      "objectives": [
        "Du wirst in der Lage sein in C# zu programmieren",
        "Du kannst diese Fähigkeiten auf andere Programmiersprachen übertragen",
        "Du lernst excellente Grundlagen der Spiele-Entwicklung",
        "Du siehst wie Objekt orientierte Programmierung in der Praxis aussieht",
        "Du entwickelst Deine eigenen Spiele :)"
      ],
      "course_content": {
        "Einführung": [
          "WICHTIG - Wie du das meiste aus diesem Kurs holst",
          "Was ist Unity eigentlich?",
          "Quiz 1",
          "Herunterladen und installieren von Unity",
          "Der Aufbau des Unity Interfaces",
          "Unity Interface Teil 2",
          "Layout Einstellen"
        ],
        "C# Grundlagen": [
          "Warum verwenden wir C#",
          "Unser erstes Script",
          "Variablen und Datentypen Int, Double, Float",
          "Variablen und Datentypen String, Char und Bool",
          "Quiz 2",
          "Methoden/Funktionen",
          "Quiz 3",
          "Arithmetische Operatoren",
          "Logische- und Vergleichsoperatoren",
          "Zuweisungsoperatoren",
          "Quiz 4",
          "If- Statements",
          "Arrays",
          "For Schleifen",
          "While Schleifen",
          "Do While Schleifen",
          "Quiz Schleifen",
          "Konstruktoren und Grundlagen von Klassen"
        ],
        "Unity Grundlagen": [
          "Scenes und Speichern von Scenes",
          "Prefabs in Unity",
          "Rigidbody Grundlagen",
          "Quiz Unity Grundlagen 1",
          "Glossar",
          "Collider in Unity",
          "Benutzeroberflächen Eingabemöglichkeiten",
          "Drag und Drop Herausforderung",
          "Wie man auf Components zugreift",
          "Debug Log und wie man an Problemlösungen kommt",
          "Spieler Bewegen mit Script",
          "Mehr Details zur Kamera",
          "Asset Store Vorstellung",
          "Assets aus dem Asset Store importieren",
          "Start, Update, OnEnable etc Methoden in Unity"
        ],
        "Space Invader Clone": [
          "Space Invader Intro",
          "Map aufsetzen",
          "Animationen - Bullet",
          "Spieler Animationen einfügen",
          "Physik ins Spiel einfügen",
          "Spieler bewegen",
          "Animator verwenden",
          "Animator fertigstellen",
          "Has Exit Time",
          "Kugeln erzeugen",
          "Kugeln Bewegen",
          "Kollision mit Wänden und Kugeln die Gegner zerstören",
          "Kugelfunktionalität fertigstellen",
          "Bullets zerstören jetzt auch",
          "Spieler zerstören",
          "Spawnpunkte einfügen und Instantiate",
          "Level neu Laden - wenn der Spieler stirbt"
        ],
        "Fruit Ninja": [
          "Fruit Ninja Intro",
          "Wie bauen wir das Spiel nach?",
          "Assets einpflegen und Blender installieren",
          "Frucht explodieren lassen",
          "Früchte spawnen Teil 1",
          "Früchte spawnen Teil 2",
          "Klinge anlegen",
          "Score und GameManager",
          "Einfügen der Bombe",
          "Bomben Spawnen",
          "Game Over UI einbauen",
          "Highscore anzeigen",
          "Spiel mit weiteren Früchten erweitern",
          "Spiele UI schöner machen",
          "Sound einfügen",
          "Fürs Handy vorbereiten"
        ],
        "Angry Birds": [
          "Angry Birds Hintergrund und Schleuder",
          "Hook und Physik für den Vogel",
          "Vogel fliegen lassen",
          "Mehrere Vögel",
          "Vogelzustände",
          "Große Vögel böse machen",
          "Gegner einbauen",
          "Wände einbauen",
          "Wand Script",
          "Weitere Wände und Bouncyness von Physics Materials",
          "Menü Scene aufsetzen",
          "Level Buttons einfügen",
          "Menu Buttons Sterne",
          "GameManager erstellen",
          "Game Over Panel und Zustand",
          "Vögel zerstören",
          "Level freischalten"
        ],
        "Tower Defense": [
          "Tower Defense Intro",
          "Anlegen des TowerDefense Levels",
          "Tanks platzieren",
          "Tanks Upgraden Teil 1",
          "Tanks Upgraden Teil 2",
          "GameManager und Münzen",
          "Den Pfad anlegen",
          "UI Erweitern",
          "GameManager erweitern",
          "Enemyscript Teil 1 - gegner fährt.",
          "Enemyscript Teil 2 - Rotation",
          "Camera Shake",
          "Lebensleiste einbauen",
          "Kugeln einfügen",
          "Fire Script Teil 1",
          "Fire Script Teil 2",
          "Rotieren des Tanks zum Gegner hin",
          "Spawner Teil 1",
          "Spawner Teil 2",
          "Behebung eines Fehlers",
          "Kosten einbauen",
          "UI erweitern",
          "Buttons implementieren",
          "Highscore permanent speichern",
          "Sound einbauen"
        ],
        "Ego Shooter": [
          "Einfügen der Assets",
          "Hinweis zu Projektdownloads in diesem Kapitel",
          "Einführung: Ego Shooter",
          "Wasser und Terrain bauen und Designen",
          "Einfügen von Gras",
          "Der Gegner läuft uns hinterher",
          "EnemyMovementController Script",
          "Gegner animieren",
          "EnemyCollisionController",
          "Gegner Spawnen",
          "SpawnController Script",
          "Schießen",
          "Shoot Script",
          "Gegner abschießen und zerstören",
          "Lebensanzeige einbinden",
          "Das Health Script",
          "PlayerHealth Script",
          "Die gegner greifen an",
          "Attackieren Animation",
          "EnemyAttack Script",
          "Ein paar Sounds einfügen",
          "Gegner Sterbeanimation - Animator und mehr",
          "Shoot Sound, Lauf Sound des Gegners und Ideen für das Spiel",
          "BulletController Script"
        ]
      },
      "requirements": [
        "PC auf dem Unity 3D 2019 funktioniert",
        "Spaß an Videospielen"
      ],
      "description": "Lerne wie man Videospiele mit Unity 3D, dem kostenlosen Speileentwicklungsprogramm erstellt.\n\nWir fangen mit sehr einfachen kleinen Schritten an, es spielt also keine Rolle, ob Du bereits Programmieren kannst, oder ein blutiger Anfänger bist.\nEinstieg in Unity\nProgrammierung in C#\nCoole Animationen erstellen\nBenutzung von Unity's Physics System\nMenüs und Einstellungen erstellen\nErstellung von 2D und 3D Spielen\nUnd vieles mehr!\nDer Kurs ist komplett Projekt basiert. Du musst dich also nicht erst durch langweilige Theorie durchkämpfen, sondern baust schon früh im Kurs coole eigene Spiele. Du entwickelst quasi von Anfang an echte Spiele.\n\nDie Spiele die Du entwickeln wirst:\nSpace Invaders\nFruit Ninja\nAngry Birds\nTower Defense\n3D First Person Ego Shooter\n\nNachdem wir die Grundlagen der Programmiersprache C#, in etwa einer Stunde durchgearbeitet haben, beginnen wir bereits mit unserem ersten Spiel. Einem Space Invader Clon. Dabei wirst Du direkt lernen wie man einen Figur bewegt, wie man Spielephysik einfügt etc.\nDer Kurs ist natürlich befüllt mit Übungsaufgaben und Quizzen, die es dir ermöglichen dein gelerntes Wissen zu festigen und zu bestätigen.\n\nDanach werden wir uns an eines der erfolgreichsten mobilen Spiele machen: Fruit Ninja. Dabei handelt es sich um einen mega Hit. Dabei lernst Du Spielelemente wie Spawner, Highscores, Touch Implementierung, die Vorbereitung fürs Verwenden auf Handys und vieles mehr.\n\nMit Fruit Ninja ist es aber noch nicht erledigt. Wir werden uns auch um Angry Birds kümmern, einem anderen Klassiker. Hierbei werden wir uns jedoch vor Allem mit Menüs, Spieleinstellungen, Level Design und\n\nAls viertes Projekte erstellen wir ein super umfangreiches Tower Defense Spiel. Dieser Spieletyp ist extrem beliebt und Du kannst ihn danach komplett anpassen und Dein eigenes Mega Spiel daraus machen. Das gilt übrigens für alle Projekte in diesem Kurs. Du darfst sie alle nach deinen Wünschen erweitern und veröffentlichen.\n\nAls krönenden Abschluss erstellen wir einen 3D Ego Shooter. Dabei wirst du lernen wie man:\nAnimationen verwendet\nEine 3D Welt schafft\nViele Assets kombiniert\nScripting/Coding auf der nächsten Ebene\nUnd vieles mehr\n\nDieser Kurs ist das Beste was es im deutschsprachigen Raum gibt. Das weiß ich, weil meine bisherigen Unity Kurs die erfolgreichsten waren und ich diesen nochmal viel besser gemacht habe. Der Kurs kombiniert meine Erfahrungen aus 5 Jahren Unity Entwicklung und drei Erfolgreichen Unity Kurs Erstellungen.\n\nEs ist folglich der ideale Kurs, wenn es darum geht geniale Videospiele mit Unity 3D 2019 zu entwickeln. Dem Tool, dass es ermöglicht Spiele für iOS, Android, PC, Xbox, PS$4 etc. zu entwickeln und welches von einigen großen Entwicklerstudios verwendet wird.",
      "target_audience": [
        "Alle die mit dem PC umgehen können",
        "Alle die Programmieren lernen wollen",
        "Alle die eigenen Spiele entwickeln wollen",
        "Blutige Anfänger die Lust auf eine Herausforderung haben",
        "Entwickler die Lust haben ein neues Tool zu lernen"
      ]
    },
    {
      "title": "Patrones de diseño para Videojuegos",
      "url": "https://www.udemy.com/course/patrones-de-diseno-para-videojuegos/",
      "bio": "Patrones de diseño para Videojuegos con Unity 3D",
      "objectives": [
        "Patrones de diseño para videojuegos",
        "Ventajas de trabajar con patrones de diseño",
        "Cómo aplicar patrones de diseño con Unity",
        "Realizar un videojuego desde 0 aplicando proyectos"
      ],
      "course_content": {
        "Bienvenida. Configuración inicial": [
          "Presentación del curso",
          "Configuración inicial",
          "Introducción a los patrones de diseño"
        ],
        "Movimiento de la nave": [
          "Movimiento de la nave",
          "Patrón Adapter",
          "Aplicando el patrón Adapter sobre el input",
          "Patrón Strategy",
          "IA simple",
          "Extra Strategy - Check limits",
          "Extra - Strategy vs Adapter"
        ],
        "Disparos de la nave": [
          "Disparos de la nave",
          "Patrón Mediator",
          "Aplicar el patrón Mediator",
          "Patrón Factory Method",
          "Aplicando el patrón Factory Method"
        ],
        "Ampliando los disparos de la nave": [
          "Nuevos proyectiles",
          "Patrón Template Method",
          "Aplicando el Template Method"
        ],
        "Creación de las naves enemigas": [
          "Allanando el camino - ShipFactory",
          "EnemySpawner v1",
          "Patrón Builder",
          "Aplicando el patrón Builder",
          "StartBattle con Menú",
          "Patrón Facade",
          "Aplicando el patrón Facade"
        ],
        "Destrucción de naves y puntos": [
          "Configuración de colisiones y modificaciones en el MovementController y CheckLim",
          "Modificaciones en el MovementController y CheckLimit",
          "Destrucción de naves y acumulación de puntos",
          "Patrón Singleton",
          "Aplicar el patrón Singleton sobre el ScoreView",
          "Panatalla de GameOver",
          "Patrón Observer",
          "Patrón EventQueue",
          "Patrón EventQueue con Observer",
          "Aplicando los patrones EventQueue y Observer",
          "Desuscribirse de los eventos"
        ],
        "Menú y flow del juego": [
          "Destrucción de las naves en el limite inferior y estados del juego - Parte 1",
          "Destrucción de las naves en el limite inferior y estados del juego - Parte 2",
          "Patrón State",
          "Aplicando el patrón State sobre el GameOver",
          "Flow inicial",
          "Patrón ServiceLocator",
          "Aplicando el ServiceLocator",
          "GameInstaller",
          "Flujo del menú",
          "Patrón Command y CommandQueue",
          "Aplicando el patrón Command y CommandQueue"
        ],
        "Almacenado de puntos, leaderboard y pausa del juego": [
          "Algunas mejoras extendiendo los comandos",
          "Composite",
          "Aplicando el patrón Composite",
          "Ejercicios propuestos y ultimas features",
          "Introducción a la feature de Pause",
          "Pause parte 1",
          "Pause parte 2",
          "Pause parte 3",
          "Introducción a la feature de Leaderboard",
          "Leaderboard parte 1",
          "Leaderboard parte 2",
          "Leaderboard parte 3"
        ],
        "Toca poner bonito nuestro juego": [
          "Añadiendo el arte para el MainMenu y Leaderboard",
          "Menú de pausa",
          "Actualizando los menús del juego",
          "Actualizando el fondo y añadiendo un desplazamiento",
          "Arte de las naves, explosiones y proyectiles",
          "Configuración del nivel"
        ],
        "Extras y mejoras": [
          "Extraer Factory de naves y proyectiles",
          "Patrón Object Pool",
          "Aplicando el Object Pool",
          "Detalles Object Pool"
        ]
      },
      "requirements": [
        "Tener algo de experiencia en la realización de videojuegos.",
        "Unity 2019.3.11f1 o súperior."
      ],
      "description": "El curso está totalmente orientado a aprender practicando, por eso iremos desarrollando un videojuego desde 0 aplicando los patrones de diseño.\nUno de los principales problemas a la hora de aplicar los patrones, es que al principio resulta confuso saber qué patrones aplicar y es fácil cae en el «patronitis».\n\nQue conozcamos los patrones de diseño y sepamos aplicarlos, no quiere decir que todo deba de ser un patrón, con este curso aprenderemos a identificar cuándo es necesario aplicar un patrón y cual de ellos. Los patrones están divididos en 3 grupos según el problema que intentan resolver, tenemos: patrones de creación, patrones de comportamiento y patrones de estructura. En el curso veremos en detalle estos 3 grupos.\n\n\nPara el curso utilizaremos Unity 3D por su versatilidad y por ser uno de los motores más utilizados en la industria, pero los conocimientos que adquieras los podrás aplicar con cualquier motor que elijas.\nUna vez aprendas a trabajar con patrones de diseño, podrás trasladar este conocimiento a cualquier tecnología y lenguaje de programación.\n\n\nSoy Daniel Parra y llevo más de 10 años desarrollando videojuegos en distintas empresas y para diferentes plataformas, he hecho tanto juegos para dispositivos móvil como para PC y consolas, con motores privados y con motores públicos como Unity y Unreal.\nDurante mi recorrido por la industria he podido ver algunos factores comunes que se repiten en todos los proyectos, y son la receta perfecta para el fracaso. Por desgracia he aprendido esto a la fuerza, he estado en proyectos que tuvieron éxito y en otros que no tuvieron tanto o incluso tuvieron que cerrar la empresa, no ha sido un camino fácil hasta aquí.",
      "target_audience": [
        "Programadores de videojuegos con algo de experiencia haciendo juegos (aunque sea a nivel personal) y que quieran mejorar la mantenibilidad y legibilidad de su código."
      ]
    },
    {
      "title": "2D Physics in the computer games",
      "url": "https://www.udemy.com/course/2d-physics-in-computer-games/",
      "bio": "Learn how to make 2D games using Godot physics for 2D bodies [ Mastering Godot book tutorials]",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Creating 2D game scene",
          "Collision shape 2D",
          "Useful links with educational content",
          "StaticBody2D",
          "RigidBody2D"
        ],
        "Godot 2D Physics with Static and Rigid 2D body's": [
          "2D Body's Methods",
          "2D Sprite",
          "StaticBody2D Friction",
          "Constant Linear Velocity",
          "Constant Angular Velocity",
          "KinematicBody2D"
        ],
        "2D Computer game": [
          "Keyboard interaction",
          "Basic elements for 2D game",
          "Finishing a 2D game",
          "2D Games examples"
        ]
      },
      "requirements": [
        "The prerequisite for this course is to download the free Godot game engine."
      ],
      "description": "Making a 2D game is one of the rare opportunities for individuals and small development teams. There are different types of 2D games, and one of the possibilities is that your game has elements of 2D game physics. For something like that you need to know 2D game bodies and 2D game physics. We will use the free Godot game engine for an explanation.\nIn the course beginning, you will learn about 2D nodes, StaticBody2D, CollisionShape2D, and RigidBody2D. After that, you will have the opportunity to learn about 2DBody's methods and interactions.\nWhen you learn about KinematicBody2D and interaction, you will start to learn through creating a 2D computer game. The example game will be a ball type of game where will we use 2D Godot physics for interactive game elements.\nThis course is part of a group of courses that promote the book \"Mastering Godot\". In additional content vlog about the Arleekinoo 2D adventure game is added.\nAnd now, I need to add 50. more words to this description content because 200. words are needed to be in the description. So, it will be good to learn from other free tutorials I create about Godot. Someone of them is not visible because of constant change in publishing policy, but few are. Also, I have one very good paid tutorial Learn to make commercial video games Godot mega tutorial I am recommending. Hope this is enough for a description.",
      "target_audience": [
        "Complete beginners"
      ]
    },
    {
      "title": "【Unity C# ゲーム開発入門】改訂版：リバーシではじめるゲーム開発",
      "url": "https://www.udemy.com/course/ild-unity-reversi/",
      "bio": "【全動画リニューアル！！】　初心者大歓迎！ボドゲ開発の一歩を踏み出そう。動画で基礎を学んでリバーシを開発します。別のゲームにも応用ができるようになるべくスクリプトを使ってやさしく解説しています。ぜひチャレンジしてみてください！",
      "objectives": [
        "ボードゲーム開発の知識",
        "UnityとC#の基礎知識",
        "別のボードゲーム制作でも役立つ思考方法",
        "対戦型ボードゲームの作り方",
        "ボードゲームのデータ構造"
      ],
      "course_content": {
        "紹介": [
          "最新動画についてお知らせ",
          "はじめに",
          "Q&Aガイドライン"
        ],
        "Unityのインストールと設定": [
          "最新動画についてお知らせ",
          "はじめに",
          "Unity HubとUnityのインストール",
          "Unityのインストール（うまくいかない時）",
          "Unityの初期設定",
          "ビューの役割"
        ],
        "Unityの基礎知識": [
          "最新動画についてお知らせ",
          "はじめに",
          "Unityの使い方と仕組み①",
          "Unityの使い方と仕組み②",
          "オブジェクトとスクリプトの関係",
          "オブジェクトとコンポーネントの関係",
          "ボタンの操作",
          "テキストの操作",
          "別オブジェクトの取得",
          "当たり判定（コライダー）の作り方",
          "Prefabの作り方とインスタンス",
          "シーン作成",
          "【おまけ】テクニック集"
        ],
        "C#の基礎知識": [
          "最新動画についてお知らせ",
          "はじめに",
          "前提知識とコメントとログ",
          "よく使う型と変数",
          "変数の生存期間",
          "変数の代入（型キャスト）",
          "const(定数)",
          "enum(列挙型)",
          "コンソールログの使い方",
          "演算と演算子",
          "比較演算子",
          "if文",
          "switch文",
          "for文",
          "while文",
          "配列",
          "2次元配列",
          "List",
          "List応用",
          "Dictionary",
          "15.foreachと配列まとめ",
          "関数入門①",
          "関数入門②",
          "クラス入門①",
          "クラス入門②",
          "コンポーネントの値を変更する（GetComponent）",
          "自作クラスへのアクセス方法",
          "アクセスレベルについて",
          "演習：3と5と倍数で文字を表示する",
          "AudioSource(サウンド)の操作①",
          "AudioSource(サウンド)の操作②"
        ],
        "リバーシの作成": [
          "最新動画についてお知らせ",
          "はじめに",
          "3Dオブジェクトの作成",
          "フィールドの当たり判定作成",
          "2Dオブジェクトの作成",
          "ユニットとプレイヤーのスクリプト",
          "ディレクターの役割について",
          "ディレクター作成",
          "フィールド初期化関数",
          "ユニット配置関数",
          "タッチ関数",
          "モードとターン関数",
          "途中確認",
          "ひっくり返す関数（1方向）",
          "ひっくり返す関数（全方向）",
          "勝敗チェック",
          "CPUの関数",
          "インフォ関数",
          "ウェイト関数",
          "ボタンの設定",
          "ユニットのアニメーション",
          "ポストプロセス",
          "【おまけ】アルティメットリバーシ"
        ],
        "【おまけ】便利なTIPS": [
          "便利な使い方とキーボードショートカット",
          "シーンのライティングがおかしい時に確認する項目"
        ]
      },
      "requirements": [
        "パソコンの基本的な操作",
        "キーボード操作"
      ],
      "description": "最新公開バージョンについて\n現在公開されている動画は、フィードバックを反映した最新バージョンになります。\n全てのレクチャーを低解像度でも見やすいズーム設定にして再録画\n要望のあったレクチャーを10個追加（約2時間分）\n選択できる方は動画の設定で1080pを選択ください。（全動画1080p化は現在Udemy側で対応中です）\nまた文字が見づらかったり、レクチャーの追加依頼などはお手数ですがメッセージいただけますと幸いです。\n\n\nこちらのコースでは\nUnityのインストール\nUnityの基本的な使い方\nC#の基本的な使い方\nボードゲームの作り方（リバーシ）\nが効率的に学習できます。\nなるべくスクリプト（プログラミング）を利用して制作していくので\nリバーシだけに限らず、アイデア次第で汎用的なボードゲームを制作する知識も身につきます。\n\n\nまた、私のコースは日々頂いたレビューに対応しアップデートを行なっています。",
      "target_audience": [
        "ゲームが好きな気持ちをお持ちの方",
        "ゲームを作りたい初心者の方",
        "ボードゲームの作り方に興味がある方",
        "汎用的なゲームの作り方を知りたい方"
      ]
    },
    {
      "title": "Introducción a Unity® 2021 y Tu Primer Videojuego Completo",
      "url": "https://www.udemy.com/course/unity-5-primer-videojuego-2d-multiplataforma/",
      "bio": "Curso práctico desde CERO donde aprenderás el motor Unity® 2021, a programar scripts C# y a desarrollar tu primer juego.",
      "objectives": [
        "A utilizar el motor Unity desde cero",
        "A programar tus primeros scripts en C#",
        "A crear un videojuego 2D sencillo con las mejores prácticas",
        "A realizar diseños multiplataforma funcionales en cualquier dispositivo",
        "A utilizar los objetos de UI para crear el escenario de tus juegos",
        "A crear un efecto parallax de fondo en distintas capas",
        "A manejar animaciones y colisiones utilizando scripts",
        "A comunicar los objetos entre ellos con sistemas",
        "A generar objetos de forma dinámica",
        "A exportar el juego en PC, Web y Android",
        "A reproducir efectos de sonido y música",
        "A guardar datos persistentes y más!"
      ],
      "course_content": {
        "Bienvenida": [
          "Presentación",
          "Petición personal"
        ],
        "Fundamentos del motor": [
          "Fundamentos del motor",
          "Lo bueno y no tan bueno",
          "Instalación y licencia",
          "Unity Hub",
          "Interfaz del programa",
          "Cámara y playmode",
          "Atajos y combinaciones",
          "Componentes",
          "Herencia y prefabs",
          "Paquetes y la Asset Store",
          "Práctica de composición",
          "Entorno y horizonte",
          "Partículas de polvo",
          "Postprocesado: Anti-aliasing",
          "Postprocesado: Efectos",
          "Distribución y resolución"
        ],
        "Introducción al scripting C#": [
          "Introducción al scripting C#",
          "Visual Studio",
          "Configuración del proyecto",
          "Qué es el scripting",
          "Estructura de un script",
          "Ciclo de vida de un script",
          "Variables y tipos de datos",
          "Manipulación de datos",
          "Ejemplos de valores literales",
          "Propiedades del componente Transform",
          "Manipulación de un Vector3",
          "Intervalo entre fotogramas",
          "Acceso a los componentes",
          "El tipo lógico",
          "Operaciones relacionales",
          "Condición if-else if-else",
          "Operaciones lógicas",
          "Arreglos de datos",
          "Bucle foreach",
          "Bucle for",
          "Práctica de scripting"
        ],
        "Tu primer videojuego": [
          "Tu primer videojuego",
          "Qué aprenderás",
          "Diseño responsivo",
          "Creando la escena",
          "Efecto Parallax",
          "Inicio del juego",
          "Creando al protagonista",
          "Animación de correr",
          "Animación de saltar",
          "Creando al enemigo",
          "Generador de enemigos",
          "Autodestruir enemigos",
          "Animación de muerte",
          "Reinicio y cierre",
          "Dificultad progresiva",
          "Marcador de puntos",
          "Guardado del récord",
          "Sistema de audio",
          "Distribución multiplataforma",
          "Bonus"
        ]
      },
      "requirements": [
        "No se requieren conocimientos previos, se enseña todo desde cero."
      ],
      "description": "¿Quieres aprender Unity® desde cero sin experiencia previa? ¿Te gustaría desarrollar tu primer videojuego completo y multiplataforma en PC/Web/Android? Si es así, estás en el lugar adecuado.\nEl motor Unity es tan extenso que es difícil saber por dónde empezar... Por suerte ahora puedes aprender a utilizar este programa empezando por lo más básico, explorando poco a poco sus diferentes funcionalidades y componentes, practicando el lenguaje C# creando pequeños scripts de código y forjando tus propias bases en el desarrollo de videojuegos para tus propias creaciones.\nHe creado este curso para demostraros que con la dicción adecuada es posible aprender a desarrollar un sencillo pero interesante videojuego en muy pocas horas partiendo absolutamente desde cero, aprendiendo por el camino algunas de las mejores prácticas de desarrollo.\nNo solo aprenderás los fundamentos del motor y el scripting en C#, sino también un montón de conceptos útiles y reutilizables para crear tus propios proyectos, tales como:\nLa realización de diseños multiplataforma funcionales en cualquier dispositivo.\nLa utilización de objetos de UI para crear el escenario de tus juegos y efectos parallax.\nEl manejo de animaciones, colisiones y partículas desde scripts.\nEl manejo de objetos de forma dinámica (crearlos, posicionarlos y destruirlos).\nLa comunicación de objetos entre ellos mediante sistemas y patrones reutilizables.\nNo desaproveches esta oportunidad y únete a este fantástico curso. ¡Aprende a desarrollar videojuegos hoy mismo con Hektor Profe!",
      "target_audience": [
        "A principiantes del desarrollo de videojuegos que deseen partir desde cero",
        "A estudiantes que quieran aprender a programar un videojuego 2D completo",
        "A apasionados del desarrollo de videojuegos que quieran explorar el motor Unity",
        "A cualquiera capaz de esforzarse en conseguir sus objetivos"
      ]
    },
    {
      "title": "Unity 3D İle RPG Oyun Geliştirme Öğrenin",
      "url": "https://www.udemy.com/course/unity-3d-ile-sfrdan-rpg-oyun-gelistirme/",
      "bio": "Boş Bir Pencereden Başlayarak Kendi RPG Oyununu Geliştirmeye Hazır Mısın?",
      "objectives": [
        "Her şeyi sıfırdan yaparak boş bir pencereyi nasıl bir RPG oyuna dönüştüreceğimizi öğreneceğiz.",
        "Kodlama ve problem çözme becerilerimizi geliştireceğiz.",
        "C# Yazılım dilini Unity oyun motorunu kullanarak öğreneceğiz.",
        "Unity oyun motorunu nasıl kullanacağımızı ve kendi oyunlarımızı nasıl geliştireceğimizi.",
        "Düşmanlar ve NPC'ler için yol bulma sistemleri ve devriye yolları oluşturacağız.",
        "Oyuncu ve düşman istatistiklerini ve animasyonlarını sıfırdan yapacağız (ör. Sağlık, hasar, hareket, saldırı hızı ve daha fazlası).",
        "Yetenek sistemimizi oluşturup bekleme süreleri, seviye atladıkça yeteneklerin açılması gibi ileri seviye konuların üzerinde duracağız.",
        "Yapay zekamız için ileri seviye karar mekanizması oluşturacağız.",
        "Particles, Post processing, Lighting gibi konuların üzerinde duracağız.",
        "Canvas ve UI kullanımını öğreneceğiz."
      ],
      "course_content": {
        "Unity kurulumu ve kaynak dosyalar": [
          "Kaynaklar",
          "Kurulum"
        ],
        "Oyuncu kontrolü": [
          "Not",
          "Sahne Oluşturma",
          "Oyuncu Hareket Kodu Bölüm 1",
          "Oyuncu Hareket Kodu Bölüm 2",
          "Kamera Kontrolü",
          "Mouse İmleci değiştirme",
          "Hareket Noktası Efekti Oluşturma",
          "Tıkladığımız Yerde Hareket Noktası Oluşturmak"
        ],
        "Kullanıcı Arayüzü Oluşturma": [
          "UI Tasarımı Bölüm 1",
          "UI Tasarımı Bölüm 2",
          "UI Animasyonları Oluşturma"
        ],
        "Yetenek Sistemi": [
          "Animasyon Oluşturma",
          "Animasyonları Oyuna Yerleştirme",
          "Yetenek Sistemi Bölüm 1",
          "Yetenek Sistemi Bölüm 2",
          "Animasyonları Ve Bekleme Sürelerini Düzenleme",
          "Mana Sistemi",
          "Baktığımız Yöne Yetenek Kullanma",
          "Yetenek Efektleri Oluşturma"
        ],
        "Yapay Zeka Oluşturmak": [
          "Yapay Zeka Kavramları Bölüm 1",
          "Yapay Zeka Kodlama",
          "Yapay Zeka Kavramları Bölüm 2",
          "Yapay Zeka Hata Çözümü",
          "Yapay Zeka Can Kontrolü"
        ],
        "Yetenek Etkilerini Oluşturma": [
          "Yeteneklerin Hasar Vermesi",
          "Oyuncu Can Sistemi",
          "Yetenek Etkileri Bölüm 1",
          "Yetenek Etkileri Bölüm 2",
          "Yetenek Etkileri Bölüm 3"
        ],
        "Yapay Zekamızı Geliştirelim": [
          "Yapay Zekanın Oyuncuya Hasar Vermesi",
          "Yapay Zekanın Hasar Aldığında Tepki Vermesi Ve Ölmesi",
          "Yapay Zeka Can Barı"
        ],
        "Sağ Tıklayarak Düşmana Saldırma": [
          "Yapay Zekanın Üzerine Gelince Mouse İmlecini Değiştirmek",
          "Sağ Tıklayarak Düşmana Vurma",
          "Sağ Tıklayarak Düşmana Hasar Verme",
          "Yapay Zeka Ve Oyuncu Hata Çözümleri"
        ],
        "Seviye Sistemi Oluşturma": [
          "Seviye Menajeri Oluşturma",
          "Seviye Atladıkça Yeteneklerin Açılması",
          "Seviyemizi UI Da Göstermek",
          "Seviye Atlama Efekti Oluşturma"
        ],
        "Boss Oluşturma": [
          "Boss İçin Prefab Oluşturma",
          "Boss İçin Animatör Oluşturma",
          "Boss İçin Yapay Zeka Kodlama Bölüm 1",
          "Boss İçin Yapay Zeka Kodlama Bölüm 2",
          "Boss Yeteneklerini Kodlama",
          "Boss İçin Can Barı Oluşturma"
        ]
      },
      "requirements": [
        "Unity oyun motorunu kurabileceğiniz bir bilgisayar.",
        "Öğrenme isteği ve sabır."
      ],
      "description": "Kurs fiyatı sabittir indirime girmeyecektir\n\n\nKendi RPG oyununuzu yapmak istiyorsunuz ama nerden başlayacağınızı bilmiyor musunuz?\nO zaman doğru yerdesiniz. Bu eğitim serimizde hem sıfırdan Unity oyun motorunu öğreneceksiniz hem de günümüzün en gelişmiş yazılım dillerinden biri olan c# yazılım dilini nasıl kullanacağımızı öğreneceğiz. Bu kursta her aşamayı adım adım açıklıyorum ve yazdığım her satır kodun çalışma mantığını örnekler göstererek açıklıyorum. Kurs esnasında size ödevler vererek bilginizi artırmanıza yardımcı oluyorum.\nYazılım veya Unity bilginiz yok ama oyun geliştirmek mi istiyorsunuz?\nBu kursu izlemek için yazılım veya Unity bilginizin olması bir gereksinim değildir. Yaptığım her şeyi adım adım açıklayarak anlatıyorum. Kodlamaya hakim olmasanız bile bu kursun sonunda kodlamaya hakim olarak ayrılacaksınız.\nÖnceden yazılım ve Unity alanında tecrübeniz var ama kendi kodlarınızı Yazamıyor musunuz?\nEğitim serisi boyunca bir sorunun birden fazla çözümünü göstermek için çaba harcadım bu kursun sonunda bir sorunun birden fazla çözümünü öğreneceksiniz. Böylece size uygun olan yöntemi envanterinize ekleyerek kilit sorunları istediğiniz yöntem ile çözebilirsiniz.\nUnity Oyun Motoru Nedir, Bende Yok?\nUnity bir oyun geliştirme aracıdır. Bir çok teknolojiyi içinde barındırıyor. Yüklemesi ve kullanması ücretsiz bir araçtır. Windows veya Mac cihazınıza internet hızınıza bağlı olarak 30 dakika içinde kurarak oyun geliştirmeye başlayabilirsiniz.\nBu Kurs Bitti Mi Yoksa Devamı Gelecek Mi?\nKusun eğitim içeriği tamamen tamamladı. League Of Legends, Dota, Diablo gibi oyunlarda kullanılan birçok RPG mekaniğinin nasıl yapıldığı kursun içeriğinde mevcuttur. Bu kursu tamamladığınızda öğrendikleriniz ile tamamladığımız oyunu istediğiniz gibi geliştirmeye devam edip kendi oyununuzu çıkartabilirsiniz!",
      "target_audience": [
        "Oyun geliştirmeye merak duyan ve öğrenmek isteyen kimselere.",
        "Oyun geliştirmeyi öğrenmek isteyen kimselere.",
        "Unity' de RPG oyun geliştirmek isteyenler.",
        "Unity oyun motorunu öğrenmek isteyenler.",
        "C# ve Unity ile yapay zeka kodlamayı öğrenmek isteyenler.",
        "Particles, Post processing, Lighting gibi konuları öğrenmek isteyenler."
      ]
    },
    {
      "title": "Unreal Engine 5 de 0 a DIOS",
      "url": "https://www.udemy.com/course/unreal-engine-5-de-0-a-dios/",
      "bio": "Crea Videojuegos y Cinemáticas en Unreal Engine 5 partiendo de nivel 0 hasta nivel Profesional. Este es EL curso.",
      "objectives": [
        "Crear videojuegos AAA con inteligencia artificial, animaciones, metahumanos y entornos realistas.",
        "Aprender cinemáticas para cine y videojuegos usando a humanos con animación facial propia",
        "Dominar todas las herramientas de Desarrollo de UE5 tanto para juegos indie como AAA y otras industrias audiovisuales o arquitectura",
        "Exprimir todas las herramientas para cine y animación de Unreal para realizar cortos, obras interactivas o incluso películas enteras",
        "Conocer a fondo la programación visual mediante Blueprints, la creación de efectos mediante Niagara o los potentes materiales de Unreal Engine 5",
        "Aplicar conceptos avanzados para iluminar en tiempo real cualquier personaje o entorno mediante Lumen y Nanite"
      ],
      "course_content": {},
      "requirements": [
        "Solo conocimientos básicos de informática son requeridos.",
        "Utilizaremos Unreal Engine 5 (que enseñaremos a descargarlo en las primeras clases) la gran mayoría de clases del curso.",
        "Empezamos DESDE CERO (nivel amateur) hasta llegar a NIVEL AVANZADO (listo para entrar a trabajar como Junior en la industria del videojuego o crear tus propios juegos de calidad AAA)",
        "PC con Windows 7/8/10/11, x64 o bien un Mac con Mac OS X 10.9.2 o superior.",
        "Para algunas secciones concretas también utilizaremos software gratuito como Audacity e incluso 3ds Max y Photoshop (para aprender a importar tus propios modelos, texturas y sonidos dentro de Unreal Engine!) Por otra parte, si solo quieres centrarte en aprender Unreal en el curso se te ofrece una carpeta con todo el contenido que vayamos a crear fuera de Unreal por si solo quieres aprender de Unreal (la gran parte del curso). En pocas palabras, nos centraremos en aprender UE5 pero también tocaremos otros programas complementarios!"
      ],
      "description": "Nota: Curso realizado por Carlos Coronado, certificado como Instructor Autorizado oficial por Epic Games, empresa propietaria de Unreal Engine.\n\nSimple y llanamente, el mejor curso de Unreal Engine 5 en Español. En este curso aprenderás todo lo necesario de la mano de Carlos Coronado, desarrollador multipremiado de videdojuegos de éxito como EVIL NUN: The Broken Mask, KORAL o Horror Tales The Wine para Pc y consolas como Switch o PS5.\n\nUnreal Engine 5 es el motor más famoso y versátil (además de gratis!) de la industria del videojuego con títulos a sus espaldas como Fortnite o Final Fantasy VII Remake. Además, en la industria cinematrográfica también usan Unreal Engine 5 en productos de gran éxito como The Mandalorian. En este curso aprenderás todo lo necesario para poder trabajar utilizando Unreal Engine cine, videojuegos o infoarquitectura.\n\nQué hace este curso especial?\n\nEl hecho que diferencia este curso de otros es que todo lo explicado (desde la primera clase hasta la última) se explica mediante ejemplos prácticos al mismo tiempo que desarrollamos entornos, personajes y animaciones creando juegos y cinemática de altísima calidad; crearemos al mismo tiempo que aprendemos aspectos tan diversos como animación facial, diseño de entornos o efectos especiales!\n\nNinguna de las clases están enfocadas a explicar teoría, todo lo contrario! Siempre, siempre construiremos al mismo tiempo que explicamos mediante ejemplos prácticos que nos servirán para desarrollar infinidad de contenido Este es el orden en el que aprenderemos y aplicaremos los conocimientos:\n\n\nPrimero empezaremos descargando Unreal Engine y aprenderemos lo básico de lo básico.\nSeguidamente apretaremos el acelerador y construiremos un juego fotorrealista con cinemáticas en las primeras horas del curso de forma rápida, profesional y eficiente.\nTras este bautismo descubriremos a fondo la potencia de Lumen y Nanite. Lumen nos permitirá obtener resultados fotorrealistas con gran facilidad y Nanite nos permitirá no tener límite en el detalle de nuestras creaciones.\nUna vez adquirida una base sólida profundizaremos en el sistema de materiales y efectos especiales en tiempo real de Unreal Engine para poder dotar a nuestras creaciones de una calidad visual sin parangón, creando terrenos con parámetros avanzados como cielos HDR, microgeometría o texturas virtuales.\nA continuación programaremos un juego en primera persona viendo aspectos avanzados de la programación mediante blueprints creando objetos con físicas, interactuables, interfaz de usuario y todo lo necesario para crear aventuras en primera persona.\nJusto después de acabar el juego profundizaremos más en las cinemáticas, utilizando humanos en ellas e integrando las cinemáticas en el gameplay sin que se perciba la transición.\nPor fin llegaremos a las secciones avanzadas de animación, donde no solo animaremos sino que haremos que un personaje se anime dinámicamente en tercera persona con un sistema de movimiento y de cámara AAA muy similar al de God Of War Ragnarok creando las bases de un juego en tercera persona con animaciones profesionales.\nUna vez dejado atrás el apartado de animación nos meteremos de lleno en Inteligencia Artificial, donde programaremos un enemigo inteligente que patrulla, tiene rango de visión y es capaz de atacarnos. Además también veremos como usar Niagara para mejorar los efectos especiales del enemigo, su ataque y dotaremos todo de feedback visual y sonoro mediante vibración de mando, shake de cámara o blood screen.\nLlegados a este punto realizaremos un menú para poder navegar dinámicamente entre varios niveles del juego con gamepad y poder configurar la calidad gráfica del juego.\nLlega entonces el momento de sonorizar todo lo creado hasta entonces. Desde los golpes de objetos físicos a sonidos que son ocluidos por el entorno pasando por sonidos para transicionar de nivel sin cortes.\nPara acabar, pondremos todo lo aprendido en práctica creando nuestro primer metahumano, un sistema para generar humanos fotorrealistas de Unreal Engine. No nos quedaremos aquí sino que mediante un iphone animaremos facialmente a nuestro metahumano y crearemos un sistema de diálogos dinámico dentro de Unreal Engine.\nPor fin llegaremos al final del curso tras 40 horas y es entonces cuando exportaremos nuestro juego para poder comercializarlo.\n\nQué hacer a Carlos Coronado un buen maestro?\nCarlos Coronado Muñoz ha desarrollado más de 6 juegos en solitario con Unreal Engine 5 para diversas plataformas entre las que se incluyen Nintendo Switch, Playstation 4, Steam o VR. Algunos de sus juegos como MIND: Path to Thalamus han ganado premios internacionales como el TITANIUM Indie Game of the Year Award o son considerador directamente GOTY por desarrolladores, youtubes y periodistas de prestigio como Evil Nun The Broken Mask. Además, es profesor de creación de juegos con Unreal Engine 5 y proyectos desde hace más de 8 años en la Universidad de Barcelona (la única universidad de habla hispana que logra llegar al TOP 50 de QS World University Rankings).\n\nNo solo sus cursos sobre Unreal Engine han sido premiados por EPIC GAMES sino que desde 2022 es Partner Académico Oficial de Unreal Engine colaborando continuamente a mejorar Unreal Engine.",
      "target_audience": [
        "Apasionados de los videojuegos con ganas de crear sus propios juegos con herramientas profesionales y gratuitas! (Unreal Engine 5 es el motor de Fortnite, The Mandalorian y muchisimas otras obras!)",
        "Creadores y estudios de videojuegos con ganas de aprender Unreal Engine 5 y profundizar en el.",
        "Diseñadores, artistas y programadores que quieran trabajar con Unreal Engine en la industria del videojuego.",
        "Estudiantes de videojuegos, animación o cine con curiosidad por trabajar con un motor de videojuegos"
      ]
    },
    {
      "title": "Marketing para lanzar juegos en Steam, Consolas y Móviles",
      "url": "https://www.udemy.com/course/marketing-para-lanzar-juegos-en-steam-consolas-y-moviles/",
      "bio": "Marketing enfocado 100% a los videojuegos desde cero hasta nivel avanzado en Switch, PS4, Xbox, Smartphones, Steam etc",
      "objectives": [
        "Aprender nociones de marketing básicas y avanzadas",
        "Aprender las distintas características de Steam para adaptar el marketing a esta plataforma y así maximizar beneficios",
        "Descubrir todo lo necesario para lanzar un videojuego en Nintendo Switch, PS4, Xbox One o otras consolas",
        "Analizar la situación actual del mercado para tomar las decisiones correctas a la hora de desarrollar un juego",
        "Aplicar herramientas de SEO y posicionamiento así como adaptar productos a los algoritmos de Steam y otras tiendas Online para ganar visibilidad sobre otros juegos"
      ],
      "course_content": {
        "Introducción": [
          "Presentación del curso",
          "Conoce a tu profesor Carlos Coronado",
          "Aprende con más estudiantes en Discord",
          "Acerca de las valoraciones prematuras en Udemy",
          "Entrevistas a otros desarrolladores",
          "Recursos de utilidad",
          "Clases y desarrollo profesional de juegos en directo por TWITCH! Únete!"
        ],
        "Fundamentos básicos del marketing para videojuegos": [
          "Qué es el Marketing",
          "Marketing, la media naranja de un desarrollo",
          "Como compra juegos el jugador",
          "Estado actual de la industria del videojuego",
          "La calidad no se negocia",
          "El pragmatismo",
          "Imitar y copiar"
        ],
        "El mercado de los videojuegos": [
          "Qué es el mercado",
          "Detectar oportunidades",
          "Mercados saturados y nichos",
          "el público objetivo",
          "Beneficio económico y popularidad",
          "La enorme importancia de las rebajas",
          "El precio justo"
        ],
        "Marketing para Indies": [
          "Fijarte en los más grandes, el peor error que puedes cometer",
          "Elementos indispensables para conseguir un fracaso",
          "El juego que quieres hacer, el que puedes hacer y el que quiere el mercado",
          "Endeudarse",
          "Los publishers"
        ],
        "SEO y Posicionamiento para videojuegos": [
          "Qué es el SEO",
          "Utilidad de un buen posicionamiento",
          "Mejorar el posicionamiento usando los tags adecuados",
          "El EGO y el SEO",
          "El título de tu juego",
          "Ejemplos de títulos de juegos con buen SEO",
          "Ejemplos de títulos de juegos con mal SEO"
        ],
        "Marketing para Steam": [
          "Análisis de la situación actual de Steam",
          "Como ser desarrollador de Steam",
          "Steamspy, análisis de nichos y mercados saturados",
          "La sagrada lista de deseados \"Wishlist\"",
          "Los user tags",
          "Las comunidades de Steam",
          "La importancia de las traducciones",
          "Las user reviews de Steam",
          "Logros y cromos de Steam",
          "La importancia del Gamepad",
          "Las rondas de visibilidad",
          "Los bundles, una solución a corto plazo",
          "Diseño de imágenes óptimas para Steam"
        ],
        "Marketing para Consolas (PS4, Switch, Xbox One)": [
          "La importancia de las consolas",
          "No lances tu primer juego en consolas",
          "Party Games y juegos óptimos para consolas",
          "Controles de calidad",
          "Ports elegantes",
          "Acceder a los devkits de las consolas",
          "Acuerdos de confidencialidad",
          "Obtener el devkit de PS4",
          "Obtener el devkit de Xbox One",
          "Obtener el devkit de Nintendo Switch",
          "Certificación",
          "El primero en llegar"
        ],
        "Marketing para Smartphones": [
          "Mercado de Smartphones",
          "Controles en dispositivos táctiles",
          "Android",
          "Iphone",
          "Tablets",
          "Ultrasaturación"
        ],
        "Redes Sociales": [
          "La importancia de las redes sociales",
          "Facebook",
          "Twitter",
          "Instagram",
          "Anuncios",
          "La omnipotencia de reddit",
          "Eventos y conferencias"
        ],
        "Youtubers, Streamers y otros influencers": [
          "La importancia de los youtubers y otros influencers",
          "Influencers de habla inglesa",
          "influencers de nicho",
          "Woovit",
          "Cómo contactar con influencers",
          "Twitch y streamers",
          "Prensa"
        ]
      },
      "requirements": [
        "Solo conocimientos básicos de informática son requeridos.",
        "Empezamos DESDE CERO (sin conocimientos previos de marketing) hasta llegar a NIVEL AVANZADO (contando con entrevistas a desarrolladores de éxito!)"
      ],
      "description": "En este curso aprenderás todo lo necesario  para dominar el marketing para videojuegos. Este curso te permitirá dominar el marketing durante el lanzamiento de un videojuego y toda su vida posterior tanto en dispositivos móviles, consolas (PlayStation 4, Xbox One, Nintendo Switch) o plataformas como Steam. El marketing es la mitad del desarrollo de un videojuego y muchas veces es tanto o más importante que la calidad del juego! Sin un buen marketing es difícil que los videojuegos lleguen a su público objetivo y por tanto que generen ventas!\n\n\nQué hace este curso especial?\nEl hecho que diferencia este curso de otros es que todo lo explicado (desde la primera clase hasta la última) se explica mediante ejemplos prácticos de juegos lanzados con éxito. Esto incluye ejemplos de terceros pero también ejemplos de marketing en Mind: Path to Thalamus e Infernium (desarrollados y gestionados por Carlos Coronado, instructor del curso para Steam y consolas) y también entrevistas a otros desarrolladores de habla hispana que han gozado de éxito en sus proyectos y que nos explicarán cómo han enfocado el marketing de sus juegos.\nNinguna de las clases están enfocadas a explicar teoría, todo lo contrario! Siempre, siempre usaremos al mismo tiempo que explicamos los conceptos aprendidos en ejemplos prácticos que nos servirán para aprender más sobre marketing al mismo tiempo.\nEmpezaremos descargando qué es el márketing y nos familiarizaremos con conceptos básicos.\nSeguiremos analizando el mercado de los videojuegos actual y aprenderemos a detectar nichos, mercados saturados, etc.\nTras esta prueba de fuego exploraremos el marketing para desarrolladores independientes y veremos todo lo que se puede hacer con recursos limitados.\nUna vez con las ideas claras estudiaremos que es el SEO y el posicionamiento y cómo podemos sacarle el máximo partido mediante un buen título del videojuego entre otros aspectos.\nDespués estudiaremos el mercado de Steam específicamente mirando cada detalle: desde los users tags, la lista de deseados, la importancia de las traducciones, etc.\nVeremos el marketing orientado a lanzar juegos en consolas y también investigaremos cómo obtener los kits de desarrollo de estas consolas.\nEs en este punto en el que acabaremos las secciones específicas analizando el mercado para Smartphones.\nEn la siguientes secciones aprenderemos aspectos avanzados como gestionar las redes sociales o sacar el máximo partido a reddit.\nPor fin llegaremos ya a hablar sobre Youtubers, Streamers y otros influencers. En esta sección miraremos cómo podemos contactar con ellos y conseguir que se interesen por nuestros juegos.\nPara acabar, analizaremos ejemplos de éxito propios (Mind: Path to Thalamus, Annie Amber e Infernium entre otros) y también entrevistaremos a desarrolladores que han tenido éxito para que nos expliquen cómo han enfocado el marketing de sus productos.\nQué nos hace unos buenos maestros?\nJuan Gabriel Gomila es actualmente el instructo en Español de Udemy con más estudiantes en sus cursos, activo desde 2015 y profesor de la universidad de Mallorca. Cuenta con su propia empresa de creación de videojuegos llamada Frogames y ha lanzado una infinidad de juegos para diversas plataformas.\n\nCarlos Coronado Muñoz (instructor con el que aprenderéis durante gran parte del curso) ha desarrollado más de 5 juegos en solitario con Unreal Engine 4 para diversas plataformas entre las que se incluyen Nintendo Switch, Playstation 4, Steam o VR. Algunos de sus juegos como MIND: Path to Thalamus han ganado premios internacionales como el TITANIUM Indie Game of the Year Award o son considerador directamente GOTY por desarrolladores, youtubes y periodistas de prestigio como Infernium. Además, es profesor de creación de juegos con Unreal Engine 4 y proyectos desde hace más de 4 años en la universidad de Barcelona (la única universidad de habla hispana que logra llegar al TOP 50 de QS World University Rankings).",
      "target_audience": [
        "Apasionados de los videojuegos con ganas de crear sus propios juegos y venderlos de forma profesional!",
        "Creadores y estudios de videojuegos que quieran mejorar el marketing de sus productos sin invertir dinero",
        "Diseñadores, artistas y programadores que quieran familiarizarse con el marketing para adapar sus productos al mercado"
      ]
    },
    {
      "title": "Construct 2 - 3 Jogos de Plataforma (Puzzle,Aventura e Luta)",
      "url": "https://www.udemy.com/course/construct-2-jogos-de-plataforma/",
      "bio": "Aprenda como criar seus próprios Jogos de Plataforma com o Construct 2 do Zero, sem codificação!",
      "objectives": [
        "Como desenvolver três jogos na engine Construct 2 de Plataforma com Aventura, Quebra-Cabeça e Luta",
        "Criar seus próprios jogos por meio da engine Construct 2",
        "Publicar o jogo na internet",
        "Animação de Personagens",
        "Controles com Mouse e Teclado",
        "Level Design com Tilemaps",
        "Respawn",
        "Checkpoint",
        "Transição de Fases",
        "Criação de Menus",
        "Itens de Vida Extra",
        "Encontrar Assets Gráficos",
        "Obstáculos",
        "Ajuste de Layout e Collision",
        "Joystick Virtual",
        "Enfeites no cenário",
        "Disparo de Projéteis Animados",
        "Efeito de Ácido movendo",
        "Barra de Vida",
        "Câmera Dinâmica com Lerp",
        "Ativação de Alavancas",
        "Golpes",
        "Mecanismos de Physics",
        "Jogadores com Diferentes Habilidades",
        "Soco com empurrão",
        "2 Jogadores",
        "Super Poderes",
        "Itens",
        "Temporizador"
      ],
      "course_content": {
        "Plataforma com Aventura - Introdução": [
          "Introdução da Plataforma Udemy",
          "Instalação do Construct 2",
          "Recursos Gráficos - Plataforma com Aventura",
          "Projeto Final - Plataforma com Aventura",
          "Estrutura Inicial",
          "DESCONTÃO PARA OUTROS CURSOS",
          "LINKS DE DESCONTOS PARA ALUNOS ATUAIS",
          "Jogador e Plataforma Estática",
          "Respawn do Jogador",
          "Espelhamento e WASD",
          "Câmera Seguindo o Jogador e Camadas",
          "Plataforma com Aventura - Quizz 1",
          "Participe do Nosso Servidor do Discord de Games"
        ],
        "Aulas Grátis": [
          "Mais de 200 Aulas 100% Grátis Para Você!"
        ],
        "Plataforma com Aventura - Cenário e Game States": [
          "Plataforma que se move",
          "Parallax",
          "Porta e Transição de Fases",
          "Menu Inicial",
          "Vidas e Game Over",
          "Plataforma com Aventura - Quizz 2"
        ],
        "Plataforma com Aventura - Inimigos e Vida": [
          "Inimigo Simples",
          "Agrupamento, Concatenação e GUI de Vida",
          "Pular Na Cabeça do Inimigo",
          "Temporizador Reinicia Fase",
          "Vida Extra",
          "Plataforma com Aventura - Quizz 3"
        ],
        "Plataforma com Aventura - Animações e Funções": [
          "Pulo Duplo",
          "Funções e Level Design",
          "Encontrando Assets Gráficos",
          "Animação e Respawn",
          "Estados de Animação Andando e Parado",
          "Animação de Pulo",
          "Plataforma com Aventura - Quizz 4"
        ],
        "Plataforma com Aventura - Level Design e Detalhes Finais": [
          "Level Design",
          "Tilemaps e Decoração",
          "Animações do Inimigo",
          "Vidas com GUI",
          "Checkpoint",
          "Detalhes Finais e Spikes",
          "Plataforma com Aventura - Quizz 5"
        ],
        "Plataforma com Puzzle": [
          "Recursos Gráficos - Plataforma com Quebra-Cabeça",
          "Projeto Final - Plataforma com Quebra-Cabeça",
          "Organização de Layers e Nomes",
          "Ajustando Layout, Collision e Player",
          "Controlar por Teclado e Animation Acompanha",
          "Plataforma com Quebra-Cabeça- Quizz 1"
        ],
        "Plataforma com Puzzle - Animações e Plano de Fundo": [
          "Animação de Caminhar e Idle",
          "Animação de Pular e Cair",
          "Plano de Fundo e Chão",
          "Plataforma com Quebra-Cabeça- Quizz 2"
        ],
        "Plataforma com Puzzle - Disparos, Inimigos e Vida": [
          "Jogador Atirando projétil",
          "Tiro se Decompondo",
          "Efeito de Ácido",
          "Tiro e Inimigo de Serra",
          "Dano e Barra de Vida",
          "Caindo no Ácido",
          "Plataforma com Quebra-Cabeça- Quizz 3"
        ],
        "Plataforma com Puzzle - Detalhes Finais": [
          "Câmera e Lerp",
          "Revisando e Comentando",
          "Porta Transição de Fase",
          "Alavancas Abrem Portas",
          "Temporizador",
          "Joystick Virtual",
          "GUI Global",
          "Plataforma com Quebra-Cabeça- Quizz 4"
        ]
      },
      "requirements": [
        "Computador com Windows",
        "Construct 2 (Tudo poderá ser feito usando a versão Gratuita)",
        "Não é necessário saber programação (Será ensinado durante o curso)"
      ],
      "description": "Um curso para quem sempre sonhou em criar seus próprios jogos , mas nunca programou um joguinho sequer!\nTorne-se um desenvolvedor de jogos sem precisar codificar e dê asas a suas ideias usando o Construct 2, uma ferramenta gratuita , simples e prática.\nVocê aprenderá do ZERO (Não requer conhecimento prévio com programação) a utilizar a ferramenta para criar jogos no estilo Plataforma com os componentes:\nAnimações Completas\nControles com Teclado\nLevel Design com Tilemaps\nRespawn\nCheckpoint\nTransição de Fases\nCriação de Menus\nItens de Vida Extra\nEncontrar Assets Gráficos\nObstáculos\nAjuste de Layout e Colisão\nJoystick Virtual\nEnfeites no cenário\nDisparo de Projeteis Animados\nEfeito de Ácido Movendo\nBarra de Vida\nCâmera Dinâmica com Lerp\nAtivação de Alavancas\nGolpes\nMecanismos de Physics\nJogadores com Diferentes Habilidades\nSoco com Empurrão\n2 Jogadores\nSuper Poderes\nItens\nTemporizador\n\n\nAlém disso você terá suporte individual para tirar suas dúvidas e responderá a questionários para reforçar os seus conhecimentos.\nAo finalizar o curso você receberá um certficado.\nEsse curso é para iniciantes, mesmo que NUNCA TENHAM PROGRAMADO NA VIDA.\nMuito obrigado e te vejo lá",
      "target_audience": [
        "Pessoas que queiram aprender a criar jogos e protótipos sem usar codificação, de uma forma rápida, eficiente e divertida",
        "Pessoas sem qualquer experiência em programação"
      ]
    },
    {
      "title": "Learn to create a 2D Racing car game for FREE PART 9.",
      "url": "https://www.udemy.com/course/learn-to-create-a-2d-racing-car-game-for-free-part-9/",
      "bio": "Learn how to create a cool 2D top down racing car game with the unity game engine.",
      "objectives": [],
      "course_content": {
        "Adding more features to the tracks (Continued)": [
          "Adding the call out sound.",
          "Adding road cones that get knock over.",
          "Setting up a shooting cop with animation.",
          "Explaing a few features i added to the track.",
          "Adding code for the shooting cop.",
          "Adding the bullet for the cop.",
          "Creating a muzzleflash effect for the gun.",
          "Adding sound effects to the police car & bullet."
        ]
      },
      "requirements": [
        "You will need to download unity and visual studio which is free and then be willing to learn game design.",
        "Basic understanding of the C# language and Unity."
      ],
      "description": "THIS COURSE WILL BE UPLOADED IN PARTS DUE TO VIDEO TIME RESTRICTIONS.\n\n\nIn my course we will start at the bottom and work our way up to advanced game design like AI path finding, we will be creating a car controller and many features with in our game.\nThis course is designed for beginner level and up as i will explain everything in best detail as i can, at the end of the course we will have made a racing car game like micro machines which in the 1980's was an amazing car game.\nIn this part of the course you will learn\nHow to add sound to sprites\nRoad cones that get knocked over with sound effects\nSetting up a police officers that shoots at you with animation\nUsing c# code to make the police work\nCreating bullets for the police officer\nCreating a muzzle flash effect for his gun\nAdding police siren to his car\nAdding bullet sound effect for his gun",
      "target_audience": [
        "Students that want to learn to be a game designer."
      ]
    },
    {
      "title": "Unity C# программирование для новичков 2022",
      "url": "https://www.udemy.com/course/unity-programming-2022/",
      "bio": "Научитесь транформировать свои идеи и механики в код!",
      "objectives": [
        "Изучаем C# с нуля! Предварительный опыт программирования не требуется.",
        "Учимся трансформировать мысли в код.",
        "Развиваем легко переносимые навыки решения проблем программирования.",
        "Узнаём как объектно-ориентированное программирование работает на практике.",
        "Баланс теории и практики программирования."
      ],
      "course_content": {
        "Введение - Неотъемлемая Теория": [
          "Чему вы научитесь в этом разделе?",
          "Установка и привязка Visual Studio к Unity",
          "Что такое using?",
          "Как устроены классы ( с важными нюансами!)",
          "Функции событий (Awake, Start, OnEnable, Update, FixedUpdate, LateUpdate и т.д.)",
          "Коментирование кода",
          "Подведем итог",
          "Проверьте и закрепите своё понимание пройденного материала."
        ],
        "Переменные": [
          "Чему вы научитесь в этом разделе?",
          "Что такое переменная и как она создаётся?",
          "Модификаторы доступа (public, private) и другие типы переменных",
          "Что такое область видимости?",
          "Переключение камер и функция GetComponent",
          "Переключение камер и Input.GetKeyDown(KeyCode.)",
          "Счет и преобразование int/float в string",
          "Взаимодействие скриптов и классов",
          "Тест на понимание области видимости и применение переменных",
          "Подведем итог"
        ],
        "Поток управления (Control flow)": [
          "Чему вы научитесь в этом разделе?",
          "If/else операторы выбора",
          "Логические операторы - И ( && ), Или ( || )",
          "if, else if, else",
          "Проверьте ваше понимание If/else, сравнение значений и логические операторы",
          "Практика - передвижение персонажа",
          "Практика - камера от первого лица",
          "Практика - движение в направлении камеры",
          "Усовершенствование камеры с Mathf.clamp",
          "По мере игры наш контроллер будет совершенствоваться",
          "Насколько хорошо вы поняли как работает First Person Controller?",
          "Switch/case операторы",
          "Цикл for",
          "Нижнее подчеркивание в названии переменных",
          "Instatiate - спавн объектов на сцене",
          "Практическое применение цикла for & Instantiate",
          "Цикл while",
          "Практическое применение цикла while",
          "Проверьте ваше понимание for & while циклов",
          "Манипуляции цикла: break & continue",
          "Проверьте понимание break & continue",
          "Подведем итог"
        ],
        "Коллекции и массивы (Array & List)": [
          "Чему вы научитесь в этом разделе?",
          "Как создать массив и как его использовать (Array) ?",
          "OnTriggerEnter, OnTriggerStay, OnTriggerExit",
          "Практическое применение массивов",
          "Как создать коллекцию как её использовать (List) ?",
          "Вы узнаете больше про List по мере прохождения курса",
          "Цикл foreach + больше про List",
          "Практическое применение цикла foreach",
          "Насколько хорошо вы поняли как использовать Array и List?",
          "Подведем итог"
        ],
        "Функции/Методы": [
          "Что мы пройдем в этой части?",
          "Как создать функцию и как её использовать?",
          "Что такое Enum (перечисление) и как его использовать?",
          "Coroutine и как его использовать?",
          "Оптимизация проекта",
          "Lerp теория",
          "Lerp практика",
          "Raycast",
          "Подведем итог"
        ],
        "Игра Quest Room": [
          "Что мы сделаем в этой части?",
          "Импортируем ассет для quest room",
          "Настраиваем сцену + Фиксим управление персонажа",
          "Как стоит выполнять задания для наибольшей эффективности?",
          "Задание: Прыжок и бег",
          "Решение: Прыжок и бег",
          "Задание: Открытие дверей",
          "Решение: Открытие дверей",
          "Задание: Открытие ящиков",
          "Решение: Открытие ящиков",
          "Делаем модель электронного замка",
          "Задача: Электронный замок на дверь и ящик",
          "Решение: Электронный замок на дверь и ящик",
          "Что такое полиморфизм и как он используется?",
          "Задача: Физическое ношение предметов",
          "Решение: Физическое ношение предметов",
          "Исправляем дрожание физического ношения предметов",
          "Задача: Головоломка со статуей",
          "Решение: Головоломка со статуей",
          "Задача: Рычаг и ворота",
          "Решение: Рычаг и ворота",
          "Задача: Rush hour головоломка",
          "Решение: Rush hour головоломка",
          "UnityEvents - более гибкие головоломки",
          "Задание: Закончите игру!",
          "Как сделать билд игры?",
          "Подведем итог"
        ],
        "Большой Итог!": [
          "Результат наших трудов"
        ]
      },
      "requirements": [
        "Базовые знания интерфейса Unity.",
        "Базовые знания того как работают компоненты и префабы в Unity."
      ],
      "description": "Этот курс научит ваc программированию на C# для Unity с нуля. Если вы новичек в юнити и не знаете как люди в интернете самостоятельно доходят до реализации механик без нужды просмотра чьих то уроков, то этот курс был сделан специально для вас!\n\n\nЗдравствуйте, друзья! Меня зовут Максим Коломенский и я являюсь автором этого курса.\n\n\nГлавной целью этого курса является научить вас конвертировать игровые механики из мыслей и идей в код и показать основные элементы программирования на практике используя реальные примеры.\n\n\nВ этом курсе покрывается не только теория программирования (переменные, функции, массивы, коллекции, if/else, for, while, foreach, break, continue, switch, case, логические операторы и т.п.), но и применяется на практике для реализования таких интерсных механик как кодовый замок, головоломки, физическое ношение предметов и много другого! После завершения мною поставленных задач, у вас будет достаточно знаний чтобы добавить в игру свои головоломки и другие механики для разнообразия игрового процесса.\n\n\nВ курсе вы найдёте:\nВидео-лекции\nТесты на укрепление материала после главных темы\nПрактические задания для практики конверсии логики в код (открывание дверей, кодовые замки и головоломки)\nРешения заданий которые расширят ваш кругозор\n\n\nЧему вы научитесь\nОсновы программирования на C#\nВстроенные функции в Unity\nНаучитесь трансформировать свои идеи и логическое мышление в код\n\n\nЖелаю вам удачи в обучении и успешной реализации ваших идей!",
      "target_audience": [
        "Начинающие разработчики игр которые хотят сразу применять выученый материал на практике в Unity 2021.",
        "Те кто устал от курсов где не показано практическое применение C# в Unity, а только DebugLog().",
        "Те кто хочет писать свой код с интересом, а не копировать код из интернета при этом ничего не понимая."
      ]
    },
    {
      "title": "Aprenda Modelagem 3D e Animação no Blender",
      "url": "https://www.udemy.com/course/aprenda-modelagem-e-animacao-com-o-mario-no-blender-28/",
      "bio": "Modelagem / Mapeamento UV / Texturização / Rigging / Animação Blender",
      "objectives": [
        "Modelagem 3D de Personagens no Blender 2.8",
        "Mapeamento de Personagens no Blender 2.8",
        "Texturização de Personagens no Blender 2.8",
        "Rigging de Personagens no Blender 2.8",
        "Animação de Personagens para Games no Blender 2.8",
        "Exportação de Personagens para Unity/Unreal Engine"
      ],
      "course_content": {
        "Modelagem 3D": [
          "Introdução",
          "Importação do Blueprint/ModelSheet + Configurações iniciais",
          "Modelagem Contorno dos Olhos + Princípios Básicos",
          "Modelagem Nariz + Noções de Topologia de Personagens 3D",
          "Modelagem Nariz Parte 02",
          "Modelagem do Formato da Cabeça",
          "Modelagem do Formato da Cabeça Parte 02",
          "Modelagem do Formato da Cabeça Parte 03",
          "Modelagem Sombrancelhas",
          "Modelagem Bigode",
          "Modelagem Olhos e Orelhas",
          "Modelagem Cabelo Parte 01",
          "Modelagem Cabelo Parte 02",
          "Modelagem Chapéu Parte 01",
          "Modelagem Chapéu Parte 02",
          "Modelagem Corpo Parte 01",
          "Modelagem Bracos e Mão Parte 01",
          "Modelagem Mão Parte 02",
          "Modelagem Mão Parte 03",
          "Modelagem Mão Parte 04",
          "Modelagem Corpo Parte 02",
          "Modelagem Pernas e Sapatos",
          "Mapeamento UV Parte 01",
          "Mapeamento UV Parte 02",
          "Mapeamento UV Parte 03",
          "Mapeamento UV Parte 04 + Texturização com Hand-Painted Parte 01",
          "Texturização com Hand-Painted Parte 02",
          "Texturização com Hand-Painted Parte 03",
          "Texturização com Hand-Painted Parte 04",
          "Texturização com Hand-Painted Parte 05 (Roupa Vermelha)",
          "Aplicação das Texturas usando Nodes em Shading",
          "Subdivisões da Malha para Animação",
          "Rigging Parte 01",
          "Rigging Parte 02",
          "Correções das Áreas de Efeito dos Ossos",
          "Animação Correndo Parte 01",
          "Animação Correndo Parte 02",
          "Animação Correndo Parte 03",
          "Animação Correndo Parte 04",
          "Animação Correndo Parte 05",
          "Animação Correndo Parte 06",
          "Animação Pulando",
          "Animação Morrendo",
          "Animação Pegando Rocha do Chão",
          "Animação Correndo com a Rocha e Soltando a Rocha",
          "Animação Puchando Alavancas",
          "Animação Idle / Inerte",
          "Animação Combo de Ataque",
          "Exportação do Arquivo para Engines + Novidades de novos Cursos"
        ]
      },
      "requirements": [
        "Nenhum pré-requisito!"
      ],
      "description": "Um Curso super completo para você que quer ingressar no ramo de Desenvolvimento de Games!\nAprenda a fazer Modelagem de Personagens, Mapeamento UV, Texturização, Rigging, Animação e Exportação para Engines em um único curso utilizando o poderoso Software Gratuíto Blender!\nNeste curso faremos a Modelagem do Personagem Mario, Criaremos texturas para dois tipos de roupas para o personagem e configuraremos os ossos para criar animações de corrida, pulo, ataque, Pegar objetos do Chão, Caminhar segurando um objeto pesado, Animação do Personagem Morrendo e Puchando Alavanca!\nAnimações direcionadas para Criação de Jogos!\nAprenda ainda a exportar seu modelo 3D com as Animações para Engines como Unity 3D e Unreal Engine.\n\n\nA super complete Course for you who want to join the Game Development business!\n\n\nLearn how to do Character Modeling, UV Mapping, Texturing, Rigging, Animation and Export to Engines in a single course using the powerful Free Blender Software!\n\n\nIn this course we will do the Character Modeling Mario, We will create textures for two types of clothes for the character and we will configure the bones to create animations of running, jumping, attack, Picking up objects from the Floor, Walking holding a heavy object, Animation of the Character Dying and Sucking Lever!\n\n\nAnimations directed to Game Creation!\n\n\nAlso learn how to export your 3D model with Animations for Engines such as Unity 3D and Unreal Engine.",
      "target_audience": [
        "Todos que gostariam de aprender Modelagem/Animação para Games ou Cinema"
      ]
    },
    {
      "title": "[유니티 3D] 쉽고 재밌게! 생존 게임 제작하기 - Advanced",
      "url": "https://www.udemy.com/course/keidyunitycourseadvanced/",
      "bio": "오픈월드형 로우폴리 FPS 서바이벌 디펜스 게임 제작하기",
      "objectives": [
        "생존, 디펜스, FPS, 오픈월드, 로우폴리 게임을 만들 수 있게 된다."
      ],
      "course_content": {
        "캐릭터 움직이기 & 지형 제작": [
          "Part 1 : 기본 캐릭터 움직이기",
          "Part 2 : 심화 캐릭터 움직이기",
          "Part 3 : 지형 제작",
          "Part 4 : 팔 구현"
        ],
        "근접, 원거리 무기들": [
          "Part 5 : 총 구현",
          "Part 5 - 2 총 구현 심화",
          "Part 5 - 3 총 피격 구현",
          "Part 6 : Hud (총알)",
          "Part 7 : 크로스헤어",
          "Part 8 : WeaponManager",
          "Part 9 : Weapon Sway",
          "Part 10 : 근접 무기 구현"
        ],
        "파괴 가능한 환경들": [
          "Part 11 : 광석 채굴",
          "Part 12 : SoundManager",
          "Part 13 : 나뭇가지 베기",
          "Part 15 : 풀 베기",
          "Part 15 : 벌목하기",
          "Part 16 : 벌목 시선 처리"
        ],
        "허기와 갈증, 스태미나와 체력": [
          "Part 17 : Status",
          "Part 17 - 2 : Status 마무리"
        ],
        "인벤토리 시스템": [
          "Part 18 : 아이템 획득",
          "Part 19 : 인벤토리",
          "Part 20 : 인벤토리 드래그 앤 드롭",
          "Part 21 : 아이템 버리기",
          "Part X : 부속편(모든 환경 아이템 구현)",
          "Part 22 : 아이템 사용",
          "Part 23 : 인벤토리 툴팁"
        ],
        "퀵슬롯": [
          "Part 24 : 퀵슬롯 구현",
          "Part 25 : 퀵슬롯 장비 전환",
          "Part 25 - 2 : 추가내용",
          "Part 26 : 퀵슬롯 심화",
          "Part 27 : 쿨타임과 퀵슬롯 ON/OFF",
          "Part 28 : 아이템 획득시 퀵슬롯부터 채우기"
        ],
        "동물들의 도망형 AI와 공격형 AI": [
          "Part 29 : 돼지 AI",
          "Part 30 : 돼지 사냥",
          "Part 31 : 돼지의 시야각 및 도망",
          "Part 31 - 2 : 마무리",
          "Part 32 : 동물의 이중 상속",
          "Part 33 : Navigation AI",
          "Part 34 : 추격하는 돼지",
          "Part 35 : 발소리를 듣고 추격하는 돼지",
          "Part 36 : 공격하는 돼지",
          "Part 37 : 돼지 해체해서 고기 얻기"
        ],
        "모닥불": [
          "Part 38 : 모닥불 구현",
          "Part 39 : 모닥불 데미지",
          "Part 40 : 모닥불에서 신체로 불이 옮겨붙기",
          "Part 41 : 불에 고기 익히기(퀵슬롯 자동 장착)"
        ],
        "건축 시스템의 A to Z, 집짓기": [
          "Part 42 : 건축시스템 구축",
          "Part 43 : 건축 불가/허용 구현",
          "Part 44 : 그리드 단위 및 회전",
          "Part 45 : 건축 요구사항 구현",
          "Part 46 : 건축 UI 완성과 메뉴 페이지 시스템",
          "Part 47 : 건축 자재 소모",
          "Part 48 : 집 커스터마이징"
        ],
        "컴퓨터로 생존 킷 제작": [
          "Part 49 : 생존 킷 제작",
          "Part 50 : 툴팁 및 커서 감추기",
          "Part 51 : 연금 테이블 설치"
        ]
      },
      "requirements": [
        "프로그래밍에 대한 기본적인 지식이 필요합니다. (for문, if문, switch문같은 기본적인 문법 필수)",
        "유니티에 대한 기본적인 이해도가 필요합니다. (컴포넌트, Transform, GameObject)"
      ],
      "description": "유니티( Unity )로 오픈월드형 로우폴리 FPS 생존 게임을 만들어 보는 강좌입니다.\n\n70편이 넘는 “[유니티 3D] 실전! 생존게임 만들기” 에서는 이런 것들을 배웁니다.\n캐릭터의 여러 움직임\n다양한 근접, 원거리 무기들\n다양한 파괴 가능한 환경들 (광석 채굴, 벌목, 풀베기, 나뭇가지 꺾기)\n허기와 갈증, 스태미나와 체력.\n인벤토리 시스템과 퀵슬롯 시스템.\n동물들의 공격형 AI와 도망형 AI 구현.\n건축 시스템의 A to Z, 집짓기.\n사냥과 함정.\n모닥불과 불 피해, 고기 굽기, 불 옮겨붙기.\n포션 제작 도구 및 컴퓨터를 활용한 생존 키트 제작, 밤낮 구현.\n방어 타워\n.... ETC...",
      "target_audience": [
        "유니티로 생존 게임을 만들고 싶은 분들.",
        "유니티로 3D FPS 게임을 만들고 싶은 분들"
      ]
    },
    {
      "title": "Desarrollo de Videojuegos 2D en Unity 3D 5",
      "url": "https://www.udemy.com/course/desarrollo-de-videojuegos-2d-en-unity-3d-5/",
      "bio": "Aprenda a desarrollar Fantásticos Videojuegos en 2D con Unity 3D 5",
      "objectives": [
        "Aprendido las Herramientas Básicas de Unity 3d para desarrollar juegos en 2D",
        "Aprendido el uso de Físicas aplicada a Juegos 2D",
        "Habrá Creado un juego completo de plataformas en 2D"
      ],
      "course_content": {
        "Introducción": [
          "Como descargar el Material Requerido para seguir el curso",
          "Introducción",
          "Paneles de Unity 5",
          "Integrando Assets y GameObjects"
        ],
        "Introducción a los Scripts": [
          "Introducción",
          "Método Update - Transformaciones",
          "Transformaciones Simples",
          "Prefabs"
        ],
        "Sprites": [
          "Sprite Estaticos",
          "Sprite Animados"
        ],
        "Scripting Avanzado": [
          "Interactuando con los Objetos de la Escena",
          "GameComponents desde Script",
          "GameComponents Creando un Manager"
        ],
        "Colisiones": [
          "Introducción a las Colisiones",
          "Métodos de Colisiones",
          "Triggers parte 1 - Creación del Nivel",
          "Triggers Parte 2 - creación del script del personaje y del enemigo",
          "Triggers parte 3 - creando la zona de enemigo"
        ],
        "Parallax": [
          "Capas",
          "Parallax - Parte 1 - Movimiento del Personaje",
          "Parallax - parte 2 - creacion del parallax controller"
        ],
        "Fisicas": [
          "Rigidbody",
          "Fisicas 2 - Phisics Materials",
          "fisicas 3- hinge Joint 2D",
          "Fisicas 4- spring Joint 2D",
          "fisicas5-distance Joint",
          "fisicas6-wheel Joint",
          "fisicas 7 -area effector",
          "fisicas 8-Point effector",
          "fisicas 9-plataform effector parte 1",
          "fisicas 10 - Plataform Effector - parte 2",
          "fisicas 11 - surface effector"
        ],
        "Sonidos": [
          "video32-sonidos-Introducción Buscar y conseguir sonidos en Internet",
          "Sonidos 2-Audiolistener",
          "Sonidos 3 -AudioSource",
          "Sonidos 4 - multiples sonidos en un audiosource"
        ],
        "Proyecto Final: Juego de Plataformas 2D": [
          "Proyecto Final - Parte 1 - Configuración del proyecto - creación de nivel",
          "Proyecto Final -Parte2- movimiento lateral del personaje y salto",
          "Proyecto Final - Parte 3 - conocer si estamos en suelo y doble salto",
          "Proyecto Final - Parte 4 - Detectar choque con pinches",
          "Proyecto Final - Parte 5 - muerte personaje reinicio en el checkpoint",
          "Proyecto Final - Parte 6 -Multiples checkpoints",
          "Proyecto Final -Parte 7 - Animación del Player",
          "ProyectoFinal -Parte 8 - Animacion del Player salto y mirror",
          "Proyecto Final - Parte 9 - Particulas",
          "Proyecto Final -Parte 9 - Particulas 2 - Eliminar Particulas usadas",
          "Proyecto Final -Parte 10 - Puntaje 1 - Creando controlador y UI para puntaje",
          "Proyecto Final- Parte 11 - Puntaje 2 - Creando un items",
          "Proyecto Final - Parte 12 - Puntaje 3 - Agregando Penalidad y Ajustando collider",
          "Proyecto Final -Parte 13 - Mejorando el movimiento de nuestro Personaje",
          "Proyecto Final- Parte 14 - Morir al caer al vacio",
          "Proyecto Final - Parte 15 - Enemigos",
          "Proyecto Final - Parte 16 - Enemigos Parte 2 - espejar personaje y animacion",
          "Proyecto Final -Parte 17 - Controlador de la camara",
          "Proyecto Final -Parte 18 - Disparo parte 1",
          "Proyecto Final -Parte 19- Disparo parte 2 - Disparando a la izquierda - matando",
          "Proyecto Final -Parte 20 - Disparo parte 3 - partículas al chocar bala",
          "proyecto Final - Parte 21 -Disparo parte 4",
          "Proyecto Final - Parte 22 -Disparo parte 5 - retraso del disparo",
          "Proyecto Final - Parte 23 - Disparo parte 6 - Sumar Puntos",
          "Proyecto final - Parte 24 -Energia del Enemigo - Parte 1 - Creando la Logica",
          "Proyecto Final -Parte 25 - Energía del Personaje Principal - Parte 1",
          "Proyecto Final - Parte 26 -Energía del Personaje 2",
          "Proyecto Final - Nuestro Personaje Rebota al colisionar con un Enemigo",
          "Proyecto Final - Cayendo Encima del Enemigo",
          "Proyecto Final - Cayendo Encima del Enemigo parte 2 - rebote",
          "Proyecto Final - subiendo Escalera - parte 1",
          "Proyecto Final - subiendo Escalera - parte 2",
          "Proyecto Final - subiendo Escalera - parte 3",
          "Proyecto Final -subiendo Escaleras parte 4",
          "Proyecto Final -Sonidos - Parte 1",
          "Proyecto Final -Sonidos - Parte 2",
          "Proyecto Final - Cambio de Nivel",
          "Proyecto Final - Menú Principal"
        ]
      },
      "requirements": [
        "Unity 5"
      ],
      "description": "En este Curso te introduciremos en el fantástico mundo del desarrollo de videojuegos en 2D utilizando el Motor Unity 5.\nEn la Unidad 1 Aprenderás la interface gráfica de Unity para que puedas desenvolverte correctamente dentro del programa . Luego podrás comenzar a escribir las primeras lineas de código para dar vida a los diferentes componentes de tu juego, esto lo verás en la unidad 2.\nEn la Unidad 3 comenzarás a trabajar con los elementos gráficos llamados Sprites, tanto Animados como estáticos.\nComenzarás a ver Scripting avanzado en la unidad 4. En todo vídeo juego es necesario que se detecten las colisiones entre los diferentes objetos que componen el mismo, para de esta forma ejecutar un determinado evento.\nEl trabajo con colisiones lo verás en la Unidad 5.\nEn la unidad 6 aprenderás la técnica parallax para mover a diferentes velocidades los fondos.\nActualmente. esta muy de moda la creación de juegos que implementan Físicas como por ejemplo \"Angry Birds\". En la Unidad 7 aprenderás a usar el componente de físicas que trae Unity 5 para que los GameObjects interactúen entre sí, teniendo en cuenta leyes físicas.\nEn todo vídeo juego es esencial que contenga efectos sonoros y música para ambientar en el desarrollo a jugador, esto lo verás en la unidad 8.\nPor último desarrollaras un vídeo juego completo de plataformas donde aprenderás a crear las mecánicas necesarias para implementar un juego de este estilo, esto lo verás en la última unidad del curso la unidad 9.\nAl Finalizar el curso habrás aprendido los fundamentos básicos para aprender a desarrollar cualquier tipo de Juego en 2D.",
      "target_audience": [
        "Entusiasta que deseen adentrarse en el fantástico mundo del desarrollo de Juegos"
      ]
    },
    {
      "title": "Jogos 3D com Unity + modo multiplayer",
      "url": "https://www.udemy.com/course/jogos-3d-com-unity-2017-modo-multiplayer/",
      "bio": "Crie jogos ao estilo dos maiores jogos do mercado em diversas plataformas",
      "objectives": [
        "Manipular a Game Engine",
        "Usar todos os componentes físicos 3D",
        "Criar animações 3D dentro da Unity",
        "Animação de modelos 3D",
        "Exportação de modelos 3D",
        "Desenvolver Jogos completos no estilo 3D"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação do curso",
          "Instalação",
          "Interface",
          "Asset Store"
        ],
        "Bônus - Programação em C#": [
          "Criação de um arquivo de código",
          "Variáveis",
          "Comentários",
          "Conversão de dados",
          "Operadores aritméticos",
          "Incremento e decremento",
          "Operadores reduzidos",
          "Operadores relacionais",
          "Operadores lógicos",
          "Condicional if - else - else if",
          "Operadores ternários",
          "Switch",
          "Laço for",
          "Laço while",
          "Laço do/ while",
          "Laço foreach",
          "Break e continue",
          "Vetores",
          "Matrizes",
          "Coleção list",
          "Coleção dictionary",
          "Enumeradores",
          "Scopo",
          "Classes",
          "Objetos",
          "Modificadores de acesso",
          "Métodos",
          "Construtores",
          "Método estático",
          "This e base",
          "Sobrecarga de método",
          "Herança",
          "Encapsulamento",
          "Polimorfismo"
        ],
        "Objetos 3D": [
          "Game Objects 3D",
          "Materiais",
          "Terrenos - parte 01",
          "Terrenos - parte 02",
          "Terrenos - parte 03",
          "Terrenos - parte 04",
          "Plantas rasteiras",
          "Árvores - parte 01",
          "Árvores - parte 02",
          "Árvores - parte 03",
          "Árvores - parte 04",
          "Sky - parte 01",
          "Sky - parte 02",
          "Modelos 3D externos estáticos"
        ],
        "Luz, câmera, ação": [
          "Materials",
          "Directional light",
          "Point light",
          "Spot light",
          "Area light",
          "Emissive light",
          "Ambient Light",
          "Lighting - parte 01",
          "Lighting - parte 02",
          "Lighting - parte 03",
          "Lighting - parte 04",
          "Light probs",
          "Reflection probs",
          "Câmera principal",
          "Câmeras secundárias",
          "Câmera multipla",
          "Render to texture"
        ],
        "Movimento, rotação e escala de objetos 3D": [
          "Movimento 3D via código",
          "Rotação 3D via código",
          "Escala 3D via código"
        ],
        "Física 3D": [
          "Corpos colisores",
          "Rigidbody",
          "Cloth (simulação de tecidos)",
          "Material Físico",
          "Detecção de Colisões",
          "Gatilhos",
          "Hinge Joint",
          "Fixed Joint",
          "Spring Joint",
          "Constant Force",
          "Configurable Joint",
          "Explosão - parte 01",
          "Explosão - parte 02",
          "Carro - parte 01",
          "Carro - parte 02",
          "Carro - parte 03",
          "Carro - parte 04",
          "Carro - parte 05",
          "Carro - parte 06"
        ],
        "3D descomplicado!": [
          "Apresentação dos softwares 3D que utilizaremos",
          "Wings 3D - interface",
          "Wings 3D - criação",
          "Wings3D_Modelando uma bomba",
          "Wings3D_Mapeamento da bomba - 01",
          "Wings3D_Mapeamento da bomba - 02",
          "Photoshop_Pintura digital da bomba",
          "Criação de normal maps",
          "WINGS3D_Modelagem de machado com referência 1",
          "WINGS3D_Modelagem de machado com referência 2",
          "WINGS3D_Modelagem de machado com referência 3",
          "Wings3D_Modelagem de machado com referência 4",
          "Wings3D_Modelagem de machado com referência 5",
          "Wings3D_Modelagem de machado com referência 6",
          "Wings3D_Mapeamento do Machado1",
          "Pintura digital metal 1",
          "Pintura digital metal 2",
          "Pintura digital machado BASE 1",
          "Pintura digital machado BASE 2",
          "Pintura digital machado BASE 3",
          "Pintura digital machado BASE 4",
          "Pintura digital machado Unha de gato 1",
          "Pintura digital machado Unha de gato 2",
          "Pintura digital machado Unha de gato 3",
          "Pintura digital machado Lamina",
          "Pintura digital cabo 1",
          "Pintura digital cabo2",
          "Pintura digital cabo 3",
          "Exportação do modelo e criação de normal map",
          "importação do modelo na Unity",
          "Blender Splash Screen",
          "Blender Interface",
          "Blender Editores",
          "Blender Navegação e Seleção de Objetos",
          "Blender Visualizações",
          "Blender Movimento, Rotação e Escala",
          "Blender Criação e Exclusão de Objetos",
          "Blender Edit Mode",
          "Blender Adição de Texturas",
          "Blender Mapeamento",
          "Blender Modelando uma Lapide",
          "Blender Pintura Digital Introdução",
          "Blender Pintura 3D Lapide 1",
          "Blender Pintura 3D Lapide 2",
          "Blender Pintura 3D Lapide 3",
          "Exportação da Lapide para a Unity",
          "Blender Sculpt Introdução",
          "Blender Sculpt Primeiros passos",
          "Blender Sculpt Brushes 1",
          "Blender Sculpt Brushes 2",
          "Blender Sculpt Brushes 3",
          "Blender Sculpt Brushes 4",
          "Blender Sculpt mascaras",
          "Blender Sculpt usando Stroke",
          "Blender Sculpt Busca de referências",
          "Blender Sculpt Cartoon Cabeça",
          "Blender Sculpt Cartoon Nariz e cavidade ocular",
          "Blender Sculpt Cartoon Orelhas",
          "Blender Sculpt Cartoon Boca",
          "Blender Sculpt Cartoon Cabelo",
          "Blender Sculpt Cartoon Olhos",
          "Blender Ajuste fino do cabelo",
          "Blender Ajuste fino dos olhos Parte1",
          "Blender Ajuste fino dos olhos Parte2",
          "Blender Ajuste fino da Boca Parte1",
          "Blender Ajuste fino da Boca Parte2",
          "Blender Colocar brinco no personagem",
          "Blender Colocar sobrancelhas",
          "Blender Peito",
          "Blender Peito e ombro",
          "Blender Peito Costas",
          "Blender Braço Parte1",
          "Blender Braço Parte2",
          "Blender Mão Parte1",
          "Blender Mão Parte2",
          "Blender Mão Parte3",
          "Blender Pernas Parte 1",
          "Blender Pernas Parte 2",
          "Blender Últimos Ajustes Parte1",
          "Blender Últimos Ajustes Parte 2",
          "Blender Retopologia Parte 1",
          "Blender Retopologia Parte2",
          "Blender Retopologia Parte 3",
          "Blender Retopologia Parte 4",
          "Blender Retopologia Parte 5",
          "Blender Retopologia Parte 6",
          "Blender Mapeamento UV Parte 1",
          "Blender Mapeamento Cabeça",
          "Organizando objetos no Mapeamento",
          "Criação de NormalMap",
          "Criação de Occlusion",
          "Adicionando esqueleto ao modelo 3D",
          "Criação de animação para o modelo 3D"
        ],
        "Seção Bônus": [
          "Blender Transparência"
        ],
        "Exportação e Importação de modelo animado": [
          "Exportação do modelo animado",
          "Importação do modelo animado para Unity",
          "Ajuste dos matérias do personagem",
          "Transição de animações",
          "Input de teclado",
          "Input de mouse",
          "Axes",
          "Input Joy",
          "Character Controller",
          "Character Animado",
          "Character Controller Últimas Considerações"
        ],
        "Gatilhos": [
          "Introdução",
          "Abrir e Fechar Portas Parte1",
          "Abrir e Fechar Portas Parte2",
          "Olhando para o Personagem",
          "Gatilho para vibração do controle",
          "Gatilho para destruir objeto"
        ]
      },
      "requirements": [
        "Um PC capaz de rodar a Unity3D",
        "Recomendável ter noções básicas da linguagem C#"
      ],
      "description": "Atualmente quando ouvimos falar em desenvolvimento de jogos certamente você já ouviu falar em Unity 3D.\nE não é por acaso que ela é sempre citada quando se fala nesse assunto, segundo o site de notícias de tecnologia The Next Web, a engine domina 45% do mercado global de games.\nEssa enorme popularidade faz jus ao seu poder de criar gráficos incríveis e em alta performance, com a Unity é possível criar jogos em 2D ou 3D para diferentes plataformas.\nE se você deseja ser um desenvolvedor de jogos, você está no lugar certo, após o grande sucesso do curso Jogos 2D com Unity para Android + C# agora é hora de dar mais um passo na sua carreira, com o curso Jogos 3D com Unity 2017 + modo multiplayer você irá conhecer toda potência da game engine no desenvolvimento de jogos famosos como, por exemplo, GTA V entre outros.\nAprenda os principais efeitos de física, partículas e iluminação tudo em um único curso e tem mais! Você ainda terá a oportunidade de aprender a desenvolver seu game também no modo multiplayer. Ficou sem fôlego com tanta coisa bacana reunida em um curso? Então não espere mais e se inscreva agora mesmo!\nAguardo você nas aulas!",
      "target_audience": [
        "Pessoas que adoram games e querem fazer dessa paixão uma profissão."
      ]
    },
    {
      "title": "Construct 2 - Game Design e Criação de Jogos Sem Codificação",
      "url": "https://www.udemy.com/course/construct-2-game-design-e-jogos-sem-codificar/",
      "bio": "Um curso para iniciantes que te ensinará desde os conceitos de Game Design até a aplicação na criação dos seus jogos!",
      "objectives": [
        "Como desenvolver dois jogos na engine Construct 2 de plataforma usando os conceitos aprendidos",
        "Criar seus próprios jogos por meio da engine Construct 2",
        "Publicar o jogo na internet",
        "Gerações de Jogos",
        "Mercado de Jogos e Monetização",
        "Game Engines",
        "Componentes que fazem um Jogo",
        "Criação de Tutoriais",
        "Game Loops",
        "Arcs",
        "Feedback",
        "Gráficos e Animações",
        "Mecânicas e Jogo e Controles",
        "Splash Screen",
        "Comportamento de Platformer",
        "Geração Aleatória de Inimigos",
        "Game States",
        "Disparo de Projéteis",
        "Inimigos",
        "Barra de Vida Animada",
        "Respawn",
        "Elementos de GUI",
        "Criação de Menus Completos e Multiplataforma",
        "Adicionar Plugins e Templates"
      ],
      "course_content": {
        "Introdução e Fundamentos Teóricos": [
          "Introdução da Plataforma Udemy",
          "O que é um jogo?",
          "Gerações de Video Games (Parte 1)",
          "DESCONTÃO PARA OUTROS CURSOS",
          "LINKS DE DESCONTOS PARA ALUNOS ATUAIS",
          "Gerações de Video Games (Parte 2)",
          "Mercado de Jogos e Monetização",
          "Game Engines",
          "Dicas Para Iniciantes",
          "Quizz 1",
          "Participe do Nosso Servidor do Discord de Games"
        ],
        "Aulas Grátis": [
          "Mais de 200 Aulas 100% Grátis Para Você!"
        ],
        "Componentes de Um Jogo": [
          "Camadas de Um Jogo",
          "Bons e Maus Tutoriais",
          "Gráficos e Animações",
          "Mecânicas e Controles",
          "Game Loops, Arcs e Feedbacks",
          "Música e Efeitos Sonoros",
          "Revisão, Conclusão e Exercício",
          "Quizz 2"
        ],
        "Seu Primeiro Jogo": [
          "Instalação do Construct 2",
          "Projeto Final - Jogo de Tap to Escape",
          "Instalação do Construct 2",
          "Apresentação do Jogo",
          "Estrutura Inicial",
          "Splash Screen",
          "Chão e Colisão",
          "Comportamento Platformer",
          "Variáveis e Simulate Platformer",
          "Quizz 3",
          "Touch Muda Direção",
          "On Collision e Limites",
          "CORREÇÃO DO BUG NO CANTO DA TELA - VÍDEO",
          "CORREÇÃO DO BUG NO CANTO DA TELA",
          "Inimigos Caem do Teto a cada X Segundos",
          "Sprite Fonts,Textos e GUI",
          "Pontuação e Reiniciar Jogo",
          "Game States (Pre-Game, In-Game,End-Game)",
          "Background,Grids e Sprite Font Color",
          "Animação do Jogador e Inimigos",
          "Música e Efeitos Sonoros",
          "Pause Game",
          "Timer",
          "Waves (Dificuldade Progressiva)",
          "Conclusão e Sugestões",
          "Ornaments",
          "Quizz 4",
          "Exportação,Hospedagem e Publicação"
        ],
        "Funções, Detalhes e Segredos do Construct 2": [
          "Apresentação da Seção",
          "Atalhos Que Facilitam a Vida",
          "Templates Prontos do Construct 2",
          "Adicionando Templates Próprios",
          "Adicionando Plugins e Behaviors",
          "Variáveis de Instância (Text,Number,Boolean)",
          "Funções Com e Sem Parâmetros",
          "Conectivos Lógicos e Subeventos",
          "Selecionar Objetos Por Instância Específica",
          "Tratando Instâncias Individuais (For Each)",
          "Funções Matemáticas(Min,Max,Aleatório e",
          "Função Lerp (Variação no Tempo)",
          "Medindo Ângulos (Angle)",
          "Contando Objetos (Object Count)",
          "Contagem Regressiva ou Progressiva",
          "Colisão, Sobreposição e Encosto (Collision e Overlaping)",
          "Mudar Posição e Limites do Layout"
        ],
        "Jogo de Plataforma com Tiro": [
          "Projeto Final - Plataforma com Tiro",
          "Estrutura Inicial do Projeto",
          "Jogador e Tipos de Plataforma",
          "Câmera Seguindo Jogador",
          "Usando Outras Teclas Para O Jogador",
          "Animações de Andar,Pular e Cair",
          "Plano de Fundo e Design de Plataformas",
          "Disparar Projéteis",
          "Inimigos e Pontuação",
          "Barra de Vida",
          "Descendo de Plataforma Jump Thru",
          "Colisão e Respawn",
          "Próximas Fases e GUI Global",
          "Conclusão do Jogo"
        ],
        "Criação de Menus": [
          "Text e Sprite Fonts",
          "Splash Screen e Fade Out",
          "Concatenação, Nome e Versão do Projeto",
          "Estrutura do Menu e Mouse Click",
          "Fechando e Saindo do Jogo",
          "Função Especial Para Navegação",
          "Cursor Do Mouse Próprio",
          "Seleção com Teclado e Variável Cursor",
          "Marcador de Opção Visual",
          "Efeito De Deslocamento no Seletor",
          "Seletor Visual Para Mouse",
          "Outras Teclas e Keycodes",
          "Navegação com Touch",
          "Options Menu (Estrutura)",
          "Criação Dinâmica de Elementos e Bank",
          "Objeto Global e Tela Cheia",
          "Música e Efeitos Sonoros",
          "Opções Com Imagens e Redes Sociais",
          "Seleção de Personagens e Load",
          "Seleção de Personagens e Load (2)",
          "Conclusão de Menus"
        ],
        "Publicação Online ou na Google Play": [
          "Publicação na Web",
          "Exportando e Gerando APK Para Android",
          "Como Publicar na Google Play"
        ],
        "Extra": [
          "Joystick Virtual",
          "Versionamento de Projeto com BitBucket (Parte 1)",
          "Versionamento de Projeto com BitBucket (Parte 2)",
          "Google Analytics (Relatórios de Uso)",
          "Google AdMob (Adicionar Anúncios e Ganhar Dinheiro Parte 1)",
          "Google AdMob (Adicionar Anúncios e Ganhar Dinheiro Parte 2)",
          "Download Projeto Analytics e AdMob"
        ],
        "Aulas Particulares, Consultoria e Freelances": [
          "Aulas Particulares, Consultoria e Freelances"
        ]
      },
      "requirements": [
        "Computador com Windows",
        "Construct 2 (Tudo poderá ser feito usando a versão Gratuita)",
        "Não é necessário saber programação (Será ensinado durante o curso)"
      ],
      "description": "Você irá aprender a utilizar cada pedacinho do Construct 2, além de aprender vários conceitos teóricos de Game Design como:\nMercado de Jogos e Monetização\nGame Engines\nGerações de Vídeo-Games\nCamadas de um Jogo\nTutoriais\nGame Loops, Arcs e Feedbacks\nApós a teoria você aprenderá do ZERO (\nNão requer conhecimento prévio com programação) a utilizar a ferramenta para criar jogos com:\nSplash Screen\nComportamento de Platformer\nGeração Aleatória de Inimigos\nGame States\nAnimação\nDisparo de Projéteis\nInimigos\nBarra de Vida Animada\nRespawn\nElementos de GUI\nCriação de Menus Completos e Multiplataforma\n-Adicionar Plugins e Templates\nAlém disso você terá suporte individual para tirar suas dúvidas e responderá a questionários para reforçar os seus conhecimentos.\nAo finalizar o curso você receberá um Certficado.\nEsse curso é para iniciantes, mesmo que NUNCA TENHAM PROGRAMADO NA VIDA.\nMuito obrigado e te vejo lá!",
      "target_audience": [
        "Pessoas que queiram aprender a criar jogos e protótipos sem usar codificação, de uma forma rápida, eficiente e divertida",
        "Pessoas sem qualquer experiência em programação"
      ]
    },
    {
      "title": "Unity C# || Sıfırdan İleri Seviye Unity Eğitimi",
      "url": "https://www.udemy.com/course/unity-c-sifirdan-ileri-seviye-unity-egitimi/",
      "bio": "Unity oyun motoru bilginizi ve C# yazılım bilginizi sıfırdan farklı oyun projeleri geliştirerek öğrenin.",
      "objectives": [
        "Oyun Mekanikleri ve Algoritmaları",
        "Unity ile Sıfırdan Android Oyun",
        "Animasyonlar, Metodlar, Fonksiyonlar",
        "Orta-Seviye Yazılım Bilgisi",
        "Nesne Tabanlı Programlama"
      ],
      "course_content": {
        "Giriş": [
          "Giriş, Tanıtım ve Bilgilendirmeler",
          "Oyun Türleri ve Oyun Motorları",
          "Mini Quiz 1",
          "Unity Kurulumu",
          "Unity Arayüzü İlk Bakış"
        ],
        "C# Temel Dersleri": [
          "C# Script Oluşturma",
          "C# Merhaba Dünya",
          "C# Veri Değişkenleri - Int,String ve Bool",
          "Mini Quiz 2",
          "C# If else Yapıları ve Operatörler",
          "C# Bağlaçlar",
          "C# Switch Case Yapıları",
          "C# While Döngüsü",
          "C# For Döngüsü",
          "C# Foreach Döngüsü",
          "C# Dizi (Array)",
          "C# ArrayList",
          "C# Dizi(Array) ve ArrayList Arasındaki Farklar",
          "Mini Quiz 3",
          "C# Matematiksel İşlemler",
          "Proje 1 : 1'den 1000'e Sayıların Toplamı",
          "Proje 2 : Boy-Kilo Endeksi Programı Yazma",
          "Proje 3 : Asal Sayıları Bulma",
          "Proje 4 : Fibonacci Serisini Hesaplama",
          "Proje 5 : Mükemmel Sayı Bulma",
          "Pratik Alıştırma Soruları",
          "Pratik Alıştırma Çözümleri"
        ],
        "Unity Temel Dersleri": [
          "Tools ve Nesne Hareketleri",
          "View Tools ve Pencere Ayarları",
          "Rigidbody 2D",
          "Collider 2D",
          "Örnek Oyun Projesi - Pofidix",
          "Pofidix - Oyun Alanını Düzenleme",
          "Pofidix - Oyuncu Kontrolleri",
          "Pofidix - Oyuncu Kontrolleri-2",
          "Pofidix - Collider Ekleme",
          "Pofidix - Toplanacak Altınları Ekleme",
          "Pofidix - Eklenen Altınları Toplama",
          "Pofidix - Text İle Toplanan Altınları Gösterme ve Canvas Ayarları",
          "Pofidix - Oyunu Çıktı Alma"
        ],
        "Unity 2D - Apple Fall": [
          "Apple Fall - Nasıl Bir Oyun Yapacağız ?",
          "Apple Fall - Proje Oluşturma ve Assetler",
          "Apple Fall - Oyun Alanını Düzenleme",
          "Apple Fall - Obje ve Colliderları Ekleme",
          "Apple Fall - Elmaları Toplama",
          "Apple Fall - TextMeshPro ve Canvas Ekleme",
          "AppleFall - Optimizasyon ve Destroy Komutu",
          "AppleFall - Instantiate Komutu ve Prefab Oluşturma",
          "AppleFall - Random.Range ve Vector3 Pozisyon Oluşturma",
          "AppleFall - Coroutine Kullanımı",
          "AppleFall - Oyuncu Kontrolleri ve Mouse Pozisyonu",
          "AppleFall - Oyuncu Yanma Durumu ve UI Düzenlemesi",
          "AppleFall - Can Barı Yapımı",
          "AppleFall - Oyunu Çıktı Alma"
        ],
        "Unity 2D - Flappy Bird": [
          "Flappy Bird - Nasıl Bir Oyun Yapacağız ?",
          "Flappy Bird - Assetler ve Oyun Alanını Oluşturma",
          "Flappy Bird - Rigidbody ve Collider Ekleme",
          "Flappy Bird - Oyuncu Kontrolleri",
          "Flappy Bird - Oyuncu Kontrolleri-2",
          "Flappy Bird - Animasyon Ekleme",
          "Flappy Bird - Animasyon Ağacı",
          "Flappy Bird - UI Tasarımları",
          "Flappy Bird - Background Hareket Verme",
          "Flappy Bird - Obje Parent Child İlişkisi",
          "Flappy Bird - Background Pozisyon Düzenleme ve Sahne Ayarları",
          "Flappy Bird - Optimizasyon ve Hız Ayarları",
          "Flappy Bird - Prefab ve Engelleri Oluşturma",
          "Flappy Bird - Obje Havuzu Oluşturma",
          "Flappy Bird - Variables Sınıfı",
          "Flappy Bird - Son Düzeltmeler",
          "Flappy Bird - Android Çıktı Alma ve Build Settings"
        ],
        "Unity 2D - Mr.Shooter": [
          "Mr. Shooter - Nasıl Bir Oyun Yapacağız ?",
          "Mr. Shooter - Proje Oluşturma ve Assetler",
          "Mr. Shooter - Multiple Sprite ve Karakter Oluşturma",
          "Mr. Shooter - Child Parent İlişkisi ve Pivot Nokta",
          "Mr. Shooter - Multiple Sprite ve GIMP Kullanımı",
          "Mr. Shooter - TileMap Kullanımı ve Oyun Alanını Oluşturma",
          "Mr. Shooter - TileMap Kullanımı ve Collider Ekleme",
          "Mr. Shooter - Grid ve TileMap Collider",
          "Mr. Shooter - Oyuncu Kontrolleri",
          "Mr. Shooter - Oyuncu Kontrolleri-2 ve Atan2 Kullanımı",
          "Mr. Shooter - Ateş Etme ve Mermi Oluşturma",
          "Mr. Shooter - GIMP ve Rotate İşlemleri",
          "Mr. Shooter - Mermi Animasyonu Düzenleme",
          "Mr. Shooter - Düşman Karakter Oluşturma",
          "Mr. Shooter - Düşman Karakterin Hareket Metodları ve Atan2 Kullanımı",
          "Mr. Shooter - MovePosition Komutu ve Düşman Hareket Metodları",
          "Mr. Shooter - GameObject.Find Komutu ve Prefab Düzenleme",
          "Mr. Shooter - Düşman Karakterin Spawn Olması ve Çıkma Sıklığı Düzenleme",
          "Mr. Shooter - Trigger Collision Metodları ve Çarpışma Düzenleme",
          "Mr. Shooter - Variables(Değişkenler) Giriş ve Düşman Saldırısı Düzenleme",
          "Mr. Shooter - Hataların Düzenlenmesi ve UI Canvas Eklenmesi",
          "Mr. Shooter - GameOver ve GameManager Kullanımı",
          "Mr. Shooter - Sarjör Yapımı ve Mermi Sınırlama",
          "Mr. Shooter - Mermi UI Düzenleme",
          "Mr. Shooter - Yerden Mermi Alma ve Sarjör Ekleme",
          "Mr. Shooter - Yerden Hız Alma ve Oyuncu Hareketi Düzenleme",
          "Mr. Shooter - SceneManager Kullanımı ve Sahne Resetleme",
          "Mr. Shooter - Package Manager Kullanımı ve Cinemachine Import Etme",
          "Mr. Shooter - Virtual Camera Kullanımı ve Cinemachine Kullanımı",
          "Mr. Shooter - Kaynak Dosyaları",
          "Oyuna Neler Eklenebilir"
        ],
        "Fizik İşlemleri 2D": [
          "Area Effector 2D",
          "Box Collider 2D",
          "Buoyancy Effector 2D",
          "Capsule Collider 2D",
          "Circle Collider 2D",
          "Composite Collider 2D",
          "Constant Force 2D",
          "Custom Collider 2D",
          "Distance Joint 2D",
          "Edge Collider 2D",
          "Fixed Joint 2D",
          "Friction Joint 2D",
          "Hinge Joint 2D",
          "Platform Effector 2D",
          "Point Effector 2D",
          "Polygon Collider 2D",
          "Relative Joint 2D",
          "Rigidbody 2D",
          "Slider Joint 2D",
          "Spring Joint 2D",
          "Surface Effector 2D",
          "Target Joint 2D",
          "Wheel Joint 2D"
        ],
        "Unity 3D - Giriş": [
          "Universal Render Pipeline(URP) ve High Definition Render Pipeline(HDRP)",
          "3D Giriş",
          "3D Oyun Alanını Düzenleme",
          "3D Oyuncu Kontrolleri"
        ],
        "Işık İşlemleri": [
          "Directional Light",
          "Point Light",
          "Spot Light",
          "Area Light ve Baked Lightmaps",
          "Lighting - Scene",
          "Lighting - Environment",
          "Lighting - Realtime & Baked Lightmaps"
        ],
        "Ses İşlemleri": [
          "Müziklerin Ticari Kullanımı ve Lisans Türleri",
          "Müzik Lisans Türleri Şeması ve Açıklama",
          "Gerçek Müzik Satın Alma ve Ticari Lisans İnceleme",
          "Klip Özellikleri ve Mono-Stereo Ses Kanalları Düzenlemesi",
          "Audio Source",
          "Script Ses Yönetimi ve Play-Pause-PlayOneShot Komutları",
          "Çarpışma ve Script Ses Yönetimi",
          "Audio Filters ve Eco-High-Reverb Filters"
        ]
      },
      "requirements": [
        "Başlangıç Seviyesinde Bilgisayar Kullanabilme",
        "Oyun Geliştirmek için Hevesli ve Sabırlı Olmak"
      ],
      "description": "Kursumuz sıfırdan Unity oyun motoru ve C# yazılım dilini öğrenmek isteyenlere yöneliktir. Nereden başlayacağını bilemeyen veya çok komplike videolar izleyerek oyun geliştirmekten soğuyan kişileri tekrar bu yola sokmayı hedefler. Bir başlangıç yapmak her zaman zordur ancak bu kurs sayesinde her şeyi çok daha basit ve anlaşılır hale getirdiğimizden emin olabilirsiniz. Yaratıcılığın bir sınırı olmadığı gibi yaşında bir öneminin olmadığını unutmayın. Hayal etmek bu işin yarısı ancak hayallerini gerçekleştirmek bu işin diğer yarısıdır. Bu yüzden kendinizi biraz zorlayıp kursu sonuna kadar takip ederseniz size çok şey katacaktır. Büyük bir oyun şirketi olmak yada büyük şirketlerde çalışmak istiyorsanız basitten zora doğru adım adım ilerlemelisiniz. Yaptığınız her proje, attığınız her adım sizlere yeni şeyler öğretecektir. Bu projelerde öğrendiğiniz metotları kendi projelerinizde de kullanabilirsiniz. Kursumuzda anlatılan konunun türüne bağlı olarak projelerimizde nasıl kullanılabileceğini de göstermeye çalıştık. Konu anlatımlarının yanı sıra farklı türde örnek oyunlar yaptık, bu örnek oyunların algoritmaları birbirlerinden farklıdır. Burada ki amaç farklı algoritmaları ve farklı oyun türlerini görebilmenizdir. Bir şeyleri direk ezberlemektense örnekler üzerinde öğrenmenin her zaman daha faydalı olduğu düşüncesindeyiz. Haydi hiç zaman kaybetmeden başlayalım ! Kursumuz ile ilgili genel başlıklar :\n1- Oyun nedir, oyun türleri nelerdir ?\n2-C# nedir, yazılım dili kuralları nelerdir ?\n3-Unity ile nasıl animasyon ve arayüz tasarlanır ?\n4-Unity fizik kuralları ve çarpışmalar nasıl yönetilir ?",
      "target_audience": [
        "Sıfırdan Oyun Geliştirmeyi Öğrenmek İsteyenler",
        "Yazılım ve Oyun Alanında Kariyer Hedefleyenler",
        "Mobil & PC Tabanlı Oyun Geliştirmeyi Öğrenmek İsteyenler",
        "Oyun Şirketlerinde Çalışmak İsteyenler"
      ]
    },
    {
      "title": "【한글자막】 메타버스 기초 과정: 블록체인, 암호화폐 및 NFT 완벽 마스터",
      "url": "https://www.udemy.com/course/metaverse-nft-blockchain/",
      "bio": "메타버스에서 사용되는 암호화폐, 블록체인 및 NFT를 포함하여 메타버스에서 가장 중요한 개념과 주제를 빠르게 마스터하고 메타버스에서 나만의 아바타 만들기",
      "objectives": [
        "블록체인 기술로 메타버스를 개발하기 위한 웹3.0으로의 진화",
        "메타버스 관련 기술: 증강 현실(AR), 가상 현실(VR), 혼합 현실(MR) 및 인공 지능(AI)",
        "메타버스 시장의 기회",
        "메타버스의 블록체인 도입",
        "메타버스에 적용된 블록체인, 스마트 계약, NFT 및 암호화폐",
        "메타버스 구축 도구: Unity, Unreal Engine, Amazon Sumerian 및 Spark AR",
        "메타버스 사용 사례",
        "나만의 메타버스 아바타 만들기"
      ],
      "course_content": {
        "여러분의 메타버스로의 여정이 시작됩니다": [
          "1. 메타버스 기초에 오신 것을 환영합니다. 블록체인, 암호화폐와 NFT를 배워보아요!",
          "2. 본 강의는 이렇게 구성됩니다",
          "3. 우리는 여러분과 함께 합니다"
        ],
        "메타버스 개요": [
          "4. 웹의 역사와 웹 3.0의 도래",
          "5. 메타버스란 무엇인가요?",
          "6. 메타버스와 시장 기회"
        ],
        "메타버스에서 사용되는 기술들": [
          "7. 메타버스에서 사용되는 주요 기술들에 대한 소개",
          "8. 증강현실(AR, Augmented Reality)이란 무엇인가요?",
          "9. 가상현실(VR, Virtual Reality)이란 무엇인가요?",
          "10. 가상 현실의 예시 - 트레이닝 시뮬레이션",
          "11. AR과 VR의 이점",
          "12. 혼합현실(MR, Mixed Reality)이란 무엇인가요?",
          "13. 메타버스에서의 인공지능(AI, Artificial Intelligence) 개요"
        ],
        "메타버스에서의 블록체인 활용": [
          "14. 메타버스에서의 블록체인 개요",
          "15. 스마트 계약",
          "16. 디지털 토큰",
          "17. NFT 토큰",
          "18. 메타버스에서의 암호화폐"
        ],
        "메타버스 개발에 사용되는 도구들": [
          "19. 메타버스 시작하기",
          "Unity",
          "Unreal Engine",
          "Amazon Sumerian",
          "Spark AR",
          "Blender"
        ],
        "메타버스의 사용 사례": [
          "25. 메타버스로 무엇을 할 수 있을까요?",
          "26. 메타버스 사용 사례: 소셜 커넥션",
          "27. 메타버스 사용 사례: 게임",
          "27. 메타버스 사용 사례: 운동",
          "27. 메타버스 사용 사례: 업무",
          "27. 메타버스 사용 사례: 교육"
        ],
        "나만의 아바타 만들기": [
          "31. 여러분의 아바타를 만들어 보아요",
          "32. 여러분의 아바타를 메타버스의 세계로 보내세요"
        ],
        "완강을 축하합니다. 추가 자료들을 확인해 보세요": [
          "33. 완강을 축하드리며, 추가 자료를 드립니다",
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "본 강의는 VR 헤드셋 등의 특별한 장비가 필요하지 않습니다.",
        "어떤 경험이나 기술도 필요없이, 강의를 통해 모든 것을 배우게 됩니다.",
        "인터넷 접속이 가능한 컴퓨터와 새로운 개념을 배우려는 열린 마음만 있으면 됩니다."
      ],
      "description": "메타버스가 무엇인지, 어떻게 참여할 수 있는지 알고 싶으신가요?\n메타버스에서 블록체인 기술이 어떻게 사용되는지 알고 싶으신가요?\n증강 현실(AR)과 가상 현실(VR)에 대해 알아보고 이것이 여러분의 인터넷 경험을 어떻게 변화시킬지 알고 싶으신가요?\n디지털 부동산과 메타버스에서 사용, 구매 및 판매되는 암호화폐와 대체 불가능한 토큰에 대해 알고 싶으신가요?\n취향 가득한 나만의 메타버스 디지털 아바타를 만들고 싶으신가요?\n메타버스라는 새로운 세계, 가상 현실에 눈을 뜨고 싶으신지요?\n이 질문 중 하나라도 예라고 답했다면, 본 강의는 당신을 위한 강의입니다.\n\n\n글로벌 투자은행 골드만삭스는 메타버스가 8조 달러의 기회가 될 수 있다고 예측했습니다.\n\n\n[메타버스란?]\n최신 인터넷 기술과 다양한 디바이스를 통해 몰입되고 다감각적인 경험을 선사하는 차세대 인터넷을 나타내는 개념입니다.\n약 30억 명의 사용자를 보유한 거대한 소셜 네트워크 회사인 페이스북(Facebook)은 사명을 메타(Meta)로 바꾸고 메타버스 구현을 목표로 하고 있습니다. 메타버스로 회사의 무게추를 옮기고 상상할 수 있는 모든 일이 가능한 인간 상호 작용의 새로운 세계를 만들기로 한 것이죠.\n\n\n[본 강의에서 학습할 주제]\n메타버스에서 사용되는 암호화폐 블록체인 및 NFT는 물론, 주요 개념과 비즈니스에서의 실제 적용 방법을 모두 자세하게 알려드리겠습니다.\n\n\n본 강의는 이 새로운 기술의 잠재력이 무엇이며 증강 현실(AR), 가상 현실(VR) 및 블록체인 기술이 현재 어떻게 적용되고 있고 앞으로는 어떻게 사용될 것인지를 이해하고 배울 수 있도록 설계되었습니다.\n\n\n[강의 커리큘럼]\n메타버스 소개: 웹3.0의 진화와 메타버스 시장 기회\n메타버스 관련 기술: 증강 현실(AR), 가상 현실(VR), 혼합 현실(MR) 및 인공 지능(AI)\n메타버스의 블록체인 도입: 메타버스 내 블록체인, 스마트 계약, NFT 토큰 및 암호화폐\n메타버스를 만들기 위한 도구!\n메타버스 사용 사례\n나만의 취향대로 메타버스용 디지털 아바타 만들기\n\n\n[유용한 추가 콘텐츠]\n블록체인 기술을 이해하는 데 도움이 되는 다운로드 및 인쇄 가능한 PDF 형식의 전자책 2권이 포함되어 있습니다.\n블록체인 기초: To the Moon (달나라까지)\n토큰\n\n\n[대상 수강생]\n본 강의는 메타버스가 무엇이며 그 안에 있는 기회의 가능성은 어떤 것들이 있는지 확실히 알아보고 싶은 분들을 위해 제작되었습니다.\n\n\n다음과 같은 분에게 권해드립니다:\n현재 기술 변화에 적응하고 개선하는 데 관심이 있는 모든 분들.\n메타버스의 힘으로 회사를 한 단계 끌어올리고자 하는 비전 있는 기업가 및 오너.\n가상 현실(VR)의 힘으로 비즈니스를 혁신하고자 하는 프로그래밍 기술을 지닌 프리랜서 컨설턴트.\n기술에 대한 열정으로 새로운 사회적 상호작용 환경인 메타버스를 경험하고 싶은 분.\n메타버스에 적용된 증강현실(AR), 가상현실(VR), 블록체인에 대해 배우고 싶은 모든 분들.\n\n\n\n본 강의를 수강하는 데 필요한 사전 기술이나 지식 또는 특수 장비는 없습니다. 인터넷 접속이 가능한 컴퓨터와 현재 개발 중인 새로운 디지털 세계인 메타버스에 알아보고 참여하고자 하는 열망만 있으시면 됩니다.\n더 이상 망설이지 마세요. 세상이 변하고 있습니다. 이 변화에 동참하세요!\n\n강의에서 뵙겠습니다.\n감사합니다.\n\n\n- George Levy\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 내용을 남겨 주세요. 그래야 상세한 답변을 드릴 수 있습니다. :)",
      "target_audience": [
        "현재 기술 변화에 적응하고 개선하는 데 관심있는 분",
        "메타버스의 힘으로 회사를 한 단계 끌어올리고자 하는 비전 있는 기업가 및 오너",
        "가상 현실(VR)의 힘으로 비즈니스를 혁신하고자 하는 프로그래밍 기술을 지닌 프리랜스 컨설턴트",
        "기술에 대한 열정으로 새로운 사회적 상호작용 환경인 메타버스를 경험하고 싶은 분",
        "메타버스에 적용한 증강현실(AR), 가상현실(VR), 블록체인에 대해 배우고 싶은 분"
      ]
    },
    {
      "title": "Introdução à Produção e Desenvolvimento de Games",
      "url": "https://www.udemy.com/course/introducao-a-producao-de-games/",
      "bio": "Entenda as etapas da produção e conheça as principais ferramentas e softwares utilizados no desenvolvimento de games.",
      "objectives": [
        "Como escolher o melhor gênero de jogo para cada tipo de público-alvo, plataforma de desenvolvimento e modelo de negócio.",
        "Como selecionar o melhor modelo de monetização de seus jogos e entender os macetes para maximizar o potencial de receita.",
        "Como a indústria e o mercado de games estão estruturados no Brasil e os caminhos possíveis para se tornar um produtor de games.",
        "Quais são os principais players da cadeia de negócios: empresas, fornecedores e parceiros"
      ],
      "course_content": {
        "Módulo 1 - Introdução": [
          "1.0 - Introdução à Produção de Jogos",
          "1.1 - História",
          "1.2 - Apple e a Revolução Indie",
          "1.3 - Google Play",
          "1.4 - Diferenças entre Google Play e Apple",
          "1.5 - Compras In App",
          "1.5.1 - Admob",
          "Material Complementar: Segundo censo da indústria de brasileira de games"
        ],
        "Módulo 2 - Canais": [
          "2.0 - Apple",
          "2.1 - Google Play",
          "2.2 - Firefox",
          "2.3 - Crash",
          "2.4 - Abertura aos Independentes",
          "2.5 - Greenlight",
          "Material Complementar: O que podemos aprender com o Steam Greenlight?",
          "2.6 - Consoles",
          "2.7 - Crowdfunding",
          "2.8 - Kickstarter",
          "2.9 - Grau de maturidade do projeto para entrar em um Crowndfunding",
          "2.10 - Riscos do Crowdfunding",
          "Como montar um estúdio de desenvolvimento de games?"
        ],
        "Módulo 3 - Ferramentas": [
          "3.0 - Unity",
          "3.1 - HPL1",
          "3.2 - Ogre",
          "3.3 - Torque 3D",
          "3.4 - Gamemaker Studio",
          "3.5 - Construct 2",
          "3.6 - Unreal",
          "3.7 - Qual é a ferramenta ideal?",
          "3.8 - Cases Brasileiros",
          "Nielsen Games Report"
        ],
        "Módulo 4 - Público": [
          "4.0 - Entretenimento, Treinamento e Publicidade",
          "4.1 - Games for Good",
          "4.2 - Nicho",
          "4.3 - Tecnologia",
          "4.4 - Timing",
          "4.5 - Nostalgia",
          "4.6 - Gameplay",
          "4.7 - Gêneros Esquecidos",
          "4.8 - Influenciadores",
          "4.9 - Lojas Brasileiras",
          "4.10 - Polêmica",
          "4.11 - Arte",
          "4.12 - Domínio Público",
          "4.13 - Remakes"
        ],
        "Módulo 5 - Ambiente": [
          "5.0 - Obstáculos",
          "5.1 - Cenário Brasil",
          "Material Complementar: Pesquisa Game Brasil"
        ],
        "Módulo 6 - Estrutura": [
          "6.0 - Grandes Estúdios",
          "6.1 - Estúdios Independentes",
          "6.2 - Outsourcing",
          "6.3 - GDD",
          "6.4 - GDD Mínimo",
          "6.5 - Prototipagem",
          "6.6 - Tempo",
          "6.7 - Custo-Cronograma"
        ],
        "Módulo 7 - Distribuição": [
          "7.0 - Guerrilha Indie",
          "7.1 - Lojas"
        ],
        "Módulo 8 - Resultados": [
          "8.0 - Monitoramento",
          "8.1 - Sacrifício",
          "8.2 - Linkedin",
          "8.3 - Dia a Dia",
          "8.4 - Atendimento",
          "8.5 - Crowdsourcing"
        ],
        "Módulo 9 - Inovação": [
          "9.0 - Hardware",
          "9.1- Criatividade"
        ],
        "Módulo 10 - Exercícios": [
          "10.0 - Exercício 01",
          "10.1 - Exercício 02"
        ]
      },
      "requirements": [
        "Este curso não requer conhecimento prévio de programação ou habilidade técnica.",
        "Este curso não requer a instalação de nenhum programa ou ferramenta específica."
      ],
      "description": "Este curso destina-se a todos os interessados em compreender o processo de produção e desenvolvimento de games, e também a profissionais de outras àreas com perfil empreendedor que querem investir no desenvolvimento de jogos digitais e precisam entender como a indústria está organizada.\nVocê vai ter uma visão ampla de todos os aspectos da indústria de jogos, entender os fatores que influenciam na escolha das melhores ferramentas, e tudo que um desenvolvedor precisa entender ao escolher qual é o estilo de jogo que mais se encaixa nos seus objetivos pessoais e profissionais. Além disso, este curso permitirá que você tenha uma idéia mais realista das dificuldades reais dos processos produtivos e permitirá que você consiga planejar o quanto de tempo, recursos e oportunidades de negócios de acordo com os diferentes estilos de jogos possíveis.\nÉ um curso imprescindível para todos os interessados em ingressar no na indústria de jogos digitais, e evitar os erros mais comuns e fazendo com que sua curva de aprendizado seja muito mais rápida.\n** Este curso será atualizado constantemente pelo professor através de adição de novas aulas, atualização informações, aulas comentadas por outros especialistas da EBG, inserção de estudos de casos e exercícios práticos.",
      "target_audience": [
        "Iniciantes na produção e desenvolvimento de jogos digitais, que desejam compreender como a indústria funciona, saber quais tipos de tecnologias são usadas para produzir os diferentes tipos de jogos, seja para consoles, PC ou mobile.",
        "Gestores de projetos, produção e negócios, que buscam conhecimento sobre práticas inovadoras.",
        "Público em geral, interessado em entender o funcionamento do mercado de games."
      ]
    },
    {
      "title": "Introducción a la Programación de Videojuegos con Pygame",
      "url": "https://www.udemy.com/course/introduccon-a-la-programacion-de-videojuegos-con-pygame/",
      "bio": "Aprende los principios básicos de programación y empieza a crear tus primeros videojuegos",
      "objectives": [
        "Aprenderás los principios básicos de programación en Python",
        "Aprenderás los principios básicos en la creación de videojuegos sencillos"
      ],
      "course_content": {},
      "requirements": [
        "Debes saber usar un PC a nivel básico (descargar archivos, instalar aplicaciones). También ayuda, aunque no es imprescindible, haber programado previamente.",
        "También se asume una cierta agilidad navegando el sistema de ficheros y creando directorios."
      ],
      "description": "Aprende los principios básicos de la creación de juegos por ordenador utilizando el lenguaje de programación Python y Pygame. El curso está orientado a personas que les gustaría iniciarse en la programación de videojuegos pero no saben por dónde empezar.\nPython es un lenguaje de programación muy sencillo de aprender pero a la vez muy potente y junto con la librería Pygame es ideal para iniciarse en la programación de videojuegos.\nEl curso está estructurado de forma muy práctica introduciendo conceptos nuevos a medida que se necesitan. Creo que de esta forma el alumno no se ve obligado a asimilar demasiados conceptos de golpe sin entender su utilidad práctica. Por ello es recomendable seguir el curso en el orden establecido en el programa.\nAl final del curso tendrás los conocimientos necesarios para poder profundizar en la programación en Python y en particular en la programación de videojuegos.",
      "target_audience": [
        "Principiantes en lenguajes de programación",
        "Personas que hayan programado pero no han programado nunca un videojuego"
      ]
    },
    {
      "title": "Programación de videojuegos con Monogame",
      "url": "https://www.udemy.com/course/videojuegos-con-monogame/",
      "bio": "Desarrolla tus juegos con C# y Monogame",
      "objectives": [
        "Adquirirás los conocimientos para crear tus videojuegos en C# con un framework multiplataforma.",
        "Aprenderás técnicas de programación para juegos.",
        "Mejorarás tu nivel de programación.",
        "Podrás publicar tus juegos en las tiendas y distribuirlos a miles de usuarios.",
        "Verás cómo añadir música y efectos de sonido a los juegos",
        "Aprenderás a programar gráficos en 2D y 3D",
        "Serás capaz de crear juegos para dispositivos Android y Windows.",
        "Verás herramientas gratuitas para la creación de contenido."
      ],
      "course_content": {
        "Introducción": [
          "Bienvenida",
          "Presentación del curso"
        ],
        "El entorno de desarrollo": [
          "Instalación de Visual Studio 2019"
        ],
        "Estructura básica de un juego": [
          "El primer proyecto Monogame",
          "Dibujando la escena (Método Draw)",
          "Creando movimiento (Update)",
          "Profundizando en el método Draw"
        ],
        "Animación": [
          "Animando sprites"
        ],
        "Gestionando la entrada del usuario": [
          "El teclado",
          "El mouse"
        ],
        "Lógica del juego": [
          "Añadiendo nuevas texturas",
          "Modelo de datos",
          "Inicializando los objetos del juego",
          "Moviendo objetos",
          "Colisiones",
          "Fases del juego",
          "Visualizando texto"
        ],
        "Proyecto Windows Universal (UWP)": [
          "Adaptando el juego para UWP",
          "Múltiples resoluciones"
        ],
        "Pantalla táctil y gamepad": [
          "La pantalla táctil",
          "El gamepad"
        ],
        "Música y efectos de sonido": [
          "Efectos de sonido",
          "Sonido de fondo",
          "Musica"
        ],
        "La plataforma Android": [
          "Creando un proyecto Android"
        ]
      },
      "requirements": [
        "Para este curso son necesarios conocimientos de C#.",
        "Es recomendable estar familiarizado con Visual Studio.",
        "Es necesario un ordenador preferiblemente con Windows.",
        "Conocimientos básicos de matemáticas."
      ],
      "description": "Monogame es un framework para la creación de potentes videojuegos multiplataforma.\nEn este curso vamos a ver todo el proceso de creación de un videojuego en Monogame. Empezaremos preparando nuestro entorno de desarrollo y vamos a ir paso a paso desarrollando el juego hasta terminar un proyecto completamente funcional. Además aprenderemos a publicarlo.\nEn la actualidad existen muchas herramientas para la creación de videojuegos pero pocas cuentan con las características de Monogame que lo hacen único.\nMonogame se puede programar en C# y otros lenguajes de la plataforma .NET.\nEs multiplataforma, soportando iOS, Android, MacOS, Linux, Windows, PS4, Xbox One entre otras.\nEs open source, el código está disponible para que lo puedas adaptar cuando lo necesites.\nTiene una amplia comunidad de desarrolladores.\nEste curso te va a proporcionar los conocimientos necesarios para que al finalizar seas capaz de crear tu juego.",
      "target_audience": [
        "El curso va dirigido a personas que sepan C# y quieran aprender a programar videojuegos.",
        "Personas que tengan en interés en conocer Monogame",
        "Desarrolladores independientes que quieran publicar un juego."
      ]
    },
    {
      "title": "Unity 3D strategia czasu rzeczywistego RTS",
      "url": "https://www.udemy.com/course/unity-3d-strategia-czasu-rzeczywistego-rts/",
      "bio": "Tworzymy grę strategiczną w Unity 3D",
      "objectives": [
        "Zrobienie od A do Z gry strategicznej w Unity 3D",
        "Nauczysz się między innymi: importować modele, tworzyć teren w unity, ustawiać światła, animacje postaci, nawigacje, prostą sztuczną inteligencje przeciwnika, interakcje z otoczeniem itd.",
        "A dodatkowo nauczysz się obsługiwać repozytorium na GitHub wykorzystaniem do tego klienta SourceTree"
      ],
      "course_content": {
        "Wstęp": [
          "Wstęp"
        ],
        "Przygotowania": [
          "Instalacja potrzebnego oprogramowania.",
          "Zaimportowanie darmowych materiałów do stworzenia gry strategicznej.",
          "Praktyczne porady o utrzymaniu porządku w rosnącym projekcie gry komputerowej."
        ],
        "Tworzymy grę strategiczną": [
          "Kreowanie świata 3D - rzeźbienie terenu",
          "Ustawianie oświetlenia gry",
          "Przygotowanie zaimportowanych modeli 3D do pracy",
          "Tworzenie drzewa animacji",
          "Wypalanie siatki nawigacji",
          "Poruszanie kamerą za pomocą klawiatury oraz myszy",
          "Wgląd do systemu UI w silniku Unity 3D",
          "Wizualizowanie ilości pozostałego życia jednostek",
          "Zaznaczanie jednostek",
          "Wykorzystanie systemu Message w silniku Unity 3D",
          "Stworzenie systemu strzelania z karabinu.",
          "Stworzenie inteligenci opartej na drzewie stanów",
          "Importowanie nowych animacji",
          "Znalezienie assetu przeznaczonego na budynek",
          "Stworzenie wygodnego i uniwersalnego systemu zarządzania walutą w grze",
          "Sprawdzanie, czy możliwe jest budowanie budynku w danym miejscu",
          "Nagrody za osiąganie celów i prawdziwe koszta.",
          "Warunek zwycięstwa i porażki"
        ],
        "Aktualizacje do kursu": [
          "Aktualizacja kursu 2019"
        ]
      },
      "requirements": [
        "Wymagane podstawy posługiwania się Unity 3D"
      ],
      "description": "Kurs wideo \"Unity 3D strategia czasu rzeczywistego RTS\" został stworzony z myślą o osobach, które są fanami RTS i chciałyby nauczyć się tworzenia gier strategicznych w silniku Unity 3D.\nW tym kursie wideo nauczymy się, jak - z pomocą silnika Unity 3D - stworzyć podstawowe elementy gry strategicznej.\nOmówimy takie tematy jak:\n- Zaznaczanie jednostek oraz wydawanie im poleceń, takich, jak chodzenie bądź strzelanie.\n- Stworzymy system sztucznej inteligencji, nauczymy się kontrolować kamerę za pomocą myszy oraz klawiatury.\n- Dodatkowo, stworzymy system zoomowania i oddalania za pomocą kółka myszy.\n- Wykreujemy cały świat, wraz z drzewami, terenem oraz światłem i cieniem.\n- Skorzystamy z siatki nawigacji, by nasze jednostki mogły się poruszać za pomocą buff findingu wbudowanego w silniki Unity.\n- Będziemy mogli kupować nowe jednostki, jak również stawiać nowe budynki.\n- Przejdziemy przez podstawy systemu walki oraz oddawania strzału, jak również nauczymy sie manipulować animacjami.\n- Poznamy rozmaite skróty klawiszowe, a także dobre praktyki - zarówno w silniku Unity 3D, jak i w samym Visual Studio, w którym będziemy programować w języku C#. Poznamy w nim kluczowe metody wywoływane przez silnik Unity oraz napiszemy wiele własnych, wykorzystując do tego metodologię programowania obiektowego.\n- Spotkamy się z różnymi błędami programistycznymi i nauczymy się, jak je debugować i jak je naprawiać.\n- Dodatkowo, cały postęp projektu będzie zapisywany w metodologii Git, na repozytorium na GitHub. Wykorzystamy do tego klienta SourceTree i nauczymy się jego podstawowej funkcjonalności.\n\n\n\nKurs Gra strategiczna (RTS - strategia czasu rzeczywistego) składa się z 22 praktycznych lekcji, prowadzonych przez profesjonalnego twórcę gier:\n\n\n1. Wprowadzenie do kursu wideo Gra strategiczna (RTS - strategia czasu rzeczywistego).\n\n2. Instalacja niezbędnego oprogramowania (Unity 3D, SourceTree, GitHub).\n\n3. Zaimportowanie darmowych materiałów do stworzenia gry strategicznej.\n4. Praktyczne porady o utrzymaniu porządku w rosnącym projekcie gry komputerowej.\n5. Kreowanie świata 3D - rzeźbienie terenu, teksturowanie, sadzenie trawy i drzew, zdobienie mapy rozgrywki za pomocą kamieni, wzgórz, kraterów itd.\n6. Ustawianie oświetlenia gry pod kamerę RTS, zmiana ustawień jakości grafiki, opcje cieni i wypalanie światłocienia na teksturze terenu\n7. Przygotowanie zaimportowanych modeli 3D do pracy, odpowiednie ustawienie modeli, avatarów i animacji.\n8. Tworzenie drzewa animacji, przejścia między animacjami, blendowanie animacji oraz kodowanie logiki stojącej za animowaniem postaci.\n9. Wypalanie siatki nawigacji, wyjaśnienie podstaw jej wykorzystania w praktyce, poruszanie się jednostek i podążanie za sobą, synchronizacja prędkości animacji z prędkością poruszania się.\n10. Poruszanie kamerą za pomocą klawiatury oraz myszy, przybliżanie i oddalanie, programowanie w zrozumiały sposób.\n11. Wgląd do systemu UI w silniku Unity 3D, manipulowanie wielkością i pozycją obrazów za pomocą kodu, przeliczanie pozycji kursora na pozycję selection box'a.\n12. Wizualizowanie ilości pozostałego życia jednostek w sposób niezależny od pozycji kamery, wykorzystanie World Canvas w praktyce.\n13. Zaznaczanie jednostek.\n14. Wykorzystanie systemu Message w silniku Unity 3D do przekazywania komend jednostkom, polimorfizm i rzutowanie typów w C# oraz ich zagrożenia.\n15. Stworzenie systemu strzelania z karabinu.\n16. Stworzenie inteligenci opartej na drzewie stanów i przejściach między nimi, wykrywanie celów do ataku, gonienie celu i patrolowanie terenu.\n17. Importowanie nowych animacji do modelu poprzez system avatarów humanoida, rozbudowa animatora żołnierza o brakujące ruchy.\n18. Znalezienie assetu przeznaczonego na budynek. kupowanie jednostek w budynku, punkt zbiorczy dla kupowanych jednostek.\n19. Stworzenie wygodnego i uniwersalnego systemu zarządzania walutą w grze, typy zmiennych w C# umożliwiające płynne i bezpieczne przechowywanie liczb.\n20. Sprawdzanie, czy możliwe jest budowanie budynku w danym miejscu, zaawansowane zapytania do systemu nawigacji oraz fizyki Unity 3D.\n21. Tworzenie tekstu płynącego po ekranie, dywersyfikacja komponentów silnika, minimalizacja funkcjonalności, nagrody za osiąganie celów i prawdziwe koszta.\n22. Game Controller, warunek zwycięstwa i porażki, ostatnie szlify gry.\n\n\nJeśli jesteś fanem RTS i marzysz o tym, by zająć się profesjonalnym tworzeniem gier strategicznych, ten kurs wideo jest dla Ciebie. Wspólnie rozpocznijmy tę pełną wrażeń przygodę!",
      "target_audience": [
        "Jeśli jesteś fanem RTS i marzysz o tym, by zająć się profesjonalnym tworzeniem gier strategicznych, ten kurs wideo jest dla Ciebie."
      ]
    },
    {
      "title": "Unreal Engine 4: Bilgisayar Ve Mobil İçin Oyun Geliştirme",
      "url": "https://www.udemy.com/course/unreal-engine-4baslangc-seviyesinde-oyun-gelistirme/",
      "bio": "Unreal Engine 4: Bilgisayar Ve Mobil İçin Oyun Geliştirme",
      "objectives": [
        "Bilgisayar veya Android platformlarda hayalindeki oyunu geliştirmek ve daha fazlası"
      ],
      "course_content": {
        "Giriş": [
          "Kursta Neler Olucak",
          "Giriş"
        ],
        "Oyun Geliştirmeye Giriş": [
          "Oyun Geliştirmeye Giriş"
        ],
        "Arayüz": [
          "Arayüz"
        ],
        "Ev Oluşturma (BSP)": [
          "Ev Oluşturma"
        ],
        "Material ve texture": [
          "Material-1",
          "Material ve Texture-2"
        ],
        "Meshler": [
          "Static ve Skeletal Meshler"
        ],
        "Particle(Efekt)": [
          "Particle"
        ],
        "Blueprints": [
          "Blueprints 1 (Başlangıç)",
          "BluePrints 2 (Değişkenler)",
          "Farklı Zeminler Ayak Sesi",
          "Zamanı Yavaşlatma",
          "Oyunu Kayıt Etme (Save)",
          "Diyalog Sistemi"
        ],
        "Karakter Oluşturma": [
          "karekter yapımı (Fuse) -1",
          "karakter yapımı (Fuse) -2"
        ],
        "Matine Ve Sequence": [
          "Matine",
          "Sequence"
        ]
      },
      "requirements": [
        "Bir Bilgisayar ve Unreal Engine"
      ],
      "description": "Bu kursta Bir oyun motorunun ne olduğu, ne işe yaradığını ve bununla  neler yapabiliceğinizi,unreal engine 4 motorunu giriş seviyesinde  öğreniceğinizi ve oyununuzu exe halinde çıkartıp oynamaya hazır hale  getiriceğinizi  ve bunların yanında bir oyun yapılırken neler  yapıldığını, blueprint(görsel programlama) ve c++ ,menü  oluşturma,karakter  oluşturma,zaman,ses,modeller,ağaçlar,otlar,dağlar,su,efektler,ışıklarndırma,BSP,Material,Texture,sinematik,animasyon  gibi unrealda bir oyun tasarlamanız için gereken her şeyi  öğreniceksiniz ve bu kurs bittiğinde kendi oyununuzu  tasarlayabiliceksiniz.hem bilgisayar için hemde mobil için oyunyapmayı öğreniceksiniz",
      "target_audience": [
        "Oyun Geliştirmek İsteyenler"
      ]
    },
    {
      "title": "【한글자막】 C#과 Unity로 3D 게임 개발하기 (Unity 6로 업데이트 완료!)",
      "url": "https://www.udemy.com/course/best-3d-c-unity/",
      "bio": "유니티 6로 업데이트가 완료되었습니다! C# 기초부터 Unity 엔진 활용까지, 실제 게임 개발 프로젝트를 진행해보며 학습하는 3D 게임 개발의 모든 것",
      "objectives": [
        "실제 게임 개발 프로젝트를 수행하는 과정을 통해 배워보는 3D 게임 개발의 모든 것",
        "게임 개발 프로젝트를 통해 학습해보는 C# 기초 문법 및 디자인 패턴",
        "3D 게임을 만들기 위한 Unity 엔진 활용법. Unity에서 2.5D 및 3D 게임을 만들어 보세요.",
        "객체 지향 프로그래밍(OOP)의 동작 원리를 이해하고 실무에서 어떻게 활용되는지 배우세요.",
        "3D 게임 디자인에 대한 높은 수준의 이해",
        "닷넷(.Net) 등 더 많은 언어로 지식을 확장하는 법",
        "문제를 잘 정의하고 해결하기 위한 긍정적 태도와 실제적인 기술들",
        "모든 강의영상마다 실습을 통해 실제 기술을 익히세요.",
        "좋은 코딩 및 디자인 패턴을 배우세요.",
        "소규모 팀에서 필수적인 협업 도구인 소스 컨트롤 사용법을 익히세요.",
        "비디오 게임 디자인에 대한 전반적인 지식을 습득하세요.",
        "매우 다재다능한 3D 툴인 Unity 2020을 사용해 경험을 쌓으세요."
      ],
      "course_content": {
        "소개 및 설치 - 새로운 유니티 6 콘텐츠": [
          "강의에 오신 것을 환영합니다!",
          "Unity 6 최신 강의 안내",
          "유니티와 VS Code(비주얼 스튜디오 코드) 다운로드",
          "Unity 소개",
          "VS Code 설치하기",
          "커뮤니티 & 지원"
        ],
        "장애물 피하기 - 새로운 유니티 6 콘텐츠": [
          "섹션 소개 - 장애물 피하기",
          "Start() 함수와 Update() 함수",
          "변수 소개",
          "직렬화 SerializeField 사용하기",
          "C# 포맷팅",
          "Input.GetAxis() 사용하기",
          "Time.deltaTime",
          "Cinemachine 소개",
          "기본 충돌",
          "메소드 이해하기",
          "메소드 연습하기",
          "OnCollisionEnter() 사용하기",
          "GetComponent() 사용하기",
          "스코어 증가",
          "Time.time 사용하기",
          "If 구문",
          "참조 캐싱하기",
          "태그 사용하기",
          "객체 회전시키기",
          "플레이어에서 비행",
          "객체 파괴하기",
          "발사체 트리거하기",
          "프리팹 소개",
          "유니티 실행 순서",
          "레벨 레이아웃",
          "레벨에 위험 요소 추가",
          "섹션 마무리 - 장애물 피하기"
        ],
        "로켓 부스트 - 새로운 유니티 6 콘텐츠": [
          "섹션 소개 - 로켓 부스트",
          "에셋 임포트하기",
          "네임스페이스 및 클래스",
          "인풋 액션 사용하기",
          "AddRelativeForce() 사용하기",
          "로테이션 인풋",
          "로켓 회전하기",
          "시네머신 팔로우 카메라",
          "Rigidbody 튜닝",
          "Unity Audio 소개",
          "AudioSource SFX 재생",
          "Switch 구문",
          "SceneManager를 사용한 리스폰",
          "다음 장면 로드하기",
          "Invoke() 사용하기",
          "코드 레이아웃",
          "다중 오디오 클립",
          "상태에 대한 부울 변수",
          "파티클 소개",
          "Trigger Booster 파티클",
          "메소드 리팩터링",
          "디버그 키에 응답",
          "에셋 및 콜라이더",
          "레벨 레이아웃 만들기",
          "신속한 게임 튜닝",
          "레벨에 맞게 설정하기",
          "포스트 프로세싱 소개",
          "Unity에서 조명을 추가하는 방법",
          "Prefabbing에 대한 간단한 안내",
          "진동 객체 스크립트",
          "애플리케이션 스크립트 종료",
          "디자인 아이디어",
          "게임을 빌드하고 공유하는 방법",
          "섹션 마무리 - 로켓 부스트"
        ],
        "Galaxy Strike - 새로운 유니티 6 콘텐츠": [
          "섹션 소개 - Galaxy Strike",
          "지형(Terrain) 툴 사용하기",
          "부가적인 지형 툴 기능",
          "지형 텍스쳐링하기",
          "타임라인 마스터하기",
          "애니메이션 커브",
          "타임라인을 사용하여 적에게 애니메이션 적용",
          "인풋 액션 맵",
          "플레이어 함선 이동",
          "Mathf.Clamp() 함선 이동",
          "함선 굴리기",
          "함선 회전 Lerping",
          "피치 회전",
          "파티클 시스템 함선 레이저",
          "레이저 파이어 인풋",
          "C# 배열 및 Foreach 루프",
          "십자선 직사각형 변환",
          "ScreenToWorldPoint 타겟",
          "벡터 알고리즘",
          "충돌 및 트리거",
          "파티클 충돌",
          "런타임에 인스턴스화",
          "중첩된 프리팹 및 프리팹 변형",
          "적 함선 변형",
          "튜닝 및 조정",
          "적 명중 포인트",
          "퍼블릭 메소드 C#",
          "Scoreboard UI",
          "컨트롤 트랙을 사용한 적의 파도",
          "타임라인 오디오",
          "시그널을 사용하여 대화 표시",
          "인물용 카메라 렌더 텍스처",
          "지형에 나무 그리기",
          "렌더링, 조명 및 그림자",
          "Skybox",
          "포스트 프로세싱",
          "레이어 및 다중 볼륨 프로필",
          "Coroutines을 사용한 레벨 다시 로드",
          "뮤직 Singleton",
          "수직 슬라이스",
          "섹션 마무리 - Galaxy Strike"
        ],
        "Royal Run - 새로운 유니티 6 콘텐츠": [
          "섹션 소개 - Royal Run",
          "프로젝트 설정 및 에셋 가져오기",
          "For 루프를 사용한 레벨 생성",
          "청크 움직임",
          "C# 리스트",
          "Player 움직임",
          "클램프를 사용하여 플레이어 제한",
          "While 루프를 사용한 장애물",
          "Physics 머티리얼",
          "장애물 프리팹 변형",
          "펜스 청크 위험",
          "차선 감지",
          "차선 픽업",
          "Physics 충돌 설정",
          "장애물 파괴하기",
          "플레이어 타격 애니메이션",
          "코드를 통한 애니메이션 트리거",
          "상속(Inheritance)",
          "Physics 변경하기",
          "시네머신 카메라 컨트롤러",
          "파티클 시스템 속도 향상",
          "인스펙터 툴팁 및 헤더",
          "스코어 매니저",
          "종속성 주입",
          "Time Lose 컨디션",
          "프로퍼티",
          "나머지 연산자 (Modulus Operator)",
          "체크포인트 증가 시간",
          "뷰티파이 체크포인트 프리팹",
          "조명 및 포스트 프로세싱 - 1부",
          "조명 및 포스트 프로세싱 - 2부",
          "Cinemachine 컴포저",
          "안개 파티클 시스템",
          "Cinemachine 스크린 셰이크",
          "Rock Collision FX",
          "음악 및 카메라 노이즈",
          "튜닝, 조정 및 밸런스",
          "섹션 마무리 - Royal Run"
        ],
        "Sharp Shooter - 새로운 유니티 6 콘텐츠": [
          "섹션 소개 - Sharp Shooter",
          "1인칭 스타터 에셋",
          "내비게이션 메시 에이전트",
          "에이전트 점프 및 하강 고도",
          "총기 장착",
          "레이캐스팅",
          "Shoot 인풋",
          "적의 체력",
          "머즐 플래쉬(Muzzle Flash)",
          "무기 애니메이션",
          "Hit VFX",
          "로봇 애니메이터 및 애니메이션",
          "Probuilder 소개",
          "ProBuilder 레벨 블록아웃",
          "ProBuilder 팁&기능",
          "새로운 장면 준비",
          "스크립트 가능 객체",
          "사격 쿨다운",
          "머신 건",
          "무기 픽업",
          "무기 전환",
          "스나이퍼 라이플",
          "무기 줌 인&아웃",
          "상속을 사용한 기본 픽업",
          "레이캐스트 과부하",
          "탄약(Ammo)",
          "탄약 픽업",
          "무기 Viewport",
          "총기 반동 스크린쉐이크",
          "로봇 폭발 VFX",
          "OnDrawGizmos() 폭발",
          "Physics.OverlapSphere()",
          "데스 카메라 전환",
          "플레이어 실드 UI",
          "적 스폰 게이트",
          "Turret",
          "발사체",
          "TMP 폰트 에셋 생성기",
          "3항 연산자",
          "이벤트 시스템",
          "승리 조건",
          "다듬기",
          "섹션 마무리 - Sharp Shooter"
        ],
        "구 버전 강의는 아래에서 확인하세요": [
          "Unity 버전 2017-2019 사용자를 위한 안내",
          "이 아래로는 2020 년 구버전 강의 콘텐츠를 남겨두었습니다"
        ],
        "소개와 설치 (2020.1 콘텐츠)": [
          "환영 인사",
          "유니티와 VS Code(비주얼 스튜디오 코드) 다운로드",
          "IntelliSense 문제가 있나요?",
          "유니티 소개",
          "프리팹(Prefab) 소개",
          "여러분의 첫번째 스크립트"
        ],
        "장애물 코스 (2020.1 콘텐츠)": [
          "섹션 도입 – 장애물 코스",
          "게임 디자인 – 장애물 코스",
          "Start() 함수와 Update() 함수",
          "변수 소개",
          "직렬화 SerializeField 사용하기",
          "C# 포맷팅과 Input.GetAxis() 메소드",
          "Time.deltaTime 구현",
          "Cinemachine을 통해 카메라 따라가기",
          "기본 충돌(Collision)",
          "메소드 소개",
          "메소드 실습하기",
          "OnCollisionEnter() 함수 사용하기",
          "GetComponent<>() 함수 사용하기",
          "스코어 증가",
          "Time.time 사용하기",
          "If 구문",
          "참조 캐싱하기",
          "태그 사용하기",
          "객체 회전시키기",
          "프리팹 준비하기",
          "장애물 코스 만들기",
          "장애물 코스 끝내기"
        ],
        "부스트 프로젝트 (2020.1 콘텐츠)": [
          "섹션 도입 – 부스트 프로젝트",
          "게임 디자인 – 부스트 프로젝트",
          "양파 디자인",
          "유니티의 유닛들",
          "클래스 소개",
          "입력 바인딩의 기본",
          "AddRelativeForce() 함수 사용하기",
          "추력 변수",
          "로켓을 위한Transform.Rotate() 메소드",
          "리지드바디 Rigidbody의 제약 조건",
          "소스 컨트롤과 파일 저장소",
          "유니티 오디오 소개",
          "AudioSource SFX 재생",
          "Switch 구문",
          "SceneManager를 사용한 리스폰",
          "다음 단계 로드",
          "Invoke 함수의 사용하기",
          "다중 오디오 클립",
          "부울(Bool) 변수",
          "멋지게 보이는 로켓 만들기",
          "파티클을 트리거하는 방법",
          "로켓 부스터를 위한 파티클",
          "Extract 메소드로 리팩터링하기",
          "치트키와 디버그 단축키 추가하기",
          "큐브로 환경 만들기",
          "유니티에서 조명 추가하는 방법",
          "코드로 장애물 옮기기",
          "진동을 위한 Mathf.Sin() 함수",
          "NaN에러 방지하기",
          "레벨 모멘트 디자인하기",
          "응용 프로그램 중단하기",
          "게임 개발하고 퍼블리시하는 방법",
          "마무리 – 부스트 프로젝트"
        ]
      },
      "requirements": [
        "유니티 2017 또는 이후 버전을 구동할 수 있는 PC",
        "Q&A 및 커뮤니티와 소통을 위한 인터넷 액세스"
      ],
      "description": "Unity 6으로 업데이트된 베스트셀링 게임 개발 강의!\n이 강의는 Unity 6으로 업데이트 되었지만, 이전 버전의 Unity와도 호환됩니다.\n\n\n실제 3D 게임 속 주요 기능을 직접 구현해보면서 C#과 Unity의 실무적 활용법 완벽 마스터\n개발 학습 경험이 전혀 없는 사람들을 위한 기초 문법 및 좋은 코딩 습관 가이드\n게임 개발의 핵심 기능 요소들을 학습하여 초심자도 나만의 게임을 제작해볼 수 있도록 도와주는 커리큘럼\n\n\n\n\n<Unity로 배우는 게임 개발>\n이 강의는 가장 인기 있는 온라인 강의 중 하나인 Complete Unity Developer의 오랫동안 기다려온 후속편입니다! 완전히 처음부터 다시 제작되었으며, 새로운 프로젝트와 최신 교육 기법을 적용하였습니다. 저희는 이미 200만 명 이상의 학생들에게 프로그래밍과 게임 개발을 가르쳤으며, 그중 많은 학생들이 상업용 게임을 출시하였습니다.\nUnity는 비디오 게임, 건축, 의료 영상 제작 등에 사용되는 놀라운 3D 패키지입니다. 하지만 규모가 크고 복잡하여, 특히 프로그래밍과 게임 개발을 처음 접하는 초보자들에게는 어려울 수 있습니다. 저희는 흥미로운 게임을 단계별로 만들어 가며, 프로그래밍을 쉽고 재미있게 배울 수 있도록 도와드립니다.\n저희의 Facebook 그룹(약 2만 명)과 자체 Teaching Assistant 커뮤니티, 학생용 Discord 채널 등 다양한 커뮤니티에 참여하세요.\n이 글을 읽고 있다면, 이미 학습을 시작하기 위한 모든 준비(인터넷 액세스)가 갖춰져 있을 가능성이 높습니다. Unity는 무료로 다운로드할 수 있습니다. 또한 인터넷 액세스만 있다면, 활발한 커뮤니티 활동도 가능합니다. 프로그래밍이나 3D 패키지에 대한 경험이 전혀 없어도 걱정하지 마세요. 저희가 기초 개념부터 차근차근 안내하며, 점진적으로 배운 내용을 쌓아가면서 Unity에 대한 탄탄한 실무 지식을 갖출 수 있도록 도와드립니다.\n여러분은 총 5개의 재미있는 게임을 만들며, 게임 개발에 필요한 핵심 기술을 익히게 됩니다. 변수와 충돌 감지 같은 기본 개념부터, 절차적 생성(Procedural Generation)과 AI 같은 고급 개념까지 마스터하게 될 것입니다. 장애물을 피하고 외계인을 무찌르며 배워보세요!\n\n\n<프로젝트 소개>\n1. Obstacle Dodge\n플레이어 입력, 충돌 감지, 변수, 조건문(if statements)을 배우며 Unity를 처음 접하는 데 적합한 프로젝트입니다.\n2. Rocket Boost\n물리 기반 게임을 만들며 포스(Forces), 네임 스페이스(Namespaces), 클래스(Classes)를 실험해 봅니다. 로켓을 날리면서 여러분의 실력도 함께 성장시켜 보세요!\n3. Galaxy Strike\n클래식한 레일 슈팅 게임을 제작합니다. Unity의 지형(Terrain)과 타임라인(Timeline) 도구를 마스터하며, 배열(Arrays), for 반복문, 코루틴(Coroutines)을 학습할 수 있습니다. 아케이드 스타일의 재미를 현대적인 방식으로 즐겨보세요!\n4. Royal Run\n절차적 생성(Procedural Generation)을 활용한 끝없는 러너 게임을 제작합니다. 리스트(Lists), 픽업 아이템(Pickups), 애니메이션, 후처리 효과(Post-processing) 등을 다룹니다.\n5. Sharp Shooter\n1인칭 슈팅(FPS) 게임을 제작합니다. 네비게이션 메시(Nav Mesh Agents), 적 AI, 무기 전환, 레이캐스팅(Raycasting), ProBuilder를 활용한 레벨 프로토타이핑을 다룹니다. FPS를 만들고 싶다면, 이 프로젝트를 놓치지 마세요!\n\n\n\n\n저희의 수강생들이 직접 작성한 놀라운 강의 후기를 확인해 보세요. 우리는 수천 명의 사람들에게 가치 있는 새로운 기술을 가르치며, 그들의 삶을 변화시키고 있다는 점을 자랑스럽게 생각합니다. 여러분도 그중 한 명이 될 수 있습니다.\n이 강의는 프로젝트 기반 학습 방식으로 진행됩니다. 단순히 프로그래밍 개념을 배우는 것이 아니라, 실제 인디 게임을 만들며 즉시 적용할 수 있습니다. 모든 프로젝트 파일과 추가 참고 자료 및 리소스가 제공되므로, 막힐 일이 없습니다. \"토킹 헤드\" 스타일의 강의, 강력한 다이어그램, 고품질 스크린캐스트 등 다양한 학습 자료도 포함되어 있습니다.\n\n\n각 데모 게임을 만들 때, 다음과 같은 프로세스를 따르게 됩니다:\n전체 게임을 직접 만들어보는 도전 과제\n단계별 제작 과정 안내\n배운 내용을 반복적으로 적용하고 응용하기\n\n\n2D에 집중하고 싶으신가요? 저희의 【한글자막】 C# Unity 게임 개발자 2D 강의를 확인해 보세요.\n좀 더 고급 과정을 원하시나요? 저희의 【한글자막】 RPG 코어 컴뱃 크리에이터: 중급 Unity C# 코딩 마스터하기! 강의를 확인해보세요.\n자격증 취득, 취업, 환경 아트를 배우고 싶으시다구요? 저희의 품질 보증된 녹색 나뭇잎 로고만 찾으세요!\n한번 결제로 강의를 평생 이용할 수 있습니다. 강사는 자격을 갖춘 숙련된 코더이자 열성적인 게이머이므로 복잡한 개념을 명확하게 설명할 수 있을 뿐만 아니라 그 과정에서 재미도 선사합니다.\n\n\n<이 강의에서 다루지 않는 내용>\n다음과 같은 내용은 이 강의에서 상세히 다루지 않습니다:\n아트 에셋 제작 (에셋이 제공되지만, 제작 과정은 강의에 포함되지 않음)\n고급 성능 최적화\n에디터 플러그인 개발 또는 수정\n물리적 엔진 수정\n\n\n<게임 개발을 배우고 싶은 누구나 환영합니다!>\nUnity 3D는 다양한 플랫폼에서 프로덕션급 게임을 제작할 수 있는 강력한 엔진입니다.\n단일 소스에서 Windows, MacOS, iOS, Android, 웹용으로 제작할 수 있습니다!\n지금 바로 강의를 시작하세요. 절대 실망하지 않을 것입니다!\n\n\n[130만 수강생의 게임개발 학습을 도운 Ben & Rick 강사의 한 마디]\n안녕하세요! 저희는 GameDev tv Team의 Ben, Rick 입니다.\n저희의 [C#과 Unity로 3D 게임 개발하기] 강의에 오신 것을 환영합니다!\n이 강의는 인터넷에서 가장 인기있는 3D 게임 개발 코스입니다. 이미 70만 명 이상의 학생들에게 프로그래밍과 게임 개발, 많은 상용 게임을 가르쳐오며 많은 노하우를 쌓아왔기 때문에, 여러분들은 그런 점에서 큰 혜택을 얻게 될 것입니다.\n강사들은 자격을 갖춘 경험 많은 프로그래머이고 열렬한 게이머들이라서 학습 과정에서 여러분을 즐겁게 해줄 뿐만 아니라 복잡한 개념을 명확하게 설명해 줄 수 있습니다. 또, 단 한번의 구매로 평생 이용도 가능합니다.\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n게임 제작법을배우고 싶은 여러분! 지금 바로 시작해 보세요! 실망하지 않을 겁니다!\n그럼, 강의에서 만나요,\n- Ben & Rick 드림",
      "target_audience": [
        "게임을 직접 만들면서 재미있게 코딩을 배우고 싶은 사람",
        "코드를 직접 짜보는 과정을 통해 게임 만드는 법을 배우고 싶은 사람"
      ]
    },
    {
      "title": "Python ile Bilgisayarlı Görü Oyun Geliştirme: Pygame, OpenCV",
      "url": "https://www.udemy.com/course/bilgisayarli-goru-oyun-gelistirme-pygame-opencv/",
      "bio": "Python ile Oyun Geliştirmeyi Öğrenip, Bilgisayarlı Görü Oyunlarınızı Geliştirin!",
      "objectives": [
        "Python ile Oyun Geliştirme,",
        "Makine Öğrenmesi ile El Modeli Oluşturma,",
        "Bilgisayarlı Görü Oyunu Yapımı ve",
        "Görüntü İşleme (OpenCV)."
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Temel Pygame Dersleri": [
          "Kurulum ve İlk Pencere",
          "Geometrik Cisimlerin Oluşturulması -1",
          "Geometrik Cisimlerin Oluşturulması -2",
          "Arka Plan Renklendirme",
          "Resim Oluşturma",
          "Yazı Yazdırma ve Fontlara Ulaşma",
          "Şarkı ve Ses Efekti Ekleme",
          "Klavye İşlemleri",
          "Mouse İşlemleri",
          "Klavye Sürekliliği ve FPS Ayarlama",
          "Pencere Kısıtlaması",
          "Çarpışma (İlk Temas)",
          "Arka Plan Ekleme",
          "Harici Font Ekleme"
        ],
        "1. Oyun : Doyumsuz Canavar": [
          "Oyunumuzu İnceleyelim",
          "Oyunumuzu Kodlayalım -1 (Tanımlamalar)",
          "Oyunumuzu Kodlayalım -2 (Tanımlamalar)",
          "Oyunumuzu Kodlayalım -3 (Oyun Hareketleri)",
          "Oyunumuzu Kodlayalım -4 (Oyun Hareketleri)"
        ],
        "Temel Görüntü İşleme": [
          "Görüntü Okuma ve Çıktı",
          "Renk Formatları",
          "Ölçeklendirme",
          "Genişlik, Yükseklik ve Kanal Sayısı",
          "Temel Çizim İşlemleri -1",
          "Temel Çizim İşlemleri -2",
          "Temel Çizim İşlemleri -3",
          "Video Açma",
          "Webcam Açma",
          "Webcam Özelliklerini Değiştirme"
        ],
        "Makine Öğrenmesi": [
          "El Modeli",
          "Özel Hatlara Ulaşma"
        ],
        "Orta Seviye Pygame": [
          "Pencere Üzerinde Webcam Açma"
        ],
        "Bilgisayarlı Görü Oyunu": [
          "Yapacağımız Oyunu İnceleyelim",
          "Bilgisayarlı Görü Oyunu (Tanımlamalar) -1",
          "Bilgisayarlı Görü Oyunu (Tanımlamalar) -2",
          "Bilgisayarlı Görü Oyunu (Oyun Döngüsünün Oluşturulması) -3",
          "Bilgisayarlı Görü Oyunu (Oyun Döngüsünün Oluşturulması) -4",
          "Bilgisayarlı Görü Oyunu (Oyun Döngüsünün Oluşturulması) -5",
          "Oyunumuzu Test Edelim"
        ],
        "OOP (Nesne Yönelimli Programlama)": [
          "Nesne Yönelimli Programlamaya Giriş",
          "Kalıtım (Inheritance)",
          "Sınıf ve Nesne",
          "Gruplama (Sprite Group)",
          "Gruplama Temas (Tek Karakterli)",
          "Gruplama Temas (Çok Karakterli)",
          "Ekstra: Resetleme Mekaniği"
        ]
      },
      "requirements": [
        "Herhangi Bir Bilgisayar,",
        "Öğrenme İsteği ve",
        "Azim."
      ],
      "description": "Merhabalar,\nPython ile Bilgisayarlı Görü Oyun Geliştirme: Pygame, OpenCV ile birlikte Pygame modülünü kullanarak kendi bilgisayarlı görü oyunumuzu geliştireceğiz. Gerekli altyapıyı oluşturabilmemiz için öncelikle Pygame modülünü öğrenip, bu modül ile birlikte oyun penceremizin oluşturulması, oyunlarımızda klavye ve mouse hareketlerimizin kontrolü, arka plan görüntülerimizi ekleme, dahili ve harici fontlarımızı ekleme, oyun karakterlerimizin kontrolü ve FPS değerinin ayarlanması ve birçok yapımız hakkında da bilgi sahibi olacağız. Bununla sınırlı kalmayıp, bilgisayarlı görü oyunumuzu geliştirebilmemiz için Makine Öğrenmesi ve Görüntü İşleme hakkında bilgi sahibi olacağız. Dahası, el hareketlerimizle birlikte kendi karakterlerimizi kontrol edebileceğiz.\nPython ile Bilgisayarlı Görü Oyun Geliştirme: Pygame, OpenCV kursum:\nPython ile oyun geliştirmek isteyen,\nBilgisayarlı görü oyunu geliştirmek isteyen,\nMakine öğrenmi ile birlikte el modeli geliştirmek isteyen,\nGörüntü işleme hakkında bilgi sahibi olmak isteyen,\nEl modeli ile birlikte karakter kontrolünü sağlamak isteyen,\nVeya, yukarıdaki 5 başlık hakkında bilgi sahibi olmak isteyen herkes için uygundur.\n5 başlığı bir arada öğrenebileceğiniz kurs içeriği öğrenciyi sıkmadan, kapsamlı bir şekilde anlatıldı. Ek olarak, eğitim süreci boyunca takıldığınız yerleri sorabilir ve kısa sürede yanıt alabilirsiniz. Sürekli güncellenen içerikler ile beraber yeni teknolojileri öğrenip, kodlayabileceksiniz.\nGeleceğin teknolojileri üzerine kendimizi geliştirme ve  kod yazma yolunda şimdiden aramıza hoş geldin.\n\"Çalışmadaki devamlılık, her güçlüğü yener.\"  -Anthony Trollope\nKodlayarak Öğren!\nSaygılarımla,\nYılmaz ALACA",
      "target_audience": [
        "Oyun Geliştirmek İsteyen,",
        "Bilgisayarlı Görü Hakkında Oyun Yapmak İsteyen ve",
        "Python ile Oyun Geliştirmek İsteyenler için Uygundur."
      ]
    },
    {
      "title": "Mini Games with ChatGPT [TEASER]",
      "url": "https://www.udemy.com/course/mini-games-with-chatgpt-teaser/",
      "bio": "Teach mini lessons to children through animated gameplay",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Quick Caveat!",
          "Introduction",
          "Instructor Introduction",
          "Play the games online!"
        ],
        "LEVEL 1": [
          "Color Hunt Adventure - ChatGPT",
          "Prompt for Color Hunt Adventure",
          "Star Catcher - Gemini",
          "Prompt for Star Catcher Game",
          "Balloon Pop - Claude",
          "Prompt for Balloon Pop"
        ],
        "MORE GAMES": [
          "Jigsaw Puzzle",
          "Battleship"
        ],
        "Conclusion": [
          "Game ON!"
        ]
      },
      "requirements": [
        "Beginner's knowledge of how to work with ChatGPT"
      ],
      "description": "“Let’s Make Mini Games with ChatGPT!”\nA Fun Way to Learn Coding, Creativity, and Game Design\nCourse Description:\nDo you love playing games? What if you could make your own? In this exciting and beginner-friendly course, you’ll learn how to build mini-games right in your web browser—no experience needed! With the help of ChatGPT, a super-smart AI assistant, you’ll learn how to write simple code, create fun challenges, and design games that you and your friends can play.\nYou’ll use HTML and JavaScript (don’t worry, we’ll explain it step-by-step) to create games like quizzes, memory cards, story adventures, puzzles, and more. ChatGPT will help you come up with cool ideas, fix your code, and even write game dialogue!\nThis course is perfect for:\nKids aged 10+ who love games and want to learn how they’re made.\nTeachers who want to add creativity to the classroom.\nParents who want fun, educational screen time.\nWhat you’ll learn:\nHow to build games using simple code.\nHow to think like a game designer.\nHow to use ChatGPT to get ideas and solve problems.\nHow to make your games look cool with colors and animations.\nBy the end of the course, you’ll have a collection of games you built yourself—and the skills to keep creating more!\nGet ready to code, create, and play. Your game-making adventure starts here!\nWhat you’ll learn\nMaster the art of crafting clear, dynamic prompts for in-game decisions and feedback.\nLearn how to define game goals, rules, and user feedback loops.\nUse ChatGPT to brainstorm variations or expand mechanics (e.g. power-ups, penalties).\nCombine HTML/CSS/JavaScript with ChatGPT-generated content (e.g. riddles, storylines, challenges).\nAre there any course requirements or prerequisites?\nBeginner's knowledge of how to work with ChatGPT",
      "target_audience": [
        "For teachers, to make lessons more engaging through educational mini-games.",
        "For indie developers, to prototype and test game ideas quickly.",
        "For homeschool parents, to create personalized educational activities for kids."
      ]
    },
    {
      "title": "Unity для профессионалов | От Junior до Middle",
      "url": "https://www.udemy.com/course/unity-for-professionals/",
      "bio": "Передовые техники программирования от топового программиста",
      "objectives": [
        "Продвинутые техники программирования в Unity",
        "Scriptable Object",
        "TDD",
        "Zenject"
      ],
      "course_content": {
        "Достижение трёх столпов ООП": [
          "Инкапсуляция",
          "OnValidate на страже инкапсуляции",
          "Наследование",
          "Полиморфизм",
          "Полиморфизм. Разрешение зависимостей"
        ],
        "Scriptable Object": [
          "ScriptableObject - Создание и использование",
          "Полиморфные ScriptableObject'ы",
          "Персистентность (сохранение и загрузка) состояний"
        ],
        "S.O.L.I.D": [
          "Что такое S.O.L.I.D?",
          "SRP",
          "OCP",
          "LSP",
          "ISP",
          "DIP"
        ],
        "DI с Zenject": [
          "Что такое DI",
          "Контейнер Zenject",
          "Контексты",
          "MonoBehaviour инсталлеры",
          "Определение зависимостей компонента",
          "Фабрики и динамическое внедрение"
        ],
        "Тестирование и TDD": [
          "Требования и работа при их постоянном изменение",
          "Unit тестирование",
          "Моки и Стабы",
          "Как писать код готовый к тестам",
          "Подготовка проекта Unity для написания тестов",
          "Пример теста в Unity",
          "Тестирование MonoBehaviour",
          "Использование библиотеки Moq"
        ]
      },
      "requirements": [
        "Опыт создания простых игр",
        "Понимание принципов ООП",
        "Уверенное владение C#"
      ],
      "description": "Хотите стать профессиональным программистом в Unity? Понимать большие проекты и уметь писать высококачественный код за который очень много платят (и обычно в долларах)? Тогда этот курс именно то, что вам нужно! В нём вы узнаете о том как проектировать и строить большие проекты. Он полон информации об ООП, разработке через тестирование, внедрение зависимостей, принципах S.O.L.I.D и многому другому, что используют топовые программисты каждый день.\nВишенкой на торте является раздел посвящённый оптимизации и профилированию приложений в Unity. С помощью него вы научитесь оптимизировать код и делать игры которые летают у всех игроков.\nПогрузитесь в профессиональное программирование в Unity!",
      "target_audience": [
        "Профессиональные разработчики на Unity",
        "Продвинутые студенты",
        "Технические директора"
      ]
    },
    {
      "title": "Videojuegos y apps con Unity. Con ejemplos y ejercicios.",
      "url": "https://www.udemy.com/course/aprende-a-crear-videojuegos-y-apps-moviles-con-unity3d-c/",
      "bio": "Impartido por un profesor de universidad que se dedica a crear videojuegos. No importa el nivel que tengas.",
      "objectives": [
        "Al finalizar, podrás (y de hecho lo haremos) publicar tus aplicaciones y videojuegos en las diferentes tiendas online (Google Play, Apple Store,...).",
        "Al ser un curso largo, veremos con profundidad Unity3D. Empezaremos aprendiendo a programar pero acabaremos viendo técnicas muy avanzadas de diseño y programación que se utilizan en juegos más complejos ya existentes."
      ],
      "course_content": {
        "Presentación del curso, material necesario, algunas cosas sobre el profesor,...": [
          "Sobre el curso: material necesario, a quién va dirigido, qué aprenderemos,..."
        ],
        "Descargas, tipos de licencias, instalación y manejo de Unity3D.": [
          "Licencias y puesta en marcha",
          "Mover, rotar y escalar objetos en Unity3D.",
          "Ejemplo de un juego hecho por mí en Unity3D que estuvo en Steam: Mistaken.",
          "Ejemplo de un juego en Unity3D, parte 2 + Documentación de Unity3D."
        ],
        "Cámaras, luces, materiales y primeras lecciones de programación en C#.": [
          "Montando una escena en Unity3D con luces, cámaras y un suelo.",
          "Tipos de luces y sombras y cuándo usar cada una.",
          "Uso de variables en C#: Diferentes tipos y cuándo usar cada una."
        ]
      },
      "requirements": [
        "No es necesario tener conocimientos de programación ya que se aprenderá a programar con C# en los primeros temas.",
        "Tampoco es necesario tener nociones de diseño 3D, ya que todo el material será suministrado por el profesor y se enseñará a importarlo y utilizarlo en Unity3D.",
        "Para realizar el curso únicamente es necesario descargar el software gratuito Unity3D (que explicaremos como descargarlo e instalarlo en el primer tema)."
      ],
      "description": "Después de varios años en cursos presenciales y online, he decidido dar el salto a Udemy con este curso. Con más de 10 años de experiencia en el sector trabajando para Disney, Coca-Cola,... y publicando varios juegos he juntado en este curso lo necesario para poder empezar desde 0 y basándome en aplicaciones y juegos que he ido creando durante estos años. Actualmente también trabajo impartiendo cursos en la UNIR y centros tecnológicos (en España).\nA diferencia de otros cursos en los que los vídeos son muy cortos y apenas se ve gran cosa; en este curso los vídeos son de larga duración (muchos son vídeos de 1 hora recortados en vídeos de 20 minutos) y en los que siempre estoy hablando y comentando lo que voy haciendo para que lo puedas seguir. Mi objetivo es que aprendas, te guste el tema y a ser posible me envíes ejercicios y dudas para que los resuelva.\nEl objetivo de este curso es aprender a usar Unity3D y que al terminar el curso el alumno pueda programar, montar, y compilar sus propios juegos con una calidad profesional para su salida al mercado.\nNo pierdas la oportunidad de formarte en lo que seguramente será uno de los trabajos con más salida del futuro: la programación de videojuegos y apps móviles. Las plataformas móviles, además de comunicarnos a todos y estar en todas partes, han permitido que proliferen juegos desarrollados por pequeños grupos de desarrolladores, que gracias a la gran cantidad de usuarios pueden tener resuelto su futuro laboral con ideas tan sencillas como anuncios en los juegos para móviles o la compra de extensiones.",
      "target_audience": [
        "Este curso va destinado a todo aquel que quiera aprender a crear sus propias apps y videojuegos para su posterior publicación y monetización.",
        "También es interesante para cualquier diseñador que quiera complementar su formación con nociones de programación."
      ]
    },
    {
      "title": "Tworzenie gier w Unity C#",
      "url": "https://www.udemy.com/course/unity-gamedev-academy/",
      "bio": "Zostań Unity Game Developerem od podstaw",
      "objectives": [
        "Programowanie Obiektowe C#",
        "Obsługa silnika Unity",
        "Animacje / Efekty",
        "Projekty na PC i Android"
      ],
      "course_content": {
        "Wprowadzenie do Unity": [
          "O kursie",
          "Ebook",
          "Instalacja Unity",
          "Tworzenie projektu 2D",
          "Połączenie unity z vs",
          "Layout",
          "Sceny w Unity",
          "Okno gry",
          "Assets",
          "Parentowanie",
          "Paczki",
          "Sprite - Order in layer",
          "Prefaby",
          "Package manager",
          "Asset store",
          "Sprite Editor",
          "Sprite Full Rect"
        ],
        "Programowanie C# 1": [
          "Skrypty",
          "Nazewnictwo skryptów",
          "Namespace / Przestrzenie nazw",
          "Komentarze",
          "Klasa",
          "Metody Start() i Update()",
          "Themes w Visual Studio",
          "Typy danych",
          "Debug.Log()",
          "Zmienne",
          "Zmienne lokalne",
          "this",
          "var",
          "Inkrementacja",
          "Funkcje",
          "Funkcje z parametrem",
          "Funkcje z return",
          "Zadanie: Potęgowanie dowolnych liczb",
          "Przeciążanie funkcji",
          "Zadanie: Modulo, reszta z dzielenia",
          "Modyfikatory dostępu",
          "Zadanie: Mathf.Repeat / PingPong",
          "Instrukcja warunkowa if",
          "Operatory logiczne AND, OR, NOT",
          "GetComponent",
          "null",
          "Zadanie: Podmiana sprite’a po uruchomieniu programu",
          "Losowa liczba",
          "Zadanie: Losowa liczba od 1 do 6",
          "Zmiana typów (casting)",
          "Zadanie: Castowanie z float na int",
          "Kolejność eventów w loopie",
          "Vector",
          "Time.deltaTime",
          "Wydajność przy mnożeniu",
          "Konkatenacja",
          "Tablica",
          "Lista",
          "Pętla foreach",
          "Pętla for",
          "Zadanie: Liczby parzyste od 10 do 20",
          "Pętla while",
          "Zadanie: Wyświetl liczby od 10 do 0 w jednej linii",
          "Zadanie: Dodawanie elementów do listy",
          "Właściwości",
          "Zadanie: Wyświetl sumę losowych liczb",
          "Sortowanie tablicy i listy",
          "Zadanie: Wyświetl 10 posortowanych losowych liczb",
          "Coroutine",
          "Zatrzymywanie i wznawianie Coroutine",
          "Zadanie: Rzut kostką",
          "InvokeRepeating()"
        ],
        "UI - User Interface": [
          "Canvas",
          "Panel",
          "Text",
          "Zadanie: Wywietlanie czasu w UI",
          "Button",
          "Zadanie: Losowa liczba po kliknięciu",
          "Button / OnClick AddListener",
          "Zadanie: Losowa grafika",
          "Dodatkowe czcionki",
          "Wyskakujący panel",
          "InputField",
          "Zadanie: Działania matematyczne z odpowiedzią",
          "Slider",
          "Zadanie: Slider zmieniający zdjęcia",
          "Grid Layout",
          "Zadanie: Panele menu",
          "Cięcie grafik z rogami",
          "Zadanie: Sportowa tablica wyników",
          "Przycisk do zamykania gry"
        ],
        "Budowanie gry": [
          "Export na PC",
          "Zmiana wersji edytora dla danego projektu",
          "Dodanie platformy Android",
          "Dostosowanie UI na Android",
          "Budowanie gry i transfer na telefon"
        ],
        "Input / Vectory / Fizyka": [
          "Input / GetAxis",
          "Wektory",
          "Współrzędne wektorów",
          "Mnożenie wektorów",
          "Normalizowanie wektorów",
          "Długość wektora",
          "Ruch w osi x i y",
          "Vector3.right vs transform.right",
          "Strzelanie / spawnowanie / Instantiate()",
          "Fizyka w Unity / Rigidbody2D",
          "Ruch poziomy / velocity",
          "Skok / velocity",
          "Wyrażenia lambda",
          "OnCollisionXXX",
          "OnTriggerXXX",
          "Ruch po łuku / AddForce",
          "Obrót gracza",
          "Klasa Input",
          "Camera follow",
          "Skok z warunkami",
          "Object Pool",
          "Rotacje"
        ],
        "Projekt Flappy Bird": [
          "Założenia projektu",
          "Gotowy projekt Flappy Bird"
        ],
        "Programowanie C# 2": [
          "Enum",
          "Tuple",
          "Struct",
          "Dictionary",
          "switch",
          "Zmiana szablonu skryptu",
          "Typy wartościowe i referencyjne",
          "Klasa bazowa i pochodna",
          "Klasa abstrakcyjna",
          "Interfejs",
          "Dziedziczenie i interfejsy (System HP)",
          "Interfejs / IDragHandler",
          "Metody i pola statyczne",
          "Wzorzec Singleton",
          "namespace",
          "Delegaty",
          "Delegata Action",
          "Wzorzec Obserwator",
          "Wzorzec Obserwator z parametrami",
          "Symulacja wyświetlania filmów na youtube",
          "Typ string",
          "StringBuilder",
          "ref",
          "Generics",
          "Extension methods",
          "Wymieszanie tablicy"
        ],
        "Sceny": [
          "Przełączanie scen",
          "Ładowanie dodatkowych scen / Additive",
          "DontDestroyOnLoad"
        ],
        "Animacje / Efekty / Dźwięki": [
          "Dźwięki",
          "Wstęp do animacji",
          "Animacje lokalne",
          "Odwrócenie animacji",
          "Powielanie animacji na inne obiekty",
          "Animacja poklatkowa",
          "Łączenie animacji w kontrolerze",
          "Zadanie: Pulsująca animacja",
          "Uruchamianie klipu animacji w kodzie",
          "Wywoływanie animacji przez trigger",
          "Zadanie: Animacja przeładowania bronii",
          "Blokowanie działań podczas trwania animacji"
        ],
        "Projekt Arkanoid": [
          "Założenia do projektu"
        ]
      },
      "requirements": [
        "Komputer z dostępem do internetu i darmowego programu Unity"
      ],
      "description": "Hej!\nBądźmy szczerzy - ten kurs to petarda ;)\nStarałem się przedstawić Wam to, co sam chciałbym wiedzieć, gdy zaczynałem naukę programowania / tworzenia gier.\nAle do sedna... dlaczego ten kurs?\nPrzede wszystkim praktyka. Kurs zawiera wiele projektów, które będziecie wykonywać samodzielnie, ale nie samemu ;) Po zapoznaniu się z podstawami programowania i Unity zaczniemy tworzyć proste gry. Czasami będziecie musieli pokombinować, rozwiązać zadania. W przypadku, gdy napotkacie na ścianę... jestem tutaj, by Wam pomóc.\nKontaktujemy się głównie przez discorda.\nZ czasem zaczniemy używać Gita i tworzyć wspólnie proste projekty.\nJa głównie pracuje na Pc, cały kurs nagrany jest na Windowsie. Poza tym będziemy tworzyć projekty na mobilki (android) i w pewnym momencie wrzucimy coś na Google Play Store ;) Ale to za jakiś czas, jak już poznamy solidne podstawy.\nTen kurs to nie tylko obejrzenie lekcji wideo.\nMoim zamysłem jest zbudowanie społeczności na discordzie, dzięki czemu poznacie osoby o podobnych pasjach i zainteresowaniach. Razem możemy zbudować fajne rzeczy, a po skończonym kursie... uczymy się dalej ;)\nPo drodze będzie wiele zadań i projektów do samodzielnego wykonania. Jeśli nie masz zamiaru ich robić... nie kupuj tego kursu. Bez konkretnej praktyki, nic z tego nie będzie niestety. Nauka programowania to czas spędzony na google i niezłej rozkmince ;) Ale nic nie bój... razem ogarniemy ;)\nPraca własna, discord i jedziemy z tym koksem!",
      "target_audience": [
        "Dla osób, które poważnie myślą o zostaniu programistą i twórcą gier komputerowych"
      ]
    },
    {
      "title": "Créer des jeux mobile avec Unity : Le guide complet",
      "url": "https://www.udemy.com/course/developper-des-jeux-mobile-hyper-casual-avec-unity-guide-complet/",
      "bio": "Le cours complet pour apprendre à créer des jeux Casual et Hyper Casual pour mobile (iOS et Android) avec Unity et C#.",
      "objectives": [
        "Développer des jeux pour mobile",
        "Créer des jeux (Hyper) Casual",
        "Utiliser Unity pour créer un jeu smartphone",
        "Gérer la partie marketing",
        "Comment travailler avec un éditeur de jeux",
        "Comment gagner de l'argent avec ses jeux vidéo",
        "Comment trouver des idées de jeux et faire un GDD",
        "Créer un kit de presse et faire la promo de son jeu",
        "Optimiser le projet et augmenter ses chances d'être édité",
        "Ajouter les quelques détails qui feront de votre jeu un jeu meilleur",
        "Apprendre Unity pour faire des jeux pour mobiles",
        "Monétiser un jeu avec Unity ADS"
      ],
      "course_content": {
        "Comprendre le monde des jeux mobile (Hyper) Casual et analyser le marché": [
          "Présentation de cette formation et de son contenu",
          "Avant de poursuivre",
          "Découvrez mes créations personnelles + Je vous montre les chiffres",
          "Pourquoi utiliser Unity quand on crée des jeux Hyper Casual pour mobile ?",
          "Les caractéristiques des jeux Casual/Hyper casual et les principaux codes",
          "Comment rendre un jeu \"Snackable\", un must dans le monde des jeux mobile",
          "Analyse d'un jeu vidéo présent sur le store pour mieux comprendre le genre",
          "Casual VS Hyper Casual : Quelles différences ? Lequel privilégier ? Pourquoi ?",
          "Comparatif / Analyse de 2 jeux mobile, l'un Casual l'autre Hyper Casual",
          "Comment trouver des idées de jeux à développer ? Techniques créatives.",
          "Créer un Game Design Document ou Game Design Overview : Mettre le jeu sur papier",
          "Comment gagner de l'argent avec ses jeux ? Avant, pendant et après le projet.",
          "Conclusion section 1 + Ce qui vous attend dans la suite de ce guide complet"
        ],
        "Débuter avec Unity, le moteur de jeu idéal pour créer des jeux mobile": [
          "Télécharger et installer Unity, le moteur de jeu idéal pour l'Hyper Casual",
          "Aperçu de l'interface du logiciel Unity",
          "Exploration des menus de Unity (Partie 1/2)",
          "Exploration des menus de Unity (Partie 2/2)",
          "Trouver des assets (modèles 3D) en ligne et les utiliser dans Unity"
        ],
        "Débuter avec C#, le langage de programmation que nous allons utiliser pour coder": [
          "Si vous avez besoin d'aide",
          "Quelques mots sur le langage de programmation C# (C-sharp)",
          "Les variables avec C#",
          "Les conditions avec C#",
          "Utiliser les boucles pour répéter un bout de code C#",
          "Utiliser des tableaux pour stocker un grand nombre de données",
          "Écrire des fonctions pour exécuter un bout de code spécifique",
          "Passer des paramètres aux fonctions et récupérer une valeur de retour",
          "Comprendre les Inputs : Interagir avec un jeu vidéo",
          "Topo sur le fonctionnement du mode 2D de Unity et des Sprites",
          "Découverte de visual studio 2022, la nouvelle version de l'éditeur de code",
          "Avoir plusieurs versions de visual studio en même temps",
          "Exercice de codage : Testez vos connaissances en C#"
        ],
        "Créer un template (modèle) de jeu HyperCasual réutilisable pour aller + vite !": [
          "Initialisation d'un projet Unity mobile 3D pour préparer le template",
          "Mise en place d'une SkyBox adaptée au mobile et au style hyper casual",
          "Mise en place de formes simples pour préparer un mini jeu 3D",
          "Création d'un canvas pour accueillir l'interface utilisateur",
          "Comment organiser l'UI (interface utilisateur) pour un jeu hyper casual ?",
          "Travailler avec le Canvas et le système d'ancrage de Unity",
          "Modifications des couleurs avec un shader cartoon idéal pour le mobile",
          "Un script de mouvement simple pour le personnage",
          "Le script des obstacles, les ennemis du joueur",
          "Spawner : Pour générer des obstacles à l'infini",
          "Rendre le prototype Snackable / Juicy avec des effets visuels",
          "Relancer le jeu quand on perd (après le timer de 3 secondes)",
          "Compilation et test du proto sur mobile afin de valider notre template Unity"
        ],
        "PROJET : Développement d'un jeu Hyper Casual complet. Bonnes pratiques & astuces": [
          "Création de notre projet Unity de jeu hypercasual 3D",
          "Préparation du script de déplacement du personnage",
          "Suite du script C# de mouvement via écran tactile",
          "Fonction de saut du personnage",
          "Animation du personnage 3D lors de son déplacement",
          "Script C# pour que la caméra suive le personnage dans le niveau",
          "Amélioration du script du personnage",
          "Préparation du niveau / Environnement 3D",
          "Amélioration de notre décor 3D",
          "Création d'un tutoriel dans le jeu + Test intermédiaire du projet sous Android",
          "Comprendre ce qu'est un modèle low poly et en créer un sous Blender",
          "Chronométrage des parties et fin du niveau au bout du timer",
          "Obtenir un temps additionnel si on regarde une pub (rewarded video)",
          "Menu principal du jeu vidéo",
          "Écran du sélecteur de skin pour pouvoir personnaliser son personnage",
          "Configuration des objets interactifs du niveau",
          "Détection des collisions avec les objets et gestion de cette collision",
          "Calcul du score du joueur durant le jeu",
          "Fonctionnalité de sauvegarde du meilleur score",
          "Gagner des pièces d'or durant le jeu pour pouvoir acheter dans le magasin",
          "Design du magasin (shop) pour l'achat d'objets virtuels dans le jeu",
          "Monétisation du jeu / modèle économique : Caractéristiques incrémentales",
          "Récompenser le joueur chaque jour et débloquer des skins / objets rares",
          "Mise en place d'un écran de succès/achievements à débloquer",
          "Préparation d'un personnage contrôlé par l'ordinateur (IA)",
          "Code C# de déplacement autonome de l'intelligence artificielle",
          "Amélioration du personnage IA contrôlé par l'ordinateur + quelques idées",
          "Affichage des scores des différents joueurs en fin de partie",
          "Progression du joueur, passage de niveaux et déblocage de décors",
          "Utiliser Unity Ads pour afficher des publicités et monétiser un jeu mobile",
          "Installer Game Analytics pour récolter des datas et analyser ces données",
          "Créer des visuels (Images / Vidéos) de son jeu pour en faire la promo",
          "Créer un kit de presse pour présenter son jeu à la presse ou à un éditeur",
          "Proposer un projet de jeu à un éditeur de jeux mobile et se faire publier",
          "Le statut de micro entreprise pour créer sa boîte et se lancer",
          "Utiliser un template du store, conseils et à propos des prochains projets",
          "Google Play Developers Console : Pour publier un APK sur le Play Store de Google",
          "Télécharger le projet Unity final complet et toutes les sources du jeu"
        ],
        "PROJET : Création d'un jeu casual 3D + Astuces compatibilité inputs mobile & PC": [
          "Présentation du jeu casual que nous allons développer",
          "A propos des ressources utilisées",
          "Importation des modèles 3D modélisés sous Blender",
          "Créer et trouver des modèles 3D pour notre jeu mobile",
          "Préparation du premier niveau de notre jeu 3D",
          "Ajout d'un Trail Renderer et d'un ciel (skybox)",
          "Mise en place d'animations 3D",
          "Préparation de la caméra pour filmer l'action",
          "Fonction de propulsion de la balle via son rigidbody",
          "Amélioration du tir de la balle pour un meilleur feeling",
          "Détection des collisions avec les éléments du niveau",
          "Travailler avec les outils audio",
          "Terminer un niveau pour passer au suivant et progresser dans le jeu",
          "Création d'un menu pour passer au niveau suivant",
          "Création d'une mini cinématique d'introduction pour un niveau",
          "Système de mise en pause du jeu",
          "Avancement des niveaux suivants de notre jeu",
          "Création d'un sélecteur de niveaux",
          "Indiquer au joueur (feedback) quand il a de nouveau la possibilité de jouer",
          "Création d'un paramètre pour pouvoir modifier le volume du jeu",
          "Petit effet visuel : La caméra zoom sur l'action automatiquement",
          "Système pour collectionner / ramasser des objets de jeu",
          "Compilation du projet pour Android afin de conclure sur ce projet"
        ],
        "Retour d'expérience, réalité du terrain et secrets de développement de mon jeu": [
          "Introduction et présentation de cette secion",
          "Travailler avec la physique, qui sera au cœur du jeu. Paramétrage du perso.",
          "Workflow : Modéliser, importer et configurer un objet 3D dans Unity",
          "Utiliser le moteur physique pour propulser le Ragdoll dans le niveau",
          "Collisions, score, effets visuels snackables, algorithme des points, aléatoire…",
          "Utilisation des physics materials et de iTween pour donner un feedback au joueur",
          "Importer le modèle 3D d'une ville complète et test du jeu avec ce décor 3D",
          "Fonctionnalité de \"secousse\" pour appliquer une impulsion au personnage",
          "Optimisation maximale du projet pour le rendre compatible avec les mobiles",
          "Mise en place de voitures autonomes dans la ville : IA Navigation et NavMesh",
          "Monétisation du projet avec des pubs. Présentation de Unity Ads et de son SDK",
          "Avancement du projet, astuces, conseils, défis, ajustements & améliorations...",
          "Faire revenir le joueur, succès à débloquer, achats in app et let's play du jeu.",
          "Monétiser avec un achat intégré : éléments de personnalisation + rétention",
          "Démarcher un éditeur de jeux, créer un press kit, medias, présenter son jeu...",
          "Collaborer avec un éditeur de jeux vidéo mobile Hyper Casual",
          "Réaliser un trailer vidéo de son jeu pour en faire la promotion et des pubs",
          "Retours de l'éditeur, résultats des tests, KPI, les chiffres du jeu.",
          "Les différentes itérations, les résultats, l'état actuel du projet"
        ],
        "Des conseils et notions complémentaires en vrac pour vous améliorer sous Unity": [
          "A propos de cette section \"Vidéos en vrac\"",
          "Utiliser les Scriptable Objects pour organiser ses données en dehors des scripts",
          "Créer une DLL (librairie de fonctions C# / Plugin) utilisable dans Unity",
          "Optimiser un projet pour améliorer les performances du jeu 2D ou 3D au maximum",
          "Compilation de 10 astuces pour Unity afin d'améliorer vos jeux vidéo",
          "Modifier des variables à distance avec remote config",
          "Créer des textures par intelligence artificielle & stable diffusion"
        ],
        "Conseils d'optimisation des projets Unity": [
          "Optimiser les modèles 3D",
          "Optimiser un projet Unity via ses réglages",
          "Optimiser un code grâce au Object Pooling"
        ],
        "Coder mieux grâce aux design patterns": [
          "Factory",
          "Observer",
          "Singleton",
          "Service Locator",
          "State",
          "Exemple concret : Refactoriser un projet grâce aux design patterns"
        ]
      },
      "requirements": [
        "Aucune connaissance n'est requise pour suivre ce cours",
        "Il vous faut un ordinateur et internet",
        "Vous devez avoir envie de créer vos jeux mobile",
        "Votre objectif est de devenir développeur de jeux indépendant et vivre de votre passion ?"
      ],
      "description": "Bienvenue sur ce guide ultra complet qui vous permettra d'apprendre à créer des jeux mobile (Hyper) Casual et d'acquérir les bonnes pratiques. Ayant moi même développé des jeux à succès (plusieurs millions de téléchargements), je serai à même de vous partager toutes les astuces qui font la différence.\n\nSi vous voulez apprendre à créer des jeux vidéo pour smartphone/tablettes Android ou iOS, optimiser vos projets, connaître les bonnes pratiques et vivre de votre passion, ce cours est fait pour vous.\n\nDans ce tutoriel vous apprendrez toutes les étapes du développement de jeux pour mobile de A à Z au travers de plusieurs projets et ateliers concrets mais pas que ! Vous y découvrirez aussi tout le reste comme par exemple :\nDémarcher des éditeurs et collaborer avec\nOptimiser votre projet pour maximiser vos chances d'être édité\nDes astuces pour monétiser mieux vos jeux et donc générer plus de revenus\nCréer un kit de presse, des visuels, un trailer, des médias divers pour le marketing\nTrouver des idées, écrire un GDD (Game Design Document)\nTrouver des financements, monter votre boîte\nMonétiser votre jeu avec Unity Ads\nJe vous ferai également un retour d'expérience à propos de projets concrets sur lesquels j'ai travaillé afin de partager avec vous la réalité et toutes les étapes du cycle de vie d'un jeu.\nIl s'agit donc d'une formation complète qui vous permettra d'apprendre à développer des jeux vidéo avec Unity et le langage C#. Nous mettrons nos connaissances en pratique lors du développement de plusieurs projets (Un jeu Hyper Casual, un jeu Casual et un retour d'expérience sur un autre jeu HyperCasual).\nVous apprendrez à optimiser vos projets pour :\nAméliorer votre rétention\nMaximiser vos revenus\nAméliorer vos KPI / indicateurs de performance (CPC, CPI) => Vous apprendrez ce vocabulaire\nChoisir les bons graphismes\nOptimiser votre jeu pour mobile\nAvoir un projet Unity facilement exploitable pour un éditeur\nAfficher des publicités Unity Ads, les optimiser et générer des revenus\nDévelopper un projet de A à Z avec toutes les fonctionnalités indispensables dans un jeu Hyper Casual\nEn parallèle de la partie développement, je partagerai avec vous toutes les bonnes pratiques qui concernent tout le reste (éditeur, marketing, monétisation, gestion, optimisation...). Bref tout les sujets qui ne sont en général jamais abordés dans les tutoriels que vous pouvez trouver sur le net mais qui sont pourtant indispensables.\nDans ce cours il y aura donc des sujets funs comme la création de plusieurs jeux de A à Z et des sujets plus sérieux comme par exemple préparer votre dossier, présenter votre jeu à un éditeur, optimiser au mieux vos publicités, analyser les données récoltées, étudier le marché, des analyses de jeux existants, comprendre le vocabulaire des éditeurs...\nVous apprendrez aussi comment faire un portage de jeu pour adapter un jeu PC à un écran tactile mobile.\nC'est un cours d'exception et d'une très grande richesse car il aborde ce que les autres n'abordent pas. Vous aurez non seulement toutes les connaissances pour créer vos jeux mobile avec Unity mais également toutes les connaissances pour maximiser vos chances de connaître le succès avec vos projets. De plus vous obtiendrez votre certificat de réussite sur le développement de jeux mobile avec Unity et C# à l'issue de ce tutoriel.\nVous serez à mes côtés comme si vous étiez dans mon équipe de développement et dans les réunions avec l'éditeur. Vous serez pas la suite plus confiant et plus serein pour vous lancer en tant que créateur de jeux vidéo indépendant.\nJe vous invite donc à rejoindre ce cours si vous souhaitez enfin vous lancer et vivre de votre passion : le développement de jeux vidéo !",
      "target_audience": [
        "Les personnes en reconversion qui veulent s'orienter vers la création de jeux vidéo pour mobile",
        "Les développeurs Unity qui souhaitent apprendre à créer des jeux Hyper Casual / Mobile",
        "Les développeurs qui souhaitent s'orienter vers l'Hyper Casual",
        "Toutes les personnes intéressées par le monde du développement de jeux vidéo"
      ]
    },
    {
      "title": "Jogo de nave 2D usando o unity 5",
      "url": "https://www.udemy.com/course/jogo-de-nave-2d-usando-o-unity-5/",
      "bio": "Introdução ao desenvolvimento de jogos.",
      "objectives": [
        "Desenvolver um simples jogo em 2D usando o unity"
      ],
      "course_content": {
        "Bem vindo ao curso": [
          "Seja bem vindo!"
        ],
        "Recursos e Projeto": [
          "Download de recursos e projeto"
        ],
        "Introdução": [
          "Obtendo e Instalando o Unity"
        ],
        "Projeto e Interface": [
          "Criando Projeto e Conhecendo a Interface"
        ],
        "Desenvolvimento do Jogo": [
          "Criação do jogador - Nave",
          "Diferença de versão",
          "Criando o script de movimento do jogador",
          "Criação do Projétil e Script de Comportamento",
          "Adicionando efeito de som para o projétil",
          "Destruindo objetos com colisor - BoxCollider2D",
          "Limitando translação da nave na tela",
          "Criando efeito de explosão",
          "Criando asteroides e script de comportamento",
          "Aprendendo sobre Coroutine",
          "Animação de dano da Nave",
          "Criando o inimigo",
          "Criando componente para ganhar vida",
          "Criando partículas",
          "Criando a barra de vida - User Interface",
          "Criando o script para a barra de vida",
          "Criando a Classe Estado",
          "Criando os pontos e o game over",
          "Publicando o Jogo"
        ]
      },
      "requirements": [
        "Ter noção de lógica de programação"
      ],
      "description": "Este curso é destinado a quem quer iniciar no desenvolvimento de jogos e tenha uma pequena noção de lógica de programação. Neste curso, iremos mostrar através de um jogo 2D para PC os principais componentes para desenvolvimento de Jogos 2D usando a Unity 5. Então, se você seguir o curso, irá conseguir caminhar no desenvolvimento do seu próprio jogo.\nA Unity é uma famosa Engine de desenvolvimento de jogos, a qual é utilizada por grandes produtoras de games.",
      "target_audience": [
        "Estudantes na área de computação",
        "Estudantes na área de games"
      ]
    },
    {
      "title": "Creación de TrimSheets para Videojuegos",
      "url": "https://www.udemy.com/course/creacion-de-trimsheets-para-videojuegos/",
      "bio": "Técnicas para Environment Artist",
      "objectives": [
        "Aprenderás lo que es un TrimSheet",
        "Aprenderás hacer Blocking de un Trimsheet",
        "Aprenderás Bake + Mapeado de Trimsheets",
        "Zpass e importar el Trim en Unreal 5"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Blocking Base": [
          "Blocking Base"
        ],
        "Planteamiento del TrimSheet": [
          "Planteamiento del Trim"
        ],
        "Baking en Marmoset": [
          "Realizar el Bake Base de nuestro TrimSheet"
        ],
        "Mapeado de TrimSheet": [
          "Mapeado del trim"
        ],
        "Export a Zbrush + Detalle Base": [
          "exportado a zbrush"
        ],
        "Detalle Final en Zbrush": [
          "Zbrush final"
        ]
      },
      "requirements": [
        "Experiencia utilizando programas como Zbrush, Blender o Unreal 5"
      ],
      "description": "Curso de creación de TrimSheets para videojuegos.\nLa técnica de creación de trimsheets es CLAVE y NECESARIA si quieres dedicarte a la creación de Environments para videojuegos.\nHoy en día todos los juegos que conocemos están utilizando la creación de trimsheets para optimizar sus flujos de trabajo, agilizar el proceso de producción en equipos y lograr una consistencia visual en todo el entorno.\nExplicado paso a paso durante todo el proceso.\nPlanteamiento del Trim en Blender\nPlantear un Trim con geometría nos ayudará a poder ver los tamaños generales que podemos necesitar en todo nuestro proyecto.\nBlocking del Trim\nCon el Blocking de geometría, podremos realizar un blocking de trim básico para bakearlo y comprobar que todo funciona correctamente.\nBake + Material Base + Desplegado de las Uvs\nAprenderás a mapear correctamente tus trimsheets para Videojuegos\nEsculpido del Trim en Zbrush ( se puede realizar en Blender )\nFinalizaremos de dar los toques de sculpt finales a nuestros trimsheets.\n\n\nCon este curso aprenderás una de las técnicas más básicas para desarrollarte como environment artist, mostrando en tu portfolio que tienes habilidad y nivel suficiente para Planificar, Crear y Esculpir un trimsheet completo para videojuegos.\n\n\nEspero que te animes a participar en este curso y cualquier duda que tengas estaré disponible para ayudarte en todo el proceso.",
      "target_audience": [
        "Este curso está dirigido a aquellas personas que quieren mejorar su skillset para ser Environment Artist"
      ]
    },
    {
      "title": "Aprende Luau e Introducción a Roblox",
      "url": "https://www.udemy.com/course/aprende-luau-e-introduccion-a-roblox/",
      "bio": "Aprende Roblox",
      "objectives": [
        "Lenguaje de programación Luau que es Lua para Roblox",
        "Programar en Luau",
        "Entender el Motor de Roblox",
        "Hacer un juego sencillo en Roblox"
      ],
      "course_content": {
        "Programación en Luau": [
          "Presentación y descargas",
          "Tipos de datos",
          "Operaciones Matemáticas",
          "Librería Matemática en Luau",
          "Operadores",
          "Condicionales",
          "Métodos de los Strings",
          "Bucles",
          "Tablas",
          "Funciones",
          "Corrutinas"
        ],
        "Conociendo el Motor y Scripting": [
          "Primeros Pasos",
          "Generador de Terrenos",
          "Accediendo con Scripts a los elementos",
          "Crear Instancias",
          "Operaciones con Vectores",
          "Animar Posición",
          "Animar el Giro",
          "Funciones Interesantes"
        ],
        "Creando un Juego Obby de pasarelas y persecución.": [
          "Creando Escenario.",
          "Moviendo Ascensor",
          "Introduciendo Enemigos",
          "Plataformas que se desvanecen",
          "Plataformas que desaparecen",
          "Lava Mortal",
          "Contador",
          "Interfaz de Inicio",
          "Opciones de Cámara y Archivo de Ejercicio Final."
        ]
      },
      "requirements": [
        "Ninguno se explica la programación y el motor Roblox",
        "Tener un PC y ganas de aprender"
      ],
      "description": "Roblox es uno más de  el gran abanico de motores  que tenemos hoy dia para el desarrollo de videojuegos . Sin ser tan conocido como Unreal o Unity  , tiene una comunidad de desarrolladores tan o más grande que Unity y mayor que la comunidad de Unreal , esto es así por la gran cantidad de jovenes y niños que se unen a los servidores de Roblox para jugar y para crear sus videojuegos .\nRoblox nos da ciertas facilidades para crear entornos de gran calidad , un generador de terrenos bastante completo y muy fácil de usar , generar oceanos , una extensa librería de assets incluida en el propio motor ,clasificada por categorías , sonidos,personajes,objetos ,imágenes  , un editor de animaciones  y muchás más cosas . Tambien posee personajes ya configurados con algún comportamiento que nos puede servir para hacer juegos sencillos o para juegos complejos en los que necesitemos alguna función ya programada.\n\n\nEste curso también posee una sección dedicada a todo el código necesario para crear videojuegos con Roblox. Aprenderemos el lenguaje luau , que es una variante de Lua. Un lenguaje orientado a procedimientos muy fácil de usar ,ya que fué creado para hacer scripting que es la modalidad de programación que usan otros motores como Unity .\nAprenderás como manipular objetos desde código  y te será muy util para crear multitud de efectos, ascensores objetos voladores en los que podamos introducirnos , ya depende de tu creatividad a la hora de usar todos los recursos que se te ofrecen  . Este curso te introduce en Roblox y te deja a un nivel intermedio suficiente para crear un videojuego sencillo y a programar totalmente en Luau ,a partir de aquí estaras preparado para seguir tu aprendizaje y hacer cosas más complejas en las que no tendrás  ninguna dificultad.",
      "target_audience": [
        "Cualquier persona que quiera introducirse en programación de videojuegos",
        "Cualquier persona que quiera introducirse en Roblox"
      ]
    },
    {
      "title": "Создание HTML5 игр на JavaScript и Canvas",
      "url": "https://www.udemy.com/course/html5-arkanoid/",
      "bio": "Пишем HTML5 арканоид и змейку на чистом JavaScript с нуля",
      "objectives": [
        "Создание HTML5 игры Арканоид на чистом JavaScript и Canvas",
        "Создание HTML5 игры Змейка на чистом JavaScript и Canvas",
        "основы работы с HTML5 canvas",
        "загрузка, отрисовка и движение спрайтов",
        "вращение спрайтов на канвасе",
        "обработка столкновений",
        "запуск покадровой анимация из spritesheet",
        "воспроизведение звуков",
        "определение размеров игры под разные устройства и разные разрешения экрана"
      ],
      "course_content": {
        "HTML5 арканоид": [
          "Подготовка",
          "Код игры с HD графикой",
          "Выводим платформу и шар",
          "Расставляем объекты на экране",
          "Выводим блоки на экран",
          "Реализуем движение платформы",
          "Удерживаем мяч на платформе во время движения",
          "Запуск мяча с платформы",
          "Первый взлет мяча под случайным углом",
          "Обработка столкновений мяча с блоками",
          "Отскок мяча от платформы",
          "Уничтожаем блоки",
          "Отскок мяча от краев экрана",
          "Не даем платформе выйти за края экрана",
          "Поражение на уровне",
          "Победа на уровне",
          "Загрузка и воспроизведение звуков",
          "Рендеринг текста",
          "Покадровая анимация"
        ],
        "HTML5 змейка": [
          "Подготовка",
          "Вывод изображения на canvas",
          "Прелоадер для спрайтов",
          "Генерируем игровое поле",
          "Создаем и рисуем змейку",
          "Как управлять размерами канваса",
          "Подгоняем размеры игры по высоте",
          "Заполняем канвас по ширине браузера",
          "Движение змейки",
          "Отслеживание событий нажатия клавиш",
          "Изменение направления",
          "Отрисовка яблока",
          "Генерация яблока в случайной ячейке",
          "Поглощение яблока",
          "Отрисовка головы змейки",
          "Вращение спрайтов на канвасе",
          "Вывод бомб на поле",
          "Завершение игры",
          "Прелоадер звуков",
          "Воспроизведение звуков",
          "Рендеринг текста",
          "Использование собственных шрифтов"
        ]
      },
      "requirements": [
        "Для комфортного усваивания материала курса вам потребуются знания основ HTML и синтаксиса JavaScript"
      ],
      "description": "Видеокурс по разработке HTML5 игр на JavaScript.\nВ ходе курса мы разработаем 2 классические игры с нуля: арканоид и змейка. Мы напишем весь код на чистом JavaScript с использованием HTML5 canvas без использования сторонних библиотек.\nВ ходе обучения разбираем следующие темы:\nосновы работы с HTML5 canvas\nзагрузка, отрисовка и движение спрайтов\nвращение спрайтов на канвасе\nобработка столкновений\nзапуск покадровой анимация из spritesheet\nвоспроизведение звуков\nизменение размеров игры в зависимости от разрешения экрана\nПолученные знания станут отправной точкой к дальнейшему более глубокому практическому применению языка JavaScript и разработки игр на нем.\nБудет полезно пройти этот курс до начала изучения вашего первого HTML5-фреймворка для создания игр.\nВозможности игровых JS-движков станут намного понятнее, т.к. вы уже будете знать, как они реализованы и что за ними стоит.\nПриятного просмотра и продуктивного обучения!",
      "target_audience": [
        "Начинающие JavaScript разработчики, увлекающиеся созданием игр"
      ]
    },
    {
      "title": "Créez 4 Apps et Jeux en Réalité Augmentée-Vuforia-Unity",
      "url": "https://www.udemy.com/course/realite-augmentee-vuforia-unity-2017-tower-defense/",
      "bio": "Maîtrisez la réalité augmentée avec Unity 3D et Vuforia 7.x/8.x - Solution multiplateformes Android UWP et iOS",
      "objectives": [
        "Créer 4 application/jeux en réalité augmentée",
        "Développer avec le SDK de Vuforia",
        "Réaliser un jeu complet de Tower Defense en AR",
        "Placer parfaitement les modèles 3D sur le sol et exploiter les autres fonctionnalités de Vuforia",
        "Mettre à jour le sdk de Vuforia",
        "Déployer le jeu sur un smartphone Android"
      ],
      "course_content": {},
      "requirements": [
        "Quelques bases dans l'utilisation de Unity 3D",
        "Des bases de C#",
        "Disposer d'un ordinateur (PC - Mac)",
        "Installer Unity - je vous guiderai dans l'installation de la dernière version",
        "Disposer d'une webCam - conseillé pour faciliter les tests dans Unity",
        "Disposer d'un smartphone pour des tests réels hors éditeur de Unity"
      ],
      "description": "Bienvenue dans cette formation complète sur l'utilisation de la réalité augmentée avec Unity et Vuforia.\nMaîtrisez le développement d'applications et jeux vidéos 3D en réalité augmentée dès maintenant !\nDevenez Développeur Unity spécialisé en AR...\n\nApprenez le développement de jeux en 3D grâce à cette formation sur la réalité augmentée avec Vuforia et Unity.\n\n\nCréez 4 apps et jeux 3D en réalité augmentée:\n- Votre propre JEU VIDÉO de TOWER DEFENSE CONCEPT en réalité augmentée (AR) en utilisant ImageTarget de Vuforia. Développement complet !!\n\n- Placer des modèles 3D au sol, parfaitement plaqué grâce à Vuforia Ground Plane et créer votre première expérience avec le concept Cute Cat\n- Imiter l'application Ikea Place pour disposer des modèles 3D dans votre salon (section en cours de réalisation, remplacée en Mai par CuteCat qui présente moins de complexité quand on débute sur Vuforia Ground Plane)\n- Création d'un mini-jeu bricks shooter basée sur l'utilisation du moteur physique de Unity, en utilisant User Defined Target de Vuforia\nAvec 14 heures de formation, vous allez ici plonger dans l'univers de la réalité augmentée.\n-----------------------------------------------------------------------------------------------------------------------------------------\nDernière Mise à jour Mars 2019\nProchaine mise à jour programmée: Semaine du 11/07 2020\n\n\nEn effet depuis la sortie de ce cours, le SDK Vuforia a évolué, et il est temps de faire une mise à jour pour Vuforia 9.x\n---------------------------------------------------------------------------------------------------------------------------------------------\n\n\n## Ajouts futurs envisagés:\n- Présentation de Vuforia Fusion\n- Une section complète sur Markerless\n- Une section sur le développement avec iOS\n\n\nI/ Introduction\nLa première section présente la réalité augmentée en général, tout en indiquant des solutions alternatives à Vuforia. Un point est fait aussi sur les technologies futures que l'on peut déjà exploiter en terme de développement et de recherche comme le sdk ARCore.\n\nEnfin nous verrons pourquoi utiliser Vuforia avec Unity 3D.\n\n\nII/ Premiers pas Vuforia\nLa seconde section vous propose de faire vos premiers pas dans le monde de l'AR, en vous guidant afin de créer votre première database et votre premier marker de type ImageTarget. Création du compte Vuforia, création de la licence, types de target possibles... l'essentiel  de nos besoins avec Vuforia pour le jeu complet et avancé, sera couvert dans cette section.\nEnfin la mise en place et le premier test sera réalisé dans Unity 3D.\n\n\nIII/ Développement du mini-jeu BricksShooter\nCette section  propose d'utiliser le concept UDT (User Defined Target) de Vuforia pour créer un mini-jeu utilisant le moteur physique de Unity (collider, rigidbody, gravity...) tout en voyant le concept de prefab sous Unity.\n\n\nIV/ Poser des modèles au sol grâce à Vuforia Ground Plane : Cute Cat Concept\nEn se basant sur Vuforia Ground Plane, nous allons voir comment placer des modèles au sol. Nous étudierons la démo initiale de Vuforia GP Sample, puis créerons le Cute Cat Concept from scratch.\nSection mise à jour avec le dernier package de Vuforia GP.\n\n\nV/ Développement du concept de l'application Ikea Like\n\nAvec Vuforia Ground Plane, nous allons réaliser une application de type Ikea Place Like permettant de placer parfaitement au sol, des modèles 3D et d'interagir avec eux.\nCe sera l'occasion de réutiliser vos connaissances sur Vuforia Ground Plane, tout en imitant certaines fonctionnalités de l'application Ikea Place.\nSection mise à jour avec le dernier package de Vuforia GP.\n\n\n\nVI/ Développement du jeu complet - AR Tower Defense Concept\n\nNous commencerons concrètement le développement complet du troisième jeu vidéo :\nCahier de charges et étude préalable - Conception\nCréation de la Tour\nUtilisation de TextMesh et première interface avec Unity UI\nArchitecture du jeu - pseudo diagramme de classes\nNotion de programmation orientée objet (POO)\nSystème de communication entre les objets par Event\nAinsi le jeu vidéo sera construit couche par couche, fonctionnalité par fonctionnalité, tout en suivant de près le diagramme de classe présenté au début du projet.\n\nL'objet Enemy apparaîtra donc, ainsi que la notion de vagues d'ennemis ou encore l'utilisation du NavMesh (NavMeshAgent, NavMeshObstacle) afin de pouvoir diriger vers la Tour tous les ennemis.\nNous verrons aussi comment utiliser les animations 3D, d'un modèle , sous Unity, avec Animation et Animator de Unity. A ce stade nos ennemis pourront détruire la Tour.\nIl sera alors temps d'ajouter notre Player qui pourra donc lancer nos 2 sorts:\n\nBarre de mana\nGestion du mana\nLancement des sorts en utilisant Raycast\nVisualisation su sort de Destruction (effet de particules)\nEffet du sort sur les ennemis\nMise à jour de l'interface\nFinalisation et ajout de sons\n\n\nVII/ Création d'un Terrain sous Unity\nUne section entière est dédiée à la réalisation d'un Terrain dans l'éditeur de Unity : notion de dimensions, prise en main, sculpture et texturage .\n\n\nVIII/ Déployer pour Android\nUne section entière est dédiée à l'installation des outils nécessaires au déploiement sous Android : java, android, et build sous Unity\n\n\nIX/ Autres technologies Vuforia\n\nDe plus avec la mise à jour de Mars 2018, vous pouvez maintenant découvrir l'option Extended Tracking qui peut s'avérer très utile !! D'autres technologies seront ajoutées ici.\n\n\nCe cours complet sur l'utilisation de la réalité augmentée avec Vuforia est en constante évolution, tout en suivant les dernières évolutions des technologies, mais aussi selon vos besoins et blocages...bref c'est un cours vivant et réactif, rien n'est figé !!\nEn prenant ce cours vous êtes assuré(e)s de rester à jour, mais aussi de profiter ultérieurement d'ajouts futurs (cf prévisionnel des mises à jour tout en haut...).\n\n\nTous les sons utiles sont mis à disposition afin de pouvoir suivre la formation. A chaque fois une référence à l'auteur sera faite.\n\nSi vous rencontrez des difficultés en cours d'apprentissage, vous pouvez me contacter par email et je ferai de mon possible pour vous débloquer.\n\nN'hésitez plus et plongez dans la création d'applications et jeux vidéos, en réalité augmentée, en cliquant sur Suivre ce cours en haut à droite.",
      "target_audience": [
        "Les personnes qui veulent à terme maîtriser le sdk de Vuforia sous Unity",
        "Curieux et curieuses de la réalité augmentée",
        "Toute personne motivée pour créer son jeu vidéo",
        "Découvrir la réalité augmentée"
      ]
    },
    {
      "title": "Intensivo de Unreal Engine 4 para Metaverso. Diploma y Cert.",
      "url": "https://www.udemy.com/course/intensivo-de-creacion-para-realidad-virtual-diploma-y-cert/",
      "bio": "Descubre como crear experiencias de cualquier tipo con Unreal Engine 4 para el futuro del Metaverso",
      "objectives": [
        "Gracias a nuestro curso podrás crear cualquier tipo de experiencia de Realidad Virtual, sea un videojuego o para empresa."
      ],
      "course_content": {
        "Introducción": [
          "Compromiso de calidad",
          "Introducción"
        ],
        "Descargar UE4": [
          "Descargar Unreal Engine",
          "Recursos para Unreal"
        ],
        "Elementos básicos": [
          "Toolbar",
          "Basic",
          "Lights",
          "Visual Effects 1",
          "Visual Effects 2",
          "Content y Viewport",
          "Geometry",
          "Volumes"
        ],
        "Clases": [
          "Clases"
        ],
        "Introducción Efectos": [
          "Introducción Efectos"
        ],
        "Materiales y Entorno": [
          "Materiales",
          "Vertex Painting",
          "LandScape",
          "LandScapeMaterial",
          "Ejercicio",
          "Foliage"
        ],
        "Blueprints": [
          "Introducción BluePrint",
          "Transform"
        ],
        "Ejercicio Puerta": [
          "Introducción Ejercicio Puerta",
          "Crear BpPuerta",
          "Collision",
          "CastTo y Rotación Relativa",
          "Abrir con Key",
          "Llave",
          "TimeLine",
          "Ejercicio I",
          "Solución Ejercicio I",
          "Ejercicio II",
          "Solución Ejercicio II"
        ],
        "Ejercicio juego SIMON": [
          "Introducción Ejercicio 2 (SIMON)",
          "Linetrace",
          "Detectar actor BpSimon",
          "IDs y CustomEvent",
          "Programar y ordenar secuencia",
          "Reiniciar SIMON",
          "Perder y ganar",
          "Ejercicio",
          "Solución Ejercicio"
        ],
        "Ejercicio Báscula": [
          "Introducción ejercicio Báscula",
          "Creación de actores",
          "Tamaño de BpPeso",
          "PhysicsHandle",
          "Comunicación entre actores",
          "Función",
          "Gestión de colores y materiales instanciados",
          "Ejercicio I",
          "Solución Ejercicio I",
          "Ejercicio II",
          "Solución Ejercicio II",
          "Ejercicio III",
          "Solución Ejercicio III"
        ]
      },
      "requirements": [
        "No hay ningún requisito. Solo las ganas de aprender y trabajar en esta industria."
      ],
      "description": "Te enseñamos desde cero a crear todo tipo de experiencias virtuales con Unreal Engine 4. Desde videojuegos, a experiencias para empresas, etc...\nAl finalizar el curso te entregamos un DIPLOMA acreditado por un Epic Authorized Instructor.\n\n\nSOBRE NOSOTROS, LA CALIDAD DE NUESTROS CURSOS Y EL APOYO QUE NOS DA DE LA INDUSTRIA:\nVRSchool es una escuela que lleva funcionando desde 2015, con más de 200 alumnos en sus instalaciones en Málaga, Sevilla y Madrid.\nAhora nos volvemos digitales, y también partnerts de Epic (creadores del Fortnite), volviéndonos Unreal Engine Authorized Instructors. Además de contar con el apoyo y experiencia de la gran productora digital VirtualMente.\nNuestros alumnos han trabajado, junto a nosotros, para Intel, Toshiba, Ford, San Miguel, la cadena FOX (en la serie Vis a Vis), DELL, y muchas más grandes empresas, por lo que todos nuestros cursos, y alumnos, se nutren de todos estos trabajos.\nContamos además con grandes premios por parte de Art Futura, Fantastic Film Fest, Festival de Málaga o los premios Enterprise 2.0.\nUnreal Engine 4 es un sencillo motor gráfico, fácil de aprender, pero tan potente que es usado en series de televisión como The Mandaloria, para crear decorados en tiempo real, o producciones cinematográficas, en anuncios de TV, videojuegos triple A, y mucho más. Lo que lo convierte en el principal motor gráfico del mercado del fotorealismo en tiempo real.\nIgualmente es una gran herramienta para empresas, para crear mundos y experiencias para la Realidad Virtual, o incluso para ArchViz, con representaciones fotorealistas de infoarquitecturas en tiempo real.\nA pesar de lo sencillo de su uso, y de aprenderlo, en poco tiempo se pueden crear experiencias increíbles.\nTe invitamos a que hagas todos nuestros cursos, y te lleves los diplomas que damos con cada uno de ellos. De esta forma podrás trabajar para las grandes marcas que ya trabajan con nosotros, en nuestra escuela, nuestra productora, y nuestros alumnos.\nNo pierdas esta oferta de ser profesional en una de las industrias donde más se está buscando personal.\n¡APÚNTATE AHORA!",
      "target_audience": [
        "Para cualquiera que quiera iniciarse en este software de forma rápida y crear experiencias Virtuales para empresas."
      ]
    },
    {
      "title": "[Part 1] Create Your Own Game in the MapleStory Worlds",
      "url": "https://www.udemy.com/course/part-1-create-your-own-game-in-the-maplestory-worlds/",
      "bio": "Overview of the Maker Client and learn how to use LuaScript to create a 2D platformer game in the MapleStory Worlds.",
      "objectives": [],
      "course_content": {
        "What is the MSW platform?": [
          "소개",
          "MSW Client Overview",
          "Navigation menu and Scene panel",
          "Model List, Hierarchy, and Workspace",
          "Layer, Script, and Resources"
        ],
        "Basic concepts and LuaScript": [
          "Entity, Component, and Property",
          "Model, Service and Logic",
          "Creating Scripts",
          "Script Logic and Script Component"
        ]
      },
      "requirements": [
        "Basic programming skills to understand for/if statement",
        "Curiosity in game design and development"
      ],
      "description": "Congratulations that you've pushed yourself out of your comfort zone! Part 1 is an introduction to the MapleStory Worlds. Curious? Then start straight away.\n\n\nWelcome to the MSW101 lecture for global users who are a potential “Content Creator” in the MapleStory Worlds platform! Have you ever imagined playing a game you created yourself? Have you ever thought of changing the rules or items of the game to enjoy it to the fullest?  Go through the whole lecture, then you'll be able to make your fantasy fulfilled. Are you ready? Off you go!\n\n\nMapleStory Worlds platform?\nIt's a BRAND new platform where anyone can easily create a multiplayer game by using about 30 million resources from MapleStory without worrying about copyright. The MapleStory World provides two creation modes. First is a decoration mode where you can create simply by clicking on buttons or drag&drop componenets, and second is a pro mode that allows you to implement more diverse functions through coding with LuaScript.\n\n\nThere are 5 big chapters in total and few steps in each. However, \"[Part 1] Create Your Own Game in the MapleStory Worlds\" course will mainly discuss all the functions in the MSW platform and go through the basic concepts of the Maker Client, learn how to code with LuaScript.\n\n\n[PART 1]\n\n\nSection 1. What is the MSW platform?: An introduction to the MapleStory Worlds platform and a walkthrough to the MSW Maker Client.\nSection 2. Basic concepts and LuaScript: Few main concepts of the Maker; entity, component, property, model, service, and logic. Also, you’ll learn how to script using Lua.\n\n\nKey takeaways :\nGame development skills in MSW Client by using LuaScript.\nAnyone can play your own game published in the MSW platform.\nYou can earn profit by monetizing your game by adding items and tickets.\n\n\nPlease watch until the end and feel the fun during the process. Good luck!\n\n\n[본 강의는 넥슨X멋쟁이사자처럼의 MapleStory Worlds X Edu Creator Camp 2022의 지원을 받아 제작되었습니다.]",
      "target_audience": [
        "Open to anyone who is interested in the MSW platform",
        "MapleStory game players who wants to develop their own game"
      ]
    },
    {
      "title": "HTML5 Canvas Animasyon Dersleri ve Javascript Oyun Yapimi",
      "url": "https://www.udemy.com/course/html5-canvas-animasyon-dersleri-ve-javascript-oyun-yapimi/",
      "bio": "Javascript Yılan oyunu yapımı,HTML5 Canvas dersleri ,Javascript ile oyun geliştirme ve programlama,Animasyon temelleri",
      "objectives": [
        "HTML5 Canvasın bütün temel özelliklerini ve metodlarını öğreneceksiniz.",
        "HTML5 Canvas ve Javascript yardımı ile kendi oyununuzu geliştirebileceksiniz.",
        "Programlama gücünüzü artıracak bir düşünme sistemi geliştirmeniz çok olasıdır.",
        "Merakınız heyecana,mutluluğa ve eğlenceye dönüşecektir.(En önemlisi de bilgiye.)"
      ],
      "course_content": {
        "HTML5 CANVAS TEMEL ÇİZİM METODLARI VE ÖZELLİKLERİ": [
          "HTML5 Canvas Elementi Özellikleri ve Metodlarını Öğrenelim",
          "HTML5 Canvas Elemanını Oluşturma Html İçerisine dahil etme",
          "HTML5 Canvas Koordinat Sistemi",
          "getContext özel sunum :)",
          "getContext Metodu Kodlama",
          "fillRect() Metodu ve fillStyle Özelliği ile Dolgulu Dikdörtgen çizimleri",
          "strokeRect() Metodu ve strokeStyle Özelliği ile Kenarlıklı dikdörtgen Çizimi",
          "toDataURL Metodu ile Canvas grafik verisini elde etme",
          "globalCompositeOperation Metodu",
          "globalAlpha Özelliği ile Saydamlık",
          "shadow Gölge özellikleri ve Ayarları",
          "Save Restore ve ClearRect metodları (ÖNEMLİ)",
          "Path Metodları moveTo lineTo metodları",
          "Çizgi kalınlığı lineWidth Özelliği",
          "Rect Clip isPointInPath Metodları",
          "quadraticCurveto ve besierCurveTo metodları kullanımı",
          "arc ve arcto metodu",
          "setLineDash metodu ile kesik çizgi çizme",
          "IZGARA çİZİMİ"
        ],
        "GRADİENT VE PATTERN öZELLİKLERİ": [
          "Doğrusal ve Radyal renk geçişli elemanların çizimi sunum",
          "createLİnearGradient",
          "createRadialGradient",
          "Pattern"
        ],
        "PIKSEL MANIPULATİON İŞLEMLERİ": [
          "Başlangıç güzel bir sunum daha genel anlatım",
          "createImageData getIMageData putImageData"
        ],
        "TRANSFORMATİON İSLEMLERİ": [
          "Scale Metodu",
          "Translate Metodu",
          "Rotate metodu",
          "Transform Metodu özel sunum",
          "Transform metodu ile orijin değiştirme",
          "Transform ile ölçeklendirme ve boyutlandırma işlemleri",
          "Transform skew (uzatma esnetme ) işlemleri",
          "Transform ile rotate (döndürme işlemleri)"
        ],
        "RESİM YÜKLEME VE ÇİZİMİ": [
          "Resim çizme işlemleri"
        ],
        "CANVAS METİN İŞLEMLERİ": [
          "Dolgulu ve Kenarlıklı yazı yazılması(strokeText ve fillText metodları)",
          "textAlign özelliği kullanımı",
          "textABaseline Özelliği kullanımı"
        ],
        "ANİMASYON ÖZELLİKLERİ": [
          "Animasyonlarda kullanacağımız kod yapılarımız",
          "Canvas Animasyonunda Doğrusal hareket",
          "Kurucu Fonksiyonları kullanma",
          "Canvas Ekranında 100lerce daire animasyon çalışması",
          "Dairesel Hareket Animasyonu",
          "Klavye ve Mouse ile Canvas Etkileşimi",
          "Nesnelerin etkileşimi uçak ile hareket ve nesneye çarpma",
          "Yerçekimi olayını animasyonlara nasıl uygularız.",
          "Skor ve Yazı işlemleri"
        ],
        "YILAN OYUNU YAPIMI": [
          "Class yapısı kullanarak oyun yapacağız.",
          "Yılanın kafası oluşturma ve ilk hareketini sağlama",
          "Klavye yön tuşları ile yılanın hareket ettirilmesi",
          "Elmanın Koordinatlarını ayarlama",
          "Yılanın ekrandan taşması işlemleri",
          "Yılanın kafası ile kuyruğunun çarpışması",
          "Ses ekleme ve Final"
        ]
      },
      "requirements": [
        "Temel html,css ve javascript bilgisi olması gerekir.",
        "Animasyonları,çizim yapmayı ve üretmeyi seviyorsanız daha çok verim alacaksınız.",
        "Her öğrenim sürecinin ilk aşamasında sancılı ve sabır gerektiren bir zaman aralığı vardır.(Renkli sunumlarla bunu da aşacağız)",
        "Matematik ,geometri bilginiz asgari düzeyde olması şarttır."
      ],
      "description": "HTML5 Canvas ve Javascript ile çizim,animasyon ve oyun yapımı hakkında bilinmesi gereken tüm temel bilgiler ve canvas animasyon örnekleri bu kursta.Kurs içeriğini dikkatle inceleyin. Sizleri harika bir kurs bekliyor.\nHTML5 Canvas etiketi ve Javascript kullanarak sıfırdan oyun nasıl geliştirilir ,Javascript ile oyun nasıl yapılır ? Eğer oyun programlamaya yeni başlıyorsanız Oyun geliştirmek için gerekli temel bilgileri içeren bu kurs tam size göre.Html5 ve javascript ile web oyunu tasarlamak ve geliştirmek için ne yapmak gerekir diyorsanız  html5 canvas animasyon ve çizim uygulamalarını içeren bu eğitim serisine başlamanızı şiddetle  tavsiye ederim.\nHtml5 ve Canvas ile animasyon  ve oyun oluşturmak zahmetlidir ama programlama gücünüzü geliştirecek bir çok sorunla karşılaşırsınız.\nÇoğumuzun bildiği yılan oyununu yaparak öğrendiklerinizi pekiştirebilecek bir oyununuz olacak.Yılan oyunu çok basit bir oyun  evet  fakat  yılan oyununu geliştirirken siz de fark edeceksiniz  içinde bir çok algoritmalar  var sorunlar var  ...Web oyun geliştiricisi olmak isteyen  ve yeni başlayan arkadaşlara özellikle tavsiye ediyorum.Önce yürümesini öğreneceğiz sonra birlikte  koşacağız.\nHaydi başlayalım !",
      "target_audience": [
        "Html5 Canvas ve Javascript ile çizim ,tasarım yapmak isteyenler ve basit animasyon oyun yapımına başlamak isteyenler.",
        "Oyun geliştirmek için gerekli temel bilgileri öğrenmek isteyenler."
      ]
    },
    {
      "title": "Unreal Engine 4: Fundamentos de Programação de jogos com C++",
      "url": "https://www.udemy.com/course/unreal-engine-4-fundamentos-de-programacao-com-c/",
      "bio": "Aprenda a programar seu próprio game do zero",
      "objectives": [
        "Programar jogos utilizando C++ na Unreal Engine 4"
      ],
      "course_content": {
        "Introdução a Linguagem C++": [
          "Configurando o Visual Studio Code",
          "Criando nosso primeiro programa",
          "Instalando o compilador no Windows",
          "Compilando arquivos C++ no Linux e Mac",
          "Variáveis",
          "Variáveis (parte 2): Tipos de dados",
          "Matemática básica",
          "Condicional: if",
          "Condicionais: else",
          "O loop while",
          "O loop for",
          "Funções",
          "Funções com parâmetros",
          "Protótipos de função (localização das funções)",
          "Ponteiros",
          "Alocação dinâmica de memória"
        ],
        "Programação orientada a objetos": [
          "Programação orientada a objetos",
          "Classes",
          "Construtores",
          "Herança de classes",
          "Cabeçalhos (Headers)"
        ],
        "Classes na Unreal Engine 4": [
          "Criando o Primeiro Projeto em C++ na UE4",
          "Criando classes na UE4",
          "Deletando classes no Windows",
          "Deletando classes no Linux",
          "Tornando variáveis visíveis no editor - UPROPERTY"
        ],
        "Componentes e Blueprints": [
          "Adicionar componente num script / classe",
          "Adicionando uma StaticMesh",
          "Criando componentes com Blueprints baseados em uma classe C++",
          "Criando Blueprints personalizados: A classe BlueprintFunctionLibrary"
        ],
        "Erros e mensagens": [
          "Registro de Saída e Logs",
          "Checando mensagens de erro no Registro de Saída (Linux)",
          "Mostrando mensagens na tela do jogo"
        ],
        "Movimento e transformações": [
          "Movimento Linear",
          "Movimento Linear através de incremento de posição",
          "Rotação",
          "DeltaTime",
          "SpawnActor",
          "Controlando o tempo",
          "Input: Mudando posição do ator",
          "Translação em torno de um eixo",
          "Movimento oscilatório"
        ],
        "Pawns e GameMode: Básico": [
          "Pawns: Controlando a movimentação através de inputs do teclado",
          "Pawns: Controlando a movimentação através de inputs do mouse",
          "Ações através de inputs",
          "Obtendo a posição do ator"
        ],
        "Colisões e Gatilhos": [
          "A função Destroy - Destruindo atores",
          "Destruindo atores com atraso (Delay)",
          "Overlap: Destruindo ator após colisão",
          "Acendendo e apagando uma lâmpada"
        ],
        "Funções e recursos úteis": [
          "Ocultando atores",
          "Aprendendo com o recurso \"Definições\"",
          "Adicionando efeitos visuais a cena (partículas)"
        ]
      },
      "requirements": [
        "Conhecimentos básicos sobre Windows, Mac ou Linux",
        "Conhecimentos básicos sobre o Editor da Unreal Engine 4"
      ],
      "description": "Neste curso você aprenderá conceitos básicos de programação com a linguagem C++ e a programar jogos na Unreal Engine 4. As principais classes e funções da API da UE4 serão apresentadas assim como sua utilização em scripts bem simples de forma a tornar a compreensão mais efetiva. Vale frisar que a Unreal Engine possui um sistema de programação visual chamado Blueprints que implementa lógica nos games sem a inserção de nenhuma linha de código. Então qual seria o motivo de aprender a programar jogos utilizando um meio mais trabalhoso e difícil de compreender? Basicamente em função do C++ possuir melhor desempenho tornando seu jogo mais \"leve\" e permitir maior liberdade na implementação da lógica do game. Além disso, os blueprints são muito eficientes em pequenos projetos, mas em trabalhos mais complexos a utilização de C++ é indispensável. Inicialmente serão apresentados conceitos básicos para posteriormente se utilizar o conteúdo apreendido para criar seus primeiros projetos.",
      "target_audience": [
        "Iniciantes em desenvolvimento de games, simuladores e maquetes eletrônicas",
        "Programadores que desejam aprofundar seus conhecimentos sobre a Unreal engine"
      ]
    },
    {
      "title": "Desenvolvendo sistema de inventário de jogos com Unity",
      "url": "https://www.udemy.com/course/desenvolvendo-sistema-de-inventario-de-jogos-com-unity/",
      "bio": "Itens que podem realmente ocupar mais de um slot no sistema de inventário",
      "objectives": [
        "Como programar um sistema de inventários de jogos usando o Unity",
        "Como funciona quando um item ocupa mais que um espaço (slot) no inventário de jogos",
        "Como utilizar o recurso scriptableObject direcionado para esse tipo de aplicação",
        "Uma rápida visão de Padrão de Projetos",
        "A importância em criar um projeto estruturado",
        "Utilização corrotinas (coroutines) para disparar ações dos itens do inventário",
        "Como criar e disparar eventos customizados"
      ],
      "course_content": {
        "1. Introdução": [
          "1.1. Apresentação, metodologias e requisitos",
          "1.2. Explicação sobre Padrão de projeto, padrão MVC e padrão usado no curso",
          "1.3. Arquivos do curso"
        ],
        "2. Criando Itens": [
          "2.1. Conceitos dos itens, métodos, propriedades, semelhanças e diferenças",
          "2.2. ScriptableObject em classes abstratas e específicas para os itens",
          "2.3. Propriedades das classes dos itens parte I",
          "2.4. Propriedades das classes dos itens parte II",
          "2.5. Criando get, set e métodos dos itens",
          "2.6. Métodos dos itens I",
          "2.7. Métodos dos itens II"
        ],
        "3. Criando Ações": [
          "3.1. Conceito e funcionamento das ações que os itens disparam",
          "3.2. ScriptableObject em classes abstratas e específicas para as ações",
          "3.3. Desenvolvendo as ações parte I e criando a classe Option",
          "3.4. Criando ActionManagerEvent e ActionManagerController",
          "3.5. Conectando os itens com o disparo do evento",
          "3.6. Compreendendo o funcionamento da ação dentro do item",
          "3.7. Adicionando ações de equipar em itens específico"
        ],
        "4. Construindo Bag": [
          "4.1. Fundamentos da Bag e a relação com os itens",
          "4.2. Utilizando scriptableObject para construção da Bag.",
          "4.3. Propriedades da classe GenericBagScriptable",
          "4.4. Métodos da classe GenericBagScriptable parte I",
          "4.5. Métodos da classe GenericBagScriptable parte II",
          "4.6. Métodos da classe GenericBagScriptable parte III"
        ],
        "5. Criando a parte visual do Item": [
          "5.1. Funcionamento do ItemView",
          "5.2. Criação do ItemView e flexibilidade do disparo de ações fora do item",
          "5.3. Correção do trigger na representação visual do item",
          "5.4. Adição e configuração dos itens na representação visual",
          "5.5. Configuração dos itens gerados pelos scriptableObject",
          "5.6. Associação do prefab do item com o item gerado pelo scriptableObject"
        ],
        "6. Criando InventoryManagerController": [
          "6.1. Fluxo de informação do ItemView até GenericBagScriptable",
          "6.2. Construindo o InventoryManagerController",
          "6.3. Melhorias e funcionamento parcial do inventário",
          "6.4. Adicionando novos métodos",
          "6.5. Método para instanciar o item em tempo de execução",
          "6.6. Lançando item para futura ação de dropar o item do inventário",
          "6.7. Aprimorando InventoryManagerController",
          "6.8. Configurando propriedade IsDroppable e atalhos customizáveis"
        ],
        "7. Compreendendo MatrixUtility": [
          "7.1. Fundamentos do uso do MatrixUtility",
          "7.2. Incorporando a classe Matrix Utility",
          "7.3. Aprimorando sistema de inventário"
        ],
        "8. Criando InventoryView": [
          "8.1. Funcionamento do InventoryView, ComplexSlotView e SimpleSlotView",
          "8.2. Criando o InventoryView",
          "8.3. Relacionado as variáveis com os gameObjects do InventoryPanel",
          "8.4. Expandido Option e construindo SimpleSlotView e ComplexSlotView",
          "8.5. Aprimorando InventoryView e compreendendo as informações que ele usa",
          "8.6. Construindo e distribuindo slot vazio (SimpleSlotView)",
          "8.7. Funcionamento do item em diferente tamanho de slot (ComplexSlotView)",
          "8.8. Explicando o funcionamento do método BuildComplexSlot"
        ],
        "9. Criando ShortCutView": [
          "9.1. Funcionamento do ShortCutView e outros scripts complementares",
          "9.2. Criando DragBehaviourView",
          "9.3. Criando PointDownBehaviorView",
          "9.4. Expandido Option e o funcionamento visual do inventário",
          "9.5. Criando do DropZoneBehaviourView",
          "9.6. Melhorando DropZoneBehaviourView e InventoryManagerController",
          "9.7. Criando ShortCutView",
          "9.8. Aprimorando funcionalidade na BagScriptable e InventoryManagerController",
          "9.9. Aprimorando ShortCutView e criando DisplayItemBehaviorView",
          "9.10. Funcionalidades na BagScriptable e no InventoryManagerController parte I",
          "9.11. Funcionalidades na BagScriptable e no InventoryManagerController parte II",
          "9.12. Funcionalidades na BagScriptable e no InventoryManagerController parte III",
          "9.13. Funcionalidades na BagScriptable e no InventoryManagerController parte IV",
          "9.14. Aprimorando ShortCutView",
          "9.15. Expandido as funcionalidades do InventoryManagerController",
          "9.16. Construindo DropDeadZoneBahaviorView",
          "9.17. Funcionamento interligado do ShortCutView e o InventoryView"
        ],
        "10. Criando ClothingWeaponView e as regras (filtros)": [
          "10.1. Conceito do ClothingWeaponView e do funcionamento das regras (filtros)",
          "10.2. Criando ItemTypeFilterScriptable e SlotFilterScriptable",
          "10.3. Criando RulerScriptable",
          "10.4. Adicionando as regras na BagScriptable",
          "10.5. Cosntruindo ClothingWeaponView",
          "10.6. Expandido ClothingWeaponView e do InventoryManagerController parte I",
          "10.7. Expandido ClothingWeaponView e do InventoryManagerController parte II",
          "10.8. Adicionando rotação do personagem no ClothingWeaponView",
          "10.9. Inicializando ClothingWeaponView",
          "10.10. Adicionando regras no ClothingWeaponView",
          "10.11. Funcionamento interligado do ClothingWeaponView e o InventoryView"
        ]
      },
      "requirements": [
        "Desejo e Força de vontade em aprender algo novo fora da sua zona de conforto",
        "Paciência e Persistência",
        "Conhecimento fundamental do Unity",
        "Conhecimento fundamental em linguagem C# dentro do Unity",
        "Computador que atenda os requisitos para desenvolver projetos com o Unity",
        "Computador que atenda os requisitos para desenvolver projetos com o Unity e conexão de internet (preferencialmente banda larga)"
      ],
      "description": "Este é um dos primeiros cursos, se não o primeiro curso do Brasil, que vai lhe ensinar a programação do zero para criar um inventário de jogos o qual requer que o item possa ocupar mais de um slot (espaço dentro do inventário). Isso mesmo, a aplicação que iremos construir juntos irá permitir que o item possa ocupar 1, 2, 3, ou até mesmo 6 slots dentro do inventário.\nAlém desse grande diferencial, o qual torna o curso uma raridade no universo de curso on-line, também será mostrado todas as etapas da programação, passo a passo, desde o momento da configuração do item; quando o item é pego; como ele aparece no inventário e a utilização dele.\nOu seja, quando um item é utilizado no sistema de inventário ele realmente transmite um retorno visual. Por exemplo, se jogador consumir uma maça, a barra de vida aumentará, se o jogador utilizar uma poção mágica para ganhar velocidade, o personagem do jogo passará a andar mais rápido, ou até mesmo quando for utilizar uma espada, ele aparecerá armado e seu golpe de ataque mudará.\nVamos fazer uso do começo ao fim do curso o scriptableObject, recurso o qual foi adicionado pela Unity para facilitar a programação de sistemas como esse. Orientação a objeto, classes abstratas, encapsulamento e outros técnicas e recursos como este farão parte das vídeo aulas.\nTodas as lições estarão organizadas em capítulos, no começo de cada um deste, exceto o primeiro que a apresentação e instrução do curso, você terá acesso a uma explicação geral do que será feito (metodologia roadmap) e posteriormente uma explicação mais detalhada (metodologia technical view). E na segunda vídeo aula de cada capítulo que daremos início a programação efetivamente (metodologia hands-on).",
      "target_audience": [
        "Desenvolvedores de jogos",
        "Entusiastas que utilizam o Unity",
        "Alunos de Jogos Digitais",
        "Alunos de Ciência da Computação",
        "Alunos de Sistema de Informação"
      ]
    },
    {
      "title": "Como criar Jogos com o RPG Maker MZ",
      "url": "https://www.udemy.com/course/rpg-maker-mz/",
      "bio": "Uma maneira prática de transformar o sonho em realidade",
      "objectives": [
        "Criar um jogo de rpg do zero",
        "Conceitos de desenvolvimento de jogos",
        "RPG Maker MZ",
        "RPG Maker MV",
        "Criar jogos",
        "Desenvolvimento de games",
        "Game Design",
        "Lógica de programação",
        "Balanceamento de game",
        "Criação de enredo"
      ],
      "course_content": {
        "Introdução": [
          "Boas vindas!",
          "O que é RPG",
          "Expectativas e frustações",
          "Como aproveitar melhor o curso",
          "Áreas do desenvolvimento de games",
          "Onde adquirir o RPG Maker",
          "Softwares complementares"
        ],
        "Começando um projeto": [
          "Criando o primeiro projeto",
          "Arquivos do Projeto",
          "Imagens do sistema",
          "O que é RTP.",
          "Adicionando Recursos extras ao projeto",
          "A gameplay do RPG Maker",
          "Comandos e atalhos",
          "Ferramentas",
          "Gerador de Personagens",
          "Crie 4 personagens com o Gerador de Personagens"
        ],
        "Mapeamento": [
          "Hierarquia de Mapas",
          "Propriedades dos Mapas",
          "Opções do Mapeamento",
          "Introdução ao Parallaxe (conceito)",
          "Encontro Aleatório",
          "Entradas e Saídas (GameDesign)",
          "Criando Perspectiva no mapeamento",
          "Plantando as primeiras árvores"
        ],
        "Eventos - Introdução básica": [
          "Teleporte e Posição do Ator",
          "Portas",
          "Tesouros e Pousadas",
          "Veículos"
        ],
        "Banco de Dados": [
          "Introdução do Banco de Dados",
          "Personagens - Configuração",
          "Configurando os personagens.",
          "Atributos - Taxas",
          "Criando Atributos 1 - Taxas",
          "Atributos - Parâmetros",
          "Criando Atributos 2 - Parâmetros",
          "Atributos - Ataque",
          "Criando Atributos 3 - Ataque",
          "Atributos - Habilidade",
          "Criando Atributos 4 - Habilidade",
          "Atributos - Equipamento",
          "Criando Atributos 5 - Equipamento",
          "Atributo - Outros",
          "Criando Atributos 6 - Outros",
          "Classes - Curva de Experiência",
          "Classes - Curvas de Parâmetros",
          "Classes - Habilidades por nível",
          "Criando sua própria Classe!",
          "Habilidades - Configurações gerais",
          "Habilidades - Fórmula de Dano",
          "Efeitos - Recuperar",
          "Efeitos - Status",
          "Efeito - Parâmetros",
          "Efeitos - Outros",
          "Sua própria Habilidade!",
          "Itens - Configurações gerais",
          "Recuperando as Energias",
          "Armas e Equipamentos - Configurando",
          "Lâmina de Fogo",
          "Inimigos - Configurações Gerais",
          "Inimigos - Padrões de Ataque",
          "Um monstro selvagem apareceu!",
          "Tropas - Configurações Gerais",
          "Estados - Configurações Gerais",
          "Animações - Configurações Gerais",
          "Tilesets - Imagens",
          "Tilesets - Colisões",
          "Tilesets - Terrenos e balcões",
          "Sistema 1 - Jogo e tela de título",
          "Sistema 1 - Tela de batalha e outras opções",
          "Sistema 2",
          "Tipos e termos"
        ],
        "Eventos - Aba 01": [
          "Introdução a lógica da programação",
          "Variáveis",
          "Visão geral dos eventos",
          "Condições de execução do evento",
          "Páginas dos eventos",
          "Imagem dos eventos",
          "Movimento dos eventos",
          "Opções dos eventos",
          "Prioridades e ativação dos eventos",
          "Eventos - Switchs",
          "Switchs Automáticas",
          "Como encerrar um evento",
          "Controle de Variáveis - Parte 1",
          "Controle de Variáveis - Parte 2",
          "Controle de Variáveis - Parte 3",
          "Cronômetro",
          "Condições",
          "Mensagens - Introdução",
          "Mensagens - Tags parte 1",
          "Mensagens - Tags parte 2",
          "Mensagens - Tags parte 3",
          "Mensagens - Tags parte 4 (att 1.3.0)",
          "Mensagens - Escolhas",
          "Inserir Número",
          "Inserir Itens",
          "Texto Rolante",
          "Ciclo e quebra de Ciclo",
          "Fim de execução de Evento",
          "Marcadores",
          "Eventos Comuns",
          "Inserir Moedas",
          "Inserir Itens, armas e equipamentos",
          "Remover Itens",
          "Adicionar Membros",
          "Remover Membros",
          "Recuperação de PV, PM e PT",
          "Recuperação de Status",
          "Aumento de XP e Nível",
          "Aumentar Parâmetros",
          "Aprender Habilidades",
          "Equipar Itens por evento",
          "Alterar Nome e Alcunha",
          "Alterar Classe e Perfil"
        ],
        "Exercícios - Eventos Página 1": [
          "Diversos tipos de portas",
          "Porta com senha numérica",
          "Quest de conversar com NPC",
          "Puzzle de posicionar Itens",
          "Puzzle sequência de alavancas",
          "Quest coletando itens",
          "Lojinha simples por eventos",
          "Banco - Armazenando dinheiro",
          "Controle universal de tempo",
          "Sistema de plantação simples"
        ],
        "Eventos - Aba 02": [
          "Teleportar Jogador",
          "Definir Posição do Veículo",
          "Entrar e sair do Veículo",
          "Definir Posição do Evento",
          "Deslocamento do Mapa",
          "Definir Rota de Movimento |01|",
          "Definir Rota de Movimento |02|",
          "Definir Rota de Movimento |03|",
          "Invisibilidade",
          "Controle do Grupo",
          "Mostrar Animação",
          "Balão de expressão",
          "Apagar evento (revisão)",
          "Exibir Imagem",
          "Mover Imagem",
          "Girar Imagem",
          "Tonalidade da Imagem",
          "Apagar Imagem",
          "Fade-out / Fade-in da tela",
          "Tonalidade da tela",
          "Flash da tela e Tremer",
          "Reproduzir BGM",
          "Reproduzir Sons",
          "Reproduzir Vídeo"
        ],
        "Exercícios - Eventos página 2": [
          "Dungeon aleatória",
          "Pequena Cutscene",
          "Roleta"
        ],
        "Eventos - Aba 03": [
          "Configuração de Batalha",
          "Configuração de Loja",
          "Inserir Nome do Personagem",
          "Abrir Menu",
          "Abrir Tela de Salvamento",
          "Sair e Fim de jogo"
        ]
      },
      "requirements": [
        "Acesso a um computador",
        "Possuir o RPG Maker MV ou MZ",
        "Não é necessário nenhum conhecimento prévio."
      ],
      "description": "Curso focado na criação de jogos de RPG na engine RPG Maker.\nVocê vai aprender a cria um jogo de RPG complexo, entendendo como deixar o combate por turnos divertido e expandir a gameplay que muitos consideram tediosa. Além de ganhar conhecimento suficiente para ingressar de fez no mundo do desenvolvimento de jogos.\n\n\nDurante o curso, iremos aprender:\n\n\n♦ Entender o funcionamento do RPG Maker;\n♦ Conhecer a comunidade Maker;\n♦ Aprender noções básicas de Game Design;\n♦ Entender sobre os aspectos psicológicos envolvidos no game design;\n♦ Criar personagens a partir do gerador de personagens;\n♦ O que são eventos e como controlar cada aspecto de cada um deles;\n♦ Aprender a criar mapas interessantes;\n♦ Gerenciar todo o Banco de Dados do RPG Maker;\n♦ Criar enredos envolventes e criativos;\n♦ Estruturar e organizar um projeto e toda a sua documentação;\n♦ Ir a fundo no rpg maker aprendendo como criar os eventos a partir do código interno;\n♦ Compreender o básico de javascript para criar eventos muito mais complexos e divertidos\n♦ Criar eventos complexos, como menus, sistemas de craft, dentre outros;\n♦ Criar um projeto do zero, desde sua idealização;\n♦ Aprender o básico das ferramentas de edição de imagens;\n♦ Aprender a fazer animações para o RPG Maker MZ;\n♦ Exportar seu jogo para windows, mac, android e IOS;\n♦ Diversos exercícios para fixar o conteúdo;\n♦ Desenvolver seu primeiro plugin;\n♦ Compreender como os códigos do RPG Maker funcionam;\n♦ Conhecer métodos de criação de enredos.",
      "target_audience": [
        "Desenvolvedores de jogos",
        "iniciantes na área de criação de jogos",
        "Aspirantes a gamedev",
        "gamedevs",
        "Curiosos sobre o desenvolvimento de games"
      ]
    },
    {
      "title": "Learn to create a 2D Racing car game for FREE PART 10.",
      "url": "https://www.udemy.com/course/learn-to-create-a-2d-racing-car-game-for-free-part-10/",
      "bio": "Learn how to create a cool 2D top down racing car game with the unity game engine.",
      "objectives": [],
      "course_content": {
        "Adding the final touches to the game.": [
          "Ramming AI cars off road.",
          "Adding collision sound to cars.",
          "Making loading screen with animation.",
          "Adding the loading screen to each track."
        ],
        "The End.": [
          "Building our game."
        ]
      },
      "requirements": [
        "You will need to download unity and visual studio which is free and then be willing to learn game design.",
        "Basic understanding of the C# language and Unity."
      ],
      "description": "THIS COURSE WILL BE UPLOADED IN PARTS DUE TO VIDEO TIME RESTRICTIONS.\n\n\nIn my course we will start at the bottom and work our way up to advanced game design like AI path finding, we will be creating a car controller and many features with in our game.\nThis course is designed for beginner level and up as i will explain everything in best detail as i can, at the end of the course we will have made a racing car game like micro machines which in the 1980's was an amazing car game.\nIn this part of the course you will learn\nRamming AI cars of the road\nAdding collision sound to cars\nAdding a loading screen\nAttaching loading screen to each track",
      "target_audience": [
        "Students that want to learn to be a game designer."
      ]
    },
    {
      "title": "Godot 4+ | Masterize o Desenvolvimento de Jogos 2D (2024)",
      "url": "https://www.udemy.com/course/godot-4-masterize-o-desenvolvimento-de-jogos-2d-2024/",
      "bio": "O incentivo que você precisava para criar jogos incríveis na GODOT.",
      "objectives": [
        "Godot 2D.",
        "Criar um COMPLETO jogo de plataforma.",
        "Melhores praticas para criar/aperfeiçoar o desenvolvimento de jogos.",
        "GDScript, linguagem de programação nativa utilizada para criar códigos na GODOT.",
        "Utilizar diversos objetos na GODOT, classificados por cores: Azul (2D), Verde (Interface), Branco/Preto (Interface com Profundidade), Roxo (Animações)."
      ],
      "course_content": {},
      "requirements": [
        "Não é necessário ter experiência com programação, o curso é bem intuitivo!",
        "Para o renderizador mais simples, um computador com placa de vídeo HD Graphics.",
        "Para o renderizador mais potente, um computador com placa de vídeo da NVIDIA ou AMD."
      ],
      "description": "Masterize o Desenvolvimento de Jogos 2D\n\n\nO curso tem forte foco no desenvolvimento de jogos 2D, Treasure Hunters, o jogo que iremos desenvolver durante o curso se passa em uma ilha, onde você, Capitão nariz de pirata, precisa explorar todo o ambiente, mas não ache que isso será uma tarefa fácil, pois você precisará passar por diversos níveis, cada um contendo desafios únicos. Desafios esses como:\n\n\n3 inimigos mortais (Estrela do mar, Caranguejo, Tubarão).\n3 Armadilhas mortais (Canhão, Ostra, Totem de Madeira).\n\n\nOnde as armadilhas disparam projéteis (Bola de canhão, Pérola, Pedaços de Madeira) que causam dano ao Capitão nariz de pirata. Além de desafios únicos, a ilha também conta com diversos tesouros:\n\n\nPoções.\nGemas e Moedas.\nMapas do Tesouro.\n\n\nSistemas incríveis, como um inventário e um menu de opções único do jogo, diversos efeitos visuais e sonoros, sistema de salvar e carregar (Save), sistema de atributos e MUITO MAIS!\n\n\nNesse curso de Godot + GDScript você aprenderá fundamentos de programação e do GDScript, tais como:\n\n\nFunções no geral.\nExport/Onready vars.\nSignals (Callback da Godot).\nLógica de Programação (For, if, while, var etc).\nGrupos (Comunicação entre Objetos de forma simples e rápida).\nObjetos de Animação, representados pela cor Roxa (AnimationPlayer).\nObjetos do tipo Control/Controle, representados pela cor Verde (Objetos de Interface).\nObjetos do tipo 2D, representados pela cor Azul (CharacterBody2D, CollisionShape2D, Sprite2D, Camera2D).\nObjetos do tipo Canvas/Parallax Layer, representados pela cor Branca/Preta/Cinza (Objetos de Interface com profundidade).\nE MUITO MAIS!\n\n\nPorque aprender Godot e GDScript?\n\n\nA Godot Game Engine está entre os Motores de Jogos mais populares, poderosos e flexíveis para o Desenvolvimento de Jogos e Aplicativos em 2024, com sua nova versão 4.0+, ela conta com um poderoso renderizador, o Vulkan, além de diversas outras melhorias, como um código mais performático e comercial. A Godot também conta com a linguagem de programação nativa, o GDScript, ou seja, você consegue programar diretamente de dentro da Engine, sem a necessidade de um programa externo para fazer a integração do código com o projeto.\n\n\nAlém de todos os benefícios, a Godot é open source, ou seja, de código aberto! Você consegue acessar todo o código fonte da Engine diretamente pelo GitHub, além disso, ela é livre de Royalties, então se você quiser comercializar qualquer jogo desenvolvido por você utilizando a Engine, você tem direito, podendo ficar com 100% dos lucros, sem precisar criar uma conta ou assinar algum tipo de contrato com a Engine!\n\n\nVocê está pronto para aprender?",
      "target_audience": [
        "Pessoas com vontade de aprender!",
        "Iniciantes que desejam começar a criar os seus próprios jogos!",
        "Desenvolvedores que querem aperfeiçoar o desenvolvimento de jogos!",
        "Programadores que sempre tiveram a curiosidade sobre o desenvolvimento de jogos e querem uma trilha sobre o que fazer para começar!"
      ]
    },
    {
      "title": "Curso de Jogos Multiplayer Online: Unity + Photon 2 (2020)",
      "url": "https://www.udemy.com/course/curso-de-jogos-multiplayer-online-unity-photon-2/",
      "bio": "O 1º Curso voltado para a criação de jogos Multiplayer com Unity3D e Photon2! Servidores no mundo todo, inclusive no BR!",
      "objectives": [
        "Criar Jogos Multiplayer, utilizando da Plataforma Unity3D com Photon;",
        "Adaptar jogos existentes para Multiplayer Online;",
        "Criar lógicas e rotinas para serem utilizadas em ambiente Multiplayer Online;",
        "Configurar o Servidor da Photon;"
      ],
      "course_content": {},
      "requirements": [
        "Possuir um Computador capaz de rodar a plataforma Unity3D;",
        "Possuir a plataforma Unity3D instalada em seu Computador;",
        "Possuir uma conexão com a Internet;",
        "Recomendável possuir noções básicas da plataforma Unity3D;",
        "Recomendável possuir noções básicas da linguagem C#;"
      ],
      "description": "O 1º Curso voltado para a criação de Jogos Multiplayer Online com Unity3D e Photon 2 (11 servidores espalhados pelo Mundo, inclusive no Brasil). Você não precisa se preocupar com servidores para criar seu jogo, deixa a Photon fazer isso para você!\n\n\nA nova versão do Photon em primeira mão e INÉDITO, destrinchada e detalhada para você em um só lugar!\n\n\nOutros Instrutores já estão usando o nosso Curso como base para aprenderem e falarem sobre o Photon 2 também!!!\nFicamos muito felizes em ver o conhecimento sendo expandido em nosso país!!\n\n\nInscreva-se agora e torne-se um desenvolvedor mestre de Jogos Multiplayer Online!\n\n\nAprenda a planejar, projetar e criar seus jogos em Multiplayer Online com Unity Game Engine + Photon Engine 2.\nTenha jogadores do mundo todo jogando Online, 24 horas por dia.\nEste é um curso que eu gostaria de ter quando comecei a aprender o desenvolvimento de jogos.\nNo Brasil existe pouca informação sobre a criação de jogos com Photon, ainda mais agora que temos o Photon 2. As informações são muito espalhadas e não são muito aprofundadas.\nPor essa razão, decidi criar um Curso de Desenvolvimento de Jogos, porém, focado em Multiplayer Online. Onde eu reuni toda a informação, experiência e conhecimento em um único lugar.",
      "target_audience": [
        "Iniciantes ou profissionais que queiram Criar Jogos em ambiente Multiplayer Online;"
      ]
    },
    {
      "title": "【Unity C# ゲーム開発超入門】7つのミニゲームを作っておぼえる！UnityとC#講座",
      "url": "https://www.udemy.com/course/ild-unity-777game/",
      "bio": "ここからはじめよう！Unityゲーム開発の一歩を踏み出そう。7つのミニゲーム制作を通してUnityの基礎を学びましょう！",
      "objectives": [
        "ゲーム開発に必要な思考方法",
        "ゲーム制作のためのC#基礎",
        "さまざまなゲーム制作に応用できる開発力",
        "unity3Dの物理挙動",
        "unity2Dの物理挙動",
        "15パズル開発",
        "的当てゲーム開発",
        "フラッピーバード風ゲーム開発",
        "ストップウォッチゲーム開発",
        "簡単な処理のミニゲーム化",
        "3Dモデルのアニメーション"
      ],
      "course_content": {
        "紹介": [
          "コース紹介",
          "Q&Aガイドライン"
        ],
        "UnityHubインストールと設定": [
          "はじめに",
          "UnityHub+Unityインストール",
          "Unityインストール（うまくいかない時）",
          "Unityの初期設定",
          "ビューの役割"
        ],
        "Unity基礎知識": [
          "Unityの使い方と仕組み①",
          "Unityの使い方と仕組み②",
          "オブジェクトとスクリプトの関係",
          "オブジェクトとコンポーネントの関係",
          "Buttonオブジェクトの操作",
          "Textオブジェクトの操作",
          "別オブジェクトのコンポーネントを取得",
          "当たり判定（コライダー）の操作",
          "Prefabの操作",
          "シーン作成と遷移",
          "その他のテクニック"
        ],
        "C#基礎知識": [
          "前提知識とコメントとログ",
          "よく使う型と変数",
          "変数の生存期間",
          "変数の代入（型キャスト）",
          "const(定数)",
          "enum(列挙型)",
          "コンソールログの使い方",
          "演算と演算子",
          "比較演算子",
          "if文",
          "switch文",
          "for文",
          "while文",
          "配列",
          "2次元配列",
          "List",
          "Listの応用",
          "Dictionary",
          "foreachと配列まとめ",
          "関数入門①",
          "関数入門②",
          "クラス入門①作成",
          "クラス入門②コンストラクタとpublic",
          "スクリプトからコンポーネントへアクセス",
          "自作クラスへのアクセス方法",
          "アクセスレベルについて",
          "3と5の倍数で文字を表示する",
          "AudioSource(サウンド)の操作①",
          "AudioSource(サウンド)の操作②"
        ],
        "【ステップ1】的当てゲーム": [
          "【レクチャー1】プロジェクトと3Dオブジェクト作成",
          "【レクチャー2】的と弾の作成(BulletController)",
          "【レクチャー3】弾を大量に発射する"
        ],
        "【ステップ2】スポッとゲーム": [
          "【レクチャー1】スポッとゲーム",
          "【レクチャー2】スポッとゲーム",
          "【レクチャー3】スポッとゲーム"
        ],
        "【ステップ3】ストップウォッチゲーム": [
          "【レクチャー1】ストップウォッチゲーム",
          "【レクチャー2】ストップウォッチゲーム",
          "【レクチャー3】ストップウォッチゲーム"
        ],
        "【ステップ4】ぎりぎりストップゲーム（2Dゲーム）": [
          "【レクチャー1】ぎりぎりストップゲーム（2Dゲーム）",
          "【レクチャー2】ぎりぎりストップゲーム（2Dゲーム）",
          "【レクチャー3】ぎりぎりストップゲーム（2Dゲーム）",
          "【レクチャー4】ぎりぎりストップゲーム（2Dゲーム）"
        ],
        "【ステップ5】フラッピードッグゲーム（2Dゲーム）": [
          "【レクチャー1】フラッピードッグゲーム（2Dゲーム）",
          "【レクチャー2】フラッピードッグゲーム（2Dゲーム）",
          "【レクチャー3】フラッピードッグゲーム（2Dゲーム）",
          "【レクチャー4】フラッピードッグゲーム（2Dゲーム）",
          "【レクチャー5】フラッピードッグゲーム（2Dゲーム）",
          "【レクチャー6】フラッピードッグゲーム（2Dゲーム）"
        ],
        "【ステップ6】15パズルゲーム（2Dゲーム）": [
          "【レクチャー1】15パズルゲーム（2Dゲーム）",
          "【レクチャー2】15パズルゲーム（2Dゲーム）",
          "【レクチャー3】15パズルゲーム（2Dゲーム）",
          "【レクチャー4】15パズルゲーム（2Dゲーム）",
          "【レクチャー5】15パズルゲーム（2Dゲーム）",
          "【レクチャー6】CLEAR!表示バグ修正"
        ]
      },
      "requirements": [
        "パソコンの基本的な操作",
        "キーボード操作",
        "ゲームが好きな気持ち"
      ],
      "description": "思い通りのゲームを作るためにはC#は必須のスキルになりますが、敷居が高そうに感じますよね。\nこの講座では、1レクチャーを10分程度にまとめて全てハンズオン形式となっています。\n毎日少しづつでも、動画でやっていることを真似するだけでもOKなので、効率的に学習できる内容となっております。\n\n\n7つのミニゲーム制作を通してUnityとC#の基礎を習得できます！\nゲームロジックを実装して、幅広いゲーム開発の知識を手に入れよう！\n入門クラス/初心者クラス向けのコースです。\n\n\nこちらのコースではUnityでゲームを作るために必要な\nUnityの基礎知識\nC#の基礎知識\nゲームの実装方法\nが効率的に学習できます。\nなるべくスクリプト（プログラミング）を利用して制作していくので\n今回の7つだけに限らず、アイデア次第で自由にゲームを制作する知識も身につきます。\n\n\nまた、私のコースは日々頂いたレビューに対応しアップデートを行なっています。",
      "target_audience": [
        "Unity入門",
        "Unityを触ったことがある",
        "ゲームを作りたい初心者の方",
        "ボードゲームの作り方に興味がある方",
        "汎用的なゲームの作り方を知りたい方",
        "Unityインストール済の方",
        "C#でゲームを作りたい方"
      ]
    },
    {
      "title": "INICIANTE Desenvolvimento de Jogos! Rápido, Fácil e Direto.",
      "url": "https://www.udemy.com/course/criandoumjogocomunity/",
      "bio": "Curso completo que te ensinará a criar jogos de forma rápida, clara e objetiva. Faça jogos com Unity!",
      "objectives": [
        "Programação descomplicada em C#",
        "Sistema de Combos de Ataques",
        "Construção de Cenários 2D da forma correta",
        "Desenvolver um jogo do zero à sua finalização",
        "Dominar o básico do motor de jogo Unity",
        "Mecânicas de Jogo",
        "Personagem Principal- Animações e Lógica",
        "Inimigos - Animações e Lógica",
        "Decorar Cenários para Ambientes mais Imersivos",
        "Coletar ítens e informar no HUD",
        "Iluminação de Cenários( Tochas, Velas, Candelabros)",
        "Iluminação visando Desempenho",
        "Menus de Pausa, Game Over, Principal e Fim de Jogo",
        "Como criar mais imersão com Áudios 3D",
        "Efeitos Sonoros para Personagens, Inimigos e Objetos",
        "Armadilhas para Cenário",
        "Animações Para Personagem, Coletáveis, Portas, Armadilhas e Inimigos",
        "Gerar Executável do Jogo"
      ],
      "course_content": {
        "Instalação e Arquivos Do Jogo": [
          "Instalação + Arquivo 2DPack + Ebook Exclusivo"
        ],
        "Desenvolvimento": [
          "Criando Todas Animações do Personagem",
          "Estrutura de um Personagem",
          "Movimentação Básica do Personagem",
          "Pulo do Personagem Parte 1",
          "Pulo do Personagem Parte 2 - 2021",
          "Animator",
          "Espelhamento de Sprite e Combo",
          "Morte do Personagem",
          "Dash do Personagem",
          "Matando o Inimigo",
          "Keeper, o Primeiro Inimigo",
          "Ghost, o Segundo Inimigo",
          "Bat, o Terceiro Inimigo",
          "BearTrap, a Primeira Armadilha",
          "SpikeTrap1, a Segunda Armadilha",
          "FireTrap, a Terceira Armadilha",
          "SpikeTrap2, a Quarta Armadilha",
          "Prefabs, Conceito Básico",
          "Cenário ( Sorting Layer e Tilemap )",
          "Cenário ( Player, Camera e Material Físico )",
          "Cenário, Fazendo a Decoração",
          "Ajuste 1, Morcego e Fantasma",
          "Player, Feedback de Dano",
          "Ajuste 2, Decoração, Inimigos e Camera",
          "HUD",
          "Adicionando Vidas",
          "Ajuste 3, Cores e Luz Fake",
          "Porta e Resolvendo Rachaduras no Tile",
          "Carregando Nova Cena e Ajustes 4",
          "Solucionando pequeno Erro do Console e Colocando Áudio no Player",
          "Áudio ( Geral, Personagem, Keeper e Bat )",
          "Áudio ( Ghost e Armadilhas )",
          "Menu, Pause e GameOver",
          "Cenários e Orientações",
          "Ajustes 5 . Preparação para o Boss ( BearTrap, Dash ... )",
          "Cenário do Chefão",
          "Mecânica do Mapa do Chefão",
          "BossBrain",
          "Fim de Jogo",
          "Audio Boss e Itens, Camera",
          "Exportando Projeto"
        ]
      },
      "requirements": [
        "Ter um computador que consiga executar aplicações gráficas simples"
      ],
      "description": "Eu te ensinarei de forma rápida, clara e objetiva a criar seus próprios jogos!\nVocê aprenderá Animação, Programação, Sonoplastia, Level Design,\nalém de boas práticas na criação de personagens, cenários e iluminação!\nConstruiremos um jogo completo, e no final do curso você terá capacidade de criar seus próprios jogos.\nO curso tem como objetivo ensinar o aluno a desenvolver um jogo completo, além de capacitá-lo a pensar e desenvolver como um verdadeiro profissional, saindo da esfera de conceitos e achismos para um meio de informações sobre Desenvolvimento de Jogos.\n“Estou aqui para te ensinar a criar jogos! O foco do meu curso é te passar conhecimento suficiente para você ter uma boa base de desenvolvimento de jogos na Unity, a plataforma mais difundida e versátil que existe, e ter autonomia para criar seus próprios games”",
      "target_audience": [
        "Qualquer pessoa que tenha interesse na área"
      ]
    },
    {
      "title": "Tradução de Games: Como Adaptar e Localizar Jogos",
      "url": "https://www.udemy.com/course/traducao-de-games-como-adaptar-e-localizar-jogos/",
      "bio": "Aprenda tudo sobre tradução de games: Como traduzir,adaptar e localizar games para mercados internacionais!",
      "objectives": [
        "Conheça os elementos básicos da tradução profissional.",
        "Entenda as diferenças entre tradução e localização.",
        "Aprenda o que são CAT Tools e para que servem.",
        "Desenvolva técnicas para localização de jogos."
      ],
      "course_content": {
        "Introdução": [
          "Uma breve introdução à tradução de games",
          "Conceitos básicos da tradução de games",
          "Material Complementar: Nielsen Games Report"
        ],
        "Entendendo e interpretando a linguagem dos games": [
          "As principais diferenças entre jogos e outras mídias",
          "Entendendo o público de games",
          "Narrativa, interação e jogabilidade",
          "Material Complementar: Segundo censo da indústria de brasileira de games"
        ],
        "A importância do Game Design": [
          "Estruturas de jogos e a visão do game designer",
          "Regras de Game Design I",
          "Regras de Game Design II",
          "Interface e experiência do jogador",
          "Material Complementar: Pesquisa Game Brasil"
        ],
        "Mercado e oportunidades": [
          "Mercado de tradução de games",
          "CAT Tools",
          "Dinâmicas da indústria de games",
          "Oportunidades na indústria de games: Consoles, Mobile e PC"
        ],
        "Conclusão": [
          "Material Complementar: Vídeos apresentados durante o curso",
          "Conclusão e Agradecimentos"
        ],
        "Conteúdo bônus": [
          "Aula bônus - Participação no PROFT 2022 - Desafios da localização de games"
        ]
      },
      "requirements": [
        "Saber o básico de qualquer idioma além do português.",
        "Ter interesse em games de alguma forma, mesmo que simplesmente como observador."
      ],
      "description": "*CURSO EM FORMATO PALESTRA, GRAVADO EM ESTÚDIO COM INTERAÇÃO DO PÚBLICO\"\nQuem desconhece o processo de tradução de games, quase sempre trata o tradutor como mero conhecedor de dois ou mais idiomas. Traduzir vai além disso. Há um famoso jogo de palavras em italiano que diz “Traduttore, traditore” (em português, “Tradutor, traidor”), já que todo tradutor tem que “trair” o texto original para conseguir reescrevê-lo na língua desejada.\n\nA tradução de games vai além das definições comuns. Ela deve permitir que o jogador ou usuário final encontre a mesma experiência proposta no idioma original (seja qual língua for), mas agora em uma nova língua, seja ela o português ou o cirílico.",
      "target_audience": [
        "Interessados em aprender como funciona o processo de tradução, localização e adaptação de games para mercados globais.",
        "Tradutores profissionais em busca de diversificar suas áreas de atuação.",
        "Membros de equipes de desenvolvimento ou profissionais autônomos que precisam adaptar jogos para o mercado internacional."
      ]
    },
    {
      "title": "Master Unreal Engine 4 Desarrollo Videojuegos con Blueprints",
      "url": "https://www.udemy.com/course/master-en-creacion-de-videojuegos-aaa-con-unreal-engine/",
      "bio": "Aprende a crear Videojuegos AAA DESDE CERO, desarrollo y programación completo con Blueprints y Unreal Engine 4 para PC",
      "objectives": [
        "Aprenderás desde cero a dominar a Unreal Engine 4 y Blueprints",
        "Harás prácticas en todas las secciones y el proyecto final será la creación de tu propio videojuego AAA.",
        "Crearás prototipos 3D con geometría nativa BSP y Mallas estáticas 3D.",
        "Aprenderás iluminación y el correcto uso de materiales.",
        "Estudiaremos el uso de Blueprints desde cero hasta llegar a nivel avanzado.",
        "Aprenderás a utilizar Terrenos, Audio, UMG UI y Colisiones Físicas a nivel profesional."
      ],
      "course_content": {
        "Introducción y herramientas del Master": [
          "Presentación de todo el Curso",
          "Únete a la comunidad de Discord de Master Devs",
          "Instructor Mariano Rivas",
          "Uso del curso y de la plataforma Udemy"
        ],
        "Instalación de Unreal Engine": [
          "Instalación de Unreal Engine 4",
          "Epic Games Launcher"
        ],
        "Interfaz del Editor Unreal Engine": [
          "Creación de Proyectos",
          "Interfaz de Unreal Engine",
          "Preferencias de Editor",
          "Navegación en Viewport",
          "Agregar elementos en Viewport",
          "Transformar elementos en ViewPort",
          "Transformaciones globales y locales",
          "Grupos y jerarquías",
          "Configuración y filtros de Viewport",
          "Content Browser"
        ],
        "Geometría BSP y Mallas 3D, Creación de Nivel 3D": [
          "Edición de Geometría BSP",
          "Unidades de medición en Unreal",
          "Finalizando Estructura de Nivel 3D",
          "Creación de Marcos y ventanas de Nivel 3D",
          "Creando Pilares de Paredes y Techos",
          "Organización del Proyecto",
          "Colocando Props y Static Meshes"
        ],
        "Iluminación en Unreal Engine": [
          "Preparación del Entorno para iluminación",
          "Luces puntuales - Point Lights",
          "Luces de Spot - Spot Light",
          "Luces direccionales - Directional Lights",
          "Luces de Cielo - Skylights",
          "Construcción de Lightmaps",
          "Opciones de luces Static, Stationary y Movable",
          "Ajuste de Resolución de mapas en BSP vs Static Meshes",
          "Parámetros avanzados"
        ],
        "Práctica de Luces: Iluminando un Nivel": [
          "Creación de Bookmarks",
          "Ajuste de Shadow maps Resolution",
          "Posicionando Luces Spot",
          "Posicionando Luces Puntuales",
          "Creando Luces exteriores",
          "Colocando Materiales"
        ],
        "Actores": [
          "Actor Static Meshes",
          "Actor Brushes BSP",
          "Actor Materials",
          "Actor Atmosferic Fog",
          "Actor Player start",
          "Componentes de Actores",
          "Actores Volumes"
        ],
        "Introducción a Blueprints: Variables": [
          "Interface de Blueprints",
          "Orden de ejecución",
          "Variables Números Enteros",
          "Variables Números Decimales",
          "Variables Strings",
          "Variables Vector",
          "Variables Booleanas"
        ],
        "Blueprints: Estructuras de control": [
          "Branch (If then Else)",
          "For Loop",
          "Organización y agrupación de Nodos",
          "Arrays",
          "For each",
          "Switch case",
          "Tipos de Nodos",
          "Funciones, eventos y macros",
          "Funciones Input y Output",
          "Accediendo a Actores de Nivel con Blueprints",
          "Creación de Clases De Actores con Blueprints",
          "Timelines 1/2",
          "Timelines 2/2"
        ],
        "Blueprints: Práctica de Sección": [
          "Introducción",
          "Preparando entorno de trabajo",
          "Modelando la base del nivel",
          "Modelando el interior del nivel 1/2",
          "Modelando el interior del nivel 2/2",
          "Creando clase Blueprint StaticMesh Plataforma",
          "Configurando Blueprints De Plataforma",
          "Creando Clase Blueprint StaticMesh Enemigo",
          "Configurando Blueprint Enemigo",
          "Modelando Fin De Nivel y Colocando mas Enemigos",
          "Abriendo Puerta Fin de Nivel Con Blueprints"
        ]
      },
      "requirements": [
        "NO se requieren conocimientos previos de programación, 3D ni animación.",
        "PC with Windows 7/8/10, x64 OR - a Mac with Mac OS X 10.9.2 o superior.",
        "8GB of RAM and Quad-core Intel or AMD processor (recomendado).",
        "DirectX 11 compatible video card y unos 15GB de espacio en disco"
      ],
      "description": "¡YA ESTA PUBLICADO EL PROYECTO FINAL VIDEOJUEGO AAA!\nEn este Master estudiaremos en profundidad y desde cero todas las herramientas que nos provee Unreal Ungine para la creación de videojuegos profesionales y de calidad AAA.\n\n¡Pondremos en práctica todo lo aprendido en cada sección!\nEstaremos creando como proyecto final del Master  un videojuego profesional AAA para PC que te servirá como portfolio para demostrar que dominas Unreal Engine a nivel avanzado.\nEmpezaremos estudiando la interfaz, su estructura y las diferentes opciones para desarrollar proyectos.\nSeguiremos trabajando con la edición de geometrías nativas Bsp, Mallas 3d y como primera práctica crearemos un nivel 3d desde cero.\nEstudiaremos los diferentes tipos de luces que se usan para interiores y exteriores a tiempo real y con mapas de iluminación y pondremos en práctica todo lo aprendido.\nProfundizaremos en los diferentes tipo de actores y su correcta implementación.\nContinuaremos con el estudio de Blueprints desde nivel básico a avanzado.\nEstudiaremos variables, estructuras de control, tipos de clases , players, Inputs y pondremos en práctica lo aprendido con ejemplos y mecánicas de juego.\nAprenderemos a usar el módulo UMG Ui para la creación de interfaces y desarrollaremos un menú para smartphones, adaptable a todas las pantallas, como práctica de sección.\nProfundizaremos en Materiales, Audio, Colisiones, Terrenos, plantas y como siempre pondremos en práctica todo lo aprendido en cada sección.",
      "target_audience": [
        "Para todos los que deseen aprender a crear videojuegos indie y AAA con Unreal Engine a nivel profesional",
        "Diseñadores o programadores que quieran conseguir trabajo en el sector de los videojuegos o mercado interactivo",
        "Todos los que quieran crear videojuegos de calidad AAA y crear un portfolio profesional con un tu Videojuego AAA publicado"
      ]
    },
    {
      "title": "Curso de Scratch Crianças (de qualquer idade)",
      "url": "https://www.udemy.com/course/curso-de-scratch/",
      "bio": "Aprenda como programar usando blocos com o Scratch que é uma ferramenta online e gratuita do MIT.",
      "objectives": [
        "Criar jogos e animações simples no Scratch",
        "Remixar jogos e animações de outras pessoas",
        "Compreender lógica de programação e eixos cartesianos"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Escolhendo e criando atores",
          "Gatinho Dançante",
          "Minhas criações e Estúdios - Mantenha o Scratch organizado"
        ],
        "Criando animações divertidas": [
          "Como usar Atores e Fantasias no Scratch",
          "Seu perfil no Scratch - Divulgue seus projetos para o mundo"
        ],
        "Mate o Coronavírus": [
          "Mate o Coronavírus REMIXando o Fish Chomp",
          "Mate o Coronavírus - Trocando o ator principal e o cenário"
        ],
        "Para pais/mães e educadores": [
          "Conheça Mitchel Resnik - criador do Scratch"
        ]
      },
      "requirements": [
        "Curiosidade em descobrir formas divertidas para aprender."
      ],
      "description": "O Scratch é uma ferramenta online e gratuita (com versão desktop) que permite criar jogos e animações através de blocos. Mais do que um jogo, o Scratch é uma poderosa ferramenta de aprendizagem criativa na qual a criança aprende através de seus próprios projetos e desafios.\nAprender a programar com o Scratch é como descobrir um novo MUNDO DE POSSIBILIDADES.",
      "target_audience": [
        "Crianças de 6 a 14 anos",
        "Pais e mães que querem proporcionar uma forma divertida de aprendizado para seus filhos(as)"
      ]
    },
    {
      "title": "Desenvolvimento de Jogos: IA de Xadrez em Unity",
      "url": "https://www.udemy.com/course/desenvolvimento-de-jogos-ia-de-xadrez-em-unity/",
      "bio": "Aprenda a programar na Unity uma Inteligência Artificial capaz de jogar xadrez",
      "objectives": [
        "Você aprenderá a utilizar a ferramenta Unity",
        "Você aprenderá programação em C#",
        "Você aprenderá Programação de Jogos",
        "Você aprenderá Inteligência Artificial Estratégica",
        "Você aprenderá Máquina de Estados",
        "Você aprenderá a criar Controles com sistema de Eventos",
        "Você aprenderá Criação, posicionamento e movimentação baseado em Grids",
        "Você aprenderá Programação Assíncrona e Tasks",
        "Você aprenderá a programar o Algoritmo Minimax Alpha-Beta",
        "Você aprenderá a fazer Pooling de objetos",
        "Você aprenderá a utilizar Prefabs e Variantes"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "O que é visto ao todo no curso?",
          "Drive com backups e assets",
          "Tutorial básico",
          "Instalando a Unity",
          "Editor de Texto",
          "Olá Mundo Unity"
        ],
        "Setup do Tabuleiro": [
          "Introdução da Seção",
          "Criando o projeto e importando os assets",
          "Prefabs, variantes e posicionamento",
          "Estrutura de herança das peças; Controles básicos",
          "Criação do Board Lógico",
          "Revisão"
        ],
        "Controles e Máquina de Estados": [
          "Introdução da Seção",
          "Máquina de Estados",
          "LoadState e programação Async",
          "TurnBeginState",
          "PieceSelectionState",
          "MovementSelectionState",
          "Sistema de Highlights",
          "PieceMovementState",
          "Revisão"
        ],
        "Movimentação": [
          "Introdução da Seção",
          "Animação de Movimentação da Peça",
          "Reformando o Peão",
          "Rei e Rainha",
          "Torre, Bispo, Cavalo",
          "Revisão"
        ],
        "Movimentos Especiais": [
          "Introdução da Seção",
          "Botão de Voltar/ Resetar o Tabuleiro",
          "Morte do Rei/ Castling",
          "Terminando o Castling/ Estrutura para movimentos especiais",
          "En Passant/ Promoção",
          "Promoção do Peão",
          "Revisão"
        ],
        "A Inteligência Artificial": [
          "Introdução da Seção",
          "Começando a Inteligência Artificial",
          "Tirar snapshots e voltar o tabuleiro à um estado anterior",
          "Cálculo de jogadas",
          "Profundidade Pt.1",
          "Profundidade Pt.2 e usando um algoritmo Depth-First",
          "Revisão"
        ],
        "IA e Movimentos Especiais": [
          "Introdução da Seção",
          "Pequenas melhoras na performance",
          "Reforma dos Movements, Castling, En Passant Pt 1",
          "Reforma dos availableMoves, En Passant Pt 2",
          "Promotion e se livrando do Plyceholder",
          "Fechando o Loop da IA",
          "Revisão"
        ],
        "Alpha-Beta": [
          "Introdução da Seção",
          "Square Table Evaluation",
          "Alpha-Beta",
          "Mais melhoras na performance",
          "Killer Moves First"
        ],
        "Projetos dos alunos": [
          "Contribuição dos alunos"
        ],
        "Bônus": [
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Você precisa já conhecer o ambiente Unity",
        "Você já deve entender Orientação a Objetos, como polimorfia, heranças, abstract, virtual, etc",
        "Você deve conhecer C#, Java ou alguma linguagem similar"
      ],
      "description": "Você irá aprender Unity, programação C# e inteligência artificial tudo numa pegada só. O que de melhor para aprender complexidades de código do que um bom e velho xadrez, um jogo considerado desde os primórdios como uma atividade altamente intelectual.\nPrimeiro de tudo teremos que desenvolver um jogo funcional de xadrez e com peças fazendo seus movimentos especiais.\nDepois vamos criar uma IA capaz de jogar, planejar e analisar várias rodadas adiante.\nGosta de Inteligência Artificial? Gosta de Games e Programação? Cansado de tutoriais que ensinam só pedaços de programação ou sempre os mesmos jogos simplezinhos? Se inscreva já!",
      "target_audience": [
        "Programadores interessados em Desenvolvimento de Jogos",
        "Programadores interessados em Inteligência Artificial",
        "Programadores Interessados em aprender Unity"
      ]
    },
    {
      "title": "La guía definitiva del desarrollo de videojuegos con Unity",
      "url": "https://www.udemy.com/course/la-guia-definitiva-del-desarrollo-de-videojuegos-con-unity/",
      "bio": "Creada en colaboración con Unity Technologies: aprende C# desarrollando juegos 2D & 3D usando esta guía",
      "objectives": [
        "Conceptos básicos de C# como variables, sentencias if y arreglos.",
        "Detección de colisiones, leer Input del usuario y crear movimientos del jugador.",
        "Crear power ups que incluyen disparos triples, rayos láser, aumentos de velocidad y escudos.",
        "Aplicar shaders que transforman los fondos de tu juego.",
        "Crear enemigos con inteligencia artificial básica.",
        "Recolectar y destruir GameObjects.",
        "Implementar efectos de sonido, música ambiental, y efectos de partículas.",
        "Activar el servicio de colaboración de Unity.",
        "Navegar por Unity y descubrir características únicas como el Asset Store.",
        "Distribuir tu juego en diferentes plataformas como web, móvil y PC."
      ],
      "course_content": {
        "Introducción": [
          "Presentación",
          "Bienvenida",
          "¿Qué puedes hacer con Unity?"
        ],
        "Galaxy Shooter": [
          "Introducción a Galaxy Shooter"
        ],
        "Configuración del proyecto": [
          "Introducción a la configuración del proyecto",
          "Instalación de Unity",
          "Creación de un proyecto",
          "El editor de Unity",
          "Importación de Assets",
          "Creando la galaxia",
          "¿Qué esperar?"
        ],
        "Creando al Player": [
          "Introducción a la creación del Player",
          "Configurando el Player",
          "Configurando la posición inicial",
          "Moviendo al Player",
          "Challenge: Input del usuario",
          "Challenge Review: Input del usuario",
          "Challenge: Limites del Player",
          "Challenge Review: Limites del Player",
          "Limpieza del código"
        ],
        "Shooting": [
          "Introducción a los disparos",
          "Configuración del Laser",
          "Instantiate",
          "Challenge: Comportamiento del Laser",
          "Challenge Review: Comportamiento del Laser",
          "Sistema de Cool Down",
          "Limpieza del código"
        ],
        "Power Up - Triple Shot": [
          "Introducción al Power Up - Triple Shot",
          "Challenge: Triple Shot",
          "Challenge Review: Triple Shot",
          "Detección de colisiones",
          "Comunicación entre Scripts",
          "Power Down Routine"
        ],
        "Power Up - Speed Boost": [
          "Introducción al Power Up - Speed Boost",
          "Configuración del Speed Boost",
          "Challenge: Speed Boost",
          "Challenge Review: Speed Boost"
        ],
        "Enemigos": [
          "Introducción a los enemigos",
          "Configuración de los enemigos",
          "Challenge: Enemy Behaviour",
          "Challenge Review: Enemy Behaviour",
          "Challenge: Control del daño",
          "Challenge Review: Control del daño",
          "Challenge: Explosión del enemigo",
          "Challenge Review: Explosión del enemigo",
          "Challenge: Explosión del Player",
          "Challenge Review: Explosión del Player"
        ],
        "Power Up - Shields": [
          "Introducción al Power Up - Shields",
          "Challenge: Implementación del escudo",
          "Challenge Review: Implementación del escudo",
          "Visualizar el escudo",
          "Animación del escudo"
        ],
        "Spawn Manager": [
          "Introducción al Spawn Manager",
          "Configuración del Spawn Manager",
          "Challenge: Generación de enemigos",
          "Challenge Review: Generación de enemigos",
          "Generación de los powerups"
        ]
      },
      "requirements": [
        "No es necesaria experiencia previa en programación o en Unity. Si has trabajado con C# o Unity antes, este curso te ayudará a mejorar tus técnicas de desarrollo.",
        "En este curso, te llevaré a través de la instalación de Unity en tu computadora. Será útil si te sientes cómodo instalando tu propio software",
        "Entendimiento básico de matemáticas (orden de las operaciones, suma, resta, multipicación) facilitarán la comprensión de cierta lógica en el código.",
        "Antes de comenzar este curso deberás sentirte cómodo navegando en web."
      ],
      "description": "Este curso está autorizado y co-creado en colaboración con Unity Technologies.\n\nSi estás interesado en desarrollar increíbles juegos con calidad comercial que pueden jugarse en varias plataformas, entonces este curso es para ti. Este curso es el único de su tipo aprobado por Unity Technologies en Udemy. ¿Qué mejor manera de aprender a desarrollar videojuegos en Unity que con el curso autorizado por ellos? La guía definitiva del desarrollo de videojuegos con Unity te da una introducción a Unity y a los fundamentos de programación con C#. El curso luego se sumerge en el desarrollo de tu primer juego 2D y tu primer juego 3D. Descubrirás cómo resaltar tus juegos del resto al pulirlos con las últimas características de Unity, incluidos los efectos de post procesamiento y el sistema de animación.\nEn este curso verás:\nConceptos de C# como variables y sentencias if\nDetección de colisiones, leer el input del usuario y crear movimientos del jugador\nCreación de power ups incluyendo disparos triples, rayos láser, aumento de velocidad y escudos\nAplicar shaders que transformarán el fondo de tus juegos\nCreación de enemigos con inteligencia artificial básica\nColeccionar y destruir GameObjects\nImplementar efectos de sonido, música de fondo y efectos de partículas\nActivar el servicio de colaboración de Unity\nNavegación por Unity para descubrir características únicas como la Asset Store\nDistribución de tu juego en diferentes plataformas como web, móvil y PC\n¡Y mucho más!\nEste curso también incluye más de 30 horas de retos interactivos donde podrás poner a prueba el conocimiento que has aprendido. Estos retos te ayudarán a construir tus dos juegos con calidad comercial: un 2D Galaxy Shooter que utiliza sprites de alta calidad y efectos cinemáticos, y un 3D FPS. Tendrás acceso a arte único previsto por este curso y agregarás características sofisticadas a tus juegos, las cuales te harán ver como si llevaras años programando.\n¿Por qué aprender desarrollo de videojuegos con Unity?\nLa Industria del Videojuego es una industria que vale $100 billones de dólares a nivel mundial. Para 2020, se espera que ese número llegue a los $120 billones de dólares. Con Unity siendo el motor de juegos más utilizado a través de multiples plataformas, nunca ha sido un mejor momento para entrar en el campo. Como aprenderás en este curso, los tipos de juegos que puedes crear con Unity y C# son ilimitados. El desarrollo de videojuegos es un gran pasatiempo, permitiéndote aprender una nueva habilidad al mismo tiempo que juegas tu juego y lo compartes con tu familia y amigos. También es una carrera emocionante y gratificante, donde muchos desarrolladores exitosos, incluido yo, hemos aprendido las bases del desarrollo de videojuegos con cursos como este y no en un salón de clases tradicional. Todo gran juego empieza en algún lado, así que ¿por qué no empezar el tuyo? Mientras que las personas suelen encontrar la programación o la creación de juegos intimidante, este curso utiliza una técnica de enseñanza que te permitirá obtener una comprensión profunda de los conceptos mientras desarrollas tus juegos. Gracias a la comunidad de Unity, podrás conectarte con otros desarrolladores, trabajar juntos en nuevos proyectos y hacer algunos juegos increíbles.\n\n¿Por qué aprender de mi?\nEste es el primer y único curso de desarrollo de videojuegos que ha sido co-creado con Unity Technologies en Udemy. Porque aprender a programar puede ser desalentador, Unity Technologies quería crear un curso que ayudara a los desarrolladores a sentirse cómodos explorando Unity y desarrollando juegos. Creo que la mejor forma de aprender a programar es haciéndolo; por lo tanto, este es un curso altamente interactivo que no te va a regalar las respuestas. Los retos únicos integrados a lo largo de este curso se asegurarán de que no solo sepas programar algo, sino de que entiendas la lógica que está detrás. Como un ingeniero autodidacta me doy cuenta de que no hay cursos de buena calidad que permitan a los principiantes captar realmente los conceptos esenciales del desarrollo de videojuegos.\nHe trabajado con Unity desde la versión 2.0 y he desarrollado videojuegos para consolas de Nintendo y Playstation, también me he divertido con algunos desarrollos en móviles y actualmente mi principal plataforma de desarrollo es la realidad virtual, he trabajado para empresas grandes y también he hecho desarrollos independientes, además tengo varios años de experiencia enseñando desarrollo de videojuegos en diversas universidades.\nAl terminar este curso entenderás los conceptos básicos de la programación en C# y serás capaz de desarrollar tus propios juegos 2D y 3D. También te sentirás confiado sabiendo que has dominado las últimas y más grandes técnicas en el desarrollo de videojuegos que te impulsarán a lograr el éxito en tus aspiraciones personales y profesionales.\n\n¡Unete a mi hoy en esta gran aventura! Te veo dentro del curso.",
      "target_audience": [
        "El estudiante ideal para este curso es alguien que esté interesado en el desarrollo de videojuegos con Unity y C# y que esté buscando un curso interactivo basado en proyectos.",
        "Personas interesadas en desarrollar juegos 2D y 3D de calidad comercial, ya sea profesionalmente o como hobby",
        "Cualquier persona que busque una comprensión de las mejores prácticas de codificación, como la organización con su proyecto y el flujo de trabajo de desarrollo óptimo que son esenciales para el desarrollo del juego.",
        "Este curso no es para alguien que es un desarrollador avanzado de juegos. Este curso tampoco es para estudiantes que no están interesados en aprender a programar ya que obtendrás una introducción a los fundamentos de la programación en C#."
      ]
    },
    {
      "title": "Sıfırdan Unity Multiplayer Eğitimi | Netcode for Gameobjects",
      "url": "https://www.udemy.com/course/sfrdan-unity-multiplayer-egitimi-netcode-for-gameobjects/",
      "bio": "Unity 6 & Netcode for Gameobjects ile Multiplayer Oyun Yapmayı Öğrenin!",
      "objectives": [
        "Sıfırdan Unity 6 ile Multiplayer Oyun Geliştirmeyi,",
        "Netcode for Gameobjects Kütüphanesini,",
        "RPC, NetworkVariable gibi Senkronizasyon Yapılarını,",
        "Host-Client, Dedicated Server, Distributed Authority gibi Kavramları,",
        "Server Authoritative, Client Authoritative gibi Kavramları,",
        "Authentication, Lobby, Relay Sistemlerini,",
        "Multiplayer'ın Topoloji, Protokol, Component, Senkronizasyon gibi Teorik Kısımlarını,",
        "UniTask ile Asenkron Kodlamayı,",
        "Multiplayer'da Parenting, Spawning gibi İşlemleri,",
        "Ve arkadaşlarınızla kapışabileceğiniz eğlenceli bir oyunu sıfırdan yapmayı öğreneceksiniz!"
      ],
      "course_content": {
        "Tanıtım & Genel Bilgilendirme": [
          "Tanıtım & Bilgilendirme - Eğitmen Hakkında",
          "Tanıtım & Bilgilendirme - Neler Yapacağız?",
          "Tanıtım & Bilgilendirme - Kurs İçeriği",
          "Tanıtım & Bilgilendirme - Neden Netcode?"
        ],
        "Kurulum": [
          "Bölüm Hakkında",
          "Kullanacağımız Programlar",
          "Unity Sürümü ve Kurulumları",
          "Projemizi Oluşturma & GitHub ile Bağlama"
        ],
        "Multiplayer'a Teorik Giriş": [
          "Bölüm Hakkında",
          "Multiplayer Oyun Geliştirmeye Giriş & SinglePlayer'dan Farklılıkları",
          "Network Topolojileri (Client-Server & Distributed Authority)",
          "Network Protokolleri (UDP, TCP, DTLS)",
          "Network Componentları (NetworkObject, NetworkBehaviour, NetworkTransform...)",
          "Senkronizasyon (NetworkVariable, RPC)"
        ],
        "Yapacağımız Oyun Hakkında Konuşalım": [
          "Bölüm Hakkında",
          "Yapacağımız Oyun Hakkında Konuşalım",
          "Gerekli Asset & Paket Kurulumları",
          "Projemizi Düzenleyelim"
        ],
        "Araç Kontrolcümüzü Oluşturalım": [
          "Bölüm Hakkında",
          "Araç Modelimizi Hazırlayalım & Componentlarını Atayalım",
          "Araç Kontrolcümüzü Yazmaya Başlayalım",
          "Süspansiyon Sistemimizi Yazalım",
          "Yer Yön ve İvme Sistemlerimizi Yazalım",
          "Fren ve Hava Direnci Sistemlerimizi Yazalım",
          "Araç Görselimizi İyileştirelim",
          "Aracımızı Takip Eden Kamera Yapalım"
        ],
        "Araç Kontrolcümüzü Multiplayer'a Çevirelim": [
          "Bölüm Hakkında",
          "NetworkManager & Host - Client Bağlantılarını Oluşturalım",
          "NetworkTransform ve IsOwner Yapılarıyla Kontrolcülerimizi Ayıralım",
          "Multiplayer'da Çıkan Hataları Ayıklayalım"
        ],
        "Gizemli Kutu Etkileşimleri": [
          "Bölüm Hakkında",
          "Gizemli Kutu Toplama Mekaniğimizi Singleplayer Kısmı İçin Ayarlayalım",
          "Gizemli Kutu Toplama Mekaniğimizi Multiplayer Ortama Aktaralım"
        ],
        "Karakter Yetenekleri": [
          "Bölüm Hakkında",
          "Yeteneklerimiz için UI Oluşturalım",
          "Yetenek Scriptable Objemizi Oluşturup Dolduralım",
          "Rastgele Yetenek Gelme Sistemini Kuralım",
          "Karakter Yetenek Yöneticisini Kuralım",
          "Yeteneklerimizin Ön Hazırlığını Yapalım",
          "Yetenek Yöneticimizi Yazmaya Başlayalım",
          "Yetenek Yöneticimizi Yazmaya Devam Edelim",
          "Sahte Kutu Yeteneğini Yazalım",
          "Kalkan Yeteneğini Yazalım",
          "Diken Yeteneğini Yazalım",
          "Roket Yeteneğini Yazalım",
          "Mayın Yeteneğini Yazalım"
        ],
        "Karakterlerimizin Etkileşim ve Spawn Sistemleri": [
          "Bölüm Hakkında",
          "Karakterlerimizin Hasar Yeme Simülasyonunu Yapalım",
          "Hasar Yeme Sistemimizi Yazalım",
          "Hasar Yeme Sistemimizin Buglarını Çözelim",
          "Karakterlerimizin Spawn Sistemini Yazalım",
          "Ölüm ekranı için UI Hazırlayalım",
          "Karakterlerimizin Respawn Sistemini Yazalım"
        ],
        "Oyun Döngüsünü Kuralım": [
          "Bölüm Hakkında",
          "Oyunumuzun Genel UI'ını Hazırlayalım",
          "GameManager'ımızı Yazalım",
          "GameOver Olduğunda Oynayamama Sistemimizi Kuralım",
          "Oyun Bitişi için UI Hazırlayalım",
          "Layout Grup Sistemlerimizi Kuralım"
        ]
      },
      "requirements": [
        "Unity ve C#'ta en azından birkaç proje yapmış olmayı gerektirir. Yani Unity oyun motoruna ve C# diline az da olsa hakim olmalı, ve minik de olsa birkaç proje yapmış olmalısınız. Çünkü bu kurs, bir \"Sıfırdan Unity\" kursu değil, \"Sıfırdan Multiplayer\" kursu. Yani Unity ve C#'ı belli bir seviyede biliyor olmanızı bekleyeceğim."
      ],
      "description": "Selamlar Herkese!\nEğer oyun yapmayı seviyor ve aklınızdaki oyun fikirlerini bir adım ileri taşımak istiyorsanız, doğru yerdesiniz. Bu kursumuzda, Unity 6 ve Netcode for Gameobjects kullanarak Sıfırdan Multiplayer Oyun Geliştirmeyi öğreneceğiz.\nKursumuzun hedef kitlesi, Unity oyun motoruna aşina, temel oyun geliştirme bilgisine sahip olan kişiler. Yani Unity'yi açıp bir sahne oluşturmayı veya basit scriptler yazmayı biliyorsanız, birkaç minik proje yaptıysanız ve seviyenizi bir üste taşıyarak Multiplayer Oyun Geliştirmeye merak saldıysanız, bu kurs tam size göre! Burada Unity'nin temel kullanımını tekrar anlatmak yerine, doğrudan multiplayer sistemlerine odaklanacak ve baştan sona bir multiplayer oyun inşa edeceğiz.\nİlk olarak, multiplayer oyun mantığını, Unity Netcode for Gameobjects'in nasıl çalıştığını ve bu sistemlerin avantajlarını teorik olarak öğrenmeye çalışacağız. Ardından, kurulum adımlarını ve projeyi nasıl multiplayer odaklı kuracağımızı detaylıca göstereceğim. Ve bir oyunu tamamen sıfırdan başlatarak, multiplayer olarak geliştirmeyi öğrenmeye odaklanacağız.\n\n\nKurs boyunca:\nMultiplayer Oyun Geliştirmenin Arkaplanını,\nRPC, NetworkVariable gibi yapılarla Senkronizasyonu,\nParenting, Spawning gibi İşlemleri,\nHost-Client, Dedicated Server, Distributed Authority gibi Kavramları,\nServer Authoritative, Client Authoritative gibi Kavramları,\nAuthentication, Lobby, Relay Sistemlerini,\nUniTask ile Asenkron Kodlamayı,\n\n\ngibi multiplayer oyun geliştirmede en çok ihtiyaç duyulan konuları adım adım işleyeceğiz. Ayrıca, Refactor Sistemi ile yazdığımız kodları sürekli iyileştirmeyi, temiz ve sürdürülebilir hale getirmeyi de öğreneceğiz.\nKurs sonunda, çevrimiçi oynanabilir bir multiplayer oyun oluşturmuş olacağız. Bu oyun; basit bir test prototipinden öte, paylaşabileceğiniz, özelleştirebileceğiniz ve üzerine yeni özellikler ekleyebileceğiniz bir proje olacak. Böylece kursu tamamladığınızda, multiplayer oyun geliştirmeye dair temel ve ileri seviye bilgileri öğrenmiş, hayalinizdeki projeye başlamaya hazır hale gelmiş olacaksınız.\nBu kurs uzun ve zorlu bir yolculuk ama aynı zamanda çok eğlenceli ve öğretici! Çünkü Multiplayer her ne kadar zor bir konsept olsa da, işin sonunda çıkan proje bizi mutlu etmeye her zaman yetiyor.\nSoru-cevap kısmında her zaman aktifim, aklınıza takılanları çekinmeden sorabilirsiniz.\nHadi başlayalım ve multiplayer dünyasına birlikte adım atalım!\nİyi Seyirler!",
      "target_audience": [
        "Oyun geliştirmeyle ilgilenen & Multiplayer oyun geliştirmeyi öğrenmek isteyen, Unity ve C#'a az da olsa hakim olan ve temellerini bilen herkes için uygundur."
      ]
    },
    {
      "title": "Learn Chess in Hindi : Zero to Master Level",
      "url": "https://www.udemy.com/course/learn-chess-in-hindi-zero-to-master-level/",
      "bio": "Chess Tactics, Calculation, and Pattern recognition skills that will enable you to create beautiful winning combinations",
      "objectives": [
        "Be able to use a fundamental understanding of chess tactics and combinations to sky-rocket your results and rating",
        "Be able to make use of the important tactical motifs like Fork, Deflection, Decoy, Pins, Discovered Checks, and many more etc",
        "Be able to use chess combinations to often win by force from positions where no issues visually seem present",
        "Be able to use inspirational calculation aids such as \"The power of the pinned piece is illusionary\" and \"Combine and win\"",
        "Be able to appreciate the examples of combinations from the World chess champions",
        "Be able to exploit your passed pawn potential through tactical means",
        "Be able to exploit King safety issues of the opponent",
        "Be able to understand the Fundamentals of Chess Tactics - Forcing moves, checks, captures, threats of mate and limiting opponent options in general",
        "Be able to maximise the differential imposed between strengths of your position and opponent weaknesses",
        "Be able to detect if combinations exist using various approaches of detection and examples",
        "Be able to play with very high accuracy sharp combinations",
        "Be able to practice with multiple examples all key tactical instruments which are part of combinations",
        "Be able to make sure opportunities are not missed in Calculation using Weakness of last move, Common squares, and \"In-Effect\"",
        "Be able to get a feel for downsides of opponents position which could imply a combination exists",
        "Be able to know the philosophies of great tactical examples explained in depth and re-use them in your own games",
        "Be able to understand the importance of the prioritisation of forcing moves when calculating to limit the opponent's replies",
        "Be able to exploit the default downside often of the Weak Back Rank",
        "Be able to exploit loose piece liabilities of the opponent",
        "Be able to detect tactical issues and \"celebrate\" them using the concept word of \"down-sides\" throughout the examples",
        "Be able to match appropriate combinations with the downsides of the opponents position",
        "Be able to play brilliant and beautiful chess combinations - but be warned you may lose sleep over them",
        "Be able to finish off opponents quickly and get a new game in the all-you-can eat online tournaments",
        "Be able to recognise all the key mating patterns that have been established through Chess History"
      ],
      "course_content": {
        "Chess For Absolute Beginning Level of Players": [
          "00-Welcome to Course",
          "01 Topics Covered in Chess Game(720p)",
          "02 Benefits of Playing Chess Game in our Life(720p)",
          "03 Orientation, Layout, Points of Chess Pieces(720p)",
          "04 Rules of Pawn in Chess Game(720p)",
          "05 Rules of Knight in Chess Game(720p)",
          "06 Rules of Bishop in Chess Game(720p)",
          "07 Rules of Rook in Chess Game(720p)",
          "08 Rules of Queen in Chess Game(720p)",
          "09 Rules of King in Chess Game(720p)",
          "10_ Rules of Castling in Chess Game(720p)"
        ],
        "02_The Basic Principles Of Chess": [
          "11 Basic Principles of Chess(720p)",
          "12_Game # 1_To Understand Basic Principles of Chess (With Detailed Game Summary)",
          "13_Game #2_Black Neglects the Center_(To Understand Basic Principles of Chess)(7",
          "14_Game #3_BOTH SIDES THE BALANCE CENTER GAINING SPACE AND TIME(720p)",
          "15_Game #4_IMPORTANCE OF KING SAFETY_(To Understand Basic Principles of Chess)(7",
          "16_GAME #5_OPENING FILES TO EXPOSE BLACK'S UNCASTLED KING(720p)",
          "17_GAME #6_Pawn sacrifice to keep black’s king from castling(720p)",
          "18 GAME 7 BISHOP SACRIFICE TO OPEN FILES AGAINST BLACK'S CASTLED KING(720p)",
          "19_ GAME #8_ PAWN STORM_(To Understand Basic Principles of Chess)(720p)"
        ],
        "03_Chess Tactics Tricks & Combination": [
          "20_Chess Tactics Tricks & Combination_Ch_0_Introduction(720p)",
          "21_Chess Tactics Tricks & Combination_Ch_01_ FORK(720p)",
          "22_Chess Tactics Tricks & Combination_Ch_02_PIN(720p)",
          "23_Chess Tactics Tricks & Combination_Ch_03_SKEWERS(720p)",
          "24_ Chess Tactics Tricks & Combination_ Ch_ 04_ DISCOVER CHECKS _ ATTACK(720p)",
          "25_Chess Tactics Tricks & Combination_Ch_05_DOUBLE CHECKS(720p)",
          "26_Chess Tactics Tricks & Combination_Ch_06_TRAPPING PIECES(720p)",
          "27_Chess Tactics Tricks & Combination_Ch_07_REMOVING THE GUARD (UNDERMINING)(720",
          "28_Chess Tactics Tricks & Combination_Ch_08_INTERMEDIATE MOVE_(IN BETWEEN MOVE)(",
          "29_Chess Tactics Tricks & Combination_Ch_09_PAWN PROMOTION(720p)",
          "30_Chess Tactics Tricks & Combination_Ch_10_BACK RANK CHECKMATE (corridor mate)(",
          "31_Chess Tactics Tricks & Combination_Ch_11_SMOTHER MATE(720p)",
          "32_Chess Tactics Tricks & Combination_Ch_12_STALEMATE(720p)",
          "33_Chess Tactics Tricks & Combination_Ch_13_PERPETUAL CHECKS(720p)",
          "34_Chess Tactics Tricks & Combination_Ch_14_PATTERN RECOGNITION(720p)"
        ],
        "04_Learn how to avoid Traps & Pitfalls": [
          "35_Learn How To Avoid Traps And Pitfalls_Introduction(720p)",
          "36_Learn How To Avoid Traps And Pitfalls_Game_01_Avoid Scholar's Mate(720p)",
          "37_Learn How To Avoid Traps And Pitfalls_GAME_2_Legall's Mate(720p)",
          "38_Learn How To Avoid Traps And Pitfalls_GAME_3_Moving the f Pawn(720p)",
          "39_Learn How To Avoid Traps And Pitfalls_GAME_04_Danish Opening(720p)",
          "40_Learn How To Avoid Traps And Pitfalls_GAME_05_Paul Morphy V_S Charles(720p)",
          "41_Learn How To Avoid Traps And Pitfalls_GAME_06_Reti Tartakower(720p)",
          "42_Learn How To Avoid Traps And Pitfalls_GAME_07_Fischer V_S Reshevsky(720p)",
          "43_Learn How To Avoid Traps And Pitfalls_GAME_8_Kwatschewsky V_S Susan Polgar(72",
          "44_Learn How To Avoid Traps And Pitfalls_GAME_09_Caro V_S Lasker(720p)",
          "45_Learn How To Avoid Traps And Pitfalls_GAME_10_Christiansen V_S Karpov(720p)",
          "46_Learn How To Avoid Traps And Pitfalls_GAME_11_ Veitch V_S Penrose(720p)",
          "47_Learn How To Avoid Traps And Pitfalls_GAME_12_Litvinov V_S Veresov(720p)",
          "48_Learn How To Avoid Traps And Pitfalls_GAME_13_Susan Polgar V_S Vujcic(720p)",
          "49_Learn How To Avoid Traps And Pitfalls_GAME_14_Lasker V_S Thomas(720p)"
        ],
        "05_Learn Essential Basic Endgames": [
          "50_Learn Essential Basic Endgames_GAME_0_Introduction(720p)",
          "51_Learn Essential Basic Endgames_GAME_1_King Queen V_S King(720p)",
          "52_Learn Essential Basic Endgames_GAME_1_King Queen V_S King(720p)",
          "53_Learn Essential Basic Endgames_GAME_1_King Queen V_S King(720p)",
          "54_Learn Essential Basic Endgames_GAME_2_2 Rooks vs King (All Cases)(720p)",
          "55_Learn Essential Basic Endgames_GAME_3_1 Rook V_S King (All Cases)(720p)",
          "56_Learn Essential Basic Endgames GAME_4_1 Bishop vs King (Typical Case)(720p)",
          "57_Learn Essential Basic Endgames_GAME_5_2 Bishops V_S King (All Cases)(720p)",
          "58_Learn Essential Basic Endgames_GAME_6_Bishop Knight V_S King (All Cases)(72",
          "59_Learn Essential Basic Endgames GAME 7_2 Knights V_S King (All Cases)(720p)",
          "60_Learn Essential Basic Endgames_GAME_8_Pawns V_S King (Part 1)(720p)",
          "61_Learn Essential Basic Endgames_GAME_8_Pawns V_S King (Part 2)(720p)",
          "62_Learn Essential Basic Endgames_GAME_8_Pawns V_S King (Part 3)(720p)",
          "63_Learn Essential Basic Endgames_GAME_8_Pawns V_S King (Part 4)(720p)",
          "64_Learn Essential Basic Endgames_GAME_8_Pawns V_S King (Part 5)(720p)",
          "65_Learn Essential Basic Endgames_GAME_8_Pawns V_S King (Part 6)(720p)",
          "66_Learn Essential Basic Endgames_GAME_8_Pawns V_S King (Part 7)(720p)",
          "67_Learn Essential Basic Endgames_END GAMES SUMMARY(720p)"
        ],
        "06_Learn from GM Bobby Fisher Games": [
          "68_Learn From GM Bobby Fishers Games_00_Introduction(720p)",
          "69_Learn From GM Bobby Fishers Games_GAME_ 01_DONALD BRYNE V_S BOBBY FISHER (1",
          "70_Learn From GM Bobby Fishers Games_GAME_02_BOBBY FISHER V_S ROBATSCH (1962)(72",
          "71_Learn From GM Bobby Fishers Games_GAME_03_ROBERT BYRNE V_S BOBBY FISHER (1963",
          "72_Learn From GM Bobby Fishers Games_GAME_04_BOBBY FISHER V_S U. GELLER (1968)(",
          "73_Learn From GM Bobby Fishers Games_GAME_05_BOBBY FISHER V_S U. GELLER(720p)",
          "74_Learn From GM Bobby Fishers Games_GAME_06_BOBBY FISHER V_S TRIGAR PETROSIAN (",
          "75_Learn From GM Bobby Fishers Games_BOBBY FISHER'S BEST COMBINATIONS_PART_01(72",
          "76 Learn From GM Bobby Fishers Games GAME 07 BOBBY FISHER'S BEST COMBINATIONS PA",
          "77_Learn From GM Bobby Fishers Games_GAME_07_BOBBY FISHER'S BEST COMBINATIONS_PA",
          "78_Learn From GM Bobby Fishers Games_GAME_07_BOBBY FISHER'S BEST COMBINATIONS_PA"
        ],
        "07_Dangerous Chess Trick": [
          "79_Dangerous Chess Trick_Introduction(720p)",
          "80_Dangerous Chess Trick_ Halsar Trap_ Best Chess Tricks_ 01(720p)",
          "81_Dangerous Chess Trick_Lasker Trap Best Chess_ Tricks 02(720p)",
          "82_Dangerous Chess Trick_ Poisson Pawn Trap_ Best Chess Tricks_ 03(720p)",
          "83_Dangerous Chess Trick_ Kieninger Trap_ Best Chess Tricks_ 04(720p)",
          "84_Dangerous Chess Trick_ Fishing Pole Trap_ Best Chess Tricks_ 05(720p)",
          "85_Dangerous Chess Trick _Tennison Gambit Best Chess_ Tricks 06(720p)",
          "86_Dangerous Chess Trick_ Siberian Trap_ Best Chess Tricks_ 07(720p)",
          "87_Dangerous Chess Trick_ Akshay Kumar Rustom Movie_ Legal Trap_ Best Chess Tric",
          "88_Dangerous Chess Trick_ Elephant Trap_ Best Chess Tricks_ 09(720p)",
          "89_Dangerous Chess Trick_ Mortimer Trap_ Best Chess Tricks_ 10(720p)",
          "90_Dangerous Chess Trick_ Queens Gambit_ Best Chess Tricks_ 11(720p)",
          "91_Dangerous Chess Trick_Noah's Ark Trap_Best Chess Tricks_12(720p)",
          "92_Dangerous Chess Trick_ Checkmate in 7 Moves_ Best Chess Tricks_ 13(720p)"
        ],
        "08_How to think like Grand Master": [
          "93_ How to Think Like Grand Master_ Introduction(720p)",
          "94_How to Think Like Grand Master _ Game 01 _ S Polgar VS I Ljubojevic _1987(720",
          "95_How to Think Like Grand Master _ Game 02(720p)",
          "96_How to Think Like Grand Master Game 03(720p)"
        ]
      },
      "requirements": [
        "No Prior Experience Required"
      ],
      "description": "FIDE CM Kingscrusher has one goal of the course. And that is to make you a much stronger tactician than ever before in your life. You should be in a much better position by training with this course to create beautiful chess combinations on the chessboard which feature a wide range of patterns and demonstrate amazing calculation ability. In short, the goal of the course is to make you a very strong chess tactician and help you enjoy your chess to the absolute maximum.\nThis course has a structure which is essentially is \"process\" and \"patterns\".\nPROCESS: The Art of Chess Calculation\nThe \"process\" aspect is the art of chess calculation. Even if you didn't know a single tactical pattern by name, you could still play amazing tactics just with great calculation which the course gives you a solid foundation in. Yes, even if you didn't know your forks from your pins, the \"Process\" part of the course as in the art of calculation would still enable you to play great chess combinations using an entire orchestra of tactical patterns without even knowing their names.\nBut training yourself on patterns will enhance your art of calculation and you will be able to name the key tactical patterns which are important for searching them out to practice and discuss with others as well as prompt during your calculations.\n\"Process\" is like the software of your chess mind. \"Patterns\" are like the Content for that software. You need both the software and the content to be really effective as a tactician!.\n==================\nPROCESS -><-PATTERNS\n\n\nYOUR STRENGTHS OF POSITION (PLUSSES +'s) ====> MATCH WITH <=== (MINUSES -'s)\nDOWNSIDES OF OPPONENTS POSITION (FOR MAXIMUM DIFFERENTIAL between the PLUS AND MINUS)\n\n\nBOTTOM UP APPROACHES >----< TOP DOWN APPROACHES\n==================\n\n\nPatterns help feed the process of calculation. Your goal often is to create a maximum differential between the strengths of your position which can be realised from very strong calculation skills and the downsides of the opponent's position which often requires a trained intuition and eye for potential downsides to ensure you are even aware combinational solutions might exist.\n==================\nPATTERNS: Tactical Patterns, Mating Patterns, Weakness of Position patterns.\nThe \"patterns\" aspect is divided into three key \"pattern\" areas:\nBold ones below represent really key and frequent visitors to most people's games\nTactical Patterns (alphabetically)\nThese tactical patterns are very useful to practice and help internalise.\nAbsolute Pin\nAdvanced Pawn\nAnnihilation of Defence\nAlekhine’s Gun\nAttraction\nBattery\nBlockading defensive resources\nCapture\nCapture the Defender\nChecks - gaining key tempo e.g. winning material via checks\nClearance\nCombine and Win tactics\nConnected passed pawns\nCounterplay management move\nCounter Threat\nCross-check\nCross-pin\nDecoy\nDeflection\nDemolition of Pawns around opponent's king\nDemolition of Pawn Structure\nDesperado\nDiscovered Attack\nDomination\nDouble Attack\nDouble Check\nDraw Tactics\nEndgame Tactics\nExchange sacrifice\nf2 (or f7) weakness\nForcing Moves\nFork\nGoal Hanging Tactics e.g. N on f5 (also see Thorn pawn)\nGreek Gift Sacrifice\nIndirect Defense\nInterference\nIntermediate move (synonym: Zuichenzug)\nKing Aggression in Endgames\nKing Chase\nLiberational tactics\nOpposition\nOverload the defender\nWeakness of last move\nPassed pawn creation\nPawn-Fork\nPawn Tactics\nPawn Breakthrough\nPerpetual Attack\nPerpetual Check\nPins - Absolute\nPins - Relative\nPins - Celebration\nPositional Tactic\nProphylaxis move\nRemoving King Escape Squares\nRook lift\nSacrifice (Positional)\nSacrifice (calculated)\nSimplification\nQueen and Bishop Battery\nQuiet but killer move (greatly used in Alekhine combinations)\nRelative Pin\nRemove the Defender\nSacrifice\nSimplification\nSituational Pin\nSoft spot sacrifice\nStrategic Crush tactic - e.g. locking in bishop, good knight\nSkewer\nStalemate Tactics\nTempo Tactics\nThorn Pawns\nThreat making\nTrapped Piece\nTriangulation\nTwo Rooks Battery\nTwo Rooks on 7th Rank\nUnder-promotion\nWeak Back-Rank\nWeakness of last move\nWindmill\nX-Ray\nX-Ray Attack\nX-Ray Defense\nZugzwang\nZwischenzug\nMating Patterns (alphabetically)\nThese mating patterns are useful to practice and help internalise.\nAnastasia's mate\nAnderssen's mate\nArabian mate\nBack-rank mate\nBishop and knight mate\nBlackburne's mate\nBlind swine mate\nBoden's mate\nBox mate (Rook mate)\nCombine and Win Mate\nCorner mate\nCozio's mate\nDamiano's bishop mate\nDamiano's mate\nDavid and Goliath mate\nDouble bishop mate\nDovetail mate\nEpaulette mate\nFool’s mate\nGreco's mate\nHook mate\nKill Box mate\nKing and two bishops mate\nKing and two knights mate\nLadder checkmate\nLégal mate\nLolli's mate\nMax Lange's mate\nMayet's mate\nMorphy's mate\nOpera mate\nPillsbury's mate\nQueen mate\nRéti's mate\nSmothered mate\nSupport mate\nSuffocation mate\nSwallow's tail mate\n\"Opponent Downsides\" aka \"Tactical Issues\" aka \"Tactical Liabilities\" aka \"Weakness of Position\" Patterns\nThese help you intuitively identify if a combination may exist in the position.\nAwkward Pieces (trappable)\nKing Safety Issues e.g. Back rank\nLoose pieces (unprotected)\nOverworked pieces\nPieces away from King\nTactical Liabilities in general\nWeaknesses in general",
      "target_audience": [
        "Chess beginner and intermediate players will get massive results improvement from this course",
        "Even more experienced players who want to sharpen their tactics. Every chess player can improve their tactical skills."
      ]
    },
    {
      "title": "Unity 2D - Aprenda Game Design e Crie Seu Primeiro Jogo",
      "url": "https://www.udemy.com/course/unity-3d-game-design-e-crie-seu-primeiro-jogo/",
      "bio": "Aprenda conceitos de Game Design e crie seu primeiro jogo com o Unity 2D do Zero!",
      "objectives": [
        "Como desenvolver um jogo na engine Unity 3D e exportar para Celular ou Web",
        "Criar seus próprios jogos por meio da engine Unity 3D",
        "Publicar o jogo na internet",
        "Animação de Personagens",
        "Trabalhar com Diferentes Resoluções",
        "Elementos Gráficos (GUI) e Canvas",
        "Sprites",
        "Box Collider",
        "Corpos Físicos(RigidBody2D)",
        "Detecção de Colisões(OnCollisionEnter2D)",
        "Repetir Função(InvokeRepeating)",
        "Aleatório(Random Range)",
        "Animações(Animation,Animator)",
        "Pontuação na Tela",
        "Reiniciar Fase",
        "Pausar o Jogo",
        "Enfeites de Cenário",
        "Exportação do Jogo"
      ],
      "course_content": {
        "Introdução e Fundamentos Teóricos": [
          "Introdução da Plataforma Udemy",
          "O que é um jogo",
          "Gerações de Vídeo Games (Parte 1)",
          "DESCONTÃO PARA OUTROS CURSOS",
          "LINKS DE DESCONTOS PARA ALUNOS ATUAIS",
          "Gerações de Vídeo Games (Parte 2)",
          "Mercado de Jogos e Monetização",
          "Game Engines",
          "Dicas Para Iniciantes",
          "Participe do Nosso Servidor do Discord de Games"
        ],
        "Aulas Grátis": [
          "Mais de 200 Aulas 100% Grátis Para Você!"
        ],
        "Componentes de Um Jogo": [
          "Camadas de Um Jogo",
          "Bons e Maus Tutoriais",
          "Gráficos e Animações",
          "Mecânicas e Controles",
          "Game Loops, Arcs e Feedbacks",
          "Música e Efeitos Sonoros",
          "Revisão, Conclusão e Exercício"
        ],
        "Criando Seu Primeiro Jogo com Unity 3D": [
          "Arquivo do Projeto Final",
          "Arquivos de Sprites, Gráficos e Sons",
          "Instalação do Unity",
          "Apresentação do Jogo",
          "Apresentação da Interface e Resolução",
          "GUI Text e Canvas (Texto com Programação)",
          "Chão, Paredes e Fundo (Sprites e Box Collider)",
          "Jogador e Movimento (RigidBody2D, Teclado e Mouse)",
          "Colisão Muda Direção (OnCollisionEnter2D)",
          "Inimigos a Cada X Segundos (InvokeRepeating )",
          "Inimigos em Posições Aleatórias (Random Range)",
          "Sprites no Chão, Camadas e Alinhamento em Grade",
          "Animação dos Inimigos (Animation, Animator)",
          "Animação do Jogador(Animation, Animator, Flip)",
          "Pontuação na Tela e Acesso Entre Objetos",
          "Reiniciar o Jogo (Scene Manager)",
          "Pause Game (Canvas, Button, Text)",
          "Interface Para Reinício do Jogo",
          "Ornaments (Enfeites do Cenário)",
          "Canvas Responsivo e Exportação",
          "Conclusão do Jogo"
        ],
        "Flappy Bird": [
          "Arquivos do Flappy Bird",
          "Configuração Inicial e Resolução",
          "Adicionando Jogador",
          "Pulo do Jogador",
          "Script dos Canos em Movimento",
          "Gerador de Canos (Spawner, InvokeRepeating)",
          "Canos em Posições Aleatórias (Random Range)",
          "Animação do Jogador ao Pular",
          "Chão Infinito",
          "Função Para Atualizar Pontos",
          "Pontuação e Chamadas de Função",
          "Fim de Jogo e Reinício",
          "Tutorial, Game States",
          "Conclusão",
          "Exportando Para Android"
        ],
        "Aulas Particulares, Consultoria e Freelances": [
          "Aulas Particulares, Consultoria e Freelances"
        ]
      },
      "requirements": [
        "Computador com Windows ou MAC",
        "Unity 3D (Tudo poderá ser feito usando a versão Gratuita)",
        "Não é necessário saber programação (Será ensinado durante o curso)"
      ],
      "description": "Um curso para quem sempre sonhou em criar seus próprios jogos que vai te ensinar Conceitos Teóricos de Game Design junto com a Codificação em C# do seu primeiro game na Unity 3D!\nTorne-se um desenvolvedor e dê asas a suas ideias com uma ferramenta gratuita de imenso potencial para jogos 2D ou 3D.\nVocê aprenderá do ZERO\n\n(Não requer conhecimento prévio com programação) a utilizar a ferramenta para criar um jogo trabalhando com:\nDiferentes Resoluções\nElementos Gráficos (GUI) e Canvas\nSprites\nBox Collider\nCorpos Físicos(RigidBody2D)\nControle com Teclado e Mouse\nDetecção de Colisões(OnCollisionEnter2D)\nRepetir Função(InvokeRepeating)\nAleatório(Random Range)\nAnimações(Animation,Animator)\nPontuação na Tela\nReiniciar Fase\nPausar o Jogo\nEnfeites de Cenário\n-Exportação do Jogo\nAlém disso você terá suporte individual para tirar suas dúvidas e responderá a questionários para reforçar os seus conhecimentos.\nAo finalizar o curso você receberá um Certificado.\nTá esperando o quê? Até!",
      "target_audience": [
        "Pessoas que queiram aprender a criar jogos utilizando C#",
        "Pessoas sem qualquer experiência em programação"
      ]
    },
    {
      "title": "Unity C# ile Baştan Sona Platform Oyunu",
      "url": "https://www.udemy.com/course/2022-unity-ile-bastan-sona-platform-oyunu/",
      "bio": "Unity 2d ile bir platform oyununun baştan sona hazırlanması",
      "objectives": [
        "2D Karakter hareketlerinin tüm detayları",
        "Tilemap ile sahne tasarımı",
        "Physics 2d raycast detayları",
        "Cinemachine ile kamera teknikleri",
        "Ses ekleme metodları",
        "Değişik düşman karakterleri oluşturma"
      ],
      "course_content": {
        "Giriş": [
          "İndirim kuponu ile nasıl kayıt olurum?",
          "Neden Unity?",
          "Oyunumuzu tanıyalım",
          "Oyundaki paketlerini tamamını nerden bulabiliriz?"
        ],
        "Zemini ve karakterimizin hareketlerini ayarlayalım": [
          "Unity'yi açıp 2d proje oluşturalım",
          "Tilemap ile zemini çizelim",
          "Karakterimizi sahneye ekleyelim",
          "Karakterimize hareket verelim",
          "Karaktere zıplama hareketi verelim",
          "Çift zıplama hareketini yapalım",
          "Karakterimizin animasyonlarını yapalım",
          "Animasyonları kodlayalım",
          "Karakterin yönünü ayarlayalım"
        ],
        "Kamera ayarlarını yapalım": [
          "Kamera takibini sağlayalım",
          "Kameranın bakış açısını sınırlayalım",
          "Sahnemizi yeniden düzenleyelim",
          "Background kamera ile birlikte hareket etsin"
        ],
        "Sahneye altın, ateş ve bloklar yerleştirelim": [
          "Toplanacak altınları yapalım",
          "Altınlar için efekt oluşturalım",
          "Yanan ateş oluşturalım",
          "Karakterin canını azaltan fonksiyonu yapalım",
          "Ateşe çarpınca geri tepki veren fonksiyonu yazalım",
          "Blokları oluşturalım",
          "Parlayan bloklara çarpışmayı gerçekleştirelim"
        ],
        "Karakterimiz için UI elemanları oluşturalım": [
          "Player için can barını ve coin göstergesini yapalım",
          "UI controllerini yapalım"
        ],
        "Sahneye NPC karakter ve kuş ekleyelim": [
          "Sahnemize NPC karakter ekleyelim",
          "Karakterin geçtiği yola ışıklar yerleştirelim",
          "Sahneye kuş ekleyelim",
          "Kuşa animasyon verelim"
        ],
        "Karakterimize kılıç animasyonu ekleyelim": [
          "Karakterimize ölme animasyonu verelim",
          "Karakterimize kılıç verip animasyonlarını yapalım",
          "Kılıçlı animasyonu kontrol edelim",
          "Normal halden kılıçlı hale geçelim",
          "Parçalanacak sandık oluşturulalım",
          "Kılıcı vurma animasyonunu yapalım",
          "Kılıcı vurunca sandık parçalansın",
          "Kılıcı vurma hatasını giderelim",
          "Sandığa vurunca parlama efekti oluşturalım",
          "Sandığı kırınca altınlar çıksın"
        ],
        "Düşman örümcek oluşturalım": [
          "Düşman örümceği oluştururalım",
          "Örümceğe belli iki nokta arasında hareket verelim",
          "Karakterimiz sınırlar içine örümcek onu takip etsin",
          "Örümcek karakterimize saldırsın",
          "Karakterimiz örümceğe zarar versin",
          "Örümceğin sağlık durumunu kontrol edelim"
        ],
        "Karakterimize zarar verecek yarasa oluşturalım": [
          "Yarasa oluşturup animasyonlarını yapalım",
          "Yarasayı karaktere doğru hareket ettirelim",
          "Yarasa karakterimize hasar versin",
          "Düşmanları öldürünce iksir çıksın"
        ],
        "Karakterimize mızrak animasyonları ekleyelim": [
          "Karakterimize mızrak animasyonları ekleyelim",
          "Karakterimizi mızrak moduna geçirelim",
          "Boğa animasyonlarını yapalım",
          "Boğayı hareket ettirelim",
          "Mızrağı fırlatalım",
          "Boğa karakterimize zarar versin"
        ]
      },
      "requirements": [
        "Oyun geliştirme konusunda istek ve arzuya sahip olmalısın.",
        "Bu kurs için en azından temel düzeyde unity bilgin olması tavsiyemdir."
      ],
      "description": "Bu kurs, modern Oyun Geliştirmede (Unity 2D 2022) kullanılan en yeni içerik ve en yeni tekniklerle hazırlanmıştır.\nUnity'yi ilk kez bu setle çalışmaya başlamak sizin için doğru bir tercih olmayabilir. Şayet sıfır seviyesinde iseniz tarafıma ait Unity ile Oyun Programlama eğitim setimiz ile bu yolculuğa başlamanız sizin için uygun bir tercih olacaktır. Çünkü bu set içinde programlamanın temel mantığından çok öğrenmiş olduğumuz kodların ne işe yaradığı anlatıldı.\nBir şeyi öğrenmenin en kolay yolu onu en eğlenceli bir şekilde öğrenmektir. Bu eğitim setindeki detayların tamamı işi eğlenceli yolla öğretmeyi amaçlamaktadır. Bu setin tamamında baştan sona tek bir oyun anlatılmıştır.\n\n\n\n\nSet içinde geçen bölümlere göre konularımız şu şekildedir:\n1.bölümde neden Unity'yi tercih etmeliyiz ve oyunun tanıtımı yapıldı.\n\n\n2.bölümde karakterimize ve karakterimizin yürüyeceği zemine ait tüm detaylar anlatıldı.\n\n\n3.bölümde karakterimizi takip eden kamera sistemi ve bu kamera sisteminin sınırları anlatıldı.\n\n\n4.bölümde sahneye altınlar ve bloklar yerleştirildi. Ve karakterimizin bu nesneleri efektli bir şekilde toplama detaylarına değinildi.\n\n\n5.bölümde karakterimizin can ve topladığı altınları gösteren UI canvas elemanları oluşturuldu.\n\n\n6. bölümde açı mantığını iyi kavramak amacıyla sahneye bir kuş eklendi ve detaylı şekilde kodlaması yapıldı.\n\n\n7.bölümde karakterimize kılıç animasyonu eklendi. Ve bu kılıcın düşmanlara ve eşyalara doğru şekilde zarar verebilmesi için ince noktalara değinildi.\n\n\n8.bölümde örümcek oluşturuldu. Ve karakterimizle olan mücadelesi anlatıldı.\n\n\n9. bölümde sahneye yarasa eklendi ve yarasanın uçma animasyonları anlatıldı.\n\n\n10.bölümde karaktere mızrak animasyonu eklendi. Ve mızrakla vurabileceği boğa düşmanı eklendi. Bu konu içinde Raycast tekniklerine değinildi.\n\n\n11.bölümde sahneye rotasyon mantığını öğreten bir nesne eklendi.\n\n\n12. bölümde üzerinde çalışılan tüm materyaller birinci sahnede düzenli şekilde yerleştirildi.\n\n\n13.bölümde karaktere ok animasyonu eklendi. Bu bölüm içinde object pool mantığı detaylı şekilde anlatıldı.\n\n\n14.bölümde karaktere tırmanma yeteneği sağlandı. Bu bölüm içinde layermask mantığı detaylı şekilde incelendi.\n\n\n15.bölümde cinemachine ile kamera takip detayları üzerinde konuşuldu. Ve cinemachine teknikleri kullanılarak animasyonlar arası yumuşak geçiş teknikleri anlatıldı.\n\n\n16.bölümde UI butonlar oluşturulup karakterin tüm modları arasında tercih seçeneği oluşturuldu.\n\n\n17.bölümde karakterimizin son mücadele edeceği düşman iskelet oluşturuldu. Bu iskeletlerin tümünün ölmesi durumunda oyunun bitirilmesi anlatıldı.\n\n\n18.bölümde pause ve bitiş panelleri tasarlanıp kodlandı. Ve bu panellerdeki butonlar ile sahneler arası geçişler anlatıldı.\n\n\n19.bölümde sahneler yeniden düzenlendi. Son rötuşlar yapıldı.\n20. bölümde bazı düzeltmeler gelecek.",
      "target_audience": [
        "Oyun programlamaya meraklı kişiler",
        "Unity'de belli bir seviyede olup kendini daha fazla geliştirmek isteyenler",
        "Oyun geliştirmeyi kariyeri olarak hedefleyenler",
        "Oyun mekaniklerindeki ince detayları merak edenler"
      ]
    },
    {
      "title": "Aprende a crear un videojuego RPG en 2D con Unity",
      "url": "https://www.udemy.com/course/aprende-a-crear-un-videojuego-rpg-en-2d-con-unity-2021/",
      "bio": "Aprende a crear un videojuego RPG en Unity implementando diferentes mecánicas que potenciarán tus habilidades en C#",
      "objectives": [
        "Aprende a crear un videojuego de tipo RPG",
        "Profundizaremos en las mecánicas mas populares de un juego RPG",
        "Potenciarás tus conocimientos de Programación con C#",
        "Entenderás la programación Orientada a Objetos",
        "Aprenderás a utilizar patrones de Programación.",
        "Empezarás a utilizar conceptos de Programación de nivel Intermedio"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos muy sólidos en el manejo de Unity",
        "Tener una base sólida en programación con C#",
        "Unity versión 2021.3",
        "Tener un ordenador o portátil que pueda correr Unity"
      ],
      "description": "¡Bienvenido al Curso de desarrollo RPG 2D con Unity!\nEn este curso de nivel Básico-Intermedio aprenderás todo lo necesario para desarrollar tu primer videojuego de tipo RPG con el motor Unity y con el lenguaje de programación C#.\nCrearemos al personaje y sus componentes principales como Movimiento, Animaciones, Salud, Maná, Experiencia, Stats y Atributos.\nCrearemos nuestro mapa utilizando RuleTiles para automatizar la creación de escenarios con Unity y Tilemaps.\nCrearemos el movimiento de nuestra cámara usando Cinemachine.\nCreamos nuestro inventario con el cual recogerás Items y podrás moverlos, usarlos, equiparlos y removerlos.\nCrearemos a nuestros NPC y el sistema de Diálogos.\nCrearemos un sistema de Quests.\nCrearemos un sistema de inteligencia artificial para nuestros enemigos.\nCrearemos mecánicas de combate para que nuestro personaje pueda luchar con los enemigos.\nCrearemos un sistema de Loot Drop para poder recoger Items de enemigos derrotados.\nCrearemos un sistema de Tienda donde podremos comprar Items.\nCrearemos un sistema de Crafting con el cual podremos crear Items a base de Recetas.\nCon este curso potenciarás tus conocimientos de programación con C#, tocaremos varios temas interesantes como:\nSingleton Pattern\nHerencia\nPropiedades\nClases abstractas\nMétodos Virtuales\nTe invito a que veas el video de presentación del curso para tener una idea de todos los temas que se desarrollarán.\nNo dudes en realizar una pregunta cuando te encuentres con errores y no puedas avanzar, con mucho gusto te ayudaré.\n¡Suerte con el Curso y disfrútalo!\n¡Empecemos a crear videojuegos!",
      "target_audience": [
        "A todos los estudiantes que deseen aprender a crear su primer videojuego de tipo RPG.",
        "A todos los estudiantes que quieran potenciar sus conocimientos de Programación en C#.",
        "A todos los estudiantes que quieran ser profesionales en el mundo del desarrollo de Videojuegos.",
        "A todos los estudiantes que quieran aprender mecánicas reales de Videojuegos.",
        "A todos los estudiantes que quieran profundizar en el motor de videojuegos de Unity.",
        "A todos los estudiantes que quieran profundizar en el motor de videojuegos de Unity."
      ]
    },
    {
      "title": "Criação de jogos básicos com C# e Unity 3D",
      "url": "https://www.udemy.com/course/criacao-de-jogos-basicos-com-c-e-unity-3d/",
      "bio": "Crie 3 projetos do zero, com colisões, sons, efeitos e muito mais usando todo o poder do C# e da Unity 3D",
      "objectives": [
        "Você será capaz de criar games simples com a ferramenta Unity 3D",
        "Você será capaz de criar games simples com a linguagem C#",
        "Você será capaz de utilizar GameObjects, Materials, Nested Prefabs e Variantes nos seus games",
        "Você será capaz de utilizar Movimentação vetorial, interpolação, Física básica, colisores e triggers nos seus games",
        "Você será capaz de utilizar GetComponent e navegar entre as referências dos seus games",
        "Você será capaz de utilizar Controles e Inputs através de eventos nos seus games",
        "Você será capaz de trabalhar com UI e entender ancoragem nos seus games",
        "Você será capaz de utilizar Interfaces",
        "Você será capaz de utilizar Enums",
        "Você será capaz de utilizar scripts em eventos do Animator, Animator Overrides e controlar a mudança de estados",
        "Você será capaz de utilizar Coroutines e Yield Instructions",
        "Você será capaz de utilizar sistemas Assíncronos",
        "Você será capaz de utilizar Singletons",
        "Você será capaz de utilizar Ref/Out",
        "Você será capaz de usar Abstract, Virtual e Overrides",
        "Você será capaz de guardar dados entre sessões através de .jsons",
        "Você será capaz de construir e utilizar seus próprios delegates",
        "Você será capaz de utilizar ScriptableObjects",
        "Você será capaz de utilizar Tweeners, Linearmente e criando movimentos curvos",
        "Você será capaz de criar seus próprios métodos de extensão(Extensions)",
        "Você será capaz de fazer um sistema de mudar de estágio(cenas)",
        "Você será capaz de criar um sistema de loot"
      ],
      "course_content": {
        "Apresentação": [
          "Sobre o curso",
          "Como conseguir ajuda?",
          "Preparação do ambiente",
          "Editor de Texto",
          "Mão na massa geek!"
        ],
        "Entendendo a Ferramenta Unity": [
          "Introdução da Seção",
          "Programação Orientada a Componentes",
          "MonoBehaviour",
          "Eventos-Funções Awake/Start/OnEnable",
          "Eventos-Funções Update/FixedUpdate/LateUpdate",
          "Revisão",
          "Criando Geometria Básica",
          "Luzes",
          "Câmera e Luz em 2D",
          "Materials e como aplicar",
          "Inspector e pré-definindo variáveis",
          "GameObjects e Prefabs",
          "Revisão"
        ],
        "Projeto 1 - Parte 1 - Pong": [
          "Introdução da Seção",
          "Criando uma nova cena e o Background",
          "Jogadores e Controles",
          "Jogador 2 e Velocidade de movimento",
          "Adicionando física básica",
          "Movendo RigidBodies",
          "Bola, ângulo e colisões",
          "Revisão",
          "Triggers e detecção de pontuação",
          "Painel de Pontuação",
          "UI e ancoragem",
          "Sound Fx",
          "Criando uma Build jogável",
          "Revisão"
        ],
        "Projeto 1 - Parte 2 - Tunando o Pong": [
          "Sistemas de Partículas",
          "Personalizar o projeto"
        ],
        "Projeto 2 -Space Invaders: Diferentes formas de Inputs, Corte de Sprites e Tiros": [
          "Introdução da Seção",
          "Novo projeto e cortando um Sprite Atlas manualmente",
          "Animator",
          "Slice e Trim no Sprite Editor",
          "Nave do jogador e GetAxis",
          "GetButton e Pixel per Unit",
          "Novo Input do 2019.3+",
          "Revisão",
          "Aprimorando o Input para o game",
          "Criando os Tiros da nave",
          "Movimentação e triggers dos tiros",
          "IShootable e Enum",
          "Adicionando os Aliens",
          "Tiros dos Aliens",
          "Revisão"
        ],
        "Projeto 2 - Space Invaders: Animação, Barreiras, Colisões e Aliens atacando": [
          "Introdução da Seção",
          "Animação dos Tiros",
          "Efeito dos tiros/Eventos do Animator",
          "Animator Override e Animação da Morte do Alien",
          "Quantidade de vidas/Animação de Morte do Jogador",
          "Frames de Invencibilidade",
          "Barreiras",
          "Revisão",
          "Colocando os aliens na posição e numa matriz",
          "Fazendo apenas os aliens da frente atacarem",
          "Movimentação dos Aliens",
          "Detecção de colisão com a parede e voltar",
          "Passando o Script de um GameObject para outro",
          "Revisão"
        ],
        "Projeto 2 - Space Invaders: Sons, comportamento dos aliens e HighScore": [
          "Introdução da Seção",
          "Avanço dos aliens",
          "Velocidade dos aliens",
          "Travando o movimento vertical do Jogador, barreiras laterais e cooldown",
          "UI de pontuação",
          "Adicionando a Nave especial",
          "Comportamento da Nave",
          "Criando o sistema de game over",
          "Revisão",
          "Condição de Derrota",
          "Condição de Vitória",
          "Salvando e carregando o Hi-Score",
          "BGM",
          "BGM Pt 2",
          "Sound FX",
          "Revisão"
        ],
        "Salvando e Construindo o Game": [
          "Introdução da Seção",
          "Pooling dos tiros",
          "Salvando com ScriptableObjects",
          "Salvando com .JSONs",
          "Revisão",
          "Backup final",
          "Tunando o Space Invaders"
        ],
        "Projeto 3 - Parte 1 - Galaga: Criando a base do jogo": [
          "Introdução da Seção",
          "Criação do projeto",
          "O background de estrelas",
          "Movimento da Nave",
          "Weapons",
          "Bullets e Pooling",
          "Explosions e Animators",
          "Variantes e Comportamentos de tiro",
          "Ângulo do tiro e Animator do jogador",
          "UI de vidas",
          "Pickups",
          "Weapon Pickups",
          "Revisão"
        ],
        "Projeto 3 - Parte 2 - Galaga": [
          "Introdução da Seção",
          "Trocando de armas",
          "Evento FireWeapons",
          "Ammo",
          "Life Pickup",
          "Chaser Bullet",
          "Perfect e Limited Chase",
          "Aprimoramentos do Chaser",
          "Drops/Loot",
          "Instalando um Tweener",
          "Catmull e Curvas de Bezier",
          "Encontrando o Control Point automaticamente",
          "SetEase e Aleatorizando a direção da curva",
          "Player Dive",
          "Revisão"
        ]
      },
      "requirements": [
        "Necessário ter realizado o curso Programação para Leigos da Geek University ou ter conhecimentos equivalentes;",
        "Necessário ter realizado o curso Algoritmos e Lógica de Programação da Geek University ou ter conhecimentos equivalentes;",
        "Necessário ter realizado o curso Programação em C# da Geek University ou ter conhecimentos equivalentes;",
        "Necessário ter nas suas últimas versões mais atualizadas, ou o Windows, ou o Linux (Ubuntu), ou o Mac.",
        "Necessário ter conexão à internet para baixar os softwares"
      ],
      "description": "O mercado de games é bilionário e não para de crescer no mundo todo.\nO Brasil é o terceiro maior mercado de games do mundo, e as empresas de criação de jogos nunca tiveram tantas oportunidades.\nAlém de ser divertido, neste curso você aprenderá desde o zero a criar jogos simples e principalmente a dominar uma das ferramentas mais poderosas da atualidade para criação de jogos: A Unity 3D utilizando a linguagem de programação C#.\nA demanda por profissionais programadores de  games nunca esteve tão alta, afinal, enquanto antigamente seria necessário ser contratado por uma empresa ou estúdio para poder trabalhar desenvolvendo jogos agora você pode criar seus games em qualquer lugar e publicá-los nas plataformas de jogos indies.\nPor ser uma linguagem de programação versátil, simples de aprender e muito poderosa, C# possui recursos que, apesar de simples de se utilizar, tornam o aprendizado muito divertido e a Unity 3D pode ser utilizada para criação de qualquer tipo de game, dos mais simples aos mais complexos, seja para desktop, internet ou mobile\nNeste curso, a Geek University traz para você mais de 14 horas de conteúdo onde você aprenderá do básico ao avançado, com explicações claras e programação passo-a-passo a criar jogos simples com todos os recursos da Unity 3D, sem deixar nada pra traz e o melhor de tudo, realizando repetições durante o decorrer do curso para auxiliar na fixação do aprendizado.\nAlém de tudo, são cerca de 3 projetos espalhados pelas seções para que você possa praticar tudo que aprender aqui neste curso!\nAprenda sobre:\n- Instalação, configuração e uso da poderosa Unity 3D;\n- Desenvolva do zero o jogo Pong;\n- Desenvolva do zero o jogo Space Invaders;\n- Desenvolva do zero o jogo Galaga;\n- Aprenda adicionar colisões, sons e efeitos nos jogos;\n- Pratique com exercícios, desafios e projetos;\n- E muito mais!\nNão deixe a oportunidade passar mais uma vez. Sua hora de criar seus próprios games chegou!",
      "target_audience": [
        "Programadores querendo se iniciar em desenvolvimento de jogos",
        "Entusiastas de jogos querendo conhecer a ferramenta Unity",
        "Programadores ou entusiastas querendo aplicar todo o poder da linguagem C# na criação de jogos"
      ]
    },
    {
      "title": "UNREAL ENGINE 5 : Guide complet développeur de jeux",
      "url": "https://www.udemy.com/course/developpeur-unreal-engine-5-blueprint-guide-complet-creer-des-jeux/",
      "bio": "Le cours complet pour apprendre à créer des jeux vidéo avec la dernière version de Unreal Engine (UE5), Blueprint & C++.",
      "objectives": [
        "Apprendre Unreal engine 5",
        "Découvrir le développement de jeux vidéo",
        "Coder avec le langage de programmation Blueprint",
        "Créer des jeux 3D avec Unreal Engine 5",
        "Utiliser des modèles 3D pour level designer des scènes",
        "Programmer des interactions avec Blueprint",
        "Découvrir le langage de programmation C++",
        "Développer des fonctionnalités avec C++ sous Unreal engine 5",
        "Comprendre la différence entre une classe C++ et Blueprint",
        "Prendre en main les nouveautés de la version 5 de Unreal engine"
      ],
      "course_content": {
        "Introduction et découverte de Unreal Engine 5": [
          "Introduction / Présentation du cours Unreal Engine 5 & Blueprint",
          "Installer Unreal Engine 5",
          "Avant de continuer le cours (important)",
          "Découverte de l'interface d'UE5",
          "A propos des touches clavier (Input)",
          "Les templates de jeux du launcher Epic games",
          "Comprendre ce qu'est un Actor sous Unreal",
          "Où trouver les modèles 3D ?",
          "Importer des modèles 3D et ressources pour pouvoir créer des niveaux",
          "Fixer le problème des textures qui n'apparaissent pas dans certains cas.",
          "Utiliser les assets pour créer une scène (un niveau du jeu)",
          "Un souci avec la plateforme mouvante ? Codez en une vous même avec Blueprint !"
        ],
        "Vos premiers pas en programmation avec Blueprint": [
          "A propos de cette section",
          "Découverte de Blueprint, le langage de programmation visuel",
          "Créer et utiliser des variables avec Blueprint",
          "Les conditions et les boucles en Blueprint",
          "Modifier la couleur d'un objet avec un code Blueprint"
        ],
        "Plus loin avec la programmation Blueprint et création d'un personnage de jeu": [
          "Créer un game mode et comprendre l'utilité",
          "A propos de la gestion es inputs (touches clavier / souris / manettes)",
          "Coder un script de déplacement du personnage FPS",
          "Détecter des collisions entre le personnage et les éléments du décor (Trigger)",
          "Une autre solution pour ouvrir la porte avec Blueprint",
          "Interagir avec le niveau : plus de pratique avec les déclencheurs / triggers",
          "Le store d'Unreal, télécharger un projet complet et personnage 3ème personne",
          "Télécharger les quelques scripts blueprint que nous avons écrits."
        ],
        "Découverte du nouveau système d'Input : Enhanced Input": [
          "Le nouveau système d'Input d'Unreal",
          "Utiliser l'Enhanced Inputs System d'Unreal Engine"
        ],
        "Cadeau N°1 : Des modèles 3D gratuits pour vos projets.": [
          "Télécharger les modèles 3D cadeau pour suivre le cours avec mes assets.",
          "Les modèles 3D gratuits d'Epic Games"
        ],
        "Projet : Développer un jeu d'aventure 3D avec Unreal Engine 5 & Blueprint": [
          "Création d'un level (une scène) pour le développement de notre jeu d'aventure 3D",
          "Mise en place du décor et de l'environnement 3D du jeu avec Unreal Engine 5",
          "Suite de la création du décor 3D pour notre platformer 3D sous Unreal 5",
          "Amélioration du rendu 3D grâce aux effets de post traitement de Unreal Engine 5",
          "Détection des collisions et possibilité de ramasser des objets comme des pièces",
          "Afficher des infos à l'écran grâce à une interface utilisateur (UI) et widgets",
          "Création d'un système de checkpoints et de respawn du personnage",
          "Détecter des collisions avec un ennemi. Blesser et être blessé selon l'impact",
          "Mouvement autonome des ennemis et pathfinding avec une IA simple sous Unreal 5",
          "Ramasser une clé et ouvrir la porte associée à la clé si on la possède",
          "Changer de caméra avec blueprint au cours du jeu pour montrer une situation",
          "Lire un panneau et afficher du texte à l'écran. Création du code blueprint",
          "Ajouter des effets audio spatialisés (son 3D) pour plus d'immersion",
          "Télécharger le projet complet (Ma version) et accéder aux sources complètes."
        ],
        "Compiler un jeu, créer un installeur et publier le projet en ligne": [
          "Générer l'exécutable (.exe) du projet Unreal Engine 5 / Blueprint",
          "Créer un installeur professionnel pour son jeu Unreal",
          "Publier et vendre son jeu vidéo sur une plateforme en ligne"
        ],
        "Conclusion du projet de jeu d'aventure 3D": [
          "Conclusion du projet et présentation des prochaines vidéos sur Unreal Engine"
        ],
        "Vidéos complémentaires pour apprendre toujours plus sur Unreal 5 !": [
          "Créer une plateforme mouvante avec Blueprint. Personnalisable à la volée !",
          "Astuce pour avoir de bonnes collisions sans passer par le collider de l'objet",
          "Générer un niveau à l'infini / Instancier des blocs en boucle (Spawn)",
          "Créer des fonctions réutilisables avec Blueprint",
          "Comprendre et utiliser le Game Instance : Passer des données entre les scènes",
          "Les Materials Instances sous Unreal Engine 5",
          "Classes parent et enfant (Parent/Child) Blueprint : Héritage",
          "Créer un custom Event avec Blueprint",
          "Event Dispatcher : Déclencher des événements simultanément chez plusieurs actors",
          "Enum, Struct et Interface : Plus loin avec blueprint",
          "Créer un terrain 3D : Landscape, Painting et Foliage pour sculpter un open world",
          "Créer un océan avec Unreal et le plugin Water d'Epic games",
          "Retargeting : Réutiliser des animations sur plusieurs personnages",
          "Modifier le personnage par un autre modèle 3D et l'animer avec un Blend Space",
          "Présentation de LYRA, le nouveau template pour Unreal 5 (FPS multijoueur)",
          "Quixel Bridge et ressources MegaScan : Modèles 3D ultra haute qualité",
          "Niagara : Créer un effet de particules \"nuage de poussière\" quand on marche.",
          "Créer une MiniMap et l'afficher dans un widget du HUD",
          "Utiliser Stable Diffusion pour créer une infinité de textures pour nos jeux",
          "Utiliser un template Unreal 5.3 et son nouveau système \"enhanced inputs\""
        ],
        "Cadeau N°2 : Une formation Unreal Engine complémentaire (pour réviser)": [
          "Tirer parti de ces vidéos complémentaires offertes pour apprendre au mieux",
          "Introduction à cette formation cadeau",
          "Installation d'UE",
          "Le launcher",
          "Templates d'Unreal",
          "L'interface du moteur de jeu",
          "Création d'une ambiance visuelle",
          "Importer des assets",
          "Comprendre les composants",
          "Initiation à Blueprint",
          "Les variables",
          "Structures de contrôle",
          "Accéder à un actor via Blueprint",
          "Les classes",
          "Créer un game mode",
          "Préparer un personnage FPS",
          "Coder le déplacement du personnage",
          "Détecter une collision",
          "Ramasser un objet",
          "Ouvrir une porte",
          "Le système d'UI",
          "Positionner des widgets",
          "Détecter un clic sur un widget",
          "Panels et containers"
        ]
      },
      "requirements": [
        "Un ordinateur et une connexion internet",
        "Avoir envie de créer des jeux avec Unreal Engine"
      ],
      "description": "Unreal Engine 5 (UE5) est un moteur de jeu vidéo développé par Epic Games et souvent considéré comme le moteur de jeu le plus puissant du monde. Il a notamment été utilisé pour développer le jeu à succès Fortnite. Le principal concurrent à Unreal Engine est Unity. Unreal Engine est plus souvent utilisés par les gros studios qui créent des jeux \"AAA\".\nCe guide complet sur Unreal Engine 5.0 vous permettra d'apprendre à utiliser ce moteur de A à Z et de développer vos premiers projets avec Unreal et son langage de programmation Blueprint. L'idéal pour devenir développeur de jeux indépendant.\nBlueprint est un langage de programmation visuel (vous n'écrivez pas de lignes de code) dans lequel le code s'écrit de façon visuelle (se dessine avec des blocs reliés). L'avantage de Blueprint c'est que c'est un langage qui permet de faire la même chose que le langage de programmation C++ mais est infiniment plus simple à apprendre. Nous allons beaucoup pratiquer ce langage de programmation visuel.\nDans une section dédiée vous découvrirez également comment développer vos jeux avec le langage de programmation C++ et comment créer vos propres classes C++. Cela vous donnera un aperçu concret de toutes les possibilités.\n\n\nPour bien démarrer votre apprentissage d'UE5, je vous offrirai gratuitement de nombreux modèles 3D que j'ai créés. Vous pourrez les utiliser librement pour des projets commerciaux ou non sans restrictions, c'est cadeau !\n\n\nL'objectif de ce tutoriel vidéo est de vous permettre d'apprendre rapidement et facilement Unreal Engine afin que vous puissiez obtenir des résultats concrets en quelques heures. Nous développerons un jeu vidéo 3D afin de mettre en pratique nos connaissances sur un projet concret.\n\n\nCette formation complète Unreal Engine 5 est découpée en plusieurs parties afin de vous permettre d'apprendre progressivement :\nDans un premier temps, nous allons prendre en main le moteur de jeu et son interface\nNous allons créer plusieurs petits prototypes pour voir les différentes possibilités\nNous découvrirons ensuite le langage de programmation Blueprint et nous créerons nos premières interactions\nJe vous proposerai plusieurs petits exercices pratiques pour appliquer vos connaissances directement\nAprès toutes ces étapes de montée en compétence, nous développerons un vrai projet de jeu 3D avec UE5 et Blueprint\nPar la suite vous aurez accès à de nombreuses vidéos complémentaires et bonus pour aller plus loin et ajouter des fonctionnalités spécifiques à vos projets.\nUne section dédiée au langage C++ est également présente pour ceux qui souhaitent aller plus loin.\nIl s'agit du cours le plus complet sur Unreal Engine 5 en français. C'est également le seul cours qui vous offre de nombreux modèles 3D texturés sans restrictions d'usage pour bien vous lancer dans la création de jeux. Et parce qu'un bonus n'arrive jamais seul, je vous offrirai également ma formation complète UE4 pour vous fournir des révisions/vidéos complémentaires.\nVous apprendrez à créer des niveaux (scènes 3D), ajouter un personnage capable de se déplacer et d'explorer, ramasser des objets, attaquer des ennemis ou subir des dégâts, lire un panneau, ouvrir une porte avec la bonne clé, utiliser le langage blueprint pour coder les interactions du jeu, déclencher un son, améliorer les graphismes, compiler et vendre vos jeux. Bref toutes les notions fondamentales pour bien vous lancer avec Unreal Engine 5 et pour devenir développeur de jeux indépendant.\nA l'issue de ce tuto, vous aurez les connaissances pour développer vos propres jeux 3D avec Unreal Engine. Vous aurez également réalisé avec moi votre premier jeu qui pourra être ajouté à votre portfolio à côté de la certification qui vous sera délivrée.\n\n\nSi vous souhaitez vous lancer dans l'aventure et apprendre à créer des jeux avec Unreal Engine 5, je vous invite à rejoindre ce guide complet qui fera de vous un développeur UE5 !\nVous obtiendrez un certificat de réussite et vous aurez un premier projet à mettre dans votre CV.",
      "target_audience": [
        "Toutes les personnes qui veulent découvrir Unreal Engine",
        "Les développeurs Unity souhaitant migrer vers Unreal",
        "Les développeurs souhaitant passer de la version 4 à la version 5 de Unreal",
        "Tous ceux qui veulent apprendre à créer des jeux",
        "Si votre objectif est d'obtenir un certificat de formation Unreal Engine 5",
        "Ceux qui veulent apprendre à développer des jeux avec un langage visuel (Blueprint)",
        "Ceux qui veulent découvrir la programmation avec C++"
      ]
    },
    {
      "title": "Créer un jeu en Pixel Art de A à Z avec Aseprite et Unity",
      "url": "https://www.udemy.com/course/creer-un-jeu-aventure-point-and-click-2d-guide-complet-unity-aseprite/",
      "bio": "Apprenez à créer vos propres jeux vidéo en pixel art avec Unity et Aseprite grâce à ce guide ultra complet (+35 heures)",
      "objectives": [
        "Développer un jeu d'aventure Point & Click de A à Z",
        "Créer les ressources 2D du jeu en pixel art",
        "Programmer le jeu avec C#",
        "Utiliser le logiciel Aseprite pour la conception des assets 2D",
        "Utiliser le logiciel Unity pour le développement du jeu",
        "Réaliser un projet de jeu vidéo de A à Z"
      ],
      "course_content": {},
      "requirements": [
        "Être passionné par le développement de jeux vidéo",
        "Avoir envie de créer ses propres assets en pixel art",
        "Avoir envie de développer un jeu avec Unity",
        "Vouloir découvrir le langage de programmation C#"
      ],
      "description": "Vous souhaitez vous lancer dans la création d'un jeu vidéo en pixel art mais vous ne savez pas par où commencer ? Ce guide de plus de 35 heures est fait pour vous ! Apprenez à créer votre propre jeu vidéo au travers d'un exemple concret : Un jeu Point & Click (Parfait pour travailler sur de nombreux cas pratiques).\nVous avez grandi dans les années 80, 90 voire les années 2000 ? Alors vous avez certainement connu la grande époque des jeux d'aventure Point and Click.\nManiac mansion, Day of the Tentacle, Monkey Island, Baphomet, Runaway, Deponia... Tous ces jeux ont du vous marquer et vous offrir des dizaines d'heures de bonheur. LucasArts est certainement l'une des société qui a le plus contribué au genre du \"Pointer & Cliquer\".\nEt si vous vous lanciez vous même dans l'aventure ? Et si c'est vous qui créerez le prochain jeu d'aventure Point & Click 2D qui marquera toute une génération ? Ce guide complet vous permettra d'apprendre à créer votre jeu d'aventure 2D de A à Z, de la conception des assets sous Aseprite jusqu'à la programmation du jeu avec C# sous Unity.\nL'objectif de ce tutoriel est de vous enseigner toutes les étapes de la création d'un jeu type Point & Click afin que vous puissiez par la suite vous lancer dans l'aventure. A l'issu de cette formation, vous aurez toutes les connaissances pour créer vos propres assets 2D en pixel art (Décors, objets, personnages animés) et pour développer votre projet sous Unity avec le langage de programmation C#.\nVous aurez accès à toutes les ressources utilisées dans le cadre de ce cours afin que vous puissiez suivre au mieux cette formation sans jamais être perdu.\n\nDans la première partie de cette formation consacrée à la création des assets 2D, vous apprendrez :\nCréer un ensemble d'assets complet pour réaliser un Point & Click 2D\nAnimer les personnages, et éléments de décors 2D ( Sprite)\nCréer des personnages secondaires\nConstruire des décors 2D variés pour structurer votre jeu ( la ville, une boutique, un laboratoire)\nApprendre à réaliser des effets spéciaux en pixel art pour améliorer l'immersion\nColoriser des scènes complexes 2D\nApprendre à utiliser Aseprite et ses nombreux outils nécessaire pour concevoir des assets personnalisés\nLe jeu pour lequel nous allons créer des assets est un Point & Click. Nous allons suivre le style des années 80/90.\n\nSynopsis du jeu : Le héros est coincé dans une époque qui n'est pas la sienne cherche par tout de rentrer chez lui. Il devra trouver un moyen de réparer la machine temporelle aidé par un scientifique fou qui lui proposera de réaliser des quêtes totalement folles. Le jeu vous proposera différent lieux à explorer, des énigmes à résoudre pour progresser dans votre quête.\nDans un humour très déjanté vous rencontrerez des personnages délirants et des lieux insolites.\n\nDans la seconde partie, nous allons passer au développement du jeu sous Unity. Vous découvrirez comment :\nAssembler des assets sous Unity pour créer les scènes du jeu\nUtiliser les Sprites et les animer avec les outils d'animation d'Unity\nDétecter les clics pour déplacer le personnage à l'endroit du clic\nInteragir avec les différents objets des scènes\nCréer des actions comme marcher, regarder, parler, ramasser etc.\nAfficher des textes et aides visuelles\nAfficher des phrases sur l'interface utilisateur\nSauvegarder des informations sur le disque de l'utilisateur\nAvoir un système d'inventaire avec les objets trouvés\nRésoudre des énigmes pour accéder à des zones\nCréer un journal de bord dans le jeu avec les notes prises\nEt tout ce que l'on peut retrouver dans un jeu d'aventure pointer & cliquer !\nCette liste n'est pas exhaustive, pensez à regarder les quelques vidéos gratuites ainsi que le sommaire complet pour vous faire une idée précise de ce que vous allez découvrir au travers des 35 heures de vidéos que nous mettons à votre disposition. De plus, sachez que toutes les ressources vous seront données en téléchargement.\n\n\nA l'issu de cette formation vous aurez un projet fonctionnel à mettre dans votre portfolio et vous obtiendrez un certificat de réussite à mettre dans votre CV. Il s'agit d'une formation pas à pas simple à comprendre dans laquelle vous réaliserez le projet de A à Z.\nSi vous voulez vous aussi créer votre propre jeu d'aventure point and click, retrouvez nous dans la première vidéo du cours le plus complet que vous puissiez trouver en français sur le sujet !",
      "target_audience": [
        "Si vous êtes nés entre 1960 et 2000, inutile de vous expliquer pourquoi ce cours est passionnant",
        "Tous les fans des jeux type point and click",
        "Tous ceux qui souhaitent découvrir ce genre",
        "Ou simplement ceux qui souhaitent s'initier au pixel art et au développement de jeux 2D"
      ]
    },
    {
      "title": "Spiele entwickeln mit Unity 3D- Erstelle eigene Games in C#",
      "url": "https://www.udemy.com/course/derkompletteunitykurs/",
      "bio": "2D und 3D Unity 5 ermöglicht professionelle Spieleentwicklung. Lerne im Kurs deine eigenen Spiele zu programmieren!",
      "objectives": [
        "Du wirst in der Lage sein in C# zu programmieren",
        "Du kannst diese Fähigkeiten auf andere Programmiersprachen übertragen",
        "Du lernst excellente Grundlagen der Videospieleentwicklung",
        "Du siehst wie Objekt orientierte Programmierung in der Praxis aussieht",
        "Du entwickelst Deine eigenen Spiele :)"
      ],
      "course_content": {
        "Einleitung und Installation": [
          "Das Lernst du hier",
          "WICHTIG - Wie du das meiste aus dem Kurs holst",
          "Was ist Unity eigentlich?",
          "Wichtiger Hinweis!",
          "Herunterladen und Installieren von Unity",
          "Der Aufbau des Unity Interfaces",
          "Unser erster Spieler",
          "Monodevelop vs Visual Studio"
        ],
        "C# Grundlagen": [
          "Was ist C# und warum verwenden wir es?",
          "Kurzer Überblick unserer ersten Klasse",
          "Variablen und Datentypen Int, Double, Float",
          "Variablen und DatenTypen - String Char und bool",
          "Funktionen (Klassen-Methoden)",
          "Arithmetische Operatoren",
          "Logische- und Vegleichsoperatoren",
          "Zuweisungsoperatoren",
          "If- Statements",
          "Arrays",
          "For Schleifen",
          "While Schleifen",
          "Do While Schleifen",
          "For-Each-Schleifen",
          "Klassen Konstruktoren"
        ],
        "Unser erstes Spiel Space Invader und Grundlagen": [
          "GameObjects, Components und Prefabs",
          "Intro zum Space Invader Spiel",
          "Erzeugen von Quads und unseren Wänden",
          "Erstellen von Animationen",
          "Hinzufügen von Physik zu unseren Elementen",
          "Unseren Spieler zu Leben erwecken",
          "Verwendung des Animators",
          "Kugeln Generieren",
          "Kugeln schießen und Richtung festlegen",
          "Elemente Zerstören",
          "Unsere Kugeln die Macht der Zerstörung geben",
          "Die restlichen Kollisionen hinzufügen",
          "Die Gegner Spawnen und Fertigstellen des Spiels"
        ],
        "Minesweeper": [
          "Minesweeper Intro - Das Endresultat",
          "Top Canvas anlegen",
          "Bottom Canvas und Optionsbuttons anlegen",
          "Anlegen unseres Scripts und kleine Übersicht",
          "Die Tile Klasse erstellen",
          "Erstellen unseres Feldes",
          "Zurechtschieben unserer Objekte",
          "Tile Clicks verwerten",
          "Felder automatisiert öffnen",
          "Die Minenupdate Funktion",
          "Gewinnbedingung hinzufügen",
          "Timer und Highscore Text hinzufügen",
          "Minenfeld zurücksetzen",
          "Der Buttoncontroller und finale Verbesserungen",
          "Fertiges Projekt Code"
        ],
        "Pong Spiel erstellen": [
          "Pong Intro",
          "Hintergrund Festlegen",
          "Hauptmenü Anlegen",
          "Optionsmenü anlegen",
          "Preferencesseite anlegen",
          "Unser Spielfeld anlegen",
          "Bewegen des Schlägers",
          "Dem Ball Bewegung geben",
          "Das Ball Script erweitern Teil1",
          "Das Ball Script erweitern Teil2",
          "Die GameFlowController Klasse Teil1 - Timer runterzählen",
          "Die GameFlowController Klasse Teil2",
          "Die GameFlowController Klasse Teil3 - kleine Bugfixes",
          "Menü und Preferences Funktionalität geben Teil 1",
          "Menü und Preferences Funktionalität geben Teil 2",
          "GameOver Funktionalität hinzufügen",
          "Ein Bisschen Sound - Teil 1",
          "Ein Bisschen Sound - Teil 2 und finale Schritte",
          "Hinzufügen der (AI) künstlichen Intelligenz"
        ],
        "Tower Defense Spiel": [
          "Tower Defense Intro",
          "Hier gibt es super Text -Tutorials zu Unity auf englisch",
          "Übersicht der Importierten Elemente",
          "Gute Quellen für Musik und Grafiken",
          "Plätze für unser Monster festlegen",
          "MonsterData Klasse",
          "Die Monster aufstufen",
          "Die Gegner hinzufügen und zum Laufen bringen",
          "Gegner in die richtige Richtung laufen lassen",
          "Die Gegnerwellen regeln",
          "Unsere Lebensleiste hinzufügen",
          "Lebensleiste der Gegner hinzufügen",
          "Schießmechanik",
          "Kugeln schießen Teil 1",
          "Kugeln schießen Teil 2",
          "Fertigstellung des Tower Defense Spiels"
        ],
        "3D Spiel Zombie Survivor": [
          "Intro",
          "Importieren von Assets und Erstellung eines Ozeans",
          "Beispiel für Sounddateien",
          "Erstellen unserer Map - Terrains und Texturen",
          "In der 3D Welt bewegen und die Welt zum Leben erwecken",
          "ES LEBT - Zombie, Physik und Bewegung",
          "Zombies ohne Ende - Spawnpunkte festlegen",
          "Wir lernen das Schießen - und wie unsere Kugeln schieben",
          "Monster abschießen und verschwinden lassen",
          "Lebens- und Punkteanzeige hinzufügen",
          "Das Attackierscript erstellen",
          "Die Lebensleiste des Spielers hinzufügen",
          "Sound einfügen",
          "ZombieSound einfügen und das Spiel fertigstellen"
        ],
        "Weiteres": [
          "Neues in Unity 5.6",
          "Dankeschön",
          "Bonus Lektion - Weitere Kurse von mir stark reduziert"
        ]
      },
      "requirements": [
        "Mac oder PC auf dem Unity 3D läuft",
        "Spaß an Videospielen"
      ],
      "description": "Update: Fragen in diesem Kurs werden nicht mehr von uns beantwortet. Wenn Du einen aktuellen Kurs haben möchtest, mit Support, dann schau dir bitte unseren neuesten Unity 3D Kurs an.\n\nLerne wie man Videospiele mit Unity 3D, dem kostenlosen Speileentwicklungsprogramm erstellt.\n\nWir fangen mit extrem einfachen kleinen Schritten an, es ist also egal ob Du bereits Programmieren kannst, oder ein kompletter Anfänger bist.\nEinstieg in Unity\nProgrammierung in C#\nCoole Animationen erstellen\nBenutzung von Unity's Physics System\nMenüs und Einstellungen erstellen\nErstellung von 2D und 3D Spielen\nUnd vieles mehr!\n\nDu erhältst grandiosen Support von mir und meinem Assistenten. Folglich stehen wir Dir zur Seite, falls Du mal nicht weiter weißt.\n\nDer Kurs ist komplett Projekt basiert, also keine ewig lange Theorie, sondern direkt coole eigene Spiele. Du entwickelst also von Anfang an echte Spiele.\n\nNachdem wir die Grundlagen der Programmiersprache C#, in etwa einer Stunde durchgearbeitet haben, beginnen wir bereits mit unserem ersten Spiel. Einem Space Invader Clon. Dabei wirst Du direkt lernen wie man einen Figur bewegt, wie man Spielephysik einfügt etc.\n\nDanach werden wir uns an ein alt bewährtes super Spiel machen \"Minesweeper\". Dabei handelt es sich um einen mega Klassiker. Dabei lernst Du Spielelemente wie Timer, Highscores, Verschiedene Bedienelemente etc. kennen.\n\nMit Minesweeper ist es aber noch nicht erledigt. Wir werden uns auch um Pong kümmern, einem anderen Klassiker. Hierbei werden wir uns jedoch vor Allem mit Menüs, Spieleinstellungen und der Künstlichen Intelligenz kümmern.\n\nAls krönenden Abschluss erstellen wir ein super umfangreiches Tower Defense Spiel. Diese Spieleart ist extrem beliebt und Du kannst ihn danach komplett anpassen und Dein eigenes Mega Spiel daraus machen.\n\nDieser Kurs ist das Beste was es im deutschsprachigen Raum gibt.\n\nEs ist folglich der ideale Kurs, wenn es darum geht geniale Videospiele mit Unity 5 zu entwickeln. Dem Tool, dass es ermöglicht Spiele für iOS, Android, PC, Xbox, PS4 etc. zu entwickeln und welches von einigen großen Entwicklerstudios verwendet wird.\n\nNimm jetzt teil! Du wirst es nicht bereuen!",
      "target_audience": [
        "Alle die mit dem PC oder Mac umgehen können",
        "Alle die Programmieren lernen wollen",
        "Alle die eigenen Spiele entwickeln wollen",
        "Blutige Anfänger die Lust auf eine Herausforderung haben",
        "Entwickler die Lust haben ein neues Tool zu lernen"
      ]
    },
    {
      "title": "2022 Unity الدورة الشاملة لصناعة الألعاب",
      "url": "https://www.udemy.com/course/unity2022/",
      "bio": "اصنع العاباً مبهرة حتى عندما تستخدم جرافيك بسيط مكون من (مربعات ومثلثات ودوائر) فقط - بأستخدام يونتي",
      "objectives": [
        "ستتعلم لغة السي شارب واستخدامها في اليونتي",
        "تكتسب خبرة في استخدام محرك العاب الـ يونتي",
        "(الاسرار التي تجعل الالعاب جميلة حتى عندما تستخدم جرافيك بسيط جداً (مثلاً مربعات ومثلثات فقط",
        "ستستخدم انواع الانارة الموجودة في اليونتي بشكل ممتاز",
        "الدوتوين الذي هو اضافة رائعه لليونتي لعمل انميشن من السكربت",
        "خصائص نظام الجزيئات الموجود في اليونتي واستخدامه لعمل تأثيرات جميلة",
        "ستتعلم عن الـ بوست بروسس والتأثيرات البصرية",
        "ستفهم كيف تجعل لعبتك يتم لعبها من قبل اكثر من لاعب على نفس الجهاز"
      ],
      "course_content": {
        "البداية": [
          "ما الذي ستتعلمه في الدورة؟",
          "رابط اللعبة النهائية التي سنقوم بأنشائها سوية",
          "رابط الدسكورد للتواصل معي والحصول على المساعدة",
          "تحميل وتنصيب اليونتي",
          "تحميل وتنصيب الفيجوال ستيديو"
        ],
        "لغة الـ C#": [
          "مقدمة القسم الثاني",
          "C# Compiler الـ",
          "C# Integers الـ",
          "C# Maths الـ",
          "C# Floats الـ",
          "C# Booleans الـ",
          "C# Strings الـ",
          "C# Conditions (if, else if, else) - الشروط",
          "C# Loops (For) - التكرار",
          "C# Arrays الـ",
          "C# Methods الـ",
          "C# Scope الـ",
          "اختبار القسم"
        ],
        "اساسيات اليونتي": [
          "مقدمة القسم الثالث",
          "انشاء بروجكت جديد في اليونتي",
          "التحقق من ربط اليونتي والفيجوال ستيديو",
          "نوافذ اليونتي (جديد)",
          "استيراد ملفات اللعبة",
          "الادوات الاساسية في اليونتي",
          "تصميم بيئة اللعبة",
          "تنصيب باكج الـ URP",
          "اجعل اللعبة تبدوا بشكل افضل مع البوست بروسس",
          "تصليح للبيئة",
          "اختبار القسم الثالث"
        ],
        "شخصية الاعب": [
          "مقدمة القسم الرابع",
          "RigidBody & Colliders - اساسيات الفيزياء في اليونتي",
          "انشاء سكربت خاص للاعب",
          "اضافة قوة خطية (RigidyBody AddForce)",
          "مدخلات الكيبورد (GetKeyDown)",
          "نظام المحاور في اليونتي",
          "اضافة قوة دورانية (RigidBody AddTorque)",
          "جميع خصائص كومبوننت الـ RigidBody",
          "اعداداتي للـ RigidBody",
          "قفزة الاعب الاولى والثانية",
          "تغيير لون اليونتي عند الـ Playmode"
        ],
        "الاعداء والاصطدامات": [
          "مقدمة القسم الخامس",
          "سكربت الـ Enemy Manager",
          "استدعاء عشوائي للعقبات",
          "حذف العقبات القديمة",
          "اكتشاف لمس الاعب للعقبات (Trigger Colliders)",
          "اكتشاف اصطدام الاعب بالارض (Collisions)"
        ],
        "Game Manager الـ": [
          "مقدمة القسم السادس",
          "Game Manager سكربت الـ",
          "Singleton ملاحظة بخصوص الـ",
          "اعادة تحميل اللفل عند موت الاعب"
        ],
        "التأثيرات الصوتية والتأثيرات البصرية": [
          "مقدمة القسم السابع",
          "الموسيقى والتأثيرات الصوتية",
          "نظام الـ Trail",
          "اساسيات الـ Particle System",
          "انشاء بارتكل سستم غبار ينفض عند قفز الاعب",
          "انشاء بارتكل سستم نيران تخرج من العقبة الاولى",
          "انشاء بارتكل سستم احتكاك للعقبة الثانية",
          "انشاء بارتكل سستم نيران متطايرة للبيئة"
        ],
        "الدوتوين والكامرا": [
          "مقدمة القسم الثامن",
          "تحميل وتنصيب الدوتوين",
          "تحسين قفزة الاعب بأستخدام الدوتوين",
          "تنظيف سكربت الاعب",
          "تعلم عن الـ Attributes",
          "عمل اهتزاز للكامرا عند القفز وموت الاعب - بأستخدام الدوتوين",
          "عمل دوران وتقريب او تبعيد للكامرا - بأستخدام الدوتوين",
          "مثود الـ OnUpdate للدوتوين",
          "اصلاح الـ Order In Layer للاعب",
          "الحدود الخارجية للعبة",
          "الجاذبية الجانبية"
        ],
        "النقاط والصعوبة": [
          "مقدمة القسم التاسع",
          "Score الـ",
          "High Score الـ",
          "الصعوبة وسرعة اللعبة العامة",
          "تنظيف البروجكت"
        ],
        "الانارة وتحسين اللعبة": [
          "مقدمة القسم العاشر",
          "بداخل لابتوب",
          "الانارة الاساسية للعبة",
          "الظلال",
          "اظهار الظلال بشكل تدريجي",
          "محاربة شعور التكرار في اللعبة عن طريق اضافة مناطق",
          "اكواد الألوان التي استخدمتها انا",
          "اضافة انواع جديدة من العقبات",
          "استدعاء العقبات الجديدة",
          "انارة تخرج من الشاشة (فيديو جديد)",
          "انارة الجزء السفلي من الشاشة",
          "ملاحظة مهمة"
        ]
      },
      "requirements": [
        "جهاز حاسوب وندوز او ماك"
      ],
      "description": "في هذه الدورة لصناعة الالعاب بأستخدام محرك Unity\nلن تتعلم تطوير الالعاب فقط, بل كيف تجعلها تبدوا بشكل جميل وتكون مسلية للعب\nبأستخدام اليونتي\nلغة الـ C#: اولاً وقبل كل شيء, ستتعلم عن لغة البرمجة السي شارب\nبكلمات اخرى ستفهم المتغيرات, الشروط, العمليات الرياضية, المصفوفات , التكرار, وغير ذلك\nمشروحة بشكل جرافيكي بسيط\n\nادوات اليونتي: ثانياً ستفهم محرك العاب اليونتي وادواته لبناء الالعاب\n\nالفيزياء في اليونتي: ستتعلم عن الفيزياء والاجسام في اليونتي, تتحكم بالجاذبية من السكربت وتقوم بأكتشاف الاصطدامات\nوغير ذلك\n\nنظام الجزيئات (البارتكل سستم): ستفهم جميع خصائص نظام الجزيئات\nوكيفية صنع تأثيرات نار, احتكاك, تفجير, غبار بأستخدام فقط المربعات ايضاً !\n\nالانارة في اليونتي:  ستنقل لعبتك الى المستوى التالي بأضافة انارة جميلة تحسن من مظهر لعبتك\nبشكل كبير! وتتعلم استخدام خصائصهم\n\nمحرك الدوتوين: ستتعلم وتفهم الدوتوين الذي هو اضافة رائعه لليونتي لعمل انميشن من السكربت\nوستقوم بأستخدامه لعمل تأثيرات حركية مختلفة\nطريقة الدروس القصيرة\nوقتك ثمين!\nفي هذه الدورة قمت بعصر المحتويات وتقسيمها\nوعمل مونتاج احترافي لجعل الدروس قصيرة ومعبرة\nبمعدل 4 دقائق لكل درس\n\nبالتالي يسهل عليك فهم كل موضوع على حدا\n\nلن تجد دروس مخيفة بطول 20 دقيقة هنا!\n\nاحساس اللعبة\nمع كل قسم جديد نقوم بأضافة وتحسين اللعبة بشكل أكبر\nليس الهدف هنا فقط انك تقوم بانشاء لعبة\nبل الهدف انك تقوم بجعلها جميلة ومسلية ايضاً !\nوبالتالي عند تطويرنا عليها ستتعلم عن مفاهيم اساسية\nمستخدمة في جميع الالعاب\nالتقسيم (لمنع احساس التكرار في اللعبة)\nالاستجابة البصرية والصوتية\nالعمق\nالتحسين الشكلي\nتعليمات عن الصعوبة",
      "target_audience": [
        "لكل شخص يريد تعلم اليونتي لصناعة العاب جميلة",
        "للأباء الذين يريدون تعليم اطفالهم البرمجة بشكل مسلي (ينصح بعمر 11 سنة كحد ادنى)",
        "مطورين اليونتي الذين يريدون تطوير مهاراتهم"
      ]
    },
    {
      "title": "Programar Blueprints en Unreal Engine de 0 a profesional",
      "url": "https://www.udemy.com/course/blueprints-unreal/",
      "bio": "El curso definitivo para aprender a programar en Unreal Engine. Aprende mientras desarrollas!",
      "objectives": [
        "Crear la programación de juegos tanto Indies como AAA con inteligencia artificial, menús, distintos niveles y con acabados profesionales listo para publicarse en Steam, consolas u otras plataformas.",
        "Aprender nociones de programación gráfica avanzadas así como de balance de jugabilidad y curva de dificultad.",
        "Utilizar Unreal Engine para desarrollar videojuegos tanto indies como Triple A",
        "Dominar los increíbles blueprints de Unreal Engine 4 para poder programar juegos sin necesidad de picar código de forma eficiente y limpia.",
        "Conocer, usar y crear de forma profesional sistemas de interacciones complejas.",
        "Aprender a crear menús funcionales con gamepad o ratón con sistemas de localización a varios idiomas y guardado de opciones gráficas y de partida.",
        "Herramientas y conocimientos para detectar bugs, debuggearlos y arreglarlos de forma eficiente.",
        "Optimización de código para asegurar estabilidad absoluta tanto en plataformas móviles, consolas o de sobremesa.",
        "Perfeccionar conocimientos de programación en Unreal Engine utilizando Blueprints para dotar de lógica al juego"
      ],
      "course_content": {
        "Introducción y aclaraciones previas": [
          "Este curso ha sido premiado por EPIC GAMES, propietaria de Unreal Engine!!",
          "Curso compatible con Unreal Engine 5",
          "Clases y desarrollo profesional de juegos en directo por TWITCH! Únete!",
          "Porque usamos Blueprints y no solemos usar C++ trabajando con Unreal Engine 4",
          "Los archivos del curso",
          "Clases en directo gratuitas en Twitch",
          "Discord hispano de Unreal Engine para desarolladores",
          "Descargar e instalar Unreal Engine"
        ],
        "Introducción a Unreal Engine 4 orientada a programadores.": [
          "Navegación en Unreal Engine 4",
          "Manipulación de Objetos y Actores",
          "Interfaz de Unreal Engine 4",
          "Los archivos de tu proyecto en Windows",
          "Nomenclaturas peligrosas",
          "Navegación y manipulación de Blueprints"
        ],
        "Conceptos básicos de la programación mediante Blueprints: tu primer juego!": [
          "Variables y los conceptos \"Set\" y \"Get\"",
          "Introducción al Debug y las herramientas de Debugging de Blueprints",
          "El level Blueprint, Begin Play, Delay y otros nodos básicos",
          "Booleanos y gameloop del juego de desactivar la bomba completo!",
          "Condicionales y jugabilidad",
          "Variables y textos",
          "Textos Ingame",
          "Contadores y Textos Ingame complejos",
          "Feedback visual de la bomba: Partículas y Materiales",
          "Triggers e introducción a los Tags",
          "Triggers II",
          "Cronómetros",
          "Introducción a los Sonidos",
          "Modificar propiedades de los Sonidos",
          "Loops en los Blueprints mediante Delay"
        ],
        "Programación por Clases": [
          "Introducción a la Programación por Clases",
          "Componentes y Clases",
          "Triggers y Event Overlap en las Clases de Actor",
          "Evento Constructor y nodo Open Level",
          "Fade a Negro mediante HUD",
          "La importancia de comentar el código constantemente",
          "La clase Character",
          "Inputs de mando, teclados, ratón configurables y la clase Character",
          "Controlar la locomoción del jugador mediante Blueprints"
        ],
        "Introducción a la Comunicación entre Clases": [
          "Comunicar cualquier Blueprint con el Blueprint del jugador \"Character\"",
          "Comunicación mediante \"Custom Event\"",
          "Custom Event Parametrizable",
          "Funciones con Inputs y Outputs"
        ],
        "Clases de Actor Genéricas": [
          "CAMBIOS en UE5! Marketplace OUT. Llega FAB.",
          "Recursos AAA gratuitos de Unreal Engine 4",
          "Componentes de una Clase Actor de tipo \"Puerta\"",
          "Movimiento mediante el nodo \"Add Local Offset\"",
          "Timelines e Interpolaciones Lineales",
          "Sonidos",
          "Enumeradores",
          "Cuando y cuando no usar el Level Blueprint",
          "Comunicación con el Blueprint de Nivel con Event Dispatcher",
          "El Trigger Perfecto",
          "El Trigger Perfecto: Parte 2",
          "El Trigger Perfecto: Parte 3",
          "Tags múltiples",
          "Reestructurar Interfaz de Unreal Engine 4"
        ],
        "Juego de Aventura en Primera Perso utilizando todo lo aprendido": [
          "Diseño de Entornos: Parte 1",
          "Diseño de Entornos: Parte 2",
          "Métodos para rotar actores",
          "Pick up: Método simple",
          "Pick up: Método Fake",
          "Soltar Pickup",
          "Fade a blanco especial",
          "Pawn, jugador y gamemode sin jugabilidad",
          "Clase BONUS: Material simulando viajar entre estrellas.",
          "Mensajes a través de la interfaz de juego",
          "Evento scripteado en el Level Blueprint",
          "Camera Shake",
          "Scripting avanzado con clases",
          "Comunicación entre clase para level scripting",
          "Sonido Ambiental",
          "Interfaz de Juego",
          "Mostrar mensajes en la interfaz",
          "Sugerencias y Deberes",
          "Compilado y empaquetado en ejecutable."
        ],
        "Programación avanzada I: Comunicación mediante interfaces de Blueprints": [
          "Interfaces de Blueprints",
          "Bugs de Comunicación y End Overlap",
          "Interfaz de usuario e Interfaces de Blueprints",
          "Reespawn de Jugador automático",
          "Line Trace by Channel",
          "Line Trace y Reespawn",
          "Lince Trace y Comunicación entre Blueprints",
          "Dot Product",
          "Comunicación Lince Trace y Blueprint Interface",
          "Look At Trigger"
        ],
        "Juego de Terror": [
          "Diseño de Niveles",
          "Geometria No Euclidiana",
          "Luces Parpadeantes simples",
          "Curvas y Blueprints",
          "Light Functions"
        ],
        "Interacciones Complejas": [
          "Introducción a las interacciones complejas",
          "Line Trace para interacciones complejas",
          "Repaso sobre la comunicación entre blueprints compleja",
          "Estructuras de datos STRUCT",
          "Componente Child Actor",
          "Funcionamiento del Outline Glow para objetos interactuables",
          "El material de postprocesado Glow Outline",
          "Custom Depth y Custom Stencil",
          "Configuración de Outline en los Blueprints",
          "Constructor, Enumeradores y Outline de distintos colores",
          "Mensajes HUD de interacciones complejas",
          "Sonidos y estructuras Struct",
          "Debug de bugs de Outline Glow"
        ]
      },
      "requirements": [
        "Solo conocimientos básicos de informática son requeridos.",
        "Utilizaremos Unreal Engine 4 (que enseñaremos a descargarlo en las primeras clases) la gran mayoría de clases del curso.",
        "PC con Windows 7/8/10, x64 o bien un Mac con Mac OS X 10.9.2 o superior."
      ],
      "description": "Unreal Engine es sencillamente el motor más famoso y utilizado en la industria del videojuego, tanto por grandes producciones como Star Wars Jedi: Fallen Orden o Fortnite e incluso por equipos pequeños indie o desarrolladores en solitario.\nEste motor además cuenta con un sistema para programar juegos de forma visual (Sí, has leído bien, puedes desarrollar juegos sin picar una sola línea de código!) denominado Blueprints que puede utilizar cualquier persona sin conocimientos previos de animación!\n\n\nQué hace este curso especial?\n\nEn este curso veremos cómo programar Blueprints desde lo más básico de lo básico y acabaremos realizando durante las cuarenta horas de curso interacciones complejas, inteligencia artificial e incluso un menú principal con opciones de guardado, opciones gráficas y control mediante ratón o gamepad!\nSi deseas aprender Unreal Engine para programar juegos este es sin duda un curso perfecto para ti. Sin embargo, aunque el curso está centrado en la programación mediante Blueprints, también veremos otros aspectos de Unreal Engine incluído diseño de niveles y entornos e incluso eventos cutscene scripteados!\n\nEl curso está enfocado para ser eminentemente práctico. Desde la primera a la última clase jamás se explicará algo sin ejemplo práctico. Siempre trabajaremos bajo la premisa de que lo que estamos realizando va para un juego profesional el cual queremos explotar comercialmente, por lo que el curso tiene un componente práctico de principio a fin. Aquí no hemos venido a escuchar masterclases de teoría una tras otra explicando todo por separado y con ejemplos inconexos. No. Realizaremos ejercicios para un mismo juego e iremos construyendo siempre sobre lo que ya hemos hecho. Esto no solo hace que las clases sean eminentemente prácticas sino que también nos hará ver como de interconectadas están todas las partes de un videojuego; desde su menú principal a su evento scripteado más sencillo.\n\n\nEmpezaremos desde nivel zero programando una BOMBA (!!!!) que el jugador tiene que desactivar para ver los conceptos básicos de la programación visual.\nTras unas cuantas secciones donde veremos scripting de nivel pasaremos a programar por clases un pequeño nivel que tiene lugar en una nave espacial en la que el jugador tiene que realizar puzzles mientras el entorno se va destruyendo poco a poco. Aquí veremos por ejemplo como hacer llaves que abran puertas o que el jugador pueda recoger objetos.\nSeguiremos realizando la interfaz de nuestro juego y viendo como se comunica esta con distintos elementos de juego para mostrar la vida u otros elementos necesarios.\nEs entonces cuando nos sumergiremos en el mundo de los \"Actores\" complejos de Unreal Engine. Realizando Triggers, objetos interactuables con Outline y Glow, botones, palancas y todo lo necesario para crear un juego con distintos retos y componentes.\nCuando dominemos todo lo anterior entraremos de lleno en las interfaces de Blueprints y la comunicación compleja entre Blueprints utilizando referencias a otras clases, event dispatcher y demás!\nEn este punto generaremos un pequeño nivel de terror en el que realizaremos un entorno que cambia mientras el jugador lo explora con luces bien parpadeantes y epilépticas incluidas!\nLlegados a este punto, cambiaremos radicalmente de óptica para centrarnos en los sistemas que apoyan al juego. Primero veremos como traducir y localizar un juego utilizando Google Docs y seguidamente realizaremos ejercicios para dominar la persistencia y el guardado de datos de juego para poder realizar Savegames.\nSeguiremos poco a poco mejorando el juego introduciendo una pantalla de muerte, una pantalla de carga, hitmarkers, etc\nEn las próximas secciones veremos como animar e integrar en el juego una inteligencia artificial que sea capaz de perseguirnos y atacarnos.\nTambién veremos como comunicar todo el sistema de materiales de Unreal Engine con los fantásticos Blueprints, cosa que utilizaremos para hacer aparecer y desaparecer una barrera de energía al pulsar un botón y otros ejemplos diversos!\nPara acabar, una de las secciones más duras pero al mismo tiempo más útiles: realizaremos un menú principal con todos los features que este debe tener: Controles con ratón y mando, configuración de settings gráficos, menú de settings de juego, sistema de localización, menú de pausa y por supuesto guardado de partida!\nAdemás de todo lo anterior, échale un ojo a la sección extra del final de todo, donde puedes encontrar clases sueltas sobre temas importantes que merecen mucho la pena conocer, como el uso correcto de la consola de comandos para optimizar o como empaquetar correctamente un juego para distribuirlo en Steam u otras tiendas!\n\n\nQué nos hace unos buenos maestros?\nJuan Gabriel Gomila es actualmente el instructor en Español de Udemy con más estudiantes en sus cursos, activo desde 2015 y profesor de la universidad de Mallorca. Cuenta con su propia empresa de creación de videojuegos llamada Frogames y ha lanzado una infinidad de juegos para diversas plataformas.\n\nCarlos Coronado Muñoz (instructor con el que aprenderéis durante gran parte del curso) ha desarrollado más de 5 juegos en solitario con Unreal Engine para diversas plataformas entre las que se incluyen Nintendo Switch, Playstation, Steam o VR. Algunos de sus juegos como MIND: Path to Thalamus han ganado premios internacionales como el TITANIUM Indie Game of the Year Award o son considerador directamente GOTY por desarrolladores, youtubes y periodistas de prestigio como Infernium. Además, es profesor de creación de juegos con Unreal Engine y proyectos desde hace más de 4 años en la universidad de Barcelona (la única universidad de habla hispana que logra llegar al TOP 50 de QS World University Rankings). Además, sus cursos sobre Unreal Engine han sido premiados por EPIC GAMES con un Epic Mega Grant!",
      "target_audience": [
        "Apasionados de los videojuegos con ganas de crear sus propios juegos con herramientas profesionales y gratuitas! (Unreal Engine 4 es el motor de Fortnite, Rocket League y muchisimos otros!)",
        "Desarrolladores en solitario sin conocimientos de programación que quieran ser capaces se realizar juegos Indie sin aprender a picar código.",
        "Creadores y estudios de videojuegos con ganas de aprender Unreal Engine 4 y profundizar en los Blueprints.",
        "Diseñadores, artistas y programadores que quieran trabajar con Unreal Engine en la industria del videojuego.",
        "Programadores que quieran adentrarse en el mundo de la programación gráfica.",
        "Desarrolladores con nociones de Unreal Engine 4 que quieran profundizar en el uso de los Blueprints",
        "Artistas y diseñadores de videojuegos que quieran dominar la programación de juegos mediante programación visual."
      ]
    },
    {
      "title": "O Guia Definitivo para Desenvolvimento de Jogos com Unity",
      "url": "https://www.udemy.com/course/o-guia-definitivo-para-desenvolvimento-de-jogos-com-unity/",
      "bio": "Criado em parceria com a Unity Technologies: aprenda C# desenvolvendo jogos 2D e 3D com este guia abrangente",
      "objectives": [
        "Conceitos básicos do C#, tais como variáveis, declarações if e arrays",
        "Detectar colisões, receber entrada de usuários e criar movimentos de jogadores",
        "Criar power-ups, incluindo tiros triplos, raios laser, impulsos de velocidade e escudos",
        "Aplicar shaders que transformam o cenário do seu jogo",
        "Criar inimigos com comportamento básico de IA",
        "Coletar e destruir objetos do jogo",
        "Implementar efeitos sonoros, música de fundo e efeitos de partículas",
        "Ativar e usar o serviço Team Collaboration do Unity",
        "Navegar no Unity Engine e descubrir características únicas, como a Asset Store",
        "Distribuir seu jogo para diferentes plataformas, como web, móvel e PC"
      ],
      "course_content": {
        "Introducão": [
          "Apresentação",
          "Bem-vindo",
          "O quê podes fazer com Unity?"
        ],
        "Galaxy Shooter": [
          "Introducão ao Galaxy Shooter"
        ],
        "Configuração do projeto": [
          "Introdução à configuração do projeto",
          "Instalação do Unity",
          "Criação do projeto",
          "O editor do Unity",
          "Unity Teams: Collaborate",
          "Importação de Assets",
          "Criação da galáxia",
          "O quê esperar?"
        ],
        "Criação do Player": [
          "Introdução à criação do Player",
          "Configuração do Player",
          "Configuração da posição inicial",
          "Movimentação do Player",
          "Desafio: Input do usuário",
          "Revisão do desafio: Input do usuário",
          "Desafio: Limites do Player",
          "Revisão do desafio: Limites do Player",
          "Limpeza do código"
        ],
        "Sistema de tiros": [
          "Introducão ao sistema de tiros",
          "Configuração do Laser",
          "Instantiate",
          "Desafio: Comportamento do Laser",
          "Revisão do desafio: Comportamento do Laser",
          "Sistema de Cool Down",
          "Limpeza do código"
        ],
        "Power Up - Tiro triplo": [
          "Introdução ao Power Up - Tiro triplo",
          "Desafio: Tiro triplo",
          "Revisão do desafio: Tiro triplo",
          "Detecção de colisões",
          "Comunicação entre Script",
          "Rotina de Power Down"
        ],
        "Power Up - Impulso de Velocidade": [
          "Introdução ao Power Up - Impulso de Velocidade",
          "Configuração do Impulso de Velocidade",
          "Desafio: Impulso de Velocidade",
          "Revisão do desafio: Impulso de Velocidade"
        ],
        "Inimigos": [
          "Introdução aos inimigos",
          "Configuração dos inimigos",
          "Desafio: Comportamento do inimigo",
          "Revisão do desafio: Comportamento do inimigo",
          "Desafio: Controle de danos",
          "Revisão do desafio: Controle de danos",
          "Desafio: Explosão do inimigo",
          "Revisão do desafio: Explosão do inimigo",
          "Desafio: Explosão do Player",
          "Revisão do desafio: Explosão do Player"
        ],
        "Power Up - Escudo": [
          "Power Up - Introdução ao escudo",
          "Desafio: Implementação do escudo",
          "Revisão do desafio: Implementação do escudo",
          "Visualizar o escudo",
          "Animação do escudo"
        ],
        "Gerenciador de Spawn": [
          "Introdução ao gerenciador de Spawn",
          "Configuração do gerenciador de Spawn",
          "Desafio: Geração de inimigos",
          "Revisão do desafio: Geração de inimigos",
          "Geração dos Power-ups"
        ]
      },
      "requirements": [
        "Não é necessária experiência prévia em programação ou em Unity. Se você já trabalhou com C# ou Unity antes, este curso pode ajudá-lo a melhorar suas habilidades de desenvolvimento de jogos.",
        "Neste curso, eu o ajudarei na instalação do Unity em seu computador. Será útil se sentir confortável com a instalação do seu próprio software.",
        "Uma compreensão básica de matemática (ordem de operações, adição, subtração, multiplicação) facilitará a compreensão de determinada lógica de programação.",
        "Antes de começar este curso, você deve se sentir à vontade para navegar na Web."
      ],
      "description": "*** Conteúdo original em Inglês, com legendas em Português. ***\n*NOVO* Suporte para Android adicionado - Conteúdo estendido.\nEste curso é autorizado e realizado em parceria com a Unity Technologies.\nSe você está interessado em desenvolver incríveis jogos de qualidade comercial que são jogáveis em uma variedade de plataformas, esse curso é para você. Este curso é o único de seu tipo aprovado pela Unity Technologies na Udemy. Que melhor maneira de aprender a desenvolver jogos em Unity do que com seu curso autorizado? O Guia Definitivo para Desenvolvimento de Jogos com Unity apresenta o Unity Engine e os fundamentos da programação C#. O curso mergulha no desenvolvimento de seus primeiros jogos 2D e 3D. Você descobrirá como destacar seus jogos dos restantes, polindo-os com os recursos mais recentes da Unity, incluindo os efeitos de pós-processamento e o sistema de animação.\n\nNeste curso, você irá:\n\nAprender conceitos do C#, tais como variáveis e declarações if\nDetectar colisões, receber entrada de usuários e criar movimentos de jogadores\nCriar power-ups, incluindo tiros triplos, raios laser, impulsos de velocidade e escudos\nAplicar shaders que transformam o cenário do seu jogo\n\nCriar inimigos com comportamento básico de IA\nColetar e destruir objetos do jogo\nImplementar efeitos sonoros, música de fundo e efeitos de partículas\nAtivar e usar o serviço Team Collaboration do Unity\nNavegar no Unity Engine e descubrir características únicas, como a Asset Store\nDistribuir seu jogo para diferentes plataformas, como web, móvel e PC\n\nE muito mais!\nEste curso também inclui mais de 30 desafios interativos onde você pode testar seu conhecimento com conceitos que você acabou de aprender. Esses desafios irão ajudá-lo a criar dois jogos de qualidade comercial: um 2D Galaxy Shooter que utiliza sprites de alta qualidade e efeitos cinematográficos, e um 3D FPS. Terás acesso à arte exclusiva prevista para este curso e adicionarás recursos sofisticados aos seus jogos, os quais  farão parecer que você está programando há anos.\n\nPor que aprender desenvolvimento de jogos com Unity?\nA indústria de jogos é uma indústria que vale $100 bilhões de dólares  a nível mundial. Até 2020, esse número deverá chegar próximo a $120 bilhões de dólares. Com o Unity sendo o motor mais utilizado para desenvolver jogos em várias plataformas, nunca houve um momento melhor para entrar na área. Como você aprenderá neste curso, os tipos de jogos que você pode criar com Unity e C# são ilimitados. O desenvolvimento de jogos é um ótimo passatempo, permitindo que você aprenda uma nova habilidade e jogue seu jogo com familiares e amigos. É também uma carreira emocionante e gratificante, onde muitos desenvolvedores bem-sucedidos, incluindo eu próprio, aprenderam os fundamentos do desenvolvimento de jogos através de cursos como este e não na sala de aula tradicional. Todo o grande jogo começa em algum lugar, então porque não é o seu?  Enquanto as pessoas muitas vezes acham programação ou criar jogos intimidante, este curso utiliza um método de ensino exclusivo que lhe permitirá obter uma compreensão completa dos conceitos enquanto você desenvolve seus próprios jogos. Graças à comunidade da Unity, você poderá se conectar com outros desenvolvedores, trabalhar juntos em novos projetos e fazer alguns jogos incríveis!\nPor que aprender de mim?\nEste é o primeiro e único curso de desenvolvimento de jogos que foi co-criado com a Unity Technologies na Udemy. Como aprender a programar pode ser assustador, a Unity Technologies queria criar um curso que ajudasse os novos desenvolvedores a se sentirem confortáveis explorando o motor e desenvolvendo jogos. Eu acredito que a melhor maneira de aprender a programar é fazendo. Portanto, este é um curso altamente interativo que não oferece facilmente as respostas. Os desafios exclusivos integrados ao longo deste curso garantirão que você não apenas saiba como programar algo, mas também entenda a lógica por trás disso. Como um engenheiro de software autodidata, descobri que simplesmente não havia cursos de alta qualidade que permitissem aos principiantes entenderem verdadeiramente os conceitos essenciais para o desenvolvimento de jogos. Para remediar isso, criei minha própria série de vídeos do YouTube focada no desenvolvimento de jogos, onde tive o privilégio de ajudar milhares de outras pessoas a desenvolver sua paixão pelo desenvolvimento de jogos.\nEu trabalho com o Unity desde a versão 3.0 e desde lá venho desenvolvendo jogos e simuladores com o Unity. Tive a sorte de trabalhar para grandes empresas, mas também pude participar de diversos projetos independentes. Atualmente, minhas principais plataformas de desenvolvimento são os dispositivos móveis, principalmente iOS e Android, e realidade virtual. Ainda, tenho vários anos de experiência ensinando desenvolvimento de jogos em diversas universidades.\nAo completar este curso, você entenderá os conceitos básicos de programação em C# e poderá continuar desenvolvendo seus próprios jogos 2D e 3D. Você também se sentirá confiante sabendo que você dominou as mais recentes e melhores técnicas de desenvolvimento de jogos que o impulsionarão para o sucesso em suas aspirações profissionais e pessoais.\n\nJunte-se a mim nesta aventura! Eu vejo você dentro do curso.",
      "target_audience": [
        "O aluno ideal para este curso é alguém que está interessado no desenvolvimento de jogos com Unity e C#, e está à procura de um curso interativo, baseado em projetos.",
        "Pessoas interessadas em desenvolver jogos 2D e 3D de qualidade comercial, seja profissionalmente ou como passatempo.",
        "Qualquer pessoa que procura uma compreensão das melhores práticas de programação, como a organização do seu projeto e o fluxo de trabalho de desenvolvimento ideal, que são essenciais para o desenvolvimento de jogos.",
        "Este curso não é para quem é desenvolvedor de jogos avançado. Este curso também não é para estudantes que não estão interessados em aprender a programar, pois você receberá uma introdução aos fundamentos da programação em C#."
      ]
    },
    {
      "title": "【Unity Shader】改訂版：Unityシェーダー入門",
      "url": "https://www.udemy.com/course/unity-c30unity/",
      "bio": "現役ゲームプログラマーが教えるシェーダー講座",
      "objectives": [
        "Unityシェーダーの基礎",
        "ポストエフェクトの基礎",
        "ライティングの基礎",
        "パフォーマンスの良いシェーダーの書き方"
      ],
      "course_content": {
        "Lesson0:はじめに": [
          "はじめに"
        ],
        "Lesson1": [
          "Lesson1 フィルター効果"
        ],
        "Lesson2 UV操作": [
          "Lesson2 UV操作"
        ],
        "Lesson3 単純な図形の描画": [
          "Lesson3 単純な図形の描画",
          "Lesson3 後編"
        ],
        "Lesson4 ブラーと被写界深度": [
          "Lesson4 ブラーと被写界深度"
        ],
        "Lesson5 ライティング基礎": [
          "Lesson5 ライティング基礎"
        ],
        "Lesson6 エフェクト用シェーダー基礎": [
          "Lesson6 エフェクト用シェーダー",
          "ギャラリー"
        ]
      },
      "requirements": [
        "Unityの基本的な使い方がわかっていること",
        "C#等プログラムの基礎知識があること"
      ],
      "description": "最新公開バージョンについて(2022年9月15日)\n現在公開されている動画は、一部フィードバックを反映した最新バージョンになります。\n全てのレクチャーを再録画し、ファイル名の記載ほか学習しやすいように調整\n\nUnity製ゲームの表現に幅を持たせたいシェーダーを勉強してみたいけどよくわからないシェーダーを作ってみたけどパフォーマンスがでなくて困っている人にオススメ！\n画面効果からパーティクルエフェクト3Dモデルのライティングの基礎知識を纏めています。\n\n\n学習内容\nUnityのShaderの基本的な書き方。\n画面効果の基礎、ライティングの基礎。\n速いシェーダーを書くコツ。\n\n\n要件\nUnityが使えるPC\n\n\n講座概要\nゲームエンジン「Unity」で使用できるシェーダー言語の講座となります。\nこれからシェーダーを初めたいという方や、モバイル開発でキレイな表現をやってみたい、パフォーマンスで悩んでいる方などにおすすめです。\n\n\nこちらで用意したコードを、お手元の環境で実際に試して頂く形の内容となります。\n以下の内容を解説しています。\nパフォーマンスに配慮したシェーダーを書き方\nポストエフェクト\n色調変化\n歪みUV操作\n図形描画マスク効果\nブラーを使った表現\n3D\nライティング基礎\n加算合成などの半透明オブジェクトの描画\nおまけ\nサンプルギャラリー\n\n\nこのコースの対象受講者\nUnityのシェーダーを初めてみたい方\nエフェクト等、演出面に幅を持たせたい方\nシェーダーのパフォーマンスに困っている方\n※Unityの基本的な操作は習得済みであることが前提であるため、操作方法などの説明はしていません。",
      "target_audience": [
        "Unityでシェーダーを初めてみたい方",
        "画面効果やエフェクトなどに幅を持たせたい方",
        "シェーダーがボトルネックになっていて困っている方"
      ]
    },
    {
      "title": "Máster en Realidad Aumentada con Unity",
      "url": "https://www.udemy.com/course/master-en-realidad-aumentada-con-unity2021/",
      "bio": "Aprende desde CERO a desarrollar proyectos en Realidad Aumentada con Unity, ProBuilder, Vuforia, AR Foundation y C#",
      "objectives": [
        "Aspectos basicos de Unity para trabajar con el motor grafico",
        "Trabajar a nivel profesional con Realidad Aumentada para clientes o empresas interesadas en la tematica",
        "Podras crear aplicaciones y videojuegos de Realidad Aumentada para dispositivos iOS y Android",
        "Manejar todas las herramientas que ofrecen Vuforia Engine y AR Foundation",
        "Programar diferentes tipos de efectos especiales con Shader Graph",
        "Modelar y texturizar tus propios objetos 3D con ProBuilder",
        "Escribir codigo en C# de manera limpia y escalable aplicando buenas practicas de programacion",
        "Diferentes practicas dentro del Master que te serviran para afianzar todo lo estudiado"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Instructor: Mariano Sosa",
          "Acerca de las valoraciones prematuras en Udemy",
          "Únete a la comunidad de Estudiantes en Discord",
          "Cómo sacarle todo el provecho a los cursos online en Udemy"
        ],
        "Introducción a Unity 2021": [
          "Cómo instalar Unity desde Unity HUB",
          "Proyectos URP vs HDRP y los paquetes de Unity",
          "Canvas y textos con Text Mesh Pro",
          "Posicionamiento y layout de elementos en los Canvas de Unity",
          "Introducción a los Prefabs",
          "Prefabs, Prefab Variants y Reflection Probes",
          "Animaciones",
          "Animator Controller y máquinas de estados con capas y parámetros",
          "Probuilder",
          "Materiales y efectos de Probuilder",
          "Cómo compilar en tu propio teléfono móvil",
          "Si necesitas repasar la programación, ahora es el momento"
        ],
        "Introducción a Vuforia Engine": [
          "Página de Vuforia",
          "Documentacion",
          "Target Manager",
          "Preparando Proyecto (1/2)",
          "Preparando Proyecto (2/2)"
        ],
        "Herramienta: Image Target": [
          "Introducción",
          "Image Target",
          "Target Manager",
          "Instant Image Target",
          "Práctica: Creando Prefabs (1/2)",
          "Práctica: Creando Prefabs (2/2)",
          "Práctica: Implementando UI",
          "Práctica: Funcionalidad",
          "Práctica: Mejoras",
          "Conclusión"
        ],
        "Herramienta: Multi Target": [
          "Introducción",
          "Multi Target",
          "Target Manager",
          "Práctica: World Center Mode",
          "Práctica: ProBuilder",
          "Práctica: Blockout (1/2)",
          "Práctica: Blockout (2/2)",
          "Conclusión"
        ],
        "Herramienta: Cylinder Target": [
          "Introducción",
          "Cylinder Target",
          "Target Manager",
          "Práctica: Depthmask",
          "Práctica: Modelado",
          "Práctica: Animación",
          "Práctica: Interacción",
          "Conclusión"
        ],
        "Herramienta: Object Target": [
          "Introducción",
          "Object Target",
          "Vuforia Object Scanner",
          "Target Manager",
          "Práctica: Modelo de Referencia",
          "Conclusión"
        ],
        "Herramienta: Cloud Recognition": [
          "Introducción",
          "Cloud Recognition",
          "Target Manager",
          "Práctica: Cloud Reco Event Handler",
          "Práctica: MetaData",
          "Práctica: Implementando UI",
          "Práctica: Mask",
          "Práctica: Contenido de MetaData",
          "Conclusión"
        ],
        "Herramienta: Model Target": [
          "Introducción",
          "Model Target",
          "Model Target Generator",
          "Práctica",
          "Conclusión"
        ],
        "Herramienta: Ground Plane / Mid Air": [
          "Introducción",
          "Ground Plane",
          "Práctica - Implementación",
          "Práctica - Product Placement (1/3)",
          "Práctica - Product Placement (2/3)",
          "Práctica - Product Placement (3/3)",
          "Mid Air",
          "Práctica - Implementación",
          "Práctica - Sistema Solar",
          "Conclusión"
        ]
      },
      "requirements": [
        "Se requieren conocimientos previos del uso de Unity así como programación básica en C#. Igualmente, en la sección inicial se dará un repaso de Unity.",
        "Debes saber utilizar un PC o Mac a nivel básico de usuario.",
        "Una camara web y dispositivo movil para hacer pruebas en tiempo real.",
        "Librerias de Vuforia Engine y AR Foundation, que te indicaremos como instalarlo en el curso.",
        "Todas las herramientas utilizadas en el curso son gratuitas y los materiales de trabajo están incluidos."
      ],
      "description": "¿Quieres aprender a desarrollar aplicaciones y videojuegos en Realidad Aumentada de manera profesional?\n¿Te intimida no saber de programación o arte, y quieres desarrollar tu propio contenido desde cero?\n¿Eres un emprendedor que quiere transformar su negocio con el poder de la Realidad Aumentada pero no sabes cómo conseguirlo?\nSi la respuesta a alguna de estas preguntas es Sí, entonces este curso es para ti.\nLa Realidad Aumentada es una tecnología que permite superponer elementos virtuales sobre nuestra visión de la realidad. Cada vez más demandada, se proyecta que para 2027 se convertirá en un negocio que roce los 230,6 mil millones de dólares a nivel mundial. Y es que la Realidad Aumentada esta cambiando la vida de las personas, potenciando y mejorando áreas como la Medicina, Educación, Marketing, Videojuegos, Arquitectura y Gastronomía, entre tantas otras más.\nEste curso es único, pues lo hemos diseñado no solo para que aprendas a trabajar con diferentes librerías de Realidad Aumentada, sino que también aprenderás conceptos básicos de programación, animación, interfaz de usuario y modelado 3D para aplicar en todos tus proyectos.\nEs el único curso de todo Udemy en español que cubre en profundidad todo lo necesario para ser un experto en el desarrollo de Realidad Aumentada con Unity.\nTEMARIO DEL CURSO\nEl curso ha sido diseñado para cubrir los pilares básicos del desarrollo de aplicaciones y videojuegos en Realidad Aumentada, empezando por los conceptos básicos de Unity, siguiendo por una introducción a la librería Vuforia Engine, para continuar estudiando una por una todas las herramientas que ofrece esta tecnología, aplicando proyectos a modo de práctica para afianzar lo estudiado en el curso.\nEn el curso nos centraremos en tres grandes bloques.\nEl primero de estos consistirá en una primera Introducción  a Unity, en caso de que sea tu primera vez con este motor gráfico, repasando conceptos de 3D y uso del motor necesarios para luego aplicarlos a la realidad aumentada.\nEn el segundo bloque vamos a enfocarnos en trabajar con la librería Vuforia Engine, y realizar proyectos reales mientras aprendemos todas las herramientas que ofrece.\nEntre los proyectos que realizaremos se encuentran:\nImage Target: crearemos una tarjeta de presentación con diferentes enlaces, aplicando buenas prácticas de programación.\nMulti Target: modelaremos desde 0 un laberinto 3D y moveremos una esfera en base a la orientación del marcador en el mundo real.\nCylinder Target: modelaremos un interior, trabajaremos con materiales y animaremos una puerta que responde al interactuar con el marcador.\nObject Target: escanearemos un objeto del mundo real, para integrarlo como marcador y proyectar contenido por encima del mismo.\nCloud Recognition: crearemos una base de datos en la nube, descargando información en tiempo real e interpretandola para proyectar diferentes tipos de contenido encima del marcador.\nModel Target: diseñaremos un marcador en base a un objeto 3D, para luego imprimirlo y proyectar contenido por encima del mismo.\nGround Plane y Mid Air: proyectaremos contenido tanto en el suelo como en el aire, sin necesidad de un marcador, interactuando con el contenido y programando shaders para optimizar la experiencia.\nY en el tercer bloque pasaremos directo a AR Foundation, aprendiendo a utilizar sus herramientas mientras desarrollamos prácticas aplicables a un proyecto real.\nEntre los proyectos que realizaremos se encuentran:\nDevice Tracking: crearemos un proyecto similar a Pokemon GO, donde debemos interactuar con un personaje para sumar puntaje.\n2D Image Tracking: detectaremos varios targets al mismo tiempo para mostrar diferentes planetas, junto con su titulo y descripcion correspondiente.\nFace Tracking: colocaremos una mascara sobre nuestro rostro y le aplicaremos banderas de distintos paises.\nPlane Tracking: modelaremos un entorno 3D, para luego detectar el suelo y colocar un AR Portal sobre el lugar.\nRaycast: detectaremos una pared y colocaremos diferentes cuadros utilizando Scriptable Objects para almacenar la informacion.\nY muchas mas herramientas que nos ofrece esta poderosa libreria!\nEste curso es ideal para cualquiera que quiera obtener conocimientos acerca de la Realidad Aumentada. En particular te lo recomiendo si eres:\nDesarrolladores Unity que tienen experiencia en el motor y quieren aprender a trabajar con Realidad Aumentada\nEmpresarios y dueños visionarios que quieren subir sus empresas de categoría de nivel con el poder de la Realidad Aumentada\nEstudiantes que quieran utilizar esta tecnología para innovar en sus trabajos y proyectos\nLos estudiantes ganaran con nosotros buenas prácticas de programación, conocimientos en modelado 3D, Animación, Shaders e Interfaz de usuario, y dominando en el proceso todas las herramientas que ofrece la Realidad Aumentada.\nTendrás acceso gratuito a todo el material del curso, e incluso obtendrás un certificado oficial de finalización del curso que podrás subir a LinkedIn para mostrar tus nuevas habilidades en Unity y Realidad Aumentada.\n\nCon 30 días de garantía de devolución de tu dinero si el curso no te gusta, no tienes ningún riesgo así que no esperes más.\nApúntate ya haciendo click en el botón de tomar este curso ahora, y nos vemos en clase!",
      "target_audience": [
        "Todos los que quieran empezar a trabajar con Realidad Aumentada para iOS y Android",
        "Personas que tengan conocimientos basicos de Unity y quieran aprender a trabajar con Vuforia y/o AR Foundation",
        "Gente con experiencia en Vuforia y/o AR Foundation que quieran profundizar en el uso de sus herramientas",
        "Desarrolladores ya experimentados en Unity y que quieran dar el salto al mundo de la Realidad Aumentada."
      ]
    },
    {
      "title": "Minecraft Modding leicht gemacht! - Erstelle Mods mit Forge",
      "url": "https://www.udemy.com/course/minecraft-forge-lerne-deine-eigenen-mods-zu-programmieren/",
      "bio": "Lerne in diesem Kurs Schritt-für-Schritt wie du mit der Forge API deine eigenen Mods für Minecraft 1.19.2 programmierst.",
      "objectives": [
        "Du lernst die Grundlagen der Programmiersprache Java.",
        "Du lernst wie du deine erste eigene Minecraft Mod entwickelst.",
        "Du lernst wie du deine eigenen Items erstellst.",
        "Du lernst wie du deine eigenen Blöcke erstellst.",
        "Du lernst wie du deinen Items und Blöcken eine eigene Logik geben kannst",
        "Du lernst wie du Fortgeschrittene Blöcke mit Benutzeroberflächen & Inventaren erstellst.",
        "Du lernst wie du mit Blöcken in der Welt interagierst, sie bewegst, platzierst und löschst.",
        "Du lernst wie du die Welt nach deinem Belieben, zum Beispiel durch das Spawnen deiner eigenen Erze, manipulierst.",
        "Du lernst wie du deine Mod fertigstellen und bei Bedarf veröffentlichen kannst."
      ],
      "course_content": {
        "Einführung und Einrichtung der nötigen Programme": [
          "Intellij I - Installation",
          "Danke für deine Unterstützung! - Du kannst dich jederzeit bei mir melden.",
          "Materialien",
          "Intellij II - Meine oft genutzten Tastenkombinationen"
        ],
        "Java Grundlagen - Einführung in die Programmierung": [
          "Einleitung & wichtige Information",
          "* \"Hello World\" Programm",
          "* Variablen & Datentypen",
          "Kommentare",
          "* Arrays",
          "* Bedingungen I - Funktionsweise",
          "Bedingungen II - Verschachtelungen & Vereinfachungen",
          "Bedingungen III - Mehrere Angaben in einer Abfrage überprüfen",
          "While-Schleife",
          "* For-Schleife",
          "* Listen",
          "Hashmap",
          "* Methoden",
          "Klassen I",
          "Klassen II - Getter & Setter",
          "Klassen III - Vererbung",
          "Interfaces",
          "* Try Catch & Text in Zahl umwandeln",
          "Parallelität - Runnable (& Threads)",
          "Ordnerstruktur & Java Konventionen",
          "JSON Grundlagen"
        ],
        "Mod Programmierung I - Items & Blöcke [Grundlagen]": [
          "Projekterstellung & Einrichtung",
          "Assets Struktur - Namen & Texturen für unsere Items & Blöcke",
          "Item erstellen I - ItemManager Klasse",
          "Item erstellen II - Name & Textur zuweisen",
          "Übung I - Item erstellen",
          "Auflösung Übung I - Item erstellen",
          "Eigener Kreativ Tab - CustomCreativeTabs Klasse",
          "Block erstellen I - BlockManager Klasse",
          "Block erstellen II - Name & Textur zuweisen",
          "Block erstellen III - Drops & passendes Werkzeug konfigurieren",
          "Übung II - Block erstellen",
          "Auflösung Übung I - Block erstellen",
          "Crafting Rezepte - Shaped und Shapeless"
        ],
        "Mod Programmierung II - Komplexe Items": [
          "Komplexe Items I - Items mit eigener Logik",
          "Komplexe Items II - Item Tags [Variablen] & Item Beschreibungen [Tooltips]",
          "Eigene Werkzeuge I - Spitzhacke, Schwert, Axt...",
          "Eigene Werkzeuge II - Neue Abbaustärke",
          "Übung III - Tool erstellen",
          "Auflösung Übung III - Tool erstellen",
          "Eigener Brennstoff",
          "Neue Nahrung",
          "Eigene Effekte I - Effekt-Logik implementieren",
          "Eigene Effekte II - Effekt Registrieren, Icon & Titel setzen",
          "Wurftränke erstellen",
          "Braurezepte erstellen",
          "Übung IV - Effekt-Trank erstellen",
          "Auflösung Übung IV - Effekt-Trank erstellen",
          "Komplexe Items III (1) - Blöcke manipulieren & Items spawnen [Disassembler Item]",
          "Komplexe Items III (2) - blockMap befüllen [Disassembler Item]",
          "Komplexe Items IV - Drill Item Beispiel",
          "Übung V - Komplexes Item erstellen",
          "Auflösung Übung V - Komplexes Item erstellen",
          "Eigene Rüstung hinzufügen"
        ],
        "Mod Programmierung III - Komplexe Blöcke": [
          "Komplexe Blöcke I - Einleitung | Blöcke mit eigener Logik & neuen Funktionen",
          "Komplexe Blöcke II - Elevator/Fahrstuhl Block Beispiel",
          "Komplexe Blöcke III (1) - Variable/Property für unseren Block(-State) erstellen",
          "Komplexe Blöcke III (2) - Lichtstärke von Blöcken festlegen",
          "Komplexe Blöcke IV (1) - Blöcke unterschiedlich texturieren, auch mit Properties",
          "Komplexe Blöcke IV (2) - Block-Texturrotation abhängig von Blickrichtung machen",
          "Komplexe Blöcke V - fallOn & stepOn Methoden, weitere Spielerfunktionalitäten",
          "Komplexe Blöcke VI - Redstone Erkennung & weitere Blockfunktionalitäten",
          "Komplexe Blöcke VII - Verzögerungen einbauen (+ Sound Basics)",
          "Übung VI - Komplexen Block erstellen",
          "Auflösung Übung VI - Komplexen Block erstellen",
          "Rezepte für Ofen & Schmiede erstellen",
          "Blöcke XP droppen lassen & XP in der Welt spawnen",
          "Loot Tables von Blöcken I - Grundlagen",
          "Loot Tables von Blöcken II - Komplexe Loot Tables & Loot Table Generator",
          "Eigene Gemälde",
          "Neue Ackerpflanzen / Nutzpflanzen (Süßkartoffel Beispiel)"
        ],
        "Mod Programmierung IV - Block Entities: Blöcke mit eigener Benutzeroberfläche": [
          "(Intro) Unser BlockEntity Projekt - Crusher Vorstellung",
          "CrusherBlock Klasse",
          "AbstractBlockEntity Klasse (Vorgabe) - Einfaches Erstellen von BlockEntities",
          "CrusherBlockEntity & BlockEntityManager Klassen",
          "onRemove & getTick Methoden von der CrusherBlock Klasse, GUI Übersicht",
          "Spezielle Item-Slots für unseren Crusher",
          "Menu&Screen Definition & AbstractMenu Klasse (Vorgabe) - Einfach Menüs erstellen",
          "Crusher Menü erstellen & unsere Speziellen Slots zuweisen - Slot Positionierung",
          "Crusher Screen erstellen - GUI Textur einfügen, erster Test & Block-Texturen",
          "Funktionalität Implementieren - tick Methode befüllen",
          "Erster Funktionstest",
          "Blockanimation erstellen",
          "BlockEntity Fortschritt im Spielstand abspeichern",
          "Crusher Daten an den Client (CrusherMenu) übergeben",
          "GUI Animation erstellen",
          "Eigene Rezepte I - Richtiges Crafting- bzw. Crushing-Rezept implementieren",
          "Eigene Rezepte II - Crafting- bzw. Crushing Rezept in unseren Crusher einbinden"
        ],
        "Mod Programmierung V - Weltenmanipulation": [
          "Weltenmanipulation-Grundgerüst",
          "Erzgenerierung",
          "Eigene Pflanzen in der Welt generieren lassen"
        ],
        "Mod Programmierung VII - Weiterer Inhalt": [
          "Sounds"
        ],
        "Abschluss": [
          "Mod in eine JAR verpacken und auf dem offiziellen Minecraft Client testen"
        ]
      },
      "requirements": [
        "Du benötigst einen Computer mit einer Internetverbindung.",
        "Du benötigst das Spiel Minecraft.",
        "Du lernst das nötige im Kurs. Java Programmierkenntnisse sind KEINE Pflicht, aber hilfreich."
      ],
      "description": "In diesem Kurs lernst du alles was du benötigst, um deine eigenen Mods für Minecraft zu entwickeln!\nIch zeige dir, wie du dein Projekt erstellst, wie du mit der Programmierumgebung Intellij umgehst und wie du Minecraft individuell, durch die Programmiersprache Java, zum Leben erweckst!\nNach diesem Kurs kannst du unter Anderem deine eigenen Blöcke und Items mit ihrer eigenen Logik erstellen, ihre Eigenschaften und Inventare speichern, sowie das Spiel Minecraft in vielen verschiedenen Varianten nach deinem Belieben personalisieren.\nAußerdem kannst du eigene Animationen für deine Blöcke erstellen, sowie alle möglichen Blöcke in der Welt spawnen und verschieben.\nWir schauen uns verschiedene Beispiele der Weltenmanipulation an, wodurch du zum Beispiel deine eigenen Erze oder Pflanzen in der Welt generieren lassen kannst.\nWährend des Kurses erhältst du eine vollständige Einführung in die Java Programmierung und nutzt dein gelerntes Wissen anschließend, um direkt mit diesem Kurs parallel deine eigene Modifikation für Minecraft zu erstellen.\nNeben den bereits oben genannten Möglichkeiten, schauen wir uns noch viele weitere kleine Themen, wie zum Beispiel die Erstellung deiner eigenen Sounds, Gemälde oder Ofen-Rezepte an!\nMeinen Code darfst du ohne Probleme selbst in deinen Mods verwenden und weiterentwickeln.\nHast du deine eigene Mod erfolgreich fertiggestellt? Zeig sie mir! Ich freue mich jetzt schon darauf, deine Mod bei mir zu testen.\nMelde dich dazu jederzeit gerne hier über Udemy bei mir.\nBei Fragen kannst du dich gerne an mich wenden und ich versuche dir bei deinem Problem zu helfen.\nFür diesen Kurs sind keine Vorkenntnisse nötig. Alles was du benötigst ist ein Computer und einen Minecraft Account.\nStarte jetzt in die erste Lektion und verwirkliche dir deinen Traum, Minecraft mit deinen eigenen Mods komplett nach deiner Fantasie zu gestalten!",
      "target_audience": [
        "Der Kurs richtet sich an Neulinge in der Minecraft Mod Programmierung, die ihre eigenen Mods entwickeln wollen."
      ]
    },
    {
      "title": "Unity les fondamentaux | Guide ultime Partie 1",
      "url": "https://www.udemy.com/course/unity-les-fondamentaux-le-guide-ultime-partie-1/",
      "bio": "Concevoir et développer des jeux vidéo, apprendre le C# , codez vos premiers jeux 3D pour Windows, Mac, Linux, WebGL",
      "objectives": [
        "Installer Unity et gérer le HUB",
        "Comprendre et manipuler l'interface du moteur physique",
        "Exploiter les composants de bases",
        "Gérer les lumiéres, les matériaux, les shaders",
        "Apprendre le langage C# (C-Sharp)",
        "Réaliser vos propres scripts",
        "Exploiter l'audio et les effets sonores",
        "Compiler vos projet pour les plateformes Windows, MacOs, Linux, WebGL"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Unity Hub et Installation de l'éditeur": [
          "Installation sous Windows",
          "Installation sous Linux",
          "Installation sous MacOS",
          "Présentation du Hub Unity"
        ],
        "Découverte de l'interface et des Fenêtres": [
          "Introduction : Exécution d'un jeu avec Unity",
          "Découverte des fenêtres Hierachy et scène",
          "Exploiter la fenêtre scène",
          "Découverte de la fenêtre inspector",
          "Découverte de la fenêtre Gameview",
          "Découverte des fenêtres projet et console",
          "Gestion des fenêtres de l'interface",
          "Positionner les objets de la scène",
          "Le gestionnaire de raccourcis clavier",
          "Modifier les préférences et paramètres du projet",
          "Découverte de l'interface d'unity"
        ],
        "Première approche des composants et des fonctionnalités": [
          "Introduction aux composants",
          "La collision et la physique",
          "Appliquer une force constante",
          "Gérer le composant camera",
          "Les materiaux",
          "Les shaders",
          "La lumière (light)",
          "Les matériaux physiques",
          "Exercice pratique : Utiliser les composants",
          "Correction de l'exercice pratique",
          "Première approche des composants et des fonctionnalités"
        ],
        "Les bases du C# (C-sharp)": [
          "Votre premier Script C# dans Unity",
          "Les méthodes du monobehaviour",
          "Les variables de base",
          "La concaténation",
          "Les opérateurs arithmétiques",
          "Les structures conditionnelles",
          "Les opérateurs de comparaisons",
          "Les opérateurs logiques",
          "Les boucles conditionnelles",
          "Structures de données tableaux",
          "Les dictionnaires (Collection)",
          "Les listes (Collection)",
          "Les méthodes",
          "Les fonctions",
          "La portée des variables",
          "Conversion implicite et explicite",
          "Gestion des exceptions",
          "Les bases du C# (C-sharp)"
        ],
        "Votre premier jeu 3D : Course de voiture": [
          "Mise en place de la route (texture tilling)",
          "Faire défiler la route (Scrolling)",
          "Importation des véhicules (Asset Store)",
          "Déplacement de la voiture (Vecteur et GetAxis)",
          "Rotation des roues du véhicule (Rotate)",
          "Limiter le déplacement du véhicule sur la route",
          "Réalisation d'une voiture fantôme",
          "Réalisation de prefab de voiture fantôme",
          "Instancier des voitures (coroutine)",
          "Instancier des prefabs aléatoirement (Random)",
          "Instancier des voitures sur les 3 voies (parent/enfant)",
          "Amélioration de la difficulté de jeu (Mathf)",
          "Suppression des voitures hors scène (Destroy OnCollision)",
          "Fin de partie (collision et tag)",
          "Générer une particule de fumée (Particle System)",
          "Préparation du Hud (UI TextMesh Pro)",
          "Afficher et incrémenter le score",
          "Jouer une musique de fond et le son du moteur (Audiosource)",
          "Déclencher des effets sonores",
          "Afficher un message GameOver et Replay",
          "Relancer la partie ou quitter le jeu",
          "Effet de clignotement (Blink)",
          "Effet Sonore des voitures fantômes (Vector3.Distance)",
          "Code source du projet"
        ],
        "Compilation d'un projet Unity": [
          "Compiler votre jeu pour le système d'exploitation Windows",
          "Compiler votre jeu pour le système d'exploitation Linux",
          "Compiler votre jeu pour le système d'exploitation MacOS",
          "Compiler votre jeu en WebGL (Navigateur internet)",
          "Session bonus"
        ]
      },
      "requirements": [
        "Aucune expérience avec le monde du jeu vidéo ou en programmation requise",
        "De la volonté et de la persévérance"
      ],
      "description": "Unity est un moteur physique 3D incroyable, et trés populaire dans l'industrie du jeu vidéo.\nLe défi de cette formation est de rendre l'apprentissage de la programmation facile et amusant en vous guidant étape par étape dans la création de jeux passionnants.\nMême si vous n'avez aucune expérience en programmation ou en logiciels 3D, je vous guiderai pas à pas, en commençant par les bases et en avancant progressivement, en m'appuyant sur ce que vous avez apris.\nLe cours est basé sur des projets, vous ne serez donc pas simplement en train d'apprendre des concepts de programmation, mais de les appliquer immédiatement dans des jeux.\n\n\nPourquoi utilisez Unity ?\nUnity fournit des outils conviviaux pour configurer les composants physiques des objets, tels que la gravité, les collisions, les forces, les masses, etc.\nLe moteur physique de Unity est très flexible et peut être ajusté pour répondre aux besoins de différents types de jeux ou de simulations.\nUnity permet d'intégrer facilement d'autres fonctionnalités , comme les animations, l'audio, les effets visuels, etc.\nUnity propose une documentation complète et un support communautaire francophone pour aider les développeurs à tirer le meilleur parti de leur moteur physique.\nEt la raison la plus importante, Unity est totalement gratuit et ne demande aucun investissement, vous pouvez même commercialiser vos jeux avec la licence gratuite.\n\n\nCette formation est la première étape essentielle pour quiconque souhaite apprendre à utiliser ce puissant moteur de jeu. Elle couvre un large éventail de sujets, allant de l'apprentissage du langage de programmation C# à la compréhension des composants de base d'Unity tels que les scènes, les objets, les lumiéres, la physique, les scripts, etc.\nVous apprendrez également à compiler vos projets et créer des fonctionnalités de base telles que les mouvements de personnages et la gestion des collisions.\nPour mettre en pratique vos connaissances nous réaliserons pas à pas un jeu complet en 3D, ce qui vous permettra de consolider votre apprentissage et de vous familiariser avec le processus de développement de jeux dans Unity.\nVous aurez également accès à des quiz qui vous permettront de vérifier votre compréhension des points essentiels de chaque chapitre. Ces quiz vous aideront à vous assurer que vous avez bien assimilé les concepts clés avant de passer au chapitre suivant.\nVous pourrez ainsi mettre en pratique les compétences que vous avez acquises et avoir une expérience concrète de la création de jeux en 3D.\n\n\nCette formation est la première d'un cursus complet sur Unity, offrant aux apprenants une introduction solide à ce moteur de jeu populaire et la possibilité de continuer à apprendre des compétences plus avancées pour créer des jeux professionnels.\nLes ressources telles que des projets complets, des modèles et des sons vous seront fournis pour faciliter le suivi de la formation et vous pourrez même les réutiliser dans vos propres projets.\nSi vous avez des questions, je serai personnellement à votre disposition pour y répondre et vous fournir autant d'aide que possible pour vous aider à maîtriser le C# et Unity.\n\n\nAprès avoir suivi cette formation, vous aurez acquis une connaissance approfondie des principes fondamentaux d'Unity, ce qui vous permettra de concevoir des projets allant du niveau débutant à intermédiaire.",
      "target_audience": [
        "Toutes personnes désirant apprendre le développement de jeux vidéo avec UNITY"
      ]
    },
    {
      "title": "Unity dla początkujących bez kodowania",
      "url": "https://www.udemy.com/course/unity-bez-kodowania/",
      "bio": "Tworzenie projektu Galactic Fight na podstawie gotowych elementów",
      "objectives": [
        "Obsługi programu Unity",
        "Importowanie gotowych paczek",
        "Tworzenie obiektów i skryptów",
        "Podstawy programowania C#"
      ],
      "course_content": {
        "Nowa wersja gry Galactic fight": [
          "O kursie",
          "Discord i Newsletter",
          "Instalacja",
          "Ustawienia początkowe",
          "Tworzenie obiektów i skryptów",
          "Ruch gracza",
          "Strzelanie",
          "Nauka programowania - Zawartość skryptu",
          "Przeciwnik",
          "Przeciwnik strzelanie",
          "Nauka programowania - Konsola",
          "Ruch kamery",
          "Ruch przeciwnika",
          "Nauka programowania - Zmienne",
          "Miotacz pocisków w kierunku gracza",
          "Księżyc",
          "Nauka programowania - Instrukcja warunkowa",
          "Efekty",
          "Tło",
          "Warstwy",
          "Zmiany",
          "Menu główne",
          "Menu Game Over",
          "Teleport",
          "Budowanie gry",
          "Przeciwnik podążający za graczem",
          "Lawina płonących kamieni",
          "Statystyki gracza - UI"
        ],
        "Galactic Fighter - starsza wersja": [
          "Wstęp",
          "Importowanie paczki",
          "Dodanie gracza",
          "Dodanie platformy",
          "Dodanie pierwszego przeciwnika",
          "Tworzenie menu głównego",
          "Tworzenie menu GameOver",
          "Efekty dźwiękowe",
          "Teleport",
          "Wieża strzelnicza",
          "Księżyc",
          "Wyrzutnia płonących kamieni",
          "Podążający przeciwnik",
          "Wyświetlanie czasu",
          "Finalizacja projektu"
        ]
      },
      "requirements": [
        "Komputer",
        "Zainstalowany program Unity"
      ],
      "description": "Kurs składa się z kilkunastu odcinków, w których uczestnik nauczy się importowania paczek, dodawania gotowych elementów do sceny oraz zarządzania całym projektem.\nWszelkie materiały wymagane w kursie dołączone są poszczególnych lekcji.\nKurs ten przeznaczony jest głównie dla dzieci i młodzieży, ale również dorośli mogą zaczerpnąć z niego wiele cennych informacji na początku swojej drogi do tworzenia gier komputerowych w środowisku Unity.\nW kursie głównie operujemy na gotowych paczkach, ale z czasem zaczynamy zmieniać skrypty przyzwyczajając się do pisania kodu i kolejnych elementów programowania w języku C sharp. Będziemy tworzyć wiele elementów, przeciwników, tak, aby gra była znacznie ciekawsza. Dzięki informacjom podawanym w kursie uczestnik będzie mógł wprowadzać wiele zmian do projektu, dzięki czemu każda tworzona gra będzie unikalna, tworzona na swój własny pomysł i wzór.\nPodczas tworzenia projektu będziemy uczyć się podstaw programowania, tak, aby choć odrobinę zagadnień technicznych zostało w głowie na przyszłość.\nW projekcie staramy się wprowadzać moduły i pokazywać jak wykorzystywać je w innych obiektach dzięki czemu twórca będzie mógł tworzyć własne elementy, modyfikować istniejące, by gra zaczęła wyglądać wyjątkowo. Pokazujemy jak zmieniać kod, by zmieniać poszczególne parametry i zachowanie obiektów na scenie.\nW kursie będziemy mieć do czynienia z obiektami poruszającymi się torem liniowym, a także przeciwnikami, które będą podążać za graczem.\nGra jest stworzona w ten sposób, by z łatwością zmieniać poziomy i dodawać kolejne. Cały system będzie kompatybilny i dostosuje się do ilości utworzonych poziomów.",
      "target_audience": [
        "Osoby, głównie dzieci, zainteresowane tworzeniem gier"
      ]
    },
    {
      "title": "สร้าง Mobile เกมด้วย Unity และ การติดตั้ง Unity Ads",
      "url": "https://www.udemy.com/course/mobile-unity-and-ads/",
      "bio": "Basic Unity Engine for Game Development",
      "objectives": [
        "การสร้างเกมด้วย Unity Engine",
        "การสร้าง Animation ด้วย Sprite Sheet",
        "การเขียน ภาษา C# พื้นฐาน",
        "การเผยแพร่ Game ไปที่ Mobile Store.",
        "การสร้างรายได้ด้วย โฆษณา",
        "สามารถต่อยอดสร้างเกมและสร้างรายได้อยู่ที่บ้านได้"
      ],
      "course_content": {
        "ทำความรู้จักกันก่อน": [
          "Game Engine คืออะไร",
          "ทำไมต้องเลือก Unity Engine"
        ],
        "เตรียมความพร้อม เครื่องมือ และ พื้นฐาน": [
          "วิธีดาวน์โหลดและติดตั้ง Unity Engine",
          "ทำความรู้จักโปรแกรม Unity Engine",
          "ทำความเข้าใจพื้นฐานภาษา C# ( Start และ Update )"
        ],
        "ออกแบบและทำความเข้าใจระบบเบื้องต้น": [
          "ออกแบบระบบการเล่นให้กับเกม",
          "สร้าง Animation ด้วย Sprite Sheet",
          "Prefabs คืออะไร",
          "Layers คืออะไร",
          "กำหนด Rigibody 2D และ Collider 2D"
        ],
        "เริ่มต้นสร้างเกม": [
          "สร้าง Main Object หรือ Player",
          "สร้าง Enemies Object",
          "กำหนด การชนกันของวัตถุ",
          "คลิกเพื่อทำลายวัตถุ",
          "สร้าง Wave Response",
          "สร้าง Score และ HightScore",
          "เพิ่ม Background",
          "สร้าง Start Scene",
          "สร้าง End Scene",
          "แก้ Bug Score Value และ HighScore",
          "Build และทดสอบตัวเกมด้วย BlueStack"
        ],
        "สร้างรายได้จาก โฆษณา": [
          "รู้จักกับระบบ Unity Advertisement",
          "วิธีสร้างราย Mobile Game ด้วย Unity Advertisement"
        ],
        "Published เกมขึ้น Store": [
          "สมัคร Android Developer และ Build Game ขึ้น Store",
          "วิธีการ Published IOS Game ขึ้น Store โดยไม่ใช้ Mac"
        ],
        "การช่วยเหลือต่างๆ ภายในคอร์ส และ ตัวอย่าง": [
          "ช่วยเหลือต่างๆภายในคอร์ส"
        ]
      },
      "requirements": [
        "สามารถสร้างเกมด้วย Unity Engine ได้",
        "สามารถนำเกมขึ้น Store เองได้",
        "สามารถสร้างรายได้จากการทำเกมได้",
        "สามารถต่อยอดสร้างรายได้ที่บ้านได้เอง"
      ],
      "description": "ในหลักสูตรนี้ เพื่อนๆ จะได้เรียนการสร้างเกมอย่างง่าย และ สามารถเรียนรู้วิธีการติดโฆษณาด้วย Unity Ads 2018\nเพื่อให้เพื่อนๆสามารถต่อยอดและพัฒนาการสร้างเกมและติดตั้งโฆษณาบนเกมได้\nอีกทั้งยังใช้เวลาว่างให้เกิดประโยชน์ สำหรับเพื่อนๆที่ต้องการมีเกมเป็นของตนเอง\nในคลิปจะมีรูปแบบการสอนขั้น พื้นฐาน\nเหมาะสำหรับคนที่ยังไม่มีพื้นฐานและต้องการทำตามเพื่อสร้างเกมเลย ในรูปแบบง่ายๆ\n____________________________________________________________________________________________________________________\n____________________________________________________________________________________________________________________\nขอบคุณมากครับ",
      "target_audience": [
        "นักพัฒนาเกม",
        "Developer",
        "Game Developer",
        "Software",
        "Student"
      ]
    },
    {
      "title": "[Unity(U3D)]游戏开发0基础RPG进阶课",
      "url": "https://www.udemy.com/course/unityrpg_juniorclass/",
      "bio": "进阶课以艾玛历险记为原型，课程将原作中涉及到的技术进行讲解，内容模块：unity c# 商业编码,动画管理系统,技能系统,技能编辑器插件,UI模块和UI管理 课程的意义： 学完进阶课，学员应该具备独立完成游戏公司分配给初级工",
      "objectives": [
        "进阶课以艾玛历险记为原型，课程将原作中涉及到的技术进行一一讲解，包含但不限于一下内容：unity c# 商业编码,动画管理系统,技能系统,技能编辑器插件,UI模块和UI管理 课程的意义： 学完进阶课，学员应该具备独立完成游戏公司分配给初级工程师的大部分工作，旨在帮助学员能够在日益激烈的游戏公司竞争中可以很好的生存下来"
      ],
      "course_content": {
        "介绍": [
          "git的使用",
          "脚本控制动画",
          "角色移动 PC",
          "角色移动 JoyStick",
          "游戏实战",
          "实战总结",
          "角色的连段攻击 + 相机跟随",
          "实战总结",
          "最终幻想7重置复刻-1",
          "最终幻想7重置复刻-2",
          "最终幻想7重置复刻-3",
          "技能编辑器-1",
          "技能编辑器-2",
          "技能编辑器-3",
          "技能编辑器-buff",
          "技能编辑器-伤害",
          "UI-头顶血条",
          "角色/受伤/追击/攻击",
          "敌人后退/嘲讽",
          "玩家受伤",
          "游戏流程",
          "游戏流程2",
          "游戏流程3",
          "登陆UI",
          "加载UI",
          "主城UI",
          "角色选择界面",
          "背包UI",
          "有限状态机1",
          "有限状态机2"
        ]
      },
      "requirements": [
        "unity引擎的基本使用"
      ],
      "description": "小白课旨在帮助学员学习如何使用unity游戏引擎\n进阶课一方面会把在艾玛历险记中使用的技术进行讲解，所以在课程设计上，主要突出了基础语法，插件编写和游戏ui开发。旨在真正的帮助学员能够提升自身实力，从而从容应对游戏公司分配的工作内容，在日益激烈的竞争中生存下来\n在进阶课程中，\n首先： 以最终幻想为模板，复刻其中的战斗系统\n其次 ： 讲解游戏开发中的战斗连击，战斗技能制作和插件的开发\n最后 ：深度讲解游戏开发中UI的制作流程和制作原理\n进阶课以帮助学员能独立制作游戏为目标，不管是自己制作游戏，还是游戏开发工作，都会为你做好准备。\n进阶课以艾玛历险记为原型，课程将原作中涉及到的技术进行讲解，内容模块：：unity c# 商业编码,动画管理系统,技能系统,技能编辑器插件,UI模块和UI管理 课程的意义： 学完进阶课，学员应该具备独立完成游戏公司分配给初级工程师的大部分工作，旨在帮助学员能够在日益激烈的游戏公司竞争中可以很好的生存下来\n课程的代码原型均来自之前的上线项目，均经历过百万玩家的检测。进阶课的目的是希望学员通过学习本课程能够成功进入游戏大厂，做出符合企业要求的好游戏",
      "target_audience": [
        "在校大学生",
        "希望做独立游戏",
        "希望找游戏开发相关工作"
      ]
    },
    {
      "title": "2021 UNITY C# | Unity Sıfırdan Profesyonel Seviyeye Gelin!",
      "url": "https://www.udemy.com/course/unity-dersi/",
      "bio": "Sıfırdan Unity ve C# öğrenecek dersin sonunda da oyun firmalarında çalışabilecek bir seviyeye geleceksiniz.",
      "objectives": [
        "Unity'nin Temellerini",
        "C# dili ile programlamayı",
        "Yazılım ve oyun algoritmalarını",
        "Nesne tabanlı programlamayı (OOP)",
        "Daha önce hiç bir ders kaynağında gösterilmemiş konuları ve incelikleri göreceksiniz.",
        "High definetion Render Pipeline , Shader Graph, VFX graph gibi yeni nesil sistemlerin kullanımını.",
        "Oyun stüdyolarında çalışabilecek düzeye geleceksiniz!",
        "İşin sanatsal boyutunu öğrenecek ve yaptığınız oyunlar göze hitap etmeye başlayacak.",
        "Oyun sektörü hakkında bilmeniz gereken bilgileri göreceksiniz."
      ],
      "course_content": {
        "Tanışma": [
          "Benim hakkımda",
          "Bana Ulaşabileceğiniz Platformlar",
          "Neden Sürekli ? Atıyorum"
        ],
        "Sık Sorulan Sorular": [
          "Sorunuzu Başlık Kısmına Yazmayın!",
          "Neredeyse Çoğu Unity Hatasının Çözümü!",
          "Aynı Kodu Yazdım Neden Çalışmıyor ?"
        ],
        "Sınavsız Üniversite Kazanmak": [
          "Bahçeşehir Üniversitesi ve ApplyBau"
        ],
        "Kurulumlar": [
          "Unity'nin Kurulumu",
          "Visual Studio Manuel Kurulum",
          "Unity Proje Oluşturmak ve Script Editor'ün ayarlanması"
        ],
        "Unity'nin Temelleri ve Arayüz": [
          "Toolbar",
          "Hierarchy",
          "Inspector",
          "Assets Folder",
          "Camera Navigation",
          "Scene Navigation",
          "Scene Window",
          "Game Window",
          "Layouts",
          "Levels",
          "Assets Store",
          "Console",
          "Build"
        ],
        "C# Temelleri": [
          "Yazılıma Giriş",
          "En Temel Yazılım Bilgileri",
          "Hello World!",
          "Variables01",
          "Variables02",
          "Public & Private",
          "If",
          "Else",
          "Else if",
          "Arithmetic Operators",
          "Logic Operators",
          "Relational Operators",
          "Unary Operator",
          "Switch",
          "While",
          "For",
          "Functions",
          "Functions - Inputs",
          "Functions - Return",
          "Özel Fonksiyonlar",
          "Yorum Satırı",
          "Arrays",
          "C# Temelleri'nin sonu"
        ],
        "Components": [
          "Component'lara giriş",
          "Transform",
          "Collision&Rigidbody",
          "Lights",
          "Camera",
          "Script ile component kontrolü",
          "Script ile bir başka scripting kontrolü",
          "Her Component Bir Değişken Türüdür",
          "Bounds",
          "Vectors",
          "Rigidbody velocity & moveposition",
          "Transform translate & rotate",
          "Line Renderer",
          "Mesh Filter & Renderer"
        ],
        "Fonksiyonlar & Algoritmalar": [
          "Input.GetKey & Input.GetMouseButton",
          "Input.GetAxis",
          "GameObject.FindGameObjectWithTag",
          "GameObject.Find",
          "Layers",
          "Time.deltaTime & Time.fixedDeltaTime",
          "DrawRay",
          "Local&Global - Pivot&Center",
          "Physics.Raycast",
          "Physics.CheckSphere",
          "OnCollisionEnter & OnTriggerEnter",
          "Flip-Flop pettern",
          "Player Movement",
          "Camera Controller",
          "Player Movement'ı Bir FPS Oyununa Göre Ayarlamak",
          "Raycast Hit"
        ],
        "3D Modelleme": [
          "Modellemeye Giriş ve Tebrikler!",
          "Blender 2.83'ün temelleri",
          "Move, Rotate ve Scale aracı",
          "Edit Mode",
          "Shade Smooth ve Shade Flat",
          "HighPoly vs LowPoly",
          "Blender Tekrar ve Hata Çözüm 1",
          "Blender Tekrar ve Hatalar Çözüm 2",
          "Ilk modelimizi yapmaya başlıyoruz - Unutulmayan ilkler!",
          "Bölüm1 - Modelleme",
          "Bölüm2 - Unwrap",
          "Bölüm3 - Substance Painter ve Marmoset Toolbag ?",
          "Bölüm4 - Material",
          "Yaptığımız Modellerin Kaynak Dosyaları"
        ],
        "Kaplamalar": [
          "Material nedir ?",
          "Texture nedir ?",
          "PBR - Physics Based Rendering",
          "PBR material nasıl yapılır ?",
          "Albedo",
          "Normal Map",
          "Ambient Occlusion",
          "Height Map",
          "Roughness",
          "Neler öğrendik ?",
          "Substance Painter - Export"
        ]
      },
      "requirements": [
        "Unity oyun motorunu kurabileceğiniz bir bilgisayar.",
        "Oyun geliştiricliğine dair ilgiye sahip olmak",
        "Öğrenme konusunda istek ve arzu"
      ],
      "description": "Oyun geliştiricliğine sürekli ilgin oldu ama nereden başlaman gerektiğini bilemedin. Nasıl bir yol çizerek çalışman gerektiğini ya da yapıp yapamayacağın konusunda aklındaki sorular yüzünden bir türlü başlama fırsatı bulamadın. Belki de kendini belli bir düzeye getirdin ama bulduğun kaynakların seni daha ileriye taşımadığını hissediyorsun. Bu ders her iki durumda da tam sizin için.\n------------------\nDersler daha önce hiç bir bilginizin olmadığını varsayaraktan en temelden başlayıp üst düzeye doğru adım adım ilerliyor. Bu süreç boyunca yeri geldiğinde modelleme eğitimi yeri geldiğinde ise matematik eğitimi ile karşılaşıyorsunuz. Tüm eğitim olayların mantığını kavratmaya yönelik bir yol izliyor. Size işin mantığını öğrettikten sonra hayalinizde kurduğunuz bir çok oyunu ya da yazılım algoritmasını kendiniz tasarlamya başlayabileceksiniz.\n\n\n------------------\nUnreal Engine 4 oyun motorunun gerisinde kalan Unity 2019-2020 yılları arasında yaptığı yeni güncellemeler ile Unity oyun motoruna çağ atlattı.\nHighDefinitionRenderPipeline( HDRP), UniversalRenderPipeline(URP), VFX Graph, Shader Graph gibi sistemler Unity üzerinde yeni teknoloji halini aldı. Bu teknolojiler gerçekten güçlü ve 2020 yılında artık eski teknolojileri kullanmak için bir sebep kalmamıştır. Bu ders serisi içinde yeni teknolojiler ile nasıl üst düzey oyunlar geliştirebilirsiniz bunu öğreneceksiniz. Aynı zamanda Türkiye'de henüz bu teknolojileri kullanan oyun firmaları çok fazla olmadığı için büyük de bir artı kazanmış olacaksınız.\n\n\n------------------\nSubnautica\nRust\nHearhstone\nHollow Knight\nFireWatch\nInside\nOri And The Blind Forest",
      "target_audience": [
        "Oyun geliştirmeyi öğrenmek isteyen kimselere.",
        "Oyun geliştirmeye başlamak isteyen ama nereden ve nasıl yapacağını bilmeyen öğrencilere iyi bir şekilde yol gösterecektir.",
        "Kendini belli bir düzeye getirmiş ve öğrendiklerini artık profesyonel düzeye çıkartmak isteyen oyun yapımcılarına.",
        "Çizim ve sanat ile uğraşan acaba oyun yapabilir miyim diyen öğrencilere.",
        "Oyun sektörüne merak duyan ve öğrenmek isteyen kimselere."
      ]
    },
    {
      "title": "Desenvolvedor iOS: Prepare-se para o Mercado de Trabalho",
      "url": "https://www.udemy.com/course/desenvolvimento-ios/",
      "bio": "Torne-se um Desenvolvedor iOS e prepare-se para conquistar sua vaga no Mercado de Trabalho",
      "objectives": [
        "Curso de desenvolvimento iOS",
        "Como se preparar para o Mercado de Trabalho como Desenvolvedor Júnior",
        "Desenvolvedor diferenciado no Mercado de Trabalho",
        "Programação na linguagem Swift"
      ],
      "course_content": {
        "Conhecendo o Curso": [
          "Introdução - Parte 1",
          "Introdução - Parte 2",
          "Boas vindas"
        ],
        "Configurações Iniciais": [
          "Configurando o Trackpad",
          "Instalação do XCode",
          "Criando um projeto no XCode"
        ],
        "Conhecimentos Gerais do XCode": [
          "Conhecendo o XCode",
          "Diferenças das versões do Xcode",
          "Conhecendo o Storyboard",
          "Conhecendo os Breakpoints"
        ],
        "Aprendendo tudo sobre NavigationBar": [
          "Adicionando Navigation Bar",
          "Adicionando Bar Button Item",
          "7-Customizando BarButtom Item",
          "Ação no Bar Buttom Item"
        ],
        "Aprendendo tudo sobre Alert Control": [
          "Criando UIAlertController",
          "Adicionando TextField no AlertController - Part 1",
          "10-Adicionando TextField no AlertController - Part 2",
          "Customizando AlertController",
          "Tudo sobre declaração de variáveis e vetor"
        ],
        "Conteúdo monstruoso sobre Table View": [
          "Adicionando TableView no projeto",
          "Carregando os elementos na TableView",
          "Ligando o vetor de elementos com a tabela",
          "Apresentando os dados inseridos no alerta na tabela",
          "Revisando os componentes do projeto",
          "Revisando a TableView"
        ],
        "Desafios com TableView": [
          "Desafio: Adicionar uma Seção com Título",
          "RESPOSTA: Adicionar uma Seção com Título",
          "Customizando um UITableViewCell",
          "DESAFIO: Como aumentar o tamanho das células",
          "RESPOSTA: Como aumentar o tamanho das células",
          "Customizando uma TableView",
          "DESAFIO: Como detectar o clique em uma tabela",
          "RESPOSTA: Como detectar o clique em uma tabela",
          "Como colocar botão de deletar na célula"
        ],
        "Melhorando o seu Aplicativo": [
          "Adicionando ícone no aplicativo"
        ],
        "Mundo Apple": [
          "Conhecendo o site da WWDC",
          "Conhecendo o Swift Docs",
          "Conhecendo o Human Interface Guidelines"
        ],
        "Mercado de Trabalho": [
          "Ferramentas de Trabalho - Parte 1",
          "Ferramentas de Trabalho - Parte 2",
          "Como encontrar as melhores vagas no mercado de trabalho?",
          "Aula Bônus: Relato do meu primeiro emprego"
        ]
      },
      "requirements": [
        "Foco",
        "Disciplina",
        "Vontade de vencer na vida",
        "Utilização de um Macbook ou um computador que rode o Sistema Operacional da Apple"
      ],
      "description": "Você quer se tornar um desenvolvedor iOS ?\nQuer trabalhar com Desenvolvimento iOS viajando pelo mundo inteiro ?\nVocê quer tirar aquela ideia brilhante do papel e desenvolver um aplicativo ?\nVocê já trabalha com desenvolvimento iOS mas quer se preparar para conquistar a sua tão sonhada vaga de emprego ?\nSe você se identificou com algumas dessas perguntas, posso lhe garantir que esse curso vai te ensinar do início ao fim na criação dos seus aplicativos para iOS e na sua preparação para o mercado de trabalho.\n\nSe liga no resumão do curso que eu preparei pra você:\nAprenda a instalar e configurar o Xcode\nEntenda o funcionamento do Storyboard\nAprenda tudo sobre alertas\nAprenda tudo sobre tabelas\nEntenda na prática sobre vetores, funções, estruturas condicionais\nVários desafios com soluções para você aprender tudo sobre tabelas\nVárias dicas para você se tornar um desenvolvedor iOS diferenciado no Mercado de Trabalho\nConheça as ferramentas inéditas que todo desenvolvedor iOS Júnior deveria saber para surpreender no Processo Seletivo\nAprenda a navegar pelo site de Guidelines da Apple\nAprenda a navegar pelo site do Swift Docs\nAprenda a navegar pelo site da WWDC\nSaiba como foi a conquista da minha primeira vaga de emprego como Desenvolvedor iOS Júnior\nSe você quer mudar de vida, a hora é agora! Invista no seu futuro gastando pouco e aprenda de uma vez por todas a criar seu aplicativo iOS e a se preparar para conquistar a sua tão sonhada vaga de emprego no Mercado de Trabalho.",
      "target_audience": [
        "Pessoas que querem se tornar Desenvolvedores iOS",
        "Pessoas que querem tirar uma ideia brilhante do papel",
        "Pessoas que querem trabalhar para grandes empresas viajando pelo mundo"
      ]
    },
    {
      "title": "Unity. Tworzenie gry 2D i publikacja w Google Play",
      "url": "https://www.udemy.com/course/unity-tworzenie-gry-2d-i-publikacja-w-google-play/",
      "bio": "Poziom zaawansowany",
      "objectives": [
        "Podczas trzydziestu ośmiu lekcji będziesz miał okazję dogłębnie poznać zaawansowane narzędzia do tworzenia gier 2D. Oprócz czynności związanych stricte z tworzeniem gry, takich jak automatyczne generowanie obiektów w zadanej częstotliwości czy optymalizacja assetów przed kompilacją, znajdziesz tu także informacje o zasadach współpracy z Google Play. Dowiesz się, jak podpisać Twoją aplikację, na czym polega obsługa konsoli deweloperskiej Google Play i jak przebiega proces publikacji gry w tym sklepie."
      ],
      "course_content": {
        "Rozpoczęcie z szybką powtórką": [
          "Wstęp",
          "Konfiguracja widoku i statystyki urządzeń",
          "Animacja dla kota",
          "Przełączanie animacji podczas skoku",
          "Poruszanie obiektów i dodanie grawitacji",
          "Podskakiwanie kota i poprawki Transitions"
        ],
        "Automatycznie generowane poziomy": [
          "Generator podłoża",
          "Kot się nie przewraca, a obiekty znikają poza kadrem",
          "Losowość pozycji podłoża",
          "Upewniamy się, że nie za wysoko dla kotka",
          "Usprawnienia i likwidacja błędów",
          "Losowe przeszkody dla kota",
          "Debugowanie błędu losowania",
          "Naprawa zakresu losowania",
          "Podmiana przeszkód na docelowe grafiki",
          "Zasady gry i przyśpieszacze dla kotka",
          "Balonik, który próbujemy dogonić",
          "Konfiguracja planów bliższych i dalszych",
          "Płynny lot balonika",
          "Losowość wysokości lotu balonu"
        ],
        "Zarządzanie grą": [
          "Ograniczenie przestrzeni dla kota",
          "Wykrywanie sukcesu i porażki",
          "Wykrywanie sukcesu i porażki Przygotowanie paneli UI",
          "Wywoływanie paneli przy sukcesie i porażce",
          "Budujemy Game Managera",
          "Funkcja wczytująca poziomy",
          "Korzyści płynące z używania Game Managera",
          "Usprawnienia w panelach",
          "Zatrzymanie akcji, kiedy włączamy panele",
          "Zapisanie zdobytego poziomu pomiędzy sesjami",
          "Ostatnie poprawki w menu"
        ],
        "Kompilacja dla systemu Android": [
          "Przygotowanie środowiska dla kompilacji pod Androida",
          "Przygotowanie telefonu (lub tabletu)",
          "Pierwsza kompilacja na Androida",
          "Poprawiamy aplikacje po testach",
          "Singleton \"pod maską\" i ostatnie szlify",
          "Konsola dewelopera i upload pliku APK",
          "Publikacja gry w sklepie Google Play"
        ]
      },
      "requirements": [
        "Wymagana jest znajomość podstaw Unity. Zalecamy zapoznanie się z dwoma pierwszymi poziomami kursu."
      ],
      "description": "Obierz kurs na... programowanie gier 2D w Unity!\nJeśli dotarłeś do trzeciego poziomu kursu programowania gier 2D w Unity, zapewne sam wiesz najlepiej, jakie korzyści przynosi umiejętność tworzenia ich w tym środowisku. Nie trzeba Cię przekonywać, że nowoczesne gry 2D są o wiele wygodniejsze od gier 3D, że można w nie grać praktycznie na wszystkich urządzeniach, które na co dzień nosimy w kieszeni, i że to nie poziom zaawansowania grafiki wpływa na ich popularność. Wiesz także, jak stworzyć taką grę — ale zawsze możesz dowiedzieć się więcej! Unity. Kurs video. Poziom trzeci. Tworzenie gry 2D i publikacja w Google Play da Ci do ręki nowe narzędzia i pozwoli tworzyć bardziej skomplikowane konstrukcje. Zobaczysz, jak można zautomatyzować wszelkie uciążliwe czynności, żeby nie powtarzać ich za każdym razem przy przechodzeniu do kolejnego poziomu gry. Odkryjesz, jak stworzyć Game Managera, sprawnie i sensownie zarządzać czasem gry oraz zbudować interfejs skalujący się do urządzenia, na którym zechce grać użytkownik. Jednak przede wszystkim nauczysz się bardzo skomplikowane rzeczy robić w znacznie prostszy sposób, a Twój kod stanie się bardziej elastyczny. To z kolei ułatwi Ci poprawianie projektu i wprowadzanie w nim zmian. Zostań mistrzem gier 2D i zadziwiaj świat swoimi projektami!\nCo Cię czeka podczas naszego profesjonalnego szkolenia?\nNauczysz się tworzyć sterowalne animowane postacie.\nZobaczysz, jak precyzyjnie sterować przełączaniem animacji.\nPoznasz pętle do-while i możliwości generowania liczb losowych.\nDowiesz się, jak operować na tablicach obiektów.\nZaczniesz płynnie i wydajnie poruszać obiektami z A do B.\nZrozumiesz, dlaczego warto używać szybkich sprite’ów, zanim stworzysz docelowe grafiki.\nSprawdzisz, jak korzystać z sortowania warstw i obiektów na warstwach.\nOdkryjesz, jak zapisywać dane na urządzeniu i odczytywać je w kolejnych sesjach.\nPrzygotujesz środowisko i SDK dla kompilacji pod platformę Android.\nDostosujesz telefon lub tablet do celów programistycznych.\nZaimplementujesz wzorzec Singleton, poznasz jego zalety i efekty użycia.\nPodczas trzydziestu ośmiu lekcji będziesz miał okazję dogłębnie poznać zaawansowane narzędzia do tworzenia gier 2D. Oprócz czynności związanych stricte z tworzeniem gry, takich jak automatyczne generowanie obiektów w zadanej częstotliwości czy optymalizacja assetów przed kompilacją, znajdziesz tu także informacje o zasadach współpracy z Google Play. Dowiesz się, jak podpisać Twoją aplikację, na czym polega obsługa konsoli deweloperskiej Google Play i jak przebiega proces publikacji gry w tym sklepie. Kurs skończysz na poziomie zaawansowanym. Będziesz już potrafił zrobić naprawdę dobrą grę 2D — zarówno zwykłą platformówkę, jak i grę zawierającą zaawansowane mechanizmy fizyczne. Żadnych trudności nie sprawi Ci także proces publikacji Twojej gry do sprzedaży lub udostępnienie jej za darmo.\nTajna broń Unity, czyli automatyzacja i optymalizacja\nElastyczne środowisko Unity ma bardzo wiele do zaoferowania. Twoje pomysły mogą się w nim zmaterializować bardzo szybko, a Ty możesz poczuć potężną satysfakcję płynącą z ich realizacji... bez frustrowania się koniecznością wykonania tysięcy zbędnych czynności. Czy nie byłoby wspaniale automatycznie tworzyć kolejne poziomy, czyli wyznaczyć kierunek i zdać się na automat? Czy nie chciałbyś mieć pod ręką zarządcy gry, który ułatwi Ci dopilnowanie wszystkich szczegółów? Czy nie lepiej zająć się tym, co naprawdę istotne, czyli mechanizmem gry, jej zawartością treściową, a inne kwestie załatwiać paroma linijkami kodu? Unity daje Ci takie możliwości, musisz tylko zajrzeć nieco głębiej, a ułatwi Ci to właśnie ten kurs video. Ucz się, projektuj, publikuj! Do zobaczenia w Google Play!\nZrób karierę jako projektant gier 2D!\nTwoje gry świadczą o Tobie, a jeśli będą dobre, kariera projektanta stanie przed Tobą otworem. Gry 2D są świetnym pomysłem na biznes. Wiedzą o tym zarówno potężne firmy wypuszczające kolejne hity, jak i niezależni projektanci, którzy zarabiają niezłe pieniądze na swoich grach. W końcu niemal każdy ma dziś tablet, a ze smartfonem praktycznie się nie rozstaje. Lekkie gry na urządzenia mobilne szturmem zdobyły rynek, a Ty możesz na tym skorzystać — programistów takich gier ciągle brakuje! W grach 2D liczy się Twój pomysł, a nie to, jak świetnie opanowałeś operowanie obiektami w przestrzeni. Zacznij zarabiać na swojej pasji — Unity. Kurs video. Poziom trzeci. Tworzenie gry 2D i publikacja w Google Play z pewnością Ci w tym pomoże!\nTylko dla wtajemniczonych\nPrzyspieszenie procesu produkcji gier jest możliwe, podobnie jak odchudzenie ich z niepotrzebnego kodu i zminimalizowanie wymagań sprzętowych. W tym celu musisz jednak dobrze poznać mechanizmy rządzące tworzeniem kodu w Unity, nauczyć się konstruować interaktywne, animowane postacie, budować poziomy w sposób automatyczny i pseudolosowy, tworzyć interesujące przeszkody dla gracza, pisać skrypty w języku C# i stosować wzorce projektowe. To pozwoli Ci działać efektywnie i poszerzyć gamę oferowanych produktów. Przyjemnej pracy na chłonnym rynku gier 2D!\nPoznaj naszego eksperta\nArkadiusz Brzegowy, rocznik 1977. Pierwsze programy pisał na Atari 65XE w Basicu, a później zainteresował się grafiką 3D na DOS owej wersji 3D Studio. Pracę w branży gier rozpoczął pod koniec studiów na Akademii Górniczo-Hutniczej w Krakowie. Aktualnie jest właścicielem firmy Feel3D, której podstawową działalnością jest tworzenie aplikacji 3D i 2D dla przemysłu, branży promocji i marketingu oraz na rynek rozrywkowy. Tworzy między innymi gry, symulatory przemysłowe, interaktywne prezentacje 3D, aplikacje z wykorzystaniem hełmów VR oraz aplikacje rzeczywistości rozszerzonej. Jest trenerem w autoryzowanym ośrodku szkoleniowym IT Media w Warszawie, autorem internetowych kursów i poradników o Unity, a także jedynym resellerem Unity w Polsce. Po godzinach gra na perkusji, ściga się gokartami, piecze domowy chleb i pokazuje dzieciom świat.\n„To już trzecia edycja kursu tworzenia gier 2D. Czas wejść na wyższy poziom. Niech gra choć częściowo tworzy się sama. Tym razem stworzysz poziomy generowane samoczynnie. Ty wyznaczysz tylko pewne warunki brzegowe. Stworzysz także Game Managera, aby łatwo zarządzać całą grą z jednego obiektu. Przygoda się rozkręca, a może nawet zaczniesz zarabiać po opublikowaniu gry w Google Play. No, ale już nie zanudzam, robienie gier jest ciekawsze! :) Powodzenia!”\nArkadiusz Brzegowy",
      "target_audience": [
        "Kurs dla każdego kto chce zostać programistą gier w Unity."
      ]
    },
    {
      "title": "Développer des jeux connectés au cloud avec Unity & PlayFab",
      "url": "https://www.udemy.com/course/developper-des-jeux-connectes-au-cloud-avec-unity-playfab/",
      "bio": "Monétiser votre jeu avec Unity ADS,et Gérer vos données, authentification, Leaderboard, Monnaie Virtuelle avec PlayFab",
      "objectives": [
        "Gérer l'authentification des joueurs sur le cloud",
        "Utiliser les api client de \"PlayFab\" et leurs services associés",
        "Créer et gérer les statistiques de vosjoueurs , réaliser des \"Leaderboard\"",
        "Monétiser votre jeu par l'intermédiaire des services Unity ADS",
        "Réaliser un Store (Shop) dans votre jeu",
        "Utiliser de la monnaie Virtuel (Virtual Currency)",
        "Collecter et Utiliser les données des Joueurs"
      ],
      "course_content": {
        "Découverte et Intégration de PlayFab": [
          "Introduction",
          "Présentation des services PlayFab",
          "Dashboard et création de compte PlayFab",
          "Intégration de Playfab dans Unity",
          "Quiz Section PlayFAB"
        ],
        "Gestion de l'autentification": [
          "Réalisation de l'interface d'authentification",
          "Remember script (Toggle)",
          "Application Programming Interface API",
          "Register : utilisation de l'API RegisterPlayFabUser",
          "Ecran de chargement (Design)",
          "Ecran de chargement (script)",
          "Login : utilisation de l'API LoginWithEmailAddress",
          "Quiz Section Authentification PlayFab"
        ],
        "Gestion des données dans PlayFAB": [
          "Création de l'interface de Menu (Play , Shop, LeaderBoard,etc..)",
          "Pattern Singleton (Instance unique de l'objet PlatFabMananger)",
          "Afficher des News : utilisation de l'API GetTitleNews",
          "Prototypage de la scène de Jeu",
          "Gestion des types de voitures",
          "UI Gestion des points et des pièces",
          "DisplayName : utilisation de l' API GetAccountInfo",
          "Score : Utilisation de l' API GetPlayerStatistics",
          "Initialisation des \"Statistics\" : utilisation de l'API UpdatePlayerStatistics",
          "Mise a jour du score dans Playfab",
          "Synchronisation du score dans le PlayfabManager",
          "Quiz Section Gestion des données PlayFab"
        ],
        "Gestion de LeaderBoard dans PlayFab": [
          "DashBoard Leaderboard",
          "LeaderBoard Design",
          "API GetLeaderboard",
          "Script LeaderBoard",
          "Quiz Section Leaderboard"
        ],
        "Monnaie Virtuelle (Virtual Currency)": [
          "Paramétrage de la monnaie Virtuelle \"Coins\" dans Playfab",
          "Récupération du solde de la monnaie Virtuel ,Utilisation de l'API GetUserInvento",
          "Ajouter de la monnaie Virtuelle ,Utilisation API AddUserVirtualCurrency",
          "Quiz Section monnaie virtuelle"
        ],
        "Shop (Magasin Virtuel)": [
          "Shop Design",
          "Récupération de la voiture du joueur, Utilisation API GetUserData",
          "Achat d'une Voiture (Script)",
          "Synchronisation Player Data Tiltle Utilisation de l'API UpdateUserData",
          "Débiter de la monnaie Virtuelle, SubtractUserVirtualCurrency",
          "Quiz Section Shop"
        ],
        "Monétisation publicité UNITY ADS": [
          "Service Unity ADS",
          "Implémentation des Services ADS Unity dans le projet",
          "Affichage d'une publicité (Advertisement.Show)",
          "Publicité récompensée (ShowRewardedAd)",
          "Mise à jour Virtual Currency après visionnage de la publicité",
          "Diffuser des publicités ADS (Mode Production)",
          "ADS Rémunération (invoicing)",
          "ADS Google Play Intégration",
          "Quiz Section Monétisation UNITY ADS"
        ],
        "BONUS": [
          "Installation de la JDK (Java Development Kit)",
          "Installation de la SDK Android",
          "Command Line Tools",
          "Mobile Stick Control (Joystick Virtuel)",
          "Code source du cours (Intégration dans Unity)"
        ],
        "Coupons de réductions": [
          "Coupons de réductions"
        ]
      },
      "requirements": [
        "Les bases d'unity et du langage C#"
      ],
      "description": "De nos jours le Cloud est indispensable pour développer des jeux !\nLes outils de PlayFab sont destinés au développement de jeux connectés au cloud.\n\nQu'est ce que PlayFab ?\nPlayFab est un fournisseur complet de services de plateforme backend pour construire, lancer et développer des jeux connectés au cloud. Les outils de PlayFab sont conçus pour être utilisés par les développeurs de jeux sur toutes les plateformes (mobile, PC et console).\n\nCela signifie qu'un nombre croissant de développeurs cherchent à créer des jeux connectés pour les appareils mobiles, PC et consoles qui mettent l'accent sur les opérations après le lancement. Cependant, le coût et la complexité de cette réalisation grâce à des outils et à des technologies personnalisés sur serveur sont élevés, et PlayFab offre aux développeurs un modèle convaincant qui évolue naturellement avec les lecteurs de leurs jeux. »\n\nLa résultante ? Les services backend de PlayFab réduisent les barrières au lancement pour les développeurs de jeux, offrant aux petits et grands studios des solutions de développement rentables qui évoluent avec leurs jeux et les aident à engager, retenir et monétiser les joueurs. « PlayFab permet aux développeurs d'utiliser le cloud intelligent pour construire et exploiter des jeux, analyser les données de jeu et améliorer les expériences de jeu en général. »\n« Aujourd'hui, PlayFab gère plus de 700 millions de joueurs. traite plus de 1,5 milliard de transactions par jour, soit près de 20 000 transactions par seconde.\nLa technologie de PlayFab est utilisée par certaines des plus grandes sociétés de divertissement, dont Disney, NBC Universal, Wizards of the Coast, Nickelodeon, Bandai Namco, Rovio et Capcom, ainsi que des indies à croissance rapide comme Fluffy Fairy, Nvizzio et Hyper Hippo.\n\n\nQu'elle sont les compétences que vous allez acquérir dans ce cours ?\nComprendre le fonctionnement des API Client Playfab\nÊtre autonome avec les API Client  de la documentation\nCréer un Système d'authentification (Login/register)\nGérer les données Utilisateurs (Score , Point d'expérience,etc..)\nCréer des Learderboard\nGérer l'affichage et la Gestion des \"news Title\" (Depuis le BackEnd dans votre scène unity)\nUtiliser de la monnaie Virtuel (Virtual Currency)\nMonétiser votre jeu grâce a la publicité (Unity ADS)\n\n\nLes possibilités qu'offre les services de playfab sont nombreuses et il est impossible de toute vous les présenter , mais à l'issue de ce cours vous serez capable d'utiliser les API Client dont vous avez besoin de manière autonome grâce a documentation de Playfab.",
      "target_audience": [
        "Toute personne souhaitant approfondir ses compétences avec Unity",
        "Les développeurs souhaitant découvrir les services de cloud gaming",
        "Les développeurs souhaitant monétiser leurs jeux (Unity ADS)"
      ]
    },
    {
      "title": "C# für Unity 2018 Komplettkurs: Programmieren wie ein Profi",
      "url": "https://www.udemy.com/course/erweiterte_csharp_spieleentwicklung/",
      "bio": "Lerne erweiterte C# Programmierung für die Spieleentwicklung wie ein Profi!",
      "objectives": [
        "In diesem Kurs lernst du die wichtigsten Elemente von C# die du benötigst um professionellen Code zu programmieren"
      ],
      "course_content": {
        "Einleitung": [
          "Coding mit Jannick",
          "Unity herunterladen",
          "Neues Projekt anlegen und ein Script erstellen"
        ],
        "Professionelles Scripting": [
          "Namenskonvention",
          "Lesbarkeit",
          "Quiz Namenskonvention und Lesbarkeit",
          "Zugriffsmodifizierer",
          "Wichtiger Hinweis!",
          "Aufbau",
          "Kommentieren",
          "Eigenschaften",
          "Vererbung",
          "Virtual und Override",
          "Delegates und Events",
          "Motivation als Schlüssel zum Erfolg"
        ],
        "Ein professionelles Potion System entwicklen": [
          "Potion System Part I: Properties",
          "Potion System Part II: Vererbung",
          "Potion System Part III: Tränke benutzen (Override und Virtual)",
          "Potion System Part IV: Das Event erstellen",
          "Potion System Part V: Abschluss"
        ],
        "Werkzeugkasten": [
          "Object Pooling",
          "Instanzen und Singletons",
          "Coroutines und IEnumerator"
        ],
        "Scriptable Objects": [
          "Einleitung in Scriptable Objects"
        ],
        "Bonus": [
          "Abschluss",
          "Meine anderen Kurse über Spiele-Entwicklung"
        ]
      },
      "requirements": [
        "Grundkenntnisse in der Programmiersprache C# werden vorausgesetzt!",
        "Ein paar Erfahrungen mit Unity3D"
      ],
      "description": "Der Kurs wird stetig erweitert! Ganz neu: Coroutines und IEnumerator.\nDer Perfekte Einstieg um deine Fähigkeiten als Spieleentwickler zu verbessern!\nDirekt aus der Praxis! Wenn du genau wie ich dein Geld mit der Entwicklung von Spielen verdienen möchtest, dann ist dieser Kurs ein weiterer Boost auf deinem Weg zum Erfolg. Gemeinsam lernen wir wie du dem Standard der Programmierung für Spiele gerecht wirst um deine Chancen auf einen Job und allgemeinen Erfolg als Entwickler deutlich zu erhöhen.\nInhalte\nNamenskonvention\nLesbarkeit\nZugriffsmodifizierer\nAufbau eines Scripts\nKommentieren\nEigenschaften\nVererbung\nVirtual und Override\nDelegates und Events\nObject Pooling\nInstanzen und Singletons\nScriptable Objects\nCoroutines und IEnumerator\nWie immer stehe ich dir für alle Fragen und Support auf deinem Weg zur Seite.\nSchreibe dich am besten gleich ein und verbessere noch heute deine Fähigkeiten als Spieleentwickler!",
      "target_audience": [
        "An jeden der seine C#-Fähigkeiten verbessern möchte (vor allem Spieleentwickler)"
      ]
    },
    {
      "title": "retr0의 유니티 (Unity C#) 게임 프로그래밍 에센스",
      "url": "https://www.udemy.com/course/retr0-unity/",
      "bio": "간결하고 탁월한 유니티 게임 프로그래밍 튜토리얼",
      "objectives": [
        "혼자서 유니티 게임을 완성할 수 있는 능력",
        "80% 이상의 유니티 에디터 사용법",
        "중급의 유니티 C# 클라이언트 프로그래밍",
        "프로그래밍에 필요한 컴퓨터 공학 기초 (OOP 위주)"
      ],
      "course_content": {
        "유니티 준비하기": [
          "유니티 허브와 유니티 에디터 설치",
          "새 프로젝트 생성 + 인터페이스 살펴보기",
          "플레이 버튼",
          "트랜스폼 툴 + 씬 탐색",
          "기즈모 + 씬 기즈모",
          "트랜스폼 툴 + 오브젝트 변형",
          "씬 애셋",
          "피벗-센터 + 로컬-글로벌 전환",
          "프로젝트 폴더 구조 + 프로젝트 다시 열기",
          "유니티 허브 2.0 변경점과 사용법",
          "필독 : 유니티 최신 버전과 과거 버전의 차이점",
          "유니티 에디터를 위한 3가지 코드 에디터",
          "오류 신고와 개선사항 제안"
        ],
        "게임 엔진의 원리": [
          "게임 엔진의 원리 : 게임 오브젝트와 컴포넌트",
          "게임 엔진의 원리 : 메시지와 브로드캐스팅",
          "유니티 게임 엔진의 기반 원리"
        ],
        "C# 프로그래밍: 기본": [
          "변수와 함수의 이해",
          "콘솔 출력 + C# 기본 변수",
          "사칙 연산 + 복합 연산자",
          "함수 + 스코프",
          "형변환 + 조건문",
          "분기문 + 반복문",
          "배열",
          "클래스와 오브젝트"
        ],
        "게임 제작 : 소코반(창고지기)": [
          "인트로",
          "초기 씬 구성",
          "플레이어 조작 (1/2)",
          "플레이어 조작 (2/2)",
          "레벨 디자인 (1/2)",
          "레벨 디자인 (2/2)",
          "오브젝트 회전 + 시간 간격",
          "충돌처리",
          "게임 매니저와 승리 조건",
          "승리 UI 추가",
          "최종 빌드"
        ],
        "C# 프로그래밍 : 중급 (1/2)": [
          "벡터 연산 기초",
          "평행이동과 좌표계 + 부모 자식 관계",
          "회전과 쿼터니언",
          "인스턴스화",
          "오버로드",
          "정적 변수 + 정적 함수",
          "리스트",
          "싱글톤",
          "코루틴"
        ],
        "게임 제작 : 어메이징 볼링": [
          "인트로",
          "필요 애셋 임포트",
          "PostProcessing 애셋 에러 픽스",
          "회전 포신",
          "포탄",
          "프롭 + 데미지 시스템",
          "파워 슬라이드",
          "볼 슈터",
          "랜덤 오브젝트 생성기",
          "카메라 추적",
          "게임 매니저 (1/2)",
          "게임 매니저 (2/2)",
          "오디오 믹싱 + 최종 빌드",
          "추가 문서: 버그 픽스"
        ],
        "C# 프로그래밍: 중급 (2/2)": [
          "레이캐스트 fix",
          "레이캐스트",
          "상속",
          "다형성",
          "오버라이드",
          "인터페이스",
          "추상 클래스",
          "프로퍼티"
        ],
        "C# 프로그래밍: 고급": [
          "유니티 이벤트 (1/2)",
          "유니티 이벤트 (2/2)",
          "델리게이트",
          "이벤트",
          "액션 + 람다 함수",
          "제네릭",
          "람다로 표현된 메서드"
        ],
        "레퍼런스 : 유니티 애니메이션": [
          "애니메이션 클립",
          "애니메이터 컨트롤러 + FSM",
          "애니메이터 파라미터",
          "트랜지션",
          "블랜드 트리",
          "루트 모션 + 아바타",
          "애니메이터 레이어",
          "IK(Inverse Kinematic)",
          "애니메이터 복습과 정리"
        ],
        "레퍼런스 : UGUI": [
          "UGUI 개요",
          "캔버스",
          "RectTransform + 앵커, 피벗, 포지션",
          "UI 비주얼 컴포넌트 + 텍스트",
          "이미지",
          "Raw 이미지",
          "마스크",
          "그림자 + 외곽선",
          "비주얼 컴포넌트 정리",
          "인터렉션 컴포넌트 + Selectable",
          "버튼",
          "토글",
          "토글 그룹",
          "슬라이더",
          "드롭다운",
          "스크롤 뷰",
          "입력 필드",
          "레이아웃 컴포넌트 + 수직 정렬",
          "수평 정렬",
          "그리드 정렬",
          "레이아웃 엘리먼트",
          "이벤트 시스템 + UI 인터렉션 원리"
        ]
      },
      "requirements": [
        "Window PC 혹은 MAC",
        "평범한 컴퓨터 사용능력"
      ],
      "description": "2019년 새로운 추가 콘텐츠(TPS 게임 제작)가 연재 완료 되었습니다.\n\n\n복잡하고 모호한 것은 나쁜 것입니다. 훌륭한 설명은 간결한 설명입니다.\n모든 분야의 초심자를 대상으로, 유니티 C# 게임 프로그래밍을 직관적으로 설명합니다.\n\n열정적이고 성미급한 사람들을 위한 이 강좌를 당장 구매하세요!\n확신과 인내심을 가지고 오랫동안 책을 보고 있을 시간이 없는 사람들에게 더욱 제격입니다!\n\n\n코스 특징\n간결하고 직관적인 설명\n유니티로 개발을 시작하는데 필요한 대부분의 지식을 다룸.\n게임 프로그래밍을 제대로 다룸 (C# 과 컴퓨터 공학 이론)\n설명한 이론을 즉시 코드로 적용하고 확인\n작은 화면을 배려한 실시간 화면 확대\n평생 소장, 지속적인 업데이트와 많은 부록\n\n\n추가 업데이트와 부록 제공\n추가 콘텐츠와 부록: 최소 8 시간 이상의 추가 비디오.\n이벤트, 람다 등 C# 고난이도 문법과 개발팁\n유니티 애니메이터\n유니티 UI 시스템(UGUI) 레퍼런스\n단 한번만 구매하면 모든 추가 콘텐츠가 무료로 제공됩니다\n기존 구매자는 추가 요금 없이 전부 제공받습니다.\n대규모 콘텐츠 추가시 강의 가격이 변동될 수 있습니다.",
      "target_audience": [
        "초심자, 취미 개발자, 아티스트, 누구나",
        "눈에 보이는 결과물을 먼저 만들면서 이해하고 싶은 사람"
      ]
    },
    {
      "title": "Unity 3D ile Sıfırdan Oyun Geliştirmeyi Öğrenin",
      "url": "https://www.udemy.com/course/unity-egitim-seti/",
      "bio": "Unity ile Sıfırdan C# öğrenip kendi oyunlarınızı tasarlayın. Unity Oyun geliştirici olmak istiyorsanız hemen başlayın !",
      "objectives": [
        "Linkedin'de en çok aranan 7. meslek olan Unity Geliştiricisi olacak",
        "Geliştirdikleri oyunları marketlerde satışa sunabilecek",
        "Unity3D ile oyun geliştirebilecek",
        "Oyun geliştirme hakkında geniş bilgi sahibi olacak"
      ],
      "course_content": {
        "Giriş": [
          "Neden Unity",
          "Unity 2022 ve Visual Studio Kurulumu"
        ],
        "Temel C#": [
          "Giriş",
          "Değişten Tanımlama",
          "Operatörler",
          "Tip Dönüşümleri",
          "Uygulamalar 1",
          "If - Else Koşul Yapıları",
          "Switch Case Koşul Yapıları",
          "İf Örnekleri",
          "Switch Örnekleri",
          "For Döngüsü",
          "Foreach Döngüsü",
          "Do Döngüsü",
          "Do-While",
          "Döngü Örnekleri",
          "Diziler",
          "List Kullanımı",
          "Dizi Örnekleri",
          "Debugging ile hata yakalama",
          "Metodlar",
          "Metod Örnekleri",
          "Classlar ile Çalışmak",
          "Encapsulation",
          "Kalıtım İşlemleri (Inheritance)",
          "Virtual ve Abstract Konusu",
          "Interface Kullanmak"
        ],
        "Temel Unity": [
          "Yeni Proje Oluşturma",
          "Proje Yapısı",
          "Assetler ile çalışma",
          "Asset Store İpuçları"
        ],
        "Unity ile çalışmak": [
          "Arayüzü Tanıyalım",
          "Arayüzü Özelleştirme",
          "Sahne ile çalışmak",
          "Objeler ile çalışmak"
        ],
        "Unity Objelerini Öğrenelim": [
          "Materyal Kullanmak",
          "Collier ile çalışmak",
          "Rigid Body ile fizik işlemleri",
          "Prefab oluşturma",
          "2018.3 ile Gelen Yeni Prefab Sistemi",
          "Progrid ile daha kolay sahne tasarlamak",
          "Örnek Sahne Tasarlıyalım"
        ],
        "Işık": [
          "Işık tiplerini tanıyalım",
          "Işıklar ile Çalışmak",
          "Işık Optimizasyonu",
          "Bake ile Performans Kazanmak"
        ],
        "Particle ile Efekt Oluşturma": [
          "Particle System Oluşturma",
          "Particle Ayarları",
          "Particle Materyali"
        ],
        "Navigasyon ile Yön Bulma": [
          "Navmesh Alanı Hazırlamak",
          "Navmesh İnce Ayarları",
          "Navmesh Agent'ı Öğreniyoruz"
        ],
        "Animasyon": [
          "Animator ile çalışmak",
          "Animator Parametreleri",
          "Animasyonlara Script Yazmak",
          "Blentree Kullanımı",
          "Kendi animasyonunu oluşturma"
        ],
        "Ses": [
          "Audio Source Nedir ?",
          "Audio Mixer ile Ses Gruplamak",
          "Ses Efektleri"
        ]
      },
      "requirements": [
        "Oyun geliştirme arzusu",
        "Windows yada Mac bilgisayar"
      ],
      "description": "45.000+ Unity Öğrencisi 4.75+ üzeri puanlama.\n10 larca saat hikaye dinlemek istemiyorsanız,odaklı ve oyun geliştirme konusunda sektörde tecrübeli olan birisinden eğitim almak istiyorsanız bu kurs sizler için doğru kurs.\n\n\nOyun geliştirici olmak mı istiyorsunuz ?\nKendi oyununuzu geliştirip milyonlara ulaşmak mı istiyorsunuz ?\nBir oyun firmasında işe mi girmek istiyorsunuz ?\nBu sorulardan birine evet diyorsanız bu kurs size göre. Kursumuz temel seviyeden başlayıp Unity3D programını anlatmaktadır.Kursa müfredatı hem programcı hemde programcı olmayanlara yönelik hazırlanmıştır.\nKursumuzun amacı sektörün ihtiyacını karşılayabilecek , profesyonel olarak bu işi yapmak isteyenler için iyi bir başlangıç noktası olmaktır.\n\n\nProgramlama bilmenize gerek yok\nEğitimimiz içindeki c# derslerini hiç programlama bilmeyenler için hazırlandı.\n\n\nOyun geliştirmeye hemen başlayın !\n\n\nUnity 3D ile oyun programlama kursu, oyun geliştirmeyi öğrenmek isteyenler için tasarlanmış bir eğitim programıdır. Kurs, Unity 3D oyun motorunu kullanarak oyun tasarımı,  animasyon, oyun mekaniği ve diğer oyun geliştirme konularını kapsar. Kurs, oyun geliştirme sektöründe profesyonel olarak çalışmak isteyenler için de uygun bir seçenek olabilir.\n\n\nKurs, c# ve Unity 3D oyun motorunun temellerini öğreterek başlar ve oyun tasarımı, animasyon, oyun mekaniği ve diğer oyun geliştirme konularını içermektedir. Kurs sonunda, katılımcılar gerçek oyun projelerinde çalışarak pratik yapma fırsatı bulurlar.\nKursun faydaları arasında, oyun geliştirme konularını profesyonel bir seviyede öğrenmek, gerçek oyun projelerinde çalışma tecrübesi kazanmak ve sektörde iş bulma şansını artırmak sayılabilir.\nSektör profesyoneli tarafından eğitim almanın avantajları ise, en yeni teknikleri ve uygulamaları öğrenmek, profesyonel bir eğitimci tarafından yönlendirilme fırsatı bulmak ve sektöre bir adım önde başlama fırsatını elde etmektir. Bu sayede, kurs tamamlandıktan sonra katılımcılar, oyun geliştirme sektöründe başarılı bir kariyer yapma şansını artırabilirler.",
      "target_audience": [
        "Kendi oyununu geliştirmek isteyenler",
        "Bir oyun firmasında işe girmek isteyenler",
        "Unity3D öğrenip uzmanlaşmak isteyenler",
        "Mobil & PC oyun geliştiricisi olmak isteyenler",
        "Detaylıca unity'i öğrenmek isteyenler"
      ]
    },
    {
      "title": "Curso Unreal Engine 5: Crea tus propios juegos desde 0",
      "url": "https://www.udemy.com/course/unreal-engine-5-iniciacion-de-basico-a-avanzado/",
      "bio": "Aprende desde 0 las habilidades para crear lo que quieras en UE5. Mas contenido gratis en youtube - @ClovisExpanse",
      "objectives": [
        "Nueva interfaz y nuevos conceptos que engloban UE5: Nanite, Lumen y mas",
        "Creación de escenarios y contenido desde 0: landscape, materiales, foliage y mas",
        "Programación con BluePrints de cero. Aprendiendo mecánicas que hemos podido ver en otro juegos",
        "Ser resolutivo y adaptativo. Abordaremos los problemas desde varios puntos de vista",
        "Tips, consejos, herramientas, metodologías que he ido adquiriendo en mi carrera profesional",
        "Mas contenido gratis en youtube - @ClovisExpanse"
      ],
      "course_content": {
        "INTRODUCCION": [
          "INTRODUCCION AL CURSO",
          "CONTENIDO EXTRA"
        ],
        "REPASO BASICO DE UNREAL PARA PONERNOS AL DIA": [
          "INTRODUCCION: EMPEZAMOS A CONOCER UE5",
          "DESCARGAR E INSTALAR EL PROGRAMA",
          "CREAR PROYECTO",
          "INTERFAZ INMEDIATA I",
          "INTERFAZ INMEDIATA II",
          "INTERFAZ INMEDIATA III",
          "CONTENT BROWSER",
          "EJERCICIO",
          "VIEWPORT",
          "SHAPES",
          "GEOMETRY",
          "BRUSH EDITING",
          "MATERIALES",
          "ILUMINACION",
          "LUCES",
          "ATMOSFERA",
          "POSTPROCESS",
          "LUMEN"
        ],
        "ESTUDIAMOS LOS MATERIALES PARA PODER PERSONALIZAR NUESTRO ENTORNO": [
          "INTRODUCCION: TEXTURAS Y MATERIALES PARA NUESTRO ENTORNO",
          "NODOS PRINCIPALES I",
          "NODOS PRINCIPALES II",
          "NODOS PRINCIPALES III",
          "NODOS PRINCIPALES IV",
          "INSTANCE MATERIAL",
          "EJERCICIO",
          "BRIDGE",
          "DECALS"
        ],
        "ECHA UN VISTAZO A LA POTENCIA DE NANITE": [
          "NANITE"
        ],
        "VAMOS A CREAR PAISAJES ENORMES Y PERSONALIZARLOS": [
          "INTRODUCCION: CONOCIENDO NUEVAS Y POTENTES HERRAMIENTAS",
          "CREACION DE LANDSCAPE",
          "LANDSCAPE MATERIAL I",
          "EJERCICIO",
          "LANDSCAPE MATERIAL II",
          "LANDSCAPE MATERIAL III",
          "LANDSCAPE MATERIAL IV",
          "EJERCICIO",
          "FOLIAGE I",
          "FOLIAGE II",
          "VERTEX PAINTING I",
          "VERTEX PAINTING II",
          "VERTEX PAINTING III",
          "MODELING I",
          "MODELING II"
        ],
        "EMPEZAMOS A CREAR MECANICAS CON LOS BLUEPRINTS": [
          "INTRODUCCION: LA PROGRAMACION NUNCA FUE TAN FACIL",
          "TIPOS DE BP",
          "LEVEL BP",
          "VARIABLES",
          "MY CHARACTER",
          "MOVIMIENTO",
          "ENHANCED INPUTS",
          "EJERCICIO",
          "ADD PROYECT PACK"
        ],
        "E.1: ¡A SALTAR! VAMOS A CREAR NUETRO JUEGO DE PLATAFORMAS": [
          "INTRODUCCION: TIENES VERTIGO?",
          "COMPONENTS",
          "COLLISIONS I",
          "COLLISIONS II",
          "TIME LINE",
          "LERP LOCATION",
          "EJERCICIO",
          "EDIT LOCATION",
          "EJERCICIO",
          "DETALLES DEL TIME LINE",
          "STREAMING LEVELS",
          "TEMBLEQUE I",
          "TEMBLEQUE II",
          "TEMPORIZADOR I",
          "TEMPORIZADOR II",
          "EJERCICIO"
        ],
        "E.2: ¿ACCESO VIP? PROGRAMAREMOS EL USO DE TARJETAS PARA ABRIR PUERTAS": [
          "INTRODUCCION: PUERTAS Y TARJETAS, SEGUIMOS AVANZANDO",
          "ESCENARIO SCIFY",
          "TARJETAS Y PANELES",
          "COGER TARJETA",
          "RESALTAR TARJETA",
          "USAR TARJETA",
          "EJERCICIO",
          "MAS PUERTAS, MAS TARJETAS",
          "EJERCICIO",
          "LINE TRACE I",
          "LINE TRACE II",
          "LINE TRACE III",
          "NODES, FUNCTIONS & MACRO",
          "PHYSIC HANDLE I",
          "PHYSIC HANDLE II"
        ],
        "E.3: CONTRASEÑA INCORRECTA! CREAREMOS UN PANEL NUMERICO INTERACTIVO": [
          "INTRODUCCION: PASSWORD? QUE PASSWORD?",
          "ACTOR DOCUMENTO",
          "ANIMACION DOCUMENTO I",
          "ANIMACION DOCUMENTO II",
          "PUNTERO HUD",
          "MULTI TRACE",
          "WIDGET CODIGO I",
          "WIDGET CODIGO II",
          "VUELTA AUTOMATICA I",
          "VUELTA AUTOMATICA II",
          "VUELTA AUTOMATICA III",
          "WIDGET CODIGO III",
          "WIDGET CODIGO IV",
          "WIDGET CODIGO V",
          "EJERCICIO",
          "DOOR CHILDS I",
          "DOOR CHILDS II"
        ],
        "E.4: ESTO YA ES OTRA COSA. CREAREMOS UN MECANISMO TIPO PUZZLE PARA PODER AVANZAR": [
          "INTRODUCCION: FISICAS, PALANCAS, BOTONES... UN BUEN ROMPECABEZAS",
          "CREACION DE ACTORES",
          "COMUNICACION BP I",
          "EJERCICIO",
          "COMUNICACION BP II",
          "ADD SATIC MESH",
          "COMUNICACION BP III",
          "SPAWN ACTOR",
          "CUSTOM EVENT",
          "EVENT DISPATCH",
          "INTERFACE",
          "EJERCICIO",
          "AJUSTES GENERALES I",
          "AJUSTES GENERALES II",
          "AJUSTES GENERALES III",
          "AJUSTES GENERALES IV",
          "AJUSTES GENERALES V",
          "AJUSTES DEL CHARACTER"
        ]
      },
      "requirements": [
        "No son necesarios conocimiento. Solo ganas y saber encender el ordenador",
        "Requisitos Mínimos: Sistema operativo: Windows 10 64-bit",
        "Quad-core Intel or AMD, 2.5 GHz or faster",
        "8 GB RAM",
        "Cualquier tarjeta gráfica compatible con DirectX 11 o 12. Si quieres utilizar la teconología de Lumen (iluminación en tiempo real), se recomienda mínimo una NVIDIA RTX-2000 series o mayor. O si usas AMD, una AMD RX-6000 series o mayor. Para usar Nanite or Virtual Shadow Maps, necesitarás una tarjeta gráfica que soporte DirectX 12."
      ],
      "description": "Hola y bienvenidos a todos/as. Mi nombre es Clovis Ruiz y os animo a que le echéis un vistazo a este curso. Antes de nada, os hablare un poco de mi y mi experiencia.\n\n\nMi recorrido en el sector comenzó en 2015. Estuve trabajando en varias empresas como desarrollador de contenido y experiencias para múltiples dispositivos (VR, AR, PC, Móvil, Web...). Tras varios años me lancé a abrir mi propio estudio llamado Virtual Expanse en el que desarrollamos todo tipo de proyectos. Desde arquitecturas y construcciones hasta simulaciones de aprendizajes para las Fuerzas Aéreas Españolas. Gracias a todos estos proyectos he podido centrarme en los elementos que he creído más relevantes para aportarlos a este curso y aportar un punto de vista mas profesional.\n\n\nEste curso esta orientado a aprender a usar el motor de tiempo real Unreal Engine 5 (el mejor motor de tiempo real en mi opinión). Digamos que está orientado, no a un género concreto, sino a saber desenvolvernos con UE5 para afrontar cualquier reto que se nos pueda presentar el día de mañana. Esto incluye el sector del videojuego, simulaciones, serius games, lerning games, arquitectura, construcción y un largo etc, de usos y aplicaciones.  Aprenderemos a usar su nueva interfaz, nuevos tips, atajos, funcionalidades y herramientas.\n\n\nTodo esta orientado a que aprendas sin ninguna base de antemano. Es cierto que te será mas fácil desenvolverte si has usado algún tipo de programa o motor anteriormente, pero no es necesario realmente. No nos debemos dejar apabullar por las opciones y menús que veamos. He juntado toda mi experiencia en estos años trabajando en el sector para formar un temario de aprendizaje ideal, en el que iremos avanzando a su debido momento y paulatinamente de una forma natural, enfocándonos en elementos y herramientas que realmente son útiles en múltiples casos o proyectos.\n\n\n¿Cómo será el curso? ¿Qué nos podemos encontrar?\nEn general, nos vamos a desenvolver en niveles, viendo qué necesitamos para ir desarrollando la idea que se presenta en cada bloque o temas.\nUna vez apliquemos cierta lógica a lo que queremos conseguir, procederemos a ejecutar esa idea e intentar darle forma con las herramientas que hasta el momento conocemos.\nAprenderemos en base a ejercicios, interacciones o mecánicas divertidas que, de forma natural, iremos necesitando mediante avancemos.\nAbordaremos los problemas que se nos presentan de una forma lógica y tratándolo a veces de distintas perspectivas.\nAprenderemos a ser resolutivos y a ver que pueden existir varias formas de conseguir lo que queremos.\nAl final del curso, nos encontraremos con un escenario y varias mecánicas listas para ejecutarse tal y como de una experiencia final se tratase, pudiendo modificarlas continuamente para generar nuevos retos si lo deseamos.\n¿Cómo vamos ha hacer todo esto?\nComo ya dije anteriormente, UE5 posee múltiples herramientas con las cuales trabajaremos hasta sentirnos cómodos y poder desarrollar prácticamente cualquier cosa que queramos.\n\n\nAprenderemos a desenvolvernos con las distintas interfaces que nos presenta el programa.\nSiempre que se de el momento, hablaremos de tips para realizar nuestras tareas de una manera mas dinámica.\nContinuamente aprenderemos el poder de las \"hotkeys\": atajos de teclados que nos ayudaran a ahorrar mucho tiempo a lo largo de nuestro desarrollo.\nNos relacionaremos con distintas herramientas visuales que nos ayudaran a \"vestir\" nuestro entorno o experiencia.\nHerramientas como pueden ser la de creación de extensos terrenos. Pudiendo modificar y esculpir a nuestro antojo montañas, colinas, valles y demás elementos relacionados.\nEcharemos un vistazo a cómo decorar ese terreno con la herramienta de \"follaje\" para que, de una forma rápida y versátil, podamos crear bosques y vegetación.\nAprenderemos a tratar distintos tipos de materiales, pudiendo personalizarlos para dotar a cada elemento con su adecuado aspecto.\nLe daremos uso al apartado de luces e iluminación que, junto con una de las nuevas modalidades de UE5, será un gusto poder ver de qué somos capaces.\nPara aquellos que les guste modelar, veremos como usar una herramienta con la que podemos trabajar a partir figuras geométricas básicas como son el cubo o cilindro y dotarlas de formas para conseguir figuras mas complejas como casas.\nVeremos como jugar con uno de los elementos mas importantes de este motor y del curso. Los Blue Prints. Se trata de un método de programación totalmente visual y sin necesidad de saber nada anteriormente. De hecho, es una delicia poder trabajar de esta manera tan fluida y sencilla.\nDentro del apartado de Blue Prints, aprenderemos a usar varias herramientas que junto con estos, podremos aprender a desenvolvernos en múltiples escenarios.\nPor otro lado, veremos varias herramientas para optimizar nuestro entorno y algunos tips que uso personalmente para detectar errores o fallos en nuestro código o en nuestro escenario y poder sacarles más partido a ambos.\nUn aspecto que considero tremendamente importante será enfocar los problemas de una forma lógica, desde varias perspectivas y entender cómo construir en UE5 lo que tenemos en nuestra cabeza. Ir asimilando la lógica de como resolver los acertijos o puzles que se nos presentan a la hora de resolver un ejercicio.",
      "target_audience": [
        "Dirigido a todos los amantes del mundo 3d y que se quieran iniciar de una forma amena y sin conocimientos de antemano al sector. Y no solo al de videojuegos, sino a distitos campos profesionales como pueden ser arquitectura, simulaciones, serius games, learning games o cualquier tipo de experiencia",
        "Aquellos que quieran dar un giro a su profesión y desarrollar experiencias en VR",
        "A esos que tienen todo tipo de ideas, pero no tienen las herramientas necesarias"
      ]
    },
    {
      "title": "Aprende a crear videojuegos con Godot 4 | Curso definitivo",
      "url": "https://www.udemy.com/course/godot-4-curso-definitivo-de-creacion-de-videojuegos/",
      "bio": "En este curso haremos varios juegos en 2d y 3d y Aprenderás desde 0 a programar en GDScript",
      "objectives": [
        "Crearas Videojuegos en 2D y 3D Sin necesidad de tener conocimientos previos",
        "Aprenderas Todas las funcionalidades de GDscript para hacer videojuegos",
        "Crearas varios proyectos de videojuegos en el curso y podrás hacer tus propios videojuegos al terminar",
        "Al final de cada sección te doy el proyecto completo para que lo uses de referencia si algo te falla",
        "Puedes seguir expandiendo los proyectos para liberar los juegos como de tu autoria en tiendas de videojuegos",
        "En cada nuevo proyecto te doy los assets al iniciar para que no perdamos tiempo y empecemos de inmediato a crear videojuegos",
        "Definitivamente el mejor curso de Godot que vas a encontrar en internet !"
      ],
      "course_content": {},
      "requirements": [
        "No necesitas tener conocimientos previos de programación ni de Godot, en el curso empezamos desde cero"
      ],
      "description": "En este curso haremos varios videojuegos en Godot 4, primero en 2D y terminaremos con un videojuego en 3D. Este curso es imprescindible para cualquier persona que se quiera iniciar en Godot, programaremos proyectos escalables que podrán servirte para armar un portafolio de proyectos y tendrás los fundamentos para crear cualquier proyecto que desees.\n\n\nGodot es un motor ideal para principiantes, muy poderoso, completamente gratuito y open source, a la par de otros motores como Unity y con una facilidad de uso ideal para personas que no tengan conocimientos de programación. Godot es un motor de videojuegos 2D y 3D multiplataforma, libre y de código abierto, publicado bajo la Licencia MIT y desarrollado por la comunidad de Godot. El motor es funcional en sistemas Windows, OS X, Linux y BSD. Permite exportar los videojuegos creados a PC (Windows, OS X y Linux), teléfonos móviles (Android, iOS), y HTML5. GDScript es un lenguaje de programación de alto nivel, tipado dinámico y orientado a objetos, sintácticamente similar a Python, que fue creado especialmente para Godot, lo cual lo hace flexible y óptimo para programar videojuegos en el motor. Antes de la implementación de GDScript, la comunidad de desarrolladores de Godot evaluaron la posibilidad de utilizar lenguajes de programación de terceros como Lua o Python, pero al final optaron por desarrollar un lenguaje personalizado que se adapte al diseño basado en escenas de Godot.\nUn programa de \"Hola mundo\" en GDScript luce así:\nfunc _ready():\nprint(\"Hola mundo\")",
      "target_audience": [
        "Cualquier persona que quiera hacer videojuegos con Godot"
      ]
    },
    {
      "title": "Curso Unreal Engine 5: Listo para la Realidad Virtual",
      "url": "https://www.udemy.com/course/metaverso-en-unreal-engine-5-aprende-lo-esencial-en-vr/",
      "bio": "Aprende las bases en VR para desarrollar cualquier contenido. Mas contenido gratis en youtube - @ClovisExpanse",
      "objectives": [
        "Usaremos el motor UE5 para realizar las mecánicas mas usadas en el mundo VR",
        "Crearemos una versión VR para PC y otra para Quest 2",
        "Abordaremos que tipo de practicas se deben o no hacer en VR a lo largo del curso",
        "Aprenderemos a reconocer que sucede en nuestro entorno para optimizarlo",
        "Iremos viendo tips, consejos, herramientas, metodologías que he ido adquiriendo en mi carrera profesional",
        "Mas contenido gratis en youtube - @ClovisExpanse"
      ],
      "course_content": {
        "1. RESUMEN DEL CURSO": [
          "1.1.INTRO Y DENTRO",
          "1.2.CONSEJITOS DEL SEÑOR",
          "CONTENIDO EXTRA"
        ],
        "2.AJUSTANDO EL CHARACTER": [
          "2.1. INTRO AJUSTANDO EL CHARACTER",
          "2.2.PROYECTO Y PUESTA A PUNTO",
          "2.3.UNREAL Y VR",
          "2.4.CONFIGURANDO ALTURAS",
          "2.5.MOTION CONTROLLER",
          "2.6.ENHANCED INPUTS",
          "2.7.EJERCICIO",
          "2.8.MOVIENDO LAS MANOS I",
          "2.9.MOVIENDO LAS MANOS II",
          "2.10.MOVIENDO LAS MANOS III",
          "2.11.MOVIENDO LAS MANOS IV",
          "2.12.FLOATING MOVEMENT",
          "2.13.SIMPLE TELEPORT MOVEMENT I",
          "2.14.SIMPLE TELEPORT MOVEMENT II",
          "2.15.SIMPLE TELEPORT MOVEMENT III",
          "2.16.PROJECTILE TELEPORT MOVEMENT",
          "2.17.ROTATING MOVEMENT"
        ],
        "3.LAS PRIMERAS INTERACCIONES EN VR": [
          "3.1. INTRO INTERACCION VR",
          "3.2.HAND COLLISIONS",
          "3.3.SISTEMA GRAB SIMPLE I",
          "3.4.SISTEMA GRAB SIMPLE II",
          "3.5.SISTEMA GRAB SIMPLE III",
          "3.6.EJERCICIO",
          "3.7.SISTEMA GRAB AVANZADO I",
          "3.8.SISTEMA GRAB AVANZADO II",
          "3.9.SISTEMA GRAB AVANZADO III",
          "3.10.EJERCICIO",
          "3.11.SISTEMA GRAB AVANZADO IV",
          "3.12.SOCKET LOCATION",
          "3.13.VIBRACION HAPTICA",
          "3.14.MANOS FISICAS"
        ],
        "4.1. E 1: NECESITAMOS MAS POTENCIA": [
          "4.1. INTRODUCCION: NECESITAMOS MAS POTENCIA",
          "4.2.ESCENARIO SCIFY",
          "4.3.BATERIAS Y PIVOT POINT",
          "4.4. SNAPWORLD",
          "4.5. PULSE MATERIAL",
          "4.6.CONSOLA Y CONFIGURACION",
          "4.7. INSERCION DE BATERIAS I",
          "4.8.INSERCION DE BATERIAS II",
          "4.9. INSERCION DE BATERIAS III",
          "4.10. MANIPULACION ROTATOR I",
          "4.11.MANIPULACION ROTATOR II",
          "4.12.MANIPULACION ROTATOR III",
          "4.13. MANIPULACION ROTATOR IV",
          "4.14.MANIPULACION ROTATOR V",
          "4.15. MANIPULACION ROTATOR VI",
          "4.16. COMPLETAR EL PUZZLE"
        ],
        "5.E 2: Y SE HIZO LA LUZ": [
          "5.1. INTRODUCCION: Y SE HIZO LA LUZ",
          "5.2.PREAJUSTES",
          "5.3. CODIGOS INFRARROJOS",
          "5.4.LINTERNA INFRARROJOS I",
          "5.5.LINTERNA INFRARROJOS II",
          "5.6. WIDGET I",
          "5.7. WIDGET II",
          "5.8.WIDGET III",
          "5.9. WIDGET INTERACTION I",
          "5.10. WIDGET INTERACTION II",
          "5.11.WIDGET INTERACTION III",
          "5.12.WIDGET INTERACTION IV",
          "5.13.EJERCICIO"
        ],
        "6.E 3: CUIDADO QUE EL VAPOR QUEMA": [
          "6.1. INTRODUCCION: CUIDADO QUE EL VAPOR QUEMA",
          "6.2. PREAJUSTES",
          "6.3. CONTENT MAIN ENTRANCE",
          "6.4. INTERFACE I",
          "6.5. INTERFACE II",
          "6.6. INTERFACE III",
          "6.7. SLIDERS I",
          "6.8.SLIDERS II",
          "6.9. SLIDERS III",
          "6.10. EJERCICIO",
          "6.11. MAS AJUSTES",
          "6.12. DOCUMENTOS I",
          "6.13. DOCUMENTOS II",
          "6.14. LOGICA SLIDERS",
          "6.15. VAPOR",
          "6.16. VAPOR II"
        ],
        "7. E 4: TENEMOS QUE EVITAR LA AUTODESTRUCCION": [
          "7.1. INTRODUCCION: TENEMOS QUE EVITAR LA AUTODESTRUCCION",
          "7.2.TARJETAS Y TARJETERO I",
          "7.3. TARJETAS Y TARJETERO II",
          "7.4. LEVER SIMPLE",
          "7.5. LEVER COMPLEX I",
          "7.6. LEVER COMPLEX II",
          "7.7. TIMER I",
          "7.8. TIMER II",
          "7.9. AJUSTES I",
          "7.10. AJUSTES II"
        ],
        "8.1. TESTEO Y AJUSTES": [
          "8.1. TESTEO Y AJUSTES"
        ],
        "9. EMPAQUETADO Y LISTO": [
          "9.1. INTRODUCCION: EMPAQUETADO Y LISTO",
          "9.2. PROYECTS AND SETTINGS",
          "9.3.VISUAL Y ANDROID STUDIO + PACKAGE",
          "9.4.SIDE QUEST Y EJECUCION"
        ],
        "A SUBIR ESOS FPS!": [
          "10.1. INTRODUCCION: A SUBIR ESOS FPS!",
          "10.2.VULKAN MODE",
          "10.3. STAT UNIT",
          "10.4. SUBIENDO FPS",
          "10.5. BUILD LIGHTING Y DECALS",
          "10.6.MAS INFORMACION",
          "10.7. STREAM LEVEL",
          "10.8. LODS",
          "10.9. ARREGLANDO WIDGET INTERACTION I",
          "10.10. ARREGLANDO WIDGET INTERACTION II"
        ]
      },
      "requirements": [
        "Básico/Intermedio",
        "Es necesario un equipo de Realidad Virtual para hacer las prácticas",
        "Empezamos con ciertos conocimientos básicos de antemano. Por eso, si eres un iniciado en UE te aconsejo encarecidamente que veas el curso UNREAL ENGINE 5: CONVIERTETE EN DESARROLLADOR DESDE 0. Destinado para principiantes",
        "Requisitos Mínimos: Sistema operativo: Windows 10 64-bit",
        "Quad-core Intel or AMD, 2.5 GHz or faster",
        "8 GB RAM",
        "Cualquier tarjeta gráfica compatible con DirectX 11 o 12. Si quieres utilizar la teconología de Lumen (iluminación en tiempo real), se recomienda mínimo una NVIDIA RTX-2000 series o mayor. O si usas AMD, una AMD RX-6000 series o mayor. Para usar Nanite or Virtual Shadow Maps, necesitarás una tarjeta gráfica que soporte DirectX 12.",
        "El proyecto lo desarrollo con un visor QUEST 2. Lo ideal es que tuvieses el mismo aunque para el 90% del contenido, con cualquier modelo debería valer"
      ],
      "description": "Hola y bienvenidos a todos/as. Mi nombre es Clovis Ruiz y os animo a que le echéis un vistazo a este curso. Antes de nada, os hablare un poco de mi y mi experiencia.\n\n\nMi recorrido en el sector comenzó en 2015. Estuve trabajando en varias empresas como desarrollador de contenido y experiencias para múltiples dispositivos (VR, AR, PC, Móvil, Web...). Tras varios años me lancé a abrir mi propio estudio llamado Virtual Expanse en el que desarrollamos todo tipo de proyectos. Desde arquitecturas y construcciones hasta simulaciones de aprendizajes para las Fuerzas Aéreas Españolas. Gracias a todos estos proyectos he podido centrarme en los elementos que he creído más relevantes para aportarlos a este curso y aportar un punto de vista mas profesional.\n\n\nSobre el curso, vamos a desarrollarlo con el motor Unreal Engine 5. Aprovecharemos sus nuevas características y herramientas para crear un proyecto en Realidad Virtual. Para este curso, se necesitan unas nociones básicas del motor previamente. Es verdad que aun así repasamos todos los conceptos que vamos viendo, explicándolos y entendiéndolos. Aun así los conceptos mas básicos los damos por hecho (ej: la interfaz, moverte por el entorno, herramientas básicas, variables, nodos principales...) Si estas interesado en este curso pero crees que no tienes las bases necesarias, te aconsejo que le eches un vistazo a mi otro curso \"UNREAL ENGINE 5: CONVIERTETE EN DESARROLLADOR DESDE 0\". Este otro abarca todas estas bases y mucho mas, haciendo que estés de sobra preparado para retomar este otro curso de VR.\n\n\nVolviendo al curso de Realidad Virtual. Todo estará orientado a aprender las mecánicas esenciales del mundo VR. Veremos los conceptos esenciales para crear nuestro \"personaje\" y que este se comporte en relación a lo que hagamos con las gafas y controladores de manos. La cámara, los \"motion controller\" (mandos VR), la altura, botones, acciones básicas... son algunos de los apartados que integraran estos primeros pasos.  Una vez tengamos el personaje listo, es hora de crear un escenario chulo. Introduciremos nuestro recién creado personaje para poder recorrerlo. Aprovecharemos este escenario para generar un proyecto tipo \"Scape Room\". Esto será genial para integrar todas esas interacciones y mecánicas típicas y esenciales del mundo VR. Por ejemplo; teletransportes, coger objetos, palancas, botones, sliders. En definitiva, crearemos una Scape Room y todo lo necesario para generar esos puzles típicos y que estén todos entrelazados y que cualquiera pueda jugarlo de principio a fin.\n\n\n¿Cómo será el curso? ¿Qué nos podemos encontrar?\n\n\n+100 lecciones en formatos de videos cortos (10/15 min)\n+20h de videos\nsoporte con el profesor\nacceso ilimitado\nmaterial descargable\n---\nEl equipo de VR que usare para este proyecto será las Quest 2 con sus correspondientes controladores.\nSera un curso destinado a aprender a desenvolvernos perfectamente con los controladores VR.\nAprenderemos tips, métodos y herramientas que nos ayudaran en todo el proceso. También consejos de usuario/desarrollador para usar las gafas correctamente.\nTodo esta orientado a crear interacciones en VR con blueprints. Es por eso que he escogido un juego Scape Room para aprender todas las interacciones y mecánicas relacionadas con VR. Todas estas mecánicas las fusionaremos con conceptos mas tradicionales del mundo del video juego.\nPodremos usar todo este conocimiento para desarrollar en el METAVERSO.\nLa progresión será paulatina. Desde la creación de nuestro personaje, pruebas de control, creación de escenario, mecánicas básicas como teletransporte o agarrar elementos como otras mas avanzadas de control de palancas.\nAbordaremos los problemas que se nos presentan de una forma lógica y tratándolo a veces de distintas perspectivas.\nAprenderemos a ser resolutivos y a ver que pueden existir varias formas de conseguir lo que queremos.\nVeremos como crear un \"package\" para introducirlo en las propias gafas de forma portátil y probarlo donde queramos.\nOptimizaremos el proyecto hasta que sea jugable. Para ello probaremos distintas herramientas y estudiaremos nuestro entorno para saber que esta ocurriendo y proceder a optimizarlo.\nAl final, tendremos una Scape Room autentica y completa lista para ser jugada por cualquiera tanto con las gafas conectadas al pc como de forma portátil.",
      "target_audience": [
        "Todo amante del 3D, los videojuegos y la realidad virtual",
        "Aquellos que quieran dar un giro a su profesión y desarrollar experiencias en VR",
        "A esos que tienen todo tipo de ideas, pero no tienen las herramientas necesarias"
      ]
    },
    {
      "title": "Unreal Engine 5 Gra od zera PL",
      "url": "https://www.udemy.com/course/unreal-engine-gra-od-zera-pl/",
      "bio": "Zrób grę 3D od zera. Własna postać, kontrole, animacje, interaktywne menu, NPC, fizyka, zagadki, przeszkody, save i load",
      "objectives": [
        "Podstawy Unreal Engine 5",
        "Jak zrobić grę 3D od zera",
        "Poruszanie się postaci, animacje, logika i programowanie",
        "Robienie menu i level design"
      ],
      "course_content": {
        "Wprowadzenie do projektu": [
          "Przegląd projektu",
          "Nowy projekt",
          "Ustawianie C++"
        ],
        "Menu główne": [
          "Menu Widget",
          "Pozycje elementów",
          "Przycisk start",
          "Wyświetlanie widgetu",
          "Stylizacja przycisku",
          "Nowy level",
          "Obrazki w widgets",
          "Nowe czcionki",
          "Funkcjonalność przycisków",
          "Settings"
        ],
        "Postać w grze": [
          "Podstawa levelu",
          "Game mode",
          "Gdzie zdobywać modele",
          "Import postaci",
          "Importowanie animacji",
          "Kamera postaci",
          "Inputs",
          "Input Action",
          "Enhanced input mapping",
          "Jump",
          "Ruch kamery",
          "Ruszanie postaci"
        ],
        "Animacje": [
          "Animation blueprint",
          "Blend space",
          "Animacje chodzenia",
          "Bieganie",
          "State machine",
          "Ściąganie animacji skoku",
          "Animacje skoku",
          "Edytowanie animacji"
        ],
        "Nowy poziom i NPC": [
          "Nasz materiał",
          "Materiał trawy",
          "Importowanie zwierząt",
          "Pawn blueprint",
          "Wykrywanie kolizji",
          "Dialog widget",
          "Wyświetlanie dialogu",
          "Tablice i indexy",
          "Interface",
          "Wyświetlanie wielu dialogów",
          "Cast to class",
          "Parent class",
          "Naprawa dialogów",
          "Kontrola zmiennych"
        ],
        "Przycisk otwierający drzwi": [
          "Przycisk",
          "Tekstury przycisku",
          "Animowanie z timeline",
          "Ściana z kolizją",
          "Drzwi",
          "Custom events",
          "Otwieranie i zamykanie drzwi",
          "Zmiana otwierania",
          "Relacja pomiędzy obiektami",
          "Czyszczenie poziomu",
          "Głaz",
          "Dynamic object",
          "Physics constraints",
          "Dynamiczna fizyka"
        ],
        "Elementy platformówki": [
          "Przeszkoda",
          "Kolizje z przeszkodą",
          "Śmierć postaci",
          "Obracanie przeszkód",
          "Różne rodzaje przeszkód",
          "Gdzie zapisywać dane",
          "Poziom trudności",
          "Ustawianie poziomu trudności",
          "Game settings",
          "Collectible",
          "Niagara system",
          "Praca z emitters",
          "Dźwięki zbierania",
          "Muzyka w tle",
          "Metasound",
          "Ilość przedmiotów do zebrania",
          "HUD",
          "Total w HUD",
          "Zebrane w widget",
          "Wyświetlanie zebranych"
        ],
        "Zapisywanie stanu gry": [
          "Save game",
          "Save event",
          "Zapisywanie save",
          "Wczytywanie save",
          "Naprawianie logiki",
          "Wczytaj save z levelu",
          "Funkcje w blueprint",
          "Nazwy obiektów",
          "Array",
          "Zmiany w tablicy",
          "Usuwanie zebranych elementów",
          "Synchronizacja z poziomem"
        ],
        "Końcowe zmiany": [
          "Level sequence",
          "Animowanie w sequence",
          "Pierwsza klasa C++",
          "Dodawanie komponentu w C++",
          "Podsumowanie gry",
          "Co dalej ?"
        ]
      },
      "requirements": [
        "Komputer zdolny do uruchomienia Unreal Engine 5"
      ],
      "description": "W tym kursie zaczniemy budować grę od zera. Od zera mam na myśli całkowicie od zera. Nie będziemy używać żadnej z Unreal Engine starter games. Wszystko zbudujemy samodzielnie. To pozwoli ci zrozumieć lepiej jak działa silnik i jak zbudować dowolną grę. W kursie poruszymy mnóstwo tematów.\nZaczniemy od menu design. Zrobimy menu główne naszej gry ze stylizowanymi przyciskami, obrazkami w tle, opcjami takimi jak trudność w grze i load saved game. Ten rozdział nauczy ciebie jak pracować z widgets. Jak przechodzić z jednego widget do drugiego, jak podpiąć funkcjonalność pod przyciski i jak stylizować widgety.\nKolejna sekcja to import własnej postaci. Pokaże ci różne źródła skąd można zdobywać darmowe modele. Zimportujemy sobie postać do Unreal Engine, dodamy animacje i kontrole postaci. Zbudujemy Blueprint dla naszej postać z collision volume i kamerą. Wytłumaczę jak działa nowy Enhanced input mapping by kierować naszą postacią.\nSkupimy się na animacjach. Zrobimy Animacje chodzenia i biegania oraz skakania. Pokaże ci jak importować animacje, jak je łączyć z blend space i state machines. Pokaże również jak edytować animacje w silniku.\nJak już nasza postać będzie interaktywna dodamy do naszego poziomo tkz. NPC (Nonplayable Character) czyli postacie które występuje w grze ale ich bezpośrednio nie kontrolujemy. Zimportujemy sobie nowe darmowe modele, będziemy je animować i wchodzić z nimi w interakcje. Zrobimy system dialogów by nasza postać mogła rozmawiać z postaciami w grze. Ten przykład nauczy cię jak wchodzić w interakcje z innymi aktorami w naszej grze.\nKolejną rzeczą którą się nauczymy jest fizyka i kolizje obiektów 3D w naszej grze. Jak jeden przedmiot może komunikować się z innym i dzięki temu będziemy mogli zrobić naszą grę interaktywną i bardziej dynamiczną. Nauczymy się jak animować ruch obiektów z timeline i jak wywoływać różne wydarzenia. Nauczymy się również jak dodać dźwięki i muzykę do naszej gry. Jak dodawać efekty specjalne, 3d teksty i jak pracować z volumes.\nJeden rozdział poświęcę na funkcjonalność save i load. Nauczymy się jak zapisywać stan naszej gry, gdzie przechowywać dane i jak później wczytać ten stan gry by kontynuować grę z poprzedniego stanu.\nZakończymy kurs pracą z sequencers gdzie użyjemy ich by zrobić cinematic scene jak również do animowania obiektów w naszym poziomie. Pokaże również jak język programowania C++ może być wykorzystany w Unreal Engine by usprawnić naszą prace z silnikiem.\nPrzygotowałem tone rzeczy do nauki i ten jeden kurs sprawi że będziesz rozumiał i potrafił zrobić grę 3D od postaw. Zapraszam",
      "target_audience": [
        "Dla osoby która zaczyna uczyć się Unreal Engine",
        "Dla osoby która nigdy wcześniej Unreal Engine nie używała",
        "Dla osoby która chcą zrobić swoją własną grę 3D"
      ]
    },
    {
      "title": "Crear Video Juegos sin saber Programar con Construct 2",
      "url": "https://www.udemy.com/course/crear-video-juegos-sin-saber-programar-con-construct-2/",
      "bio": "En pocos minutos crea tus propios juegos",
      "objectives": [
        "Crear videojuegos básicos en 2d para cualquier plataforma móvil y web.",
        "Organizar la estructura de un videojuego en Construct2",
        "Subir los juegos a diferentes plataformas",
        "Monetizar los juegos.",
        "Aprender a buscar recursos gratuitos para los videojuegos en la web."
      ],
      "course_content": {
        "Presentación e introducción del curso": [
          "Que es Construct 2",
          "Descargar e Instalar Construct 2"
        ],
        "Nuestro Primer Juego": [
          "Crear un nuevo proyecto",
          "Creando Objetos: Nubes, suelo, arboles, cielo.",
          "Creando Objetos: Jugador, Enemigo, Armas.",
          "Agregando Comportamientos a Objetos: Suelo, Jugador y Enemigo",
          "Agregando Comportamientos a objetos: Bala Jugador y Bala Enemigo"
        ],
        "Mejorando Nuestro Juego": [
          "Reiniciar Juego y Mensaje de Game Over",
          "Colisión con enemigo",
          "Animacion a nuestro jugador",
          "Disparar a la Izquierda y Derecha",
          "Vidas a Nuestro Jugador",
          "Nuestro enemigo quita vidas",
          "Cámara sigue a nuestro jugador",
          "Jugador no sale del layout",
          "Pasar al Siguiente Nivel: Mundo 2",
          "Pantalla de inicio y opciones como Start Game",
          "Agregando sonido y opción muted",
          "Pantalla final o Restart Game",
          "Agregar Loader Personalizado"
        ],
        "Exportando y Guardando nuestro Juego": [
          "Exportando nuestro Juego en HTML5 y Firefox Marketplace"
        ],
        "Nuestro segundo Videojuego: TDS (Top Down Shooter)": [
          "Creando Objetos",
          "Agregando Comportamientos",
          "Agregando Eventos 1",
          "Agregando Eventos y Finalizando Nuestro Juego"
        ],
        "Nuestro Tercer Videojuego TDS: Avanzado": [
          "Creando Objetos",
          "Creando Comportamientos",
          "Agregando Eventos 1",
          "Agregando Eventos 2",
          "Finalizando Nuestro Juego TDS Avanzado"
        ],
        "Otros TDS Avanzado": [
          "Agregando una Barra de Vida al Jugador",
          "Congelar a nuestro Jugador",
          "Efecto de temblor o efecto explosión",
          "Enemigo Guardian"
        ],
        "Extras": [
          "Agregar Publicidad en Construct 2"
        ]
      },
      "requirements": [
        "Esencialmente no debes de saber absolutamente nada, el curso es muy básico y no requiere de conocimientos de programación para llevar a cabo nuestro objetivo de aprender a crear videojuegos",
        "Los materiales de enseñanza te los brindaremos en cada módulo cuando sea necesario."
      ],
      "description": "Este curso enseñará a los estudiantes a crear sus propios videojuegos en un nivel básico con la herramienta CONSTRUCT 2, sin necesidad de tener conociemintos de programación.\nEl programa CONTRUCT 2 es totalmente gratis y se proporcionará el enlace de descarga de este asi como todos las herramientas que manejemos en este curso (imagenes, fondos, sonidos, etc).\nCon este curso en cada video te garantizará una habilidad nueva para perfeccionar tu idea de videojuego.\nCrearas videojuegos para plataformas como: WII, IOS, Android, Windows, Linux, Amazon, Firefox, Chrome, etc...\nCada semana se estarán subiendo nuevos videos. Suscribete antes de que el precio del curso aumente.\nÚltima actualización: 24 de Mayo 2015",
      "target_audience": [
        "Este curso de Construct 2 es para principiantes y personas con o sin conocimientos de programación que desee ingresar al mundo de los videojuegos",
        "Si quieres sacarle el dinero a tus ideas de videojuego, este curso es para tí."
      ]
    },
    {
      "title": "Unity 3D : ( Game Development )- Basic to Professional Level",
      "url": "https://www.udemy.com/course/unity-3d-certification-game-development/",
      "bio": "Unity: Feel free to take Unity 3D course, All Unity concepts are very well explained in Hindi. Unity 3D-Game Development",
      "objectives": [
        "Begineer level Unity 3D Game development",
        "Training for Corporate Employees",
        "Eeven students not aware of basic of Unity 3D and coding they can learn and guaranteed to build application based on Augmented Reality",
        "Unity 3D and Basics of C#",
        "Essential Unity 3D concepts to start development"
      ],
      "course_content": {
        "Introduction Just watch this video": [
          "Unity course introduction",
          "Unity 3D Introduction and promo -Just watch",
          "Unity Intro- Just watch",
          "Unity work structure - Just watch"
        ],
        "Installation": [
          "Unity Installation"
        ],
        "Unity 3D": [
          "Project creation",
          "Unity Interface - Just watch",
          "File structure and its elements",
          "Game setup",
          "Scene and project switching",
          "Model import",
          "Prefab",
          "Quiz one"
        ],
        "Scripting": [
          "Scripting session introduction",
          "Scripting basics",
          "Scripting variables in unity 3D and some monobehaviour properties",
          "Scripting Click handlings and methods",
          "Scripting: Create reference of script"
        ],
        "Player": [
          "Player movement",
          "Ground setup and turn around movement",
          "Collision Trigger and Physical properties rigid body",
          "Camera setup",
          "Obstacle setup",
          "Obstacle setup to handle game win loss and back movement restricted"
        ],
        "Unity UI Designing": [
          "UI Designing Introduction",
          "UI Designing- Canvas setting",
          "Panel and sprite generation",
          "Scroll view and slider",
          "First page design",
          "Game control UI design",
          "Win Panel Loss Panel and Exit Panel"
        ],
        "Panel and Script integration": [
          "Script integration with UI component and panel",
          "Script Integration with UI - Car control with screen buttons",
          "Script Integration- Assign Value to text through a code",
          "Scripting - Panel Integration"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Advance Point": [
          "Advance point session introduction - Just watch",
          "Layout importance - Just watch",
          "Basic animation creation",
          "Import animation from Maximo",
          "Switch animation Running to Jump",
          "Log Viewer in Mobile phone unity 3d - Must watch",
          "Draggable UI || Floating UI",
          "Lighting setting",
          "Game Static window and it basic use",
          "Unity Life Cycle"
        ]
      },
      "requirements": [
        "Should have Laptop or PC",
        "100% dedication and learning mindset"
      ],
      "description": "Unity 3D : ( Game Development )- Racing car Game with Unity\n* 6hr to Complete\n* 1hr Advance point you can explore yourself as well by skipping  these video\nLearn Unity 3D with kings engineering  in Hindi. In this Unity 3D course we are going to learn Unity from scratch an our goal is to be a master in Unity 3D . This course is in Hindi  language so it’s very easy to understand basic concepts and easily understand the problem while we face during the coding. At the completion of the course you definitely mention the Unity 3D in your resume. And you are able to develop Unity 3D based App and Games  . With this knowledge you can start any  development tool to make projects. If you are new in Unity guaranteed after this Unity 3D course you will familiar to run the build Unity 3D based application and help you to develop your coding performance.\nFrom 12th stander and above can be avail this Unity 3D course. If you're in other industry like mechanical or non-it filed this video is best suitable for you. Basic and essential points are covered in this Unity 3D course.\nWe are going to provide a required scripts  in which all include all Unity 3D codes which we are shown in video. Feel free to make practice in Unity 3D\nTopics Under Unity Tutorial\nUnity 3D Introduction and promo\nUnity Intro\nUnity work structure\nUnity Installation\nProject creation\nUnity Interface\nFile structure and its elements\nGame setup\nScene and project switching\nModel import\nPrefab\nScripting session introduction\nScripting basics\nScripting variables in unity 3D and some monobehaviour properties\nScripting Click handlings and methods\nScripting: Create reference of script\nPlayer movement\nGround setup and turn around movement\nCollision Trigger and Physical properties rigid body\nCamera setup\nObstacle setup\nObstacle setup to handle game win loss and back movement restricted\nUI Designing Introduction\nUI Designing- Canvas setting\nPanel and sprite generation\nScroll view and slider\nFirst page design\nGame control UI design\nWin Panel Loss Panel and Exit Panel\nScript integration with UI component and panel\nScript Integration with UI - Car control with screen buttons\nScript Integration- Assign Value to text through a code\nScripting - Panel Integration\nConclusion\nAdvance point session introduction\nLayout importance\nBasic animation creation\nImport animation from Maximo\nSwitch animation Running to Jump\nLog Viewer in Mobile phone unity 3d - Must watch\nDraggable UI  || Floating UI\nLighting setting\nGame Static window  and it basic use\nUnity 3D | AR foundation | Vuforia AR SDK | Unity Log viewer.",
      "target_audience": [
        "Fresher, Beginner and Student",
        "Training for Corporate Employees",
        "Unity",
        "Unity learner",
        "Meta",
        "AR VR learner",
        "Augmented reality learner"
      ]
    },
    {
      "title": "Sıfırdan Unity ve C# Eğitimi",
      "url": "https://www.udemy.com/course/sfrdan-unity-egitimi/",
      "bio": "Unity'de baştan sonra C# kullanarak oyun yapmayı öğrenin!",
      "objectives": [
        "Unity kurulumu ve arayüzüne hakim olun.",
        "Unity'nin çalışma prensiplerine hakim olun",
        "Unity için C#'ı sıfırdan herhangi bir gereksinim olmadan öğrenin",
        "Unity içerisinde Menüler, Ayarlar, Kayıt sistemi gibi farklı sistemlere hakim olun."
      ],
      "course_content": {
        "Unity Kurulumu ve Arayüzü Tanıma": [
          "Unity Kurulumu",
          "Unity'de Proje Oluşturma",
          "Unity'i Tanıyalım",
          "Unity Pencereleri ve İşlevleri",
          "Prefab Nedir",
          "1. Bölüm Quiz'i",
          "ÖDEV- OYUNCAK DÜKKANI YAP!"
        ],
        "Kodlamaya Giriş": [
          "GameObject ve Component Yapısı",
          "Visual Studio'u Tanıyalım",
          "Temel C# yapısı",
          "Fonksiyonları Tanıyalım",
          "Variable'ları Tanıyalım",
          "Attribute'ları Tanıyalım",
          "Kodlamaya Giriş Quiz 1",
          "En Kolay Yoluyla Referans Nasıl Alınır",
          "GetComponent Fonksiyonu",
          "Oluşturma ve Yok Etme Fonksiyonları",
          "Listeleri Tanıyalım",
          "Döngüleri Tanıyalım",
          "Zamanlayıcıları Tanıyalım",
          "Spawner Oluşturalım",
          "Hareket ve Döndürme Fonksiyonları",
          "Debuglama Metodları",
          "Kodlamaya Giriş Quiz 2",
          "ÖDEV- LUNAPARK YAP!"
        ],
        "Karakter Oluşturalım": [
          "FPS Karakter Yapalım",
          "Kodlarımızı Nasıl Düzenleriz",
          "Collision'ları Tanıyalım",
          "Otomatik Kapı Yapalım",
          "Toplanabilir Sistemi Yapalım",
          "UI Nasıl Oluşturulur",
          "Silah ve Mermi Yapalım",
          "Karakter Oluşturalım Quiz",
          "ÖDEV- KARAKTERİNİ YAP!"
        ],
        "Çevresel Etmenler Oluşturalım": [
          "Kilitli Kapı Yapalım",
          "Kilitli Platform Oluşturalım",
          "Can Sistemi Oluşturalım",
          "Hasar ve İyileşme Topları Yapalım",
          "Dikenli Tel ve İyileştiren Alan Yapalım",
          "Öğrendiklerimizi Birleştirerek Taret Yapalım",
          "Raycast Nasıl Kullanılır",
          "Akıllı Taret Yapalım",
          "Unity Event'leri Öğrenelim",
          "ScriptableObject'leri Öğrenelim",
          "Çevresel Etmenler Quiz",
          "ÖDEV- LEVELINI YAP!"
        ],
        "Arayüz ve Kayıt Sistemini Öğrenelim": [
          "Oyun Sistemi Nasıl Kurulur",
          "Kaybetme Ekranı Yapalım",
          "Pause Menü Yapalım",
          "Ana Menü Yapalım",
          "Kazanma Ekranı Yapalım",
          "Ayarlar Menüsü Yapalım",
          "Kayıt Sistemi Yapalım",
          "Level Kilit Sistemi Yapalım",
          "ÖDEV - OYUN ARAYÜZÜNÜ TAMAMLA!"
        ]
      },
      "requirements": [
        "Herhangi bir yazılım ve oyun geliştirme bilgisi gerektirmez, isteyen herkes başlayabilir."
      ],
      "description": "Merhaba!\nUnity dünyasına adım atmak isteyenler için özel olarak hazırladığım bu kurs, sıfırdan başlayarak kendi oyunlarınızı yaratmanızı sağlayacak kapsamlı bir rehber sunuyor. Eğer oyun geliştirmeye meraklıysanız ve bu alanda yeniyseniz, doğru yerdesiniz.\nKursum boyunca Unity'nin temel yapı taşlarından başlayarak ileri seviyeye kadar adım adım ilerleyeceğiz. Unity arayüzünden temel araçlara kadar her şeyi öğrenerek, sahneler oluşturmayı, objeleri yönetmeyi ve oyun mekaniği geliştirmeyi öğreneceksiniz. Kursun amacı, hiçbir bilgiye sahip olmayanları dahi bu konularda yetkin hale getirmektir.\nAyrıca oyun geliştirme sürecinde önemli taktikler ve pratik bilgilerle desteklenmiş örnekler ve testler sunacağım.  Bu örnekler, kursun sonunda kendi projelerinizi oluşturmanızda size yol gösterecek şekilde tasarlandı. Verdiğim ödevlerle bu bilgileri pratiğe dökecek ve düzenli geri bildirimlerle gelişiminizi sağlayacağız.\nKurs içeriği sadece temel kodlama ile sınırlı kalmayacak; UI tasarımı, envanter sistemleri, ayarlar menüsü oluşturma, asset yönetimi gibi oyun geliştirme süreçlerinin vazgeçilmezlerini de detaylı bir şekilde ele alacağız. Bu konuları anlaşılır bir dille açıklayarak, herkesin kolayca kavrayabileceği şekilde sunacağız.\nBu kursun amacı, size oyun geliştirme yolculuğunuzda sağlam bir temel ve ileri düzeyde bilgi sağlamak; böylece kendi oyunlarınızı yaratma ve geliştirme konusunda özgüvenle ilerlemenizi sağlamaktır. Eğer oyun geliştirmeye meraklıysanız ve bu alanda kendinizi geliştirmek istiyorsanız, bu kurs size kapılarını sonuna kadar açıyor. Sizi, yaratıcılığınızı sınırlamadan oyun geliştirme dünyasına davet ediyorum.",
      "target_audience": [
        "Oyun geliştirmeye meraklı ve bu alanda kendini geliştirmek isteyen insanlar içindir."
      ]
    },
    {
      "title": "Создание твоей первой игры в Unity | 2D Гонка | Для чайников",
      "url": "https://www.udemy.com/course/unity-2d-racing/",
      "bio": "С полного нуля до первых результатов в Unity и разработке игр!",
      "objectives": [
        "Научитесь создавать простые игры в Unity",
        "Научитесь делать простой ИИ",
        "Научитесь работать с TileEditor",
        "Научитесь писать скрипты",
        "Научитесь делать системы которые подстраиваются под уровень"
      ],
      "course_content": {
        "Основы Unity": [
          "Установка Unity",
          "Основы редактора",
          "Объекты и спрайты",
          "Сцены",
          "Импорт ресурсов",
          "Как писать скрипты?",
          "Как и где изучать программирование?"
        ],
        "Подготовка сцены и TileEditor": [
          "Настраиваем сцену",
          "Добавляем дорогу с помощью TileEditor",
          "Создаём объект машины"
        ],
        "Скрипт машины": [
          "Движение машины",
          "Движение камеры",
          "Оставляем возможность интеграции ИИ",
          "Изменение скорости в зависимости от поверхности"
        ],
        "Противники (искусственный интеллект)": [
          "Движение машин по уровню",
          "Рандомизация параметров и физика машин"
        ],
        "Улучшаем уровень": [
          "Бонусная лекция: Анимация полицейской машины"
        ]
      },
      "requirements": [
        "Unity 2018",
        "Основы C#",
        "Желание создавать игры :)"
      ],
      "description": "Хотите создавать игры в Unity? Попробуйте свои силы!\n\nЭтот курс пошагово проведёт вас от установки до своей первой игры. Он не особо углублённый но особенно практичный. В нём мы создадим TopDown гоночку с искусственным интеллектом и для этого воспользуемся самыми свежими возможностями Unity. Внутри курса вы найдёте как материал по Unity и C#. Так и лекции посвящённые таким вопросам как \"Как изучать программирование?\" для того, чтобы развиваться в будущем.",
      "target_audience": [
        "Начинающим разработчикам игр",
        "Начинающим программистам",
        "Начинающим геймдизайнерам"
      ]
    },
    {
      "title": "Crea un 3D Runner Game x Android con Unity, corso per tutti",
      "url": "https://www.udemy.com/course/crea-un-3d-runner-game-x-android-con-unity-corso-per-tutti/",
      "bio": "Entra nel mondo della programmazione giochi 3D x Android con Unity e crea e pubblica un Runner Game x lo store android",
      "objectives": [
        "Sarai in grado di creare da zero un gioco di tipo 3D Runner per Android",
        "Sarai in grado di trovare e importare oggetti e personaggi 3d nei tuoi progetti",
        "Conoscerai più approfonditamente Unity",
        "Sarai in grado di pubblicare nuovi giochi nel Google Play Store"
      ],
      "course_content": {
        "Introduzione": [
          "Presentazione del corso",
          "Download e Installazione di Unity",
          "Registrazione ID e impostazione del Progetto",
          "Ci ambientiamo con l'interfaccia di Unity"
        ],
        "Prime Impostazioni": [
          "Impostazione della risoluzione",
          "Andiamo a prendere il personaggio 3D per il gioco",
          "Importiamo il personaggio nella scena",
          "Prepariamo il Player",
          "Animiamo il nostro personaggio"
        ],
        "Prima Fase Sviluppo": [
          "Creiamo lo script per far muovere il player",
          "Aggiungiamo il Rigidbody al personaggio e cominciamo a implementare lo script",
          "Scriviamo il codice per dare movimento al personaggio",
          "Facciamo muovere il player",
          "Importiamo l'animazione del salto (Jump)",
          "Facciamo saltare il personaggio",
          "Impostiamo il trigger per attivare l'animazione del salto",
          "Richiamiamo l'animazione tramite script",
          "Impostiamo il codice per la Main Camera",
          "Scriviamo il codice per far muovere la camera",
          "Scarichiamo e importiamo il package con le piattaforme per il percorso",
          "Aggiungiamo i collider alla staccionata",
          "Testiamo il gioco con più piattaforme"
        ],
        "Seconda Fase Sviluppo": [
          "Presentazione nuova sezione",
          "Creiamo il PlatformSpawner per la creazione delle piattaforme",
          "Cominciamo ad impostare lo script di PlatformSpawner",
          "Mettiamo il codice nella Void Start (parte 1)",
          "Mettiamo il codice nella Void Start (parte 2)",
          "Creiamo la Void \"SpawnInitialVertical\"",
          "Creiamo lo script Pooler per le piattaforme verticali",
          "Creiamo la Void per il Pool Object",
          "Richiamiamo la void per il pool dell'oggetto e testiamo",
          "Scarichiamo e impostiamo l'animazione di \"Attesa\" del personaggio (Idle)",
          "Importiamo l'immagine per l'animazione Start",
          "Creiamo l'animazione di StartImage",
          "Modifichiamo lo script del personaggio",
          "Facciamo partire il gioco sul click dell'utente",
          "Creiamo il codice per le gesture",
          "Blocchiamo il salto doppio"
        ],
        "Terza Fase Sviluppo": [
          "Lanciamo lo Spawning delle piattaforme",
          "Creiamo la void SpawnVertical",
          "Creiamo la void per gli angoli",
          "Creiamo le piattaforme ad angolo",
          "Andiamo a richiamare l'angolo che va verso destra dallo script",
          "Creiamo il pooler per il Corner1 e testiamo",
          "Creiamo il codice per lo Spawn delle piattaforme orizzontali verso destra",
          "Facciamo girare il player con le gesture verso destra e sinistra",
          "Facciamo lo spawning della piattaforma orizzontale vuota verso destra",
          "Creiamo la piattaforma orizzontale verso destra invisibile",
          "Creiamo l'angolo a sinistra",
          "Facciamo lo spawning delle piattaforme orizzontali a sinistra",
          "Facciamo lo spawning della piattaforma orizzontale vuota verso sinistra",
          "Facciamo lo spawning delle piattaforme ad angolo verso l'alto",
          "Creiamo i due pooler per Corner3 e Corner4",
          "Aggiustiamo i lastPos per avere incastri perfetti",
          "Rimuoviamo le piattaforme utilizzate",
          "Impostiamo i collider agli angoli",
          "Creiamo le piattaforme con gli ostacoli",
          "Creiamo i pooler per le piattaforme con gli ostacoli",
          "Compiliamo la void CreateCombinations",
          "Terminiamo di compilare CreateCombination e testiamo",
          "Mettiamo gli ostacoli nelle piattaforme orizzontali"
        ],
        "Quarta Fase Sviluppo": [
          "Impostiamo la scivolata del Player",
          "Impostiamo un'altro tipo di scivolata per il player",
          "Cambiamo il capsule collider al player durante la scivolata",
          "Impostiamo l'animazione per quando il player cade con un'ostacolo",
          "Impostiamo una seconda animazione x quando il player inciampa sulle staccionate",
          "Terminiamo di impostare i collider per avere sempre le giuste animazioni",
          "Assegnamo un punteggio al Player (Parte 1)",
          "Assegnamo un punteggio al Player (Parte 2)",
          "Registraimo lo score e l'high score",
          "Impostiamo il Game Over e il GameOverPanel - parte 1",
          "Impostiamo il Game Over e il GameOverPanel - panel 2",
          "Creiamo un'animazione per il GameOver Panel",
          "Facciamo apparire una scritta per l'high score",
          "Creiamo un'animazione per la scritta High Score",
          "Aggiungiamo l'audio a High Score",
          "Aggiungiamo i diamanti",
          "Facciamo roteare i diamanti",
          "Creiamo i diamanti random lungo il percorso",
          "Distruggiamo i diamanti e gli assegniamo un punteggio e un suono",
          "Aggiungiamo un particle effect ai diamond",
          "Blocchiamo la raccolta di diamanti nel game over",
          "Inseriamo un pulsante per far ripartire il gioco",
          "Inseriamo uno scenario (SkyBox) con mare e cielo",
          "Rendiamo il progetto compatibile con Android",
          "Prepariamo il nostro smatphone al debug",
          "Testiamo il nostro gioco su uno smartphone",
          "Facciamo spostare il Player in base all'inclinazione dello smartphone",
          "Controlliamo i Frame al secondo (FPS) del nostro gioco",
          "Presentazione della nuova sezione"
        ],
        "Preparazione file Apk e Pubblicazione": [
          "Installiamo il Java JDK",
          "Installiamo l'Android SDK",
          "Preparazione alla creazione del file Apk",
          "Installazione Inkscape per Mac",
          "Installazione Inkscape per Windows",
          "Creiamo un'icona con Inkscape per il nostro gioco",
          "Creazione di un account Google e attivazione di Google Developer",
          "Creiamo la scheda del gioco nella Google Play Console",
          "Creiamo le immagini per il play store",
          "Creiamo una Privacy Policy per la app e la pubblichiamo in sito gratuito",
          "Pubblichiamo il gioco",
          "Lezione Bonus... Sconti e Saluti!"
        ]
      },
      "requirements": [
        "Bisogna saper utillizare un Pc con Windows o un Mac",
        "Non sono richieste conoscenze di programmazione ma qualche base potrà di certo aiutare",
        "Bisogna avere una connessione ad internet"
      ],
      "description": "Ciao e benvenuto!\nCon questo corso ho voluto approfondire in maniera seria e completa lo sviluppo di un gioco 3D di tipo runner mantenendo però il livello didattico fruibile da tutti, quindi apprezzabile da programmatori esperti ma anche da persone alle prime armi con la programmazione e il mondo del 3D gaming.\nI giochi di tipo runner 3D sono molto in voga ormai da qualche anno, un esempio è il classico Temple Run o l'ormai famosissimo Subway Surfer.\nSi tratta in sostanza di pilotare un personaggio con una visualizzazione in terza persona lungo un percorso che cambia continuamente e che presenta una serie di ostacoli e difficoltà oltre che di gemme per raccogliere punti.\nPasso dopo passo, lezione dopo lezione, costruiremo un perfetto e complesso sistema per la creazione delle piattaforme che andranno a formare il percorso per il player.\nCi occuperemo di tutti quegli aspetti necessari al buon funzionamento del gioco, come la gestione del player, i salti, le scivolate, le oscillazioni destra sinistra, le svolte, le collsioni con gli ostacoli e tutto ciò che serve a rendere il gioco piacevole e giocabile.\nGrazie alle varie dinamiche del gioco riusciremo ad approfondire temi importanti e spesso non perfettamente spiegati o compresi come i collider e la loro gestione e tanti altri componenti disponibili in Unity 3D.\nAlla fine del corso ci sarà una parte interamente dedicata alla pubblicazione del gioco nel Google Play Store.\nQuesto è un corso completo che da zero ti porterà fino alla creazione e alla pubblicazione di un 3D runner game in modo semplice e diretto.\nInoltre avrai la garanzia del soddisfatti o rimborsati, se per qualsiasi motivo entro 30 giorni non sarai completamente soddisfatto del tuo acquisto potrai richiedere \"facilmente\" un rimborso che ti verrà dato al 100% senza nessun tipo di domanda o questione da parte di Udemy!\nChe chiedere di più? ;)\n\n\nMusic:\n\"Tech Live” ,  “On The Ground” , “Robobozo” Kevin MacLeod (incompetech(dot)com)\nLicensed under Creative Commons: By Attribution 3.0 License\nhttp://creativecommons.org/licenses/by/3.0/",
      "target_audience": [
        "Chiunque voglia imparare a creare un gioco \"3D runner game\" per Android",
        "Chiunque voglia aumentare le proprie conoscenze e migliorare il proprio curriculum",
        "Chiunque abbia delle idee per dei nuovi giochi da proporre nel Play Store di Google",
        "Chiunque voglia approfondire la propria conoscenza di Unity"
      ]
    },
    {
      "title": "Réaliser votre personnage avec Blender & Unity | de A à Z",
      "url": "https://www.udemy.com/course/realiser-votre-personnage-avec-blender-unity-de-a-a-z/",
      "bio": "Débuter la modélisation, l'animation avec Blender et intégrer votre personnage dans Unity",
      "objectives": [
        "Découvrir les bases de la modélisation polygonale dans Blender",
        "Apprendre comment texturer un objet 3d dans Blender à l'aide de techniques simples",
        "Acquérir des bases de rigging et d'animation avec les outils dédiés de Blender",
        "Exporter son modèle pour le moteur de jeu Unity",
        "Apprendre à exploiter l' animator et la gestion des transitions dans Unity",
        "Utiliser les Events et les Curves d'animations pour de meilleurs performances (Unity)",
        "Apprendre l'utilisation de \"Mask d'avatar\" et de Layer pour mixer les animations avec Unity",
        "Créer des scripts de camera pour rendre le personnage plus dynamique",
        "Apprendre le code C# pour réaliser un déplacement de personnage réaliste avec Unity"
      ],
      "course_content": {
        "Chapitre 1 Blender-Modélisation du personnage": [
          "1.0-Introduction",
          "1.1-Mise en place des images de référence",
          "1.2-Modélisation du tronc",
          "1.3-Modélisation des bras",
          "1.4-Modélisation des jambes",
          "1.5-Modélisation de la tête",
          "1.6-Ajout des détails"
        ],
        "Chapitre 2 Blender-UV Mapping": [
          "2.1-Dépliage UV du mesh",
          "2.2-Edition de la map UV"
        ],
        "Chapitre 3 Blender-Création de la color map": [
          "3.1-Création d’un éclairage avec easy HDRI",
          "3.2-Création des shaders provisoires partie 1 l’armure",
          "3.3-Création des shaders provisoires partie 2 les tissus",
          "3.4-Création des shaders provisoires partie 3 la peau",
          "3.5-Création des shaders provisoires partie 4 les chaussures",
          "3.6-Baking de la Color Map"
        ],
        "Chapitre 4 Blender-Ajout des détails en Texture paint mode": [
          "4.1-Mise en place de l’espace de travail",
          "4.2-Ajout des détails sur les bras",
          "4.3-Ajout des logos et des tatouages",
          "4.4-Ajout des détails sur les chaussures"
        ],
        "Chapitre 5 Blender-Création des autres maps et du shader final": [
          "5.1-Création de la normal map",
          "5.2-Création de la metallic map",
          "5.3-Création de la roughness map",
          "5.4-Création de la specular map",
          "5.5-Création du shader final"
        ],
        "Chapitre 6 Blender-Rigging": [
          "6.1-Création de l’armature",
          "6.2-Parentage de l’armature et test de déformation",
          "6.3-Création des contraintes",
          "6.4-Renommage des bones et personnalisation de l’armature"
        ],
        "Chapitre 7 Blender - Création d'un asset: le pistolet": [
          "7.1-Ajout des images de référence",
          "7.2-Modélisation du Low poly",
          "7.3-Ajout des détails en high poly les vis",
          "7.4-Ajout des détails en high poly les objets en bool tool",
          "7.5-Ajout des détails en high poly les modifiers Bevel et Subsurf",
          "7.6-Création des shaders provisoires",
          "7.7-Dépliage UV du Low-poly et Baking des maps",
          "7.8-Parentage du pistolet sur l’armature"
        ],
        "Chapitre 8 Blender - Animation": [
          "8.1-Création du cycle de marche",
          "8.2-Création du cycle de Course",
          "8.3-Création du saut",
          "8.4-Création de l’animation Idle",
          "8.5-Création de l’animation de tir",
          "8.6-Création du cycle de marche bas",
          "8.7-Création des cycles de marche gauche et droite",
          "8.8-Création du cycle de marche arrière",
          "8.9-Adaptation des cycles à la visée",
          "8.10- Création des poses statiques"
        ],
        "Chapitre 9 Blender - Export en .fbx": [
          "9.1-Export en .fbx avec objets groupés",
          "9.2-Export en .fbx avec objets séparés"
        ],
        "Chapitre 10 Unity - Importation et paramétrage des objets dans UNITY": [
          "10.1 Intégration du model blender",
          "10.2 Création de l' Animator Controller"
        ]
      },
      "requirements": [
        "Bonne connaissance de l'outil informatique. Connaitre les bases de Blender et de Unity est un plus mais pas obligatoire.",
        "Blender et Unity Installé sur votre machine"
      ],
      "description": "Voici une formation complète dédiée à la création d’un personnage dans Blender pour le moteur de jeu Unity. Elle repose sur l'utilisation de Blender 2.79, logiciel de 3D gratuit et opensource; et de Unity, moteur de jeu multiplateforme. Pendant cette formation vous appréhenderez toutes les étapes pour créer un personnage et un asset dans Blender pour pouvoir ensuite les utiliser dans Unity.\nDécouvrez un workflow complet pour créer un personnage prêt à être importé pour Unity.\nAppréhendez l'interface et les raccourcis clavier pour une meilleure efficacité.\nObtenez des bases de modélisation polygonale, de mise en pose et d'animation.\nDécouvrez les outils de texturing et de rigging.\nEnsuite nous animerons ce personnage dans Unity 2018, nous étudierons pas à pas les outils mis a disposition pour donner vie a votre personnage dans  vote jeu vidéo.\nApprenez à exploiter l' animator et la gestion des transitions.\nRéalisez un script pour un déplacement du personnage réaliste.\nUtilisez les Events et des Curves d'animations pour de meilleurs performances\nAppréhendez les Mask d'avatar et les Layers pour mixer les animations.\nCréer des scripts de camera pour rendre le personnage plus dynamique\nLa formation \"Réaliser votre personnage avec Blender & Unity | de A à Z\" est destinée à tous les futurs utilisateurs souhaitant se familiariser avec ces logiciels ou au professionnel désirant mettre à jour ses connaissances. Du graphiste freelance à la société voulant évoluer vers des outils gratuits, Blender et Unity seront des atouts indispensables pour vos productions graphiques et  jeux vidéos.",
      "target_audience": [
        "Tout débutant dans le domaine de la 3d ou de la création du jeu vidéo souhaitant découvrir un workflow complet de la création d'objets 3d jusqu'à leur utilisation dans le moteur de jeu."
      ]
    },
    {
      "title": "Unreal Engine 4: Sıfırdan İleri Seviyeye Oyun Geliştirme",
      "url": "https://www.udemy.com/course/unreal-engine-4-0-dan-ileri-duzeye-oyun-yapabiliceksiniz/",
      "bio": "Sıfırdan ileri seviyeye kapsamlı oyun geliştirme rehberi - FPS, Korku ve daha fazlası!",
      "objectives": [
        "Unreal Engine 4'ü sıfırdan ileri seviyeye kadar öğrenerek profesyonel projeler oluşturabileceksiniz.",
        "Oyun geliştirme sürecinde kullanılan temel yapı taşlarını ve tüm Unreal Engine bileşenlerini kavrayacaksınız.",
        "Kendi oyun tasarımlarınızı yapabilecek ve hayalinizdeki projeleri hayata geçirebileceksiniz.",
        "blueprint ile görsel programlama yapmayı öğreneceksiniz.",
        "Materyal ve animasyon programlama konusunda uygulamalı bilgi sahibi olacaksınız.",
        "Unreal Engine ile sıfırdan bir projeyi konsept aşamasından tamamlanmış bir oyun haline getirebileceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Baslangıç",
          "Epic Games & Unreal Engine Tanıyoruz.",
          "Unreal Engine 4 Proje Oluşturma."
        ],
        "Başlangıç Arayüzler.": [
          "Unreal Engine 4 Klasörler (Content)",
          "Unreal Engine 4 Detay Penceresi (Details)",
          "Unreal Engine 4 Detay Penceresi (Details) Part 2",
          "Unreal Engine 4 Yer Oyuncuları (Place Actors)",
          "Unreal Engine 4 Araçlar (Tools)",
          "Unreal Engine 4 Dünya Anahat (WorldOutliner)",
          "Unreal Engine 4 Hareketlendirme Ve Görünüm.",
          "Unreal Engine 4 Basitçe Blueprint Arayüzü (Blueprint)"
        ],
        "Unreal engine 4 Tanıyalım.": [
          "Skeletal Mesh Nedir ?",
          "Static Mesh",
          "Unreal Engine 4 Colision",
          "Actor Nedir Ne İşe Yarar ?"
        ],
        "Unreal Engine 4 Material": [
          "Material Oluşturma ve Kullanma (Materials)"
        ],
        "Quixel": [
          "Bridge : Metahuman,Materials,3d asset vs"
        ],
        "Blueprinte Başlangıç": [
          "Merhaba Dünya Ve Motorumuzu Yakından Tanıyalım."
        ],
        "Değişkenler": [
          "Boolean",
          "Integer",
          "Float",
          "Name",
          "String",
          "Text",
          "Vector",
          "Rotator",
          "Transform",
          "Byte",
          "Varible - Yani değişkenler.",
          "Instance Editable",
          "Blueprint Read Only",
          "Branch",
          "ForEachLoop",
          "ForLoop",
          "ForLoopWithBreak.mp4",
          "WhileLoop",
          "Select",
          "Unreal Engine 4 Structure Ve Enumeration",
          "Fps_Camera-Interface-LineTrace-DataTable",
          "Macros- Fonctions- Custom event - Event graph"
        ],
        "Operatörler": [
          "Operatörler"
        ],
        "Unreal engine 4 Referanslar": [
          "Referanslar (Level Blueprint - Actor -Game Mode- Game Instance)"
        ],
        "Blueprinti Yakından Tanıyalım.": [
          "Tuş atamaları",
          "Zaman Çizelgesi ve Yönelge ( Timeline & Rotation )",
          "Set Play Rate",
          "Lerp",
          "Spawn Actor",
          "Actor'ü Yakından Tanıyalım.",
          "Blueprint Kodunu Devre Dışı Bırakma",
          "Random Int in",
          "Get Actor Of Class",
          "Get All Actor Of Class",
          "Get All Actor Of Class With Tag",
          "Dialogue Voice Ve Dialogue Wave"
        ]
      },
      "requirements": [
        "Hiçbir ön bilgi gerekmemektedir. Bu kurs, sıfırdan başlayanlar için tasarlanmıştır.",
        "Güçlü bir öğrenme arzusu ve sabırlı bir yaklaşım yeterlidir.",
        "Detaylı ve adım adım rehberlik içeren ders anlatımları ile herkes öğrenebilir.",
        "Programlama deneyimine gerek yoktur. İhtiyacınız olan her şeyi bu kursta öğreneceksiniz."
      ],
      "description": "Kendi oyun dünyanızı yaratmaya hazır mısınız? Unreal Engine 4, oyun geliştirme dünyasında lider bir platform olarak, hem yeni başlayanlara hem de profesyonellere geniş bir araç yelpazesi sunar. Bu kurs, sıfırdan başlayanlar için adım adım ilerleyen, aynı zamanda ileri seviye tekniklere uzanan kapsamlı bir rehberdir. Unreal Engine'in güçlü ve yaratıcı araçlarını kullanarak kendi oyun projelerinizi oluşturmayı öğreneceksiniz.\nİster hayalinizdeki oyunu geliştirmek isteyin, ister oyun sektöründe profesyonel bir kariyer hedefleyin, bu kurs tam size göre! Her ders, teorik bilgilerin yanı sıra uygulamalı içeriklerle desteklenmiştir. Bu sayede öğrendiklerinizi hemen pratiğe dökebilir ve kendi projelerinizi geliştirmeye başlayabilirsiniz.\nBu Kursta Öğrenecekleriniz\nUnreal Engine 4 Kullanımı: Unreal Engine’in temel araçlarını kullanarak profesyonel düzeyde projeler geliştirmeyi öğreneceksiniz.\nOyun Yapısının Temelleri: Oyun geliştirme sürecindeki temel prensipleri kavrayarak bu bilgileri projelerinizde uygulayabilirsiniz.\nBlueprint ile Görsel Programlama: Hiç kodlama bilginiz olmasa bile görsel programlama sistemi sayesinde oyun mekaniği oluşturabilirsiniz.\nAnimasyon ve Karakter Yönetimi: İleri düzey animasyon sistemleri ve karakter kontrol mekanizmaları üzerinde çalışabilirsiniz.\nOptimizasyon ve Performans: Oyunlarınızı optimize etmeyi ve yüksek performanslı projeler geliştirmeyi öğreneceksiniz.\nMateryal ve Proje Yönetimi: Unreal Engine’de gelişmiş materyal tasarımı ve proje organizasyonu konularında uzmanlaşabilirsiniz.\nOyun Türleri: FPS, RPG, platform, simülasyon gibi farklı türlerde oyun geliştirme deneyimi kazanacaksınız.\nKimler İçin Uygun?\nBu kurs, oyun geliştirme konusunda istekli olan ve Unreal Engine 4'ü öğrenmek isteyen herkes için uygundur:\nBaşlangıç Seviyesi: Daha önce hiç oyun geliştirme yapmamış ve Unreal Engine ile yeni tanışanlar.\nOrta Düzey: Unreal Engine bilgisi olan, ancak projelerini geliştirmek ve daha ileri düzey teknikler öğrenmek isteyenler.\nProfesyoneller: Mevcut bilgilerini tazelemek ve Unreal Engine 4’ün güçlü araçlarını kullanarak daha etkili projeler üretmek isteyen profesyoneller.\nOyun Tasarımcıları ve Geliştiriciler: Sıfırdan kendi oyun projelerini geliştirmek isteyen kişiler.\nKursun Özellikleri\nTürkçe ve Kapsamlı Anlatım: Detaylı ders içerikleri, Türkçe olarak sade ve anlaşılır bir şekilde sunulmaktadır.\nAdım Adım Rehberlik: Temel bilgilerden başlayarak ileri seviyeye kadar rehberlik eden ders içerikleri.\nUygulamalı Projeler: Yapay zeka, envanter sistemi, animasyonlar ve daha fazlasını içeren gerçek projeler.\nOyun Optimizasyonu: Performans artırma teknikleri ile profesyonel düzeyde oyunlar geliştirme.\nGörsel ve Pratik Odaklı Eğitim: Sadece teorik bilgi değil, pratik uygulamalar ve projelerle desteklenen bir öğrenim deneyimi.\nHayalinizdeki Oyunu Geliştirmeye Başlayın\nUnreal Engine 4 kursumuz, oyun dünyasına sağlam bir adım atmak isteyen herkes için ideal bir başlangıç noktasıdır. İster hobi amaçlı ister profesyonel bir kariyer için öğreniyor olun, bu kurs size ihtiyacınız olan bilgi ve becerileri kazandıracak.\nKendi projelerinizi sıfırdan oluşturmak, yaratıcılığınızı geliştirmek ve Unreal Engine’in sunduğu sınırsız olanakları keşfetmek için hazır olun! Hemen bugün başlayarak oyun geliştirme hayalinizi gerçeğe dönüştürün.",
      "target_audience": [
        "Oyun geliştirme dünyasına adım atmak isteyen herkes bu kursa katılabilir.",
        "Unreal Engine 4 ve oyun geliştirme konusunda hiçbir deneyimi olmayan kişiler için uygundur.",
        "Unreal Engine temel bilgisine sahip olup becerilerini bir üst seviyeye taşımak isteyenler için de faydalı bir içerik sunmaktadır.",
        "İleri seviye kullanıcılar için tasarlanmamıştır, ancak temel ve orta seviye bilgilerde eksikliklerini gidermek isteyenler bu kurstan yararlanabilir.",
        "Oyun geliştirme ve tasarım dünyasına ilgi duyan, Unreal Engine 4 ile proje geliştirmeye başlamak isteyen başlangıç seviyesindeki öğrenciler için idealdir."
      ]
    },
    {
      "title": "Games com Unreal Engine e Blueprints Guia do Iniciante Total",
      "url": "https://www.udemy.com/course/curso-de-games-na-unreal-engine-guia-do-iniciante-total/",
      "bio": "Do Absoluto Zero ao Controle Total da Unreal Engine: A Base que Todo Criador de Jogos Precisa para Programar Sem Códigos",
      "objectives": [
        "A PARTIR DA SEÇÃO 5 AULAS COM A UNREAL ENGINE 5 - SEÇÕES DE 1 a 4 TOTALMENTE COMPATÍVEIS COM A UNREAL ENGINE 5!",
        "Criar conta na Epic Games",
        "Instalar e Conhecer abas e itens do Epic Games Launcher",
        "Instalar a versão atual da Unreal Engine e aprender a instalar e manter versões Anteriores",
        "Aprender opções de pós-instalação e versões da Unreal Engine",
        "A como desinstalar a Unreal Engine",
        "Conhecer os menus, painéis, barra de ferramentas e botões do editor da Unreal",
        "Conhecer e gerenciar conteúdo no Content Browser(navegador de conteúdo)",
        "Aprender a mexer com o Painel World Outliner",
        "Conhecer os Templates disponíveis e Criar Projetos de Games com a Unreal Engine 4",
        "Como abrir um projeto de versão anterior em versão mais nova do editor da Unreal Engine",
        "Aprender a mexer com a aba details (detalhes) de um ator",
        "O que são viewports (vistas ortogonais TOP, LEFT, FRONT e Perpectiva)",
        "Navegar com teclado e mouse pelas Viewports e principais teclas de atalhos teclado e mouse",
        "O que é o espaço de coordenadas 3D XYZ e GIZMO",
        "A fazer translação, movimento de assets pelo cenário",
        "Aprender sobre os ícones das viewports: Snapping to Grid, Rotate, Scale",
        "Aprender e usar as coordenadas locais e globais",
        "Aprender sobre os ícones das viewports: Surface Snapping",
        "Como mover o pivot de um ator temporariamente e definitivamente",
        "Como fazer Vertex Snapping",
        "Aprender o conceito de static mesh, BSP(Binary Space Partitioning) e diferenças entre eles",
        "Aprender a criar cenários com Brushes BSP´s",
        "Como transformar BSP´s em Static Meshes",
        "Inserir um sistema de colisão em uma static mesh",
        "Criar e Manipular Brushes Aditivos e Subtrativos",
        "Alinhar, mover e rotacionar texturas dos materiais dos BSP´s",
        "Vai criar com BSP´s um cenário noturno com áudio ambiente com atenuação, fumaça, névoa, fogo, personagem feminino da Unreal",
        "Instalar a Unreal Engine 5",
        "Melhorar FPS de sua placa na Unreal Engine 5",
        "Conhecer a nova interface e funcionalidades da Unreal Engine 5",
        "Vai mergulhar no universo de Programação e Desenvolvimento de Games utilizando a linguagem visual Blueprints",
        "Aprender o que são Blueprints",
        "Conhecer a anatomia de um Blueprint: : Nós, Pinos e Ligações",
        "Fazer Exercícios Resolvidos sobre Blueprints"
      ],
      "course_content": {
        "Primeiros Passos para Desenvolver Jogos com a Unreal Engine": [
          "Bem-vindo e Bem-Vinda ao Curso - Informações Importantes do Curso!",
          "O que você irá aprender nesta seção.",
          "Recado Importante para você!",
          "Instalando o Epic Games Launcher",
          "Conhecendo as abas e itens do Epic Games Launcher",
          "Intalando a Unreal Engine 5.6.1 ou Superior",
          "Instalando Unreal Engine",
          "Gerenciando opções de pós-Instalação e versões da Unreal",
          "Criando sua conta na Epic Games e fazendo o download do Epic Games Launcher",
          "Abrindo o editor da Unreal Engine e criando seu primeiro projeto",
          "Visão geral das configurações do Projeto",
          "Criando seu primeiro terreno e habilitando a física dos objetos",
          "Entendendo a lógica das pastas contidas em cada projeto da Unreal",
          "Instalando uma versão anterior do editor da Unreal Engine",
          "Desinstalando uma versão da Unreal caso necessário",
          "Instalando a Versão Unreal Engine",
          "Definição de Conceitos Importantes: ASSETS e SHADERS",
          "Abrindo Um Projeto de Uma Versão Anterior Em uma Versão Mais Nova",
          "Mão na Massa: Exercício para você criar seu próprio projeto"
        ],
        "A Interface Gráfica de Trabalho: Os Componentes do Editor da Unreal Engine 4": [
          "O que você irá aprender nesta seção.",
          "Visão Geral(Overview) dos componentes da Interface Gráfica do Editor da Unreal",
          "Menu Bar ou Barra de Menu",
          "Toolbar ou Barra de Ferramentas",
          "O Content Browser ou Navegador de Conteúdo",
          "O Painel World Outliner",
          "Aba Place Actors: Inserindo itens em seu game e editando detalhes na Aba Details",
          "O Content Browser ou Navegador de Conteúdo Parte 2"
        ],
        "Viewports (Janelas de visualização) do projeto e ícones das viewports": [
          "O que você irá aprender nesta seção.",
          "Viewports(vistas): Formas de visualizar e manipular itens de seu projeto",
          "Navegando pelas viewports: atalhos mais utilizados em projetos parte 1",
          "Navegando pelas viewports: atalhos mais utilizados em projetos parte 2",
          "Consolidando Viewports: Janelas de Exibição e Modos de Visualização",
          "O espaço de coordenadas 3D e o Gizmo (Manipulador 3D nos eixos X Y Z)",
          "Ícones das Viewports: Translate (translação) de objetos pelos eixos X Y Z",
          "Ícone da Viewport: Snapping to the grid e Grid Snap Value: Aderir ao Grid(Grade)",
          "O conceito de rotação: Roll, Pitch e Yaw",
          "Ícones das Viewports: Rotate e Snapping Objects to Rotation Grid e Set Rot. Grid",
          "Ícone da Viewports Scale e Snapping Object to a Scale Grid e Set Scaling Options",
          "Ícones das Viewports: Coordenadas Globais e Coordenadas Locais",
          "Ícone das Viewport: Surface Snapping",
          "Movendo Pivot(Gizmo) da Static Mesh para Rotacionar e Mover na Posição Desejada.",
          "Vertex Snapping: Movendo Pivot(Gizmo) para um vértice e alinhando static meshes"
        ],
        "Criação de Level Design com BSP Brushes (Prototipagem)": [
          "O que você irá aprender nesta seção.",
          "O conceito de Static Mesh (Malha Estática)",
          "ATENÇÃO: Onde Ficam as opções de BSP BRUSH na Unreal Engine 5. Confira!",
          "Conceito de BSP - Binary Space Partitioning",
          "ATUALIZAÇÃO: SE VC USA UNREAL 5.6 OU SUPERIOR: CRIANDO LEVEL DESIGN PRÓXIMA AULA",
          "Criando e manipulando BSP Brushes Aditivos(Add) e Level Design",
          "Criando e manipulando BSP Brushes Subtrativos(Subtract)",
          "Alinhando, Movendo e Rotacionando as Texturas dos Materiais nos Brushes",
          "Criando Muros Que Irão Cercar o Level",
          "Criando uma Static Mesh Caixa de Fogo a Partir de Brushes Aditivos e Subtrativos",
          "Inserindo Sistema de Colisão na Static Mesh Caixa de Fogo",
          "Inserindo Efeito Pegando Fogo, Fumaça e Som do Fogo Com Atenuação.",
          "Resolvendo problema UV Ligthmaps e posicionando statimesh na porta da edificação",
          "Mudando as Cores do Sistema Do Fogo e as cores de outros Particle System",
          "Ajustando altura da edificação e alterando os materiais do level",
          "ATENÇÃO: Se Estar na Unreal Engine 5 leia para level de dia para noite",
          "Mudando a aparência do level de dia para noite: SkySphere e Light Source",
          "Baixando e colocando som ambiente no level",
          "Atualizando o editor da Unreal"
        ],
        "Unreal Engine 5": [
          "O que você irá aprender nesta seção.",
          "Analisando a Nova Versão Unreal Engine 5",
          "Instalando a Unreal Engine 5",
          "Criando Primeiro Projeto na Unreal Engine 5 e Passos Caso FPS Vídeo caia muito.",
          "Meu recado para você em relação a nova versão Unreal Engine 5",
          "Analisando a Interface da Nova Unreal Engine 5",
          "Migrando Projetos da Unreal 4 para a nova versão Unreal Engine 5"
        ],
        "Introdução a Programação de Games com a Linguagem de Script Visual: Blueprints": [
          "O que você irá aprender nesta seção",
          "Introdução a programação de Games com Blueprints e Diferenças para código C++",
          "O que são Blueprints?",
          "Aprimorando a Exibição da Mensagem na Tela com HUD",
          "Exercício Proposto Resolvido",
          "Anatomia de uma Blueprint: Nós",
          "Anatomia de uma Blueprint: Pinos De Execução e Pinos de Dados",
          "Anatomia de uma Blueprint: Fios(Ligações)",
          "O Nó Blueprint: Print String",
          "O Nó Blueprint Delay",
          "Exercícios sobres os conceitos que aprendeu nesta seção"
        ],
        "Editor Blueprints, Level x Class Blueprints, Event Tick, Comentários, Favoritos": [
          "O que você irá aprender nesta seção.",
          "Conhecendo o editor de Blueprints: ToolBar",
          "Conhecendo o editor de Blueprints: ToolBar (Opções Botão Play e Debug)",
          "Conhecendo o editor de Blueprints: Event Graph, Viewport, Construction Script",
          "O Nó Event Tick",
          "O pino Delta Seconds do Nó Event Tick",
          "Prática: Delta Seconds com o nó AddActorLocalOffset",
          "Prática: Delta Seconds com o nó AddActorWorldOffset",
          "O Graph Construction Script",
          "Level Blueprint x Class Blueprint",
          "Como fazer comentários para organizar suas Blueprints",
          "Como criar bookmark (favorito) de Blueprints para voltar facilmente a elas.",
          "ATENÇÃO: PARA A PRÓXIMA AULA USE O NÓ SEQUENCE PARA UNREAL 5.1 OU SUPERIOR!",
          "Exercício: Modificando o material da mesh(corpo) do jogador"
        ],
        "O que é Colisão e o que São Eventos (Events)": [
          "O que Colisão na Unreal Engine? Overlap (Sobreposição) e HIT (Impacto)",
          "Overlap e Hit Events. Collsion Presets, Object Type, Object Responses, Traces",
          "Aula Extra em texto Sobre Sistema de Colisão da Unreal Engine",
          "O que são Eventos? Events na Unreal Engine",
          "O Nó Blueprint: Event BeginPlay",
          "Event BeginPlay Disparado junto com o inicio da execução do game",
          "O Nó Blueprint: Spawn Actor From Class",
          "O Nó Blueprint: Spawn Actor From Class Parte2",
          "Atenção: ADD EVENT a partir Unreal 5 está em outro local veja...",
          "Triggers (Gatilhos): Volumes invisíveis usados para disparar eventos de colisão",
          "Event BeginPlay executado quando a blueprint é criada dinamicamente no jogo",
          "O Nó Get All Actor of Class",
          "ATENÇÃO: SELECT ALL NO MINUTO 08:41 PRÓXIMA AULA UNREAL 5",
          "O Nó Set Simulate Physics",
          "O Nó Blueprint: Activate",
          "Exercício Resolvido: Ativar Física Obter Localização Target Point via Blueprint",
          "Como Editar Visualização dos Ícones de Thumbnail do Content Browser",
          "O que é Vetor, Grandeza Escalar x Grandeza Vetorial?",
          "O Nó Set Physics Linear Velocity e Set Physics Angular Velocity in Degrees",
          "Aplicando o Nó Set Physics Linear e Angular Velocity",
          "Event BeginPlay Disparado quando um level(nível) inicia no seu game",
          "O Nó Blueprint: Spawn Emiiter At Location",
          "Usando nó Spawn Emitter at location na prática: Cubo que gera Fumaça",
          "Exercício proposto: blueprint que gere fogo no cubo da cena após 3 segundos.",
          "Resolvendo exercício gerar fogo em 5 segundos com outra abordagem(componentes)",
          "O Nó Blueprint: Sequence",
          "O nó Blueprint Destroy Actor e Set Life Span",
          "Como destruir o cubo de fogo com som e efeito de explosão"
        ],
        "Blueprints: Variáveis, definição, seus tipos principais e utilização": [
          "Criando Projeto First Person Shooter",
          "Entendendo elementos do sistema computacional: CPU, HD, SSD, Memória RAM",
          "Mas afinal o que são variáveis?",
          "Criando Variáveis no Editor de Blueprints do Unreal Editor",
          "Como se declara variáveis em linguagem de programação e relação com blueprints",
          "O que são tipos de Variáveis?",
          "Um pouco mais sobre variáveis",
          "Aula Bônus",
          "Sobre a Emissão do Certificado do Curso"
        ]
      },
      "requirements": [
        "Computador com conexão de qualidade à internet",
        "Requisitos mínimos para executar a Unreal Engine 4: Sistema Operacional: Windows 7/8/10 64-bits Processador: Quad-core Intel ou AMD, 2.5 GHz ou superior e Memória: Mínimo de 8 GB RAM",
        "Placa de vídeo: NVIDIA GeForce 470 GTX ou AMD Radeon 6870 HD series card ou superiores com DirectX 11, DirectX 12 ou superior. Obs: Placas com DirectX versão 10 não funcionam com os atuais editores da Unreal Engine 4",
        "Os requisitos básicos de hardware para trabalhar com o Unreal Engine 5 Early Access não foram alterados em relação ao UE4. No entanto, alguns dos novos recursos destá versão de acesso antecipado da Unreal 5 exigirão hardware de última geração para obter os melhores resultados. Por exemplo, para obter o máximo de Nanite e Lumen, atualmente a EPIC GAMES recomenda o equivalente a um NVIDIA GTX 1080, AMD VEGA 64 ou melhor. Também recomendamos atualizar para os drivers mais recentes para sua GPU."
      ],
      "description": "Garantia de 30 dias da Udemy. Invista no seu futuro sem risco!\nAULAS SOBRE BLUEPRINTS JÁ NA UNREAL ENGINE 5\nAprenda os conceitos iniciais com muita prática e toda a estrutura programação de jogos com Blueprints na Unreal Engine\nDo Absoluto Zero ao Controle Total da Engine: A Base que Todo Criador de Jogos Precisa!\nVocê fica perdido ao abrir a Unreal Engine? Não entende os termos, os painéis ou por onde começar? Este não é \"apenas mais um curso\". É a fundação sólida que vai te transformar de um iniciante curioso em um criador confiante, capaz de dar os primeiros passos no mundo da criação de games.\nAqui você não vai pular etapas. Vamos construir, juntos, o conhecimento essencial desde a instalação até a lógica de programação visual, garantindo que você nunca mais se sinta perdido na interface da Unreal.\nNÃO É MAGICA, É MÉTODO. Este curso é o mapa para sua jornada na Unreal Engine.\nPara quem é este curso?\nPara você que está dando os primeiros passos absolutos e quer começar com o pé direito, sem vícios ruins ou gaps de conhecimento. É o primeiro e mais importante degrau da sua escada para se tornar um desenvolvedor.\nPare de apenas sonhar em criar jogos. Comece a fazê-lo.\nClique em \"Inscrever-se\" e garanta seu acesso imediato!\nOi Tudo bem com você?\nEu Sou o Professor Marcos Pacheco e vou te guiar e te apoiar durante todo este curso!\nSe você quer entrar no universo da criação de jogos, este curso é o ponto de partida ideal. Aprenda a dominar a poderosa Unreal Engine e suas principais ferramentas, criando jogos sem precisar escrever código, por meio das Blueprints. Comece do zero, compreenda as estruturas e conceitos fundamentais com exercícios práticos e desenvolva a base necessária para evoluir em outros cursos e dar os primeiros passos na criação dos seus próprios games.\nA Unreal Engine é uma ferramenta versátil que oferece grande valor em várias indústrias, proporcionando alta demanda para profissionais qualificados. A indústria de games continua a ser um campo lucrativo e em crescimento, com amplas oportunidades para desenvolvedores de jogos e outras áreas interdisciplinares utilizando ferramentas como a Unreal Engine. O desafio principal será atender à demanda crescente por profissionais qualificados, especialmente no Brasil, onde a oferta de mão de obra especializada ainda é limitada.\nSe você deseja mergulhar no mundo da criação de jogos, este curso é o seu ponto de partida. Aprenda a dominar a incrível  Unreal Engine, suas ferramentas, e a programar jogos sem precisar escrever códigos, utilizando as famosas Blueprints.\nA Unreal Engine é o mais famoso e principal motor (Engine) para desenvolvimento de jogos da atualidade!.\nÉ a mesma tecnologia que deu vida ao Fortnite, Gears of War, Borderlands, Batman: Arkham, Mass Effect, Final Fantasy VII Remake, e muitos outros games de sucesso!\nE o melhor:\nVocê não precisa ter conhecimentos prévios para começar a desenvolver seus games\nVocê pode programar jogos inteiros sem usar códigos usando as Blueprints\nÉ totalmente gratuita em sua versão full (completa)!\nVocê terá a sua disposição diversos mapas, assets, personagens, materiais, animações e muito mais totalmente gratuitos no marketplace da Epic Games!\nAs Blueprints são scripts visuais que usam nós e ligações para criar a lógica de todos os itens de seu game sem a necessidade de digitar códigos de linguagem de programação.\nEste curso oferece mais do que apenas conhecimentos básicos. Você terá acesso a explicações detalhadas e insights difíceis de encontrar em outros cursos ou na documentação oficial da Unreal Engine.\nO aprendizado será reforçado por exercícios práticos, consolidando seu conhecimento de forma efetiva.\nVocê pode se inscrever neste curso sem riscos, pois terá 30 dias para experimentar o curso ou ter seu dinheiro de volta, com  reembolso garantido pela udemy!\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\nDesenvolva suas habilidades com Blueprints já Unreal Engine 5!\nExplore os conceitos fundamentais e as melhores práticas da programação de jogos usando Blueprints.\nCom uma interface visual e intuitiva, você não precisará digitar códigos complexos.\nToda a lógica de programação será construída através da conexão de nós, facilitando ainda mais seu aprendizado.\nJunte-se a milhares de alunos satisfeitos!\nAproveite a oportunidade de se inscrever neste curso com tranquilidade. Você terá 30 dias para explorar todos os recursos e benefícios oferecidos. Caso não fique satisfeito, a Udemy garante o reembolso do seu investimento.\nJá ajudei mais de 20 mil alunos a alcançarem seus objetivos na Udemy. Minha abordagem didática é altamente elogiada pelos estudantes. Você receberá suporte personalizado durante todo o curso, com feedback valioso para o seu progresso.\nDesperte seu potencial de desenvolvedor de jogos!\nA Unreal Engine é uma das principais ferramentas do mercado para desenvolvimento de jogos. Com ela, você pode criar jogos incríveis com qualidade profissional. A melhor parte? Você não precisa ter experiência prévia! As Blueprints permitem que você desenvolva jogos completos sem escrever uma única linha de código.\nAcesso gratuito a recursos e ativos!\nAo ingressar neste curso, você terá acesso a uma variedade de recursos no marketplace da Epic Games, incluindo mapas, personagens, materiais, animações e muito mais, tudo gratuitamente. Expanda suas opções criativas e crie jogos de ação, aventura, simulação e muito mais.\nAproveite esta oportunidade única!\nNão deixe escapar essa chance de entrar no mundo da programação de jogos e começar sua trajetória de aprendizado para realizar seu sonho de criar um jogo incrível. Inscreva-se agora e inicie sua jornada de criação de jogos hoje mesmo!\nEste curso é perfeito para iniciantes que desejam aprender do zero a utilizar a Unreal Engine e programar jogos com Blueprints.\nLembre-se: todos os recursos utilizados neste curso, como assets, animações, personagens, sons, ferramentas, etc., são totalmente gratuitos e de alta qualidade!\nVocê irá aprender neste curso:\n\n\nCriar sua conta na Epic Games\nInstalar e conhecer abas, menus e itens do Epic Games Launcher\nInstalar a versão atual da Unreal Engine 5 e aprender a instalar e manter versões anteriores\nAprender opções de pós-instalação e versões da Unreal Engine\nA como desinstalar a Unreal Engine\nConhecer os menus, painéis, barra de ferramentas e botões do editor da Unreal\nConhecer e gerenciar conteúdo no Content Browser(navegador de conteúdo)\nAprender a mexer com o Painel World Outliner\nConhecer os Templates disponíveis e criar projetos de games com a Unreal Engine\nComo abrir um projeto de versão anterior em versão mais nova do editor da Unreal Engine\nAprender a mexer com a aba details (detalhes) de um ator\nO que são viewports (vistas ortogonais TOP, LEFT, FRONT e Perspectiva)\nNavegar com teclado e mouse pelas viewports(janelas de visualização) e principais teclas de atalhos teclado e mouse\nO que é o espaço de coordenadas 3D XYZ e GIZMO\nA fazer translação, movimento de assets pelo cenário\nAprender sobre os ícones das viewports: Snapping to Grid, Rotate, Scale\nAprender e usar as coordenadas locais e globais\nAprender sobre os ícones das viewports: Surface Snapping\nComo mover o pivot de um ator temporariamente e definitivamente\nComo fazer Vertex Snapping\nAprender o conceito de static mesh, BSP(Binary Space Partitioning) e diferenças entre eles\nAprender a criar cenários com Brushes BSP´s\nComo transformar BSP´s em Static Meshes\nInserir um sistema de colisão em uma static mesh\nCriar e Manipular Brushes Aditivos e Subtrativos\nAlinhar, mover e rotacionar texturas dos materiais dos BSP´s\nVai criar com BSP´s um cenário noturno com áudio ambiente com atenuação, fumaça, névoa, fogo, personagem feminino da Unreal\nInstalar a Unreal Engine 5\nMelhorar FPS de sua placa de vídeo durante o uso da Unreal Engine 5\nConhecer a nova interface e funcionalidades da Unreal Engine 5\nProgramação e Desenvolvimento de Games utilizando a linguagem visual Blueprints\nAprender o que são Blueprints\nConhecer a anatomia de um Blueprint: : Nós, Pinos e Ligações\nFazer Exercícios Resolvidos sobre Blueprints\nAprender tudo sobre os nós PrintString e Delay\nFazer exercícios interativos sobre Blueprints via sistema Udemy com questões de marcar e resultado\nConhecer o editor das blueprints e todas as suas abas e principais opções.\nEntender a Blueprint Event Tick\nAnalisar a fundo o pino DeltaSeconds do nó Blueprint Event Tick\nAprender e Praticar o nó Blueprint AddActorLocalOffset\nAprender e Praticar o nó Blueprint AddActorWorldOffset\nAprender para que serve e como utilizar o Construction Script\nSaber a diferença entre Level Blueprint x Class Blueprint\nComo fazer comentários para organizar suas Blueprints\nComo criar bookmark (favorito) de Blueprints para voltar facilmente a elas.\nComo modificar dinamicamente via Blueprint o material da mesh(corpo) do jogador\nO que são e exemplos do conceito de Eventos (Events)\nVai aprofundar os conceitos e utilização do importante nó Event Begin Play\nVai analisar os momentos que o evento Event BeginPlay é acionado em uma blueprint e no game\nEvent BeginPlay disparado junto com o inicio da execução do game\nEvent BeginPlay executado quando um ator é criado dinamicamente no jogo\nVai aprender tudo sobre o Nó Blueprint: Spawn Actor From Class\nVai Analisar os importantes e muito utilizados Triggers (Gatilhos): Volumes invisíveis usados para disparar eventos de colisão\nVai aprender o conceito e utilização do Nó Blueprint Get All Actor of Class\nComo habilitar a física e fazer objetos cair com o o nó Set Simulate Physics\nAprender como ativar componentes durante o game com o  nó blueprint: Activate\nVai fazer Exercício Resolvido de como Ativar Física e Obter Localização de Target Point via Blueprint\nComo Editar Visualização dos Ícones de Thumbnail do Content Browser\nAprender o conceito de Vetor, Grandeza Escalar e Grandeza Vetorial\nVai aplicar e conhecer o nó Set Physics Linear Velocity e Set Physics Angular Velocity in Degrees\nVai aprender também aplicando na prática o nó Set Physics Linear e Angular Velocity\nEntender o Event BeginPlay Disparado quando um level(nível) inicia no seu game\nAprender todo o conceito e pinos do nó O Nó Blueprint: Spawn Emiiter At Location\nVai usar o nó Spawn Emitter at Location em um Cubo que gera Fumaça\nVai fazer exercício proposto: blueprint que gere fogo no cubo da cena após 3 segundos.\nVai aprender o conceitos e função dos pinos do Nó Blueprint: Sequence\nAprenderá os importantes nós Blueprint: Destroy Actor e Set Life Span\nSaberá como destruir um cubo de fogo com som e efeito de explosão\nVai criar um Projeto First Person Shooter (FPS)\nVai entender os elementos do sistema computacional: CPU, HD, SSD, Memória RAM\nAprenderá o que são afinal variáveis\nIrá criar variáveis no Editor de Blueprints do Unreal Editor\nAnalisará como se declara variáveis em linguagem de programação e relação com Blueprints\nVai aprender o que são tipos de Variáveis?\nE muito mais!\n\n\nNo Brasil, há mais de 1.000 estúdios de desenvolvimento de jogos, refletindo o crescimento e a diversificação do mercado local (Visual Capitalist) . Globalmente, existem milhares de estúdios, com grandes concentrações na América do Norte, Europa e Ásia, particularmente no Japão, China e Coreia do Sul.\nProfissão e Carreira de Desenvolvedor de Jogos\nAtualmente, existem aproximadamente 3,2 bilhões de gamers em todo o mundo, com previsão de alcançar 3,5 bilhões até 2025 (Visual Capitalist) . Essa base ampla de consumidores tem impulsionado a demanda por desenvolvedores de jogos\nOportunidades com Unreal Engine\nPara aqueles com experiência no Unreal Engine, as oportunidades se estendem muito além do desenvolvimento de jogos:\nGames: Criação de jogos AAA, realidade virtual e aumentada.\nArquitetura: Modelagem e visualização arquitetônica em tempo real.\nMarketing: Produção de conteúdos interativos e envolventes para campanhas publicitárias.\nEngenharia: Simulações e prototipagem de produtos.\nCinema: Utilização em produções de efeitos especiais e animação.\nE então o que você está esperando? Mercado em alta e 30 dias para testar!\nEmbarque nesta emocionante jornada de aprendizado e inicie sua trajetória para se tornar um desenvolvedor de games, contando com todo o meu apoio ao longo de todo o curso!\nAproveite esta oportunidade!\nPossuo mais de 20 mil alunos na Udemy e a maioria deles está satisfeito com minha didática de ensino ;)\nVocê pode se inscrever neste curso sem riscos, pois terá 30 dias para experimentar o curso ou ter seu dinheiro de volta, com  reembolso garantido pela udemy!\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\nVocê já pensou em fazer um curso na Udemy onde o professor realmente responde suas dúvidas, te orienta, e te acompanha de verdade durante toda a sua jornada?\nPois é exatamente isso que você vai encontrar nos meus cursos.\nDesde a primeira aula, você pode enviar quantas perguntas quiser, relacionadas aos conteúdos do curso, e eu estarei lá para te apoiar, corrigir seus erros e esclarecer suas dúvidas.\nNada de estudar sozinho ou ficar travado sem saber o que fazer. Aqui o aprendizado é interativo e com acompanhamento.\nEntão, use e abuse da ferramenta de perguntas da Udemy! Ela é seu canal direto comigo — e eu adoro quando os alunos participam.\nUm grande abraço!\nNos encontramos em breve!\nProfessor Marcos Pacheco",
      "target_audience": [
        "Pessoas que desejam ter o primeiro contato com a fantástica ferramenta de criação de games Unreal Engine",
        "Interessados em iniciar sua trajetória do desenvolvimento de games conhecendo o Editor da Unreal Engine em Detalhes"
      ]
    },
    {
      "title": "Unity: Desenvolvedor de jogos 2D e 3D",
      "url": "https://www.udemy.com/course/unity-desenvolvedor-de-jogo-2d-e-3d/",
      "bio": "Torne-se um desenvolvedor de jogos completo construindo e publicando seus próprios jogos",
      "objectives": [
        "Lógica de programação",
        "Fundamentos da linguagem C#",
        "Programação orientada a objetos",
        "Desenvolvimento de jogos 2D e 3D utilizando a Unity Engine.",
        "Publicação de jogos em plataformas de venda/divulgação"
      ],
      "course_content": {
        "Introdução": [
          "Agradecimento"
        ],
        "Lógica de programação": [
          "Algoritmo e o papel do desenvolvedor",
          "Instalação do Visual Studio 2022",
          "Conhecendo o Visual Studio 2022",
          "Instalação do Visual Studio e Visual Studio Code",
          "Instalação do Visual Studio e Vísual Studio Code (dicas em vídeo)",
          "Comando de saída",
          "Operadores aritméticos",
          "Exercício - Tabuada do 2",
          "Váriáveis",
          "Comandos de entrada",
          "Conversão de dados",
          "Exercício - Cálculo da área de um triângulo",
          "Exercício - Quociente e resto",
          "Exercício - Cálculo da idade",
          "Comando IF",
          "Comando IF (Um pouco mais...)",
          "Comando IF - Exercicio maior número",
          "Comando IF - Operador AND",
          "Comando IF - Operad OR",
          "Exercício - Tipo de eleitor",
          "Laço de repetição (For)",
          "Exercício - Média de N números",
          "Laço de repetição (While)",
          "Laço de repetição While (Exercício Número primo)",
          "Como trabalhar com array vetor",
          "Array (Vetor) - Exercício Jogo da adivinhação",
          "Exercício - Construindo um leitor de Texto",
          "Como trabalhar com funções (Functions/Methods)",
          "Construindo diversos tipos de funções - Exercício Sisteme matemático - Parte 1",
          "Construindo diversos tipos de funções - Exercício Sisteme matemático - Parte 2",
          "Construindo um editor de texto - 1 Parte",
          "Construindo um editor de texto - 2 Parte",
          "Projeto Agenda - Apresentação",
          "Projeto Agenda - Estruturando a agenda",
          "Projeto Agenda - Construio o listar",
          "Projeto Agenda - Construindo o inserir",
          "Projeto Agenda - Construindo o Localizar",
          "Projeto Agenda - Construindo o alterar",
          "Projeto Agenda - Construindo o excluir",
          "Projeto Agenda - Persistência de dados - 1 Parte",
          "Projeto Agenda - Persistência de dados - 2 Parte"
        ],
        "Simulado": [
          "Simulado"
        ],
        "Lógica de Programação - Projeto Bichinho Virtual": [
          "Apresentação",
          "Estrutura básica",
          "Mecânica de interação",
          "Melhoramentos",
          "Mecânica de fim de jogo",
          "Persistência de dados - 1 Parte",
          "Persistência de dados - 2 Parte",
          "Refatorando o jogo",
          "Adicionando imagem ao jogo"
        ],
        "Programação Orientada a Objetos": [
          "O que é programação orientada a objetos",
          "Mina primeira classe",
          "Encapsulamento e métodos de acesso",
          "Modificadores de acesso",
          "Propriedades",
          "Exercício cálculo da idade",
          "Um pouco mais sobre propriedade",
          "Construtores",
          "Parada obrigatória - Projeto a hora do pitch",
          "Construindo uma Pokédex",
          "Sobrecarga de membros e métodos",
          "Utilizando objetos como propriedades",
          "Listando Pokémons",
          "Propriedades simplificadas",
          "Herança",
          "Jogo de combate Pokémon - 1 parte",
          "Jogo de combate Pokémon - 2 parte",
          "Melhorando o jogo de combate pokémon",
          "Destrutores",
          "Static - Minha própria classe Console",
          "Static - Utilizando recursos static em objetos",
          "Polimorfismo",
          "Polimorfismo - Virtual Propriedades",
          "Polimorfismo - recursos interessantes",
          "Exercício - Conta de Estudante",
          "Classe Abstrata",
          "Classe Abstrata",
          "Interface",
          "Classe de gerenciamento de materiais - 1 parte",
          "Classe de gerenciamento de materiais - 2 parte",
          "Classe de gerenciamento de materiais - 3 parte"
        ],
        "Conceitos básicos sobre a Unity Engine": [
          "O que é a Unity Hub?",
          "Instalação do Unity HUB e Unity",
          "Instalação da Unity",
          "Aviso aos navegantes"
        ],
        "Projeto 3D - FPS Game (Conhecendo a Unity)": [
          "Construindo o projeto",
          "Jogando a fase template",
          "Construindo a primeira fase",
          "Construindo o primeiro inimigo",
          "Adicionando corredores ao jogo",
          "Construindo os inimigos",
          "Level Final",
          "Construindo uma nova arma",
          "Estruturando as fases do jogo",
          "Estruturando as fases do jogo",
          "Criando o executável"
        ],
        "Collect Fruits": [
          "Apresentação",
          "Construindo o projeto base",
          "Construindo os objetos do jogo",
          "Programando o player",
          "Criando e coletando os objetos do jogo",
          "Construindo a HUD do jogo",
          "Programando o Start Game",
          "Mecânica de pontuação e game over",
          "Publicando meu jogo"
        ],
        "Simulado - Conceitos básicos e mais um pouco": [
          "Simulado - Conceitos básicos e mais um pouco"
        ],
        "Projeto 2D - Minha Fazendinha": [
          "Apresentação do projeto",
          "Estruturando o projeto",
          "Construindo a cena do menu",
          "Construindo a cena do Game Over",
          "Programando o menu",
          "Programando a carne",
          "Mecânica de tempo",
          "Exibindo o Timer",
          "Programando o Game Over",
          "Exportando o projeto para WebGL",
          "Publicando o projeto na Unity Play"
        ]
      },
      "requirements": [
        "Conhecimentos básicos em informática"
      ],
      "description": "Torne-se um desenvolvedor de jogos completo com o curso Unity: Desenvolvedor de jogo 2D e 3D.\nO curso Unity: Desenvolvedor de jogo 2D e 3D foi contruído para capacitar o aluno a criar diversos tipos de jogos  e publicá-los em diversas plataformas de venda/divulgação utlizando uma das engines mais famosas do mercado, a Unity Engine.\nEm nosso curso o aluno não irá apenas aprender a criar jogos, ele irá aprender a programar passando por todas as etapas de aprendizagem, como lógica de programação, conceitos básicos da linguagem C# e programação orientada a objetos.\nDurante o curso o aluno irá aprender:\n- Lógica de programação\n- Fudamentos da linguagem C#\n- Programação orientada a objetos\n- Desenvolvimento de jogos 2D e 3D utilizando a Unity Engine.\n- Publicação de jogos em plataformas de venda/divulgação\nUm detalhe Interessantíssimo do curso Unity: Desenvolvedor de jogo 2D e 3D é que o mesmo tem como foco o desenvolvimento de projetos, isto é, você aprende a programar por meio de construção de vários jogos.\nOutro ponto muito importante do curso é que todos os materiais utilizados na construção dos jogos são materiais oficiais da Unity ou de livre utilização, o que possibilita que o aluno utilize esses materiais para criar e publicar os seus próprios jogos.\nEstamos ansiósos para você dar o primeiro passo rumo a essa nova aventura profissional.\nAguadamos você em nossas aulas.",
      "target_audience": [
        "Game designers e desenvolvedores interessados em aprender programação e desenvolvimento de jogos.",
        "Qualquer pessoa que queira aprender a criar jogos na Unity Engine",
        "Entusiastas do motor de jogo Unity.",
        "Estudantes de cursos técnicos e universitários"
      ]
    },
    {
      "title": "Desenvolvimento de games 2D mobile com Unity",
      "url": "https://www.udemy.com/course/desenvolvimento-de-games-2d-mobile-com-unity/",
      "bio": "Aprenda a criar 10 games 2D para celulares utilizando a Game Engine Unity, monetizá-los e publicá-los na Google Play.",
      "objectives": [
        "Desenvolvimento de 10 games 2D mobile",
        "Instalação e configuração dos programas essenciais",
        "Utilizar em detalhes a Unity",
        "Programação em C# para games",
        "Versionamento de projetos com Github",
        "Utilizar ferramentas Android em games mobile",
        "Monetização com anúncios utilizando Unity ADS e Google ADS",
        "Venda de itens com In App Purchase",
        "Ranking e conquistas com Google Play Services",
        "Android Avançado com In App Update e In App Review",
        "Publicação na Google Play"
      ],
      "course_content": {},
      "requirements": [
        "Computador ou notebook que funcione a Unity"
      ],
      "description": "O curso definitivo de desenvolvimento de games 2D para celulares utilizando Unity!\nSeja bem vindo. Me chamo Gabriel, e sou a voz por trás do canal Recriando Games. E levarei você através dessa incrível jornada.\nNesse curso, você vai aprender, passo a passo, que começa com a instalação dos programas essenciais, e que vai até a publicação de um game na Google Play.\nE para avançarmos nessa jornada, iremos utilizar a Game Engine Unity, um software poderoso e de fácil aprendizado, utilizada em todo o mundo, seja por empresas gigantescas, como a Activision Blizzard, e que foi o motor de diveros games conhecidos por muitos. Entre eles:\nHeartstone\nCuphead\nValheim\nFall Guys\nFree Fire\nDurante o percurso, você aprender de forma didática, o desenvolvimento de dezenas de games. Inicialmente, você terá acesso há 10 projetos, que serão ensinados desde a criação do projeto, organização, programação, interface de usuário (UI) e até o seu último detalhe. Em cada projeto, você irá aprender algo novo, além de reforçar o conhecimento aprendido no projeto anterior. Sem enrolação. Tudo é direto ao ponto, e nos mínimos detalhes.\nProjeto 01:\nNo primeiro projeto, você vai criar um jogo chamado \"Hat Game\", muito utilizado pela própria Unity como introdução a Engine. Nesse projeto, você utiliza a tela do telefone para mover um objeto, e coletar outros objetos que caem com o objetivo de ganhar pontos antes que o tempo acabe.\nProjeto 02:\nNo segundo projeto, iremos fazer um clone do game \"Ant Smasher\" no qual derrotamos os inimigos antes que eles cheguem no local onde não desejamos. Você vai derrotar os inimigos tocando neles na tela.\nProjeto 03:\nNo terceiro projeto, iremos fazer um clone do game \"Fruit Ninja\" e nele devemos destruir o máximo de frutas possíveis, e evitar as bombas que surgem no caminho. Você vai utilizar o movimento do dedo na tela para cortar objetos.\nProjeto 04:\nNo quarto projeto, você vai aprender um game do gênero \"Space Shooter\", e nele devemos destruir o máximo de naves inimigas possíveis, enquanto tentamos sobreviver aos inúmeros inimigos. Nesse game você vai aprender a utilizar o acelerômetro do celular, podendo mover sua nave através do movimento físico do aparelho.\nProjeto 05:\nNo quinto projeto, você vai fazer um clone do game \"Ball Maze\", o qual devemos mover uma bola entre um labirinto de obstáculos, com o objetivo de alcançar a linha de chegada. Nesse game você vai aprender a fazer um menu de desbloqueio de fases, além de também utilizar o acelerômetro, necessário para mover o jogador.\nProjeto 06:\nNo sexto projeto, você vai aprender a fazer um clássico \"Inifinite Runner\", no qual o jogador corre pelo cenário, enquanto desvia de obstáculos e tenta a sua maior pontuação. Nós iremos utilizar a tela do telefone para que o jogador salte entre os obstáculos;.\nProjeto 07:\nNo sétimo projeto, você vai fazer um clone do game \"Hill Climb Racing\", no qual o jogador controla um veículo, com pequenos sinais de fisica, e tenta sobreviver as diversas inclinações que virão em seu caminho. Nesse game você vai utilizar botões na tela para acelerar/frear o veículo, além de utilizar ferramentas da Engine para produzir o terreno e suas elevações.\nProjeto 08:\nNo oitavo projeto, você aprenderá a fazer um simples games do tipo \"Top Down\", muito conhecido por games como Legend Of Zelda e Stardew Valley. Nesse game você vai aprender a utilizar uma ferramenta da Engine para produzir grandes cenários utilizando Tiles - ou blocos, de forma prática e rápica, mover o personagem e atacar utilizando botões na tela, e muito mais.\nProjeto 09:\nNo nono projeto, você vai aprender um pequeno game do tipo \"Plataforma\", no qual o jogador, dentro de um cenário fixo na tela, deve coletar brilhantes estrelas para liberar e avançar para a próxima fase. Nesse projeto você terá uma introdução ao game do gênero plataforma, podendo fazer com que ele pule em plataformas flutuantes, e se mover em inclinações. Nesse projeto também iremos utilizar o sistema de desbloqueio de fases.\nProjeto 10:\nNo décimo projeto, iremos reforçar ainda mais o que aprendemos no projeto anterior, criando outro game do tipo \"Plataforma\" porém bem mais robusto. Nesse projeto, o jogador vai se mover, atirar projeteis, atacar com espada, teremos plataformas que se movem, além de inimigos que patrulham o cenário, e atacam o jogador caso ele se aproxime. O objetivo é sobreviver. Além de outros detalhes como sistema de HP para jogador e inimigos, coletar e destruir objetos.\n\n\nAo final de cada atualização entre as aulas dos projetos, nós iremos fazer o versionamento do projeto, atráves do Github, sistema utilizado em todo o mundo, e de fácil aprendizado.\n\n\nAlém de desenvolver diversos games, você vai aprender a monetizar os seus games, e poder ganhar dinheiro com eles, através de anúncios, utilizando o Google ADMOB, e Unity ADS, sistemas de monetização de anúncios para games.\nVocê também vai aprender alguns detalhes com o Sistema Operacional Android - Como ativar o modo desenvolvedor, como compartilhar um screenshot do seu game através de redes sociais (Email, Facebook, Whatsapp etc), como abrir páginas web, utilizar a vibração do aparelho, entre outros.\n\n\nE por fim, você vai aprender, passo a passo, como preparar seu projeto, e publicar na Google Play, loja de aplicativos da Google, e disponibilizá-lo ao mundo.\n\n\nSeja muito bem vindo, e espero você na primeira aula!",
      "target_audience": [
        "Pessoas que adoram games e querem fazer dessa paixão uma profissão e ganhar dinheiro com isso",
        "Pessoas com algum ou nenhum conhecimento em programação e/ou desenvolvimento de jogos"
      ]
    },
    {
      "title": "PyGame : Apprendre Python par le jeu vidéo",
      "url": "https://www.udemy.com/course/pygame-apprendre-python-facilement-par-le-developpement-de-jeux-video/",
      "bio": "Initiation à la programmation python et au développement de jeux avec pygame.",
      "objectives": [
        "Programmer avec Python",
        "Utiliser le framework PyGame",
        "Créer un petit jeu 2D",
        "Exporter un jeu créé avec PyGame",
        "Découvrir python dans le cadre du développement de jeux",
        "Développer un clone de space invader"
      ],
      "course_content": {
        "Introduction à la programmation avec le langage Python": [
          "Présentation du cours",
          "Installation de Python",
          "Prise en main du lecteur vidéo de Udemy",
          "Afficher un message dans la console avec Python et la fonction print",
          "L'éditeur de code intégré à Python (IDLE)",
          "Téléchargement et installation de PyCharm, l'IDE le plus populaire pour python",
          "Prise en main de PyCharm, notre environnement de développement intégré",
          "Les conditions en Python",
          "Créer des conditions plus poussées pour des algorithmes plus complexes",
          "Encore un peu plus loin avec les conditions en python",
          "Utilisation des boucles pour répéter des opérations",
          "Utilisez et créez vos fonctions en python",
          "Téléchargement des sources",
          "Exercice de codage : Testez vos connaissances"
        ],
        "Initiation au développement de jeux avec PyGame": [
          "Installation du package PyGame sous PyCharm",
          "Afficher et configurer la fenêtre de jeu",
          "Téléchargement des assets",
          "Affichage de l'image (Sprite) du joueur",
          "Exercice",
          "Solution : Afficher une image d'arrière-plan",
          "Déplacer le joueur avec les flèches du clavier",
          "Empêcher le joueur de sortir des limites de la fenêtre du jeu",
          "Tirer un laser lorsqu'on appuie sur espace",
          "Affichage d'un ennemi et déplacement autonome",
          "Gestion des collisions entre le laser et le monstre",
          "Exercice",
          "Afficher un nombre illimité de monstres à l'écran",
          "Afficher du texte et le score du joueur",
          "Jouer des effets sonores et une musique de fond",
          "Compiler le jeu pour générer l'exécutable + le publier en ligne",
          "Créer un installeur pour son exécutable",
          "Téléchargement du projet final",
          "Vendre un jeu en ligne via Gumroad"
        ],
        "BONUS": [
          "PODCAST : Comment créer un jeu indé et le terminer ,"
        ]
      },
      "requirements": [
        "Il n'y a aucun prérequis pour suivre cette formation PyGame"
      ],
      "description": "Vous souhaitez apprendre le langage Python tout en vous amusant ? Le développement de jeux vidéo est un sujet qui vous passionne ? Alors ce cours est fait pour vous !\nCe tutoriel vous permettra d'apprendre à programmer avec Python tout en développant votre premier jeu vidéo avec PyGame.\nPyGame est un framework libre et gratuit qui vous permettra de développer vos propres jeux en Python. C'est un outil complet qui permet d'implémenter tout ce que l'on peut retrouver dans un jeu vidéo. Nous allons d'ailleurs apprendre à :\nAfficher des images à l'écran\nDéplacer le joueur au clavier\nAfficher du texte\nJouer des sons\nDétecter les collisions\nGérer le score\nTirer sur des ennemis\nCette formation est découpée en 2 parties : La première section présente les bases de la programmation avec Python. La seconde partie est orientée développement d'un jeu avec PyGame.\nVous apprendrez donc à coder avec Python tout en vous amusant car nous allons travailler sur un projet de jeu vidéo. Ce cours est d'ailleurs entièrement basé sur un projet concret : On apprend par la pratique.\nIl s'agit d'un cours condensé pour ceux qui veulent être rapidement opérationnel. En quelques heures vous serez en mesure d'écrire vos scripts python et de créer des jeux en 2D.\nJe partagerai avec vous des astuces pour par exemple générer l'exécutable de votre jeu, créer un installeur, publier et vendre votre jeu en ligne afin de pouvoir vivre de votre passion.\nCette formation pygame/python s'adresse aux débutants qui souhaitent s'initier à ces technologies simplement et de façon ludique. Nous utiliserons le logiciel PyCharm qui est la référence en matière d'IDE pour le langage Python. Notre jeu vidéo sera un shooter 2D pour desktop.\nSi vous souhaitez vous lancer dans l'aventure, je vous invite à me retrouver dans la première vidéo de ce tutoriel.\n\n\nImage d'illustration basée sur un concept de vecteezy",
      "target_audience": [
        "Aux personnes qui souhaitent découvrir PyGame",
        "A ceux qui veulent apprendre Python en s'amusant",
        "Aux développeurs qui souhaitent migrer vers python",
        "Aux créateurs de jeux qui veulent coder tout à la main avec des outils libres et gratuits"
      ]
    },
    {
      "title": "【UE4】Unreal Engine 4 + VR で建築ビジュアライゼーション",
      "url": "https://www.udemy.com/course/unrealengine-4-archviz-vr/",
      "bio": "初心者でもできる！ 建築分野で注目されている「VR（バーチャルリアリティ）を用いた建築ビジュアライゼーション」を無料のゲームエンジン「Unreal Engine 4（UE4）」を使って開発してみよう！",
      "objectives": [
        "手持ちのアセットを配置してVR空間で見るためのセットアップができる",
        "UE4 + VR 開発の取っ掛かりがつかめる"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "まだダウンロードしていない方はこちらから": [
          "ランチャーをダウンロードする",
          "ダウンロードしてる間に参考サイトの紹介とか",
          "エンジンをインストールする",
          "インストールしてる間にランチャーを覗いてみる"
        ],
        "部屋をセットアップしてみる": [
          "プロジェクトを作ってVRで見てみる",
          "新しいレベルを作る & 必要なものを持ってくる",
          "アセットを配置してみる その1",
          "アセットを配置してみる その2",
          "ブループリントで楽にアセット配置してみる その1",
          "ブループリントで楽にアセット配置してみる その2",
          "プロファイリングしてみる",
          "ワープできるようにする",
          "マテリアルとマテリアルインスタンス",
          "ライティングしてみる",
          "ちょっと絵作りをしてみる",
          "マテリアル差し替え用のUIを作ってみる その1",
          "マテリアル差し替え用のUIを作ってみる その2",
          "実行ファイルにしてみる"
        ],
        "部屋をセットアップしてみる 応用編": [
          "ドアを開閉できるようにしてみる　その1",
          "ドアを開閉できるようにしてみる　その2",
          "ライティングの分散ビルドをしてみる",
          "VR開発で大切なこと"
        ],
        "おわりに": [
          "おわりに"
        ]
      },
      "requirements": [
        "VR ReadyなPCがある",
        "Oculus Rift または HTC Vive がある"
      ],
      "description": "この講座は、建築分野に新しいアプローチをもたらしているVRを用いた建築ビジュアライゼーションを\n無料のゲームエンジン「UnrealEngine4」を使って開発する講座です。\n初心者向けとなっておりますので、UnrealEngine4を触ったことがない方、VR開発を初めて行なう方等に\n向けた導入的な講座となっております。\n\n\nUnrealEngine4ではとても簡単にVR開発を始めることができます。\n今回はサンプルとして用意されている「部屋」のデータを元にしてVR向けにあれこれセットアップし直してみます。\nこの講座では、各々の好きな部屋のモデル、家具などを配置しVR空間で見て調整できるようになることを目標とします。\nまた、プレイ中にマテリアルの差し替える方法、VR空間で使えるUIについても触れていきます。",
      "target_audience": [
        "UE4 + VR に興味がある人",
        "HMDを買ったはいいけど、開発の仕方がいまいちわからない人",
        "アセットは手元にあるけど、VRで見るためのセットアップがいまいちできない人"
      ]
    },
    {
      "title": "Aprende a crear un videojuego de Acción 2D con Unity",
      "url": "https://www.udemy.com/course/aprende-a-crear-un-videojuego-de-accion-2d-con-unity/",
      "bio": "Crea un juego de Acción 2D aplicando diferentes mecánicas reales utilizando Unity y el lenguaje C#",
      "objectives": [
        "Aprende a crear un videojuego de tipo Acción",
        "Aprende a crear un sistema de IA para enemigos",
        "Potenciarás tus conocimientos de Programación con C#",
        "Entenderás la programación Orientada a Objetos",
        "Aprenderás a utilizar patrones de Programación",
        "Aprenderás a crear Mazmorras y Niveles",
        "Aprenderás a crear objetos de interacción",
        "Aprenderás a Patrones de Ataque",
        "Aprenderás a trabajar con Interfaces de Usuario"
      ],
      "course_content": {
        "Introducción": [
          "Bienvenido al curso",
          "Únete al canal de Discord",
          "Invitación al Canal de Discord"
        ],
        "Iniciar Proyecto": [
          "Crear Proyecto",
          "Importar Assets",
          "Descarga los assets del curso"
        ],
        "Creación del Player": [
          "Introducción",
          "Player Movimiento",
          "Player Dash",
          "Player Rotación",
          "Animaciones",
          "RETO: Completar Animaciones de Players",
          "Modificar SpriteRenderer",
          "Proyecto Sección 3"
        ],
        "Configuración de Players": [
          "Introducción",
          "Player Scriptable Object",
          "Player Salud",
          "Player Energía",
          "Player UI",
          "UI Manager",
          "Proyecto Sección 4"
        ],
        "Creación de Dungeons": [
          "Introducción",
          "Estructurar Dungeon",
          "Crear Rooms Una Conexión",
          "Rooms Dos Conexiones",
          "Completar Rooms",
          "Crear Pasadizos",
          "Construir Dungeons",
          "Construir Puertas",
          "Agregar Props",
          "Proyecto Sección 5"
        ],
        "Generar Dungeons": [
          "Introducción",
          "Revisar Layouts",
          "Almacenar Plantillas",
          "Obtener Tiles",
          "Cargar Plantilla",
          "Agregar Puertas",
          "Cerrar Puertas",
          "Instanciar Dungeon",
          "Superar Dungeons",
          "Posicionar Player",
          "Agregar Fade",
          "Proyecto Sección 6"
        ],
        "Armas": [
          "Introducción",
          "Configurar Armas",
          "Crear Armas",
          "Agregar Animaciones",
          "Equipar y Rotar Arma",
          "Disparar Arma",
          "Gastar Energía",
          "Arma Melee",
          "Interface IRecibirDaño",
          "Proyecto Sección 7"
        ],
        "Recoger Items": [
          "Introducción",
          "Crear Cofre",
          "Crear Recogibles",
          "Recoger Arma",
          "Cambiar Armas",
          "Mostrar Nombres de Items",
          "Mostrar Nombres de Armas",
          "Cofre Items",
          "Game Manager",
          "Singleton Pattern",
          "Proyecto Sección 8"
        ],
        "Escena Principal": [
          "Introducción",
          "Crear Escena de Inicio",
          "Crear Players Selección",
          "Instanciar Players Selección",
          "Player Selección UI",
          "Cargar Player Config",
          "Seleccionar Player",
          "Monedas y Mejorar Player",
          "Actualizar Barras",
          "Cargar Dungeon",
          "Actualizar UIManager Referencia",
          "Proyecto Sección 9"
        ],
        "Cinemachine": [
          "Introducción",
          "Agregar Cinemachine",
          "Seguir Player Seleccionado",
          "Proyecto Sección 10"
        ]
      },
      "requirements": [
        "Conocimientos básicos en el manejo de Unity y Programación con C#",
        "Contar con Unity versión 2022.3 o superior",
        "Tener un ordenador o portátil que pueda correr Unity sin problemas"
      ],
      "description": "¡Bienvenido al Curso de desarrollo de un juego de Acción 2D con Unity!\nEn este Curso de desarrollo de un juego de Acción 2D con Unity, te llevaremos de la mano desde los conceptos básicos hasta un nivel intermedio, proporcionándote las herramientas y el conocimiento necesario para crear tu propio videojuego de acción en 2D utilizando Unity y el lenguaje de programación C#.\nEs un curso diseñado para todos aquellos estudiantes que están buscando expandir sus conocimientos en el desarrollo de videojuegos con Unity. Durante el curso aprenderás distintas habilidades necesarias en la industria de videojuegos, algunos de los temas que tocaremos son los siguientes:\n\n\nCrearemos al personaje y sus componentes principales como Movimiento, Salud, Energía, Experiencia y configuraciones usando Scriptable Objects.\nCrearemos dungeons utilizando rooms, los cuales los crearemos usando Tilemaps.\nCrearemos el movimiento de nuestra cámara usando Cinemachine.\nCrearemos un sistema de armas sumamente configurables, los cuales podrás modificar a tus gustos.\nCrearemos un sistema de recoger Items y utilizarlos, estos items nos servirán para darle vida a nuestro juego.\nCrearemos una escena principal que será nuestro lobby, donde podremos iniciar nuestro juego.\nCrearemos un sistema de desbloquear, mejorar y seleccionar players, usando scriptable objects.\nCrearemos un sistema de inteligencia artificial para nuestros enemigos.\nCrearemos enemigos que puedan equipar armas y combatir con nuestro Player.\nCrearemos mecánicas de combate para que nuestro personaje pueda luchar con los enemigos.\nCrearemos un sistema de Loot Drop para poder recuperar energía y ganar monedas.\nCrearemos Jefes finales para agregar más dificultad a nuestro juego.\n\n\nCon este curso potenciarás tus conocimientos de programación con C#, tocaremos varios temas interesantes como:\nSingleton Pattern\nHerencia\nPropiedades\nClases abstractas\nMétodos Virtuales\nBuenas prácticas de programación.\nTe invito a que veas el video de presentación del curso para tener una idea de todos los temas que se desarrollarán.\n¡Suerte con el Curso y disfrútalo!\n¡Empecemos a crear videojuegos!",
      "target_audience": [
        "A todos los estudiantes que deseen aprender a crear su primer videojuego de tipo Acción",
        "A todos los estudiantes que quieran potenciar sus conocimientos de Programación en C#.",
        "A todos los estudiantes que quieran ser profesionales en el mundo del desarrollo de Videojuegos.",
        "A todos los estudiantes que quieran aprender mecánicas reales de Videojuegos."
      ]
    },
    {
      "title": "Building a Better Jump in Godot 4!",
      "url": "https://www.udemy.com/course/building-a-better-jump-in-godot-4/",
      "bio": "Make your game more friendly to your player and Use real world physics to make your players movement feel amazing.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Beginner Programming Experience",
        "Beginner Godot Experience"
      ],
      "description": "Welcome to my course on Improving your Jump Mechanics in the Godot Game Engine.\nWhen designing a Platformer there are many things that need to be taken into consideration. Often, one of the most important mechanics is the Jump Mechanic.\nIn this class we’re going to be looking a some tips and tricks to help substantially improve the feel of your game by implementing some behind the scene mechanics that will prevent the player feeling frustrating and keep them playing.\nWe’re going to be going over four core ideas:\nCoyote Time\nWhere we give the player some time when walking off edges to jump\nJump Buffering\nwhere we allow a jump to happen even when the player has miss timed there jump\nWe’re going to be injecting some real world physics into our jump math to get a mathematically precise jump and give us, the designer, control down to the exact pixel to where the player can jump.\nThen Finally we're going to use those physics to calculate our movement speed\nIgnoring these four core ideas leads to lower enjoyment and ultimately causes the player to stop playing soon than we want to.\nWork alongside me as we solve some of these issues in the Godot Game engine.",
      "target_audience": [
        "Begginer Game Developers"
      ]
    },
    {
      "title": "Crea un videojuego con Unity 3D desde 0 - Bases y avanzado!",
      "url": "https://www.udemy.com/course/aprende-unity3d-desde-0/",
      "bio": "Aprenderás las bases de Unity 3D y programación C# para que puedas entenderlo y crearlo por ti mismo!",
      "objectives": [
        "Aprende a crear tus propios videojuegos y aplicaciones.",
        "Domina la interfaz de Unity 3D, que te facilitará el trabajo a la hora de programar.",
        "Adquiere las bases de programación, enfocadas a C#.",
        "Conoce cómo programar en Unity 3D y ENTIENDE cómo funciona.",
        "Si ENTIENDES cómo funciona, no necesitarás cursos nunca más. Solo tutoriales puntuales."
      ],
      "course_content": {
        "Unity 3D - Fundamentos básicos": [
          "Instalación de Unity 3D",
          "Introduccion a Unity: Cómo funciona esto?",
          "Text Mesh: Introduce textos en un entorno 3D",
          "Terrain: Crea un mapa de mundo abierto"
        ],
        "Animaciones - Crea vida": [
          "Sprites 2D y Animaciones",
          "Transición entre animaciones"
        ],
        "Apartado audiovisual": [
          "Texturas y relieves en objetos 3D",
          "Iluminación y tipos de luces",
          "Tipos y configuración de cámaras, pantallas y minimapas",
          "Sistema de audio"
        ],
        "Físicas y colisiones": [
          "Físicas, gravedades, masas.."
        ],
        "Objetos prefabricados": [
          "Prefabs, objetos prefabricados"
        ],
        "Canvas - La interfaz de tu juego": [
          "Qué es el canvas?",
          "Mostrar imágenes y textos en el canvas. Adaptarlos a cualquier tamaño",
          "Uso de botones, scrolls y barras de slide",
          "Objetos avanzados del canvas"
        ],
        "Iniciación a la programación en C#": [
          "Selección y configuración del editor de código",
          "Variables - Qué son, de qué tipos hay y cómo modificarlas",
          "Métodos de Monobehaviour - Para qué sirven y qué tipos hay?",
          "Métodos avanzados",
          "Variables avanzadas y acceso a componentes de Unity 3D",
          "Condicionales \"if\" - Básicos y complejos"
        ],
        "C# aplicado a Unity 3D": [
          "Inputs - Entradas de periféricos",
          "Vectores y posición de los objetos",
          "Movimiento básico"
        ],
        "Físicas del juego": [
          "Fuerzas, empujes y gravedades",
          "Sistema de colisiones y salto sencillo",
          "Triggers y sistema de objetos recolectables",
          "Salto múltiple"
        ],
        "Programación intermedia": [
          "Sistema de arrays (cadenas)",
          "Bucles For y While para trabajar con grandes cantidades de datos"
        ]
      },
      "requirements": [
        "No es necesario conocer Unity 3D, partiremos de cero.",
        "No es necesario saber programar, partiremos de cero.",
        "Los vídeos son cortos, fáciles de ver y de seguir, además se mandan ejercicios para practicar."
      ],
      "description": "Este curso te enseñará a crear tus propios videojuegos desde cero.\nLa diferencia con el resto de cursos es que aquí te enseñaré a que puedas aprender por tu cuenta. Podrás entender los tutoriales que quieras buscar en YouTube para que puedas extrapolarlos a tu propio contenido, no solo a seguir las líneas o a no poder modificar por ti mismo la plantilla por defecto del curso.\nEsto permitirá que el aprendizaje a partir de aquí pueda ser de forma gratuita con todo el contenido que puedes encontrar en internet.\nPara cualquier duda, siempre tienes mi email: contacto@heynaugames.com",
      "target_audience": [
        "Gente que quiera desarrollar un videojuego.",
        "Gente que quiera aprender a programar.",
        "Gente con conocimientos de arte que quiera implementarlo en un videojuego.",
        "Gente que quiera saber cómo es este mundo por dentro."
      ]
    },
    {
      "title": "【Unreal Engine 5の決定版】本格的なゾンビサバイバル系FPSゲームを作ってみよう",
      "url": "https://www.udemy.com/course/unreal-engine-5fps/",
      "bio": "この講座ではUnreal Engine5でオリジナルのシューティングゲームを作ります。プログラムはすべてBlueprintで作られており、脱初心者レベルの内容となっています。一緒に本格的なFPSゲームを作っていきましょう。",
      "objectives": [
        "Unreal Engine 5でRGPゲーム開発の基本を学べる",
        "Unreal Engine 5のインストール方法",
        "Unreal Engine 5の基本操作",
        "FPSゲームの作り方"
      ],
      "course_content": {
        "紹介": [
          "紹介",
          "コースの概要"
        ],
        "環境構築": [
          "Unreal Engine5のインストール",
          "プロジェクトのの作成/基本操作",
          "レベル(FPS用の3D空間)の作成"
        ],
        "【気分転換】ゲームのパッケージ方法：visual studio 2019 communityのインストール": [
          "【気分転換】ゲームのパッケージ方法：visual studio 2019 communityのインストール"
        ],
        "メインキャラクター": [
          "成果物の確認",
          "インプットの設定①：上下左右に動く",
          "インプットの設定②：360度見回せれるように",
          "インプットの設定③：ジャンプ",
          "メインキャラクターのアニメーション設定"
        ],
        "武器の設定": [
          "完成物の確認",
          "素材のダウンロード",
          "ピストル銃の作成",
          "武器のアニメーション設定",
          "武器の反動アニメーションの設定",
          "弾薬の表示設定",
          "弾薬システムの作成",
          "リロードシステムの作成",
          "弾痕の作成",
          "クロスヘア(照準)の作成",
          "カメラシェイクの作成"
        ],
        "ゾンビAIの作成": [
          "成果物の確認",
          "AIシステムの作成",
          "ゾンビモデルの追加",
          "ゾンビのダメージシステムの作成",
          "ゾンビのヘルスシステム",
          "エフェクト(血しぶき)の作成",
          "ヒットアニメーションの追加",
          "メインキャラクターのヘルスバー作成",
          "メインキャラクターのダメージスクリーンの作成",
          "ゾンビの攻撃アニメーションの追加",
          "ゾンビが音に反応するための設定"
        ],
        "レベルのデザイニング": [
          "完成物の確認",
          "不気味な森の作成",
          "衝突に関する微調整"
        ],
        "アイテムの作成": [
          "爆弾の作成",
          "インタラクションシステムの作成",
          "回復アイテムの作成",
          "弾薬の作成",
          "アイコン表示の作成"
        ],
        "ゲームの完成に向けて": [
          "カウントダウンシステムの作成",
          "スコアリングシステムの作成",
          "Level(3D空間)の追加設定",
          "WIN表示の作成",
          "GameOver表示の作成",
          "メインメニューの作成"
        ],
        "ゲームの完成": [
          "ゲームデザイン"
        ]
      },
      "requirements": [
        "PCスペック(OS:Windows, CPU:core-i7以上, メモリ:16GB以上,SSD:1TB以上,GPU:RTX2080以上)",
        "※講師のPC(OS:Windows10, CPU:ryzen9, メモリ:16GB, SSD:1TB, GPU:RTX3070)",
        "それなりのインターネット環境",
        "visual studio 2019 communityをインストールするための無料communityアカウント"
      ],
      "description": "この講座は、海外のゲーム開発者\"Uisco University\"と共同で制作しています。\nコース全体で約8時間の長編講座ですが、本格的なFPSゲームを作る上で必要なノウハウがまとまっています。テーマごとレクチャーを作成しており、1つのレクチャー＝Youtube1本分くらいの感覚でご受講いただくのが良いと思います。\n\n\n【お願い】\n当講座は内容もそうですが、国境を越えてUnreal Engine 5の魅力を多くの方に知ってもらいたいという想いで成り立っています。またこの試みを披露する場としてUdemy様には素晴らしい環境をご提供いただいています。内容だけでなく、この試みにご賛同・ご応援いただける方に当講座をご受講いただきたいと思っています。",
      "target_audience": [
        "Unreal Engine 5で本格的なFPSゲームを作りたい方"
      ]
    },
    {
      "title": "언리얼 엔진4 ( Unreal Engine ) 3D 횡스크롤 게임 만들기",
      "url": "https://www.udemy.com/course/4ue4-3d-t/",
      "bio": "언리얼 엔진4 ( UE4 ) 블루 프린트로 게임 만들기",
      "objectives": [
        "횡스크롤 액션 게임이나 액션 RPG 게임",
        "게임을 만들기 위한 블루프린트 기능 습득",
        "애니메이션 처리",
        "이펙트 처리",
        "사운드 처리",
        "몬스터 인공지능",
        "HUD 사용법"
      ],
      "course_content": {
        "소개": [
          "소개"
        ],
        "언리얼 엔진 기초 강좌": [
          "기초 강좌 만든 배경 및 소개",
          "엔진 소개 및 기능 설명",
          "엔진 설치",
          "새 프로젝트 만들기 및 에디터 살펴 보기",
          "뷰포트 및 뷰포트 이동",
          "오브젝트 배치 및 이동",
          "뷰포트 화면",
          "콘텐츠 브라우저",
          "월드 아웃라이너 및 디테일 패널",
          "외부 모델링 툴에서 Mesh 가져오기"
        ],
        "블루프린트": [
          "블루프린트 소개",
          "레벨 블루프린트",
          "클래스 블루프린트"
        ],
        "횡스크롤 게임 프로젝트 생성": [
          "프로젝트 생성하기"
        ],
        "플레이어 캐릭터": [
          "기본 이동 1",
          "기본 이동 2",
          "캐릭터 이동",
          "캐릭터 회전",
          "캐릭터 카메라 생성",
          "플레이어 캐릭터 모델링 포함된 프로젝트",
          "플레이어 캐릭터 모델링 다운로드",
          "다운로드 받은 캐릭터 모델링 언리얼로 가져오기",
          "플레이어 애니메이션1 - Idle, Run",
          "플레이어 애니메이션2 - 공격",
          "플레이어 점프",
          "배경 추가하기",
          "배경 추가된 프로젝트 다운로드 링크입니다.",
          "배경에 플레이어 캐릭터와 카메라 배치하기",
          "플레이어 캐릭터 공격 충돌 처리"
        ],
        "일반 몬스터 AI": [
          "몬스터 모델링 추가된 프로젝트 다운로드 링크",
          "몬스터 모델링 다운로드",
          "몬스터 모델링 프로젝트로 가져오기",
          "몬스터 데미지 처리",
          "몬스터 플레이어의 정보 수집",
          "몬스터 플레이어 쫏아가기",
          "몬스터 공격",
          "몬스터 무기 적용하기",
          "몬스터 공격 데미지 적용 1",
          "몬스터 공격 데미지 적용 2",
          "몬스터 플레이어 캐릭터 죽는 처리",
          "몬스터 죽는거 처리"
        ],
        "보스 AI": [
          "보스 모델링 추가된 프로젝트 다운로드 링크",
          "보스 모델링 다운로드 및 가져오기",
          "보스 블루프린트 생성 및 애니메니션 세팅",
          "보스 애니메이션 세팅",
          "보스 충돌체 작업",
          "보스 스킬 애니메이션 작업",
          "보스 스킬 충돌체 작업",
          "스테이지 1 몬스터 및 보스 배치",
          "보스 버그 수정"
        ],
        "스테이지 클리어 작업": [
          "스테이지 클리어 체크하기",
          "스테이지 UI Widget 만들기",
          "스테이지 클리어 처리",
          "다음 스테이지로 이동"
        ],
        "메인 메뉴, 스테이지 선택": [
          "메인 메뉴 위젯 만들기",
          "메인 메뉴 버튼 이벤트 처리",
          "스테이지 선택 위젯 만들기",
          "스테이지 선택 화면 Show, Hide 기능 추가",
          "스테이지 버튼 비활성화 시키기",
          "미션 실패 위젯 만들기",
          "미션 실패 그래프 작성",
          "저장, 불러오기 작업",
          "인트로 화면 작업"
        ],
        "사운드": [
          "언리얼 프로젝트에서 사운드 가져오기",
          "버튼 사운드",
          "BGM 사운드",
          "이펙트 사운드1",
          "이펙트 사운드2"
        ]
      },
      "requirements": [
        "언리얼 엔진 기본 인터페이스 사용법",
        "블루 프린트의 기본적인 이해"
      ],
      "description": "이 강좌는 언리얼 엔진4로 어떻게 3D 횡스크롤 액션 게임을 만드는지 가르쳐 드립니다.불루 프린트의 활용법, 애니메이션, 이펙트, 사운드, UI, 몬스터 AI 등을 배우게 됩니다.\n게임 플레이 뿐만 아니라 메뉴, 스테이지 선택, 저장등 게임 전체를 만들게 되고\n코드를 전혀 사용하지 않고 블루프린트만 사용하기 때문에 쉽게 배울 수 있습니다.\n언리얼 엔진4를 처음 접하신분들도 배울 수 있게끔 기초부터 하나씩 쉽게 알려 드립니다.\n감사합니다.",
      "target_audience": [
        "언리얼 엔진으로 게임을 만들고 싶은 모든 분들"
      ]
    },
    {
      "title": "Unreal Engine 5 - Abenteuer Spieleentwicklung mit Blueprints",
      "url": "https://www.udemy.com/course/unreal-engine-5-kurs-1-insel-adventure/",
      "bio": "Entwicklung eines First Person Adventures in UE5 (Blueprints) mit professionellem Inventar für Objekte und Hinweise",
      "objectives": [
        "Einführung in die Unreal Engine 5",
        "Levelaufbau mit Ozean und Quixel Bridge",
        "Character Einbindung",
        "Interaktionen Türen öffnen, Lampe anschalten",
        "Interaktionen Schubladen öffnen, Gegenstände untersuchen",
        "Post Process Material für Objekt-Outline erstellen",
        "Inspectable Objects",
        "Inspectable Object mit Simulate Physics",
        "Blendspace, Animation Blueprint, Nav Mesh Bounds Volume, AI Character",
        "Inspectable Object mit Clue-Objekt",
        "UI HUD Widget",
        "Objekt in das Inventory Structure aufnehmen",
        "Clue-Objekt in das Inventory Structure aufnehmen",
        "Inventory Sublevel erstellen",
        "Inventory GameMenu Widget erstellen und einbinden",
        "Mulifunktionsleiste erstellen und implementieren",
        "UI-Inventory Widget erstellen und implementieren",
        "3D-Objects im Inventar anzeigen",
        "Journal-Einträge/Hints/Clues aufsammeln und archivieren",
        "Türschlüssel benutzen",
        "Speichern & Laden",
        "Taschenlampe",
        "Animation Montage & Animation Blueprint"
      ],
      "course_content": {
        "Einführung": [
          "Einführung in den Kurs",
          "Prolog - Ins kalte Wasser geworfen",
          "UI -Benutzeroberfläche",
          "Character einbinden - Third Person & First Person"
        ],
        "Interactions": [
          "Einführung Basics",
          "Trace for Interactions",
          "Update: Sams Room",
          "Haus am Strand & Lampe an!",
          "Standard Tür Öffnen & Schließen",
          "Schiebetür Offnen & Schließen",
          "Post Process Material - Custom Render Depth"
        ],
        "Noch mehr Interactions": [
          "Kommode mit Schubladen",
          "Trace on Move Character True/False",
          "Hausaufgabe für nachfolgende Lektionen"
        ],
        "Interaction Advanced": [
          "Don`t Panic! Keine Panik!",
          "Inspectable Objects",
          "Inspectable Object mit Simulate Physics"
        ],
        "Animalisches": [
          "Das Trottelhuhn",
          "Der Hirnbohrer"
        ],
        "Interactions - Vorbereitungen für das Inventory": [
          "Inspectable Object mit Clue-Objekt",
          "Inventar-Vorbereitungen",
          "UI HUD Widget erweitern",
          "Objekt in das Inventory Structure aufnehmen",
          "Clue-Objekt in das Inventory Structure aufnehmen"
        ],
        "Inventory - Inventar": [
          "Inventory Sublevel erstellen",
          "Inventory GameMenu Widget",
          "Multifunktionsleiste Widget",
          "UI_MenuRibbon implementieren",
          "UI-Inventory Widget",
          "BP_InventoryObject",
          "MenuPawn Create Inventory",
          "MenuPawn Close Inventory, Next Item",
          "Inventory Previous Item, MenuLevel mit neuem Look and Feel",
          "Inventory Workaround für Objekte mit Pivot Centered",
          "Inventory Objekte rotieren",
          "Inventory Objekte inspizieren",
          "Inventory Adjust Focal Distance",
          "Inventory Discard Object",
          "Inventory Previous/Next Menu Section, Handle Keyboard Inputs"
        ],
        "Journal": [
          "Journal BP_MasterCollectableJournalEntry",
          "Journal BP_CollectableLetter Child Blueprint",
          "Journal UI_Journal Widgets",
          "Journal Open/Create/Close/Scroll & More"
        ],
        "Noch mehr Interaktionen": [
          "BP_Master_InspectableObjectWithClue erweitern mit Text",
          "BP_Master_CollectableObjectWithClue",
          "BP_InventoryObjectClue"
        ],
        "Türschlüssel": [
          "Door Key ohne Inventory",
          "Door Key mit Inventory"
        ]
      },
      "requirements": [
        "Keine Programmierkentnisse vorausgesetzt - Alles wird Schritt für Schritt erklärt",
        "Blueprint Programmierung auch für UE4 geeignet",
        "Der Spaß an der Entwicklung lässt sich nur schwer in Worte fassen"
      ],
      "description": "Alle reden über Nanite und Lumen, aber die UE5 kann noch mehr. In diesem Kurs lernst Du die Interaktionen, die für ein eigenes Adventure notwendig sind. Es werden keine Grundkenntnisse vorausgesetzt. Zu Beginn üben wir, eine Insel mit Ozean in kürzester Zeit mit dem fantastischen Water Plugin aufzubauen (inklusive Nanite / Quixel Bridge). Danach folgt eine kleine Einführung in die Unreal Engine 5 über die Besonderheiten der neuen Benutzeroberfläche und deren vorteilhaften Unterschiede zur Unreal Engine 4. Danach werden wir einen Third Person Character in einen First Person Character umwandeln und diverse andere Dinge wie Lampen an- und ausschalten und Schränke und Türen inklusive Schiebetür öffnen und schließen. Mit einen permanenten Trace finden wir Objekte, mit denen man interagieren kann. Wir erstellen ein eigenes Post Process Material für eine Outline von interaktiven Objekten. Dieser Kurs wird ständig erweitert, damit jeder schon mal durchstarten kann. In den darauf folgenden Kapiteln werden wir Tiere mit AI erstellen, Hinweise und Gegenstände verstecken, die wir dann in unserem Inventory aufnehmen, nachlesen und benutzen können. Das Inventar wird aufwändig in einem eigenen 3D-Level erstellt. Und natürlich gibt es auch eine Spiel speichern und Spiel laden Funktion. Wir werden Schritt für Schritt ein kleines Abenteuer Spiel aufbauen.",
      "target_audience": [
        "Einsteiger, Anfänger und Fortgeschrittene mit Leidenschaft für Unreal Engine",
        "Alle, die sich für interaktive Spieleentwicklung interessieren",
        "Alle, die ein professionelles Inventar mit Gegegenständen und Hinweisen erstellen wollen",
        "Alle, die Save & Load Game im Level verwenden möchten"
      ]
    },
    {
      "title": "はじめての次におすすめ【Unreal Engine 5】パルワールド風3Dバトルアクションゲームを作ってみよう",
      "url": "https://www.udemy.com/course/unreal-engine-53d/",
      "bio": "初心者向けのゲーム制作講座です。リアリスティックなキャラクター・オープンワールドを使ってアクションゲームを1から作ります。Blueprint・攻撃システム・ユーザーインターフェースなど3Dゲーム開発に必要な要素をしっかり体験できます。",
      "objectives": [
        "Unreal Engine 5のインストール方法",
        "Unreal Engine 5の基本操作",
        "Unreal Engine 5を通じた3Dゲーム開発",
        "Blueprint・ユーザインターフェースの作成"
      ],
      "course_content": {
        "紹介": [
          "紹介",
          "コースの概要"
        ],
        "環境構築": [
          "Unreal Engine5のインストール",
          "プロジェクトの作成",
          "プロジェクトの言語設定",
          "UEの基本操作"
        ],
        "メインキャラクターの作成": [
          "成果物の確認",
          "アセットの入手",
          "メインキャラクターの入れ替え",
          "アニメーション：横移動",
          "アニメーション：ジャンプ",
          "インプット設定：左クリックを有効化",
          "アニメーション：攻撃",
          "攻撃エフェクトの作成",
          "ブループリント：攻撃システム",
          "バグ修正①：連続攻撃のタイミング",
          "バク修正②：移動とジャンプ"
        ],
        "敵キャラの作成": [
          "成果物の確認",
          "AIの作成",
          "アセットの入手",
          "移動アニメーション",
          "AI追跡",
          "攻撃アニメーション",
          "バグ修正：連続攻撃",
          "ヒットアニメーション(敵キャラ)",
          "デスアニメーション(敵キャラ)",
          "バグ修正①：デスアニメーションとAI機能の競合",
          "バグ修正②：デスアニメーションと攻撃アニメーションの競合"
        ],
        "敵キャラがプレイヤーにダメージを与える": [
          "コリジョンの設定",
          "プレイヤーのヒット・デスアニメーション",
          "バグ修正①：プレイヤーのデスアニメーション",
          "バグ修正②：敵キャラの攻撃コリジョン(前半)",
          "バグ修正③：敵キャラの攻撃コリジョン(後半)"
        ],
        "WIN・LOSEの表示": [
          "WIN表示の作成",
          "LOSE表示の作成"
        ],
        "ゲームシステムの完成": [
          "ゲームシステムの完成"
        ],
        "ゲームの完成": [
          "オープンワールドの入手",
          "ゲームの完成のご挨拶"
        ]
      },
      "requirements": [
        "プログラミンの知識は不要です。必要なことはすべてこの講座内で学習できます。",
        "Unreal Engine推奨スペックのPCが必要です。(CPU:Corei5以上,メモリ16GB以上、GPU:RTX3060以上を推奨)",
        "ご自身のPC（Windows）をお持ちの方。",
        "それなりのインターネット環境"
      ],
      "description": "当講座はUnreal Engine 5を使った【パルワールド風アクションゲーム】制作講座です。\n内容は初心者向け・ビギナー向けとなっており、そこそこのスペックのPCは必要ですが、事前知識なしでご受講いただけます。\n\n\n当コースは、シンプルなゲームを作る中で、知識だけでなく、Unreal Engineでゲーム開発することの魅力をご体験いただき、【楽しかった】と言っていただきくことが本当の目的です。\nご一緒にUE5を楽しみながらゲーム開発をやりましょう！",
      "target_audience": [
        "はじめてUnreal Engine5をさわる方",
        "Unreal Engine初学者",
        "Unreal Engine5でゲーム開発をしたい方",
        "効率よくUnreal Engine5の基礎を学習したい方"
      ]
    },
    {
      "title": "Creando un Videojuego lateral desde 0 en Unreal Engine",
      "url": "https://www.udemy.com/course/creando-un-video-juego-lateral-desde-0-en-unreal-engine-4/",
      "bio": "Crearas un vídeo juego completo",
      "objectives": [
        "Juego de acción de desplazamiento lateral o juego de rol de acción",
        "Aprende la función blueprint para hacer un juego",
        "Procesamiento de animación y efectos",
        "Procesamiento de sonido Monster AI Cómo usar HUD y mas"
      ],
      "course_content": {
        "PRESENTACIÓN DEL CURSO": [
          "Este es el juego que vamos a crear"
        ],
        "Actualizado 4.25 Implementando Personaje": [
          "TRAILER DEL JUEGO",
          "Introducción",
          "Creando un nuevo Proyecto",
          "Clase 1 - Movimientos del personaje",
          "Clase 2 - Movimientos del personaje",
          "Clase 3 - Movimientos del personaje",
          "Clase 4 - Rotacion y agregando Cámara Externa",
          "Clase06 Importando Personaje a Mixamo y a Unreal",
          "Clase07 Agregando personaje y estados Idle y Run",
          "Clase08 Ataque del jugador",
          "Clase09 Sistema de Salto",
          "Clase10 MovimientoCamara",
          "Clase11 Agregando Espada al Personaje",
          "Clase12 Creando Daño con la espada"
        ],
        "Actualizado 4.25 Creando un AI Básico": [
          "Clase13 Importar a Mixamo y Unreal AI Base",
          "Clase14 Importando animation de muerte y daño color",
          "Clase15 Seguir al Personaje",
          "Clase16 Ataque AI Base",
          "Clase17 Agregando un arma AI",
          "Clase18 Sistema de daño 01",
          "Clase19 Sistema de daño 02",
          "Clase20 Muerte del Personaje",
          "Clase21 Muerte del Enemigo Básico",
          "Clase22 Aplicando animación de reacción al Personaje y Enemigo Extra pedido"
        ],
        "Actualizado 4.25 Creando un Boss Final": [
          "Clase23 Descargando e Importando Enemigo Final",
          "Clase24 Preparando Boss",
          "Clase25 Agregando los Tag y Destruir Enemigos",
          "Clase26 Ataque Especial Boss",
          "Clase27 Boss Final"
        ],
        "Actualizado 4.25 Creando el Game Mode": [
          "Clase 28 Creando el Game Mode",
          "Clase 29 Parar al enemigo básico y al personaje",
          "Clase30 Creando Hud Cambio de nivel"
        ],
        "Actualizado 4.25 El Menú, Interfaces": [
          "Clase 34 Inicio Menu Principal",
          "Clase 35 Botones Activando",
          "Clase 36 Creando el Hud Seccion de niveles_02",
          "Clase 36 Game instace Menu",
          "Clase 37 Activando botones de niveles",
          "Clase 38 Creación pantalla que haz fallado",
          "Clase 39 Clase pantalla de carga",
          "Clase 40 Creando mapa de niveles",
          "Clase 41 Funciones de los botones HUD Muerto",
          "Clase 42 Intro Game",
          "Clase 43 - Sonidos a los Menus",
          "Clase 44 - Cambio de nivel"
        ],
        "Actualizado 4.25 Sonidos y Efectos": [
          "Clase 45 - Agregando Archivos",
          "Clase 46 - Agregando nuevas animaciones",
          "Clase 47 - Efectos y Sonidos",
          "Clase 48 Sonidos de ataque y muerte",
          "Clase 49 Sonidos Boss",
          "Clase 50 Descargando animaciones Ataque, efectos y sonidos",
          "clase 50 Efectos Boss",
          "clase 51 Corrigiendo animaciones",
          "Clase 52 Cámara lenta"
        ],
        "Opcional Battle Sound System": [
          "Clase 52 - Implementación Battle SoundSystem"
        ],
        "Actualizado 4.25 HUD Personajes, Enemigos": [
          "Clase 56 Creando HUD Principal",
          "Clase 57 Seguimos configurando",
          "Clase 58 Photoshop HUD",
          "Clase 59 Importando Imágenes a Unreal",
          "CLASE 60 HUD Enemigo Básico"
        ],
        "Actualizado 4.25 Funciones y Configuraciones": [
          "Clase 61 Sistema de Guardado",
          "Clase 62 Opciones de Gráficos",
          "Clase 63 Probando Gráficos.",
          "Clase 64 Creando el Pause",
          "Clase 65 Sistema de Curación",
          "Clase 66 Agregando el Efectos al Sistema de curación"
        ]
      },
      "requirements": [
        "Uso básico de Unreal Engine Conocimientos básicos de Blueprints",
        "Este es mi primer curso, así que les pido que tengan paciencia conmigo. Si cree que merezco algo menos 5 estrellas,"
      ],
      "description": "Este curso te enseña a crear un juego de acción de desplazamiento lateral en 3D con Unreal Engine. Aprenderás a usar Blueprint, animación, efectos, sonido, interfaz de usuario, IA basicos. crear un boss y más.\nAdemás del juego, puedes crear todo el juego, incluido el menú, la selección de escenario y el almacenamiento.\nEs fácil de aprender porque solo usa planos.\nEn este curso aprenderás las bases de Unreal Engine y cómo desarrollar un videojuego de acción de desplazamiento lateral en 3D. Tanto si empiezas con Unreal Engine como si ya sabes manejarlo\nAprenderás a utilizarla interfaz y manejo de Unreal Engine, blueprints, iluminación, personaje y mas, añadir sonidos y partículas para efectos, crear el enemigo basicos y un boss o jefe final, menú del juego, guardar y cargar, visión nocturna y linterna, cinemáticas, interacción con objetos (coger llaves para abrir puertas, resolver puzzles y enigmas, interactuar con cualquier otro objeto...), creación de nivel, etc. Y finalmente compilar el juego para poderlo sacar al mercado\nDesde lo básico, es fácil distinguir uno por uno para que incluso aquellos que son nuevos en Unreal Engine puedan aprenderlo.\nGracias\n\n\nTambien mostraremos complementos  de ayuda para el desarrollo de videojuegos, que te ahorraran mucho tiempo y dificultad en esas areas.\nte presentamos dos de nuestros sistemas que estan publicados en MarketPlace de Unreal engine\nBATTLE SOUND SYSTEM V2\nEl sistema de juego AAA más profesional, ya famoso en varios juegos por su fácil implementación, podrás utilizar el sistema en todo tipo de juegos con tan solo unos clics y tendrás toda una lista de mecánicas para tus partidas.\n\n\nLANGUAGE TRANSLATOR + SUBTITLES WITH VOICES\nFinalmente tenemos el mejor sistema de traducción disponible para tus juegos, puedes traducir tu menú principal de la manera más fácil, el sistema es muy extensible, ahora no sufrirás en cómo traducir tu juego, también hemos incluido un sistema más que es conectado con nuestro sistema de traducción, el sistema de subtítulos está incluido en este sistema de super paquete que es muy importante para sus juegos, no solo traduce letras, también traduce sus logotipos más audios a muchos idiomas.",
      "target_audience": [
        "Cualquiera que quiera hacer juegos con Unreal Engine",
        "Por qué no te unes a este curso y me acompañas mientras construyo? Será un proceso divertido y continuo y tú puedes ayudarme a hacerlo genial.",
        "¡Únete ahora y comencemos!"
      ]
    },
    {
      "title": "EXPERTO en Shader Graph con Unity",
      "url": "https://www.udemy.com/course/experto-shader-graph-unity-mariano-sosa/",
      "bio": "Aprende contenido AVANZADO como: Shaders, Materiales, Technical Art, URP, Shader Graph, Sub Graph, C#, Optimización.",
      "objectives": [
        "Crear shaders optimizados para dispositivos móviles y otras plataformas",
        "Manejar todas las herramientas que ofrece Shader Graph",
        "Comprender conceptos básicos de Shaders, para saber cómo sacarle el máximo provecho",
        "Prácticas aplicables al mundo real que te servirán para afianzar todo lo estudiado"
      ],
      "course_content": {
        "Introducción al curso": [
          "Instructor: Mariano Sosa",
          "Únete a la comunidad de Discord con más estudiantes",
          "¿Qué es un Shader?",
          "Instalación",
          "Laboratorio de Prueba",
          "Conociendo Shader Graph (Parte 1/2)",
          "Conociendo Shader Graph (Parte 2/2)",
          "Material de estudio"
        ],
        "Práctica 01: Dissolve": [
          "Introducción",
          "Noise",
          "Glowing Edges",
          "Direction",
          "Script C# (Parte 1/2)",
          "Script C# (Parte 2/2)"
        ],
        "Práctica 02: Triplanar": [
          "Introducción",
          "Snow",
          "Multiple Textures",
          "Triplanar Sub Graph"
        ],
        "Práctica 03: Vertex Movement": [
          "Introducción",
          "Movement",
          "Rotation",
          "Random Offset"
        ],
        "Práctica 04: Dither": [
          "Introducción",
          "Dither",
          "Camera Distance"
        ],
        "Práctica 05: Water": [
          "Introducción",
          "Movement",
          "Waves",
          "Foam",
          "Depth"
        ],
        "Práctica 06: Hologram": [
          "Introducción",
          "Hologram",
          "Glitch",
          "Script C#"
        ],
        "Práctica 07: Game Card": [
          "Introducción",
          "Front and Back",
          "Content",
          "Hologram",
          "User Interface",
          "Scriptable Objects",
          "Script C# (Parte 1/2)",
          "Script C# (Parte 2/2)"
        ],
        "Más Prácticas!": [
          "Introducción",
          "Fornite Galaxy",
          "Distance Fog",
          "Fish",
          "Vertex Color",
          "Billboard",
          "Kirby Effect",
          "Potion",
          "Próximos Shaders..."
        ]
      },
      "requirements": [
        "Conocimientos AVANZADOS de Unity",
        "Ganas de aprender, practicar, y superarse",
        "Todas las herramientas utilizadas en el curso son gratuitas, y los materiales de trabajo estan incluidos."
      ],
      "description": "¿Eres artista y quieres darle un toque único a tus creaciones?\n¿Quieres crear efectos especiales para tu videojuego pero no sabes por dónde empezar?\n¿Estas interesado en aprender técnicas avanzadas de optimización para tus proyectos?\nSi la respuesta a alguna de estas preguntas es Sí, entonces este curso es para ti.\n\n\nLa programación de Shaders es una de las aptitudes más valoradas por los estudios de videojuegos, ya que permiten lograr variados efectos visuales de manera optimizada e incluso ahorrarse procesos como texturizado, animación y post procesado. Y es que un Technical Artist con sólidos conocimientos en su materia puede llegar a ganar como mínimo entre 3000 y 5000 USD$ dentro de un estudio de videojuegos AAA.\n\n\nBienvenidos al Curso completo en Shader Graph con Unity: Sé un Experto.\nEn este curso AVANZADO , orientado a desarrolladores con experiencia en Unity, aprenderemos a trabajar con Shader Graph, una herramienta nativa de Unity que nos permite programar de manera visual cualquier tipo de efecto que se nos ocurra.\n\n\nComo introducción, veremos una pequeña parte teórica para adentrarnos en la materia, y luego pasaremos directamente a la práctica.\nDurante las clases, iremos desarrollando diferentes Shaders desde cero, explicando paso a paso cómo funcionan y cuál es la mejor forma de optimizarlos.\nAplicaremos buenas prácticas, y diferentes formas de lograr el mismo efecto, para al final del curso ganar soltura con esta poderosa herramienta que hoy por hoy nos puede permitir un puesto de trabajo en la industria de los videojuegos.\n\nLos proyectos que realizaremos serán:\nDissolve: crearemos un efecto de disolución, modificando los colores, la dirección, y controlando sus parámetros desde código.\nTriplanar: aprenderemos cómo crear nieve y texturizar un modelo sin importar la orientación del objeto, para luego ver como modularizar la creación de shaders.\nVertex Movement: animaremos una moneda utilizando un solo shader, y utilizaremos su posición en el mundo para generar variaciones en sus propiedades.\nDither: implementaremos una técnica para trabajar con elementos translúcidos de manera optimizada.\nWater: crearemos un efecto de agua, controlando sus colores, animando olas, y generando bordes al tocar otros elementos.\nHologram: desarrollaremos un efecto de holograma, le agregaremos distorsión y manejaremos su interacción desde código.\nGame Card: crearemos un sistema de cartas usando como ejemplo a Yu-Gi-Oh!, donde haremos un shader base para todas las cartas, y completaremos toda su información utilizando Scriptable Objects. Todo, utilizando un solo material!\nEl último bloque estará compuesto por shaders solicitados por los alumnos del curso. Entre algunos de los efectos se encuentran:\nSkin de Galaxy de Fornite\nFog en base a la distancia de la cámara\nAnimar un pez, controlando todas las variables para lograr el efecto deseado\nPintar un mesh y mezclar texturas utilizando Vertex Color\nBillboard, para que un mesh siempre mire en dirección a la camara\n\n\nOs invitamos a que se paséis por el curso, para revisar las clases gratuitas disponibles, y si al adquirir el curso te arrepientes por algún motivo, recuerda que tienen una garantía de 30 días para que te devuelvan el dinero.\nAsí que no hay excusas. Si quieres aprender y formarte para hacerte un lugar en la industria de los videojuegos, os espero en el curso.\n\n\n¡Muchas gracias!",
      "target_audience": [
        "Artistas, Technical Artist y Programadores Unity",
        "Cualquier desarrollador Unity que quiera aprender a trabajar con Shaders",
        "En resumen: toda persona interesada en Shaders"
      ]
    },
    {
      "title": "Domina la Automatización Web con Python y Selenium",
      "url": "https://www.udemy.com/course/domina-la-automatizacion-web-con-python-y-selenium/",
      "bio": "Python y Selenium: Automatización, PyTest, Interacción Web y Mejores Prácticas",
      "objectives": [
        "Dominar Python para testing: Aprende la sintaxis básica y estructuras de datos esenciales.",
        "Explorar PyTest a fondo: Desde estructurar tests hasta manejo avanzado de excepciones.",
        "Automatizar con Selenium: Navegación, manipulación de elementos y búsquedas avanzadas.",
        "Interacción avanzada con la web: Maneja elementos como dropdowns y valida cambios dinámicos.",
        "Cross-browser testing: Asegura compatibilidad y rendimiento en múltiples navegadores.",
        "Implementar Page Object Model: Organiza tus tests para mayor mantenibilidad y claridad.",
        "Buenas prácticas en automatización: Incluye pruebas multi-navegador y generación de reportes con Allure.",
        "Aplicación práctica: Proyecto final para implementar lo aprendido en un caso real."
      ],
      "course_content": {
        "Introducción": [
          "Objetivo del curso",
          "VSCode: Nuestro IDE para este curso",
          "VSCode: Nuestro IDE para este curso: Extra",
          "Instalando nuestras herramientas y un primer test sencillo para probar",
          "Instalando nuestras herramientas y un primer test sencillo para probar: Extra"
        ],
        "Fundamentos de PyTest para Testing con Selenium": [
          "¿Qué es PyTest?",
          "Fixtures en PyTest",
          "Anatomía de un caso de prueba con PyTest y Selenium",
          "Markers",
          "Data Driven Test con PyTest",
          "Assertions con PyTest",
          "Manejo de Excepciones"
        ],
        "Selenium y automatización en Python": [
          "¿Qué es Selenium?",
          "Locators y el Find Element en Python",
          "Locators y el Find Element en Python: Extra",
          "Encadenando locators para ubicar elementos web",
          "ActionChains: Una forma de hacer interacciones poco convencionales con Selenium",
          "Esperas Implícitas y Explícitas"
        ],
        "Mejores prácticas": [
          "Empezando a entender el Page Object Model: La BasePage",
          "Conectando la BasePage, una clase POM y un Test - Parte 1",
          "Conectando la BasePage, una clase POM y un Test - Parte 2",
          "Expandiendo nuestra BasePage con más acciones",
          "Validando un texto que aparece con delay luego de tocar un botón de ID dinámico",
          "Markers y validación con acciones Hover implementadas con POM",
          "Seleccionando un checkbox: Mejores prácticas, F-Strings y más!",
          "Validando Radio Buttons y sus mejores prácticas",
          "Ejercicio: Eligiendo una opción de un dropdown y validando las opciones.",
          "Ejercicio: Validando un elemento dentro de un popup",
          "Ejercicio: Ubicando una celda dentro de una tabla dinámica y validándola",
          "Ejercicio: Ubicando una celda dentro de una tabla estática y validándola",
          "Ejecutando nuestras pruebas con distintos browsers"
        ],
        "Reportes y organización de nuestras pruebas": [
          "Instalando Allure",
          "Instalando Allure: Recurso",
          "Los decoradores de Allure Organizando nuestros tests al próximo nivel",
          "Dando un mejor formato a los pasos de nuestras pruebas con Allure",
          "Análisis y decisiones para mejorar nuestro archivo con pruebas"
        ],
        "Toques finales a nuestro proyecto y conclusión": [
          "Retocamos todos los tests y vemos más en profundidad los reportes de Allure",
          "Repaso y conclusión final"
        ],
        "Despedida": [
          "Clase extra"
        ]
      },
      "requirements": [
        "Nociones básicas de programación: Ideal si ya trabajaste con código o completaste nuestro curso de \"Programación para Testers\".",
        "ntendimiento inicial de testing de software: Beneficioso si has realizado el curso de \"Introducción al Testing de Software\".",
        "Hardware y software adecuados: Una computadora con acceso a internet y VSCode instalado para seguir las prácticas y ejemplos en tiempo real.",
        "Un espacio de estudio óptimo: Un ambiente tranquilo y sin distracciones para maximizar el aprendizaje y la concentración durante el curso."
      ],
      "description": "Este curso integral de \"Python y Selenium: Automatización, PyTest, Interacción Web y Mejores Prácticas\" está meticulosamente diseñado para llevarte de tener una base en programación a convertirte en un experto en la automatización de pruebas web. A través de una serie de módulos cuidadosamente estructurados, te sumergirás en el mundo de Python y Selenium, dos de las herramientas más poderosas y demandadas en el ámbito de Quality Assurance (QA) y automatización de pruebas.\n\n\nComenzaremos estableciendo una sólida base en Python, enfocándonos en los aspectos más relevantes para el testing, como la sintaxis básica, estructuras de datos, y el control de flujo. Con PyTest, profundizarás en la creación de tests estructurados, aprendiendo a utilizar fixtures para un setup y teardown eficiente, markers para categorizar tests, y técnicas de Data Driven Testing para maximizar la cobertura de tus pruebas.\nLa sección de Selenium transformará tu manera de interactuar con la web. Desde navegar por páginas hasta manipular y validar elementos web complejos, te equiparemos con habilidades prácticas para realizar tests robustos y confiables. Además, introduciremos el modelo Page Object para organizar tus scripts de manera eficiente, mejorando la mantenibilidad y legibilidad del código.\nEnfocándonos en las mejores prácticas, te guiaremos a través de estrategias de cross-browser testing, asegurando que tus aplicaciones funcionen sin problemas en diferentes entornos. Con la integración de Allure para la generación de reportes, tendrás a tu disposición una poderosa herramienta para documentar y analizar los resultados de tus pruebas.\nAl concluir este curso, no solo dominarás las herramientas y técnicas esenciales para la automatización de pruebas web, sino que también habrás completado un proyecto final que consolida todo lo aprendido, preparándote para enfrentar los desafíos del mundo real con confianza y competencia.",
      "target_audience": [
        "Profesionales de QA y testing de software que buscan profundizar sus conocimientos en automatización de pruebas utilizando Python y Selenium, ampliando así sus habilidades y oportunidades de carrera.",
        "Desarrolladores de software interesados en entender y aplicar prácticas de testing automatizado para mejorar la calidad y fiabilidad de sus aplicaciones.",
        "Estudiantes de ciencias de la computación y campos relacionados que deseen adquirir habilidades prácticas en automatización de pruebas, un requisito esencial en el mercado laboral actual.",
        "Testers manuales que buscan hacer la transición hacia roles de automatización, ampliando su rango de habilidades y conocimientos en las últimas herramientas y prácticas del sector.",
        "Aficionados a la tecnología y autoaprendices con un interés particular en la automatización de pruebas web y que deseen sistematizar su conocimiento y aplicarlo en proyectos personales o profesionales."
      ]
    },
    {
      "title": "Aprende a crear un videojuego Idle Clicker en 2D con Unity",
      "url": "https://www.udemy.com/course/aprende-a-crear-un-videojuego-idle-clicker-en-2d-con-unity/",
      "bio": "Aprende las bases para crear un videojuego de tipo Idle Clicker en 2D con Unity y el lenguaje de programación C#.",
      "objectives": [
        "Aprenderás a programar videojuegos con Unity 3D utilizando el lenguaje de programación C#.",
        "Aprende las bases de un juego Idle Clicker.",
        "Potenciarás tus conocimientos de Programación con C#.",
        "Aprenderás la estructura de un videojuego.",
        "Aprenderás a utilizar patrones de Programación de nivel intermedio.",
        "Comprender la reutilización de Objetos para mejorar el rendimiento de un videojuego.",
        "Conocerás como crear una tienda dentro del juego."
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos en el manejo de Unity y Programación con C#",
        "Unity versión 2020.3",
        "Tener un ordenador o portátil que pueda correr Unity"
      ],
      "description": "Bienvenidos a todos al nuevo curso de desarrollo de videojuegos orientado a la creación de un Idle Clicker en 2D con Unity 2020.3 donde vas a aprender las bases para poder crear un juego de unos de los géneros más jugados en dispositivos móviles, consolas y PC. Además, vamos a usar el lenguaje de programación de C#, el cual vamos a practicar con varios ejemplos reales del desarrollo de un Idle Clicker.\nA lo largo de este curso vamos a implementar algunos sistemas que conformar un Idle Clicker. Para este proyecto, tomaremos como modelo al juego Tap To Riches, uno de los Idle Clicker más jugados en dispositivos móviles.\nLa idea del curso es entender como se implementan mecánicas a este tipo de juegos, y para ello veremos temas básicos e intermedios de programación. Este curso espera tomar tus conocimientos actuales y potenciarlos a medida que avanzamos en las secciones.\nAlgunos de los temas que veremos a detalle son:\nCreación de negocios\nTrabajar con paneles\nTrabajar con instancias.\nCreación de una tienda de asesores.\nAñadir un sistema de misiones.\nGuardar y cargar datos.\nComprender como trabajar con la Interfaz de Usuario (UI).\nMejorar el rendimiento del videojuego empleando el patrón Object Pooler.\nUsar el Singleton Pattern para mejorar la comunicación entre clases.\nEl curso está orientado a estudiantes de nivel (Básico - Intermedio) con conocimientos de Unity y C#, ya que trataremos muchos temas de programación. Iremos paso a paso, construyendo el juego desde cero, explicando todo a detalle.\n¡Nos vemos en clase!\n¡Empecemos a crear videojuegos!",
      "target_audience": [
        "A todos los estudiantes que quieran potenciar sus conocimientos de Programación en C#.",
        "A todos los estudiantes que deseen aprender a crear su primer videojuego de tipo Idle Clicker",
        "A todos los estudiantes que quieran aprender mecánicas reales de Videojuegos.",
        "A todos los estudiantes que quieran profundizar en el motor de videojuegos de Unity."
      ]
    },
    {
      "title": "Crie Jogos 2D com Godot 4 e GDScript + Start Game Design",
      "url": "https://www.udemy.com/course/crie-jogos-2d-com-godot/",
      "bio": "Curso de Desenvolvimento de Jogos com Godot: Aprenda desde o zero, até a concepção de um retrogame completo.",
      "objectives": [
        "Criação de um jogo 2D com Godot 4.3 (Arkanoid/Breakout)",
        "Linguagem e Lógica de Programação (GDScript)",
        "Estrutura de Nós e Cenas da Godot",
        "Criar e Gerenciar Fases e Níveis de Jogo",
        "Programação Orientada a Objetos com GDScript",
        "Implementação de variadas mecânicas e sistemas de jogos",
        "Técnicas para Planejamento de Jogos"
      ],
      "course_content": {},
      "requirements": [
        "Não é necessário ter experiência com programação. Você aprenderá tudo o que precisa."
      ],
      "description": "Se você está em busca de um guia para Criar Jogos 2D com Godot , este curso é o material que você precisa. Em Crie Jogos 2D com Godot 4 e GDScript + Start Game Design   , você aprenderá, desde o básico, como criar jogos utilizando uma das ferramentas mais promissoras da atualidade: a Godot. Essa game engine, totalmente gratuita e de código aberto, vem conquistando cada vez mais desenvolvedores ao redor do mundo e agora você pode aprendê-la de forma lúdica e descomplicada.\nA Godot é um programa de criação de jogos, que permite desenvolver em 2D e 3D, e exportar para plataformas como Steam e Google Play. Desenvolvida por especialistas de diversas áreas e aperfeiçoada com auxilio de sua própria comunidade, a Godot cresce cada vez mais e se estabelece como uma ferramenta poderosa para o desenvolvimento de jogos independentes (indie games).\nEm nosso curso, iniciamos realmente do zero, para que qualquer pessoa possa dar seus primeiros passos na área. Por isso, na primeira seção, exploramos alguns conceitos importantes do desenvolvimento de jogos, para que você possa começar sabendo como as coisas funcionam.\nNa sequência, você conhecerá a Godot, aprendendo a baixá-la em seu computador e conhecendo sua interface através de um tour explicativo.\nEm seguida, mergulharemos na programação de jogos com GDScript, a linguagem de programação da Godot, inspirada em Python e orientada a objetos. Todos os conceitos serão apresentados de maneira simples e acessível, permitindo que até mesmo aqueles que nunca programaram antes possam acompanhar e aprender. Nessa etapa, você entenderá como funciona a estrutura de cenas e nós da Godot, com uma abordagem que estimulará gradualmente sua lógica de programação.\nApós essa introdução, focaremos na criação de um jogo completo, aplicando todos os conhecimentos adquiridos. O projeto será inspirado no clássico Arkanoid (ou Breakout), um jogo ideal para quem está começando no desenvolvimento de jogos. Durante as aulas, passaremos por etapas fundamentais como a criação de fases, movimentação de objetos, colisões, destruição de blocos, pontuação, recordes, vidas, game over, geração de itens, sistemas de power-up, sons, entre outros.\nPor fim, você receberá uma cópia do nosso livro em formato digital, o Start Game Design. Um guia para aprender a estimular, desenvolver e elaborar ideias de jogos. O Start Game Design te proporcionará um poder de criação valioso para embarcar de vez nessa jornada com criação de jogos.\nE então, vamos nessa? Inscreva-se e comece agora mesmo a criar seus jogos!",
      "target_audience": [
        "Pessoas que querer aprender a criar jogos 2D",
        "Pessoas que querem aprender GODOT",
        "Desenvolvedores de todas as áreas que desejam aprender a criar jogos",
        "Iniciantes em programação que desejam aprender a programar jogos",
        "Programadores de todos os níveis que desejam aprender a criar jogos",
        "Pessoas que buscam uma ferramenta gratuita para criar jogos",
        "Pessoas que buscam uma alternativa a Unity"
      ]
    },
    {
      "title": "Criação de Jogos 2D e 3D na GODOT Completo - 6 Cursos em 1",
      "url": "https://www.udemy.com/course/godotacademy/",
      "bio": "Aprenda a criar o Clássico Freeway da Atari, um RPG, uma versão 3D de Flappybird, Fuga do Labirinto e um Jogo de Tiro",
      "objectives": [
        "Criação de Jogos 2D",
        "Criação de Jogos 3D",
        "Desenvolvimento de Games 2D E 3D com GODOT",
        "GODOT 3.2",
        "GDSCRIPT",
        "Modelagem 3D GODOT",
        "Curso de GDSCRIPT",
        "Criação do game Freeway da Atari",
        "Criação de um RPG na GODOT estilo The Legend of Zelda",
        "Criação de um game de tiro em Primeira pessoa (FPS)"
      ],
      "course_content": {
        "Seja Bem vindo(a)": [
          "O que você vai aprender?",
          "Monitoria"
        ],
        "Aprenda a Programar em GDSCRIPT do Zero": [
          "Introdução",
          "Variáveis",
          "Operadores Aritméticos",
          "Operadores Lógicos",
          "Comandos IF e ELSE",
          "Arrays",
          "Loops",
          "Funções",
          "Dicionário",
          "Exercícios de Revisão"
        ],
        "Freeway (2D) - Multiplayer Manual": [
          "Introdução",
          "Construindo o P1",
          "Programando o P1",
          "Sinais",
          "Configurando o P2",
          "Carros",
          "Linha da chegada",
          "Construindo a Main",
          "Gerando Carros",
          "HUD",
          "Reinício"
        ],
        "Find the Six (2D) - The Legend of Zelda + Bomberman": [
          "Configurando o Player",
          "Movimentos do Player",
          "Animando o Player",
          "Tileset: solo",
          "Tileset: objetos",
          "Ideias cenário",
          "Camera",
          "Construindo Inimigo",
          "Programando Inimigo",
          "Bombas",
          "Disparando Bombas",
          "Tesouros",
          "Criando HUD",
          "Programando HUD",
          "Limites da Tela",
          "Gerando Inimigos",
          "Lógica dos Tesouros",
          "Mixagem de som e fim de jogo"
        ],
        "First Bird (3D)": [
          "Introdução ao 3D",
          "Passaro",
          "Construindo canos",
          "Programando canos",
          "HUD",
          "Main",
          "Gerando canos"
        ],
        "3 Minutes (3D)": [
          "Player",
          "Caixa",
          "GridMap",
          "Labirinto",
          "HUD",
          "Programando HUD",
          "Lógica",
          "Fim de Jogo",
          "Mixagem de som"
        ],
        "Lunar FPS (3D) - Jogo de Tiro em Primeira Pessoa (FPS)": [
          "Criando o Cenário",
          "Processo Criativo do cenário",
          "Construindo o Player",
          "Programando Direções",
          "Movimentos",
          "Atirando",
          "Construindo Inimigo",
          "Programando Inimigo",
          "Powerups",
          "Construindo HUD",
          "Programando HUD",
          "Fim de Jogo",
          "Gerando Objetos",
          "Mixagem de som"
        ]
      },
      "requirements": [
        "Não há pré-requisito para este curso"
      ],
      "description": "Godot é uma game engine de código aberto voltada para a criação de jogos 2D e 3D multiplataformas.\nSe você tem pesquisado sobre como criar jogos, com certeza já percebeu a grande quantidade de ferramentas disponíveis. Neste artigo eu vou te apresentar à Godot Game Engine, uma ferramenta que tem crescido rapidamente em popularidade.\nA Godot Engine é 100% gratuita, tem código aberto e uma licença MIT bem permissiva, ou seja, não são cobrados royalties e todos os direitos sobre o jogo são do desenvolvedor.\nAo longo deste curso, você aprenderá as principais funcionalidades deste programa, criando 5 jogos:\nFreeway : Clássico game da Atari onde duas galinhas precisam atravessar a rua, o primeiro jogador que fizer 10 pontos ganha.\nFind the Six : Game que mescla a ação de inimigos perseguidores de The Legend of Zelda, com a mecânica de bombas do clássico Bomberman, neste game você precisa encontrar 6 tesouros enquanto enfrenta amebas azuis que lhe atacarão.\nFirst Bird : E se você pudesse jogar Flappybird de um outro ângulo? Neste game, você é o Flappbyird e vê o mundo através dos olhos dele, cuidado com os canos!.\n3 Minutes : Você está em um enorme labirinto e tem exatamente 3 minutos para encontrar uma caixa com a chave para sair, sempre que uma delas é gerada, ela tem um tempo de vida de 10 segundos, corra!.\nLunar FPS: Neste game de tiro em primeira pessoa, você é uma astronauta e está em uma base lunar, durante a sua viagem será possível se deparar com alguns aliens que irão persegui-lo e atacá-lo, mate-os com a sua sniper e continue a sua missão de explorãção.\nNa Godot, praticamente tudo é um Node (nó). Um node pode representar um sprite, uma animação, um som ou praticamente qualquer outra coisa no seu projeto.\nTodos os Nodes tem algumas coisas em comum:\nName: Cada node tem um nome para que possa ser chamado;\nProperties: todo node tem um conjunto de propriedades que define como ele se comporta, sua aparência, etc;\nCallback: cada node tem uma função de callback can pode ser processada a cada frame;\nExtandable: fazendo uso de código, qualquer node pode ganhar propriedades e funcionalidades adicionais;\nUma outra propriedade fundamental dos Nodes é que eles podem ser associados a outros nodes como “filhos” (“Children”), criando uma estrutura de árvore:\nNuma estrutura de árvore como da imagem acima, cada node pode ter apenas um “pai” (“parent”) e um número qualquer de filhos. Um node pode herdar propriedades de seu node-pai, permitindo que você organize-os em uma ordem lógica.\nUm grupo de nodes organizados como uma árvore recebe o nome de Scene (“cena”). Na Godot, scenes podem ser salvas, carregadas, duplicadas e podem até mesmo dar origem a outras cenas.\nNesse contexto, rodar o jogo significa rodar a cena. Todo seu trabalho no editor da Godot será criando e organizando cenas.\nLinguagens de programação e Visual Scripting\nAlgumas versões anteriores da engine foram baseadas em linguagens como Lua, Python e Squirrel, mas não se mostraram muito eficientes. Para resolver alguns problemas, a Godot passou a ter uma linguagem de script personalizada, conhecida como GDScript .",
      "target_audience": [
        "Todos que tenham interesse em Criar Jogos"
      ]
    },
    {
      "title": "アンリアルエンジンで学ぶゲーム系UI・HUDデザイン - UnrealEngine4 UMG/Widget入門‐",
      "url": "https://www.udemy.com/course/uihud-unrealengine4-umgwidget/",
      "bio": "ゲームのクオリティに直結するUI・HUDデザイン。このコースではUMG（UnrealMotionGraphics UIデザイナ ）の基本操作を学びます。応用編ではダイアログや会話画面を作成しゲーム制作には欠かせない実践的な技術を習得します。",
      "objectives": [
        "UE4（Unreal Engine 4）を用いたゲーム系UIデザイン手法を習得できる",
        "UMG（Unreal Motion Graphics UI デザイナ ）の基本的な操作を身に付けることができる",
        "チェックボックス、スライダー、進捗バーの作成方法を習得できる",
        "ダイアログや会話シーン等の実践的なゲーム系UI・HUDデザインの制作手法を習得できる",
        "UI・HUDの2D空間や3D空間への配置・設定手法を習得できる",
        "ゲーム系UI・HUDデザインの基礎知識を習得することができ、ゲーム開発者や他業界のUIデザイナーとしても、レベルアップできる"
      ],
      "course_content": {
        "はじめに": [
          "自己紹介・この講座について",
          "この講座の学び方"
        ],
        "UMG・Widgetについて": [
          "UMGについて",
          "講座で使用するプロジェクトの作成",
          "準備_プロジェクト設定",
          "準備_リソース取り込みとWidgetの作成",
          "UMGエディタ画面説明"
        ],
        "BluePrintでの制御": [
          "グラフについて",
          "バインドについて"
        ],
        "画面への表示方法": [
          "2D空間への表示方法",
          "切り替え方法・削除方法",
          "他のアクタからの呼び出し",
          "3D空間への表示方法"
        ],
        "各種表示方法": [
          "文字表示１　文字の表示",
          "文字表示２　状態でのテキストの変更",
          "文字表示３　カウントダウンの作成",
          "文字表示４　カウントダウンの作成2",
          "文字入力１　テキストボックスの配置",
          "文字入力２　テキストボックスの画像・色変更",
          "文字入力３　入力データの取得",
          "コンボボックス１　コンボボックスの配置",
          "コンボボックス２　データの入れ替え",
          "コンボボックス３　データの取得",
          "画像表示１　矩形の表示",
          "画像表示２　画像の表示",
          "画像表示３　画像の変更",
          "ボタン配置１　ボタンの配置・テキストの表示",
          "ボタン配置２　画像の表示",
          "ボタン配置３　押した時の処理",
          "プログレスバー１　バーの配置",
          "プログレスバー２　バーの進行処理",
          "プログレスバー３　画像の表示",
          "チェックボックス１　ボックスの配置・文字表示",
          "チェックボックス２　状態の取得・設定",
          "ラジオボタン１　ラジオボタンの作成",
          "ラジオボタン２　データの作成・切り替え処理の作成",
          "ラジオボタン３　データの設定",
          "スライダー１　バーの作成",
          "スライダー２　画像の表示",
          "スライダー３　データの取得・設定",
          "スピンボックス１　ボックスの配置",
          "スピンボックス２　状態の取得・設定",
          "スピンボックス３　スライダーとの連携",
          "スピンボックス４　スライダーとの連携実行2",
          "パネルの配置と使用方法"
        ],
        "キー操作": [
          "基本操作とフォーカスについて",
          "キー操作の自作について"
        ],
        "アニメーション機能": [
          "アニメーションについて",
          "拡大縮小",
          "座標移動およびカーブエディタについて",
          "色変更",
          "フェード",
          "イベントトラック",
          "アニメーション再生",
          "アニメーション一時停止・停止"
        ],
        "レイアウト調整": [
          "アンカーとアラインメントについて",
          "アンカーの分割について"
        ],
        "（応用編）ダイアログの作成": [
          "オブジェクトの準備",
          "ダイアログアニメーションの作成",
          "処理の作成",
          "ダイアログ処理を実行"
        ],
        "（応用編）会話シーンの作成": [
          "会話シーン準備",
          "キャラクター画像表示",
          "キャラクター移動のアニメーション作成",
          "キャラクター変更のアニメーション作成",
          "テキスト表示ウィンドウの配置",
          "テキストの配置",
          "名前の設定",
          "文字表示１　通常表示と文字送り処理の準備",
          "文字表示２　文字送り処理の作成",
          "文字表示命令の作成",
          "選択肢の作成",
          "選択処理の作成",
          "上下キー入力の作成",
          "改ページ表示の作成",
          "動作確認準備",
          "会話シーンの動作確認と処理作成のヒント."
        ]
      },
      "requirements": [
        "基本的なPCの操作ができること",
        "基本的なUE4（Unreal Engine 4）の操作ができること",
        "基本的なUE4のブループリントの知識があること",
        "本コースでは、UE4がダウンロードされたPC（Windows10）を用いて説明をします。手元にパソコンが無くても受講はできますが、コース内でいくつか実践レクチャーを実施しますので、ご自身のパソコンで実際に操作しながら進めていただく方が理解度が高まります。",
        "本コースは、Windows10のPCを用いて説明をします。UE4はMacOSでも動作しますが、OS個別の要件については関与しません。",
        "ゲームのUI・HUDデザインに興味があること"
      ],
      "description": "多くの業界で必要とされている「UI（User Interface）デザイナー」。\nゲーム業界でも、メインメニューやキャラクター・アイテム選択、ＨＰ・ＭＰゲージを表現するHUD（Head-Up Display)等、\nゲームをプレイするうえで必要になる物の配置や動きを設計し、デザインを担うUIデザイナーの存在は欠かせません。\nゲームの世界観をユーザに最大限に伝えるための重要な要素であるUI・HUDデザインは、そのデザインの操作性や美しさがゲームのクオリティに直結すると言っても過言ではありません。\nこのコースでは、ゲーム開発のための様々な機能を有する総合開発環境：UE4（Unreal Engine4）に標準搭載されているビジュアル UI オーサリングツール：UMG（Unreal Motion Graphics UI デザイナ ）を用いて、ゲーム系UI・HUDデザインを学びます。\n前半の基礎編では、チェックボックス、スライダー、進捗バー等を作成し、UMGの基本操作を習得します。コース内では、UMGで作業を開始するために Widget ブループリント を作成するところから始めます。\n後半の応用編では、ダイアログや会話シーンの作成を行い、実践的な技術を習得します。\nプランナーやプログラマでゲーム系UI・HUDデザインについて学びたい方や、他業界でUIデザインに携わりゲーム業界のUI・HUDデザインにも興味がある方にもおすすめのコースです。\n\nもちろん、自主制作でゲームを作っているみなさんにもおすすめです。\n是非、このコースで習得した技術を用いて、クオリティの高いゲームを制作してみましょう！",
      "target_audience": [
        "UE4を使ったUI・HUDデザイン手法を学びたい方",
        "UMG（Unreal Motion Graphics UI デザイナ ）の基本的な操作方法を学びたい方",
        "UI・HUDデザインを学び、ゲーム開発者としてレベルアップしたい方",
        "他業種のUIデザイナーでゲーム業界のUI・HUDデザインについて学びたい方",
        "自主制作でゲームを作っている方で、作品のクオリティを上げたい方",
        "ゲーム系UI・HUDデザインを学び、ユーザがそのゲームの世界観に没頭できるようなUI・HUDデザインを設計・実装したい方"
      ]
    },
    {
      "title": "Unity & Photon Network ile Online Multiplayer Oyun Sistemi",
      "url": "https://www.udemy.com/course/unity-photon-network-ile-online-multiplayer-oyun-sistemi/",
      "bio": "2021 | Photon ile Online oyun | Chat | Voice | Özel Server Kurma konularını ÖĞREN. Dünyaya açılmaya Hazır mısın ?",
      "objectives": [
        "Photon sisteminin tüm detaylarını",
        "Online oyun sistemini",
        "Oda ve lobby kurma",
        "Online oyun CHAT sistemini",
        "Online oyun Voice(konuşma) sistemini",
        "Özer Server Kurma ve Oyun Çalıştırmayı"
      ],
      "course_content": {
        "EĞİTİM HAKKINDA": [
          "EĞİTİM TANITIMI | EĞİTİMDE NELER VAR",
          "SEVİYE BİLGİSİ | *** ÇOK ÖNEMLİ ***",
          "KAYNAK KOD BİLGİLENDİRMESİ | *** ÇOK ÖNEMLİ ***"
        ],
        "GENEL ANLATIM VE PHOTON YÖNTEMLERİ": [
          "Server Nedir ? Server Genel Anlatım | Genel Konular",
          "#1 Photon Network Nedir ? Photon Ürünleri ve Genel Anlatım",
          "#2 Photon Network Nedir ? Photon Ürünleri ve Genel Anlatım",
          "Photon Api Key oluşturma, Unity Pun kurulum ve Temel komutlar (Bağlanma-Masa işl",
          "Photon bağlantı kurma ve CallBack fonksiyonlarını kullanma ve anlatım",
          "#1 PhotonNetwork Kodları",
          "#2 PhotonNetwork Kodları",
          "#3 PhotonNetwork Kodları"
        ],
        "PHOTON İLK İŞLEMLER | OYUN VE OYUNCU İŞLEMLERİ": [
          "Oyuncu oluşturma | PhotonView | Photon Transform View | IsMıne",
          "PhotonNetwork.Destroy | Photon Animator View",
          "Photon Animator View devam | Photon Rigidbody View | Componentler Genel",
          "Oda kurma ve Ad belirleme Panelinin yapımı",
          "Oyuncunun adını alma ve Odadaki oyuncuların listesini alma | PhotonNetwork.Playe",
          "** ŞARTA BAĞLI KAYNAK DOSYASI | BURAYA KADAR OLUŞMUŞ KAYNAK KOD",
          "Oyuncuların ateş etme sisteminin yapılması | PUNRPC",
          "Particle system ile ateş etme sisteminin tamamlanması",
          "Rpc.Target türleri | Her oyuncuya kamera ekleme işlemi",
          "Photon Score sistemini kullanma",
          "#1 Oyunculara özellikler Tanımlama-Güncelleme | Hashtable | SetCustomProperties",
          "#2 Oyunculara özellikler Silme-Ekleme | OnPlayerPropertiesUpdate",
          "** ŞARTA BAĞLI KAYNAK DOSYASI | BURAYA KADAR OLUŞMUŞ KAYNAK KOD"
        ],
        "PHOTON ÇEŞİTLİ YÖNTEM VE İŞLEMLER": [
          "#1 Odalara özellik ekleme | Room Properties | Room CustomRoomPropertiesForLobby",
          "#2 Odalara özellik ekleme | Room SetCustomProperties",
          "#1 Takım Yönetimi | Oyuncuları takıma dahil etme ve diğer takım işlemleri",
          "#2 Takım Yönetimi | Oyuncuları takıma dahil etme ve diğer takım işlemleri",
          "#1 WEBHOOKS & WEBRPC | Uzak sistemlere sorgu gönderme | Genel anlatım ve kurulum",
          "#2 WEBHOOKS & WEBRPC | Verilerin Hazırlanması ve gönderilmesi | Cevap alınması",
          "#3 WEBHOOKS & WEBRPC | Gönderilen verileri okuma ve sonuca göre cevap gönderme",
          "#4 WEBHOOKS & WEBRPC | Oturum açarak oyuncunun verilerini veritabanından çekme",
          "PHOTON STREAM YÖNTEMİ | Oyuncuların birbirlerine veri gönderebilmesi"
        ],
        "LOBBY VE ODA İŞLEMLERİ": [
          "Genel anlatım | Login Form işlemleri | Oda Kurma işlemleri",
          "Oda listesi altyapı işlemleri | Cache ve Kayıtların alt yapısı",
          "#1 Join işleminin yapılması | Oyuncu Satir Objesinin oluşturulması",
          "#2 Join işleminin yapılması | Oyuncu HAZIRIM butonunun yapımı",
          "Oda Kurma ve Test | Oda Listesi Test",
          "#1 Sistem fonksiyonlarının yazılması",
          "#2 Sistem fonksiyonlarının yazılması | Tüm testlerin yapılması",
          "CountDownTimer Yapımı | Oyun başlatma işlemlerinin yapımı",
          "** ŞARTA BAĞLI KAYNAK DOSYASI | BURAYA KADAR OLUŞMUŞ KAYNAK KOD",
          "Odaya katıl butonunun kontrol işleminin yapılması",
          "İstatistik bölümlerinin yapılması",
          "#1 Şifreli Oda Yapma | Özel Oda Yapma",
          "#2 Şifreli Oda Yapma | Özel Oda Yapma",
          "** ŞARTA BAĞLI KAYNAK DOSYASI | BURAYA KADAR OLUŞMUŞ KAYNAK KOD"
        ],
        "CHAT SİSTEMİ | YAZILI SOHBET SİSTEMİ": [
          "Chat sistemi anlatım | Kurulum | Paket Dahil Etme | İlk işlemler",
          "#1 Chat Script dosyasının yazılması",
          "#2 Chat Script dosyasının yazılması",
          "** ŞARTA BAĞLI KAYNAK DOSYASI | BURAYA KADAR OLUŞMUŞ KAYNAK KOD",
          "Birden fazla kanal oluşturma | Kanal Yönetimi",
          "Arkadaşlık sisteminin yapılması | Arkadaş Ekleme&Silme | Arkadaş durumlarını gör",
          "Arkadaşlara özel mesaj gönderebilme sistemi",
          "** ŞARTA BAĞLI KAYNAK DOSYASI | BURAYA KADAR OLUŞMUŞ KAYNAK KOD"
        ],
        "VOİCE SİSTEMİ | SESLİ İLETİŞİM": [
          "Voice Paketi Yükleme | Genel İşleyişi Anlatım | İlk Testin yapılması",
          "Voice Connection | Recorder | Connect and join | Ayarlarının anlatımı",
          "İstatistik bilgileri alma ve bağlantı kurma",
          "Mikrofonu sessize alabilme ve sesi açabilme işleminin yapılması",
          "Oyuncuların Remote Speaker bilgisinin eklenmesi",
          "Diğer oyunculara Ses klibi göndermek | Recorder.InputSourceType.AudioClip",
          "** ŞARTA BAĞLI KAYNAK DOSYASI | BURAYA KADAR OLUŞMUŞ KAYNAK KOD"
        ],
        "PHOTON PROJE - ODA & LOBBY SİSTEMİ | PUN | CHAT | VOİCE | HEPSİ BİR ARADA": [
          "ÖRNEK PROEJE | Tüm sistemleri içeren proje | TANITIM VİDEOSU",
          "** ŞARTA BAĞLI KAYNAK DOSYASI | PROJE DOSYALARI"
        ],
        "ÖZEL SERVER KURMA - SELF HOSTED - GOOGLE CLOUD": [
          "- Google Cloud - Server Kurma ve ilk bağlantı",
          "Photon Sdk indirme ve yükleme | Lisans işlemleri | Powershell portları açma",
          "Google Cloud portları açma | Photon Sunucuyu çalıştırma",
          "Photon Sdk'sının genel anlatımı | Unity ile sunucumuza bağlanma ve Test"
        ],
        "BONUS": [
          "BONUS"
        ]
      },
      "requirements": [
        "Genel oyun geliştirme bilgisine sahip olunması gerekir",
        "Bu eğitimde OYUN GELİŞTİRME konuları değil ONLİNE OYUN YAPISI anlatılmaktadır"
      ],
      "description": "Merhaba,\nEğitimde sıfırdan PHOTON NETWORK yapısını kullanarak online oyunların nasıl oluşturulduklarını ve Online oyunlarda olan diğer tüm yöntemleri öğreniyor olacaksın.\nOnline oyun, her oyun geliştiricisinin hayalidir. Çünkü oyunun uluslararası platforma çıkması başarı şansını çok arttırmaktadır.  İstatistiklere göre, oyuncuların rekabete ve gerçek insanlara karşı oyun oynama  istekleri, offline oyunlara göre daha fazladır. Bu da aslında oyunumuza güveniyorsak, daha geniş kitlelere ulaşabilmek ve oyunumuzun başarı şansını arttırmak için güzel bir fırsattır. Photon sisteminin bir çok avantajı vardır. Bu eğitimin bize sunmuş olduğu (aşağıda listelenen) tüm hizmetleri anlattım.\n--- EĞİTİMDE VAR OLAN GENEL İŞLEM BAŞLIKLARI ---\nPHOTON PUN - Oyuncuların oyun oynama sistemi\nPHOTON CHAT - Oyuncuların oda içerisinde ve oyun esnasında yazışabilmelerini sağlayan sistem\nPHOTON VOİCE - Oyuncuların oda içerisinde ve oyun esnasında sesli sohbet edebilmelerini sağlayan sistem\nPHOTON LOBBY VE ODA SİSTEMİ - Oda kurma, odalara şifre belirleme, odalara katılma ve çıkma, oda listesini görebilme ve daha bir çok konu\nÖZEL SERVER KURMA |  SELF HOSTED - Google Cloud üzerinde kendi özel  sunucumuzu kurarak, photon sistemini dahil ettik ve kullandık.\nYukarıdaki konular genel başlıklardır. Bu sistemlerde kullanılan kodların ve yöntemlerin hepsi eğitimde anlatılmıştır.\n\n\nPhoton Cloud vs Özel Server\n*** Photon Cloud - Yazılım ve server ihtiyaçlarımızın tümünün Photon tarafından karşılanmasıdır. Özel server kiralamaya imkanımız yoksa pratik bir çözümdür. (Tüm detaylar eğitimde var.)\n*** Özel Server - Fiziksel olarak bir sunucumuz var ise veya satın alma imkanımız var ise photon sistemini kendi sunucularımızda barındırabiliyoruz. Böylelikle sunucumuz ne kadar güçlü ise oyuncularımıza daha iyi hizmet sunmuş oluyoruz. Biz eğitimde Google Cloud üzerinden bir server oluşturduk ve kendi özel sunucumuz ile oyuncularımızın bağlanmalarını sağladık. (Sunucu kurulumları ve diğer tüm detaylar eğitimde var.)\n\n\nNOT 1: Videoların tümü 1080p HD kalitede kayıt edilmiştir. Video izlerken Video Player ayarlarınızdan Auto'yu seçerseniz, sistem videoyu otomatik 1080p kalitede oynatacaktır.\nNOT 2: Eğitimde bazı bölümlerde kaynak kodlar paylaşılmıştır ancak tamamen bitmiş kodlar paylaşılmamıştır. Bu kodlar şarta bağlı paylaşılacaktır. Bunun sebebini eğitimde ön izleme videosu olarak yayınladığım KAYNAK KOD BİLGİLENDİRMESİ videosundan izlemenizi rica ederim.\nNOT 3 : Lütfen SEVİYE BİLGİSİ videosunu izleyiniz.",
      "target_audience": [
        "Multiplayer oyunların nasıl yapıldığını merak edenler",
        "Mevcut oyunu olan ve online moduna çevirmek isteyenler",
        "Online oyun yapmak isteyen ve ONLİNE server işleyişini merak edenler"
      ]
    },
    {
      "title": "Unity 5 + C#: Simplificando o Desenvolvimento de Jogos",
      "url": "https://www.udemy.com/course/aprendaunity/",
      "bio": "Torne-se um mestre nessa poderosa ferramenta de criação com esse curso que vai lhe ajudar a construir seu primeiro game!",
      "objectives": [
        "Usar o software com confiança e habilidade",
        "Tornar-se um profissional na linguagem C#",
        "Dominar os conceitos matemáticos mais usados na programação de jogos",
        "Desenvolver qualquer mecânica de jogo usando os conhecimentos em C# adquiridos",
        "Conhecer o wolkflow por trás da produção de um game",
        "Produzir um game completo"
      ],
      "course_content": {
        "Interface - Acostumando-se com a Unity 5": [
          "Abrindo a Unity pela primeira vez",
          "A Organização da Unity e alterações de Layout",
          "GameObjects: Criando e manipulando",
          "Criação de Prefabs e Componentes Físicos"
        ],
        "Programação - Desmistificando o \"monstro\"": [
          "Aspectos básicos de um script",
          "Variáveis: O que são e como definir",
          "Comandos Condicionais I: Entendendo a Estrutura",
          "Comandos Condicionais II: Intervalos de Valores",
          "Comandos Condicionais III: Operações Lógicas",
          "Loops I: While e Do While",
          "Arrays",
          "Teste parcial em C#",
          "Loops II: For e Foreach",
          "Funções I: Definição conceitual",
          "Funções II: Como definir funções em C#",
          "Funções III: Passando argumentos por referência ou valor",
          "Corrotinas",
          "Corrotinas II",
          "Classes I: Analogia com a vida real",
          "Classes II: Criando classes em C#",
          "Classes III: Explorando mais conceitos",
          "Construtores",
          "Enumeradores",
          "Variáveis e Métodos Estáticos",
          "Encapsuladores",
          "Singletons",
          "Herança entre Classes I",
          "Herança entre Classes II",
          "Polimorfismo e abstração",
          "Modos de comunicação entre scripts MonoBehaviour dentro da Unity"
        ],
        "Álgebra Linear - Matemática Aplicada a Jogos": [
          "Trigonometria",
          "Definição de um vetor e suas características",
          "O Vetor normalizado/unitário",
          "Operações usando vetores"
        ],
        "Hora da Diversão - Desenvolvendo um Jogo Completo do Zero": [
          "Apresentação do projeto e importação dos elementos gráficos",
          "Movimentando a plataforma",
          "Entendendo o conceito de mudança de base (Do 2D para o 3D e vice-versa)",
          "Gerando os limites do cenário de forma dinâmica",
          "Programando a bolinha",
          "Restringindo as colisões da bolinha",
          "Destruindo os blocos atingidos",
          "Criando grupos de blocos dinamicamente I",
          "Criando grupos de blocos dinamicamente II",
          "Gerando limites de movimentação dinamicamente",
          "Criando partículas",
          "Instanciando as partículas durante o jogo",
          "Criando o menu de Game Over I",
          "Criando o menu de Game Over II",
          "Criando o Menu Principal"
        ],
        "Extra I - Desenhando o trajeto futuro da bola": [
          "Como vamos fazer isso?",
          "O componente LineRenderer",
          "Desenvolvendo o sistema",
          "Corrigindo problemas de colisão"
        ]
      },
      "requirements": [
        "Uma cópia da Unity 5 (software gratuito) instalada"
      ],
      "description": "Prepare-se para desenvolver um jogo completo!\nEsse curso é indicado para quem está procurando conhecimento de qualidade nos aspectos mais simples de Unity 5 até as funcionalidades mais úteis e complicadas em termos de programação e desenvolvimento de jogos.\nEssa não é uma série de vídeo onde eu simplesmente cito os passos para produzir algo. Todos os vídeos são devidamente explicados e a qualidade das aulas pode ser comprovada pelos mais de dez mil alunos que já tive a oportunidade de instruir.\nAo ter acesso a esse material, você verá a programação de um outro modo. Entretanto, não se engane pensando que empenho é opcional. Assim como qualquer outra coisa, aprender a programar não acontece da noite para o dia, então lembre-se de se esforçar em completar testes (incluídos no curso) e seguir as aulas corretamente.\nO curso inclui todo o material que será usado nas aulas. Então, tenha certeza de que tudo que você vê em aula é totalmente reproduzível em seu computador.\nEsse curso cobre tudo. Desde o mais básico sobre interface até a construção de um game completo! Porém, não espere ter de mergulhar em códigos complicados desde o início. Eu estruturei o curso de tal forma que você aprende tudo sem pressa e no seu ritmo. Nenhum conhecimento prévio é necessário para cada aula a não ser o que você adquiriu na aula anterior.\nQuer que eu desenhe? Sem problemas! Para esse curso, desenvolvi vários vídeos conceituais onde explico termos mais complicados com desenhos e diagramas. Uma imagem vale mais que mil palavras, certo?\nPosso afirmar que esse é o melhor curso de Unity em português dado o seu preço e a qualidade do material oferecido. Espere um instrutor dedicado com grande experiência prévia (meu curso de Unity em inglês é um sucesso. Pense nesse como uma versão melhorada!). Confie em mim quando eu digo: Eu falo a sua lingua!\nPodemos começar?",
      "target_audience": [
        "Pessoas com nenhum conhecimento em programação e/ou desenvolvimento de jogos",
        "Pessoas que querem aprender a desenvolver jogos"
      ]
    },
    {
      "title": "Unity C#; Sıfırdan İleri Seviyeye Oyun Tasarlama",
      "url": "https://www.udemy.com/course/unity-2d-3d-oyun-gelistirme-c-ve-java/",
      "bio": "Yaratıcı Mobil Dünyaları Yeniden Şekillendirin: Unity ile Oyun Geliştirme Serüveni",
      "objectives": [
        "Tüm öğrenciler kendi oyunlarını yapıp kodlayabilecek",
        "Hem grafik yönü hem de yazılım yönü açısından hazır hale gelecek",
        "C# Programlama Diline Hakim Olacaklar",
        "Algoritmik zekalarının gelişecek planladıkları oyun vs. içeriklerini daha profesyonel düşünebilecekler",
        "Hayalinizdeki oyunları adım adım hangi aşamalardan geçerek geliştirmeyi",
        "Hayal ettikleri oyunu tasarlamayı"
      ],
      "course_content": {
        "Giriş 2024 Güncel": [
          "Unity Nedir, Unity Hub Kurulumu",
          "İlk Proje Kurulumu ve Unity Arayüzü",
          "Unity Hotkey",
          "Add Component, Rigidbody and Collider",
          "3D Project",
          "3D Models",
          "2D Project",
          "2D and UI Models",
          "Switch Platform",
          "Camera Settings",
          "Cinemachine Target Group",
          "Cinemachine 2D Camera",
          "Animation Controller",
          "SoundController",
          "Partical System",
          "Image, Material and Prefab",
          "Light Settings",
          "Touch Controller",
          "Button Controller",
          "Oyununuzun türünü (3D veya 2D) belirleyerek arayüzünüzü tamamlayınız."
        ],
        "2019 - 2022 Sürümleri için Giriş": [
          "Unity Nedir ? Unity İndirme İşlemi",
          "Unity Arayüz Tasarımı",
          "Unity Eksenler",
          "Kamera ve Işıklandırma",
          "Kısayol Tuşları Kullanımı",
          "Terrain Ayarları",
          "Prefab ve Materyal Kaplama İşlemleri",
          "Asset Store Kullanımı ve Custom Package Paketleri",
          "Unity Ses Kulanımı 1 - AudioSource",
          "Unity Ses Kullanımı 2 - AudioClip",
          "Unity Animasyon Kullanımı - 1",
          "Unity Animasyon Kullanımı - 2",
          "Unity Animasyon Kullanımı - 3",
          "Ücretsiz Müzik ve Efekt Bulabileceğiniz Web Sitesi",
          "Unity Butona Link Ekleme",
          "Unity Remote 5 ile Android Uygulamanızı Eş Zamanlı Olarak Telefonda Test Etme",
          "Touch Kontrol İşlemi (Dokunmatik Kontrol)",
          "Buton Kontrolleri",
          "İvme Ölçer Kontrolleri",
          "Birden Fazla Butona Ses Ekleme"
        ],
        "Giriş - 2017 Sürüm ve Altı İçin": [
          "Unity Yükeleme ve Arayüz Tanıtımı",
          "Objeler ve Kısayollar",
          "Terrain ve Ayarları",
          "Terrain 2 - Ağaçlandırma",
          "Materyal Kaplama İşlemi",
          "Prefarb Oluşturma İşlemi",
          "Asset Store Paket İndirme ve Skybox",
          "Kamera ve Işık Ayarları"
        ],
        "Kodlamaya Giriş": [
          "Kodlamaya Giriş Arayüz Tanıtımı",
          "Değişkenler",
          "Metot Türleri",
          "İF - ELSE",
          "Arttırma Azaltma Yöntemleri",
          "FOR - WHİLE (Döngüler)",
          "Diziler ve Kullanımı",
          "List Kullanımı",
          "Foreach Döngüsü",
          "This Kavramı",
          "Değişken Tanımları ve Hareket Kodu",
          "Rigidbody Component",
          "Collision - (Destroy ve Tag)",
          "Collision - (Application ve Build)"
        ],
        "Nasıl Yapılır ?": [
          "Bullet Time (Zaman Yavaşlatma)"
        ],
        "Parkur Oyunu": [
          "Skybox, Prefarb, Hareket Kodu",
          "Süre Ekleme ve Yeniden Başlama Kodu",
          "Altın Toplama, Level Atlama, Zıplama Kodları",
          "Ara Menü ve Herşeyi Ettikten Sonra Level Atlama İşlemi"
        ],
        "2D'ye Giriş - Örnek Oyun (KAFA TOPU)": [
          "2D'ye Giriş Oyun Alanı Tasarlama",
          "Top Sekme Olayı (Bounce)",
          "Oyun Giriş-Çıkış Kodları",
          "Hareket Kodu ve Component Çağırma",
          "Skorbord",
          "Timer (Süre)",
          "Ara Menü Yapımı",
          "Build Etme ve Oyunumuzu Oynama"
        ],
        "Dragons Game": [
          "Arayüz ve Paket Yükleme",
          "Fizik Özellikleri ve Jump Kodu",
          "Ekran Taşmasını Önleme ve Temas",
          "Child ve Prefab"
        ],
        "Flappy Bird İle Çarpma İşlemini Öğreniyorum": [
          "Android Platformuna Giriş ve Oyun Alanı",
          "Otomatik Hareket ve Temas İle Hareket Kodları",
          "Panel Aktif ve Deaktif Etme Soru Cevaplama İşlemleri",
          "Puanlama ve Yazı Tipi Değiştirme",
          "Oyunda Yanıp Tekrar Başlama ve Kamera Takibi",
          "Sonsuz Döngü, Invoke ve Müzik Ekleme Kodları",
          "SDK ve JDK Ayarları Build Edip Telefonda Deneme"
        ],
        "Hamburger Toplama Oyunu": [
          "Oyun Alanı Oluşturma",
          "2D Objeler İçin DragDrop (SürükleBırak) Kodu",
          "3D Objeyinin Rotasyonunu Değiştirerek Düşmesini Sağlayan Kod",
          "Objenin Farklı Pozisyonlardan Başlama Kodu",
          "3D Objeler İçin DragDrop(SürükleBırak)",
          "Puanlama Sistemi",
          "Ses Eklemeleri (2 Farklı Kod)",
          "Genel Tekrar ve Build Edip Deneme"
        ]
      },
      "requirements": [
        "Sıfırdan başlayıp ilerlediğimiz için bilgi den çok öğrenme arzusu gereklidir!",
        "Unity programını açabilecek bir bilgisayar yeterlidir"
      ],
      "description": "\"Kendi Mobil Oyunlarını Yarat! Unity ile Sınırsız Hayal Gücünü Oyuna Dönüştür\"\nHeyecan verici bir dünyanın kapılarını aralıyoruz! Unity ile mobil oyun geliştirme kursu, yaratıcı düşünceyi kodla buluşturarak, özgün oyun fikirlerinizi gerçeğe dönüştürmeniz için tasarlandı. Oyun geliştirme dünyasının kapılarını açmak için siz de bu maceraya katılın! Mobil platformların büyülü dünyasında kendi izinizi bırakmak için hazır mısınız?\n\n\nBu eşsiz eğitimde, sizi bir mobil oyun geliştiricisi olmaya hazırlayacak adımları adım adım öğreneceksiniz:\n1. Temel Adımlar ve Unity Arayüzü: Kurs başlangıcında, Unity'nin temel arayüzünü keşfedecek ve oyun geliştirmenin temellerini oluşturacak adımları öğreneceksiniz.\n2. Programlama ve Oyun Mekaniği: C# programlama dili üzerinden oyun içi mantığı oluşturmayı, karakter kontrolünü ve çevresel etkileşimleri ele alarak oyun mekaniği geliştireceksiniz.\n3. Grafik ve Animasyon: Oyununuzun görsel olarak çekici olması için grafik tasarım ve animasyon tekniklerini öğrenerek, oyununuzun ruhunu yaratacaksınız.\n4. Mobil Platforma Uyum ve Optimizasyon: Oyununuzu mobil cihazlara uyumlu hale getirmeyi ve performansı optimize etmeyi öğrenerek, kullanıcılarınızla etkileşimi maksimuma çıkaracaksınız.\n5. Yayınlama ve Pazarlama Stratejileri: Oyununuzu dağıtım aşamasına hazırlayacak, uygulama mağazalarına yükleme süreçlerinden başlayarak pazarlama stratejileriyle oyununuzun başarısını artıracaksınız.\n\n\nEğitmeninizle Gelişin\nDeneyimli bir rehber olarak, her öğrencinin benzersiz yeteneklerini ve tutkusunu keşfetmesine yardımcı olmayı hedefliyorum. Oyun geliştirmenin büyülü dünyasına girerken, yaratıcılığınızı yönlendirmenize, sorularınızı sormaya cesaret etmenize ve kendi potansiyelinizi gerçekleştirmenize destek olacağım.\nBu kurs, sadece bir eğitim değil, aynı zamanda bir maceradır. Birlikte keşfedeceğimiz her adım, sizi mobil oyun geliştirme yolunda ilerletirken, birlikte öğrenmek ve büyümek için eşsiz bir fırsat sunacak.\nHazır mısınız? Birlikte yeni bir oyun dünyası yaratmaya başlayalım!",
      "target_audience": [
        "Programı kullanmaya yeni başlayanlar",
        "Kendini biraz daha geliştirmek isteyenler",
        "Kafasında tasarladığı oyunu oluşturmak isteyenler"
      ]
    },
    {
      "title": "Do Básico ao Avançado no Desenvolvimento de Jogos.",
      "url": "https://www.udemy.com/course/aprenda-desenvolvimento-de-jogos/",
      "bio": "Tudo que você precisa saber para ir do Básico ao Avançado na Godot Game Engine.",
      "objectives": [
        "Desenvolvimento de Jogos 2D na Godot 3.4.4",
        "Lógica de Programação e Orientação a Objetos.",
        "Entender como uma Game Engine Funciona.",
        "Sair do Zero no Desenvolvimento de Jogos.",
        "Sistema de Serialização de Dados (Save e Load).",
        "Sistema de Compra e Venda de Itens.",
        "Sistema de Stats e Atributos.",
        "Sistema de Inventário.",
        "Sistema de Diálogo.",
        "Criação de um Personagem de Plataforma Completo.",
        "Drop/Spawn de Itens.",
        "Criação de Tilemaps (Autotile, SingleTile).",
        "Criação de Parallax Background.",
        "Luz e Sombra.",
        "Desenvolvimento de Diversos Inimigos.",
        "Inteligência Artificial para os Inimigos.",
        "Integração da Interface com as Funcionalidades do Personagem.",
        "Efeitos Visuais e Particulas.",
        "Criação de Menu Inicial para o Jogo.",
        "Seleção de Skins para o Personagem.",
        "Etc."
      ],
      "course_content": {
        "Introdução ao Curso.": [
          "[Demo] - Gameplay de Demonstração do Jogo.",
          "Apresentando o Itch io.",
          "Sugestões sobre Formas de Estudo | Aprendizado."
        ],
        "Introdução a Godot.": [
          "Download da Godot Game Engine.",
          "Interface de Projetos da Godot.",
          "Criando o Projeto.",
          "Introdução à Interface do Editor | Objetos.",
          "Configurações Iniciais do Projeto."
        ],
        "Introdução à Lógica de Programação.": [
          "Criando o Primeiro Script + Explicando os Templates de Código da Godot.",
          "Nome de Classe dos Scripts.",
          "Funções Reservadas - Ready / Process / Physics Process.",
          "Variáveis do Tipo String.",
          "Variáveis do Tipo Float.",
          "Variáveis do Tipo Int.",
          "Tipagem Dinâmica.",
          "Condicional If | Elif | Else.",
          "Variáveis do Tipo Bool.",
          "Funções de Retorno.",
          "Condicional Match.",
          "Estrutura de Repetição For.",
          "Variáveis do Tipo Array | Listas.",
          "Estrutura de Repetição While."
        ],
        "Introdução as Funcionalidades do GDScript | Godot.": [
          "Variáveis do Tipo Export.",
          "Variáveis do Tipo Onready | Formas de Comunicação de Objetos Irmão/Filho.",
          "Introdução a Sinais e Grupos.",
          "[GODOT 4.0] Variáveis do tipo Onready e Export e comunicação entre objetos."
        ],
        "ParallaxBackground e Tilemap - Construção do Nível.": [
          "Criação do ParallaxBackground.",
          "[GODOT 4.0] Variáveis Export com mais de um tipo.",
          "Script do ParallaxBackground.",
          "Adicionando uma Máscara (Simulando Madrugada/Noite) ao Nível.",
          "[GODOT 4.0] Introdução ao TileMap.",
          "Introdução ao Tilemap | Autotile.",
          "Tiles de Decoração | Singletile.",
          "Construção Inicial do Nível.",
          "Adicionando Colisão ao Tilemap."
        ],
        "Desenvolvimento do Personagem.": [
          "[GODOT 4.0] Principais mudanças do Personagem.",
          "Estrutura Inicial do Personagem + Configuração do SpriteSheet.",
          "Configurando as Animações de Parado | Correndo do Personagem.",
          "Script Inicial do Personagem | Movimentação Horizontal.",
          "Animações de Correndo e Parado por Código.",
          "Configurando as Animações de Pulo | Queda | Pouso do Personagem.",
          "Movimentação na Vertical do Personagem.",
          "Configurando a Colisão Física do Personagem | Explicando o Eixo Y.",
          "Configurando a Câmera do Personagem.",
          "Correção do Pulo do Personagem.",
          "Animações de Pulo | Queda | Pouso por Código.",
          "Configurando as Animações de Ataque | Agachar | Defender do Personagem.",
          "Código para Atacar | Defender | Agachar do Personagem.",
          "Animações de Ataque | Agachar | Defender por Código.",
          "Congelando a Movimentação ao Atacar | Agachar | Defender.",
          "Configurações Iniciais para Realizar o Wall Slide.",
          "Código para Aplicar a Gravidade | Pulo na Parede.",
          "Animação de Wall Slide por Código.",
          "Adicionando Luz ao Personagem.",
          "Adicionando um Efeito de Brilho a Luz.",
          "Script Inicial do Sistema de Stats.",
          "Script de Atualizar a Experiência | Passar de Nível.",
          "Script de Atualizar a Vida.",
          "Script de Atualizar a Mana.",
          "Configurações Iniciais das Animações de Hit e Morte.",
          "Chamando a Animação de Hit e Morte por Script.",
          "Reiniciando a Cena ao Morrer.",
          "Configurando um Tempo de Invencibilidade ao Tomar Dano."
        ],
        "Desenvolvimento Inicial dos Inimigos.": [
          "Estrutura de Template dos Inimigos.",
          "Script de Detecção do Personagem.",
          "Script de Movimentação Horizontal.",
          "Script para Verificar a Direção do Inimigo | Raycast.",
          "Script de Template das Animações.",
          "Configurando as Animações de Parado e Correndo da Whale.",
          "Configurando as Propriedades e Colisões da Whale.",
          "Explicando o que são Camadas e Máscaras.",
          "Configurando as Camadas e Máscaras.",
          "Testando o Funcionamento do Nosso Inimigo.",
          "Configurando as Animações de Hit e Morte.",
          "Configurando o Código de Atualizar a Vida do Inimigo.",
          "Criando a Lógica das Animações de Hit e Morte.",
          "Animação Auxiliar de Morte do Inimigo.",
          "Configurando Animações e Código para o Ataque do Inimigo."
        ],
        "Sistema de Drop e Spawn de Itens.": [
          "Introdução ao Drop de Itens | Lista de Drop.",
          "Script do Drop + Multiplicador de Drop (d20).",
          "Estrutura da Cena do Item.",
          "Script da Cena do Item.",
          "Spawnando o Item."
        ],
        "Introdução aos Efeitos (FX).": [
          "Criando a Cena de Template dos Efeitos.",
          "Lógica de Spawnar os Efeitos na Cena do Personagem.",
          "Efeito de Landing (Pouso).",
          "Efeito de Pulo (Jump).",
          "Efeito de Correr (Run).",
          "Efeito ao Coletar um Item."
        ],
        "Introdução aos Elementos de Interface (Barra de Vida/Mana/Experiência).": [
          "Configurando a Cena da Barra de Vida/Mana/Experiência.",
          "Lógica das Barras + Interpolação para realizar pequenas Animações.",
          "Lógica para Atualizar o valor Inicial das Barras.",
          "Lógica para Atualizar a Barra de Experiência.",
          "Lógica para Atualizar as Barras de Vida/Mana."
        ]
      },
      "requirements": [
        "Um Computador para Acompanhar o Desenvolvimento do Curso.",
        "Vontade de Aprender Desenvolvimento de Jogos."
      ],
      "description": "A partir deste Curso, você estará Iniciando o seu processo de aperfeiçoamento no Desenvolvimento de Jogos, mais específicamente de Jogos 2D. Partindo do Básico, desde o Download da Godot Game Engine, Introdução a Interface de Projetos | Editor, partindo para uma introdução geral à Lógica de Programação, até o Desenvolvimento do Jogo em sua versão inicial, com grande potencial para expansão e modularização das coisas que serão aplicadas em seu Desenvolvimento.\n\n\nO Jogo que nós estaremos Desenvolvendo juntos, do Começo/Meio e Fim se chama Dawn Forest. Um Jogo de Plataforma 2D, no qual o Objetivo do Personagem é atravessar Diversas Ilhas, com um Sistema de Progressão em Níveis, incrementando as suas Habilidades para poder Prosseguir na sua Jornada.\n\n\nO Motor de Jogos que nós estaremos utilizando é a Godot Game Engine, Atualmente na sua versão Estável 3.4.4, o Motivo pelo qual ela foi escolhida: É um Motor de Jogos que está em constante crescimento, tanto em questão de funcionalidades como popularidade Mundial. Além de ser um motor de jogos totalmente intuitivo, tornando o aprendizado muito mais fácil, além do fato de que a Godot é Open Source, então tudo que você fizer com ela, será totalmente seu, sem precisar pagar Royalties para os Criadores do Software, que é o caso da Unity ou da Unreal. Além disso, ela é muito mais leve, se comparada a Unity ou a Unreal em questão de Performance/Requisitos Mínimos, sendo um dos Motores de Jogos mais leves já criados e utilizados Atualmente.\n\n\nNeste Curso, você irá aprender técnicas chave, que caso sejam levadas a prática, irão lhe tornar um Excelente Desenvolvedor de Jogos 2D, dando um Start na sua Carreira como Desenvolvedor, Técnicas estas que são:\n\n\nEntender como um Motor de Jogos Funciona.\nEntender a ordem na qual os códigos são executados.\nSaber lidar com a física e o plano cartesiano de Motores de Jogos.\nUso de Singletons -> Scripts ou Cenas globais, que poderão ser acessados em qualquer canto do seu código, muito úteis para armazenar informações que você poderá reutilizar no seu jogo.\nUso de Corrotinas -> Yield e Call Deferred.\nUso de Sinais e Grupos.\nUso de Camadas e Máscaras.\nTransição de Cenas | Mudança de Níveis.\nSistema de Combate de Plataforma 2D.\nInteligência Artifical para Inimigos.\nCriação de um Personagem de Plataforma 2D Completo.\nSistema de Drop/Spawn de Itens.\nSistema de Inventário para Armazenar Itens.\nSistema de Equipamentos | Itens Consumíveis -> Souls Like.\nSistema de Compra e Venda de Itens com um Npc Mercador.\nSistema de Serialização - Save e Load.\nSistema de Seleção de Skins.\nSistema de Stats e Atributos.\nIntegração da Interface com os Atributos do Personagem.\nBarras de Vida | Mana | Experiência.\nEtc.\n\n\nPara a realização deste curso você não precisa ter nenhum conhecimento prévio, irei partir do princípio, desde o Download da Godot, introdução ao motor de jogos, até a conclusão do curso, sempre explicando detalhadamente o que cada componente do nosso código, ou da nossa cena está fazendo, as vezes explicando mais de uma vez, para fixar bem os conhecimentos que estão sendo passados em vídeo.",
      "target_audience": [
        "Pessoas que querem aperfeiçoar as suas Habilidades no Desenvolvimento de Jogos 2D.",
        "Pessoas que querem aprender Desenvolvimento de Jogos 2D na Godot.",
        "Pessoas que querem sair do Zero no Desenvolvimento de Jogos."
      ]
    },
    {
      "title": "Twórz gry w Pythonie!",
      "url": "https://www.udemy.com/course/tworz-gry-w-pythonie/",
      "bio": "Poznaj bibliotekę PyGame",
      "objectives": [
        "Nauczysz się wykorzystywać bibliotekę Pygame i framework Pygame Zero.",
        "Zobaczysz, jak dodawać obrazy, czcionki, fonty i inne elementy do gry.",
        "Będziesz operować na grafikach 2D i tworzyć animacje.",
        "Dowiesz się, jak wykorzystywać dźwięki, muzykę i napisy w grach.",
        "Skompilujesz grę do pliku .exe (standardowo w Pythonie nie jest to możliwe).",
        "Przygotujesz obsługę zdarzeń myszki i klawiatury.",
        "Stworzysz własny i wykorzystasz istniejący mechanizm wykrywania kolizji między obiektami."
      ],
      "course_content": {
        "Zapoznanie z biblioteką Pygame i frameworkiem Pygame Zero": [
          "Wprowadzenie",
          "Przygotowujemy środowisko",
          "Struktura gry w Pygame",
          "Współrzędne w Pygame i innych bibliotekach",
          "Prosta animacja przesunięcia",
          "Zdarzenia w Pygame",
          "Reagujemy na zdarzenia myszki",
          "Obsługa napisów w Pygame",
          "Wprowadzenie do frameworka Pygame Zero",
          "Korzystamy z wbudowanych mechanizmów Pygame Zero",
          "Interakcja z aktorami",
          "Różnice między Pygame i Pygame Zero",
          "Tworzymy uruchamialną grę przy użyciu PyInstaller",
          "Pomysły na poprawę naszej pierwszej gry"
        ],
        "Budujemy klon gry Timberman": [
          "Omówienie pomysłu na grę - klon gry Timberman",
          "Przygotowujemy grę w Pygame Zero",
          "Umieszczamy elementy statyczne",
          "Tworzymy własny mechanizm skalowania",
          "Wprowadzamy pierwsze animacje",
          "Wprowadzamy elementy losowe do gry",
          "Sposoby skalowania obrazów i problemy z nimi związane",
          "Radzimy sobie z problemami położenia grafik",
          "Sposoby rozpieszczania assetów i obsługa kotwicy",
          "Animujemy postać 'drwala' za pomocą dwóch stanów",
          "Piszemy provider gałęzi",
          "Reużywamy obiekty w celu oszczędzania pamięci",
          "Implementujemy możliwość grania w nieskończoność",
          "Imitujemy system wykrywania kolizji",
          "Formułujemy warunki zakończenia gry",
          "Dodajemy punktację do gry",
          "Animacja plastra drewna po ścięciu drzewa",
          "Poprawiamy animację",
          "Tworzymy mechanizm resetowania stanu gry",
          "Tworzymy i dodajemy dźwięki do gry",
          "Kompilujemy grę przy użyciu kompilatora Nuitka",
          "Omawiamy możliwości rozwoju gry Drwal"
        ],
        "Budujemy klon gry Pac-Man": [
          "Omówienie gry Gold Pac-Man",
          "Obsługujemy klawisze ruchu",
          "Animujemy postać Pac-Man",
          "Bitmap-based physics",
          "Programujemy przeciwników (duszki) w grze",
          "Obieramy kierunek przemieszczania się duszków",
          "Wykorzystujemy metodę animate frameworka Pygame Zero",
          "Programujemy decyzyjność duszków",
          "Wczytujemy monety do gry",
          "Wykrywamy kolizje",
          "Resetowanie położenia aktorów",
          "Implementacja rund",
          "Tworzenie tabeli wyników",
          "Udoskonalamy naszą grę",
          "Refaktorujemy kod naszej gry",
          "Kompilujemy grę za pomocą Nuitki",
          "Omawiamy sposoby na ulepszenie gry Gold Pac-Man"
        ],
        "Budujemy grę platformową": [
          "Omówienie gry simple platformer",
          "Budujemy strukturę kodu naszej gry w Pygame",
          "Tworzymy stany postaci",
          "Obsługujemy wewnętrzną animację postaci",
          "Animujemy pozostałe stany postaci",
          "Obsługujemy naciśnięcie wielu klawiszy naraz",
          "Tworzymy ustawienia gry i ustawienia poziomu",
          "Tworzymy klasę kamery",
          "Obsługujemy warstwy",
          "Tworzymy pierwszy poziom w grze",
          "Wybieranie obiektów podejrzanych o kolizję",
          "Dodajemy tło gry",
          "Wstępny mechanizm pionowej kolizji w grze platformowej",
          "Wstępny mechanizm poziomej kolizji w grze platformowej",
          "Omówienie sposobu na zaimplementowanie lepszego detektora kolizji",
          "Budujemy zaawansowany system kolizji",
          "Obsługa grawitacji i odbicia w poziomie sprite'ów",
          "Dodajemy elementy statyczne do gry",
          "Dodajemy drobne poprawki do gry, w tym opóźnioną detekcję spadania",
          "Umieszczamy muzykę i elementy losowe w grze",
          "Omawiamy sposoby na ulepszenie gry simple platformer",
          "Podsumowanie + co dalej"
        ]
      },
      "requirements": [
        "Chęć do nauki!"
      ],
      "description": "Obierz kurs na… Pygame!\nPygame to jedna z tych fantastycznych bibliotek, które pozwalają poszerzyć możliwości programowania gier i aplikacji multimedialnych w języku Python. Ostatnio zyskuje coraz większą popularność — w zeszłym roku pojawiła się jej nowa wersja, Pygame 2. Jeśli znasz już język Python i marzysz o tym, by wykorzystać go do kreowania świetnych gier, nie znajdziesz nic lepszego! A jeśli chcesz szybko zaznajomić się z praktyczną stroną programowania z Pygame, trafiłeś na doskonały kurs! Twórz gry w Pythonie. Kurs video. Poznaj bibliotekę Pygame pozwoli Ci odkryć sekrety tej biblioteki i przygotuje Cię do samodzielnego tworzenia w pełni profesjonalnych gier. Autor przeprowadzi Cię przez wszystkie etapy powstawania gry, od otwarcia pierwszego pliku aż po uruchomienie kompilatora Pythona, Nuitki, w celu uzyskania pliku wykonywalnego. Co więcej, tę drogę przejdzie z Tobą aż trzy razy: razem stworzycie trzy solidne gry. Nie pozostawi Cię także bez pomocy w zakresie przygotowania materiałów wyjściowych gry: grafik, dźwięków i muzyki. Ściągnij Pygame i wstąp do świata twórców obłędnych gier!\n\n\nCzego się nauczysz podczas naszego profesjonalnego szkolenia?\nNauczysz się wykorzystywać bibliotekę Pygame i framework Pygame Zero.\nZobaczysz, jak dodawać obrazy, czcionki, fonty i inne elementy do gry.\nBędziesz operować na grafikach 2D i tworzyć animacje.\nDowiesz się, jak wykorzystywać dźwięki, muzykę i napisy w grach.\nSkompilujesz grę do pliku .exe (standardowo w Pythonie nie jest to możliwe).\nPrzygotujesz obsługę zdarzeń myszki i klawiatury.\nStworzysz własny i wykorzystasz istniejący mechanizm wykrywania kolizji między obiektami.\n\nPodczas szkolenia Twórz gry w Pythonie. Kurs video. Poznaj bibliotekę Pygame opanujesz także modyfikowanie kodu innych bibliotek w celu dodania do nich funkcjonalności, nauczysz się, jak wykorzystywać w grach niektóre wzorce projektowe (provider, cache, callback) oraz jak stworzyć i obsługiwać kamerę w Pygame. Zaczniesz implementować działania wrogów (a konkretnie podejmowanie przez nich decyzji, by skutecznie zaatakować bohaterów gry). Poznasz mechanizm reagowania na zdarzenia przez sprawdzenie stanu niewidocznej grafiki pod grą (bitmap-based physics).\n\nPonadto dowiesz się, jak tworzyć własne dźwięki do gry, skąd brać grafiki i inne assety, w jaki sposób radzić sobie z niedoborem umiejętności okołoprogramistycznych (takich jak tworzenie grafik czy muzyki). Następnie sprawdzisz, jak wygląda obsługa warstw w Pygame. W gruncie rzeczy znajdziesz tu wszystko, czego potrzeba, by zbudować prostą grę 2D, od pomysłu po skończony projekt. Kurs zakończysz na poziomie średnio zaawansowanym, w pełni przygotowany do tego, by tworzyć także gry inne niż te zaprezentowane przez autora.\n\n\nRealizuj własne pomysły na gry!\nAutor szkolenia Twórz gry w Pythonie. Kurs video. Poznaj bibliotekę Pygame zapewni Ci wszelkie narzędzia do stworzenia gry, a Tobie pozostanie wymyślić jej treść, wyobrazić ją sobie i przenieść to wyobrażenie na ekran komputera. Wcześniej jednak musisz się zorientować, w jaki sposób operować „światem” (czyli wszystkim, co jest poza widocznym obszarem gry), poznać system wykrywania kolizji, opanować tworzenie prostych animacji i zdobyć nieco wiedzy na temat wszelkich innych zagadnień związanych z wykorzystaniem Pygame. Po ukończeniu kursu będziesz umiał samodzielnie stworzyć takie gry jak Mario Bros., Bomberman, Arkanoid i wiele innych. Znajdziesz tu praktyczną prezentację ogólnych metod, które zawsze działają, i będziesz mógł je zastosować w grze dowolnego typu. Solidne przećwiczenie programowania czterech gier zapewni Ci swobodę w posługiwaniu się różnymi chwytami czy sztuczkami, a także pozwoli dogłębnie poznać specyfikę używanych narzędzi.\n\n\nW poszukiwaniu nowej rozrywki\nGry są nieodłącznym elementem komputerów i smartfonów. Przykuwają oko i wciągają na długie godziny. Wiele osób (programistów i nie tylko) próbuje tworzyć gry w ten czy inny sposób. W tej dziedzinie Python powoli zdobywa coraz większą popularność — po pierwsze za sprawą najpopularniejszej biblioteki do tworzenia gier (Pygame), a po drugie z powodu świetnego silnika Godot, który pozwala programować w tym języku. Praca z grami to praca z grafikami (zwanymi sprite’ami), dźwiękiem, muzyką, obsługą zdarzeń oraz o wiele trudniejszym debugowaniem niż w przypadku aplikacji niebędących grami. W takich aplikacjach często bardzo trudno jest powtórzyć napotkany błąd, gdyż dana sekwencja występuje dość rzadko. Wymagają one także znacznie więcej testowania. Jeśli programiście zależy na tym, żeby jego gra była bezbłędna, musi w nią długo grać. Ale dla prawdziwego twórcy gier to przecież sama przyjemność!\n\n\nTylko dla wtajemniczonych\nPopularność Pygame 2, czyli wersji, która jest wykorzystywana podczas tego szkolenia, stale rośnie, a gry, które stworzysz wspólnie z jego autorem, są na takim samym profesjonalnym poziomie, jak komercyjne gry na Steamie. Nie znajdziesz drugiego tak dobrego kursu dla programistów gier z wykorzystaniem Pythona i Pygame. Dzięki niemu nauczysz się tworzyć gry typu:\nMario Bros., Prehistoric, Contra, Flappy Bird, Prince of Persia, Mega Man i podobne - gry platformowe, w których kamera chodzi za graczem, a on zwykle przemierza świat, kierując się w prawo;\nArkanoid, Timberman, tetris i tower defense - gry dwuwymiarowe, w których gracz musi jakoś pokonać otaczający go niezmienny świat;\nBomberman, Tanks, Scorched Earth - gry z równie niezmiennym światem, w których występuje element wroga żyjącego własnym życiem.\nJeśli zależy Ci nie tylko na zabawie w programistę, ale przede wszystkim na rzeczywistym programowaniu doskonałej jakości gier, nie możesz przeoczyć szkolenia Twórz gry w Pythonie. Kurs video. Poznaj bibliotekę Pygame.",
      "target_audience": [
        "Ty, jeżeli chcesz zacząć tworzyć gry za pomocą biblioteki Pygame!"
      ]
    },
    {
      "title": "Tutorial membuat Game Endless Running menggunakan Unity",
      "url": "https://www.udemy.com/course/creating-endless-running-game-in-unity/",
      "bio": "Project Preview, Character Creation, Character Movement, Platform Generator, Game Manager &Events, UI & PlayerPrefs",
      "objectives": [
        "Pelajar memahami dan mengenal tentang project yang akan dibuat dan game engine yang digunakan",
        "Pelajar mempelajari cara untuk membuat karakter dalam game termasuk control dalam game",
        "Pelajar mempelajari cara untuk membuat dunia dalam game yang tidak statis dan mendevelop value dalam game seperti highscore dan penyimpanan serta membuat UI"
      ],
      "course_content": {
        "Pengantar Unity": [
          "Pengantar Unity",
          "Project Preview",
          "Pengantar Unity"
        ],
        "Character Development": [
          "Character Creation",
          "Character Movement",
          "Character Development"
        ],
        "Game Development": [
          "Platform Generator",
          "Game Manager & Events",
          "UI & PlayerPrefs",
          "Game Development"
        ]
      },
      "requirements": [
        "Laptop atau Komputer yang sudah terinstall Software UNITY"
      ],
      "description": "Course ini fokus dalam membuat game endless running dengan menggunakan fitur dasar dalam software unity. Course ini akan mempelajari fitur dasar untuk membuat games yang dapat di implementasikan ke aliran game lainnya. Course ini  memiliki durasi video sekitar 145 menit untuk diselesaikan. Berikut ini modul yang akan dipelajari dalam course ini:\nPengantar Unity\nProject Preview\nCharacter Creation\nCharacter Movement\nPlatform Generator\nGame Manager & Events\nUI & PlayerPrefs",
      "target_audience": [
        "Pelajar yang ingin belajar membuat game endless running menggunakan Unity"
      ]
    },
    {
      "title": "Unreal Engine 5 ile Sıfırdan FPS Oyun Yapımı",
      "url": "https://www.udemy.com/course/unreal-engine-5-ile-sfrdan-fps-oyun-yapm/",
      "bio": "Unreal Engine'de baştan sona Blueprint kullanarak oyun yapmayı öğrenin!",
      "objectives": [
        "Unreal Engine kurulumu ve arayüzüne hakim ol.",
        "Unreal Engine'nin çalışma prensiplerine hakim ol.",
        "Blueprint ile herhangi bir yazılım bilgisi olmadan görsel kodlamayı öğren.",
        "Unreal Engine içinde oyun yapmak için gerekli tüm yapıları nasıl inşa edeceğini öğren."
      ],
      "course_content": {
        "Unreal Engine Kurulumu Ve Arayüzü": [
          "Unreal Engine'i İndirelim",
          "Proje Oluşturma ve Dikkat Edilmesi Gerekenler",
          "Kursa Nasıl Bakmalıyız ve Tavsiyeler",
          "Arayüz Tanıtımı ve Temel Kullanım",
          "Level Yapmak İçin Temel Gereksinimler",
          "Ödev - Kendi Fps haritanı yap!",
          "Soru Cevap (4 soru)"
        ],
        "Blueprint Çalışma Prensipleri": [
          "Blueprint Nedir",
          "Class Actor İlişkisini Öğrenelim",
          "Blueprint Arayüzünü Tanıyalım",
          "Blueprint'in Temellerini Öğrenelim",
          "Blueprintler ile Animasyonlar Oluşturalım",
          "ÖDEV - 3 Tane Blueprint Oluştur!",
          "Soru Cevap (5 soru)"
        ],
        "Karakterimizi Yapalım": [
          "Assetlerimi Projeye Yükleyelim",
          "Oyun Assetleri Nereden Bulurum",
          "Oyun Sistemini Oluşturalım",
          "Input Sistemini Oluşturalım",
          "Karakteri Hareket Ettirelim",
          "Silahı Projeye Yükleyelim",
          "Silah Animasyonlarını Karaktere Bağlayalım",
          "Ateş Etmenin Temellerini Yapalım",
          "Ateş Etmenin İşlevlerini Yapalım",
          "Nişan Alma Yapalım",
          "Şarjör Değiştirme Yapalım",
          "Silahın Arayüzünü Oluşturalım",
          "ÖDEV - Karakterini Yap!"
        ],
        "Karakterimizi Cilalayalım": [
          "Cilalama Neden Önemlidir",
          "Silahın Sallanmasını Yapalım",
          "Silahın Tepmesini Yapalım",
          "Kamera Sallanmasını Yapalım",
          "Silahın Duvara Girmesini Önleyelim",
          "TPS Karakter Animasyonlarını İndirelim",
          "TPS Animasyonlarını Karakterimize Entegre Edelim",
          "Ayak Sesi Sistemini Yapalım",
          "Nişangahı Dinamik Yapalım",
          "ÖDEV - Karakterine Bir Özellik Daha Ekle!"
        ],
        "Düşmanımızı Yapalım": [
          "Zombiyi ve Animasyonlarını Yükleyelim",
          "Zombinin Animasyonlarını Entegre Edelim",
          "Zombi Ses sistemini ve Can Widget'ini Oluşturalım",
          "Farklı Zombie Türleri Oluşturalım",
          "Zombinin Yapay Zekasını Oluşturalım",
          "Zombinin Davranışlarını Oluşturalım",
          "Zombinin Saldırmasını Oluşturalım",
          "ÖDEV - Zombine Bir Özellik Daha Ekle!"
        ],
        "Hasar Sistemini Yapalım": [
          "Karakterin Can Sistemini Yapalım",
          "Karakterin Hasar Almasını Sağlayalım",
          "Zombinin Hasar Almasını Sağlayalım",
          "Kan Efekti Hazırlayalım",
          "Yok Olma Efekti Yapalım",
          "Vurma Hissiyatını Güçlendirelim",
          "Zombi Oluşturan Bina Yapalım",
          "Oluşan Bugları Temizleyelim",
          "ÖDEV - Farklı bir Hasar Verici Ekle!"
        ],
        "Toplanabilir Sistemi Yapalım": [
          "Toplanabilir Sistemini Tasarlayalım",
          "Toplanabilir Oluşturalım",
          "Medpack Sistemi Yapalım",
          "Etkileşim Sistemini Yapalım",
          "Toplanabilirlere Outline Oluşturalım",
          "ÖDEV - Yeni Bir Toplanabilir Yap!"
        ],
        "Oyun Sistemi ve Menüleri Yapalım": [
          "Kazanma, Kaybetme ve Pause Eventlerini Oluşturalım",
          "Kazanma, Kaybetme ve Pause UI'larını Oluşturalım",
          "Zamanlayıcı Hazırlayalım",
          "Ana Menü Hazırlayalım",
          "Ayarlar Menüsü Hazırlayalım",
          "Grafik Ayarları Yapalım",
          "Ses Ayarları Yapalım",
          "ÖDEV - Kendi Menülerini Tasarla!"
        ],
        "Çevre Yapalım": [
          "Asset Paketini Fab'den Yükleyelim",
          "Landscape Oluşturalım",
          "Foliage Oluşturalım",
          "Level'ın Işıklarını Yapalım",
          "Level Tasarımına Başlayalım",
          "Level Tasarımını Bitirelim",
          "ÖDEV - Kendi Çevreni Tasarla!"
        ],
        "Cutscene Yapalım": [
          "Sequence Oluşturalım",
          "Raylı Sequence Oluşturalım",
          "Sequenceleri Birleştirip Cutscene'i Yapalım",
          "ÖDEV - Kendi Cutscene'ini Yap!"
        ]
      },
      "requirements": [
        "Herhangi bir yazılım ve oyun geliştirme bilgisi gerektirmez, isteyen herkes başlayabilir."
      ],
      "description": "Merhaba!\nUnreal Engine dünyasına adım atmak isteyenler için hazırladığım bu kurs, sıfırdan başlayarak Blueprint ile bir shooter oyunu yapmanızı sağlayacak kapsamlı bir rehber sunuyor. Eğer oyun geliştirmeye meraklıysanız ve Unreal Engine konusunda yeniyseniz, doğru yerdesiniz.\nKurs boyunca Unreal Engine’in temel yapı taşlarını öğrenerek, Blueprint görsel programlama aracını kullanarak oyun mekaniği geliştirmeyi öğreneceksiniz. Ayrıca karakter hareketleri, silah kullanımı, düşman yapay zekası ve oyun içi etkileşimleri nasıl tasarlayacağınızı adım adım keşfedeceksiniz.\nKurs boyunca her bölümde ödevler ve quizlerle öğrendiklerinizi pekiştirecek, gerçek projelerde kullanabileceğiniz beceriler kazandıracağım. Bölüm sonunda yapacağınız ödevler, öğrendiğiniz her yeni bilgiyi pratiğe dökmenizi sağlayacak ve quizlerle gelişiminizi takip edebileceksiniz. Bu şekilde, kursun sonunda güçlü bir oyun geliştirme becerisi elde edeceksiniz.\nKursun amacı, sıfırdan başlayarak sizi kendi oyun projelerinizi geliştirebilecek seviyeye getirmektir. Verdiğim örneklerle her adımı pratikte uygulayacak, projelerinizi geliştirirken oyun dünyasına dair derinlemesine bilgiler edineceksiniz.\nBu kurs, Blueprint ile oyun geliştirme sürecini anlamanızı sağlayacak, aynı zamanda oyun yapımındaki önemli temel konseptlere dair bilgi ve deneyim kazanmanıza yardımcı olacaktır. Unreal Engine’de kendi oyun projelerinizi tasarlamak için ihtiyacınız olan tüm bilgiyi bu kursta bulabilirsiniz.\nBu kurs, sadece kodlama değil, oyunların genel hissiyatını nasıl geliştireceğinize dair tüyolar da sunuyor. Oyuncu deneyimini iyileştirmek için dikkat edilmesi gereken detaylar, doğru ses efektleri, görsel unsurlar ve animasyonların nasıl entegre edileceği gibi önemli konuları ele alarak, oyununuzu daha profesyonel hale getirecek ipuçları paylaşıyorum.\nYaratıcılığınızı sınırlamadan, adım adım profesyonel bir shooter oyunu yapmaya hazır mısınız? O zaman, sizi Unreal Engine ile oyun geliştirme dünyasına davet ediyorum!",
      "target_audience": [
        "Oyun geliştirmeye meraklı ve bu alanda kendini geliştirmek isteyen insanlar içindir."
      ]
    },
    {
      "title": "Unreal Engine 5: Kompleksowe wprowadzenie",
      "url": "https://www.udemy.com/course/unreal-engine-5-kompleksowe-wprowadzenie/",
      "bio": "Opanuj Unreal Engine 5 i twórz własne interaktywne projekty bez znajomości programowania.",
      "objectives": [
        "Będziesz umieć obsługiwać Unreal Engine 5",
        "Stworzysz realistyczne postacie do gier",
        "Wyreżyserujesz własne animacje",
        "Posiądziesz umiejętność budowy realistycznych środowisk",
        "Zapoznasz się z wizualnym programowaniem w systemie Blueprint",
        "Wykonasz naturalne symulacje systemów cząsteczkowych dzięki systemowi Niagara",
        "Stworzysz własne, realistyczne materiały",
        "Opanujesz techniki oświetlenia przy użyciu systemu Lumen",
        "Zastosujesz animacje Motion Capture",
        "Dowiesz się jak dodać dźwięki i muzykę",
        "Poznasz techniki optymalizacji grafiki w grach"
      ],
      "course_content": {},
      "requirements": [
        "Komputer zdolny uruchomić Unreal Engine 5.2 lub nowszy",
        "Nie musisz mieć doświadczenia w pracy z silnikami do gier ani grafiką komputerową. Ten kurs wprowadzi Cię w te zagadnienia."
      ],
      "description": "Ten kurs nauczy cię wszystkiego co musisz wiedzieć aby rozpocząć swoją przygodę z Unreal Engine 5 i tworzyć swoje własne interaktywne projekty, nawet bez umiejętności programowania.\nZostał on stworzony w taki sposób aby przekazać ci wszystkie umiejętności niezbędne do tworzenia samodzielnych interaktywnych projektów oraz gier w programie Unreal Engine 5, nawet jeżeli masz małe lub zerowe doświadczenie w tej dziedzinie.\nNajwiększy w Polsce\nNa polskim rynku istnieje sporo kursów uczących Unreal Engine 5, jednak ciężko jest znaleźć taki, który od razu podniesie twoje umiejętności i bazując na praktycznych przykładach, sprawi, że będziesz w stanie tworzyć swoje własne projekty.\nZostał on zbudowany w taki sposób aby każda osoba, wyciągnęła z niego jak najwięcej przydatnej i praktycznej wiedzy. Nie ważne czy dopiero zaczynasz swoją przygodę z Unreal Engine 5, czy masz już z nim pewne doświadczenie.\nCzego się nauczysz:\nZrozumiesz jak działa Unreal Engine i będziesz poruszać się w nim bez najmniejszego problemu\nZapoznasz się z nowym systemem oświetlenia o nazwie Lumen\nStworzysz swoje własne, realistyczne środowiska\nZaprogramujesz logikę projektu przy użyciu wizualnego systemu programowania o nazwie Blueprint\nWymodelujesz fotorealistyczne postacie i wprawisz je w ruch wykorzystując animacje Motion Capture\nDowiesz się jak dodać dźwięki i muzykę\nWyreżyserujesz własne animacje\nWykonasz naturalne symulacje systemów cząsteczkowych dzięki systemowi Niagara\nPoznasz sprytne triki i sposoby na przyspieszenie swojej pracy\nZapiszesz i wyrenderujesz swoje animacje\nPraktyczne umiejętności i kreatywne projekty\nPoznawaj nowe narzędzia i ucz się kolejnych zagadnień, pracując na praktycznych projektach stworzonych specjalnie do tego kursu.\nWkrocz w świat interaktywnej grafiki 3D\nNiezależnie od twojego doświadczenia lub roli, którą chcesz wykonywać, ten kurs został zaprojektowany w ten sposób aby przekazać ci wszystko co musisz wiedzieć by wnieść swoje umiejętności na zupełnie nowy poziom.\nMoże lubisz budować realistyczne środowiska, a może interesuje cię animacja? Możliwe też, że twoim celem jest tylko programowanie. Każda z tych dziedzin została przestawiona w kursie, ponieważ to właśnie dzięki rozwijaniu swoich umiejętności i zainteresowań możesz nie tylko wkroczyć w świat 3D, ale także stać się jego częścią.\nPo brzegi wypakowany zawartością\nDzięki temu kursowi zapoznasz się z kluczowymi zagadnieniami i technikami związanymi z tworzeniem interaktywnych projektów czasu rzeczywistego w programie Unreal Engine 5.\nRozpoczniesz od nauki podstaw i poznania bazowych konceptów, których działa cały proces projektowania i tworzenia projektów, a następne będziesz rozwijać tę wiedzę dodając do niej kolejne etapy i elementy, które później wykorzystasz w praktycznych projektach realistycznych środowisk.\nDowiesz się w jaki sposób powstają wszystkie efekty graficzne jakie możesz zaobserwować w wielu grach komputerowych, a także odtworzysz je ze swoim własnym pomysłem. W ten sposób powstaną naturalne systemy cząsteczek w systemie Niagara czy niesamowicie realistyczne oświetlenie wykorzystując do tego najnowszy system Lumen. Dodatkowo oczywiście wyreżyserujesz wyjątkowe animacje, przygotujesz złożone systemy materiałów, a także wymodelujesz wyjątkową postać, którą następnie ożywisz dzięki prawdziwym animacjom Motion Capture.\nJednak czym jest tworzenie pięknych i intrygujących światów bez odpowiednich elementów, które możesz w nich umieścić? To również znajdziesz w tym kursie. Poznasz najlepsze miejsca w internecie, zawierające realistyczne obiekty 3D, materiały, tekstury, a także animacje Motion Capture i interfejsy użytkownika. Całą tę wiedzę wykorzystamy w kursie pracując nad naszymi projektami.\nPo ukończeniu kursu będziesz bardzo pewnie poruszać się po Unreal Engine 5. Będziesz posiadać praktyczną wiedzę do bezproblemowego wykonywania dowolnych interaktywnych projektów w czasie rzeczywistym. Może to być gra komputerowa, realistyczna animacja, czy nawet krótki film i kto wie... może dzięki temu dostaniesz swoją wymarzoną pracę ;)\nDodatkowa zawartość\nAby jeszcze bardziej ułatwić przekazywanie oraz przyswajanie wiedzy, znajdziesz tu dodatki stworzone specjalnie z myślą o tym kursie. Są to pomocnicze obrazy rozbijające bardziej złożone tematy na mniejsze części, dzieki czemu na pewno zrozumiesz i zapamiętasz każde omawiane zagadnienie. Znajduje się tu również wiele obiektów 3D wykonanych w taki sposób aby jak najlepiej pasować do każdego z tematów kursu.\nKto mnie będzie uczył?\nDamian/PL Tutors. Dzięki wieloletniemu doświadczeniu w prowadzeniu kursów, wykładaniu na uczelni czy przekazywaniu wiedzy poprzez kanał YouTube, ten kurs został stworzony specjalnie w ten sposób aby wszystkie tematy, nawet te bardziej skomplikowane, przekazać w prosty, przyjemny i angażujący sposób, a co najważniejsze, przy użyciu prawdziwych i praktycznych przykładów, które będziesz mógł wykorzystać w swoich przyszłych projektach.",
      "target_audience": [
        "Początkujący twórcy, pragnący stworzyć swój pierwszy interaktywny projekt",
        "Graficy komputerowi chcący przenieść swoje dzieła do świata 3D w czasie rzeczywistym",
        "Game designerzy, potrzebujący obycia z silnikiem Unreal Engine 5",
        "Osoby interesujące się tworzeniem gier, interaktywnych aplikacji i animacji"
      ]
    },
    {
      "title": "Vídeo aulas de Unreal Engine 4 com o Professor Neylson Reis.",
      "url": "https://www.udemy.com/course/neohgames/",
      "bio": "Pacote aulas PRO inclusas - Aulas Exclusivas - Vídeo aulas Neoh Games - Linguagem BLUEPRINT",
      "objectives": [
        "Desenvolvimento e programação de jogos na Unreal Engine 4",
        "Linguagem Blueprint + Pacote básico + Pacote avançado PRO + envios recentes"
      ],
      "course_content": {},
      "requirements": [
        "Interesse em se tornar programador e desenvolvedor de jogos na Unreal Engine 4."
      ],
      "description": "Este curso está incluso pacote básico + Pacotes de Aulas PRO (Exclusivas)\n+ Pacote de aulas PRO avançadas desenvolvidas e ministradas pelo professor Neylson Reis da Neoh Games.\nO pacote de Aulas PRO está em progresso constante, logo, além de adquirir as aulas já disponíveis, você recebe as novas aulas assim que forem publicadas, você também tem acesso a apostilas de envio por link disponibilizadas pelo professor Neoh.\nAmbos os pacotes recebem novas aulas semanais e mensais.\nTorne-se um programador, seja um desenvolvedor Unreal Engine 4. Junte-se a nossa turma de mais de 1200 alunos desenvolvedores em progresso. Nossos números estão aumentando, venha crescer conosco.\nTodas vídeo aulas estão em português do Brasil.",
      "target_audience": [
        "Programadores e Desenvolvedores Unreal Engine 4 - iniciantes e avançados"
      ]
    },
    {
      "title": "Naucz się programowania tworząc grę w Python",
      "url": "https://www.udemy.com/course/stworz-gre-w-python/",
      "bio": "Poznaj podstawy programowania i zaskocz znajomych",
      "objectives": [
        "Poznasz podstawy Python, jednego z najpopularniejszych języków programowania w dzisiejszym świecie",
        "Dowiesz się jak wykorzystywać różne moduły Pythona, do tworzenia programów",
        "Poznasz PyGame, moduł Python dedykowany tworzeniu gier",
        "Dowiesz się jakich programów najlepiej używać do programowania",
        "Zdobędziesz świetne podstawy do dalszego szerzenia swojej wiedzy w Python, jak i każdym innym języku programowania"
      ],
      "course_content": {},
      "requirements": [
        "Jedyne co musisz posiadać do komputer na którym możesz instalować rzeczy",
        "Wszystkie programy z których będziesz korzystać w trakcie kursu są darmowe. W pierwszej lekcji pokaże Ci skąd je pobrać"
      ],
      "description": "Umiejętność programowania jest jedną z najważniejszych umiejętności, których możesz się nauczyć w XXIw.\nKomputeryzacja przejmuje wiele dziedzin życia i prawdą jest, że niezależnie od tego co chcesz osiągnąć zrozumienie działania komputera oraz podstaw programowania będzie mogło Ci w tym pomóc.\nW tym kursie nauczysz się podstaw programowania w Python, jednym z najbardziej popularnych języków programowania, który wykorzystywany jest od bankowości, przez automatyzacje działań, na autonomicznych samochodach kończąc!\nJednak zapisując się na ten kurs nie będziesz klepać pustych regułek. Tutaj podwiniesz rękawy i siądziesz za sterami tworząc własną grę w Python! (a właściwie to nawet dwie!)\nUważam, że praktyczne wykorzystywanie umiejętności i podejście do nauki w którym nie tylko jesteś biernym słuchaczem, ale podążasz z kursem na swoim komputerze, tworząc, edytując i dostosowując elementy poznane w poszczególnych lekcjach pozwoli Ci na długotrwałe zapamiętanie zdobytej wiedzy oraz wyciągnięcie z tego kursu czegoś fajnego do pochwalenia się przed znajomymi, czy przyszłymi pracodawcami.\n\n\nDo przystąpienia do kursu nie potrzebujesz żadnej wcześniejszej wiedzy. Wystarczy chęć do nauki, trochę czasu i komputer na którym będziesz mógł podążać z programowaniem kolejnych elementów Twojej gry. Oczywiście na wstępie kursu pokaże Ci wszystkie niezbędne programy i powiem Ci skąd je ściągnąć. I nie musisz się obawiać dodatkowych opłat. Wszystkie są darmowe.\nDodatkowo, od momentu zapisania się na kurs będziesz mieć dostęp do kontaktu ze mną, gdzie z chęcią pomogę Ci z jakimikolwiek pytaniami, które mogą pojawić się w Twojej głowie w trakcie, jak również po kursie.\nJeśli jeszcze zastanawiasz się czy kliknąć przycisk \"zapisz\" powiem Ci, że kurs objęty jest również 30-dniową gwarancją zwrotu pieniędzy. Bez żadnych dodatkowych pytań. Jeśli uznasz, że cokolwiek w tym kursie Ci się nie podoba po prostu oddam Ci za niego pieniądze i o nic nie będę pytał.\nNie zastanawiaj się dłużej i zapisz się już teraz!",
      "target_audience": [
        "Początkujący programiści którzy chcą nauczyć się tworzenia gier",
        "Osoby bez żadnego doświadczenia w programowaniu, które chcą poznać ten świat",
        "Osoby, które chcą stworzyć własny program lub grę"
      ]
    },
    {
      "title": "【Unity C#】改訂版：UniTask入門",
      "url": "https://www.udemy.com/course/unity-unitask/",
      "bio": "UniTaskを使ってUnityでお手軽非同期処理をしよう！",
      "objectives": [
        "UnityにおけるUniTaskの基本的な使い方を学べます",
        "画像のダウンロードを待つ、n秒待つといったサンプルを実装し、その方法を学べます",
        "C#の例外処理について学びます",
        "Taskを途中で終了させる方法及び終了させない場合のリスクについて学びます"
      ],
      "course_content": {
        "Lesson0:はじめに": [
          "Lesson0"
        ],
        "Lesson1:UniTaskを使って簡単な処理を書いてみよう": [
          "Lesson1"
        ],
        "Lesson2:画像をダウンロードして表示する処理を書いてみよう！": [
          "Lesson2"
        ],
        "Lesson3:Unityの機能を待つ方法": [
          "Lesson3"
        ],
        "Lesson4:Taskをキャンセルする方法について": [
          "Lesson4"
        ]
      },
      "requirements": [
        "Unityをある程度触ったことのある方",
        "UniTaskを使ってみたい方"
      ],
      "description": "最新公開バージョンについて(2022年12月22日)\n現在公開されている動画は、一部フィードバックを反映した最新バージョンになります。\n全てのレクチャーをFHD(1080)に再録画し、学習しやすいように調整\nC#の非同期処理を行う機能のTaskをUnity用に最適化したUniTaskというライブラリの基本的な使い方を学習します。\n簡単なサンプルをいくつか実際に作成し、動作させUniTaskへの理解を深めます。\nまたタスクを安全に終了させる方法も学びます",
      "target_audience": [
        "Unityをある程度触ったことのある方"
      ]
    },
    {
      "title": "Unity 2D RPG Game Development",
      "url": "https://www.udemy.com/course/unity-2d-rpg-game-development-complete-free-course/",
      "bio": "Create your first 2D RPG in Unity with C#! Learn tilemaps, animations, enemy AI, and combat systems — step by step.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting Up Player Sprite and Animator"
        ],
        "2D Animations": [
          "Create 2D Directional Animation with Blend Trees"
        ],
        "Tilemap": [
          "Build tilemap with unity",
          "Layering & Collision Explained",
          "Player Depth & Boundaries",
          "Elevation System with Entry, Exit, and Boundary Setup",
          "Tilemap Level Build"
        ],
        "Cinemachine": [
          "Camera Follow"
        ],
        "Directional Idle Animation": [
          "Directional Idle Animations"
        ],
        "Create Melee Attack": [
          "Slash in All Directions",
          "Creating Sword Slash Effects",
          "Slash FX That Follow Direction"
        ],
        "Enemy AI": [
          "Smart Enemy AI",
          "Enemy Patrol, Chase",
          "Player Detection & Attack Logic"
        ]
      },
      "requirements": [
        "Basic understanding of Unity interface (Inspector, Hierarchy, Scene view)",
        "Some beginner-level knowledge of C# programming (variables, methods, if statements)",
        "Unity 2021 or later installed (any recent LTS version works)",
        "Eagerness to learn and build your own 2D RPG game step by step!"
      ],
      "description": "Do you want to build your own RPG game but don’t know where to start?\nIn this beginner-friendly course, you'll learn how to create a complete 2D top-down RPG game in Unity — from setting up the map and player movement to building enemy AI that attacks the player. Whether you're just starting with game development or want a hands-on Unity project to boost your skills, this course is made for you.\nWe’ll guide you step-by-step using Unity and C#, with short, focused lessons that make learning fun and practical. By the end, you'll have a working RPG prototype and the confidence to expand it with your own ideas!\nThis course is for:\nBeginners learning Unity for the first time\nAspiring indie devs building an RPG portfolio\nAnyone who prefers hands-on learning through real projects\n\nWhat You’ll Learn:\nUnity 2D basics: Tilemap, Rigidbody2D, Colliders\nC# scripting: movement, animation triggers, AI logic\nEnemy behavior: patrol, chase, attack\nAnimation state control via code\nCoroutine-based attack cooldowns\nPreparing for health and damage mechanics\n\nRequirements:\nBasic Unity and C# knowledge (no need to be advanced)\nUnity installed (2021 or later recommended)\nA PC or Mac capable of running Unity\n\n\nWhat you’ll build:\nA 2D tile-based world using Unity’s Tilemap system\nA player with smooth movement and animation\nSmart enemies that patrol, detect, and attack the player\nA working combat system with directional attacks\nA health system for the player (coming soon)\nA strong foundation to build your dream RPG!",
      "target_audience": [
        "Beginners who want to build their first 2D RPG game using Unity",
        "Self-taught developers looking for a hands-on Unity project",
        "Aspiring indie game developers who want to learn enemy AI, animation, and combat systems",
        "Anyone passionate about game development and ready to take the next step toward creating their own RPG!",
        "Unity learners who prefer building real games instead of following theory-only tutorials"
      ]
    },
    {
      "title": "Unity 6 par la pratique : Le cours ultime TOUT en 1 !",
      "url": "https://www.udemy.com/course/formation-unity-par-la-pratique-le-cours-ultime-tout-en-1-unity/",
      "bio": "La formation ultime (+20 projets) pour devenir un expert en développement de jeux vidéo professionnels avec Unity 6 !",
      "objectives": [
        "Apprendre à utiliser Unity comme un pro avec un expert",
        "Développer des jeux avec Unity et C#",
        "Prendre en main les principaux outils de Unity",
        "Mettre en place les bonnes pratiques",
        "Coder comme un pro grâce à une architecture logicielle solide",
        "Rendre des jeux \"Juicy\" grâce au \"Game Feel\"",
        "Comprendre la partie marketing pour promouvoir son jeu",
        "Utiliser des outils qui gravitent autour de Unity pour aller plus loin qu'un \"petit tuto\"",
        "Utiliser l'intelligence artificielle générative pour concevoir des jeux avancés",
        "Optimiser son jeu pour booster ses performances",
        "Découvrir les astuces de level design indispensables",
        "Créer et utiliser des ressources (Assets) de haute qualité",
        "Vous allez découvrir comment créer vos outils et vous plugins pour étendre les fonctionnalités de Unity",
        "Nous allons développer un éditeur de niveaux pour concevoir des scènes très rapidement",
        "On apprendre à communiquer avec des bases de données et des API REST",
        "Je partagerai avec vous ce qui est demandé en entreprise et par les studios de jeux vidéo",
        "On va développer un jeu de bataille de bateaux pirates",
        "On va développer un jeu de Tower Defence ultra polish",
        "On va créer un jeu d'aventure en open world à la 3ème personne",
        "On ca créer un Dungeon Crawler en 3D mais en utilisant des Sprites 2D pour un rendu original",
        "On va créer plusieurs jeux proposant un mode multi-joueurs",
        "On va découvrir Netcode, Mirror et Photon",
        "Nous allons voir comment protéger notre jeu contre le hack et la triche",
        "Nous allons mettre en place un système qui permet de charger des ressources depuis un serveur (comme un DLC)",
        "On apprendre à communiquer avec une base de données pour stocker des infos sur un serveur",
        "On verra comment appeler une API web pour échanger des infos avec u serveur"
      ],
      "course_content": {},
      "requirements": [
        "Avoir envie d'apprendre Unity",
        "Avoir un accès internet",
        "Être motivé pour suivre une vraie formation réellement complète",
        "Être passionné par le développement de jeux vidéo"
      ],
      "description": "Vous recherchez la meilleure formation Unity du marché ? Bienvenue !\nPlus de 165h de contenu vidéos, près de 750 sessions et des dizaines de projets/exercices vous attendent dans cette formation au contenu incomparable et inégalé.\n\n\n[ Encore un autre guide Unity ? ]\nVous n'êtes pas là pour simplement choisir un cours Unity, vous êtes aussi là pour choisir avec qui vous souhaitez vous former. Et un formateur compétent c'est toujours mieux !\nQue diriez vous d'apprendre avec un développeur Unity certifié ? Expert dans le domaine depuis plus de 15 ans, auteur de très nombreux livres sur le développement de jeux et créateur de jeux à succès… J'ai eu l'occasion de travailler avec les plus grands éditeurs de jeux vidéo et de réaliser des projets pour plusieurs groupes du CAC 40.\nEn choisissant d'apprendre Unity 6 avec moi, vous avez la certitude d'acquérir les bonnes pratiques et d'avoir mon retour d'expérience. Je partagerai mes secrets et mes astuces qui font la différence. Il est important de faire le bon choix dès le début car les habitudes sont difficiles à perdre !\nNous irons beaucoup plus loin que simplement apprendre Unity, nous apprendrons à concevoir des jeux de qualité et optimiser notre workflow. Je vous révèlerai également ce que j'ai appris avec les meilleurs et ce qui est attendu en entreprise. Vous découvrirez l'envers du décor de mes projets et vous allez acquérir des compétences de pointe que vous ne trouverez nulle part ailleurs.\nJe vous révèle les coulisses sur des projets réels et je vous partage ce que j'ai appris en travaillant pour les plus gros éditeurs de jeux. Ici on est sur du concret, aucune autre formation ne vous partagera ces infos extrêmement rares et avancées que seul ceux ayant réellement été sur le terrain ont.\n99% des formations que vous pouvez trouver ne couvrent que les bases et ne vous permettent pas de réellement vous projeter. Ici je vous présente les bases bien sûr mais aussi des notions intermédiaires, avancées et très avancées. Je vous montre des techniques utilisées dans le monde pro : Créer un DLC,  coder un système anti-cheat, personnaliser entièrement le logiciel Unity pour intégrer nos outils à l'éditeur, automatiser des tâches, tester/documenter un code, optimiser un projet, communiquer avec une base de données, le marketing, le multithreading, l'intelligence artificielle... Vous ne pouvez pas imaginer tout ce qu'il est possible de faire avec Unity et tout ce que j'ai préparé pour vous.\n\n\n[ 169 heures de cours c'est beaucoup non ? ]\nC'est vrai que ce chiffre peut paraître élevé mais en réalité pas tant que ça. Pour devenir ingénieur en informatique il faut faire 5 ans d'étude avec environ 1500 heures de cours par an. Sans compter les projets et stages. Donc 160 heures c'est pas tant que ça. Et puis on a besoin de plus de 169 heures pour créer un jeu donc non c'est pas \"trop\".\nPar contre si vous voulez aller vite, j'ai prévu des vidéos récapitulatives qui vous permettront d'échapper aux vidéos théorie et aller très vite. Ensuite, une fois passé l'initiation, la formation est découpée en projets. Vous pourrez donc suivre les projets qui vous intéressent si vous ne souhaitez pas regarder tout le cours d'un coup. Chaque projet est indépendant et peut se faire en quelques heures. Mais dans mon cours on rentre dans les détails. Pour ceux qui veulent creuser le sujet à fond, vous serez servi !\n\n\n[ Pourquoi apprendre Unity6 avec moi ? ]\nVous avez certainement déjà suivi des formations Unity d'autres formateurs et il y a fort à parier que vous avez soit abandonné soit pas réussi à appliquer concrètement les exemples sur vos projets. C'est normal, leur méthode n'est pas bonne. En suivant ma formation, vous allez découvrir une nouvelle façon de vous former inégalée.\nMa méthode d'apprentissage unique a fait ses preuves et vous avez la certitude de réussir votre apprentissage avec moi.\nD'ailleurs je suis tellement convaincu que ce cours vous donnera pleine satisfaction que je vous offre une garantie \"satisfait ou 100% remboursé\" durant 30 jours. Vous ne prenez aucun risque, si ce n'est le risque de devenir un créateur de jeux à succès.\nCette formation est sans équivalence sur le marché.\n\n\n[ OK c'est bien mais il y a quoi dans ce cours incroyable ? ]\nIl s'agit de la formation la plus complète et la plus poussée du marché toutes langues confondues.\nEn général, les autres formateurs que vous trouverez n'ont aucune réelle expérience. Pour ma part j'ai travaillé sur le terrain auprès des meilleurs (plusieurs éditeurs dans le top 10). Je profiterai de cette formation pour vous enseigner Unity mais aussi les bonnes pratiques, des astuces que l'on apprend qu'en entreprise, je vous donnerai des conseils pour trouver un job dans le secteur et je vous dévoilerai ce que les studios recherchent. Je ne vais pas me contenter de juste vous présenter Unity, je vous expliquerai comment utiliser tout un tas d'outils complémentaires pour que vous puissiez être autonomes de A à Z sur n'importe quel type de projet. Vous aurez également accès à des projets, des packs de ressources, des exercices corrigés et à tout mon code source.\n\n\n[ Parlons du programme en détail ! ]\n\nUn peu de théorie\nOui, il y a un peu de théorie, je ne vais pas vous le cacher mais c'est un passage obligatoire. Alors bonne nouvelle : j'ai créé pour les pressés ou les personnes qui connaissent déjà un peu Unity des vidéos récapitulatives en fin de section. Cela vous permettra de passer plus vite sur la théorie. Dans les premières sections vous découvrirez :\nComment installer, configurer et utiliser Unity\nComment créer un projet et mettre en place des scènes simples\nComment ajouter des comportements à vos objets de jeu (physique, textures, audio...)\nComment trouver et utiliser des ressources (modèles 3D, décors...)\nComment concevoir des terrains ou créer des environnements\nComment créer des interfaces pour les utilisateurs\n\nUn peu de code\nPour développer des jeux vidéo il faut \"développer\". On utilise pour cela le langage de programmation C#. C'est un langage plutôt simple à prendre en main. Je vous proposerai de nombreuses vidéos pour vous former à ce langage. Que vous soyez débutant, intermédiaire ou expert, vous trouverez votre bonheur. J'ai créé des vidéos avec une difficulté croissante que vous pourrez suivre en fonction de votre niveau. Vous apprendrez :\nLes bases du langage C#\nLes notions intermédiaires et avancées en C#\nComment écrire des scripts C# spécifiquement pour Unity\nComment coder des algorithmes avancés\nComment mettre en place une architecture logicielle professionnelle grâce aux design patterns\n\nQuelques exercices\nAfin de vérifier si vous avez bien assimilé les notions du cours je vous proposerai de très nombreux exercices corrigés. Vous pourrez vous exercice, tester vos connaissances, vous entrainer puis voir la solution en vidéo. Vous aurez un cahier d'exercices format PDF en début de formation avec les instructions.\n\n\nLa bataille navale\nIl s'agit du premier atelier de cette formation. Nous mettrons en pratique nos connaissances dans un projet concret afin de passer à la pratique en douceur. Nous allons créer quelques briques de gameplay sympas :\nOn va créer un océan et des bateaux\nOn va coder le système de navigation\nNous allons ajouter des canons et des boulets\nNous allons coder un système de tir pour les canons\nOn verra comment créer un bateau pirate ennemi\nNous allons créer notre toute première IA basique\nOn verra comment couler un navire\nOn va ajouter des effets visuels de dingue\n\n\nL'intelligence artificielle\nDans un jeu vidéo il y a des IA. Nous allons découvrir les principales techniques de conception d'intelligences artificielles avec Unity. Cela inclus :\nDéfinir un champ de vision pour un ennemi\nDétecter le joueur\nPourchasser et attaquer le joueur\nSe mettre à couvert\nCréer un système de patrouille\nCréer des zones de navigation\nCoder un système de mouvement autonome\n\n\nCréer des assets\nLes assets ce sont des ressources (textures, musiques, modèles 3D...). C'est ce qui permet de créer des jeux. Je vous montrerai comment trouver et télécharger gratuitement des assets et je vous donnerai également mes propres ressources que j'ai créées moi-même. En plus de cela, je vous montrerai comment vous allez pouvoir facilement créer vous-même vos propres ressources afin de maîtriser la fabrication de vos jeux vidéo de A à Z.\n\n\nLe Tower Defense\nC'est le premier méga gros projet de cette formation. Il s'agit d'un jeu que nous allons coder intégralement. Je vous montrerai des astuces de pros pour non seulement écrire un code ultra robuste mais aussi pour obtenir un rendu visuel ultra qualitatif. Et c'est ça qui fera la différence sur vos projets. Vous allez découvrir des techniques et des méthodes inédites. Notre jeu intègrera de nombreuses fonctionnalités :\nOn va voir comment créer des niveaux\nOn va concevoir un environnement plaisant\nNous allons ajouter la tour\nNous aurons des ennemis\nNous verrons comment gérer la difficulté du jeu\nNous allons gérer la vie des monstres et du joueur\nNous mettrons en place des effets ultra satisfaisants\nNous pourrons construire des tourelles et les faire évoluer\nNous écrirons un code béton\nOn va publier le jeu, créer un kit de presse et voir comment trouver un éditeur\n\n\nDévelopper des outils maison\nJe vous montrerai comment développer vos propres outils pour Unity. Cela est hyper courant dans le monde professionnel car lorsqu'on réutilise une fonctionnalité, on développe un plugin qui pourra être réutilisé de projets en projets. Je vous présenterai 3 exemples d'outils :\nNous allons voir comment développer un éditeur de niveaux\nNous allons créer notre propre solution de Game Analytics de A à Z\nNous allons coder une extension pour étendre l'éditeur Unity\n\n\nUn Open World\nIl s'agit du second super projet de la formation. Nous allons créer un monde ouvert en 3D afin de partir à l'aventure. Notre jeu permettra au joueur d'incarner un personnage capable d'explorer des îles, de combattre des monstres et de réaliser des quêtes. Voici en détail les principales briques de gameplay que nous allons coder :\nOn va créer un monde ouvert immense\nOn va créer un personnage capable d'explorer les terres\nOn va créer un bateau pour aussi explorer l'océan\nOn ajoutera des monstres à affronter\nIl y aura un système de quêtes\nOn mettra en place des dialogues\nLe joueur aura un inventaire\nOn va créer une cinématique et un trailer\nOn va optimiser le jeu avec des techniques avancées\nOn implémentera un système de sauvegarde\n\n\nL'IA générative\nPour ceux qui ne le savent pas, je maîtrise assez bien les IA génératives. Je vous partagerai donc mes connaissances pour vous montrer comment créer une infinité de ressources pour vos jeux grâce à l'IA. On verra notamment comment :\nGénérer des modèles 3D grâce à l'IA\nGénérer des textures et images avec l'IA\nGénérer des musiques et des sons via l'IA\nGénérer des dialogues avec l'IA\nFaire de la synthèse vocale poussée par IA\nSe servir de l'IA pour créer une voix off, une cinématique et un scénario\n\n\nDungeon Crawler\nJ'aime créer des jeux avec un style graphique original. J'essaye toujours d'innover et de trouver des astuces pour aboutir à un visuel plaisant. Dans cet atelier je vous montrerai comment créer un jeu en 3D tout en utilisant des ressources en 2D pour concevoir ce monde 3D. Je profiterai de cet atelier pour vous décrire étape par étape comment cela se passe dans un studio pour concevoir un jeu vidéo.\n\n\nLe level design\nLe level design c'est la conception des niveaux. Le game design c'est l'élaboration des règles de votre jeu. Dans cette section, je partagerai avec vous des conseils essentiels et incontournables pour mettre en place un bon level design. Et c'est quoi un bon level design ? C'est réussir à guider le joueur là où vous souhaitez sans que celui-ci n'ait l'impression d'être pris par la main. Cela doit se faire en toute subtilité.\n\n\nLe Mini Golf RPG\nAlors la c'est tout simplement mon projet personnel préféré que je vous révèle. C'est le jeu que j'ai créé qui est probablement mon préféré. Il s'agit d'un jeu de Golf mélangé à un RPG. On aura toutes les mécaniques des RPG intégré à un jeu de golf. Voici quelques exemples de fonctionnalités :\nOn aura de la santé et de la magie\nOn pourra activer des sortilèges\nOn pourra affronter des ennemis\nIl y aura des objets à ramasser ainsi que de l'or\nOn aura même des combats de boss\nOn pourra utiliser des potions\nIl y aura des quêtes et succès à débloquer\nOn pourra aller au village acheter de l'équipement\nOn pourra monter de niveau, débloquer des compétences et améliorer des pouvoirs\nOn va peaufiner le jeu comme vous ne l'avez jamais vu dans un autre tuto\n\n\nDes jeux multi-joueurs\nNous allons développer plusieurs projets de jeux en ligne / en réseau / battle royale. L'objectif est d'apprendre à créer des jeux multiplayers en utilisant les principales solutions du marché :\nMirror\nPhoton\nNetcode\nNous allons donc développer 4 projets de jeux multijoueur différents en utilisant ces outils. Un jeu de combat de tanks en arène, un jeu d'arcade 3D, un clone de Clash Royale et un autre jeu d'affrontement. Vous pourrez donc créer votre propre Battle Royale grâce à ces techniques.\nCela nous permettra également d'apprendre à Créer un DLC, développer une solution antitriche (anti-cheat), communiquer avec un serveur web, gérer des comptes utilisateurs, sauvegarder des données en ligne, mettre à jour un jeu à distance...\n\n\nCommuniquer avec des API\nL'objectif est de voir comment connecter un jeu Unity à un serveur web / une base de données. Cela vous permettra de mettre en place des fonctionnalités incontournables comme :\nGérer des comptes utilisateurs (inscription / login)\nStocker des données dans le cloud (score)\nRécupérer des données sur un serveur via une API\n\n\nUn jeu d'aventure 2D\nIl s'agit d'un projet ultra complet qui vous permettra d'apprendre à créer des jeux 2D avec Unity. Nous allons intégrer les principales fonctionnalités que l'on retrouve dans les jeux vidéo :\nCréer des niveaux 2D\nCréer un personnage animé 2D\nSe déplacer en 2D\nInteragir avec des objets\nParler à des PNJ\nGérer un inventaire\nRésoudre des missions\n\nUn jeu mobile casual\nJe vous révèle le code de mon jeu à succès qui a dépassé les 10 millions de téléchargements. On recrée ensemble les principales briques de gameplay de mon jeu et je vous révèle comment j'ai travaillé avec un éditeur sur ce projet chiffres à l'appui.\nOn recrée mon jeu\nOn code les principales mécaniques\nJe vous montre comment collaborer avec un éditeur\nJe vous dévoile les chiffres\n\nÉcrire un code ultra performant\nDécouvrez comment écrire un code optimisé avec DOTS, ECS, Burst Compiler, Profiler, le multithreading, le Job System de Unity et mes techniques ultra avancées d'optimisation.\n\nCodez vos outils pour Unity Editor et automatisez tout\nNous allons écrire ensemble une bonne centaine de scripts qui nous permettront de modifier Unity afin de personnaliser l'interface, de créer nos outils et d'automatiser des tonnes de choses. Nous allons adapter Unity à nos besoins et nous allons voir comment créer des scripts pour l'éditeur. On va réellement incruster nos fonctionnalités dans le logiciel Unity pour avoir sous la main la version ultime d'Unity avec des éléments uniques qui font une énorme différence.\n\n\nLe jeu de cartes de combat\nDans cet atelier on va créer un jeu de cartes style HeartStone ou Magic. Le but sera de jouer des cartes de monstres et d'attaquer notre adversaire avec nos cartes. On pourra invoquer des monstres plus ou moins forts selon le nombre de cartes sacrifiées.\n\nEt bien plus\nEn plus des principaux projets, vous aurez accès à de très nombreux mini projets / ateliers pour pratiquer et ajouter des références à votre CV. Je vous partagerai des contacts d'éditeurs, des pistes pour le marketing de vos projets, mes outils pour créer votre press kit, mes astuces pour créer un trailer...\n\n\nJ'ai essayé de vous donner des détails tout en restant bref cependant cette liste n'est pas exhaustive tellement ce cours est complet. Vous pouvez jeter un œil au programme ainsi qu'aux vidéos gratuites pour vous faire une idée plus précise du contenu de ce guide ultime Unity.\nIl y a bien d'autres surprises dans cette formation. Sachez que pour chaque projet je partage des techniques que vous ne trouverez pas ailleurs. Il s'agit de méthodes issues du monde professionnel et de réels secrets de fabrication. C'est la formation la plus exhaustive sur le logiciel Unity (et de très loin).\nVous aurez un accès à vie et en illimité à cette formation d'exception.\nSi vous hésitez entre ma formation et une autre… Enfin non, vous n'hésiterez pas longtemps.",
      "target_audience": [
        "Toute personne qui souhaite apprendre à utiliser Unity",
        "Ceux qui veulent entrer dans le détail et tout comprendre",
        "Les utilisateurs qui veulent connaître les bonnes pratiques",
        "Les utilisateurs d'Unreal Engine ou Godot qui veulent migrer vers Unity",
        "Ceux qui veulent apprendre avec un expert certifié",
        "Ceux qui veulent aller beaucoup plus loin qu'un simple tuto",
        "Ceux qui veulent apprendre par la pratique",
        "Ceux qui veulent maîtriser tout ce qui gravite autour de Unity (outils, services, écosystème)"
      ]
    },
    {
      "title": "Sıfırdan Roblox Studio, Lua ile Oyun Kodlama script rehberi",
      "url": "https://www.udemy.com/course/robloxstudioegitimi/",
      "bio": "Başlangıç seviyesi ve çocuklar için uygun. Roblox' da kendi oyununu tasarla ve Lua programlama dilini kodlamayı öğren.",
      "objectives": [
        "Severek oynadığın Roblox ile kendi oyununu tasarla",
        "Roblox Studio kullanımını öğren",
        "Lua kodlama dilini öğren",
        "Oyun kodlamaya bir adım at",
        "Üç boyutlu ( 3b ) nesneler tasarla"
      ],
      "course_content": {
        "Tanıtım": [
          "Tanıtım"
        ],
        "Roblox Studio Giriş": [
          "Hesap ve Kurulum",
          "Roblox Studio Açılış ekranı",
          "Kamera Kontrol",
          "Explorer Penceresi",
          "Properties Penceresi",
          "Asset Manager - Varlık yönetimi",
          "Output - Çıktı Penceresi",
          "Terrain Editor",
          "Toolbox",
          "Model Sekmesi",
          "Properties - Özelliklerde neler var",
          "Proje - ilk",
          "Kaydet Yayınla"
        ],
        "Lua Kodlama Giriş": [
          "Print - Yazdırma çıktı alma",
          "Variable - değişken",
          "Local - Global",
          "Matematiksel işlemler",
          "Mantıksal İşlemler",
          "Yazısal İşlemler",
          "Parent -Ebeveyn",
          "Script Türleri"
        ],
        "Lua ile Roblox Studio özellikleri kodlama": [
          "Appearance -Görünüm",
          "Data - Veri",
          "Transform- Dönüştür",
          "Pivot - Eksen",
          "Collision, Anchored, Assembly",
          "Proje"
        ],
        "Roblox Studio ile Tasarım": [
          "3D Model oluşturma",
          "Decal Texture - Desen",
          "Proje - Neon Tabela",
          "Light - aydınlatma",
          "SoundService - Ses Ekleme",
          "Effect"
        ],
        "Lua Temel Seviye Kodları": [
          "Conditionals -Şartlar - İf, Else, Elseif, Then",
          "And, Or, Not",
          "Loops - Döngüler -For, While, Repeat",
          "Proje - Döngü",
          "Functions - Fonksiyon",
          "Proje - Merdiven",
          "Table - Tablo",
          "Proje - Tablo",
          "Touched - Dokundu, Destroy",
          "Click Detector",
          "Proje - Butonlu Merdiven"
        ],
        "Lua Orta Seviye Kodları": [
          "Player, Character",
          "FindFirstChild",
          "Team - Takım",
          "Starterpack",
          "LeaderBoard- Lider Tablosu",
          "Proje - Dönen coin",
          "FindFirstChildWhichIsA",
          "GetPlayerFromCharacter",
          "Module Script",
          "Starter gui ve Çeşitleri",
          "Lighting - Aydınlatma",
          "MaterialService - Materyal Servisi",
          "Replicated First -Storage, ServerStorage",
          "SoundService - Ses Servisi",
          "Chat - Sohbet"
        ],
        "Obby Oyunu Projesi": [
          "Engel",
          "Checkpoint",
          "Lava",
          "Fake Zemin",
          "Kayan Zemin",
          "Lider Tablosu - Coin",
          "Toolbox Kullanımı"
        ],
        "Bonus - Yapay Zeka": [
          "Yapay Zeka ile Kod Yazma",
          "Yapay Zeka ile Materyal Bulma"
        ],
        "Tuzak Modeli Oyunu": [
          "Giriş",
          "3 Boyutlu Tuzak Yapımı",
          "Tuzağı Tetikleme Kodu",
          "Klonlama - Clone , Debris - Enkaz kaldır",
          "Ses - Sound ve Damage - Hasar Ver",
          "Tuzak Modelini Kaydet",
          "Başarı Rozeti - Badge Award ‐ Pcall"
        ]
      },
      "requirements": [
        "Sadece bir bilgisayar ile oyun kodlama dünyasına bir adım at",
        "Herhangi bir temel bilgiye gerek yok"
      ],
      "description": "Her zaman kendi oyunlarınızı yapmak istediniz, ancak nereden başlayacağınızı bilemediniz mi? O zaman tam da ihtiyacın olan kurs bu!\nGençlerin severek oynadığı Roblox'u sadece oynamakla kalmayıp kendi oyunlarını yapmaları ve kodlamayı öğrenmeleri için eğitim seti hazırladım. Umarım Beğenirsiniz her türlü soru ve önerilerinizi bana aktarmakta hiç çekinmeyin.\n\n\nRoblox Nedir ?\nRoblox Corporation tarafından geliştirilen bir çevrim içi oyun platformu ve oyun oluşturma sistemidir. Kullanıcıların oyunları programlamasına ve diğer kullanıcılar tarafından oluşturulan oyunları oynamasına olanak tanır. David Baszucki ve Erik Cassel tarafından 2004' te kurulan ve 2006'da piyasaya sürülen platform, kullanıcılar tarafından Lua programlama dilinde kodlanmış birden çok türde oyunlara ev sahipliği yapmaktadır. Oyun platformu, 2010'ların ikinci yarısında hızla büyümeye başladı ve bu büyüme COVID-19 pandemisiyle birlikte daha da hızlandı.\nRoblox ücretsiz oynanabilir ve oyun içi satın alımlar \"Robux\" adlı sanal para birimi üzerinden yapılabilir. Ağustos 2020 itibarıyla, Roblox'un 164 milyondan fazla aylık aktif kullanıcısı bulunmaktadır ve Amerika Birleşik Devletleri'ndeki 16 yaş altı tüm çocukların yarısından fazlası tarafından oynanmaktadır.[5][6]\nRoblox, oyun eleştirmenleri tarafından genel anlamda olumlu eleştiriler almıştır.\nRoblox Studio Nedir ?\nbir Roblox oyunu oluşturmayı öğrenecek ve Roblox oyunları oluşturmak için kullanılan oyun geliştirme paketi olan Roblox Studio'da uzmanlaşacaksınız. Ayrıca LUA programlama dilinde kodlama yeteneğinizi de geliştireceksiniz. LUA, oyun geliştirme topluluğunda popüler bir dildir ve görüntü işleme ve web geliştirme gibi alanlarda da kullanılır.\n\n\nKursta Neler Var ?\nBu kursta yeni başlayanlar için değişkenler, atama ifadeleri, koşullu ifadeler, döngüler, tablolar ve işlevler bildirme ve kullanma gibi temel programlama becerileri hakkında bir bölüm vardır. Temel bilgiler işlendikten sonra kurs, dokunulan olaylar, güçlendirmeler, tuzaklar, yumurtlayan nesneler ve NPC canavarlar gibi daha zorlu konuların yanı sıra puanları ve puanları takip etmek için skor tablosunu ele alır.\nKurs içerisinde;\n* Roblox Studio kullanımı\n*Üç boyutlu nesne tasarımı\n* Kod ile nesnelerin özelliklerini değiştirme\n* Lua programlama dili\n* Lua ile kodlama temelleri\n* Örnek projeler\n* basit oyun tasarımı ve kodlaması",
      "target_audience": [
        "oyun kodlama",
        "roblox studio",
        "oyun tasarımı",
        "lua programlama dili",
        "roblox kodlama",
        "roblox oyun yapma",
        "nasıl roblox da oyun yapılır",
        "roblox da oyun yap"
      ]
    },
    {
      "title": "Desenvolvimento de Jogos 3D com Unity: Crie jogos incríveis",
      "url": "https://www.udemy.com/course/desenvolvimento-de-jogos-3d-com-unity-2017/",
      "bio": "Crie jogos 3D profissionais utilizando a poderosa engine Unity.",
      "objectives": [
        "Ao término do curso o aluno estará apto a prosseguir com seus estudos em módulos mais avançados.",
        "Terá conhecimento em várias ferramentas essências da Unity.",
        "Conhecimento amplo através de diversos módulos do curso",
        "Será apresentado também como comunicar o jogo com um servidor web (módulo www).",
        "Desenvolver seu próprio jogo.",
        "Conhecerá diversas ferramentas e recursos da Unity.",
        "Trabalhar com animações e cinemática inversa.",
        "O básico de Substance Designer."
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico em computação",
        "Paciência e vontade de aprender",
        "Persistência e foco"
      ],
      "description": "Bem-vindo ao curso Desenvolvimento de Jogos 3D com Unity! Este curso foi elaborado por um desenvolvedor experiente para futuros criadores de jogos, com um foco total em produção 3D. Você terá a oportunidade de explorar diversas ferramentas e funcionalidades da Unity, aprendendo a utilizar recursos atualizados, como assets, animações e scripts em C#.\nO conteúdo está organizado em módulos, facilitando a revisão e o acesso a informações específicas sem a necessidade de assistir a vídeos longos. Cada módulo aborda funcionalidades essenciais, como áudio, iluminação, animação, criação de terrenos, materiais, câmeras e programação em C#. Além disso, você será apresentado a conceitos e técnicas para o desenvolvimento 3D, como modelagem de ambientes e animação de personagens.\nEm cada módulo, você encontrará desafios práticos que ajudarão a fixar o conhecimento adquirido. Esses desafios foram cuidadosamente elaborados para reforçar o aprendizado e integrar conceitos de módulos anteriores. Todos os arquivos utilizados nas aulas estarão disponíveis para download, incluindo o projeto final.\nAo final do curso, você desenvolverá um jogo completo, onde um arqueólogo embarca em uma aventura no deserto em busca de relíquias. Durante o desenvolvimento do jogo, você aplicará tudo o que aprendeu, criando desde o terreno até a programação de mecânicas como menus, cenas, inventário e suporte a controles.\nO curso começa com uma introdução teórica, importante para que você compreenda a estrutura e as ferramentas que estará utilizando. Este formato é ideal tanto para iniciantes quanto para aqueles que já possuem algum conhecimento. Se você já está familiarizado com a Unity, pode optar por avançar para os módulos que mais lhe interessam.\nPrepare-se para explorar o mundo do desenvolvimento de jogos 3D e inscreva-se agora! A sua jornada criativa começa aqui.",
      "target_audience": [
        "Iniciantes em desenvolvimento 3D",
        "Alunos que estão migrando de outra Game Engine",
        "Desenvolvedores de games em geral",
        "Qualquer pessoa apaixonada por games e computação gráfica"
      ]
    },
    {
      "title": "Créer un jeu multiplayer avec UNITY et Photon Cloud",
      "url": "https://www.udemy.com/course/creer-un-jeu-multiplayer-avec-unity-5-et-photon-cloud/",
      "bio": "Créez des jeux en réseau avec Unity et Photon Cloud (PUN Classic)",
      "objectives": [
        "Créer des jeux multijoueurs avec Unity",
        "Utiliser Photon Cloud et ses composants (PUN Classic)",
        "Adapter votre jeu dans une version multiplayer",
        "Gérer la connexion au lobby (Hall) et d'exploiter les room (Chambres) de Photon",
        "Comprendre comment fonctionne Photon Cloud"
      ],
      "course_content": {
        "Photon Cloud - Lobby - Room": [
          "Avant de commencer",
          "Intégration de photon dans Unity3D",
          "Connexion au Lobby (Hall)",
          "Joindre et créer une room (Chambre)",
          "Charger une scène dans la room",
          "Instantiation du Player dans room",
          "Retour au Lobby (Hall) Depuis une room",
          "Lister les Rooms",
          "Lister les Players d'une room",
          "Importation de l'asset du cours dans Unity3D (notice)",
          "Quiz Photon Cloud Section 1"
        ],
        "Photon Cloud Mutliplayer Game Plateform": [
          "Préparation de la scène de jeu et importation du Player (ChubbyMummy)",
          "Présentation du PhotonView (RPC et OnPhotonSerializeView)",
          "Synchronisation des déplacements et de la rotation du Player",
          "Synchronisation des animations (PhotonAnimatorView)",
          "Synchronisation du saut (PhotonRigidbodyView)",
          "Gestion des SpawnPoints",
          "Liste des scores des Joueurs",
          "Masterclient et autorité",
          "Présentation RPC (Remote Procédure Call)",
          "RPC PhotonView Etoiles et leaderboard de la room",
          "RPC Donner autorité au Masterclient (Refactoring)",
          "Leaderboard de Fin de manche",
          "Mise en place du Level SkyCity Lite",
          "Zone de ReSpawn",
          "Synchronisation du début de la partie",
          "Gestion de l'audio dans la scéne",
          "Gestion de l'audio spacial Blend 3D",
          "PhotonView Observed Components (Correctif)",
          "Shoot du Player (RPC)",
          "RPC vers un Player Unique (Respawn)",
          "Jouer une particule d' explosion a l'impact",
          "Package complet du cours",
          "Quiz Photon Cloud",
          "Consulter les statistiques de votre jeu"
        ]
      },
      "requirements": [
        "Les bases d 'Unity et du C#"
      ],
      "description": "Unity est un moteur de jeu multiplateforme (smartphone, Mac, PC, consoles de jeux vidéo et web) développé par Unity Technologies. Il est l'un des plus répandus dans l'industrie du jeu vidéo.\nIl a la particularité de proposer une licence gratuite dite \"Personal\" sans limitation au niveau du moteur.\nPhoton Cloud (Pun Classic) est une asset utilisable dans Unity afin de développer des jeux vidéo multi-joueurs hébergé sur le cloud de photon. (Gratuit a concurrence de 20 joueurs simultanés)\nDans cette formation nous allons découvrir  :\nLa connexion au serveur de photon cloud\nLa gestion du Lobby (Hall), des Rooms (chambre)\nLa gestion de la liste des room ou des joueurs.\nL’instanciation d’objet sur le réseau\nLes RPC Remote Procédure Call\nLa Synchronisation des déplacements, des animations, etc..\nLes différentes méthodes de photon et ses Callbacks\nLes PhotonViews\netc....\nTous ces concepts seront mise en pratique dans un jeu multiplayer que vous pourrez télécharger en fin de cours.\nUne fois que vous aurez assimilé le fonctionnement de photon et ses concepts. Vous pourrez alors développer ou adapter votre jeu dans une version multijoueur gratuitement.\nPhoton fonctionne sur toutes les plateformes Android, Windows, Linux, IOS, etc…",
      "target_audience": [
        "ce cours est destiné aux développeurs de jeux qui souhaitent créer des jeux multijoueurs"
      ]
    },
    {
      "title": "Unity手機遊戲開發入門",
      "url": "https://www.udemy.com/course/unity-spaceshooter/",
      "bio": "由淺入深，開發自己的第一款手機遊戲",
      "objectives": [
        "Unity開發環境建置",
        "C#基礎觀念與API應用",
        "Android手機遊戲開發"
      ],
      "course_content": {
        "Unity觀念建立與開發環境建置": [
          "課程概要",
          "概念簡介",
          "環境建置 Unity",
          "環境建置 VS Code",
          "是否成功建置好開發環境呢？"
        ],
        "Unity操作說明與功能概念": [
          "2-1 視窗功能介紹",
          "視角與物件控制",
          "是否了解基礎的視角、物件以及視窗了呢？"
        ],
        "Unity遊戲素材匯入與物件建置": [
          "3-1 匯入素材",
          "3-2 物件組件觀念",
          "3-3 建立場景，置入素材及物理組件",
          "3-4 物理組件",
          "3-5 預置物與變量預置物"
        ],
        "C#程式語言觀念與應用": [
          "4-1 程式結構",
          "4-2 變數觀念",
          "4-3 方法觀念",
          "4-4 位移與物理控制",
          "4-5 邏輯運算子與鍵盤控制",
          "4-6 物理觸發與物件標籤",
          "4-7 動態產生與陣列",
          "4-8 玩家 & AI",
          "4-9 AI視覺與輸入",
          "4-10 子彈差異與血量判斷"
        ],
        "畫面與介面": [
          "5-1 攝影機跟隨",
          "5-2 主介面建立與設定",
          "5-3 主介面程式設定",
          "5-4 玩家控制程式",
          "5-5 玩家血條介面"
        ],
        "特效與音效": [
          "6-1 粒子特效與拖尾特效",
          "6-2 射擊與爆炸音效"
        ],
        "調整與輸出": [
          "7-1 微調及Android輸出"
        ]
      },
      "requirements": [
        "能開啟Google搜尋引擎",
        "會安裝軟體程式",
        "能讀懂中文",
        "認識英文字母"
      ],
      "description": "從概念說明、環境建置到功能講解、程式學習，讓學習者由淺入深學習Unity知識，並輸出第一款手機遊戲。\n學習者可以用同樣的知識、概念，以及免費、自製的素材，製作屬於自己的遊戲。\n教學使用Unity2019.3.7f1，搭配中文介面，讓初次接觸Unity的學習者也能降低面對全英文介面的排斥感。",
      "target_audience": [
        "剛開始學習Unity的學生",
        "希望進修Unity開發知識的設計人員"
      ]
    },
    {
      "title": "Programación para Niños: ¡Dando Vida a tu imaginación!",
      "url": "https://www.udemy.com/course/programacion-para-ninos/",
      "bio": "Descubre y da tus primeros pasos en el mundo de la programación jugando y crea tus primeras aplicaciones divertidas",
      "objectives": [
        "Los elementos fundamentales de programación para niños",
        "Dibujaras con programación",
        "Creación de video juego de Cangrejo",
        "Creación de video juego de Laberinto",
        "Creación de video juego de bola",
        "Creación de video juego de Elimina a todos",
        "Creación de video juego de Nave",
        "Creación de video juego por micrófono"
      ],
      "course_content": {
        "Introducción": [
          "Que te vas a encontrar y recomendaciones para este curso",
          "Recuerda que cuentas con nuestro asesoramiento y respuestas a tus preguntas"
        ],
        "Primeros Pasos": [
          "Crear un usuario",
          "Conociendo Scracht",
          "¡Nuestro Primer Proyecto!",
          "Compartamos nuestro proyecto con otros"
        ],
        "Elementos fundamentales": [
          "Agreguemos un objeto",
          "Propiedades de un objeto",
          "¿Cómo se mueven los objetos?",
          "¡Saltos!",
          "Procedimientos",
          "Movimientos con Teclado",
          "Finalicemos nuestros movimientos",
          "Movimientos con el raton",
          "Mueve la pelota de forma aleatoria",
          "Movimiento de autos",
          "Juego del tiburón"
        ],
        "¡Dibujos!": [
          "Dibujar objetos",
          "Edicion mapa de bits",
          "Edición Vector"
        ],
        "Primer Juego: ¡Juego del Cangrejo!": [
          "Así quedara nuestro juego",
          "Manos a la obra"
        ],
        "Segundo Juego: ¡Juego del Laberinto!": [
          "Juego del laberinto",
          "Agregando características"
        ],
        "Tercer Juego: ¡Juego de la Bola!": [
          "Así quedara nuestro juego",
          "Programando bola",
          "Elementos finales"
        ],
        "Cuarto Juego: ¡Juego de elimínalos a todos!": [
          "Así quedara nuestra juego",
          "Elementos basicos",
          "Finalicemos el juego"
        ],
        "Quinto Juego: ¡Juego de la Nave!": [
          "Así quedara nuestra juego",
          "Descargando lo necesario",
          "Programando nuestro primer pacman",
          "Programando al malo",
          "Finalicemos nuestro juego"
        ],
        "Sexto Juego: ¡Juego de carreras!": [
          "Asi quedara nuestro juego",
          "Elementos básicos",
          "Programando el gato",
          "Finalizamos juego"
        ]
      },
      "requirements": [
        "Ninguno, solo PC con internet"
      ],
      "description": "La programación no es solo para adultos; ¡los niños también pueden ser creadores digitales! En este curso, abrimos la puerta al fascinante mundo de la codificación de una manera lúdica y envolvente, adaptada especialmente para los jóvenes mentes curiosas.\nLo que aprenderán:\nPrimeros Pasos en la Programación: Conoce los conceptos básicos del código y cómo las computadoras entienden las instrucciones.\nJugando con Código: A través de plataformas interactivas y juegos, los niños aprenderán a programar mientras se divierten.\nCreación de Proyectos Propios: Desde animaciones hasta pequeños videojuegos, cada niño podrá dar vida a su imaginación.\nPensamiento Lógico y Resolución de Problemas: Más allá de solo código, fortaleceremos habilidades clave que serán útiles en todos los aspectos de la vida.\nAbre las puertas a la imaginación, a un mundo que es del presente y que todos debemos aprender.\nNo se requiere experiencia previa, solo una gran dosis de curiosidad y ganas de aprender. ¡Inscribe a tu pequeño genio y ve cómo su imaginación se traduce en creaciones digitales asombrosas!\nAprende con los mejores profesores de Udemy, de forma 100% online y a tu propio ritmo, con soporte a sus preguntas y con la pedagogía que nos caracteriza.\nNos vemos dentro . Tus Profesores.",
      "target_audience": [
        "Toda persona, niño y adulto que desee aprender"
      ]
    },
    {
      "title": "Real-Time Lighting in UE5 with Cesium and DMX",
      "url": "https://www.udemy.com/course/cesium-and-dmx-lighting-with-unreal-engine/",
      "bio": "Build real-world lighting setups using Cesium 3D Maps, Unreal Engine 5, and Madrix DMX",
      "objectives": [],
      "course_content": {
        "Visual Introduction – Real-Time Lighting Showreel": [
          "Real-Time Lighting Showreel",
          "Architectural Lighting with Unreal Engine 5"
        ],
        "Getting Started with Real-Time Lighting": [
          "Introduction & Welcome",
          "Project Setup"
        ],
        "Working with Cesium 3D Maps": [
          "Adding Environment (Cesium)"
        ],
        "DMX and Lighting System Setup": [
          "DMX Configuration",
          "Madrix Integration"
        ],
        "Lighting Animation & Scene Control": [
          "Lighting Animations"
        ],
        "Explore the World with Cesium": [
          "Explore the World with Cesium"
        ]
      },
      "requirements": [
        "Basic knowledge of Unreal Engine interface is helpful but not required. All tools used in the course will be explained step by step."
      ],
      "description": "In this course, you will learn how to create real-time architectural lighting simulations using Cesium 3D map data within Unreal Engine 5. We will guide you step-by-step from importing real-world environments to lighting them using DMX protocols with Madrix software.\nWhether you’re a lighting designer, 3D artist, or someone interested in immersive visual experiences, this course will help you understand how to set up a dynamic, data-driven lighting system using real-time tools. With Cesium’s powerful global mapping tools and UE5’s real-time rendering engine, you will build a project that mirrors real-world geography and responds beautifully to live control.\nYou’ll also discover how to configure DMX lighting systems inside Unreal Engine and create impressive lighting effects that respond to live control in Madrix. We will cover the basics of the DMX protocol, how to patch and sync lighting devices, and how to integrate Madrix to achieve a professional lighting workflow.\nNo prior experience with Cesium, DMX, or Madrix is required — this course is beginner-friendly but also provides valuable techniques for intermediate users. At the end of the course, you’ll have a fully functional lighting scene that you can present, modify, reuse, or even use in live shows and architectural presentations.\nBring your lighting creativity into the world of real-time environments today!",
      "target_audience": [
        "This course is designed for lighting designers, 3D artists, VFX creators, and Unreal Engine users who want to learn how to control lighting in real time using Cesium maps and DMX systems."
      ]
    },
    {
      "title": "Unity3D入門の決定版！RPG開発の基本をUnityインストラクターと共に進めるハンズオンコース【スタジオしまづ】",
      "url": "https://www.udemy.com/course/unity3d_action_rpg_studio_shimazu/",
      "bio": "アクションRPG開発を通して、AR/VRでも使われるUnity3Dのアニメーション制御が学べる超入門講座！C#プログラミングに不安がある初心者でもしっかり学べるイラスト解説&演習問題付き。コースが終わる頃にはあなたも立派な３Dゲーム開発者！",
      "objectives": [
        "3DRPG制作に必要な、キャラクターの操作、攻撃、非ダメージ、敵AI、アニメーションの実装方法が習得できます。",
        "Unity3Dアニメーションの基礎である、設定、切り替え、コードによる切り替え、アニメーション毎にコードを分ける方法がハンズオンで学べます。",
        "ゲームを動かすためのC#プログラミングに関する基礎的な文法をイラストと演習問題付きで学習できます。",
        "全てのプロジェクトを一から作ることで総合的なUnityのゲーム開発力が身につきます。"
      ],
      "course_content": {},
      "requirements": [
        "タイピングができる",
        "検索サイトでUnityを調べたことがある",
        "UnityをインストールできるPC（Mac/Windows）がある"
      ],
      "description": "【この講座は以下の方を対象としています】\n3Dのゲームを開発してドヤ顔したいけど、制作は難しいと思って避けていた方\nコミケやインディーゲームのイベントで出展側として参加したい方\nポートフォリオを充実させてゲーム会社に就職したい方\nARやVRのために、Unity3Dの基礎を身に付けておきたい方\n\n\n【習得できること】\nフロム・ソフトウェアからリリースされたDARK SOULS、コロプラからリリースされた白猫プロジェクトはどちらもアクションRPGの王道であり、非常に多くの注目を浴びています。この講座では、このような本格アクションRPGの戦闘システムについて、以下の項目を中心にゲームを作りながら習得できます。\nキャラクター移動\n攻撃\nアニメーション\n敵AI\nコンボ攻撃\nスタミナ\n\n\n【講座内容】\n・Unityのインストール\n・Unityの操作方法とゲームを作る基礎（コードでものを変化させる方法）\n・C#プログラミングの基礎（基礎的な文法をイラストと演習問題付き）\n・3Dミニゲーム開発（キャラクターを移動せさてゴールしたら終了するゲーム制作）\n・3Dアニメーションの基礎（設定・Scriptによる切り替えスキル）\n------ここまでが準備-------\n・3DRPGの開発\n・Playerキャラクターの移動と攻撃実装\n・Enemyキャラクターの移動と攻撃実装\n・各キャラクターの非ダメージとHP実装\n・コンボとスタミナとHPゲージの演出実装\n\n\n【最後に】\nUnityは元々3Dゲーム開発のために作られたツールで、多くの便利な機能が用意されています。１人ではそれが逆に難しく感じるかもしれませんがこの講座を3D制作の１歩目として、あっと驚くGameを世界に向けて発信しましょう！\n--------------------------\n【他の私の講座との関係】\nマリオのような２Dアクションゲームが作りたい方は\n・Unity ゲーム開発入門：インディーゲームクリエイターが教えるマリオのようなゲームを作成する方法【スタジオしまづ】\nを受講していることをお勧めします。（私の知り合いのプログラミング初心者はこの講座でゲームを完成させました）\nゲームリリースを目的とされている方は\n・Unityゲーム開発：インディーゲームクリエイターが教えるC#の基礎からゲームリリースまで\nの受講をお勧めします。AppStoreやGoogle Playへのリリースの話が収録されています（2020年2月に演出まわりを中心に4時間分のレクチャーを追加しました）",
      "target_audience": [
        "ARやVRのために、Unity3Dの基礎を身に付けておきたい人",
        "自分のゲームを家族や知り合いに自慢したい人",
        "コミケやインディーゲームのイベントで出展側として参加したい人",
        "ポートフォリオを充実させ転職活動にいかしたい人",
        "Unityのチュートリアルを勉強したけど挫折してしまった人",
        "Unityを始めたはいいけど何から手をつけていいのかわからない人"
      ]
    },
    {
      "title": "Jogos 2D com Unity + C# CURSO COMPLETO",
      "url": "https://www.udemy.com/course/desenvolvimento-de-jogos-2d-para-android-com-unity-5/",
      "bio": "Crie 5 jogos para Android nos estilos de Angry Birds, Metal Slug, Clash of Clans e esportes!",
      "objectives": [
        "• Manipular a Game Engine",
        "• Programar jogos usando a linguagem C#",
        "• Usar todos os componentes físicos 2D",
        "• Preparar Sprites animadas",
        "• Criar animações 2D dentro da Unity",
        "• Mesclar arte 2D com 3D",
        "• Usar Realidade Aumentada",
        "• Monetização de jogos",
        "• Publicação no Google Play",
        "• Divulgação do jogo"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento básico do sistema operacional Windows",
        "Um PC capaz de rodar a Unity3D"
      ],
      "description": "CURSO EM ATUALIZAÇÃO!\n\n\nQuer entrar para o mundo dos games e ser um Desenvolvedor de Jogos Eletrônicos?\nEis aqui o seu passaporte para o mercado de games, que atualmente já fatura muito mais que a indústria do cinema.\n\nE que tal começar desenvolvendo jogos mobile para Android? Hoje em dia é mais do que comum encontrar pessoas de diversas idades jogando em smartphones ou tablets, seja na fila do banco, dentro do ônibus, na sala de espera do dentista ou mesmo em casa casualmente.\nDentre esses jogos podemos dar um destaque todo especial para os jogos 2D que abusam dos efeitos físicos, como Angry Birds, Metal Slug, Clash of Clans, Jogos de Basquete e futebol.. Basta dar uma rápida olhada na Google Play para notar que são milhares de jogos, e o mais legal é que tem para todos os gostos e faixa etária.\nDescubra as melhores práticas, aprenda as habilidades técnicas necessárias e coloque suas ideias em movimento.\nDesenvolva jogos incríveis e conquiste seus objetivos profissionais. Não espere mais, clique no botão agora mesmo e junte-se a nós nessa aventura digital sem limites!\nInteressou-se mais ainda? Então o que você esta esperando?\nFaça já a sua inscrição e aprenda passo a passo a desenvolver, monetizar, publicar e divulgar seu game.",
      "target_audience": [
        "Pessoas que adoram games e querem fazer dessa paixão uma profissão e ganhar dinheiro com isso",
        "Pessoas com algum ou nenhum conhecimento em programação e/ou desenvolvimento de jogos"
      ]
    },
    {
      "title": "Разработка HTML5 игр на Phaser 3: Подробное руководство",
      "url": "https://www.udemy.com/course/phaser-3/",
      "bio": "Создайте 3 браузерные игры на Phaser 3 и JavaScript шаг за шагом",
      "objectives": [
        "Вы станете автором трех полноценных игр, которые создадите с нуля во время обучения.",
        "Получите опыт работы с двумя физическими движками: базовым аркадным и продвинутым MatterJS.",
        "Будете уверенно использовать широкий инструментарий Phaser: работа со спрайтами и отрисовка графики, создание сцен и архитектуры проекта, запуск анимаций, подключение кастомных шрифтов, воспроизведение звуков и музыки.",
        "Улучшите свои знания и навыки в разработке программ и игр, освоив современные техники и паттерны проектирования.",
        "Научитесь генерировать спрайтлисты в программе TexturePacker и создавать из них покадровую анимацию в Phaser.",
        "Освоите программу Tiled и сможете создавать собственные карты уровней из набора тайлов.",
        "Поймете принципы работы клиент-серверных игр и научитесь их разрабатывать.",
        "Сможете использовать SocketIO для реализации PVP мультиплеера в реальном времени.",
        "Подготовите солидное портфолио, которое позволит вам выйти на рынок игровой индустрии в роли уверенного специалиста.",
        "Подготовите сборку проекта для релиза при помощи webpack"
      ],
      "course_content": {},
      "requirements": [
        "Знание базовых возможностей ES6 в JavaScript",
        "Понимание объектно-ориентированного программирования"
      ],
      "description": "Вы хотите попасть в геймдев?\nИзучаете программирование и хотите прокачать свои скиллы в разработке программ? Есть идея игры, но не знаете, как подступиться к технической реализации?\nЭтот курс для вас!\nВ ходе обучения мы изучим популярный игровой фреймворк Phaser 3, используемый для создания отличных HTML5 игр.\nПочему именно Phaser?\nНесмотря на то, что Phaser крайне прост в освоении, его используют серьезные игровые студии при разработке коммерческих игр. С его помощью можно решить практические любые задачи. После прохождения одного этого курса вы будете обладать всеми необходимыми навыками для самостоятельного создания браузерных игр самых разных жанров.\nЗачем создавать HTML5 игры?\nРынок HTML5 игр сегодня на пике развития. Социальные сети активно развивают свои игровые платформы для поддержки HTML5 игр и ищут новых разработчиков. Одноклассники постоянно проводят конкурсы в HTML5 направлении с розыгрышем щедрых призов. Facebook открыл платформу Instant Games, а Вконтакте активно работает над HTML5 платформой Direct Games. Instant игры можно запустить даже в Telegram!",
      "target_audience": [
        "Профессиональные разработчики разных отраслей, интересующиеся игровой индустрией",
        "Инди-разработчики и программисты игр",
        "Студенты IT специальностей",
        "Геймдизайнеры и художники, владеющие языком JavaScript"
      ]
    },
    {
      "title": "Desenvolvimento de Jogos: Game 2D Isométrico com a Unity",
      "url": "https://www.udemy.com/course/aprenda-fazendo-game-2d-isometrico-completo/",
      "bio": "Aprenda Fazendo: Técnicas de C# e criar seu próprio jogo 2D Isométrico estilo Final Fantasy Tactics na Unity 2D",
      "objectives": [
        "Você vai aprender a Programar em C#",
        "Você vai aprender a Programar Jogos",
        "Você vai aprender a Programar Games 2D",
        "Você vai aprender a criar e trabalhar com uma Máquina de Estados",
        "Você vai aprender a trabalhar com a UI da Unity",
        "Você vai aprender Sistemas de Ordenação",
        "Você vai aprender Pathfinding",
        "Você vai aprender a criar um Sistemas de Skills",
        "Você vai aprender a criar um Sistema de Job",
        "Você vai aprender a criar Sistema de Equipamentos",
        "Você vai aprender a criar Sistema de Modificadores",
        "Você vai aprender Inteligência Artificial para Jogos"
      ],
      "course_content": {},
      "requirements": [
        "Você precisa Já conhecer o ambiente Unity",
        "Você precisa de conhecimento equivalente a Programação III+",
        "Você precisa entender Orientação a Objetos, como polimorfia, heranças, abstract, virtual, etc",
        "Você precisa conhecer C#, Java ou alguma linguagem similar"
      ],
      "description": "Quer aprender a PROGRAMAR JOGOS de verdade e não só ficar arrastando e soltando ferramentas da engine?\nAo invés de criar vários projetinhos de infinite runner e plataformas, que tal aprender a programar um projeto grande, complicado e com dificuldades que você jamais imaginou existirem? O que não falta por aí são cursos básicos de programação de jogos, que tal algo mais avançado? Um curso propriamente de programação de games.\nDeixei um artigo liberado com a pré-visualização contendo tudo o que você irá aprender(é uma baita de uma lista).\nCom o objetivo de aprender fazendo, ele segue o formato code-along. Também foi dividido em Sagas para facilitar o acompanhamento e te dar um sentimento de vencer mais um chefão ao conseguir concluir uma delas. Vamos ver se pegam as referências dos nomes ;)\nAssim que acabar o curso terá já uma boa fundação para continuar o desenvolvimento do seu próprio Final Fantasy Tactics/Tactics Ogre/Banner's Saga! Então se inscreva já!",
      "target_audience": [
        "Programadores que querem criar um jogo 2D mais complexo",
        "Programadores que querem aprender sobre Máquinas de Estados e Pathfinding",
        "Profissionais da área de programação fãs de jogos no estilo Tactics",
        "Programadores interessados em Game Development"
      ]
    },
    {
      "title": "Unreal Engine 4: Kapsamlı Projeler Üzerinden Oyun Geliştirme",
      "url": "https://www.udemy.com/course/unreal-engine-4-oyun-gelistirme-kursu/",
      "bio": "Platform üzerindeki -tüm diğer diller de dahil- en kapsamlı UE4 oyun geliştirme eğitimi: Üstelik baştan sona Türkçe!",
      "objectives": [
        "UE'de adım adım başlangıç seviyesinden uzman seviyesine ulaşacaksınız.",
        "Oyun geliştirmenin yapı taşları olan tüm UE elementlerini öğreneceksiniz",
        "UE arayüzü ve arayüz elementlerine tamamen hakim olacaksınız.",
        "Blueprint, materyal ve animasyon programlayabileceksiniz.",
        "Kullanıcı arayüzü (UI) tasarlayıp; 2D UI animasyonları üretebileceksiniz.",
        "Blueprint ile hayalinizdeki oyunu geliştirebilecek kadar yeterli bilgi ve deneyime sahip olacaksınız."
      ],
      "course_content": {
        "Başlangıç": [
          "Unreal Engine Nedir?",
          "Projeler Nasıl Olacak?",
          "FPS, TPS ve RPG Nedir?"
        ],
        "Gerekli Programların Kurulumları": [
          "Epic Games üyeliği oluşturma ve Epic Games platformuna giriş",
          "Unreal Engine kurulumu ve proje oluşturma",
          "Photoshop CC kurulumu",
          "Autodesk Maya kurulumu",
          "Sony Vegas Pro kurulumu",
          "Fuse CC kurulumu"
        ],
        "UE - Giriş ve Arayüz": [
          "UE Giriş ve Arayüz İnceleme",
          "Araç çubuğu (Toolbar)",
          "Dünya Modları (Modes)",
          "Faliyet alanı, Sahne (Viewport)",
          "Elementler, Dünya objeleri (World outliner)",
          "Ayrıntılar ekranı",
          "İçerik Tarayıcısı (Content Browser)",
          "Blueprint",
          "Blueprint Sınıfları",
          "Import ve Migrate",
          "Bölüm Sonu Projesi: Parkur (Nam-ı Diğer: Counter-Strike | DeathRun)"
        ],
        "Değişkenler": [
          "Boolean (Doğru, yanlış)",
          "Byte",
          "Integer (Tam sayı)",
          "Float (Ondalık sayı)",
          "Name (İsim)",
          "String (Metin)",
          "Text (Metin)",
          "Vector (Vektör)",
          "Rotator (Rotasyon, Döndürücü)",
          "Transform (Dönüştürücü, Konum, Rotasyon, Boyut)",
          "Structure (Yapılar)",
          "Class (Sınıflar, Nesneler)",
          "Enumerate (Listeler)",
          "Bölüm Sonu Projesi: Sınıflar ve Obje Hareketlendirme"
        ],
        "Operatörler": [
          "Büyük(>), Küçük(<), Büyük Eşit(>=), Küçük Eşit(<=)",
          "Eşit(Equal) ve Eşit Değil(Not Equal)",
          "Ve(And), Veya(Or)",
          "Toplama(+), Çıkarma(-), Çarpma(*), Bölme(/)",
          "Increment(Arttır), Decrement(Azalt)",
          "Bölüm Sonu Projesi: Sıcak Soğuk Oyunu"
        ],
        "Blueprint Programlama Temelleri": [
          "Blueprint programlamaya giriş",
          "Debug mesajı oluşturma, yapıcı, yıkıcı, begin play ve tick örnekleri",
          "Fonksiyonlar",
          "Eventler",
          "Matematik ve programlama",
          "Timeline, Delay ve Örnekleri (Zaman çizelgesi ve Zamanlayıcı)",
          "If-Else koşulları (Branch)",
          "While, For Loop (Döngüler)",
          "String fonksiyonları (Metin düzenleme fonksiyonları)",
          "Casting",
          "Bölüm Sonu Projesi: Admin Komut Sistemi"
        ],
        "Blueprint Sınıfları - Oyun Programlamaya Giriş": [
          "Actor(Aktör)",
          "Pawn(Oyuncu)",
          "Character",
          "Player Controller (Oyuncu kontrolleri)",
          "Game Mode (Oyun modu)",
          "Actor ve Scene Component (Aktör ve Sahne bileşenleri)",
          "Input Axis ve Action",
          "Bölüm Sonu Projesi: Patlayan Mermiler ve Fizik İçeren Objeler"
        ],
        "Materyal Programlama": [
          "Materyal nedir?",
          "Base Color (Ana renk)",
          "Metalic (Metal)",
          "Specular (Yansıtma)",
          "Roughness (Pürüz)",
          "Opacity (Saydamlık)",
          "Opacity Mask (Saydam Maskeleme)",
          "Normal",
          "Materyal Domain (Materyal alanı)",
          "Blend mode (Karıştırma modu)",
          "2-sided Materyal",
          "Parallax nedir?",
          "Bump Mapping nedir?",
          "Bölüm Sonu Projesi: Materyallerden Işık Yapmak"
        ],
        "Partikül Sistemi - Emitter": [
          "Particle nedir?",
          "Hazır Particle kullanımı",
          "Bölüm Sonu Projesi: Hava Durumu Kontrolü"
        ],
        "Kullanıcı Arayüzü (UI): Widget": [
          "UI nedir? Widget nedir?",
          "Konumlandırma ve Boyutlandırma",
          "Border (Çerçeve, Sınır, Kaplama)",
          "Button (Buton, Tuş)",
          "Check Box (Onay kutusu)",
          "Image (Resim)",
          "Named Slot (İsimlendirilmiş yuva)",
          "Progress Bar (İlerleme çubuğu)",
          "Slider (Kaydırıcı)",
          "Text (Metin)",
          "Text Box (Metin kutusu)",
          "Combo Box (Seçim kutusu)",
          "Animasyonlar ve UI Animatörü",
          "Bölüm Sonu Projesi: Log-in (Giriş) ve Register (Kayıt) Paneli"
        ]
      },
      "requirements": [
        "Bu dersi anlamak için herhangi bir programlama/oyun geliştirme tecrübeniz olmasına gerek yoktur!",
        "Güçlü ve sürdürülebilir bir öğrenme arzusu"
      ],
      "description": "Bu eğitim seti Udemy üzerindeki UE alanında tüm kaynaklardan daha kapsamlı bir içerik sunmaktadır ve tamamen Türkçe'dir! Hiçbir şekilde daha önceden programlama/oyun geliştirme tecrübeniz olmadığı varsayılarak anlatılmış olup; öğrencileri sıfırdan ileri seviyeye çıkarmayı hedefliyorum. Temel bilgiler ile başlayarak sağlam bir altyapı oluşturduktan sonra kendi ellerimizle gerçekçi oyunlar oluşturarak pratiğimizi güçlendireceğiz.\n\nMüfredatın en sonunda geliştireceğimiz 30 saate yakın süren tamamen gerçekçi ve ince detaylarına kadar değinilmiş iki muhteşem oyun (1st Person Shooter & 3rd Person Shooter) dışında her bölümün sonunda o bölümde öğrendiğimiz bilgileri taze taze uygulayabileceğimiz özenle hazırlanmış projeler gerçekleştireceğiz:\nParkur oluşturma: \"Counter Strike Deathrun\"\nRagdoll ve 3D sesler: \"Flatout\"\nDeathmatch\nAteş etmek ve patlayan mermiler\nHız göstergesi\nObje modelleme ve hareketlendirme\nKarakter tasarlama\nHarita tasarımı\nHava durumu kontrolü\nGiriş (login) ve kayıt (register) paneli\nAdmin sistemi",
      "target_audience": [
        "Oyun geliştirme konusunda hevesli olarak ilk adımı atmak isteyen herkes",
        "Unreal Engine ile oyun geliştirme dünyasına girmek isteyen programcılar",
        "Daha önceden Unreal Engine ile tanışmış ancak bir türlü başlama imkanı bulamayanlar"
      ]
    },
    {
      "title": "Unity2Dパズルゲーム開発入門：Admob広告実装と高速にスマホゲームを量産する実践テクニック講座【スタジオしまづ】",
      "url": "https://www.udemy.com/course/unity2d_puzzle/",
      "bio": "4ヶ月で4つのモバイルゲームをリリースする基盤となった開発テクニックをハンズオン形式で解説！これであなたも個人開発者の仲間入り！",
      "objectives": [
        "Unityを使った2Dパズルゲームの開発方法が習得できます。",
        "テキストデータからステージを生成する方法が学べます。",
        "複数ステージをコードから生成する方法が学べます",
        "Google AdMobを活用したバナー広告/リワード広告の実装方法が学べます。",
        "Unityを使ったAndroidのビルド方法が習得できます。"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "準備テクニック：C#編": [
          "はじめに（必須）",
          "C#の知識確認問題",
          "列挙型とは",
          "2次元配列とは",
          "Delegateとは",
          "セクションまとめ"
        ],
        "準備テクニック：Unity編": [
          "はじめに",
          "クリック検知",
          "画像切り替え",
          "プレファブ化",
          "オブジェクトの生成",
          "Textデータ読み込み",
          "セクションのまとめ"
        ],
        "パズルゲーム「Shima-zu Zero」": [
          "はじめに",
          "タイルの作成",
          "タイルの反転（クリック検知）",
          "Textデータの読み込み",
          "タイルの配置",
          "クリック時に十字に反転",
          "クリア判定とリセット",
          "GameManagerの作成",
          "複数ステージの実装",
          "Delegateによる関数登録",
          "クリアパネルの実装",
          "複数画面サイズの対応",
          "タイトルとクリア画面の実装",
          "セクションのまとめ"
        ],
        "広告の実装": [
          "はじめに",
          "バナー広告（Android）",
          "バナー広告（iOS）",
          "リワード広告",
          "インタースティシャル広告（20205/27 追加）",
          "セクションまとめ"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Unityのインストールが終わっている",
        "Unityの教材を１つ終えている",
        "スマホの実機で試したい方はAndroid/iPhoneが必要です",
        "C#の基礎的な文法がわかっている（変数/if/for/配列/関数）"
      ],
      "description": "スマホゲームを開発して広告収益を得る。これは誰もが夢見るマネタイズです。ただ、実際はお金を得るまでに挫折することが多く\n・そもそもゲームが作れない\n・広告の貼り方がわからない\n・広告収益が得られるだけのボリュームのあるゲームが作れない\n・ボリュームのあるゲームを毎回作るには時間がとても足りない\nなどこれら全てを一人でなんとかするには大変です。\nそこで、本講座はこの4つの悩みをズバッと解決する短期集中型講座です！\nここで紹介する内容は、実際に4ヶ月で４本のスマホゲームをリリースしたオンラインサロン会員のノウハウを詰め込んだものです。\n\n\n＊講座の内容＊\nTextデータから生成するパズルゲームの作り方に焦点を当てています。\nその理由は\n・Textデータを複数用意するだけで、新しいステージができる（ボリュームUP）\n・時間のかかるキャラクターイラストが必要ない（高速化）\n・新しいパズルゲームを作るときに、外枠のイラスト等は使いまわせる（高速化）\nこの３つを満たすことで、ボリュームのあるゲームを素早くたくさん作ることができます。\n\n\n実際の講座内容は以下となります。\n・パズルゲームに必要なC#の基礎：２次元配列など\n・パズルゲームに必要なUnityの基礎：クリック判定など\n・本編\n・パズルの１ピース作成\n・Textデータからピースを配置してステージ生成\n・クリア判定\n・広告の貼り方：Admobのバナー広告/リワード広告/インタースティシャル広告\n\n\n＊まとめ＊\n他のスタジオしまづの講座と違い、Unityのインストール等の解説はなく、ゲームを短期間に開発するノウハウをすっきりとまとめたものです。一度パズルゲームを作っておけば、他のパズルゲーム開発を行うときもきっと時間を大幅に短縮できます！\nぜひこの講座を受講して、毎月ゲームをリリースしましょう！\n\n\n＊注意：以下の内容は含まれていません＊\n・Unityのインストール\n・C#の基礎（変数/if文/for文/配列/関数/クラスなど）\n・Unityの仕組み（コンポーネント/Start関数/Update関数の説明）\n・ビルドしてからリリースするまでの手順\n\n\nこれらの内容を学習したい方は以下の講座などがおすすめです（4/17現在）。\n・話題の新着：Unity3D入門の決定版！RPG開発の基本をUnityインストラクターと共に進めるハンズオンコース【スタジオしまづ】\n・ベストセラー：Unity ゲーム開発：インディーゲームクリエイターが教える C#の基礎からゲームリリースまで【スタジオしまづ】\n・最高評価：Unityゲーム開発入門：インディーゲームクリエイターが教えるマリオのような2Dゲームを作成する方法【スタジオしまづ】",
      "target_audience": [
        "スマホ向け2Dパズルゲームを作成してアプリをリリースしたい方",
        "自身のスマホゲームに広告をつけて収益をあげたい方",
        "複数ステージをテキストデータで管理する方法が知りたい方"
      ]
    },
    {
      "title": "Javascript oyun yapimi ve programlama dersleri",
      "url": "https://www.udemy.com/course/javascript-oyun-yapimi-ve-programlama-dersleri/",
      "bio": "Javascript Oyun Programlama ve Geliştirme dersleri ve Javascript Uçak oyunu yapımı .Javascript ile oyun nasıl yapılır",
      "objectives": [
        "Javascript ile oyun nasıl yapılır öğrenecek ve kendi oyununuzu programlayabilecek geliştirebileceksiniz.",
        "Javascript Class Yapısı ve kullanımı ile daha düzenli kod yazacaksınız."
      ],
      "course_content": {
        "Giriş": [
          "Oyun Alanını Oluşturma Html,Css,Js Dosyaları Oluşturma",
          "Class ve Kurucu Yardımcı Fonksiyonları Oluşturma",
          "Uçağın Hareket Kontrollerini Sağlama",
          "Küçük Düşman Uçaklarını Oluşturma",
          "Javascript Çarpışma Fonksiyonu Oluşturma",
          "Javascript ile Yazı ve Skor nesnelerini Tanımlama",
          "Mermi Oluşturma",
          "Hareketli Arka plan resmi Oluşturma",
          "Gezegenleri Oluşturma",
          "MegaEnemy Büyük Düşmanı Oluşturma ve Kontrolleri",
          "Mega Enemy Büyük Düşmanın mermilerini oluşturma",
          "Ses Dosyalarını Ekleme Son düzenlemeler Ve FINAL"
        ]
      },
      "requirements": [
        "Temel Html,Css ve Javascript Bilgisi",
        "Html5 Canvas Elemanı kullanımı hakkında bilgi sahibi olmak."
      ],
      "description": "Javascript ile oyun nasıl yapılır nasıl geliştirilir  nasıl programlanır ? Uçak oyunu ile programlama gücünüz bir adım daha ilerleyecek.\nBir oyun kütüphanesi kullanmadan Javascript ve Html5 Canvas elemanını kullanarak uçak oyunu yapacak ve  geliştireceğiz.\nJavascript Class Yapısı ile oyunun iskeletini oluşturacak ve yardımcı fonksiyonlar oluşturarak bu güzel oyunu programlayıp geliştireceğiz.\nUçak oyununda Html5 Canvas  elemanını bir çizim tuvali haline getirecek ve oyun alanımızı tasarlayacağız.\nVe nihayetinde javascript kodları ile uçak oyunu yaparak kendiniz daha güzel oyunlar geliştirebileceksiniz.\nWeb tabanlı oyun geliştirmek ve oyun programlamak istiyorsanız fazlasıyla verim alacağınız  bir oyun yapımı eğitim seti.",
      "target_audience": [
        "Html5 Canvas Elemanı ile Javascript Oyunu yapmak ve geliştirmek isteyenler.",
        "Javascript ile Oyun programlama nasıl yapılır öğrenmek isteyenler."
      ]
    },
    {
      "title": "Roblox Studio para iniciantes: 3 Projetos completos!",
      "url": "https://www.udemy.com/course/roblox-studio-2024/",
      "bio": "Torne-se um desenvolvedor de jogos no Roblox com 2 projetos guiados, do início a publicação!",
      "objectives": [
        "Aprender os fundamentos de lógica de programação",
        "Criar códigos de qualidade com LUA",
        "Entender como funciona o ROBLOX STUDIO",
        "Criar diversas mecânicas como inventários, checkpoints e muito mais!",
        "Transformar suas ideias em jogos reais",
        "Entender como funciona a comunicação CLIENTE/SERVIDOR em jogos online",
        "Aprender sobre os diversos serviços que o ROBLOX oferece na criação dos jogos",
        "Salvar o progresso do jogador",
        "Criação de NPCs",
        "Publicar seu primeiro jogo completo no ROBLOX"
      ],
      "course_content": {
        "Comece por aqui!": [
          "Conhecendo o Roblox Studio",
          "Código dos projetos finalizados"
        ],
        "Lógica de programação": [
          "Introdução",
          "O que são variáveis",
          "O que são tabelas",
          "Estruturas condicionais",
          "Loops de repetição",
          "Funções"
        ],
        "Serviços do Roblox": [
          "Programação orientada a eventos",
          "Local Script x Server Script",
          "Remote Events",
          "O que são os serviços do Roblox",
          "Players",
          "Replicated Storage",
          "Leaderstats",
          "Data Store",
          "Ordered Data Store",
          "Tween",
          "Collection",
          "ContextAction",
          "UserInputService",
          "Raycast",
          "Marketplace Service",
          "Badge Service"
        ],
        "Projeto 1: Obby": [
          "Criando o Stage 1",
          "Criando o Stage 2",
          "Criando o Stage 3",
          "Criando o Stage 4 e 5",
          "Configurando os checkpoints",
          "Criando obstáculos que matam o jogador",
          "Criando obstáculos que se movem",
          "Criando obstáculos giratórios",
          "Criando a esteira",
          "Criando o Jump Pad 1/3",
          "Criando o Jump Pad 2/3",
          "Criando o Jump Pad 3/3",
          "Criando a Interface",
          "Detectando o início e fim do Obby",
          "Manipulando os dados do player",
          "Atualizando o cronômetro",
          "Salvando o tempo do jogador",
          "Criando a interface do Leaderboard",
          "Leaderboard Script 1/2",
          "Leaderboard Script 2/2",
          "Adicionando animações na interface",
          "Adicionando músicas e efeitos",
          "Criando tela de morte",
          "Ajustes finais e publicação do projeto!"
        ],
        "Projeto 2: Strength Simulator": [
          "Configurações iniciais",
          "Criando o perfil do jogador",
          "Configurando as animações de ataque",
          "Adicionando cooldown e resetando o combo",
          "Criando a hitbox",
          "Criando o serviço de força",
          "Configurando a HUD",
          "Carregando os dados do jogador na HUD",
          "Sistema de Rebirth 1/4",
          "Sistema de Rebirth 2/4",
          "Sistema de Rebirth 3/4",
          "Sistema de Rebirth 4/4",
          "Criando os spots de treino 1/2",
          "Criando os spots de treino 2/2",
          "Como formatar números na interface",
          "Criando a UI da Store 1/3",
          "Criando a UI da Store 2/3",
          "Criando a UI da Store 3/3",
          "Compra de poções comuns 1/2",
          "Compra de poções comuns 2/2",
          "Mostrando poções ativas na HUD",
          "Refatorando o StoreService",
          "Carregando as poções ativas",
          "Resumão do Sistema de Poções",
          "Criando a UI do Teleport",
          "Teleportando o jogador para outras áreas",
          "Efeito de transição",
          "Primeiras configurações para o PVP",
          "Habilitando o PVP e contagem de Kills",
          "Configurando a venda de poções com Robux",
          "Aplicando o efeito das poções premium",
          "Desbloqueando novas áreas com GamePass",
          "Polimento: Interface Responsiva com AutoScale Lite",
          "Polimento: Corrigindo o UI Stroke",
          "Polimento: Refatoração do código",
          "Polimento: Luzes e Skybox",
          "Polimento: Adicionando VFX de hit e correção de bug",
          "Publicando o jogo",
          "Conclusão :)"
        ],
        "[BÔNUS] - Criando um TYCOON": [
          "Configurações iniciais",
          "Criando o perfil do jogador",
          "Configurando o Leaderstats",
          "Compra dos lotes",
          "Carregandos os botões iniciais",
          "Desbloqueando os próximos botões",
          "Desbloqueando os itens",
          "Salvando o progresso do jogador",
          "Carregando o progresso do jogador",
          "Configurando o Dropper 1/2",
          "Configurando o Dropper 2/2",
          "Configurando o Conveyor",
          "Criando o sistema de economia",
          "Atualizando a compra dos botões",
          "Corrigindo bugs nos botões de compra",
          "Escondendo o template",
          "Sincronizando o progresso de outros jogadores"
        ],
        "[VERSÃO DESATUALIZADA] Projeto 2: Strength Simulator": [
          "AVISO IMPORTANTE!",
          "Criando o perfil do jogador",
          "Animação de ataque",
          "Criando o Stick inicial e resetando o avatar",
          "Criando o script de ataque",
          "Atualizando a força do jogador a cada ataque",
          "Criando a HUD Gui",
          "Mostrando a quantidade de força que o jogador ganhou",
          "Atualizando a barra de progresso",
          "Adicionando animações na HUD",
          "Rebirth GUI 1/3",
          "Rebirth GUI 2/3",
          "Rebirth GUI 3/3",
          "Aplicando o rebirth no jogador",
          "Criando nova área",
          "Configurando novas áreas 1/2",
          "Configurando novas áreas 2/2",
          "Desbloqueando novas áreas",
          "Aplicando o buff de multiplicador",
          "Correção do AreaGui",
          "Criando a SafeZone",
          "Sistema de PVP 1/3",
          "Sistema de PVP 2/3",
          "Sistema de PVP 3/3",
          "Correção na HUD Gui",
          "Lojinha de Sticks 1/4",
          "Lojinha de Sticks 2/4",
          "Lojinha de Sticks 3/4",
          "Lojinha de Sticks 4/4",
          "Salvando os dados do jogador",
          "Criando novas áreas",
          "Sistema de recompensas 1/4",
          "Sistema de recompensas 2/4",
          "Sistema de recompensas 3/4",
          "Sistema de recompensas 4/4",
          "Últimos ajustes no sistema de recompensas",
          "Auto ataque 1/2",
          "Auto ataque 2/2",
          "Adicionando efeitos de pós-processamento",
          "Correção nas Rewards"
        ]
      },
      "requirements": [
        "Não é necessário ter conhecimento de programação, você aprenderá tudo do zero"
      ],
      "description": "Se você é um iniciante no mundo da programação de jogos e gostaria de aprender como criar seus próprios jogos dentro do ROBLOX...Esse curso é para você!\nNesse curso você será guiado e construirá uma base sólida para desenvolver jogos de qualidade com o ROBLOX STUDIO. Partindo da lógica de programação até a criação de 3 projetos que serão publicados e você poderá usar como portfólio para mostrar suas habilidades com a plataforma.\nVocê aprenderá os fundamentos da linguagem Lua utilizada na criação dos scripts, como funcionam os serviços oferecidos pelo Roblox, manipulação de dados e muito mais!\n\n\nFudamentos da programação\nSe esse é o seu primeiro contato com programação não se preocupe, esse módulo será dedicado aos fundamentos da lógica de programação:\nO que são variáveis, como utiliza-lás dentro do jogo e como manipular os dados dentro dos jogos.\nComo funcionam as estruturas condicionais e validações nos scripts.\nComo podemos utilizar os loops de repetição e funções para evitar duplicação de código.\n\n\nPrimeiros passos com Roblox Studio\nVocê aprenderá como funcionam os serviços mais utilizados no ROBLOX com exemplos práticos:\nO que é programação orientada a eventos.\nComo funciona a comunicação entre cliente e servidor em jogos multiplayer.\nAulas dedicadas para cada tipo de serviço que o ROBLOX oferece.\n\n\nProjeto 01: Obby\nNosso primeiro projeto prático será a criação de um Obby/Parkour com muitos desafios e possibilidade de expansão:\nCriação de obstáculos animados utilizando Tween Service e RunService.\nComo criar checkpoints com o serviço de Teams.\nAnimações na interface e SFXs.\n\n\nProjeto 02: Strength Simulator\nNosso segundo projeto será um Simulator com tópicos mais avançados:\nComo trabalhar com estruturas de dados mais complexas.\nSistema de progressão com leveling e desbloqueio de recursos.\nMecânicas de combate e recompensas para os jogadores.\nProjeto Bônus: Tycoon\nEsse será o nosso projeto bônus onde você vai aprender como criar um Tycoon do zero:\nComo trabalhar com atualizações no Client para otimizar o seu jogo.\nSalvar o progresso do jogador\nVer o progresso dos outros jogadores",
      "target_audience": [
        "Desenvolvedores iniciantes",
        "Pessoas que desejam se tornar desenvolvedores de jogos com ROBLOX"
      ]
    },
    {
      "title": "Essential Web3 Game Design. A blockchain agnostic approach.",
      "url": "https://www.udemy.com/course/essential-web3-game-design/",
      "bio": "Design Web3 games with NFTs, tokenomics, zero-knowledge mechanics, and sustainable player-owned game economies.",
      "objectives": [],
      "course_content": {
        "Introduction to Web3 Game Design": [
          "Introduction to Web3 Game Design"
        ],
        "Game Design Meets Crypto Economics": [
          "Game Design Meets Crypto Economics"
        ],
        "Types pf Tokens in Web3 Games": [
          "Types of Tokens in Web3 Games"
        ],
        "Designing incentives for Sustainability": [
          "Designing incentives for Sustainability"
        ],
        "Economic Simulation & Modelling": [
          "Economic Simulation & Modelling"
        ],
        "Governance Design in Web3 Games": [
          "Governance Design in Web3 Games"
        ],
        "The Psychology of Value in Web3 Games": [
          "The Psychology of Value in Web3 Games"
        ]
      },
      "requirements": [
        "No prior blockchain or Web3 experience is required — this course is beginner-friendly. Basic familiarity with video games (player or designer perspective) is helpful but not mandatory. An interest in game design, player behaviour, or digital economies is encouraged. A computer with internet access and permission to install free software/tools like PyGame or Unity. Optional: Some basic understanding of Python, JavaScript, or game engines can enhance your experience, but all technical topics will be explained from scratch."
      ],
      "description": "Step into the future of game design. This course teaches you how to build Web3-enhanced games that empower players with true asset ownership, on-chain governance, and sound economic systems.\nYou'll explore tokenomics, NFT integration, zero-knowledge mechanics, and sustainable incentive design, crafted specifically for developers and designers who want to go beyond Web2 limitations.\nThrough engaging lectures and hands-on projects, you’ll learn how to simulate economies, design player-owned loops, and implement game mechanics powered by decentralisation and digital scarcity.\nNo blockchain experience required—just a passion for building games that matter.\nYou’ll gain practical knowledge of ERC-20, ERC-721, and ERC-1155 token standards, and learn to align behavioural psychology with cryptoeconomic incentives to create sticky, rewarding experiences. From character design in survival games to governance-based gameplay, each section builds on real-world examples that you can apply to your own projects.\nYou’ll also prototype mechanics using simple tools like spreadsheets and visual diagrams—no smart contract programming needed. This course is ideal for indie developers, Web3 explorers, game economy designers, or educators who want to prepare for the next era of interactive entertainment.\nBy the end of the course, you’ll be ready to design your own blockchain-based game loop with a working economic model and decentralised game logic.",
      "target_audience": [
        "This course is designed for game designers, indie developers, blockchain enthusiasts, and curious beginners who want to explore the future of gaming through Web3. Whether you're a Web2 game dev looking to expand into decentralised mechanics or a creative thinker eager to understand how tokens, NFTs, and player economies work, this course will guide you from foundational principles to advanced game design strategies. No coding or blockchain experience is required — just a passion for games and a willingness to learn."
      ]
    },
    {
      "title": "Como criar games de plataforma 2D com a Godot Engine",
      "url": "https://www.udemy.com/course/como-criar-games-de-plataforma-2d-com-a-godot-engine/",
      "bio": "Comece a criar seus próprios games com uma das mais incríveis engines do mercado (Godot Engine)",
      "objectives": [
        "Manipular a Engine",
        "Conhecer a linguagem GDSCRIPT (Essencial)",
        "Criar animações usando Spritesheet",
        "Utilizar sinais",
        "Definir comportamentos para objetos no game",
        "Exportar seu game para as plataformas Windows e Android",
        "Trabalhar com Tilemap",
        "Criar um mestre de fase com diferentes comportamentos"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Ideia do primeiro jogo",
          "Download, descompactação e criação de atalho",
          "Conhecendo a tela Gerenciador de projetos",
          "Criação de um projeto",
          "Apresentação da interface do programa - parte 1",
          "Organização das docks",
          "Apresentação da interface - parte 2",
          "Nodes and Scenes",
          "Criação de uma cena na Godot",
          "Criação de mais duas cenas",
          "Criar instância apenas arrastando para a tela"
        ],
        "Introdução a linguagem GDSCRIPT": [
          "Criação do primeiro arquivo de script",
          "Como criar um arquivo de script de outra forma",
          "Comentários e impressão com GDSCRIPT",
          "Variáveis e constantes",
          "Variável do tipo vector2",
          "Como pegar uma referência de um node",
          "Observação importante sobre o uso das referências",
          "Criação de array",
          "Dicionário",
          "Operações básicas no GDSCRIPT",
          "Operações envolvendo comparações",
          "aula 12 - como somar valores para um variável ou subtrair",
          "Estrutura de decisão if e else",
          "Operações lógicas em GDSCRIPT",
          "Estrutura de repetição - Loop for",
          "Função em GDSCRIPT",
          "Função com parâmetros"
        ],
        "Projeto 1 - Game de plataforma": [
          "Criação de um novo projeto",
          "Configurando a importação de texturas",
          "Importação dos assets",
          "Parallax background e layer",
          "Criação de mais 2 layers",
          "Colocação de mais um elemento para o background",
          "Configuração do projeto",
          "Criação do tilemap",
          "Criação dos outros tiles",
          "Ajustando a escala do tilemap",
          "Criação de um segundo tilemap",
          "Criação do player",
          "Animação idle",
          "Animação do player correndo",
          "Animação de hit para o player",
          "Animação do personagem morrendo",
          "Animação jump 1",
          "Animação jump 2",
          "Animação jump 3",
          "Script do player",
          "Aplicação da gravidade para o player",
          "Movimentação do player",
          "Search help",
          "Virando o player para esquerda e direita",
          "Alterando animação de idle para running",
          "Implementação do jump",
          "Removendo pulo infinito",
          "Como implementar o pulo duplo",
          "Animação do personagem pulando",
          "Implementando o jump2",
          "Implementando o jump 3",
          "Adicionando uma sombra para o nosso player",
          "aula 33 - ampliação do cenário e ajustes no ParallaxBackground",
          "Complemento da câmera e do ParallaxBackground",
          "Simulando o afastamento da câmera na sala do mestre",
          "Otimização do movimento do player",
          "Aumentando o cenário",
          "Limitando a movimentação da câmera para esquerda e direita",
          "Transferindo a restrição da câmera para o _process",
          "Criação de uma área",
          "Explicação sobre o uso de sinais",
          "Zoom na sala do mestre e limit_left",
          "Deslocamento da câmera para frente",
          "Adicionando um nó de partículas",
          "Programando a emissão de partículas",
          "Criação do inimigo",
          "Adicionando colisor, animationplayer e script",
          "Animações do inimigo",
          "Programando a direção do inimigo",
          "Aplicação da gravidade para o inimigo",
          "Movimentação do inimigo",
          "Identificando os elementos pelas camadas",
          "Jump sobre o inimigo",
          "Parando inimigo após sofrer um hit",
          "Executando animação de hit",
          "Corrigindo animação de hit com inimigo idle",
          "Mudando o inimigo de camada",
          "Criação do efeito de explosão",
          "Criação do efeito complementar da explosão",
          "Instanciando a explosão",
          "Ajustando a propriedade velocity",
          "Hit no player",
          "Simplificando o hit no player",
          "Player em hit",
          "Animação de hit",
          "Criação do cristal",
          "Script dos cristais",
          "Criação da mola",
          "Script da mola e alteração na função jump",
          "Animação para a mola",
          "Melhorando o comportamento de hit",
          "Criação do mestre de fase",
          "Camadas de colisão e outros ajustes",
          "Animação idle",
          "Animação walk",
          "Animação running",
          "Animação fury",
          "Animação hit walk",
          "Animação hit running",
          "Animação die",
          "Começando a programação do boss",
          "Definindo os comportamentos",
          "Funçõe idle e walk e mudança de animação",
          "Movimentação do mestre de fase",
          "Mudando a direção do mestre de fase",
          "Funções running e fury",
          "Inimigo correndo",
          "Completando o ciclo de animações do master",
          "Tremer a câmera com master correndo ou pulando",
          "Player saltando sobre o master",
          "Player sofrendo hit do master",
          "Mudando de estado no decorrer do game",
          "Corrigindo o travamento do boss",
          "Criação de um fragmento de pedra",
          "Criação da cena pedra maior",
          "Colisão da pedra maior com o player",
          "Instanciando a cena do fragmento",
          "Instanciação da pedra maior",
          "Instanciação de várias pedras",
          "Criação do script game",
          "Adicionando mais itens no hud",
          "Adicionando os corações para o hud",
          "Programando a exibição de textos no hud",
          "Exibindo corações pelo script",
          "Exibindo os corações da frente",
          "Removendo os corações dinamicamente",
          "O que fazer quando acabar as vidas",
          "O que acontece quando perder todas as vidas",
          "Pontuando no jogo",
          "Criação da representação das vidas do master",
          "Exibindo as vidas do master pelo script",
          "Finalizando a parte da exibição dos corações",
          "Parando o player ao vencer o boss",
          "Como incluir sons no jogo e exercícios",
          "Mostrando o game com a inclusão de outros sons",
          "Exercícios"
        ],
        "Projeto 2 - Game de tiro": [
          "Criação de um projeto",
          "Importação de assets",
          "Início da criação do cenário",
          "Criação de mais duas layers",
          "Concluindo a parte do background",
          "Criação do tilemap",
          "Finalização do tilemap",
          "Criação de mais um tilemap",
          "Criação da personagem",
          "Animação idle",
          "Personagem correndo",
          "Animação hit",
          "Personagem morrendo",
          "Animação jump",
          "Finalização da animação jump",
          "Concluindo as animações da personagem",
          "Adicionando uma sombra para a personagem",
          "Criação do arquivo de script",
          "Mapeamento de teclas e gravidade",
          "Movimentação da personagem para frente e para trás",
          "Definindo a variável top",
          "Espelhamento da personagem",
          "Animação idle e running",
          "Definindo a lógico para as direções da arma",
          "Executando animações conforme o valor de type_action",
          "Jump da personagem",
          "Resetando jump_count e executando jump2",
          "Acertando a parte do jump2",
          "Desabilitando e habilitando a sombra no jump",
          "Otimizando o movimento da personagem",
          "Adicionando uma câmera e ampliação do cenário",
          "Configuração do background",
          "Corrigindo a exibição da sombra e offset da câmera",
          "Criação do laser e script",
          "Instanciando o laser",
          "Ajustando as posições conforme o type_action da personagem",
          "Substituindo os spritesheets das animações",
          "Acertando a direção do laser",
          "Incrementando os disparos da personagem",
          "Acertando a direção do sprite do laser",
          "Limitando a câmera (left e right)",
          "Otimizando o zoom do game",
          "Criação do inimigo",
          "Adicionando outros nós para o inimigo",
          "Animações do inimigo",
          "Programando a direção do inimigo",
          "Aplicação da gravidade no inimigo",
          "Movimentação do inimigo",
          "Complemento do vídeo anterior",
          "Identificação das camadas de colisão",
          "Inimigo colidindo com a parede",
          "Organizando melhor a cena fase01",
          "Refazendo as animações jump1 e jump3",
          "Implementando o jump3",
          "Queue_free no inimigo",
          "Adicionando hp do inimigo",
          "Eliminando o laser quando estiver fora da tela",
          "Laser empurrando o inimigo",
          "Criação de uma cena para exibir a quantidade de danos do inimigo",
          "Instanciando o label para exibir danos",
          "Inimigo executando animação de hit",
          "Inimigo sendo empurrado para trás",
          "Corrigindo a exibição de danos do inimigo",
          "Criação da uma cena para o efeito de hit",
          "Adicionando mais um nó de partículas",
          "Instanciando o efeito de partículas",
          "Criação do efeito de partículas explosion",
          "Adicionando partículas de estrelas",
          "Script da cena explosion",
          "Implementação da animação idle no inimigo",
          "Player em contato com o inimigo",
          "Executando animação de hit",
          "Empurrando a personagem para trás",
          "Correção do jump quando em hit",
          "Exibição da vida da personagem",
          "Alterando valores na colisão com o inimigo",
          "Play na animação die",
          "Espelhamento da personagem na animação die",
          "Começando a criação do HUD",
          "Adicionando o score ao HUD",
          "Adicionando corações para o HUD",
          "Adicionando corações pelo script",
          "Removendo corações ao colidir",
          "Tela de transição para game over",
          "Complemento da transição",
          "Preparando a cena game over para o script reiniciar",
          "Reiniciando o jogo",
          "Chamando a transição para fase 1 e game over",
          "Criação da cena do cristal",
          "Programação do cristal",
          "Instanciação dos cristais",
          "Somando pontos e exibindo na tela",
          "Criação do mestre de fase - parte 1",
          "Criação do mestre de fase - parte 2",
          "Identificação das camadas e mascaras",
          "Criação do script do mestre de fase",
          "Criação da animação idle",
          "Criação da animação walk",
          "Criação da animação die",
          "Criação da animação hit",
          "Criação da animação shooter",
          "Criação da animação shooter_preparete",
          "Criação da animação top_preparete",
          "Criação da animação top_shooter",
          "Definição dos comportamentos",
          "Animação idle e walk",
          "Acrescentar no código",
          "aula 106 - completando animação walk",
          "Concluindo a animação shooter",
          "Animação top_shooter concluida",
          "Animação de retorno do disparo horizontal",
          "Conclusão das animações de retorno",
          "Iniciando comportamento quando estiver na tela",
          "Executando animação de hit no master",
          "Executando a animação die",
          "Criação de shader para danos",
          "Modificando shader pelo inspector",
          "Criação da função para lidar com o shader",
          "Aplicando o shader",
          "Corrigindo a animação die depois de derrotar o master",
          "Corrigindo a movimentação do boss depois de derrotado e jump do nó player",
          "Colisão da personagem com o mestre de fase",
          "Criação do laser do mestre de fase",
          "Ajustes no script do laser",
          "Função shoot modificada",
          "Master disparando",
          "Concluindo a parte do laser do mestre",
          "Corrigindo a direção do laser",
          "Exibição de fagulhas para o laser",
          "Corrigindo falha na colisão com o master",
          "Corrigindo a velocidade das partículas e colisão com o mestre",
          "Corrigindo a interação do laser com a área do mestre",
          "Criação da porta",
          "Criação da área da porta",
          "Animação da porta",
          "Abertura e fechamento da porta",
          "Programação da porta",
          "Otimização da abertura das portas",
          "Mudando estado do mestre de fase",
          "Passando de fase",
          "Concluindo o game"
        ],
        "Projeto 3": [
          "Criação do projeto 4",
          "Ajustes nos painéis da godot",
          "Personagens prontos",
          "Personagens e cenário pronto",
          "Importação dos assets",
          "Iniciando a criação do cenário com parallax background e parallax layer",
          "Concluindo a parte do parallax background e parallax layer",
          "Definição da cena principal",
          "Criação das paredes ao fundo",
          "Criação da cena da rocha",
          "Criação da cena do chão",
          "Criação da cena do tronco",
          "Criação da rocha_superior",
          "Criação da lâmpada",
          "Criação do player",
          "Animação idle",
          "Animação walk",
          "Criação do colisor da espada",
          "Criação da animação die",
          "Animação de hit",
          "Animação jump",
          "Animação ar_landing",
          "Animação jump_ar",
          "Animação de pouso 2",
          "Animação de attack 1",
          "Animação attack2",
          "Animação attack3",
          "Retorno attack1",
          "Retorno attack2",
          "Retorno attack3 e ajustes nas animações",
          "Script do player",
          "Aplicação da gravidade",
          "Movimentação do player e correção nos colisores do cenário",
          "Espelhamento do personagem",
          "Alternando animação idle e walk",
          "Personagem saltando",
          "Animação de jump",
          "Pouso do personagem",
          "Corrigindo a espera do jump",
          "Personagem atacando",
          "Corrigindo colisores de ataque",
          "Implementando um time diferente para o combo",
          "Implementação do combo",
          "Explicação do estagio de desenvolvimento"
        ],
        "Conclusão do curso": [
          "Conclusão"
        ],
        "Aula Bônus": [
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Ter um computador capaz de rodar a Godot Engine na versão 3.4.4 ou versões bem próximas",
        "Recomendável ter uma boa base de navegação na plataforma Windows 10."
      ],
      "description": "Neste curso estaremos trabalhando com três projetos de games que vão desde um exemplo de game de plataforma, um game de tiro e por fim um jogo envolvendo elementos de plataforma, mas com o personagem portando uma espada para vencer os inimigos.\nPara desenvolver estes projetos, usaremos diferentes tipos de nodes a começar pelo Node2D, Sprite, CollisionShape2D, kinematicbody2D, Tilemap, ParallaxBackground, Animationplayer2D, Camera2D dentre outros.\nO curso é voltado para todos que desejam aprender a criar jogos com a Engine (Godot Engine) seguindo o tema do curso, mas é claro, se a pessoa já teve um contato, mesmo que razoável com esta ferramenta, será de grande ajuda.\nPara se ter uma ideia dos jogos que serão desenvolvidos, no primeiro teremos um jogo onde o personagem principal vai saltar sobre plataformas, sobre os inimigos e no final da fase poderá também enfrentar um mestre de fase(boss). Além disso, será possível também coletar  cristais que darão pontos na partida e para representar a vida do player, teremos no HUD(Head UP Display) corações e números.\nNo segundo jogo, uma personagem entra em cena e para eliminar os inimigos usará uma arma futurista. Também vai conter elementos de jogos de plataforma e cristais que somarão pontos.\nO terceiro game vai trazer um personagem com uma espada e para eliminar os inimigos poderá usar golpes simples e combos, como em um jogo de Beat'em up.\nNão deixe de assistir os primeiros vídeos para ter uma ideia do andamento das aulas. Aproveite e faça sua matricula e nos vemos agora nas aulas.",
      "target_audience": [
        "Pessoas que gostam de jogos",
        "Designer que está em busca de dar vida as suas criações através de jogos",
        "Programadores que estão iniciando o seu aprendizado em jogos digitais"
      ]
    },
    {
      "title": "Unity2D脱出ゲーム開発入門：Unityインストラクターが基礎から教えるセーブ機能マスターコース【スタジオしまづ】",
      "url": "https://www.udemy.com/course/unity2d_escape/",
      "bio": "アプリリリースに必須な2D脱出ゲームのセーブ機能が学べる入門講座！C#プログラミングに不安がある初心者でもしっかり学べるイラスト解説&演習問題付き。コースが終わる頃には１つの脱出ゲームが完成し、あなたも個人開発者の仲間入り！",
      "objectives": [
        "2D脱出ゲームでの「アイテムの取得/パスワードギミックの実装 /アニメーション」の実装方法が習得できます。",
        "Unity2D脱出ゲームに必須なセーブ機能の実装がハンズオン形式で学習できます。",
        "全てのプロジェクトを一から作ることで総合的なUnityのゲーム開発力が身につきます。",
        "ゲームを動かすためのC#プログラミングに関する基礎的な文法をイラストと演習問題付きで学習できます。"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "Unityの導入": [
          "はじめに",
          "Unityのインストール",
          "Visual Studioのインストール",
          "Unityの画面説明",
          "Unity操作の説明",
          "おわりに"
        ],
        "Unityでゲームを作るには": [
          "ゲームの作り方"
        ],
        "C#の基礎": [
          "はじめに",
          "コンソールとコメントアウト",
          "変数の宣言",
          "変数のデータ型",
          "四則演算子：+,-,*,/,%",
          "演算子：+=, ++, -=, --",
          "比較演算子：==,>,<,>=,<=,!=",
          "論理演算子",
          "【演習問題】変数の宣言〜比較演算子",
          "if文",
          "if-else文",
          "if-else if文",
          "switch",
          "while文",
          "for文",
          "breakとContinue",
          "列挙型",
          "【演習問題】if文〜列挙型までをやってください。",
          "配列",
          "List型",
          "【演習問題】配列とリストの問題をやってください（リンク先の問題全て）",
          "関数",
          "関数：返り値",
          "【演習問題】リンク先の問題全て行ってください",
          "クラス",
          "【演習問題】リンク先の問題全て行ってください",
          "おわりに"
        ],
        "コーヒーブレイク：プログラムとは": [
          "プログラムとは"
        ],
        "（必須）最新バージョンでの修正": [
          "Text"
        ],
        "脱出ゲームテクニック集：画面移動編": [
          "はじめに",
          "画面画像の配置",
          "矢印による画面移動",
          "バケツとロッカー画像の配置",
          "画像クリックによる移動",
          "戻るボタンの実装",
          "矢印の表示/非表示",
          "矢印の修正",
          "画面移動の修正",
          "おわりに"
        ],
        "脱出ゲームテクニック集：アイテムギミック編": [
          "はじめに",
          "はじめに&ギミック（たぬき）の配置",
          "ギミック（たぬき）の簡易実装",
          "アイテム（Leaf）の実装",
          "アイテムBoxの簡易実装",
          "アイテムBoxの関数実装",
          "アイテムBoxクラスの利用",
          "複数アイテムの実装導入",
          "複数アイテムの実装反映",
          "おわりに"
        ],
        "脱出ゲームテクニック集：セーブとロード": [
          "はじめに",
          "はじめに&セーブ機能の導入",
          "セーブ関数の導入",
          "アイテムセーブの導入",
          "SaveManagerのstatic化",
          "アイテムのセーブ",
          "アイテム使用のセーブ",
          "おわりに"
        ],
        "脱出ゲームテクニック集：パスワードギミック編": [
          "はじめに",
          "はじめに&パスワードギミックUI配置",
          "パスワードギミック関数の概要",
          "パスワードギミックUIの取得",
          "パスワードギミックUIの変更",
          "画像変更のバグ修正",
          "パスワードギミックのクリア処理",
          "パスワードギミック外部関数登録",
          "おわりに"
        ]
      },
      "requirements": [
        "UnityをインストールできるPCがある",
        "タイピングができる",
        "検索サイトでUnityを調べたことがある"
      ],
      "description": "【はじめに】\n脱出ゲームは子供から大人まで、性別問わず人気なアプリゲームの１つです。ゲーム開発のジャンルの中でもそれほど難易度は高くないのですが、実際作るとなると\nそもそもゲームの作り方がわからない\n場面移動がわからない\nアイテムの実装方法がわからない\nパスワードギミックの実装がわからない\nセーブ機能の実装がややこしすぎてわからない\nギミックをクリアしたことのフラグ管理がわからない\nなどの理由から全てを調べて作るのは大変です。\n特に、セーブ機能に関しては、リリースに必須の機能ですが、書籍やネットでの情報も少なく、実際に私が運営しているゲーム開発サロンでもセーブ機能について質問してくる人は多いです。そこで、本講座はセーブ機能の実装を中心とした上の６つの悩みをペコっと解決する講座です。\n（ここで紹介する内容は脱出ゲームをリリースしたサロン会員のノウハウを詰め込んだものです）\n\n\n【この講座は以下の方を対象としています】\nアプリのセーブとロードの実装をマスターして、リリースしたい方\n子供や友達に自分の作ったゲームを遊んでもらいたい方\n脱出ゲームをApp StoreやGoogle Playストアにリリースしてドヤ顔したいけど、まだ手をつけていなかった方\nコミケやインディーゲームのイベントで出展側として参加したい方\nポートフォリオを充実させてゲーム会社に就職したい方\n\n\n\n\n【講座内容】\n・Unityのインストール\n・Unityの操作方法とゲームを作る基礎（コードでものを変化させる方法）\n・C#プログラミングの基礎（基礎的な文法をイラストと演習問題付き）\n------ここまでが準備-------\n・脱出ゲームのテクニック　画像移動の実装\n・脱出ゲームのテクニック　アイテムの実装\n・脱出ゲームのテクニック　セーブとロード実装\n・脱出ゲームのテクニック　パスワードギミックの実装\n・「いらすとやからの脱出」の制作（いらすとやの画像を使って１つのゲームを制作）\n想定している学習者を「これからUnityをはじめたい」っという方を想定しているので、UnityのインストールとC#の基礎講座も収録してあります。\n\n\n＊まとめ＊\nUnityを使えば、誰でも簡単にゲームが作れるようになりました。最初は難しいと感じるかもしれませんが、この講座をご自身の脱出ゲーム制作のファーストステップとして活用していただければと思います。私と一緒に個人開発者の第一歩を踏み出しましょう！",
      "target_audience": [
        "自分のアプリにセーブ機能を実装したい方",
        "Unityを始めたはいいけど何から手をつけていいのかわからない人",
        "Unityのチュートリアルを勉強したけど挫折してしまった人",
        "ポートフォリオを充実させ転職活動にいかしたい人",
        "コミケやインディーゲームのイベントで出展側として参加したい人",
        "自分のゲームを家族や知り合いに自慢したい人"
      ]
    },
    {
      "title": "Building Your First 2D Game with Cocos Creator (Part One)",
      "url": "https://www.udemy.com/course/building-your-first-2d-game-with-cocos-creator-part-one/",
      "bio": "Learn about Cocos Creator while building your first game!",
      "objectives": [],
      "course_content": {
        "Preperation": [
          "Get Cocos Creator And Visual Studio Code"
        ],
        "Introduction": [
          "Introduction to our project",
          "Preparing your assets for the game"
        ],
        "Start Building Your Game": [
          "Setting up the look of the game",
          "Building a moving ground",
          "Make the brains that controls the game",
          "Building the points system to score your game"
        ]
      },
      "requirements": [
        "A basic understanding of TypeScript and a review of the Cocos Creator software (optional)"
      ],
      "description": "Are you ready to build your first game? This course is a no-nonsense direct study of how to build games with Cocos Creator, the best open-source game engine available today. Cocos Creator is used by indies, small teams, and  AAA game developers to create many great mobile and web games today.\nThis lesson will get you started from having very little knowledge about the software to a complete game in one day! Once finished, you can edit and change the code to your heart's content to make your own customized game.\nThis course comes with a free workbook when you download the full code from our store. So if you get stuck, you can go back and read exactly where things went wrong. :-D\nYou might wonder how hard it is to build a game from scratch, but it's never been easier with Cocos Creator. In our video series, you'll have your very own game built from scratch. You'll learn:\n\n\nHow to create nodes\nHow to create prefabs\nAdding and resetting points for your game\nHaving an item pool to add items into\nSetting and deleting new nodes in your game\nResetting your game\nAdding sound effects\nAdding Tweens\nSo much more...\nWe're ready to help you and hope you have fun as you build your game!",
      "target_audience": [
        "Game developers looking for a game engine that help export games to many platforms"
      ]
    },
    {
      "title": "2025 Unity 2D & 3D الدورة الشاملة لصناعة الألعاب كورس يونتى",
      "url": "https://www.udemy.com/course/unity-2d-3d/",
      "bio": "Unity ,Game Dev احترف تطوير الالعاب ثنائية وثلاثية الابعاد بمحرك يونتى وتعلم الربح من الالعاب واصنع ثلاثة العاب بنفسك",
      "objectives": [
        "تعلم تطوير الألعاب من الصفر و بدون اي خبرات سابقة",
        "سنكون معك خطوة بخطوة واذا واجهتك اى مشكلة راسلنا على سيرفر الديسكورد وسنقوم بمتابعة المشكلة معك وحلها فى اسرع وقت",
        "ستتعلم إستخدام محرك يونيتي",
        "ستتعلم لغة السي شارب واستخدامها في اليونتي",
        "ستتعلم تصميم مراحل ثنائية الابعاد وثلالثية الابعاد",
        "ستتعلم الخصائص الفيزيائية للمجسمات على يونيتي",
        "ستتعلم استخدام الأنميشن سواء ثنائى الابعاد او ثلاثى الابعاد",
        "ستتعلم تضيف اصوات داخل لعبتك",
        "ستتعلم اضافة مؤثرات بصرية مثل تأثير انفجار او ضباب وغيرهم",
        "كيفية استخدام انواع الانارة الموجودة في اليونتي بشكل ممتاز",
        "ستتعلم عن الـ بوست بروسس والتأثيرات البصرية",
        "ستتعلم عن تحريك الشخصيات بالذكاء الاصطناعى ai",
        "ستصنع 3 العاب خلال الدورة"
      ],
      "course_content": {},
      "requirements": [
        "كل ما تحتاجه لتبدأ الدورة هو جهاز كمبيوتر يستطيع تشغيل برنامج Unity"
      ],
      "description": "\" هل تحلم بتطوير ألعاب وزيادة دخلك بالدولار؟ مع خطوات مبسطة من البداية إلى الاحتراف، يمكنك الآن تحقيق ذلك\n\n\nلا تجعل الأمور تبدو معقدة، نحن هنا لمساعدتك خطوة بخطوة. لماذا تتردد؟ سوف نكون معك ليس فقط في شرح العملية والفيديوهات، بل في كل خطوة تخطوها. اطرح أسئلتك واحصل على رأينا عبر مجموعة ديسكورد.\n\n\nمثلما قام الكثيرون قبلك، بما في ذلك أنا، بتعلم والعمل في هذا المجال، أنت أيضًا تستطيع ذلك. وجودك هنا ليس صدفة، بل دليل على تصميمك واجتهادك. يمكنك تحقيق النجاح مثلي أو حتى أفضل! الفرصة لا تعوض لتطوير مهاراتك\n\n\nستتعلم تطوير الألعاب من الصفر و بدون اي خبرات سابقة سنكون معك اذا واجهتك اى مشكلة  او هناك شيء لم تفهمه  سنوضحه لك على سيرفر الديسكورد\nستتعلم إستخدام محرك يونيتي\nستتعلم لغة السي شارب واستخدامها في اليونتي\n\n\nستتعلم الخصائص الفيزيائية للمجسمات على يونيتي\nستتعلم الانميشن سواء ثنائى الابعاد او ثلاقى الابعاد\nستتعلم اضافة اصوات داخل لعبتك\nستتعلم كيف تضيف مؤثرات بصرية مثل تأثير انفجار او ضباب وغيرهم\nهتستخدم انواع الانارة الموجودة في اليونتي بشكل ممتاز\nستتعلم عن الـ بوست بروسس والتأثيرات البصرية\n\n\n--ستصنع 3 العاب خلال الدورة--\nاللعبة الاولى لعبة حرب فضاء ثنائية الابعاد لكى تتعلم تطوير الالعاب ثنائية الابعاد\n\n\nاللعبة الثانية هتعمل لعبة بنفس فكرة لعبة\nAnimal Transform\nالتى حققت اكثر من 100 مليون تحميلة على الاندرويد والايفون وحققت ارباح مهولة\n\n\nاللعبة الثالثة اللعبة الثالثة ستصنع لعبة بنفس فكرة لعبة\nMy Mini Mart\nالتى حققت اكثر من 50 مليون تحميلة على الاندرويد والايفون لكن هذه المرة سنطور شخصيات بالذكاء الاصطناعى  ونجعله يقوم بكل الوظائف مثل-البيع -الشراء-جلب المنتجات من المخازن الى الرف وانت ستدير المطعم فقط لكى تطبق جيدا على فكرة الذكاء الاصطناعى واستخدامه فى الالعاب",
      "target_audience": [
        "لكل شخص يريد تعلم تطوير العاب لصناعة العاب جميلة ومميزة",
        "لكل شخص يريد تعلم برنامج unity",
        "مطورين اليونتي الذين يريدون تطوير مهاراتهم",
        "للذين يحبون الألعاب",
        "للذين يتسائلون كيف يتم تطوير الألعاب"
      ]
    },
    {
      "title": "Animação 2D de personagens no Spine Pro",
      "url": "https://www.udemy.com/course/introducao-a-animacao-2d-no-spine-pro/",
      "bio": "Domine a animação 2D com o Spine Pro: desde os conceitos básicos até técnicas avançadas de forma fácil e eficiente",
      "objectives": [
        "Aprenda as melhores e mais fáceis técnicas de animação de personagem 2D para games e desenhos animados",
        "Aprenda a criar rig e malha de personagem de forma rápida, eficiente e profissional",
        "Domínio completo do Spine, um dos melhores programas de animação 2D",
        "Aprenda a criar animações 2.5D com efeitos 3D para aumentar a produtividade das animações"
      ],
      "course_content": {
        "Explorando as ferramentas de animação do Spine Pro: Herói 1": [
          "Exportação Photoshop para Spine",
          "Explorando a interface do Spine",
          "Criando malha do personagem",
          "Criação de bones no Spine",
          "Trabalhando com pesos para animação",
          "6 Utilizando IK e Timeline"
        ],
        "Heroi 2: Edição de malhas, rig personagens, animações e efeitos especiais em 2.5": [
          "Criando malha dos olhos",
          "Rigging para animação dos olhos",
          "Edição da malha da face",
          "Rigging e controladores 2.5D na face",
          "Edição de malha da boca",
          "Rigging de malha da boca",
          "Edição de malha no nariz",
          "Unificar todos os controladores da face",
          "Criando malha e rigging do cabelo",
          "Rigging do corpo",
          "Edição de malha do braço esquerdo",
          "Edição de malha do braço direito",
          "Edição de malha torso e pescoço",
          "Edição de malha Pernas",
          "Edição de malha dos tecidos e panos",
          "Rigging de tecidos e panos",
          "Edição de malha e rigging capa",
          "Ajustando controladores da face",
          "Loop de animação - Parte 1",
          "Loop de animação - Parte 2",
          "Deslocamento de frames - Parte 1",
          "Deslocamento de frames - Parte 2",
          "Criando animação da boca e olhos",
          "Criando efeito 2.5D",
          "Ajustes finais da animação",
          "32 Adicionando efeitos FX (fogo)"
        ]
      },
      "requirements": [
        "Noção básica de Informática",
        "Spine Professional",
        "Computador ou notebook básico, mouse e teclado.",
        "Não é necessário conhecimento prévio"
      ],
      "description": "Este curso de animação de personagem 2D é projetado para ensinar os alunos sobre as técnicas fundamentais de edição de malha, pesos, IK (Inverse Kinematics) e FK (Forward Kinematics) de uma forma fácil e rápida de entender, utilizando o Spine como ferramenta.\n\n\nOs alunos aprenderão a trabalhar com malhas para criar personagens animados, ajustar os pesos dos personagens para garantir movimentos suaves e precisos e a usar IK e FK para controlar a animação dos personagens.\n\n\nVamos animar dois estilos diferentes de personagens, um mais simplificado para testar as principais ferramentas do spine e outro mais detalhado.\n\n\nAtravés de exercícios práticos e projetos de animação, os alunos terão a oportunidade de colocar em prática o que aprenderam e desenvolver suas habilidades criativas. Este curso é perfeito para aqueles interessados em seguir uma carreira em animação 2D ou simplesmente aprender mais sobre essas técnicas para seus projetos pessoais.\n\n\nTudo isso de maneira fácil e intuitiva. O curso é perfeito para iniciantes, e você vai sair dele sabendo tudo o que precisa para começar a criar suas próprias animações incríveis.\n\n\nNão importa se você é um iniciante completo ou tem alguma experiência em animação, este curso é perfeito para você. Inscreva-se agora e dê o primeiro passo em sua jornada em animação 2D!\n\n\n\n\nEnglish\nThis 2D character animation course is designed to teach students about the fundamental techniques of mesh editing, weights, IK (Inverse Kinematics), and FK (Forward Kinematics) in an easy and quick-to-understand way, using Spine as the tool.\nStudents will learn how to work with meshes to create animated characters, adjust character weights to ensure smooth and precise movements, and use IK and FK to control character animation.\n\n\nWe will animate two different styles of characters, one simplified to test the main Spine tools and another more detailed.\nThrough practical exercises and animation projects, students will have the opportunity to put into practice what they have learned and develop their creative skills. This course is perfect for those interested in pursuing a career in 2D animation or simply learning more about these techniques for their personal projects.\n\n\nAll of this in an easy and intuitive way. The course is perfect for beginners, and you will come out of it knowing everything you need to start creating your own amazing animations.\n\n\nWhether you are a complete beginner or have some experience in animation, this course is perfect for you. Enroll now and take the first step in your journey in 2D animation!",
      "target_audience": [
        "Iniciantes na animação 2D",
        "Pessoas com interesse em se aprimorar na animação 2D",
        "Artistas gráficos",
        "Desenvolvedores de jogos interessados em aprender animação 2D"
      ]
    },
    {
      "title": "Kurs programowania w Scratch od 8 do 15 lat",
      "url": "https://www.udemy.com/course/kurs-programowania-w-scratch-od-8-do-15-lat/",
      "bio": "sam twórz własne gry!",
      "objectives": [
        "programowania, tworzenia gier i aplikacji"
      ],
      "course_content": {
        "Kurs": [
          "Pobieranie i instalacja",
          "02 - Interfejs",
          "Układ współrzędnych",
          "Pierwszy program",
          "Transformacje duszka",
          "Sterowanie wyglądem duszka",
          "Czujniki",
          "Wyrażenia",
          "Zmienne",
          "Instrukcje warunkowe",
          "Pętle",
          "Zdarzenia",
          "Odtwarzanie dźwięku za pomocą skryptu",
          "Kilka duszków na scenie",
          "Klonowanie duszków",
          "Nadawanie komunikatów do innych duszków",
          "Własne bloczki",
          "Lista",
          "Gra - arkanoid",
          "Edytor dźwięków",
          "Edytor graficzny",
          "Gra - zbieranie jajek"
        ]
      },
      "requirements": [
        "brak"
      ],
      "description": "Kurs, to prawie 6 godzin świetnej zabawy zarówno dla dziecka, jak i dla rodzica. A to dopiero początek …\nKurs Scratch pozwala zainteresować najmłodszych dziedziną programowania. Ucząc się wspólnie ze swoim dzieckiem, możecie razem poznawać tajniki programowania. Możesz także, przy pomocy kursu, zdobyć wiedzę potrzebną do samodzielnego nauczenia swojego dziecka.\nScratch to najbardziej popularne środowisko do nauki programowania dla dzieci, wykorzystywane również w szkole.\nDlaczego nauką języka programowania jest jedną z najważniejszych umiejętności dziecka?\nponieważ uczy logicznego i twórczego myślenia;\nrozwija umiejętności analityczne, np. podczas wyszukiwania błędu;\npoprzez skonstruowanie programu lub gry, która działa i którą mogą używać inni, daje poczucie sukcesu i możliwości wyrażenia siebie;\ngrając tylko w gry lub używając aplikacji, dziecko jest jedynie odbiorcą treści cyfrowych, potrafiąc programować, samo staje się twórcą;\njęzyk programowania jest językiem przyszłości, który coraz częściej wykorzystywany jest w wielu dziedzinach życia, zapotrzebowanie na programistów jest obecnie bardzo duże i stale rośnie;\nzamiast uczyć się kolejnego języka obcego, który nieużywany może zostać zapomniany, warto poznać język komputerów, który jest taki sam na całym świecie!\nProgramowanie, to umiejętność rozwiązywania zagadek i trudności w kreatywny sposób. Rozwija umiejętności analitycznego myślenia, które przydają się w wielu dziedzinach życia. W połączeniu z nieskrępowaną kreatywnością, nawet najmłodsze dzieci mogą stworzyć niezwykle atrakcyjne projekty.\nNauka programowania razem z dzieckiem może niespodziewanie zmienić także twoje podejście do trudnych problemów. Scratch’a możesz także użyć do stworzenia zabawnych prezentacji interaktywnych np. mających na celu przekazanie wiedzy twojemu dziecku w sposób, jaki uważasz za najkorzystniejszy, gdy np. nie możesz zrobić tego bezpośrednio.\nW kursie, krok po kroku, od zupełnych podstaw pokażę Ci, jak stworzyć w pełni działające gry.",
      "target_audience": [
        "Dzieci i młodzież, które chcą nauczyć się programowania"
      ]
    },
    {
      "title": "Unreal Engine — полное руководство по разработке на С++",
      "url": "https://www.udemy.com/course/unrealengine/",
      "bio": "Раскройте возможности C++ для разработки игр в Unreal Engine",
      "objectives": [
        "Программирование на C++ под Unreal Engine",
        "Архитектура Unreal Engine",
        "AI: деревья поведений, таски, декораторы, сервисы, EQS",
        "UMG: программирование пользовательских интерфейсов",
        "VFX: создание Niagara спецэффектов",
        "Программирование анимаций",
        "Писать чистый код",
        "Основные методы рефакторинга",
        "Управление звуковыми эффектами",
        "Сборка игры"
      ],
      "course_content": {
        "Введение": [
          "Добро пожаловать!",
          "Установка среды разработки",
          "Доступ к исходникам проектов",
          "Как проходить курс?"
        ],
        "Основы C++ в Unreal Engine": [
          "Создание проекта. Обзор Unreal Editor",
          "Создание первого C++ класса типа AActor",
          "Логирование. Макрос UE_LOG",
          "Тип FString. Собственная категория логирования",
          "Макрос UPROPERTY",
          "Компоненты. Тип FTransform",
          "Макросы USTRUCT, UENUM",
          "Материалы",
          "Таймеры",
          "Спаун объекта класса AActor",
          "Делегаты. Макрос UFUNCTION",
          "Обзор основных классов Unreal Engine",
          "Класс APawn. Ввод с клавиатуры",
          "Класс APlayerController",
          "Modules, Targets, UnrealBuildTool",
          "Сборщик мусора (garbage collector)",
          "Основы C++ в Unreal Engine"
        ],
        "Shoot Them Up: Настройка проекта, анимации движения": [
          "Введение",
          "Создание проекта, добавление контента",
          "Стандарты кодирования, clang-format, gitignore",
          "Создание классов ACharacter и APlayerController",
          "Базовое передвижение персонажа",
          "Управление камерой персонажа",
          "Анимационный блюпринт",
          "Анимация прыжка, state machine",
          "Домашнее задание: анимация бега",
          "Анимация передвижения назад, вправо и влево",
          "Сборка игры",
          "Настройка проекта, анимации движения"
        ],
        "Shoot Them Up: Здоровье персонажа": [
          "Введение",
          "Компонент здоровья UHealthComponent",
          "Take damage",
          "Apply damage",
          "Класс UDamageType",
          "Анимация смерти",
          "Класс наблюдателя ASpectatorPawn",
          "Домашнее задание: восстановление здоровья (auto heal)",
          "Изменение здоровья при падении с высоты",
          "Сборка игры",
          "Здоровье персонажа"
        ],
        "Shoot Them Up: Оружие": [
          "Введение",
          "Класс ABaseWeapon",
          "Класс AHUD, прицел",
          "Компонент оружия UWeaponComponent",
          "Обзор коллизий",
          "Line trace",
          "Line trace, рефакторинг",
          "Домашнее задание: take damage",
          "Animation offset, прицеливание",
          "F.A.B.R.I.K.",
          "Стрельба по таймеру",
          "Два новых класса оружия: RifleWeapon и LauncherWeapon",
          "Гранатомёт 1: спаун ракеты",
          "Гранатомёт 2: движение ракеты",
          "Гранатомёт 3: apply radial damage",
          "Создание арсенала оружия",
          "Анимация экипировки 1: anim notify",
          "Анимация экипировки 2: функции CanEquip и CanFire",
          "Анимация экипировки 3: кэширование анимационной позы",
          "Арсенал: патроны, магазины",
          "Анимация перезарядки 1: anim montage",
          "Анимация перезарядки 2: anim notify",
          "Автоматическая перезарядка",
          "Сборка игры, рефакторинг",
          "Оружие"
        ],
        "Shoot Them Up: UMG": [
          "Введение",
          "Шкала здоровья персонажа. Blueprint Widget",
          "Шкала здоровья персонажа (C++ версия). Класс UUserWidget",
          "Прицел для каждого вида оружия",
          "Домашнее задание: widget для боеприпасов оружия",
          "UserWidget для режима наблюдателя. Анимации в UMG",
          "Сборка игры, рефакторинг",
          "UMG"
        ],
        "Shoot Them Up: Pickups": [
          "Введение",
          "Классы BasePickup, HealthPickup, AmmoPickup",
          "Pickup respawn",
          "Pickup боеприпасов",
          "Домашнее задание: pickup здоровья",
          "Вращение pickup объектов",
          "Сборка игры",
          "Pickups"
        ],
        "Shoot Them Up: VFX, Niagara": [
          "Введение",
          "Обзор Niagara и Cascade систем",
          "VFX компонент UWeaponFXComponent",
          "Физические материалы. Impacts",
          "Decals",
          "Релаксация меша. Ragdoll",
          "Вибрация камеры",
          "UI эффект крови",
          "Черно-белый эффект камеры. Postprocessing",
          "Niagara. Эффект выстрела",
          "Niagara. Эффект следов от пуль",
          "Сборка игры, рефакторинг",
          "VFX"
        ],
        "Shoot Them Up: AI": [
          "Введение",
          "AI Move To. NavMesh Volume",
          "Дерево поведения (behavior tree). Blackboard",
          "Перемещаем AI персонажа в случайную точку сцены. Task",
          "Плавное вращение AI персонажа",
          "Компонент восприятия UAIPerceptionComponent",
          "Сервис нахождения противника. Декоратор",
          "Сервис стрельбы",
          "Компонент оружия AI персонажа",
          "Домашнее задание: сервис смены оружия",
          "Остановка дерева поведения",
          "AI-1",
          "Введение в Enviroment Query System (EQS)",
          "EQS. Контекст",
          "EQS. Поиск здоровья. С++ декоратор",
          "Домашнее задание: EQS. Поиск боеприпасов",
          "EQS. Собственный класс теста в С++",
          "Сборка игры, подготовка уровня",
          "AI-2"
        ],
        "Shoot Them Up: Game Mode": [
          "Введение",
          "Обзор класса AGameModeBase",
          "Спаун AI персонажей",
          "Время игры. Количество раундов",
          "Рестарт всех игроков",
          "Распределение игроков по командам. Класс APlayerState",
          "Стрельба только по игроку из другой команды",
          "Подсчет базовой статистики игроков",
          "Домашнее задание: widget времени игры",
          "Respawn component",
          "UUserWidget таймера респауна",
          "Turn players off",
          "Делегат OnNewPawn",
          "Рефакторинг класса ABaseCharacter",
          "Исправление артефакта камеры",
          "Сборка игры",
          "Game mode"
        ]
      },
      "requirements": [
        "Базовые знания одного из объектно-ориентированных языков программирования: C++, C#, Java, Python (или уверенное владение blueprint scripting)",
        "Минимальные знания Unreal Editor",
        "Basic knowledge of one of the object-oriented programming languages: C++, C #, Java, Python (or proficiency in blueprint scripting)",
        "Minimum knowledge of Unreal Editor"
      ],
      "description": "В данном курсе вы научитесь программировать на C++ под Unreal Engine.\nМы начнем с основ С++ в Unreal Engine и подробно разберем архитектуру фреймворка. Рассмотрим всю базу, которая необходима для воплощения собственных идей в жизнь в Unreal Engine.\nОсновной проект курса — шутер от третьего лица ShootThemUp, который мы последовательно будем разрабатывать, погружаясь в различные подсистемы и детали движка. Вместе мы рассмотрим все ключевые концепты и напишем очень много кода на C++. В каждом разделе курса будут домашние задания и тесты для закрепления пройденного материала. В конце каждой главы мы будем производить рефакторинг, повышая качество и чистоту нашего кода, и упаковывать игру.\nК концу курса у нас будет полноценная игра, багаж знаний пополнится всем необходимым для комфортного использования C++ в Unreal Engine, а понимание работы движка будет совершенно на другом уровне. В дальнейшем вы сможете развивать полученные навыки в интересующем вас направлении, создавать игры и реализовать все идеи самостоятельно.\nКурс разработан под версию Unreal Engine 4.26. Проекты курса совместимы с 4.27 и Unreal Engine 5.0.\nВ курсе мы разберем следующие темы:\nUnreal Framework: основные классы, типы, макросы, делегаты, property system\nКомпилирование проекта: modules, targets\nСборщик мусора (garbage collector)\nКомпонентная модель Unreal Engine\nПрограммирование анимаций: стейт машина, FABRIK, anim notifies\nUMG: пользовательские интерфейсы\nВизуальные эффекты Niagara\nОбработка коллизий\nФизические материалы\nPostprocessing\nИскусственный интеллект: деревья поведения, таски, сервисы, декораторы, EQS\nAI компонент восприятия противников\nУправление звуком: SoundCue, SoundClass, SoundMix, Attenuation settings\nКонтролирование процесса игры: GameMode, PlayerState, GameInstance\nДинамическая подгрузка уровней\nUnreal Engine востребован в различных современных индустриях: игры, мобильные приложения, симуляторы, образование, архитектура, дизайн, VR/AR/XR, кинопроизводство. Знание C++ на порядок увеличит вашу конкурентную способность на рынке.\nИспользуя C++, можно реализовать совершенно любую идею. Вы не ограничены в своих возможностях — вы создаете эти возможности сами.\nСамое время начать погружение в Unreal Engine! Присоединяйтесь! Будет интересно!\n\n\n------------------------------------------------------------------\n\n\nIn this course, you will learn how to use C++ in Unreal Engine.\nWe'll start with the basics of C++ in Unreal Engine and go over the architecture of the framework in detail. You will learn everything that is needed to bring your own ideas to life with Unreal Engine.\nThe main project of the course is the third-person shooter - ShootThemUp, which we will consistently develop, we will wive into various subsystems and engine details. Together we will cover all the key concepts and write a lot of C++ code. Each section of the course contains homework and tests to reinforce the material covered. At the end of each chapter, we will refactor our code to improve the quality and clarity of our code and also will package the game.\nBy the end of the course, we will have a full-fledged game, and the understanding of the engine will be on a completely different level. In the future, you will be able to develop the acquired skills in the direction you are interested in, create games and implement all ideas on your own.\nThe course is developed for Unreal Engine 4.26. Course projects are compatible with 4.27 and Unreal Engine 5.0.\nThe course is covering the following topics:\nUnreal Framework: core classes, types, macros, delegates, property system\nCompiling the project: modules, targets\nGarbage collector\nUnreal Engine Component Model\nAnimation programming: state machine, FABRIK, anim notifies\nUMG: user interfaces\nNiagara visual effects\nCollision handling\nPhysical materials\nPostprocessing\nArtificial intelligence: behavior trees, tasks, services, decorators, EQS\nAI component of enemy perception\nSound Control: SoundCue, SoundClass, SoundMix, Attenuation settings\nControlling the game process: GameMode, PlayerState, GameInstance\nDynamic level loading\nUnreal Engine is in demand in various modern industries: games, mobile applications, simulations, education, architecture, design, VR/AR/XR, filmmaking. Knowledge of C++ will increase your competitiveness in the job market.\nAny idea could be realized using C++. You are not limited in your capabilities - you create these opportunities by yourself.\nIt's time to start diving into Unreal Engine! Join us! It will be interesting!",
      "target_audience": [
        "Начинающие и среднего уровня разработчики Unreal Engine",
        "Blueprint программисты, которые хотят научиться разрабатывать на C++",
        "Разработчики под другие движки (Unity3D, CryEngine, Godot и т.д.), желающие освоить Unreal Engine",
        "Если у вас нулевой опыт программирования, курс может показаться сложным. Рекомендую начать с основ C++",
        "Beginner and Intermediate Unreal Engine Developers",
        "Blueprint programmers who want to learn how to develop in C++",
        "Developers for other engines (Unity3D, CryEngine, Godot, etc.) who wants to study Unreal Engine",
        "If you have zero programming experience, the course may seem complex. I recommend starting with the basics of C++"
      ]
    },
    {
      "title": "Testing de Videojuegos sobre Móviles y Consolas",
      "url": "https://www.udemy.com/course/cursoqavideojuegos2/",
      "bio": "Sistema de trabajo, Testing en Consolas, Móviles y Anexo",
      "objectives": [
        "Este curso es el módulo 2 del curso \"Conviértete en Probador Profesional de Videojuegos\"",
        "Aprenderás a testear en consolas, en dispositivos móviles y todas sus peculiaridades, como son las interrupciones, el crash log, los screenshots y mucho mas",
        "además conocerás la metodología AGILE, la cual es usada en los estudios de videojuegos mas conocidos del mundo",
        "Recuerda que estás a un paso de convertirte en probador profesional de videojuegos, en el módulo 3 obtendrás la manera de hacer prácticas remuneradas"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "¡Atención! ¿No tienes el módulo anterior?"
        ],
        "Sistema de Trabajo": [
          "Black Box Testing & White Box Testing",
          "Grey Box Testing",
          "Testing de Regresión",
          "Testing Exploratorio",
          "Explicación Tipos de Testing",
          "Overview Mail",
          "Baterías de Pruebas",
          "Test Plan"
        ],
        "Planes de prueba enfocados a Móviles": [
          "Smoke Test",
          "Bootcheck",
          "Tracking",
          "Crash Logs",
          "Crash Logs: Catlog",
          "Crash Logs: Actualización",
          "Screenshots en Mac/iOS",
          "Screenshots en Windows/Android",
          "Cómo hacer videos de poco tamaño",
          "Preparar el equipo para Testear"
        ],
        "Entrar en el mundo de los videojuegos": [
          "La importancia del idioma",
          "Cómo conseguir un trabajo en videojuegos"
        ],
        "Testing en Consolas y Móviles": [
          "Testing en Consolas: Resumen",
          "Testing en Consolas: Guidelines",
          "Guía iOS",
          "Guía Android",
          "Guía iPhone X"
        ],
        "Anexo": [
          "Localización",
          "AGILE",
          "Lugares donde buscar ofertas de empleo en videojuegos"
        ],
        "Cierre de este Módulo": [
          "Cierre del Módulo",
          "Regalo final del Curso Profesional de Testing de Videojuegos"
        ]
      },
      "requirements": [
        "Tener el módulo 1 del curso \"Conviértete en Probador Profesional de Videojuegos\"",
        "Tener un ordenador y un teléfono móvil"
      ],
      "description": "¡Descubre el emocionante mundo de los videojuegos con nuestro Segundo Módulo de la Formación Profesional de Testing de Videojuegos! En este módulo, te sumergirás en el fascinante entorno de un estudio profesional de videojuegos y aprenderás las habilidades necesarias para convertirte en un tester excepcional.\n¿Alguna vez has soñado con formar parte del proceso de creación de videojuegos? En este curso, te mostraremos los entresijos de la industria y te enseñaremos los diferentes tipos de planes de pruebas y gestión del trabajo que se utilizan en los estudios de renombre. Conocerás las estrategias y técnicas empleadas para garantizar la calidad de los juegos antes de su lanzamiento al mercado.\nPero eso no es todo. También aprenderás las diferencias fundamentales entre testear en PC/Mac y hacerlo en consolas o dispositivos móviles. Estos últimos son especialmente relevantes, ya que representan el futuro de la industria del gaming. ¡El 80% de los productos que se testean en la actualidad están diseñados para móviles, celulares y tablets! Con nuestro programa de formación, estarás preparado para aprovechar las oportunidades laborales que ofrece este creciente mercado.\nRecuerda, al completar este curso, estarás capacitado para convertirte en un probador profesional de videojuegos. Pero eso no es todo, porque en nuestro Módulo 3, te brindaremos la oportunidad de realizar prácticas remuneradas. ¡Podrás poner en práctica todo lo aprendido y obtener una valiosa experiencia en la industria!\nNo pierdas la oportunidad de adentrarte en el mundo apasionante de los videojuegos y convertir tu pasión en una carrera exitosa. ¡Inscríbete en nuestro Segundo Módulo de la Formación Profesional de Testing de Videojuegos y prepárate para un futuro emocionante!",
      "target_audience": [
        "Estudiantes del curso \"Conviértete en probador profesional de videojuegos\" Amantes de los videojuegos, todos los jugadores que quieren hacer de su pasión su profesión",
        "A todos los interesados en aprender a trabajar como probador de videojuegos"
      ]
    },
    {
      "title": "Criação de games de plataforma 2D com a Godot Engine.",
      "url": "https://www.udemy.com/course/criacao-de-games-de-plataforma-2d-com-a-godot-engine/",
      "bio": "Aprenda a criar os seus primeiros games de plataforma na GODOT.",
      "objectives": [
        "Criar jogos com uma das ferramentas de desenvolvimento de games mais incríveis do mercado!",
        "Programar sobre nós de modo a criar um ambiente interativo (game) valendo-se não apenas da instrução do professor, mas das ideias adquiridas pelo próprio aluno.",
        "Criar game de plataforma 2D",
        "Criar animações valendo-se dos nodes da Engine.",
        "Como usar sinais",
        "Exportar para Android"
      ],
      "course_content": {
        "Projeto 1 - Introdução e Game de exemplo": [
          "Introdução",
          "Download, instalação e criação de atalho",
          "Criação do primeiro projeto",
          "Organização das docks",
          "importação de assets e remoção de filtro de suavização",
          "Condigurações do projeto e node2d",
          "Criação do player e definição da cena principal",
          "Criação do primeiro arquivo de script",
          "Criação da função on_touch e variável force_jump",
          "Animação do player voando",
          "Correção na animação do player voando",
          "Adicionando a animação para o impulso",
          "Mudando de animação clicando com o mouse",
          "Criação das colunas",
          "Criação do scripts para as colunas",
          "Criando as instancias das colunas",
          "Criação do cenário",
          "Movimentação das montanhas ao fundo",
          "Repetição das montanhas ao fundo",
          "Movimentação das montanhas e nuvens",
          "Otimizando os códigos",
          "Criação do node label",
          "Trabalhando com a pontuação do game",
          "Configuração de fonte dinâmica",
          "Finalização do game de apresentação"
        ],
        "Projeto 2 - Game de plataforma": [
          "Explicação sobre a seção",
          "Criação de um novo projeto",
          "Organização dos painéis",
          "Importação e apresentação dos Assets",
          "Desmarcando a opção de filtro para as imagens",
          "Criação da tela start",
          "Explicação de como trabalharemos no projeto",
          "Animação do fundo e do player",
          "Criação do texto para começar o jogo",
          "Animação do texto e verificação de inputs",
          "Animação para escurecer a tela",
          "Mudando de fase",
          "Criação do sistema de partículas",
          "Alterações no sistema de partículas",
          "Fazendo mais alguns ajustes na fumaça",
          "Criação do tilemap",
          "Mais tilemaps e agrupamento",
          "Criação do player",
          "Criação do script do player",
          "Aplicação da gravidade",
          "Controlando o player",
          "Personagem saltando",
          "Quantidade de pulos",
          "Corrigindo o pulo com o player caindo",
          "Aceleração e desaceleração do personagem",
          "Animação do player",
          "Finalização das animações do player",
          "Finalização do controle das animações do player",
          "Correção no tilemap",
          "Correção na movimentação do player e na animação jump",
          "Emitindo poeira ao correr no cenário",
          "Ajustes na poeira",
          "Criação do primeiro inimigo",
          "Movimentação do inimigo1",
          "Mudando a direção do inimigo pelo inspector",
          "Criação do segundo inimigo",
          "Destruindo o inimigo ao pular sobre ele",
          "Destruindo inimigo e pulando",
          "Executando animação do inimigo ao pular sobre ele",
          "Verificando a colisão do player com o inimigo",
          "Animação do personagem ao sofrer danos",
          "Executando a animação de danos",
          "Verificando se o player pode destruir o inimigo",
          "Criação e acionamento de uma alavanca",
          "Criação da plataforma",
          "Criação do script da plataforma",
          "Criação da movimentação da plataforma",
          "Ajustando a direção da plataforma",
          "Detectando a colisão com a plataforma e pegando o nome dela",
          "Player acompanhando a plataforma sozinho",
          "Acionando as plataformas com alavanca",
          "Corrigindo movimento sobre a plataforma quando parada",
          "Player sendo empurrado quando colidir com o inimigo",
          "Criação dos itens do cenário",
          "Coletando os itens do cenário",
          "Otimizando a coleta de itens",
          "Habilitando os itens coletados",
          "Alterações na nave do player",
          "Concertando a nave do player e fazendo ela subir",
          "Animação da nave concertada",
          "Criação do identificadores de vidas e itens",
          "Correção na visualização da fumaça quando se afastar dela",
          "Habilitando os itens na interface",
          "Removendo os corações e as vidas quando colidir com o inimigo",
          "Melhorando o sistema de remoção de corações e vidas e parando o player",
          "Configurando animações para vencer o jogo e ter o gameover",
          "Chamando a tela de gameover",
          "Melhorando a mudança para a tela de gameover",
          "Player entrando na nave",
          "Animação de quando o player vence o jogo",
          "Exibindo a tela winner",
          "Otimizando a tela start",
          "Adicionando som ao game",
          "Executando som no jogo",
          "Montando um novo cenário",
          "Colocando mais elementos no cenário",
          "Resetando a posição do player ao cair do cenário",
          "Removendo vidas ao cair da plataforma e finalização do projeto"
        ],
        "Projeto 3 - Game de platafoma": [
          "Explicação do projeto 3",
          "Criação de um novo projeto e como salvar o layout ajustado",
          "Importação dos assets e remoção do filtro de suavização",
          "Criação do tilemap",
          "Criação de mais um tilemap, desta vez para enfeitar o cenário",
          "Salvando a primeira cena e criação do player",
          "Movimentação do player",
          "Controlando o player",
          "Aceleração do personagem",
          "Correção do tileset e flip_h",
          "Fazendo o player pular",
          "Colocando os elementos do cenário na frente do player",
          "Criação da animação do player",
          "Programando as animações do player",
          "Adicionando o nó de partículas",
          "Emitindo apenas quando estiver correndo",
          "Colocando as particulas sempre atras do player",
          "Criação da cena do inimigo",
          "Direção do inimigo",
          "Verificando a direção do inimigo",
          "Acertando a movimentação do inimigo",
          "Mudando a direção do inimigo após verificação",
          "Trabalhando com camadas de colisão e mascaras",
          "Animação do inimigo andando",
          "Outras animações do inimigo",
          "Inimigo de outro tipo",
          "Criando um campo para detectar o player",
          "Criação de um circulo em volta do inimigo",
          "Executando a animação de susto ao se aproximar do inimigo",
          "Player sendo empurrado",
          "Mudando o player de camada para não colidir temporariamente",
          "Devolvendo o controle para o player",
          "Criação do colisor para os pés do player",
          "Pulando sobre o inimigo",
          "Executando a animação do inimigo morrendo",
          "Acertando o chão para evitar movimentação quando parado",
          "Camera seguindo o player",
          "Parallax background e layer",
          "Trabalhando como parallax e aumentando o cenário",
          "Dica importantíssima sobre colisores",
          "Passando o Animated Sprite para dentro de um node2d",
          "Novas animações",
          "Executando animação quando colidir com o inimigo",
          "Criação de arquivo de script para controle do jogo",
          "Resetando a posição do player quando cair da plataforma",
          "Executando animações e voltando a controlar o player",
          "Resolvendo o problema de camadas quando interrompemos animação",
          "Criação das vidas para o player",
          "Player perdendo vidas",
          "Remover as vidas e abrindo espaço para o gameover",
          "Tela de game over",
          "Criação das animações de gameover",
          "Executando animação de gameover no jogo",
          "Reiniciando o game",
          "Criação da tela start",
          "Programação da tela start",
          "Corrigindo gameover ao cair do cenário",
          "Criação de uma função para trocar de cenas",
          "Otimizando a função para passar de fase",
          "Criação do local de passagem de fase",
          "Criação da fase02",
          "Finalização do projeto 3 e exercício proposto",
          "Extra com demonstração dos cenários modificados e on way collision",
          "Extra com dicas sobre criação de novas fases e vidas"
        ],
        "Projeto 4 - Game de plataforma e ação": [
          "Criação de um novo projeto",
          "Importação dos assets e remoção do filtro de suavização",
          "Criação do tilemap parte 1",
          "Criação do tilemap parte 2",
          "Criação do tilemap - parte final",
          "Criação do cenário",
          "Criação do player",
          "Criação do script do player",
          "Movimentação do player",
          "Espelhamento do player",
          "Player pulando",
          "Criação de variáveis para verificar jump e wall",
          "Executando as animações do personagem",
          "Animação do perseonagem na parede",
          "Pulando entre paredes",
          "Melhorando o pulo entre paredes",
          "Impedindo a troca de direção quando estiver pulando entre paredes",
          "Devolvendo a velocidade normal do game",
          "Criando a cena do laser",
          "Adição do nó de posição",
          "Instanciando o laser",
          "Corrigindo a direção do laser",
          "Corrigindo o disparo do laser",
          "Brilho ao atirar",
          "Emitindo sons",
          "Criação de uma barra de hp",
          "Perdendo energia e ganhando",
          "Otimizando os disparos quando colidir com a parede",
          "Otimizando os saltos quando perto das paredes",
          "Criação do inimigo",
          "Definindo layers e masks",
          "Verificando a colisão do inimigo com o chão",
          "Inimigo andando",
          "Mudando a direção do inimigo",
          "Diminuindo o hp do inimigo com o laser",
          "Parando o inimigo quando atingido",
          "Criação de uma nova cena",
          "Salvando a cena do efeito",
          "Efeito fade usando o node tween",
          "Instanciando efeito na posição de colisão",
          "Efeito de danos no inimigo",
          "Adição da camera e amplicação do cenário",
          "Conhecendo o node VisibilityNotifier2D",
          "Botão de play para retornar ao game quando em pause",
          "Saindo do pause game",
          "Criação da cena ghost",
          "Efeito ghost",
          "Finalização do projeto 4 e desafios para completar o jogo"
        ],
        "Movimentação aprimorada em ambiente com inclinação": [
          "Criação do projeto, player e chão",
          "Criação da plataforma",
          "Criação do script do player e programação",
          "Configurando a movimentação do player e máximo de inclinação",
          "Conclusão"
        ],
        "Exportação para Windows e Android": [
          "Download do template de exportação e exportar para Windows",
          "Localizando e definindo o ADB",
          "Localizando e definindo o jarsigner",
          "Explicação sobre a próxima aula - Muito importante",
          "Criando uma keystore e definindo no editor",
          "Exportando para Android",
          "Instalando app no celular",
          "Exercício sobre Exportação para Android"
        ],
        "Desafio sobre o primeiro projeto": [
          "Exercício"
        ],
        "Agradecimentos": [
          "conclusão do curso"
        ],
        "Aula Bônus": [
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Ter um mínimo de conhecimento de informática.",
        "Ter um conhecimento básico sobre a GODOT."
      ],
      "description": "Neste curso, você estará aprendendo com uma linguagem de fácil compreensão e muito objetiva como criar games de plataforma 2D. Para isso, faremos uso de diferentes tipos de nós, passando pelos mais conhecidos como RigidBody2D, KinematicBody2D, Sprite, CollisionShape2D e muitos outros que serão usados para criação dos elementos que farão parte do nosso game.\nVeremos como usar os nós de animação para dar mais vida aos personagens e neste caso, teremos 3 nos exemplos, o primeiro é o AnimatedSprite, o segundo é o AnimationPlayer e o último que estaremos conhecendo é o Tween, e tudo sem a necessidade do uso de softwares de terceiros.\nTeremos ainda exemplos de utilização de arquivos de áudio em um jogo e algumas possíveis alterações para melhor representar os eventos relacionados ao som.\nFalando sobre o controle do player, veremos como trabalhar a sua direção, movimentação, aceleração, desaceleração, pulo duplo e outras possibilidades de interação com outros personagens ou elementos do cenário; um detalhe interessante que veremos na movimentação do player é que ao correr pelo cenário, será possível perceber a poeira saindo da direção dos pés dele, e isso será feito usando um nó chamado de particles2D, claro, veremos o uso desse tipo de nó não apenas uma vez, mas em outras situações também.\nPara movimentação do fundo do nosso game, teremos um exemplo através do GDSCRIPT e também exemplos com mais dois nós usados para este fim, sendo um deles o Parallax Background e Parallax layer.\n\n\nOrganização do curso:\nEm nosso primeiro projeto, que será uma apresentação do forma de como estaremos trabalhando no curso, construiremos um game nos moldes do famoso Flappy Bird.\nEm nosso segundo projeto e este sim, nos trará o foco do curso, construiremos um game de plataforma 2D valendo-se de diferentes nós para que aconteçam as interações necessárias. Nele veremos o uso de sinais em várias situações e perceberemos o quão forte é este conceito dentro da Godot. Além disso, usaremos bastante as funções personalizadas, ou seja, funções criadas por nós mesmos para tornar os nossos códigos mais limpos e mais modularizados também.\nNo terceiro projeto, criaremos um game seguindo o foco do curso e vamos explorar um pouco mais os nós já aprendidos e conhecer outros. Neste, o nosso fluxo de trabalho ficará um pouco mais rápido e vai nos permitir extrair novas experiência na Godot.\n\n\nEm nosso quarto projeto, estaremos trabalhando em um game com elementos de plataforma e ação. Neste veremos como Pausar o jogo, como instanciar lasers, Saltar entre as paredes, barra de HP, fazer animação com o node TWEEN e como criar o famoso efeito GHOST.\n\n\nNão deixe de conferir com muito atenção a  penúltima  seção, ela vai nos trazer uma solução muito interessante para corrigir a movimentação do player sobre ambientes com inclinação.\nPara concluir, teremos também uma seção na qual veremos como fazer a exportação do nosso projeto para a plataforma Windows e plataforma Android seguida de uma demonstração da instalação em um celular.\n\n\nPara conferir tudo isso, se inscreva no curso e bons estudos!",
      "target_audience": [
        "Desenvolvedores iniciantes.",
        "Criadores de conteúdo digital interativo.",
        "Fãs de jogos digitais.",
        "Programadores em busca de criar jogos.",
        "Desenvolvedores de games que querem migrar para a GODOT",
        "gamers"
      ]
    },
    {
      "title": "Criação de Personagens 3D no Blender",
      "url": "https://www.udemy.com/course/crie-personagens-em-3d-no-blender-28/",
      "bio": "Curso Básico de Modelagem 3D de Personagens no Blender",
      "objectives": [
        "Modelagem 3D Low Poly no Blender",
        "Mapeamento UV",
        "Texturização com Photoshop",
        "Noções dos padrões da indústria"
      ],
      "course_content": {
        "Introdução ao Blender 2.80": [
          "Ferramentas Básicas",
          "Transformação de Objetos e Atalhos principais",
          "Trabalhando com Viewports",
          "Manipulação de Meshes e Camadas",
          "Modo de Edição dos Meshes",
          "Conceitos Essenciais para Modelagem de Personagens"
        ],
        "Modelagem Tony Tony Chopper One Piece": [
          "Importação do Blueprint (Parte01) e Configurações Básicas",
          "Importação do Blueprint (Parte02) e Configurações Básicas",
          "Modelagem Cabeça Parte 01",
          "Modelagem Cabeça Parte 02",
          "Modelagem Cabeça Parte 03",
          "Modelagem Cabeça Parte 04",
          "Modelagem Cabeça Parte 05",
          "Modelagem Cabeça Parte 06",
          "Modelagem Corpo Parte 01",
          "Modelagem Corpo Parte 02",
          "Modelagem Corpo Parte 03",
          "Modelagem Corpo Parte 04",
          "Modelagem Corpo Parte 05",
          "Modelagem Pe Parte 01",
          "Modelagem Pe Parte 02",
          "Modelagem Pe Parte 03",
          "Modelagem Pe Parte 04",
          "Modelagem Braco Parte 01",
          "Modelagem Braco Parte 02",
          "Modelagem Orelha",
          "Modelagem Chifre Parte 01",
          "Modelagem Chifre Parte 02",
          "Modelagem Chifre Parte 03",
          "Modelagem Chifre Parte 04",
          "Modelagem Chifre Parte 05",
          "Modelagem Chifre Parte 06",
          "Modelagem Chapeu Parte 01",
          "Modelagem Chapeu Parte 02",
          "Mapeamento UV Parte 01",
          "Mapeamento UV Parte 02",
          "Mapeamento UV Parte 03",
          "Mapeamento UV Parte 04",
          "Mapeamento UV Parte 05"
        ],
        "Texturização no Photoshop": [
          "Introdução ao Photoshop + Texturização Parte 01",
          "Texturização no Photoshop Parte 02",
          "Texturização no Photoshop Parte 03",
          "Texturização no Photoshop Parte 04",
          "Texturização no Photoshop Parte 05",
          "Texturização no Photoshop Parte 06",
          "Texturização no Photoshop Parte 07",
          "Texturização no Photoshop Parte 08",
          "Texturização no Photoshop Parte 09",
          "Texturização no Photoshop Parte 10",
          "Texturização no Photoshop Parte 11",
          "Texturização no Photoshop Parte 12",
          "Texturização no Photoshop Parte 13",
          "Texturização no Photoshop Parte 14",
          "Texturização no Photoshop Parte 15",
          "Texturização no Photoshop Parte 16 + Extra Subdivision Surface",
          "Extra de Sculpting e Considerações Finais"
        ]
      },
      "requirements": [
        "Computador adequado para trabalhar com ambiente 3D",
        "Software Blender 2.80"
      ],
      "description": "Aprenda o Fundamental sobre modelagem de Personagens em 3D.\nNão é necessário conhecimento prévio algum, basta seguir passo a passo que você poderá criar no decorrer no curso seus próprios modelos em 3D, sejam lowpoly (de baixa taxa de polígonos como jogos de Playstation1) como em HighPoly (Alta taxa de polígonos como jogos com gráficos incríveis de gerações atuais de console).\nAprenda todos os conceitos necessários para modelar personagens com precisão e segurança.\nFaça a MODELAGEM de Personagens em 3D, MAPEAMENTO e TEXTURIZAÇÃO passo a passo!\nIngresse no mercado de modelagem 3D que vem crescendo cada vez mais em desenvolvimento de games, cinema, arquitetura, engenharia, entre outros.",
      "target_audience": [
        "Iniciantes no Blender e Usuário Veterenos que queiram aprender a criar personagens em 3D"
      ]
    },
    {
      "title": "유니티 3D로 VR/AR 모바일 앱 만들기",
      "url": "https://www.udemy.com/course/lets_learn_and_create_vr_ar_mr_app_with_unity_3d/",
      "bio": "'포켓몬고'와 비슷한 앱을 만들고 싶은 분에게 유용한 강의입니다. 유니티(Unity) 3D로 가상현실(VR)과, 증강현실(AR), 그리고 혼합현실(MR)를 이해하고 직접 관련 모바일 앱을 제작해보는 실습 강의입니다",
      "objectives": [
        "가상현실(VR)과 증강현실(AR)의 이해",
        "기본적인 유니티 3D 사용을 위한 C# 언어",
        "유니티 3D를 이용한 가상현실, 증강현실 콘텐츠 제작",
        "증강현실과 가상현실을 함께 이용하는 방법과 노하우",
        "안드로이드, iOS 모바일 앱 배포 방법"
      ],
      "course_content": {
        "가상현실에 대하여": [
          "VR의 정의 (도대체 VR은 무엇인가?! )",
          "VR의 역사 (VR은 1960년대에도 존재했다!!)"
        ],
        "이것만 있으면 VR을 만들 수 있어요!(VR을 만들기 위한 환경설정))": [
          "유니티를 설치해보자 (안드로이드, 아이폰 세팅)",
          "안드로이드로 만들고싶다면! (안드로이드 SDK 설치)",
          "구글 카드보드를 사용해 보아요 (카드보드(Gvr) SDK 설치)",
          "ADK, JDK 설치"
        ],
        "유니티를 이용하여 VR을 만들어 보자!(VR게임 만들기)": [
          "프로젝트 생성과, UI",
          "카드보드(Gvr) 카메라 불러오기",
          "타겟 오브젝트 만들기 1",
          "타겟 오브젝트 만들기 2",
          "타겟을 소환하는 스폰 포인트 만들기 1",
          "타겟을 소환하는 스폰 포인트 만들기 2",
          "애셋스토어와 사운드 사용하기",
          "카메라가 바라보는 방향으로 날아가기",
          "무기 오브젝트 만들기 1",
          "무기 오브젝트 만들기 2",
          "스마트폰으로 내보내기"
        ],
        "AR콘텐츠를 만들기 위해서 무엇이 필요한가?!": [
          "AR SDK에는 무엇이 있는가?",
          "Vuforia SDK를 이용하여 증강현실을 구현하자"
        ],
        "증강현실 앱을 만들어보자! (이름하여 '캣치몬고' 만들기)": [
          "Vuforia ‘key’ 만들기, 이미지 마커 등록",
          "증강현실 Scene 구성",
          "AR동물 몬스터 만들기",
          "던져서 몬스터를 잡을 AR 몬스터볼 만들기",
          "몬스터볼 스크립트 짜기 1",
          "몬스터볼 스크립트 짜기 2",
          "몬스터볼 스크립트 짜기 3",
          "AR과 카드보드(GVR) 카메라 같이 사용하기",
          "AR과 카드보드를 위한 iOS 스크립트 수정"
        ],
        "마무리!! 메인화면 만들기!": [
          "메인화면 만들기 MR 제작을 위한 유니티 설정",
          "AR과 카드보드 AR Scene 연결하기 및 내보내기",
          "게임 완성본 데모 영상"
        ]
      },
      "requirements": [
        "개인 PC 혹은 노트북",
        "노트 3 이상, 아이폰 5이상의 모바일 디바이스",
        "구글 카드보드(2.0 추천) 혹은 그 외의 HMD(Head mounted Display)",
        "이 외의 것들은 강좌에서 설명해 드립니다"
      ],
      "description": "본 강좌는 가상현실 세계에 첫발을 내딛고 싶으신 분들을 위한 최적의 강의입니다. 뉴스와 인터넷에서만 보던 가상현실이 궁금하셨던분, 가상현실 콘텐츠를 개발하고 싶지만 멀게만 느껴지셨던분들에게 최대한 편안하고 재미있게 가상현실 콘텐츠 제작을 시작할 수 있게 도와드립니다.\n기본적인 가상현실(VR) 및 증강현실(AR)에 대한 배경지식부터 시작하여 유니티(Unity)3D라는 툴을 이용한 콘텐츠 제작, 더 나아가 실제 모바일 디바이스에 설치하고 마켓에 올리는 것 까지 도와드립니다.\n유니티 3D를 이용해 보신적이 없더라도 걱정할 필요가 없습니다. 유니티 설치부터, 전반적인이용 및 기초적인 C# 언어 도 친절하게 설명해 드립니다.\n저희는 여러분이 최대한 가상현실 콘텐츠 제작에 부담없이 접근하셨으면 좋겠습니다. 저희 강의와 함께 유니티 개발 및 VR, AR에 대한 기초를 쌓고 더 나아가 자신만의 콘텐츠를 개발하실수 있으실때까지 도와드리겠습니다.",
      "target_audience": [
        "가상현실 증강현실 콘텐츠 개발을 원하시는 분",
        "하지만 프로그래밍이 두려워 시작하지 못하시는 분",
        "인디 개발자 및 개인 개발자",
        "포켓몬고와 비슷한 게임을 만들고 싶으신 분"
      ]
    },
    {
      "title": "Desenvolva o seu primeiro jogo na Unity 2019!",
      "url": "https://www.udemy.com/course/desenvolva-o-seu-primeiro-jogo-na-unity-2019/",
      "bio": "Aprenda a criar o seu próprio jogo 2D, utilizando a poderosíssima Unity Engine 2019 e a linguagem C#!",
      "objectives": [
        "Desenvolver Jogos na Unity",
        "Programar em C#",
        "Uso da física e do sistema colisões da Unity",
        "Criar um sistema de \"HighScore\"",
        "Criar uma Interface de Usuário (UI)",
        "Carregar \"Cenas\" Através de Botões",
        "Utilizar a ferramenta de animação para animar Sprites",
        "Criar e editar \"Prefabs\"",
        "Adicionar e Configurar Músicas e Efeitos Sonoros",
        "Criar uma tela de Créditos Animada"
      ],
      "course_content": {
        "Instalando os programas": [
          "Baixando e Instalando a Unity e o Visual Studio (Gratuitos)",
          "Configurando o Visual Studio para funcionar com a Unity"
        ],
        "Iniciando o Projeto e Programando o Avião": [
          "Iniciando o projeto",
          "Programando o voo do avião (Parte 1)",
          "Programando o voo do avião (Parte 2)",
          "Criando um Cenário Infinito",
          "Hora do Quiz! - 1.0"
        ],
        "Criando os obstáculos e um sistema para gerá-los": [
          "Criando e Configurando o Movimento das Montanhas",
          "Criando e entendendo o que são\"Prefabs\"",
          "Criando um Sistema de Spawn Infinito de Montanhas",
          "Configurando o Sistema de Spawn Montanhas",
          "Hora do Quiz! - 2.0"
        ],
        "Criando o Sistema de Pontuação": [
          "Configurando os pontuadores entre as montanhas",
          "Programando o sistema de pontuação",
          "Criando a Interface do Usuário (UI)",
          "Exibindo a pontuação na tela"
        ],
        "Adicionando Coletáveis no Jogo": [
          "Criando e Programando as Estrelas Coletáveis",
          "Programando o Spawn das Estrelas"
        ],
        "Criando o \"Pause\" do Jogo": [
          "Pausando o Jogo",
          "Criando o Menu de Pause (Parte 1)",
          "Criando o Menu de Pause (Parte 2)",
          "Programando o Menu de Pause",
          "Configurando os Botões do Menu de Pause",
          "Corrigindo o Bug do Menu de Pause"
        ],
        "Criando o \"Game Over\"": [
          "Programando o Game Over",
          "Criando a Tela de Game Over",
          "Criando o Sistema de \"HighScore\" (Recorde de Pontuação)",
          "Configurando a Tela de Game Over - Parte 1",
          "Configurando a Tela de Game Over - Parte 2"
        ],
        "Criando um Sistema de Som": [
          "Programando o Sistema de Som",
          "Configurando o Sistema de Som"
        ],
        "Criando a Tela de Créditos": [
          "Criando a nossa Tela de Créditos",
          "Animando o Texto de Créditos",
          "Configurando a Tela de Créditos",
          "Carregando a Tela de Créditos"
        ],
        "Finalizando o Jogo": [
          "Animando o Motor do Avião",
          "Corrigindo Bugs e Otimizando o Jogo",
          "Exportando o Jogo e Balanceando a Dificuldade",
          "Aula Bônus!"
        ]
      },
      "requirements": [
        "Versão Gratuita da Unity",
        "Visual Studio Code da Microsoft (Gratuito)",
        "Uma paixão por Desenvolvimento de Jogos :)"
      ],
      "description": "Neste curso nós vamos aprender a criar um Jogo 2D do zero, utilizando a poderosíssima Unity Engine e a incrível Linguagem de Programação C#!\n\n\nNeste curso você aprenderá a criar seu próprio jogo na Unity, um programa extremamente poderoso e que vem ganhando cada vez mais espaço no mercado!\nE também aprenderá como programar o seu jogo, utilizando uma das linguagens mais usadas no mundo dos games, o C#!\nAs aulas desse curso foram planejadas para te guiar por essa Jornada de Desenvolvimento de Jogos, de maneira simples, rápida e objetiva!\nCriaremos do zero um jogo de verdade, aprendendo conceitos e práticas usadas no mundo real!\nDurante o curso você será desafiado diversas vezes para por em prática o que acabou de aprender na aula! E também terá acesso a \"Hora do Quiz\", onde você poderá testar os seus conhecimentos recém-adquiridos, respondendo perguntas de múltipla escolha!\n\n\nE é claro, se tiver qualquer dúvida durante as aulas, não hesite em perguntar no campo de perguntas! Ficarei muito feliz em lhe ajudar!\nE também, se estiver com dúvidas em relação a compra do curso, da uma olhada nas classificações dele!\nEspero que aprendam diversas coisas novas com as aulas deste curso, e que também se divirtam bastante com o Jogo que estaremos criando nele!\n\n\nAbraços :)",
      "target_audience": [
        "Desenvolvedores de jogos (Indie)",
        "Pessoas que estão dando os seus primeiros passos na programação"
      ]
    },
    {
      "title": "Aprenda Desenvolvimento de Jogos 2D com GameMaker e GDevelop",
      "url": "https://www.udemy.com/course/aprenda-desenvolvimento-de-jogos-2d-com-gamemaker-e-gdevelop/",
      "bio": "Crie jogos 2D de maneira Fácil, Dinâmica e Descomplicada com duas das principais engines para jogos 2D do mercado.",
      "objectives": [
        "Criar Jogos 2D com o GameMaker Studio 2",
        "Criar Jogos 2D com a GDevelop",
        "Programação com a Game Maker Language (GML)",
        "Programação visual orientada à eventos com a GDevelop",
        "Publicar jogos no Mercado"
      ],
      "course_content": {
        "Introdução ao Curso": [
          "Apresentação do Curso",
          "Links que vão potencializar seu aprendizado ⚡"
        ],
        "Introdução ao GameMaker Studio": [
          "Por que usar o Gamemaker para Jogos 2D?",
          "Catálogo de Jogos, Licenças e Download",
          "Conhecendo o Programa",
          "Coordenadas, Eventos e Movimentação",
          "Extra: Game Assets"
        ],
        "Suporte e Atualizações": [
          "Janela Inspector (Atualização na Interface)",
          "Dúvidas e Erros Frequentes - IMPORTANTE"
        ],
        "Projeto Piloto": [
          "Preparando o Projeto no Gamemaker",
          "Controles e Movimentação pelo Cenário",
          "Destruindo Inimigos e Configurando Animações",
          "Adicionando Sons e Efeitos Sonoros"
        ],
        "Aprendendo Programação com Gamemaker Language": [
          "Introdução",
          "Dados e Variáveis",
          "Operações Aritméticas",
          "Operações de Incremento e Decremento",
          "Operações Comparativas",
          "Exercício: Verdadeiro ou Falso?",
          "Estruturas Condicionais",
          "Operadores Lógicos e Prática Condicional",
          "Estruturas de Controle + Prática"
        ],
        "Criando Retrogame": [
          "Apresentação",
          "Level Design da Fase 01",
          "Entendendo o Evento Step",
          "Movimentação do Player e Arremesso",
          "Interpretando Mensagens de Erro",
          "Limitando Espaço do Player",
          "Colisões e Rebatendo a Bola",
          "Direções Dinâmicas",
          "Exibindo Informações na Tela do Jogo",
          "Pontuação, Recorde, Vidas e Game Over",
          "Geração Randômica de Item Coletável",
          "Coletando Item e Ativando Power Up",
          "Funcionamento do Power Up",
          "Level Design Fases 02 e 03",
          "Passagem de Fases",
          "Adicionando Sons e Concluindo"
        ],
        "Criando Jogo Top Down Race": [
          "Introdução",
          "Preparando Primeira Fase",
          "Movimentando a Moto",
          "Carros no Percurso",
          "Obstáculos, Colisões e Ajustes",
          "Fazendo os Carros mudarem de Lado",
          "Calculando e Exibindo Distâncias",
          "Preparando o Segundo Percurso",
          "Controle de Fases e Reset",
          "Extra: Ligando e Desligando Farol da Moto",
          "Controlando Música de Fundo"
        ],
        "Criando Jogo Endless/Infinite Runner": [
          "Apresentação do Projeto",
          "Construindo Projeto e Efeito Parallax",
          "Movimentos do Personagem",
          "Acelerando o Jogo conforme Tempo Passa",
          "Obstáculos e Coletáveis",
          "Perdendo e Reiniciando Partida",
          "Coletando Itens e Feedback ao Jogador",
          "Tela de Game Over com Animação",
          "Opção Jogar Novamente",
          "Exportando"
        ],
        "Criando Jogo Survival Fish": [
          "Apresentação do Projeto",
          "Gravidade e Controle do Peixe - Parte 01",
          "Gravidade e Controle do Peixe - Parte 02",
          "Criando os Predadores",
          "Comportamento dos Peixes",
          "Fluxo Automático de Peixes no Cenário",
          "Contador de Tempo Personalizadoo",
          "Progressão de Dificuldade do Jogo",
          "Teletransporte e mais detalhes"
        ],
        "Criando Sokoban Adventure": [
          "Conhecendo o Projeto",
          "Level Design das Fases",
          "Mecânica Principal do Jogo",
          "Passagem de Fases",
          "Do Protótipo ao Jogo: Melhorando Visual do Projeto",
          "Próximos Passos"
        ]
      },
      "requirements": [
        "Não é necessário nenhuma experiência com desenvolvimento de jogos",
        "Conhecimentos básicos em informática"
      ],
      "description": "Aprenda Desenvolvimento de Jogos 2D com GameMaker e GDevelop é um curso idealizado para todas as pessoas que querem criar e publicar seus próprios jogos 2D de maneira fácil, dicâmica e descomplicada.\nO Game Maker e o GDevelop são motores (engine) de jogos 2D utilizados no desenvolvimento de jogos para as plataformas PC, Mobile, Web e Console.\nO curso tem como objetivo ensinar os principais conceitos sobre os motores por meio do desenvolvimento de vários Jogos. Cada jogo que é implementado você aprende/revisa um novo recurso das ferramentas como por exemplo, utilizar sons, partículas, gravidade, interagir com objetos em cena e muito mais.\nO curso Aprenda Desenvolvimento de Jogos 2D com GameMaker e GDevelop é ideal para quem esta iniciando no mundo do desenvolvimento de jogos, pois todo o conteúdo é apresentado ao aluno de maneira prática e descomplicada.\nDurante as aulas você construirá vários jogos, como por exemplo:\nSuper Arkanoid (Gamemaker)\nCorrida Top Down (Gamemaker)\nSurvival Fish (Gamemaker)\nSokoban (Gamemaker)\nGame Click Dfilitto (GDevelop)\nHitman Game (GDevelop)\nCorrida Infinita (GDevelop)\nJogo estilo plataforma (GDevelop)\nAlém disso, você irá aprender a exportar seus jogos para a plataforma PC, Web e Mobile (Android). Também aprenderá a publicar seus jogos no marketplace Itch-io.\nUma grande vantagem no curso é que você aprenderá com instrutores que trabalham e dominam as ferramentas (Danilo Filitto e Jonathan Volpi) e em pouco tempo você já estará criando os seus próprios jogos no GameMaker e GDevelop.\nEsperamos você em nosso curso.",
      "target_audience": [
        "Desenvolvedores que querem aprender uma nova engine",
        "Pessoas que querer aprender a criar jogos 2D",
        "Desenvolvedores de Jogos",
        "Pessoas que querem aprender Gamemaker",
        "Pessoas que desejam migrar para o Desenvolvimento de Jogos",
        "Designers de Jogos"
      ]
    },
    {
      "title": "【Unreal engine 5】謎解き・脱出ゲームを作ってみよう！　～初心者向け～",
      "url": "https://www.udemy.com/course/unreal-engine-5-w/",
      "bio": "このコースはUnreal Engine 5（UE5）を使って、ゼロから謎解き・脱出ゲームを作ります。 ゲームを作りながらのゲーム制作の流れを学んでいきましょう！",
      "objectives": [
        "Unreal Engine 5 の基本操作を学べる",
        "Unreal Engine 5 を用いたゲーム制作の流れを理解できる",
        "Unreal Engine 5 のBlueprint・ユーザインターフェースの作成",
        "Unreal Engine 5 でとりあえずゲームを一個作成してみたい方"
      ],
      "course_content": {
        "はじめに": [
          "完成品",
          "言語変更方法",
          "Introduction",
          "Movement",
          "Look",
          "Head Bob",
          "Interact",
          "Material",
          "Crosshair",
          "Foot Step"
        ],
        "主要機能": [
          "Inspectable Item",
          "Drop"
        ],
        "ギミック": [
          "Book",
          "Bird Cage",
          "VCR",
          "TV（television）",
          "Blue Print",
          "Door_a",
          "Door_b",
          "Note"
        ],
        "ユーザーインターフェイス": [
          "Main Menu",
          "Count Down Timer",
          "Escape and Game Over"
        ],
        "最終調整": [
          "Land Scape",
          "Light",
          "BGM と パッケージ化"
        ]
      },
      "requirements": [
        "・使用するバージョンはUnreal Engine 5 (5.2.1)で言語はブループリントのみです。",
        "・知識は基本的には不要です。（ただ応用や理解を深めるためには最低限の知識があったほうがいいです）"
      ],
      "description": "このコースは、Unreal Engine 5 で謎解き・脱出ゲームを制作することでゲーム制作の流れを学べます。\nゲーム制作に必要な素材などは、コースの中でダウンロード方法などもお教えしています。このコースは Unreal Engine 5 バージョン 5.2.1を使用しています。別のバージョンを使う際は少し配置などが違うのでなるべく合わせるようにお願いします。\nコースを受ける前にどのようなゲームか把握するために無料プレビューにてどのようなゲームか見えるようになっています。ぜひご覧ください。\n\n基礎知識などは必要ありません。\n一緒にゲーム制作を楽しみましょう！\n\n【ご質問について】\n私自身コースをつくるのが初めてなので至らない点があると思います。返信には少し時間がかかります。ご了承ください。\n\n【クレジット】\n今回使用させていただいたBGM\n\nアーティスト : PeriTune\n曲名 : 「Fear」\nライセンス : CC BY 4.0\n提供 : PeriTune公式サイト\n\nアーティスト : どらいち / FreeMusic\n曲名 : 「night light」\nライセンス : CC BY 3.0\n提供 : FreeMusic公式サイト\n\n使用させていただいたアセット\n\nクリエイター : tansuergene\nタイトル : 「Horror Engine」\nライセンス : Permanently Free Collection\n提供 : Unreal Engine Marketplace\n\nクリエイター : AMMediaGames\nタイトル : 「Basic Door KeyPad/CodeLock Free」\nライセンス : CC BY\n提供 : Sketchfab",
      "target_audience": [
        "一個ゲームを作りたい初心者向けです"
      ]
    },
    {
      "title": "Unity Maitriser les fondamentaux API, Classes et Structures",
      "url": "https://www.udemy.com/course/unity-maitriser-les-fondamentauxapi-classes-et-structures/",
      "bio": "Travaillez efficacement avec les structures , les classes , et les API en C# avec Unity",
      "objectives": [
        "Le positionnement , la Translation de Vecteur",
        "La gestion de l’arborescence Parent-Enfant",
        "L'utilisation de fonction de calcul Vectoriel",
        "L'Interpolation de Vecteur",
        "Le Patron de conception (Singleton Pattern)",
        "L’Instanciation d'objet et ses surcharges",
        "L'utilisation des rayons (Raycast)",
        "Utilisation de la classe Random (Génération aléatoire)",
        "Collection de fonction mathématique (Classe Mathf)"
      ],
      "course_content": {
        "La Classe Transform": [
          "La classe Transform",
          "LookAt - Rotation d'un objet en direction d'une position",
          "GetComponent - Gestion des composants",
          "Send Brodacast Message -Message Monobehaviour",
          "Quiz Class Transform"
        ],
        "Structure Vector3": [
          "La structure Vector3",
          "Lerp Slerp - L'interpolation de mouvement et de rotation",
          "Vector3.MoveToward - Déplacement d'un objet vers une position",
          "Quiz Structure Vector3"
        ],
        "Classe Object": [
          "La Classe Object",
          "DontDestroyOnLoad Singleton pattern",
          "Fonction Instanciate - Instancier des objets",
          "Destroy - Destruction d'objets",
          "FindObjectOfType - Recherche d'objets",
          "Quiz Class Object"
        ],
        "Classe Physics": [
          "Raycast et PhysicsRaycast - Lancer un rayon",
          "Overlap - Chevauchement de collider",
          "LineCast - Chevauchement d'une ligne",
          "IgnoreCollision - Ignorer les collisions",
          "Quiz Class Physics"
        ],
        "Autres Classes & API": [
          "Classe Random - Génération aléatoire",
          "Structure Mathf Collection de fonctions mathématiques",
          "Invoke - Appeler ou répéter l’exécution d'une méthode",
          "Les coroutines (IEnumerator)"
        ]
      },
      "requirements": [
        "Posséder des bases avec Unity et le C# ou avoir suivi l'un de mes cours d'initiation à Unity."
      ],
      "description": "Vous souhaitez développer vos compétences avec Unity, ou simplement apprendre en profondeur certaines A.P.I de ce fabuleux moteur physique, alors ce cours est fait pour vous !\nA la fin de ce cours, vous maîtriserez les fondamentaux comme par exemple la classe Transform, ou la structure Vector3 mais aussi beaucoup d'autres API.\nCe cours est structuré afin de pouvoir revenir facilement sur les API les plus couramment utilisées avec Unity ce qui vous permettra ensuite d'avoir une aide précieuse sous la main à n'importe quel moment.\n\n\nVoici un extrait de ce que vous apprendrez dans cette formation (voir le programme complet pour plus d'informations) :\n⭐ Classe Transform\nLe positionnement (position , localPosition, etc...)\nLa Translation de Vecteur (Translate)\nLa Hierarchy Parent-Enfant (SetParent, DetachChildren, etc..)\nLa recherche dans la Hierarchy (Find, GetChild, ChildCount,etc...)\nRotation d'un Objet (LookAt)\nAssignation des composants (GetComponent, GetComponentInChidren, TryGetComponent ,etc...)\nL'envoi de message (SendMessage , BroadcastMessage)\n⭐ Structure Vector3\nDéplacement Vectoriel (MoveToward, Forward,One , Zero, Etc...)\nConstructeur Vectoriel (New Vector3, Quaternion,etc...)\nCalcul Vectoriel (Magnitude, Distance, Normalized, Scale, etc...)\nInterpolation Vectorielle (Lerp, Slerp ,etc..)\n⭐ Classe Object\nIdentification de GameObject (Name, ToString(), GetInstanceID,etc...)\nVisibilité des objets (hideFlags) et Destruction (Destroy)\nSingleton Pattern (DontDestroyOnLoad, Instance, Patron de conception)\nAjouter des Objets dynamiquement (Instanciate et ses surcharges, Instanciation de Type Générique)\nAssigner des objets de la Hierarchy (Find, FindObjectOfType, FindWithTag, FindObjectsWithTag, etc...)\n⭐ Classe Physics\nLa Projection de rayon (Ray, Raycast, RaycastHit, DebugDrawRay, hit,etc...)\nLe Chevauchement de collider (OverlapBox, OverlapSphere, OverlapCapsule,etc..)\nLe Chevauchement de Ligne (LineCast, out, hit , Debug.DrawLine,etc..)\nGestion des collisions (IgnoreCollision, GetIgnoreCollision, IgnoreLayerCollision, GetIgnoreCollision)\n⭐ Autres Classes et API\nClasse Random \"Aléatoire\" (Value, Range, Rotation, ColorHSV, InsideUnitCircle, OnUnitSphere, etc...)\nStructure Mathf \"Fonction Mathématique\" (Clamp, Infinity, Abs, Sin, Sign, Round, etc...)\nIEnumerator, Coroutines, Invoke, Yield et bien d'autres API...\nEtc....\n\n\n⚠️Pour suivre ce cours il est préférable de maîtriser les bases d'Unity, ou d'avoir suivi l'un de mes cours destinés à l'initiation d'Unity.⚠️",
      "target_audience": [
        "Développeurs de jeux vidéo",
        "Les étudiants"
      ]
    },
    {
      "title": "Learn to create a 2D Racing car game for FREE PART 7.",
      "url": "https://www.udemy.com/course/learn-to-create-a-2d-racing-car-game-for-free-part-7/",
      "bio": "Learn how to create a cool 2D top down racing car game with the unity game engine.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "You will need to download unity and visual studio which is free and then be willing to learn game design.",
        "Basic understanding of the C# language and Unity."
      ],
      "description": "THIS COURSE WILL BE UPLOADED IN PARTS DUE TO VIDEO TIME RESTRICTIONS.\n\n\nIn my course we will start at the bottom and work our way up to advanced game design like AI path finding, we will be creating a car controller and many features with in our game.\nThis course is designed for beginner level and up as i will explain everything in best detail as i can, at the end of the course we will have made a racing car game like micro machines which in the 1980's was an amazing car game.\nIn this part of the course you will learn\nWe continue with our pause menu adding code to make it function within the game.\nExplaining how to create an AI car route.\nShowing you how to create an AI car route.\nAdding sound to our main menu and tracks 1 & 2.\nChanging sorting layer & adding music to all tracks.\nAdding our credit screen with music.\nAdding code to make our credit screen work.\nCreating confetti for victory screen.",
      "target_audience": [
        "Students that want to learn to be a game designer."
      ]
    },
    {
      "title": "Unreal Engine 5.3/5.4 - Baue ein Escape-Game mit Blueprints",
      "url": "https://www.udemy.com/course/erstelle-ein-escape-game-in-unreal-engine-52-mit-blueprints/",
      "bio": "Arbeite dich in die Unreal Engine 5.3/5.4 mit Blueprints ein und lerne die wichtigsten Konzepte am kompletten Projekt!",
      "objectives": [
        "Grundlegende Inhalte zum Thema Indie-Game-Development",
        "Grundlegender Umgang mit der Game Engine Unreal Engine 5.2/5.3/5.4",
        "Organisation eines Indie-Game-Projektes inkl. OOP und Actors",
        "Grundlagen zum finalen Erstellen eines Computerspiels",
        "Einbinden von Assets, darunter Inhalte vom Store und Sounds",
        "Nutzen von Gameplaytags zur komplexen Organisation von Spielen"
      ],
      "course_content": {
        "Einführung": [
          "Einführung",
          "Projektplanung mit Milanote",
          "Assets, Gamemode und Gameinstance",
          "Enginenavigation, Lichteinstellung und Auto-Exposure"
        ],
        "Character": [
          "Attribute Component",
          "Sprinten und Stamina",
          "Crouch",
          "Dead und PlayerHUD"
        ],
        "Actors": [
          "InteractionActor als Parent und Vererbung",
          "Doors und DoorsInteraction",
          "Collectable Items Teil 1",
          "Collectable Items Teil 2",
          "Collectable Items Teil 3",
          "Erweiterung des Interaction Actors",
          "Laser und LaserInteraction",
          "MovingPoint und MovingPoint Advanced und MovingPointInteraction",
          "MovingPoint Advanced"
        ],
        "Story- und Escape-Actor": [
          "StoryActor mit Gameplaytags",
          "EscapeActor und InGameMessage-System"
        ],
        "Enemy": [
          "Enemy erstellen und einbinden"
        ],
        "Menu und Leveldesign": [
          "MainMenu Level und GUI",
          "PCG mit Beispiel Foliage",
          "Scribble und BlockOut für Level 1",
          "Actors und Items in Level 1 platzieren",
          "Von PackedActor zu Level Design",
          "Level Details"
        ],
        "Sound": [
          "Sounds importieren und abspielen"
        ],
        "Abschluss": [
          "Abschluss"
        ]
      },
      "requirements": [
        "Du solltest ein wenig programmieren können und Lust auf viel Neues haben!"
      ],
      "description": "Herzlich Willkommen beim Unreal Engine 5.3/5.4 Einsteigerkurs mit Blueprints!\n\nIn diesem Kurs lernst du die Grundlagen im Umgang mit Unreal Engine 5.3/5.4 und darüber hinaus einige Features, die es dir erlauben, auch größerer Projekte über einen langen Zeitraum effizient und zielgerichtet zu bearbeiten. Wir werden im Kurs folgende Inhalte behandeln:\nArbeite an einem Projekt gemeinsam mit mir - von Anfang bis Ende!\nWir bauen ein Escape-Beispiel mit Story, Actors und Level-Design!\nComponents - Strukturiere deine Blueprints sinnvoll und wieder verwendbar mit Components.\nArbeite dich in die mächtige Funktion der Gameplay-Tags ein! DAS Feature, um tatsächlich Content für ein Spiel zu erstellen statt nur \"Welten\" in zehn Minuten zusammen zu klicken!\nActors, Charakter, Sprint, Crouch, Planung, Praxis, Level-Design - wir schauen auf alles, was wichtig ist!\nPlane dein Projekt mit Milanotes und passe die Software perfekt auf dein Spiel an!\nErstelle erst ein Scribble, dann ein Block-Out, dann Level Packed-Actor und schließlich Details - so entwickelst du realistische und schöne Spielwelten, ohne Zeit zu verlieren!\nDer Kurs bringt dir die Grundlagen bei ohne Wichtiges wegzulassen, aber auch ohne dich zu überfrachten. Nach dem Kurs bist du in der Lage, dir weitere, komplexe Themen anzueignen um dann dein Traum-Spiel zu entwickeln. Dazu lernst du, ein Projekt zu planen und Ideen schnell zu sichern!\nSei dabei - ich freu mich auf dich!\nHolger",
      "target_audience": [
        "Wenn du an Indie-Game-Development interessiert bist und für dich Unreal Engine neu ist, bist du hier genau richtig!"
      ]
    },
    {
      "title": "【Unityアプリ収益化入門】「急上昇アプリランキング１位」を獲得した個人開発者が教えるユニティスマホアプリ開発コース",
      "url": "https://www.udemy.com/course/unity_app_increase_profit/",
      "bio": "Unity初心者OK！<広告実装・アプリリリース ・収益増加のコツ> アプリを10本リリースして学んだアプリ開発ノウハウです。簡単なクリックゲーム作成⇨広告実装⇨Google Play &App Storeにリリース⇨収益上昇方法を解説！",
      "objectives": [
        "Unity製スマートフォンアプリ制作での収益化",
        "Unityにおける広告の設定方法",
        "ストアリリース方法",
        "インストール増加方法",
        "独学だけでは知り得ない各種必要な申請",
        "ゲーム開発の基礎",
        "広告実装に必要なC#の知識",
        "ユニティの時短機能の活用方法"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "簡単なクリックゲームを作成": [
          "はじめに",
          "プロジェクト作成と初期設定",
          "＜追記＞Unityバージョン2021におけるボタン・テキスト生成方法",
          "ボタンとテキストの設置",
          "ボタンカウント機能の作成",
          "カウントダウンタイマーの作成",
          "ゲーム終了処理の作成",
          "タイトルシーンの作成",
          "ゲームシーンへの遷移機能作成",
          "タイトルシーンへの遷移機能作成",
          "画面サイズ設定",
          "(広告実装から学びたい方向け)ユニティパッケージのインポート"
        ],
        "広告の実装": [
          "概要説明",
          "AdMob登録",
          "税務情報入力",
          "テストデバイス登録",
          "アプリ登録",
          "広告ユニット作成",
          "AdMobSDKインポート",
          "Android初期設定",
          "iOS初期設定",
          "アプリID設定",
          "アダプディブバナー広告",
          "インタースティシャル広告",
          "リワード広告",
          "リワード広告　追加",
          "実機テスト　-Android-　&プロジェクト修正",
          "実機テスト　-iOS-",
          "iOS要対応 AppTrackingTransparency"
        ],
        "ストアリリース準備": [
          "はじめに",
          "アプリアイコンの設定",
          "スクリーンショット の作成",
          "プライバシーポリシー作成"
        ],
        "GooglePlayへのリリース": [
          "はじめに",
          "Googleデベロッパー登録",
          "GooglePlayConsoleアプリ情報の入力",
          "アップロードファイルの作成",
          "データアップロード&リリース",
          "おまけ　Amazonアプリストアへのリリース"
        ],
        "AppStoreへのリリース": [
          "はじめに",
          "Apple Developer 登録",
          "証明書の作成 Certificate",
          "AppIDの作成(アプリ登録)",
          "Profileの作成",
          "Xcodeファイルの作成&App Store Connectへアップロード",
          "App Store Connect　アプリ情報入力"
        ],
        "リリース後広告設定": [
          "はじめに",
          "アプリリンク",
          "広告の制限設定"
        ],
        "収益を増やすための方法": [
          "収益を増やすとは",
          "方策１",
          "方策2",
          "方策3",
          "方策4",
          "方策5",
          "方策6",
          "オススメのジャンル"
        ],
        "アップデート方法": [
          "はじめに",
          "GooglePlayアプリアップデート",
          "AppStoreアプリアップデート"
        ]
      },
      "requirements": [
        "Unityチュートリアルを実施した経験があること",
        "Android端末をお持ちであること(GooglePlayへリリースする場合)",
        "iOS端末をお持ちであること(AppStoreへリリースする場合)",
        "macOSのPCをお持ちであること(AppStoreへリリースする場合)"
      ],
      "description": "〓アップデート情報〓\n<2023年　9月>広告プラグイン Google Mobile Ads Unity Plugin v8.5.2についての記事を追加しました。\n記事追記箇所\n・20.AdMobSDKインポート\n・24.アダプティブバナー広告\n・25.インタースティシャル広告\n・26.リワード広告\nAppTrackingTransparencyの対応方法を変更しました。\n新しい記事を追加しましたのでそちらで対応ください。\n記事追加箇所：30. iOS要対応 AppTrackingTransparency\n\n\n<2023年　 5月>広告プラグイン Google Mobile Ads Unity Plugin v8.2.0についての記事を追加しました。\n記事追記箇所\n・20.AdMobSDKインポート\n・24.アダプティブバナー広告\n・25.インタースティシャル広告\n・26.リワード広告\n<2022年　 8月>Unityバージョン2021におけるボタン・テキスト生成方法を追記しました。\n記事追記箇所：4.＜追記＞Unityバージョン2021におけるボタン・テキスト生成方法\n<2022年　 5月>広告プラグインに関する注意書きを追記しました。\n記事追記箇所：20.AdMobSDKインポート\n<2022年　 4月> iOSにおける証明書更新手順を追記しました。\n記事追記箇所：43.証明書の作成 Certificate\n<2021年　12月> GooglePlayConsoleの新規設定項目に対応しました。\n記事追記箇所：37.GooglePlayConsoleアプリ情報の入力\n<2021年　10月> iOS15におけるATTウインドウ表示に対応しました。\n<2021年　 8月> Googleポリシー変更に対応しました。\n<2021年　 7月> App Store Connect 税金カテゴリについての記事を追加しました。\n<2021年　 6月> 広告プラグイン Google Mobile Ads Unity Plugin v6.0.0についての記事を追加しました。\n\n\n\n\n\n\n〓コースの説明〓\n収益化の一連の流れである\nUnityを使った簡単なゲーム作成→広告実装→ストアリリース(Android.iOS)→収益増加方法\nを解説しています。\nアプリ開発の収益化を完全サポートします。\n画像付きのテキストでテキストベースでの復習もサポート。\n\n\nこの講座は以下の方を対象としています。\n・Unityでアプリ広告収入を得たい方\n・スマホアプリをGooglePlayやAppStoreにリリースしたい方\n・インストール数がなかなか伸びない方\n・時間がなく効率的に開発を進めたい方\n\n\n\n\n具体的な解説内容としては、ユニティを使ってシンプルなクリックゲームの作成を行い、\n画面下の広告、報酬型の広告、強制表示の広告を実装していきます。\nそして、このアプリをGooglePlayストアとAppStoreにリリースし、\n収益を増加するための 基礎知識と具体策について解説しています。\n\n\nこの講座の最大のアピールポイントとしては、一貫した情報が手に入ることです。\nユニティの広告設定からストアリリースの情報はweb上にたくさんでていますが、\n間違った情報、古い情報も存在しているのが現状です。\n\n\n私自身、はじめたばかりのときは、\n正しい情報なのかが判断できず、かなり回り道をした経験があります。\nこの講座はあなたが私のように回り道しないように、\n簡単なゲーム作成から収益化までの一連の流れを全て解説しています。\n\n特に、収益化ついては、アプリリリースを行っても、\nインストール数0、広告収益0円が当たり前でした。\nでも、それはやるべきことをやっていなかったというのがやっとわかってきました。\nこの講座では私がアプリ開発をしていく中で学んだ、センス不要のやるべきことを解説しております。",
      "target_audience": [
        "Unityスマートフォンアプリで収入を得たい方",
        "Unity製アプリをストアリリース方法を学びたい方",
        "広告の設定方法を学びたい方",
        "リリース後のアップデート方法を学びたい方"
      ]
    },
    {
      "title": "Augmented Reality, erstelle Apps wie Pokemon GO - Unity 3D",
      "url": "https://www.udemy.com/course/augmented-reality-erstelle-apps-wie-pokemon-go-unity-3d/",
      "bio": "Augmented Reality ist die Zukunft! Lerne deine erste AR APP zu entwickeln.",
      "objectives": [
        "Grundlagen von Unity und C#",
        "erste Augmented Reality APP im IOS App Store oder Google Play Store hochladen können",
        "Werbung in seine App implementieren können"
      ],
      "course_content": {
        "Lesson Proper": [
          "Einführung - Download von Unity 3D",
          "Wir erstellen unser erstes Projekt",
          "Asset Store - einfach 3D Models in das Spiel importieren",
          "Unsere Gegner zufällig spawnen lassen !",
          "Bullet abfeuern und Gegner abschießen!",
          "Der GameController",
          "Der ScenenManager",
          "GameOver hinzufügen!",
          "PauseButton hinzufügen",
          "Werbung in unser Projekt implementieren!",
          "TimeCounter hinzufügen",
          "Unser Spiel im Apple IOS App Store hochladen!",
          "Unser Spiel im Google Play Store hochladen!"
        ]
      },
      "requirements": [
        "Grundkenntnisse in Unity bzw. C# von Vorteil, allerdings kein muss.",
        "Um die App abspielen zu können, muss euer Handy hardwaremäßig ein Gyroscope haben."
      ],
      "description": "Lerne wie man mit dem kostenlosen Framework Unity3D Augmented Reality Apps entwickelt.\nWir beginnen von Grund auf eine Augmented Reality App zu erstellen. Da Unity bereits zahlreiche Funktionen zur Verfügung stellt, benötigen wir kaum Programmierkenntnisse.\n\nWir haben unsere HeliShooter APP in nicht einmal 90 Minuten erstellt und sind dann bereit diese im Google Play Store oder IOS App Store hochzuladen.",
      "target_audience": [
        "An alle, die innerhalb kürzester Zeit Augmented Reality Apps erstellen wollen"
      ]
    },
    {
      "title": "Short course on HTML5, CSS3 and Javascript in a game",
      "url": "https://www.udemy.com/course/short-course-on-html5-css3-and-javascript-in-a-game/",
      "bio": "Learn javascript theory and apply HTML5, CSS3 and Javascript to develop a game",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic knowledge of HTML and CSS (No prior knowledge is also okay as it is explained in detail)"
      ],
      "description": "If you want to start learning Javascript or to apply HTML5, CSS3 and Javascript in a project to program or you already have some basic knowledge, then you are in the right place. This course gives you a chance to take your knowledge to the next level. You will start from very basics and learn to apply the skills in two different projects (Quiz and Game).\n\n\nThis is a fun, practical & project based course for all skill levels. The projects in this course are designed to get you building things using HTML5, CSS & JavaScript with no frameworks or libraries. Every project is built from scratch and has some kind of dynamic functionality.\n\n\nThere are projects designed for you to complete in a few hours.\nYou should have some basic knowledge of HTML/CSS/JS. If you are brand new, this course is a mix of both with emphasis on Javascript theory and building two projects. The projects are end to end product.\n\n\nproject is Whack a Mole game. The following skills you will learn to implement in the project:\nLearn about ES6 syntax\nEvent listeners\nHow to control CSS styles and classes with JavaScript\nWhat's the difference between setTimeout and setInterval\nHow to use clearInterval, difference between const and let variables\nRegular JavaScript functions and ES6 arrow functions and much more.\nCreate a plugin that tracks, updates and stores high score. We will also talk about logical operators in JavaScript (OR/AND/NOT) and other fundamental vanilla JavaScript techniques and principles that are useful not only for games, but also for building websites, generative art\nJavaScript DOM manipulation (build a simple game add-on that keeps track of high score)\nLearn local storage browser objects and it's associated JavaScript methods.\n\n\nThe projects will help you better understand how JavaScript works, use these skills to level up as a Front end web developer and get one step closer to getting hired for your first coding job. Also, it is a good stepping stone before you start learning React, React native and Next.js",
      "target_audience": [
        "Students who want to learn HTML5, CSS3 and Javascript",
        "Students who want to create projects and develop using HTML5, CSS3 and Javascript"
      ]
    },
    {
      "title": "Roblox: Crea tu propio juego",
      "url": "https://www.udemy.com/course/roblox-crea-tu-propio-juego/",
      "bio": "De Básico a Avanzado en un mismo curso. En Roblox, no necesitas dinero para publicar tu juego, solo una idea!!",
      "objectives": [
        "Desarrollar tu propio juego",
        "Estructurar tu código de manera segura",
        "Publicar tu propio juego",
        "Reutilizar tu código"
      ],
      "course_content": {
        "Introducción": [
          "Motivación",
          "Códigos del curso",
          "Introducción",
          "Descargando y primer consejo",
          "Iconos Anteriores más intuitivos",
          "Introducción al Panel Explorer",
          "Testing",
          "Atajos de Teclado (ShortCuts)",
          "Plugins Recomendados Parte 1",
          "Plugins Recomendados Parte 2",
          "Plugins Recomendados Parte 3",
          "Enlaces a todos los plugins",
          "Game Settings (Configuraciones del juego)",
          "Toolbox (Caja de herramientas)",
          "R6 vs R15",
          "Propiedades de una \"Part\"",
          "Optimizando un modelo (Conjunto de Parts)",
          "Terrain (generar terreno)",
          "StarterPack",
          "StarterPlayerScripts",
          "StarterCharacterScripts",
          "La utilidad de los Value",
          "Cierre Introducción"
        ],
        "Lenguaje LUA": [
          "Local Scripts, Server Scripts y Module Scripts",
          "Ejemplo de LocalScript, ServerScript y ModuleScript",
          "Consejos sobre los LocalScript, ServerScript y ModuleScript",
          "Sintaxis LUA",
          "Aclaración del siguiente subtema Functions",
          "Functions parte 1",
          "Functions parte 2",
          "Tablas LUA",
          "SpawnFunction",
          "Conclusión"
        ],
        "GUI (Interfaz)": [
          "ScreenGUI y Responsive (Adaptabilidad a diferentes resoluciones de dispositivos)",
          "Scale y Offset de la GUI",
          "Mi primera GUI adaptable para timer",
          "GUI Inset",
          "Actualizando GUI cuando cambia un valor",
          "Detectar Click y abrir una GUI",
          "Animación sencilla al dar click a un elemento",
          "Consejo para reutilización de la actualización de la GUI usando Values",
          "Surface GUI (GUI sobre objetos)",
          "Pequeña aclaración para la siguiente clase",
          "TweenService para Loading Screen",
          "Cómo instalar y usar el modelo de la pantalla de carga o cualquier otro",
          "Aplicando TweenService a la GUI",
          "Aparecer GUI al tocar una tecla",
          "Habilitar GUI solo visible para dispositivos móviles",
          "Llamar una GUI desde cualquier ubicación de un LocalScript",
          "Cierre de Sección GUI"
        ],
        "Ciclo Principal de un juego": [
          "¿Qué haremos en esta sección?",
          "El Script GameSettings (Configuraciones globales del juego)",
          "Ciclo de espera del mínimo de jugadores",
          "Agregando el archivo Timer a nuestro proyecto",
          "Intermission Timer parte 1",
          "Intermission Timer parte 2",
          "Intermission Timer parte 3",
          "Preparando el Ciclo para el InGame",
          "Probando el ciclo principal del juego",
          "Mostrando el estado del juego en la GUI",
          "Teleport de los jugadores a la zona de juego y explicación del CFRAME",
          "Regresando a los jugadores al Lobby (Sala de espera)",
          "Mostrando la cantidad de jugadores en la zona de juego",
          "Detectar cuando un jugador abandona el servidor",
          "Detectar la muerte de un jugador en la zona de juego",
          "Detectar un ganador o empate",
          "Mostrar el Ganador en la GUI parte 1",
          "Mostrando ganador en la GUI parte 2",
          "Optimizando el código"
        ],
        "Comunicación Cliente-Servidor/Servidor-Cliente": [
          "Comunicación Servidor-Cliente (enviar información desde el servidor al cliente)",
          "Comunicación cliente-servidor (enviar información al servidor)",
          "Comunicación Cliente-servidor esperando respuesta",
          "Activando/Desactivando la GUI del \"Player Left\"",
          "Cierre de la sección y consejos"
        ],
        "LeaderStats (estadísticas del jugador)": [
          "Qué es y cómo crear la leaderstat?",
          "Ocultar algunas stats de la leaderstat",
          "Seguridad en la leaderStat",
          "DataStore: Almacenando en memoria la leaderstat del jugador",
          "Demo del guardado y cargado de stats",
          "Estructurando la función de guardado",
          "Estructurando el cargado de datos",
          "Darle Coins al jugador parte 1 (se explica -> objeto flota y gira sobre su eje)",
          "Paréntesis en el tema: Consejos sobre sonidos y modelos",
          "Darle Coins al jugador parte 2 (Explicando el Touch y GetPlayerFromCharacter)",
          "DataStore: Eliminando Datos de un jugador parte 1 (BillBoard y ClickDetector)",
          "Pequeña corrección",
          "DataStore: Eliminando Datos de un jugador parte 2",
          "Mostrando Stats en GUI (Explicando el ZIndex y como hacer una ayuda rápida)"
        ],
        "LeaderBoards (Tabla de posiciones)": [
          "Lo que veremos en esta sección",
          "Local LeaderBoard parte 1",
          "Local LeaderBoard parte 2",
          "Pequeña corrección",
          "Local LeaderBoard parte 3",
          "Global LeaderBoard",
          "Optimizando para reutilización parte 1",
          "Optimizando para reutilización parte 2 (Spread)",
          "Otorgar Wins al jugador para probar la LeaderBoard reutilizable"
        ],
        "Bonus para los jugadores": [
          "Creando grupo en Roblox para tus juegos",
          "Bonus por segundo parte 1",
          "Bonus por segundo parte 2",
          "Bonus cada 5 minutos",
          "Notificaciones de usuario",
          "Daily-Group Bonus parte 1",
          "Daily-Group Bonus parte 2",
          "Probando el Daily Bonus y consejos sobre la DataStore"
        ],
        "Generando ingresos con Roblox": [
          "Introducción a la sección",
          "Creando Game Products desde la web",
          "Creando GameProducts desde Roblox Studio",
          "GameProducts MarketPlace parte 1",
          "GameProduct MarketPlace parte 2",
          "Optimizando la compra de GameProducts",
          "Recibir Donaciones de los jugadores",
          "Creando un GamePass (Pase de juego)",
          "Empleando el GamePass en Robloxo Studio",
          "Optimizando la compra del GamePass",
          "Pequeña Corrección",
          "Otorgando los beneficios del gamepass al jugador",
          "GamePass Doble Coins al Ganar",
          "Preparando la estructura del proyecto para las ventas de items y códigos",
          "ClickButton para las ventas",
          "Consideraciones con la DataStore",
          "Preparando folders del proyecto para las ventas de items y códigos",
          "Preparando el script para la venta del item parte 1",
          "Preparando el script para la venta del item parte 2",
          "Preparando el script para la venta del item parte 3",
          "Preparando el script para la venta del item parte 4",
          "Preparando el script para la venta del item parte 5",
          "Guadando y cargando la carpeta Items (compras) parte 1",
          "Guadando y cargando la carpeta Items (compras) parte 2",
          "Mensade para Confirmación de compra por parte del jugador",
          "Vender items que al usuarlo se destruyen (solo se usan una vez)",
          "Explicación del comportamiento de una tool cuando se equipa y se utiliza",
          "Lo que hemos visto hasta el momento"
        ],
        "Raycasting, PathFinder, ContextActionService": [
          "Qué es Raycasting y PathFinder",
          "Detectando acciones desde distintos tipos de dispositivos",
          "ContextActionService",
          "Lanzando un objeto (un poder) parte 1",
          "Lanzando un objeto (un poder) parte 2",
          "Optimizando el lanzamiento",
          "Detectar que colisionó contra otra objeto",
          "Detectar colisión contra otro jugador y hacerle daño",
          "Detectar Colisión contra un NPC y hacerle daño",
          "NPC Drops parte 1",
          "NPC Drops parte 2",
          "Lanzando un objeto (un poder) con TouchScreen (celular o tablet)",
          "RayCast",
          "PathFinder IA NPC TRAIL",
          "PathFinder parte 2",
          "PathFinder Reforzando explicación",
          "El NPC atacando al jugador",
          "Todo lo visto hasta el momento"
        ]
      },
      "requirements": [
        "Conocimientos básicos en programación"
      ],
      "description": "Desde lo básico a lo avanzado (Todo en un mismo curso)\nAprenderás a emplear la herramienta y el lenguaje LUA desde lo básico hasta lo intermedio-avanzado, los conceptos que veremos en el curso son basados en más de 3 años de experiencia en desarrollo con Roblox Studio, 3 juegos publicados y uno en proceso.\nVamos a emplear las ventajas del lenguaje LUA al máximo, hacer una vez y utilizarlo en muchas partes, siendo capaces de reutilizar el código para otros proyectos. Mi primer videojuego tardé más de 1 año, sobre todo porque estaba empezando a conocer la herramienta, típico caso donde empiezas a desarrollar y meses después te sale una mejor forma de hacer algo y como buen programador, te pican las manos por mejorar tu código.\nLos siguientes juegos tardaron un poco menos, porque ya tenía la base y solo necesité adaptar un poco ciertos elementos, pero de igual forma, conforme avanzas en la herramienta, vas aprendiendo nuevas formas de hacer las cosas y mejorarlas, por esto, les compartiré consejos sobre algunos problemas que me ocurrieron y nadie me dijo que podrían pasar, incluso para evitar ciertas vulnerabilidades de la plataforma, así como técnicas del lenguaje como tal, para que facilite su reutilización.\nAl terminar el curso tendrás una base de información amplia y reutilizable, profundizarás en conocimientos sobre el paradigma funcional que trae consigo LUA.\nEspero que la información les sea de mucha utilidad y tus ideas tengan éxito.",
      "target_audience": [
        "Eres entusiasta de los juegos? quierés crear tu propio juego pero no tienes dinero? está es tu oportunidad, con Roblox puedes desarrollar y publicar tu juego sin tener que pagar por subirlo",
        "Desarrolladores con interés de iniciar en el mundo de los videojuegos"
      ]
    },
    {
      "title": "Learn to create a 2D Racing car game for FREE PART 4.",
      "url": "https://www.udemy.com/course/learn-to-create-a-2d-racing-car-game-for-free-part-4/",
      "bio": "Learn how to create a cool 2D top down racing car game with the unity game engine.",
      "objectives": [],
      "course_content": {
        "Damaging our car through a health system.": [
          "Making our own sound effects.",
          "Making our 321Go animation with sound.",
          "Fixing 321Go animation and adding lap counter.",
          "Adding engine sound FX to our car.",
          "Adding chalk path to the track."
        ],
        "Adding more features to our car.": [
          "Adding skid sound to car.",
          "Fixing our skid sound.",
          "Adding a skid trail effect to the car.",
          "Coding our trail to work when we skid around corners"
        ],
        "On to adding AI cars with features.": [
          "Adding the AI car pathway with code."
        ]
      },
      "requirements": [
        "You will need to download unity and visual studio which is free and then be willing to learn game design.",
        "Basic understanding of the C# language and Unity"
      ],
      "description": "THIS COURSE WILL BE UPLOADED IN PARTS DUE TO VIDEO TIME RESTRICTIONS.\n\n\nIn my course we will start at the bottom and work our way up to advanced game design like AI path finding, we will be creating a car controller and many features with in our game.\nThis course is designed for beginner level and up as i will explain everything in best detail as i can, at the end of the course we will have made a racing car game like micro machines which in the 1980's was an amazing car game.\nIn this part of the course you will learn\nMaking our own sound effects.\nMaking our 321Go animation with sound.\nFixing 321Go animation and adding lap counter.\nAdding engine sound FX to our car.\nAdding chalk path to the track.\nAdding skid sound to car.\nFixing our skid sound.\nAdding a skid trail effect to the car.\nCoding our trail to work when we skid around corners\nAdding the AI car pathway with code.",
      "target_audience": [
        "Students that want to learn to be a game designer."
      ]
    },
    {
      "title": "Crea videojuegos profesionales en Unity 2D de cero a experto",
      "url": "https://www.udemy.com/course/aprender-unity-2d-game-development-rapido-y-facil-en-espanol/",
      "bio": "Aprende a crear videojuegos en 2D con Unity 5 y C# y convierte tu pasión en una profesión con futuro.",
      "objectives": [
        "Tener ideas propias",
        "Tener la capacidad de programar un videojuego",
        "Lograr empezar y terminar su propio videojuego",
        "Crear grandes juegos con pocos recursos",
        "Conocer Unity de manera basica, hasta avanzada",
        "Publicar tu primer videojuego en la tienda de Steam",
        "Monetizar tu videojuego"
      ],
      "course_content": {
        "Introducción a Aprender Unity 2D Game Development rápido y facil": [
          "Bienvenidos a Aprender Unity 2D Game Development rápido y facil"
        ],
        "Conociendo Unity": [
          "¿Qué es Unity?",
          "¿Como instalar unity?",
          "Conociendo la interfaz de Unity",
          "Interfaz de unity"
        ],
        "Dando el primer paso": [
          "¿Que es un Game Object?",
          "Importando elementos(Assets)",
          "Conociendo nuestros Sprites",
          "¿Qué es una colisión y un cuerpo rígido?",
          "Dando el primer paso"
        ],
        "La hora del código": [
          "¿Qué es la programación informática?",
          "¿Qué es un Script?",
          "¿Dar movimiento a nuestro personaje y nuestra salud visual como programadores?",
          "Salto a nuestro personaje",
          "Creando animaciones",
          "Utilizando nuestras animaciones",
          "Utilizando sonido",
          "Creando destructibles",
          "Clase 17: Creando un sistema de particulas"
        ]
      },
      "requirements": [
        "Aprenderemos desde cero, así que no te preocupes en necesitar experiencia!",
        "Necesitarás una computadora con los requisitos mínimos para poder utilizar Unity",
        "Conexión a Internet para poder descargar archivos de práctica",
        "No necesitas ser experto, te ayudaré a lograr tu objetivo",
        "Y por último, pero no menos importante, ¡pasión por los video juegos!",
        "Utilizaras assets en pixelart que yo mismo haré para ti y te los facilitaré a través de un enlace"
      ],
      "description": "Siempre quisiste crear tus propios videojuegos, pero te han surgido cientos de dudas y miedos, como no se programar, necesito un gran equipo de desarrollo, o no tengo las herramientas para lograrlo, bueno, déjame decirte que es posible y que ya has dado el primer y más difícil paso, te has interesado en este curso, y lo lograremos sin grandes complicaciones, tu mismo puedes hacerlo, con herramientas básicas, lo único que necesitas es pasión por crear videojuegos, así que te invito a que me sigas en este gran curso donde no solo aprenderás, si no que, podremos lograr que tu sueño de crear videojuegos sea posible, y no tengas miedo que aquí estaré yo para mostrarte el camino y disipar toda duda.\nAun falta mucho contenido, como puedes ver el curso se esta actualizando constantemente, aun nos falta ver muchos aspectos básicos de unity para después entrar a más contenido avanzado, el curso esta planeado para entregarles a todos los estudiantes, las báses importantes para poder crear juegos de diferentes géneros, sin embargo, nos centraremos en hacer un shooter 2D, pero las mecánicas para hacer un plataformas, u otro genero serán las mismas, así que no te preocupes :) que el curso sigue en pie y se viene más y mas contenido.\n¡EL LIMITE PARA CREAR UN VIDEOJUEGO ES TU IMAGINACIÓN!\nUn saludo y un abrazo",
      "target_audience": [
        "Niños, jóvenes y adultos, nunca es tarde para aprender",
        "Si amas los videojuegos y siempre quisiste ser un creativo de videojuegos este curso es para ti",
        "Personas interesadas en el desarrollo de videojuegos"
      ]
    },
    {
      "title": "初心者でもできる！簡単＆かわいい3Dモデリング：MayaLT：Unreal Engine4",
      "url": "https://www.udemy.com/course/3dmayaltue4/",
      "bio": "ゲームやアニメなどに登場する人物やアイテム、背景などといったあらゆるものを3DCGソフトを利用して立体的に形作る3Dモデリング。このコースではMayaLTとUnreal Engine4を使った3Dモデリング制作方法を学びます。",
      "objectives": [
        "MayaLTの基本的な操作方法を習得することができます。",
        "２つのキャラクターの3Dモデリングを体験できます。",
        "3Dモデリングの基本的な知識と制作工程を学ぶことができます。",
        "3Dモデラーとしての第一歩を踏み出すことができます。"
      ],
      "course_content": {
        "はじめに": [
          "はじめに",
          "MayaLTの簡単な操作説明",
          "モデルについて"
        ],
        "キャラメル君の形をつくろう": [
          "モデルの作り込み１　大雑把な形の作成",
          "モデルの作り込み２　顔の作成",
          "モデルの作り込み３　耳の作成",
          "モデルの作り込み４　服の作り込み１",
          "モデルの作り込み５　服の作り込み２",
          "モデルの作り込み６　サスペンダー",
          "モデルの作り込み７　手",
          "モデルの作り込み８　ボタンとしっぽ",
          "モデルの作り込み９　雰囲気を合わせる",
          "モデルの作り込み10　口内の作り込み"
        ],
        "キャラメル君に色を付けよう": [
          "UVの展開",
          "テクスチャ作成",
          "UE4でのマテリアル作成",
          "微調整",
          "ノーマルマップの作成"
        ],
        "キャラメル君を動かす仕組みを作ろう": [
          "ブレンドシェイプの作成",
          "HumanIKの追加",
          "スキニング"
        ],
        "キャラメル君の友達を作ろう": [
          "友達モデル「ドロップ君」の作成"
        ],
        "キャラメル君とドロップ君の写真を撮ろう": [
          "レンダリングについて"
        ],
        "おわりに": [
          "おわりに"
        ]
      },
      "requirements": [
        "初歩的なPC操作が可能であること。",
        "MayaLTやUnreal Engine 4を触ったことのない人にも分かりやすく説明します。",
        "MayaLTやUnreal Engine 4をインストールできるPCが必要です。",
        "ご自身のPCにインストールしていなくても、講座は視聴いただけますが、学習動画に合わせて手を動かしていただいた方が理解度が高まります。",
        "このコースはWindowsで実施しますが、MacOSでも操作可能です。",
        "このコースでは、WindowsのPC上で説明します。他のオペレーティングシステム上でも実行できますが、OS固有のサポートを提供することはできない旨、あらかじめご了承ください。",
        "PhotoshopやSai、メディバンペイントなどのドローイングソフトの基本的な知識は習得しておいてください。",
        "やっていることは同じなのでMayaLTでもMayaでも大丈夫です。"
      ],
      "description": "ゲームやアニメなどに登場する人物やアイテム、背景などといったあらゆるものを3DCGソフトを利用して立体的に形作る3Dモデリング。\n3Dプリンターの普及やゲーム・アニメ以外の業界での活用も増えている注目の技術です。\nこのコースではMayaLTとUnreal Engine4を使った3Dモデリング制作方法を学びます。\nこのコースの特徴\n「ドロップくん」「キャラメルくん」という２つのキャラクターを制作する過程を学ぶことで、3Dモデリングの基礎知識を学ぶことができます。\n「ドロップくん」「キャラメルくん」は、初めて3Dモデリングに挑戦する人でも楽しく3Dモデリングができるように、シンプルでかわいい姿をしています。\nこのコースを修了する時には、「ドロップくん」「キャラメルくん」の2つの3Dモデルが、受講生のみなさんの手元に残ります。\n是非、「ドロップくん」「キャラメルくん」をベースにあなたが考えた「ドロップくん」「キャラメルくん」のお友達を作ってみましょう。\n「ドロップくん」「キャラメルくん」のお友達を作るのに慣れたら、今度は１からあなたの考えたオリジナルキャラクターを作ってみましょう。\n\nこのコースの学習方法\n一緒に手を動かして「キャラメルくん」を作ってみてください。\nこのコースでは、「ドロップくん」「キャラメルくん」の制作過程をほぼカット無しで、視聴できます。\nモデルの細かい調整等も全て収録しています（調整中は動画の速度を速めにしています）。",
      "target_audience": [
        "MayaLTやUnreal Engine 4を使ってみたい方",
        "MayaLTやUnreal Engine 4を使って、3Dモデリングに挑戦してみたい方",
        "3DモデリングやMayaに挑戦しようとして、独学や参考書を用いた学習で挫折してしまった方",
        "ゲーム、建築、映像系の3Dモデラーになりたいけど、なにから始めていいかわからない方",
        "Unreal Engine 4等のゲーム開発統合環境を使ってゲームを作っているけど、3Dモデリングの経験がなく、オリジナルキャラクタのモデリングができない方",
        "自分で考えたキャラクターの3Dモデリングをしてみたいけど、なにから始めていいかわからない方",
        "Mayaの技術は習得したいけれど専門学校に行く時間がない、お金がないという方"
      ]
    },
    {
      "title": "Game Maker Studio - Crie Jogos do Zero",
      "url": "https://www.udemy.com/course/gamemaker-como-criar-um-jogo-de-corrida/",
      "bio": "Aprenda as etapas básicas e fundamentais para criação de jogos utilizando o Game Maker Studio",
      "objectives": [
        "Fundamentos básicos para a criação de games",
        "Criar e editar Sprites, as imagens",
        "Criar, editar e configurar os Objetos",
        "Criar e editar Rooms, as janelas do Jogo",
        "Adicionar Eventos e Configurar Ações para o jogo",
        "Criar a Programação e o Objeto Controle do Jogo",
        "Adicionar os Sons e Efeitos Sonoros no Jogo",
        "Criar um Sistema de Pontuação para o Jogo",
        "Criar a Movimentação da Pista para o Jogo",
        "Aprender sobre a Linguagem GML"
      ],
      "course_content": {
        "GMS 1 - Criando um Jogo de Corrida": [
          "Game Maker - Jogo de Corrida - Apresentação do Jogo",
          "Criando as Sprites",
          "Materiais de Apoio: 1.PDF e 2.Recursos para Jogos de Corrida",
          "Criando Objetos",
          "Criando as Rooms",
          "Adicionando Eventos e Ações",
          "Programação: Controle do Jogo",
          "Sistema de Pontuação",
          "Adicionando os Sons",
          "Criando o Movimento da Pista",
          "Criando a Fase 2 e passando de fases no Jogo",
          "Criando a Fase 3 e aumentando a dificuldade",
          "Criando a Sprite da Gasolina e Aumentando as vidas",
          "Adicionando as Pistas para as Fases 2 e 3",
          "Configurando a Tela de Vitoria",
          "Adicionando Efeitos de Fogos de Artifícios na Tela Vitória",
          "Salvando e Exportando o Jogo de Corrida para Windows"
        ],
        "SIMULADO": [
          "PROVA DE GAME MAKER STUDIO"
        ],
        "GMS 2 - Criando um Jogo de Corrida": [
          "Apresentação",
          "Adicionando Sprites",
          "Criando os Objetos",
          "Adicionando os Sons e Backgrounds",
          "Criando as Rooms",
          "Introdução ao GML no GMS 2 - Programando o Botão e o Carrinho",
          "Configurando a velocidade das Pistas",
          "GML - Configurando Colisões do Player",
          "GML - Configurando o Controle do Jogo",
          "GML - Colisões do Player com os outros Carros, Pontos e Vidas",
          "GML - Configurando a Tela Perdeu",
          "GML - Configurando a Tela Vitória (Efeitos de Fogos de Artifícios)"
        ],
        "GMS 2 - Criando o Jogo Pong": [
          "Jogo Pong - Apresentação",
          "Jogo Pong - Sprites and Sounds",
          "Jogo Pong - Fonts and Objects",
          "Jogo Pong - Rooms",
          "Jogo Pong - GML - Movimentação da Barra da Esquerda",
          "Jogo Pong - GML - Movimentação da Barra da Direita",
          "Jogo Pong - GML - Configurando as Fontes e Titulo do Jogo",
          "Jogo Pong - GML - Caixa de Texto Rolante",
          "Jogo Pong - GML - Configurando a Pontuação",
          "Jogo Pong - GML - Programando a Movimentação da Bola - Parte 1",
          "Jogo Pong - GML - Programando a Movimentação da Bola - Parte 2",
          "Jogo Pong - GML - Programando a Movimentação da Bola - Parte 3",
          "Jogo Pong - GML - Programando Game Over"
        ],
        "GameMaker - PDF_Criando um Jogo de Corrida": [
          "GameMaker - Criando um Jogo de Corrida em PDF"
        ],
        "Tutoriais de Game Maker Studio": [
          "Tutoriais de Game Maker Studio Passo a Passo"
        ],
        "Conclusão": [
          "Conclusão e Agradecimentos"
        ]
      },
      "requirements": [
        "Curiosidade sobre jogos em geral e vontade de aprender as etapas de desenvolvimento",
        "Não precisa conhecer nada sobre programação para realizar esse curso",
        "Ter o Game Maker Studio instalado em seu computador"
      ],
      "description": "*ESTE CURSO SERÁ ATUALIZADO CONSTANTEMENTE COM MAIS AULAS, DICAS E COMENTÁRIOS DO PROFESSOR*\nO Game Maker foi criado por Mark Overmars, que lançou a primeira versão do programa em 15 de novembro de 1999. Nas primeiras versões, o motor era chamado de Animo, e se destinava a ser um programa de animação 2D, mas como alguns de seus utilizadores usavam o programa com o propósito de criar jogos, e não animações, Overmars decidiu mudar seu nome.\nEm 2012 foi lançado o Game Maker Studio, com mais recursos para o desenvolvimento de jogos: organização de arquivos em pastas, pequenos programas auxiliares, editores de imagens, sons, scripts e fases. O Game Maker permite salvar os recursos criados para que possam ser usados em outros jogos ou fora do programa e importar ações adicionais para estender as funções do programa.\nMeu objetivo é te ensinar a criar jogos do zero nessa Game Engine fantástica! Vamos nessa?\nNa Primeira parte do Curso, mostro como Criar um Jogo de Corrida usando o Game Maker Studio 1.4. Uma das versões do GMS mais aclamadas pelo o público! Vou te ensinar desde a criação de Sprites, Backgrounds, Rooms até Objetos do Jogo com Eventos e Ações, e seus respectivos Scripts. Usaremos a própria Linguagem de Programação do Game Maker Studio - a GML (Game Maker Language). E no fim da primeira seção, explico como Salvar, Exportar e Instalar o Jogo no Computador.\nNa Segunda parte do Curso, depois de muitos pedidos dos alunos, atualizamos o Curso e Jogo de Corrida para a versão mais Nova e Atualizada do GMS - Game Maker Studio 2. Aqui mostro as diferenças entre as duas versões que usamos durante a criação do Jogo de Corrida, como programar de uma maneira mais limpa, fácil e rápida usando o GML em vez de Eventos e Ações (Drag-and-drop). E terá muitos outros Jogos para criarmos juntos nesse curso.\nEntão o que você esta esperando?\nFaça já a sua inscrição e aprenda passo a passo como criar seu próprio game.",
      "target_audience": [
        "Crianças, jovens e adultos que gostam de todos os tipos de jogos",
        "Iniciantes com pouca ou nenhuma experiência em desenvolvimento de jogos digitais",
        "Estudantes das áreas de produção criativa que desejam entender o processo de criação de jogos digitais",
        "Profissionais de áreas diversas que desejam entender o passo a passo do desenvolvimento de games"
      ]
    },
    {
      "title": "Construct 2 e 3 : Crie Vários Jogos Completos",
      "url": "https://www.udemy.com/course/crie-jogos-do-zero-no-construct-2/",
      "bio": "Aprenda como criar jogos como: Pong, Flappy Bird, PacMan, Nave, Corrida, Plataforma, Subindo Escadas, Breakout.",
      "objectives": [
        "Baixar, instalar e criar Jogos 2D no Construct 2",
        "Conhecer toda a Interface e Ferramentas do Construct 2",
        "Criar um Menu Básico de um Jogo",
        "Criar um Menu Personalizado de um Jogo",
        "Criar o Jogo Pong",
        "Criar o Jogo Breakout",
        "Criar o Jogo Flappy Bird",
        "Criar o Jogo de Nave",
        "Criar o Jogo Pac-Man",
        "Criar um Jogo de Plataforma 2D",
        "Criar um Jogo - Subindo Escadas - Plataforma",
        "Criar um Jogo - Quebra-Cabeça - Physics Puzzle Template",
        "Criar Animações e Movimentos do Super Mario Bros",
        "Criar um Jogo de Corrida Personalizado (a partir de um exemplo do próprio Construct 2)",
        "Aprender a Lógica de Programação no Construct 2"
      ],
      "course_content": {
        "Introdução": [
          "Introdução ao Construct 2",
          "Licenças para utilização do Construct 2",
          "Vantagens do Construct 2",
          "Download e Instalação do Construct 2"
        ],
        "Conhecendo a Interface do Construct 2": [
          "Interface do Construct 2 - Parte 1",
          "Interface do Construct 2 - Parte 2",
          "Interface do Construct 2 - Parte 3"
        ],
        "Criando Menu Básico de um Jogo": [
          "Criando um Menu Básico - Parte 1",
          "Criando um Menu Básico - Parte 2"
        ],
        "Criando Menu Personalizado de um Jogo": [
          "Criando Menu Personalizado - Parte 1",
          "Criando Menu Personalizado - Parte 2"
        ],
        "Criando o Jogo Pong": [
          "Criando o Layout e as Sprites",
          "Adicionando Comportamentos aos Objetos",
          "Material de Apoio em PDF",
          "Adicionando os Pontos e carregando os Sons",
          "Adicionando Eventos de Física na Bola",
          "Adicionando Eventos de Teclado - Movimentação dos Players",
          "Adicionando Eventos de Colisão e configurando a Pontuação",
          "Configuração da Janela Vitória dos Jogadores",
          "Configuração do Tempo para Reiniciar o Jogo",
          "Salvando o Arquivo e o Projeto do Jogo Pong"
        ],
        "Criando o Jogo Breakout": [
          "Criando o Layout e adicionando as Sprites do Jogo",
          "Desenhando o Cenário do Jogo Breakout",
          "Adicionando Comportamentos nos Objetos do Jogo",
          "Programando Eventos de Física na Bola",
          "Programando a Colisão da Bola com os Blocos e a Barra",
          "Pontuação do Jogo",
          "Sistema de Vidas do Jogo",
          "Resetando as Variáveis e Adicionando os Sons",
          "Criando uma Tela de Vitória e Finalizando o Jogo"
        ],
        "Criando o Jogo Flappy Bird": [
          "Apresentação do Jogo Flappy Bird",
          "Criando a Tela Inicial - Background e Botão Jogar",
          "Configurando o Botão Jogar e Criando o Cenário do Jogo",
          "Configurando Comportamentos, Eventos e Ações no Pássaro",
          "Configurando a Movimentação dos Canos e dos Chãos",
          "Criando a Tela Game Over",
          "Configurando a Pontuação do Jogo",
          "Colisão do Pássaro com os Canos e o Chão e a Tela Game Over",
          "Pontuação do Jogo na Tela do Game Over",
          "Adicionando os Sons e Salvando o Jogo"
        ],
        "Criando o Jogo de Nave": [
          "Adicionando as Sprites",
          "Adicionando os Sons e Efeitos Sonoros",
          "Criando Layouts Menu, Fase 1 e Game Over",
          "Configurando os Botões Jogar e Instruções",
          "Movimentação do Cenário do Jogo",
          "Configurando as Músicas do Menu e Fase1",
          "Configurando a Movimentação da Nave e o Tiro",
          "Configurando as Naves Inimigas",
          "Configurando a Colisão entre o Tiro e as Naves Inimigas",
          "Configurando a Pontuação e as Vidas",
          "Configurando a Colisão das Naves Inimigas com o Player",
          "Configurando os Sons e Efeitos Sonoros no Jogo",
          "Configurando Sistema de Vidas do Jogo",
          "Configurando a Tela de Game Over"
        ],
        "Criando o Jogo de Plataforma": [
          "Apresentação do Jogo de Plataforma - Game Contra Konami",
          "Inserindo as Sprites do Menu",
          "Programando o Menu do Jogo",
          "Programando a Tela de Estagio e Intro Fase 1",
          "Inserindo Sprites e Animações - Parte 1",
          "Inserindo Sprites e Animações - Parte 2",
          "Animações do Personagem",
          "Adicionando Comportamentos no Personagem",
          "Adicionando a Música da Fase 1 e Iniciando a Programação do Jogo",
          "Programando os Movimentos do Player - Parte 1",
          "Programando os Movimentos do Player - Parte 2",
          "Programando Sistema de Tiro"
        ],
        "Criando o Jogo Pac-Man": [
          "1 - Criando um Novo Projeto",
          "2 - Configurando o Tamanho do Layout do Jogo",
          "3 - Inserindo uma Matriz",
          "4 - Salvando o Projeto do Jogo",
          "5 - Inserindo a primeira Sprite",
          "6 - Configurando a Posição da Sprite Dot",
          "7 - Inserindo e Configurando a Sprite BigDot",
          "8 - Inserindo a Sprite do Muro (Wall)",
          "9 - Criando o Labirinto do Jogo PacMan",
          "10 - Adicionando os Pontos pequenos e grandes no Labirinto",
          "11 - Inserindo o Objeto Navegador",
          "12 - Inserindo o Objeto Game e Criando as Variáveis de Instância do Jogo.",
          "13 - Marque a Caixa Alive",
          "14 - Inserindo a Sprite Ghost e Criando as Variáveis de Instância",
          "15 - Configurando a direção do Fantasma no jogo",
          "16 - Adicionando as Animações dos Fantasmas - Parte 1",
          "17 - Adicionando as Animações dos Fantasmas - Parte 2",
          "18 - Adicionando as Animações dos Fantasmas - Parte 3",
          "19 - Inserindo o Objeto GhostSpawn",
          "20 - Inserindo Objeto Teclado",
          "21 - Inserindo Objeto Player e Criando suas Variáveis",
          "22 - Inserindo as Sprite Lives e Criando suas Variáveis",
          "23 - Inserindo Objeto PlayerSpawn",
          "24 - Inserindo o Objeto Texto de Pontuação do Jogo",
          "25 - Inserindo o Objeto Texto GUI",
          "26 - Inserindo o Objeto txtScore de Animação no Jogo",
          "27 - Inserindo os Comportamentos no Fantasma Clyde",
          "28 - Inserindo Comportamentos no Player",
          "29 - Programando Movimentos do Player - Parte 1",
          "30 - Programando Movimentos do Player - Parte 2",
          "31 - Programando Movimentos do Player - Parte 3",
          "32 - Programando Movimentos do Player - Parte 4",
          "33 - Programando a Direção do Movimento Player - Parte 1",
          "34 - Programando o Ângulo da Direção do Movimento Player - Parte 2",
          "35 - Programando o Ângulo da Direção do Movimento Player - Parte 3",
          "36 - Corrigindo o Ângulo da Direção do Movimento Player - Parte 4",
          "37 - Programando Movimentos do Ghost - Parte 1",
          "38 - Programando Movimentos do Ghost - Parte 2",
          "39 - Programando Movimentos do Ghost - Parte 3",
          "40 - Programando Movimentos do Ghost - Parte 4",
          "41 - Programando Movimentos do Ghost - Parte 5",
          "42 - Programando Movimentos do Ghost - Parte 6",
          "43 - Programando Movimentos do Ghost - Parte 7",
          "44 - Programando Movimentos do Ghost - Parte 8",
          "45 - Programando Movimentos do Ghost - Parte 9",
          "46 - Programando Movimentos do Ghost - Parte 10",
          "47 - Programando Movimentos do Ghost - Parte 11",
          "48 - Programando Movimentos do Ghost - Parte 12",
          "49 - Programando Movimentos do Ghost - Parte 13",
          "50 - Programando Movimentos do Ghost - Parte 14",
          "51 - Programando Movimentos do Ghost - Parte 15",
          "52 - Programando Movimentos do Ghost - Parte 16",
          "53 - Programando o Alinhamento correto dos Ghost",
          "54 - Programando o Escape e Pisca-Pisca dos Ghost - Parte 1",
          "55 - Programando o Escape e Pisca-Pisca dos Ghost - Parte 2",
          "56 - Programando a Colisão do Player com BigDot e alterando a Pontuação do Jogo",
          "57 - Programando a Colisão do Player com Dot e alterando a Pontuação do Jogo",
          "58 - Programando a Colisão do Player com o inimigo - Ghost - Parte 1",
          "59 - Programando a Colisão do Player com o inimigo - Ghost - Parte 2",
          "60 - Programando a Colisão do Player com o inimigo - Ghost - Parte 3",
          "61 - Programando a Colisão do Player com o inimigo - Ghost - Parte 4",
          "62 - Programando as Condições de Vitória do Jogo",
          "63 - Programando as Condições de Derrota do Jogo"
        ]
      },
      "requirements": [
        "Ter um computador com o Sistema Operacional Windows XP ou Superior",
        "Baixar e instalar o Construct 2 no computador (será ensinado durante as aulas)",
        "Não é necessário saber nenhuma Linguagem de Programação!",
        "Tudo o que você precisa é ter uma visão de Jogo e vontade de aprender"
      ],
      "description": "Olá pessoal!\nMeu nome é Diogo Pimenta, trabalho com Desenvolvimento de Jogos 2D há alguns anos. E este é o meu novo Curso de Construct 2 e 3 aqui na Udemy em parceria com a EBG - Escola Brasileira de Games.\nNão se preocupe se nunca ouviu falar desse programa ou se não sabe absolutamente nada sobre como criar jogos. Nesse novo Curso de Construct 2 e 3, você vai aprender a criar jogos do zero. Além disso, vai conhecer toda a interface e ferramentas dessa Engine fantástica que vem crescendo muito nos últimos anos. Não precisa ter medo! Te garanto que no fim de cada aula desse curso, você irá aprender algo novo. Logo nas primeiras aulas, vou te mostrar como criar 2 Menus para Jogos: Um Menu Básico e um Menu Personalizado.\nPara resumir, vou citar todos os jogos que você será capaz de criar nesse novo Curso de Construct 2 e 3:\n>> JOGO PONG\n>> JOGO BREAKOUT\n>> JOGO FLAPPY BIRD\n>> JOGO DE NAVE\n>> JOGO DE PACMAN\n>> JOGO DE PLATAFORMA 2D\n>> JOGO DE CORRIDA (Baseado em um exemplo do próprio Construct 2)\n>> JOGO SUBINDO ESCADAS - PLATAFORMA\n\nIsso mesmo! Você vai aprender a criar 8 JOGOS COMPLETOS DO ZERO nesse novo Curso de Construct 2 e 3. Mas não pára por aí! Também vou mostrar como funciona a Lógica de Programação do Construct 2 e 3, como adicionar eventos e ações para agilizar o processo de desenvolvimento de jogos digitais, e no fim, mostrarei como criar as Animações e Movimentos de um jogo clássico do Super Nintendo, o Super Mario Bros.\nTudo isso, na versão gratuita do Construct 2 e 3. Então, o que está esperando para criar seus Jogos agora mesmo?\nEmbarque nessa viagem junto com a gente e sinta o mesmo prazer de milhões de pessoas em Desenvolver seus próprios Jogos Digitais!!",
      "target_audience": [
        "Estudantes das áreas de produção criativa que desejam entender o processo de criação de jogos digitais.",
        "Profissionais de áreas diversas que desejam entender o passo a passo do desenvolvimento de games.",
        "Iniciantes com pouca ou nenhuma experiência em desenvolvimento de jogos digitais."
      ]
    },
    {
      "title": "【한글자막】 Unreal Engine 5 를 활용한 2D 게임 개발 완벽 마스터하기!",
      "url": "https://www.udemy.com/course/unreal-engine-5-2d-game-development-korean/",
      "bio": "Unreal Engine 5 를 활용해 2D 와 2D/3D 하이브리드 게임을 개발하는 데 필요한 Paper 2D 와 PaperZD 에 관한 모든 것을 알려드립니다!",
      "objectives": [
        "언리얼 엔진으로 2D 게임 제작하는 법",
        "다양한 장르의 멋진 네 가지 게임을 제작",
        "스프라이트, 플립북, 타일 맵, 타일 세트에 관한 모든 것",
        "무료 PaperZD 플러그인을 사용해 2D 게임 향상하는 법",
        "언리얼 엔진 블루프린트, 기초부터 중급 사용사례",
        "2D 애니메이션을 위한 애니메이션 트리와 애님 노티파이 설정",
        "AI 컨트롤러와 비헤이비어 트리를 사용해 2D 적(enemy) AI 생성하는 법",
        "2D 스프라이트와 3D 배경을 혼합하여 2D/3D 하이브리드 게임 제작하는 법",
        "히트스톱, 스프라이트 셰이크, 코요테 타임, 점프 버퍼링을 활용해 게임 다듬는 법"
      ],
      "course_content": {
        "강의 소개": [
          "커리큘럼 소개",
          "언리얼 엔진으로 2D 게임을 만드는 이유",
          "사용할 언리얼 엔진 버전",
          "도움을 얻는 방법",
          "프로젝트 백업"
        ],
        "Unreal Engine 5 단기 특강": [
          "언리얼 엔진 5 특별 강의에 관하여",
          "언리얼 엔진 5 설치 방법",
          "새 프로젝트 생성 방법",
          "에디터 사용 방법",
          "콘텐츠 드로어 및 블루프린트",
          "간단한 블루프린트 만들기",
          "블루프린트에 기능 추가하기",
          "유용한 단축키 및 팁",
          "게임 디버깅 방법"
        ],
        "Paper 2D 기본": [
          "Paper 2D란?",
          "2D 프로젝트 설정",
          "언리얼 엔진을 위한 2D 에셋을 구하는 곳"
        ],
        "퀵 드로우 프로젝트": [
          "퀵드로우 개요",
          "퀵드로우 에셋 다운로드하기",
          "스프라이트 준비",
          "반투명 머티리얼 찾기",
          "레벨 목업 만들기",
          "Samurai 블루프린트 생성",
          "타임라인으로 스프라이트 이동",
          "상속과 자식 블루프린트",
          "게임 규칙과 단계 설정",
          "입력이 통하지 않는 경우",
          "플레이어 입력 설정",
          "카메라 추가 및 프로젝트 설정 적용",
          "플레이할 때 화면 중앙에 검은 점이 나타나는 문제 해결하기",
          "플레이어 공격 만들기",
          "타임라인을 이용한 공격 움직임",
          "패배 상태 추가",
          "간단한 적 AI 생성",
          "게임 리셋",
          "마무리",
          "게임 빌드 구축을 위한 텍스처 설정",
          "완성된 프로젝트 파일"
        ],
        "매시러너 프로젝트": [
          "매시러너 개요",
          "매시러너 에셋 다운로드하기",
          "프로젝트 설정 및 에셋 임포트하기",
          "스프라이트 시트와 플립북",
          "러너 블루프린트 만들기",
          "러너 캐릭터에 빙의하기",
          "캐릭터 무브 만들기",
          "런 애니메이션 사용하기",
          "입력 개선하기",
          "스피드 커브 추가하기",
          "특정 프레임에서 이벤트 트리거하기",
          "스테이지 만들기",
          "적수 러너 AI 만들기",
          "골 충돌 설정 이슈",
          "골 설정하기",
          "마무리",
          "완성된 프로젝트 파일"
        ],
        "PaperZD 소개": [
          "PaperZD란 무엇일까요?",
          "PaperZD 다운로드와 관련된 변동사항 공지",
          "PaperZD 설치하기"
        ],
        "타워클라이머 프로젝트": [
          "타워클라이머 플랫폼 개요",
          "타워클라이머 에셋 다운로드하기",
          "JSON 파일을 통해 플립북 생성하기",
          "PaperZD 캐릭터 블루프린트 생성하기",
          "캐릭터 걷기 및 점프 구현하기",
          "애니메이션 소스 설정 및 첫 노티파이 사용하기",
          "PaperZD 애니메이션 블루프린트 생성하기",
          "첫 타일 세트 생성하기",
          "타일 맵 생성하기",
          "캐릭터 조작 개선하기",
          "적 캐릭터 블루프린트 설정하기",
          "적 AI의 턱 및 벽 감지 구현하기",
          "적과 접촉 시 플레이어 사망 구현하기",
          "플레이어 사망 스테이트 개선하기",
          "밟힌 적 캐릭터 사망 구현하기",
          "플랫폼 블루프린트 제작하기",
          "스프링 발사대 제작하기",
          "레벨 디자인하기",
          "코요테 타임 구현하기",
          "점프 버퍼 구현하기",
          "마무리",
          "완성된 프로젝트 파일"
        ],
        "액션 플랫폼 게임 프로젝트": [
          "액션 플랫폼 게임 개요",
          "액션 플랫폼 게임 에셋 다운로드하기",
          "프로젝트 기반 설정하기",
          "플레이어 입력 및 무브먼트 설정하기",
          "PaperZD로 플레이어 애니메이션 설정하기",
          "Slash 공격을 위한 애니메이션 오버라이드",
          "PaperZD Anim Notify States 업데이트건 안내",
          "히트박스 생성 및 트리거하기",
          "스턴 스테이트 구현하기",
          "체력 시스템 및 데미지 적용하기",
          "히트스톱 및 스프라이트 셰이크",
          "적 기지 생성하기",
          "적 AI 설정하기",
          "적 AI 기절시키기",
          "적의 방향 바꾸기",
          "적의 공격 허용하기",
          "어그로 처리하기",
          "능력 시스템 생성하기",
          "검 던지기 생성하기",
          "검 던지기 애니메이션 추가하기",
          "Environment 에셋 다운로드 관련 공지",
          "맵 추가하기",
          "결승점과 스포너 추가하기",
          "시각 요소 개선하기",
          "마무리",
          "완성된 프로젝트 파일"
        ],
        "추가자료: 꿀팁 및 업데이트 공유": [
          "직교 카메라 사용하기",
          "2D 사이드 스크롤러 템플릿 사용 방법"
        ],
        "보너스: 수강 완료를 축하합니다!": [
          "보너스 강의",
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "프로그래밍이나 언리얼 엔진을 다룬 경험이 없어도 됩니다! 필요한 모든 것을 강의에서 배우게 될 거예요."
      ],
      "description": "【한글자막】 Unreal Engine 5 를 활용한 2D 게임 개발 완벽 마스터하기! 에 오신 여러분, 환영합니다!\n\n\n이 강의 과정은 Unreal Engine 5를 활용해 2D 와 2D/3D 하이브리드 게임을 제작하는 법을 가장 포괄적으로 다루는 효과적인 강의입니다.\n지난 수년간 유튜브와 일본의 게임 개발 교육기관에서 직접 언리얼 엔진을 가르치면서 학생들이 진정 원하는 바가 무엇인지 깨달았습니다. 그리고 Paper 2D 와 PaperZD 를 단계별로, 체계적으로 배울 수 있는 강의를 설계했죠.\n\n\nUnreal Engine 을 사용해 본 적이 없는 분들을 위한 Unreal Engine 5 특별 강의가 초반 챕터에 포함되어 있으니 확인해 보세요!\n\n\n첫 번째 게임으로는 스프라이트를 가져오기 하는 법과 그것을 씬에서 사용하는 법을 배울 수 있는 원버튼 미니게임을 만들어 볼 겁니다. 이때 조절해야 하는 프로젝트 설정과 강의 과정 내내 사용하게 될 향상된 입력 액션 시스템에 관해서도 배우게 될 겁니다.\n\n\n두 번째 게임을 통해서는 스프라이트 시트를 사용하는 법과 플립북 을 생성하는 법을 배웁니다. 게임 플레이 중 대기 플립북 과 실행 플립북 을 전환하는 법, 알맞은 애니메이션 프레임에서 발소리를 재생하는 법도 알아봅니다. 배경도 동적으로 조정할 수 있어야 하기 때문에, 블루프린트 에서 배경 스프라이트를 사용하고, 콜리전 을 첨부하고, 스테이지 길이에 따라 구성 스크립트에서 동적으로 변경하는 법을 배웁니다.\n\n\n세 번째 게임은 클래식한 플랫폼 게임으로, 언리얼 엔진을 활용하는 2D 게임 제작 워크플로 를 개선하기 위해 무료 PaperZD 플러그인을 사용하는 첫 번째 프로젝트입니다. 이 과정에서는 PaperZD로 애니메이션 소스와 애니메이션 블루프린트 파일을 설정하고, 이를 사용해 애니메이션 그래프와 애니메이션 노티파이를 생성하는 방법을 배웁니다. 더불어, 벽과 난간을 감지하여 걷는 방향을 변경하고 플레이어 캐릭터를 밟거나 만지면 상호작용하게 되는 적도 만들어 봅니다. 그리고 아래에서 위로 점프할 수는 있지만 위에서 아래로 떨어지지는 않는 단방향 플랫폼을 만드는 법도 알아볼 예정입니다.\n\n\n네 번째 게임은 앞서 배운 모든 지식을 활용해 처음으로 제작하는 2D/3D 하이브리드 게임이 될 겁니다. 즉, 캐릭터는 2D 픽셀 아트이면서 배경은 언리얼 엔진의 모든 놀라운 기능을 활용하는 3D 환경이 되는 거죠. 네 번째 게임에서는 플랫폼 메커니즘뿐만 아니라, 히트박스, 기절 시스템, 데미지 시스템을 비롯하여 대부분의 게임에서 필요한 다양한 기능을 구현해 볼 겁니다. 메트로이드배니아 (metroidvania) 메커니즘을 활용하여 획득 가능한 검 던지기 능력을 생성하고, 벽에 검을 던져 그것을 딛고 더 높은 곳으로 점프할 수 있도록 구현할 예정입니다.",
      "target_audience": [
        "2D 게임을 제작하고자 하는 초급 및 중급 언리얼 엔진 개발자"
      ]
    },
    {
      "title": "Create a Snow Storm VFX with Niagara in Unreal Engine 5",
      "url": "https://www.udemy.com/course/create-a-snow-storm-vfx-with-niagara-in-unreal-engine-5/",
      "bio": "Learn everything you need to know in order to make an Amazing Snow Storm inside UE5 !",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Intro & Setup",
          "Creating the Mist Texture",
          "Creating the Mist Material",
          "Creating the Mist Particle",
          "Adding Mist Details and Tweaks",
          "Adding Mist Scene Details",
          "Adding Mist to the Cliff",
          "Mist Last Touches",
          "Creating the Snow Particle",
          "Last Touches on the Snow, and Post Process"
        ]
      },
      "requirements": [
        "You need Unreal Engine 4 or more to take this course. Some basic understanding of Unreal Engine would be nice, but not required.",
        "You should follow our \"Unreal Engine 5 Environment Tutorial for Beginners - Creating a Snow Level, or have a map on your own that you want to add snow to."
      ],
      "description": "While walking inside your maps, do you find that there's something lacking? do they feel lifeless, or empty? Then you need to learn how to make Environmental VFX!\nCreating Environmental VFX can be a very complex  task, but after finishing this course you will be able become more confident in making your own Snow and Mist VFX in Unreal Engine.\n\nInside, you will learn everything you need to know in order to make efficient, and convincing Snow and Mist VFX.\nWe will make some basic textures inside of Substance (Although there will be project files if you want to skip that)\nYou will learn how to make convincing Mist and Snow Materials.\nAfter that, you will learn how to use those materials to create amazing Niagara Systems.\nLastly, you will learn how to place them correctly inside your map so it feels alive and threatening!\n\nBy the end of watching this course, you will understand Niagara, Materials for VFX and be able to create your own Mist and Snow effects using your imagination. Niagara is used in a wide range of features in game development, so this will be the first step you take towards your VFX career as a VFX artist in the video game industry!",
      "target_audience": [
        "Begginer VFX Artits that want to learn how to make a snow Enviromental VFX"
      ]
    },
    {
      "title": "إصنع لعبة ثنائية الأبعاد على محرك قودوت 4 !",
      "url": "https://www.udemy.com/course/create-a-full-2d-platformer-game-in-godot-4-in-arabic/",
      "bio": "تعلم صنع لعبة على محرك قودوت، من تحميل المحرك وإنشاء المشروع، إلى صنع المراحل والأصوات ونشر اللعبة وأكثر !",
      "objectives": [
        "تعلم اساسيات تطوير الالعاب على محرك قودوت",
        "تعلم إضافة الأصوات وبناء المراحل ونظام الجسيمات وصنع الأعداء وتحسين اللعبة",
        "تعلم مفاهيم متنوعة في عالم تطوير الالعاب",
        "تعلم التعامل مع لغة GDScript في تطوير الالعاب",
        "تصدير اللعبة ورفعها ونشرها على متجر itch io",
        "تعلم تحويل اللعبة الى الجوال وتصديرها وكل شيء متعلق فيها"
      ],
      "course_content": {},
      "requirements": [
        "جهاز كومبيوتر وإتصال بالإنترنت",
        "يفضل وجود خبرة برمجية بسيطة في كتابة الأكواد ولكن لامشكلة بعدم وجودها"
      ],
      "description": "مرحبًا بك في دورتنا التدريبية لتطوير لعبة ثنائية الأبعاد باستخدام محرك قودوت 4 !\n\nتعتبر هذه الدورة بمثابة بوابتك نحو عالم تطوير الألعاب، حيث تقدم لك منهجًا شاملًا مصممًا خصيصًا للإصدار الرابع من محرك قودوت.\n\n( على الرغم من إمكانية الاستفادة من هذه الدورة باستخدام الإصدار الثالث للمحرك، إلا أننا ننصح بشدة باستخدام قودوت بنسخته الرابعة للإستفادة القصوى، خاصةً للمبتدئين نظرًا للتحسينات والاختلافات بين الإصدارين )\n\n\n\n\nفي هذه الرحلة التعليمية، ستكتسب معرفة عميقة بكافة الجوانب الأساسية والمتقدمة لتطوير الألعاب ثنائية الأبعاد. سنغطي أساسيات بناء ميكانيكا اللعبة، مثل حركة الشخصية، استخدام الأسلحة، جمع النقاط، والتفاعل مع العناصر داخل اللعبة. كما سنستكشف تصميم وتنفيذ أنواع متنوعة من التحديات والأعداء، إلى جانب بناء مراحل متكاملة تضمن تجربة لعب متناسقة وممتعة.\n\n\nسنتعمق أيضًا في تنظيم المشاريع بكفاءة، وتطوير واجهات المستخدم التفاعلية مثل القوائم الرئيسية وشاشات الفوز والخسارة، بالإضافة إلى إضافة الأصوات وتحسين الأداء البصري للعبة باستخدام تأثيرات متنوعة لتعزيز تجربة اللاعب.\n\n\nهذه الدورة ليست مجرد تعليم للمفاهيم النظرية، بل هي دعوة للتطبيق العملي، حيث ستحصل على الفرصة لتطبيق ما تعلمته بناءً على تجارب واقعية داخل محرك قودوت، مما يمنحك الثقة اللازمة لبدء وإكمال مشاريعك الخاصة بنجاح.\n\n\nسواء كنت مبتدئًا يسعى لدخول عالم تطوير الألعاب، أو لديك خلفية في البرمجة وترغب في توسيع مهاراتك في صناعة الألعاب، أو حتى إذا كنت تمتلك خبرة مسبقة مع محرك قودوت وتطمح للارتقاء بمستواك، فهذه الدورة مصممة خصيصًا لتلبية احتياجاتك وتعزيز مهاراتك بشكل شامل.\n\n\nنهاية هذه الدورة ستكون بمثابة نقطة انطلاق نحو تحقيق إنجازات أكبر في مجال تطوير الألعاب باستخدام محرك قودوت. ستغادر هذه الدورة مزودًا بمعرفة شاملة وثقة عالية في قدرتك على تصميم وتنفيذ ألعاب ثنائية الأبعاد بنفسك، وستكون مستعدًا لإستكشاف إمكانيات لا حدود لها في عالم تطوير الألعاب.\n\n\nيجدر بالذكر أن هذه الدورة التدريبية تسعى لتغطية مراحل تطوير اللعبة بشكل كامل، من المفهوم الأولي إلى النسخة النهائية، مع التركيز على تطبيقات عملية بدلاً من توفير تعليمات مباشرة حول أساسيات البرمجة. لذا، نوصي بشدة بأن يمتلك المشاركون خبرة مسبقة في البرمجة وفهمًا للمبادئ الأساسية لكتابة الأكواد. الإلمام بأي لغة برمجة سيساعدك بشكل مثالي للإستفادة القصوى من المحتوى المقدم، لكن في حال كنت جديدًا على البرمجة، فإن لغة محرك قودوت تتسم بالبساطة والوضوح، مما يجعلها نقطة انطلاق ممتازة لتعلم أسس البرمجة في سياق تطوير الألعاب.",
      "target_audience": [
        "المبتدئين في عالم صناعة الالعاب والمهتمين بصناعة الالعاب على محرك قودوت"
      ]
    },
    {
      "title": "Unreal Engine 4 : Criando um jogo TPS do Zero",
      "url": "https://www.udemy.com/course/curso-de-unreal-engine-4-criando-um-jogo-tps-do-zero/",
      "bio": "Crie um jogo em terceira pessoa incrível com sistema de armas e de inventario",
      "objectives": [
        "Aprenderá a criar um jogo na Unreal engine 4 de uma forma simples e criativa.",
        "Obter conhecimentos sobre algumas blueprints e mecânica de jogo.",
        "Aprenderá a implementar sistema de armas e de objetos e inventario",
        "Criar cenários na unreal engine e mapas",
        "Animar e editar personagem",
        "Aprenderá a criar um jogo em terceira pessoa"
      ],
      "course_content": {
        "Introdução ao curso": [
          "Introdução do curso",
          "Apresentação do jogo"
        ],
        "Iniciando projeto : criando Personagem": [
          "Iniciando Projeto na Unreal Engine 4",
          "Criando movimento do personagem",
          "Adicionando Personagem",
          "Animando Personagem",
          "Retarget e Animation",
          "Rotacionando a cabeça do personagem",
          "Ajustando movimento do personagem e corrida"
        ],
        "Sistema de pickup e armas": [
          "Criando item e usando RayCast",
          "World OutLine (Ressaltando objetos)",
          "Criando PickUp dos itens",
          "Iniciando sistema de arma",
          "Adicionando armas ao personagem(PickUp)",
          "Adicionando animações de rifle",
          "Equipando arma no personagem",
          "Criando Animação de mira",
          "Criando HUD Circular parte 1",
          "Criando HUD Circular parte 2",
          "selecionando armas pelo HUD",
          "Alterando entre as armas",
          "Adicionando Crosshair",
          "Melhorando a HUD Weapon",
          "Zoom de mira da arma",
          "Body Rotator AinOffSet",
          "Criando sistema de atirar com a arma",
          "Criando Crosshair (Mira) da arma",
          "Programando a HUD das armas",
          "Criando sistema de Reload",
          "Corrigindo Bug de tiro e reload",
          "Animação de tiro e reload",
          "MuzzleFlash e PickUp de balas",
          "Projectile Moviment da arma",
          "Capsule Drop da arma",
          "Ajustes Finais e som",
          "Corrigindo alguns Bug's",
          "Corrigindo Alguns Bug's parte 2",
          "Criando Animação com a MAG da arma",
          "Criando animação com a MAG da arma M4A4"
        ],
        "Criando IA Basico Zombie": [
          "Criando Inimigo Basico",
          "Inimigo Seguir Jogador e dano",
          "Detectando jogador",
          "Andando pontos aleatório",
          "Inimigo Atacando Jogador",
          "Efeito de sangue do inimigo",
          "Efeito de desintegrar do inimigo",
          "Dano e morte do player",
          "Dano com LineTrace e HeadShot"
        ],
        "Adicionando pistola e Ataque Melee": [
          "Adicionando a pistola no player",
          "Equipando a pistola Parte 1",
          "Equipando a pistola Parte 2",
          "Equipando a pistola Parte 3",
          "Equipando a pistola Parte Final",
          "Iniciando Ataque Melee Animações",
          "Pegando a arma Taco de BaseBall",
          "Equipando e desequipando Taco de BaseBall",
          "Alternando entre as armas Melee",
          "Animação de ataque melee",
          "Dano Ataque melee"
        ],
        "Menu do Jogo": [
          "Criando Menu com cenario 3D",
          "Criando menu Widget",
          "Adicionando menu de opções",
          "Alternando entre menu e menu de opcoes",
          "Criando config de gráficos",
          "Criando config de graficos parte 2",
          "Salvando valores de gráficos",
          "Alterando mouse e adicionando som",
          "Alterando font e cor dos textos com o mouse",
          "Criando configuração de sons design",
          "Definindo volume e mutando som",
          "Salvando configuração de som"
        ],
        "Criando Inventario do jogo": [
          "Apresentação do Inventario",
          "Criando estrutura do inventario",
          "Criando Widget Inventario",
          "Criando Colunas e linhas",
          "Abrindo Inventario",
          "Pegando itens para o inventario",
          "Criando ação de usar itens",
          "Criando slot de armas",
          "Equipando item weapon no inventario",
          "Removendo a arma equipada",
          "Equipando a arma na mão",
          "Adicionando item consumível no inventario",
          "Adicionando arma melee no inventario",
          "Corrigindo seleção de armas",
          "Adicionando a pistol no inventario",
          "Adicionando Sniper",
          "Alternando entre as armas Sniper",
          "Criando Baú parte 1",
          "Criando Baú parte 2",
          "Criando Baú parte Final"
        ]
      },
      "requirements": [
        "Conhecimento básico de Interface da engine",
        "Conhecimento básico de blueprint",
        "ou apenas conhecimento básico informatica"
      ],
      "description": "Aprenda a criar jogos legais e em terceira pessoa com a poderosa Engine, Unreal Engine 4, Você aprenderá a criar jogos em terceira pessoa ou ate mesmo em primeira, sistema de itens e armas, sem contar o cenário e tudo mais, deixe sua criatividade fluir, a partir desse curso você será capaz de imaginar e criar qualquer coisa que você quiser!!!",
      "target_audience": [
        "Qualquer um que deseja aprender a criar jogos na unreal engine 4"
      ]
    },
    {
      "title": "Aprenda a desenvolver jogos com JAVASCRIPT do ZERO!",
      "url": "https://www.udemy.com/course/desenvolvimentodejogoscomjavascript/",
      "bio": "Entenda como utilizar das ferramentas web, para criar jogos.",
      "objectives": [
        "JavaScript",
        "CSS",
        "HTML",
        "Desenvolver jogos utilizando Atom"
      ],
      "course_content": {
        "Introdução": [
          "Recados importantes",
          "Backups dos projetos",
          "Onde vamos programar?",
          "Configurando o Atom"
        ],
        "Introdução HTML": [
          "Introdução Tags",
          "<!DOCMENT HTML>",
          "<Head> e <BODY>",
          "Inserindo conteúdos",
          "Inserindo imagens",
          "Estilizando as Tags com CSS"
        ],
        "Introdução CSS": [
          "Arquivo externo para CSS",
          "Syntax",
          "Seletores ID",
          "Seletores class"
        ],
        "Primeiro Projeto - Pong - HTML + CSS": [
          "Criando os arquivos",
          "Base do projeto",
          "<DIV>",
          "Cores personalizadas",
          "Centralizando o campo",
          "Criando Faixas para o campo",
          "Refinando o código",
          "Marcação central",
          "Circulo central",
          "Circulo menor",
          "Retangulo de marcação esquerdo",
          "Retangulo de marcação direito",
          "Desenhando a bolinha",
          "Concluindo Css"
        ],
        "Introdução ao JavaScript": [
          "Criando arquivo de script",
          "Variáveis",
          "Comentários",
          "Utilizando o script.js",
          "Console do navegador",
          "Operadores",
          "Concatenação de textos e numeros",
          "Organizando as variáveis",
          "Condições",
          "Condições 2",
          "Funções",
          "Colocando em prática",
          "Função de Defesa",
          "Função de Fugir",
          "Definindo escolhas com prompt",
          "Loops com while.",
          "Let",
          "Conclusão + exercicio"
        ],
        "Criando nosso primeiro jogo - Pong": [
          "Criando projeto",
          "Criando a base html",
          "Configurando o CSS",
          "Javascript - GetElementByID()",
          "Criando um container com getContext(\"2d\")",
          "Desenhando com fillRect()",
          "Desenhando o jogador 2 e a bolinha",
          "Trabalhando com textos",
          "Organizando os valores",
          "Função Draw()",
          "Movendo a bolinha",
          "Alterando a direção da bolinha",
          "Eventos",
          "Identificando teclas",
          "Refinando os movimentros",
          "Parando de mover, ao soltar a tecla",
          "Criando limits",
          "Colisão com jogador 1",
          "Colisão com jogador 2",
          "Marcando pontos",
          "Mudando a direção do eixo Y da bolinha",
          "Movendo o player 2",
          "Condição de vitória",
          "Conclusão do módulo"
        ],
        "Introdução a POO - BeeHoney": [
          "Demonstração BeeHoney",
          "Base para o projeto",
          "Configurando o Css",
          "Configurando o Canvas com javascript",
          "Funções base do projeto",
          "Introdução as classes",
          "Desenhando Objs na tela",
          "Organizando o projeto",
          "Chamando os eventos no projeto",
          "Movimentando a abelhinha",
          "Classes e extenções",
          "Movendo a aranha.",
          "Randomizar posições da aranha.",
          "Adicionando imagens",
          "Adicionando o BG",
          "Movendo o BG",
          "Adicionando Animações",
          "Animando a aranha",
          "Deixando o Obj mais inteligente",
          "Coletaveis",
          "Textos na tela",
          "Colisões",
          "Colisão com aranha",
          "Colisão com a flor",
          "Adicionando caracteristicas as colisões",
          "GameOver"
        ],
        "Flappy Bird - Criando cenas": [
          "Base do projeto",
          "Assets do projeto",
          "Desenhando Obj na tela",
          "Background infinito",
          "Chão Infinito",
          "Otimizando animações",
          "Adicionando o passarinho a cena",
          "Animações",
          "Eventos",
          "Aplicando gravidade",
          "Limites de voo",
          "Adicionando canos",
          "Movimentando os canos",
          "Canos aleatórios",
          "Moedas no jogo",
          "Colisão",
          "Mostrando, ou não, os objetos",
          "Definindo as colisões",
          "Desenhando textos e marcando pontos",
          "Definindo sons",
          "GameOver"
        ],
        "Gerenciando Telas - SpaceShip": [
          "Base do projeto",
          "Conceito de cenas",
          "Colocando em pratica",
          "Desenhando na cena",
          "Inserindo Titulo",
          "Removendo Anti-Analising",
          "Trocando de cena",
          "Adicionando OBJs no game",
          "Cena de GameOver",
          "Bg infinito",
          "Finalizando o Menu",
          "Bg infinito para todas as cenas",
          "Movendo a Nave",
          "Correção da aula anterior",
          "Função dos clicks em cada tela",
          "Conceito de grupos",
          "Colocando em pratica",
          "Movimentando os tiros",
          "deletando os tiros",
          "Organizando o código",
          "Base para os cometas",
          "Desenhando e atualizando os cometas",
          "Adicionando os cometas no jogo",
          "Spaw de cometas",
          "Velocidade dos cometas",
          "Posição dos cometas",
          "Removendo Cometas",
          "Destruindo cometas",
          "Corrigindo a posição do tiro",
          "Game over",
          "Texto de GameOver",
          "Looping de Jogo",
          "Dificultando o jogo",
          "Aplicando Score",
          "Limpando o jogo",
          "Recado final"
        ]
      },
      "requirements": [
        "Computador com teclado e mouse"
      ],
      "description": "Olá e seja muito bem vindo.\n\n\nSe esta aqui, é porque quer saber o que você vai aprender no curso, certo!?\nBem, vamos passar por uma breve introdução em html, css e javascript e então começar nosso primeiro jogo.\n\n\nAqui esta a lista dos jogos que vamos criar juntos:\n\n\nPong - Jogo onde vamos aprender a criar formas e gerar movimentos utilizando o teclado\n\n\nBee Honey - Aqui vamos aprender a utilizar imagens e animações, além de utilizar todo o conhecimento já adquirido.\n\n\nFlappy Bird - Esse será um jogo bem mais complexo, mas onde vamos ter a oportunidade de nos aprofundar ainda mais.\n\n\nSpaceShip - Chegou o momento de aprender sobre gerenciamento de cenas e estados!\n\n\nSão mais de 150 aulas, focadas em te ensinar a criar jogos!\n\n\nCaso queira ver os resultados de cada Sessão, deixo todos eles disponíveis no vídeo de introdução.\nE claro, sempre que precisar de alguma ajuda, basta me chamar nos campos de dúvidas da Udemy.\n(Geralmente respondo todos as dúvidas, por volta as 20:00, todos os dias.)\n\n\nEntão de uma olhadinha nos vídeos de demonstração, que deixo logo acima e caso goste do conteúdo,\nestarei te esperando na nossa primeiro aula.\n\n\nBons estudos!\n\n\n(OBS: Qualquer dúvida ou sugestão, pode ser enviada como mensagem, diretamente para mim,\nutilizando o serviço de mensagens da Udemy.)",
      "target_audience": [
        "Pessoas interessadas em aprender JavaScript",
        "Pessoas interessadas em aprender CSS",
        "Pessoas interessadas em aprender HTML",
        "Pessoas interessadas em aprender a desenvolver jogos"
      ]
    },
    {
      "title": "SFML 2 : Développer des jeux 2D avec C++",
      "url": "https://www.udemy.com/course/sfml-2-developper-des-jeux-2d-avec-cpp-programmation-objet-jeu-video/",
      "bio": "Développez des jeux 2D avec la SFML (version 2.5+) et le langage de programmation orienté objet C++.",
      "objectives": [
        "Programmer des jeux avec C++",
        "Utiliser la SFML pour créer des jeux",
        "Développer des jeux en 2D",
        "Afficher des Sprites et les animer",
        "Charger une tilemap (niveau de jeu)",
        "Gérer les collisions",
        "Programmer des événements",
        "Utiliser les principales fonctionnalités de la SFML avec C++"
      ],
      "course_content": {
        "Notions fondamentales sur la SFML et son utilisation avec C++": [
          "Présentation de la formation SFML / C++ et du contenu du cours",
          "Téléchargement et installation de l'environnement de développement",
          "Installer la SFML dans notre IDE (liaison des includes / libs)",
          "Quelques rappels sur le langage C++ et notions de base pour bien débuter",
          "Bien comprendre la programmation orientée objet (POO) avec C++ avec exemple.",
          "Télécharger mon projet Visual Studio et l'utiliser chez vous (configuration)",
          "Afficher une fenêtre avec la SFML et C++ !",
          "Organisation du code C++ et séparation du code dans différents fichiers cpp / h",
          "Afficher du texte à l'écran avec la SFML",
          "Récupération des entrées clavier / souris (inputs) avec la SFML",
          "Création d'une class de gestion des Inputs indépendante et réutilisable",
          "Utilisation de la classe Input pour modifier le texte en fonction des touches",
          "Dessiner des formes à l'écran avec la SFML et la fonction draw"
        ],
        "Afficher des Sprites / textures à l'écran et les animer - Création d'un héros": [
          "Duplication du projet précédent et nettoyage du code pour poursuivre le cours",
          "Afficher le personnage à l'écran après avoir découpé la texture de sprites",
          "Préparation des directions possibles pour l'orientation du personnage 2D",
          "Animer le héros du jeu avec les différentes animations de marche + orientation",
          "Gérer le cas du \"Idle\" quand le personnage est à l'arrêt",
          "Animation d'attaque à l'épée quand le joueur lance une attaque au corps à corps"
        ],
        "Triggers, Collisions, Tileset, Tilemap et chargement des niveaux du jeu": [
          "Détection d'une collision lors de l'intersection de 2 HitBox",
          "Mini exercice / Pratique des collisions entre le personnage et un objet 2D",
          "Préparation du fichier map.h qui permettra de charger des maps 2D",
          "Chargement d'une map composée de 450 tuiles (25 * 18 cases)",
          "Chargement des maps depuis un fichier texte externe",
          "Affichage de la map 2D chargée depuis le fichier externe",
          "Astuce pour débugger les zones \"solides\" et visualiser les collisions possibles",
          "Programmation des collisions entre le joueur et la map / zones solides"
        ],
        "Éditeur de niveau, monstre animé, attaque à distance et améliorations": [
          "Utiliser un éditeur de niveaux pour créer rapidement des maps avec un outil",
          "Créer des transitions entre 2 niveaux pour changer de scène de jeu",
          "Afficher un monstre 2D à l'écran",
          "Attaque à distance (tir de flèche) et destruction du monstre",
          "Animer le monstre et déplacement autonome du monstre en boucle",
          "Vendre un jeu vidéo sur le net facilement grâce à Gumroad"
        ],
        "Un peu de pratique et quelques astuces supplémentaires sur la SFML & C++": [
          "Exercice : Créer une barre de vie avec 3 cœurs et gestion des points de vie",
          "Exercice : Créer un PNJ avec un système de dialogue (énoncé)",
          "Correction : Création de la boîte de dialogue du PNJ + gestion du texte",
          "Jouer des effets sonores et de la musique avec la classe Audio de la SFML",
          "Nettoyage du code et système de sauvegarde dans un fichier texte",
          "Téléchargement de toutes les ressources de la formation (ZIP COMPLET)"
        ],
        "Atelier pratique / Projet : Le jeu Pong en C++ avec la SFML": [
          "Atelier pratique cadeau : Développement du jeu Pong avec la SFML et C++",
          "Développer le jeu Pong en C++ avec la SFML",
          "Solution / TD : Créer le jeu Pong avec la SFML et C++ (ma proposition de code)",
          "Télécharger le projet Pong SFML"
        ],
        "BONUS": [
          "PODCAST : Comment créer un jeu indé et le terminer ?"
        ]
      },
      "requirements": [
        "Ce cours s'adresse aussi bien aux débutants qu'aux développeurs",
        "Si vous connaissez un minimum C++ c'est un bon point mais pas obligatoire",
        "Le cours a été réalisé sous Visual Studio Community 2019. Si vous utilisez un autre IDE il faudra tester avec les vidéos gratuites que vous parvenez à configurer la SFML pour votre environnement.",
        "Avoir envie de coder des jeux en C++ avec la SFML"
      ],
      "description": "Ce cours complet vous permettra d'apprendre à créer des jeux vidéo en 2D avec la SFML (Simple and Fast Multimedia Library) et le langage de programmation objet C++.\nNous allons découvrir et mettre en pratique les principales fonctionnalités de la bibliothèque SFML afin d'implémenter les mécaniques que l'on retrouve dans un jeu vidéo 2D :\nAfficher une fenêtre de jeu\nAfficher du texte à l'écran\nGérer les Inputs (clavier/souris)\nAfficher des formes de base à l'écran\nAfficher des Textures, Sprites et animer un personnage 2D\nDéplacer le personnage au clavier\nAttaquer\nDétecter des collisions\nCréer un niveau de jeu à partir d'un Tileset\nCharger le niveau (Tile mapping) depuis un fichier externe\nGérer les collisions entre le personnage et les tuiles (cases) du niveau\nCréer une transition entre 2 maps\nUtiliser un éditeur de maps\nAttaquer des monstres\nCréer une barre de vie\nJouer des sons\nAfficher des dialogues\nSauvegarder dans des fichiers\nEt plein de conseils et astuces\nEn plus de cela nous allons pratiquer le langage C++, découvrir les fonctionnalités de base de ce langage et configurer notre environnement de développement pour créer nos projets basés sur la SFML.\nDans cette formation complète SFML / C++, nous allons utiliser les fonctionnalités de la SFML une à une, les prendre en main et les appliquer sur des cas pratiques afin de mieux se projeter.\nA l'issu de ce cours vous serez en mesure de vous lancer dans le développement de jeux avec la SFML. Vous aurez les connaissances pour afficher des personnages à l'écran, les contrôler au clavier/souris, afficher un monde 2D, gérer les collisions et détecter des événements. Vous aurez les connaissances essentielles pour bien démarrer dans la création de jeux avec cette librairie et le langage C++.\nVous aurez accès à tout mon code source et à toutes les ressources en téléchargement pour suivre au mieux ce tutoriel SFML & C++.\nIl s'agit d'un sujet rare dans le monde francophone mais néanmoins très recherché. Ce cours rassemble tout ce dont vous avez besoin pour débuter sereinement avec la SFML.",
      "target_audience": [
        "Si vous connaissez Unity, Unreal, la SDL, Love2D ou un autre outil et que vous souhaitez découvrir un autre framework, ce cours vous conviendra.",
        "Les développeurs qui souhaitent créer des jeux en C++ avec la SFML",
        "Les personnes qui veulent tout créer à la main de A à Z",
        "Ceux qui sont intéressés par le développement de jeux en 2D"
      ]
    },
    {
      "title": "Academia UNITY 6 2D - Produção de Jogos utilizando o Unity",
      "url": "https://www.udemy.com/course/academia-unity-2017-producao-de-jogos/",
      "bio": "O seu curso definitivo para aprender a desenvolver jogos 2D utilizando o Unity",
      "objectives": [
        "Criar jogos em plataforma 2D, um jogo Infinity run e um jogo de tiros futurista, utilizando a Unity",
        "Programar jogos usando a linguagem C#",
        "Publicando seu jogo na Google Play Store",
        "Desenvolvimento Mobile (Android e IOS)",
        "Gravando e lendo dados do jogo (PlayerPrefs)",
        "Unity ADS (monetização mobile) com a Unity",
        "In-App Purchase - Aprenda a implementar venda de conteúdos e itens com dinheiro real",
        "Desenvolver Sprites (animações) com qualidade (Spine 2D software PAGO, DragonBones software Free e Spriter Pro software PAGO)",
        "Autenticação com o Firebase utilizando o Unity",
        "Criar animações para os jogos com Dragonbones e Spine",
        "C# Básico e Avançado para o Unity",
        "UI (User Interface) de jogos no Unity",
        "Sistemas de Partículas no Unity",
        "Multiplayer no Unity com o Photon",
        "Google AdMob",
        "Banco de dados Firebase Realtime com o Unity"
      ],
      "course_content": {
        "Introdução e como produzir um bom jogo. ( Atualização 2025 )": [
          "Introdução e apresentação do curso.",
          "Sugestões de estudo e aprendizado",
          "Informações para o suporte do curso"
        ],
        "Instalando e configurando o Unity 6 no Windows ( Atualização 2025 )": [
          "O que é o Unity?",
          "Criando o Unity ID",
          "Conhecendo o Unity Hub?",
          "Baixando e instalando o Unity Hub",
          "O que é a versão LTS do Unity?",
          "Instalando o Unity Editor versão 6",
          "Instalando o Unity Editor versão 2022",
          "Versões do Unity archive (versões arquivadas)",
          "Conceitos de projetos 2D e 3D",
          "Dicas para criar seus projetos 2D e 3D",
          "Criando um projeto 3D no Unity",
          "Criando um projeto 2D no Unity",
          "Atualizando a Versão do Unity Editor",
          "Removendo uma Versão do Unity Editor",
          "Gerenciando meus projetos no Unity 6"
        ],
        "Backup de Projetos Unity": [
          "Backup da pasta do Projeto",
          "Backup do projeto no Google Drive"
        ],
        "Instalando e configurando o Unity 2023 e 2022 no Windows (versões anteriores)": [
          "Instalando o Unity Editor 2023 e 2022",
          "Atualizando a Versão do Unity Editor 2023 ou 2022"
        ],
        "Visual Studio 2022 ( Atualização 2025 )": [
          "Baixando e Instalando o Visual Studio 2022",
          "Definindo o Visual Studio 2022 como o editor de scripts no Unity",
          "Criando um script em C#",
          "Instalando componentes adicionais",
          "Instalando extensão Viasfora no Visual Studio 2022"
        ],
        "Visual Studio Code ( Atualização 2025 )": [
          "Baixando e Instalando o Visual Studio Code",
          "Instalando extensões do Visual Studio Code",
          "Definindo o Visual Studio Code como o editor de scripts C# no Unity"
        ],
        "Interface do Unity ( Atualização 2025 )": [
          "Visão geral da interface do Unity 6",
          "Visão geral da interface do Unity - 2023 / 2022",
          "Criando novas cenas",
          "Overlays",
          "Definindo a área de trabalho (layout) no Unity 6"
        ],
        "Pacotes (packages) e Assets no Unity ( Atualização 2025 )": [
          "Conceito de Assets e GameObject",
          "Conheça a Asset Store do Unity",
          "Gerenciador de Pacotes do Unity 6 ( Package Manager )",
          "Gerenciador de Pacotes do Unity 2023/2022 ( Package Manager )",
          "Localização dos pacotes baixados pelo Package Manager",
          "Importando pacotes de recursos customizados (Custom Package)",
          "Importando novos Assets"
        ],
        "Scripts no Unity 6 ( Atualização 2025 )": [
          "O que é o C#? C (sharp)",
          "Scripts empty (vazio) em C#",
          "Criando um script MonoBehavior no Unity",
          "Classe MonoBehavior do Unity",
          "O que são NameSpaces ?",
          "Scriptable Object",
          "Alterando o nome de um script no Unity"
        ],
        "Debug do Unity 6 ( Atualização 2025 )": [
          "A janela do Console (Debug)",
          "Debug com informações, avisos e erros"
        ]
      },
      "requirements": [
        "Um computador capaz de rodar o Unity 2022.x ou 2023.x",
        "Conhecimento básico do sistema operacional Windows"
      ],
      "description": "Nesse curso vamos ensinar você como criar jogos em 2D utilizando o Unity 6 uma das mais poderosas ferramentas do mercado de desenvolvimento de jogos. Vamos desenvolver os mais variados tipos de jogos que atualmente conquistam a maior parte dos jogadores ao redor do mundo.\nE ao final deste curso você estará apto a criar jogos com muita qualidade e com recursos fantásticos, extraindo ao máximo todas as informações do Unity 6 Aprenda do zero a criar jogos reais, com mecânicas de corrida infinita (infinity run), um Jogo de Plataforma 2D e um jogo de tiros espacial (shoot gun).\nNão perca mais tempo e vamos desenvolver jogos legais!\nInteressou-se mais ainda? Então o que você esta esperando?\nFaça já a sua inscrição e aprenda passo a passo a desenvolver seus jogos com qualidade em 2D utilizando o Unity.\nSatisfação garantida ou seu dinheiro de volta\n\"E se eu não gostar do curso?” Nós devolvemos seu dinheiro! Essa é mais uma garantia de qualidade e um incentivo a mais para você começar já! Após a compra você terá 30 dias para testar o produto, e se não gostar, basta solicitar o reembolso.\nUm grande abraço,\nSTEWART GOMES TELES\nDesenvolvedor de Jogos",
      "target_audience": [
        "Todos que querem criar jogos com o Unity em 2D",
        "Quem deseja criar jogos com qualidade para celulares e desktops (PC, MAC)",
        "Pessoas que tenham algum ou nenhum conhecimento em programação C#",
        "Pessoas que tenham algum ou nenhum conhecimento em desenvolvimento de jogos",
        "Alunos que estão migrando de outra Game Engine",
        "Desenvolvedores de games em geral",
        "Quem deseja trabalhar e ganhar dinheiro desenvolvendo jogos 2D"
      ]
    },
    {
      "title": "Unreal Engine 5 - Blueprints, Level Design, Animações e Mais",
      "url": "https://www.udemy.com/course/unreal-engine-blueprints-animations-design/",
      "bio": "Domine Criação de Jogos, Apps e Animações com Blueprints, Sequencer, UMG e Mais! Explore o universo da Unreal Engine!",
      "objectives": [
        "Programação orientada a Objetos, Blueprint na Unreal Engine 5. Aprenderá os conceitos de programação utilizando o sistema Blueprints",
        "Ao longo desta série, você aprenderá os fundamentos de produção de conteúdo cinematográfico usando o Sequencer dentro da Unreal Engine 5.",
        "Técnicas e boas práticas de Level Design na Unreal Engine 5, melhore o seu workflow!",
        "No final do curso terá um amplo entendimento sobre como a Unreal Engine funciona, poderá seguir em frente e desenvolver seus projetos conforme a criatividade!!"
      ],
      "course_content": {
        "Programação Blueprints - Unreal Engine 5": [
          "Interface de Usuário",
          "Conceitos de Programação",
          "Blueprint Classes",
          "Variáveis",
          "Variável do tipo Integer",
          "Variável do tipo Float",
          "Variável do tipo Vector",
          "Variável do tipo Boolean",
          "Variáveis: Name, String e Text",
          "Variável do tipo Structure",
          "Variável do tipo Enumeration",
          "Construction Script",
          "Arrays",
          "For Loop",
          "While Loop",
          "For Each Loop",
          "Character Blueprint",
          "Input Events",
          "Game Mode",
          "Flip Flop",
          "Switch",
          "Gate",
          "MultiGate",
          "Timeline",
          "Select",
          "Timers",
          "Lerp",
          "Map Range Clamped & Unclamped",
          "Do Once",
          "Blueprint Interfaces - Comunicação entre Blueprints",
          "Casts vs Interfaces"
        ],
        "Animações e Cinematics - Sequencer - Unreal Engine 5": [
          "Interface de Usuário",
          "Animações (Transform)",
          "Câmeras",
          "Animando Personagens (Assets)",
          "Partículas e Sons",
          "Camera Shake",
          "Como iluminar o Ambiente",
          "Camera Rig Rail & Crane",
          "Fade",
          "Sequence With Shots",
          "Rendering",
          "Movie render Queue",
          "Renderizar Vídeos e imagens 360 º"
        ],
        "Level Design - Unreal Engine 5": [
          "Lumen",
          "Nanite",
          "Quixel Bridge Megascans",
          "Sistema de Água",
          "Volumetric Clouds",
          "Post Process Volume",
          "Landscape Mode - Sculpt",
          "Landscape Mode - Paint",
          "Displacement Tesselation",
          "Foliage Mode",
          "Iluminação Realista com HDRI"
        ],
        "Tutoriais Unreal Engine 5": [
          "20+ Dicas & Truques",
          "20+ Dicas & Truques (Parte 2)",
          "Meta Human Creator",
          "Transferindo Animações Entre Personagens",
          "Transferindo Animações do Mixamo para MetaHuman",
          "Time Dilation",
          "Introdução ao Novo Motion Matching",
          "MegaLights",
          "Retarget Animations - Atualizado"
        ],
        "Extra - Mega Tutorial para Iniciantes - Como fazer um jogo FPS na Unreal Engine": [
          "Como fazer um jogo FPS na Unreal Engine (Parte 1)",
          "Como fazer um jogo FPS na Unreal Engine (Parte 2)",
          "Como fazer um jogo FPS na Unreal Engine (Parte 3)"
        ],
        "Guia de como aprender Unreal Engine": [
          "Como Aprender Unreal Engine 5 – Guia para Iniciantes"
        ]
      },
      "requirements": [
        "Noções básicas de informática: É importante ter familiaridade com o uso de computadores, incluindo navegação na internet, instalação de softwares e gerenciamento de arquivos.",
        "Conhecimento básico de conceitos de jogos: Ter um entendimento fundamental de como os jogos funcionam, seus elementos principais e gêneros diversos será útil para acompanhar as explicações e atividades do curso."
      ],
      "description": "Domine a Unreal Engine e Crie Jogos Incríveis com Este Curso Completo!\nDesvende os segredos da Unreal Engine e torne-se um mestre na criação de jogos e aplicações 3D realistas com este curso abrangente!\nAprenda a programar com Blueprint, a linguagem visual intuitiva da Unreal Engine, para criar sistemas de jogo complexos e envolventes sem escrever uma linha de código. Domine as técnicas de animação com o Sequencer para dar vida aos seus personagens e objetos com movimentos fluidos e realistas. Crie níveis desafiadores e imersivos utilizando as melhores práticas de level design. E muito mais!\nNeste curso, você terá acesso a:\nAulas completas e em vídeo que te guiarão passo a passo em cada etapa do processo de criação.\nTutoriais práticos que te permitirão colocar em prática o que aprendeu e criar seus próprios projetos.\nExercícios desafiadores para testar seus conhecimentos e aprimorar suas habilidades.\nSuporte dedicado para te ajudar em qualquer dúvida que você tenha.\nAo concluir este curso, você estará pronto para:\nCriar jogos 3D completos e envolventes em diversas plataformas.\nDesenvolver aplicações 3D interativas para diversos fins.\nDominar a linguagem visual Blueprint e seus recursos avançados.\nAplicar técnicas de level design profissional para criar níveis incríveis.\nDar vida aos seus personagens e objetos com animações realistas.\nPublicar seus projetos nas principais plataformas de distribuição.\nInscreva-se agora e prepare-se para desbravar o universo da Unreal Engine e realizar seus sonhos!\n#UnrealEngine #Programação #GameDev #Comunidade #LevelDesign #Animação #Sequencer #Tutoriais #MegaTutorial",
      "target_audience": [
        "Este curso online de Unreal Engine foi cuidadosamente elaborado para atender às necessidades de um público amplo e diverso, abrangendo desde iniciantes curiosos até desenvolvedores experientes que desejam aprimorar suas habilidades.",
        "Iniciantes: que desejam aprender os fundamentos da Unreal Engine e dar os primeiros passos na criação de jogos e aplicações 3D.",
        "Entusiastas de jogos: que desejam desvendar os segredos por trás da criação de seus jogos favoritos e aprender a desenvolver seus próprios projetos.",
        "Estudantes de desenvolvimento de jogos: que buscam aprofundar seus conhecimentos em Unreal Engine e se preparar para uma carreira na indústria de jogos.",
        "Desenvolvedores experientes: que desejam aprimorar suas habilidades em programação Blueprint, level design, animação e outras áreas da Unreal Engine.",
        "Criadores de conteúdo digital: que desejam utilizar a Unreal Engine para criar experiências interativas, simulações ou visualizações 3D.",
        "Empreendedores: que desejam desenvolver jogos ou aplicações mobile para monetizar suas ideias.",
        "Apaixonados por tecnologia: que desejam aprender sobre uma das ferramentas de criação de conteúdo 3D mais populares e utilizadas no mundo."
      ]
    },
    {
      "title": "Game Making Starter Kit",
      "url": "https://www.udemy.com/course/game-making-starter-kit/",
      "bio": "Start making your own game casually and professionally",
      "objectives": [
        "1. The basic on how to start making games with Unity3D",
        "2. The basic of C# Game Programming",
        "3. The basic of Game rendering and VFX",
        "4. The basic of Game optimization"
      ],
      "course_content": {
        "Session 0 : Introduction": [
          "0 - Session Intro",
          "1 - Install Unity"
        ],
        "Session 1 : Open the Gate": [
          "0 - Session Intro",
          "1 - Game Development Overview / Game Engine",
          "2 - Create project , Layout",
          "3 - Basics",
          "4 - Empty Object and Component",
          "5 - Playmode , Save Scene",
          "6 - Build Game",
          "7 - Workshop",
          "8 - Parenting",
          "9 - Material , Save Project",
          "10 - Prefab"
        ],
        "Session 2 : Create World": [
          "0 - Session Intro",
          "1 - Asset Store",
          "2 - 3D Sample Project",
          "3 - Basic Computer Graphic",
          "4 - Workshop"
        ],
        "Session 3 : Grant Life": [
          "0 - Session Intro",
          "1 - Physic Game",
          "2 - Rigidbody Component & Physic Layer",
          "3 - Custom Component Part 1",
          "4 - Animation Component",
          "5 - Local Position + World Position",
          "6 - Custom Component Part 2",
          "7 - Custom Component Part 3",
          "8 - Clone + Destroy",
          "9 - Sample",
          "10 - Minimap",
          "11 - WebGL"
        ],
        "Session 4 : God's Training I": [
          "0 - Session Intro",
          "1 - Programming Introduction",
          "2 - Hello World",
          "3 - Flow - Step by Step",
          "4 - Data Types & Variables",
          "5 - Boolean Condition",
          "6 - Flow - Choice",
          "7 - Flow - Loop",
          "8 - Flow - Function",
          "9 - Exercise 1",
          "10 - Exercise 2",
          "11 - Exercise 3",
          "12 - Exercise 4",
          "13 - Exercise 5"
        ],
        "Session 5 : God's Training II": [
          "0 - Session Intro",
          "1 - Recap",
          "2 - Function Input Output",
          "3 - Variable's Scope",
          "4 - Class & Object",
          "5 - Debug",
          "6 - Update Function",
          "7 - User Input",
          "8 - Exercise 1"
        ],
        "Session 6 : Playing God": [
          "0 - Session Intro",
          "1 - Setup Scene",
          "2 - Make Controller",
          "3 - Controlling Components",
          "4 - Checking Coliision",
          "5 - Instantiate",
          "6 - Bullet Script",
          "7 - Damage System",
          "8 - Organize Project",
          "9 - Recap",
          "10 - HP System",
          "11 - Boss AI",
          "12 - Win Lose Condition",
          "13 - Restart System",
          "14 - Minion Movement",
          "15 - Spawner System",
          "16 - Boss Intro",
          "17 - Audio",
          "18 - Score System",
          "19 - Saving Data",
          "20 - Set Movement Boundary",
          "21 - Make it 3D"
        ],
        "Session 7 : Visual Enhancement": [
          "0 - Session Intro",
          "1 - Setup Project",
          "2 - Basic Lighting and Skybox",
          "3 - Postprocessing",
          "4 - VFX Shader Introduction",
          "5 - UV Animation",
          "6 - Trail Renderer",
          "7 - Particle System I",
          "8 - Particle System II"
        ],
        "Session 8 : Optimization": [
          "0 - Session Intro",
          "1- Introduction",
          "2 - Prepare Project",
          "3 - Profiling Method",
          "4 - Profiling Method II",
          "5 - Framerate Problem",
          "6 - Lightmap",
          "7 - Occlusion Culling",
          "8 - LOD & Normal Map",
          "9 - Mipmap",
          "10 - Texture Atlas & Quality Setting",
          "11 - Memory Problem"
        ],
        "Session 9 : 2D World": [
          "0 - Session Intro",
          "1 - Project Setup",
          "2 - 2D Intro",
          "3 - Sprite Renderer Component",
          "4 - Animator Component",
          "5 - Jump and Some Physics2D",
          "6 - Jump Statemachine",
          "7 - Running Around",
          "8 - Death Statemachine",
          "9 - Setup Scene",
          "10 - Autoscroll",
          "11 - Finish"
        ]
      },
      "requirements": [
        "1. Ability to understand Thai language",
        "2. Have a personal computer or laptop (Should be able to run Unity3D)"
      ],
      "description": "The Game Making Starter Kit is made in authorized partnership with Unity Technologies.\n\nIf you want to create your dream game, you’ve come to the right course. With the specialized and refined lesson delicately crafted by Cloud Colour Games, which aims to help you make your dream game comes true.\n\n\nInstall basic of game making from the mindset, rational game production pipeline, then expand it to the core of game design and game making, which will stand the test of time.\n\n\nThe lesson is fully packed with many continuous examples which you are able to start creating your dream game parallel with the lesson. With an easy-to-understand and easy-going instructor who recognized as a veteran in the game industry.\n\n\nNo basic programming skills ? No problem, because we start from zero.\n\n\nIt’s never too late to start !\nNo matter who you are, college, university students, or adults are all eligible with Game Making Starter Kit, because we emphasize and support every student to the global standard skills.\n\nDon’t hesitate ! Apply Now !",
      "target_audience": [
        "1. Thais",
        "2. College student, University students, and people who interested to make game without any programming knowledge"
      ]
    },
    {
      "title": "Aprende a crear un videojuego Endless Runner en 3D con Unity",
      "url": "https://www.udemy.com/course/aprende-a-crear-un-videojuego-endless-runner-en-3d-con-unity/",
      "bio": "Aprende las bases para crear un videojuego de tipo Endless Runner en 3D con Unity y el lenguaje de programación C#.",
      "objectives": [
        "Aprenderás a programar videojuegos con Unity 3D utilizando el lenguaje de programación C#.",
        "Aprende las bases de un juego Endless Runner.",
        "Potenciarás tus conocimientos de Programación con C#.",
        "Aprenderás la estructura de un videojuego.",
        "Aprenderás a utilizar patrones de Programación de nivel intermedio.",
        "Comprender la reutilización de Objetos para mejorar el rendimiento de un videojuego.",
        "Aprenderás a crear un controlador de audio.",
        "Conocerás como crear una tienda dentro del juego."
      ],
      "course_content": {
        "Introducción": [
          "Video Promocional",
          "Información Importante",
          "Nueva Comunidad",
          "Únete al canal de Discord",
          "Archivos del Curso"
        ],
        "Creación del Personaje": [
          "Introducción",
          "Mover Personaje",
          "Movimiento Horizontal",
          "Carril Central",
          "Saltar y Deslizar",
          "Agregar Animaciones",
          "Estados del Juego",
          "Singleton Pattern",
          "Proyecto Sección"
        ],
        "Creación del Entorno": [
          "Introducción",
          "Crear Pisos",
          "Crear un Bloque",
          "Añadir Props",
          "Añadir nuevos Bloques",
          "Bloque de Trenes",
          "Reto: Crea tus Bloques",
          "Proyecto Sección"
        ],
        "Generación de Mundo": [
          "Introducción",
          "Configuración de un Bloque",
          "Cargar Bloques",
          "Object Pooler",
          "Obtener Bloques del Pooler",
          "Generar Bloques",
          "Movimiento de Cámara",
          "Reutilizar Bloques",
          "Mover Trenes",
          "Proyecto Sección"
        ],
        "Añadir Items": [
          "Introducción",
          "Crear Monedas",
          "Añadir Monedas",
          "Recoger Monedas",
          "Monedas en Bloques",
          "Reto: Crea tus Monedas en Bloques",
          "Añadir Potenciador Puntaje",
          "Añadir Potenciador Imán",
          "Modificar Diamantes",
          "Seleccionar Potenciadores",
          "Reto Final: Completa tus Bloques",
          "Proyecto Sección"
        ],
        "Interfaz de Usuario": [
          "Introducción",
          "Menú de Inicio",
          "Menú Game Over",
          "Proyecto Sección"
        ],
        "Crear Tienda Personajes": [
          "Introducción",
          "Preparar Canvas",
          "Mostrar Preview del Personaje",
          "Actualizar Costo de Personajes",
          "Comprar y Seleccionar Personaje",
          "Cargar Personaje Seleccionado",
          "Proyecto Sección"
        ],
        "Añadir Efectos": [
          "Introducción",
          "Efecto Cielo",
          "Post Processing",
          "Sound Manager"
        ],
        "Final del Curso": [
          "Gracias por comprar el Curso",
          "Proyecto Final"
        ],
        "Continua Aprendiendo": [
          "Bonus"
        ]
      },
      "requirements": [
        "Conocimientos básicos en el manejo de Unity y Programación con C#",
        "Unity versión 2020.3",
        "Tener un ordenador o portátil que pueda correr Unity"
      ],
      "description": "Bienvenidos a todos al nuevo curso de desarrollo de videojuegos orientado a la creación de un Endless Runner en 3D con Unity 2020.3 donde vas a aprender las bases para poder crear un juego de unos de los géneros más jugados en dispositivos móviles, consolas y PC. Además, vamos a usar el lenguaje de programación de C#, el cual vamos a practicar con varios ejemplos reales del desarrollo de un Endless Runner.\nDurante este curso aprenderemos como desarrollar las características que conforman a este género de videojuegos, como optimizar el rendimiento utilizando un patrón de programación, como trabajar con modelos 3D y la creación de un mundo infinito. En cuanto a la programación veremos temas de nivel básico, y muchos de nivel intermedio. Este curso espera tomar tus conocimientos actuales y potenciarlos a medida que avanzamos en las secciones.\nAlgunos de los temas que veremos a detalle en este curso son:\nCreación de Personaje.\nTrabajar con Modelos 3D.\nGeneración de niveles.\nCreación de un controlador de audio.\nCreación de una tienda de personajes.\nGuardar datos utilizando el sistema PlayerPrefs de Unity.\nComprender como trabajar con la Interfaz de Usuario (UI).\nCrear un sistema de Estados para controlar nuestro videojuego.\nCrear Items y Potenciadores.\nEntender el uso del paquete Post Processing.\nMejorar el rendimiento del videojuego empleando el patrón Object Pooler.\nUsar el Singleton Pattern para mejorar la comunicación entre clases.\nEl curso está orientado a estudiantes de nivel básico con conocimientos de Unity y C#, ya que trataremos muchos temas de nivel Básico-Intermedio. Iremos paso a paso, construyendo el juego desde cero, explicando todo a detalle.\n¡Nos vemos en clase!\n¡Empecemos a crear videojuegos!",
      "target_audience": [
        "A todos los estudiantes que quieran potenciar sus conocimientos de Programación en C#.",
        "A todos los estudiantes que deseen aprender a crear su primer videojuego de tipo Endless Runner.",
        "A todos los estudiantes que quieran aprender mecánicas reales de Videojuegos.",
        "A todos los estudiantes que quieran profundizar en el motor de videojuegos de Unity."
      ]
    },
    {
      "title": "Débutez et réaliser un Quizz Game pour Android avec UNITY3D",
      "url": "https://www.udemy.com/course/debutez-et-realiser-un-quizz-game-pour-android-avec-unity3d/",
      "bio": "Maîtrisez l' UI (USER INTERFACE) de UNITY3D par la pratique",
      "objectives": [
        "Programmer en C# dans Unity3D",
        "Maîtriser l' UI (User Interface) d'Unity3D",
        "Développer des jeux vidéo de type QuizGame pour Android"
      ],
      "course_content": {
        "Débuter avec UNITY3D": [
          "Découverte de l'interface",
          "Les Objets 3D",
          "La Physique",
          "Les Composants",
          "Matériaux & matériaux physique",
          "Gestion des scénes",
          "Les Prefabs",
          "Asset Store",
          "Standart Assets",
          "Skybox",
          "Terrain",
          "Wind",
          "Light",
          "Audio",
          "Les Bases d'Unity3D"
        ],
        "Les Bases du C#": [
          "Scripts et méthodes",
          "Les Variables",
          "Conditions",
          "Array",
          "Les Boucles",
          "Les Bases du C#"
        ],
        "Utilisation des API d' Unity3D": [
          "Les Vecteurs - Vector2 & Vector3",
          "Get Component - Modification des composants par script",
          "Gestion des touches clavier (input) et déplacements",
          "Appliquer une force a un objet - Rigidbody",
          "Les Collisions d'objets",
          "Raycast - Tester la présence d'un objet",
          "Coroutine - Pause dans l' exécution d'un script",
          "Introduction a l'animation et l'animator",
          "Accéder a une variable depuis un autre objet",
          "Instantiate - Spawner des objets",
          "Changement de scène et compilation",
          "Les Apis d'Unity"
        ],
        "L' User Interface d'UNITY3D": [
          "Présentation de l'UI et des canvas",
          "UI Text - Champ Texte",
          "UI Image - Les Images",
          "UI Canvas",
          "Point de Pivot et Point d' Ancrage",
          "UI Buttons - Les boutons",
          "UI Panel - Container",
          "UI Toggle - Cases a cocher",
          "UI Slider - Curseur de défilement",
          "UI ScrollRect et Mask",
          "UI Scrollbar - Barre de défilement",
          "UI DropDown - Menu déroulant",
          "UI ScrollView - Défilement de vue",
          "UI InputField - Saisie de Texte",
          "Events System & Events Trigger",
          "Layouts - Mise en page",
          "Canvas group & UI Effects",
          "User Interface UNITY3D"
        ],
        "Créer un Quizz Game": [
          "Introduction",
          "Mise en place du menu du Quizz",
          "Gestion des questions (Array)",
          "Eviter les doublons de question (List)",
          "Extraction des propositions (Split)",
          "Création des boutons et affichage des propositions",
          "Affichage de la solution en cas de mauvaise reponse",
          "Limitation du clic sur les boutons",
          "Afficher la question suivante",
          "Game Over",
          "Gestion du score",
          "Gestion du meilleur score",
          "Script du menu",
          "Limiter le temps de réponse (ProgressBar)",
          "Création d'un Joker 50/50",
          "Projet complet du QuizzGame"
        ],
        "Compilation pour plateforme ANDROID": [
          "Installation SDK Android et JDK Java",
          "Paramétrages de la compilation (PlayersSettings)",
          "Installation du Quizz sur Smartphone Android"
        ]
      },
      "requirements": [
        "Unity installé sur ta machine",
        "De la motivation !"
      ],
      "description": "Bienvenue dans cette formation complète sur l' User Interface d' Unity pour débutants ! Cette formation a pour vocation de vous apprendre à maîtriser :\nle langage de programmation C#\nle moteur de jeu Unity\nl' Interface Graphique (User Interface).\nVous apprendrez à utiliser ces technologies conjointement ou séparément pas à pas.\nTous les chapitres sont enregistrés en HD  pour que vous puissiez tout voir clairement pendant le cours (vous pouvez regarder les previews gratuits).\nJe répondrai personnellement à vos questions si vous en avez, et je fournirai autant d'aide que possible pour vous aider à maîtriser  nity3D.\nN'attendez plus et cliquez sur Suivre ce cours en haut à droite. C'est parti !",
      "target_audience": [
        "Ce cours s'adresse aux débutants en programmation, aux débutants en C# et Unity, ainsi qu'à tous ceux qui sont familiers d'autres technologies mais pas de celles-ci en particulier. Si vous avez déjà un niveau avancé en C# et Unity, ce cours n'est donc pas pour vous !"
      ]
    },
    {
      "title": "Unity + REST API + Node.js : Banco de Dados Online (2020)",
      "url": "https://www.udemy.com/course/unity-rest-api-node-js-banco-de-dados-online/",
      "bio": "O 1º Curso de Unity com REST API e Node.js para Ensinar Você a Criar um Banco de Dados Online!",
      "objectives": [
        "Criar Servidor em Node js;",
        "Criar Servidor seguindo os padrões REST;",
        "Salvar dados no Banco de Dados Online com Unity;",
        "Acessar dados no Banco de Dados Online com Unity;",
        "Introdução a Nodejs;",
        "Introdução a MySQL;",
        "Introdução a REST API;",
        "Introdução a MongoDB;"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Instalação de Softwares - NOVO": [
          "Aula 01 - Unity",
          "Aula 02 - VSCode",
          "Aula 03 - Node e NPM",
          "Aula 04 - Postman",
          "Aula 05 - MySQL MongooDB"
        ],
        "Instalação de Softwares - ANTIGO": [
          "Instalando os Softwares",
          "Instalando Softwares Complementares"
        ],
        "Testando 3 API diferentes": [
          "Aula 01 - Exemplos de API"
        ],
        "Conceitos Iniciais": [
          "Node - Entendendo os Conceitos Iniciais",
          "Node - Functions",
          "Node - Variaveis Var, Let e Const"
        ],
        "Node": [
          "Node - Criando Projeto com Node",
          "Node - Criando servidor com Node.js",
          "Node - Criando Métodos HTTP",
          "Node - Testando com Postman",
          "Node - Passagem de Parâmetros via URL",
          "Node - Simulando Dados - Parte1 (GET + ID)",
          "Node - Simulando Dados - Parte 2 (POST)",
          "Node - Simulando Dados - Parte 3 (DELETE)",
          "Node - Simulando Dados - Parte 4 (PUT)",
          "Node - Criando Banco de Dados - MongoDB",
          "ATENÇÂO",
          "Node - Aula Correção MLAB para MongoDB",
          "ATENÇÃO para a Conexão",
          "Node - Preparando Modelo Schema Mongoose",
          "Node - Banco de Dados - INSERT",
          "Node - Banco de Dados -SELECT",
          "Node - Banco de Dados - UPDATE",
          "Node - Banco de Dados - DELETE",
          "Node - Padronizando os Retornos",
          "Scripts"
        ],
        "Unity": [
          "Unity - Criando Projeto + Scripts",
          "Unity - Criando Request GET",
          "Unity - Criando Request GET + ID",
          "Unity - Criando Request POST",
          "Unity - Criando Request PUT",
          "Unity - Criando Request DELETE",
          "Unity - Criando Função Callback para Preencher o PlayerList"
        ],
        "Node - Entendendo Promise": [
          "Node - Entendendo Promise"
        ],
        "Introdução a MySQL": [
          "Node - Apresentação do MySQL - Parte 1",
          "Node - Apresentação do MySQL - Parte 2"
        ],
        "Unity + Node - Criando Janela Login": [
          "Criando Tela de Login - Aula 01 - Apresentação do Resultado",
          "Criando Tela de Login - Aula 02 - Projetando e Organizando no Trello",
          "Criando Tela de Login - Aula 03 - Unity - Criando Projeto",
          "Criando Tela de Login - Aula 04 - Unity - Criando Interface - Parte 1",
          "Criando Tela de Login - Aula 05 - Unity - Criando Interface - Parte 2",
          "Criando Tela de Login - Aula 06 - Unity - Criando um Gerenciador de Menu",
          "Criando Tela de Login - Aula 07 - Unity - Criando Função de Login",
          "Criando Tela de Login - Aula 08 - Unity - Criando Função de Cadastro",
          "Criando Tela de Login - Aula 09 - Node - Criando Servidor REST Básic",
          "Criando Tela de Login - Aula 10 - Node - Criando Métodos GET e POST",
          "Criando Tela de Login - Aula 11 - Unity - Criando Conexão REST",
          "Criando Tela de Login - Aula 12 - Unity - Criando Conexão REST (GET)",
          "Criando Tela de Login - Aula 13 - Unity - Criando Conexão REST (POST)",
          "Criando Tela de Login - Aula 14 - Unity - Criando Função de Mensagem na Tela",
          "Criando Tela de Login - Aula 15 - Unity - Configurar Preenchimento Automático",
          "Criando Tela de Login - Aula 16 - Node - Criando Base e Tabela Login",
          "Criando Tela de Login - Aula 17 - Node - Criando Conexão Node x Banco de Dados",
          "Criando Tela de Login - Aula 18 - Node - Criando Validações",
          "Criando Tela de Login - Aula 19 - Node - Criando SELECT GET Login - Parte 1",
          "Criando Tela de Login - Aula 20 - Node - Criando SELECT GET Login - Parte 2",
          "Criando Tela de Login - Aula 21 - Node - Criando INSERT POST Register - Parte 1",
          "Criando Tela de Login - Aula 22 - Node - Criando INSERT POST Register - Parte 2",
          "Criando Tela de Login - Aula 23 - Node - Criando Criptografia para Senha",
          "Criando Tela de Login - Aula 24 - Node - Criando Background"
        ]
      },
      "requirements": [
        "Possuir um Computador capaz de rodar a plataforma Unity3D;",
        "Possuir uma conexão com a Internet;",
        "Recomendável possuir noções básicas da linguagem C#;",
        "Recomendável possuir noções básicas da plataforma Unity3D;",
        "Vontade de Aprender ;)"
      ],
      "description": "Totalmente inédito!!!\nEsse curso foi feito para ensinar você a criar seu Banco de Dados Online para salvar os dados importantes dos seus jogadores, assim como Informações de Como o seu Jogo é Utilizado.\n\n\nIremos abordar a configuração do servidor, banco MySQL, MongoDB e até como hospedar o seu próprio servidor na nuvem!\n\n\nCom o seu próprio servidor, o leque de opções se torna muito maior, você pode criar tela de Login e Cadastro, inventario online onde o jogador pode visualizar seus itens no site do seu jogo ou até propriedades dinâmicas.\n\n\nJá imaginou lançar aquele evento customizado de Halloween sem ter que fazer Upload do seu Jogo e aguardar os jogadores baixarem a atualização?\n\n\nVocê pode fazer o evento começar com um click, e imediatamente o evento irá inicia para todos os jogadores simultaneamente!\n\n\nVocê também pode saber quantas vezes as pessoas abrem seu jogo por dia...\nQuantas horas o jogador fica no seu game...\nOnde os jogadores possuem um alto nível de dificuldade em seus mapas, quais inimigos são mais difíceis de serem superados e muito mais...\n\n\nSua imaginação é seu limite!!!\n\n\nEssa técnica  permite que você tenha informações reais dos seus jogos para que você possa melhorar eles cada vez mais!\n\n\nSaiba o que as pessoas mais gostam no seu jogo, assim como as coisas que frustram seus jogadores!\n\n\nReceba dados em Tempo Real!!!\n\n\nNão deixe seu jogo morrer por não saber onde você deve melhorar.",
      "target_audience": [
        "Iniciantes ou Profissionais;",
        "Apaixonados por jogos, que estejam buscando melhorar e crescer cada vez mais!"
      ]
    },
    {
      "title": "アンリアルエンジンのブループリントで学ぶヴィジュアルプログラミング/算数ゲーム・じゃんけんゲームを作ろう",
      "url": "https://www.udemy.com/course/unreal-engine-4-blueprint/",
      "bio": "ゲームの統合開発環境である「アンリアルエンジン：UnrealEngine4（UE4）」のブループリント機能を中心に「算数ゲーム」「じゃんけんゲーム」の２つのミニゲームを制作し、ゲーム開発に必要なプログラミングの基礎力を身に付けます。",
      "objectives": [
        "UE4の基本的な操作を習得することができる",
        "UE4のブループリントを用いて「算数ゲーム」「じゃんけんゲーム」を作成できるようになる",
        "UE4のブループリント機能で使用するプログラミング・文法を理解できるようになる",
        "ゲーム開発の基本的なフロー（設計、コーディング、テスト、パッケージ化）を理解できる",
        "２つのゲームを【最後まで】完成することができる"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "算数ゲームをつくろう": [
          "1. 作成するゲーム内容、得られる知識",
          "ファイルのダウンロード",
          "2. プロジェクトを作成する",
          "3. ブループリントでHello Worldを画面に表示する",
          "4. ブループリントで足し算ゲームを作成する",
          "4.1 新規レベル（RandomPlusGame）を作成・保存",
          "4.2 ブループリント(BP_RandomPlusGame)を作成",
          "4.3 足し算の実装",
          "4.4 足し算の引数を変数化",
          "4.5 足し算を関数化",
          "4.6 ランダムの数値を足し算する関数(RandomCalculation)を作成",
          "4.7 キーボード入力で答えを入力",
          "4.8 正解判定",
          "4.9 算数ゲーム(足し算のみ)化",
          "5. 計算方法(足し算、引き算、掛け算、割り算)をランダムに修正する",
          "5.1 新規レベル（RandomCalcGame）を作成・保存",
          "5.2 BP_RandomPlusGameを複製して、BP_RandomCalcGameを作成",
          "5.3 引き算、掛け算、割り算を実装",
          "5.4 関数RandomCalculationの修正",
          "5.5 算数ゲームの計算方法のランダム対応",
          "6. UMGの作成・表示 （ウィジェットブループリント）",
          "6.1 新規レベル（DispWidget）を作成・保存",
          "6.2 画像ファイルのインポート",
          "6.3 ウィジェットブループリント(WBP_MathGameOutline)を作成",
          "6.4 ウィジェットブループリントエディタについて",
          "6.5 ウィジェットの配置",
          "6.5.1 Imageを使用してアウトライン背景を表示",
          "6.5.2 Textを配置して計算式を作成",
          "6.5.3 HorizonBoxを使用して、1~9のButtonを横並びに配置する",
          "6.5.4 Imageを使用して結果判定の画像を配置",
          "6.6 レベルブループリントの編集",
          "6.6.1 ウィジェットを表示",
          "6.6.2 マウスカーソルを常に表示",
          "6.6.3 ESCキーでゲームを終了",
          "7. UMGからゲームを実行できるようにする",
          "7.1 新規レベル（MathGame）を作成・保存",
          "7.2 WBP_MathGameOutlineを複製して、WBP_MathGameを作成",
          "7.3 背景をアウトラインがない画像に変更",
          "7.4 WBP_MathGameOutlineからWBP_MathGameを表示するようにレベルブループリントを修正",
          "7.5 ウィジェットブループリントの基本機能を実装",
          "7.5.1 ButtonのClickイベント",
          "7.5.2 TextのTextプロパティの値を変更",
          "7.5.3 Imageの画像切り替え",
          "7.5.4 Imageの表示/非表示",
          "7.6 BP_RandomCalcGameの処理を参考にWBP_MathGameを実装",
          "7.6.1 BP_RandomCalcGameから変更するポイント",
          "7.6.2 BP_RandomCalcGameから変数、RandomCalculationを移植",
          "7.6.3 ボタンのクリックイベントをTextBlock_NumAのTextに設定",
          "7.6.4 計算とボタンの入力値を判定して結果画像と答えを表示",
          "7.6.5 計算と入力判定のループ化",
          "8. テスト項目票の作成、デバッグ",
          "8.1 そのゲームちゃんと動くの？",
          "8.2 ゲーム内容からテスト項目の抽出",
          "8.3 テスト項目票を作成して、テストを実施",
          "8.4 ブループリント、関数単位のテストするためのデバッグ方法について",
          "8.5 ブラックボックステスト、ホワイトボックステスト",
          "8.6 作りたいゲームの作り方、工程に対応するテスト",
          "9. パッケージ化",
          "9.1 配布用パッケージにするためのプロジェクト設定",
          "9.2 Windows(64ビット)でパッケージ化",
          "9.3 パッケージサイズをより小さくする"
        ],
        "じゃんけんゲームをつくろう": [
          "1.作成するゲーム内容、得られる知識",
          "ファイルのダウンロード",
          "2.プロジェクトを作成する",
          "3.じゃんけんゲームの作成",
          "3.1 新規レベル（Game）を作成・保存",
          "3.2 ブループリント(BP_JankenGameController)を作成",
          "3.3 簡単なじゃんけんゲームを実装",
          "3.3.1 プレイヤーはキーボード入力でグー、チョキ、パーを出力",
          "3.3.2 関数:PlayEnemyJanken (敵はランダムでグー、チョキ、パー)",
          "3.3.3 プレイヤーと敵のじゃんけん結果から勝敗を判定する関数:JudgeJankenを作成",
          "3.3.4 作成した関数を使ってじゃんけんゲームを実装",
          "4. 列挙型を使ってエラーが少ない処理にする",
          "4.1 列挙型:EJankenを作成",
          "4.2 列挙型:EJankenResultを作成",
          "4.3 関数:PlayEnemyJankenのアウトプットの型をEJankenに変更",
          "4.4 関数: JudgeJankenのインプットの型をEjanken,アウトプットの型をEJankenResultに変更",
          "4.5 関数のインプット・アウトプットの変更によるエラー修正",
          "5. 配列を使って5回勝負の結果を出力する",
          "5.1 フローを5回勝負に変更する",
          "5.2 変数の追加(配列の変数)",
          "5.3 配列の操作",
          "5.4 フローの実装",
          "5.5 カスタムイベントを作成して処理を切り離す",
          "6. 構造体を使って出力する結果の情報を増やす",
          "6.1 構造体:FJankenResultを作成する",
          "6.2 変数の追加(構造体の配列の変数)",
          "6.3 bWinResultを使用している箇所をFJankenResultsに置き換える",
          "7.じゃんけんゲームのUI作成",
          "7.1 UIに使用する画像のインポート・設定",
          "7.2 ウィジェットブループリントの操作のおさらい",
          "7.3 ゲームのじゃんけん選択画面を作成する",
          "8. GameMode,GameStateを作成して、ゲームの状態を中継する",
          "8.1 ウィジェットブループリントとゲームロジックの状態を中継する仕組みを作成する",
          "8.2 BP_GameStateを作成する",
          "8.3 BP_GameModeを作成する",
          "8.4 WBP_Gameのウィジェットにバインドを作成して、BP_GameStateの値を反映させる",
          "8.5 WBP_Gameを表示する",
          "8.6 ゲームの状態を中継する仕組みの説明",
          "8.7 BP_JankenGameControllerの変数をBP_GameStateに移行する",
          "8.8 BP_GameStateに変数Initializeを作成し、初期化処理を置き換える",
          "8.9 BP_JankenGameControllerの処理をBP_GameStateの変数を使用するように変更する",
          "8.10 BP_GameStateのCallJankenStrに文字を設定する",
          "8.11 BP_GameStateの変数をWBP_Gameのウィジェットにバインドする",
          "9.ウィジェットブループリントのイベントをブループリントで受け取って処理する",
          "9.1 WBP_GameのButton_Janken_Guをクリックしたら、グーを選択した処理を実行するように実装する",
          "9.2 Button_Janken_Choki,Button_Janken_Paも同様にクリックしたら、処理を実行するように実装する",
          "9.3 MouseOverした際にプレイヤーのじゃんけん画像が変更するように実装する",
          "10. 結果を表示するUI作成",
          "10.1 WBP_GameResultの作成",
          "10.2 ウィジェットの配置",
          "10.3 WBP_GameResultの表示",
          "10.4 コンテニューボタンでWBP_GameResultを非表示にして、ゲームを再開",
          "10.5 WBP_GameResultに結果情報を表示",
          "10.6 FJankenResultを表示するWBP_JankenResultを作成",
          "10.6.1 WBP_JankenResultのUIを作成",
          "10.6.2 じゃんけんの画像を取得する関数:GetJankenTextureを作成",
          "10.6.3 じゃんけんの勝敗画像を取得する関数:GetResultGameTextureを作成",
          "10.6.4 WBP_JankenResultに画像を設定する関数:GetResultGameTextureを作成",
          "10.7 WBP_GameResultのVerticalBox_JankenResultにWBP_JankenResultを表示す関数：SetJankenRes",
          "10.8 BP_JankenGameControllerからSetJankenResultsを呼び出して、じゃんけんの結果を表示する",
          "10.9 PrintStringで出力している処理を削除",
          "11. タイトルを表示するUI作成",
          "11.1 新規レベルTitleを作成",
          "11.2 WBP_Titleの作成",
          "11.3 ウィジェットの配置",
          "11.4 ブループリント：BP_TitleControllerを作成",
          "11.5 WBP_Titleにボタンのイベントディスパッチャを追加",
          "11.6 BP_TitleControllerにボタンのイベントをバインド処理を実装",
          "11.7 Loading画面 WBP_Loadingを作成",
          "11.8 レベル遷移前にLoading画面を表示",
          "11.9 WBP_GameResultのタイトルボタンからTitleレベルに遷移",
          "12. メニュー画面の作成",
          "12.1 WBP_Menuの作成",
          "12.2 WBP_Menuを表示",
          "12.3 WBP_Menuのボタンからイベントディスパッチャを呼び出す",
          "12.4 WBP_Menuのボタンイベントをバインドする",
          "12.4.1 再開ボタンのイベントにバインド",
          "12.4.2 タイトルボタンのイベントにバインド",
          "12.4.3 終了ボタンのイベントにバインド",
          "13. 音の追加",
          "13.1 音データのインポート",
          "13.2 BGMがループするようにキューを作成する",
          "13.3 BGMを再生する",
          "13.4 SEを再生する",
          "14. 解像度設定",
          "14.1 列挙型 EResolutionを作成",
          "14.2 ComboBoxにEResolutionのエニュミレータをすべて表示",
          "14.3 解像度を変える",
          "14.4 レベルを跨いで値を保持するためにBP_GameInstanceを作成",
          "14.5 解像度の設定を保存して、ゲーム開始時に読み込む",
          "15. テスト項目票の作成、デバッグ",
          "15.1 テスト項目票を作成して、テストを実施",
          "16. パッケージ化",
          "16.1 配布用パッケージにするためのプロジェクト設定",
          "16.2 Windows(64ビット)でパッケージ化",
          "16.3 パッケージサイズをより小さくする"
        ]
      },
      "requirements": [
        "基本的なPCの操作ができること",
        "UnrealEngine4が動作するPCがあること（推奨）",
        "本コースでは、UE4がダウンロードされたPCを用いて説明をします。手元にパソコンが無くても受講はできますが、コース内でいくつか実践レクチャーを実施しますので、ご自身のパソコンで実際に操作しながら進めていただく方が理解度が高まります。",
        "本コースは、Windows10のPCを用いて説明をします。UE4はMacOSでも動作しますが、OS個別の要件については関与しません。"
      ],
      "description": "UnrealEngine4（UE4）は、とても優れたゲームの統合開発環境です。ゲーム開発に必要なエディタがたくさん搭載されています。最近では、ゲーム開発だけではなく、建築・医療等、様々な分野で活用されてます。\nこのコースでは、UE4に搭載されているブループリント機能を用いて、ゲーム開発に必要なプログラミングを学習します。\n実践的なアプローチとして、「算数ゲーム」と「じゃんけんゲーム」の２つのコンテンツ制作を行い、UE4やブループリントの基礎的な使い方を学びます。\nUE4の「ブループリント ビジュアル スクリプティング システム（以下、ブループリント）」は、専用のエディタに表示される部品（パーツ）をマウスで繋いでいくだけでプログラミングができる機能です。\n特に、このコースでは「プログラミングのロジックを理解すること」にこだわって、学習を進めていきます。プログラミングのロジックを理解することは、プログラミングの基礎力を向上させることに直結します。\nそれでは、2つのゲームを作って、UE4によるゲーム開発の基本となるブループリント機能の使い方を学び、楽しみながらプログラミングの基礎力をつけていきましょう！",
      "target_audience": [
        "ーム開発をしたことのない初心者でも大丈夫",
        "UnrealEngine4を使って、簡単なゲームを作ってみたい人",
        "UnrealEngine4に書籍や参考書を読んで挑戦してみたが、挫折してしまった人",
        "UnrealEngine4の基本的な操作は知っているが、ブループリントの使い方を基礎から学習したい人",
        "UnrealEngine4を用いて、プログラミングの基礎力をつけたい人",
        "ゲーム開発の基本的なフロー（設計、コーディング、テスト、パッケージ化）に合わせて学びたい人",
        "簡単でも良いので１つのゲームを最後まで完成させたい人"
      ]
    },
    {
      "title": "Criação de Mundos, Mapas e Levels para Jogos 2D com Tiled",
      "url": "https://www.udemy.com/course/curso-tiled/",
      "bio": "Construir levels nunca foi tão fácil! Com Tiled você cria mundos inteiros para seu game em pouco tempo e se divertindo!",
      "objectives": [
        "CRIAR mapas/levels para Jogos 2D a partir de Tilesets",
        "DOMINAR as principais ferramentas do Tiled",
        "IMPORTAR os mapas criados na Godot Engine"
      ],
      "course_content": {},
      "requirements": [
        "Um computador PC, Mac ou Linux"
      ],
      "description": "Seja bem-vindo(a) ao curso de Criação de Mundos, Mapas e Levels para Jogos 2D com Tiled.\nCaso você não conheça o Tiled, segue uma breve descrição:\n\"Tiled é um editor de levels 2D que te ajuda a desenvolver o conteúdo do seu game. Sua função principal é editar mapas de tiles de várias formas, mas também suporta colocação livre de imagens, além de formas poderosas de descrever e parametrizar seu level para que sua engine de games possa ler de forma fácil.\"\nNeste curso, você aprenderá a utilizar o Tiled para criar Mundos, Mapas e Levels para seus Jogos 2D.\nComeçaremos aprendendo como fazer a configuração do Tiled, e em seguida, faremos um tour por cada ferramenta, mostrando na prática para quê ela serve e como utilizá-la! E como bônus, ainda mostrarei como importar os mapas criados na Godot Engine de forma inteligente!\nSe você sonha em criar um game 2D, este curso definitivamente te ajudará no processo! Então não perca tempo, inscreva-se já!\nAtenção: Este não é um curso de desenho! É um curso que ensina a utilizar Tilesets para criar Tilemaps!",
      "target_audience": [
        "DESIGNERS de que desejam aplicar suas artes em Jogos 2D",
        "DESENVOLVEDORES de Jogos, que querem se aprofundar na criação de levels",
        "QUALQUER um que tenha interesse em criar mapas para Jogos"
      ]
    },
    {
      "title": "Desenvolvimento de Games Completo com Construct 3 e Admob",
      "url": "https://www.udemy.com/course/carreiramobile/",
      "bio": "Aprenda a Criar 8 Jogos para Android, Monetizar com Admob e gerar Apk para Exportar ao Google Play para Gerar Dinheiro",
      "objectives": [
        "Criação de Games para Android",
        "Monetização com Admob",
        "Pixel Art para Games com Piskel",
        "Hospedagem de games em Website",
        "Geração de Apk para testes e Profissional",
        "Postagem de um jogo no Google Play",
        "Criação de Games com Construct 3"
      ],
      "course_content": {
        "Seja Bem vindo(a)": [
          "Grupo Oficial +Jogos extras",
          "Portfolio completo de Jogos",
          "Encontre mais jogos na Plataforma Oficial"
        ],
        "Plataforma estilo Super Mário": [
          "Conheça o game",
          "Player",
          "Cenário",
          "Caixa Surpresa",
          "Inimigos",
          "Mecânica",
          "Placar",
          "Mixagem de som"
        ],
        "Dino com Memória": [
          "Conheça o game",
          "Criando o Cenário",
          "Programando o Cenário",
          "Configurando o Player",
          "Colisões",
          "Memória"
        ],
        "Temporal Melting": [
          "Introdução ao Módulo",
          "Tela Menu",
          "Cenário",
          "Player",
          "Mecânica",
          "Fim de Jogo"
        ],
        "Breakout": [
          "Conheça o game",
          "Cenário",
          "Tijolos",
          "Configurando a bola",
          "Placar",
          "Mixagem de som e fim de jogo",
          "Construct 2"
        ],
        "Pong": [
          "Conheça o game",
          "Montando o cenário",
          "Players",
          "Configurando a bola",
          "Placar",
          "Mecânica"
        ],
        "Aprenda Pixel Art": [
          "Introdução ao Programa",
          "Silhuetas",
          "Linhas",
          "Sombras",
          "Frames"
        ],
        "Flappy Bird + Pixel Art": [
          "Conheça o game",
          "Introdução rápida ao programa (Assista se pulou o Módulo acima)",
          "Objeto 1: Cano",
          "Objeto 2: Pássaro",
          "Objeto 3: Chão laranja",
          "Objeto 4: Chão verde",
          "Objeto 5: Cenário do game",
          "Tela de Menu",
          "Criando o Cenário",
          "Comportamentos do Pássaro",
          "Movimento do Cenário",
          "Configuração dos canos",
          "Fim do Jogo",
          "Placar",
          "Colisões e Áudio"
        ],
        "Slitherio com Gamepad": [
          "Conheça o game",
          "Tela de Login",
          "Configurando a cobra",
          "Touchpad",
          "Touchpad 2",
          "Comida",
          "Inimigos",
          "Textos",
          "Colisões"
        ],
        "2Cars": [
          "Conheça o game",
          "Introdução e Menu",
          "Cenário base",
          "Carros",
          "Sistema de faixas",
          "Preparando colisões",
          "Colisoes",
          "Pontos e Fases",
          "Fim de Jogo"
        ]
      },
      "requirements": [
        "Ter interesse na Criação de Games, não é necessário nenhum conhecimento anterior."
      ],
      "description": "Com um número cada vez maior de ferramentas, mais espaço para divulgação e custos reduzidos, a produção de games deixou de ser privilégio de grandes empresas. E agora é opção de negócio para pessoas que sempre sonharam em trabalhar com jogos digitais.\nAtualmente, o mercado que mais produz renda com jogos, é o mercado mobile.\nSegundo o site GamingScan, o mercado de games para celular representa hoje o maior segmento da indústria, com um estimativa de 36% de todo o dinheiro que as empresas do ramo arrecadaram em 2019.\nEnquanto os jogos de Console correponderam a 32% e os games de PC por 23% da arrecadação\nE de acordo com o relatório da SuperData, as plataformas mobile faturaram em 2019, nada demais que US$ 64,4 bilhões. Os jogos para PC ficam atrás, com a soma de US$ 29,6 bilhões, enquanto consoles arrecadaram US$ 15,4 bilhões.\nA expectativa é que essa liderança crescente do segmento mobile, que era de 35% em 2018, continue se ampliando. A previsão da Newzoo, que faz análises de mercado para empresas de games, é que nesse ano os games de celular representem 38% do faturamento da indústria, e até 2022 cheguem a 41%.\nComo já era de se esperar, as principais fontes de receita para as empresas de games para celular são os anúncios e as microtransações. As microtransações, e outras formas parecidas de comprar coisas dentro dos aplicativos, são responsáveis por 43% de todo o faturamento da indústria de jogos mobile. A segunda principal fonte de lucros são as propagandas em vídeo, que representam 31% do total, mas se considerarmos todas as formas de propaganda combinadas, vemos que 53% de todo o dinheiro gerado nesses games vem dos anúncios.\nEnquanto isso, só 4% do faturamento são gerados pelo modelo tradicional que deu origem a indústria de games, em que você precisa pagar para ter acesso ao jogo. Esses 4% dizem respeito tanto ao modelo de compra única tradicional, quanto aos jogos que funcionam com assinatura, em que você tem que pagar mensalmente.\nNeste curso vamos criar 8 jogos:\n-> Jumper (C3)\n-> Platform Jungle (C3)\n-> Dino (C3)\n-> Breakout (C3)\n-> Pong (C2)\n-> FlappyBird (C2 + Piskel)\n-> Slither io (C2)\n-> 2cars (C2)\nEm seguida, você aprende:\n-> Criar conta Admob\n-> Colocar anúncio no seu game\n-> Criar um apk e um website para hospedá-lo\n-> Publicar na Play Store",
      "target_audience": [
        "Todos que tenham interesse em entrar para o Mercado dos desenvolvimento Mobile"
      ]
    },
    {
      "title": "Roblox Studio 2025: Crie, Publique e Monetize Jogos do Zero!",
      "url": "https://www.udemy.com/course/roblox-studio-2025-crie-publique-e-monetize-jogos-do-zero/",
      "bio": "Aprenda Roblox do zero ao avançado com scripts e UGCs práticos + programação Lua, monetização e publicação de jogos.",
      "objectives": [
        "Instalar e configurar o Roblox Studio para começar a criar seus jogos",
        "Criar sistemas de jogo avançados, como checkpoints, inventários e animações personalizadas.",
        "Publicar e monetizar seus jogos no Roblox, aprendendo a integrar UGCs e sistemas de venda de itens.",
        "Dominar ferramentas essenciais como Mover, Dimensionar, Girar e Transformar para manipular objetos em 3D com precisão.",
        "Criar e organizar modelos complexos através do agrupamento de objetos e uso eficiente de pastas.",
        "Utilizar APIs e DataStores para salvar progresso de jogadores e implementar placares globais.",
        "Usar assets 3D e texturas personalizadas para enriquecer seus jogos com visuais de alta qualidade.",
        "Integrar interatividade sem código, como portas funcionais, utilizando propriedades nativas do Roblox Studio.",
        "Desenvolver habilidades em lógica de programação com Lua, incluindo variáveis, loops, tabelas e funções.",
        "Entender a comunicação Cliente/Servidor, utilizando Remote Events e scripts para criar interações online."
      ],
      "course_content": {
        "Roblox Studio ( Interface, Uso e conceitos )": [
          "Instalando o Roblox Studio",
          "Abrindo o Roblox Studio pela primeira vez",
          "Ferramenta MOVER do Roblox Studio",
          "Ferramenta DIMENSIONAR do Roblox Studio",
          "Ferramenta GIRAR do Roblox Studio",
          "Ferramenta TRANSFORMAR do Roblox Studio",
          "Criando modelos - Agrupando objetos",
          "Toolbox: Assets 3D na caixa de ferramentas do Roblox Studio",
          "Três maneiras de importar Objetos 3D para o Roblox Studio",
          "Assets 3D de qualidade para o seu jogo no Roblox Studio",
          "Jogo de Anime? Cel Shading fácil no Roblox Studio",
          "Grupos de Colisão no Roblox Studio ( Collision Groups )",
          "Pastas x Modelos no Roblox Studio - Aproveitando o melhor desses dois!"
        ],
        "Programação Básica": [
          "Programação básica com LUA",
          "10 exemplos de como fazer o For no Roblox Studio",
          "8 exemplos do uso de Tabelas ( Array ) no Roblox Studio",
          "Funções no código LUA do Roblox Studio ( Scripting / Programação )",
          "Referências no código do Roblox Studio",
          "Condicionais ( If, ElseIf e Else ) e Booleanos no Roblox Studio",
          "Eventos no Roblox - Como detectar eventos dentro do seu jogo",
          "Singleton, Factory... Como usar Module Script no Roblox Studio",
          "Programação Orientada a... Tags?",
          "Erros acontecem... ( pcall no Roblox Studio )",
          "Erros? Bugs? Como depurar o seu código no Roblox Studio ( Print e Breakpoint )"
        ],
        "User Interface, Animação e Modelagem": [
          "Como criar um Menu no Roblox ( ScreenGui e ScreenOrientation )",
          "Use elementos de interface 2D no mundo 3D ( SurfaceGui e BillboardGui )",
          "Como ANIMAR FÁCIL no Roblox Studio",
          "Usando Objetos 3D na Interface 2D do Roblox ( ViewportFrame )",
          "Criando um Lobby para um jogo usando apenas o Roblox Studio",
          "Criando uma Tela de Loading⏳no #Roblox"
        ],
        "DataStore e APIs no Roblox: Seu Guia para Dados de Jogador Persistentes": [
          "Como salvar dados do seu jogo com DataStore no Roblox",
          "Global LeaderBoard no Roblox ( DataStore )",
          "Não perca dados no DataStore do Roblox",
          "Como usar Múltiplos DataStores no Roblox Studio ( DataStore )",
          "Script que chama API com HTTP Service no Roblox Studio",
          "Acessando informações do Guilded de dentro do Roblox!"
        ],
        "ChatGPT e Roblox: Uma Parceria Perfeita para Criar Jogos Incríveis": [
          "Como proteger o seu código da Inteligência Artificial do Roblox",
          "Como eu uso a Inteligência Artificial (ChatGPT) para me ajudar no Roblox Studio",
          "Abreviando números no Roblox Studio com ajuda do ChatGPT (AI)"
        ],
        "Aprenda Fazendo: Crie Jogos Divertidos e Funcionais no Roblox": [
          "É possível criar um jogo no Roblox em 60 minutos?",
          "Jogo estilo Tycoon no Roblox",
          "Script pronto para criar um Jogo de Sobrevivência no Roblox",
          "Script de Telecinese inspirado em Tears Of The Kingdom ( DragDetector )",
          "Script para Jogo 2D no Roblox ( GUI )",
          "Crie um jogo de Anime / Super Herói no Roblox - Script para Voar!",
          "Desvie de ataques em super-velocidade no Roblox - Script para Esquivar!"
        ],
        "Mergulhe no Mundo dos Obbies 2.5D: Crie Jogos Únicos de Obby no Roblox": [
          "Câmera fixa e Jogabilidade",
          "Plataformas Móveis",
          "Plataforma com Movimento Horizontal no Roblox ( AlignPosition e AlignOrientation",
          "Script de CheckPoints para o seu Obby no Roblox Studio",
          "Movimento de se abaixar no Roblox Studio ( contentProvider e Raycast )"
        ],
        "Praticando a Programação": [
          "Porta Automática no Roblox - Iniciante",
          "Modelando o andar de um prédio no Roblox Studio",
          "Porta sem usar código no Roblox Studio",
          "Porta Automática no Roblox - Avançado",
          "Construindo um Prédio Inteligente no Roblox Studio",
          "Randomizando Lojas em Prédios Inteligentes no Roblox Studio",
          "Como criar um placar no Roblox ( Leaderstats )",
          "Sistema de Moedas no Roblox! ( Parte 1 de 2 )",
          "Randomizando posições e coletando Moedas! ( Parte 2 de 2 )",
          "Module Script: Organizando a Lógica do seu Jogo no Roblox",
          "Controle a habilidade de ESCALAR OBJETOS no seu jogo",
          "Usando Morph no Roblox para mudar o seu personagem!",
          "Identificando se o jogador é PREMIUM",
          "Frames por Segundo, Heartbeat e Deltatime - Código baseado em Tempo!",
          "Script que faz o personagem brilhar no Roblox",
          "Visão de Raio-X no Roblox ( Highlight )",
          "Script que faz um Indicador de Dano pular no Roblox! ( BodyVelocity )",
          "Como reduzir o tempo de carregamento do seu jogo ( ContentProvider )",
          "Não coloque Scripts em qualquer lugar do Roblox Studio!",
          "Criando um RPG de Anime usando o Roblox Studio ( Modelagem de Dados )",
          "Desenvolvendo um PlugIn para o Roblox Studio",
          "O LAG pode atrapalhar o desenvolvimento do seu jogo no Roblox Studio?",
          "Clonando objetos no Roblox Studio na construção da sua fase!",
          "Sincronizando Servidores no Roblox ( MessagingService )",
          "Como equipar UGCs dentro do seu jogo no Roblox Studio ( HumanoidDescription )",
          "Testando a comunicação entre Servidores no Roblox Studio ( MessagingService )",
          "Gestão Avançada de Eventos no Roblox Studio: Heartbeat e RenderStepped",
          "Mutando e desmutando sons no Roblox Studio",
          "Videogame, Mobile, PC, VR? Como detectar a plataforma do Player"
        ],
        "Monetize Seus Jogos no Roblox: Crie e Venda UGCs de Sucesso": [
          "Ganhe Robux: Venda itens dentro do seu jogo!",
          "Como Vender UGCs no Roblox de Forma Segura",
          "Obtendo informações sobre os UGCs no Roblox Studio ( MarketplaceService )",
          "Proteja o seu UGC gratuíto contra Exploiters / Hackers ( MarketplaceService )"
        ]
      },
      "requirements": [
        "Um computador com Windows ou macOS capaz de rodar o Roblox Studio.",
        "Conta no Roblox para acessar a plataforma de desenvolvimento.",
        "Saber navegar pela internet e usar um computador para instalar softwares.",
        "Ideal para alunos a partir de 13 anos, mas crianças mais novas podem participar com supervisão de um responsável."
      ],
      "description": "Você já imaginou criar seus próprios jogos no Roblox Studio, mesmo sem nenhuma experiência prévia? Este curso é o ponto de partida ideal para transformar sua paixão por jogos em algo real e lucrativo. Com uma abordagem simples e prática, você aprenderá tudo do zero: desde instalar o Roblox Studio até publicar jogos que impressionam e engajam jogadores.\nAo longo do curso, você será guiado passo a passo, explorando a interface do Roblox Studio, aprendendo programação básica em Lua e dominando ferramentas para modelagem, animação e interatividade. Cada aula foi projetada para iniciantes, garantindo que você compreenda todos os conceitos essenciais para criar jogos incríveis.\nAlém das habilidades técnicas, você também aprenderá como monetizar seus jogos, desde a venda de itens UGC até estratégias avançadas para aumentar o engajamento e as receitas dos seus projetos. Tudo isso com exemplos práticos e exercícios aplicáveis, que tornam o aprendizado mais dinâmico e eficiente.\nEste curso é para você que quer começar do zero e dar seus primeiros passos no mundo do desenvolvimento de jogos. Não importa sua idade ou experiência: aqui, você encontrará o suporte, as ferramentas e o conhecimento necessários para criar e publicar seus jogos com confiança e criatividade. O futuro dos seus jogos começa aqui!",
      "target_audience": [
        "Qualquer pessoa com vontade de criar jogos interativos.",
        "Iniciantes que querem aprender a criar jogos no Roblox.",
        "Jovens interessados em transformar ideias em projetos reais.",
        "Gamers que desejam entender como os jogos são feitos.",
        "Educadores buscando ensinar programação de forma prática.",
        "Pais que querem incentivar a criatividade dos filhos.",
        "Futuros empreendedores de jogos no Roblox.",
        "Criadores de conteúdo que desejam engajar sua audiência.",
        "Desenvolvedores curiosos sobre a plataforma Roblox."
      ]
    },
    {
      "title": "Banco de dados SQLite com Unity",
      "url": "https://www.udemy.com/course/unity-sqlite/",
      "bio": "Use o melhor banco de dados mobile em seus jogos com Unity",
      "objectives": [
        "Usar SQLite de maneira multiplataforma em Unity Windows, Linux, MacOS, UWP, Android e iOS",
        "Usar a versão oficial do SQLiteorg, sem dependência de códigos de terceiros",
        "Compilar suas próprias DLLs do SQLite para Android usando o NDK",
        "Usar o padrão DAO (Data Access Object) para separar lógica de negócio (game) de dados",
        "Operações CRUD (Create, Read, Update, Delete)",
        "Criar uma scene onde um personagem interage com o database",
        "Utilizar diretivas de compilação para compilar códigos específicos a cada plataforma",
        "Compilar para as plataformas Windows, Linux, MacOS, UWP, Android e iOS",
        "Utilizar Delegates para resigtrar métodos",
        "2021: Atualizar o banco de dados após distribuir o game/app"
      ],
      "course_content": {
        "Arquivo do projeto": [
          "Arquivos",
          "Local das DLLs"
        ],
        "Preview": [
          "Preview"
        ],
        "Visão geral sobre o curso": [
          "000 Sobre O framework de geração SQL do curso"
        ],
        "Instalação dos Requisitos": [
          "000 Download e Instalação Unity - Windows",
          "001 Ativação Licença Personal Automática e Manual - Windows",
          "002 Instalação Visual Studio - Windows",
          "003 Instalação Git e Tortoise - Windows",
          "004 Adicionando módulo WebGL - Windows",
          "005 Instalação Unity & Visual Studio - MacOS",
          "006 Instalação Git - MacOS"
        ],
        "Criação do Projeto": [
          "001 Criação do Repositório",
          "002 Criação do projeto e pastas de plugins",
          "003 Download SQLite DLL e configuração de plataformas",
          "004 Download SQLite Souce Code e NDK",
          "005 Compilação do SQLite para Android",
          "006 Aplicando as plataformas nas libs do Android",
          "007 Compatibilidade com iOS",
          "008 Adicionando DLLs do Mono SQLite",
          "009 Testando a criação do banco de dados SQLite"
        ],
        "Criação do Database": [
          "001 Criando a conexão com Database",
          "002 Criando o database via código",
          "003 Comitando o projeto no Github",
          "004 Criando StreamingAssets",
          "005 Lendo de StreamingAssets (Editor, WP8, UWP, OSX, iOS)",
          "006 Lendo de StreamingAssets (Android)",
          "007 Testando a cópia do database",
          "008 Descobrindo o diretório de uma plataforma"
        ],
        "Criação de Tabelas no SQLiteStudio": [
          "001 Criando uma tabela no database",
          "002 Usando SQLiteStudio para visualizar o database",
          "003 Tipos de dados em SQLite",
          "004 Verificando os tipos de dados no SQLiteStudio",
          "005 ROWID, Primary Key e AutoIncrement",
          "006 Foreign Keys",
          "007 Aplicando ON DELETE e ON UPDATE",
          "008 Selects com Inner Join"
        ],
        "C# e SQLite": [
          "001 Criando tabela Character",
          "002 Criando tabela Weapon",
          "003 Insert data Weapon",
          "004 Insert Data Character",
          "005 Select Character",
          "006 Deletando um Character",
          "007 Atualizando um Character",
          "008 Commit Github",
          "009 Habilitando Foreing Keys",
          "010 Usando Extension Methods para habilitar FKs"
        ],
        "Interfaces em POO": [
          "001 Adicionando .NET Desktop ao VS2019",
          "002 Interfaces em C#",
          "003 Exemplo de uso de Interface"
        ],
        "Data Access Object - DAO": [
          "001 Apresentando o padrão DAO",
          "002 Organizando o projeto",
          "003 Criando Classes POCO",
          "004 Refatorando SqliteDataSource",
          "005 Especificando os métodos das Interfaces e DAOs",
          "006 Criando Interface para o SQLiteConnectionProvider",
          "007 Delete Character",
          "008 Update Character",
          "009 Set Character",
          "010 Get Character",
          "011 Delete Weapon",
          "012 Set Weapon",
          "013 Update Weapon",
          "014 Get Weapon",
          "Implementando Singleton Design Pattern",
          "Criando a classe GamesCodeDataSource",
          "017 Comitando as alterações"
        ]
      },
      "requirements": [
        "Conhecimento básico de Unity e C#",
        "Conhecimento básico de banco de dados SQL"
      ],
      "description": "O quê é ensinado?\nNesse curso, você aprenderá a usar SQLite de forma multiplataforma em Unity e C#, com incrível reaproveitamento de código entre diversas plataformas: Windows, UWP, Linux, MacOS, Android e iOS!\nComo será feito?\nVocê também aprenderá a criar seu próprio framework de acesso a dados com base no Design Pattern DAO (Data Access Object) que permite separar as responsabilidades das classes de acesso ao banco das classes com tarefas pertinentes ao jogo.\nClaro, também veremos o uso de comandos SQL para SQLite, e abordaremos as principais particularidades das tabelas SQLite como Rowid e ForeignKey, por exemplo, usando o SQLiteStudio para manipular nosso database.\nPrecisa de packages ou plugins?\nTodo o acesso a dados é feito de forma nativa em C# e com as DLLs oficials do SQLite, sem uso de frameworks externos ou ORMs de terceiros, permitindo independência total de códigos alheios.\nQual o workflow do curso?\nPrimeiramente, compilaremos as dlls do SQLite do site oficial para serem usadas em Android na Unity, e usaremos as dlls de acesso a dados da Unity.\nVeremos a criação do banco com uma ferramenta externa, o SQLite Studio, muito útil para manipular o banco de dados de forma visual.\nEm seguida, importaremos ele na Unity, e veremos como o banco deve ser usado em cada plataforma.\nVocê poderá acompanhar a criação de uma fase de game com assets gratuitos onde o banco é usado em cada plataforma, e poderá compreender melhor como usar dentro do seu próprio projeto pessoal.\nPor fim, uma nova seção foi adicionada com aulas sobre como lidar com atualizações na estrutura do banco de dados mesmo após o game ter sido publicado.\nNão é necessário conhecimentos avançados em Unity ou SQL, embora conhecimento básico sobre programação e SQL seja um requisito, porém, tudo será explicado/revisado à medida em que for necessário.\nAproveite e bons estudos!",
      "target_audience": [
        "Desenvolvedores Unity 3D"
      ]
    },
    {
      "title": "Unreal Engine 5: Curso de Desarrollo con Blueprints",
      "url": "https://www.udemy.com/course/unreal-engine-5-curso-de-desarrollo-con-blueprints/",
      "bio": "Domina el Arte del Desarrollo de Videojuegos",
      "objectives": [
        "Creación de videojuegos de calidad profesional",
        "Adquisición de una base sólida acerca de cómo programar con Blueprints desde cero hasta un nivel profesional",
        "Desarrollar un videojuego desde sus etapas iniciales hasta su compilación.",
        "Adquirir un conocimiento profundo acerca de las herramientas de Unreal Engine 5"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Archivos del curso",
          "Discord del curso",
          "IMPORTANTE! Descargar assets que faltan en FAB"
        ],
        "Primeros pasos": [
          "Creación de cuenta",
          "Explorar las plantillas de Unreal",
          "Ajustes importantes de las plantillas",
          "Cómo moverse por el viewport",
          "Manipular objetos",
          "¡Qué es un Static Mesh?"
        ],
        "Iluminación": [
          "Creación del nivel de prueba",
          "Auto Exposición y Post-Process Volume",
          "Lightmaps vs Lumen",
          "Resolución de los Lightmaps",
          "Directional Light",
          "Point Light y Light Complexity",
          "Spot Light",
          "Rectangular Light",
          "Sky Light",
          "HDRI Backdrop",
          "Niebla y luces volumétricas",
          "Lightmass Importance Volume",
          "Lightmass Portal",
          "GPU Lightmass",
          "Environment Lighting Tab",
          "Cielo nocturno",
          "Sun Position Calculator"
        ],
        "Práctica de iluminación": [
          "Importar y migrar assets del marketplace",
          "Suelos y paredes + leak de luces",
          "Pivo Offset y Pivot en Modelling Tools",
          "Paredes laterales",
          "Techo y vigas",
          "Muebles",
          "Props",
          "Iluminación final",
          "Iluminación volumétrica y ajustes de escalabilidad"
        ],
        "Empaquetado": [
          "Empaquetado del proyecto",
          "Instalación de Visual Studio"
        ],
        "Nanite": [
          "Quixel Megascans",
          "Introducción a Nanite",
          "Limitaciones de Nanite y soluciones a problemas comunes"
        ],
        "Breve introducción a los Sublevels": [
          "Subniveles de iluminación",
          "Fix para nivel oscuro al darle a Play"
        ],
        "Introducción a los Blueprints": [
          "Blueprints vs C++",
          "Eventos",
          "Funciones impuras",
          "Funciones puras",
          "Variables Integer",
          "Variables Float",
          "Variables más comunes",
          "Operaciones matemáticas con variables"
        ],
        "Control de flujo de Blueprints": [
          "Do Once",
          "Flip Flop",
          "Sequence",
          "Colapsar nodos",
          "Condiciones",
          "Resto de nodos de control de flujo"
        ],
        "Poner en práctica los blueprints aprendidos": [
          "Trigger Volumen y Set Actor Rotation",
          "End Overlap y Local Rotation",
          "Timeline",
          "Abrir y cerrar puertas",
          "Interpolación lineal",
          "Primer vistazo al blueprint del jugador",
          "Comunicación básica entre actores",
          "World Delta Seconds"
        ]
      },
      "requirements": [
        "No se necesita experiencia previa, sólo conocimientos básicos de informática básica."
      ],
      "description": "Curso dirigido por Sergio Domínguez, Instructor Autorizado de Unreal Engine certificado por Epic Games con más de 20 años de experiencia en la docencia y el desarrollo de videojuegos comerciales y educativos.\n¡Bienvenido al apasionante mundo de Unreal Engine! En este curso, exploraremos los fundamentos de la programación de Blueprints con Unreal Engine y te llevaré a través de una completa inmersión en la creación de juegos impactantes.\nComenzaremos con una introducción a la interfaz de Unreal Engine, donde te familiarizarás con sus herramientas y funciones clave. A medida que avancemos, profundizaremos en las técnicas de iluminación, abordando desde los conceptos básicos hasta las prácticas avanzadas. Aprenderás a utilizar las luces y sombras de manera efectiva, así como a crear atmósferas impresionantes para tus juegos.\nEn la siguiente etapa, nos sumergiremos en el mundo de los blueprints, el sistema de programación visual de Unreal Engine. Exploraremos las bases de los blueprints, permitiéndote crear interacciones y comportamientos personalizados para tus personajes y objetos en el juego. A medida que avancemos, te guiaré en el desarrollo de blueprints más avanzados, desbloqueando todo su potencial para crear experiencias únicas y envolventes. Llegarás a tener una base avanzada de Blueprints dominando la comunicación entre clases, herencia etc.\nEn la parte central del curso, nos centraremos en la creación de un juego de misterio y terror. Aprenderás a diseñar y desarrollar puzzles desafiantes, jumpscares impactantes y una narrativa intrigante. Te guiaré paso a paso en la creación de un juego envolvente que cautivará a los jugadores y mantendrá su atención hasta el final.\nFinalmente, te enseñaré a crear un menú para tu juego, permitiendo a los jugadores navegar por las diferentes opciones y exportar el juego completo para compartirlo con otros.\nAdemás, tendrás acceso a recursos descargables,  mi apoyo y guía personalizada en discord del curso, donde podrás resolver dudas y compartir tus avances con otros estudiantes.\nNo importa si eres un principiante absoluto o un desarrollador con experiencia en busca de nuevas habilidades, este curso te proporcionará las bases necesarias para crear tus propios juegos impactantes con Unreal Engine. ¡Únete a mí y comienza a dar vida a tus ideas más emocionantes hoy mismo!\".",
      "target_audience": [
        "A personas interesadas en desarrollar sus propios videojuegos de manera profesional.",
        "Apasionados del conocimiento que quieran profundizar en las herramientas que ofrece Unreal Engine 5."
      ]
    },
    {
      "title": "Unreal Engine 5 (UE5) でアクションゲームを作ってみよう! 初心者 ~ 中級者向け実践講座",
      "url": "https://www.udemy.com/course/unrealengine5-actiongame-tutorial/",
      "bio": "アクションゲーム制作を1から始めてパッケージ化まで一通り行っていくUE5実践チュートリアルです。既にUE5を少し学ばれており、一個ゲームを制作してみたい方におすすめです。ゲーム制作、一緒に楽しんでいきましょう!",
      "objectives": [
        "UE5でひとまずゲームを一個作ってみたい方",
        "実践形式のゲーム制作にチャレンジしたい方",
        "パッケージ化までの一通りの流れを把握したい方",
        "実践でのブループリントの作り方について学びたい方"
      ],
      "course_content": {
        "コースの紹介": [
          "制作するゲームとチュートリアルの紹介"
        ],
        "アクションゲームを作ってみよう！": [
          "①プロジェクトとアセットを用意する",
          "②ステージの環境を作る(背景アクタとライティング設定)",
          "③ステージの環境を作る(建築物の作成)",
          "④ステージのギミックを実装する(触れると落ちるステージの実装)",
          "⑤コインを実装する",
          "⑥何分何秒表示のタイマーを実装する",
          "⑦ゲームのリスタート機能を実装する",
          "⑧ステージクリアを実装する",
          "⑨ステージの追加と夜環境作り",
          "⑩ステージギミックを実装する(上下に移動する柱)",
          "⑪ステージ(レベル)の遷移を実装する",
          "⑫データのセーブ機能を実装する",
          "⑬プレイヤーのライフを実装する",
          "⑭ゲーム開始時の演出を作る",
          "⑮タイトル画面を実装する",
          "⑯ステージ選択画面を実装する",
          "⑰ゲームオーバーを実装する",
          "⑱容量削減してパッケージ化する",
          "⑲ゲームの完成とプレイ"
        ]
      },
      "requirements": [
        "UE5の最低限の知識(エディタ操作やブループリントに関する少しの知識)がある事が望ましいです。",
        "対象OSはWindowsです。Mac向けには解説を行っていないので適宜調べていただく必要があります。",
        "使用するバージョンはUE5(5.0.3)で言語はブループリントのみです。"
      ],
      "description": "【コースについて】\nプレイヤーを操作してステージをクリアしていくというシンプルなアクションゲームです。ゲーム開発において汎用的な機能(タイマー,プレイヤーのライフ,クリア,ゲームオーバーなど)を盛り込んだゲーム制作チュートリアルになります。\n\n\n【学習対象者について】\nUnrealEngine (アンリアルエンジン)について少し学習済みで一個ゲームを作りたい初心者 ~ 中級者向け講座です。なお使用するノードや、設定項目はほぼ全てわかりやすく解説していきますが、エディタやブループリントの最低限の知識がある前提で進めていきます。基本的なエディタ操作や、ブループリントの場合は「イベントBeginPlay」「変数」を理解しているレベルが望ましいです。完全な初心者の方には難しすぎる内容だと思うのでおすすめはしません。対象OSはWindowsです。使用する言語はブループリントです。フル字幕ではありません。\n\n\n【コースの流れ】\n制作する流れと実装する機能をざっくり紹介していきます。汎用的＆面白そうな機能をこのアクションゲームの章に詰め込みました。また、できるだけページ毎にそれぞれの機能を実装しているため、後からオリジナルゲーム開発時にも参考にしやすい構成にしてあります。\n1. まずプロジェクトとアセットを用意していきます。アセットは無料の公式アセット等を使用していきます。\n2. サードパーソンのデフォルトレベルの状態からゲームを作っていきます。\n3. まず最初はステージの環境を作ってキャラなどを用意します。\n4. ステージのギミックに加えて、コインやタイマー,ゲームのリスタート機能などゲーム開発において汎用的な機能を実装してきます。\n5. 夜のステージなども作成していきます。他にもコインの枚数やプレイヤーのライフなどデータとして保存する機能も実装します。\n6. タイトル画面やステージ選択画面,ゲームオーバーの機能なども実装していきます。\n7. 最後にパッケージ化を行ってゲームを提出できる状態にして終了です。\n\n\n【blueprintUEから全ノードをコピペできます!】\n実装するノードは全てblueprintUEのリンクを貼っているのでノードを確認したり、コピー＆ペーストする事ができます。もしノードがわからくなったりごちゃごちゃになってしまっても、blueprintUEからコピペが可能なので安心して学習頂けます。リンクはそれぞれのコースの概要欄に記載してあります。ノードも細かく解説していっているので、学習したい方はコピペではなく、自身でできるだけノードを作っていきましょう!\n\n\n【チュートリアルの注意点】\n2024/10/23 追記:マーケットプレイスからFabに移行されたためアセットをダウンロードする手順が動画と少し異なります。チュートリアルのQ&AにFabからアセットをダウンロードする新しい手順を簡単に記載していますが、動画は更新しておりませんのでご注意ください。またチュートリアル上で使用するキャラクターのメッシュ(Stylized Character Kit: Casual 01)はFabでダウンロードできなくなりました。これについてはデフォルトのキャラクターを使用すればそのままチュートリアルは進行可能です。それ以外の環境のアセットなどはFabで現状問題なくダウンロードできます。なので紹介動画で使用しているキャラクターのメッシュではなく、デフォルトのキャラクターで進めていくことになるということをご了承ください。また最後のチュートリアルとなるパッケージ化で使用するVisualStudio2019が2024年度からダウンロードできない状態になりました。代わりにVisualStudio2022を使用していく形になりますが、2022については解説は行っておらず動画は更新しておりません。まとめるとチュートリアルは一番最後のパッケージ化までは問題なく進めて頂けますが、あくまでゲーム開発の全体の流れを掴んで頂くためのものである事をご了承ください。\n\n\n【ご質問について】\nチュートリアル上で重要な手順に関する質問にしかご対応できません。返信までは1週間以上かかる場合があります。ご了承ください。\n\n\n【学べる事】\n・ゲーム制作の一通りの流れ(空のプロジェクトからパッケージ化まで行います)\n・ゲーム制作における汎用的な機能の実装方法\n・実践形式でのブループリントやUIの作り方\n・また様々なノードを使用,解説していくのでブループリントの勉強に役立てて頂けると思います。\n\n\n【UnrealEngine5の教科書という本でもこのチュートリアルを公開してます!】\nこちらのチュートリアルはZennの「UnrealEngine5の教科書 ゲーム開発入門編,第一巻」のアクションゲーム制作の章と全く同じ内容になっています。本ではこのチュートリアル動画と全く同じ動画が貼付されており、動画または文章で学ぶ事ができます。文章の解説で見たい方や、他にも基礎知識を学びたい方はUnrealEngine5の教科書(一部有料)をご覧ください。\n\n\nチュートリアルは長期的な計画で進めて頂ければと思います。では一緒にゲーム制作を楽しんでいきましょう！",
      "target_audience": [
        "UE5初心者 ~ 中級者向け (完全な初心者の方にはおすすめしません)",
        "既にUE5について少し学んでおり、これから一個ゲームを作ってみたい方"
      ]
    },
    {
      "title": "虚幻引擎4游戏开发：使用蓝图制作大逃杀游戏",
      "url": "https://www.udemy.com/course/ue4blueprintbattleroyalecn/",
      "bio": "本套课程将以PUBG游戏为原型制作一款大逃杀类型的射击游戏。",
      "objectives": [
        "创建一个射击游戏。",
        "使用虚幻引擎4进行开发。",
        "学习使用蓝图进行编程。",
        "学习如何搭建一套优质的蓝图对象架构。",
        "学习复杂的UI制作。",
        "完全不需要任何编程经验也可以学习本套课程。",
        "已经有游戏开发经验的人将进一步提升开发能力。"
      ],
      "course_content": {
        "准备工作": [
          "内容介绍",
          "引擎下载&安装",
          "资源下载",
          "创建项目",
          "资源介绍"
        ],
        "基础知识": [
          "编辑器界面",
          "运行游戏",
          "重要元素",
          "Gameplay框架"
        ],
        "项目设置": [
          "Gameplay框架制作",
          "输入设置讲解",
          "设置输入按键",
          "近裁剪面的距离设置"
        ],
        "动画混合空间": [
          "动画混合空间讲解",
          "非持枪站姿移动混合空间",
          "非持枪蹲姿移动混合空间",
          "非持枪趴姿移动混合空间",
          "持枪站姿移动混合空间",
          "持枪蹲姿移动混合空间",
          "持枪趴姿移动混合空间",
          "持枪站姿且瞄准的移动混合空间",
          "持枪蹲姿且瞄准的移动混合空间",
          "跳伞混合空间"
        ],
        "动画瞄准偏移": [
          "动画瞄准偏移简述",
          "非持枪站立瞄准偏移",
          "非持枪蹲姿瞄准偏移",
          "持枪站立瞄准偏移",
          "持枪瞄准站立瞄准偏移",
          "持枪蹲姿瞄准偏移",
          "持枪瞄准蹲姿瞄准偏移"
        ],
        "动画蓝图": [
          "动画蓝图简述",
          "创建角色状态变量",
          "状态机：非持枪状态",
          "状态机: 持枪状态",
          "状态机：持枪与非持枪衔接",
          "状态机：持枪瞄准",
          "状态机：跳伞动画",
          "状态机：跳跃动画",
          "状态机：死亡动画",
          "动画图表：逻辑制作",
          "动画图表：测试",
          "事件图表：在Character中创建变量",
          "事件图表：设置直接获得变量",
          "事件图表：计算相关变量",
          "事件图表：设置动画瞄准偏移变量"
        ],
        "动画蒙太奇": [
          "动画蒙太奇简述",
          "装备步枪动画蒙太奇",
          "收回步枪动画蒙太奇",
          "换弹夹&换子弹动画蒙太奇",
          "射击相关动画蒙太奇",
          "使用物品相关动画蒙太奇"
        ],
        "角色基础功能": [
          "设置角色默认组件",
          "创建摄像机",
          "鼠标控制功能",
          "角色移动：基础功能",
          "角色移动：速度平滑处理",
          "鼠标视角：自由视角",
          "鼠标视角：适配角色移动",
          "姿势切换：切换功能",
          "姿势切换：切换限制",
          "鼠标视角：俯仰角限制",
          "姿势切换：影响摄像机位置",
          "移动速度：不同移动速度",
          "移动速度：姿势影响移动速度",
          "移动速度：移动速度测试"
        ],
        "角色时装": [
          "创建子骨骼模型",
          "准备数据",
          "替换骨骼模型",
          "连体衣特殊处理",
          "皮肤遮罩",
          "默认穿着内衣"
        ],
        "物品数据表": [
          "制作武器数据表",
          "制作子弹数据表",
          "制作武器配件数据表",
          "制作装备数据表",
          "制作药品数据表"
        ]
      },
      "requirements": [
        "可以运行虚幻引擎。",
        "有基础逻辑思维能力。"
      ],
      "description": "大家好，我是大猫。\n\n\n关于内容\n本套课程是一套完整的大逃杀类型的游戏教程。功能非常庞大，在宣传片中没能把所有功能展现出来，例如，发射的子弹全部都有下坠效果，根据飞行距离降低飞行速度。所有功能尽可能做到详细。\n目前课程已经全部完成，查看课程大纲可以了解到本套课程的全部内容。\n\n关于蓝图\n本套课程所有内容均使用蓝图实现。你将看到一套架构清晰，节点整洁的蓝图项目，是时候真正认识蓝图的伟大。\n如果你在工作中使用C++进行开发，这丝毫也不影响你观看我的课程。因为蓝图中每一个功能都能在C++中找到实现方式，通过学习蓝图依然可以给你的C++开发带来很大帮助。\n\n写在最后\n这套课程的全部工作都是我一个人完成，包括蓝图开发、讲案编写、视频录制、语音录制、字幕、视频剪辑，甚至在宣传片开头的绿幕拍摄。为了给大家一个尽可能完美的体验，每一个细节都反复推敲。制作一套走心的课程真的很不容易。我知道还有很多没有做好的地方，还希望大家可以多多理解。当然，你有任何问题、意见、建议都可以与我联系，我会在看到后的第一时间回复你。\n我是大猫。\n\n\n全部课程列表\n一共26个章节，218节课。\n第1章：准备工作 (4 节课)\n下载并安装虚幻引擎。\n创建游戏项目，并导入资源。\n第2章：基础知识 (4 节课)\n对虚幻引擎有基本的认识。\n第3章：项目设置 (4 节课)\nGameplay框架搭建。\n完成输入设置。\n第4章：动画混合空间 (10 节课)\n学习什么是动画混合空间。\n制作角色站姿、蹲姿、趴姿、瞄准、跳伞的动画混合空间。\n第5章：动画瞄准偏移 (7 节课)\n学习什么是动画偏移瞄准。\n制作角色站立、蹲姿、趴姿、瞄准的动画偏移瞄准。\n第6章：动画蓝图 (15 节课)\n学习什么是动画蓝图。\n制作角色动画状态机，其中包含角色所有状态。\n学会使用动画图表。\n制作动画相关逻辑功能。\n第7章：动画蒙太奇 (6 节课)\n学习什么是动画蒙太奇。\n制作装备和收回武器动画蒙太奇。\n制作换弹夹&换子弹动画蒙太奇。\n制作射击相关动画蒙太奇。\n制作使用物品相关动画蒙太奇。\n第8章：角色基础功能 (14 节课)\n设置角色组件。\n制作鼠标控制功能。\n制作角色移动功能，及各种情况对移动速度的影响。\n制作姿势切换。\n第9章：角色时装 (6 节课)\n搭建角色时装骨骼模型组件。\n材质遮罩处理。\n制作角色换装系统。\n第10章：物品数据表 (5 节课)\n制作武器数据表、子弹数据表、武器配件数据表、装备数据表、药品数据表\n第11章：物品系统 (2 节课)\n物品架构讲解\n创建物品基类\n第12章：拾取对象 (8 节课)\n创建拾取对象基类。\n创建物品、武器配件、子弹、装备、药品、能量物品、时装拾取对象。\n第13章：物品对象 (9 节课)\n创建武器物品对象，包括骨骼功能、武器配件功能、声音及粒子组件。\n创建子弹、装备、使用类、时装物品对象。\n第14章：物品生成系统 (9 节课)\n讲解物品生成规则。\n创建概率相关数据表。\n制作生成物品逻辑。\n计算物品显示位置。\n第15章：数据储存 (2 节课)\n数据储存架构。\n创建数据相关变量。\n第16章：拾取和丢弃物品 (30 节课)\n角色换装逻辑制作。\n拾取和丢弃物品逻辑流程讲解。\n制作拾取和丢弃物品相关功能。\n武器切换功能。\n第17章：武器功能 (21 节课)\n武器瞄准功能，包括直接瞄准和开启瞄准镜瞄准。\n开火功能，包括开火动画、换弹夹、换子弹、屏幕抖动、准星偏移。\n子弹功能，包括子弹下坠逻辑制作、弹孔制作。\n第18章：资产界面 (20 节课)\nUI制作基础知识讲解。\nUI界面搭建及逻辑制作。\nUI界面中显示3D角色，并同步所有换装。\nUI界面拖拽功能。\n第19章：主界面 (9 节课)\n制作准星。\n制作动作提示UI。\n制作提示信息UI。\n制作角色信息UI。\n制作倒计时UI。\n制作方向UI。\n第20章：使用物品 (6 节课)\n制作资产界面进度条。\n制作圆形进度条。\n制作使用逻辑。\n制作能量恢复生命值逻辑。\n第21章：跳伞 (9 节课)\n制作跳伞UI。\n飞机Actor制作。\n制作自由落体飞行功能。\n制作开伞飞行功能。\n第22章：安全区 (4 节课)\n制作显示功能。\n随机位置逻辑讲解。\n制作持续缩小功能。\n角色移入移出触发相关功能。\n第23章：空投 (4 节课)\n空投飞机飞行。\n空投箱子。\n空投中的物品。\n第24章：轰炸区 (3 节课)\n爆炸点。\n轰炸区域。\n执行逻辑。\n第25章：地图UI (9 节课)\n大地图和小地图界面搭建。\n大地图移动和缩放。\n小地图移动逻辑。\n地图UV制作和讲解。\n显示安全区、轰炸区及飞行线路图。\n第26章：正式地图 (2 节课)\n适配相关逻辑到最终地图中。",
      "target_audience": [
        "想学习游戏开发的人。",
        "没有或有一定编程经验的人。",
        "程序员、策划师、游戏制作人。"
      ]
    },
    {
      "title": "Unityゲーム開発入門：Unityインストラクターが教える寿司打風タイピングゲーム",
      "url": "https://www.udemy.com/course/junitytyping/",
      "bio": "タイピングゲーム開発に必要な、柔軟な入力への対応・C#・正誤判定・キーボード入力・表示変換など他の講座では学べないUnityの力がこれ一本で身につく完全攻略版。",
      "objectives": [
        "タイピングゲーム制作に必要な、文字の入力や正解の判定が学習できます",
        "Unityの基礎である、Textの変更方法や、キーボード入力の方法がハンズオンで学べます。",
        "ゲームを動かすためのC#プログラミングに関する基礎的な文法をイラストと演習問題付きで学習できます。",
        "全てのプロジェクトを一から作ることで総合的なUnityのゲーム開発力が身につきます。"
      ],
      "course_content": {
        "【必修】はじめに": [
          "講座の進め方"
        ],
        "【選択】Unityのインストールと設定": [
          "はじめに",
          "UnityHubとUnityのインストール",
          "VisualStudioとモジュールの追加",
          "Unityの新規作成とVisualStudioの連携"
        ],
        "【選択】Unityでゲームを作るには？": [
          "はじめに",
          "Unityの画面説明",
          "Unityの操作説明",
          "Unityでゲームを作るには？"
        ],
        "【選択】C#の基礎": [
          "はじめに",
          "コンソールとコメントアウト",
          "変数の宣言",
          "変数の型とは",
          "たし算などの四則演算",
          "よく使う演算子",
          "比較演算子",
          "論理演算子",
          "【演習問題の準備】",
          "【演習問題】変数の宣言〜比較演算子",
          "if文",
          "if-else文",
          "else if 文",
          "switch文",
          "while文",
          "for文",
          "breakとcontinue",
          "列挙型",
          "配列",
          "List型",
          "【演習問題】配列とリストの問題",
          "関数の基礎",
          "関数の返り値",
          "【演習問題】パート3 関数の問題",
          "クラス",
          "【演習問題】パート4 クラスの問題をやってください",
          "セクションのまとめ"
        ],
        "（必須）最新バージョンでの修正": [
          "Text"
        ],
        "【必修】タイピングゲームの作り方": [
          "はじめに",
          "新規作成と画面の説明",
          "Textの作成",
          "コードによるTextの変更",
          "ランダムに問題を出す",
          "正解処理と問題の変更",
          "見た目の変更",
          "寿司レーンを動かす",
          "文字の色を変更1",
          "文字の色を変更2",
          "Textデータの取得",
          "Textデータの取得（Windows用補足）",
          "まとめ"
        ],
        "【選択】C#の補習": [
          "はじめに",
          "Dictionary型の使い方"
        ],
        "【必修/上級】柔軟な入力に対応したタイピングゲームの作り方": [
          "辞書の作成",
          "文字の変換",
          "入力の対応",
          "表示の変更",
          "エラー対応",
          "「っ」の対応",
          "「ゃゅょ」の対応①",
          "辞書の変更",
          "「ゃゅょ」の対応②",
          "「ゃゅょ」ファイナル",
          "シフトキーの対応"
        ],
        "終わりに": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Unityをインストールしている",
        "タイピングができる",
        "検索サイトでUnityを調べたことがある"
      ],
      "description": "【この講座は以下の方を対象としています】\nオリジナルタイピングゲームを作って、知り合いにドヤ顔したい方\nタイピングゲームが好きで、柔軟な入力に対応できるタイピングゲームを作ってみたい方\nC#やUnityの基礎的なテクニックを身につけて、もっと多くのゲームを作れるようになりたい方\nゲームのイベントやプログラミングの大会に出たい方（同様の講座をやった小学生が、大会で優勝しました）\n\n\n【習得できること】\nNeutralからリリースされた寿司打はタイピングゲームの王道であり、年齢問わず多くの方の注目を浴びています。基本的なタイピングゲームを作ることは他のゲーム制作より簡単なのですが、例えば「し」に対して「si,shi」のどちらの入力も正解とするなど柔軟な入力に対応させるには、高度なテクニックが必要です。この講座では、このような柔軟な入力に対応できる本格的なシステムについて、以下の習得を目標としてゲームを作りながら進めていきます。\n・コードによる文字の変更方法\n・正解処理\n・Textファイルからデータを取得する方法\n・正解処理のための辞書の作成\n・柔軟な入力への対応「（対応している文字を列挙したい）」\n\n\n【この教材のポイント】\n・動画の通りやれば必ず同じものができます\n・補助教材にはソースコードがあります\n・Q&Aで質問対応をしています\n・本編に入る前に、知っておいてほしいことは前のセクションで紹介しています\n\n\n【最後に】\nこの講座は、タイピングゲームが好きな生徒のために調査したことをまとめた講座です。1人でゲームを作るのは「資料を探し、学び、実践する」などエネルギーのいることです。また、完成させるとなるとゲーム開発以外のことにも多くの労力を使います。この講座はこれらのエネルギーをゲーム開発に集中するための講座です。一緒にゲームを完成させて世界に向けて発信しましょう！",
      "target_audience": [
        "Unityのチュートリアルを勉強したけど挫折してしまった人",
        "Unityを始めたはいいけど何から手をつけていいのかわからない人",
        "タイピングゲームを作りたい人"
      ]
    },
    {
      "title": "Crie Estórias Interativas para Web e Jogos Digitais",
      "url": "https://www.udemy.com/course/estorias-interativas/",
      "bio": "Transforme suas ideias em estórias interativas não lineares para web. Crie jogos de texto simples, do tipo adventure.",
      "objectives": [
        "Compreender o que são estórias interativas não lineares e seu papel na indústria do entretenimento",
        "Criar estórias interativas lineares e não lineares",
        "Acrescentar imagens e videos a suas estórias",
        "Usar recursos básicos de HTML para formatar e estruturar suas estórias",
        "Exportar suas estórias para o formato HTML",
        "Publicar suas estórias na Web e compartilhar com seu público",
        "Planejar o processo de transformação de estórias lineares em não lineares"
      ],
      "course_content": {
        "Introdução": [
          "O que são estórias interativas lineares e não lineares",
          "Estórias não lineares na forma de livro - Os Livros-Jogo",
          "Conheça o Professor Paulo Andrade",
          "Como tirar suas dúvidas comigo"
        ],
        "Estórias Interativas Lineares e Não Lineares": [
          "Onde encontrar estórias",
          "Exemplos de trabalhos de alunos"
        ],
        "A ferramenta de Criação de Estórias Interativas - Twine": [
          "O que é o Twine e como instalar o Twine no seu computador",
          "A versão web do Twine",
          "A interface de estórias do Twine",
          "Analisando uma estória feita no Twine",
          "A interface de edição de estórias",
          "Formatos de estórias",
          "Formatando o texto e o visual de suas estórias",
          "Incorporando fotos e videos ao projeto",
          "Como publicar suas estórias"
        ],
        "Construct 3 - Construindo meu primeiro jogo": [
          "Conhecendo o site do Construct",
          "Criando uma conta",
          "Conhecendo a interface do Construct",
          "Conceitos básicos",
          "Estruturando o projeto",
          "Criando a cena de fundo",
          "Trabalhando com Sprites",
          "Sprites Animadas",
          "Objetos do tipo texto",
          "Meu primeiro evento",
          "Entrada de dados",
          "Eventos e animações"
        ],
        "Construct 3 - Construindo o jogo Duck Game": [
          "Apresentação",
          "Menu do jogo - 1 Parte",
          "Menu do jogo - 2 Parte",
          "Programando o player",
          "Construindo a Primeira Fase",
          "Programando a porta",
          "Novas fases",
          "Mecânica de danos",
          "Programando as fases finais",
          "Exportando o jogo",
          "Material complementar - Como publicar jogos na plataformas de venda Itchio"
        ],
        "Simulado": [
          "Simulado"
        ],
        "Estórias Interativas para Web e Mobile utilizando o GDevelop": [
          "Instalação do GDevelop",
          "Gerenciamento de contas no GDevelop",
          "Construindo o projeto na GDevelop",
          "Criando a primeira cena",
          "Programando a estória",
          "Finalizando nossa estória",
          "Exportando o projeto para web, mobile e desktop"
        ],
        "Aula Bônus e Onde Está o Seu Certificado": [
          "Aula Bônus e Onde Está o Seu Certificado"
        ]
      },
      "requirements": [
        "É necessário familiaridade com computadores e instalação de programas"
      ],
      "description": "Sabe aquele jogo do tipo adventure que você sempre pensou em criar?\nSabe aquela estória que você gostaria de transformar em algo mais?\n\n\nEste curso te ensina como tirar estes projetos do papel e colocar, literalmente, na web (ou em celulares, computadores...)\n\n\nNeste curso você aprenderá como criar Estórias Interativas Lineares e Não Lineares.\n\n\nO que são estórias interativas Lineares e Não Lineares?\nUma Estória Interativa é uma estória que avança de acordo com a vontade do leitor, conforme interage com a estória.\nUma Estória Não Linear é uma estória que não segue um caminho predefinido. Ou seja, o leitor / jogador pode escolher que caminhos seguir e, no caso de um jogo, enfrentar as consequências das suas escolhas.\n\n\nUma Estória Não Linear pode conduzir o leitor a um final feliz ou não, de acordo com as escolhas que o próprio leitor faz.\n\n\nJogos como a série Lifeline, popular em celulares, são estórias interativas não lineares que conquistam o público pelo seu conceito simples e minimalista, que coloca o foco na estória e não em gráficos. Nosso foco é na estória !\n\n\nIMPORTANTE :\nO foco deste curso não é a criação de Jogos! O foco é a criação de narrativas não lineares, que podem ser facilmente transformadas em jogos, entretanto, o curso não aborda programação ou game design!\nApesar das suas estórias interativas poderem contar com recursos de áudio, vídeo e ilustrações, o foco do curso é somente na transformação de estórias comuns em narrativas interativas, lineares ou não lineares.\nE o curso não é de animação!",
      "target_audience": [
        "Estudantes e Profissionais Interessados em Criar Estórias Interativas Não Lineares para Web e Jogos Digitais",
        "Este curso não aborda nenhum tipo de programação.",
        "Este curso não aborda a criação de jogos com gráficos ou jogos com estruturas complexas de decisão."
      ]
    },
    {
      "title": "Kurs Unreal Engine 4 - gry od podstaw",
      "url": "https://www.udemy.com/course/kurs-unreal-engine-4-gry-od-podstaw/",
      "bio": "Poznaj podstawy tworzenia gier w silniku Unreal Engine 4",
      "objectives": [
        "Przed Tobą kurs silnika Unreal Engine dla początkujących."
      ],
      "course_content": {
        "Wstęp": [
          "1. Instalacja Launchera oraz Oprogramowania Unreal Engine"
        ],
        "2. Omówienie interfejsu Epic Games i wbudowanych zakładek": [
          "2. Interfejs Epic Games i Wbudowane Zakładki"
        ],
        "3. Przegląd interfejsu edytora": [
          "3.1 Viewport",
          "3.2 World Outliner",
          "3.3 Details Panel",
          "3.4 Modes",
          "3.5 World Settings",
          "3.6 Content Browser"
        ],
        "4. Analiza opcji i preferencji projektu": [
          "4. Analiza Opcji I Preferencji Projektu"
        ],
        "5. Wstęp do Blueprintów i programowania": [
          "5.1 Co To Jest Blueprint",
          "5.2 Wstep + Graph",
          "5.3 Funkcje",
          "5.4 Różnice - Makra, Funkcje, Graphy",
          "5.5 Suplement Blueprint",
          "5.6 Array, Set, Map",
          "5.7 Enumeration, Datatable, Structure"
        ],
        "6. Zasoby projektu": [
          "6.1 System Kontroli Wersji",
          "6.2 Tekstury",
          "6.3 Static Meshes",
          "6.4 Import Export",
          "6.5 Optymalizacja,Shadowing,Lighting,PostProcess",
          "6.6 Komendy I Monitoring Wydajności"
        ],
        "7. Podstawowy projekt z użyciem szablonu First Person Shooter": [
          "7.1 Testowy Projekt",
          "7.2 Co Dalej"
        ]
      },
      "requirements": [
        "Dla osób, które nie znają programowania. Znajomość języków programowania do tego kursu nie jest wymagana."
      ],
      "description": "Czego się nauczysz ?\nPrzed Tobą kurs silnika Unreal Engine dla początkujących. Ten kurs obejmuje niezbędne podstawy korzystania z UE4 przy tworzeniu gier. Zobaczysz jak zainstalować silnik w najnowszej wersji oznaczonej numerem 4 oraz jak poruszać się po interfejsie i wbudowanych zakładkach. Dowiesz się jakie są możliwości edytora. Stworzysz nowy projekt i dodasz do niego materiały, tekstury, modele 3d.\nNauczysz się nakładać światła oraz cienie. Przekażemy Ci również fundamenty blueprintów oraz omówimy wizualne środowisko programistyczne. Stworzysz funkcjonalne zdarzenie w Event Graph, własne makra oraz funkcje. Podsumowaniem kursu będzie prosty projekt z użyciem szablonu First Person Shooter\n\n\nZainstalujesz silnik Unreal Engine\nPoznasz interfejs edytora\nAnaliza opcji i preferencji projektu\nDodasz materiały i tekstury\nPobawisz się światłem i cieniem\nWykorzystasz modele 3d\nDowiesz się co to są Blueprinty\nStworzysz zdarzenie w Event Graph\nStworzysz własne funkcje oraz makra\nPorównasz różnice zdarzeń, makr oraz funkcji\nDowiesz się jak działa Array, Set, Map\nZobaczysz jak korzystać z Enumeration, Datatable, Structure\nStworzysz swój pierwszy projekt First Person Shooter\n\n\nTwórz wspaniałe gry\nZ kursem nauczysz się wszystkich umiejętności potrzebnych do tworzenia wspaniałych środowisk, w których będziesz osadzać swoje gry. Jednak zanim zaczniesz poważnie myśleć nad zaawansowanymi projektami musisz nauczyć się fundamentów silnika UE4. Tylko dogłębne poznanie zasad tego narzędzia pozwoli Ci wypłynąć na szerokie wody. Z naszym kursem przebrniesz przez ten etap szybko i przyjemnie.\n\n\nOpanuj wizualne kodowanie\nCzy można programować bez znajomości nawet jednej linijki kodu? Tak, dzięki zawartym w programie blueprintom. Jest to zintegrowana z UE4 funkcja, która pozwala wizualnie programować gry, jednocześnie zachowując wszystkie funkcje zwyczajnego programowania. Po prostu łączysz odpowiednie punkty i od razu widzisz rezultaty. Dzięki temu, osoby, które nie programują zawodowo, mogą tworzyć własne gry. W kursie poznasz najlepsze praktyki kodowania wizualnego, takie jak organizacja projektu i optymalny przepływ pracy programistycznej, które są niezbędne przy tworzenia gier.\n\n\nCo to jest UE4?\nUnreal Engine to kompletny zestaw narzędzi programistycznych dla każdego kto pracuje z technologią gier wideo. Oferuje szeroki zakres narzędzi oraz szybkie projektowanie za pomocą blueprintów. Dzięki temu możesz stworzyć własną grę bez znajomości kodowania.\n\n\nDlaczego warto postawć na UE4?\nUnreal Engine stał się wiodącym narzędziem w tworzeniu gier, animacji, programów telewizyjnych oraz ilustracji!\nKilkukrotnie zdobył nagrodę „Best Game Engine” od różnych organizacji, w tym od Develop Industry Excellence Awards i Game Developer Magazine. Silnik został wykorzystany do opracowania wielu hitów i serii gier, w tym Daylight, Borderlands, Gears of War, BioShock, Mass Effect i setek innych.\nPrzez lata Unreal Engine był dostępny tylko dla dużych firm po wykupieniu odpowiedniej licencji, ale od 2015 roku Unreal Engine 4 stał się darmowy dla mniejszych twórców. Dlatego też mniejsi gracze mogą bez ponoszenia wysokich kosztów, pracować z narzędziem, które wykorzystywane jest przez największych producentów gier. W przypadku produktów, które zarobiły ponad trzy tysiące dolarów, twórcy korzystający tego silnika są zobowiązani do opłaty w wysokości 5 dolarów od zysków.",
      "target_audience": [
        "Ten kurs jest idealny dla każdego, kto nie posiada żadnej wiedzy na temat Unreal Engine 4 i chciałby szybko poznać to narzędzie."
      ]
    },
    {
      "title": "Unity C# | Sıfırdan Zirveye 3D Oyun Geliştirme (2024)",
      "url": "https://www.udemy.com/course/unity-c-sfrdan-zirveye-2d3d-oyun-gelistirme-2021/",
      "bio": "C#'ı ve Unity'yi Sıfırdan Oyun Projeleri Geliştirerek Öğren!",
      "objectives": [
        "Unity Kullanabilecek Kadar C# Dilinin Temelleri",
        "Sıfırdan Oyun Geliştirmeyi",
        "Unity ile Oyun Geliştirmeyi",
        "Unity'de Karşılaştığı Problemlere Çözüm Bulabilmeyi",
        "Unity ve C#'ı CV'ne Ekleyebileceksin"
      ],
      "course_content": {
        "Gerekli Ortamların Kurulması": [
          "Unity'nin 2019.4.16 Sürümünün Kurulumu",
          "Duyuru!",
          "Visual Studio Code Kurulumu"
        ],
        "Unity Arayüzü": [
          "Unity Arayüzünde Bulunan Paneller",
          "GameObject ve Component İlişkisi",
          "Pozisyon, Rotasyon ve Büyütme İşlemleri"
        ],
        "İlk Proje - Roll a Ball": [
          "Roll a Ball Projesi Kaynak Dosyaları",
          "Roll a Ball Tanıtım",
          "Oyun Sahası ve Topun Oluşturulması",
          "Yer Çekimi ve C# Scripti Oluşturulması",
          "C# Dosyasının İçeriği"
        ],
        "C# Temelleri": [
          "C# Temelleri Giriş",
          "C# Temelleri - Sayılar",
          "C# Temel Veri Tipleri - Float ve String",
          "C# Değişken Oluşturma",
          "C# var Anahtar Kelimesi",
          "C# Temel Matematik Operatörleri",
          "C# Bool Veri Tipi",
          "C# Sayılarla Stringler Arasındaki Temel Fark",
          "C# Karşılaştırma Operatörleri",
          "C# Koşullu Durumlar",
          "C# while Döngüsü",
          "C# do-while Döngüsü",
          "C# switch-case Yapısı",
          "C# for Döngüsü",
          "C# Liste Oluşturma ve foreach Döngüsü",
          "C# Start ve Update Fonksiyonları",
          "C# Void Metotlar",
          "C# Void Olmayan Metotlar",
          "C# Array ve ArrayList",
          "C# Classlara Giriş",
          "C# Access Modifiers (Erişim Belirleyiciler)",
          "C# Oluşturulan Objelere Farklı Özellik Ekleme"
        ],
        "Roll a Ball Projesi Devamı": [
          "Visual Studio 2019 Kurulumu",
          "Bir Objenin Hareketi Ne Demektir? - 1",
          "Bir Objenin Hareketi Ne Demektir? - 2",
          "Input Classı",
          "Topun Hareket Ettirilmesi",
          "Kameranın Topu Takip Etmesi",
          "Duvarların Oluşturulması",
          "Küplerin Oluşturulması",
          "Küplerin Yok Edilmesi",
          "SetActive Özelliği ve OnTrigger Metotları",
          "Puanlama Kod Yapısının Hazırlanması",
          "Puan ve OyunBitti Text Elemanları",
          "Oyunu Build Etme"
        ],
        "Space Shooter Projesi": [
          "Space Shooter Projesi Kaynak Dosyaları",
          "Space Shooter Projesi Asset Dosyaları",
          "Space Shooter Tanıtım",
          "Projenin Oluşturulması ve Asset Dosyaları",
          "playerShip'in Oluşturulması ve Collider Ayarları",
          "Kamera Ayarları",
          "Işıklandırma Ayarları",
          "Arkaplan Oluşturma",
          "Player Gemisinin Kontrolü",
          "Player Gemisine Sınır Çizilmesi",
          "Sınırların Class Yapısıyla Çizilmesi",
          "Player Gemisinin Eğim Animasyonu",
          "Laser Material Oluşturulması",
          "Lasere Collider ve Hareket Eklenmesi",
          "Laserlerin Instantiate Edilmesi",
          "Laserlerin Instantiatenin Kontrol Altına Alınması",
          "Laserlerin Destroy Edilmesi",
          "Astroid Oluşturulması ve Hareketlendirilmesi",
          "Astroidlere Çarpan Objelerin Destroy Edilmesi",
          "Patlama Efektlerinin Oluşturulması",
          "Astroidlerin Farklı Noktalarda Oluşturulması",
          "Birden Fazla Astroid Oluşturulması",
          "Astroidlerin Dalgalar Halinde Oluşturulması",
          "GameScene'de Oluşan Patlamaların Belirli Bir Süre Sonunda Destroy Edilmesi",
          "Ses Ayarlamaları",
          "Score Tabelası Oluşturma",
          "Game Over Konusu",
          "Oyunun Build Edilmesi"
        ],
        "RPG Projesi - Oyun Sahnesinin Oluşturulması": [
          "RPG Projesi Kaynak Dosyaları",
          "RPG Projesi Asset Dosyaları",
          "RPG Proje Tanıtımı",
          "Arazi Oluşturulması",
          "Araziye Dağ ve Tepeler Eklenmesi",
          "Toprak ve Çim Texturelarının Eklenmesi",
          "Yol Yapımı ve Ağaç Prefabı Seçimi",
          "Çimlerin Oluşturulması",
          "Çiçeklerin Oluşturulması",
          "Yapıların Eklenmesi"
        ],
        "RPG Projesi - Temel Hareket Sistemi": [
          "NavMesh Kullanımı",
          "NavMesh Ayarları",
          "NavMesh Obstacle",
          "Raycast İşlemi",
          "Player Objesinin Kontrolü",
          "Kameranın Player Objesini Takip Etmesi"
        ],
        "RPG Projesi - Basit Karakter Modelleme": [
          "Karakter Oluşturma",
          "Karaktere Rig Eklenmesi",
          "Karakterin Giydirilmesi"
        ],
        "RPG Projesi - Animasyon Sistemi Temelleri": [
          "Animator Componenti ve Animator Controller",
          "Animator Controller ve Avatarın Eklenmesi",
          "Animasyonların Hızı",
          "Yürüme ve Koşma Animasyonlarının Ayarlanması",
          "Dönme Animasyonu",
          "Kodumuzda Birkaç Düzeltme"
        ]
      },
      "requirements": [
        "Başlangıç Seviyesinde Bilgisayar Kullanabilme",
        "Unity'yi Kullanabileceğiniz Bir Bilgisayar",
        "Oyun Geliştirme Konusunda İstek ve Arzu"
      ],
      "description": "Oyun sektörünün, müzik ve sinema sektörlerinin toplamından daha büyük olduğunu biliyor muydun?\nOyunlar çoktan sadece çocukların gönül eğlendirdiği bir nesne olmaktan çıktı. Artık ülkelerin lokomotif sektörlerinden birisi olan ve 7'den 70'e hemen herkesin bir şekilde içinde bulunduğu bir dünya. Artık oyun karakterleri insanların kendilerine örnek aldıkları rol modeller olmuş durumda. Oyunlar, çağımızın bütün stresinden insanların bir an olsun uzak durmak için kendilerini kaptırdıkları bir dünya. Oyunlar artık sadece \"oyun\" değil.\nOyun geliştirme ise her geçen gün cazibesi daha da artan bir alan. Çok değil daha 7-8 yıl önce küçümsenen ve önemi kavranamayan oyun sektörü bugün yüzyıllar ölçeğinde geçmişe sahip sektörlere kafa tutuyor. Dünya devi otomotiv firmalarının yüzyıllar içinde oluşturdukları değeri oyun şirketleri birkaç sene içinde oluşturabilecek güce ulaştı. Zaten bu yüzden herkesin gözü kulağı artık oyun sektöründe. 2018 yılında dünyada sadece \"mobil oyunların\"  88 Milyar Dolarlık bir gelir elde ettiğini söylediğimde umarım ne kastettiğimi anlatabilirim.\nTürkiye ölçeğine geldiğimizde manzara daha da güzel bir hâl alıyor. Çünkü özellikle \"Hyper Casual\" türünün trend olmasıyla birlikte Türkiye bu alanın dünyadaki en önemli temsilcilerinden birisi oldu. Önemli bir oyun girişimcisinin tabiriyle \"Türkiye ilk defa bir treni kaçırmadı!\". Tabii ki sadece \"Hyper Casual\" türünde değil. İki sene içinde ilk olarak Gram Games 250 Milyon Dolara daha sonra Peak Games 1.8 Milyar Dolara ve son olarak Rollic 168 Milyon Dolara Amerikalı bir dünya devi olan Zynga tarafından satın alındı. Bu şirketler satıldıklarında daha 10 yaşına bile girmemişlerdi. Rollic kurulalı daha 2 yıl bile olmamıştı! Satıldıklarında Peak Games'in 100, Gram Games'in ise yaklaşık 50 kişilik bir ekibi vardı. Size milli gururumuz Türk Hava Yolları'nın 37.000'den fazla çalışanıyla yaklaşık 2.5 Milyar Dolar piyasa değerine sahip olduğunu söylediğimde bu şirketlerin bu kadar küçük ekiplerle bu kadar büyük bir değeri oluşturabilmelerine hayret edeceğinizi düşünüyorum. Çünkü ben de hayret etmiştim. Bütün bu anlattıklarımdan ötürü global oyun devlerinin gözü kulağı Türkiye'de. Zaten burada bir fırsat olduğunu düşünen binlerce girişimci ve yatırımcı çoktan bu sektöre girmiş durumda.\nPeki neden bizi tercih etmelisin? Sana kesin bir şey diyemem ama şunları söyleyebilirim:\nUdemy'deki en hızlı eğitmen desteklerinden birisini sunuyoruz. Sen de faydalan!\nC#'ı temel ve orta seviyede öğreneceksin. Hem de teorik olarak değil! Kısa bir teorik girişten sonra direk Unity'de oyun geliştirerek projeler üzerinden öğreneceksin.\nUnity şu anda oyun sektöründe kullanılan en yaygın oyun motorlarından birisi. Bu oyun motorunu kullanmayı bilmen sektör açısından çok işine yarayacak.\nÖz ve net anlatımla öğrenmen gerekenleri hızlı bir şekilde öğren!\nUnity ve C#'ı CV'ne ekleyebileceksin.\nSen de bu dünyanın bir parçası olmak istiyorsan; bir bilgisayar ve tükenmek bilmez arzu ve istek bizim için yeterli. Biz sana sadece yol göstereceğiz. Yolu yürüyecek olan sensin.\nUnutma; oyunlar artık sadece \"oyun\" değil!",
      "target_audience": [
        "Sıfırdan Oyun Geliştirmeyi Öğrenmek İsteyenler",
        "Belli Bir Seviyede Olup Unity Bilgisini Geliştirmek İsteyenler",
        "Oyun Geliştirmeyi Kariyeri Olarak Düşünenler",
        "Oynadığı Oyunların Nasıl Geliştirildiğini Öğrenmek İsteyenler"
      ]
    },
    {
      "title": "Unity dla dzieci - cz.1",
      "url": "https://www.udemy.com/course/unity-dla-dzieci-poziom-pierwszy/",
      "bio": "Zabawa w programowanie gier. Poziom pierwszy",
      "objectives": [
        "Poznają podstawy obsługi programu Unity i zbuduje otoczenie swojej gry w 3D"
      ],
      "course_content": {
        "Rozpoczęcie": [
          "Wstęp",
          "Instalacja programu Unity",
          "Zapoznanie się z interfejsem",
          "Operowanie widokiem sceny",
          "Poruszanie się po scenie",
          "Panel Game",
          "Lista obiektów w scenie (Hierarchy)",
          "Modyfikacja obiektów w panelu Inspector"
        ],
        "Tworzenie obiektów": [
          "GameObjects — wprowadzenie",
          "GameObjects — podstawowe bryły",
          "Tworzenie projektu i zapisywanie pliku sceny",
          "Budowanie planszy do gry",
          "Tworzymy drzewo z podstawowych brył",
          "Tworzymy Prefab dla drzewa",
          "Zmiana kolorów obiektów",
          "Tworzenie Czołgu"
        ],
        "Interakcja i skrypty": [
          "Wprowadzenie i pierwszy skrypt",
          "Czołg rusza naprzód",
          "Czołg jedzie tylko na rozkaz",
          "Czołg jeździ w przód i w tył",
          "Płynne sterowanie czołgiem",
          "Twoja pierwsza gra w pliku EXE"
        ],
        "Zderzenia, strzelanie i porady": [
          "O tym, jak ważny jest prototyp",
          "Kolizje między obiektami",
          "Brama, którą taranuje czołg",
          "Kamera podążająca za czołgiem",
          "Mur, który czołg może zniszczyć"
        ],
        "Strzelanie": [
          "Zasada „dziel i zwyciężaj”",
          "Tworzymy skrypt Strzelanie",
          "Tworzenie pocisku w scenie",
          "Pocisk pojawia się przed lufą",
          "Refaktoring, czyli poprawianie kodu",
          "Lot pocisku naprzód",
          "Naprawiamy poprawność zderzeń",
          "Zniszczenie pocisku w momencie trafienia",
          "Usuwanie zabłąkanych pocisków"
        ],
        "Zakończenie misji": [
          "Punkt zakończenia misji",
          "Skrypt fotokomórki i włączanie światła",
          "Wyłączenie sterowania czołgiem po dotarciu do celu",
          "Porządkowanie projektu",
          "Napis kończący misję"
        ],
        "Dodatkowe elementy grywalności": [
          "Broń dla przeciwnika",
          "Warstwy",
          "Licznik zniszczenia dla czołgu",
          "Skrypt aktualizujący licznik",
          "Wykrywanie trafienia",
          "Skrypt zarządcy",
          "Zarządzanie zakończeniem gry",
          "Restartowanie gry",
          "Gotowa gra — ważne porady"
        ]
      },
      "requirements": [
        "Kurs przeznaczony dla młodych adeptów programowania w wieku 10 - 13"
      ],
      "description": "Wraz ze swoim dzieckiem obierz kurs na... programowanie gier w Unity!\nSzkolenie dla dzieci w wieku 10 – 13 lat\n\nBill Gates twierdzi, że nauka pisania programów to gimnastyka dla mózgu. Pozwala wykształcić umiejętność efektywnego myślenia o rzeczach niezwiązanych z informatyką. Pomyśl: czy wolisz walczyć ze swoim dzieckiem, ograniczając mu dostęp do komputera, czy jednak wybierzesz opcję gwarantującą miło spędzony czas i dodatkowo rozwój intelektualny?\nUnity dla dzieci. Zabawa w programowanie gier. Kurs video. Poziom pierwszy, szkolenie opracowane przez specjalistów od programowania i doświadczonych rodziców, zachęca dzieci do czegoś więcej niż tylko granie na komputerze. Podczas tworzenia zarysu swojej pierwszej gry młodzi adepci programowania poznają i oswoją zagadnienia z wielu dziedzin nauki, takich jak matematyka, fizyka czy język angielski.\nTen kurs będzie miał też pozytywny wpływ na rozwój funkcji psychicznych i społecznych dziecka. Pomoże mu rozwijać mowę, poprawi jego koncentrację, ułatwi wprowadzanie różnych pojęć. A że większość dziewczynek i chłopców po prostu uwielbia spędzać czas przed komputerem, skuteczność nauczania będzie wielokrotnie wyższa. Sprawdźcie to sami!\n\nCo czeka Twoje dziecko podczas tej przygody z programowaniem?\nZdobędzie podstawową umiejętności programowania.\nPozna podstawy obsługi programu Unity.\nZrozumie logiczną kombinację kodu.\nDowie się, w jaki sposób tworzone są poszczególne elementy w grach komputerowych.\nNauczy się, łącząc podstawowe bryły, budować bardziej skomplikowane kształty.\nPozna zasady symulowania zdarzeń fizycznych w grach komputerowych.\nZbuduje otoczenie swojej gry w 3D.\nNauczy się podstawowych pojęć z dziedziny programowania (rozkaz, funkcja, algorytm, skrypt).\nNapisze swoje pierwsze proste skrypty w języku C#.\nRozwinie twórcze myślenie.\nZacznie organizować pracę projektowo.\nA także...\nDowie się, jak zadbać o sprawność i kondycję swojego mózgu!\nAutor kursu sam jest ojcem trójki dzieci i nie zachęca do przesiadywania godzinami przed komputerem. Przeciwnie — w kolejnych częściach szkolenia wyjaśnia, jak ważne dla pracy mózgu są ruch na świeżym powietrzu i właściwe odżywianie. Jednak dzisiejszy świat jest przeładowany elektroniką, a Twoje dziecko ma naturalną chęć jego poznawania i uczenia się wielu rzeczy. Dlatego musisz je przygotować na korzystanie w dobry sposób z możliwości, które się przed nim otworzą.\nPodczas kursu przekazywana jest także wiedza, którą dzieci nie zawsze mogą nabyć w szkole. Szkolenie wykorzystuje różne metody rozwiązywania problemów, specyfikę pracy grupowej i indywidualnej czy w końcu — zasady kodowania. Poszczególne tematy są tłumaczone na praktycznych przykładach. Wszystko to budzi w dziecku duże zaangażowanie w pracę, dzięki czemu skuteczność nauczania jest wielokrotnie wyższa.\nKurs kończy się na poziomie podstawowym. Pięćdziesiąt lekcji ma za zadanie w sposób atrakcyjny i interesujący oswoić młodego człowieka z podstawowymi zagadnieniami związanymi z programowaniem gier.\nNauka poprzez radość\nNasz ekspert podpowiada zupełnie zielonym kursantom, jak rozpocząć przygodę z Unity. W Danii, kraju, w którym powstał ten silnik, w szkołach uczy się dzieci tworzenia gier. To fantastyczny trening logicznego myślenia i wynajdywania wielu dróg rozwiązania danego problemu. Podczas tworzenia gry dziecko nieświadomie wyrabia nawyk korzystania z kilku dziedzin nauki jednocześnie, bez sztywnego podziału na przedmioty. Fascynująca zabawa pomaga w przyswajaniu zagadnień związanych z matematyką, fizyką i w myśleniu abstrakcyjnym — a to wszystko często w języku angielskim.\nDodatkowo nauka programowania może się okazać wspaniałą zabawą dla całej rodziny i uprzyjemnić wspólnie spędzany czas.\nCzego zatem możesz się obawiać jako rodzic i opiekun? Absolutnie niczego! Nowe technologie bezwzględnie wkraczają do polskich szkół, a Twoje dziecko powinno umieć obsługiwać komputer. Ale niekoniecznie musi całymi dniami grać. Unity dla dzieci. Zabawa w programowanie gier. Kurs video. Poziom pierwszy pokaże mu, jak ciekawym zajęciem może być tworzenie własnej wirtualnej rzeczywistości. To nauka i zabawa odpowiednia dla dziewczynek, chłopców i ich rodziców.\nDobre nawyki przy komputerze\nUnity dla dzieci. Zabawa w programowanie gier. Kurs video. Poziom pierwszy został przygotowany głównie z myślą o młodszych nastolatkach w wieku 10 – 13 lat, natomiast przy niewielkiej pomocy osoby dorosłej z większością materiału poradzą sobie także dziewięciolatki. Programowanie gier w Unity wspaniale uczy młodych ludzi systematyczności i koncentracji. Rozwija umiejętność postrzegania, kojarzenia i logicznego myślenia. Doskonali umiejętność podejmowania decyzji i przewidywania jej konsekwencji. Pozwala zdobyć wartościowe informacje i poszerzyć posiadaną wiedzę. Jest także niesamowitym treningiem wyobraźni.\nZasiądźcie wspólnie do komputera i zbudujcie ciekawe otoczenie do swojej gry. Przygotujcie przeszkody według scenariusza i skompilujcie grę do pliku uruchamialnego .exe. Dzięki nauce podstaw obsługi interfejsu, tworzenia brył 3D, konfiguracji obiektów fizycznych i wykrywania możliwych zakończeń gry Twoje dziecko zrozumie, że gra komputerowa to nie alternatywny świat, a tylko program, który ktoś stworzył, aby dać innym rozrywkę.\nPoznaj naszego eksperta\nArkadiusz Brzegowy, rocznik 1977. Od dzieciństwa pasjonat komputerów. Pierwsze programy pisał na Atari 65XE w Basicu. Kontakt z grafiką 3D miał pod koniec nauki w technikum, jeszcze w DOS-owej wersji 3D Studio. Karierę w branży gier rozpoczął pod koniec studiów na krakowskiej Akademii Górniczo-Hutniczej przy projekcie Hell-Copter wydanym przez Ubisoft. Projektowanie gier i interaktywnych multimediów kontynuował, pracując w Grupie Onet oraz w założonych przez siebie firmach Artyści Nowych Mediów i Feel3D. Jego podstawową działalnością jest projektowanie aplikacji 3D dla przemysłu i na rynek rozrywkowy. Tworzy między innymi gry, symulatory przemysłowe, aplikacje z wykorzystaniem hełmów VR i rękawic zanurzeniowych oraz aplikacje rzeczywistości rozszerzonej. Specjalizuje się w tworzeniu dzieł w Unity, od kilku lat jest też resellerem Unity w Polsce — prowadzi doradztwo i szkolenia w zakresie tej technologii.\nPo godzinach stara się oderwać od komputera, aby czerpać radość z wielu dziedzin życia. Gra na perkusji, ściga się gokartami, piecze domowy chleb i pokazuje dzieciom świat. To wszystko zresztą jest inspiracją do tworzenia gier i aplikacji.\n„Młode programistki i młodzi programiści, tworzenie gier potrafi dać więcej radości niż samo granie. To Wy wyznaczacie zadania graczom i szykujecie im podstępne pułapki. Na pewno też z dumą będziecie patrzeć, jak inni zmagają się z Waszymi pomysłami. Nauczycie się korzystać z wielu dziedzin nauki jednocześnie, co ułatwi Wam radzenie sobie z zadaniami szkolnymi i życiowymi. Życzę powodzenia i czekam na Wasze gry!”",
      "target_audience": [
        "Wszyscy, którzy chcą zaszczepić w swoich dzieciach zainteresowanie tworzeniem gier"
      ]
    },
    {
      "title": "Games in Scratch #1: Races",
      "url": "https://www.udemy.com/course/games-in-scratch-1-races/",
      "bio": "Creating Races with clones, loops and conditional statements in Scratch",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "basic knowledge of Scratch: logging into your account, creating new project, practical experience with at least some of Scratch controls",
        "having experience working with variables in Scratch",
        "understanding of conditional statements (IF-ELSE, comparison, greater than, less than)"
      ],
      "description": "In this course we will create game \"Races\" in the Scratch programming language. We will learn by doing!\n\n\nWho is this course suitable for:\nTeachers and parents who want to keep their children busy :)\nChildren and teenagers with at least intermediate level of Scratch proficiency\n\n\nThe course also contains theoretical explanations, but most of the course is practical. We will repeat or learn such areas as:\nworking with the coordinate system, why and when our coordinates are positive/negative;\nworking with variables: what it is and why they are needed;\ncreating sprite clones: how not to lose them during gameplay and why we need to delete them when we no longer needed.\n\n\nI recommend that students simply repeat all the steps from the video, so at the end of the course they will have their own game, which they will be able to navigate and then be able to independently make some changes and expand the game at their own discretion. At the end of the course, materials with source codes for all sprites are provided - using them you can check whether the game is made correctly and fix any non-working parts.\n\n\nNote: Those who under 18 years old may use this course only if a parent or guardian provides their account and controls all key activities while using the account.",
      "target_audience": [
        "adults and teachers who want their children to be able to develop games",
        "teenagers who want to improve their programming skills"
      ]
    },
    {
      "title": "Unreal Engine 5: Nhập Môn C++",
      "url": "https://www.udemy.com/course/unreal-engine-5-code/",
      "bio": "Học C++ cho Unreal Engine 5 và Làm Game Soulslike",
      "objectives": [
        "Làm Game Soulslike (Unreal Engine 5)",
        "Nền tảng lập trình từ A đến Z (Nhị Phân, C, C++, C++ cho Unreal Engine)",
        "Clean Code",
        "Học 5 nguyên tắc S.O.L.I.D trong lập trình"
      ],
      "course_content": {},
      "requirements": [
        "Biết lập trình Blueprint trong Unreal Engine"
      ],
      "description": "Khóa học Unreal Engine 5 C++: Nhập Môn C++\nKhóa học này dành cho những bạn đã có kiến thức về lập trình bằng Blueprint và muốn mở rộng kỹ năng làm game bằng ngôn ngữ C++. Đặc biệt, khóa học này hướng đến những ai yêu thích thể loại game Soulslike như Elden Ring, Sekiro và muốn tham gia vào quá trình phát triển game bằng Unreal Engine 5.\n\n\nPhần đầu của khóa học tập trung vào việc hướng dẫn lập trình C++ một cách dễ hiểu và phù hợp cho mọi đối tượng. Khóa học cung cấp nền tảng lập trình toàn diện, từ những kiến thức cơ bản đến nâng cao. Điều đặc biệt của khóa học là việc giảng dạy bằng tiếng Việt, giúp học viên dễ tiếp cận và hiểu bài học hơn. Ngoài ra, chất lượng video và âm thanh trong khóa học đảm bảo tốt, giúp học viên có trải nghiệm học tốt hơn.\n\n\nCác điểm mạnh của khóa học bao gồm hướng dẫn viết Clean Code, áp dụng 5 nguyên tắc S.O.L.I.D trong lập trình hướng đối tượng và đặc biệt là khóa học về Unreal AI tốt nhất. Nội dung chính của khóa học xoay quanh việc phát triển game Soulslike, học lập trình C, lập trình C++ cũng như sử dụng C++ trong Unreal Engine 5. Học viên cũng được hướng dẫn cách sử dụng Unreal Interface, điều khiển Enemy trong game bằng Unreal AI và quản lý quyết định của AI thông qua Behavior Tree. Đồng thời, khóa học cũng giới thiệu cách di chuyển nhân vật bằng bàn phím và chuột, quản lý Animation, thêm âm thanh và hiệu ứng, cũng như hiển thị các chỉ số của nhân vật thông qua User Widget, bao gồm Thanh Máu và Thể Lực.",
      "target_audience": [
        "Những bạn đã biết lập trình Blueprint, và muốn học thêm C++",
        "Những bạn thích thể loại game Soulslike"
      ]
    },
    {
      "title": "Desenvolvimento de Jogos com GameMaker do Zero ao Avançado",
      "url": "https://www.udemy.com/course/desenvolvimento-de-jogos-com-gamemaker-do-basico-ao-avancado/",
      "bio": "Aprenda programação de jogos com Game Maker de forma descomplicada, desde o zero até o avançado.",
      "objectives": [
        "Desenvolvimento de Jogos em 2D",
        "Lógica de Programação",
        "Escrita de Códigos de Programação",
        "GameMaker Language (GML)",
        "Design de Níveis",
        "Boas Práticas de Design de Jogos",
        "Exportação e Publicação de Jogos"
      ],
      "course_content": {
        "Introdução ao Desenvolvimento de Jogos": [
          "Boas-vindas",
          "Visão Geral: O Mercado de Desenvolvimento de jogos 1/2",
          "Visão Geral: O Mercado de Desenvolvimento de Jogos 2/2",
          "Links que vão potencializar seu aprendizado ⚡"
        ],
        "Introdução ao GameMaker": [
          "Por que usar o Gamemaker?",
          "Versão, Download Gratuito, Showcase e mais!",
          "Conhecendo o Programa",
          "Janela Inspector (Atualização na Interface)",
          "Coordenadas, Eventos e Movimentação Básica"
        ],
        "Projeto Piloto: Battle Tanks": [
          "Preparando o Projeto",
          "Controles e Movimentação pelo Cenário",
          "Destruindo Inimigos e Configurando Animações",
          "Adicionando Sons e Efeitos Sonoros",
          "Dúvidas Frequentes - Não Pule"
        ],
        "Linguagem e Lógica de Programação": [
          "Introdução",
          "Dados e Variáveis",
          "Operações Aritméticas",
          "Operações de Incremento e Decremento",
          "Operações de Comparação",
          "Exercício Verdadeiro/Falso",
          "Estruturas Condicionais",
          "Operadores Lógicos e Prática Condicional",
          "Estruturas de Controle e Atividade Prática"
        ],
        "Criando Super Arkanoid | Básico": [
          "Level Design da Primeira Fase",
          "Entendendo o Evento STEP",
          "Movimentação do Player e Arremesso da Bola",
          "Interpretando Mensagens de Erro",
          "Limitando Campo de Movimento",
          "Colisões e Rebatida da Bola",
          "Direções Dinâmicas",
          "Exibindo Informações na Tela",
          "Pontuação, Recorde, Vidas e Game Over",
          "Geração Randômica de Item Coletável",
          "Coletando Item e Ativando Power UP",
          "Funcionamento do Power UP",
          "Criando Fases 2 e 3",
          "Concluindo e Passando de Fases",
          "Adicionando Sons no Jogo"
        ],
        "Criando Super Arkanoid | Intermediário": [
          "Bolinha com Loop Infinito na Horizontal (Solução)",
          "Criando Item Surpresa (Power Up/Power Down)",
          "Criando um Super PowerUp (Linha de Tiros)",
          "Efeito de Super Destruição (PowerUp da Bola)",
          "Balanceando a Liberação dos Itens Coletáveis",
          "Recompensando Jogador ao Passar de Fase",
          "Efeito de Rastro e Trilha Sonora",
          "Sistema de Pause - 1/2",
          "Sistema de Pause - 2/2",
          "Ajustes nos Power Ups 1/2",
          "Ajustes nos Power Ups 2/2",
          "Criando Menu do Jogo 1/2",
          "Criando Menu do Jogo 2/2",
          "Opções de Dificuldade",
          "Ajustes Complementares",
          "Sistema de Save/Load",
          "Balanceamento da Dificuldade"
        ],
        "Avançando com GameMaker: Shoot 'em Up/Space Shooter (Parte 1)": [
          "View Ports, Câmeras e Controle do Player",
          "Tiros, Efeito ao Disparar e Efeito de Hit",
          "Tiro Especial Após 5 Segundos",
          "Editor de Partículas: Visão Geral",
          "Criando Efeito de Partículas do Tiro Especial",
          "Efeito Durante Carregamento do Tiro",
          "Inimigos Comuns e Área de Explosão",
          "Programando Inimigos (Comuns e Rápidos)",
          "Programando Inimigos (Zig Zag/Curve Animation)",
          "Programando Inimigos (Atiradores)",
          "Programando Asteroides",
          "Destruição e Geração de Fragmentos do Asteroide",
          "Destruindo Asteroides com o Tiro Especial",
          "Limites do Player, Revisões e Ajustes"
        ],
        "Avançando com GameMaker: Shoot 'em Up/Space Shooter (Parte 2)": [
          "Dano e \"Screen Shake\"",
          "Cenário do Jogo",
          "Preparando Barras da HUD",
          "Programando a Barra de Vidas",
          "Programando a Barra de Energia",
          "Indicativo da Barra de Energia",
          "Atividade: Indicativo da Barra de Vidas",
          "Resolução: Indicativo da Barra de Vidas",
          "Tempo Invulnerável Após Receber Dano",
          "Ajustes no Carregamento do Tiro Especial",
          "Inimigos que atiram por trás",
          "Cápsula e Item Speed Up",
          "Músicas e Efeitos Sonoros",
          "Level Design na Prática (Fase Completa)",
          "Destruição do Player e Reset",
          "Final da Fase",
          "Agradecimentos"
        ],
        "Avançando com GameMaker: Tamagotchi": [
          "Preparação do Projeto",
          "Programando o State Machine (Máquina de Estados)",
          "Alternando entre os estados",
          "Efeito Fade Transition",
          "Niveis e Taxa de Diminuição dos Estados",
          "Função que Verifica Níveis dos Estados",
          "Alternando entre estados Feliz e Entediado após um Tempo",
          "Inserindo e Configurando os Botões do Jogo",
          "Programando o Ciclo (Feliz > Entediado > Brincando > Feliz)",
          "Programando o Ciclo (Feliz > Fome > Comendo > Feliz",
          "Proposta de Atividade",
          "Progamando o Ciclo (Feliz > Sujo > Banho > Feliz)",
          "Fantasminha do Personagem e Ajustes no Estado de Morte",
          "Arrays com as Falas do Personagem",
          "Exibindo Balão de Falas do Personagem",
          "Ajustes na Exibição dos Textos",
          "Balanceamento do Jogo e Trilha Sonora",
          "Nascimento do Dinossauro 1/2",
          "Nascimento do Dinossauro 2/2"
        ],
        "GameMaker Avançado: Beat 'em Up": [
          "Primeiros Passos",
          "Montagem do Level e Animações",
          "Player: Estados Parado e Andando",
          "Player: Estados Pulando, Atacando e Limitações da Rua",
          "Player: Golpeando Inimigos",
          "Barra de Sangue e Profundidade da Rua",
          "Inimigos: Inteligência Artificial 1/2",
          "Inimigos: Inteligência Artificial 2/2",
          "Inimigos: Ajustes e Melhorias",
          "Inimigos: Herança, Scripts e Muitos Inimigos!",
          "Level: Regiões de Batalha",
          "Colisões Personalizadas",
          "Extra: Tratamento de Sprites"
        ]
      },
      "requirements": [
        "Não é necessário nenhuma experiência prévia"
      ],
      "description": "Desenvolver jogos pode parecer um desafio complexo e intimidador, mas com o curso \"Desenvolvimento de Jogos com GameMaker do Zero ao Avançado\", você descobrirá como essa jornada pode ser descomplicada e envolvente. Este curso foi projetado para guiá-lo desde os primeiros passos no desenvolvimento de jogos até a criação de projetos avançados e profissionais, utilizando o GameMaker, uma das ferramentas mais poderosas e acessíveis da indústria.\nVocê começará o curso explorando os fundamentos do desenvolvimento de jogos, entendendo os conceitos essenciais e aprendendo como transformar suas ideias em realidade. Em seguida, mergulhará na interface do GameMaker, familiarizando-se com suas funcionalidades e recursos. Em seguida, mergulharemos na programação de jogos com GML, a linguagem própria do GameMaker. Todos os conceitos serão apresentados de maneira simples e acessível, permitindo que até mesmo aqueles que nunca programaram antes possam acompanhar e aprender. Nessa etapa, você entenderá como funciona a estrutura de eventos do GameMaker, com uma abordagem que estimulará gradualmente sua lógica de programação.\nNos módulos práticos, você desenvolverá projetos como o introdutório Battle Tanks e uma versão completa e renovada do Super Arkanoid, que evoluirá do básico ao intermediário. À medida que avança, enfrentará desafios mais complexos, como criar um Shoot 'em Up/Space Shooter e até mesmo uma versão personalizada do Tamagotchi, simulando experiências de jogos que cativam diferentes públicos. E para fechar com chave de ouro, você desenvolverá um Beat 'em Up inspirado no clássico do Super Nintendo, Final Fight, dominando as técnicas para criar um jogo de \"briga de rua\".\nPara finalizar, você aprenderá a exportar e publicar seus jogos na web, podendo compartilhar como quiser. Se você está pronto para transformar sua paixão por jogos em habilidade profissional, este curso é o ponto de partida ideal. Prepare-se para dominar a arte do desenvolvimento de jogos de forma divertida, prática e descomplicada!",
      "target_audience": [
        "Pessoas que querer aprender a criar jogos 2D",
        "Pessoas que querem aprender Gamemaker",
        "Desenvolvedores de todas as áreas que desejam aprender a criar jogos",
        "Iniciantes em programação que desejam aprender a programar jogos",
        "Programadores de todos os níveis que desejam aprender a criar jogos"
      ]
    },
    {
      "title": "Jeux & App en Réalité augmentée avec Unity et Vuforia",
      "url": "https://www.udemy.com/course/realite-augmentee-avec-unity-2017-et-vuforia/",
      "bio": "Maitriser la réalisation d'application et de jeux en Réalité augmentée avec Unity et Vuforia",
      "objectives": [
        "Maitriser les composants de Vuforia",
        "Créer des applications intégrant la réalité augmentée",
        "Créer des jeux en réalité augmentée",
        "Développer vos compétences avec Unity et le C#"
      ],
      "course_content": {
        "Introduction": [
          "Activer Vuforia dans Unity",
          "Qu'est-ce que la réalité augmentée ?",
          "Configuration Vuforia Developper"
        ],
        "Vuforia Image target": [
          "Paramétrage Image Target",
          "Projection d'un modèle 3D en réalité Augmentée",
          "Utiliser un Bouton Virtuel",
          "Utiliser Plusieurs Boutons Virtuel",
          "Détecter le Tracking"
        ],
        "Vuforia Multi image Target": [
          "Paramétrage Multi Target",
          "Multi Target simultané"
        ],
        "Cylinder Target": [
          "Paramétrage Cylinder Target",
          "Projection de modèle sur le Cylinder target"
        ],
        "Object target (3D scan)": [
          "Scan de l'objet",
          "Intégration de l'objet dans unity",
          "Recouvrement de l'objet 3D",
          "Démonstration Application ObjectTarget (3D Scan Falcon Millénium)"
        ],
        "Ground Plane et Middle Air": [
          "Ground Plane Target",
          "Middle Air"
        ],
        "AR Camera & Setting Vuforia": [
          "AR Camera",
          "Paramètres de Vuforia",
          "Device Tracking Exemple"
        ],
        "Vuforia Core Sample": [
          "Intégration \"Core Sample\"",
          "User Defined Target",
          "Testez vous sur Vuforia"
        ],
        "Compilation du jeu ou de l'app pour Plalteforme Android": [
          "Installation de la JDK Java",
          "Installation de la SDK Android",
          "Compilation du jeu"
        ],
        "VU CAR PARK Réalisation d'un jeu vidéo en réalité augmentée": [
          "Présentation du projet : VuCarPark (CarParking like)",
          "Structure du jeu (Mini cahier des charges)",
          "Implémentation de \"Vuforia\" et du \"marker\" dans la scène.",
          "Mise en place du \"Level Design\"",
          "Déplacement du véhicule",
          "Rotation des roues",
          "Braquage des roues avants",
          "Détecter les collisions",
          "Indicateur visuel de parking",
          "Le véhicule est-il stationné - Collider.Bounds Partie1 (Théorie)",
          "Le véhicule est-il stationné - Collider.Bounds Partie 2 (Pratique)",
          "Scène de menu (Désactivation de Vuforia)",
          "Partie Perdue",
          "Stage Suivant",
          "Effet audio du jeu",
          "\"Unity remote\" Installation et intégration dans le projet",
          "Cross platform input",
          "Mobile Joystick",
          "Mobile Button",
          "Information stage",
          "Detection du \"marker\"",
          "Recharger le dernier Stage réussi",
          "Amélioration Parking Place",
          "Réalisation des autres Stages",
          "Code Source Unity VuCarPark"
        ]
      },
      "requirements": [
        "Connaissances des bases Unity et C#"
      ],
      "description": "Unity intègre maintenant le Moteur de réalité Vuforia, ce qui rend encore plus facile la création d'expériences de réalité augmentée.\nDans ce cours nous étudierons dans un premier temps les fonctionnalités de Vuforia avec des exemples pratiques plutôt orientés applications.\nEnsuite nous réaliserons deux jeux vidéo au style très différent permettant de découvrir d'autres aspects de Vuforia.\nQu'est-ce que Vuforia ?\nVuforia est une plate-forme logicielle pour créer des applications de réalité augmentée. Il est très facile d'ajouter des fonctionnalités avancées de vision par ordinateur à n'importe quelle application, ce qui permet de reconnaître des images et des objets, et d'interagir avec des espaces dans le monde réel.\nLa plate-forme Vuforia prend en charge le développement d'applications AR pour les appareils Android, iOS et UWP.\nQu'est-ce que la réalité augmentée ?\nLa réalité augmentée est la superposition de la réalité et d'éléments (sons, images 2D, 3D, vidéos, etc.) calculés par un système informatique en temps réel. Souvent, elle désigne les différentes méthodes qui permettent d'incruster de façon réaliste des objets virtuels dans une séquence d'images. Elle s'applique aussi bien à la perception visuelle (superposition d'image virtuelle aux images réelles) qu'aux perceptions proprioceptives comme les perceptions tactiles ou auditives. Ces applications sont multiples et touchent de plus en plus de domaines, tels que les jeux vidéo, l'éducation par le jeu, les chasses aux trésors virtuelles, le cinéma et la télévision (post-production, studios virtuels, retransmissions sportives...).\nPourquoi vous devriez vous intéresser à la réalité augmentée ?\nLa réalité augmentée est l'un des phénomènes émergents permis par le développement et la démocratisation des technologies. Le développement d'un jeu offrant un mode réalité augmentée sera beaucoup plus populaire qu'un jeu traditionnel.\nDans ce cours en 3 parties nous découvrirons en premier lieu :\nl' Intégration de vuforia dans unity.\nVuforia et ses composants par des exemples.\nLes limitations des différentes Target.\nL’utilisation d'outil externe comme l'application de scan d'objet 3D.\nLe portail developper de vuforia et ses paramétres.\nL' ArCamera le composant essentiel d'ne scène en réalité augmentée.\nEtc...\nEnsuite nous réaliserons un premier jeu : VU CAR PARK\nUn jeu de type  \"CarParking\" qui permettra d'exploiter pleinement la réalité augmentée, le joueur pourra se déplacer autour du \"marker\" afin de diriger le véhicule plus finement.\nPour finir nous réaliserons un second  jeu au \"gameplay\" totalement différent : AR SHOOTER.\nCelui-ci n'utilisera pas de \"marker\" vous serez au centre du monde avec votre smartphone en main et vous devrez \"shooter\" des ennemis arrivant tout autour de vous.\nPour suivre ce cours il est préférable de connaitre les bases d'unity et du C#, cependant l'utilisation de vuforia est accessible au plus grand nombre.\nSi vous n'êtes pas encore convaincu de l’intérêt de vuforia et de la réalité augmentée avec UNITY, je vous propose de regarder les vidéos du cours qui sont en libre accès.\nAlors si vous voulez apprendre vuforia et maîtriser le développement de jeux ou d'applications en réalité augmentée ?\nRejoignez-moi dans la première partie de ce cours.",
      "target_audience": [
        "Quiconque souhaite découvrir la réalité augmentée dans Unity"
      ]
    },
    {
      "title": "UNITY : DES FORMATIONS POUR JEUX MOBILES",
      "url": "https://www.udemy.com/course/unity-2017-creer-un-jeu-telephone-pour-noel-c/",
      "bio": "Créer des jeux mobiles avec Unity grâce à cette formation complète",
      "objectives": [
        "Comment démarrer un jeu téléphone",
        "Comment créer des items graphiques dans Illustrator et les exporter",
        "Comment découper et utiliser les items dans Unity",
        "Créer des scenes de jeu",
        "Intéractions entre élèments",
        "Faire des Animations dans Unity",
        "Mettre en place des Events dans les Animations",
        "Les scripts utiles dans un jeu téléphone",
        "Créer un SHOP - Magasin",
        "Créer un Menu Loosing",
        "Créer des scripts Scores",
        "Créer un Script Sauvegarde",
        "Créer un générateur d'élèments",
        "Déplacer son personnage",
        "Créer des particles/FX",
        "Exporter le jeu pour Android",
        "Créer un Logo du Jeu",
        "------------------------------------------------------------",
        "BONUS - Liens"
      ],
      "course_content": {},
      "requirements": [
        "Mac or PC capable of running Unity® or Unity®PRO.",
        "Mac ou PC capable de lancer Microsoft Visual Studio.",
        "Illustrator CC ou autre Version",
        "Premiere CC ou autre Version"
      ],
      "description": "Envie d'apprendre Unity ? De créer des jeux ? De migrer depuis un autre moteur ? De vivre de votre passion ?\nCette formation est faite pour vous ! Pas besoin de connaissances particulières, nous allons tout voir de A à Z !\nCette formation complète sur Unity vous permettra d'apprendre à créer des jeux mobiles avec le langage de programmation C#. Cette formation vous permettra d'apprendre à utiliser Unity tout en mettant vos connaissances en pratique immédiatement. Tout au long de cette formation, nous allons suivre notre fil rouge : Créer des jeux pour téléphone.\nNous découvrirons tout depuis le début (pas besoin de connaissances pour suivre cette formation) et nous irons jusqu'à la publication de notre jeu en ligne. Étant expert certifié Unity, j'ai fait en sorte de vous transmettre les bonnes pratiques pour aboutir à un projet de qualité pro. J'enseigne Unity depuis plus de 3 ans.\nAprès avoir suivi cette formation, vous serez à l'aise avec Unity et vous serez en mesure de développer n'importe quel type de jeux téléphones.\nVous y apprendrez les techniques essentielles du développement de jeux mobiles.\nAlors n'attendez plus, lancez-vous et devenez développeur de jeu indépendant pour vivre de votre passion.\nApprenez à créer un jeu mobile !!!\n\n\n##ENGLISH##\n\n\nWant to learn Unity? To create games? To migrate from another engine? To live off your passion?\n\n\nThis training is for you! No need for special knowledge, we will see everything from A to Z!\n\n\nThis comprehensive training on Unity allows you to learn how to create mobile games using the C # programming language. This course allows you to learn how to use Unity while putting your knowledge into practice immediately. Throughout this training, we will follow our common thread: Create games for the phone.\n\n\nWe will find out everything from the start (no knowledge is needed to take this training) and we will go until the publication of our game online. Being a Unity certified expert, I made sure to pass on the best practices to you to lead to a professional quality project. I have been teaching Unity for over 3 years.\n\n\nAfter completing this training, you will be comfortable with Unity and you will be able to develop any type of phone game.\n\n\nYou will learn the essential techniques of mobile game development.\n\n\nSo don't wait any longer, get started and become an independent game developer to live off your passion.\n\n\nLearn how to create a mobile game !!!",
      "target_audience": [
        "Les amoureux du Graphisme",
        "Les nouveaux a Illustrator et Unity",
        "Les artistes ou developpeurs qui veulent developper leur propre jeu"
      ]
    },
    {
      "title": "Crea sistemas de juegos en línea con canvas y PHP 7",
      "url": "https://www.udemy.com/course/crea-juegos-en-linea-en-html5-con-canvas-svg-json-y-sql/",
      "bio": "Aprende a crear juegos en línea con canvas, gráficos SVG con datos JSON, javascript con POO y PHP con bases de datos SQL",
      "objectives": [
        "Aprenderás a hacer gráficos dinámicos a través de javascript y a utilizar javascript con programación orientada a objetos.",
        "Aprenderás el uso de los gráficos SVG mezclados con CANVAS, y hacer colisiones físicas para tus juegos.",
        "Aprenderás a construir un juego de plataforma al mejor estilo de Mario Bros (enemigos, colisiones, trampas, saltos, vidas, entre otros elementos que caracterizan los juegos de plataforma).",
        "Aprenderás a utilizar el patrón Modelo-Vista-Controlador con PHP orientado a objetos para que nuestros juegos sean multi-usuarios, seguros y se pueda llevar registros de puntajes.",
        "Aprenderás a construir tus propios juegos en línea con registro multi-usuario desde la red social de facebook para generar estrategias y campañas de masificación de tus juegos en la web. Además estos juegos que vas desarrollar en línea los podrán jugar desde diversas plataformas como laptop, tablet o móvil sin necesidad de instalar ninguna extensión."
      ],
      "course_content": {
        "Introducción a CANVAS": [
          "Bienvenida",
          "Canales de comunicación y aprendizaje",
          "Antes de comenzar",
          "CANVAS",
          "Preparando nuestro lienzo - parte 1",
          "Preparando nuestro lienzo - parte 2",
          "Dibujando figuras geométricas - parte 1",
          "Dibujando figuras geométricas - parte 2",
          "Dibujando figuras geométricas - parte 3",
          "Creando nuestro primer dibujo en CANVAS - parte 1",
          "Creando nuestro primer dibujo en CANVAS - parte 2",
          "Utilizando gráficos Mapa de Bits en CANVAS - parte 1",
          "Utilizando gráficos Mapa de Bits en CANVAS - parte 2",
          "Utilizando línea de tiempo en CANVAS - parte 1",
          "Utilizando línea de tiempo en CANVAS - parte 2",
          "Utilizando línea de tiempo en CANVAS - parte 3",
          "Programación Orientada a Objetos en Javascript",
          "POO en CANVAS",
          "Eventos de teclado en CANVAS",
          "Colsiones - parte 1",
          "Colsiones - parte 2",
          "Colsiones - parte 3",
          "Creando nuestro primer juego en CANVAS - Laberinto",
          "Pon en práctica lo aprendido"
        ],
        "PREPARANDO NUESTRO JUEGO DE PLATAFORMA": [
          "Organizando el proyecto bajo el patrón MVC - parte 1",
          "Organizando el proyecto bajo el patrón MVC - parte 2",
          "Organizando el proyecto bajo el patrón MVC - parte 3",
          "Haciendo el registro de Usuarios - parte 1",
          "Haciendo el registro de Usuarios - parte 2",
          "Haciendo el registro de Usuarios - parte 3",
          "Revisar usuarios repetidos",
          "Iniciar Sesión - parte 1",
          "Iniciar Sesión - parte 2",
          "Cerrar Sesión",
          "Archivo HTACCESS y url's amigables",
          "Llamando los niveles y puntajes",
          "Llamando los mejores puntajes",
          "Graficando el CANVAS - parte 1",
          "Graficando el CANVAS - parte 2",
          "Graficando el CANVAS - parte 3",
          "Haciendo un Preload",
          "Llamando datos JSON"
        ],
        "TRABAJANDO CON LA LÍNEA DE TIEMPO": [
          "Moviendo el escenario con el teclado - parte 1",
          "Moviendo el escenario con el teclado - parte 2",
          "Generando efectos de profundidad",
          "Habilitando niveles y actualizando puntajes",
          "Subiendo nivel y puntajes a la base de datos",
          "Aplicando fullscreen al navegador",
          "Agregando la gravedad y las colisiones - parte 1",
          "Agregando la gravedad y las colisiones - parte 2",
          "Agregando la gravedad y las colisiones - parte 3",
          "Agregando el salto de nuestro jugador",
          "Agregando los sprites al jugador",
          "Corrigiendo algunos detalles de colisión"
        ],
        "AGREGANDO LA UTILERÍA DE NUESTRO JUEGO": [
          "Agregando las monedas - parte 1",
          "Agregando las monedas - parte 2",
          "Colisionando con las monedas",
          "Agregando las trampas",
          "Agregando movimiento a las trampas",
          "Agregando los enemigos",
          "Agregando disparos de los enemigos",
          "Colisionando con las balas del enemigo",
          "Agregar disparos del jugador",
          "Colisiones entre disparo jugador y disparo enemigo",
          "Maquetando el tablero del juego",
          "Activando nuestro tablero - parte 1",
          "Activando nuestro tablero - parte 2",
          "Agregando los sonidos - parte 1",
          "Agregando los sonidos - parte 2",
          "Agregando el panel final - parte 1",
          "Agregando el panel final - parte 2",
          "Habilitando los controles del sonido"
        ],
        "FINALIZANDO NUESTRO JUEGO": [
          "Optimizando los sonidos",
          "Optimizando las imágenes",
          "Agregar todos los gráficos a la precarga",
          "Adquiriendo un hosting para nuestro juego",
          "Inicio de Sesión con Facebook - parte 1",
          "Inicio de Sesión con Facebook - parte 2",
          "Cerrar Sesión de Facebook",
          "Compartir puntajes con Facebook",
          "Agregando nuestro juego al escritorio de los dispositivos touch",
          "Creando inicio de Sesión desde dispositivos touch",
          "Creando los controles para dispositivos touch",
          "Cambiar etiqueta <meter> por etiqueta <progress>",
          "Subiendo nuestro juego al servidor remoto",
          "Probando nuestro juego desde un IPAD",
          "Despedida",
          "Clase Extra"
        ]
      },
      "requirements": [
        "Es recomendable que los estudiantes que tomen este curso estén familiarizados con JAVASCRIPT y PHP, más no es un requisito."
      ],
      "description": "¿DE QUÉ SE TRATA EL CURSO?\nHoy en día el desarrollo de vídeo juegos ha traspasado las barreras en plataformas, ahora puedes hacer tus juegos orientados a la web, con registro de usuarios e integración de redes sociales para estrategias de negocios o sólo para entretenimiento.\nEn este curso vas a aprender a generar gráficos dinámicos por medio de javascript a través del elemento HTML5 llamado CANVAS. Un recurso que ha revolucionado los gráficos en la web gracias a sus contextos 2D y 3D. Además vamos a utilizar la ventaja de los vectores SVG para ser importados a través de datos JSON y así poder generar interacciones más enriquecidas en Javascript con programación orientada a objetos.\nFinalmente incluiremos datos SQL con PHP utilizando el patrón Modelo-Vista-Controlador para hacer registro de usuarios a través de la red Social Facebook y así impulsar nuestros juegos en forma masiva. ¡Anímate a subir de nivel!\n¿CÓMO ES EL CURSO?\nEl curso se divide en varias secciones. En una primera sección nos introduciremos en CANVAS, allí aprenderás a hacer gráficos dinámicos a través de javascript y a utilizar javascript con programación orientada a objetos.\nLuego aprenderemos el uso de los gráficos SVG mezclados con CANVAS, allí aprenderás hacer colisiones físicas para tus juegos.\nEn las siguientes secciones construiremos un juego de plataforma al mejor estilo de Mario Bros (enemigos, colisiones, trampas, saltos, vidas, entre otros elementos que caracterizan los juegos de plataforma), utilizaremos el patrón Modelo-Vista-Controlador con PHP orientado a objetos para que nuestros juegos sean multi-usuarios, seguros y se pueda llevar registros de puntajes.\nEn la última sección subiremos nuestro juego a un hosting gratuito y conectaremos nuestro juego con los perfiles de Facebook para publicar puntajes y compartirlos de forma masiva.\n¿CUÁNTO SE TARDA EN COMPLETAR EL CURSO?\nDepende de ti. Estimo que menos de tres semanas puedes completar el curso, pero dependerá de tu ritmo de trabajo y de tu disponibilidad.\n¿CUÁLES SON LOS REQUISITOS?\nDescargar el material que se encuentra en los recursos de la primera clase de cada sección. Tener principios en HTML5 y CSS3, curso gratuito que puede realizar en UDEMY: \"Aprende HTML5 y CSS3 desde cero\". No es indispensable pero sería bueno para la construcción del juego y almacenamiento de datos tener bases en Javascript y PHP, además te recomiendo descargar el servidor local XAMPP para cualquier sistema operativo, con versión PHP mínimo 5.6.28, lo puedes descargar desde la página web directa de XAMPP.\n¿A QUIÉN VA DIRIGIDO ESTE CURSO?\nEste curso va dirigido a personas que deseen desarrollar juegos en línea con HTML5, personas que deseen subir de nivel en la programación y adquirir competencias en el desarrollo de video juegos orientado a plataformas web.",
      "target_audience": [
        "Este curso de CANVAS va dirigido a las personas que deseen aprender a crear sus propios juegos en plataformas web de una forma nativa sin ayuda de plugins o extensiones"
      ]
    },
    {
      "title": "Unity C# | Oyun Geliştirme Öğrenin | 0'dan Online Oyun Yapın",
      "url": "https://www.udemy.com/course/unity-c-oyun-gelistirme-ogrenin-0dan-online-oyun-yapin/",
      "bio": "Unity C# Online Oyun Geliştirmeyi Her Şeyi İle Öğrenin | Unity ile kendi oyununu yapmaya hazır mısın? O halde başlayalım",
      "objectives": [
        "Bu kurs sayesinde kendi oyununu çıkarabilecek seviyeye gelmiş olacak.",
        "Şirketler için sağlam bir CV'ye sahip olmuş olacak.",
        "Kendi online oyununu yapabilecek.",
        "C# yazılım dili hakkında bilgi sahibi olmuş olacak.",
        "Unity oyun motorunu öğrenmiş olacak.",
        "3D Modelleme Öğrenmiş Olacak.",
        "Animasyon Yapmayı Öğrenecek."
      ],
      "course_content": {
        "Oyun Geliştirmeye Giriş - Kurulumlar": [
          "Kursta Bizi Neler Bekliyor ?",
          "Oyundan Nasıl Kazançlar Elde Edilebilir",
          "Oyun Satışından Gelir Elde Etmek",
          "WhatsApp Grubumuz",
          "Unity Kurulumunu Yapalım",
          "Unity'de Kullanılabilir Hazır Proje Paketleri Hakkında",
          "Microsoft Visual Studio Ek Kurulum"
        ],
        "Unity'yi Tanıyalım - Unity Panelleri": [
          "Unity Arayüzü - 1",
          "Unity Arayüzü ve Paneller - 2",
          "Unity Arayüzü ve Paneller ve Ek Bilgiler - 3",
          "Unity Arayüzü ve Panaller - 4",
          "Unity Arayüzü Hakkında Bilgiler - 5"
        ],
        "Unity Kodlamaya Giriş": [
          "C# Kodlama Temelleri - 1",
          "C# Kodlama Temelleri - 2",
          "C# Kodlama Temelleri - Matematiksel İşlemler - 3",
          "C# Kodlama Çift mi Tek mi - (Opsiyonel) - 4",
          "C# Kodlama Temelleri - Matematiksel İşlemler - 5",
          "C# Kodlama Temelleri - Time.deltaTime - Matematiksel İşlemler - 6",
          "C# Kodlama Temelleri - Time Hakkında - Matematiksel İşlemler - 7"
        ],
        "C# Temeller ve Bilinmesi Gerekenler": [
          "Unity Fonksiyonlar",
          "C# / if - else if - else nedir? Koşullar",
          "C# / Switch - Case - Default nedir? Koşullar",
          "C# For nedir? - Döngüler",
          "C# Foreach nedir? - Dizi mantığı - Döngüler",
          "C# While nedir? - Döngüler",
          "C# / Do - While nedir? Döngüler",
          "C# List nedir?"
        ],
        "Unity Kodlama - Unity Kütüphanesi": [
          "Unity Kütüphanesi - C# Kodlama - 1",
          "Unity Kütüphanesi - C# Kodlama Vectorler - 2",
          "Unity Kütüphanesi - C# Kodlama Vectorler - 3",
          "Unity Kütüphanesi - C# Kodlama Vectorler - 4",
          "Unity Kütüphanesi - C# Kodlama Vectorler - 5",
          "Unity Kütüphanesi - C# Kodlama Vectorler - 6",
          "Unity Kütüphanesi - C# Kodlama Quaternion",
          "Unity Kütüphanesi - C# Kodlama Transform",
          "Unity Kütüphanesi - C# Kodlama GameObject - Tag - Layer",
          "Unity Kütüphanesi - C# Kodlama Mathf",
          "Unity Kütüphanesi - Obje Oluşturma ve Obje Yok Etme",
          "Unity Kütüphanesi - Obje Erişimi / Tag Erişimi ve Dahası",
          "Unity Kütüphanesi - Hangi Obje Temas Ediyor ? - CompareTag ve Dahası"
        ],
        "Unity Oyunu Kayıt Etme Sistemi - Kayıt İşlemleri": [
          "PlayerPrefs / Oyundaki Parayı Kayıt Etme Sistemi",
          "PlayerPrefs / Oyunda İsim Kayıt Etme Sistemi ve Diğer Örnekler",
          "PlayerPrefs / Oyunda Kayıt Silme İşlemleri ve Dahası"
        ],
        "Unity Zamanlamalar": [
          "Unity Coroutine - IEnumerator hakkında",
          "Unity / Invoke - InvokeRepeating - CancelInvoke hakkında",
          "Unity / Gerçek Zamanlı Zaman Ayarı 7/24 - İleri Seviye (Opsiyonel)"
        ],
        "Unity İçerisindeki Hazır Objeler ve Özellikleri": [
          "UI'lar - 1 - Görsel Ekleme ve Text'ler Hakkında",
          "UI'lar - 2 - Oyundaki Ayarların Kullanıldığı UI'lar ve Dahası",
          "UI'lar - 3 Button, Dropdown, InputField / Kullanıcı Girişleri",
          "3D Objeler - 1 ve Componentler",
          "Efektler",
          "Işıklar",
          "Işıklarda Flare Nedir ? Işık Hüzmeleri",
          "Sesler",
          "Oyunda Video - Intro Yapımı ve Anchors - Ekran Ayarları"
        ],
        "Oyuncu Hareket ve Kontrol İşlemleri - INPUT": [
          "Klavye de Basılan Tuşa Özellik Veriyoruz",
          "Mouse dan Basılan Tuşa Özellik Veriyoruz",
          "Oyuncu Hareket Ettirme ve Rigidbody",
          "Kuvvet Uygulama ve Dahası",
          "Parmak Hareketleri ve Telefon'da Araba Sürme Sistemi"
        ],
        "Ekstra Bilinmesi Gerekenler ve Oyun Geliştirme Adına Kolaylıklar": [
          "Raycast - Ateş etme, Hedef Obje Seçimi Gibi İşlemler / Işın Göndermek",
          "OnDrawGizmos - Oyun Geliştirirken Faydalanabilecek Sanal Çizgiler",
          "Physics - Collider Etkileşim",
          "Singleton - Scriptler Arası Veri Gönderimi",
          "Sahneler Arası Geçiş",
          "Object Pool - Döngüsel Objeler",
          "Tuple Pattern - Karmaşadan Kurtulun",
          "Property Pattern - Karmaşadan Kurtulun",
          "Skor Tablosu - Sıralama Sistemi - İleri Seviye (Opsiyonel)",
          "NavMesh - Yapay Zeka ile Yol Bulma",
          "Occlusion Culling ile Oyunlarda Optimizasyon ve Optimizasyon için Püf Noktalar"
        ]
      },
      "requirements": [
        "Unity'yi sorunsuz açabilecek bir bilgisayar sistemi.",
        "Az çok oyun geliştirme hakkında bilgi sahibi olmak."
      ],
      "description": "Bu kurs sayesinde sende artık oyun geliştirme dünyasının tam anlamıyla bir uzmanı olacaksın. Kursumuzda A dan Z ye her şeyiyle oyun geliştirme mantığını anlatıp, anlatımlar üzerinde örnekler vererek ve pratikte uygulayarak aklınızda hiçbir soru kalmamasını sağlıyoruz. Soru kalsa dahi eğitimciyle 7/24 iletişim imkanı verilmektedir. Sadece kurs içi oyunlardan değil! Sizin de kendiniz geliştirmeye başlamış olduğunuz oyunlar adına da yardımcı olacak bir kurstur.\n* KURS ALTYAZI İÇERMEKTEDİR *\nEnglish, Türkçe ve Español\nKursumuzda oyun geliştirmenin en çok aranan insanlarını yetiştirmiş olacağız.\nKursumuz içeriği\n- C# Temelleri ve bilinmesi gereken pek çok detayları\n- Unity Kütüphanesi\n- Modelleme\n- Online FPS oyunu yapımı\n- Online oyun mantığı\n- Desing Pattern'ler (Yazılım kısmında bize oldukça kolaylık sağlayan içerikler)\n- FPS Oyun Mekanikleri\n- Araba Oyunu Mekanikleri\n- HyperCasual Oyun Mekanikleri\n- Kısacası oyun geliştirmeye dair her şeyi bu kursta bulabileceksiniz.\n\n\nSadece oyun yazılımı anlatıp hazır modeller üzerinden değil! Kendi modellerimizi de yapıp kendi oyunumuzda animasyon katarak oluşturuyoruz oyunumuzu.\n\n\nBu kurs kısacası hem modelleme öğretecek hem de yazılımını öğretecek. Siz değerli arkadaşlarıma yardımcı olacaktır.\n\n\nKursumuzda Unity Oyun Motorunu kullanmaktayız. Modelleme içinse AutoDesk Maya programını kullanmaktayız.\n\n\nPeki neden bu programlar ?\nUnity şuanda hali hazırda en iyi sayılabilen oyun motorudur. Mobil oyunların çoğunluğu bu Oyun Motoru üzerinden geliştirilmiştir. İçeriği 2D ve 3D oyun geliştirmeye kolaylık sağlayan bir motordur. Kendi oyun geliştirme öğrenim paketleriyle de kendi adını tüm oyun geliştirme dünyasına duyurmuştur.\n\n\nMaya şuanda en iyi sayılabilecek Modelleme programıdır. Pixar şirketi çizgi film modellerini ve animasyonları bu program üzerinden yapmaktadır. Oldukça kaliteli ve kullanımı kolay bir programdır.\n\n\nŞimdi sıra artık hayallerinde ki oyunu gerçekleştirmekte! Hadi o halde sende bize katıl.\nHayalindeki oyunu yapmayı istemiyor musun? Tam da doğru yerdesin.\n\n\nKursu alan herkese kurs içerikleri ve kendilerinin geliştirmeye başladığı oyunlara Efektler ve Modeller verilmektedir.",
      "target_audience": [
        "Oyun geliştirmeye dair heves ve arzusu olanlar.",
        "Kendine ait bir online oyun sahibi olup bunun üzerinden gelir elde etmek isteyenler.",
        "Modelleme Öğrenmek İsteyenler"
      ]
    },
    {
      "title": "Power-Kurs Unity: Kartenspiele programmieren lernen",
      "url": "https://www.udemy.com/course/unity-cards/",
      "bio": "Lerne C# für Unity und programmiere Dein eigenes Tarot, Pairs, Patience, Klondike und MauMau.",
      "objectives": [
        "2D-Kartenspiele programmieren",
        "Karten, Stapel, Mischen, Ziehen, Umdrehen, Zurücklegen, Ablegen, Drag&Drop, ...",
        "Spielregeln und Spielparteien in C# umsetzen",
        "Einfache Editor-Erweiterung programmieren",
        "Typische Fehler erkennen, analyisieren und beheben"
      ],
      "course_content": {
        "Einleitung": [
          "Willkommen",
          "Software-Versionen und Installation",
          "Neues Projekt anlegen: Mini-Cards",
          "Download Begleitmaterial"
        ],
        "Basis: Unity-Projekt-Aufbau, Karte per Klick umdrehen": [
          "Ergebnis-Vorschau: Basis",
          "Projektordner anlegen",
          "Spielbrett & Funktionsweise des UI-System",
          "Karte & Bildschirmskalierung",
          "Code beim Klicken auf die Karte aufrufen",
          "Kartenbild austauschen",
          "Umdrehen animieren per Zeitleiste",
          "Bild erst beim Umdrehen tauschen - Script an Zeitleiste binden",
          "Verbesserung: Code nur 1x im Playmode ausführen",
          "Der Code bis hier"
        ],
        "Mehrere Karten & Kartenstapel": [
          "Ergebnis-Vorschau: Abheben",
          "Karte wiederverwendbar machen & Erklärung Prefabs allgemein",
          "Kartenstapel anlegen",
          "Karten aus dem Stapel ziehen & Serializable-Daten",
          "Fehler: Index out of Range - Erklärung & Lösung",
          "Karte vom Ende (statt Anfang) des Stapels ziehen",
          "Zufällige Karte ziehen",
          "Statische Darstellung der Karte & Fehler: Null Reference",
          "Aufräumen: Umdrehen deaktivieren und Karte erst nach Ziehen zeigen",
          "Mehrere Karten ausgeben",
          "Anordnen der Karten auf dem Spielbrett",
          "Deaktivieren der Interaktion des Prefabs",
          "Der Code bis hier"
        ],
        "Spiel: Einfaches Tarot": [
          "Ergebnis-Vorschau: Einfaches Tarot",
          "Zweite Szene und separates Kartendeck",
          "Züge beschränken",
          "Verbleibende Züge im Hilfetext zeigen",
          "Aufräumen: Doppeltes Sprite vermeiden, Darstellung kapseln",
          "Korrektur: Umdrehanimation abspielen, falls im Code vorgesehen",
          "Der Code bis hier & Korrekturhinweise",
          "Verbesserung: Spielprinzip auslagern",
          "Verbesserung: Gemeinsam genutzten Code in Kartenstapel zentralisieren",
          "Der Code bis hier",
          "In Formation legen - Kartenplatzhalter",
          "Verbesserung: Doppelte Daten mittels Get-Property reduzieren"
        ],
        "Spielmenü": [
          "Ergebnis-Vorschau: Menü",
          "Abdunkeln und Szenenwechsel",
          "Menü mit Schalter ein/ausblenden",
          "Menü als Prefab in Szenen verteilen",
          "Übung zu Abheben und Tarot",
          "Der Code bis hier"
        ],
        "Spiel: Paare finden": [
          "Ergebnis-Vorschau: Paare finden",
          "Paar-Szene einrichten",
          "Spielprinzip Paare anlegen",
          "Fehler: Out of Memory / Karten verdoppeln",
          "Spielprinzip an Kartenereignis binden - Delegate & Callback",
          "Besserer Name in der Console - ToString überschreiben",
          "Paare finden",
          "Unpassendes Paar wieder verdecken",
          "Der Code bis hier",
          "Variante: Dialog nach jeder Ziehung",
          "Option: Spiel gewonnen-Dialog",
          "Variante: Timer, Dialog automatisch schließen (Coroutinen)",
          "Korrektur: Klick blockieren, stets nur eine Karte drehen",
          "Der Code bis hier",
          "Übung zu Paare finden",
          "Der Code bis hier"
        ],
        "Spiel: Patience / Solitaire": [
          "Ergebnis-Vorschau: Patience",
          "Patience-Szene einrichten",
          "Ablegen (1) - Interaktionsfluss mit Button und Script",
          "Ablegen (2) - Kartenobjekte erzeugen",
          "Vorschaukarte für oberste Karte des Stapels",
          "Karte zurücklegen",
          "Von oben abheben",
          "Leere Zustände berücksichtigen",
          "Kartenstapel einmal mischen",
          "Der Code bis hier",
          "Eigenes Layout für Ablagestapel",
          "Kartenwerte und Wert-Ablagelogik",
          "Folien: math. Betragsfunktion, Absolut",
          "Folien: Farbregeln aus rechnerischer Sicht",
          "Farbregel einbauen",
          "Anzahl der Ablagestapel erhöhen",
          "Gewinn- und Fehler-Dialoge",
          "Der Code bis hier"
        ],
        "Kartenstapel automatisch einlesen per Editor-Erweiterung [überspringbar]": [
          "Ergebnis-Vorschau: Stapeleditor",
          "Grundlage der Inspectorerweiterung",
          "Auswahl auslesen",
          "Sprite erkennen und in den Stapel einfügen",
          "Wert aus Name ableiten",
          "Farbe aus Name ableiten",
          "Sprite für die Texture2D automatisch finden",
          "Der Code bis hier"
        ],
        "Kartentausch per Drag'n'Drop": [
          "Ergebnis-Vorschau Drag'n'Drop",
          "Klondike-Szene vorbereiten",
          "Hinweis zum Video",
          "Grundlage Ereignisinterfaces & Drag-Quelle",
          "Drop-Ziel",
          "Ablegen der Karte auslösen",
          "Ghost-Image ziehen",
          "Karte aus Drag-Ereignis lesen & Fehler 1503",
          "Ziehen zwischen Spalten - Teil 1 - Drag-Quellen unterscheiden",
          "Ziehen zwischen Spalten - Teil 2 - Daten richtig steuern & Fehler: Can't remove",
          "Schneller testen & Gewinnereignis korrigieren",
          "Ghost-Image für Ziehen zwischen Spalten und leeren Drag abbrechen",
          "Der Code bis hier",
          "Korrektur: NullReferenceException bei letztem Drop"
        ],
        "Klondike-Patience": [
          "Ergebnis-Vorschau Klondike-Patience",
          "Sieben Spalten anlegen & Skalierungstipps",
          "Spielprinzip mit Modul erweitern, Karten auslegen",
          "Harfenform legen",
          "Untere Karten verdeckt auslegen",
          "Freiwerdende Karte automatisch aufdecken",
          "Umdrehanimation korrigieren",
          "Teilstapel ziehen - 1) Karte unter Maus erkennen & Teilstapel zwischenspeichern",
          "Teilstapel ziehen - 2) Verschieben durchführen",
          "Geisterbild für mehrere Karten",
          "Endablage - Zielfläche und Spielregel",
          "Gewinnereignis bei Endablage-Version",
          "Entwickler-Testmodus einbauen",
          "Der Code bis hier"
        ]
      },
      "requirements": [
        "Windows-PC oder Mac auf dem Unity (ab 2018.3) läuft",
        "Geübter Umgang mit Computer und Software",
        "Grundkenntnisse in Unity",
        "Bereitschaft zu experimentieren und an Software zu basteln",
        "Geduld und keine Angst vor komplexen Systemen"
      ],
      "description": "Lerne Spiellogik mit C# in Unity umzusetzen, DEM weltweiten Industrie-Standard für Videospiel-Produktion.\nIn diesem Kurs lernst Du Spielregeln und Interaktionsabläufe in C# auszudrücken und in Kombination mit Unitys UI-Grafiksystem Deine eigenen Computerspiele zu produzieren. Wir setzen in diesem Kurs Kartenspiele um und programmieren Regelwerke für Tarot, Patience, Klondike und MauMau. Das Wissen, das Du während der Umsetzung dieser Spiele gewinnst, ist so aufbereitet, dass es sich auch auf andere Spielkonzepte übertragen lässt.\nDer Kurs zielt darauf ab, die Funktionsweise von Unity so zu erklären, dass sie für Anfänger leicht zu verstehen sind. Für Einsteiger, die schonmal mit Unity experimentiert haben, ist dieser Kurs eine ideale Gelegenheit, um das technische Verständnis von Unitys Funktionsweise und der Programmierung in C# zu vertiefen und zu trainieren.\n\nDAS WIRST DU LERNEN:\nUnitys UI-System zur Darstellung von Spielobjekten nutzen\nSpielbrett, Karten und Kartenstapel realisieren\nKarten zeigen und/oder verdecken\nSpielkarte per Zeitleiste und Code animiert umdrehen\nAufbau einer Spielobjektbibliothek und Wiederverwendung von Prefabs\nKartenstapel als Liste von Karten realisieren\nZiehen einer bestimmten oder zufälligen Karte, Mischen des Stapels, Zurücklegen einer Karte\nGezogene Karten durch per Script auf den Tisch legen\nUnterschiedliche Spiele auf Szenen verteilen, Gemeinsamkeiten dabei wiederverwenden\nMenü zum Szenenwechsel zentral einbauen\nBeschränken von Spielzügen\nLegen von vorgegebenen Formationen\nStatus-Texte, Gewonnen/Verloren-Dialoge und Hilfestellungen anzeigen\nKarten im Stock duplizieren\neinen oder mehrere Kartenablageplätze auf dem Tisch ermöglichen\nKarten mit eigenen Layout-Funktionen anordnen\nFarbe und Wert einer Karte definieren und per Code verarbeiten\nKonkrete Beispiele für Rechenwege um Karten zu vergleichen\nRealisierung von Kartenspielregeln\nEine oder mehrere Karten per Drag&Drop mit der Maus verschieben, Anzeige des Bilds am Mauszeiger (Ghost)\nKartensatz in der Hand des Spielers anlegen\nEinen oder mehrere Computergegner für MauMau programmieren\nSpielrunden umsetzen\n...\n\n\nUND AUßERDEM LERNST DU DIESE ESSENTIELLEN C#-KONZEPTE KENNEN:\nVorgehen zur selbständigen Fehlersuche und Problemanalyse\nFunktionen an Animationszeitpunkten aufrufen\nTrennung von Darstellungscode, Spiellogik und Kartenwerten\nCode-Organisation in Modulen, Trennung von Unterschieden, Zentralisierung von Gemeinsamkeiten\nUnity-Funktionen oder eigene Methoden an UI-Ereignisse binden, per Inspector sowie auch per Code\nDelegaten und Callbacks schreiben\nVerändern der Text-Konvertierung von C#-Objekten\nmit Timern und Coroutinen Abläufe programmieren\nCode nur per EventSystem-Interfaces in den Spielfluss integrieren\nEntwickler-Cheats für schnelles Testen einbauen\nKlassen-Hierarchien und Vererbung\nObjekte nach Klasse unterscheiden\nSpielparteien realisieren\n...\nErweiterung des Unity-Editors:\nGrundlagen der Editor-Erweiterung\nAuslesen der im Editor markierten Assets\nSprites erkennen, suchen und in die Kartenliste des Kartenstapels eintragen\nKartenwerte vom Dateinamen ableiten\n...\nTypische Fehler, ihre Analyse und Behebung:\nIndex out of Range\nNull Reference Exception\nOut of Memory\nCan not convert from method group\nCan't remove RectTransform\nEingabe-Fokus vs. Tastenauswertung\n...\n\n\nDAS SETZEN WIR IN DIESEM KURS KONKRET UM:\nEin Projekt mit verschiedenen Kartenspielen, je als separate Szenen\nMenü über das der Spieler zwischen den Kartenspielen wechseln kann\nTarot: Kleines Kreuz\n· Es werden 4 zufällige Karten aus dem Kartenstapel gezogen.\n· Die Karten werden in bestimmter Reihenfolge auf vorgegebene Ablageplätze der Formation \"Kleines Kreuz\" gelegt.\n· Jedem Platz ist eine Bedeutung zugeordnet, die die Interpretation der Karte beeinflusst.\nPaare finden\n· Jedes Kartenbild liegt zweimal im Kartenstapel.\n· Die Karten werden alle gleichzeitig verdeckt ausgelegt.\n· Der Spieler dreht zwei Karten um. Sind sie identisch, werden sie vom Tisch genommen. Sind sie unterschiedlich, werden beide wieder verdeckt.\n· Ziel ist es, alle Paare zu finden.\nMinimale Patience\n· Aus dem verdeckten und gemischten Kartenstock zieht der Spieler eine Karte.\n· Die Karte kann in eine von vier Ablagespalten platziert werden.\n· Ist die Spalte leer, ist nur ein Ass platzierbar.\n· Liegen Karten in der Spalte kann nur eine Karte mit umgekehrter Farbe (rot auf schwarz) und dem nächst niedrigen Wert (9 auf 10) abgelegt werden.\n· Ist keine Ablage möglich, wandert die Karte nach unten zurück in den Stapel und die nächste obere Stapelkarte wird gezogen.\n· Ziel ist es, alle Karten abzulegen.\nKlondike- Patience\nWie Minimale Patience, aber mit folgender Erweiterung:\n· Es stehen sieben Ablagespalten zur Verfügung.\n· Zu Beginn werden die sieben Spalten mit Karten befüllt. Dabei enthält jede Spalte eine Karte mehr als die vorherige. In der ersten Spalte liegt eine Karte, in der zweiten zwei, in der dritten drei, usw. Nur die oberste Karte jeder Spalte ist aufgedeckt.\n· Übrige Karten verbleiben im Stock von dem jeweils die oberste umgedreht und ins Spiel eingebracht werden kann.\n· Nur aufgedeckte Karten sind spielbar. Eine verdeckte Karte wird automatisch umgedreht, wenn sie die oberste Karte in der Spalte ist.\n· Um verdeckte Karten zu erreichen, ist es möglich, bereits gelegte Kartenserien zwischen den Stapeln zu bewegen, sofern die Ablage gemäß den Patience-Regeln erlaubt ist.\n· Zudem stehen vier Endablagestapel bereit. Das Spiel ist gewonnen, wenn alle Karten einer Farbe (z.B. Herz) in umgekehrter Reihenfolge (2 als erstes, Ass als letztes) auf den vier Endablagestapeln liegen.\nMau-Mau\n· Der Spieler spielt gegen einen oder mehrere Computergegner.\n· Aus dem gemischten Kartenstapel erhält jeder Spieler fünf Karten. Eine weitere Karte wird offen auf den Tisch ausgelegt.\n· Abwechselnd darf jeder Spieler eine Karte ablegen. Eine Karte passt auf eine andere Karte, wenn die gewählte Karte und die bereits liegende Karte die gleiche Farbe oder den gleichen Wert haben.\n· Hat der Spieler keine passende Karte, kann einmal pro Runde eine Karte vom Stock aufgenommen werden. Passt sie, kann sie abgelegt werden. Passt sie nicht, ist der nächste Spieler an der Reihe.\n· Wer als erster alle Karten ablegen konnte, hat gewonnen.\n\n\nES WIRD NOCH BESSER:\nÜbungen mit Musterlösungen zur eigenen Vertiefung der Themen\nkostenloses Asset-Paket mit den nötigen 3D-Modellen und Ressourcen, um sofort selbst mitzumachen\n\"Sicherungspunkte\" mit dem kompletten Abschnitts-Code für Fehlersuche und Vergleich mit dem Deinem Code\npures Kompaktwissen - keine Compiler- oder Wartezeiten in den Videos!\n... und natürlich Udemy's extrem kundenfreundliche Benefits: 30-Tage Rückgaberecht, integriertes Support-Forum und Abschlusszertifikat\n\n\nLos geht's - starte jetzt mit der Programmierung Deiner Spiele!",
      "target_audience": [
        "Unity-Entwickler mit einfachen Anfängerkenntnissen",
        "Alle, die Software-Entwicklung mit Unity/C# trainieren wollen"
      ]
    },
    {
      "title": "C++ Desarrollo de Videojuego 2D Arcade paso a paso",
      "url": "https://www.udemy.com/course/cpp-videojuego-arcade-allegro/",
      "bio": "aprenderás a desarrollar desde 0 en entorno multimedia, con c++, allegro, codeblocks, ttf2pcx y grabber.",
      "objectives": [
        "Aprenderán a desarrollar desde 0, un videojuego de tipo Arkanoid, con entorno gráfico, sonido y efectos.",
        "Aprenderán los algoritmos para calcular la trayectoria de nuestra bola rompeladrillos.",
        "Aprenderán como crear distintos niveles, con pantallas diferentes cada vez. y mayor dificultad.",
        "Aprenderán a manejar tipos de fuentes, sonidos, e imágenes en C++",
        "Aprenderán a instalar y configurar CodeBlocks y Allegro.",
        "Aprenderán el uso de imágenes, sprites, transparencias .",
        "Aprenderán a encapsular nuestras fuentes en un archivo .DAT gracias a Grabber."
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso y al instructor"
        ],
        "Preparando el entorno": [
          "Instalando CODEBLOCKS",
          "Descargando el compilador MINGW",
          "Instalando ALLEGRO",
          "Descarga de Recursos"
        ],
        "Desarrollo del Juego": [
          "Creando nuestra carpeta de trabajo y los INCLUDE necesarios",
          "Creando nuestra estructura básica",
          "Declarando los objetos",
          "Edición de las imágenes",
          "Cargando las imágenes a nuestro programa",
          "Cargando y configurando los sonidos al juego",
          "Manejo de teclado",
          "Armando nuestro buffer y Screen",
          "Programando el esqueleto funcional de nuestro juego",
          "Tratamiento de fuentes y textos con ttf2pcx y grabber",
          "Armando los ladrillos y levels",
          "Algoritmos de movimiento de nuestra base y pelota",
          "Detección de colisiones y jugabilidad",
          "Programación de pasaje de nivel y dificultad",
          "Lectura y escritura de archivos para nuestro Highscore"
        ],
        "Despedida": [
          "Clase Extra",
          "Despedida"
        ]
      },
      "requirements": [
        "Este curso fue pensado para aquellas mentes inquietas que quieran ver el paso a paso de código en c++ de un videojuego exitoso. Si conoces C++ mejor, sino no hay problema"
      ],
      "description": "A quien no le gusta los videojuegos ?\nJugarlos es genial.\nPero que pasaría si tu aprendieras a crearlos de manera asistida, con explicaciones paso a paso y con conocimientos sólidos ?\nNo hablo de una aburrida aplicación de consola con caracteres. hablo de un entorno multimedia, con música de fondo, sonidos de efectos, manejo de Sprites, imágenes elaboradas, manejo de dificultades y donde nuestro juego avanzará de nivel, sumando pantallas nuevas (nunca repetidas) y con una dificultad que irá en aumento.\nQue me dices si además de eso, aprendieras a estructurar tu programa, conocieras secretos del lenguaje y algoritmos que te resolverán muchas incógnitas ?\nMis 30 años desarrollando Software al servicio de un videojuego que fue la delicia de todos.\nHaremos desde 0 un juego de Arkanoid, con sonidos originales del juego y todos los recursos al alcance y descargables.\nTambién podrás descargar el proyecto completo y con todos los códigos fuente.\nTodo eso, y mucho más.",
      "target_audience": [
        "Desarrolladores que quieran aprender a crear videojuegos de calidad"
      ]
    },
    {
      "title": "Aprende C# desde Unity",
      "url": "https://www.udemy.com/course/aprende-c-desde-unity/",
      "bio": "Aprende a programar en C# desde el entorno de Unity y aprende todo sobre la clase MonoBehaviour.",
      "objectives": [
        "Tendrás los conocimientos básicos del lenguaje C#.",
        "Aprenderás a utilizar C# dentro de Unity.",
        "Tendrás un buen punto de partida para empezar con las clases de Unity Engine, con el cual se crean las mecánicas de juego así como cualquier cosa relacionada con la programación de videojuegos en Unity.",
        "Manejar la gran mayoría de eventos y métodos de la clase MonoBehaviour, clase de la que derivan todos los script de Unity."
      ],
      "course_content": {
        "Introducción": [
          "Introducción - [Instrucciones y archivos del curso desde aquí]",
          "Sintaxis de C#",
          "Escribir en consola de Unity",
          "Primer contacto"
        ],
        "Variables y Tipos": [
          "Variables y Tipos",
          "Tipo caracter",
          "Tipo string",
          "Crear variables de tipo caracter y string",
          "Tipo entero",
          "Tipo coma flotante",
          "Crear variables de tipo entero y coma flotante",
          "Tipo booleano",
          "Crear variables de tipo booleano"
        ],
        "Operadores": [
          "Operadores de asignación",
          "Hacer operaciones de asignación",
          "Operadores aritméticos",
          "Hacer operaciones aritméticas",
          "Operadores de comparación",
          "Hacer operaciones de comparación",
          "Operadores lógicos",
          "Comprobar operadores lógicos",
          "Operadores incremento decremento",
          "Utilizar operadores de incremento y decremento"
        ],
        "Estructuras de control - Condicionales": [
          "Estructuras de control - if",
          "Crear un condicional if",
          "Estructuras de control - else if",
          "Estructuras de control - else",
          "Crear un condicional con múltiples condiciones",
          "Switch case",
          "Crear un condicional switch case",
          "Anidar condicionales",
          "Crear condicionales aniados"
        ],
        "Estructuras de control - Bucles o iteraciones": [
          "Bucle for",
          "Aprendiendo a iterar",
          "Bucle while",
          "Iterando con while",
          "Bucle do while",
          "Iterando al menos una vez con do while",
          "Bucle foreach",
          "Recorriendo un array con foreach",
          "Bucles anidados",
          "Crear bucles anidados",
          "Interrumpir flujo de código",
          "Como interrumpir una iteración"
        ],
        "Funciones": [
          "Que es un procedimiento",
          "Crear un procedimiento",
          "Que es una función",
          "Devolver datos de una función",
          "Los parámetros",
          "Añadir parámetros"
        ],
        "Arrays, listas y pilas": [
          "Que es un array",
          "Crear un array",
          "Arrays multidimensionales",
          "Crear un array multidimensional"
        ],
        "Trabajar con archivos": [
          "Crear un archivo de texto",
          "Como crear un nuevo archivo de texto",
          "Leer datos de un archivo de texto",
          "Como leer un archivo de texto",
          "Agregar texto al final de un archivo",
          "Como añadir nuevo texto a un archivo"
        ],
        "POO": [
          "Espacio de nombres",
          "Creando un espacio de nombres",
          "Que es una clase",
          "Como crear una clase",
          "Que es un objeto",
          "Como crear un objeto",
          "El constructor",
          "Crear un objeto predefinido",
          "Modificadores de aceso públicos o privados",
          "Estableciendo accesos públicos o privados",
          "Herencia",
          "Heredando de otra clase"
        ],
        "CURSO EXTRA : Libreria Unity Engine [1] - Clase MonoBehaviour": [
          "Introducción",
          "Método print"
        ]
      },
      "requirements": [
        "No se requieren conocimientos previos.",
        "Se requiere saber instalar y abrir un proyecto de Unity."
      ],
      "description": "¿Te a picado alguna vez el gusanillo de crear un videojuego?\nCuando empezamos a buscar información sobre como crear un videojuego, la palabra que mas suena es Unity.\nEmpiezas a trastear por las ventanas de Unity, creas unos cuantos objetos, algunas luces y cuatro cosas aqui y allá, al final quedas abrumado de tantas cosas por aprender, es por eso que comienzo este curso de programación en C# desde unity, para que partas con ventaja cuando empieces en serio a programar videojuegos, ya que sin saber C# es muy probable que no puedas hacer gran cosa.\nEste curso te adentra en el mundo de C# y es el primer paso antes de empezar a programar con las clases de Unity Engine, sin estas es practicamente imposible hacer algo decente en Unity, es por eso que antes de poder adentrarte en La programación con las clases de Unity, tengas que pasar obligatoriamente por el lenguaje C#, por lo tanto este es un buen primer paso para empezar a programar en Unity.\nDebes saber que este curso es solo el inicio, es a partir de que finalices el curso cuando estarás preparado para abordar las clases de Unity Engine, aqui tienes el primer módulo de regalo.\nClase MonoBehaviour de Unity\nUnity tiene una librería inmensa con la que se desarrolla la mayoría de mecánicas de juego, cuando aprendes Unity suele ser un tema olvidado o no tocado a fondo, pero sin conocer el funcionamiento de su librería es muy difícíl hacer algo medianamente decente, es por eso que empiezo este curso dedicado exclusivamente al estudio de eventos, propiedades y métodos de la clase mas importante de Unity, la clase MonoBehaviour.\nEste curso toca en detalle la gran mayoría de métodos y eventos de la clase MonoBehaviour.\nLos principales eventos que se tocan en el curso son:\nEventos principales.\nAwake, Start, Update, Fixed Update, LateUpdate.\nEventos de objeto.\nOnEnable, OnDisable, OnDestroy.\nEventos de ratón\nOnMouseEnter, OnMouseOver, OnMouseExit.\nOnMouseDown, OnMouseStay, OnMouseUp, OnMouseUpAsButton.\nEventos de colisión.\nOnCollisionEnter, OnCollisionStay, OnCollisionExit.\nEventos de disparador.\nOnTriggerEnter, OnTriggerStay, OnTriggerExit.\nLos principales métodos que se tocan en el curso son:\nMétodos de invocación\nInvoke, InvokeRepeating, CancelInvoke.\nTodos los eventos y métodos son explicados por separado con una serie de ejemplos prácticos dentro de cada módulo.",
      "target_audience": [
        "Todo aquel que quiera empezar en el desarrollo y programación de videojuegos.",
        "Cualquiera que quiera aprender C# en el entorno de Unity."
      ]
    },
    {
      "title": "Crea un Shooter Multijugador FPS con Unity y Photon PUN2",
      "url": "https://www.udemy.com/course/crea-fps-multiplayer-photon-pun2/",
      "bio": "Aprende a hacer tu propio juego multijugador de disparos contra zombis en primera persona usando Unity 2021 y PhotonPUN2",
      "objectives": [
        "Construye un juego de disparos en primera persona/supervivencia zombie",
        "Aprende a usar Photon PUN2 para crear juegos multijugador en Unity",
        "Amplía tus conocimientos de diseño de videojuegos",
        "Listo para ampliar al juego PvP (Jugador contra Jugador)",
        "Implementación de controles táctiles",
        "Creación de Mapas y Escenarios",
        "Aprende mucho sobre animaciones 3D, enemigos, sistemas de salud, diseño de niveles, diseño de juegos"
      ],
      "course_content": {
        "Introducción": [
          "¡Bienvenido al curso!",
          "No valores el curso antes de tiempo",
          "Cómo sacar el máximo partido al curso",
          "¡Únete a la comunidad de Discord de Unity!"
        ],
        "Configuración de la escena y construcción del mapa": [
          "Instalación de Unity y creación del proyecto",
          "URP vs HDRP",
          "Sobre la plantilla URP",
          "Skybox",
          "Echando un vistazo a los Zombie Assets",
          "Construyendo el entorno - Calles y casas",
          "Construyendo el entorno - Decoraciones e historia",
          "Añadiendo muros invisibles y límites a nuestra escena",
          "Reto - Construye tu ciudad"
        ],
        "Configuración del jugador FPS": [
          "Trucos de personajes en un FPS",
          "Añadir el personaje principal al juego - Cómo utilizar el Clipping",
          "Mirando alrededor con MouseLook - MouseSensitivity y Clamping",
          "Movimiento del jugador con un Character Controller",
          "Añadiendo la gravedad manualmente",
          "Configurando el salto",
          "Dejando listo a nuestro jugador"
        ],
        "Configuración básica de las animaciones del enemigo": [
          "Cómo añadir un Animator y dónde encontrar animaciones (MIXAMO)",
          "Echando un vistazo rápido a MIXAMO",
          "Añadir animaciones y transiciones"
        ],
        "Configuración de la IA del enemigo": [
          "Introducción a la IA enemiga",
          "NavMesh y NavMesh Agent",
          "Baking de la NavMesh y cómo usar el NavMesh Agent",
          "Usar el NavMeshAgent para que el Zombie nos persiga",
          "Hacer que el enemigo corra detrás de nosotros",
          "Detectar la colisión entre el enemigo y el jugador"
        ],
        "Configurar las mecánicas del juego": [
          "Hacer que la salud del jugado se reduzca al recibir daño",
          "Reiniciar el juego al perder toda la vida",
          "Arreglando el empuje hacia arriba del Zombie",
          "Utilizando Raycasts para disparar",
          "Añadiendo una mirilla",
          "Configurando la salud de los enemigos y haciendo que desaparezcan al morir",
          "El Animator del jugador",
          "Activar la animación de disparo desde el código",
          "Situando los Spawners",
          "Programar el GameManager para generar enemigos en posiciones al azar",
          "Los enemigos comunican su muerte al GameManager",
          "Mostrar las rondas",
          "Mostrar la vida",
          "El Panel de Game Over",
          "Mostrando el número de rondas superadas",
          "Reiniciando el juego con el botón",
          "Configuración del Menú Principal",
          "Fin de la Parte 1 del Curso"
        ],
        "Sección rápida: adaptar el juego a teléfonos móviles Android": [
          "Configurando el proyecto para ser jugado en un dispositivo Android",
          "¿No puedes ver el juego desde el dispositivo móvil?",
          "Moviendo al jugador usando la parte izquierda de la pantalla táctil",
          "Rotando jugador y cámara usando la parte derecha de la pantalla táctil"
        ],
        "UI básica y configuración de VFX/SFX": [
          "UI - Menú de pausa",
          "UI - Zarandeo de la cámara al recibir daño",
          "UI - Efecto pantalla roja cuando somos heridos",
          "UI - Barra de vida del Zombie",
          "VFX - Sistema de partículas - Flash de disparo",
          "VFX - Sistema de partículas - Sangre del Zombie",
          "VFX - Llamar a los sistemas de partículas desde código",
          "Animaciones - Ataque del Zombie",
          "Animaciones - Muerte del Zombie",
          "SFX - Disparo y gruñidos del Zombie",
          "SFX - Dejar de escuchar SFX en el menú de pausa",
          "Gráficos - Niebla y ajustes de iluminación adicionales",
          "UI - Fade In y Fade Out",
          "Build - Crea tu primera Build para PC"
        ],
        "Implementación de los Assets finales y las últimas características necesarias": [
          "Cambiar el modelo del Player y del arma",
          "Arma - Balanceo del arma",
          "Player - Configurando el sprint del jugador si pulsamos Swift",
          "Arma - Apuntando con el arma",
          "Sistema de munición - Configuración",
          "Sistema de munición - Animación de recarga y ocultar la mirilla",
          "Sistema de munición - UI",
          "VFX - Partículas al fallar el tiro",
          "Arma - Ratio de disparo",
          "Arma - Automática / Semiautomática",
          "Arma - Configurar una Pistola",
          "Arma - Configurar variante de las animaciones para la pistola",
          "Arma - Cambiar entre armas y animaciones",
          "BUG - Bloquear los disparos de todas las armas en menú pausa y Game Over",
          "BUG - Recarga interrumpida por cambio de arma",
          "BUG - UI de la munición",
          "Enemy - Sistema de Puntuación",
          "Tienda - Configuración de la máquina expendedora",
          "BUG - Evitar deber dinero a la máquina expendedora",
          "Tienda - Máquinas expendedoras de salud y munición"
        ],
        "PUN 2": [
          "Versión del proyecto antes de la instalación de Photon PUN 2",
          "Configuración",
          "El Networking Manager",
          "Añadiendo un botón multijugador al menú principal",
          "Salas aleatorias",
          "Sincronización de la escena",
          "El Prefab del Player",
          "Spawning del Player y búsqueda de los Spawners por código",
          "Sincronizando a los jugadores y arreglando el problema con el Input",
          "Sincronización del Transform",
          "Sincronización de las rondas de enemigos",
          "Sincronización del número de ronda en cada UI",
          "Sincronización de los Zombies",
          "El Zombie ataca al jugador más cercano",
          "Modificando las funciones Pause y GameOver para el modo multijugador",
          "Sincronizando la vida y la muerte del enemigo",
          "Sincronizando la vida y la muerte del jugador",
          "Sincronizando el cambio de arma",
          "Sincronizar los SFX y VFX"
        ]
      },
      "requirements": [
        "Ordenador con una buena conexión a Internet",
        "Un ordenador o Mac que pueda ejecutar Unity 2021",
        "Conocimiento de los fundamentos del desarrollo de juegos en Unity 3D, como el de los cursos básicos de Frogames",
        "Conocimiento de la programación en C#, como el de los cursos básicos de Frogames"
      ],
      "description": "¿Has soñado alguna vez con crear tu propio juego multijugador de disparos en primera persona?  ¿O tal vez quieres desarrollar juegos como Call of Duty Zombies, Left 4 Dead, o cualquier juego de tipo Oleadas?\n¡Entonces has encontrado el curso adecuado para ti!\n\n\nEn este curso, ¡desarrollarás tu propio juego multijugador de disparos zombis en primera persona!\nCon nuestros vídeos, aprenderás:\nCómo programar una IA enemiga contra la que luchar. Un estilo basado en rondas PvE (Jugador contra Entorno), similar a Left 4 Dead y COD Zombies.\nPhoton PUN2. ¡Crea juegos multijugador con el mejor motor disponible para Unity!\nLos pasos para expandir tu juego a PvP (Jugador vs. Jugador).\nLos secretos de la construcción de mapas y las técnicas que se utilizan a diario en la industria para juegos multijugador competitivos y basados en arenas.\nHabilidades de diseño de juegos a través de nuestros fundamentos de diseño. ¡Aprende lo que hace que un juego sea divertido!\nLos sencillos pasos necesarios para convertir tu juego en un juego para móviles. ¡Incluidos los controles táctiles y las pruebas para móviles en el editor de Unity!\nLa configuración de un sistema que permita al jugador interactuar con los assets del entorno.\nCómo sincronizar todo a través de la red mediante los componentes integrados de Photon Pun\nLas funciones personalizadas de PUN2 para la comunicación en red como RPC (Remote Procedural Calls), Photon Hashtables, propiedades personalizadas y Pun Callback Overrides\nY con todo esto, serás capaz de tomar tu juego de un solo jugador y convertirlo en el juego multijugador que siempre quisiste.\n\n\nEste curso incluye:\nUna introducción e implementación completa de Unity Photon PUN2\nClases sobre la configuración de los elementos del juego, las animaciones, IA, el input del jugador y el diseño del juego en general.\nProyecto completo de juego FPS + código\n\n\n¿Estás emocionado por convertirte en un verdadero desarrollador de videojuegos? Entonces no lo dudes más y empieza el curso ahora mismo.",
      "target_audience": [
        "Cualquiera que quiera empezar a crear juegos multijugador",
        "Personas que quieren aprender a programar de forma divertida",
        "Desarrolladores de juegos que quieran crear juegos FPS multijugador"
      ]
    },
    {
      "title": "【한글자막】 Unreal Engine 5 C++ 개발자: C++ 학습하고 비디오 게임 제작하기",
      "url": "https://www.udemy.com/course/unrealcourse-korean/",
      "bio": "Epic Games와의 협력 하에 제작되었습니다. C++ 의 기본부터 학습하며 언리얼 엔진으로 여러분의 첫 비디오 게임 5개를 제작해 보세요. (Unreal Engine 5 & Unreal Engine)",
      "objectives": [
        "언리얼 엔진 5로 게임을 제작하는 방법",
        "게임 업계의 표준 언어인 C++",
        "객체 지향 프로그래밍과 활용법",
        "게임 디자인 원칙",
        "프로그래밍 패턴과 모범 사례",
        "적 인공지능 행동 프로그래밍",
        "간결하고 이해하기 쉬운 코드의 작성 방법",
        "블루프린트와 C++의 사용 시기",
        "C++를 사용해 언리얼에서 원하는 목표를 달성하는 방법",
        "게임 제작이 쉬워지는 언리얼 게임플레이 프레임워크",
        "강력하고 범용적인 문제 해결 능력",
        "최신 게임 개발 기술 및 기법"
      ],
      "course_content": {
        "강좌 소개 및 설치 (신규 언리얼엔진5 콘텐츠)": [
          "언리얼 4.22 사용자를 위한 안내",
          "강의에 오신걸 환영합니다!",
          "유데미 러닝크루 스터디 안내",
          "언리얼엔진 설치하기",
          "커뮤니티 및 지원",
          "뷰포트 탐색",
          "액터 이동 및 배치",
          "C++와 블루프린트",
          "상부상조하는 법"
        ],
        "창고 부수기 (신규 언리얼엔진 5 콘텐츠)": [
          "섹션 개요 - Warehouse Wreckage",
          "프로젝트 설정",
          "UE 5.1 주의사항: StarterContent 폴더",
          "블루프린트 이벤트 그래프",
          "피직스 시뮬레이션",
          "오브젝트와 레퍼런스",
          "임펄스 추가하기",
          "블루프린트 클래스와 인스턴스",
          "액터 스폰(spawn)하기",
          "데이터 유형",
          "폰(pawn)과 액터 위치",
          "회전 다루기(Control Rotation)",
          "벡터의 덧셈과 곱셈",
          "전방 벡터 가져오기",
          "에셋 가져오기",
          "지오메트리 브러시 (BSP)",
          "재료와 조명",
          "액터 컴포넌트",
          "충돌 메시(Meshes)",
          "변수",
          "부울과 분기(Booleans and Branches)",
          "함수",
          "리턴 타입",
          "순수 함수",
          "멤버 함수",
          "레벨 로드와 지연 노드",
          "마무리 및 요약"
        ],
        "장애물 공격(신규 언리얼엔진5 콘텐츠)": [
          "섹션 개요 - 장애물 공격",
          "프로젝트 셋업하기",
          "캐릭터 커스터마이징하기",
          "컴파일러와 에디터",
          "UE 5.1 주의사항: .NET 6 설치",
          "PC - 비주얼 스튜디오 설치하기",
          "Mac - XCode 설치하기",
          "VSCode 설치하기",
          "C++ 프로젝트 컴파일링하기",
          "UPROPERTY 변수",
          "라이브 코딩 문제",
          "C++ 파일 및 BeginPlay",
          "C++에서 구조체 사용하기",
          "C++에서 함수 호출하기",
          "Tick",
          "로컬 변수",
          "의사(Pseudo) 코드",
          "함수 반환 값",
          "속도 & 델타타임",
          "범위 지정 연산자",
          "If 문장",
          "멤버 함수 사용",
          "블루프린트 하위 클래스",
          "캐릭터 충돌 강제 적용",
          "GameMode",
          "출력 로그에 기록하기",
          "FString",
          "멤버 함수",
          "반환문",
          "Const 멤버 함수",
          "FRotator",
          "레벨 디자인 및 다듬기",
          "장애물 공격: 마무리"
        ],
        "Crypt Raider (신규 언리얼엔진5 콘텐츠)": [
          "섹션 소개 - 크립트 레이더 (Crypt Raider)",
          "프로젝트 셋업하기",
          "모듈식 레벨 디자인",
          "모듈식 레벨 레이아웃",
          "솔루션: 모듈식 레벨 레이아웃 구현",
          "라이트(Light)의 종류",
          "루멘 & 라이트 블리딩",
          "레벨 라이팅(Lighting)",
          "캐릭터 블루프린트",
          "상속 vs 컴포지션",
          "C++ 액터 컴포넌트",
          "포인터 타입 & GetOwner()",
          "역참조 & 화살표(->) 연산자",
          "링커, 헤더, 인클루드",
          "FMath::VInterpConstantTo",
          "씬 컴포넌트",
          "라인 트레이스 & 스위프",
          "GetWorld()",
          "DrawDebugLine()",
          "참조 vs 포인터",
          "Const 참조 & 아웃 매개 변수",
          "지오메트리 스위핑",
          "인풋 동작 매핑",
          "인풋 동작 매핑",
          "블루프린트 호출",
          "FindComponentByClass() & nullptr",
          "DrawDebugSphere()",
          "PhysicsHandle로 객체 잡기",
          "물리 오브젝트 깨우기",
          "아웃 파라미터 리턴",
          "오버랩 이벤트",
          "생성자",
          "TArray",
          "While 및 For 반복문",
          "범위 기반 For 반복문",
          "액터 태그",
          "얼리 리턴",
          "의존성 주입",
          "캐스팅과 액터 부착",
          "태그 추가 및 삭제",
          "불리언(Boolean) 논리 연산자",
          "레벨 다듬기",
          "Crypt Raider: 마무리"
        ],
        "툰 탱크 (버전2)": [
          "프로젝트 개요",
          "폰(Pawn) 클래스 생성",
          "컴포넌트 생성",
          "전방 선언",
          "캡슐 생성",
          "스태틱 메시 컴포넌트",
          "블루프린트 클래스 파생",
          "인스턴스 대 디폴트",
          "노출된 변수 편집",
          "컴포넌트 노출",
          "하위 C++ 클래스 생성하기",
          "폰(Pawn)에 빙의하기",
          "인풋 처리하기",
          "로컬 오프셋",
          "이동 속도",
          "로컬 회전",
          "캐스팅",
          "마우스 커서 사용하기",
          "포탑(Turret) 회전하기",
          "Tower 클래스",
          "Fire",
          "타이머",
          "Projectile 클래스",
          "발사체 생성",
          "발사체 이동 컴포넌트",
          "타격(hit) 이벤트",
          "체력 컴포넌트",
          "데미지 적용",
          "Game Mode 클래스",
          "Pawn 죽음 다루기",
          "사용자 지정 플레이어 컨트롤러",
          "게임 시작",
          "게임 시작 위젯",
          "카운트다운 타이머",
          "카운트다운 시간 표시하기",
          "승패 조건",
          "게임 오버 HUD",
          "타격 파티클",
          "연기 궤적",
          "죽음 파티클",
          "사운드",
          "카메라 셰이크",
          "다듬기 및 마무리"
        ],
        "심플 슈터": [
          "섹션 소개: 심플 슈터 (Simple Shooter)",
          "프로젝트 셋업하기",
          "C++에서 폰(pawn)과 캐릭터의 차이점",
          "캐릭터 이동 기능",
          "컨트롤러 조준",
          "3인칭 카메라 스프링 암",
          "스켈레탈 애니메이션의 기초",
          "충돌 메시 편집",
          "애니메이션 블루프린트의 기초",
          "2D 블렌드 스페이스",
          "애니메이션을 게임플레이에 연결하기",
          "벡터의 역방향 트랜스폼",
          "애니메이션 속도 계산하기",
          "건(gun) 액터",
          "런타임에 액터 스포닝하기(spawning)",
          "소켓을 통해 메시에 부착하기",
          "사격 아키텍처",
          "파티클 이펙트 스포닝하기(spawning)",
          "플레이어 뷰포인트",
          "라인 트레이싱 By Channel",
          "임팩트 효과",
          "액터에 데미지 입히기",
          "C++ 가상 함수",
          "TakeDamage 함수 오버라이드하기",
          "불리언 값에 따른 애니메이션 블렌딩",
          "Blueprint 순수 노드",
          "AI 컨트롤러 생성하고 설정하기",
          "AI로 조준하기",
          "내비메시를 이용해 AI 이동하기",
          "AI 시선 확인하기",
          "행동 트리 및 블랙보드",
          "C++로 블랙보드 키 설정하기",
          "행동 트리 태스크 및 시퀀스",
          "BT 데코레이터 및 셀렉터",
          "C++로 커스텀 BTTasks 구성하기",
          "BTTasks 실행하기",
          "폰(pawn)을 사용하는 BTTask",
          "C++에서 BTServices",
          "라인 트레이스에서 액터 무시하기",
          "게임 종료하기",
          "C++에서 타이머 설정하기",
          "패배 화면 띄우기",
          "액터 반복하기",
          "승리 조건 계산하기",
          "PullTrigger 리팩터링",
          "무기 사운드 이펙트",
          "랜덤화된 사운드 큐",
          "사운드 공간화",
          "크로스헤어와 HUD",
          "체력 바",
          "에임 오프셋(AimOffsets)",
          "애니메이션 스테이트 머신",
          "복잡한 스테이트 머신",
          "마무리 및 도전 과제"
        ],
        "업데이트 및 중요 공지사항": [
          "언리얼 4.22 사용자를 위한 안내"
        ],
        "게임 개발 여정을 계속하세요": [
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "언리얼 5를 구동할 수 있는 64비트 PC (권장)",
        "또는 최신 macOS Big Sur 기반의 맥",
        "+ 8GB RAM",
        "2.5GHz 이상의 쿼드코어 CPU",
        "DirectX 11, 12 또는 Metal 1.2와 호환되는 그래픽 카드",
        "약 50GB의 여유 디스크 공간",
        "언리얼 또는 코딩에 대한 사전 경험은 필요하지 않습니다."
      ],
      "description": "이 강의는 유데미 강좌 중 \"Unreal Engine 5 C++ Developer: Learn C++ & Make Video Games\"와 동일한 강의이며, 한국어 자막이 기존 강의와 다르게 전문 한글 자막이 제공됩니다. 또한 강의 내용에 대한 질문은 Q&A에 영어로 남겨주시면 오리지널 강사님으로부터 답변을 받으실 수 있습니다. 강의 내용 외의 문의는 한국어로 남겨주셔도 되며, 웅진씽크빅 글로벌에서 매일 확인하여 답변드리고 있으니 편하게 질문해주세요! :)\n\n\n\n\n언리얼 엔진 5가 제공하는 놀라운 환경에서 게임을 제작할 준비가 되셨나요?\n‘많은 호평’을 받고 ‘엄청난 성공’을 거둔 이 언리얼 엔진 강의는 Epic Games와의 협력하에 제작되었습니다.\n\n\n강의의 대부분이 언리얼 엔진 5에 맞춰 업데이트 되고 다시 제작되었습니다.\n기존 수강생은 무료로 새 강의를 수강하실 수 있습니다.\n\n\n언리얼 엔진 5로 비디오 게임을 제작하고 수정하는 방법을 학습해 보세요.\n완전 초심자도 따라올 수 있습니다. 언리얼은 전 세계 AAA 스튜디오 및 인디 개발자들이 사용하는 무료 사용 게임 개발 엔진입니다. 아주 방대하고 강력한 엔진이지만, 익숙해지실 수 있도록 단계별로 나누어 설명해 드립니다.\n\n\n아주 간단한 내용부터 시작하므로 언리얼 또는 코딩에 대한 사전 경험은 필요하지 않습니다!\n저희의 온라인 튜토리얼에서 얼마나 많은 것을 얻어가실 수 있는지 놀라실 겁니다. 언리얼 엔진을 학습하는 데는 프로젝트 기반 학습이 가장 좋다고 생각하므로 수강생은 5개의 언리얼 게임을 제작할 것입니다!\n\n\n이미 언리얼 지식이 있고 VR 또는 멀티플레이어에 대해 학습하고 싶으신가요? 저희의 다른 언리얼 강의를 확인해 보세요. 초록색 잎이 달린 강의를 찾으시면 저희의 세계 최고 수준의 언리얼 강의를 찾아보실 수 있습니다.\n\n\n강력한 업계 표준 언어인 C++ 를 처음부터 학습해 보세요. 강의를 수료하고 나면 기본적인 코드 작성 및 게임 개발에 자신감이 생기고 더 학습하고 싶어질 것입니다.\n\n\n“진정한 게임 프로그래머는 모두 C++ 를 익혀야 합니다.”\n-Jason Gregory, 너티 독(언차티드 및 라스트 오브 어스의 제작사)의 리드 프로그래머\n\n\n게임을 제작하고 싶은 모든 분에게 언리얼 엔진은 AAA급 게임을 제작할 수 있는 훌륭한 플랫폼입니다.\n게다가 하나의 소스로부터 Windows, 콘솔, macOS, iOS, 안드로이드, 웹 게임을 생성할 수 있습니다!\n\n\n포럼을 정기적으로 방문하는 강사 및 다른 수강생으로부터 세계 최고 수준의 지원을 받을 수 있습니다.\n탱크 게임이나 일인칭 슈팅 게임 등 다양한 게임을 제작할 수 있습니다.\n\n\n전 세계의 사람들과 의논할 수 있는 강의 포럼에 참여하실 수 있으며, 개별 비디오를 시청하실 수 있습니다.\n저희의 번창하는 토론 포럼을 통해 다른 수강생으로부터 학습하고 아이디어를 공유할 수 있습니다.\n\n\n저희의 페이스북(약 2만 명), 엄선 커뮤니티(일일 1만 7천 뷰), 수강생 채팅 그룹(동시 참여자 1만 명)의 멋진 개발자들과 함께해 보세요.\n\n\n지금 언리얼 C++ 학습을 시작해 보세요. 실망하지 않으실 겁니다!",
      "target_audience": [
        "컴퓨터를 능숙하고 자신 있게 사용하실 수 있는 분",
        "게임 엔진에 자신의 에셋을 사용하고 싶은 아티스트",
        "새로운 코딩 기술을 학습하고 싶은 개발자",
        "열심히 배울 의지가 있는 완전 초심자",
        "게임 개발을 학습하고 싶은 기존 개발자",
        "UE5의 흥미로운 새 환경에 대해 알아보고 싶은 분"
      ]
    },
    {
      "title": "Unreal Engine 5 - O Guia Definitivo",
      "url": "https://www.udemy.com/course/ue5guiadefinitivo/",
      "bio": "Venha comigo criar um game com estilo e muita ação, do inicio ao fim, sem enrolação!!",
      "objectives": [
        "Programação visual com Blueprints. Aprenderá a programar seus games sem a necessidade de digitar uma linha de código.",
        "Como navegar e se orientar na plataforma da Unreal",
        "Primeiros passos. Aprenderá como e porque criar as classes principais de qualquer Game",
        "Classe de animação Avançada, com blend space e layer blend, para combinar diferentes animações",
        "Combate Melee e Combo. Criaremos uma logica de combate corpo a corpo que envolvera um combo sequencial de 3 ataques",
        "Combate de longa distancia. Criaremos uma logica de tiro hitscan com a pistola",
        "Sistema modular de interação. Aprenderá como interagir com objetos no mundo",
        "Sistema de Loja. Aprenderá como criar uma logica simples de loja",
        "Sistema de Ondas de Inimigos (Waves). Aprenderá como criar uma logica de spawn em ondas, para espalhar e controlar os inimigos na fase",
        "Sistema de Deploy. Aprenderá como inserir objetos no mapa durante o game",
        "HUDs avançadas com animações e efeitos sonoros",
        "Landscape. Aprenderá como criar seus próprios mapas utilizando a ferramenta de modelagem de mapas da Unreal"
      ],
      "course_content": {},
      "requirements": [
        "Computador com requisitos para rodar a Unreal Engine 5: Sistema operacional: Windows 8/10 64-bits. Processador: intel ou AMD quad-core de 2,5 GHz ou superior, 8 GB+ de RAM. Placa de Vídeo dedicada de 4GB+",
        "Não será necessário nenhum conhecimento prévio"
      ],
      "description": "Aprenda a Criar um Jogo Completo na Unreal Engine 5.5 – Do Zero ao Projeto Final\nVocê já tentou aprender a desenvolver jogos na Unreal Engine 5, mas se sentiu perdido com tutoriais rápidos e pouco explicativos?\nEste curso é diferente. Aqui, você vai realmente entender cada passo do processo de criação de um jogo completo, com explicações claras e sem pular etapas.\n\n\nPara quem é este curso?\nEste curso foi feito para quem está começando do zero e quer aprender a criar jogos com qualidade e entender o que está fazendo. Não importa se você nunca abriu a Unreal Engine antes — você será guiado do básico até a criação de um jogo completo.\n\n\nO que você vai aprender:\nInstalação e configuração da Unreal Engine 5\nConceitos fundamentais do desenvolvimento de jogos\nCriação de menus (HUD)\nMecânicas de jogo: movimentação, fases, inimigos, interações e muito mais\nOrganização de projetos e boas práticas\nDesenvolvimento de um jogo completo com começo, meio e fim\n\n\nO diferencial deste curso:\nA maioria dos cursos por aí ensina como montar um jogo com \"faça isso, agora faça aquilo\" — mas não explicam o porquê de cada decisão.\nNeste curso, você vai entender cada ação, linha de lógica e conceito envolvido.\nAqui, você realmente aprende, não apenas copia.\n\n\nBônus:\nAcesso a atualizações futuras do curso (sim, o conteúdo vai crescer com o tempo!)\nGrupo de alunos (Discord - Em desenvolvimento)\nCertificado de conclusão\n\n\nGarantia incondicional de 30 dias\nSe você achar que o curso não é para você, tem 30 dias para pedir reembolso, sem complicações.",
      "target_audience": [
        "Qualquer pessoa que queira entender como funciona o desenvolvimento de jogos, e que queira criar seus próprios projetos.",
        "Quem não se sente confortável com linguagens de programação habituais.",
        "Quem deseja começar a criar seu Game dos SONHOS.",
        "Quem deseja de certa forma, dar o ponta pé inicial em uma nova carreira."
      ]
    },
    {
      "title": "【最短でUnityプログラム脱初心者を目指します！】もっと早く教えてほしかった！Unity C#プログラミング入門",
      "url": "https://www.udemy.com/course/unity-c-sharp-beginner/",
      "bio": "初心者OK！C#の基礎からつまづきやすいクラス・インターフェース・デリゲート・ラムダ式・非同期処理・オブジェクト指向の考え方などを丁寧に解説！省略しない書き方から一般的に使用される書き方へコードを変更していくことで、段階的に学んでいきます。",
      "objectives": [
        "C#の基礎文法知識",
        "Unityで必要なC#のプログラミング知識",
        "Unityにおけるゲーム開発のための基礎知識",
        "Unityの公式説明書(スクリプトリファレンス)を理解するための基礎知識",
        "Unityコンポーネントの基礎知識",
        "Unityイベント関数の基礎知識",
        "オブジェクト指向の基礎知識",
        "クラスの基礎知識",
        "ポリモーフィズムの基礎知識",
        "デリゲートの基礎知識",
        "ラムダ式の基礎知識",
        "非同期処理の基礎知識"
      ],
      "course_content": {},
      "requirements": [
        "Unityチュートリアルを実施した経験があること"
      ],
      "description": "〓アップデート情報〓\n<2023年 7月>\n下記項目の動画を追加しました。\n・非同期処理\n・その他のC#/Unity機能\n・豆知識\n\n\n<2023年 6月>\n下記項目の動画を追加しました。\n・デリゲート\n・ラムダ式\n\n\n<2023年 5月>\n下記項目の動画を追加しました。\n・オブジェクト指向１　クラス\n・オブジェクト指向２　カプセル化・継承\n・オブジェクト指向３　ポリモーフィズム\nーーーーーーーーーーーーーーーーーーーーー\n本講座は、Unityにおけるプログラミングに対して、\n脱初心者を目指す入門講座です。\n\n脱初心者とは、Unity公式のスクリプト説明書（リファレンス）を読み取ることができ、\n不明な点は、自身で調査可能であることを指します。\n\n想定する受講者の方は、Unityをインストール済み（Visual Studio 連携済み）\nのプログラミング初心者の方です。\n\n具体的には、下記のような方を想定しています。\n玉転がしなどのチュートリアルを終え、Unityエディターの基本操作をなんとなく理解している。\nチュートリアルでは、スクリプトをコピペし、とりあえず動くものは完成したが、結局プログラムの中身がよくわからなかった。\n私自身、Unityを始めたばかりの頃に上記のような状態となっておりました。\nネット上のブログ記事を参考させていただく場合でも、必要な前提知識がブログ毎に異なるため、\n自分が理解できる記事を探すのにとても苦労した経験があります。\n\n\n今となっては、\n「こうやって説明してくれていたら、もっと早く理解できたのに！」\nと感じる部分が多くありますので、今回それを本講座で共有することにします。Unityを始めた方の一助となれば幸いです。\n\n\n簡単に自己紹介をしておくと、私は個人アプリ開発歴約4年になる者です。\nリリースしたアプリは11個あり、累計10万インストール程されています。\n\n\n情報発信の方は、「アプリ個人開発 まるブログ」で技術記事を書いたり、\nUdemy内でアプリ開発関連の動画講座を公開しています。\n動画講座は、2700名様を超える方にご利用いただいております。\n\n\n\n\n職業訓練指導員免許を取得しており、\nこの免許取得の際に得た「教育」の専門知識を活かし、\n頭に染み込むような伝え方を意識して作成しました。\n\n\nそれでは、よろしくお願いいたします。\n\n\n本講座の構成\n本講座は大きく4部構成となっています。\n\n第2部までは必須な知識を取り上げ、\n第3部はプログラム設計の基礎知識であるオブジェクト指向、\n第4部はよりステップアップするための知識について解説しています。\n\n第2部までの解説内容にて制作したい内容を実現する考え方を理解できるようになると考えておりますので、\n第2部を節目に制作に着手しても良いでしょう。\n\n詳細な解説内容はコース内容欄からご覧ください。\n各部の概要を載せておきます。\n\n\n第1部 基礎知識\nUnity上でコンピュータプログラムを動作させる設定を行った後、\nC#の基礎知識を解説します。C#の基礎を学ぶことで、\nUnityが用意している便利な機能を使う基礎も身に付けることができます。\n\n1.簡単なプログラムの実行\n2.変数を使用した計算\n3.条件分岐\n4.繰り返し処理\n5.配列\n6.関数（メソッド）\n\n第2部 覚えておきたい基礎知識\n第2部は、第1部でお伝えしきれなかったC#の知識をご説明します。\nその後にUnity制作で必須知識の\nゲームオブジェクト操作、コンポーネント操作、イベント関数についてご説明します。\n本章の知識を得ることで、制作物を一つ作り切るスキルが身に付くでしょう。\n\n1.C#編\n2.Unity GameObject編\n3.Unity コンポーネント編\n4.Unity 既存コンポーネント操作編\n5.Unity イベント関数編\n6.Unity その他\n\n\n第3部 オブジェクト指向\nプログラムについて調べていると、オブジェクト指向という単語をよく目にします。\nオブジェクト指向とは、プログラムの保守性、拡張性を高めるためのプログラムを組む考え方のことです。\n\n具体的なオブジェクト指向の使い方は、\nデザインパターンという設計ノウハウ集の専門書が世にありますので、\nそちらを参考にされると良いでしょう。\n\nデザインパターン書の解説を読み解くには、クラスの基礎知識や、\nオブジェクト指向の三大要素である\n継承、カプセル化、ポリモーフィズム（多態性）の知識が必要となります。\nデザインパターン書を読み解くための基礎知識をご説明します。\n\n1.クラス\n2.カプセル化・継承\n3.ポリモーフィズム\n\n第4部 ステップアップ\n必須レベルではないが、覚えておくとなにかと役立つプログラム知識についてご説明します。\nブログ記事で見かけることもある内容になりますので\n都度調べられるように名前だけでも覚えておくと良いでしょう。\n\n1.デリゲート\n2.ラムダ式\n3.非同期処理\n4.その他のC#/Unity機能\n5.豆知識",
      "target_audience": [
        "Unityにおけるプログラミングに対し脱初心者を目指す方",
        "スクリプト作成の理解を深めたい方",
        "作品を制作するためにプログラム面で基礎力を上げたい方",
        "ブログ記事を理解するための前提知識を得たい方"
      ]
    },
    {
      "title": "Creiamo un platform game per mobile [Unity da Zero]",
      "url": "https://www.udemy.com/course/unity-da-zero-creiamo-un-platform-game-per-mobile/",
      "bio": "Creare videogiochi in Unity è semplice! Realizza un gioco per dispositivi mobili senza conoscere la programmazione",
      "objectives": [
        "Comincia la professione di Creatore di Videogiochi nel modo più semplice ed efficace!",
        "Realizza un platform game 2D completo",
        "Impara le basi di programmazione con C#",
        "Esplora le principali funzionalità di Unity",
        "Pubblica un gioco per Android"
      ],
      "course_content": {
        "Introduzione": [
          "Presentazione del platform game",
          "Installare Unity e Visual Studio"
        ],
        "Le basi di Unity": [
          "Introduzione: Le basi di Unity",
          "L'interfaccia di Unity",
          "I tools della scena",
          "La finestra Game",
          "Gli assets del gioco"
        ],
        "La grafica del gioco": [
          "Introduzione: la grafica del gioco",
          "Creiamo le piattaforme",
          "Creiamo il Player con Sprite Editor",
          "Prepariamo la scena principale"
        ],
        "Il Player prende vita!": [
          "Introduzione: il player prende vita!",
          "Le leggi della fisica su oggetti 2D",
          "Il nostro primo Script",
          "Muoviamo il Player con le frecce",
          "Manteniamo la velocità costante",
          "Modifichiamo le variabili da Unity",
          "Giriamoci verso sinistra",
          "Facciamo un bel salto!"
        ],
        "Animazioni": [
          "Introduzione: animazioni",
          "Animator e le animazioni",
          "Creiamo l'animazione di camminata",
          "Associamo le animazioni al codice",
          "Aggiungiamo l'animazione del salto",
          "Completiamo le animazioni"
        ],
        "Interazioni con gli oggetti": [
          "Introduzione: interazione con gli oggetti",
          "Collisioni tra sprite",
          "Creiamo un tag",
          "Distruggiamo gli oggetti",
          "Lo script GameManager"
        ],
        "Interfaccia utente": [
          "Introduzione: interfaccia utente",
          "Realizziamo una semplice UI",
          "Punti e mosche",
          "Come visualizzare l'energia"
        ],
        "Completiamo il gioco": [
          "Introduzione: completiamo il gioco",
          "Muoviamo la camera",
          "Testiamo la scena",
          "Sostituiamo le collision con i trigger",
          "Miglioriamo la UI",
          "Aggiungiamo gli effetti sonori",
          "Altre aggiunte alla scena"
        ],
        "Aggiungiamo altre scene": [
          "Introduzione: aggiungiamo altre scene",
          "Creiamo la scena 'Intro'",
          "Lo Script ‘GestioneScene’",
          "Creiamo le scene 'GameOver' e 'Win'",
          "Associamo le nuove scene al gioco"
        ],
        "Pubblichiamo l'app per mobile": [
          "Introduzione: pubblichiamo l'app per mobile",
          "Aggiungiamo una tastiera virtuale per il movimento e il salto",
          "Modifichiamo il codice 'Movimento'",
          "Build del gioco per Android"
        ]
      },
      "requirements": [
        "Nessun prerequisito particolare (a parte un computer!)",
        "Non hai bisogno di conoscere linguaggi di programmazione, imparerai tutto quello che ti serve durante le lezioni!",
        "Devi avere la costanza di seguire tutte le lezioni per raggiungere i risultati finali"
      ],
      "description": "**Alcuni estratti dalle recensioni degli studenti di questo corso**\n\"Corso ben fatto ed un ottimo punto di partenza per chi inizia ad approcciarsi a Unity.\" (Gabriele)\n\"il corso è super, oltre le mie aspettative!\" (Fabio)\n\"L'insegnante spiega tutto in modo chiaro e semplice, partendo dalle basi e andando avanti passo dopo passo.\" (Francesco)\n\nIl corso a cui stai per iscriverti ti permetterà di realizzare in pochissimo tempo un platform game completo, di giocarlo sul tuo cellulare e condividerlo coi tuoi amici. Se vuoi cominciare a muoverti nel divertentissimo mondo dei Game Maker, questo è il corso che fa per te!\nNon dovrai avere conoscenze pregresse di linguaggi di programmazione, né di Unity. Tutto quello che dovrai sapere te lo diremo noi, e ti guideremo passo per passo nella tua futura carriera di Game Maker.\nBasta con noiosissimi corsi pieni di lezioni di teoria che non arrivano mai al dunque! Qui imparerai quello che davvero ti servirà, e tutte le lezioni saranno orientate a fare ogni volta un piccolo passo verso la realizzazione finale del tuo progetto.\nIl gioco che costruiremo assieme vede come protagonista un ragazzino che fa uno stage aziendale. Nell’azienda il capo chiede allo stagista cose davvero assurde. Nel livello che svilupperemo lo stagista dovrà dare la caccia a delle mosche che si trovano in giro per l’ufficio. Le mosche dovranno sfamare l’iguana del capo. Lo stagista dovrà stare attento a non perdere energia andando contro gli ostacoli, altrimenti rischierà la morte! Potrà recuperare energia mangiando i panini che troverà, e potrà prendere le monete sparse per il livello.\nBuon divertimento!",
      "target_audience": [
        "Appassionati di videogiochi che vogliono realizzare il loro primo gioco",
        "Giovani imprenditori che vedono nello sviluppo di videogiochi una forma di reddito"
      ]
    },
    {
      "title": "Unity ile Test Güdümlü Proje Geliştirme Giriş",
      "url": "https://www.udemy.com/course/unity-ile-test-gudumlu-proje-gelistirme-giris/",
      "bio": "Unity ve Test yazımı ile proje geliştirme yöntemleri",
      "objectives": [
        "Unity",
        "Test",
        "Unit Test",
        "Test Driven Development",
        "C#",
        "CSharp",
        "Doğru Kodlama Teknikleri",
        "Solid Prensipleri",
        "GitHub",
        "Object Oriented Programming"
      ],
      "course_content": {
        "Giriş": [
          "Giris Konusmasi",
          "Proje Olusturma",
          "Pakeleri ve Assetleri Ekliyoruz",
          "Test, Tdd Nedir Unity ile Kullanimi",
          "Assembly Defination Edit ve Play Mode Test"
        ],
        "Gelişme": [
          "Player Prefab ve Player Giris Planlama",
          "Player Movement ve Test Islemleri Part 1",
          "Player Movement ve Test Islemleri Part 2",
          "Player Movement ve Test Islemleri Part 3",
          "Player Movement PlayMode Test Part 1",
          "Player Movement PlayMode Test Part 2",
          "Player Movement PlayMode Test Part 3",
          "Player Stats ve MoveSpeed Olusturuyoruz",
          "Player Flip ve EditMode Test Olusturuyoruz",
          "Player Flip ve PlayMode Test ve Manuel Test",
          "Player Flip EditMode ve PlayMode Testleri Toparliyoruz",
          "Health ve Test Islemleri Part 1",
          "Health ve Test Islemleri Part 2",
          "Health ve Test Islemleri Part 3",
          "Health ve Test Kodlarini Refactor Ediyoruz",
          "Health PlayMode Test Part 1",
          "Health PlayMode Test Part 2",
          "Health ve Attacker Kodlarini Refactor Ediyoruz",
          "Health ve Attacker Testleri Guncelliyoruz",
          "Enemy Uc Yonden Attack ve Test Islemleri",
          "Player Darbe Almama Senaryosu ve Testi Olusturuyoruz",
          "Player Attack Test Part 1",
          "Player Attack Test Part 2",
          "Player Jump Islmeleri ve EditMode Test Part 1",
          "Player Jump Islemleri ve EditMode Test Part 2",
          "Player Jump Kodlarini Refactor Ediyoruz Part 1",
          "Player Jump Kodlarini Refactor Ediyoruz Part 2",
          "Player PlayMode Test Jump Part 1",
          "Player PlayMode Test Jump Part 2",
          "Yapilan Tum EditMode ve PlayMode Testlerine Bakiyoruz",
          "Business ve Dal Mantigina Jump Uzerinden Bakiyoruz Part 1",
          "Business ve Dal Mantigina Jump Uzerinden Bakiyoruz Part 2",
          "Movement Businness ve Dal Mantigina gore Guncelliyoruz Part 1",
          "Movement Businness ve Dal Mantigina gore Guncelliyoruz Part 2",
          "Movement Businness ve Dal Mantigina gore Guncelliyoruz Part 3",
          "Movement Businness ve Dal Mantigina gore Guncelliyoruz Part 4",
          "Movement Businness ve Dal Mantigina gore Guncelliyoruz Part 5",
          "Movement Businness ve Dal Mantigina gore Guncelliyoruz Part 6"
        ],
        "Sonuç": [
          "Son Soz"
        ]
      },
      "requirements": [
        "Orta seviye Unity ve C# bilgisi"
      ],
      "description": "Unity ve test yazimi cok yaygin olmasa bile aslinda bir proje gelistirirken olmazsa olmazidir. Bu sadece Unity icin gecerli degildir web, masaustu veya mobile gelistirme fark etmez butun yazilim projelerinde kullanilan bir yontemdir ozellikle buyuk projelerde cunku buyuk ve coklu calisilan projelerde sizin veya baskasinin yaptigi degisiklikleri tek tek manuel test etmek hem vakit kaybidir hemde buyuk olasilikla gozden kacicak cok alan vardir ve her yapilan ve yapilan degisikligin etiliceigi alanlari o an gorme imkanimiz olmaz ve buyuk ihtimal birseyler bozulmus ve bu sansa manuel test ederken ortaya cikabilir veya daha kotusu proje publish edildikten sonra kullanilar tarafindan da ortaya cikablir bu gibi durumlarda kalmamak icin daha hizli proje gelistirmek daha hizli degisliklikler yapmak ve yapilan degislklikleri hizli bir seklikde kontrol etmek icin test yazilimini kullaniriz yani bir kod yazilir ayni sekilde testi yazilr ve yarin obur gun bir degisklik oldugunda testimizi calistiririz ve aninda sonuc aliriz yaptigmiz degisklik eski kodlarimzi bozdu mu veya hersey yolunda mi sonucunu hemen alir ve bundan dolayi daha hizli gelistirme surecine girmis ve sonuclari hemen gormus oluruz bu kursumuzda unity ile test yazimi ve test yazim teknilerini gormus olucaksiniz. Kursum ayni zamanda TDD(Test Driven Development) test gudumlu gelirstirme yapma teknilerini icermektedir. Onemli NOT: Bu kursumda orta duzey csharp ve unity bilgisi gerekmektedir. Kursum tamamen kodlama uzerinedir game design veya model olusturma gibi tasarim ve art gibi islemleri icermez tamamen kodlama uzerinedir.",
      "target_audience": [
        "Unity ile orta seviyeden profesyonel seviyeye geçmek isteyenler icin uygun bir kurstur"
      ]
    },
    {
      "title": "Maîtriser Unity et le C# | Guide Complet Développeur",
      "url": "https://www.udemy.com/course/maitriser-unity-2018-et-le-c-formation-complete/",
      "bio": "Apprendre à développer et Monétiser des jeux vidéo pour Smartphone, Windows, Mac... facilement avec Unity",
      "objectives": [
        "Installer et gérer les différentes versions d'Unity",
        "Maîtriser l'interface et les outils d'unity",
        "Maîtriser les scripts et le C# (C-Sharp)",
        "Tout savoir sur l'animation dans Unity (Animator, Layers, Mask d'avatar, Inverse Kinematics,etc.)",
        "Gérer le déplacement de personnages grâce a l'intelligence artificielle (NavMesh)",
        "Compiler des jeux a destination de différentes plateformes (PC, Mac, Linux, Android, IOS, Mac Os)",
        "Devenir autonome et réaliser des jeux 3D grâce à UNITY",
        "Utiliser les API d'unity"
      ],
      "course_content": {
        "Votre console Udemy (Optionnel)": [
          "Avant de commencer..."
        ],
        "Introduction (Unity et son Installation)": [
          "Les différentes versions d' Unity",
          "Installation d' Unity 2018 en détails",
          "Unity Hub",
          "Optionnel : Installation sous Linux (Version Preview)",
          "Premier Lancement d'Unity",
          "Quiz Section 1"
        ],
        "Découverte de l'interface et des Fenêtres": [
          "Introduction aux scènes, aux objets et aux composants",
          "Hierarchy (Gérer les Objets de la scène)",
          "Scène (Déplacer la vue dans le monde 3D)",
          "Barre d'outil de l'onglet scéne",
          "Surface Snapping et Vertex Snapping",
          "Barre outil de dimensionnement des objets",
          "Barre outils dimensionnement des objets (Update 2017.3)",
          "Game view (Rendu du jeu)",
          "Fenêtre Projet",
          "Fenêtre Inspector",
          "La Console d' Unity",
          "Espace de Travail (Layout)",
          "Quiz Section 2 L'interface"
        ],
        "Les Composants de Base d' UNITY": [
          "Introduction aux composants d'Unity",
          "Composants Physiques: Collider et Rigidbody",
          "Composant Caméra (GameView)",
          "Composant Light",
          "Quiz Section 3 Les Composants de base"
        ],
        "Les Fondamentaux d' Unity": [
          "Les matériaux",
          "Les matériaux physiques",
          "Notion de parent enfant",
          "Prefab",
          "Nouveau système de préfab (Unity 2018.3 et supérieur)",
          "Standard asset Information",
          "Standard Assets",
          "Asset Store",
          "Skybox",
          "Modélisation de Terrain 3D",
          "Update Unity2018.3 et supérieur : Modélisation de Terrain 3D",
          "Quiz Section 4 Les fondamentaux"
        ],
        "Apprentissage du C#": [
          "Notions de base : scripts et IDE",
          "Structure d'un Script C#",
          "Les méthodes (Monobehaviour)",
          "Les variables de base",
          "La portée des variables",
          "Les opérations mathématiques",
          "Les Conditions",
          "Opérateurs d' affectations, mathématiques , logiques, ternaires",
          "Tableau Simple",
          "Tableau multidimensionnel",
          "Les boucles conditionnelles",
          "Les méthodes (void)",
          "Les méthodes (Arguments)",
          "Les Fonctions",
          "Conversion Implicite et Explicite",
          "Refactoring et Debuging du code",
          "Quiz Section 5"
        ],
        "Atelier pratique : Réalisation de notre premier jeu (Labyrinth)": [
          "Présentation du projet",
          "Level Design",
          "Les vecteurs et les translations",
          "Déplacement du Player",
          "Amélioration du système de déplacement (Input.GetAxis)",
          "Corrections colorimétriques, ombres et filtres d'images",
          "Porte de sortie (OnTriggerEnter)",
          "Votre première animation (Ouverture de porte)",
          "Animation du composant PointLight (Hublot de porte)",
          "Ouverture de la porte (GetComponent)",
          "Préparation de la clé (model)",
          "Ramassage de la clé et gestion de l'ouverture de porte (OnCollisionEnter)",
          "Exit Point (Particule)",
          "Gestion de l'audio dans unity",
          "Ambiance sonore",
          "Effet sonore de la clé",
          "Effet sonore de la porte (Multi-sounds)",
          "AudioSource 3D sound",
          "UI - User Interface",
          "Mise en place de l'UI",
          "Compte a rebours (Coroutine)",
          "Interface de menu (UI Button)",
          "Événement sur bouton (SceneManager)",
          "GameOver",
          "Chargement du niveau suivant",
          "Création et Optimisation des \"préfabs\"",
          "Création du Niveau Suivant (Grâce aux \"prefabs\")",
          "Ennemi 1 se déplaçant grâce a l'animation (SpikeBall)",
          "Ennemi 2 se déplaçant grâce a un script (Vector3.MoveTowards)",
          "Stockage de données (PlayerPrefs)",
          "Système de continu du Menu.",
          "Options de compilation (PlayerSettings)",
          "Compilation du jeu (Version Windows)",
          "Code source (Projet labyrinth)"
        ],
        "L'animation de personnage 3D dans Unity": [
          "Les personnages et leurs animations",
          "Importation et paramétrage du personnage \"Claire\"",
          "Animation & script : Marche avant du personnage",
          "Animation & script : Course du personnage",
          "Rotation du personnage",
          "Animation & script : Saut du personnage",
          "Information : En cas de problème de détection de la touche de saut",
          "Animation & script : Marche arrière du personnage",
          "Animation & script : Idle Dance Twerk",
          "Animation & script : Mort du personnage",
          "Animator état : Entry , AnyState, Exit",
          "Effets sonores : Saut (Events animation)",
          "Effets sonores : FootStep (Events animation)",
          "Limiter le nombre de saut (Events)",
          "Curves : Adapter la taille du collider lors du saut",
          "Animator BlendTree : animation de rotation",
          "Animator Root Motion",
          "Animator Layers et Mask d'avatar",
          "Animator Inverse Kinematics",
          "Script de la camera du personnage",
          "Correction animation de course vers marche arrière",
          "Exportation de l'asset du personnage Claire",
          "Projet complet Unity de la section Animation de personnage",
          "Quizz Section 8"
        ],
        "IA - Intelligence artificielle de personnage": [
          "Intelligence artificielle Introduction",
          "Votre première IA de déplacement (Raycast)",
          "NavMesh",
          "NavMesh Agent Pathfinding",
          "Propriétés du NavMesh Agent",
          "NavMesh Agent Jump & Drop",
          "Navmesh Obstacle",
          "NavMesh Off-Mesh Link",
          "NavMesh Area",
          "NavMesh Type Agent (NavMesh Surface)",
          "NavMesh Link",
          "NavMesh Clic & point déplacement du Player",
          "Quiz Section 8"
        ],
        "Atelier Pratique : Claire School (Jeu)": [
          "Introduction",
          "Mise en place du level design et du personnage",
          "Réalisation du préfab ProgressBar",
          "Mise en place des préfabs ProgressBar sur la scène",
          "Gestion de la barre de faim (Script)",
          "Gestion de la barre d'energie (script)",
          "Réalisation des préfabs Item Food",
          "Réalisation du prefab item Energy",
          "Faire une pause pendant le jeu",
          "Réalisation du préfab InfoPoint",
          "Script du prefab InfoPoint",
          "Shader double face (double sided)",
          "Composant Cloth : Amélioration InfoPoint",
          "Mixamo Personnage 3D (Ennemy)",
          "Ennemy NavMeshNavigation",
          "Enemy Animator",
          "Enemy IA script",
          "Ennemy Dégâts sur le personnage",
          "Ennemy Élimination par un saut du personnage",
          "Mise en place de l'objet enfant",
          "Destruction de la cage",
          "Déplacement de l'enfant vers la cible",
          "Level Design Ecole",
          "Création des slots de l' User Interface",
          "Création du point de sortie (Exit Point)",
          "Ambiance sonore du niveau",
          "Timelaps création d'un niveau"
        ]
      },
      "requirements": [
        "Un ordinateur",
        "De la volonté et de la persévérance"
      ],
      "description": "Bienvenue dans ce guide complet sur Unity3D et le développement de jeu vidéo.\n\n\nCe Guide complet adapté aux débutants comme aux utilisateurs expérimentés va vous permettre de maîtriser le développement de jeu vidéo en 2D et en 3D étapes par étapes.\n\n\nLes sections de ce cours vous permettrons de tout savoir sur :\nL'installation d'Unity\nLa compréhension de son Interface\nLes composants fondamentaux de physique et de collision en 2D et en 3D\nLe langage de programmation C# (C Sharp)\nL'exploitation avancée de l'animation dans un projet 3D et 2D (Animations, Animator, etc..)\nDévelopper une intelligence artificielle grâce au code et aux agents de navigation\nCompiler votre jeu pour différente plateforme PC, Android, MacOS, IOS, Navigateur Internet.\nDécouvrir et mettre en pratique les éléments de l'interface Utilisateur\net bien d'autres aspects d' Unity (Voir le programme de ce cours et les \"previews\" accessibles gratuitement)\n\n\nVous développerez tout au long de ce cours des jeux et le code source vous sera fourni en fin de section.\n\n\nCette formation a pour vocation de vous apprendre à maîtriser deux outils :\n·         Le langage de programmation C#\n·         Le moteur de jeu Unity3D\n\n\nVous apprendrez à utiliser ces deux technologies conjointement ou séparément pas à pas.\n\n\nVous disposerez des ressources (Projet complet, modèles 3D, sons, etc...) afin de suivre ce cours le plus facilement possible et pourquoi pas, les réutiliser dans votre propre projet ?\n\n\nTous les chapitres sont enregistrés en HD pour que vous puissiez tout voir clairement pendant le cours (vous pouvez regarder les \"previews\" gratuites).\n\n\nJe répondrai personnellement à vos questions si vous en avez, et je fournirai autant d'aide que possible pour vous aider à maîtriser le C# et Unity3D.\n\n\nN'attendez plus et cliquez sur Suivre ce cours en haut à droite. C'est parti !",
      "target_audience": [
        "Toutes personnes désirant apprendre le développement de jeux vidéo avec UNITY"
      ]
    },
    {
      "title": "Aprende a crear video juegos con Stencyl",
      "url": "https://www.udemy.com/course/aprende-a-crear-video-juegos-con-stencyl/",
      "bio": "Aprenderás con Stencyl a hacer video juegos para PC, móviles con Android o IOS, Flash y HTML5 en tiempo record.",
      "objectives": [
        "Podrás probar tus juegos en Android con movimientos y disparos táctiles",
        "Al final del curso serás capaz de crear tus propios juegos 2D",
        "Serás capaz de subir tus juegos a Google Play y App Store",
        "Aprenderás por ti mismo a diseñar y construir tus propios juegos desde cero",
        "Podrás obtener ingresos por publicidad con tus creaciones a través de Admob"
      ],
      "course_content": {
        "Aprende a crear video juegos para móviles con Stencyl": [
          "Introducción",
          "Instalando Stencyl"
        ],
        "Escenas ó niveles.": [
          "Introducción",
          "Creando una escena en blanco.",
          "Tiles y tileset",
          "Imagenes de fondo"
        ],
        "Debug Mode": [
          "Debug Mode y Colisiones"
        ],
        "Actores": [
          "Players",
          "Enemigos",
          "Recolectables",
          "Recolectables 2",
          "Vidas",
          "Puliendo el Juego 1",
          "Droppers",
          "Disparos",
          "Explosiones",
          "Fragmentos",
          "Elevadores o Plataformas",
          "Interruptores"
        ],
        "Administración de Sonidos": [
          "Efectos especiales de sonido.",
          "Efectos especiales de sonido 2",
          "Música de fondo.",
          "Silenciar juego",
          "¿Qué formato de sonido se requiere para crear juegos en Flash?",
          "¿Qué formato de sonido se requiere para PC, IOS y Android?"
        ],
        "Comportamientos": [
          "Follow Target / Perseguir Objetivo",
          "Explode On Death / Explosiones y Fragmentos",
          "Switch Scene On Enter Region / Cambiar Escena Al Entrar Region",
          "Pause Button"
        ],
        "Administración de gráficos": [
          "Vidas",
          "Cuenta atrás",
          "Enemigos restantes",
          "Objetos restantes",
          "Enemigos restantes 2",
          "Score / Puntuacion",
          "Fonts",
          "Puliendo el juego 2",
          "Game Over Level",
          "Nivel Inicial del juego / Main Menu",
          "Finalizando el juego"
        ],
        "Creando el juego para móviles": [
          "Conectando nuestro móvil con Android al Stencyl",
          "Probando nuestro juego en Android 1",
          "Probando nuestro juego en Android 2 / Introducción",
          "Probando nuestro juego en Android 3 / Movimiento tactil",
          "Probando nuestro juego en Android 4 / Disparos táctiles",
          "Google Play Developer",
          "Desarrollar juegos para Google Play",
          "Ios Developer",
          "Desarrollar juegos para App Store de Apple",
          "Monetizando nuestro juego con publicidad de Admob"
        ]
      },
      "requirements": [
        "Sólo necesitarás descargarte el programa Stencyl de su pagina oficial",
        "No requieres ningún conocimiento previo de programación",
        "No requieres ser un experto en diseño gráfico",
        "Sólo tienes que tener muchas ganas de crear tus propios juegos"
      ],
      "description": "Crea Videojuegos para móviles con Stencyl\nEste curso enseñará a los estudiantes a crear sus propios Videojuegos con el programa Stencyl, sin necesidad de tener conocimientos de programación.\nEl curso está dirigido a estudiantes que quieren iniciarse a crear Videojuegos para móviles y dispositivos Iphone, Ipad, Android y quieran resultados rápidos y profesionales.\nNo se necesitan conocimientos previos para seguir el curso, creando desde cero y clase a clase las distintas partes que comprende la creación de un Videojuego.\nCon las habilidades adquiridas en éste curso podrás por ti mismo hacer juegos asombrosos e increibles de casi cualquier género.\n¿QUÉ HAY EN EL CURSO?\n1.¡Más de 42 clases y 6 horas de contenido!\n2. Al terminar el curso, serás capaz de crear tus propios videojuegos 2D para móviles y PC. Podrás crear por ti mismo una escena principal desde donde comenzar el juego, después los distintos niveles y al final del todo varios finales diferentes tales como el nivel Game Over y el nivel Bien Hecho Has Completado Todos Los Niveles.\n3. Método de entrenamiento visual, ofreciendo a los estudiantes una mayor retención y aprendizaje acelerado.\n4. Aprenderás a construir tus juegos de una manera lógica y lineal, pudiendo dedicarte a crear Videojuegos profesionales si más adelante deseas hacerlo, porque habrás adquirido las suficientes habilidades para ello.\n5. Podrás crear todo tipo de elementos para tus propios juegos, tales como palancas, interruptores, plataformas, explosiones, fragmentos, disparos, etc. Podrás crear todo tipo de enemigos, colectables, players y droppers y podrás crear elementos aleatorios que dificultarán el juego y crear desafíos como realizar acciones en un corto periodo de tiempo para que el juego no acabe.\n6. Adquirirás todas las habilidades necesárias, para que durante el curso, puedas publicar tus creaciones para los móviles con sistema Android en Google Play y con sistema iOS en el App Store de Apple.\n7. Serás capaz de construir un juego como el que aparece en el curso.\nREQUISITOS PARA EL CURSO:\n1. Un ordenador Mac o Windows donde puedas ejecutar el programa Stencyl, tanto en su versión gratuíta o la de pago. Cualquier ordenador debería permitirlo.\n2. No se necesita ninguna experiencia previa. Totalmente para novatos.\n3. Ser un entusiasta de los Videojuegos.\n4. Seguir las clases con atención y repetirlas varias veces al dia.\nEl programa Stencyl es totalmente gratis y se proporcionará el enlace de descarga de este asi como todos las herramientas que manejemos en este curso (imagenes, fondos, sonidos, etc). Existe una versión de pago de Stencyl que permite subir programas al Google Play y al App Store de Apple, pero la versión gratuita de Stencyl nos permitirá probar nuestros juegos directamente en nuestro Android.\n¿QUIÉN DEBERÍA TOMAR ESTE CURSO?\n1. Principiantes.\n2. Aficionados que quieran crear su primer Videojuego de calidad y multiplataforma en muy poco tiempo.\n3. Desarrolladores independientes en busca de una manera rápida para construir juegos multiplataforma.\n4. Estudiantes.\nCon este curso en cada video te garantizará una habilidad nueva para perfeccionar tu desarrollo como creador de Videojuegos para móviles y para PC.\nA qué esperas para apuntarte al curso, verás lo sencillo y divertido que es crear Videojuegos para móviles con ésta nueva herramienta que se llama Stencyl.\nApúntate Ya! ¿A qué esperas?",
      "target_audience": [
        "Adecuado para amantes de los video juegos",
        "Si eres creativo y te gustaría dedicarte a los video juegos como negocio éste es tu curso de iniciación",
        "Si tienes buenas ideas pero no sabes como llevarlas a cabo",
        "Si no tienes tiempo para aprender a programar",
        "Si eres impaciente y te gustan los resultados rápidos"
      ]
    },
    {
      "title": "Curso de Pygame",
      "url": "https://www.udemy.com/course/curso-de-pygame-python/",
      "bio": "Desenvolvendo jogos com Python",
      "objectives": [
        "Desenvolver jogos usando python e os componentes do pygame"
      ],
      "course_content": {
        "Iniciar aqui": [
          "Introdução",
          "Aula 02 - Baixando o Python e Pygame",
          "Aula 03 - Instalando o Python",
          "Aula 04 - Instalando o Pygame",
          "Aula 05 - Programando com Pygame",
          "Aula 06 - Chamando evento para fechar",
          "Aula 07 - Cores de fundo e timer",
          "Aula 08 - Criando superficies",
          "Aula 09 - Cores e posicionamento",
          "Aula 10 - Cores e posicionamentos",
          "Aula 11 - Evento de clique com o mouse",
          "Aula 12 - Eventos com teclas",
          "Aula 13 - Movimentando objetos na tela",
          "Aula 14 - Objeto acompanhando o mouse",
          "Aula 15 - Objeto acompanhando o mouse",
          "Aula 16 - Verificando colisões",
          "Aula 17 - Inserindo textos na tela",
          "Aula 18 - Trabalhando com sons",
          "Aula 19 - Inserindo audio",
          "Aula 20 - Criando jogo com Pygame",
          "Aula 21 - Criando jogo com Pygame",
          "Aula 22 - Criando jogo com Pygame",
          "Aula 23 - Criando jogo com Pygame",
          "Aula 24 - Criando jogo com Pygame",
          "Aula 25 - Criando jogo com pygame",
          "Aula 26 - Criando jogo com pygame",
          "Aula 27 - Finalizando o primeiro jogo",
          "Aula 28 - Classe Random",
          "Aula 29 - Gerando retangulos de forma randomica",
          "Aula 30 - Criando um contador",
          "Aula 31 - Criando pacote de classes",
          "Aula 32 - Dividindo as classes em pacotes",
          "Aula 33 - Velocidade dos objetos",
          "Aula 34 - Criando sprites",
          "Aula 35 - Colisão de imagem com objetos",
          "Aula 36 - Criando um jogo espacial",
          "Aula 37 - Inserindo imagem do player",
          "Aula 38 - Criando a tela do jogo",
          "Aula 39 - Iniciando com a tela do jogo",
          "Aula 40 - Criando função de movimentação",
          "Aula 41 - Criando função de movimentação",
          "Aula 42 - Melhorias na movimentação",
          "Aula 43 - Imagem de Fundo da tela",
          "Aula 44 - Criando os objetos do jogo",
          "Aula 45 - Criando os retangulos",
          "Aula 46 - Gerando os retangulos randomicamente",
          "Aula 47 - Recriando os retangulos",
          "Aula 48 - Criando colisão",
          "Aula 49 - Chamando imagem de explosão",
          "Aula 50 - Inserindo música de fundo",
          "Aula 51 - Inserindo audio ao colidir",
          "Aula 52 - Inserindo áudio ao colidir",
          "Aula 53 - Inserindo audio ao movimentar objeto",
          "Aula 54 - Inserindo a pontuação do jogo",
          "Aula 55 - Inserindo a pontuação do jogo"
        ]
      },
      "requirements": [
        "Os alunos não precisarão ter nenhum conhecimento prévio."
      ],
      "description": "O curso de Pygame com Python possui 55 aulas, este é o quarto curso de Python, e o primeiro de Pygame, neste curso mostramos como utilizar o pygame para construir seus jogos com python, nele também aprendemos sobre a documentação e os novos comandos usados com o pygame, são desenvolvido dois jogos para colocar em prática os recursos aprendidos, com o curso o aluno poderá iniciar com a criação de games que tem sido uma das áreas mais bem remuneradas hoje no mercado.\nAdquira já o curso e receba seu certificado, prepare-se para o mercado de trabalho, nosso curso te dará todo suporte necessário.",
      "target_audience": [
        "Todos os alunos que tenham interesse em aprender sobre criação de jogos"
      ]
    },
    {
      "title": "【Unity C# ゲーム開発脱初心者】本格チェス開発講座",
      "url": "https://www.udemy.com/course/ild-unity-chess/",
      "bio": "チェスのルールを知らなくても大丈夫！Unityを使ってゼロからチェスをプログラミングしていきます。複雑なチェスを噛み砕いて図や動きで解説→プログラミングを進めていくので誰にでも分かりやすい内容になっています！",
      "objectives": [
        "ゲーム開発に必要な思考方法",
        "さまざまなゲーム制作に応用できる開発力",
        "ゲーム開発のためのC#基礎",
        "ボードゲーム開発に必要なスキル",
        "チェスのルール"
      ],
      "course_content": {
        "紹介": [
          "紹介",
          "Q&Aガイドライン"
        ],
        "このコースで使うC#基礎おさらい": [
          "前提知識とコメントとログ",
          "よく使う型と変数",
          "変数の生存期間",
          "変数の代入（型キャスト）",
          "コンソールログの使い方",
          "演算と演算子",
          "if文",
          "switch文",
          "for文",
          "while文",
          "配列",
          "2次元配列",
          "List",
          "Listの応用",
          "Dictionary",
          "foreachと配列まとめ",
          "関数入門 1",
          "関数入門 2",
          "クラス入門 1",
          "クラス入門 2",
          "自作クラスへのアクセス方法",
          "アクセスレベルについて",
          "3と5の倍数で文字を表示する",
          "AudioSource(サウンド)の操作 1",
          "AudioSource(サウンド)の操作 2"
        ],
        "チェス本編": [
          "チェスのルール説明 1",
          "チェスのルール説明 2",
          "プロジェクトの作成",
          "2Dオブジェクトの作成",
          "タイル生成",
          "ユニット生成",
          "ユニットの初期化と移動の関数",
          "UnitControllerクラス完成",
          "UI取得と非表示",
          "ユニット選択",
          "ユニット移動",
          "ポーンの動き",
          "移動カーソル表示",
          "モードとプレイヤーの概念",
          "ルークの動き",
          "ナイトの動き",
          "ビショップの動き",
          "クイーンとキングの動き",
          "チェックの処理",
          "移動可能範囲の拡張",
          "キャスリング",
          "ライティングがおかしくなってしまった時",
          "アンパッサン",
          "プロモーション",
          "引き分けの処理",
          "タイトルシーン",
          "CPUの処理",
          "便利なデバッグ方法",
          "完成品のスクリプト"
        ]
      },
      "requirements": [
        "パソコンの基本的な操作",
        "ゲームを作りたい気持ち",
        "Unityをインストールしている方"
      ],
      "description": "ボードゲーム制作を通してゲームクリエイターへの一歩を踏み出そう！\nつまづきやすい部分は資料付きで解説を入れたり、画面ズームを使って進めていくので挫折しにくい構成になっています。\n1レクチャーを10分程度にまとめたハンズオン形式となっているので\n毎日少しづつでも、動画でやっていることを真似するだけでもOKなので、効率的に学習できる内容となっています。\n\n\n今回の題材はチェス\n主にボードゲームのロジックが学習できる内容になっています。\nゲームロジックを実装して、幅広いゲーム開発の知識を手に入れよう！\n入門クラス/初心者クラス向けのコースです。\n\n\nこちらのコースでは\nC#の基本的な使い方\nチェスのルール\nチェスの作り方\nが効率的に学習できます。\nなるべくスクリプト（プログラミング）を利用して制作していくので\nチェスに限らず、アイデア次第で汎用的なボードゲームを制作する知識も身につきます。\n\n\nまた、私のコースは日々頂いたレビューに対応しアップデートを行なっていきますので\n高評価＆レビューいただけますと励みになります。",
      "target_audience": [
        "Unityの基本的な使い方を知っている方",
        "Unityの中級者を目指している方",
        "具体的なゲームの制作方法を知りたい方"
      ]
    },
    {
      "title": "Créer des jeux vidéo sans coder avec RPG Maker MV",
      "url": "https://www.udemy.com/course/formation-rpg-maker-mv/",
      "bio": "Apprendre à créer des jeux vidéo facilement !",
      "objectives": [
        "Créer des jeux vidéo de A à Z avec RPG Maker MV",
        "Commercialiser un jeu vidéo",
        "Utiliser toutes les fonctionnalités de RPG Maker MV",
        "Créer des évènements et combats",
        "Faire du mapping",
        "Rendre vos jeux jouables sur Windows, Mac, iOS et Android",
        "Et pleins d'autres choses"
      ],
      "course_content": {
        "Pour commencer": [
          "Qu'allez-vous apprendre ?",
          "Merci !",
          "Présentation de RPG Maker MV",
          "À Lire"
        ],
        "Les bases de RPG Maker MV": [
          "Qu'allez vous apprendre dans cette partie ?",
          "Installation de RPG Maker MV",
          "Présentation de l'interface",
          "Réglage des options",
          "Connaître la version de RPG Maker MV",
          "Création et édition d'une map (mapping)",
          "Le parallaxe",
          "Les acteurs",
          "Le générateur de personnages",
          "Testez vos connaissances",
          "Les classes",
          "Les compétences",
          "Les objets",
          "Les formules",
          "Les armes",
          "Les armures",
          "Les ennemis",
          "Les états",
          "Les traits",
          "Les animations",
          "Les tilesets",
          "Types, système et termes",
          "Les événements - Partie 1",
          "Les événements - Partie 2",
          "Les commandes d'événement",
          "Les caractères de contrôle",
          "Bonus - Téléporter un personnage",
          "Les événements communs",
          "Les combats par événement",
          "Les combats par région",
          "Les combats en vue latérale",
          "Les boutiques",
          "Les interrupteurs",
          "Les variables",
          "Les branches conditionnelles",
          "L'audio",
          "Les fichiers",
          "Bonus - Les cinématiques - Partie 1",
          "Bonus - Les cinématiques - Partie 2",
          "La compilation (déploiement)",
          "Exercice - Réalisez un monde de jeu vidéo",
          "Correction exercice - Partie 1",
          "Correction exercice - Partie 2",
          "Merci !"
        ],
        "Projet - Développez votre premier jeu vidéo": [
          "Présentation du projet",
          "À Lire",
          "Création du projet",
          "Création de nos personnages",
          "Création des acteurs",
          "Le mapping",
          "La classe \"Magicien\"",
          "Création des compétences",
          "Système, types et termes",
          "Nos ennemis",
          "L'image d'ennemi de Bossus",
          "Réalisation d'une banque",
          "Mise en place des combats",
          "Les objets cachés",
          "Transfert entre les maps",
          "Réalisation d'un restaurant",
          "L’intérieur des maisons",
          "L'empire du magicien",
          "Un easter-egg",
          "La voyante (Wina)",
          "À Lire",
          "Histoire - Partie 1",
          "Histoire - Partie 2",
          "Histoire - Partie 3",
          "Histoire - Partie 4",
          "Histoire - Partie 5",
          "Quelques corrections",
          "Correction du problème du combat",
          "Générique de fin",
          "Testons le jeu",
          "Mettre en ligne votre jeu vidéo",
          "Quelques améliorations",
          "Merci !"
        ],
        "Pour finir": [
          "Quelques conseils",
          "Un grand merci à vous !"
        ]
      },
      "requirements": [
        "Aucune connaissance pré-requise",
        "Un ordinateur"
      ],
      "description": "Bienvenue sur la formation française RPG Maker MV la plus complète !\nCette formation complète de plus de 12 heures de vidéo va vous permettre de maîtriser le développement de jeux vidéo sur RPG Maker MV.\nJe vais même vous montrer comment gagner de l'argent en commercialisant vos jeux vidéo sur une plateforme de vente de jeux vidéo.\nJe vous donne l'accès gratuit à quelques vidéos pour vous laisser un aperçu sur la qualité de cette formation.\nLa première partie de cette formation va vous permettre de découvrir RPG Maker MV.\nDans la deuxième partie, je vais vous apprendre les bases de RPG Maker MV par la théorie et la pratique et grâce à cette partie vous saurez vous servir des outils de mapping, de la base de données, des événements...\nLa deuxième partie sera la partie la plus intéressante, car on va développer ensemble un jeu vidéo complet et je vous présenterais deux plateformes de vente de jeux vidéo, ça sera votre premier jeu vidéo et croyez-moi, vous en serez fier !\n\nToutes les ressources que j'utiliserais dans cette formation vous seront fournies en téléchargement et je vous fournirai tous les projets terminés.\nToutes les vidéos sont enregistrées en HD 1080p pour que vous puissiez tout voir clairement pendant la formation.\nJe répondrais à toutes vos questions et je vous aiderais autant que possible pour la réussite de votre apprentissage.\nÀ la fin de cette formation, quand vous aurez tout validé, vous aurez accès à un certificat de réussite et vous pourrez enfin dire que vous maîtrisez RPG Maker MV !\nInformations importantes à savoir :\nUne fois que vous avez rejoint la formation, vous y avez accès à vie.\nVous avez également accès gratuitement à toutes les mises à jour que j’apporterais à cette formation.\nVous pouvez m’envoyer des messages personnels avec toutes vos questions ou suggestions concernant la formation.\nN'attendez plus et cliquez sur maintenant sur \"Acheter\" en haut à droite.\n\nC'est parti !",
      "target_audience": [
        "Tout le monde"
      ]
    },
    {
      "title": "Unity from scratch - easy steps to learn for a beginner",
      "url": "https://www.udemy.com/course/unity-from-scratch-easy-steps-to-learn-for-a-beginner/",
      "bio": "Targeted at those who wants to quickly start development in Unity and start creating",
      "objectives": [],
      "course_content": {
        "Introduction to Unity - study the tools such as Unity Hub and brief overview.": [
          "Unity Hub overview, the basics, why its needed and how to use",
          "Creation of a new project and opening an existing project",
          "Unity windows and panels",
          "Unity menus and the package manager",
          "Editor and Scene windows - the most important Unity windows",
          "Working in the Unity Editor scene. Unity services."
        ],
        "2D dungeon crawler quickstart guide": [
          "Dungeon crawler project creation, introduction to tile maps",
          "Creation of new tile maps, level creation and solving tile combination issues"
        ]
      },
      "requirements": [
        "Unity Hub latest version is installed",
        "Unity 2021.3.11 is installed (no additional modules are required at this time)",
        "A great desire to start game development from scratch, understand what is Unity and how you can create games using this software"
      ],
      "description": "Have you dreamed of starting your own game? This course will guide you through easy steps for learning the Unity software and starting your 2D game development. You may have no experience in Unity or game development prior to starting this course and after completion you will know the basics of Unity development and can build tiled levels in 2D games.\nThe course goes step by step for each Unity aspect, I describe what Unity panels tab and windows for, what information is presented there and what do you need to pay attention for. I am not covering all Unity aspects in this course but I give enough information for you to start working in Unity right away. The Unity aspects I describe there are used by me and other Unity developers when trying to build some project and that's why I think they are important and I am covering them. If you already know how to work in Unity and use its windows you may skip to the section 2 where I start development of a 2D game. The 2D game I introduce here does not contain any code but I describe how to create tiled maps and tile map palettes in order to create tiled levels. During the game creation there are some issues that we will successfully overcome and I have specifically shown them so that you will know how you can find the solution. At the end of the course you have a basis for 2D game creation and additional knowledge that is needed for a complete game is not shared in this course. The target auditory are beginners who want to get video introduction to the Unity engine and understand how Unity works.\nCourse outline:\nUnity hub overview\nCreation and loading of existing projects\nIntroduction to Unity windows and panels\nPackage manager\nEditor and Scene mode tabs\nScene editing\n2D dungeon crawler assets import\nCreate a tile map as a basis for 2D game",
      "target_audience": [
        "Enthusiasts wo want to dive into game development and start creating games and projects using Unity. This is your course if you want Unity to be your friend and help you creating projects of any complexity."
      ]
    },
    {
      "title": "脱初心者！アンリアルエンジン（UE4）でFPS（ファーストパーソンシューティングゲーム）が作れるようになるチュートリアル",
      "url": "https://www.udemy.com/course/ue4fpstutorial/",
      "bio": "この講座では、Unreal Engine4でオリジナルのシューティングゲームを作る方法を学びます。プロジェクト作成からパッケージングまで、徹底解説。よくあるバグやエラー等の対処方法も解説するので、本格的なゲーム開発を体験できます。",
      "objectives": [
        "Unreal Engine 4 (UE4) の主要機能・基本操作を理解できます。",
        "Unreal Engine 4 (UE4) でFPSゲームを制作する方法を学べます。",
        "オブジェクト指向でのゲームプログラミングの概念を理解できます。",
        "ゲームジャムに参加したり、簡単なゲームコンテンツが作れるようになります。"
      ],
      "course_content": {
        "紹介": [
          "講座内容の説明、自己紹介",
          "Projectの作成方法",
          "英語Editorに変更しよう",
          "Editorの操作方法",
          "Blueprintの操作方法",
          "FPSTemplateで遊ぼう！"
        ],
        "PlayerCharacter実装": [
          "Playerを走らせてみよう！",
          "Playerをパワーアップさせてみよう！",
          "ADSとフルオート武器を実装しよう！"
        ],
        "銃クラス実装": [
          "銃クラスを作成し、手に銃をアタッチしよう！",
          "銃発射処理を一から実装しよう！",
          "強敵！LineTrace",
          "銃に弾数の概念をもたせよう！",
          "難関！リロード処理を実装！",
          "弾数表示UserInterfaceを実装",
          "弾数表示UserInterfaceをカッコよく！",
          "レティクル、リロードUserInterfaceの実装"
        ],
        "AI実装": [
          "愛のあるAIを作ろう",
          "強敵！AnimationBlueprint！",
          "AIに攻撃をさせよう！",
          "AI、突然の死",
          "超難関！Behavior Tree！",
          "AIにサウンド、カッコイイエフェクトをつける！"
        ],
        "Level Design": [
          "Level Design Overview",
          "カッコいいライト、マテリアルを追加しよう！"
        ],
        "レベルギミック実装": [
          "難関！BlueprintInterface！",
          "開けドア！",
          "武器購入ロジック実装！",
          "レベルギミックにUserIntefaceをつけよう！",
          "新武器追加！ピストル！"
        ],
        "Game System実装": [
          "GAMEOVER...",
          "AIをスポーンさせてみよう！",
          "難関！進行度管理Manager！",
          "また難関！AIManager！",
          "またまた難関！GameMode！",
          "おおーっとバグだ！GameModeでバグが出たぞ！",
          "手に入れたスコアで買い物だ！"
        ],
        "Extra": [
          "Player自動回復ロジック実装！",
          "おおーっと！爆発エネミーでバグだ！",
          "あれ？このゲームタイトルスクリーンが存在しない...?",
          "コントローラーでプレイできるようにするぞ！",
          "カメラシェイクで迫力アップ！",
          "パッケージング！！"
        ]
      },
      "requirements": [
        "Unreal Engine4が動くPC(Windows)を所有している",
        "Unreal Engine4の基本的な操作が分かる"
      ],
      "description": "古典的なウェーブシューターを題材に、FPSゲームをUnreal Engine4で作成していきます。このコースを学ぶことによって基本的なシューティングゲームの作り方を学ぶことができます。また、ベクトル計算や論理的な思考力を学ぶこともできます。\nFPS（ファーストパーソン・シューティング）ゲームは、代表的なシューティングの一種で、操作するキャラクターの本人視点で、ゲーム空間を移動し、武器で敵を倒します。\nFPSゲームを開発する際に使用する機能や実装方法は、様々なゲーム開発をする際に基本となるものばかり。\nこのコースを受講することによって、本格的なゲーム開発で必要となる技術を網羅できます。\nまた、開発時に遭遇しがちなバグやエラーも、講師と一緒に解決していきます。実際にゲーム開発をする際に重要なデバッグ力も鍛えられます。\n\n\n堅苦しい教え方は一切しません！\n友だちに教えてもらっているような優しい雰囲気の講座になっています。\n\n\nさあ、始めていきましょう！",
      "target_audience": [
        "Unreal Engine4の基本的な操作を覚え、何かゲームが作成したくなった方",
        "FPSゲームをUnreal Engine4で作成したい方",
        "アクションゲームを作りたい方"
      ]
    },
    {
      "title": "Impara C++ creando giochi 2D in un'ora!",
      "url": "https://www.udemy.com/course/impara-il-c-creando-giochi-in-unora/",
      "bio": "Crea un clone di Snake in C++ partendo da 0 e imparando le basi di C++ (adatto a principianti)",
      "objectives": [
        "Sintassi del linguaggio C++",
        "Strutturare un'applicazione videoludica con questo linguaggio",
        "Comprendere il C++ e la sua logica",
        "Realizzare un clone di Snake"
      ],
      "course_content": {
        "Introduzione": [
          "Introduzione",
          "Variabili e istruzione If",
          "Ripetere le istruzioni con Il ciclo For"
        ],
        "Sviluppiamo Snake": [
          "Creiamo la struttura del gioco",
          "Movimento del player e direzione",
          "Arena Design",
          "Migliorie al sistema",
          "Disegnare gli elementi dinamici",
          "Input e controlli del giocatore",
          "Logica di gioco",
          "Punteggio e rigenerazione frutti",
          "Passare attraverso i muri con l'effetto Pacman",
          "Gestire la logica della coda",
          "Visualizzare la coda",
          "Sconfitta del giocatore",
          "Ritocchi finali e completamento del gioco"
        ]
      },
      "requirements": [
        "(Gratis) Un ambiente di sviluppo (IDE) per C++ (es: Visual Studio o Codeblocks)"
      ],
      "description": "Perché dovresti imparare il C++?\nC++ è un potente linguaggio di programmazione, uno dei più diffusi e richiesti al mondo. Conoscendo il C++ sarà più facile entrare nel mercato del lavoro e lavorare per aziende di un certo calibro, soprattutto in ambito gaming e sistemi embedded.\nInoltre, con C++ potrai sviluppare moltissimi tipi di applicazione:\nVideogames (con Unreal Engine)\nWindows Apps (con Visual Studio)\nMicroservices, e altre applicazioni server-side su Mac/Linux/Win\nLibrerie grafiche e motori grafici\nPlugin per una grande quantità di programmi professionali (es: Maya)\nQuesto corso è una guida pratica a C++. Contiene i fondamenti base del linguaggio, che vengono insegnati attraverso la realizzazione di un clone estendibile del famosissimo gioco Snake, che potrai personalizzare a tuo piacimento una volta terminato il corso.\nInsieme ci soffermeremo sul perchè si fanno determinate cose, oltre che su come farle, in modo tale da fornire una conoscenza solida delle basi del linguaggio.\n\n\nNon importa se non hai mai programmato prima: questo corso ti accompagnerà nei tuoi primi passi, permettendoti di imparare i concetti fondamentali in modo che tu possa approfondire l'argomento in seguito.\nPer realizzare il clone di Snake utilizzeremo solo il C++ e un editor di codice. Non utilizzeremo uno specifico Game Engine.",
      "target_audience": [
        "Sviluppatori principianti di C++ interessati allo sviluppo di videogiochi e al game design",
        "Aspiranti sviluppatori di videogiochi",
        "Sviluppatori di videogiochi che vogliono cimentarsi in una nuova sfida",
        "Sviluppatori interessati a conoscere il C++"
      ]
    },
    {
      "title": "Crie jogos profissionais 100% de graça com a Godot 3.0",
      "url": "https://www.udemy.com/course/crie-jogos-para-as-principais-plataformas-com-godot-engine/",
      "bio": "Aprenda a criar jogos com esta ferramenta totalmente gratuita e de código aberto com atualização para a nova versão 3.0",
      "objectives": [
        "Utilizando a Godot Engine, uma máquina de jogos de código aberto e muito poderosa, o aluno aprenderá a configurar e desenvolver jogos desde os primeiros passos,permitindo a alunos sem experiência dar início ao mundo do desenvolvimento de jogos, tirando proveito do poder desta engine utilizando o mínimo de programação possível. Serão abordados recursos como jogos 2D, localização (tradução), compras no aplicativo, Google Play Services, monetização entre outros."
      ],
      "course_content": {},
      "requirements": [
        "Conhecimentos básicos de informática, um PC com placa de vídeo que suporte a Godot e vontade de aprender programação"
      ],
      "description": "Aprenda a criar jogos e compartilhar para as principais plataformas com a ferramenta 100% gratuita: Godot Engine.\nNeste curso, aprenderemos desde os primeiros passos na aventura da programação e construção de um jogo totalmente funcional para as principais plataformas da atualidade.\nCriaremos diversos jogos, desde os mais simples até jogos mais complexos, progredindo e absorvendo os conhecimentos a medida que vemos os resultados reais do nosso trabalho.",
      "target_audience": [
        "Quem queira aprender a desenvolver jogos e possui pouca ou nenhuma experiência na área bem como quem queira dominar a Godot Engine"
      ]
    },
    {
      "title": "Opi Kehittämään Pelejä",
      "url": "https://www.udemy.com/course/pelisuunnittelija/",
      "bio": "Pelikehityksen perusteet suomeksi, et tarvitse aiempaa kokemusta!",
      "objectives": [
        "Kurssin suoritettuasi omaat tarvittavat taidot omien yksinkertaisten Construct 3 -pelien luomiseen",
        "Pystyt soveltamaan opittuja taitoja useiden erilaisten pelien luomiseen",
        "Osaat hakea tietoa oikeista lähteistä oman osaamisen kehittämiseen",
        "Olet osa suomalaista aloittelevien pelinkehittäjien yhteisöä (Facebook, Discord)",
        "Saat itsevarmuutta ohjelmoinnin jatko-opiskelua varten"
      ],
      "course_content": {
        "Aloitus": [
          "Kurssin esittely",
          "Tervetuloa",
          "PÄIVITYS: Käyttöliittymän muutos Construct 3",
          "Valmistelu",
          "Matka pelinkehittäjäksi",
          "Oletko valmis aloittamaan kurssin?"
        ],
        "Simppeli tasohyppely": [
          "Simppeli Tasohyppely: Esittely",
          "Ensimmäisen pelin esittely (Simppeli tasohyppely)",
          "Video 1: Hahmon luominen & Käyttöliittymään tutustuminen",
          "Video 2: Animaatiot & Käyttöliittymään tutustuminen",
          "Video 3: Piikkieste & Kamera",
          "Video 4: Tallentaminen",
          "Video 5: Luodaan ensimmäinen kenttä",
          "Video 6: Kenttien välinen ovi",
          "Video 7: Vihollisen luominen ja simppeli \"tekoäly\"",
          "Video 8: Yhteenveto",
          "Lopetus",
          "Luo juuri luotuun simppeliin tasohyppelyyn useampi kenttä lisää!"
        ],
        "Fysiikkapohjainen Pallopeli": [
          "Fysiikkapohjainen Pallopeli: Esittely",
          "PÄIVITYS: Fysiikkapohjaiset objektit ja Construct 3 päivitykset",
          "Video 1: Fysiikka objektit & käyttöliittymään tutustuminen (Kertausta)",
          "Video 2: Pelaajan kontrollit",
          "Video 3: Pallon pyöriminen hypätessä",
          "Video 4: X ja Y, mitä ne ovat?",
          "Video 5: Pelaajan vuorot liikkumiseen",
          "Video 6: Pelaajan liikkumisen suunta",
          "Video 7: \"Kosketuspaikan\" tallentaminen",
          "Video 8: Pelaajan vuoron ajastimen toiminnot",
          "Video 9: Pehmeä kamera",
          "Video 10: Nuolen piilottaminen / esiin tuominen",
          "Video 11: Pelaajan liikkumispisteet",
          "Video 12: Elämäpisteet",
          "Video 13: Elämien menettäminen",
          "Video 14: Powerslide & Piikit",
          "Video 15: Pyörivä Este",
          "Video 16: Level Manager",
          "Video 17: Kentissä eteneminen",
          "Video 18: Kentissä siirtyminen & Päävalikko",
          "Video 19: Elämien menettäminen & liikkumispisteet",
          "Video 20: Pelaajan lopetusruutu",
          "Video 21: \"Game Flow\"",
          "Video 22: \"Koodin\" läpikäyminen",
          "Video 23: Efektit",
          "Video 24: Camera Shake",
          "Video 25: Pelin julkaisu",
          "Lopetus / Yhteenveto: Fysiikkapohjainen Pallopeli",
          "Jaa luomuksesi Jestercraft Discord -kanavalla"
        ],
        "Viimeiset sanat": [
          "Vinkkejä itsensä kehittämiseen ja pelialalle hakeutumiseen",
          "Liity pelikehitys yhteisöön",
          "Kurssi: Yhteenveto / Lopetus",
          "Hyppää mukaan Jestercraftin sosiaaliseen mediaan"
        ],
        "Podcastit": [
          "Podcast #1: Kuinka Päästä Pelialalle?"
        ]
      },
      "requirements": [
        "Sinulla tulee olla tietokone, internet-yhteys, hiiri sekä näppäimistö.",
        "Sinulla on hallussasi perustaidot tietokoneen käytöstä",
        "Construct 3 -käyttöliittymä on englanniksi, joten on toivottavaa, että osaat ainakin perusteet"
      ],
      "description": "Nyt ei pelinkehityksen aloittaminen helpommaksi tule. Yli seitsemän tuntia nauhoitettua, aloittelijalle sopivaa koulutusmateriaalia ja vieläpä täysin suomeksi. Vaikka et olisi koskaan ennen tehnyt pelejä, kurssi sopii sinulle täydellisesti.\nTervetuloa Opi kehittämään pelejä -verkkokurssille! Kurssilla tutustutaan koodaamisen logiikkaan, Construct 3 -pelimoottoriin sekä pelisuunnitteluun. Kurssi sopii vasta-aloittelijoille, eli et tarvitse aiempaa kokemusta hypätäksesi mukaan.\nPääset myös mukaan pelinkehittäjien yhteisöön, jossa ratkotaan yhdessä pelinkehityksen saloja sekä autetaan toinen toistamme erilaisissa pulmatilanteissa.\nRyhdytään opiskelemaan pelikehitystä yhdessä, aloitetaan perusteista ja siirrytään syvemmälle video kerrallaan. Lopuksi pääset halutessasi julkaisemaan oman pelisi maailmanlaajuisesti!\nKurssin lopuksi pystyt jatkamaan pelikehitystä itsenäisesti, olet kykeneväinen luomaan omia pelejä alusta loppuun sekä julkaisemaan ne. Halutessasi voit joko jatkaa pelikehitystä hyödyntäen Construct 3 -pelimoottoria, tai siirtyä eteenpäin opiskelemaan ohjelmointia. Kurssi tarjoaa täydelliset eväät ohjelmoinnin jatko-opiskelua varten!\nHyppää mukaan!",
      "target_audience": [
        "Kurssi on kaikille pelinkehityksestä kiinnostuneille, sinulla ei tarvitse olla aiempaa kokemusta aiheesta aloittaaksesi kurssin",
        "Olet aina haaveillut oman pelin kehittämisestä",
        "Ohjelmoinnin opiskelu on sinulle liian iso haaste ja haluat madaltaa kynnystä opettelemalla ohjelmoinnin \"logiikkaa\"",
        "Et ole tähän asti tiennyt, mistä aloittaa pelinkehityksen opiskelu",
        "Haluat oppimateriaalisi suomeksi"
      ]
    },
    {
      "title": "Der AI-Kurs für Unity : Klevere Gegner für Spiele erstellen",
      "url": "https://www.udemy.com/course/unity-ai/",
      "bio": "Lerne den professionellen Einstieg in die Entwicklung von Künstlichen Intelligenzen in Unity 2017.",
      "objectives": [
        "Intelligente KI-Gegner erstellen wie sie in RPGs und anderen Spielegenres zu finden sind",
        "Den professionellen Umgang mit dem Navigationssystem von Unity",
        "Erweiterte Programmierung in C# und Unity"
      ],
      "course_content": {
        "Einleitung": [
          "Coding mit Jannick",
          "Was ist ein AI?",
          "Unterstützung beim Programmieren"
        ],
        "Bewegung (das Navigationssystem von Unity)": [
          "Die Theorie dahinter",
          "Einen NavMesh baken",
          "Der Agent",
          "Den AI bewegen lassen",
          "Wichtiger Hinweis!",
          "NavMesh Obstacles (Hindernisse)",
          "Zwischenstand",
          "AI runter springen lassen",
          "AI rüber springen lassen",
          "AI Bewegungs Quiz",
          "Motivation als Schlüssel zum Erfolg"
        ],
        "Verhalten": [
          "AI dem Spieler folgen lassen",
          "AI angreifen lassen",
          "AI abwimmeln",
          "AI eigenständing rumlaufen lassen"
        ],
        "BONUS - für die etwas erfahreneren unter euch :)": [
          "AI hochspringen lassen",
          "Ein Pfad System entwickeln",
          "Abschluss",
          "Meine anderen Kurse über Spiele-Entwicklung"
        ]
      },
      "requirements": [
        "Du solltest ein wenig Erfahrung im Umgang mit Unity3D und C# haben"
      ],
      "description": "In diesem Kurs wirst du lernen wie du effektiv und mit kurzem Zeitaufwand intelligente KI-Gegner (AIs) für deine Spiele erstellst die:\nsich intelligent und eigenständig bewegen können\nklettern können\nspringen können\ndem Spieler folgen können\neinem Pfad folgen können\nmit bestimmten Situationen umgehen können\nWenn du ein schon ein paar grundlegende Kenntnisse in Unity3D hast und deine Spiele oder deinen Wissensstand auf das nächste Level bringen möchtest, dann ist dieser Kurs hier genau das richtige für dich!\n\n\nWie immer stehe ich auch hier für alle Fragen und Ideen sofort zur Verfügung! :)",
      "target_audience": [
        "An alle die klevere Gegner für Ihre Spieler erstellen möchten",
        "An Entwickler, Designer und Interessierte die Ihren Wissensstand erweitern möchte"
      ]
    },
    {
      "title": "Python - Desenvolvimento de jogos - 2023",
      "url": "https://www.udemy.com/course/pygame-desenvolvimento-de-jogos-2023/",
      "bio": "Aprenda a criar jogos com pygame, aulas atualizadas com muito mais conteúdo",
      "objectives": [
        "Conceitos avançados no desenvolvimento de jogos",
        "Construção de uma game engine básica (Sem interface gráfica)",
        "Construção de personagens",
        "Construção de world map com arrays"
      ],
      "course_content": {
        "Introdução": [
          "Como instalar o pygame no windows",
          "Como instalar o vscode no windows",
          "Como instalar o pygame no linux",
          "Como instalar o vscode no linux"
        ],
        "Variáveis - Funções e Operações": [
          "Python - Resumo rápido"
        ],
        "Estrutura base - Primeiro jogo": [
          "Estrutura de pastas",
          "Construindo nossa primeira janela",
          "Tratando eventos - Teclado, mouse ou controle",
          "Desenhando objetos na tela",
          "Interagindo com os objetos - Eixos X e Y",
          "Gerando os movimentos dos desenhos",
          "Identificando colisões",
          "Reproduzindo sons",
          "Trabalhando com textos",
          "Atualizando o placar",
          "Tela de gameover",
          "Trabalhando com cenas",
          "Aplicando um reset no jogo",
          "Controle de Fps",
          "Criando as artes do jogo",
          "Renderizando imagens",
          "Sistema de fade in",
          "Finalizando o jogo"
        ],
        "Orientação a Objetos": [
          "Classes e funções - Resumo"
        ],
        "Evoluindo na programação - Projeto padrão": [
          "Base para o nosso jogo",
          "Criando cena padrão",
          "Sistema de grupos",
          "Criando novas cenas",
          "Gerenciando novas cenas",
          "Compactando o projeto",
          "Finalizando"
        ],
        "Segundo jogo - Utilizando nosso projeto padrão": [
          "Como iniciar nossos projetos",
          "Projetando o nosso menu",
          "Criando um objeto de textos",
          "Criando um fundo \"infinito\" para nossas cenas",
          "Aplicando o fundo infinito a um obj",
          "Fundo infinito na cena de jogo",
          "Animando textos",
          "Criando um fade entre as cenas",
          "Definindo FPS",
          "Projetando a cena do jogo",
          "Construindo nossa nave",
          "Definindo direções para nave",
          "Limits de tela",
          "Animando os objetos",
          "Criando o tiro da nave",
          "Criando os inimigos",
          "Destruindo inimigos",
          "Inimigos aleatórios",
          "Marcando pontos",
          "Resistência dos inimigos",
          "Definindo condição para gameover",
          "Criando cena de gameover",
          "Criando o hud para as vidas",
          "Roteiro de spaws",
          "Melhorando os inimigos",
          "Deixando os inimigos com status únicos",
          "Criando powerups",
          "Definindo novos tiros",
          "Finalizando o jogo - Aplicando sons"
        ],
        "Terceiro jogo - Scape Blue - Geração de mapas com tiles": [
          "Introdução ao projeto",
          "Projetando o jogo",
          "Programando o Menu",
          "Criando botões",
          "Aplicando textos aos botões",
          "Aplicando efeitos aos botões",
          "Chamando as funções nos Botões",
          "Projetando a cena do jogo",
          "Alterando a cor de fundo",
          "Gerando mapas com Arrays",
          "Gerando mapas com Arrays 2",
          "Criando o nosso player",
          "Aplicando gravidade",
          "Colisões no eixo Y",
          "Melhorando o pulo",
          "Colisões no eixo X",
          "Aplicando animações no nosso personagem",
          "Atualizando a cena de jogo",
          "Criando uma câmera",
          "Camera track",
          "Criando UI para cena de jogo",
          "Colocando a plaquinha de finish no jogo",
          "Resetando a posição do personagem",
          "Contando vidas",
          "Corrigindo colisão com tiles e gerando mapas",
          "Game Over",
          "Sistema de fases",
          "Automatizando as fazes"
        ],
        "Sistema de particulas": [
          "Como criar as particulas"
        ],
        "Sistema de resolução dos jogos": [
          "Explicação de como funciona",
          "Aplicando FULLSCREEN"
        ],
        "Gerar arquivos executáveis dos nossos jogos": [
          "Build de nossos jogos - Pyinstaller"
        ]
      },
      "requirements": [
        "Saber o básico de python",
        "Saber o básico de pygame",
        "Ter um pouco de conhecimento em editores de código."
      ],
      "description": "Olá e seja muito bem vindo ao meu curso.\nMeu nome é Renato e serei seu instrutor.\n\n\nSe você \"caiu de paraquedas\" aqui no meu perfil, garanto que irá adorar o meu método de ensino, pois é 100% focado em prática. Mas vamos continuar com a descrição.\n\n\nLembrado que este curso requer um conhecimento ao menos básico sobre programação, então antes de prosseguir, fique atento se você já sabe o que são:\n\n\nVariáveis\nFunções\nLoops\nClasses\nArrays\nE Condições\n\n\nCaso esteja apto, vamos prosseguir.\nNeste curso você aprenderá conceitos avançados de desenvolvimento de jogos, como por exemplo:\n\n\nManipulação de objetos\nCiclos de cenas\nAnimações\nTiles\nSistemas de colisões\ne muito mais.\nO curso conta com mais de 80 aulas, focadas em te ensinar como toda a estrutura de um jogo é criada.\nAlém disso, ao final, você já terá uma base pronta para desenvolver qualquer estilo de jogo.\n\n\nMas caso você não conheça nada sobre Pygame ou Python, sugiro dar uma passadinha no meu perfil aqui da Udemy, pois lá tem muito conteúdo para iniciantes na programação, seja para desenvolvimento de jogos ou para aplicações web.\n\n\nAgora se você já conhece, garanto que este curso irá te ajudar a seguir para o próximo nível.\nEntão chega de enrolação e vamos começar a programar.\nTe vejo na nossa primeira aula.\nBons estudos.",
      "target_audience": [
        "Alunos que queiram aprimorar seus conhecimentos em desenvolvimento de jogos",
        "Pessoas interessadas em aprender os conceitos na programação sobre desenvolvimento de jogos."
      ]
    },
    {
      "title": "Crea un Juego de Terror con Unreal Engine 5, desde 0 a Pro",
      "url": "https://www.udemy.com/course/crea-un-juego-de-terror-con-unreal-engine-5-desde-0-a-pro/",
      "bio": "Crea un Juego de Terror con Unreal Engine 5, de 0 a Profesional",
      "objectives": [
        "Unreal Engine 5",
        "Desarrollo de videojuegos",
        "Videojuego de terror",
        "Unreal Engine de 0 a profesional"
      ],
      "course_content": {
        "Crea un videojuego": [
          "Descarga de Unreal Engine e Interfaz",
          "Mapa e iluminación",
          "Blueprint del Personaje",
          "Linterna",
          "Visión Nocturna",
          "Sonidos de pasos",
          "Camera Shake (movimiento realista de cabeza)",
          "Base de las Interacciones",
          "Abrir y cerrar puertas con interacción",
          "Llaves para abrir las puertas",
          "Interactuar con muebles",
          "Recoger linterna para poderla usar",
          "Optimización con Level Streaming",
          "Música ambiental",
          "Interacción con puertas cerradas y audio con subtítulos",
          "Entrada de la casa y retoques",
          "Misión: Encender el gas",
          "Misión: Dejar maleta y cambiar de nivel",
          "Widget de Objetivos y retoques",
          "Adaptación linterna según nivel y si la tenemos o no",
          "Cinemática (Inicio Level 2)",
          "Enemigo básico y evento morir",
          "Enemigo con Behavior Tree: Moverse a puntos aleatorios",
          "Enemigo con Behavior Tree: Detección visual",
          "Enemigo con Behavior Tree: Detección de sonido",
          "Enemigo con Behavior Tree: Patrullar Parte 1",
          "Enemigo con Behavior Tree: Patrullar Parte 2",
          "Modificación de Nav Mesh",
          "Sonidos del enemigo",
          "Vibración del mando",
          "Menú principal",
          "Menú de Opciones",
          "Menú de Pausa",
          "Guardar y Cargar (Localización)",
          "Jumpscares"
        ]
      },
      "requirements": [
        "No es necesaria experiencia. Curso perfecto tanto para empezar con Unreal Engine como si ya sabes manejarlo."
      ],
      "description": "En este curso aprenderás las bases de Unreal Engine 5 y cómo desarrollar un videojuego de terror. Tanto si empiezas con Unreal Engine como si ya sabes manejarlo :)\n\nAprenderás cosas como: interfaz y manejo de Unreal Engine, blueprints, iluminación, personaje en primera persona y en tercera persona (para que escojas el que prefieras), añadir sonidos y partículas para efectos, crear el enemigo y los jumpscares, menú del juego, guardar y cargar, visión nocturna y linterna, cinemáticas, interacción con objetos (coger llaves para abrir puertas, resolver puzzles y enigmas, interactuar con cualquier otro objeto...), creación de nivel, etc. Y finalmente compilar el juego para poderlo sacar al mercado :)\n\n\n\nEn este curso aprenderás las bases de Unreal Engine 5 y cómo desarrollar un videojuego de terror. Tanto si empiezas con Unreal Engine como si ya sabes manejarlo :)\n\nAprenderás cosas como: interfaz y manejo de Unreal Engine, blueprints, iluminación, personaje en primera persona y en tercera persona (para que escojas el que prefieras), añadir sonidos y partículas para efectos, crear el enemigo y los jumpscares, menú del juego, guardar y cargar, visión nocturna y linterna, cinemáticas, interacción con objetos (coger llaves para abrir puertas, resolver puzzles y enigmas, interactuar con cualquier otro objeto...), creación de nivel, etc. Y finalmente compilar el juego para poderlo sacar al mercado :)",
      "target_audience": [
        "Desarrolladores de videojuegos"
      ]
    },
    {
      "title": "Iluminação para Unity 5 (2016) - Do Básico ao Avançado",
      "url": "https://www.udemy.com/course/iluminacao-para-unity-5-do-basico-ao-avancado/",
      "bio": "Aproveite ao máximo todas as opções de iluminação que a poderosa Unity 5 fornece, sem perder qualidade e performance",
      "objectives": [
        "Crie iluminações realistas para seus jogos",
        "Ajuste suas luzes para obter o máximo de performance sem perder qualidade"
      ],
      "course_content": {
        "Introdução e Básicos de iluminação": [
          "Introdução",
          "Directional Light",
          "Spot Light",
          "Point Light",
          "Ambient Light",
          "Sombras parte 1",
          "Sombras parte 2",
          "Halos e Lens Flare"
        ],
        "GI - Global Illumination": [
          "Introdução a GI Realtime - parte 1",
          "Introdução a GI Realtime - parte 2",
          "Baked GI",
          "Material Emissive",
          "Area Light",
          "Setup global de iluminação",
          "Dicas de Performance e Qualidade"
        ],
        "Reflection Probes e Light Probes": [
          "Skybox e Cubemaps",
          "Reflection Probes - Parte 1",
          "Reflection Probes - Parte 2",
          "Light Probes"
        ],
        "Aula Prática": [
          "O que vamos fazer",
          "Importando a casa",
          "Configurando a GI",
          "Deixando a cena de noite",
          "LEMBRETE: Pixel Light Count",
          "Iluminação Interna",
          "Iluminação Interna - Resolução do exercício",
          "Iluminação Externa",
          "Iluminação Externa - Resolução do exercício",
          "Reflection Probes",
          "Reflection Probes - Resolução"
        ]
      },
      "requirements": [
        "O único requerimento é ter a Unity 5 instalada (pode ser a versão gratuita) e estar familiarizado com a interface"
      ],
      "description": "Este curso é para todos aqueles que gostariam de aproveitar ao máximo tudo que o sistema de iluminação da Unity tem a oferecer.\nAo longo das aulas você não vai apenas aprender o que é cada coisa, mas também terá dicas de como utilizar cada técnica e quais são as melhores maneiras de se obter um máximo de qualidade e desempenho no seu jogo.",
      "target_audience": [
        "Esse curso é para qualquer pessoa que queira entender como funcionam as luzes na Unity, desde as opções mais básicas até as mais avançadas",
        "Não é necessário saber programar, tudo será feito através da própria Unity",
        "Esse curso pretende abordar as ferramentas de iluminação do básico ao avançado, dentro dos limites do que a própria Unity oferece. Se está procurando como aplicar plugins de terceiros, esse curso não é para você."
      ]
    },
    {
      "title": "Jogos 2D para iOS 12 com Swift 5 e Xcode 10 - Básico",
      "url": "https://www.udemy.com/course/felpudospritekit/",
      "bio": "Aprenda Criar Jogos 2D para o iPhone (iOS 12), utilizando o SpriteKit e a Linguagem Swift 5.",
      "objectives": [
        "Como utilizar a Engine de Games SpriteKit para criar jogos para iOS (iPhone e iPad)",
        "Como utilizar os principais recursos do SpriteKit como Animação, Física, Partículas Actions e Som",
        "Criar Jogos utilizando a Linguagem de Programação Swift"
      ],
      "course_content": {
        "Jogos 2D para iOS com Swift e SpriteKit": [
          "SpriteKit - Engine para Games 2D",
          "Criando um Novo Projeto em SpriteKit",
          "Criando do Zero uma Cena do SpriteKit - SKScene",
          "Aproveite Melhor este Treinamento",
          "Identificando os Objetos da Cena no Código",
          "Criando uma Nova Cena Programaticamente",
          "Criando Formas com SKShapeNode",
          "Criando Sprites com SKSpriteNode",
          "Encadeamento de Ações com SKAction e Sequência",
          "Criando um Sprite Animado com Sequência de Imagens",
          "Trabalhando com Atlas no Xcode",
          "Adicionando Física aos Objetos",
          "Evento de Tocar na Tela",
          "Limites para Debug e Limites da Cena",
          "Criando um Arquivo de Emissor de Partículas",
          "Evento Update e DidSimulatePhysics",
          "Criando e Configurando o Emissor de Partículas Programaticamente",
          "Xcode Swift e SpriteKit - Considerações Finais e Próximos Passos"
        ]
      },
      "requirements": [
        "Sistema Operacional MacOS",
        "Software Xcode (fazer o download Gratuito pela AppStore)",
        "Conhecimentos Preliminares em Swift e Xcode",
        "Ter assistido meu Curso Básico Gratuito de Swift aqui na plataforma"
      ],
      "description": "O SpriteKit é a engine oficial da Apple para desenvolver jogos 2D para os dispositivos iOS.\n\n\nTrata-se de uma ferramenta super leve, intuitiva de aprender e usar e que te permite utilizar todas as funcionalidades do sistema nativo integradas ao seu game.\n\n\nAo assistir estas aulas, você terá dominado os primeiros passos na ferramenta e como implementar os principais recursos para se criar um jogo completo em 2D para iPhones e iPads.\n\n\nNeste treinamento você sairá do zero na ferramenta e vai aprender a desenvolver suas primeiras aplicações iOS vo0ltadas para gráficos 2D.\n\n\nAprenderemos utilizar não só o editor gráfico do SpriteKit, como também programar linha por linha de código as aplicações no Xcode usando a linguagem Swift.\n...\nO que Vamos Aprender sobre SpriteKit?\nConfiguração do Projeto Inicial no Xcode 10\nAnimações ou Sprites\nSimulação Física\nSistema de Partículas\nEventos de Toque\nUtilização de Atlas\n...\n*É recomendável que o aluno já tenha algum conhecimento preliminar em Linguagem Swift e Xcode IDE.\n\n\nSe você ainda não conhece nada sobre o Xcode, recomendo que assista alguns tutoriais no meu canal do youtube ou meu curso básico aqui na plataforma Udemy.\n\n\nO que Vamos Aprender sobre SpriteKit?\nConfiguração do Projeto Inicial no Xcode 10\nAnimações ou Sprites\nSimulação Física\nSistema de Partículas\nEventos de Toque\nUtilização de Atlas\n...\n*É recomendável que o aluno já tenha algum conhecimento preliminar em Linguagem Swift e Xcode IDE.\n\n\nSe você ainda não conhece nada sobre o Xcode, recomendo que assista alguns tutoriais no meu canal do youtube ou meu curso básico aqui na plataforma Udemy.",
      "target_audience": [
        "Este curso é destinado á quem deseja aprender a fazer seus proprios games par iPhone e iPad e não possui grandes conhecimentos de lógica e programação de jogos",
        "É interessante para designers e artistas que estão interessados em começar a criar seus próprios games e apps",
        "Destina-se também aos desenvolvedores que ja conhecem o Xcode e desejam aprender sobre desenvolvimento de games e a nova linguagem Swift",
        "O curso não é interessante para quem pretende se aperfeiçoar como artista (em ilustração, modelagem e animação) pois utilizaremos no curso gráficos já existentes"
      ]
    },
    {
      "title": "Aprenda a Criar um Jogo FPS Retrô na Unity e C#!",
      "url": "https://www.udemy.com/course/aprenda-a-criar-um-jogo-fps-retro-na-unity-e-c/",
      "bio": "Desenvolva um Jogo em Primeira Pessoa no estilo clássico de DOOM!",
      "objectives": [
        "Desenvolver Jogos na Unity 2021 (mas também se aplica a outras versões)",
        "Programar em C#",
        "Scripts, Variáveis e Métodos",
        "Criar uma Inteligência Artificial para o Inimigo",
        "Criar e Configurar Itens coletáveis",
        "Programar um Sistema de Vida",
        "Montar Fases 3D com técnicas 2D",
        "Como funciona o Sistema de Colisão da Unity",
        "Como usar um Raycast",
        "Animar um gameObject e alternar entre suas animações",
        "Adicionar Músicas e Efeitos Sonoros",
        "Mexer com a Interface de Usuário da Unity (UI)",
        "Criar Menu Principal",
        "Pausar e Sair do Jogo"
      ],
      "course_content": {
        "Primeiros Passos": [
          "Aviso Rápido",
          "Baixando e Instalando a Unity 2021",
          "Baixando e Instalando o Visual Studio Code",
          "Criando o Projeto e Conhecendo a Interface da Unity",
          "Garantindo que o Visual Studio Code funcione com a Unity",
          "Mudando a Cor da Interface da Unity",
          "Baixando e Importando os Assets do Projeto"
        ],
        "Criando e Programando o Jogador em Primeira Pessoa": [
          "Criando e Configurando o Jogador em Primeira Pessoa",
          "Criando nosso Primeiro Script",
          "Entendendo o que são Variáveis",
          "Programando a Movimentação do Jogador",
          "Virando a Câmera com o Mouse"
        ],
        "Criando e Programando o Ataque do Jogador": [
          "Criando um Sistema de Mira para o Jogador",
          "Programando a Munição Máxima do Jogador",
          "Travando o Cursor do Mouse no Centro da Tela",
          "Adicionando a Imagem da Arma do Jogador",
          "Criando e Animando o Efeito de Impacto",
          "Fazendo os GameObjects olharem para o Jogador (de 2D para 3D - Billboard)",
          "Criando nosso Primeiro Prefab (e entendo o que são eles)",
          "Ativando Efeito de Impacto ao Atirar (com o Prefab)",
          "Destruindo GameObjects com o Tempo",
          "Animando o Ataque do Jogador",
          "Configurando a Animação do Ataque do Jogador",
          "Programando a Animação do Ataque do Jogador",
          "Adicionando uma Imagem de Mira"
        ],
        "Exibindo a Munição na Tela (UI)": [
          "Criando um Texto para a Munição (UI)",
          "Mostrando a Munição na Tela (UI)"
        ],
        "Melhorando o Movimento do Jogador (com Animação)": [
          "Animando o Andar do Jogador (Bobbling Head)",
          "Ativando a Animação do Andar"
        ],
        "Criando e Programando o Inimigo": [
          "Criando nosso Inimigo",
          "Criando um Caminho para o Inimigo Seguir",
          "Entendendo o que são Arrays na Programação",
          "Criando Verificações para a Movimentação do Inimigo",
          "Programando a Movimentação do Inimigo (AI)",
          "Fazendo o Inimigo \"Esperar um Tempo\" antes de voltar a caminha (AI)"
        ],
        "Criando e Programando o Ataque do Inimigo": [
          "Criando o Projétil do Inimigo (Ataque dele)",
          "Programando o Projétil do Inimigo",
          "Programando o Ataque do Inimigo (fazendo ele atirar)"
        ],
        "Criando um Sistema de Vida para o Inimigo e Animando seus Movimentos": [
          "Criando um Sistema de Vida para o Inimigo",
          "Criando as Animações do Inimigo",
          "Configurando as Transições das Animações do Inimigo",
          "Ativando as Animações do Inimigo via Código",
          "Ajustando a Animação do Inimigo Derrotado",
          "Criando um Sistema de Vida para o Jogador",
          "Dando dano no Jogador",
          "Criando um Texto para a Vida do Jogador (UI)",
          "Mostrando a Vida na Tela (UI)"
        ],
        "Criando e Programando os Itens Coletáveis": [
          "Criando os Itens Coletáveis (Munição, Vida e Chaves das Portas)",
          "Fazendo a \"Pré-Programação\" dos Itens Coletáveis (preparando eles)",
          "Programando o Item de Munição",
          "Programando o Item de Vida",
          "Programando as Chaves Coletáveis"
        ],
        "Preparando a Criação do Cenário (para criarmos as fases)": [
          "Garantindo as ferramentas para criarmos as fases do jogo",
          "Criando e Configurando nossa Primeira Parede (2D com 3D)",
          "Criando e Configurando as Outras Paredes do Cenário (2D com 3D)",
          "Criando e Configurando nossa Porta Normal",
          "Animando o Movimento da Porta",
          "Configurando as Transições das Animações da Porta",
          "Programando as Animações da Porta",
          "Criando e Configurando as outras Portas (com chaves)"
        ]
      },
      "requirements": [
        "Versão gratuita da Unity (2021 ou superior)",
        "Visual Studio Code da Microsoft (é grátis :)",
        "Saber um pouquinho de Unity ajuda, mas não é obrigatório (vamos no passo-a-passo de tudo)",
        "Uma paixão por Aprender e Desenvolver Jogos :)"
      ],
      "description": "Neste curso nós vamos aprender a criar um Jogo FPS Retrô do zero, utilizando a poderosíssima Unity Engine e a incrível Linguagem de Programação C#!\n\n\nCurso voltado para Iniciantes/Intermediários na área, ou seja, todas as aulas foram gravadas dando o máximo de atenção aos detalhes;\n\n\nVamos ir desde os primeiros passos (instalação dos programas), até os passos finais (exportando o jogo em um arquivo que pode ser enviado para outras pessoas);\n\n\nAprenderemos como criar um Jogador em primeira pessoa, um Inimigo com Inteligência Artificial, um Sistema de Vida, Itens Coletáveis para recuperar vida e munição, portas que só abrem com chaves específicas, um Menu Principal, Tela de Pause, músicas e efeitos sonoros, Animar gameObjects, alternar entre suas animações e muito mais;\n\n\nIremos também aprender o que são Variáveis, Métodos, Arrays e muito mais, com a Linguagem de Programação C# (linguagem que foi criada pela Microsoft);\n\n\nEntenderemos como que funciona a Unity e como que podemos programar nossos jogos nela, em mais de 21 horas de conteúdo, dividas em 84 aulas bem elaboradas!\n\n\nE é claro, se tiver qualquer dúvida durante as aulas, não hesite em perguntar no campo de perguntas! Ficarei muito feliz em lhe ajudar!\nE também, se estiver com dúvidas em relação a compra do curso, da uma olhada nas classificações dele!\nEspero que aprendam diversas coisas novas com as aulas deste curso, e que também se divirtam bastante com o Jogo que estaremos criando nele!\n\n\nAbraços :)",
      "target_audience": [
        "Desenvolvedores Indie de Jogos",
        "Quem está querendo entender um pouco mais sobre criação de jogos na Unity",
        "Quem sempre quis criar um FPS estilo clássico"
      ]
    },
    {
      "title": "Création d'un simulateur d'Hélicoptère avec Unreal Engine",
      "url": "https://www.udemy.com/course/creation-dun-systeme-de-vol-pour-helicoptere/",
      "bio": "Une formation sur l'un des rare sujets et très recherchés sur la toile en Français, création d'un simulateur",
      "objectives": [
        "Animer et piloter un super Hélicoptère Apache réaliste",
        "Créer des animations pour les rotors de l'hélicoptère",
        "Importer votre propre son d'hélicoptère pour l'intégrer dans le projet",
        "Implémenter la logique de programmation pour faire voler votre Hélicoptère",
        "Programmation des commandes",
        "Programmation des fonctions de prise de possession des commandes par le joueur",
        "Programmer une commande pour switcher entre les vues extérieures et intérieurs",
        "Création et importation de buildings réaliste pour la création d'un niveau",
        "Mise en place d'un système de visée",
        "Création d'un système de tir",
        "Création d'une Intelligence artificielle, ennemis",
        "Mise en Place d'un Objectif de Mission",
        "Destruction des ennemis"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Création du projet et importation de l'asset",
          "Création de l'animation des rotors",
          "Suite de l'animation des rotors"
        ],
        "Le Bluprint de l'Hélicoptère": [
          "Création du Bluprint de l'Hélicoptère",
          "Configuration des mouvements de la caméra",
          "Création du Blendspace Animation",
          "Le Bluprint Animation",
          "Programmation du démarrage des moteurs",
          "Importation et création du bruitage des moteurs",
          "Synchronisation des bruitages avec la vitesse des rotors",
          "Implémentation des commandes de vol - Décollage",
          "Création des collisions de l'hélicoptère",
          "Amélioration du mouvement de l'Hélicoptère",
          "Ajout des mouvements aléatoires du vol stationnaire",
          "Inclinaison du nez de l'appareil durant les déplacements",
          "Le déplacement latéral",
          "Rotation de l'hélicoptère"
        ],
        "Le third personne charactere (Interaction)": [
          "La possession de l'appareil par le charactère",
          "La possession de l'hélicoptère- suite",
          "Sortie du cockpit"
        ],
        "Le level - création de buildings": [
          "Création et importation de building réalistes"
        ],
        "Deuxième vue": [
          "Ajouter une deuxième vue à partir du cockpit"
        ],
        "Système de visée": [
          "Ajout d'une caméra",
          "Le Widget Blueprint",
          "Programmation de la commande d'affichage",
          "Configuration de l'animation du canon avec le viseur",
          "Programmation finale du système de visée"
        ],
        "Création d'un système de tir": [
          "Importation et implémentation dans le blueprint du Muzzle Flash",
          "Création de la fonction de tir",
          "Ajout du Bruitage de Tir",
          "Ajout d'un Zoom",
          "Un peu d'ordre dans le projet",
          "La Fonction Trace"
        ],
        "Création d'une Intelligence artificielle Ennemie": [
          "Importation de l'asset artillerie",
          "Préparation du Skeletal Mesh pour les soldats ennemis",
          "Navigation de l'intelligence artificielle",
          "Destruction des ennemis (Intelligence artificielle)",
          "Création des impacts de tir",
          "Simulate Physics - pour plus de réalisme avec la disparition des ennemis"
        ],
        "Le Gameplay": [
          "Ajout d'un score",
          "Amélioration du projet",
          "Conversion du projet vers UE5",
          "Activation de l'ennemis DCA",
          "Ajout d'un opérateur à la DCA",
          "Ajout d'un opérateur à la DCA - partie 2",
          "Amélioration de l'ennemi DCA",
          "Ajout des Balles et FX de tir de la DCA",
          "Destruction de l'ennemi DCA",
          "Ajout du Bruitage de la DCA"
        ],
        "Destruction de l'Hélicoptère": [
          "Ajout d'une barre de vie pour l'Hélicoptère",
          "Destruction de l'Hélicoptère"
        ]
      },
      "requirements": [
        "Ce cours s'adresse à tout les niveaux d'Unreal Engine 4&5 , il n'est pas nécessaire de disposer d'un niveau avancé"
      ],
      "description": "Dans cette série de formation, adressée à toutes les catégories d'étudiants il est pas nécessaire d'être un professionnel d'Unreal Engine 4 ou de posséder un niveau avancé pour le suivre, car la formation est dispensée de façon simple à ne communiquer que les éléments les plus importants de l'apprentissage, afin de ne pas encombrer ou saturer l'étudiant d'un flux d'information excessif qui n'ont d'impact que de disperser l'étudiant ou parfois d'étaler les connaissances du formateur, pour ma part qui enseigne des aspects d'unreal engine à des étudiants  pluridisciplinaire intéressés que par la simulation, je focalise sur la capacité et la différence d'assimilation des étudiants afin qu'ils apprennent tous au même rythme quelque soit leurs capacités d'apprentissage.\nCette formation dédiée à la mise en place d'un système de vol et pilotage d'un magnifique Hélicoptère de combat Apache  mis à disposition aux utilisateurs gratuitement par Epic Games dans le marketplace, peut s'appliquer sur tout les autres types d'hélicoptères, il sera question de voir le processus d'importation, la création d'éléments manquants à notre projet tel que la création d'animation des rotors, nous y verrons aussi l'affectation des touches de commandes, la recherche et l'importation du bruit des moteurs, la programmation des mouvement de l'hélicoptère, la prise de possession d'un joueur ou le third person chracter de l'appareil, l'abandon  de l'appareil par le joueur, le changement des vues ou caméras, et en bonus vous apprendrai à mettre en place un niveau urbain de façon simple, rapide et créative et l'endroit ou l'on peut récupérer des ressources gratuitement d'autres sites.\nMon choix s'est porté sur ce thème en raison de la rareté de ce type de formation, j'ai limité cette formation au système de vol, alors que j'ai bien d'autres thème à proposer, mais peut être que des mises à jours prochaines seront ajoutées au fur et à mesure si j'ai d'avantage de temps libre.",
      "target_audience": [
        "Si vous êtes désespérément à la recherche d'une formation pour la création d'un simulateur d'Hélicoptère sur Unreal Engine 4, voici pour vous l'un des rares cours complet sur ce sujet."
      ]
    },
    {
      "title": "Curso de Criação de Games com C++ e SFML (Windows e Linux)",
      "url": "https://www.udemy.com/course/curso-de-criacao-de-games-com-cpp-e-sfml-windows-e-linux/",
      "bio": "A forma mais eficiente e profissional de entrar no mundo de Desenvolvimento de Games",
      "objectives": [
        "Tudo como funciona o mundo do Desenvolvimento de Games",
        "A forma mais eficiente de iniciar no área de Criação de Games",
        "Criar 5 games do zero e com didática adequada",
        "Poderá criar seus próprios games em pouco tempo"
      ],
      "course_content": {
        "Módulo 1": [
          "Apresentação",
          "Introdução",
          "Atualização para Pŕe-Instalação no Windows",
          "Instalação no Linux e no Windows",
          "Fundamentos Iniciais",
          "Formas, Telas e outras informações",
          "Como adicionar Fontes e Textos",
          "Utilizando Imagens e Criando movimentos"
        ],
        "Criação de 5 Games - Primeiro Game: Minecrap": [
          "Iniciando o Games e conceitos sobre Ponteiros Inteligentes",
          "Limitando escopo dos objetos e surgimento randômico dos mesmos",
          "Como verificar colisões e adicionar pontuação",
          "Como utilizar múltiplos objetos retângulos em um vector",
          "Adicionando texturas e tratamento da janela",
          "Adicionando background e outros recursos",
          "Tratamento do Mouse e melhorando a jogabilidade",
          "Adicionando um Game Over",
          "Como criar o recurso de Pausar o Game",
          "Adicionando música e efeitos sonoros",
          "Transformando nosso Game para Orientado à Objetos"
        ],
        "Segundo Game: Snake Game": [
          "Criando as coordenadas de janela para o Snake Game",
          "Finalizando o Game e exercícios propostos"
        ],
        "Terceiro Game: Space War": [
          "Iniciando código e obtendo recursos",
          "Movimentando um Bullet",
          "Adicionando múltiplos mísseis",
          "Criando inimigos e colisões",
          "Adicionando visualização de danos com sprite sheet",
          "Criando Animação de explosão ao atingir inimigo"
        ],
        "Quarto Game: Metroidvania": [
          "Desenhando o personagem e fixando ao ground",
          "Utilizando assets, frames e movimento de andar com animação",
          "Adicionando Pulo com Gravidade",
          "Adicionando classe para movimentos da física aplicados",
          "Utilizando Tilemap para criar o ambiente",
          "Criando Colisões com o Tileset",
          "Adicionando câmera com offset",
          "Adicionando recursos e dicas com o Map Editor"
        ],
        "Quinto Game: Protótipo ECS e CMake": [
          "Entity Component System",
          "Mini game com ECS",
          "Como Compilar nossos Games com CMake"
        ],
        "Como fazer Deploy no Windows e no Linux e Mais Dicas e Considerações Finais": [
          "Deploy no Windows 10",
          "Deploy no Linux com AppImage",
          "Como Divulgar, onde Vender seus Games e Dicas de Bibliotecas Adicionais",
          "Como Compilar SFML no Windows com GCC e Dicas de Mais Jogos"
        ],
        "Teste seus conhecimentos": [
          "Simulado único"
        ],
        "Bônus": [
          "Como Recriar o Jogo do Dino do Chrome com C++",
          "Como Instalar o SFML 3.0 e Primeiros Passos (Windows e GNU/Linux)"
        ]
      },
      "requirements": [
        "É necessário saber C++ com Orientação à Objetos"
      ],
      "description": "Simple and Fast Multimedia Library (SFML) é uma biblioteca multiplataforma, orientada a objetos e livre. Foi escrita em C++ por Laurent Gomila, que tem como objetivo fornecer uma interface simples para vários componentes multimédia do computador.\nA biblioteca lida com criação de janelas, gestão do input assim como manutenção e criação dos contextos de OpenGL. Também fornece um módulo para renderização de gráficos em 2D, acelerado por hardware, que inclui renderização de texto através da biblioteca FreeType. O módulo de audio utiliza o OpenAL como base para reprodução e gravação de audio e o módulo de rede que fornece uma API para comunicação de dados em rede, através de TCP ou UDP.\nA biblioteca é livre e open-source, distribuída de acordo com os termos da licença zlib/png. Está disponível em Windows, Linux, OS X e FreeBSD.\nArquitetura do Software\nA biblioteca SFML é composta por vários módulos:\nSystem - Classes para manipular vectores, strings de texto em Unicode, threads multiplataforma e temporizadores.\nWindow - Classes para abrir janelas com contextos de OpenGL activos, com suporte para lidar com input, incluindo joysticks (comandos e outros dispositivos)\nGraphics - Classes para renderização de gráficos com aceleração por hardware, incluindo texto, polígonos e sprites.\nAudio - Classes para reproduzir ou gravar audio. Incluindo espacialização 3D dos sons, streaming de músicas, tudo com aceleração por hardware.\nNetwork - Classes para transmissão de dados por UDP e TCP multiplataforma, utilitários para encapsular dados em pacotes para o seu transporte e uma camada alto nível para transmitir dados via HTTP ou FTP.\nApesar de o módulo gráfico ser um dos mais procurados na biblioteca, programadores com interesse em usar o ambiente SFML para programar diretamente com OpenGL podem fazer isso facilmente ignorando o módulo gráfico e utilizando apenas o módulo Window. Todos os outros módulos são independentes, com excepção do System, do qual todos os outros módulos dependem.",
      "target_audience": [
        "Alunos da área de software e todos aqueles que desejam iniciar no mercado de games"
      ]
    },
    {
      "title": "Tworzenie gier w Roblox",
      "url": "https://www.udemy.com/course/roblox-studio-astraja/",
      "bio": "Podstawy programowania Lua w Roblox",
      "objectives": [
        "Podstawy programowania w języku Lua w Roblox",
        "Tworzenie pistoletu, czapek, ubrań",
        "Tworzenie prostych animacji z TweenService",
        "Tworzenie itemów: mikstury życia, buty przyspieszenia",
        "Podstawy tworzenia leaderstats",
        "Podstawy tworzenie interfejsu GUI"
      ],
      "course_content": {
        "Pierwsze kroki": [
          "Instalacja Roblox Studio",
          "Zpisywanie i publikowanie gry na Roblox",
          "Serwisy",
          "Właściwości i transformacje",
          "Skrypty, kolory",
          "Grupowanie i łączenie obiektów",
          "Tworzenie schodów",
          "Efekt ognia",
          "Zmienna",
          "Transformacje",
          "Paląca się beczka, efekty, attachment, audio",
          "Inkrementacja",
          "Funkcje",
          "Starter Player stats",
          "Eventy, Touched",
          "Losowa liczba",
          "Instrukcja warunkowa if",
          "Touched event if player",
          "Pętle for i while",
          "Zadawanie obrażeń",
          "Poruszająca się platforma z tweenservice",
          "Dodawanie grafik - Decal",
          "Tworzenie wybuchów",
          "Serwer lokalny",
          "Zadanie: Projekt Obby game"
        ],
        "Sekcja 2": [
          "Spawnowanie",
          "Tablice",
          "Spawnowanie wielu przeciwników",
          "Zadanie",
          "Spawnowanie losowych przeciwników w losowych miejscach",
          "Zadanie Spawnowanie min w losowych miejscach",
          "Proximity prompt",
          "Tworzenie obiektów",
          "Tworzenie Hat Accessory",
          "Zadanie: Okulary",
          "Tworzenie wlasnej koszulki",
          "Pickables: zwiększanie prędkości",
          "Tworzenie pistoletu",
          "Zadanie: Shotgun",
          "Zadanie: obracające serce",
          "Zadanie: serce uzupełniające zdrowie",
          "Zbieranie monet z GUI",
          "Teleport",
          "leaderstats",
          "Zadanie: Mikstura życia",
          "Input z klawiatury i myszy",
          "Zliczanie liczby zabitych graczy",
          "Billboard GUI",
          "Przypisywanie obiektów do graczy, atrybuty",
          "Zapisywanie zmian i publikacja",
          "Siły fizyczne - VectorForce",
          "Fireball"
        ],
        "Sekcja 3 - Sklep": [
          "Wprowadzenie do sklepu",
          "Model sklepu i produktu",
          "Interfejs graficzny sklepu",
          "Wyświetlanie i ukrywanie interfejsu sklepu",
          "Zakup w sklepie",
          "Zakup tylko 1 produktu",
          "StarterGear",
          "Zakup wielu produktów"
        ],
        "Sekcja 4": [
          "Animacje R15 vs R6",
          "Podstawy animacji",
          "Patrolujący NPC"
        ],
        "Zapisywanie danych": [
          "Zapisywanie liczby zdobytych punktów",
          "Zapisywanie kupionych itemków w data store"
        ]
      },
      "requirements": [
        "Komputer z dostępem do internetu i Roblox Studio"
      ],
      "description": "Witajcie w kursie programowania gier w Roblox Studio.\nBędziemy korzystać z języka Lua, który jest zdecydowanie jednym z łatwiejszych języków do nauki od podstaw.\nKurs przeznaczony jest dla początkujących adeptów programowania i tworzenia gier. Będziemy uczyć się najważniejszych spektów programowania,  a także tworzenia obiektów i mechanizmów rozrywki w Roblox.\nPoznamy jak poruszać się w programie, dodawać elementy dostępne w Toolboxie, a także jak wgrywać i tworzyć własne elementy z obiektów 3D.\nW kursie:\n- nauczymy się dodawać efekty specjalne: ogień, dym, efekty cząsteczek\n- poznamy czym są eventy\n- poruszymy obiekty za pomocą animacji (platforma ruszająca się góra-dół, elementy interfejsu użytkownika)\n- stworzymy wybuchy (miny po dotknięciu których nastąpi wybuch)\n- nauczymy się spawnować\n- będziemy otwierać i zamykac drzwi za pomoca proximity prompt\n- stworzymy obiekty: czpakę, okulary, własną koszulkę\n- stworzymy pistolet\n- dodamy obiekty zwiększające prędkość, przywracające punkty zdrowia\n- poznamy podstawy statystyk w leaderstats\n- podstawy pobierania inputu z myszy i klawiatury gracza\nPo przejściu kursu i wykonaniu zadań będziecie mogli tworzyć własne, proste gry na Roblox! ;)\nNasi kursani są z nami w kontakcie, zazwyczaj komunikujemy się przez discorda. W razie pytań to jest najlepsza forma kontaktu. Wpadajcie, pochwalcie się tym co udało wam się stworzyć. Może poznacie kogoś fajnego o podobnych zainteresowaniach ;) Do zobaczenia i usłyszenia\nZaczynamy",
      "target_audience": [
        "Kurs jest dla osób, które chciałyby tworzyć ciekawe gry i nauczyć się programowania"
      ]
    },
    {
      "title": "Unity 6 y C# Desarrollo de Videojuegos + Unity Muse IA",
      "url": "https://www.udemy.com/course/unity6-videojuegos-ia/",
      "bio": "Curso de fundamentos de Unity donde abordaremos todas las áreas de desarrollo desde cero iniciando por los fundamentos,",
      "objectives": [
        "Dominio de la interfaz principal de Unity 6 y sus fundamentos",
        "Implementación de Unity MUSE IA y sus herramientas de inteligencia artificial",
        "Creación de entornos y escenarios en el Laboratorio de Level Design",
        "Importación y manejo de Assets",
        "Scripts como componentes que alteran comportamientos",
        "Creación de la Interfaz de Usuario con UI System"
      ],
      "course_content": {
        "Bienvenida": [
          "Bienvenida",
          "Sobre el curso y Comunidad desarrolladores"
        ],
        "Unity 6 Fundamentos del motor": [
          "¿Qué es Unity?",
          "Showcase",
          "Unity ID",
          "Instalando Unity el motor de videojuegos",
          "Creando proyectos",
          "Render Pipelines (EXTRA)",
          "Flujo de los Assets",
          "Asset Store",
          "Reconociendo la interfaz",
          "Moverse por la interfaz",
          "Ventana Escena",
          "Ventana Game",
          "Ventana Jerarquía",
          "Ventana Proyecto",
          "Ventana Inspector",
          "Herramientas",
          "Barra de opciones",
          "Practica #1 - Creación de nivel",
          "Scripts",
          "Ventana Consola",
          "Package Manager",
          "Laboratiorio de Level Design (EXTRA)"
        ],
        "Proyecto Roll A Ball": [
          "Creando el proyecto",
          "Movimiento",
          "Recolección de puntos",
          "Salto",
          "Agregando enemigos",
          "Interfaz de usuario con el CANVAS",
          "Actualizando el puntaje",
          "Detalles de sonidos y particulas",
          "Integrando la cámara y Cinemachine",
          "Maquetación de la UI del juego",
          "Estilizando la interfaz de usuario",
          "Algunos detalles",
          "Optimización",
          "Creando la interfaz de Nivel completado",
          "Construyendo el Nivel 2 para nuestro juego",
          "Construyendo el Nivel 3 para nuestro juego",
          "Muestra de todos los niveles terminados",
          "Animaciones dentro de Unity",
          "Animando un nuevo enemigo Skeleton",
          "Exportar nuestro videojuego"
        ],
        "Unity MUSE y SENTIS (IA) Inteligencia artificial con el motor": [
          "Unity SENTIS y MUSE",
          "Herramientas de IA en la Asset Store",
          "Las 5 herramientas de IA en Unity",
          "Muse Chat",
          "Muse Texture",
          "Muse Sprite",
          "Muse Animated",
          "Muse Behaviour",
          "Modelos de IA con SENTIS y Hugging Face"
        ]
      },
      "requirements": [
        "No es necesario conocimiento previo de Unity o desarrollo de videojuegos",
        "No es necesario conocimiento previo en programación o C#"
      ],
      "description": "En este curso dominaremos los fundamentos de Unity 6 necesarios para el manejo del motor de videojuegos más popular de la industria en sus versiones más recientes\nUn curso perfecto para aquellos que ya han tenido un primer acercamiento con el programa y para aquellos que quieren aventurarse en el desarrollo de videojuegos.\nIniciaremos conociendo las características del motor y todas las salidas que nos ofrece, crearemos nuestro Unity ID y aprenderemos a instalar cualquier versión de Unity. Trabajaremos con diferentes proyectos mientras reconocemos su interfaz principal realizando múltiples ejercicios a modo de práctica.\nDominio de la interfaz, administración e importación de Assets, diseño de niveles, Package Manager, Scripting y mucho más.\nComo proyecto de curso utilizaremos todo lo aprendido para desarrollar la mecánica base de nuestro Roll A Ball, un videojuego desafiante donde tendremos que acumular los puntos del nivel mientras superamos todo tipo de obstáculos y enemigos.\nAdemás, implementaremos las herramientas de Unity MUSE IA, la nueva suit de herramientas de inteligencia artificial en Unity 6: Modelo de lenguaje, generación de sprites y texturas, generación de animaciones y creación de comportamientos o Behaviours\nDomina el motor de videojuegos UNITY 6 y aprende a crear tus propios videojuegos.\nNos vemos en clase.",
      "target_audience": [
        "Entusiastas y apasionados de los videojuegos",
        "Para quienes quieren aprender a crear sus propios videojuegos",
        "Desarrolladores principiantes e intermedios",
        "Programadores, desarrolladores web e ingenieros que buscan iniciarse en la creación de videojuegos"
      ]
    },
    {
      "title": "APRENDA LUA PARA MUONLINE DO BASICO AO AVANÇADO!",
      "url": "https://www.udemy.com/course/aprenda-lua-para-muonline-do-basico-ao-avancado/",
      "bio": "LUA PARA MUONLINE, APRENDA A DESENVOLVER OS SCRIPTS DOS SEUS SONHOS!",
      "objectives": [
        "Aprender: Variaveis, Operadores, Condicoes, Loops.",
        "Aprender: A necessidade e o uso de Documentacoes",
        "Desenvolver: Scripts para uso proprio",
        "Desenvolver: Scripts para vender"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Aprendendo LUA": [
          "RelpIT",
          "GRUPO WHATSAPP E DISCORD",
          "LUA FOR WINDOWS (MELHOR QUE REPL.IT)",
          "Variaveis",
          "Exercicios Variaveis",
          "Operadores",
          "Condições",
          "Condicoes Exercicios",
          "ELSEIF e Op. Logicos",
          "Loops Basicos",
          "Exercicios Loops",
          "Break e Scopos",
          "Syntax e Semantica",
          "Tabelas e Loops Avancados",
          "Exercicios Tabelas",
          "Funções",
          "Funções Avançado",
          "Funções no Mu!",
          "Require e Dofile",
          "Documentação",
          "Funcoes Lua IMPORTANTES!",
          "Geral LUA"
        ],
        "VS CODE!": [
          "Como baixar e Usar VSCODE!"
        ],
        "MATRIX EMULATOR": [
          "Introducao as Bridges (TEORICO)",
          "Index, Classes e Tipos!",
          "Introducao as Bridges (PRATICO)",
          "Introducao Functions e Script Boas Vindas!!",
          "Resolucao da Atividade!",
          "Evento Surpresa CRIANDO JUNTOS! Passo a Passo",
          "Evento Supresa PRIMEIRO PASSO RESOLUCAO!",
          "Evento Surpresa PASSO X!",
          "Evento Surpresa PASSO 2!",
          "Evento Surpresa PASSO 3!",
          "Evento Supresa PASSO 4!",
          "Evento Surpresa PASSO 5!",
          "Evento Surpresa PASSO 6!",
          "Evento Surpresa PASSO 7!",
          "Aprendendo SQL",
          "Finalizando SQL",
          "Daily Reward Melhorando o sistema.",
          "Daily Reward Parte Servidor finalizado.",
          "VISUAL! INICIO, EXPLICANDO O BASICO",
          "Melhorando nosso codigo, Daily Reward.",
          "Criando botoes responsivos! Daily Reward.",
          "Comunicacao cliente/servidor! Daily Reward"
        ],
        "OGOCX Emulator": [
          "Index/Classes/Documentacao - Ogocx Inicio!",
          "Functions/GameServerFunctions/DeclaracaoDeClasse",
          "Commands/InvasionScript",
          "Invasion Script - Anuncios e Finalizacao"
        ],
        "LOUIS Emulator": [
          "Iniciando no Louis!",
          "Custom Drop Item LUA System!",
          "Criando a primeira janela!",
          "Escrevendo na Janela e Funcoes Auxiliares!"
        ]
      },
      "requirements": [
        "Nao e necessario nenhum conhecimento sobre programação"
      ],
      "description": "Este curso de programação em Lua é especialmente desenvolvido para entusiastas e desenvolvedores de MuOnline que desejam expandir seus conhecimentos e aprimorar suas habilidades na criação de scripts personalizados. Com uma abordagem prática e didática, o curso cobre uma ampla variedade de tópicos essenciais para o desenvolvimento em MuOnline.\nIniciamos com uma introdução completa ao ambiente de desenvolvimento, passando pelos conceitos básicos de variáveis, operadores, e estruturas de controle, como condicionais (IF) e estruturas de repetição (FOR e WHILE). Em seguida, aprofundamos em funções, escopos e o uso de loops, abordando desde o básico até o avançado, o que permite ao aluno criar scripts otimizados e bem estruturados.\nO curso também inclui uma seção detalhada sobre o uso de tabelas, fundamentais para o armazenamento e manipulação de dados no MuOnline. Abordamos o uso de loops com tabelas, explorando as melhores práticas para organizar dados complexos em Lua. Além disso, oferecemos exercícios práticos focados em resolver problemas reais que surgem no desenvolvimento de scripts para servidores de MuOnline.\nPara facilitar o desenvolvimento colaborativo e a organização do código, o curso ensina como usar Require e Dofile, proporcionando uma visão clara sobre modularidade e reutilização de código. Também há um módulo dedicado ao ambiente de desenvolvimento no ReplIT, onde o aluno poderá praticar diretamente e testar seus scripts com agilidade.\nAo final do curso, o aluno será capaz de criar scripts personalizados para MuOnline, como eventos automatizados, gestão de inventário, e sistemas de interação complexos. Este é o curso ideal para quem quer mergulhar de cabeça no desenvolvimento para MuOnline com Lua e dominar a criação de scripts poderosos e eficientes.",
      "target_audience": [
        "Pessoas que desejam criar scripts para MU."
      ]
    },
    {
      "title": "Unity 3D迷路ゲーム開発入門",
      "url": "https://www.udemy.com/course/unity3d-maze/",
      "bio": "プログラミングの基礎を学んでUnityで3D迷路ゲームを作成しよう。人工知能における基礎的な知識と具体的な技法もカバー！",
      "objectives": [
        "初めてプログラミングを学ぶ人に、プログラミングの基礎を身に付けさせます（コース前半部分）。",
        "Unityによる3Dゲーム作成をできるようになります（コース後半部分）。",
        "人工知能における基礎的な知識と具体的な技法について学ぶことができます（コース後半部分）。",
        "Unityの機能としてあまり取り扱わないものは、パーティクルなどの派手なエフェクト、Unity標準のアニメーション機能、既存のアセットを用いたものなどです。"
      ],
      "course_content": {
        "コースの概要": [
          "Unityで作る3D迷路ゲーム (The 3D Maze Game based on Unity)",
          "3D迷路ゲームのプログラム概要 (An overview of the course)"
        ],
        "Unityをインストールしよう": [
          "Unityをインストールしよう (Installation of Unity)"
        ],
        "C#スクリプトを作成しよう": [
          "とにかくまずは、プログラムを書いてみよう (First of all, let's write your first program)",
          "変数を使ってみよう (How to use variables)",
          "自動生成されるプログラムを1からすべて説明します (Full explanation of your first program)"
        ],
        "プログラムの実行に条件を付けよう": [
          "if文を使って実行を制御しよう (How to control the execution by using If statement)",
          "少し複雑な条件について学ぼう (More complex form of If statement)",
          "ifの利用例を学ぼう (Examples of programs using If statement)"
        ],
        "繰り返し文によって何度もプログラムを実行しよう": [
          "whileによってプログラムを何度も実行しよう (How to control numbers of execution by using While)",
          "whileとifを組み合わせよう (Combination of If and While statement)",
          "whileの利用例を学ぼう (Examples of programs using While statement)",
          "for文について理解しよう (For statement that is other form of While)"
        ],
        "配列変数を使いこなそう": [
          "一度に複数の変数を作成しよう (How to use array of variables)",
          "配列のための繰り返し文foreachを学ぼう (Foreach statement that is an extention of For statement)",
          "可変長配列を使おう (Variable-length array: List)",
          "連想配列を使おう (Associative array: Dictionary)",
          "配列変数のすべての要素を対象としたLINQ処理を使おう (LINQ that is like SQL)"
        ],
        "メソッドを活用しよう": [
          "処理をメソッドを使ってひとまとめにしよう (Method that is used to aggregate some programs)",
          "メソッドの引数(ひきすう)を利用しよう (Parameters of method)",
          "変数の値型と参照型を使い分けよう (Two types of variable: value and reference)",
          "変数の有効範囲(スコープ)を理解しよう (Scope of an variable)",
          "メソッドとの情報のやり取りについてまとめよう (interface between caller and callee of a method)"
        ],
        "クラスを使いこなそう": [
          "クラスを作ろう（Unity2D準備編） (Preparation of Unity 2D project)",
          "クラスを作ろう（クラスの基礎編） (An overview of Class)",
          "ロボットにポーズを取らせよう (How to move arms of a robot)",
          "クラスを設計しよう (Design of classes)",
          "ロボットを管理するクラスを作ろう (A class that controls robots)",
          "ロボットを配置しよう (Arrangement of robots)",
          "RobotMotionクラスを作成しよう (RobotMotion class that is used for animation)",
          "マウスクリックの動作を作成しよう (How to make an interface using mouse click)",
          "勝利判定を作ろう (How to create judgement process)"
        ],
        "Unityのシステムを理解しよう": [
          "用語を整理しよう (Vocabulary of 3DCG and Unity)",
          "シーンビューでの操作方法と座標系について (Usage of scene view and 3D space of Unity)"
        ],
        "3D迷路ゲームを設計しよう": [
          "3D迷路ゲームを設計しよう (Design for 3D Maze Game)",
          "ゲームオブジェクトを配置しよう (Game objects of 3D Maze Game)",
          "プレイヤーアイコンを作成しよう (How to create player icon)"
        ]
      },
      "requirements": [
        "コースの前半部分（セクション1-7）は、プログラミングの未経験者でも理解できると思います。",
        "コースの後半部分（セクション8-16）の理解には、Unity、C#の経験が必要です。",
        "また、できれば少しベクトル、三角関数などの数学を知っていた方が望ましいです。"
      ],
      "description": "Unityゲーム作りのコースです。プログラムの基礎のついて、コースの前半部分では十分に時間を取って解説します。コース後半部分の3D迷路ゲームの作成では、すこし高度なプログラミング技術についても取り扱っていきます。\nこのコースによって、初めてプログラムを学ぶ人は、プログラミングに対するしっかりとした技術を修得することができます。また少しプログラミングを学んだことがある人にとっては、クラスの設計や具体的なテクニックについて学ぶことができます。さらに人工知能技術の考え方、その中の最も重要な経路探索技術について身に付けることができます。\n3D迷路ゲームは、自分自身が迷路の中を動き回るユーザ視点と、迷路全体を上から見た俯瞰視点の2つについて作成します。迷路自体は自分自身で作成できるようになっていて、さらに、迷路を脱出するためのお助けアイテム機能も実装していきます。人工知能の部分では、自動で迷路を解くプログラムを作成し、それを利用して迷路内に登場する敵のキャラクタが自分自身を追いかけてくるようにします。\nまたUnityの2Dゲームについても少しだけコースの中で取り扱います。",
      "target_audience": [
        "初めてプログラムを学ぶ人　（セクション1-7）",
        "ゲームを作ってみたい人（セクション8-16）"
      ]
    },
    {
      "title": "Modelagem 3D com MagicaVoxel para criação de games em Unity",
      "url": "https://www.udemy.com/course/magicavoxel-curso-completo-interatividade-unity3d/",
      "bio": "Aprenda a utilizar o MagicaVoxel em conjunto com Blender e Unity para animações, controles e produção de jogos 3D,",
      "objectives": [
        "Utilizar todos os principais recursos do software MagicaVoxel",
        "Otimizar um modelo voxel e entender o porquê da necessidade de se otimizar",
        "Criar e aplicar uma estrutura óssea básica(RIG) em um personagem voxel",
        "Importar e utilizar um modelo voxel rigado dentro do Unity 3D e fazer seus devidos ajustes e configurações",
        "Criar um simples controle de animação de um personagem no Unity 3D",
        "Aplicar os conhecimentos do curso para criar um jogo 3D"
      ],
      "course_content": {
        "Introdução": [
          "Vídeo de Introdução do curso",
          "Por favor leia - Aviso importante!",
          "Introdução do curso",
          "Participe do nosso Grupo do Facebook",
          "Como obter os softwares que serão utilizados neste curso?",
          "Como obter o BLENDER 2.79 (video aula)"
        ],
        "Lista de atalhos e comandos do MagicaVoxel 0.98.2": [
          "Introdução",
          "Lista de atalhos do MagicaVoxel (em português)",
          "Lista de comandos do MagicaVoxel (em português)",
          "Exercícios de fixação (ok)",
          "Exercícios de fixação (ok)"
        ],
        "MagicaVoxel 0.98.2 - Iniciando com os painéis do Model Editor": [
          "Introdução",
          "PALETTE: Trabalhando com paletas de cores",
          "BRUSH: Tipos de pinceis e seus comportamentos - parte 1",
          "BRUSH: Tipos de pinceis e seus comportamentos - parte 2",
          "VIEW: Sobre o sub-painel de visualização",
          "EDIT: Painel de ferramentas de edição - parte 1",
          "EDIT: Painel de ferramentas de edição - parte 2",
          "FILE: Como funciona o painel de acesso de arquivos",
          "Exercícios de fixação (ok)"
        ],
        "MagicaVoxel 0.98.2 - Sobre os painéis e subpainéis centrais": [
          "Introdução",
          "MODEL: Sobre o painel de edição de modelos",
          "ANIM: O processo de criação de animações por frames",
          "SIZE: Especificando as dimensões da área de edição",
          "CONSOLE: Características dos paineis Console e Hint",
          "Exercícios de fixação (ok)"
        ],
        "MagicaVoxel 0.98.2 - Trabalhando com os painéis específicos do modo Renderer": [
          "Introdução",
          "RENDER: Sobre o painel de renderização de modelos",
          "LIGHT: Configurando efeitos de luz e sombra no cenário",
          "SHAPE: Escolhendo a forma de renderização dos voxels",
          "MATTER: Aplicando e configurando tipos de materiais",
          "MATTER: Aplicando e configurando materiais em um novo modelo",
          "CAMERA: Adicionando retoques finais de qualidade à cena"
        ],
        "MagicaVoxel 0.98.2 - Animações: Como exportar e reproduzir no Unity 3D?": [
          "Introdução",
          "Método 1: Exportando OBJ, convertendo para FBX e organizando no Unity",
          "M1: Exportando os frames da animação",
          "M1: Convertendo arquivos para FBX",
          "M1: Importando arquivos em um novo projeto Unity",
          "M1: Programando o script de animação",
          "M1: Resumo do processo e conclusão",
          "Método 2: Exportando e utilizando OBJ, MTL e PNG",
          "M2: Introdução",
          "M2: Exportando os frames da animação",
          "M2: Importando arquivos em um novo projeto Unity",
          "M2: Programando o script de animação",
          "M2: Demonstrando o processo (direto e sem comentários)",
          "M2: Resumo do processo e conclusão"
        ],
        "BÔNUS Exclusivo: Customizando Elementos da Interface do MagicaVoxel": [
          "Introdução",
          "O software de configuração..."
        ],
        "BLENDER - Otimização de um cenário voxel": [
          "Introdução",
          "Comparando as malhas de 2 modelos 3D no Blender",
          "Exportando um cenário exemplo para o formato .OBJ",
          "Importando e otimizando o modelo .OBJ no Blender",
          "Realizando o UV/Mapping e aplicando o Bake Texture",
          "Exportando o modelo otimizado e a textura",
          "Importando o modelo para dentro do Unity 3D"
        ],
        "Observações e Detalhes Importantes": [
          "Um Processo de Otimização mais Eficiente + Correção de cores",
          "Problema de sombras com linhas transparentes após importar modelo Voxel no Unity"
        ],
        "BLENDER - RIG de um personagem voxel": [
          "Introdução",
          "Preparando e exportando o modelo Voxel para o Blender",
          "Importando e otimizando o modelo .OBJ",
          "Mapeamento UV e renderização de uma nova textura",
          "Desconectando cada uma das partes do agrupamento",
          "Criando cotovelos no personagem",
          "Posicionando as partes em seus devidos lugares",
          "Criando a estrutura óssea central",
          "Criando a estrutura óssea dos braços",
          "Criando a estrutura óssea das pernas",
          "Interligando as estruturas ósseas à parte central",
          "Nomeando os ossos",
          "Associando o modelo 3D do personagem à estrutura óssea",
          "Associando as malhas e os ossos dos braços",
          "Associando as malhas e os ossos do tórax e quadril",
          "Associando as malhas e os ossos das pernas"
        ]
      },
      "requirements": [
        "Um computador capaz de executar os softwares MagicaVoxel, Blender e Unity 3D"
      ],
      "description": "Seja muito bem-vindo(a) ao curso:\nModelagem 3D com MagicaVoxel para criação de games em Unity\n\nEste é um curso completo de MagicaVoxel onde você vai aprender a transferir seus modelos para o Unity de forma simples e eficiente. Este curso foi criado com o objetivo de ensinar todos os recursos e funcionalidades do software MagicaVoxel.\n\n\nEste curso tem como principal objetivo formar o aluno como um profissional em MagicaVoxel, partindo do zero e fornecendo informações de qualidade, explicando e demonstrando na prática cada uma de suas funcionalidades, até que ele alcance um nível avançado. O curso começa com aulas simples e básicas e vai evoluindo gradativamente, expondo o aluno a exercícios e explicações cada vez mais complexas envolvendo MagicaVoxel, Blender e Unity 3D.\n\nMas este curso vai ensinar apenas sobre o MagicaVoxel?\nO foco deste curso será o aprendizado do MagicaVoxel, no entanto, o curso também oferece outros conteúdos igualmente importantes para que você possa progredir ainda mais e aprender a utilizar seus modelos voxels na game engine Unity 3D de forma eficiente em seus games:\n\n\nAo Final do curso o aluno terá um conhecimento prático de todo um workflow de trabalho necessário para:\ntrabalhar e criar modelos 3D voxel no MagicaVoxel,\nexportar e otimizar a malha 3D do modelo voxel,\nestruturar um corpo ósseo(rigging) de um modelo voxel humanoide,\nexportar este corpo estruturado para o Unity,\nimportar e configurar a estrutura do corpo para os padrões do Unity,\nimportar uma biblioteca de animações humanoides,\naplicar uma ou mais animações ao corpo importado,\nprogramar no Unity o controle de movimentos e animações associadas a este corpo.\n- - - - - - - - -\n\n\nUm Curso Completo de MagicaVoxel, versão 0.98.2\nNeste curso \"Modelagem 3D com MagicaVoxel para criação de games em Unity\" você vai encontrar um curso completo de MagicaVoxel onde você vai aprender sobre todos os painéis e funcionalidades do MagicaVoxel: vai aprender como importar e exportar arquivos, utilizar as ferramentas de edição, as facilidades do painel de cores, os tipos de pincéis e sub-ferramentas para criação e edição dos modelos voxel, visualização de elementos de auxílio no canvas, como entrar com comandos de texto, aplicação de diferentes tipos de materiais, renderização e muito mais.\n\nInstruções e Manuais Traduzidos\nO site do MagicaVoxel disponibiliza uma lista de atalhos e uma lista de comandos, todos em inglês. Eu reescrevi estes dois arquivos traduzindo tudo para o português do Brasil, descrevendo as ações e funcionamentos de forma bem clara e objetiva.\n\n\nExercícios de reforço\nO curso conta com alguns exercícios de reforço visando a fixação do aprendizado do aluno. Segundo pesquisas e experiências de professores, alunos que praticam exercícios de fixação conseguem aprender e assimilar melhor o conteúdo que foi ensinado.\n\n\nExportação de modelos e modelos animados\nAprenda como exportar objetos, cenários, personagens e modelos voxel animados do MagicaVoxel para dentro do Unity 3D. Aprenda também como importar modelos 3D, low-poly e high-poly, e convertê-los em voxel-arte.\n\n\nOtimização de Modelos Voxel\n[ Esta informação foi incluída no curso visando uma maior eficiência, pensando em melhorar o desempenho de cenários, objetos e personagens quando utilizados para games em dispositivos móveis ]\nAqui você vai aprender uma das formas utilizadas para otimizar qualquer tipo de modelo 3D voxel. Esta técnica é demonstrada com um objeto cúbico simples e também com um personagem humanoide, no entanto esta técnica pode ser aplicada a qualquer tipo de modelo voxel que você criar.\n\n\nEstruturação de Rigging de personagem\nNão poderíamos deixar de fora uma explicação sobre como colocar um esqueleto em personagens! Neste curso você vai aprender a importar um personagem voxel do MagicaVoxel para dentro do Blender e vai aprender passo a passo como implementar uma estrutura óssea para ele.\n\n\nImportação e Configuração de personagens humanoides rigados\nPara utilizar um personagem rigado dentro do Unity 3D não basta apenas importá-lo para a game-engine, você precisa saber também como configurá-lo da forma correta para que ele funcione como um humanoide e aceite as animações que lhe serão atribuídas. Neste curso você vai aprender como fazer isto de forma rápida e fácil.\n\n\nCriando Animações e Importando Biblioteca de animações\nApós você ter construído uma estrutura óssea para seu personagem voxel chegou a hora de ver este personagem ganhar vida. Você vai aprender como importar uma biblioteca com uma quantidade enorme de animações para poder aplicar em seu personagem dentro do Unity 3D.\n\n\nControle de Personagem no Unity 3D\nVocê vai aprender na prática como controlar o personagem voxel humanoide(que você otimizou e aplicou o rigging). Estes controles serão através do teclado e também do Joystick.\n\nCriação de modelos Voxel\nAulas explicando como utilizar as ferramentas do MagicaVoxel para criar os mais diversos tipos de objetos, modelos, personagens e veículos. Exercite na prática com a criação de vários modelos desta coleção e desperte sua criatividade para elaborar seus próprios modelos 3D, seja para voxel-arte ou desenvolvimento de games!\n\n\n\n\nE então? você se interessou pelo curso?\nQuer se tornar um profissional em MagicaVoxel para criação de games em Unity 3D?\nEntão inscreva-se e comece já os seus estudos!",
      "target_audience": [
        "Todos os que desejam aprender a utilizar os recursos do MagicaVoxel e tornar-se um profissional",
        "Desenvolvedores de jogos interessados em criar modelos voxel e utilizá-los no Unity",
        "Interessados em aprender técnicas referentes a exportação, otimização, rigging e animação envolvendo MagicaVoxel e Unity",
        "Aqueles que desejam criar seu primeiro jogo no estilo voxel-arte"
      ]
    },
    {
      "title": "Máster de videojuegos en 2D con Godot 4 y GDScript",
      "url": "https://www.udemy.com/course/master-de-videojuegos-en-2d-con-godot-4-y-gdscript/",
      "bio": "Domina la creación de videojuegos 2D con la última versión de Godot y el lenguaje GDScript",
      "objectives": [
        "Dominar Godot 4.4 y su interfaz para crear videojuegos 2D desde cero.",
        "Escribir y comprender código en GDScript, el lenguaje de programación nativo de Godot.",
        "Crear cuatro videojuegos completos, aplicando mecánicas avanzadas y técnicas de diseño profesional.",
        "Implementar sistemas de partículas, efectos visuales y optimizaciones para mejorar la experiencia del jugador.",
        "Desarrollar sistemas de movimiento y físicas, incluyendo plataformas, colisiones y comportamientos dinámicos.",
        "Trabajar con animaciones y efectos visuales, utilizando el AnimationPlayer, partículas y shaders.",
        "Aplicar sonido y música para mejorar la inmersión de los juegos."
      ],
      "course_content": {},
      "requirements": [
        "Se recomienda tener una computadora con capacidad para ejecutar Godot 4.4 y acceso a internet para descargar recursos y actualizaciones.",
        "Una actitud proactiva y ganas de aprender y crear.",
        "No se requieren conocimientos previos en desarrollo de videojuegos; el curso está diseñado para principiantes y también ofrece desafíos para estudiantes con experiencia."
      ],
      "description": "Máster de Videojuegos en 2D con Godot 4 y GDScript\n¿Quieres aprender a crear videojuegos 2D desde cero con Godot 4.4 y GDScript? ¡Este curso es para ti! Ya seas principiante o tengas experiencia en desarrollo de videojuegos, aquí encontrarás todo lo que necesitas para dominar Godot, una de las herramientas más potentes y en crecimiento de la industria.\n\n\n¿Qué aprenderás en este curso?\nFundamentos de Godot: Instalación, configuración y uso del motor.\nGDScript desde cero: Variables, condicionales, ciclos, funciones y más.\nCreación de 4 videojuegos completos con mecánicas avanzadas:\nClon de Flappy Bird – Física, colisiones y puntuaciones.\nIdle Tycoon – Gestión de recursos y upgrades.\nPlataforma 2D – Movimiento fluido, obstáculos y enemigos.\nTopdown Shooter – Disparos, spawners y efectos visuales.\nEfectos visuales y partículas para dar vida a tus juegos.\nSistema de colisiones, físicas y detección de eventos.\nProgramación estructurada con nodos y herencias.\nOptimización y mejores prácticas en Godot.\n\n\nAdemás, tendrás acceso a:\nTodos los assets y recursos utilizados en el curso.\nCódigo fuente de cada juego para descargar y comparar.\nSoporte directo en nuestro servidor de Discord.\nActualizaciones futuras con mejoras y nuevos contenidos.\n\n\nGodot está creciendo a pasos agigantados, y ahora es el mejor momento para aprenderlo. Conviértete en un desarrollador de videojuegos profesional y crea tus propios proyectos con Godot 4 y GDScript.\n\n\n¡Inscríbete ahora y lleva tu pasión por los videojuegos al siguiente nivel!",
      "target_audience": [
        "Personas interesadas en el desarrollo de videojuegos 2D que desean aprender a utilizar Godot 4 y GDScript desde cero.",
        "Estudiantes de programación y diseño que desean aplicar sus conocimientos en proyectos prácticos y creativos.",
        "Desarrolladores con experiencia en otros motores que buscan expandir sus habilidades y explorar las capacidades de Godot.",
        "Entusiastas de los videojuegos que desean comprender el proceso de creación y desarrollar sus propios juegos."
      ]
    },
    {
      "title": "ChatGPT × Unityで会話botを作る",
      "url": "https://www.udemy.com/course/chatgpt-unitybot/",
      "bio": "最先端AIでアプリを作ってみよう",
      "objectives": [
        "ChatGPT APIの登録方法",
        "UnityでChatGPT APIの使い方",
        "会話botの作り方",
        "UnityでのAPIの使い方"
      ],
      "course_content": {
        "紹介": [
          "コース紹介"
        ],
        "事前準備": [
          "OpenAIのアカウント登録"
        ],
        "UnityでChatGPT APIを使う": [
          "Unityのプロジェクトを新規作成",
          "UniTaskをインポート",
          "ChatGPTと繋ぐ",
          "注意｜2020以下のバージョンのバグ"
        ],
        "会話botを開発": [
          "Unity画面にAIコメントを表示",
          "Unity画面からメッセージ送信",
          "画像配置"
        ],
        "ビルド時の注意": [
          "フォントを変える",
          "公開するためのビルドの方法"
        ]
      },
      "requirements": [
        "Unityの基本的な操作",
        "キーボード操作"
      ],
      "description": "UnityでChatGPT APIを使い、会話botを作ります。初心者でも動画通りに操作すれば会話botを作ることができます。さらに動画内では、ビルド時に注意すべき点や、レスポンシブ対応についても言及しています。",
      "target_audience": [
        "ChatGPTを使ってゲームを制作したい開発者"
      ]
    },
    {
      "title": "RPG Maker MV: Crea juegos RPG exitosos desde cero",
      "url": "https://www.udemy.com/course/rpg-maker-mv-al-maximo/",
      "bio": "Cómo crear juegos competitivos en el mercado y realizar proyectos INDIE",
      "objectives": [
        "Uso profesional del motor RPG Maker MV",
        "Teoría y práctica del diseño de videojuegos",
        "Planificación de proyectos grandes",
        "Fases del desarrollo de videojuegos",
        "Diseño de niveles",
        "Diseño de mecánicas",
        "Balance",
        "Narrativa RPG",
        "Publicar el juego en plataformas de venta"
      ],
      "course_content": {},
      "requirements": [
        "No hay requisitos previos, pero es de gran ayuda contar con conocimientos de JavaScript."
      ],
      "description": "Si alguna vez has soñado con crear tu propio videojuego RPG con su historia, personajes, técnicas, batallas y todo lo que tu imaginación sea capaz de idear, este curso es para ti. A través del uso de RPG Maker, en este caso la versión MV, aprenderás a sacar el máximo provecho a este poderoso motor de creación de JRPGs.\nRPG Maker MV es capaz de lograr muchísimas cosas si se sabe utilizar bien, y hay de sobra varios títulos exitosos en el mercado que lo demuestran. El asunto está en justamente dominar la herramienta al máximo. En este curso daremos dos enfoques principales:\n1. Conocerás y dominarás RPG Maker MV a fondo conociendo los límites hasta dónde el motor puede llevarte SIN SABER PROGRAMAR.\n2. Conocerás cómo funciona el núcleo de RPG Maker MV para poder PROGRAMAR y desatar así la magia y las posibilidades infinitas que el saber codificar te brinda. Al programar, literalmente ya no habrá límites a lo que puedes crear.\nDe este modo entenderás cómo funciona la librería completa del motor del juego y cómo acceder a los componentes internos para hacer literalmente lo que quieras. Pero es importante que sepas algo:\nEN ESTE CURSO NO APRENDERÁS A PROGRAMAR\nDominarás primero toda la herramienta hasta dónde esta llega sin la necesidad de codificar, luego te mostraré cómo opera internamente RPG Maker MV para que, si sabes programar, puedas dar rienda suelta a tu imaginación, incluso trabajaremos con ejemplos prácticos.\nTambién hablaremos sobre conceptos teóricos importantes sobre el diseño y desarrollo de videojuegos, los cuales van más allá del género (en este caso RPG y JRPG), la herramienta concreta a utilizar, etc., sino que son temas generales a la creación de cualquier videojuego en sí. Si tu intención es publicar y ganar dinero con tus creaciones, más vale que te vuelvas una persona profesional, que hace las cosas con conocimiento y que pone el máximo empeño.\nNo encontrarás otro curso como este en ningún lugar, en el cual conocerás hasta el más mínimo detalle del interior de RPG Maker MV, desglosando hasta sus huesos para comprender su verdadero poder y darte cuenta de que su, a veces, mala fama no es porque el motor no sea potente o competente, es porque la gente no lo sabe usar.\n\n\nTemas\n1. Nociones de RPG Maker MV\na. Creación de proyectos\nb. Eventos de mapa\nc. Enlazado de mapas\nd. Concepto de metalenguaje\ne. Esqueleto de un proyecto\nf. Hojas de eventos\ng. Interruptores locales y globales\nh. Obtención de dinero e ítems\ni. Derivaciones condicionales\nj. Tiendas y posadas\nk. Uso básico de variables globales\nl. Reclutamiento de actores (personajes)\n2. Base de datos y sistema de batallas\na. Estadísticas y lógica de batallas\nb. Encuentros aleatorios y por eventos\nc. Fórmulas de daño\nd. Roles (clases)\ne. Actores\nf. Tipos elementales y habilidades\ng. Configuración de debilidades entre tipos elementales\nh. Atributos\ni. Ítems, armas y armaduras\nj. IA de enemigos\nk. Configuración final del proyecto\n3. Eventos y variables\na. Creación de un prototipo\nb. Escenas cortadas\nc. Comandos de eventos\nd. Eventos comunes (globales)\ne. Eventos internos de batalla\nf. Flujo de progresión\n4. Tilesets y activos\na. Mapeado\nb. Animaciones\nc. Creador de personajes\nd. Técnica de paralaje\ne. Uso de fuentes personalizadas\nf. Assets de sistema\n5. Prototipado y despliegue\na. Un prototipo de Pokémon\nb. Configuración avanzada de eventos interrelacionados\nc. Creando un sistema de captura\nd. Modificando el sistema de batallas\ne. Despliegue de un proyecto\nf. Encriptación básica de imágenes y sonido\ng. Subir a un servidor Web\nh. Uso de Enigma Virtual Box para ofuscado avanzado en Windows\ni. Despliegue de un proyecto para Android\n6. Plugins de terceros\na. Instalación de un plugin\nb. Uso de parámetros\nc. Uso de comandos e invocación por eventos\nd. Uso de notetags\ne. Ejemplo con plugins por defecto\nf. Plugins de SRDude\ng. Plugins de Yanfly\nh. Plugins de Galvs\ni. Otros bancos de plugins\nj. Poniendo el juego en 3D\n7. Scripting\na. Biblioteca de RPG Maker MV\nb. Arquitectura del motor y objetos\nc. SriptCalls\nd. Uso de scripts personalizados\ne. Caso práctico de scripting\n8. Programación de plugins\na. La estructura de un plugin\nb. Definiendo parámetros\nc. Definiendo comandos invocables\nd. Definiendo notetags\ne. Creación de plugin Pokémon\nf. Documentación de plugins y uso de notaciones\n9. Teoría de desarrollo de videojuegos\na. Proceso de diseño\nb. Documento de diseño\nc. Prototipado\nd. Diseño de niveles\ne. Diseño de mecánicas\nf. Narrativa\ng. Disonancia ludonarrativa\nh. Estructura de tres actos\ni. Estructura del Viaje del Héroe\nj. Balanceo\nk. Puzzles",
      "target_audience": [
        "Personas que quieren crear sus propios videojuegos RPG",
        "Programadores que quieren añadir una herramienta más a su catálogo",
        "Personas que quieran generar ingresos extra con sus propios juegos"
      ]
    },
    {
      "title": "Der Unity 2017 & Blender Komplettkurs: Erstelle Top 3D Games",
      "url": "https://www.udemy.com/course/3d-games-mit-unity-2017-und-blender/",
      "bio": "Lerne in nur 4 Wochen Spiele wie Pong, Fruit Ninja und FarmVille mit Unity 3D und Blender in C# zu erstellen",
      "objectives": [
        "Grundlagen der C# Programmierung",
        "Tiefes Verständnis der objektorientierten Programmierung",
        "Erstellung von 3D Objekten mit Blender",
        "Verwendung von Physik in Spielen",
        "Generierung einfacher und schöner UIs (Benutzeroberflächen)",
        "Verwendung von Sounds und Musik in Spielen",
        "Geld verdienen mit Spielen via In App Purchases und Ads/Werbung",
        "Erstellung von Levelsystemen - mit denen man super einfach eigene Levels Designen kann",
        "Exportierung der Spiele auf verschiedene Plattformen"
      ],
      "course_content": {
        "Einleitung": [
          "Coding mit Jannick",
          "Download und Installation der Software",
          "WICHTIG - Wie du das meiste aus dem Kurs holst",
          "Unity für Windows"
        ],
        "Unity 3D Grundlagen": [
          "Einführung",
          "Übersicht zum Interface",
          "Wichtiger Hinweis!",
          "Layout einstellen",
          "Grundlagen der Bewegung",
          "Physics Grundlagen - Theorie",
          "Rigidbody",
          "Collider",
          "Trigger Events",
          "Das Konzept der Prefabs",
          "Übungsaufgabe Physik in Unity",
          "Physik Grundlagen Quiz",
          "Motivation als Schlüssel zum Erfolg"
        ],
        "C# Grundlagen": [
          "Einführung",
          "Was ist C# und warum verwenden wir es",
          "C# Grundlagen lernen",
          "Kurzer Überblick unserer ersten Klasse",
          "Variablen und Datentypen Int, Double, Float",
          "Variablen und Datentypen String, Char, Bool",
          "C# Grundlagen Quiz - Variablen und Datentypen",
          "Unity und C# Methoden",
          "Arithmetische Operatoren",
          "Logische und Vergleichsoperatoren",
          "Zuweisungsoperatoren",
          "If Statements",
          "Arrays",
          "Listen",
          "For Schleife",
          "While Schleife",
          "Do While Schleife",
          "Foreach Schleife, break und continue",
          "Konstruktoren und Grundlagen der objektorienterten Programierung",
          "Übungsaufgabe C#"
        ],
        "Erstes Projekt Pong": [
          "Einführung",
          "Game Development Fachbegriffe (Unity3D)",
          "Pong Intro",
          "Bewegen des Schlägers",
          "Ball Bewegung geben",
          "Einen AI erstellen",
          "Punkte System und Game Over",
          "Ein simples UI anlegen",
          "Sound einfügen",
          "Pong Abschluss"
        ],
        "Eigene 3D Objekte erstellen - Eine Einführung in Blender": [
          "Einführung",
          "Was ist Blender und wozu brauche ich es?",
          "Blender herunterladen und installieren",
          "Blender Shortcuts",
          "Die Grundfunktionen",
          "Abwickeln, Materialien und Export",
          "Erstellung eines Hauses",
          "Eine Windmühle erstellen",
          "Die Windmühle animieren",
          "Die Windmühle in Unity importieren"
        ],
        "Erweiterte Grundlagen": [
          "Serialisierte Klassen",
          "Instantiate",
          "Raycasting"
        ],
        "Fruit Ninja Klon": [
          "Einführung",
          "Früchte erstellen und zerplatzen lassen",
          "Den Fruit-Spawner erstellen und konfigurieren",
          "Die Klinge erstellen",
          "GUI einbauen und das Spiel weiter ausbauen",
          "GameOver und Restart",
          "Den Highscore einbauen",
          "Eigene Früchte in Blender erstellen",
          "Das Spiel erweitern",
          "Den Code für Android vorbereiten",
          "Das Spiel auf dem Handy spielen",
          "Das Spiel etwas aufhübschen",
          "Unity Ads einbauen um Geld zu verdienen",
          "Das Gerät als Entwickler-Gerät einrichten",
          "Wie geht es weiter?",
          "Eigene Sounds erstellen und hinzufügen"
        ],
        "3D Infinite Runner": [
          "Einführung",
          "Das Projekt aufsetzen",
          "Die richtige Perspektive einstellen",
          "Den Charakter bewegen",
          "Die Kamera folgen lassen",
          "Den Charakter animieren",
          "Das Spiel starten",
          "Neustart",
          "Kristalle einsammeln und einen Score einbauen",
          "Den Highscore einrichten",
          "Einen Kristall Effekt basteln",
          "Hintergrundmusik Schleife einbauen",
          "Die Straße prozedural generieren"
        ],
        "Aufbaustrategie Spiel - Farmville Clon": [
          "Einführung",
          "Farmville Clon Intro",
          "Farmville Clon Start - Erstellung der Map",
          "Verschönerung der Map",
          "Hinweis zur folgenden Lektion",
          "UI Anlegen",
          "Resourcensystem",
          "Building und Buildings Klassen",
          "Build Klasse und Hovern",
          "Gebäude erzeugen",
          "Setzen von Gebäuden",
          "BuyButton Script",
          "Info, aufwerten und abreißen",
          "Speichern und Laden von Daten",
          "Fertigstellung der Speicherfunktion"
        ],
        "Extras": [
          "In-App Käufe (IAP )"
        ]
      },
      "requirements": [
        "Ein PC oder Mac mit Direct X9 bzw 11",
        "Interesse an Videospielen"
      ],
      "description": "Hast du Lust deine eigenen Spiele zu entwickeln? Hast vielleicht sogar schon eine coole Idee?\n\nWillst alleine oder mit deinen Kumpels an dem Spiel arbeiten?\nDann ist Unity 3D und dieser Kurs genau das Richtige für dich. Unity 3D ist die beste Spieleentwicklungsumgebung unseres Planeten! Das bringt dir extrem viele Vorteile, wenn du es erst einmal gelernt hast :)\nSehr Kurzer Weg zum ersten eigenen Spiel\nViele offene Stellen - wenn du denn als angestellter Entwickler arbeiten möchtest.\nEine riesige Community - folglich viele Lösungen zu Fragestellungen\nDetaillierte Dokumentation\nUmfangreichster Asset Store - Du brauchst also kein Designer oder Musiker sein\nDas alleine sind schon super gründe Unity zu lernen.\nNun kommt ein weiterer Top, wenn nicht der beste Grund: Dieser Kurs!\nDenn in diesem Kurs wirst du an der Hand geführt und lernst auf dem einfachsten und schnellsten Wege die Entwicklung von wunderschönen 3D Videospielen.\nDu lernst:\nAlle Grundlagen von C# die man zur Spieleentwicklung braucht\nTiefes Verständnis der objektorientierten Programmierung\nErstellung von GameObjects\nErstellung von 3D Grafiken mit Blender\nVerwendung von Physik in Spielen\nGenerierung einfacher und schöner UI (Benutzeroberflächen)\nNutzung des Asset Stores für deine Zwecke\nVerwendung von Sounds und Musik in Spielen\nGeld verdienen mit Spielen via In App Purchases und Ads/Werbung\nNutzung von Timern\nErstellung von Levelsystemen - mit denen man super einfach eigene Levels Designen kann\nExportierung der Spiele auf verschiedene Plattformen\nErstellung von Online Bestenlisten\nund vieles Mehr\n\n\nAll das lernst du nicht in trockener Theorie… - nein - das wäre zu öde. Nur mit echter Praxis kommst du ans Ziel, daher haben wir komplette Projekte vorbereitet und entwickeln diese mit dir.\nDu lernst also die Erstellung von wunderschönen kompletten Videospielen.\nDie Spiele die du entwickeln wirst sind:\nPong - der mega Klassiker um ein erstes Gefühl für die Spieleentwicklung zu kriegen\nZig Zag Endless Runner\nEin umfangreiches Aufbau - Strategie Spiel in dem du lernst wie man ein Spiel dieses super beliebten und erfolgreichen Genres entwickelt.\nEinen Fruit Ninja Klon\nAll diese Spiele stehen dir mit Code zur Verfügung und du kannst sie jederzeit erweitern (vor allem bist du nach dem Kurs dazu in der Lage) und sie als deine eigenen Spiele im Store veröffentlichen.\nDu lernst von einem der Erfolgreichsten deutschen Kursersteller und einem erfahrenen Indie Developer. Daher kannst du dir sicher sein, dass die Projekte einerseits dem Qualitätsstandard von Entwicklerbuden entspricht und andererseits super einfach zu folgen und verstehen ist.\nWas hält dich noch auf? Schreibe dich jetzt in den Kurs ein und erstelle schon in wenigen Wochen deine ersten eigenen Spiele!",
      "target_audience": [
        "Alle die eine Idee für ein Spiel haben",
        "Alle die Videospiele lieben und endlich selbst eins entwickeln wollen",
        "Alle die in der Spieleentwickler Branche Fuß fassen wollen",
        "Egal ob du bereits Programmieren kannst, oder nicht - hier lernst du C# und die Spieleentwicklung in 4 Wochen"
      ]
    },
    {
      "title": "Unity 2D Beginner Master Class Using C# in Tamil",
      "url": "https://www.udemy.com/course/unity-2d-beginner-master-class-using-csharp/",
      "bio": "Learn Unity in C# & Code Your First Five 2D Video Games for Web, Mac & PC in Tamil",
      "objectives": [],
      "course_content": {
        "Introduction & Number Guessing Game": [
          "#1 What is a Programming Language",
          "#2 Unity and VS. Community Set up",
          "#3 Unity's User Interface",
          "#4 Game Intro (Guessing The Number)",
          "#5 Game Design",
          "#6 Variables",
          "#7 Methods",
          "#8 Update and Input",
          "#10 Game Result and Reset Game",
          "#11 refactoring",
          "#13 End of the section"
        ]
      },
      "requirements": [
        "No programming experience needed",
        "Mac or PC capable of running Unity 2020 or later.",
        "A passion and willingness to learn how to code."
      ],
      "description": "This course is a highly useful Unity game development course on Udemy.\nWhether you have no prior experience with Unity or coding, this course will guide you from the basics to creating video games using Unity, the leading free-to-use game development tool in the world. Our online tutorials will surprise you with what you can accomplish right from the start.\nYou'll benefit from exceptional support from fellow students and the dedicated Ultrio Studio team, who actively engage in forums and the Q&A section. Throughout the course, you'll build several games, including:\n\n\nNumber Guessing Game\nPing Pong Game\nDinosaur Game\nPlatformer Side Scroller\nThe course follows a project-based approach, as we believe it is the most effective way to learn Unity and C#. You won't only learn dry programming concepts but also apply them immediately to real indie games throughout the journey. All project files, additional references, and resources are included to ensure you never get stuck. The course features talking-head videos, informative diagrams, high-quality screencasts, and more.\nMoreover, this course surpasses others in terms of size and quality. Check out the course length and reviews for proof.\nFor each demo game you build, you'll follow this process:\nFace the challenge of building the entire game independently.\nReceive step-by-step guidance on constructing the game.\nContinuously apply and reinforce your knowledge.\nUpon enrollment, you'll gain full lifetime access to the course for a one-time fee. The creators are experienced and qualified coders as well as enthusiastic gamers, enabling them to explain complex concepts clearly and entertain you along the way.\nAs you progress through the course, you'll learn C# and establish a solid foundation in object-oriented programming. By the end, you'll feel confident in coding and game development basics, eager to delve deeper into the subject.\nWhether you're a beginner, artist, or coder, this course welcomes anyone interested in creating games. Unity is an exceptional platform that allows you to develop high-quality games for Windows, macOS, iOS, Android, and the web from a single source.\nDon't hesitate to dive in and start learning Unity now – we guarantee you won't be disappointed!",
      "target_audience": [
        "Learn Unity in C# & Code Your First Four 2D Video Games for Web, Mac & PC. The Tutorials Covers Animations, Tilemap, And Physics in Tamil"
      ]
    },
    {
      "title": "【Unity C# ゲーム開発】ヴァンパイアサバイバーズ風2Dローグライトゲーム開発講座",
      "url": "https://www.udemy.com/course/unity-game-vampiresurvivors/",
      "bio": "C#を使ってヴァンパイアサバイバーズ風2Dローグライトゲームを開発できる最強コース！現役ゲームクリエイターが1レクチャー15分で解説→C#プログラミングを進めていくので分かりやすい内容になっています！",
      "objectives": [
        "サバイバー系ゲーム制作のスキル",
        "2Dゲーム制作スキル向上",
        "実践的なC#プログラミング",
        "ゲーム開発に必要なUnityのスキル",
        "応用可能なUnityのスキル"
      ],
      "course_content": {
        "紹介": [
          "紹介",
          "Q&Aガイドライン",
          "コースの進め方と特徴",
          "リソース（サンプルプロジェクト）の開き方"
        ],
        "このコースで使うC#基礎おさらい": [
          "前提知識とコメントとログ",
          "よく使う型と変数",
          "変数の生存期間",
          "変数の代入(型キャスト)",
          "const(定数)",
          "enum(列挙型)",
          "コンソールログの使い方",
          "演算と演算子",
          "比較演算子",
          "if文",
          "switch文",
          "for文",
          "while文",
          "1次元配列",
          "2次元配列",
          "List",
          "13.Listの応用",
          "Dictionary",
          "foreachと配列関係まとめ",
          "関数入門①",
          "関数入門②",
          "クラス入門①",
          "クラス入門②",
          "スクリプトからコンポーネントへアクセス",
          "自作クラスへのアクセス方法",
          "アクセスレベルについて",
          "3と5の倍数で文字を表示する",
          "AudioSource(サウンド)の操作①",
          "23-1.AudioSource(サウンド)の操作②"
        ],
        "このコースで必要なC#テクニック": [
          "staticキーワード",
          "リスト内データの検索（List.Find）",
          "クラス継承入門",
          "インデクサ",
          "コンポーネント有効化/無効化",
          "TryGetComponentとTryGetValue",
          "GetComponentsInChildren",
          "ScriptableObject",
          "BoxCollider2DのisTriggerについて"
        ],
        "本編": [
          "#1 プロジェクト作成",
          "#2 アニメーション設定",
          "#3 UI作成",
          "#4 UI作成 レベルアップパネル",
          "#5 UI作成 宝箱パネル",
          "#6 UI作成 ゲームオーバーパネル",
          "#7 フィールド作成",
          "#8 プレイヤーコントローラー作成",
          "#9 カメラとプレイヤーの移動範囲制御",
          "#10 ステータスのベース",
          "#11-1 EnemyController作成①",
          "#11-2 EnemyController作成②",
          "#12-1 ダメージ表示①",
          "#12-2 ダメージ表示②",
          "#13 ゲームタイマー表示",
          "#14-1 敵生成装置作成①",
          "#14-2 敵生成装置作成②",
          "#15-1 敵の設定①プレハブ設定",
          "#15-2 敵の設定②パラメータ設定",
          "#16 敵生成装置設定",
          "#17 プレイヤーの設定",
          "#18 武器生成装置のベース作成",
          "#19 武器生成装置設定",
          "#20-1 【武器】スラッシュ作成①",
          "#20-2 【武器】スラッシュ作成②",
          "#21【武器】アックス作成",
          "#22【武器】アロー作成",
          "#23【武器】ナイフ作成",
          "#24【武器】ブーメラン作成",
          "#25【武器】シールド作成",
          "#26【武器】手裏剣作成",
          "#27【武器】円月輪作成",
          "#28-1【武器】爆弾作成①",
          "#28-2【武器】爆弾作成②",
          "#29 アイテム設定",
          "#30 経験値作成",
          "#31 プレイヤーと武器のレベルアップ作成",
          "#32 レベルアップパネル作成",
          "#33 宝箱パネル作成①",
          "#34 宝箱パネル作成②",
          "#35 宝箱パネル作成③",
          "#36 プレイヤーアイコン",
          "#37 倒した敵のカウント",
          "#38 ゲームオーバーパネル作成",
          "#39 タイトルシーン作成",
          "#40 時間制限と操作性アップ",
          "#41 サウンド追加",
          "#42 5分バージョン"
        ]
      },
      "requirements": [
        "C#を学習する意欲のある方",
        "サバイバー系ゲームを作ってみたい",
        "本格的な2Dゲーム制作のテクニックを身につけたい",
        "Unityでゲーム開発をしたことがある",
        "脱初心者を目指している",
        "パソコンの基本的な操作"
      ],
      "description": "ヴァンパイアサバイバーズ風ローグライトゲームを作ってみよう！\n\n\nわかりにくい部分は資料付きで解説を入れたり、画面ズームを使って進めていくので挫折しにくい構成になっています。\n1レクチャーを約15分程度にまとめたハンズオン形式となっているので\n毎日少しづつでも、動画でやっていることを真似するだけでもOKなので、効率的に学習できる内容となっています。\n\n\n今回の題材はヴァンパイアサバイバーズ\nローグライトゲームのロジックを学習しながら、ご自身でサバイバーズゲームを作り上げていきます。\nC#でゲームロジックを実装して、幅広いゲーム開発の知識を手に入れましょう！\n\n\n本や動画を見ながらでいいので、ゲームを作った事がある方にオススメのコースです\n（未経験の方にはすこし難しい内容になっています）\n\n\nこちらのコースでは\nC#の基本〜応用的な使い方\nローグライトゲームのロジック\nサバイバーズゲーム制作のスキル\nが効率的に学習できます。\nなるべくスクリプト（プログラミング）を利用して制作していくので\nこのゲームに限らず、アイデア次第で汎用的なゲームを制作する知識も身につきます。\n\n\nまた、私のコースは日々頂いたレビューに対応しアップデートを行なっていきますので\nぜひ高評価＆レビューをいただけますと幸いです！",
      "target_audience": [
        "C#プログラミングを本格的に学習したい方",
        "実践的なプログラミングを学習したい方",
        "ヴァンパイアサバイバーズ風なゲームを作ってみたい方",
        "Unityを本格的に学習したい方",
        "ゲームクリエイターになりたい方"
      ]
    },
    {
      "title": "Aprende c++ desarrollando un videojuego desde cero-experto",
      "url": "https://www.udemy.com/course/cpp-aprende-a-programar-un-videojuego-en-c-visual-studio-desde-cero/",
      "bio": "Domina C++ . INCLUYE PROYECTO FINAL. Usaremos POO, Sprites, Windows Forms, spritesy arreglos en Visual Studio.",
      "objectives": [
        "Aprenderás paso a paso a desarrollar un videojuego desde cero sólo con c++ y visual studio",
        "Aprenderás sobre POO(herencia, agregación, composición).",
        "Aprenderás a usar Sprites,Bitmaps y Buffers correctamente.",
        "Aprenderás a como usar las herramientas de Windows Form (timer,botones,labeles,textboxs,etc).",
        "Aprenderás a pasar valores de un formulario a otro y construir niveles de juego.",
        "Aprenderás a dar movimiento y métodos de persecución y disparo a tus personajes .",
        "Aprenderás a elaborar tu diagrama UML del proyecto.",
        "Aprenderás a implementar arreglos con doble puntero.",
        "Aprenderás sobre Colisiones entres Sprites y Arreglos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Presentacion"
        ],
        "Clases Bases del videojuego": [
          "Clase Herencia y Jugador 1",
          "Clase Herencia y Jugador 2",
          "Clase Ambulancia y Policia",
          "Clase enemigo Asintomático y Saludable"
        ],
        "Disparo y/o Bala de Personajes y Jugador": [
          "Bala y/o disparo de clase Jugador",
          "Bala y/o disparo Saludable y Asintomático"
        ],
        "Arreglos de personajes": [
          "Arreglo de personaje Saludable",
          "Arreglo de personaje Asintomatico"
        ],
        "Arreglos de Disparo y/o Bala para cada personaje": [
          "Arreglo de Balas y/o disparo de Jugador",
          "Arreglo de Balas y/o disparo de personaje Saludable",
          "Arreglo de Balas y/o disparo de personaje Asintomático"
        ],
        "Clase principal \"Juego\" y Colisiones entre Sprites": [
          "Clase Juego 1",
          "Clase juego 2",
          "Clase juego 3",
          "Clase Juego 4",
          "Colisión 1: Entre Sprites (jugador con arreglo de enemigos)",
          "Colisión 2 : Disparo de Enemigos contra Sprite de Jugador",
          "Colisión 3: Disparo de Jugador Enemigos (asintomático y saludable)",
          "Colisión 4: Entre Sprites Restantes y Cambio de Color"
        ],
        "Formularios de Windows": [
          "Formulario 1: Sprites,Bitmaps y Buffers",
          "Formulario 2: Toolbox (Timer,Labels,Textbox,botones) y métodos de clase Juego",
          "Formulario 3: Menú Principal y pasar valores de un formulario a otro 1",
          "Formulario 4: Menú Principal y pasar valores de un formulario a otro Parte 2"
        ],
        "Diagrama y Código del proyecto": [
          "Diagrama UML del proyecto"
        ]
      },
      "requirements": [
        "Conocimientos básicos sobre C++"
      ],
      "description": "Quieres desarrollar un videojuego sólo con tus conocimientos básicos en C++. ??\nEste curso está muy detallado paso a paso donde te explicaré para que sirve cada método, atributo y por qué de cada header. También, al final de la serie de videos instructivos encontrarán el código del proyecto en un archivo .rar y el diagrama UML en un .txt\nEste curso es muy interactivo, y pondrás a práctica todos tus conocimiento en un gran proyecto divertido con Visual Studio.\nTambién, en este curso verás como usar de forma correcta la Programación orientada a objetos (POO) como agregación, composición y herencia de forma correcta y detallada. Además de pasar datos de un formulario a otro, en este caso del menú principal a la venta de juego.\nPara la parte visual, usaremos Windows Forms, donde usaremos el toolbox para usar el timer que sirve para el movimiento de Sprites dentro de un intervalo. También, usaremos los labels, textboxs y Bitmaps para dibujar a nuestros personajes dentro de el formulario.\nAdemás, para crear la cantidad de personajes que necesitemos usaremos arreglos con doble puntero tanto para los Sprites de disparo como de Enemigos. Del mismo, modo aprenderá todos los tipos de colisión que pueden haber dentro de un juego como de arreglo contra arreglos de personajes, sprite contra un sprite, etc.\nPara este curso no se usará Codeblocks ni Allegro . Por otro lado, soy un estudiante de 5to ciclo de la carrera de Ingeniería de Software de la UPC de Lima, Perú. Me encanta el desarrollo de videojuegos por lo que me gusta instruir y pasar mis conocimientos para que los estudiantes no se queden con dudas que muchas veces tenemos que gastar tiempo buscando la respuesta por internet. Por eso traté de hacer esta serie, como me hubiese que me hubieran explicado a mí, de forma clara y directa.",
      "target_audience": [
        "Personas que quieran aprender todo sobre Windows Form",
        "Personas con ganas de aprender c++ y POO(programación orientada a objetos) con un proyecto entretenido-intermedio",
        "Personas que quieran aprender a usar bitmaps,buffers,sprites y animaciones"
      ]
    },
    {
      "title": "Maîtrisez le développement de jeux vidéo avec C# et Unity",
      "url": "https://www.udemy.com/course/formation-unity-3d-creez-des-jeux-3d-avec-unity-et-csharp/",
      "bio": "La formation ultra complète au développement de jeux vidéo 3D avec Unity 6 et C#. Apprenez avec un expert certifié !",
      "objectives": [
        "Maîtriser Unity 3D au travers de 20+ projets concrets",
        "Programmer avec le langage C# (De débutant à expert)",
        "Créer des jeux 3D et 2D (PC, Consoles ou Mobiles)",
        "Utiliser des modèles 3D et les animer comme un pro",
        "Coder des interactions et événements",
        "Développer un jeu de plateforme 3D",
        "Acquérir les bonnes pratiques avec un expert",
        "Avoir les conseils d'un professionnel certifié",
        "Pratiquer avec 20+ projets complets",
        "Créer un survival horror avec",
        "Créer un FPS (jeu de tir) en 3D",
        "Créer des jeux en 2D / Pixel Art",
        "Créer des jeux en réseau/ multi-joueurs",
        "Créer des jeux de plateau / jeux de société",
        "Créer des intelligences artificielles (IA)",
        "Devenez développeur de jeux et intégrez le studio de vos rêves"
      ],
      "course_content": {
        "Introduction à cette formation complète sur Unity 6": [
          "Présentation de Unity, le moteur de jeu préféré des développeurs",
          "Avant de poursuivre le cours",
          "Ce cours évolue en même temps que Unity pour être toujours à jour pour vous",
          "Prise en main du player vidéo d'Udemy pour suivre au mieux une formation !",
          "Comment bien utiliser les ressources de cette formation"
        ],
        "Découverte de Unity et de son interface : Domptez ce moteur de jeu !": [
          "A propos des vidéos d'initiation : Conseil si vous suivez plusieurs formations",
          "Découvrez la nouvelle version de Unity et comment y accéder (Unity 6)",
          "Télécharger Unity HUB afin de gérer ses projets et ses versions d'Unity",
          "Découverte de Unity HUB et prise en main de l'utilitaire",
          "Créer un nouveau projet Unity 6",
          "Voici ma propre version personnalisée de Unity HUB (améliorée et modernisée)",
          "Avant de prendre en main Unity, message important sur ce cours et sa structure",
          "Comprendre la fenêtre \"Project\"",
          "Comprendre le fonctionnement de la fenêtre \"Hierarchy\"",
          "Découvrez la fenêtre \"Scene\", votre zone de travail",
          "Comprendre la fenêtre \"Game\", pour prévisualiser votre jeu vidéo",
          "Découvrez la fenêtre \"Inspector\" pour paramétrer tous vos objets de jeu",
          "Tour d'horizon des principaux menus de Unity6",
          "[VIDÉO RÉCAPITULATIVE] L'interface ce Unity condensé en 1 vidéo résumée !",
          "Connaissez vous l'interface d'Unity ?"
        ],
        "Comprendre le fonctionnement des composants (components) dans Unity": [
          "Introduction sur cette section \"components\" et comment apprendre à votre rythme",
          "Comprendre ce qu'est un GameObject et comment les manipuler",
          "Comprendre ce qu'est un component et comment affecter un comportement à un objet",
          "Utiliser un RigidBody pour appliquer la gravité sur un objet du jeu",
          "Utiliser les différents colliders pour rendre les objets de jeu solide",
          "Manipuler la caméra dans Unity pour filmer l'action du jeu au mieux",
          "Savoir utiliser les Materials de Unity pour colorer les objets du jeu",
          "Comprendre les textures PBR pour obtenir un rendu visuel ultra réaliste",
          "Comprendre comment adapter les Shaders pour modifier la matière des objets",
          "L'éclairage en temps réel pour éclairer une scène 3D",
          "L'éclairage précalculé pour de la lumière et des ombres optimisés",
          "Savoir utiliser les Reflection et Light probes pour un rendu plus réaliste",
          "Utiliser le système de particules de Unity pour créer des effets visuels",
          "Comprendre comment jouer et entendre des sons dans un jeu",
          "Dessiner des lignes et effets visuels grâce aux Line/Trail renderer",
          "Jouer des vidéos (cinématiques) dans Unity",
          "Réutiliser intelligemment des objets grâce au système de Prefabs",
          "[VIDÉO RÉCAPITULATIVE] Comprendre les components de Unity en 1 seule vidéo !",
          "Maîtrisez vous les components ?"
        ],
        "(Optionnel) Si vous utilisez une ancienne version de Unity c'est pour vous": [
          "Présentation de ces viéos complémentaires (optionnelles)",
          "Installer une version spécifique du logiciel et accéder aux pré-versions",
          "L'interface de Unity - Découverte",
          "Les différents menus et leur utilisé (Partie 1)",
          "Les différents menus et leur utilisé (Partie 2)",
          "Quelques manipulations de base + Utilisation d'assets 3D"
        ],
        "Comment trouver facilement et gratuitement des ressources pour créer des jeux ?": [
          "Introduction sur cette section \"Assets pour le jeu vidéo\"",
          "Télécharger des assets (modèles 3D, textures, sons...) sur OpenGameArt",
          "Utiliser les assets d'exemple offerts par Unity Technologies",
          "Trouver des packs de ressources sur itch.io, la plateforme des indés",
          "A propos de la prochaine vidéo",
          "Prise en main des Starter Assets de Unity",
          "La nouvelle version des Starter Assets",
          "[VIDÉO RÉCAPITULATIVE] Comment trouver des assets pour ses jeux? Résumé condensé",
          "Testez vos connaissances"
        ],
        "Comprendre le fonctionnement des packages avec Unity 6": [
          "Introduction à propos du Package Manager de Unity",
          "Prise en main du package manager : Activer de nouvelles fonctionnalités",
          "Installation de notre premier package : Le toon shader",
          "Découverte de PolyBrush, le package du level designer",
          "Améliorer les graphismes de son jeu grâce au package Post Processing",
          "Résoudre le problème des materials/textures roses",
          "[VIDÉO RÉCAPITULATIVE] Comment utiliser le package Manager (résumé condensé)",
          "Votre premier décor/niveau 3D",
          "Le package Unity UI pour créer des interfaces"
        ],
        "Découverte de ProBuilder : Le package ultime pour modéliser en 3D dans Unity": [
          "Mini introduction pour cette section dédiée à probuilder",
          "A propos de la nouvelle version de ProBuilder (Unity 6 et plus)",
          "Installation de ProBuilder",
          "Modifier une forme 3D avec ProBuilder",
          "Les primitives de base qu'on peut créer avec ProBuilder",
          "Créer des formes personnalisées manuellement",
          "Attribuer un material aux faces d'un modèle 3D",
          "Travailler avec le maillage UV d'un modèle",
          "Attribuer des couleurs aux polygones d'un modèle",
          "Les outils de ProBuilder partie 1",
          "Travailler avec des textures",
          "Les outils de ProBuilder partie 2",
          "Les outils de ProBuilder partie 3"
        ],
        "(Optionnel) Les notions fondamentales à avoir quand on crée des jeux avec Unity": [
          "A propos de cette section",
          "Découverte de l'asset store et de ProBuilder",
          "La physique avec Unity",
          "Comprendre les prefabs",
          "Concevoir une interface utilisateur (UI)",
          "Les Starter Assets d'Unity (Remplacent les standards assets)"
        ],
        "Initiation à la programmation C#": [
          "Bien configurer visual studio (ou VS Code) pour l'auto complétion + coloration.",
          "Découverte de C#",
          "Gestion des entrées clavier/souris avec C#",
          "Avant d'aller plus loin dans le cours",
          "Exercice de codage C# : Testez vos connaissances",
          "Solution de l'exercice de codage précédent.",
          "Encore un peu de C#, plus de pratique et \"mini Minecraft\" sous Unity",
          "Présentation de Visual Studio 2022 et de son auto-complétions intelligente",
          "Avoir plusieurs versions de visual studio en parallèle."
        ],
        "Vidéos complémentaires C# : Pour avoir les bonnes bases en programmation": [
          "Présentation de cette section complémentaire (optionnelle) sur le langage C#",
          "Découvrir le langage C#",
          "Les variables en programmation",
          "Les conditions en programmation",
          "Les boucles for et while",
          "Les tableaux pour stocker plusieurs valeurs d'un même type",
          "Les fonctions simples",
          "Plus loin avec les fonctions en C#",
          "Utiliser clavier et souris pour agir sur le jeu",
          "Exercice de codage : Testez vos connaissances en C#"
        ]
      },
      "requirements": [
        "Avoir la motivation pour créer des jeux",
        "Un ordinateur avec accès internet",
        "Avoir envie de créer des jeux vidéo",
        "Être passionné par l'informatique",
        "Vouloir apprendre avec un expert reconnu",
        "Avoir envie d'apprendre au travers d'exemples concrets"
      ],
      "description": "Nouveau : Retrouvez mon autre formation complémentaire \"Unity 6 par la pratique : Le cours ultime TOUT en 1\" pour encore plus de projets.\n\nCeci n'est pas juste une formation développement de jeux vidéo avec Unity, c'est aussi un formateur qui vous apprendra les bonnes pratiques dès le départ. J'ai travaillé avec plusieurs éditeurs de jeux mobiles du top 10. Mes jeux ont dépassé les 10 millions de téléchargements en cumulé. J'ai également été consultant Unity pour des multinationales ou boîtes du CAC 40 comme Thales, Amadeus, Airbus, Capgemini, Orange... Je suis également auteur d'une dizaine de livres sur le développement de jeux vidéo. La description d'un cours peut être copiée, mais pas le CV de votre formateur ;-) Expert depuis plus de 15 ans et développeur de jeux certifié, je vous révèlerai mes secrets de fabrication pour vous aider à atteindre la perfection. Je serai avec vous (Groupe de discussion privé) pour vous accompagner dans votre apprentissage.\n\n\nRejoignez cette formation certifiante sur le développement de jeux avec Unity et C# ! Il s'agit d'un cours ultra complet et détaillé avec plus de 100 heures de vidéos ! Avec cette formation, vous maîtriserez le développement de jeux 3D, Unity 6 et C# en créant plus de 15 projets concrets. C'est le cours qui fera de vous un développeur de jeux vidéo.\nVous souhaitez apprendre à utiliser Unity pour créer des jeux, migrer depuis un autre moteur ou vivre de votre passion ? Cette formation est faite pour vous ! Nous allons voir comment créer des jeux avec Unity et couvrirons tous les aspects de A à Z, sans prérequis.\nCette formation complète mise à jour pour Unity6 vous permettra d'apprendre à créer des jeux 3D avec le langage de programmation C#. Vous apprendrez par la pratique en développant un projet concret.\nNotre fil rouge sera la création d'un jeu de plateforme/aventure 3D (Premier gros projet), suivi de nombreux autres projets pour pratiquer encore plus. Nous suivrons également les bonnes pratiques pour aboutir à un projet de qualité professionnelle. Nous irons jusqu'à la publication de notre jeu en ligne.\n\nEn tant qu'expert certifié Unity et formateur depuis plus de 15 ans, je vous transmettrai les techniques essentielles pour créer des jeux 3D tels que :\n\nImporter et réutiliser des assets (modèles 3D, textures, sons etc.)\nMettre en place de la physique dans vos jeux\nConcevoir des interfaces utilisateur\nProgrammer avec le langage C#\nCréer un prototype avant le développement du projet\nParamétrer la lumière et l'éclairage\nAméliorer les graphismes avec le post-processing\nAnimer les objets et personnages\nGérer les collisions et déclencher des événements\nCréer des interactions entre les objets du jeu\nUtiliser les caméras et ajouter des effets visuels\nCoder toutes les fonctionnalités d'un jeu de plateforme\nCombattre des ennemis et les repérer sur une minimap\nProgrammer une intelligence artificielle complète\nMettre en place des objectifs/missions\nSauvegarder des données en mémoire\nLa mise en réseau / multi-joueurs\nCompiler et distribuer votre jeu\nUne vingtaine de projets vous attendent afin de vous former par la pratique sur des exemples concrets (voir détail plus bas).\nIl ne s'agit ici que de quelques exemples mais ce cours est extrêmement riche en contenu, je vous invite à consulter le plan du cours, les avis des internautes ainsi que les vidéos d'exemple afin de vous faire une idée encore plus précise du contenu immense de cette formation.\n\nVous aurez un accès à vie et en illimité aux vidéos. Vous apprendrez à créer des jeux Desktop ou mobile. Vous aurez accès à des exercices, quizz, conseils, astuces, au Discord etc.\n\nAlors n'attendez plus, lancez vous et devenez développeur de jeu indépendant pour vivre de votre passion.\nObtenez votre certification de réussite et décrochez un emploi dans le secteur du développement de jeux vidéo !\n\n\n* MISE A JOUR MASSIVE *\nDécouvrez tous les nouveaux projets pour devenir un expert absolu avec Unity 6 ! Voici quelques exemples de projets ajoutés :\n\nUn jeu de plateforme/aventure style Mario 3D\nUn jeu de tir à la première personne (FPS 3D)\nUn jeu de sport (Mini golf 3D) pour Mobile\nUn jeu en réalité virtuelle\nUn jeu en réalité augmentée\nDes jeux de société 2D & 3D\nDes jeux d'arcade 2D & 3D\nUn jeu type survival-horror en 3D\nUn Tower Defence\nUn city builder / construction / tycoon\nDes jeux d'aventure en Pixel Art\nDes jeux multi-joueurs (en ligne / en local / contre des IA)\nDévelopper des algorithmes d'intelligence artificielle\n\nCette formation évolue et continuera d'évoluer. J'ajouterai du contenu et je réaliserai des vidéos selon vos demandes. Ma formation est bien plus qu'un simple cours. Vous apprendrez le game design, vous pratiquerez avec des exercices de codage, vous développerez des projets concrets, vous échangerez avec les autres membres du Discord pour travailler ensemble, vous apprendrez avec un expert reconnu.\n\nA l'issu de ce cours vous recevrez une certification qui témoignera de vos compétences. En plus de ce bout de papier, vous aurez une vingtaine de projets de jeux à ajouter à votre CV afin de convaincre les recruteurs. Ma formation a permis de former des développeurs qui travaillent pour les plus grands studios de jeux vidéo alors pourquoi pas vous ?\nRejoignez l'aventure et lancez vous dans l'apprentissage de Unity avec ce guide ultime !",
      "target_audience": [
        "Les développeurs qui souhaitent s'orienter vers Unity",
        "Les débutants qui souhaitent découvrir le monde de la création de jeux",
        "Les passionnés de jeux vidéo",
        "Les internautes exigeants qui souhaitent suivre une formation dispensée par un expert",
        "Si votre objectif est d'obtenir un certificat de formation Unity",
        "Les professionnels qui veulent se perfectionner sur Unity",
        "Les apprenants qui suivent mon cours sont aussi bien des débutants que des développeurs professionnels travaillant déjà sur des jeux AAA, vous êtes aussi le bienvenu.",
        "Ceux qui veulent obtenir une certification",
        "Ceux qui veulent se créer un vrai portfolio"
      ]
    },
    {
      "title": "Programa tus Primeros Juegos HTML5 con JavaScript",
      "url": "https://www.udemy.com/course/programa-tus-primeros-juegos-html5-con-javascript/",
      "bio": "Empieza a programar desde el primer minuto y desde cero: no requiere ningún software especial",
      "objectives": [
        "Los elementos básicos de la programación: variables, bucles, condiciones y funciones.",
        "Comprender el proceso de programación de videojuegos 2D clásicos",
        "Trabajar con programación orientada a objetos (a nivel básico)",
        "Crear contenido visual usando la etiqueta Canvas de HTML5",
        "Lectura de ratón y teclado para el control de juego",
        "Cargar gráficos y animaciones a partir de Tilesets",
        "Crear escenarios 2D basados en matrices",
        "Comprender la lógica de juego para crear objetos y enemigos",
        "Crear un motor físico 2D sencillo, sin librerías, para un juego de plataformas",
        "Guardar datos de la partida y puntuaciones en la memoria del navegador",
        "Cargar música y efectos de sonido usando librerías externas",
        "Crear tres juegos clásicos paso a paso: Dungeon Crawler, Tetris y Plataformas"
      ],
      "course_content": {
        "Introducción": [
          "Editores de código"
        ],
        "Estructuras básicas": [
          "Estructura HTML",
          "Las Variables",
          "Las Funciones (I)",
          "Las Funciones (II) - Parámetros de Salida",
          "Condiciones if/else (I)",
          "Condiciones if/else (II)",
          "Condiciones if/else (III)",
          "Condiciones switch/case",
          "Bucle For",
          "Bucle Do/While"
        ],
        "Introducción a estructuras más complejas": [
          "El Bucle principal del Juego",
          "Lectura del Teclado",
          "Lectura del Ratón",
          "Los Objetos",
          "El Canvas (I) La pantalla de Juego",
          "El Canvas (II) La pantalla de Juego",
          "Arrays",
          "El Tablero de Juego"
        ],
        "Tu primer juego: La Mazmorra": [
          "La Mazmorra (I) Tablero y Colisiones",
          "La Mazmorra (II) Lógica de Juego",
          "La Mazmorra (III) Gráficos, Tileset y Animaciones"
        ],
        "Tu segundo juego: Tetris": [
          "Tetris (I) Preparación del Juego",
          "Tetris (II) Las Piezas",
          "Tetris (III) Los Márgenes del Tablero",
          "Tetris (IV) Rotación y Caída de las Piezas",
          "Tetris (V) Colocación de las Piezas",
          "Tetris (VI) Limpieza de Filas"
        ],
        "Mejorando los Juegos": [
          "Creación de Cámaras",
          "Añadir Música y Efectos de sonido FX",
          "Guardar la Partida y la Puntuación"
        ],
        "Tu tercer Juego: Plataformas": [
          "Plataformas (I) Crea tu propio Motor Físico",
          "Plataformas (II) Añadiendo Fricción",
          "Plataformas (III) Colisiones",
          "BONUS - Plataformas (IV) Editor de Niveles",
          "Despedida"
        ]
      },
      "requirements": [
        "No se requieren conocimientos previos de programación",
        "Solo se necesita un navegador web como Google Chrome y un editor de texto plano como el Bloc de notas o Atom (ambos gratuitos)",
        "Programa en cualquier laptop o PC, sin importar ni el Sistema operativo ni la potencia"
      ],
      "description": "En este curso te ayudaré a iniciarte en el apasionante mundo de la programación de videojuegos, comenzando desde la base, para que en pocos días puedas empezar a crear tus primeros juegos de estilo retro. Durante el curso podrás seguir las sesiones en vídeo, paso a paso y también consultar mi código para probarlo en tu propio PC y que así nunca te atasques durante el proceso.\nLos dos primeros módulos te ayudarán a obtener la base necesaria en programación, siempre utilizando como ejemplo el mundo de los videojuegos, para que te resulte entretenido, mientras que a partir del tercer módulo empezarás a programar videojuegos reales.\nEn la documentación que acompaña a las sesiones se incluyen apuntes y ejercicios para que puedas repasar y continuar perfeccionando tus habilidades en esta maravillosa disciplina.",
      "target_audience": [
        "Aquellas personas que deseen conocer cómo se programan los videojuegos y quieran obtener una base sólida sobre la que seguir aprendiendo."
      ]
    },
    {
      "title": "Krump Game Maker",
      "url": "https://www.udemy.com/course/krumpgame/",
      "bio": "Build Your Own Krump Rhythm AR Game from Scratch",
      "objectives": [],
      "course_content": {
        "Spatial Design": [
          "Krump Kidz AR",
          "Bezi & Figma"
        ],
        "Krump Intellectual Property": [
          "Story Protocol"
        ],
        "Generative AI": [
          "Meshy AI",
          "DeepMotion",
          "Inworld AI"
        ],
        "Developer Handoff": [
          "Unity"
        ],
        "Krump Metaverse": [
          "Virtway"
        ],
        "Video Game Company": [
          "KrumpKraft Studios"
        ]
      },
      "requirements": [
        "No game programming experience needed. You will learn everything you need to know"
      ],
      "description": "Dive into the electrifying world of Krump dance and cutting-edge game development with \"Krump Game Maker.\" This comprehensive course guides you through creating your own Krump-inspired Augmented Reality (AR) rhythm game from the ground up.\n\n\nIn this hands-on course, you'll:\n\n\n• Master Bezi to build the core of your Krump AR game\n• Design immersive 3D environments using Bezi and integrate them with Unity\n• Craft stunning visuals with Figma and transform 2D art into 3D assets using Meshy\n• Bring Krump moves to life with AI-powered animations via SayMotion\n• Protect your creative work by minting IP NFTs through Story Protocol\n• Integrate AI chatbots as in-game Krump instructors using Inworld AI\n• Set up blockchain interactions with Metamask and Sepolia test tokens\n• Customise your metaverse space with Virtway\n\n\n\n\nBy the end of this course, you'll have created a unique, fully-functional Krump rhythm AR game that blends authentic dance moves, music, and augmented reality. Whether you're a game developer, a Krump enthusiast, or an aspiring AR creator, this course offers a unique opportunity to expand your skills and create an engaging, cutting-edge game experience.\n\n\nNo prior Krump knowledge is required, but basic familiarity with game development concepts will be helpful. Get ready to step into the world of Krump and push the boundaries of AR game creation!",
      "target_audience": [
        "Krump dancers and their parents",
        "Dance enthusiasts",
        "Anyone who would like to create their own video game"
      ]
    },
    {
      "title": "Roblox Studio: Lerne deine eigenen Spiele zu entwickeln!",
      "url": "https://www.udemy.com/course/roblox-studio-entwickel-deine-eigenen-spiele/",
      "bio": "Der Einstieg in die Spieleentwicklung leicht gemacht!",
      "objectives": [
        "Du lernst wie du dein eigenes Roblox Spiel entwickelst und veröffentlichst.",
        "Du erlangst ein Verständnis der Programmiersprache Lua, zum Entwickeln von Roblox Titeln.",
        "Du baust dir allgemeine Programmierkenntnisse auf und kannst diese anschließend selbstständig anwenden.",
        "Du lernst das Spawnen, Bewegen und Verändern verschiedener Objekte in der Spielwelt, abhängig von verschiedenen Events.",
        "Du erstellst deine eigenen Spielerstatistiken und deine eigene Spielwährung und Erfolge.",
        "Du speicherst jegliche Spielerdaten, sodass diese nach dem Ausloggen nicht verloren gehen.",
        "Du erarbeitest dir ein weitreichendes Wissen, um zukünftig auch einfach auf andere Programmiersprachen umsteigen zu können.",
        "Du lernst mit dem Roblox Studio umzugehen, Blöcke zu skalieren und zu gruppieren.",
        "Du kannst dir mit Hilfe der Toolbox eigene Spielwelten einfach und schnell, mit Hilfe von Community-Objekten, erstellen.",
        "Du lernst wie du dein Spiel von Anfang an testest, Fehler findest und wie du sie schnell und unkompliziert bereinigst.",
        "Ich zeige dir außerdem wie du mit deinem Spielinhalt ROBUX verdienen kannst."
      ],
      "course_content": {
        "Einführung, Projekterstellung, Übersicht über Roblox Studio": [
          "Intro - Was dich erwartet",
          "Erster Start, hilfreiche Internetseite",
          "Projekterstellung, erste Übersicht über Roblox Studio",
          "Dark Theme & Light Theme",
          "Tastenkürzel einstellen",
          "Teams sichtbar machen",
          "Mit Freunden Spiele entwickeln - Team Create"
        ],
        "Lua Programmierung I": [
          "Erstes Script - Print Befehl",
          "Variablen I",
          "Variablen II - Globale Variablen",
          "Datentypen",
          "Eltern-Kind Beziehung von Objekten",
          "Bedingungen I - IF THEN ELSE END",
          "Bedingungen II - Anwendung mit Objekten",
          "Relationale und Logische Operatoren",
          "Tables I - Grundlagen",
          "Tables II - Objekte speichern",
          "Schleifen I - While Grundlagen",
          "Schleifen II - While mit Objekten und Tables",
          "Schleifen III - For",
          "Nützliche vordefinierte Funktionen in Roblox I",
          "Nützliche vordefinierte Funktionen in Roblox II",
          "Error Handling I - Fehler im Code verhindern",
          "Übungsaufgabe Tanzfläche - ( Ende von Lua Programmierung I )"
        ],
        "Umgang mit Roblox Studio": [
          "Explorer",
          "Bausystem",
          "Toolbox & Sicherheitsvorkehrung beim Importieren fremder Inhalte",
          "Terrain erstellen",
          "Benutzeroberfläche I - GUI basics",
          "Animationen I - Erstellen"
        ],
        "Lua Programmierung II": [
          "Vektoren I - Theorie",
          "Vektoren II - Praxisbeispiel",
          "CFrames - Objekte und Spieler teleportieren",
          "Eigene Funktionen I - Aufbau",
          "Eigene Funktionen II - Return und \"Scope\"",
          "Events I - Berührung von Objekten",
          "Events II - Anklicken von Objekten",
          "Leaderstats - Währung einfügen",
          "Teams",
          "Eigene Events I - Server zu Client Kommunikation",
          "Eigene Events II - Client zu Server Kommunikation und \"FireAllClients\"",
          "Animationen II - Coden",
          "Sound - Münze spielt Sound beim Einsammeln",
          "Physische Bewegungsanimation - Tür erstellen",
          "Tools",
          "Error Handling II - Fehler in Funktionen abfangen",
          "Data Stores I - Spielerdaten laden",
          "Data Stores II - Spielerdaten speichern",
          "ROBUX verdienen I - GamePassPurchase",
          "ROBUX verdienen II - ProductPurchase"
        ],
        "Einen eigenen Tycoon entwickeln": [
          "Tycoon Projekt Vorstellung",
          "Struktur & Leaderstats erstellen",
          "Team Erstellung & Zuweisung",
          "Kauffläche & der Spawned Ordner",
          "Progress Ordner Struktur & Objektreferenzen",
          "Schreibtisch & Script zum (Spiel-)Geld generieren",
          "Nichtegekaufte Objekte zu beginn verstecken",
          "Kauffunktion für Buttons",
          "Temporäres Geld aufsammeln und anzeigen (Money-Collector)",
          "Tycoon zurücksetzen und neu laden",
          "Tycoon-Stats ingame speichern",
          "Tycoon-Stats online speichern"
        ],
        "Materialien": [
          "Verwendete Materialien"
        ],
        "Spiel veröffentlichen - Abschluss": [
          "Thumbnail & private Server einstellen",
          "ROBLOX Spiel veröffentlichen"
        ]
      },
      "requirements": [
        "einen PC mit Internetverbindung",
        "einen Roblox Account",
        "Motivation :) !"
      ],
      "description": "In diesem Kurs lernst du alles, was du benötigst, um ein eigenes Spiel in Roblox zu entwickeln!\n\n\nIch zeige dir, wie du dein Projekt erstellst, wie du mit Roblox Studio umgehst und wie du deine Spielwelt, durch die Programmiersprache Lua, zum Leben erweckst!\nNach diesem Kurs kannst du Objekte während des Spiels verändern, Spielprozesse laufen lassen und den Fortschritt deiner Spieler speichern.\nMit hilfreichen Tipps und ein paar von mir erstellten zusätzlichen Inhalten, sicherst du deine Spielwelt vor Fremdeinwirkung.\n\n\nWährend des Kurses erhältst du eine vollständige Einführung in die Lua Programmierung und nutzt dein gelerntes Wissen anschließend, um direkt mit diesem Kurs parallel ein Spiel zu entwickeln.\nNeben einer ausführlichen Spielprogrammierung gehe ich auch noch auf beliebte Konzepte anderer Genres ein, sodass du erfolgreich deine eigene Spielidee umsetzen kannst.\n\n\nMeinen Code darfst du ohne Probleme selbst in deinen Spielen verwenden und weiterentwickeln.\nHast du dein eigenes Spiel erfolgreich abgeschlossen? Zeig es mir! Ich freue mich jetzt schon darauf, das Resultat zu sehen.\nMelde dich dazu entweder direkt hier über Udemy, oder in meiner Roblox Gruppe \"YB Roblox Scripter - Entwickel dein eigenes Spiel!\", bei mir.\n\n\nBei Fragen kannst du dich gerne an mich wenden und ich versuche dir bei deinem Problem zu helfen.\nFür diesen Kurs sind keine Vorkenntnisse nötig. Alles, was du benötigst, ist ein Computer und einen Roblox Account.\n\n\nStarte jetzt in die erste Lektion und verwirkliche dir deinen Traum, dein eigenes Spiel zu entwickeln!",
      "target_audience": [
        "Der Kurs richtet sich an interessierte Neulinge, welche schon immer mal ihr eigenes Spiel programmieren wollten.",
        "Du benötigst keine Lua-Vorkenntnisse. Jedoch wird dir der Kurs mit allgemeinen Programmierkenntnissen einfacher fallen."
      ]
    },
    {
      "title": "作って覚えるアンリアルエンジン【Unreal Engine 4】～ダンジョンゲーム編～",
      "url": "https://www.udemy.com/course/unreal-engine-4-award/",
      "bio": "このコースはUnreal Engine 4（UE4）を使って、ゼロからゲームを作ります。 ちょっとかわいい（？）アワード博士があやしい地下遺跡を探索するダンジョンゲームを作りながら ゲーム制作の流れを学んでいきましょう！",
      "objectives": [
        "Unreal Engine 4（UE4）の主要機能・基本操作を理解できる。",
        "Unreal Engine 4（UE4）を用いたゲーム制作の流れを理解できる。",
        "Unreal Engine 4（UE4）を使って、ゲームを作ることができるようになる。"
      ],
      "course_content": {
        "Introduction": [
          "このコースの説明＆自己紹介"
        ],
        "いざ！ゲーム開発の旅へ！": [
          "インストールについて",
          "ランチャーについて",
          "新規プロジェクト作成",
          "エディタの基本操作",
          "アクタのトランスフォーム",
          "インポート",
          "マテリアル～エディタについて～",
          "マテリアル～ベースカラー～",
          "マテリアル～メタリック、ラフネス～",
          "マテリアル～テクスチャ～",
          "レベルデザイン",
          "コリジョン",
          "ブループリント～レベルブループリント～",
          "ブループリント～クラスブループリント～",
          "マテリアルインスタンス～定数～",
          "アクタの移動～絶対座標（World）～",
          "アクタの移動～相対座標（Relative）～",
          "GameModeとPlayerController",
          "キャラクター操作",
          "カメラ～ロール・ピッチ・ヨー～",
          "アニメーションブループリント",
          "変数",
          "ボリューム～Lightmass・PostProcess～",
          "ライトの種類",
          "パーティクル～マテリアルのエミッシブカラー～",
          "パーティクル～マテリアルの四則演算～",
          "パーティクル～炎・カスケード～",
          "パーティクル～炎・カーブエディタ～",
          "パーティクル～火花・煙～",
          "敵の作成",
          "コリジョンの種類",
          "ダメージ処理とキャスト",
          "生と死",
          "物理シミュレーション～Ragdoll化～",
          "物理シミュレーション～PhysicsAsset～",
          "罠の作成～タイムライン～",
          "罠の作成～関数と関数ライブラリ～",
          "罠の作成～OneMinus・Clamp・Lerp～",
          "罠の作成～ConstructionScript～",
          "罠の作成～Pivot・AddImpuls～",
          "アイテムの作成～Fresnel・Component～",
          "アイテムの作成～マテリアル関数～",
          "アイテムの作成～PickUp～",
          "スタート地点とゴール地点",
          "BranchとParticleParameter",
          "遷移～レベルの切り替え～",
          "遷移～サブレベルの切り替え～",
          "GameInstance",
          "勝利と敗北",
          "パーティクル～紙吹雪～",
          "文字列",
          "UI～UIの表示～",
          "UI～Start画面の作成～",
          "UI～End画面の作成～",
          "UI～MipMapとプロパティマトリクス～",
          "UI～Animation～",
          "ライフのロジック作成～Sequence～",
          "UI～バインド・Select・純粋関数～",
          "アイテムのロジック作成～剰余～",
          "タイムのロジック作成～slomoコマンド～",
          "ステージ数のロジック作成",
          "UI～Loading画面の作成～",
          "Loadingのロジック作成",
          "スコア～UI画面の作成～",
          "スコア～配列・Loop・AddChild～",
          "スコア～SaveとLoad～",
          "スコア～FormatText～",
          "スコア～構造体～",
          "スコア～ソート機能～",
          "Audio～SoundWave～",
          "Audio～ボタン音とBGM～",
          "Audio～リスナーの位置～",
          "Audio～SoundCueと足音～",
          "Audio～SpawnSound2D・Mixer～",
          "Tutorialの作成～ゲームの一時停止～",
          "StartupMovie～StandaloneGame～",
          "シーケンサー～スタジオ作り・Reflection～",
          "シーケンサー～CineCameraActorと基本操作～",
          "シーケンサー～Animation・Fade～",
          "パッケージ化"
        ]
      },
      "requirements": [
        "UE4をインストールできるPC。",
        "動画ではWindows10で作業していますが、学習自体はMacOSでも問題ありません。",
        "ソフトを購入する必要はありません （UE4は無料でダウンロード頂けます。）",
        "「ゲーム」を丸ごと1本自分の力だけで作りたいという情熱だけ持ってきて下さい。"
      ],
      "description": "このコースは、UE4でダンジョンゲームを制作することでゲーム制作の流れを学べます。\nゲーム制作に必要な素材はあらかじめ用意してありますが、UE4はバージョンアップの頻度が高いので講座を受ける際は必ずバージョン（動画内では4.17）を合わせてご利用ください。\nステージは3つになりますが、DrAwardがどんなゲームかプレイできるよう、Introductionからゲーム（Windows用）をダウンロードできるようにもしておきました。\nCG？プログラム？業界の基礎知識？そんなもの必要ありません。\n最初のインストールから最後のゲームのパッケージ化まで私が丁寧に解説します。\n必要なのは「ゲームを１つ、最後まで作りたい！」という情熱だけです！\nレッスンの数と総時間を見て下さい。長い旅になります。\nしかしその旅が終わる頃にはDrAwardという1本のゲームがあなたの財産として手元に残ります。\nそしてこう思うでしょう。もう1本、今度は自分だけで自分のゲームを作ってみようと。\nさぁ！ここまで読み進めて下さった方であれば準備は出来ているはずです。\nアワード博士と一緒に冒険の旅に出かけましょう！！\n【追記（2022/4/6）】\n※UE5がリリースされました。\nこちらの講座を修了することでUE5での開発に役立つスキルが身に付くことは間違いありませんが、こちらの講座はUE5でまだ作成していないのでUE5に関するご質問は受け付けておりません。\n必ずバージョンを講座と合わせての受講をお願い致します。",
      "target_audience": [
        "Unreal Engine 4（UE4）でプログラミングを学びたい方",
        "Unreal Engine 4（UE4）で起業したり、フリーランスとして仕事をしたい方",
        "Unreal Engine 4（UE4）でゲームを作りたい方",
        "Unreal Engine 4（UE4）で新しい収入源を得たい方",
        "Unreal Engine 4（UE4）で経済的自由を得たい方"
      ]
    },
    {
      "title": "【Unity C# ゲーム開発初心者レベルアップ】7つの2Dパズルゲームを作っておぼえる！UnityとC#講座",
      "url": "https://www.udemy.com/course/unity-777puzzle/",
      "bio": "2Dパズルゲームの作り方をレベル順に1レクチャー10分のハンズオンで解説→簡単な部分から進めていくので理解しやすい内容になっています！",
      "objectives": [
        "ゲーム開発におけるC#の基礎",
        "パズルゲームプログラミングの基礎",
        "汎用的なUnityのスキル",
        "ゲーム開発に必要な思考方法"
      ],
      "course_content": {
        "紹介": [
          "紹介",
          "Q&Aガイドライン",
          "コースの進め方",
          "リソース（サンプルプロジェクト）の開き方"
        ],
        "このコースで使うC#基礎おさらい": [
          "前提知識とコメントとログ",
          "よく使う型と変数",
          "変数の生存期間",
          "変数の代入(型キャスト)",
          "const(定数)",
          "enum(列挙型)",
          "コンソールログの使い方",
          "演算と演算子",
          "比較演算子",
          "if文",
          "switch文",
          "for文",
          "while文",
          "1次元配列",
          "2次元配列",
          "List",
          "13.Listの応用",
          "Dictionary",
          "foreachと配列関係まとめ",
          "関数入門①",
          "関数入門②",
          "クラス入門①",
          "クラス入門②",
          "スクリプトからコンポーネントへアクセス",
          "自作クラスへのアクセス方法",
          "アクセスレベルについて",
          "3と5の倍数で文字を表示する",
          "AudioSource(サウンド)の操作①",
          "23-1.AudioSource(サウンド)の操作②"
        ],
        "このコースで必要なC#テクニック": [
          "コンポーネント有効化/無効化",
          "BoxCollider2DのisTriggerについて"
        ],
        "【Lv1】シンプルパズルゲーム": [
          "#1プロジェクト作成",
          "#2ピース初期化",
          "#3ピース選択",
          "#4ピース入れかえとクリア判定"
        ],
        "【Lv2】スライドパズルゲーム（15パズルゲーム）": [
          "#1プロジェクト作成",
          "#2シーンディレクター作成",
          "#3ピースを一度だけシャッフルする",
          "#4ピースを入れかえる",
          "#5クリア判定"
        ],
        "【Lv3】スイカゲーム風マージパズルゲーム": [
          "#1プロジェクト作成",
          "#2スクリプト作成",
          "#3アイテム生成",
          "#4アイテム移動",
          "#5アイテム合体",
          "#6サウンド演出、スコア表示とゲームオーバー"
        ],
        "【Lv4】ツムツム風セイムパズルゲーム（さめがめ）": [
          "#1プロジェクト作成",
          "#2アイテムとUI作成",
          "#3シーン初期化",
          "#4タッチでアイテム削除",
          "#5連結したアイテムを削除",
          "#6サウンド演出、ゲームリザルトと連鎖ボーナス",
          "#7ツムツム風アレンジ"
        ],
        "【Lv5】テトリス風落ちものパズルゲーム": [
          "#1プロジェクト作成",
          "#2ブロック作成",
          "#3ブロックを動かす",
          "#4ブロック移動制御",
          "#5ブロック生成",
          "#6ブロック同士の当たり判定",
          "#7揃ったラインを消す",
          "#8ゲームの難易度と終了条件",
          "#9サウンド演出"
        ],
        "【Lv6】ぷよぷよ風落ちものパズルゲーム": [
          "#1プロジェクト作成",
          "#2タイル落下",
          "#3連結したアイテムを削除①",
          "#4連結したアイテムを削除②",
          "#5サウンド演出"
        ],
        "【Lv7】キャンディークラッシュ風マッチ3パズル": [
          "#1プロジェクト作成",
          "#2スクリプト作成",
          "#3タイルを1つだけ生成",
          "#4タイルの移動制御",
          "#5複数のタイルを生成",
          "#6ゲームモード定義",
          "#7タイル交換下準備",
          "#8タイル交換",
          "#9タイルを戻す",
          "#10タイル削除①",
          "#11 タイル削除②",
          "#12タイル落下",
          "#13モード遷移",
          "#14スコアとコンボ",
          "#15詰み状態判別",
          "#16ゲームリザルト",
          "#17サウンド演出"
        ]
      },
      "requirements": [
        "C#を学習する意欲のある方",
        "パズルゲームプログラミングの実例を学びたい方",
        "ゲーム制作スキルを学びたい方",
        "脱入門レベルを目指している",
        "パソコンの基本的な操作"
      ],
      "description": "7つの2Dパズルゲーム制作を通して、汎用的なパズルゲームのプログラミングスキルを習得しましょう！\n制作したゲームはそれぞれ独立して遊ぶことはもちろん、皆さんのオリジナルゲームに組み込む事もできます。\nパズルゲーム制作スキルの基礎となる部分がたくさん詰まっているので、ぜひこの機会にチャレンジしてみてください！\n\n\nつまづきやすい部分は資料付きで解説を入れたり、画面ズームを使って進めていくので挫折しにくい構成になっています。\n1レクチャーを10分程度にまとめたハンズオン形式となっているので\n毎日少しづつでも、動画でやっていることを真似するだけでもOKなので、効率的に学習できる内容となっています。\n\n\n今回の題材は7つのパズルゲーム\nまずは手始めに\nシンプルなパズルゲームのプログラミングから入門して\nスタンダードな15パズルゲーム\n話題のスイカゲーム風マージパズルゲーム\nツムツム風セイムパズルゲーム（さめがめ）\nテトリス風落ちものパズルゲーム\nぷよぷよ風落ちものパズルゲーム\nキャンディークラッシュ風マッチ3パズル\n\n\nといった有名パズルゲームを網羅した\nプログラミング手法、ロジックがこの教材のみで学習できる内容になっています。\nこの教材で幅広いゲーム開発の知識を手に入れましょう！\n\n\n入門→初心者→脱初心者→初級者→中級者の中で\n初心者のレベルアップ、ステップアップに該当するコースです。\n\n\nこちらのコースでは\nなるべくスクリプト（プログラミング）を利用して制作していくので\nアイデア次第で汎用的なパズルゲームを制作する知識も身につきます。\n\n\nまた、こちらのコースは日々頂いたレビューに対応しアップデートを行なっております。\nぜひ、コースに対するフィードバックをお寄せください。レビューの投稿をお待ちしております！",
      "target_audience": [
        "Unityでのゲーム開発に興味をお持ちの方",
        "ゲームプログラミングに興味をお持ちの初心者",
        "パズルゲームをプログラミングしてみたいUnity初心者"
      ]
    },
    {
      "title": "Aprenda Construct2 - Como criar um jogo de plataforma 2D",
      "url": "https://www.udemy.com/course/aprenda-construct2-como-criar-um-jogo-de-plataforma-2d/",
      "bio": "Aprenda como criar um jogo de plataforma 2D ao estilo Super Mario de uma maneira super fácil e divertida.",
      "objectives": [
        "Criar um jogo de plataforma 2D utilizando o Construct2",
        "Publicar o jogo na internet (site, dropbox ou google drive)",
        "Ganhar dinheiro com o jogo"
      ],
      "course_content": {
        "Familiarizando com o programa e sua características": [
          "Introdução",
          "Instalação do Construct2",
          "Download os gráficos para o jogo",
          "Criando o primeiro projeto",
          "Conhecendo o programa Construct2",
          "Eventos (Programação)",
          "Debugging - Encontrando erros",
          "Como exportar o jogo"
        ],
        "Começando o desenvolvimento do jogo": [
          "Visão Geral",
          "Adicionando layouts e imagens ao jogo",
          "Criando o cenário do jogo",
          "Criando o cenário do jogo PARTE 2",
          "Criando a interface do jogo",
          "Adicionando o herói do jogo",
          "Implementando as animações do herói",
          "Adicionando os inimigos",
          "Programando inteligência dos inimigos",
          "Programando a vida do herói",
          "Tela de Gameover",
          "Adicionando pontuação ao jogo",
          "Coletando as estrelas",
          "Expandindo o cenário",
          "Melhorando a inteligência dos inimigos",
          "Criando um ponto salvo (checkpoint)",
          "Tela de Pause",
          "Programando os botões",
          "Adicionando música e efeitos sonoros",
          "Tela Final",
          "Tela Final PARTE 2",
          "Programando os controles para mobile"
        ],
        "Exportando e publicando o jogo": [
          "Visão geral",
          "Comentando o código do jogo",
          "Exportando o jogo",
          "Colocando o jogo no seu site",
          "Colocando o jogo no Dropbox",
          "Colocando o jogo no Google Drive",
          "Publicando seu jogo na web",
          "Como ganhar dinheiro com seu jogo",
          "Revisão e Programação do próximo curso",
          "Aprenda como exportar seu jogo para mobile"
        ],
        "Extra - Respondendo a dúvidas": [
          "Como recuperar as estrelas",
          "Pegando vidas no jogo",
          "Onde encontrar gráficos para seu jogo",
          "Trabalhando com parallax no Construct2",
          "Como adicionar vários checkpoints no jogo",
          "Como fazer os inimigos pularem em tempos diferentes"
        ]
      },
      "requirements": [
        "Tudo vai ser explicado nas aulas. Desde a instalação do Construct2 até a exportação e publicação do jogo."
      ],
      "description": "Aprenda Construct2 - Como criar um jogo de plataforma 2D\nEsse é um curso completo de como criar um jogo de plataforma 2D.\nEsse curso é feito especialmente para iniciantes, ou seja, não é necessário nenhum conhecimento prévio em alguma linguagem de programação.\nTudo que você estiver assistindo nos vídeos será compartilhado com você por meio de links para download como os gráficos e códigos necessários para publicar o jogo.\nEsse não é um curso teórico cheio de ideias abstratas, mas sim um curso passo-a-passo do início ao fim de como criar um jogo de plataforma 2D. A explicação de cada aula é cuidadosamente detalhada para que você possa entender tudo o que está assistindo.\nEsse curso é excelente para quem está começando agora com o desenvolvimento de jogos para web, PC ou mobile. Ilustra perfeitamente como a ferramenta Construct2 poderá ser usada para criar qualquer tipo de jogo 2D.\nO curso é baseado em um projeto real em que você terá a oportunidade de criar exatamente o que está assistindo. Os vídeos não têm nada obscuro ou que foram pré-gravados onde coisas foram feitas de antemão.\nAo final do curso você terá toda a base necessária para criar um jogo de plataforma, publicá-lo na internet e ganhar dinheiro com o jogo.\nPotencialmente ao aprender a utilizar o Construct2, você poderá criar qualquer jogo 2D que tiver em mente.\nNo total o curso tem 7 horas de duração. Se você tiver tempo livre poderá fazer o curso do início ao fim em um fim de semana tranquilo.\nVantagens de se tornar um aluno\nAcesso vitalício ao curso: assista quando e quantas vezes quiser.\nDownload dos vídeos: através dos Apps Udemy para Android/iOS você pode fazer download dos vídeos e assisti-los offline.\nCertificado reconhecido: a Udemy oferece certificação de conclusão do curso, especificando o curso e a carga horária realizada.",
      "target_audience": [
        "Pessoas interessadas em aprender como utilizar o Construct2",
        "Pessoas interessadas em aprender como criar um jogo de plataforma",
        "Pessoas interessadas em ganhar dinheiro com jogos"
      ]
    },
    {
      "title": "Unreal engine 4.26: Curso completo (compatível com UE5)",
      "url": "https://www.udemy.com/course/unreal-engine-426-curso-completo-compativel-com-ue5/",
      "bio": "Elevando seu nível!",
      "objectives": [
        "Neste curso você aprenderá do zero a criar um game completo com toda estrutura necessária para isso, mesmo que nunca tenha usado a Unreal antes, com suporte.",
        "Serão 136 aulas com tempos variados. Com dedicação conseguirá termina-las em dois a três meses.",
        "Serão muitas informações neste curso e o aprendizado dependerá de sua dedicação.",
        "Neste curso criaremos um projeto juntos para aprendizado, ele será crucial para o aprendizado."
      ],
      "course_content": {
        "Primeiro contato.": [
          "Instalando os programas necessários. (Unreal/Blender/InfiniteBlade)",
          "Layout",
          "Conceitos básicos iniciais.",
          "Blender básico."
        ],
        "Conceitos básicos de material, textura e blueprint.": [
          "Material",
          "Texture",
          "Blueprint"
        ],
        "Mapas": [
          "Criando o mapa.",
          "Criando um material para landscape básico.",
          "Esculpindo o mapa.",
          "Importar, exportar e migrar.",
          "Build e game play."
        ],
        "Iluminação.": [
          "Tipos de luzes.",
          "Sky fog.",
          "Post Process Volume e Lightmass Volume"
        ],
        "Criando um mapa otimizado.": [
          "Adicionando Quixel",
          "Utilizando a função GrassType.",
          "Adicionando colisão.",
          "Criando um mapa para treino.",
          "Criando um mapa para treino parte 2",
          "Criando um tunel no Blender para usar no mapa.",
          "Otimizando o mapa.",
          "Otimizando o mapa parte 2.",
          "Otimizando o mapa parte 3"
        ],
        "Criando um menu.": [
          "Menu parte1",
          "Menu parte 2",
          "Menu parte 3",
          "Criando um menu pausa."
        ],
        "Outras Funcionalidades.": [
          "Adicionando áudio.",
          "Adicionando estrada.",
          "Adicionando Shake na tela. (Tremulo)",
          "Adicionando estrelas no céu.",
          "Inserindo um vídeo no game.",
          "Criando um Decal.",
          "Adicionando Wind (vento) na vegetação.",
          "Criando uma parede invisível.",
          "Cinematic."
        ],
        "Criação de personagem.": [
          "Importando do Mixamo.",
          "Criando a blueprint do personagem e adicionando câmera.",
          "Configurando botões de movimento.",
          "Criando blueprints do Swat.",
          "Baixado as animações de parado, andando e correndo IWR.",
          "Anime blueprint.",
          "Adicionando Blueprint Blend Space 1D.",
          "Adicionando blueprint de corrida.",
          "Baixando animações das armas.",
          "Numerando as animes.",
          "Criando Blend Space do Rifle.",
          "Criando a New State Rifle",
          "Adicionado botão de equipar e blueprint.",
          "Backup do projeto."
        ],
        "Adicionando arma ao player.": [
          "Baixando armas e adicionando blueprint.",
          "Adicionando Socket da arma.",
          "Anime Montage de pegar a arma.",
          "Adicionando New State Grab.",
          "Blueprint do socket Weapon Hand.",
          "Adicionando animação de atirando (Aim).",
          "Blueprint atirando (Fire).",
          "Ajustando arma, animação e backup.",
          "Adicionando animações do pack e Firing anime.",
          "Retarget do Anime Starter Pack.",
          "Blueprint de recarregar.",
          "Criando animação AimOffSet.",
          "Criando animação AimOffset parte 2.",
          "AimOffset Anim Grafic.",
          "AimOffset blueprint."
        ],
        "Projetil da arma.": [
          "Line Trace blueprint.",
          "Criando Projetil da arma AR4",
          "Projetil da arma AR4 parte 2.",
          "Projetil da arma AR4 parte 3",
          "Criando a mira da arma e adicionando sons de tiro e pegando arma.",
          "Adicionando animação de Reload."
        ]
      },
      "requirements": [
        "O projeto será criado em Blueprints e não precisa de conhecimento em programação C++, apenas um PC com placa de vídeo é recomendado."
      ],
      "description": "Neste curso você aprenderá do zero a criar um game completo com toda estrutura necessária para isso, mesmo que nunca tenha usado a Unreal antes, com suporte do professor.\nSerão 136 aulas com tempos variados. Com dedicação conseguirá termina-las em dois a três meses.\nVocê terá muitas informações neste curso e o aprendizado dependerá de sua dedicação.\nCriaremos um projeto juntos para aprendizado, ele será crucial para o aprendizado.\nO projeto será criado em Blueprints e não precisa de conhecimento em programação C++, apenas um PC com placa de vídeo é recomendado\nSe você sonha em criar seu próprio game, esse curso é para você. Aqui aprenderá a criar mapas otimizados, menus, trabalhar com áudio, iluminação, assets, cinematics, timeline, blueprints, Blender básico, criação de personagens e animações, renda extra com seus trabalhos e muito mais. Aprenda de um jeito fácil e eficaz.\nUnreal Engine é um motor de jogos da Epic Games usado em grandes lançamentos há mais de duas décadas. A tecnologia está confirmada nos futuros PES 2022 e Hellblade 2, e nas versões para Playstation 5 (PS5) e Xbox Series X de Fortnite e de Fortnite: Save the World, que usarão a Unreal Engine 5, com promessa de gráficos muito mais realistas. O motor Unreal é usado para agilizar o processo de desenvolvimento de games, mas também tem aparecido em produções cinematográficas que precisam de gráficos extremamente realistas.\nCurso compatível com UE5 para a grande maiorias das aulas!",
      "target_audience": [
        "Se você sonha em criar seu próprio game, esse curso é para você. Aqui aprenderá a criar mapas otimizados, menus, trabalhar com áudio, iluminação, assets, cinematics, timeline, blueprints, Blender, criação de personagens e animações, renda extra com seus trabalhos e muito mais.",
        "Desenvolvedores iniciantes e intermediários."
      ]
    },
    {
      "title": "Unity for Beginners: Crafting Creatures and 2D Worlds",
      "url": "https://www.udemy.com/course/unity-for-beginners-crafting-creatures-and-2d-worlds/",
      "bio": "Understand Sprites, Animations and Scripting to Make Your First Game",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Setup",
          "Importing Sprites and Textures",
          "Player Movement Script",
          "Using the New Input System",
          "Setting Up Animations",
          "Smooth Animations with Blend Trees",
          "Blocking Movement and Sprite Sorting",
          "What's Next?"
        ]
      },
      "requirements": [
        "No prior experience with Unity or game development is required — this course is designed for beginners!"
      ],
      "description": "Bring Enchanted 2D Worlds to Life — One Sprite at a Time! This beginner-friendly course is your ultimate guide to bringing your first game ideas to life. You’ll learn the essential Unity 2D techniques to make it all happen — in an easy-to-follow, hands-on format designed specifically for newcomers.\n\nWhat you’ll learn:\nImplement Unity’s new Input System in just a few lines of code, so your 4-directional characters move smoothly with modern controls.\nAnimate creatures with blend trees for seamless transitions between idle and walking animations in every direction.\nMaster Unity’s 2D physics engine by creating solid game objects your player can collide with and walk around, adding instant depth to your worlds.\nDraw and arrange trees, mushrooms, and plants so your game feels like a living, breathing fantasy forest.\nSet up advanced sorting and layering techniques, including custom transparency sorting, to place your player and obstacles visually in front or behind each other — perfect for top-down games.\nBuild reusable prefabs of your obstacles and creatures so you can populate your magical worlds quickly and consistently.\n-Along the way, you’ll also discover quick tips and tricks for tiling seamless backgrounds, setting up colliders that match your sprites perfectly, and creating polished, playable scenes that feel professional.\nWhether you’re completely new to Unity or looking to expand your 2D game dev toolkit, this course will give you the confidence and practical skills you need to craft your own charming, fantasy-inspired 2D worlds.\n\n\nJoin now and start building the enchanted adventures you’ve always imagined!",
      "target_audience": [
        "This course is perfect for beginners passionate about creating fantasy-inspired 2D games who want to learn Unity from scratch with hands-on, practical guidance."
      ]
    },
    {
      "title": "Introducción a C# para desarrolladores de videojuegos",
      "url": "https://www.udemy.com/course/c-sharp-desarrolladores-de-videojuegos/",
      "bio": "Consigue una comprensión básica del lenguaje de programación C#, un requisito indispensable para desarrollar videojuegos",
      "objectives": [
        "Declaración y uso de variables en C#.",
        "Creación de métodos y funciones en C#.",
        "Comprensión del uso de parámetros de entrada en métodos.",
        "ntroducción a la programación orientada a objetos.",
        "Toma de decisiones con operadores if, else y switch.",
        "Uso de colecciones como arrays, listas y diccionarios en C#.",
        "Iteración con bucles for, foreach y while.",
        "Uso de valores de retorno en métodos.",
        "Decisión entre el uso de clases y estructuras.",
        "Importancia de la encapsulación, herencia y polimorfismo."
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Conoce tu entorno de trabajo": [
          "¿Qué vas a aprender en este tema?",
          "Cómo descargar Unity",
          "¿Para qué sirve Unity HUB?",
          "Crear un nuevo proyecto en Unity",
          "Cómo usar C# en Unity",
          "Cómo usar Visual Studio para abrir fichero de código",
          "Errores comunes y sincronización de scripts",
          "Consultar la documentación y los recursos útiles de Unity"
        ],
        "Los bloques de LEGO de la programación": [
          "¿Qué vas a aprender en este tema?",
          "¿Qué son las variables?",
          "Cómo se declaran las variables",
          "Modificar el valor de las variables",
          "¿Qué son los métodos?",
          "Cómo se declaran los métodos",
          "¿Qué son las clases?",
          "Las clases son planos de trabajo",
          "Comentarios en tu código",
          "Juntando las piezas de lego",
          "Por qué algunos scripts se convierten en componentes: Monobehavior",
          "Comunicación entre clases"
        ],
        "Variables y tipos de datos": [
          "¿Qué vas a aprender en este tema?",
          "Convenciones de formato de código y estilo",
          "Depuración de código con Debug",
          "Declaración de variables",
          "Modificadores de acceso",
          "Tipos de Datos Básicos en C#",
          "Conversiones y Castings",
          "La palabra reservada var, otros tipos de datos y un primer resumen",
          "Cómo poner nombre a las variables",
          "Ámbito de visibilidad de una variable",
          "Aritmética de números en C#"
        ],
        "Los métodos": [
          "Qué son los métodos en programación",
          "Convenciones a la hora de crear métodos",
          "Parámetros de entrada de un método",
          "Valores de retorno de un método",
          "Guardar el valor retornado por un método",
          "Los métodos de la API de Unity"
        ],
        "Sentencias de control de flujo": [
          "¿Qué vas a aprender en este tema?",
          "Qué son las sentencias de control",
          "If y else",
          "El ejemplo de la llave",
          "El ejemplo del dinero",
          "Negar condiciones",
          "Condicionales anidados",
          "And y Or",
          "El ejemplo del tesoro",
          "Switch y case",
          "El ejemplo de la riqueza",
          "El ejemplo del dado de rol"
        ],
        "Colecciones de datos": [
          "Qué son los arrays",
          "El ejemplo de los arrays",
          "Qué son las listas",
          "El ejemplo de las listas",
          "Qué son los diccionarios",
          "El ejemplo de los diccionarios"
        ],
        "Iteraciones y bucles": [
          "Qué son los bucles",
          "El bucle for",
          "El ejemplo del bucle for",
          "El bucle foreach",
          "El ejemplo del bucle foreach",
          "El bucle while",
          "Acerca de los bucles infinitos"
        ],
        "Clases y Estructuras": [
          "¿Qué vas a aprender en este tema?",
          "La sintaxis de las clases",
          "Cómo declarar una clase",
          "Instanciar un objeto de una clase",
          "Propiedades de una clase",
          "El constructor de una clase",
          "Constructores con parámetros de entrada",
          "Los métodos de una clase",
          "La sintaxis de las estructuras",
          "Cómo declarar una estructura",
          "Tipos de datos por referencia",
          "Tipos de datos por valor"
        ],
        "Introducción a la programación orientada a objetos": [
          "Introducción a la programación orientada a objetos",
          "Enscapsulación",
          "Herencia",
          "Composición",
          "Polimorfismo",
          "El resumen de la programación orientada a objetos",
          "En Unity las componentes son clases"
        ]
      },
      "requirements": [
        "Tener un ordenador con conexión a internet y cualquier sistema operativo instalado.",
        "Tener conocimientos básicos de uso de un ordenador a nivel de usuario."
      ],
      "description": "¡Bienvenido al curso de introducción a la programación en C#! Este curso está diseñado para brindarte una base sólida en los conceptos esenciales de la programación, preparándote para avanzar en nuestro camino hacia el desarrollo de videojuegos con Unity.\nA lo largo del curso, exploraremos tanto la teoría como la práctica de los fundamentos de C#. Aprenderás sobre variables, métodos, operadores de decisión, colecciones, bucles y una introducción a la programación orientada a objetos. Estos conceptos serán aplicados en ejemplos prácticos, muchos de ellos relacionados con el desarrollo en Unity.\nProfundizaremos en temas clave de la programación orientada a objetos, como la diferencia entre clases y estructuras, herencia, polimorfismo, composición y encapsulación. Además, verás cómo estos principios se integran en el desarrollo de videojuegos con Unity.\nEste curso está diseñado para que primero entiendas los conceptos de programación a través de ejemplos del mundo real, luego puedas abstraer estos conceptos al mundo digital, y finalmente, los apliques mediante la escritura de código.\nPara consolidar tu aprendizaje, el curso incluye ejercicios prácticos y cuestionarios que te permitirán poner en práctica lo aprendido y reforzar tus conocimientos.\nAl finalizar el curso, recibirás un certificado en formato blockchain, verificando la finalización exitosa del curso. Este certificado es ideal para añadir a tu perfil de LinkedIn y demostrar tus nuevas habilidades en C#.\n¡Inscríbete ahora y comienza tu camino hacia la programación en C#, la puerta de entrada al emocionante mundo de la creación de videojuegos con Unity!\n¡Nos vemos en clase!",
      "target_audience": [
        "Estudiantes que deseen aprender los fundamentos de la programación con un lenguaje claro y accesible como C#.",
        "Aspirantes a desarrolladores de videojuegos que quieran crear sus propios juegos con Unity, pero aún necesitan adquirir conocimientos básicos de programación.",
        "¡Explora el potente lenguaje de programación C# que te abrirá las puertas al desarrollo de videojuegos en Unity!"
      ]
    },
    {
      "title": "Unity ile DOTS 1.0",
      "url": "https://www.udemy.com/course/tolga-karanlikoglu-unity-ile-dots-1-0/",
      "bio": "Unity Data Oriented Technology Stack Hakkında 14+ Saat Video İçeriği ve 3 Komple Proje!",
      "objectives": [
        "Unity'nin DOTS (Data Oriented Technology Stack) sistemini bütünüyle tanıyın",
        "Yeni nesil yüksek performanslı Unity uygulamaları geliştirin",
        "Unity'nin yakında duyuracağı tüm heyecan verici yeniliklere şimdiden hazır olun",
        "En önemlisi DOTS tufanı tüm Monobehavior'ları süpürmeden siz de çağdaş dünyada yerinizi alın"
      ],
      "course_content": {
        "Giriş": [
          "Kurs Hakkında",
          "Ben ve Size Sunabileceğim Diğer Şeyler",
          "Data Oriented Design Nedir?",
          "Object Oriented Programming ve Data Oriented Design Arasındaki Farklar Nelerdir?",
          "DOTS ile Hangi Tür Oyunlar Yapabiliriz?",
          "DOTS'un Temel Kavramları"
        ],
        "DOTS'un Temelleri": [
          "Başlamadan Önce Mutlaka Bilinmesi Gerekenler",
          "Gerekli Bileşenlerin Yüklenmesi",
          "Subscene Kavramı",
          "Data Modları",
          "Component Oluşturma",
          "Entity Oluşturma",
          "Sistem Kavramı ve Sistem Oluşturulması",
          "Sistemlerin Kullanımı",
          "Entity Manager ve Spawning",
          "Prefab Workflow",
          "Job System ve Burst",
          "Sistemlerin BurstCompile Desteğiyle Kullanımı",
          "EntityQueryBuilder",
          "Tag Kavramı",
          "Event System"
        ],
        "İleri Düzey Konular": [
          "Entity Command Buffer",
          "Dynamic Buffers",
          "Cleanup Bileşenleri (Eski Adıyla System State Bileşenleri)",
          "Paylaşımlı Bileşenler",
          "Profiler",
          "Sync Point Kavramı",
          "Blob Assets",
          "Component İçinde String Kullanımı"
        ],
        "Günlük Kullanım İçin Çeşitli Sistemler": [
          "Singleton Kullanımı",
          "Transform",
          "Input System",
          "Random",
          "Fizik",
          "Animasyon",
          "Terrain",
          "State Machine",
          "Kullanıcı Arabirimi (UI)",
          "Multiplayer"
        ],
        "Örnek Uygulama 1: Performans Ölçer Yapımı": [
          "MonoBehavior Tabanlı Projenin Yapımı",
          "ECS Tabanlı Projenin Yapımı",
          "MonoBehavior ve ECS Performanslarının Karşılaştırılması"
        ],
        "Örnek Uygulama 2: Tank Oyunu Yapımı": [
          "Oyunun Tanıtımı",
          "Oyunun Sistemleri ve Bileşenleri",
          "Gelir Sisteminin Yapımı",
          "UI Sisteminin Yapımı",
          "İnşa Sisteminin Yapımı",
          "Tank Yapımı",
          "Yapay Zeka Sisteminin Yapımı",
          "Savaş Sisteminin Yapımı",
          "ECS ile Yaptığımız Oyunu Bir Güzel Oynayalım :)",
          "Videolarda Anlatılan Unity Projesi ve Bu Projenin Açılması, Kullanılması"
        ],
        "Kapanış": [
          "Şimdi Ne Yapmalısınız?",
          "Teşekkürler!"
        ]
      },
      "requirements": [
        "Bu eğitim C# ve temel Unity script programlaması hakkında bilgi sahibi olmanızı gerektirir"
      ],
      "description": "Unity teknoloji ağacının en üst dalı, Unity'nin gelecekte çıkaracağı tüm yeniliklerin temeli, Unity'nin bütün yatırımlarını yönlendirdiği ana konu olan DOTS artık 1.0 stabil sürümüyle hayatımızda! Unity'nin geleceği Data Oriented Technology Stack, yani DOTS arkadaşlar. Eğer kariyerinizi Unity ile sürdürmek istiyorsanız bir noktada mutlaka DOTS'u öğrenmek zorunda kalacaksınız. O nedenle bunu ne kadar çabuk yaparsanız o kadar kârda olursunuz.\nHer ne kadar DOTS şu andaki 1.0 sürümünde henüz komple oyun projeleri için hazır olmasa da sizler gelecekte DOTS için hazır olmak zorunda kalacağınız için DOTS öğrenmeye şimdi başlamak en doğru zamandır! Kendinize yapabileceğiniz en büyük yatırımlardan biri DOTS'u öğrenmektir.\nBu kursta size A'dan Z'ye DOTS'un tüm temel kavramlarını üç komple proje eşliğinde sunuyorum. Bir projede aynı projenin hem MonoBehavior (şu anki Unity teknolojisi) hem de DOTS ile yapılmış halini; diğer projede ise komple DOTS ile yapılmış bir oyun projesini bulacaksınız. Bu projelerin sıfırdan nasıl yapıldığını gösteren videolarla birlikte kaynak kodlarını da eğitim içeriğiyle birlikte sizlere sunacağım.\nToplamda 14 saatten uzun video içeriği ve 3 komple projeyle birlikte DOTS'u öğrenmek için sizlere komple bir set hazırladım. Ayrıca ister yorumlarda, ister ücretsiz Discord sunucuma gelerek orada tüm sorularınızı yanıtlayıp detaylı açıklamaya ihtyiacç duyduğunuz kısımlarda size destek olmaktan memnuniyet duyacağım. Yine yorumlarda veya Discord sunucumda gelecekte çekilmesini istediğiniz video içerikleriyle ilgili olarak önerilerde bulunmanızdan da ayrıca memnuniyet duyacağım.",
      "target_audience": [
        "Unity ile programlama konusunda bilgi sahibi, oyun programlamasının geleceğini merak eden ve bu gelecekte yerini almak isteyen teknoloji meraklıları ve yazılım uzmanları"
      ]
    },
    {
      "title": "Unity3d遊戲設計使用C#",
      "url": "https://www.udemy.com/course/unity3dc/",
      "bio": "幫助您快速學習Unity3d遊戲設計程式設計",
      "objectives": [
        "基本的C#語法",
        "C#的物件導向",
        "Unity3d的API",
        "FPS遊戲",
        "2D遊戲"
      ],
      "course_content": {
        "資源下載與介紹": [
          "介紹",
          "遊戲資源下載",
          "Unity6資源載入修改"
        ],
        "Unity介面介紹": [
          "ch1_1開啟新專案",
          "ch1_2unity3d環境介紹",
          "ch1_3unity3d建立物件與父子關係",
          "ch1_4移除物件與建立空白物件",
          "ch1_5移動縮放旋轉",
          "ch1_6快捷鍵操作",
          "ch1_7tag與layer",
          "建立Script",
          "Prefabs"
        ],
        "C#語法基礎": [
          "ch2_1變數宣告",
          "ch2_2變數計算",
          "ch2_3比較",
          "ch2_4邏輯判斷式",
          "ch2_5for迴圈",
          "ch2_6while迴圈",
          "ch2_7陣列",
          "ch2_8方法",
          "ch2_9call_by_ref",
          "ch2_10類別",
          "ch2_11物件",
          "ch2_12封裝",
          "ch2_13封裝get與set",
          "ch2_14建構子(constructor)",
          "ch2_15結構(struct)",
          "ch2_16命名空間(namespace)",
          "ch2_17靜態與非靜態"
        ],
        "Unity常用類別與特性": [
          "Unity3d生命週期介紹",
          "Unity3d生命週期程式說明",
          "Vector_1(向量類介紹)",
          "Vector_2(向量類介紹)",
          "Vector_3(向量類介紹)",
          "time_簡介",
          "time_程式說明1",
          "time_程式說明2",
          "RigidbodyAnComponent_1(物理元件介紹)",
          "RigidbodyAnComponent_2(物理元件介紹)",
          "Transform_1(Transform物件常用方法介紹)",
          "Transform_2(Transform物件常用方法介紹)",
          "Quaternion(四元數常用方法介紹)",
          "lerp_簡介",
          "lerp_程式說明",
          "碰撞器(Collision)",
          "Raycast_1(射線用法介紹)",
          "Raycast_2(射線用法介紹)",
          "screen_to_ray(由滑鼠或手機螢幕發射線)",
          "message_1(物體間的訊息傳遞介紹)",
          "message_2(物體間的訊息傳遞介紹)",
          "event_1(事件使用方式)",
          "event_2(事件使用方式)",
          "invoke_簡介",
          "invoke_程式說明",
          "Coroutine_簡介",
          "Coroutine_程式說明1",
          "Coroutine_程式說明2"
        ],
        "3DShooter遊戲撰寫": [
          "環境佈署1",
          "環境佈署2目錄介紹",
          "環境佈署3-移除天空盒",
          "環境佈署4設定燈光",
          "環境佈署5-放置地板",
          "環境佈署6-加入Floor的Layer",
          "主角設定1-加入tag",
          "主角設定2-加入動畫",
          "主角設定3-動畫設定",
          "主角設定4-Death動畫設定",
          "主角設定5-綁定Rigibody",
          "主角設定6-建立PlayerMovement腳本_1",
          "主角設定7-建立PlayerMovement腳本_2",
          "主角設定8-建立PlayerMovement腳本_3",
          "主角設定9-修改Rigibody",
          "主角設定10-加入移動動畫腳本",
          "主角設定12-旋轉動畫腳本_1",
          "主角設定11-旋轉動畫腳本_2",
          "攝影機跟隨13_攝影機設定",
          "攝影機跟隨14_腳本撰寫",
          "敵人設置15_敵人配置1",
          "敵人設置16_敵人配置2",
          "敵人設置17_敵人配置3",
          "Navigation17_Navigation配置1",
          "Navigation18_Navigation配置2",
          "Navigation19_Navigation配置3",
          "Navigation20_Navigation配置4",
          "敵人動畫21_動畫配置1",
          "敵人動畫22_動畫配置2",
          "主角槍枝23_槍枝粒子系統",
          "主角槍枝24_LineRander設定1",
          "主角槍枝25_LineRander設定2",
          "主角射擊腳本26_加入屬性",
          "主角射擊腳本27_初始化屬性",
          "主角射擊腳本28_shoot方法1",
          "主角射擊腳本29_shoot方法2",
          "主角射擊腳本30_雷射槍特效隱藏",
          "血條UI31_血條UI_1",
          "血條UI32_血條UI_2",
          "血條UI33_血條UI_3",
          "血條UI34_血條UI_4",
          "血條UI35_血條UI_5",
          "血條UI36_血條UI_6",
          "血條程式碼37_血條程式碼_1",
          "血條程式碼38_血條程式碼_2",
          "血條程式碼39_血條程式碼_3",
          "血條程式碼40_血條程式碼_4",
          "血條程式碼41_血條程式碼_5",
          "UI錨點(小菊花)說明",
          "Player傷害特效42_傷害特效1",
          "Player傷害特效43_傷害特效2",
          "Player傷害特效44_傷害特效3",
          "Player傷害特效45_傷害特效4",
          "PlayerDeath程式46_PlayerDeath程式1",
          "PlayerDeath程式47_PlayerDeath程式2",
          "PlayerDeath程式48_PlayerDeath程式3",
          "PlayerDeath程式49_PlayerDeath程式4",
          "EnemyHealth50_Enemy傷害程式程式1",
          "EnemyHealth51_Enemy傷害程式程式2",
          "EnemyHealth52_Enemy傷害程式程式3",
          "EnemyHealth53_Enemy傷害程式程式4",
          "EnemyHealth54_Enemy傷害程式程式5",
          "EnemyHealth55_Enemy傷害程式程式6",
          "EnemyHealth56_Enemy傷害程式程式7",
          "EnemyHealth57_Enemy傷害程式程式8",
          "分數58_分數1",
          "分數59_分數2",
          "分數60_分數3",
          "敵人生成點61_敵人生成點_1",
          "敵人生成點62_敵人生成點_2",
          "敵人生成點63_敵人生成點_3",
          "敵人生成點64_敵人生成點_4",
          "敵人生成點65_敵人生成點_5",
          "敵人生成點66_敵人生成點_6",
          "將大象(Hellephant)與熊(ZomBear)加入遊戲"
        ],
        "2D飛行射擊遊戲": [
          "2D飛行射擊遊戲資源",
          "建立2d專案_1",
          "sorting_layer_2",
          "order_in_layer_3",
          "Pixels_Per _Unit_4",
          "draw_call",
          "sprite_edit使用方式",
          "ExplosionSprite_分割",
          "RetroBullet分割",
          "RetroExplosion分割",
          "RetroSpaceship_分割",
          "卷軸背景_攝影機配置",
          "卷軸背景_原理",
          "卷軸背景_背景圖配置",
          "卷軸背景_程式碼實作",
          "卷軸背景_程式碼設定",
          "卷軸背景sorting_layer",
          "太空船基本配置",
          "太空船_飛行動畫",
          "太空船_射擊與爆炸動畫",
          "太空船_動畫控制器設定",
          "太空船_控制腳本",
          "太空船_控制腳本移動範圍設定_22",
          "太空船_Prefabs建立",
          "子彈製作",
          "子彈池概念",
          "子彈腳本1",
          "子彈腳本2",
          "子彈腳本賦予子彈Prefabs",
          "子彈池腳本1",
          "子彈池腳本顯示子彈",
          "子彈池腳本2測試",
          "子彈池腳本3",
          "修正子彈發射速度",
          "回收子彈",
          "隕石敵人基礎設定",
          "隕石敵人動畫製作",
          "隕石程式碼計算說明",
          "隕石程式碼_屬性宣告_1",
          "隕石移動程式碼實作_2",
          "隕石程式碼實作_3加入爆炸特效",
          "隕石程式碼實作_4加入爆炸後消失",
          "隕石程式碼實作_5爆炸事件呼叫",
          "隕石產生器說明",
          "隕石產生器位置亂數程式碼",
          "隕石產生器主程式",
          "隕石產生器主程式測試",
          "隕石碰到邊界消失",
          "子彈碰到隕石消失",
          "飛船碰隕石爆炸實作",
          "飛船爆炸後不可移動與射擊",
          "飛船爆炸後消失",
          "分數UI設定",
          "分數UI程式碼",
          "分數UI程式碼_事件註冊",
          "分數UI程式碼_解決連續碰撞問題",
          "GameOverUI_1_畫面設定",
          "GameOverUI_GameOver事件撰寫",
          "GameOverUI_GameOver事件註冊",
          "GameOverUI_button實作",
          "GameOverUI_button實作補充說明",
          "太空船音效設定_1",
          "太空船音效程式_2",
          "隕石爆破音效",
          "背景音樂",
          "輸出成exe"
        ],
        "學生問題解答": [
          "問題1_1",
          "問題1_2"
        ]
      },
      "requirements": [
        "基本電腦操作"
      ],
      "description": "親愛的讀者大家好，我是邱士豪目前是Unity3d講師與Android講師，會寫這課程的主因是在跟學生聊天的過程中，發現很多學生都沒程式底子，，所以將課堂中程式設計的部份抽出來，不會程式的學生可透過本課程學會Unity3d程式設計的概念。\n課程特色：由淺入深的介紹常用的Unity3d程式類別，由簡單的C#開始進階到Unityt類別與技巧，全程影片教學，最後使用前面所學之技能撰寫\n1 FPS遊戲3D\n2 飛行射擊遊戲2D",
      "target_audience": [
        "Unity3d新手"
      ]
    },
    {
      "title": "Crie jogos com o GameSalad!",
      "url": "https://www.udemy.com/course/gamesalad/",
      "bio": "Desenvolva e publique jogos para a web, celulares e tablets com a consagrada plataforma Gamesalad.",
      "objectives": [
        "Projetar, criar e publicar jogos e aplicativos para a web, celulares e tablets",
        "Dominar os principais elementos que compõem os jogos e aplicativos;",
        "Aplicar técnicas de interatividade, entretenimento e envolvimento dos usuários;"
      ],
      "course_content": {
        "Conhecendo o Gamesalad": [
          "Instalação da Plataforma de Jogos Gamesalad",
          "Conhecendo o Gamesalad"
        ],
        "Jogo Pong": [
          "Crianção dos Atores",
          "Atores",
          "Colocando os jogadores no campo",
          "Posição dos atores",
          "Criando a bola",
          "Atributo P1Serving",
          "Colocando a bola no jogo",
          "Criando as paredes",
          "Criando Tags",
          "Colisões",
          "Sistema de pontuação",
          "Pontuação",
          "Decidindo de quem é a vez de jogar",
          "Mostrando os pontos",
          "Mantendo somente uma bola no jogo",
          "Finalizando o jogo"
        ],
        "Jogo BreakOut": [
          "Criando os atores",
          "Sobre os atores",
          "Criando Tags e Atributos",
          "Tags",
          "Criando as regras para a bola",
          "Atributos",
          "Criando as regras para a raquete",
          "Funções",
          "Colocando a bola no jogo",
          "Controlando seu ator",
          "Mudando o atributo ContaTijolo",
          "Atributos",
          "Configurando o Display",
          "Display",
          "Colocando os atores na cena",
          "Atores em Cena",
          "Movimentando o jogador com o acelerômetro",
          "O acelerômetro",
          "Gerenciando vidas no Gamesalad",
          "Decrementando vidas",
          "Ajustando o display e finalizando o jogo"
        ],
        "Editando Imagens para o Gamesalad": [
          "Encontrando e importando imagens para o Gamesalad",
          "Removendo o background de imagens",
          "Background"
        ],
        "Jogo Space Invaders": [
          "Escolhendo as imagens para os atores",
          "Criando o jogo e os atores",
          "Adicionando as Imagens",
          "Atributos do Jogo",
          "As Cenas",
          "A Cena Inicial",
          "Instructions",
          "Cena Level 1: TAGS e Vertical Walls",
          "Cena Level 1: Horizontal Walls",
          "Cena Level 1: Bullet 1",
          "Cena Level 1: Bullet 2",
          "Cena Level 1: Movimentando o Spaceship",
          "Cenal Level 1 - Fire",
          "Cena Level 1 - Tamanho da Barra de Energia",
          "Cenal Level 1 - Cor da Barra de Energia",
          "Cena Level 1 - Destrua o inimigo",
          "Cena Level 1 - Mudança de Cena",
          "Mudança de cena",
          "Cena Level 2 - Montando a Cena",
          "Cena Level 2 - Enemy 2",
          "Finalizando o jogo",
          "Publicando seu jogo"
        ],
        "Q&A": [
          "Como fazer um inimigo seguir o jogador"
        ],
        "Bonus Lecture: Qual é o próximo?": [
          "Bonus Lecture: Qual é o próximo?"
        ]
      },
      "requirements": [
        "Baixar e instalar a Plataforma Gamesalad"
      ],
      "description": "Imagine desenvolver seus próprios jogos e aplicativos sem a necessidade de escrever nenhuma linha de código. Com este curso, você vai transformar essa ideia em realidade! Utilizando o GameSalad, uma ferramenta poderosa de programação no estilo arraste e solte, você poderá criar jogos e aplicativos para diversas plataformas, mesmo sem nenhum conhecimento prévio de programação. GameSalad é uma plataforma intuitiva que utiliza editores visuais e um sistema de lógica baseado em comportamento, permitindo que você desenvolva projetos ajustando apenas os parâmetros necessários para dar vida às suas ideias.\nNeste curso, você aprenderá por meio de vídeos didáticos que demonstram passo a passo tudo o que é preciso para deixar de ser um simples usuário e se tornar um verdadeiro desenvolvedor de tecnologia. Você começará entendendo os fundamentos do design de jogos, aprenderá a criar aplicativos para dispositivos móveis como Android, iPhone e iPad, e descobrirá como agregar interatividade, proporcionando uma experiência envolvente para os usuários. Além disso, você desenvolverá habilidades valiosas de resolução de problemas por meio da tecnologia, habilidades essenciais para o profissional do século XXI.\nA criação de jogos e aplicativos não é apenas divertida e criativa, mas também uma excelente maneira de desenvolver competências importantes para as áreas de Ciências, Tecnologia, Engenharia e Matemática (STEM). Ao projetar seus próprios jogos, você estará aplicando o pensamento crítico e fortalecendo seu raciocínio lógico. A atividade também exige a resolução constante de problemas e decisões rápidas, o que aprimora sua autonomia e fortalece suas habilidades como um desenvolvedor. Tudo isso faz parte do processo de se tornar um profissional preparado para os desafios do século XXI.\nDurante o curso, você terá uma visão completa e detalhada de todos os fundamentos do GameSalad. Estabelecerá um forte entendimento dos conceitos de design de jogos, aprenderá a trabalhar com as ferramentas visuais da plataforma, e a configurar regras e comportamentos que farão seus jogos interativos e interessantes. O curso é composto por uma variedade de recursos para enriquecer seu aprendizado, incluindo vídeos passo a passo, testes para verificar seu progresso, e materiais em PDF que podem ser consultados a qualquer momento para reforçar seu entendimento dos conceitos apresentados. Dessa forma, você poderá aprender de maneira flexível e no seu próprio ritmo.\nAté o final do curso, você não só terá desenvolvido uma sólida base em design e desenvolvimento de jogos, mas também terá produzido e publicado diversos jogos em múltiplas plataformas. Imagine a sensação de ver seus próprios jogos disponíveis para que outras pessoas possam jogar e se divertir — essa é a experiência que este curso proporciona. E o melhor de tudo é que você não precisará ser um programador experiente para alcançar esses resultados; com o GameSalad e o nosso passo a passo, você conseguirá trazer suas ideias do papel para a realidade.\nSe você está pronto para transformar sua criatividade em habilidades concretas, aprender a desenvolver tecnologias, e fazer parte do universo do design de jogos e aplicativos, este curso é para você. Matricule-se agora e comece sua jornada para se tornar um desenvolvedor, utilizando a inovação e a criatividade como ferramentas para alcançar o sucesso. A revolução tecnológica está acontecendo agora, e este é o seu passaporte para ser parte dela!",
      "target_audience": [
        "Estudantes inovadores que desejam aventurar-se no desenvolvimento de jogos e aplicativos",
        "Professores e desenvolvedores de softwares;"
      ]
    },
    {
      "title": "Scratch + Construct: Como Programar e Criar Jogos do Zero",
      "url": "https://www.udemy.com/course/scratch-construct-como-programar-e-criar-jogos-do-zero/",
      "bio": "Aprenda lógica de programação e construção de jogos de maneira prática, fácil e dinámica",
      "objectives": [
        "Desenvolvimento de raciocínio lógico e criatividade.",
        "Entender os conceitos básicos de Animação e Jogos. Utilizados em qualquer outra Ferramenta de Desenvolvimento.",
        "Programação em blocos (não precisa saber linguagem de programação).",
        "Criar jogos Utilizando o Scratch",
        "Criar jogos utilizando o Construct 3"
      ],
      "course_content": {
        "Introdução": [
          "Agradecimento",
          "Agradecimento - Vídeo"
        ],
        "Conhecendo o Scratch": [
          "Apresentação",
          "O que é o Schatch (Material Escrito)",
          "Acessando a Plataforma",
          "Área de Construção de Projetos",
          "Aprendendo Sobre Blocos de Comando",
          "Entrada e Saída de Dados",
          "Variáveis (O que são?)"
        ],
        "Introdução a Lógica e Algoritmo": [
          "Conceito de Lógica",
          "Algoritmo - Parte 01",
          "Algoritmo - Parte 02",
          "Fases de um Algoritmo",
          "Exemplos de Algoritmos"
        ],
        "A Importância da Lógica e do Algoritmo": [
          "Scratch - Fora de Lógica",
          "Praticando Algoritmo"
        ],
        "Tipos de Variáveis": [
          "Os Três Tipos Mais Utilizados",
          "String - Exemplo Prático",
          "Numéricas - Exemplo Prático",
          "Booleana_Parte 01 - Exemplo Prático",
          "Booleana_Parte 02 - Exemplo Prático",
          "Booleana_Parte 03 - Exemplo Prático",
          "Constantes"
        ],
        "Exercícios Propostos": [
          "Lista de Exercícios - (Texto)",
          "Exercício 01 - Resolvido",
          "Exercício 02 - Resolvido",
          "Exercício 03 - Resolvido",
          "Exercício 04 - Resolvido",
          "Exercício 05 - Resolvido",
          "Exercício 06 - Resolvido",
          "Apresentação da Próxima Sessão"
        ],
        "Expressões Lógicas": [
          "Apresentação",
          "Condicionais",
          "Estrutura de Decisão - Condicional (OU)",
          "Condicional (OU) - Exemplo 01",
          "Condicional (OU) - Exemplo 02",
          "Condicional (OU) - Calculando a Média de Um Aluno - Parte 01",
          "Condicional (OU) - Calculando a Média de Um Aluno - Parte 02",
          "Estrutura de Decisão - Condicional (E)",
          "Condicional (E) - Exemplo 01",
          "Condicional (E) - Verificando o Maior Número Informado",
          "Condicional (E) - Posso Votar?",
          "Inversão Lógica - Estrutura Negativa (Não)",
          "Negação - Exemplo 01",
          "Negação - Exemplo 02",
          "Negação - Exemplo 03",
          "Laços de Repetição",
          "Laços de Repetição - Exemplo 01",
          "Laços de Repetição - Tabuada",
          "Laços de Repetição - Desenhando na Tela"
        ],
        "Revisão de Conteúdo - Exercícios Práticos": [
          "Apresentação de Proposta de Exercícios",
          "Exercício 01 (Corrigido) - Troca de Variáveis",
          "Exercício 02 (Corrigido) - Informando a Metade de um Número",
          "Exercício 03 (Corrigido) - Informando o Dobro de um Número",
          "Exercício 04 (Corrigido) - Laço de Repetição Sempre",
          "Exercício 05 (Corrigido) - Advinhando Número do Gatinho",
          "Exercício 06 (Corrigido) - Número Maior e Menor",
          "Aula Extra - Método/Função (Parte 01)",
          "Aula Extra - Método/Função (Parte 02)"
        ],
        "Projeto Scratch - Meu Primeiro Jogo": [
          "Importando Objetos",
          "Organizando Cenários",
          "Programando Personagem 01",
          "Programando Personagem 02",
          "Programando Botões de Nível de Dificuldade",
          "Programando Cenários e Finalizando o Jogo"
        ],
        "Questionário - Simulado": [
          "Simulado: Introdução à Lógica Básica de Programação"
        ]
      },
      "requirements": [
        "Conceitos básicos de informática"
      ],
      "description": "Você quer aprender lógica de programação e como os seus próprios jogos? Então o curso Scratch + Construct: Como Programar e Criar Jogos do Zero é para você! Neste curso, você vai aprender lógica de programação e desenvolvimento de jogos utilizando as ferramentas Scratch e Construct 3.\nScratch é uma plataforma online que permite criar programas interativos usando blocos de código. Você vai aprender os conceitos básicos de programação, como variáveis, condições, laços, eventos, funções e muito mais. Você vai usar o Scratch para criar animações, histórias, jogos e até mesmo aplicativos.\nConstruct 3 é um software que permite criar jogos 2D sem precisar escrever código. Você vai aprender a usar o editor visual do Construct 3, que oferece recursos avançados como física, partículas, sons, efeitos e muito mais. Você vai usar o Construct 3 para criar jogos de diferentes gêneros, como plataforma, puzzle, tiro, corrida e outros.\nNeste curso, você vai aprender:\nComo usar o Scratch para criar programas interativos com blocos de código\nComo usar o Construct 3 para criar jogos 2D sem precisar escrever código\nComo aplicar os conceitos de lógica de programação em diferentes contextos e projetos\nComo desenvolver a sua criatividade e o seu raciocínio lógico\nComo publicar os seus jogos na internet e compartilhá-los com outras pessoas\nO curso é indicado para iniciantes de todas as idades que querem aprender a programar e criar jogos do zero. Você não precisa ter nenhum conhecimento prévio de programação ou de desenvolvimento de jogos. O curso é totalmente prático e você vai aprender fazendo. Você vai ter acesso a vários exemplos, exercícios e desafios para testar o seu aprendizado.\nAo final do curso, você vai ter um portfólio de programas e jogos criados por você mesmo. Você vai poder mostrar os seus projetos para os seus amigos, familiares ou até mesmo para possíveis empregadores. Você também vai ter um certificado de conclusão do curso.\nNão perca esta oportunidade de aprender a programar e criar jogos do zero com Scratch e Construct 3. Inscreva-se já neste curso e comece a sua jornada no mundo da programação e do desenvolvimento de jogos!",
      "target_audience": [
        "Pessoas que queiram desenvolver sua lógica",
        "Interessados em criar jogos por meuo do Scratch ou Construct 3",
        "Professores e estudantes que queiram dar o primeiro passo rumo ao mundo do desenvolvimento de aplicativos e jogos"
      ]
    },
    {
      "title": "Kompletter ARCore & ARKit Spieleentwickler Augmented Reality",
      "url": "https://www.udemy.com/course/kompletter-arcore-arkit-spieleentwickler-augmented-reality/",
      "bio": "Erstelle Multiplayer Augmented Reality Apps - Mobile Entwicklung für IOS und Android mit Unity3D und C#",
      "objectives": [
        "Hohle dir deine ersten Augmented Reality Aufträge auf Freelancer-Seiten",
        "Entwickle eigenständig neue AR Apps",
        "Multiplayer Modus in Augmented Reality mit Photon",
        "Die Highlevel Features von ARKit & ARCore",
        "Augmented Reality Mobile Apps auf IOS & ANDROID erstellen",
        "Grundlagen der Spieleentwicklung",
        "Die Objekt Orientierte Programmiersprache C# in Praxis verstehen",
        "Du kannst diese Fähigkeiten auf andere Programmiersprachen übertragen",
        "In C# programmieren zu können"
      ],
      "course_content": {},
      "requirements": [
        "Es wird kein weiteres Vorwissen benötigt - wir lernen als von Grund auf",
        "Für ARKit (IOS) einen Mac auf dem XCode läuft und eines der folgenden Geräte:",
        "iPhone 6s; 6s Plus; iPhone 7; 7 Plus; iPhone SE; iPad Pro (9.7, 10.5 oder 12.9); iPad (2017); iPhone 8 oder 8 Plus; iPhone X",
        "Für ARCore (Android) eines der folgenden Geräte:",
        "Google Pixel - egal welches Modell ; OnePlus 5; Samsung Galaxy Note8; Samsung Galaxy S8+; Samsung Galaxy S8; Samsung Galaxy S7; Samsung Galaxy S7 Edge"
      ],
      "description": "Werde zum Augmented Reality Spieleentwickler in nur 7 Tagen!\nAugmented Reality ist eine der großen Zukunftstechnologien, welche in so ziemlich jedem Bereich Verwendung finden wird.\nAugmented Reality ist noch in den Kinderschuhen\nDie Nachfrage ist so hoch wie NIE zuvor\nErsten Plattformen für IOS (ARKit) und Android (ARCore) sind nun verfügbar\nUnsere Apps werden auf beiden Plattformen laufen!\nWir erstellen hier eines der ersten Augmented Reality Multiplayer Spiele überhaupt\n\nDie komplette Industrie befindet sich zurzeit mit einem Marktwert von ca. 20 MRD US-Dollar noch in den Kinderschuhen.\n\nAlle Experten sind sich einig, dass der komplette Zweig bis 2024 über 200 MRD US-Dollar wert sein wird. Hier ist also noch riesig Potenzial vorhanden.\nDas sich AR noch komplett am Anfang befindet, kann man ebenfalls an der Tatsache erkennen, dass es außer z.B. Pokemon GO kaum erfolgreiche AR-Apps gibt.\n(Vielleicht hast ja schon DU die nächste Million Dollar AR-App Idee?)\nDie großen Konzerne wie Google und Apple haben mittlerweile ebenfalls das Potenzial von Augmented Reality erkannt. So wird wegen den Plattformen ARCore von Google und ARKit von Apple Augmented Reality in naher Zukunft auf Millionen von Geräten (IOS & ANDROID) laufen.\nAus diesen Gründen ist es nur noch eine Frage der Zeit, bis Augmented Reality im Mainstream ankommen wird.\n\nWir sollten uns daher nun fragen, wie können auch wir von diesem Trend profitieren?\nAls Antwort auf diese Frage habe ich diesen Kurs erstellt.\nEs ist komplett egal, ob ihr schon eine konkrete APP Idee habt und einfach noch nicht wisst wie ihr diese umsetzen sollt, ob Ihr euch für den Bereich Freelancing interessiert, wo AR logischerweise auch immer mehr nachgefragt wird oder euch das Thema Augmented Reality einfach nur so interessiert und ihr mit Praxis-Orientierten Training euch das Wissen hierzu aneignen wollt.\nDenn dieser Kurs bietet die Grundlagen, um so ziemlich jede erdenkbare AR App von Grund auf zu programmieren und ist ganz klar auf \"Learning By Doing\" ausgerichtet, wir werden hier alles direkt anhand der Praxis lernen.\nEs ist vollkommen egal, ob ihr Anfänger seid oder ihr euch schon ein wenig mit Unity3D auskennt. Denn wir beginnen zunächst damit, die Grundlagen der Programmiersprache C# kombiniert mit Unity zu lernen.\nDaraufhin schauen wir uns die Grundlagen von Augmented Reality an. Hierbei werden wir auf das ARInterface-Framework von Unity3D zugreifen. Die Besonderheit dabei ist, es ist egal, ob ihr ein IOS oder ein Android Gerät verwendet. Die Apps, die wir also von Grund auf programmieren werden laufen auf beiden Plattformen. Das liegt daran, weil das ARInterface beide Plattformen über eine API miteinander verbindet. Wir müssen allen Code also nur ein einziges Mal schreiben und können diesen trotzdem für IOS (AppStore) und Android (Google Play Store) verfügbar machen.\n\nDas Ziel dieses Kurses ist es, ein Augmented Reality Multiplayer Spiel zu erstellen. Um so ein Spiel erstellen zu können benötigen wir ebenfalls sämtliche Grundlagen von Multiplayer-Spielen. Diese erlernen wir, indem wir zuerst ein 1 VS 1 Tank Spiel nur für den PC erstellen. Und das wiederum werden wir dann Stück für Stück ausbauen, bis wir das in Augmented Reality mit ARCore oder ARKit darstellen lassen können.",
      "target_audience": [
        "An alle, die die Spieleentwicklung kombiniert mit Augmented Reality lernen möchten",
        "Um einer der ersten zu sein, die AR mit Multiplayer kombinieren"
      ]
    },
    {
      "title": "Sıfırdan 2D Oyun Geliştirme Eğitimi | GameMaker Studio 2",
      "url": "https://www.udemy.com/course/2d-oyun-gelistirme-gm2/",
      "bio": "2D Oyun Yapımı | Temel Kodlama Mantığı ve 7 Adet Oyun Programlama | GameMaker Studio 2 | Mobil Oyun Geliştirme",
      "objectives": [
        "Kurs sonunda kendi oyununuzu kodlayıp, tasarlayıp, yayınlayarak bundan para kazanabilecek seviyeye geleceksiniz.",
        "\"RPG-Shooter-Platformer-Survival\" gibi farklı tarzlarda olan oyunları kodlamak için gereken temel mantığı özümsemiş olacaksınız.",
        "Temel, orta ve ileri seviyeyi kapsayan 7 adet oyun yapımı ile oyun geliştirme sektöründe bir adım daha ileri gideceksiniz.",
        "GameMaker Studio 2'nin sahip olduğu özellikler sayesinde hem kod yazarak hem de \"sıfır kod\" ile oyunlar geliştireceksiniz.",
        "GameMaker Studio 2 oyun geliştirme motorunun tüm özelliklerini bilerek kullanabilecek seviyeye geleceksiniz.",
        "\"2D Oyun Geliştirme Sektörü\" hakkında birçok bilgi edineceksiniz."
      ],
      "course_content": {
        "Gamemaker Kurulumu": [
          "Gamemaker İndirme ve Kurulum"
        ],
        "Arayüz ve Genel Bilgiler": [
          "Oyun Geliştirme Hakkında",
          "Genel Bilgiler",
          "Yeni Proje Oluşturma ve Arayüz",
          "Sprite Kaynağı",
          "Object Kaynağı",
          "Object - Event",
          "Room Kaynağı",
          "Room Kaynağı - 2",
          "Tileset Kaynağı"
        ],
        "Gamemaker Yeni Kaynaklar ve Export İşlemi": [
          "Güncelleme notlarının incelenmesi",
          "Eski oyun dosyalarının converting işlemi",
          "Editör (IDE) değişiklikleri",
          "Kaynak (Room, Sprite, Tags) değişiklikleri",
          "Sequences-Animation Curves kaynakları (YENİ)",
          "Animasyonun oluşturulması",
          "Export İşlemi ve Oyun Yayınlama (GX Games)",
          "Script ve fonksiyonlardaki değişiklikler"
        ],
        "# OYUN 1 # PONG! (DND)": [
          "2D Oyun türleri",
          "Oyun sahnesini oluşturma",
          "Karakterler için \"sprite\" oluşturulması",
          "Karakterler için \"object\" oluşturulması",
          "\"Event\"ler ile karakterlere hareket kazandırma",
          "\"Event\"ler ile karakterlere hareket kazandırma - 2",
          "Top objesinin ve hareketlerinin oluşturulması",
          "Duvarların oluşturulması",
          "Score mantığı",
          "Score'u arttırmak",
          "Score'un sayılması ve ekranda gösterilmesi"
        ],
        "Kodlama Mantığı": [
          "Oyun sektöründe yapılan iş bölümü",
          "Kodlama Mantığı",
          "IF Koşul Yapısı",
          "Repeat Döngüsü",
          "While Döngüsü",
          "Do-Until Döngüsü",
          "For Döngüsü",
          "Break Yapısı",
          "Switch Yapısı"
        ],
        "# OYUN 2 # Space War": [
          "Gamemaker ile yapılmış oyun örnekleri",
          "Oyunun temel mantığı",
          "Karakterler için \"sprite ve object\" oluşturulması",
          "Oyun sahnesinin oluşturulması",
          "Uzay gemisinin hareketlerinin oluşturulması",
          "Uzay gemisinin ateş etmesinin sağlanması",
          "Meteorların ikiye bölünmesi",
          "Meteorların hareketlerinin oluşturulması",
          "Collision'ların oluşturulması",
          "Patlama efektinin oluşturulması",
          "Score ve canların oluşturulması",
          "Başlangıç, kazanma ve kaybetme odaları",
          "Son rötüşlar",
          "Ses efektlerinin eklenmesi"
        ],
        "# OYUN 3 # Brick Out (DND)": [
          "İlham verici bağımsız oyun örnekleri",
          "Oyunun temel mantığı",
          "Tuğlaların oluşturulması",
          "Oyun sahnesinin oluşturulması",
          "Karakterlerin oluşturulması",
          "Tuğlaların oyun sahnesine yerleştirilmesi",
          "Tuğlaları rastgele renklerde oluşturmak",
          "Sopaya hareket özelliklerinin kazandırılması",
          "Sopanın oyun sahnesi dışına çıkmasını engellemek",
          "Topa hareket özelliklerinin kazandırılması",
          "Top ile tuğlalar arasındaki çarpışma",
          "Top ile duvarlar arasındaki çarpışma",
          "Can ve Score'un oluşturulması",
          "Score kazanma şartının oluşturulması",
          "Canların azalma şartının oluşturulması",
          "Oyunun yeniden başlatılması",
          "Ekstra özelliklerin eklenmesi",
          "Ses efektlerinin eklenmesi"
        ],
        "# OYUN 4 # Tower Defense": [
          "Tower Defense benzeri oyunlar ve genel mantığı",
          "Oyunun temel mantığı",
          "Tileset oluşturulması",
          "Oyun sahnesinin oluşturulması",
          "Düşmanların oluşturulması",
          "Savunma birimlerinin oluşturulması",
          "Savunma birimlerinin haritaya yerleştirilmesi",
          "Savunma birimlerinin özelliklerinin belirlenmesi",
          "Düşmanların ölmesi ve güçlenmesi",
          "Son Rötüşlar",
          "Kullanıcı arayüzü düzenlemeleri"
        ],
        "# OYUN 5 # Platformer": [
          "Platformer oyun içeriği",
          "Temel hazırlıklar",
          "Hareketler ve kodlama mantığı",
          "Collision kontrolleri",
          "Animasyonların oluşturulması",
          "Tile Set'lerin oluşturulması",
          "Kamera ayarları ve oda boyutu",
          "Platform düzenlemeleri",
          "Çevre nesneleriyle etkileşim (Collision)",
          "Güçlendirmelerin eklenmesi (PowerUp)"
        ],
        "# OYUN 6 # Endless Runner": [
          "Oyun içi kaynakların oluşturulması",
          "Hareket Özellikleri - Script Yapıları",
          "Hareket Özellikleri - Script Yapıları 2",
          "Oyun içi engellerin oluşturulması",
          "Oyun sahnesi ve harita derinliği",
          "Platform luşturulması ve etkileşimleri",
          "Engellerle çarpışma kontrolü",
          "Oyun seviyelerinin zorlaşması",
          "Oyun içi güçlendirmeler",
          "Müzik ve ses efektleri"
        ]
      },
      "requirements": [
        "Kursa sahip olmadan önce herhangi bir kodlama veya oyun programlama hakkında bilginizin olmasına gerek yok.",
        "Sıfır kodlama bilgisine sahip olsanız bile kurstaki \"Genel özellikler\" ve \"Kodlama mantığı\" video eğitimleri ile kendinizi geliştirebilirsiniz.",
        "Kurstan en üst seviye verimi almak için \"Sıfırdan bir şey üretme duygusu\"nu tatmış olmanız işlerinizi kolaylaştırabilir.",
        "GameMaker Studio 2 oyun geliştirme motoru yüksek bilgisayar özellikleri gerektirmemektedir."
      ],
      "description": "Bu kurs ile birlikte;\nTemel kodlama mantığını ve GameMaker Studio 2 oyun geliştirme motorunu \" 7 ADET \" birbirinden farklı oyunu geliştirirken öğreneceksiniz.\n\n\nSurvival\nRPG\nShooter\nPlatformer\nEndless Runner tarzında oyunlar programlayacağız.\n\n\nBu oyunları geliştirirken tüm gerekli görselleri ve kaynak bilgilerini eğitim içerisinde paylaşmaktayım.\nKolaydan zora doğru ilerleyen müfredat ile her bölümde farklı bir konu öğreneceksiniz. Sonrasında bu bilgileri istediğiniz oyun türünde harmanlayarak kendi oyununuzu yaratmaya başlayacaksınız.\nAynı zamanda \"SIFIR KOD\" ile oyunlar geliştirebileceğimiz DnD yani sürükle bırak metodunu kullanarak oyunlar geliştireceğiz.\n(DnD Metodu: Blok tabanlı kodlama mantığı ile çalışan ve kod yazmadan kod bloklarını birleştirerek oyun programlamanızı sağlayan bir yöntem)\n\n\nOyun geliştirme sektörü ve ilham verici oyun tanıtım videoları ile hem eğlenceli hem de eğitici bir kurs hazırlamayı amaçladım.\nKursa başlamak için herhangi bir kodlama bilgisine sahip olmak zorunda değilsiniz. GameMaker Studio 2 içerisinde kullanılan GameMaker Language'i ayrıntılarıyla anlatmaktayım.  Aynı zamanda sürekli olarak eğitim setini güncel tutup, sorularınızı cevaplıyor olacağım.\n\n\n\n\nGameMaker Studio2'yi daha önce duymamış kişiler için aşağıya bu oyun motoru ile yapılmış bazı önemli oyunların isimlerini bırakıyorum.\nGameMaker Studio 2 programı kullanılarak yapılmış ve göz atmanız gereken bazı önemli oyunlar:\nKatana Zero\nUndertale\nHotline Miami\nSynthetik\nForager\nThe Swords of Ditto\nHyper Light Drifter\nRivals of Aether\nDownwell\nNuclear Throne\nCrashlands\n\n\nArtık Unity ve Unreal Engine gibi kullanımı zor ve karmaşık olan oyun motorlarından sıkıldıysanız yukarıdakiler gibi birçok oyun yapımına yardımcı olmuş, bu eğlenceli ve kolay oyun geliştirme motorunu öğrenmek istiyorsanız bu eğitim tam size göre!\n\n\nHer geçen gün yeni derslerin eklendiği ve öğrenci memnuniyetinin üst seviyede olduğu eğitime sizleri de bekliyorum.\nUmarım bu eğitimle birlikte hayallerinizi gerçekleştirme konusunda bir adım daha ilerleyebilirsiniz!",
      "target_audience": [
        "Oyun geliştirme ve yazılım konusunda bilgi birikimi olmayanlar",
        "Kendi oyunlarını geliştirerek hobisini işe dönüştürmek isteyenler",
        "RPG-Survival-Shooter-Platform gibi birçok farklı türde 2D oyun yapımı hakkında kendini geliştirmek isteyenler",
        "Bir oyun kodlamak, tasarlamak ve bundan gelir elde etmek isteyenler"
      ]
    },
    {
      "title": "Crea una aplicación de realidad virtual con Unity y Photon",
      "url": "https://www.udemy.com/course/crea-una-aplicacion-de-realidad-virtual-con-unity-y-photon/",
      "bio": "Entra al campo de la realidad virtual con Meta Quest 2, Photon y Unity y emprende tu camino como desarrollador VR.",
      "objectives": [
        "Conocer los principios básicos del desarrollo de aplicaciones de realidad virtual.",
        "Conocer el entorno de desarrollo de aplicaciones de realidad virtual.",
        "Conocer los assets que se pueden utilizar para el desarrollo de una aplicación de realidad virtual.",
        "Utilizar VR Keyboard y modificarlo para la interacción con la UI.",
        "Utilizar XR Rig (Input Actions) del XR Interaction Toolkit",
        "Utilizar XR Simple Interactable, XR Grab Interactable y XR Socket Interactable para la interacción con objetos.",
        "Exportar la aplicación e instalarlo con Oculus Side Quest/Oculus Developer Hub.",
        "Aprender a crear escenas multijugador con Photon.",
        "Sincronizar el movimiento de los personajes, movimiento de objetos y llamadas RPC.",
        "Crear y unirse a salas por nombre (Room Properties).",
        "Instanciar a los jugadores en una escena.",
        "Crear pantalla de carga (Load Screen)"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Uso de Udemy y los recursos del curso",
          "Novedades del curso"
        ],
        "Creación, configuración e importación del proyecto (nueva versión)": [
          "Instalación de Unity Editor 2022.3.18f1",
          "Creación del proyecto e importación del XR Interaction Toolkit",
          "Descarga, instalación y configuración de de Oculus Desktop",
          "Side Quest, Meta Quest Developer Hub y Oculus Casting",
          "Crear la aplicación e instalarlo en el Oculus/Meta Quest"
        ],
        "Importación y configuración del escenario y del XR Origin": [
          "Importación del escenario - Sci-Fi Styled Modular Pack",
          "Configuración del escenario y armando la escena inicial",
          "Configuración del XR Rig - Input Actions",
          "Configuración del XR Rig - Locomotion System",
          "Configuración del XR Rig - Grab Interactable"
        ],
        "Configuración del Avatar, Ready Player Me y Final IK": [
          "Importación de Ready Player Me",
          "Creación e importación del avatar con RPM",
          "Mixamo e importación de animaciones",
          "Configuración de las animaciones del cuerpo (Blend Tree)",
          "Importación de U Motion (Tool para la animación de las manos)",
          "Configuración y animación de las manos con U Motion",
          "Configuración de las animaciones de las manos (Blend tree)",
          "Corrección de errores con los parámetros de los Blend Tree creados",
          "Creación de los layer mask para manos y cuerpo",
          "Importación de Final IK",
          "Configuración del avatar",
          "Creación del script HandsAnimationController para ejecutar las animaciones",
          "Anuncio sobre las animaciones del cuerpo"
        ],
        "Creación, configuración e importación del proyecto (Legacy)": [
          "Importando XR Interaction Toolkit y Oculus Integration",
          "Instalación de Unity Editor 2021.3.2f1, creación y configuración del proyecto",
          "Descarga, instalación y configuración de de Oculus Desktop y Oculus Quest 2",
          "Oculus Side Quest, Oculus Developer Hub y Oculus Casting",
          "Crear la aplicación e instalarlo en el Oculus Quest"
        ],
        "Configuración del multiplayer (Photon) y escena de Login": [
          "Importación de Photon",
          "Configuración de Photon (Photon ID)",
          "Creación de la escena Login",
          "Terminando los menús de la escena Login",
          "Importación del teclado virtual (VR Keys)",
          "Activar/Desactivar Ray Interactor (UI Interaction Controller)",
          "Configuración VRKeys y VRKeyboard Manager (Parte 1)",
          "Configuración VRKeys y VRKeyboard Manager (Parte 2)",
          "Gestor de menús (Canvas Manager)",
          "Escena de carga (LoadScene) y SceneLoader",
          "Inicio de sesión con Photon",
          "Player List Entry Prefab",
          "Player List Entry y Room Player Settings (Scripts)",
          "Room List Entry Prefab",
          "Room List Entry y MultiplayerStatus (Scripts)",
          "Explicación del flujo (Inicio de sesión hasta Inicio de simulación)",
          "Últimas configuraciones y build de la aplicación",
          "Alternativas de teclado a VR Keys + Corrección de input field"
        ],
        "Configuración de la escena principal (UI, Instanciación e interacciones)": [
          "Configuración de la escena principal",
          "Instanciación de los player (Spawn Player)",
          "Sincronizar players en la net - NetworkTransform",
          "Sincronizar players en la net - PlayerSynchronization",
          "Sincronizar players en la net - PlayerAnimationSynchronization",
          "Sincronizar players en la net - Modificando y creando nuestro player network",
          "MODIFICACION - Cambiando el SDK Ready Player Me y el Avatar de nuestro player",
          "Iniciando la simulación (Start Game)",
          "Interacción de los players (Grab Interactable)",
          "Clase Final - Implementación del Score",
          "Comentarios finales"
        ]
      },
      "requirements": [
        "Tener conocimientos de nivel básico/intermedio de Unity.",
        "Tener conocimientos de nivel básico a intermedio de c#.",
        "Contar con las gafas Oculus Quest 1 o 2.",
        "Contar con una pc con características mínimas recomendadas para el desarrollo de realidad virtual con Oculus."
      ],
      "description": "Este curso, es un curso básico / intermedio de realidad virtual con Oculus Quest 2 (Meta Quest 2) y Unity. En este curso aprenderás a configurar tu aplicación de realidad virtual, personalizar tu avatar, crear diferentes escenas desde login hasta la escena principal de la aplicación, además aprenderás temas multijugador (Photon) y como usarlo conjuntamente con Unity y Oculus. Importaremos un escenario y configuraremos la iluminación. Así como también, elaboraremos nuestro propia interfaz de usuario para poder crear y listar salas y también iniciar sesión con el nombre de usuario que brindemos. También, emplear el sistema que viene por defecto de Photon y reutilizarlo para poder hacer todo lo mencionado anteriormente. Además, aprenderás a instalar y crear tu primer proyecto de realidad virtual con Unity, aprenderás a configurar el entorno de realidad virtual para poder ejecutarlo desde el editor, emplearemos la librería de XR Interaction Toolkit y demás assets para teclado para hacer de nuestra aplicación más interactiva. también podrás crear tu primera aplicación e instalarlo dentro del Oculus Quest 2, para ello emplearemos Oculus Developer Hub (ODH) y tendremos un vistazo a Side Quest como alternativa de uso. Finalmente, concluiremos con el uso de RPC de Photon y el agarre de objetos y el establecimiento de puntos para cada jugador dentro de la escena.",
      "target_audience": [
        "Desarrolladores que quieran aprender sobre realidad virtual con Unity y Oculus.",
        "Estudiantes y/o docentes que estén interesados en la creación de entornos de realidad virtual.",
        "Y en general a todo aquel que desee iniciar y aprender a construir entornos de realidad virtual."
      ]
    },
    {
      "title": "Learn to create a 2D Racing car game for FREE PART 6.",
      "url": "https://www.udemy.com/course/learn-to-create-a-2d-racing-car-game-for-free-part-6/",
      "bio": "Learn how to create a cool 2D top down racing car game with the unity game engine.",
      "objectives": [],
      "course_content": {
        "Setting up main menu and track and car select screen.": [
          "Adding the main menu with sprites.",
          "Adding code for the main menu to function.",
          "Building our track and car select menu screen.",
          "Setting up our track and car select menu.",
          "Setting up the pause screen"
        ]
      },
      "requirements": [
        "You will need to download unity and visual studio which is free and then be willing to learn game design.",
        "Basic understanding of the C# language and Unity"
      ],
      "description": "THIS COURSE WILL BE UPLOADED IN PARTS DUE TO VIDEO TIME RESTRICTIONS.\n\n\nIn my course we will start at the bottom and work our way up to advanced game design like AI path finding, we will be creating a car controller and many features with in our game.\nThis course is designed for beginner level and up as i will explain everything in best detail as i can, at the end of the course we will have made a racing car game like micro machines which in the 1980's was an amazing car game.\nIn this part of the course you will learn\nAdding the main menu with sprites.\nAdding code for the main menu to function.\nBuilding our track and car select menu screen.\nSetting up our track and car select menu.\nSetting up the pause screen",
      "target_audience": [
        "Students that want to learn to be a game designer."
      ]
    },
    {
      "title": "Crie Jogos para Roblox sem Programação!",
      "url": "https://www.udemy.com/course/crie-jogos-para-roblox-sem-programacao/",
      "bio": "Aprenda os primeiros passos no desenvolvimento de Jogos sem Precisar Escrever Código!",
      "objectives": [
        "Criar Jogos Utilizando o Roblox Studio",
        "Configurar Propriedades e Criar Elementos",
        "Usar NPCs",
        "Publicar seu Jogo no Roblox",
        "Criar Times",
        "Dar armas ao seu Jogador",
        "Testar seu Jogo com Vários Usuários",
        "Configurar aparência de elementos"
      ],
      "course_content": {
        "Introdução": [
          "Instruções",
          "Introdução",
          "Os Jogos que Você vai Criar",
          "Uso do Teclado e Mouse"
        ],
        "Criando um Parkour (Obby)": [
          "Arquivo do Jogo para Download",
          "Planejando o Jogo",
          "Primeiros Passos",
          "Mais Fases",
          "Terminando as Fases",
          "Criando Checkpoints",
          "Salvando seu Jogo"
        ],
        "Criando um Jogo de Batalha": [
          "Arquivo do Jogo para Download",
          "Configurando o Jogo",
          "Adicionando Soldados"
        ],
        "Criando um Tycoon (loja)": [
          "Arquivo do Jogo para Download",
          "Criando o Tycoon",
          "Colocando uma Espada a Venda",
          "Personalizando",
          "Criando o Jogo",
          "Testando com dois Jogadores",
          "Discussão sobre Times",
          "Criando Times"
        ],
        "Publicando seu Jogo": [
          "Publicando",
          "Testando seu Jogo"
        ],
        "Aula Bônus": [
          "Curso de Roblox Avançado"
        ]
      },
      "requirements": [
        "Familiaridade com Computador",
        "Conhecer o Teclado do Computador e suas Principais Funções",
        "Salvar e Abrir Arquivos"
      ],
      "description": "Venha se juntar a nós neste emocionante curso de Criação de Jogos com Roblox, onde vamos levar sua paixão por jogos para o próximo nível! Com Roblox Studio, você terá a oportunidade única de desenvolver seus próprios jogos e compartilhá-los com milhões de jogadores ao redor do mundo.\nAprender a programar é uma habilidade essencial nos dias de hoje, e neste curso, você mergulhará de cabeça no mundo da programação de jogos. Vamos te ensinar os fundamentos necessários para criar seus primeiros jogos para Roblox, além de abrir portas para uma possível carreira profissional no campo do desenvolvimento de jogos.\nDurante o curso, você terá a chance de criar diferentes tipos de jogos incríveis. Desde um desafiador jogo de Obby com fases emocionantes e checkpoints estratégicos, onde os jogadores podem voltar ao ponto em que pararam caso morram, até um intenso jogo de Batalha entre soldados e zumbis, onde você terá a oportunidade de ajudar a derrotar as hordas de mortos-vivos com armas poderosas.\nAlém disso, vamos explorar a criação de um Tycoon, onde você poderá se tornar um magnata dos negócios, construindo e expandindo sua própria loja. Aprenda a criar um jogo de Tycoon multiplayer e desafie seus amigos para ver quem consegue construir o império mais lucrativo!\nE o melhor de tudo é que, ao final do curso, você terá a oportunidade de publicar seus jogos nos servidores do Roblox. Convide seus amigos para jogar, ou faça novas amizades com jogadores de Roblox do mundo todo, independentemente da plataforma em que eles estejam jogando - celular, tablet, PC ou Xbox.\nNão perca tempo! Este curso oferece scripts completos de todos os jogos criados, permitindo que você continue explorando e aprimorando suas habilidades mesmo após o término do curso. Venha se juntar a nós e embarque nesta emocionante jornada de criação de jogos com Roblox!",
      "target_audience": [
        "Todos que queiram das os primeiros passos no desenvolvimento de jogos"
      ]
    },
    {
      "title": "Python - Desenvolvimento de jogos",
      "url": "https://www.udemy.com/course/python-pygame-e-gdscript-para-jogos/",
      "bio": "Aprenda Python de uma forma prática e divertida, desenvolvendo jogos.",
      "objectives": [
        "Você aprenderá Python de uma forma rápida e simples, criando projetos práticos",
        "Além de Python, você aprenderá a utilizar as bibliotecas Pygame e Turtle",
        "Após entender como funciona a programação em Python, você aprenderá GDScript"
      ],
      "course_content": {
        "Introdução": [
          "Conteúdo das aulas",
          "Aviso importante",
          "Instalando o python.",
          "Instalando pycharm",
          "Criando um projeto no pycharm"
        ],
        "Python - Básico para iniciar nossos jogos": [
          "Variaveis",
          "Métodos",
          "Condições",
          "Operações aritméticas",
          "Funções",
          "Parâmetros das funções",
          "Laço de repetição FOR",
          "Arrays e repetições",
          "Condições de repetição e loop",
          "Exercício - Simulação de rpg",
          "Importando Módulos"
        ],
        "Introdução ao pygame - Pong": [
          "Criando a janela do jogo",
          "Adicionando o BG do jogo",
          "Adicionando os players",
          "Movendo a bolinha",
          "Dando movimentos para o Player 1",
          "Melhorando os movimentos do Player 1",
          "Definindo limites para o Player",
          "Definindo as colisões da bolinha",
          "Definindo novos movimentos para a bolinha e para o Player 2",
          "Reiniciando a posição da bolinha",
          "Adicionando um placar ao jogo",
          "Finalizando o projeto"
        ],
        "Introdução Python POO - Orientação a objetos": [
          "Classes",
          "Objeto padrão para inicio de projeto",
          "Testando nossas classes",
          "Correção da aula"
        ],
        "Desenvolvendo o jogo BeeHoney - POO": [
          "Demonstração do resultado da sessão",
          "Iniciando projeto",
          "Criando um Obj mais inteligente.",
          "Adicionando uma tela de Start Game",
          "Criando a cena Menu",
          "Criando a cena do jogo",
          "Adicionando aranhas a cena",
          "Controle de FPS",
          "Gerando movimento das aranhas",
          "Adicionando a Flor a cena",
          "Sistema de animação melhorado",
          "Adicionando a abelha a cena",
          "Adicionando colisões",
          "Sistema de GameOver",
          "Criando a cena de GameOver",
          "Adicionando Textos a cena",
          "Atualizando os textos",
          "Adicionando sons ao jogo"
        ],
        "Pygame - Flappy Bird - Herança de Sprites": [
          "Estrutura base do projeto",
          "Estrutura do Obj base",
          "Criando o cenário do jogo",
          "Animando o cenário",
          "Adicionando canos",
          "Aleatorizando as posições dos canos",
          "Adicionando e animando a moedinha",
          "Adicionando o pássaro a cena",
          "Aplicando gravidade ao pássaro",
          "Identificando colisões",
          "Colisões com canos e resultado",
          "Criando uma classe para textos",
          "Menu principal",
          "Eventos do menu",
          "Aplicando o menu ao game.",
          "Restart do game",
          "Delay para restart",
          "Max Score"
        ],
        "Python - Pygame - Platform": [
          "Base do projeto e assets",
          "Iniciando cenário",
          "Arvoras e plataformas",
          "Adicionando cristais a cena",
          "Finalizando cenário",
          "Aplicando gravidade ao Herói",
          "Identificando colisões",
          "Eventos para movimento",
          "Evento de pulo",
          "Animações do Heroi",
          "Invertendo os lados da animação",
          "Identificando colisões de forma mais inteligente",
          "Identificando colisões com inimigos",
          "Animando o inimigo",
          "HUD para cristais",
          "Completando o HUD",
          "Consertando alguns bugs",
          "Finalizando o projeto"
        ],
        "Exportar seus jogos feitos com pygame.": [
          "Gerando executável no linux",
          "Gerando executável no windows"
        ],
        "Introdução a Godot (GDScript)": [
          "Onde encontrar?",
          "Entendendo a interface",
          "Entendendo os Nodes",
          "Introdução a GDScript"
        ],
        "Primeiro jogo com GDScript - Pong": [
          "Estrutura base do projeto",
          "Programando os objetos do jogos",
          "Alterando a direção da bola",
          "Movimentando o player_1",
          "Aleatorizando a velocidade da bolinha",
          "Criando o Score do jogo",
          "Ajustando alguns detalhes",
          "Sistema de som para o jogo",
          "Exportar o nosso jogo"
        ]
      },
      "requirements": [
        "Ter um computador ou Notebook",
        "Saber o básico de um sistema operacinal"
      ],
      "description": "Python - Desenvolvimento de jogos com pygame\n\n\nNeste curso, você aprenderá a utilizar Python e Pygame para construir jogos do zero, mesmo que nunca tenha programado antes. O curso é dividido em módulos, e cada módulo apresenta um jogo diferente que você irá desenvolver. Dessa forma, você poderá colocar todo o seu aprendizado em prática ao longo das aulas.\n\n\nVamos guiá-lo passo a passo, desde os conceitos básicos de programação até a criação de jogos completos e interativos. Você aprenderá a manipular gráficos, sons, animações e a lógica necessária para tornar seus jogos divertidos e envolventes. Além disso, o curso é ideal tanto para iniciantes quanto para aqueles que já têm alguma experiência e desejam aprimorar suas habilidades de desenvolvimento de jogos.\n\n\nUm dos diferenciais deste curso é a abordagem prática e dinâmica. Ao final de cada módulo, você terá um jogo completo e funcional, além de ter a oportunidade de explorar novas ideias e incrementar suas criações. E para tornar sua experiência ainda mais enriquecedora, há dicas de desenvolvimento e personalização de jogos, além de conteúdos para download, como scripts e imagens da aula.\n\n\nAgora que você sabe o que vamos aprender neste curso, está na hora de começar a programar e transformar suas ideias em realidade.\n\nBons estudos!",
      "target_audience": [
        "Pessoas interessadas em aprender a programa",
        "Interessados em aprender a criar jogos e programas",
        "Desenvolvedores que queiram se aprofundar em python"
      ]
    },
    {
      "title": "Criando Seu Primeiro Game com a Unreal Engine e Blueprints",
      "url": "https://www.udemy.com/course/curso-de-game-com-unreal-engine-4/",
      "bio": "Seu Game, Seu Mundo! Crie um jogo TPS Completo: Personagem, Armas, Inimigos, Drones, Menu, Level Design e Publique!",
      "objectives": [
        "CURSO TOTALMENTE COMPATÍVEL COM A UNREAL ENGINE 5! CRIEI DIVERSAS AULAS EXPLICANDO TELAS, BLUEPRINTS E COMO FAZER O CONTEÚDO DO CURSO JÁ NA UNREAL 5",
        "Programar Games SEM DIGITAR CÓDIGOS de Linguagem de Programação",
        "Utilizar e conhecer o sistema de Visual Scripting - Blueprints da Unreal Engine",
        "Começar o aprendizado para ser capaz de desenvolver seus próprios jogos utilizando as Blueprints",
        "Utilizar com maior facilidade a incrível Unreal Engine 4",
        "Entender o fluxo de programação e a lógica de desenvolvimento de um game na Unreal Engine",
        "Criar Materiais e Texturas Customizados e Utilizar Partículas da Unreal Engine",
        "Começar a Entender e Utilizar a Inteligência Artificial da Unreal",
        "Utilizar Animações, Criar mistura das animações (Blend Spaces) e Programar a lógica com Máquinas de Estados (State Machines)",
        "Importar .fbx e Configurar Corretamente Personagens e animações da Mixamo para seus games",
        "Criar elementos de Widgets - HUD e exibir na Tela do Jogo",
        "Lançar Projétil via acionamento do Mouse e Teclas do teclado",
        "Criar e Manipular Sockets dos Skeletal Meshs dos Inimigos e Jogador",
        "Entender Localização, Rotação, Escala e manipulação de Objetos na Unreal Engine",
        "Importar sons customizados e utilizar em seus Jogos",
        "Criar animação Física RAGDOLL de personagens",
        "Inserir Arma Acoplada via Socket no Capacete/Cabeça do Jogador e fazer esta arma atirar nos Inimigos causando danos",
        "Entender como Aplicar Dano(Apply Damage) nos inimigos e como fazer o jogador Receber Danos vindos dos inimigos.",
        "Como Fazer Retarget Animation(Colocar Animações gratuitas Unreal em um Personagem da Mixamo)",
        "Como Inserir uma Arma na Mão do Jogador",
        "Utilizando Line Trace By Channel e Sphere Trace By Channel",
        "Criar Efeitos de Som e MuzzeFlash em uma Arma",
        "Como fazer Zoom In e Zoom Out da Câmera quando player aponta a arma",
        "Criar uma Mira(CrossHair) que aparece quando damos Zoom na visão do player",
        "Utiizar Aim Poses para criar Aim Offset e deixar player com mobilidade para atirar",
        "Criar Sistema de Pontuação(Score System)",
        "Criar Menus Game Over, Pause, Principal",
        "Fazer Respawn do Player",
        "Programar Double Jump (Pulo duplo no ar)",
        "Criar um HUD(Head Up Display) Avançado com total de vidas, score e animação de Munição e Health Acabando"
      ],
      "course_content": {
        "Guia de Sobrevivência na Unreal Engine: Conhecendo o Editor": [
          "Bem-vindo e Bem-Vinda ao Curso - Informações Importantes do Curso!",
          "Vídeo Promocional deste Curso",
          "Recado Importante para você!",
          "Confira o game que você vai aprender a fazer do zero neste curso...",
          "Pré-Aula: O que é uma Engine? E o que é a Unreal Engine?",
          "Exercícios sobre a Pré-Aula",
          "Instalando a Unreal Engine 5.6 ou superior",
          "Instalando a Unreal Engine 4",
          "Pré-Aula:Epic Games Launcher, Content Browser, Unreal Editor, Templates/Projects",
          "Criando seu Primeiro Projeto na Unreal Engine 5.6 ou superior",
          "Criando Projetos do tipo Blueprints nas novas versões da Unreal Engine 5 e 4",
          "Criando Seu Primeiro Projeto",
          "Navegando pela Unreal Engine",
          "Pré-Aula:World OutLiner, Aba Detalhes,ViewPorts, Eixos 3D, Coord. Globais/Locais",
          "Viewports, Escala, Rotação, e Movimentação de elementos do Game"
        ],
        "Começando a criar o level design do game Tiro em Terceira Pessoa: Phobos Aliens": [
          "Pré-Aula: BSPs x Static Mesh",
          "Onde fica Painel MODES e BSPs nas versões mais novas da Unreal?",
          "Onde ficam as opções BSP Brush na Unreal Engine 5?",
          "Iniciando a Construção do cenário do Game com BSP Brushes: Chão",
          "FAZENDO O BACK-UP DE SEU PROJETO E RESTAURANDO BACK-UPS AUTOMÁTICOS DA UNREAL",
          "Criando as Paredes e Portas da Primeira Sala do Cenário do Game",
          "Inserindo Materiais nas Paredes e Chão",
          "Aplicando Outros Materiais e Colocando Pilares",
          "IMPORTANTE PARA PRÓXIMA AULA COM UNREAL 5 - Select Matching (Selected Classes)",
          "Criando Rede de Canos com Static Meshs da Unreal",
          "Ajustando a Luz ambiente dentro do Galpao na Unreal Engine 5",
          "Caso você precise enviar o seu projeto para eu verificar siga estas instruções."
        ],
        "Criação de Materiais e Texturas Personalizadas": [
          "Pré-Aula: Materiais, Texturas, Mapas: Normal, Specular, Ambient Occlusion.",
          "Criando Material com Ferrugem e Corrosão para os Canos",
          "Caso ocorra algum erro no Awesomebump utilize estas alternativas",
          "Concluindo os Canos Enferrujados",
          "Criando Material Metálico para Base dos Canos",
          "Obtendo Materiais Gratuitos no MarketPlace da Unreal",
          "Luz, Som, Fumaça e Texturização",
          "Colocando Fotos Obtidas na Internet como Materiais (Quadro da Mona Lisa)",
          "Criando uma parede mofada",
          "Mudando as Cores da Fumaça e fogo e as cores de outros Particle System",
          "Alterando posição das texturas dos materiais dinamicamente via Material Instance",
          "Finalizando Rede de Canos",
          "Modificando Definitivamente Posição Do Pivot(Gizmo) Em Bsp Brushes E Static Mesh",
          "Unreal 4: Usando LODs(Level of Details) para otimizar uso memória em seu game.",
          "Unreal 5: Usando LODs(Level of Details) para otimizar uso memória em seu game."
        ],
        "Personagens Personalizados /Configuração de Animações(State Machine,Blend Space)": [
          "UPDATE - Atualizando a Unreal Engine",
          "Pré-Aula:Compilação, Variáveis, e Tipos(Boolean, Float, Integer, etc), Get e Set",
          "Colocando Personagem no Jogo sem criar outro projeto (Unreal 5)",
          "Colocando Personagem no jogo",
          "Pré-Aula:Conceitos de Orientação a Objetos: Classe, Objeto, Herança e Cast To.",
          "Colocando novo Character (Personagem) Mixamo no JOGO",
          "Pré-Aula: Tipos de Classes na Unreal Engine",
          "ATENÇÃO: SE SITE MIXAMO FORA BAIXE AQUI ASSETS PERSONAGEM E ANIMACAOES PARA AULA",
          "Colocando Fog (Névoa) e ajustando a Luz do Sol e do cenário",
          "ATENÇÃO: UNREAL 5 MUDOU FORMA OPERADORES RELACIONAIS LÓGICOS E ARITMÉTICOS",
          "Pré-Aula: Eventos X Funções, Nós: Event Blueprint Update Animation, Try Get Pawn",
          "UNREAL 5: Interpolation Time na Blend Space agora é Smoothing Time. Confira!",
          "COMO CHEGUEI ATÉ A ABA ANIMGRAPH E COMO INSERIR A NEW STATE MACHINE NA UNREAL 5!",
          "Blend Space: Setando animação andar e correr",
          "IMPORTANTE LEITURA ANTES PRÓXIMA AULA: ANIM GRAPH E FUNÇÃO CALCULATE DIRECTION",
          "Entenda State Machine, Blueprint Animação, Blend Spaces, Skeletal Meshes",
          "FAZENDO O BACK-UP DE SEU PROJETO E RESTAURANDO BACK-UPS AUTOMÁTICOS DA UNREAL"
        ],
        "Inteligência Artificial e Widget HUD (Sistema de Saúde(Health) de Personagens)": [
          "Pré-Aula: Inteligência Artificial, Nav Mesh, Pawn Sensing...",
          "Configurar a Compilação da Blueprint para sempre salvar e ir ao erro caso ocorra",
          "Inteligência Artificial - Inimigo Segue Jogador",
          "Pré-Aula: UMG,Widget, HUD, Cast To, Get Player Character, Begin Play, Create HUD",
          "Mais Sobre o Conceito do Nó Blueprint CAST TO",
          "Blueprints Operadores Aritméticos vector + * float * vector Unreal Engine 5",
          "Se está Usando UNREAL 5 LEIA isso antes da próxima Aula - CANVAS PANEL - HUD",
          "Widget HUD: Sistema de Health do Personagem",
          "ATENÇÃO: Unreal 5 Mudou forma de colocar nó bool equal agora use == Confira!",
          "Animações Morrer e Ataque Mágico na Máquina de Estados da Blueprint de Animação",
          "Socorro!!!, deletei uma Blueprint o que fazer?"
        ],
        "Lançamento de Projétil(ProjectileMovement) e Aplicação de Dano(ApplyDamage)": [
          "APENAS USANDO UNREL 4 VERSÃO a partir da 4.25 MUDOU A FORMA DE CRIAR ANIM NOTIFY",
          "O que Colisão na Unreal Engine? Overlap (Sobreposição) e HIT (Impacto)",
          "Overlap e Hit Events. Collsion Presets, Object Type, Object Responses, Traces",
          "Aula Extra em Texto Sobre Sistema de Colisão da Unreal Engine",
          "Anim Notify: Setando um Evento em determinado ponto da animação",
          "Blueprint Projectile Personagem lançamento de Projetil via Tecla Z e Anim Notify",
          "UNREAL 5: Se não houver colisão no projetil do jogador BP_Magia01 faça isso!",
          "Configurando Colisão Projetil Jogador para Que Ele Não Colida Com o Jogador",
          "Deixe a trajetória do Projétil em Linha Reta!",
          "Leia-me antes da próxima aula - Cast to ThirdPersonCharacter",
          "Blueprint Widget: Health for Zero ele Morre e Aciona a Animação Morrer da State",
          "Alterando a programação de Input Z do Ataque mágico",
          "ATENÇÃO: LEIA-ME ANTES DA PRÓXIMA AULA - GET HEALTH INIMIGO",
          "Blueprint causa dano ao inimigo e aparece na tela via HUD Widget",
          "Inimigo atira projetil da Cabeça via Socket com Find Look at Rotation",
          "Inimigo atira e projétil explode nele ou o projétil não é lançado! Veja Solução!",
          "Evitando que o inimigo atire se estiver morto",
          "Breve Pesquisa sobre seu próximo curso de Unreal Engine"
        ],
        "Anim Notify, Animações com Física (Ragdoll) e Aplicação de Sons": [
          "ATENÇÃO BAIXE AQUI O SOM AMBIENTE DA AULA SEGUINTE POIS NÃO ESTÁ MAIS DISPONÍVEL",
          "Som Ambiente e Som quando projétil atingir o Inimigo e Jogador",
          "Animação de impacto para trás quando Jogador receber tiro do Inimigo",
          "Colocando Animação de Física Ragdoll Quando Inimigo Morrer",
          "Unreal 5.1 ou superior - Ajuste nas animações do Personagem",
          "Ajuste nas Animações do Personagem",
          "Melhorando a Programação Ataque Mágico Input Action Z",
          "Outra forma mais aprimorada de Melhorar o Ataque Mágico",
          "Atualizando para versão 4.18.1 e migrando projeto",
          "FAZENDO O BACK-UP DE SEU PROJETO E RESTAURANDO BACK-UPS AUTOMÁTICOS DA UNREAL"
        ],
        "Criação de Miras(Sniper), Projétil Perseguidor(Homing Projectile), Rotação Suave": [
          "Cursor do Mouse como Mira para lançar o Projétil",
          "Homing Projectile - Projétil segue e persegue o alvo indicado pela mira do mouse",
          "ATENÇÃO: Use esta imagem de CrossHair caso sua textura não fique transparente",
          "Imagem de mira sniper no cursor do mouse e ajuste NavMesh BoundsVolume",
          "Configuração para Garantir Transparência na Textura usada na Mira do Mouse",
          "Destruindo Capsula Colisão após Health zero - Console Commands - Show Collision",
          "Outra forma de abrir Console Command via outra tecla de atalho em teclado PT-BR",
          "Ajustando Socket de Saída do Projétil e Testando Ataque com Z",
          "Programação mostrada na aula e talvez não presente no seu projeto(Leia-me)",
          "Rotacionando Jogador de acordo com rotação da mira",
          "Evitando que o jogador execute a animação de ataque mágico (tecla z) após morrer"
        ],
        "Static Mesh Avançada(Drone) /HUDs Individualizados(Barra de Health Individuais)": [
          "Criando Drone Inimigo",
          "Atualizando para a versão da Unreal e pequenos ajustes no jogo",
          "Criando a Blueprint de programação do Drone",
          "WidGet HUD do Drone: Colocando na tela Health do Drone",
          "Ajuste Personagem Não Deslizar Ao Ser Atingido e Rotacionar Ao Atirar No Drone",
          "Luz e Sistema de Health e Destruição do Drone Inimigo",
          "Configurando a Inteligência Artificial e Som do Drone",
          "Criando HUD Health personalizado e único para cada Inimigo",
          "Novo Efeito RAGDOLL da Animação Física da Morte do Inimigo"
        ],
        "Ajustes e Programação Avançada de Arma via Socket e Blueprints": [
          "Efeito Explosão na Morte do Inimigo e mais Debug de Blueprints(BreakPoints)",
          "Jogador(Player) Ganha Bônus - Health adicional ao Abater um Inimigo",
          "Programando Lógica de Dano ao Drone e Home Projectile para tiro perseguir Drone",
          "Ajustando a Programação do Drone",
          "Ajustando Tamanho e Exibição na tela do HUD Health do Personagem",
          "Ajustando a Colisão do Drone",
          "E se o drone não estiver perseguindo o jogador? Faça isso...",
          "Acoplando uma pistola no Capacete do Jogador(Player)",
          "Programando o tiro saindo da Pistola do Capacete",
          "Modificando o Tiro do Jogador com Cursor do Mouse Sem utilizar a função TICK( )",
          "Modificação para garantir que Jogador ganhe Health mesmo afastado dos inimigos"
        ]
      },
      "requirements": [
        "Vontade de Aprender!",
        "Computador com acesso a internet",
        "Requisitos mínimos para executar a Unreal Engine 4: Sistema Operacional: Windows 7/8/10 64-bits Processador: Quad-core Intel ou AMD, 2.5 GHz ou superior e Memória: Mínimo de 8 GB RAM",
        "Placa de vídeo: NVIDIA GeForce 470 GTX ou AMD Radeon 6870 HD series card ou superiores com DirectX 11, DirectX 12 ou superior. Obs: Placas com DirectX versão 10 não funcionam com os atuais editores da Unreal Engine"
      ],
      "description": "Garantia de 30 dias da Udemy. Invista no seu futuro sem risco!\nCURSO TOTALMEMTE COMPATÍVEL COM A UNREAL ENGINE 5!\nCRIEI AULAS EXPLICANDO TELAS, BLUEPRINTS E COMO FAZER O CONTEÚDO DO CURSO SE VOCÊ QUISER JÁ USAR A UNREAL ENGINE 5\nCrie seu 1º game na Unreal! Aprenda Programar jogos SEM códigos com Blueprints e crie um game completo do zero!\nDomine as Blueprints e construa um game completo com personagem, armas, inimigos, drones, IA, menu e instalador. Sem precisar de código!\nVocê já imaginou criar o seu próprio jogo do absoluto zero, exatamente como você sempre imaginou?\nEste curso é um guia prático e definitivo onde você não vai apenas aprender ferramentas, você vai construir, passo a passo, um jogo TPS (Tiro em Terceira Pessoa) completo e publicável\nNão é apenas um curso, é uma experiência hands-on que te transforma de iniciante em um criador de games.\nNão espere mais! Clique em \"Inscrever-se\" agora e comece hoje mesmo a dar vida ao seu universo gamer.\nEu Sou o Professor Marcos Pacheco e vou te guiar e te apoiar durante todo este curso!\nNeste curso, você terá a oportunidade de aprender a desenvolver um jogo completo, desde o início até a sua distribuição utilizando a poderosa Unreal Engine e as Blueprints. Não se preocupe se você não tem experiência em programação ou design de jogos, pois este curso foi especialmente projetado para iniciantes como você. Você aprenderá tudo o que precisa saber, desde a programação de personagens e ambientes até a criação da jogabilidade e animações.\nAlém disso, você terá acesso a um ambiente de aprendizagem interativo, juntamente com o meu suporte contínuo. Com isso, você poderá tirar suas dúvidas e receber feedback personalizado, o que contribuirá para o aprimoramento das suas habilidades e garantirá que você seja capaz de criar o seu primeiro jogo de sucesso.\nAgora você deve estar se perguntando: por que escolher a Unreal Engine e as Blueprints? A resposta é simples: elas são líderes indiscutíveis no mercado de desenvolvimento de jogos e são utilizadas por profissionais renomados em todo o mundo. Ao aprender a utilizar essas ferramentas, você estará investindo no seu futuro como desenvolvedor de jogos, abrindo portas para oportunidades incríveis em um mercado em constante crescimento.\nNão perca mais tempo e faça parte do empolgante universo dos jogos, criando a sua própria obra-prima. Inscreva-se agora neste curso e inicie a sua jornada para se tornar um desenvolvedor de jogos de sucesso. Tenho absoluta certeza de que você não irá se arrepender!\nAo longo deste curso, você vai aprender a criar um jogo completo a partir do zero, com exercícios práticos envolvendo um cenário Sci-fi, menus personalizados, personagens únicos, armas, sons, animações, drones, efeitos especiais, inimigos e até mesmo drones com inteligência artificial. E o melhor de tudo, você chegará à etapa final do curso, onde aprenderá a gerar o arquivo de instalação e setup do seu próprio game.\nE a programação do seu jogo será feita de forma intuitiva e visual, sem a necessidade de conhecimentos prévios em programação ou digitar códigos complicados. Tudo será realizado através das Blueprints, uma ferramenta poderosa que permite desenvolver toda a lógica do seu game de maneira simples e prática, apenas conectando blocos de ações.\nA Unreal Engine é o motor de desenvolvimento de jogos mais famoso e utilizado na atualidade! Ela é responsável por dar vida a sucessos como Fortnite, Gears of War, Borderlands, Batman: Arkham, Mass Effect, Final Fantasy VII Remake e muitos outros.\nE o melhor de tudo:\n- Não é necessário  ter conhecimentos prévios para começar a desenvolver seus próprios jogos.\n- Você pode criar jogos completos sem precisar escrever uma única linha de código, utilizando apenas as Blueprints.\n- A Unreal Engine é totalmente gratuita em sua versão completa, sem restrições.\nAlém disso, você terá à sua disposição uma ampla variedade de mapas, assets, personagens, materiais, animações e muito mais, tudo gratuitamente no marketplace da Epic Games.\nJunte-se aos quase 6 mil alunos que já se inscreveram neste curso de sucesso. Chegou a sua vez de aprender também!\nLembre-se de que todos os recursos, como assets, animações, personagens, sons, ferramentas, etc., utilizados neste curso são completamente gratuitos!\nVocê pode se inscrever neste curso sem riscos, pois terá 30 dias para experimentar o curso ou ter seu dinheiro de volta, com  reembolso garantido pela udemy!\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\nDomine os fundamentos da Unreal Engine e Blueprints criando seu primeiro jogo do zero! Com meu suporte personalizado de professor experiente, você terá assistência em cada etapa do curso, desde a concepção até o jogo finalizado. Aprenda na prática com orientações claras e tire todas suas dúvidas durante o seu aprendizado e desenvolvimento do game do curso.\nOi Tudo bem com você? Espero que sim!\nE o que você irá aprender?\nDifícil resumir 23h em apenas algumas linhas, mas vamos lá!\nAo iniciar o curso você irá ver os conceitos básicos e dar os seus primeiros passos na Unreal Engine\nDepois vai criar um primeiro cenário com materiais e texturas personalizadas que você  mesmo vai aprender a criar, utilizando os programas GIMP e AwesomeBump.\nApós esse primeiro momento, você vai configurar seu próprio personagem personalizado do jogo e programar as suas animações através de blueprint de animação, da máquina de estados de animação(state machine) e do espaço de mistura de animações(blend space).\nDepois você vai programar via blueprints a Inteligência Artificial dos inimigos\nVai criar e programar as indicações na tela(HUD) do sistema de saúde, pontuação do personagem e dos inimigos com indicação da quantidade de munição da arma do player e seu nº de vidas.\nEm seguida vai criar e programar o lançamento de um projétil do personagem e dos inimigos\nVai desenvolver a programação de como aplicar dano (ApplyDamage) tanto ao personagem quanto ao inimigo.\nPosteriormente você vai usar um personagem diferente  e vai aprender como configurar, programar  e  animar este personagem que você vai importar do site de personagens Mixamo e que terá animações de correr, pular, andar, guardar arma, agachar, parado(idle) e Aim Offset\nDepois você vai aprender como criar e disparar uma ação em determinado momento de uma animação(Anim Notify)\nIrá configurar animações com Física (ragdoll)\nVai colocar som ambiente do level, som dos tiros, som de impacto dos tiros nos drones, inimigo e jogador, som do voo do drone, etc.\nAlém disso, você vai criar mira do tipo crosshair para o jogador ter mais precisão em seus alvos\nVai programar o projétil para perseguir o alvo mesmo que este alvo se movimente depois do jogador ter disparado o tiro(Homing Projectile).\nVocê vai também criar inimigos que perseguem e lançam projéteis no jogador\nTambém vai programar drones que se movimentam utilizando inteligência artificial e que ao detectar o jogador(player) vão em direção a ele com movimentos e tiros em direção ao jogador.\nIrá programar a arma do player com sistema de tiro e zoom-in e zoom-out da mira cross para indicar onde o projétil deve atingir e causar dano.\nVocê vai desenvolver um Level Design utilizando Static Meshes com tema Sci-fi fornecidos gratuitamente no marketplace da Unreal\nVai programar efeitos customizados para cada tipo de impacto(Decal Material) em que sangue será jorrado ao impactar inimigos, efeito de tiro no chão e parede, efeito de impacto em drone para indicar que o drone foi atingido pelo projétil da arma do Jogador.\nVocê também vai aprender a como fazer o jogador reaparecer(respawn) após ter sido morto por algum inimigo ou drone.\nVai aprender a como manter os dados do jogador após o respawn\nIrá programar o aparecimento da tela de Game Over quando terminar o número de vidas do jogador.\nDepois vai criar os menus do game carregando(Loading), principal, pause e game over.\nAo final você irá aprender a criar o Packet e Setup .exe para você distribuir seu game ao interessados para eles possam instalá-lo e jogá-lo.\nO setor de desenvolvimento de jogos no Brasil\nNo Brasil, o setor de desenvolvimento de jogos é robusto, com mais de 1.000 estúdios ativos, refletindo um mercado local em crescimento e diversificação (dados do Visual Capitalist). Globalmente, há uma profusão de estúdios, concentrados principalmente na América do Norte, Europa e Ásia, especialmente no Japão, China e Coreia do Sul.\nA Unreal Engine se destaca como uma ferramenta extremamente versátil e valorizada em diversas indústrias, impulsionando a demanda por profissionais qualificados.\nA indústria de jogos continua a ser um campo lucrativo e em expansão, oferecendo amplas oportunidades tanto para desenvolvedores de jogos quanto para especialistas em outras áreas que utilizam tecnologias como a Unreal Engine. O desafio crucial é atender à crescente demanda por talentos especializados, uma questão particularmente relevante no Brasil, onde a oferta de profissionais qualificados ainda é limitada.\nOportunidades com Unreal Engine\nPara aqueles com experiência na Unreal Engine, as oportunidades se estendem para além do desenvolvimento de jogos:\nJogos: Inclui criação de jogos AAA, realidade virtual e aumentada.\nArquitetura: Modelagem e visualização arquitetônica em tempo real.\nMarketing: Produção de conteúdos interativos e envolventes para campanhas publicitárias.\nEngenharia: Simulações avançadas e prototipagem de produtos.\nCinema: Utilização em produções de efeitos especiais e animação.\nEmbarque nesta empolgante jornada de aprendizado e dê início à sua carreira como desenvolvedor de jogos, contando com suporte total ao longo do caminho!\nVocê pode se inscrever neste curso sem riscos, pois terá 30 dias para experimentar o curso ou ter seu dinheiro de volta, com  reembolso garantido pela udemy!\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\nVocê já pensou em fazer um curso na Udemy onde o professor realmente responde suas dúvidas, te orienta, e te acompanha de verdade durante toda a sua jornada?\nPois é exatamente isso que você vai encontrar nos meus cursos.\nDesde a primeira aula, você pode enviar quantas perguntas quiser, relacionadas aos conteúdos do curso, e eu estarei lá para te apoiar, corrigir seus erros e esclarecer suas dúvidas.\nNada de estudar sozinho ou ficar travado sem saber o que fazer. Aqui o aprendizado é interativo e com acompanhamento.\nEntão, use e abuse da ferramenta de perguntas da Udemy! Ela é seu canal direto comigo — e eu adoro quando os alunos participam.\nAproveite!\nUm grande abraço!\nNos encontramos já!\nProfessor Marcos Pacheco\nMestre em Sistemas e Computação",
      "target_audience": [
        "Qualquer pessoa interessada em Desenvolver Games SEM utilizar códigos de Linguagem de Programação (C++, JAVA, C#, JAVASCRIPT, ETC)",
        "Pessoas que desejam entrar para uma área que esta CRESCENDO MUITO no mundo: A ÁREA DE GAMES!",
        "Pessoas que querem ficar mais à vontade ao utilizar as Blueprints da Unreal Engine 4 no desenvolvimento de seus Games",
        "Profissionais que desejam começar a ingressar na de Desenvolvimento de Games e Produzir Projetos em Paralelo ao seu trabalho principal"
      ]
    },
    {
      "title": "Scratch Artık Çocuk Oyuncağı",
      "url": "https://www.udemy.com/course/scratch-artk-cocuk-oyuncag/",
      "bio": "Programlama Dünyasına Giriş İçin Muhteşem Bir Başlangıç",
      "objectives": [
        "programlama alt yapısını tamamlamış olacaksınız.",
        "Okuldaki derslerinize uygun proje ve fikirler geliştirebileceksiniz.",
        "Proje yarışmalarına katılabileceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Scratch Programını Tanıyalım": [
          "Scratch Nasıl Kurulur?",
          "Scratch Arayüzünün Tanıtımı",
          "Tiyatro ve Scratch arasındaki benzerlikler",
          "Yeni Dekor Ekleme",
          "Yeni Kukla Ekleme",
          "Koordinat Düzlemini Anlamak"
        ],
        "Kod Blok Gruplarını Tanıyalım": [
          "HAREKET Kod Bloğunu Tanıyalım",
          "GÖRÜNÜM Kod Bloğunu Tanıyalım",
          "SES Kod Bloğunu Tanıyalım",
          "KALEM Kod Bloğunu Tanıyalım",
          "VERİ Kod Bloğunu Tanıyalım",
          "OLAYLAR Kod Bloğunu Tanıyalım",
          "KONTROL Kod Bloğunu Tanıyalım",
          "ALGILAMA Kod Bloğunu Tanıyalım",
          "İŞLEMLER Kod Bloğunu Tanıyalım",
          "ÖZEL TAŞLAR HAREKET Kod Bloğunu Tanıyalım"
        ],
        "SCRATCH UYGULAMALARI": [
          "İsmimi Canlandır",
          "Ben Kimim",
          "Tanışma Oyunu",
          "Dans Oyunu",
          "Geometrik Cisimler: Kare",
          "Geometrik Cisimler: Üçgen",
          "Geometrik Cisimler: Altıgen - Sekizgen",
          "Geometrik Cisimler: Daire",
          "Olimpiyat Halkası",
          "Kendi Orkestranı Yap",
          "Piyano Yapalım",
          "Soru Sorma - Cevap Alma",
          "Alan Hesabı ve Çizimi",
          "Ehliyet Alabilir miyim?",
          "Askere Gidebilir miyim?",
          "Matematikten Kaç Aldın?",
          "Koordinat Düzlemi",
          "Sayı Tahmin Oyunu",
          "Labirent Oyunu",
          "İmpossible Rush",
          "Çarkıfelek",
          "Renk Çemberleri",
          "Balık Yakalama",
          "Kaleni Koru",
          "Dxball (Tuğla Kırma)",
          "Flappy Bird",
          "Kameramızın Hassasiyetini Öğrenelim",
          "Kamera ile Elma Yakalama",
          "Ziller Kimin İçin Çalıyor?",
          "Kafa Golü ( Kameralı)",
          "Donut Yakalama",
          "Ses Şiddetinin Grafiği",
          "Sıkıysa Yakala",
          "Tron",
          "Ok Atma",
          "Analog Saat",
          "Noel Baba",
          "Araba Yarışı",
          "Basit Matematik Testi"
        ],
        "Çeşitli Uygulamalar": [
          "Toptan Kaçma Oyunu ( Versiyon1)",
          "Toptan Kaçma (Versiyon 2)",
          "İç İçe Kareler",
          "İçiçe Üçgenler",
          "İçiçe Altıgenler",
          "İçiçe Sekizgenler",
          "Elma Yakalama Oyunu Versiyon-1",
          "Elma Yakalama Oyunu Versiyon-2",
          "Çift Sayı Yakalama Oyunu",
          "Çözümleme İşlemleri",
          "JackFelek",
          "DART oyunu"
        ]
      },
      "requirements": [
        "programlama dünyasına giriş yapmak isteyen herkes için uygundur",
        "Kamerası çalışan ortalama bir dizüstü bilgisayar yeterli olacaktır."
      ],
      "description": "Scratch, 8 ve daha yukarı yaştaki gençler için, 21. yüzyıl için yaratıcı öğrenme becerileri geliştirmelerine yardımcı olmak için geliştirildi. Çocuklar programlar üretirken, yaratıcı düşünme, mantıksal akıl yürütme, problem çözme ve işbirliği becerilerini geliştiren önemli matematiksel ve bilgisayar kavramlarını öğrenirler. Scratch projeleri tasarlamak, çocuklara yaratıcı düşünmeyi ve engelleri nasıl aşmayı ve sorunları çözmeyi öğrenmeye zorluyor; bu da güven oluşturuyor. Bu, öğrencilere hayatın ilerleyen zamanlarında avantaj sağlıyor.",
      "target_audience": [
        "Hiç bir programlama bilgisine sahip olmayan ve programlama öğrenmek isteyen herkes için muhteşem bir başlangıç"
      ]
    },
    {
      "title": "Criação de Arte para Games e Apps",
      "url": "https://www.udemy.com/course/arteparagames/",
      "bio": "Crie 3 estilos de Sprites e dê vida com Animação 2D.",
      "objectives": [
        "Pintar e Desenhar Sprites para Games e Apps em 3 estilos diferentes: Cell-Shaded, Pintura e Pixel-Art.",
        "Animar Sprites usando o método de animação por Bones na Spine.",
        "Ter uma visão geral dos principais conceitos de Arte para Games: Design, Cor, Luz e Sombra."
      ],
      "course_content": {
        "Criando o Personagem (Explorando o Design)": [
          "Seção 1 - Material de Apoio",
          "Desenhando pt.1 - Desenho com Formas Geométricas",
          "Desenhando pt.2 - Usando Referências Fotográficas",
          "Desenhando pt.3 - Idéias de Design",
          "Desenhando pt.4 - Encontrando a Versão Final"
        ],
        "Estilo Vetorial/Cell-Shading (Linhas e Cores)": [
          "Seção 2 - Material de Apoio",
          "Digitalizando e Corrigindo Desenhos à Lápis",
          "Arte Final - Desenhando as Linhas (Linework)",
          "Criando Máscaras de Cor e Seleção (Flatting)",
          "Colorindo pt.1 - Entendo as Cores Quentes e Frias (Color Temperature)",
          "Colorindo pt.2 - Cores Análogas e Complementares (Color Harmony)",
          "Colorindo pt.3 - Aplicando a Teoria e Ajustando as Cores",
          "Colorindo pt.4 - Valor e Saturação no Círculo Cromático (Color Wheel)",
          "Colorindo pt.5 - Ajustando Valor e Saturação nas Cores"
        ],
        "Estilo Vetorial/Cell-Shading (Luz e Sombra)": [
          "Seção 3 - Material de Apoio",
          "Iluminação Frontal pt.1 - Exemplo da Esfera",
          "Iluminação Frontal pt.2 - Exemplo da Espada",
          "Iluminação em Ângulo",
          "Iluminação - Modificando Temperatura das Cores (Hue Shift)",
          "Iluminação - Luz e Cor do Ambiente (Ambient Color)",
          "Shading pt.1 - Colocando Sombras no Sprite",
          "Shading pt.2 - Colocando Luz e Reflexos no Sprite"
        ],
        "Estilo HD/Pintura/Painterly": [
          "Seção 4 - Material de Apoio",
          "Removendo Linhas na Pintura",
          "Mesclando as Cores (Blending) - Técnica",
          "Mesclando as Cores (Blending) - Exemplo",
          "Pintando o Sprite em HD pt.1 - Preparando os Shapes",
          "Pintando o Sprite em HD pt.2 - Adicionando Volume",
          "Pintando o Sprite em HD pt.3 - Renderizando os Detalhes"
        ],
        "Estilo Pixel-Art": [
          "Seção 5 - Material de Apoio",
          "Configurando o Photoshop pt1. - Idéias sobre o Pixel-Art",
          "Configurando o Photoshop pt2. - Propriedades do Programa",
          "Desenhando em Pixel-Art pt.1 - Contorno do Sprite",
          "Desenhando em Pixel-Art pt.2-Contorno do Sprite",
          "Desenhando em Pixel-Art pt.3 - Corrigindo as Linhas",
          "Trabalhando com Paletas Limitadas de Cores (Flatting)",
          "Acrescentando Volume (Shading)",
          "Bônus: Versão 8-bit (Timelapse)"
        ],
        "Animação 2D com o Sistema de Esqueleto (Spine)": [
          "Seção 6 - Material de Apoio",
          "Recortando o Sprite (CutOut)",
          "Introdução à Spine pt.1 - Importando Peças e Criando Hierarquia",
          "Introdução à Spine pt.2 - Skinning e Slots",
          "Introdução à Spine pt.3 - Entendo o Workflow de Animação",
          "Animando o Sprite pt.1 - Blocando a Animação",
          "Animando o Sprite pt.2 - Quadros Intermediários (In-Betweens)",
          "Animando o Sprite pt.3 - Animações Secundárias (Swap de Imagens)",
          "Aula 46 - Visualizando Animações (Tutorial com Imagens)"
        ]
      },
      "requirements": [
        "Papel, Lápis, Borracha e um Cérebro aberto à Criatividade.",
        "Conhecimento **Prático** em algum software de Pintura Digital.",
        "Mesa Digitalizadora (Tablet)",
        "Versão Trial da Ferramenta de Animação Spine."
      ],
      "description": "Nesse Curso demonstro e explico o processo de criação de um Sprite (uma ilustração para jogo) em 3 estilos diferentes:\nCell-Shaded/Visual de Vetor: um estilo que dá ênfase nas linhas, cores e sombreamento chapado.\n\nHD / Visual de Pintura:  àquele visual de pintura (painterly) muito utilizado em jogos da Blizzard, Valve e Ilustrações Digitais.\n\nPixel-Art: o método mais antigo e tradicional de criação de Sprites que voltou com força total nos jogos da Appstore / Google Play Store.\n\nTambém apresento uma ferramenta inovadora para animação 2D: a Spine da Esoteric Software.\nEnsino o workflow básico e faço um loop de animação para mostrar como esse sistema de movimento por Bones (ossos) funciona na prática.\n\nAlém do passo-a-passo na criação dos Sprites, sempre que um novo conceito ou idéia é abordada (Teoria de Cores, por exemplo), faço uma demonstração de como aplicar a teoria.\n\nEnfim. Compilei em um workshop direto-ao-ponto o que sei sobre criação de arte para games. Do Rascunho à Animação, usando uma linguagem simples e sem foco algum em software específico.\n\nE claro. Tudo isso em Português. Do Brasil. :)\n\nSe você já desenha ou pinta no computador esse Curso vai servir como uma excelente referência de como a produção de arte pra games é feita hoje em dia.\n\nE se você está começando a se interessar pela área só agora ou é um Desenvolvedor que precisa conhecer todas etapas no processo de criação, esse Curso vai ser útil da mesma forma.\n\nEspero -realmente- que gostem do curso.\n\nAcompanhe os vídeos. Replique as idéias e Faça seus próprios Sprites...\n\"Conhecimento só cristaliza com Prática.\"\n\nVamos lá ?\n\n- Dado",
      "target_audience": [
        "O Curso foi feito para quem gosta de desenhar e quer aprender mais sobre a área de Arte para Games.",
        "E também para Desenvolvedores que precisam conhecer um pouco mais sobre o processo de Criação."
      ]
    },
    {
      "title": "Kurs GODOT - Twórz gry bez kodowania z pomocą AI",
      "url": "https://www.udemy.com/course/godot-tworz-gry-bez-kodowania-z-pomoca-ai/",
      "bio": "Dla początkujących. Dla tych co nie wiedzą nic na temat programowania. Dla tych co chcą tworzyć. Stwórz grę w Godot",
      "objectives": [
        "Dowiesz się jak obsługiwać Godot",
        "Stworzyc Twój pierwszy świat gry",
        "Nauczysz się dodawać elementy takie jak gracz/przeciwnik",
        "Zrozumiesz ważne pojęcia jak SpriteSheets",
        "Dowiesz się jak zarządzać scenemai/node i tworzyć skrypty",
        "Jak tworzyć kolizje i inne interakcje z przeciwnikami",
        "Jak korzystać z AI do programowania i uczenia się programowania",
        "Jak szukać błędów w kodzie/grze/AI",
        "Czym jest Viewport",
        "Co to są Tilemapy/TileSety",
        "Jak zarządzać warstwami/maskami/ wyświetlaniem obiektów częsciowo za innym obiektem",
        "Zarządzanie zdarzeniami/sygnałami",
        "Tworzenie Animacji postaci i Tilemap",
        "Jak stworzyć interfejs gry np. dla wyników o grze",
        "Jak generować przeciwników losowo",
        "Jak zapauzować i zrestartować grę?"
      ],
      "course_content": {
        "Wprowadzenie do Godot": [
          "Co to jest Godot?",
          "Instalacja i pobranie Godot",
          "Krótkie wprowadzenie"
        ],
        "Podstawy Tworzenia Twojej GRY": [
          "Stwórz projekt Twojej pierwszej GRY w Godot",
          "Wybierz i dodaj elementy, które stworzą Twoją GRĘ",
          "Włączamy Twoją pierwszą grę i wyjaśniamy WAŻNE POJĘCIA - SUPER WAŻNA LEKCJA",
          "Dodajemy gracza do naszego świata | sprite sheet | CharacterBody2D",
          "[ĆWICZENIE] - DODAJ PRZECIWNIKA",
          "Czym są sceny? Jak łączyć sceny i po co w ogóle to robić?",
          "[NOTATKA] scena/node",
          "Sprawmy, aby gracz mógł ruszać swoją postacią klawiaturą! Nasz pierwszy SKRYPT",
          "Jak zmieniać wartości wszystkich elementów, a jak indywidualnie",
          "[NOTATKA] Gracz/Przeciwnik/Menu - węzęł - budulec",
          "[NOTATKA] SCENA"
        ],
        "Kolizje & Programowanie z AI": [
          "Pozwól graczowi zderzać się z przeciwnikami :)",
          "Naucz się programować z AI zachowania w Twojej grze",
          "Debug Mode - Usprawniamy kolizje i wyjaśniamy dziedziczenie w nodes",
          "Zmiana animacji z idle na walk"
        ],
        "Tworzenie świata gry": [
          "Viewport i camera akcji",
          "Tilemap - mapa naszego świata",
          "[NOTATKA] Tilemapy & TileSet",
          "Jak dodać kolizję do Tiles? Robimy granicę naszego świata",
          "Warstwy - Co to jest i jak rysować na różnych warstwach?",
          "Obsługa kontrolera xbox - ruch góra i doł",
          "Kolejność wyświetlania obiektów - offset i y-sorting",
          "Umieszczanie scen wewnątrz tilemap",
          "Malowanie wielu obiektów z pomocą scatteringu",
          "Animacja Tile w Tilemapie"
        ],
        "Umieranko": [
          "SYGNAły - wykrywamy Area2D, która powoduje śmierć - layer i MASK",
          "[NOTATKA] Typy body",
          "UI - Game Over | AutoLoading Sceny | Canvas Layer"
        ],
        "Spawn": [
          "Zróbmy timer - wytrzymaj jak najdłużej - im dłużej wytrzymasz tym lepiej",
          "EnemyRespawner - losowi przeciwnicy w losowych miejsach"
        ],
        "Walka i efekty dźwiękowe": [
          "Atakujemy i wykrywamy atak - grupy elementów",
          "Dodajemy dźwięk do ataku",
          "Dodajemy Muzykę w tle (plus linki do darmowych)"
        ],
        "Godot & Git - tworzenie punktów kontrolnych - backup": [
          "Podstawy Git - commit, branch, discard, push"
        ],
        "Debugowanie kodu": [
          "Jak zmienić parametry gry, bez wyłączania? Jak ustawić 'grę' na \"always on top\""
        ],
        "Godot & VSC": [
          "Jak połączyć Godot z VSC z darmowym pluginem AI?"
        ]
      },
      "requirements": [
        "Potrzebujesz mieć komputer, a nawet nie - Godot możesz odpalić nawet na smartfonie. Dobre chęci i pozytywna energia i działasz :-)"
      ],
      "description": "Nie wiesz nic na temat tworzenia gier?\nNie wiesz nic na temat programowania?\nNie masz zdolności graficznych?\nNie ma to kompletnie znaczenia.\nW kursie pokażę Ci jak stworzyć grę od podstaw w GODOT.\nDo programowania skorzystamy z AI, która zastąpi brakujące umiejętności.\nPokażę Ci również jak wykorzystać AI, aby nauczyła Cię tego co 'wypluwa', abyś po kursie miał pojęcie co z czego wynika.\nAbyś potrafił nauczyć się kodować i tworzyć gry z AI. Abyś radził sobie sam :-)\nKorzystamy z darmowych, ale pięknych assetów (pokażę Ci jak je dostać), które pozwolą Ci stworzyć coś co od razu ładnie wygląda, nawet jak nie potrafisz w 'grafikę' ^^\nCzy dołączysz do mnie do tej cudownej przygody jaką jest tworzenie gier komputerowych?\nJa zawsze chciałem tworzyć gry, zapewne tak jak TY, ale powstrzymywało mnie masa błędnych przekonań, które złamiemy w tym kursie.\nDla kogo jest ten kurs?\nKurs skierowany jest do pasjonatów gier komputerowych na każdym etapie ich kariery.\nGWARANCJA\nPonad 340,000 studentów wzięło udział w moich kursach. Gwarantuję Ci satysfakcję z tego kursu. Jeśli jednak będzie inaczej, to jestem na tyle pewny jakości, że możesz żądać pełny zwrot pieniędzy w ciągu 30 dni od zakupu.\nJeśli masz jakiekolwiek pytania dotyczące tematów omówionych w kursie Godot, śmiało pytaj.\nZawsze chętnie pomogę tym, którzy chcą się uczyć!\nNie kupuj kota w worku!\nOglądnij darmowe przykładowe lekcje przed zakupem.\nDOŁĄCZ TERAZ i ułatw sobie życie z pomocą Godot.",
      "target_audience": [
        "Początkujący twórcy gier komputerowych"
      ]
    },
    {
      "title": "【한글자막】 블렌더 애니메이션 & 리깅 (Rigging): 창작물에 생명력 불어넣기!",
      "url": "https://www.udemy.com/course/blender-animation-rigging-korean/",
      "bio": "블렌더에서 모델 및 캐릭터를 리깅하고 애니메이션하는 방법을 배워보세요! 모든 수준의 학습자에게 적합합니다. 블렌더 4 호환. 앞서 해보기 (얼리 액세스, early access) 로 만나보세요!",
      "objectives": [
        "리깅(Rigging) 과 애니메이팅의 기본적이고 중요한 원칙을 이해합니다.",
        "기본 캐릭터 릭(rig) 으로 시작하여 더 복잡한 리깅과 툴을 익혀보세요.",
        "기본 및 자동화된 고급 릭으로 캐릭터 리깅하기",
        "간단하면서도 표현력이 풍부한 애니메이션 만들기",
        "달리기 사이클과 공격 애니메이션과 같은 캐릭터의 동작을 만드는 원리와 방법을 배워보세요.",
        "게임 엔진에 바로 사용할 수 있는 캐릭터 애니메이션을 빠르고 쉽게 제작하세요.",
        "또한 작업물을 게임엔진으로 내보내고 실제로 작동하도록 하는 방법도 보여드립니다!"
      ],
      "course_content": {
        "강의 소개 및 셋업하기": [
          "강의 소개",
          "키프레임 이해하기",
          "커뮤니티 및 지원",
          "타임라인 및 기록",
          "색상 애니메이션",
          "애니메이션 렌더링하기",
          "그래프 에디터 소개",
          "보간 (Interpolation)",
          "핸들 유형"
        ],
        "리깅(Rigging)의 기초": [
          "섹션 소개: 리깅의 기초",
          "Parenting 이해하기",
          "치명적인 함정 애니메이션",
          "뼈대 기초",
          "뼈대 리깅하기",
          "치명적인 뱀 애니메이션",
          "다리 리깅 및 웨이트(Weight) 페인팅하기",
          "FK 로 애니메이션하기",
          "IK 리깅하기",
          "IK 다리 애니메이션하기",
          "IK & FK 팔 릭 생성하기",
          "IK & FK 팔 애니메이션"
        ],
        "기본 사람 릭(Rig)": [
          "섹션 소개: 기본 사람 릭",
          "기본 캐릭터 릭",
          "릭 완성하기",
          "Parenting 및 Weights",
          "기본 스탠딩 포즈",
          "캐릭터 포즈 취하기"
        ],
        "Rigify": [
          "섹션 소개: Rigify",
          "Blender 4 업데이트",
          "Rigify 릭 포지셔닝",
          "새 릭 생성 및 패런팅하기",
          "새 릭 편집하기",
          "웨이트 페인팅",
          "달리기 사이클 1부",
          "달리기 사이클 2부"
        ],
        "애니메이션 원리": [
          "섹션 소개: 애니메이션 원리",
          "릭 & 스킨 베니 더 빈(Skin Benny the Bean)",
          "흔들림 액션",
          "왼쪽 및 오른쪽 보기",
          "충격과 스트레칭",
          "주위를 둘러보다가 충격받기",
          "팔로우 스루 & 오버랩",
          "기대 & 점프",
          "긴 점프"
        ],
        "캐릭터 애니메이션": [
          "섹션 소개: 캐릭터 애니메이션",
          "간단한 Idle 애니메이션",
          "Idle & 둘러보기 - 1부",
          "Idle & 둘러보기 - 2부",
          "검 들고있기",
          "포즈 라이브러리",
          "Idle - 무기 들고 있기 - 셋업",
          "Idle - 무기 들고 있기 - 완성",
          "추력 공격 - 1부",
          "추력 공격 - 2부",
          "추력 공격 - 3부",
          "더블 스와이프 공격"
        ],
        "내보내기 (Exporting)": [
          "섹션 소개 : 내보내기",
          "액션 깔끔하게 정리하기",
          "FBX’s 익스포트",
          "Unity로 임포트하기",
          "모든 액션 임포트하기",
          "액션 문제 해결하기",
          "강의 마무리",
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "블렌더에 대한 기본적인 이해가 필요하며, 최소 몇 시간 이상 블렌더를 모델링하고 사용해 본 경험이 있어야 합니다.",
        "대부분의 최신 컴퓨터에서 블렌더를 실행할 수 있지만, 블렌더 최소 요구 사항을 확인하여 블렌더 실행이 가능한 컴퓨터 사양인지 확인하세요."
      ],
      "description": "좋아하는 게임 캐릭터에서 볼 수 있는 것과 같은 멋진 애니메이션을 만들고 싶으신가요?\n이 강의에서는 여러분의 창작물에 생명을 불어넣고 모델과 캐릭터를 리깅하고 애니메이션을 적용하는 방법을 배웁니다.\n이 강의는 주로 캐릭터에 초점을 맞추고 있지만, 배운 원리와 툴은 블렌더에서 그 어떤 것이든 애니메이션하는 데 적용할 수 있습니다.\n이 강의를 마치면 게임 엔진에서 (혹은 다른 어떤 용도로든!) 바로 사용이 가능한 캐릭터를 리깅하고 애니메이션을 적용할 수 있게 됩니다!\n\n\n이 강의에서 배우게 될 내용:\n\n\n리깅과 애니메이션의 기본적이고 중요한 원리 이해\n기본 캐릭터 리깅부터 시작하여 더 복잡한 리깅과 툴을 배웁니다.\n기본 및 자동화된 고급 릭으로 캐릭터 리깅하기\n간단하고 표현력이 풍부한 애니메이션 만들기\n달리기 사이클과 공격 애니메이션과 같은 캐릭터의 동작을 만드는 원리와 방법\n게임 엔진에 바로 사용할 수 있는 캐릭터 애니메이션을 빠르고 쉽게 제작하는 방법\n게임 엔진으로 내보내고 게임 엔진에서 바로 작동하도록 하는 방법\n\n\n또한 Grant 강사님이 움직임을 위한 템플릿으로 이 모든 애니메이션을 사용하는 모습을 직접 볼 수 있는 보너스 영상도 제공됩니다.\n이 강의는 Blender 4와 호환되며, Blender 4.1에서 작동 방식이 변경되는 경우 업데이트될 예정입니다.\n이 강의는 블렌더 인터페이스에 대한 기본적이거나 상당한 이해가 있고(최소 몇 시간 이상의 모델링 및 블렌더 사용 경험), 게임 및 게임 캐릭터용 애니메이션을 제작하려는 경우 적합합니다.\n한번의 수강신청으로 강의에 평생 액세스할 수 있습니다. 강사들은 모델링과 코딩과 관련한 충분한 자격과 경험을 갖추고 있으므로 복잡한 개념을 명확하게 설명할 수 있을 뿐만 아니라 재미 있게 가르칩니다.\n또한 GameDev tv의 강사, 조교, 커뮤니티가 여러분의 질문에 답해주고 여러분의 성공을 응원하는 저희의 Q&A 게시판에 액세스할 수 있습니다.\n\n\n무엇을 망설이시나요? 지금 바로 수강신청하여 애니메이션을 시작하세요!\n많은 요청이 있었던 이 애니메이션 강의에 일찍 참여하세요! 더 멋진 콘텐츠가 정기적으로 추가되고 있습니다. 그러니 미루지 마시고 지금 바로 수강신청하세요!",
      "target_audience": [
        "이 강의는 블렌더를 사용해 본 경험이 있고 자신의 창작물에 생명을 불어넣고 싶은 분들에게 추천합니다!",
        "게임과 게임 캐릭터를 위한 애니메이션을 제작하고 싶다면 이 강의가 안성맞춤입니다!"
      ]
    },
    {
      "title": "Aprenda Unity 2D e 3D e Programação em C#",
      "url": "https://www.udemy.com/course/aprenda-unity-2018-e-faca-seu-primeiro-jogo/",
      "bio": "Unity 2D e 3D, da programação em C# até a publicação, crie games Plataforma 2D, RPG 3D (estilo Diablo) e Text-based",
      "objectives": [
        "Criar um jogo COMPLETO, desde a organização até a publicação",
        "Programar jogos em C#",
        "Saber o que é, como funciona e como instalar a Unity 2018",
        "Utilizar o Editor da Unity 2018",
        "Saber o que é uma Game Engine e como elas funcionam"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "Comunidade de Apoio",
          "Como Aproveitar ao Máximo seu Investimento (Não pule esta aula)",
          "Conversa sobre o Mercado de Jogos",
          "Game Engines (Motores de Jogo)",
          "Unity e jogos feitos com ela",
          "Quiz de Fixação da Seção"
        ],
        "Downloads e Instalações (caso tenha dificuldade em instalar sozinho)": [
          "Introdução",
          "Criando o ID de usuário e navegando pelo site da Unity",
          "Download e Instalação Unity 2018 - Mac",
          "Download e Instalação Unity - Windows",
          "Download e Instalação Unity HUB - Windows",
          "Download e instalação Unity HUB - Mac"
        ],
        "Novidades versão 2018": [
          "Conhecendo o Unity HUB",
          "Package Manager",
          "Aula Extra - Unity 2019 (Atualização e novas ferramentas)"
        ],
        "Conhecendo o Editor - Unity 2018": [
          "Janelas do Editor e Layout",
          "Janelas Hierarchy e Inspector",
          "Plano Cartesiano + Eixos do Editor",
          "Gizmos",
          "Menus",
          "Algumas Definições Importantes"
        ],
        "Programação em C#": [
          "Introdução",
          "Scripts",
          "Script das aulas de Variáveis",
          "Script da Aula de Casting",
          "Script da Aula de Operadores",
          "Script da Aula Métodos",
          "Script das aulas de If-Else",
          "Script da Aula Condicional Switch",
          "Scripts das Aulas Acessando Componentes",
          "Scripts das Aulas sobre Arrays",
          "Scripts da Aula de Listas",
          "Script da Aula de Enum - Enumeradores",
          "Script da Aula Corrotinas",
          "Scripts da Aula Singletons",
          "Variáveis",
          "Variáveis (Parte 2) e Constantes",
          "Variáveis no Editor",
          "Quiz de Fixação",
          "Comentários",
          "Casting / Conversão",
          "Escopo",
          "Operadores",
          "Métodos",
          "Tarefa da Aula de Métodos",
          "Passando Parâmetros - Valor x Referência",
          "Operadores Lógicos && e ||",
          "Condicional If-Else",
          "Exemplificando If-Else",
          "Minigame Arkanoid",
          "Minigame Arkanoid - Parte II",
          "Minigame Arkanoid - Parte III",
          "Minigame Arkanoid - Parte IV",
          "Minigame Arkanoid - Parte V",
          "Condicional Switch",
          "Acessando Componentes - GetComponent<>()",
          "Acessando Componentes Parte 2 - GetComponent<>()",
          "Acessando Componentes Parte 3 - GetComponent<>()",
          "Arrays",
          "Array Bidimensionais",
          "Listas",
          "While - Laços de Repetição",
          "Do While - Laços de Repetição",
          "Foreach - Laços de Repetição",
          "For - Laços de Repetição",
          "Iterando Arrays Uni e Bidimensionais",
          "Enum - Enumeradores",
          "Corrotinas",
          "Singletons",
          "Delegates, Events e Actions"
        ],
        "Plataforma 2D (foco nas ferramentas do editor)": [
          "Apresentação do jogo",
          "Primeiras configurações",
          "Organização com pastas",
          "Importando os Assets Para o Projeto",
          "Importando músicas e SFX grátis da Asset Store",
          "Conhecendo os Prefabs",
          "Mexendo com animações - Spikes",
          "Finalizando e Criando o Prefab dos Spikes",
          "Prefab Estrela",
          "Prefab Coração",
          "Prefabs Blade e Plataforma Móvel",
          "Cortando Sprites no Sprite Editor (dentro da Unity)",
          "Personagem - Animações e Animator Controller - Parte 1",
          "Animator - Adicionando Parâmetros e configurações extras",
          "Adicionar o Background e o seu Script",
          "Tile Palette",
          "Layout Tile Map - Exemplo",
          "Criando o Mapa",
          "Ajustes e Inserção dos Prefabs - Parte I",
          "Inserção Assets e Prefabs - Parte II",
          "Inserção Assets e Prefabs - Parte III",
          "Criação da Partícula do Veneno",
          "Organização dos objetos da cena",
          "Inserção Assets e Prefabs - Parte IV",
          "Alinhando as Estrelas",
          "Programação - Introdução e Movimento do Personagem",
          "Programação - Continuação do Movimento do Personagem",
          "Programação - Coletando Estrelas e Vidas + Ajustes no movimento",
          "UI (User Interface) - Textos Parte I",
          "UI (User Interface) - Textos Parte II",
          "UI (User Interface) - Botões",
          "Dano ao Personagem e Game Over (Programação e Colliders)",
          "Cinemachine - Instalação e uso para Movimentar a Câmera",
          "Platform Effector 2D - Efeito de Plataforma",
          "Controlando as Animações com o Script",
          "Programação - Usando o Botão para Abrir a Porta",
          "Programação - \"Flipando\" o Personagem",
          "Ajuste no \"z\" dos objetos e Dano da Blade",
          "Personagem Vermelho ao Sofrer Dano",
          "Programação - Ganhar o Jogo + Últimos Ajustes",
          "Aulão - Programando e Inserindo o Áudio",
          "Final",
          "Build HTML5 , .exe (Windows) ou .app (Mac)",
          "Publicação",
          "Arquivo do Projeto Completo"
        ],
        "RPG 3D -Diablo lookalike": [
          "Introdução",
          "Criar Projeto",
          "Recursos para a Construção da Vila",
          "Recursos para a água",
          "Recurso - Characteres",
          "Recursos - Particles e Weapons",
          "Recursos UI",
          "Terreno e Relevo",
          "Água",
          "Texturas - Parte 1",
          "Grama Alta e Flores",
          "Texturas - Parte 2",
          "Floresta",
          "Pedras do Lago",
          "Pedras do Rio",
          "Troncos e \"Aguapé\"",
          "Muro",
          "Pontes",
          "Acertos na Ponte e na Textura",
          "Caminho para o Castelo",
          "Vila - Parte 1",
          "Vila - Parte 2",
          "NavMesh",
          "Movimento Knight",
          "Marcando Lugares como Walkable no NavMesh",
          "Script EnemiesController",
          "Animator da Spider",
          "Explicação da Lógica dos Inimigos",
          "FollowDistance e AtackDistance (OnDrawGizmos)",
          "Método FollowPlayer() e NavMeshAgent da Spider",
          "Método AttackPlayer() - trabalhando com Métodos Virtuais e Herança",
          "Implementando AttackPlayer() do MeleeAttack",
          "Implementando AttackPlayer() do MeleeAttack - Parte 2",
          "Dano do Inimigo",
          "Ajustes Script de Dano do Inimigo",
          "Inimigo olhar sempre para o Player",
          "Cinemachine - Mixing Camera",
          "Configurações da 1 Person Camera",
          "Configurações da 3 Person Camera",
          "Inserindo Collider na 3 Person Camera",
          "Script MixingCameraController - Mudança com o Mouse",
          "Script MixingCameraController - Tecla V e ajustes",
          "Level System - Relembrando Progressão Geométrica",
          "Level System - Script",
          "Dano e Morte dos Inimigos",
          "PlayerHolder",
          "Recursos - Animação Knight",
          "Player Animator, Blend Tree e Avatar Mask",
          "Blend Tree - Script e Ajustes",
          "Introdução Interações do Player",
          "GetObjectsInRange - Parte 1",
          "GetObjectsInRange - Parte 2",
          "PlayerController Método Interacting()",
          "Switch dos Interactables e PlayerAttack()",
          "Interaction Cam e Ajuste no Field of View das Câmeras",
          "Interaction Cam - Método InteractingWithTarget()",
          "InteractionCam - Ajustes",
          "bool isOccupied",
          "Equipments Prefabs",
          "Spawn Points dos Equipments e Melhorias nos Prefabs",
          "Ajuste animação Walk do Player",
          "Informando quais inimigos serão atacados",
          "Continuação Corrotina PlayerAttack()",
          "Aperfeiçoando Scripts do Player",
          "Transformando SetFocus() em Corrotina",
          "SettingFocus() e DisableTarget()",
          "Zolrik - Inimigo Humanóide",
          "Prints das Transições - (leiam o texto antes de usar)",
          "Zolrik - Criando o Prefab",
          "Zolrik - Ajuste no Delay e Setup do Walk",
          "Ajustes SetFocus() e InteractionCam",
          "Animation Event no ataque do Zolrik e da Spider",
          "Boss",
          "Script RandomTeleporte",
          "Animações Teleporte",
          "State Machine - Behaviors do Boss Zolrik",
          "Script BossController",
          "Script BossController - Continuação",
          "Partícula de Tornado para o Teleporte",
          "Acionando a Partícula do Tornado",
          "Ataque do Player ao Boss",
          "Boss Zolrik - Olhar e Atacar o Player",
          "Trigger Spawner",
          "Trigger Spawner - Parte II",
          "Object Spawner",
          "Downloads e Introdução: Quests e Diálogos",
          "Alterações no Script MovePlayer",
          "Scrip Quest",
          "Script QuestGoal",
          "Script QuestGiver",
          "Script QuestManager",
          "Primeiras Configurações e Explicações sobre UI"
        ],
        "Navio Fantasma - Text-based (Suspense, Puzzle e Diálogos)": [
          "Introdução",
          "Setup do Projeto",
          "Prefabs dos Personagens",
          "Criando as Cenas",
          "Configurando a Cena Guia - Parte 1",
          "Configurando a Cena Guia - Parte 2",
          "Script para trocar de Cena",
          "Cena Menu Inicial",
          "Começando a Cena Start (Início do Jogo)",
          "Script para Ativar / Desativar Painéis",
          "Recursos - Bilhetes",
          "Painel Bilhete da Kim",
          "Painel Sleep",
          "UI - Menu Inferior",
          "Script dos Itens - Scriptable Objects",
          "Recursos - Itens",
          "Criando Itens",
          "UI do Inventário"
        ]
      },
      "requirements": [
        "Conhecimentos básicos do sistema Windows ou Mac",
        "Um computador que suporte a instalação da Unity 2018",
        "Instalação do Unity HUB (grátis e opcional)"
      ],
      "description": "***Este curso abrange desde o inicio para quem não tem conhecimento algum até o desenvolvimento de um RPG complexo, caso você já conheça a Unity avalie a lista de aulas para saber se há tópicos que te interessam, ao assistir o curso pode pular os assuntos que já tem domínio.***\n\n\n\n\nVocê gosta de games e gostaria de saber como eles são feitos? Já é da área mas nunca trabalhou com a Unity? Já conhece mas quer relembrar ou ver as novidades da versão 2018? Este curso é para você! Um curso simples, voltado principalmente para pessoas que nunca tiveram contato com a Unity.\nNunca usou um motor de jogo antes? Não tem experiência nenhuma? Fique tranquilo, vamos começar... do começo, é claro. Primeiro vamos fazer um apanhado geral do Mercado de Jogos  e do que são Game Engines (motores de jogo), do que é e como começou a Unity 3D, como instalar o software, como instalar os softwares opcionais, as principais ferramentas do editor da Unity e finalmente  o desenvolvimento do game,  que será explicado passo a passo e não é necessário ter conhecimentos prévios de programação ou qualquer outra coisa (basta saber usar um computador). Irá também aprender o básico de Programação em C# em uma sessão específica e durante o desenvolvimento do jogo as partes do código serão explicadas de forma que você entenda o que está sendo feito e o código final será disponibilizado como recurso do curso, assim como o projeto final, assim você poderá comparar o meu projeto com o projeto que você mesmo desenvolverá ao longo do curso.\nO projeto de plataforma 2D é simples, mas usa várias ferramentas importantes da Unity e possibilita começar esta jornada incrível em uma das melhores Game Engines do mercado. A fase que desenvolveremos terá começo, meio e fim, possibilidade de recarregar, morrer, ganhar vida, ganhar pontos, etc.",
      "target_audience": [
        "Pessoas que têm interesse em conhecer o desenvolvimento de jogos",
        "Quem queira conhecer a nova versão da Unity"
      ]
    },
    {
      "title": "Unreal Engine 5 ile oyun geliştirme",
      "url": "https://www.udemy.com/course/unreal-engine-5-ile-oyun-gelistirme/",
      "bio": "0 dan ileri düzeye oyun geliştirmeyi öğreniyoruz. Online story gibi bir çok oyunları uzun vadede geliştireceğiz",
      "objectives": [
        "Unreal engine ile orta seviyede bilgi sahibi olucaksınız",
        "Unreal engine ile online oyun nasıl yapılır",
        "Unreal engine ileri seviye öğrenme",
        "Detaylı oyun geliştirme"
      ],
      "course_content": {},
      "requirements": [
        "0 dan eğitim"
      ],
      "description": "Bu kursumuzda save sistemi menü yapımı ve widget gibi işlemlere bakıcaz.\nKurs ömür boyu geliştirilmeye devam edilecektir.\nKursta aktif olarak yenilikler paylaşılacak ve sürekli sistemler kodlanıp ömür boyu destekenlemeler sağlanılacaktır.\nUzun vadede yüz binlerce video yükleme çalışacağız.\nİlk platform oynuyla başlayıp zaman zaman güncellemeler yapıp farklı farklı sistemler entegre etmeye çalışıcaz.\n0 dan anlatım ile videoda gösterilenleri kolayca anlayabiliceksiniz.\nTemel blueprint dersleri ile yazdığımız sistemleri kolayca anlayabiliceksiniz.\nYapımıız kurduktan sonra yapay zeka duruma göre rpg sistemlerini geliştirebiliriz.\nDaha ilerleyen zamanlarda online sistemine bakabiliriz şuanlık hali hazırda online sistemimiz yok.\nVideoda konuları anlayabilmeniz için detaylı anlatım sağlanacaktır.\nProjede ücretsiz assetler kullanıcaz herhangi bir ücret ödemek durumunda kalmayacaksınız.\nBu projede unreal engine 5 ile yapabiliceğimiz herşeyi yapmaya çalışacağız.\nProjemizde detaylı unreal engine editörünü tanıtım gibi şeyler olacaktır.\nBu eğitim seti tamamen Türkçe'dir! Hiçbir şekilde daha önceden programlama/oyun geliştirme tecrübeniz olmadığı varsayılarak anlatıldı. Temel bilgiler ile başlayarak sağlam bir altyapı oluşturduktan sonra kendi ellerimizle gerçekçi oyunlar oluşturarak pratiğimizi güçlendireceğiz.\nBilmeniz gereken şeyler\nÇok birşey bilmenize gerek yoktur zaman zaman güncellemeler yapılır herkese ithap edilecek şekilde videolar güncellenecektir\nVideolar sürekli güncel tutulacaktır.\nProjeler geliştirilip ardından udemy video sayfasında toplu yayınlanacaktır parça parça yayınlamak yerine bir anda hepsini yayınlamayı tercih ediyorum.\nBu kurs ile platform ve online gibi oyunlarda bilgi sahibi ve kendi gelişiminize göre rahatlıkla her istediğiniz türden oyunlar yapma şansınız vardır.\nKurs hakkında aklınıza takılan soruları videonun içersinde sorabilirsiniz\nKursun video çözünürlüğünü 1920x1080 p de çıkarmaya özen gösteriyoruz herşey hd olarak rahat rahat görebilirsiniz.",
      "target_audience": [
        "Oyun geliştiricileri"
      ]
    },
    {
      "title": "Unity 零基礎到製作2D手機遊戲",
      "url": "https://www.udemy.com/course/unity-2d-develop/",
      "bio": "用Unity製作2D冒險遊戲",
      "objectives": [
        "基本C#程式語言",
        "Unity操作介面與基本操作",
        "Animation動畫製作",
        "玩家角色製作、敵人及BOSS的AI設計",
        "使用RigiBody 2D",
        "使用UI系統及了解Safe Area",
        "使用Audio系統",
        "使用Tile Map設計關卡",
        "使用2D Cinemachine",
        "製作關卡選擇系統",
        "轉換場景的動畫製作",
        "Unity New Input System",
        "輸出成Android用檔案及安裝到安卓手機",
        "輸出成iOS用檔案及安裝到iPhone"
      ],
      "course_content": {
        "第0章 教學內容及硬體需求": [
          "0-1本課程要教的遊戲",
          "0-2硬體需求"
        ],
        "第1章 Unity下載與設定": [
          "1-1 Unity安裝",
          "1-2 專案建立與版面解說",
          "1-3 Visual Studio連結跟設定"
        ],
        "第2章 基礎C#": [
          "2-1 基礎C#-腳本內容解說",
          "2-2 基礎C#-變數介紹與宣告1",
          "2-3 基礎C#-變數介紹與宣告2",
          "2-4 基礎C#-變數的可視範圍",
          "2-5 基礎C#-變數的計算1",
          "2-6 基礎C#-變數的計算2",
          "2-7 基礎C#-函式1",
          "2-8 基礎C#-函式2",
          "2-9 基礎C#-條件句if",
          "2-10 基礎C#-條件句switch",
          "2-11 基礎C#-陣列Array 1",
          "2-12 基礎C#-陣列Array 2",
          "2-13 基礎C#-List 1",
          "2-14 基礎C#-List 2",
          "2-15 基礎C#-for迴圈",
          "2-16 基礎C#-while迴圈",
          "2-17 基礎C#-Coroutines協程",
          "2-18 基礎C#-類別與物件Class and Object",
          "2-19 基礎C#-繼承Inheritance",
          "2-20 基礎C#-封裝Encapsulation",
          "2-21 基礎C#-委託Delegate 1",
          "2-22 基礎C#-委託Delegate 2"
        ],
        "第3章 玩家製作": [
          "3-1 玩家角色-圖檔下載",
          "3-2 玩家角色-解析度設定及圖檔匯入",
          "3-3 相關知識-MainCamera基本設定",
          "3-4 玩家角色-Idle動畫製作",
          "3-5 玩家角色-用Transform移動Player",
          "3-6 玩家角色-新增動畫與切換動畫",
          "3-7 玩家角色-讓角色上下移動",
          "3-8 玩家角色-增加Collider與RigiBody",
          "3-9 玩家角色-跳躍1",
          "3-10 玩家角色-跳躍2",
          "3-11 玩家角色-跳躍3",
          "3-12 相關知識-物件的LifeCycle",
          "3-13 玩家角色-刀的攻擊1",
          "3-14 玩家角色-刀的攻擊2",
          "3-15 玩家角色-刀的攻擊3",
          "3-16 玩家角色-飛鏢的攻擊1",
          "3-17 玩家角色-飛鏢的攻擊2",
          "3-18 玩家角色-飛鏢的攻擊3",
          "3-19 玩家角色-受傷1",
          "3-20 玩家角色-受傷2",
          "3-21 玩家角色-受傷3",
          "3-22 玩家角色-死亡1",
          "3-23 玩家角色-死亡2"
        ],
        "第4章 敵人1製作": [
          "4-1 敵人1製作-動畫製作及AI說明",
          "4-2敵人1製作-兩點間來回移動",
          "4-3敵人1製作-攻擊1",
          "4-4敵人1製作-攻擊2",
          "4-5敵人1製作-攻擊3",
          "4-6敵人1製作-受傷",
          "4-7敵人1製作-死亡1",
          "4-8敵人1製作-死亡2"
        ],
        "第5章 使用Class繼承製作敵人2": [
          "5-1敵人2製作1",
          "5-2敵人2製作2",
          "5-3敵人2製作3"
        ],
        "第6章 敵人3 Boss製作": [
          "6-1敵人3 Boss圖檔匯入及動畫建立",
          "6-2敵人3 Boss跳躍攻擊1",
          "6-3敵人3 Boss跳躍攻擊2",
          "6-4敵人3 Boss滑動攻擊1",
          "6-5敵人3 Boss滑動攻擊2",
          "6-6敵人3 Boss受傷",
          "6-7敵人3 Boss死亡",
          "6-8敵人3 Boss補充說明"
        ],
        "第7章 玩家與敵人的音效": [
          "7-1 音效下載",
          "7-2音效匯入與音效格式",
          "7-3 Boss受傷音效",
          "7-4 Zombie音效",
          "7-5 Player音效"
        ],
        "第8章 關卡設計": [
          "8-1 新增場景",
          "8-2 TileMap圖檔匯入與設定",
          "8-3 關卡繪製",
          "8-4 場景增設敵人",
          "8-5 Cinemachine設置1",
          "8-6 Cinemachine設置2",
          "8-7 關卡邊界及新音效設定",
          "8-8 設置敵人2的停止點1",
          "8-9 設置敵人2的停止點2",
          "8-10 可穿越的移動平台1",
          "8-11 可穿越的移動平台2"
        ],
        "第9章 場景UI設定": [
          "9-1 場景UI基本設置1",
          "9-2 場景UI基本設置2",
          "9-3 UI與Safe Area 1",
          "9-4 UI與Safe Area 2",
          "9-5 新增選單與Button設定"
        ]
      },
      "requirements": [
        "必須有Windows或Mac系統的電腦",
        "CPU i5以上、記憶體4GB以上"
      ],
      "description": "本課程是為Unity初學者設計的課程，最後會帶各位把製作的遊戲安裝到Android手機與iPhone手機上。若您是MAC電腦，可以開發Android或iPhone手機的遊戲，但若您的電腦為Windows系統，則只能開發Android手機的遊戲，請大家要注意。\nUnity版本\n2019.4(LTS)\n硬體基本需求\nWindows或Mac電腦\ni5以上的CPU\n4GB以上的RAM\n在本課程您可以學到\n基本C#程式語言\nUnity操作介面及基本操作\n基本Camera設定\nAnimation動畫製作\n玩家角色製作、敵人及BOSS的AI設計\n使用Rigibody2D\n使用UI系統及了解Safe Area\n使用Audio系統\n使用Tile Map設計關卡\n使用2D Cinemachine\n製作關卡選擇系統\n轉換場景的動畫製作\nUnity New Input System\n輸出成Android用檔案及安裝到安卓手機\n輸出成iOS用檔案及安裝到iPhone\n若有任何問題，歡迎隨時提問喔！",
      "target_audience": [
        "想學習製作遊戲的初學者"
      ]
    },
    {
      "title": "Sıfırdan Unity ile Oyun Geliştirme Eğitimi | Unity 6 & C#",
      "url": "https://www.udemy.com/course/sifirdan-unity-ile-oyun-gelistirme-egitimi-unity-6/",
      "bio": "Unity ile Sıfırdan Oyun Yapmayı Temiz Kodlama ile Öğrenin!",
      "objectives": [
        "Unity oyun motorunun inceliklerini,",
        "C# ile kodlamayı,",
        "Sıfırdan tamamlanmış bir oyunu bitirmeyi,",
        "Refactor Sistemi ile kodlarınızı düzenlemeyi,",
        "Yapay Zeka ile düşman oluşturmayı,",
        "State Machine, Interface, Scriptable Object, Navmesh, Shader Graph, Timeline gibi birçok konuyu,",
        "Ve daha birçok konuyu tek bir tamamlanmış oyun içinde pratik olarak öğreneceksiniz."
      ],
      "course_content": {
        "Tanıtım & Genel Bilgilendirme": [
          "Eğitmen Hakkında",
          "Neler Yapacağız?",
          "Kurs İçeriği",
          "Neden Unity?"
        ],
        "Kurulum & Arayüz": [
          "Kullanacağımız Programlar & Ne İşe Yaradıkları",
          "Unity Hub & VSCode & GitHub Desktop Kurulumu",
          "VSCode Eklentilerini Ekleme",
          "İlk Projemizi Oluşturma & GitHub ile Bağlama",
          "Unity Arayüzü & Pencerelerinin İşlevleri"
        ],
        "Temel C# & Kodlamaya Giriş": [
          "Değişken Nedir? (Variables)",
          "Fonksiyon Nedir? (Function & Method)",
          "Unity'nin Temel Fonksiyonları",
          "Konsol ile İletişim Kuralım (Debug Methods)",
          "Koşullar Nedir? (If-Else & Switch-Case)",
          "Döngüler Nedir? (For & ForEach & While & Do-While)",
          "Array & List Nedir?",
          "Namespace Nedir & MonoBehaviour Tanımı",
          "Private & Public & SerializeField Ne İşe Yarar?"
        ],
        "Temel Unity & Oyun Yapmaya Giriş": [
          "GameObject Nedir?",
          "Transform & Rigidbody & Collider Nedir?",
          "Prefab Nedir? Ne İşe Yarar?",
          "Model & Texture & Material Kavramları",
          "GetComponent Nedir?",
          "OnEnable & OnDisable Fonksiyonları",
          "OnTriggerEnter & OnCollisionEnter Fonksiyonları"
        ],
        "Oyunumuzu Yapmaya Başlayalım": [
          "Yapacağımız Oyun Hakkında Konuşalım",
          "Asset Store & Package Manager Kurulumları",
          "Projemizi Düzenleyelim"
        ],
        "Karakter Kontrolleri": [
          "Karakterimizi Oluşturalım & Düzenlemelerini Yapalım",
          "Karakter Kontrollerini Yazalım",
          "Karakterimize Zıplama Özelliği Ekleyelim",
          "Karakterimize Kayma Özelliği Ekleyelim",
          "Karakteri Takip Eden Kamera Ayarlayalım",
          "State Machine'e Giriş & Kodlarımızı Düzenleyelim (Refactor)",
          "Karakter Animasyonlarını Yapalım"
        ],
        "Fiziksel Çarpışmalar": [
          "Toplanabilir Objelerimizi Oluşturalım (OnTriggerEnter)",
          "Toplanabilir Objelerimizi Fonksiyonelleştirelim",
          "Kodlarımızı Interface Kullanarak Refactor Edelim",
          "Kodlarımızı Scriptable Object Kullanarak Refactor Edelim",
          "Physics Material Nedir? (Extra Ders)",
          "Boost Veren Spatula Yapalım (OnCollisionEnter)"
        ],
        "Kullanıcı Arayüzü'ne (UI) Giriş": [
          "Canvas Nedir? Canvas Tipleri / Anchor & Pivot Kavramları",
          "Canvas Öğelerini Tanıyalım",
          "Kullanıcı Arayüzümüzü Tasarlayalım",
          "Kullanıcı Arayüzü Kodlarımızı Yazalım"
        ],
        "Can ve Zaman Sistemleri": [
          "Can Sistemi için Genel bir Sınıf Oluşturalım",
          "Can Kaybetme Mekaniğini Yapalım",
          "Zaman Sistemimizi Oluşturalım"
        ],
        "Kazanma & Kaybetme Koşulları": [
          "Kazanma Koşulu Toplanabilir Yumurta Yapalım",
          "Yumurtamız için UI Hazırlayalım",
          "Pause Sistemimizi Yazalım",
          "Timer Sistemimizi Düzeltelim",
          "Kazanma & Kaybetme Popupları Yapalım",
          "Popuplarımızın Kodlarını Yazalım",
          "Oyun Çevremizi Hazırlayalım",
          "Canımızı Götüren Ateşler Yapalım"
        ]
      },
      "requirements": [
        "Herhangi bir Programlama & Oyun Geliştirme bilgisi gerektirmez. Kurulumlardan başlayarak sıfırdan oyun geliştirmeyi öğrenmek isteyen herkese uygundur."
      ],
      "description": "Selamlar Herkese!\nOyun yapmaya merakınız varsa ve Unity ile oyun geliştirmeyi öğrenmek istiyorsanız çok doğru yerdesiniz. Bu kursumuzda, sıfırdan oyun geliştirmeye ve kodlamaya giriş yapacak, kurulumlarımızı ve gerekli yönergeleri tamamladıktan sonra hem Unity oyun motorunu, hem de C# dilini tanımaya çalışacağız. Birkaç saat boyunca bu gerekli kısımları tanıdıktan sonraysa, direkt olarak yeni bir proje açacağız ve bir oyunu sıfırdan başlayarak tamamlamaya çalışacağız. Bu sayede hem bir oyunu tamamlamak için gerekli olan her şeyi öğrenecek, hem de kursun sonunda paylaşabileceğimiz bir oyun elde etmiş olacağız.\nAyrıca, kursumuzda \"Refactor Sistemi\" mevcut. Bu sistem, bir kodu yazdıktan sonra daha iyisini ve daha temizini görebileceğimiz bir sistem. Yani bir kodu yazdıktan ve çalıştırdıktan sonra, bir süre boyunca o kodu nasıl daha temiz ve daha okunabilir yazacağımız hakkında konuşacak ve uygulamaya geçireceğiz. Bu sayede de, oyun yapmayı öğrenmenin yanısıra, temiz kodlayarak oyun yapmayı da öğrenmiş olacağız. Ve kursumuzda, State Machine, Interface, Scriptable Objects, Shader Graph, NavMesh gibi birçok konuya değinecek ve oyunumuz içinde aktif olarak kullanacağız.\nAmacım, bu kursu bitirdiğinizde aklınızdaki ve hayalinizdeki oyuna direkt olarak başlayabilecek kapasite ve bilgiye ulaşmış olmanız. Güzel, uzun ve zorlu bir yolculuk bizi bekliyor. Umarım sizlerin de keyif aldığı bir serüven olur. Herhangi bir sorunuz olursa soru cevap kısmında sürekli aktifim. İyi Seyirler!",
      "target_audience": [
        "Oyun geliştirmeye meraklı, Unity & C# öğrenmek isteyen herkese uygundur."
      ]
    },
    {
      "title": "【한글자막】 Unreal Engine 5 : 강의 하나로 Niagara VFX 완벽 마스터하기!",
      "url": "https://www.udemy.com/course/unreal-engine-5-niagara-vfx-korean/",
      "bio": "Niagara 를 활용하여 Unreal Engine 5 에서 끝내주는 게임용 VFX 를 스텝 바이 스텝으로 구현해보세요!",
      "objectives": [
        "다양한 Niagara 에미터(emitter) 와 렌더러 의 사용법",
        "다양한 게임용 VFX 를 구현하는 법",
        "VFX 를 위한 다양한 마스터 머티리얼을 생성하는 법",
        "Unreal 에서 바로 노이즈 텍스처 를 굽는 법",
        "민들레, 비, 폭포 등 다양한 환경 FX 를 구현하는 법",
        "에너지 타격, 번개 공격, 발사체 등 공격 FX 를 구현하는 법",
        "커스텀 파티클 동작을 위한 커스텀 모듈을 생성하는 법",
        "블루프린트로 VFX 동작을 프로그래밍하는 법",
        "커스텀 Niagara 모듈로 캐릭터 붕괴 효과를 구현하는 법",
        "Niagara 파라미터 / 네임 스페이스 / 함수 / 다이내믹 입력의 기본 개념"
      ],
      "course_content": {
        "강의 소개": [
          "강의 소개",
          "나이아가라 VFX의 구성 요소",
          "시작하기 전 유의 사항",
          "VFX 프로젝트 생성하기",
          "DemoRoom 파일이 작동하지 않아요",
          "도움을 얻는 법",
          "머티리얼 단축키 총정리"
        ],
        "나이아가라 기초": [
          "나이아가라 기초 섹션 개요",
          "첫 번째 이미터 만들기",
          "이미터 스테이지",
          "간단한 움직이는 스프라이트",
          "Shape Location 모듈",
          "힘 모듈",
          "GPU 스프라이트",
          "첫 번째 VFX 머티리얼 만들기",
          "섹션 도전 과제: 날아다니는 민들레 만들기",
          "과제 공유하기: 여러분의 민들레 FX를 보여주세요",
          "불 텍스처 팩을 찾을 수가 없어요",
          "Sub UV 애니메이션",
          "화염 방사기 제작 시작하기: 주 화염 만들기",
          "화염 방사기의 연기 이펙트",
          "섹션 도전 과제: 푸른 화염 및 불티",
          "열 디스토션 생성하기",
          "5.2 버전에서 리프랙션이 안 보여요",
          "화염 방사기 마무리: 요약",
          "과제 공유하기: 여러분의 화염 방사기를 보여주세요",
          "메시 렌더러",
          "커스텀 메시",
          "언리얼에서 텍스처 굽기",
          "타깃 렌더링을 위한 머티리얼 드로잉",
          "리본 렌더러",
          "머티리얼 리프레셔: UV 조작",
          "인피니티 블레이드 이펙트(InfinityBladeEffects) 팩을 다운로드하세요",
          "팬 디스토션 머티리얼 생성하기",
          "펄린 노이즈 생성하기",
          "VFXNamingHelper에 이슈가 있어요",
          "보로노이 노이즈의 베리에이션",
          "과제 공유하기: 여러분의 노이즈 텍스처를 보여주세요",
          "섹션 마무리"
        ],
        "나이아가라 스킬 VFX": [
          "나이아가라 스킬 VFX 섹션 소개",
          "데모 룸 설정",
          "나의 나이아가라 미리보기는 레벨에서 보는 것과 매우 다릅니다...",
          "포털 FX 시작: 포털의 윤곽 만들기",
          "Depth Fade와 Sub UV 애니메이션",
          "가운데 회전 파티클",
          "가운데 회전 패턴",
          "메쉬 렌더러의 머티리얼 효과",
          "포털 FX 마무리: 배경 디테일과 잔해",
          "가운데 패턴 수정",
          "충격 효과 시작: VFX Spawner 생성",
          "표면 충격 효과",
          "충격 효과 마무리: 섹션 과제 1 - 신체 충격 효과",
          "섹션 과제 2 - 나비 효과",
          "과제 공유하기: 여러분의 작품을 보여주세요",
          "유성 공격 시작: 유성 공격 사전 준비",
          "유성 쉘 메쉬",
          "쉘 FX 생성",
          "유성 공격 클라이막스",
          "유성 공격 마무리: 유성 공격 소멸 단계",
          "레이저 공격 시작: 레이저 메시 만들기",
          "레이저 코어 만들기",
          "레이저 쉘",
          "레이저 발사 패턴",
          "레이저 공격 마무리: 데코레이션 파티클",
          "에너지 타격 시작: 커스텀 스프라이트 얼라인먼트",
          "위치 이벤트",
          "커스텀 로테이터",
          "다이내믹 파라미터",
          "섹션 챌린지 3: 클라이막스에 요소 추가하기",
          "섹션 챌린지 4: 실린더 FX",
          "에너지 타격 마무리: 소멸 단계 과제 공유하기: 여러분의 에너지 타격을 보여주세요",
          "과제 공유하기: 여러분의 에너지 타격을 보여주세요",
          "발사체 FX 시작: 블레이드 슬래시 메시",
          "선형 그래디언트",
          "발사체 마스터 블루프린트",
          "발사체 VFX 스포너",
          "블레이드 슬래시 변형물",
          "따라가는 파티클",
          "지면 파티클",
          "섹션 챌린지 4: 총구 VFX와 충격 VFX",
          "발사체 FX 마무리: 다양한 VFX 메시",
          "섹션 마무리",
          "선택 과제: 나만의 VFX를 만들어 보세요"
        ],
        "커스텀 나이아가라 모듈 VFX": [
          "커스텀 나이아가라 모듈 VFX 섹션 개요",
          "커스텀 나이아가라 모듈 101",
          "어트리뷰트 리더",
          "리더 팔로우 고급",
          "비 FX의 시작: 프레넬",
          "리퀴드 마스터 다이너 파라미터",
          "기본 빗방울",
          "콜리전 이벤트 생성",
          "섹션 과제: 큰 우적",
          "물결..",
          "콜리전 노멀 확인",
          "비 FX 마무리: 커스텀 나이아가라 열거형",
          "과제 공유하기: 여러분의 비 FX를 보여주세요",
          "폭포 FX 시작: 폭포 메시",
          "폭포 마스터 머티리얼",
          "폭포 리프랙션",
          "폭포 커스틱",
          "폭포수",
          "폭포 FX 마무리: 폭포 물보라",
          "과제 공유하기: 여러분의 폭포를 보여주세요",
          "나이아가라를 이용한 텍스처 샘플링",
          "스태틱 메시 디졸브 효과 시작: 스태틱 메시 위치",
          "스태틱 메시 디졸브 효과 마무리: 디졸브 효과에 필요한 파티클 색상",
          "캐릭터 붕괴 구현 시작: 메시 재생성 스프라이트",
          "선형보간 파티클 어트리뷰트",
          "디스턴스 필드",
          "디졸브 효과에 디스턴스 필드 사용하기",
          "BP로 머티리얼 디졸브 트리거하기",
          "디졸브 효과를 위한 파티클 FX",
          "노이즈 디졸브 머티리얼",
          "캐릭터 붕괴 구현 마무리: 노이즈 디졸브 머티리얼 적용하기",
          "캐릭터 메시 복원하기",
          "선택 과제: 캐릭터 메시 복원을 위한 파티클 FX",
          "섹션 마무리"
        ],
        "축하합니다": [
          "앞으로 할 일",
          "원코스 솔루션 학습여정 계속하기...",
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "전부 기초부터 배우므로, Niagara 사전 지식은 필요 없습니다."
      ],
      "description": "【한글자막】 Unreal Engine 5 : 강의 하나로 Niagara VFX 완벽 마스터하기! 에 오신 걸 환영합니다. 본 강의에서는 포털 FX , 비 FX , 발사체 FX , 에너지 타격 , 캐릭터 붕괴 등을 비롯해 아주 다양한 유형의 VFX 를 구현하는 법을 배웁니다. 기초부터 시작합니다.\n\n\n섹션 1에서는 민들레 FX 와 화염 방사기를 구현해 다양한 VFX 를 구현할 때 알아야 할 모든 기초 지식을 배웁니다. 우선 나이아가라 내 다양한 이미터 스테이지를 다룬 뒤 스프라이트 렌더러 를 사용해 다양한 나이아가라 모듈을 익힐 겁니다.\n\n\n이렇게 습득한 지식과 스킬을 바탕으로 섹션 2에서는 포털 FX , 충격 FX , 나비 FX , 유성 공격 , 레이저 공격 , 에너지 타격 , 블레이드 슬래시 및 날아가는 칼 같은 투사체 FX 를 비롯한 다양한 VFX 를 구현합니다. 포털 FX 부터 구현하며, 지난 섹션에서 만든 마스터 머티리얼 을 더 다양한 VFX 기능을 지원하도록 수정해 나갈 겁니다. 그런 뒤 블루프린트로 VFX 스포너 를 생성하고 VFX 스포너 로 충격 표면과 충격 바디 FX를 스폰합니다. 이어서 유성 공격을 구현해 VFX 를 완성하는 데 필요한 가장 중요한 3가지 상태를 알아봅니다. 그런 다음 블렌더 로 넘어가 Niagara 를 위한 발사체 메시를 생성하고 블루프린트 로 블레이드 슬래시와 날아가는 칼을 스폰할 겁니다.\n\n\n섹션 3에서는 리더 따르기 FX , 비 FX , 폭포 FX , 각종 텍스처 디졸브 효과, 스태틱 메시 와 스켈레탈 메시 를 구현하는 법을 배웁니다. 커스텀 Niagara 모듈을 생성할 때 알아야 할 모든 기초 개념을 습득하고 나이아가라 파라미터 및 네임 스페이스 에 대해 배운 뒤 리더 따르기 FX 를 구현합니다. 그런 다음 우리의 커스텀 모듈에 약간의 벡터 수학과 계산을 적용해 한층 더 고급 버전의 리더 따르기 FX 를 구현할 겁니다. 끝으로 지금까지 배운 내용을 바탕으로 비 FX , 폭포 FX , 텍스처 디졸브 FX , 스태틱 메시를 구현하는 법을 살펴보고 그것들을 디스턴스 필드와 합쳐 다이내믹 캐릭터 붕괴 효과를 구현할 겁니다.\n\n\n본 강의는 여러분이 온라인에서 보게 될 Niagara VFX 강의 중 가장 종합적인 강의가 될 겁니다. 강의를 마치고 나면 여러분이 원하는 어떤 VFX 라도 스스로 구현할 수 있을 거예요.",
      "target_audience": [
        "Unreal Engine 5 에서 Niagara 로 VFX를 구현하는 법을 배우고 싶은 학습자",
        "VFX 머티리얼을 생성하는 법을 배우고 싶은 학습자",
        "VFX 메시를 생성하는 법을 배우고 싶은 학습자",
        "환경 FX 를 구현하는 법을 배우고 싶은 학습자"
      ]
    },
    {
      "title": "Torne-se um desenvolvedor de jogos 2D com o Unity",
      "url": "https://www.udemy.com/course/cursounity/",
      "bio": "Aprenda a desenvolver os seus próprios jogos com o Unity!",
      "objectives": [
        "Aprender a desenvolver jogos usando o Unity",
        "Criar um jogo similar a Pong",
        "Criar um clone de Flappy Birds",
        "Criar um spaceshooter",
        "Conhecer a ferramenta e se aprofundar nela",
        "Lógica de programação para jogos",
        "Programar em C#",
        "Criar inteligência artificial de jogos",
        "Criar elementos de jogos e controladores",
        "Criar sistema de pontos",
        "Criar um sistema de leveis",
        "Sistemas para aumentar a dificuldade do jogo",
        "Geração procedural do jogo",
        "Publicar o seu primeiro jogo",
        "Criar animações",
        "Criar inteligência artificial de inimigos",
        "Criar sistema de power up",
        "Colocar efeitos no seu jogo"
      ],
      "course_content": {
        "Introdução": [
          "Links úteis",
          "Suporte",
          "Baixando o unity e criando uma conta unity",
          "Instalando o unity",
          "Criando uma conta e instalando o visual studio",
          "Finalizando as instalações",
          "Problemas Comuns"
        ],
        "Ambiente de trabalho": [
          "Prévia da seção",
          "Ambiente de trabalho",
          "Cenas objetos e seus componentes",
          "Manipulando objetos",
          "Adendo - Diferenças no curso",
          "Resumo da seção"
        ],
        "Programação básica": [
          "Prévia da seção",
          "Scripts e Eventos",
          "Mudando o tema do visual studio",
          "Criando o seu primeiro script",
          "Mensagens de debug",
          "Comentando o código",
          "Tipos de dados",
          "Variáveis",
          "Exercício de fixação de variáveis e tipos de dados.",
          "Resolução da atividade",
          "Escopo",
          "Tipos de acesso",
          "Operadores aritméticos",
          "Exercício de fixação de operadores aritméticos",
          "Resolução da atividade",
          "Operadores aritméticos parte 2",
          "Tipos de dados booleanos",
          "Operadores relacionais",
          "Exemplos de operações relacionais",
          "Resolução da atividade",
          "Operadores unários",
          "Função condicional parte 1 - IF",
          "Exercício de fixação de funções condicionais",
          "Resolução da atividade",
          "Função condicional parte 2 - ELSE",
          "Resolução da atividade",
          "Função condicional parte 3 - ELSE IF",
          "Exercício de fixação de funções condicionais 2",
          "Resolução da atividade",
          "Operadores lógicos",
          "Operadores lógicos na prática",
          "Acessando componentes dos objetos via código",
          "Resumo da seção"
        ],
        "Pong": [
          "Prévia da seção",
          "Pensando no Game Design do nosso jogo",
          "Importando e ajustando a sprite do jogo",
          "Ajustando a resolução do jogo",
          "Criando o controlador da raquete",
          "Alterando a posição da raquete por código",
          "Melhorando nosso código e ajustando a posição inicial da raquete",
          "Pegando inputs do usuário",
          "Resolução da atividade e movendo a raquete com o teclado",
          "Normalizando a velocidade com DeltaTime",
          "Impedindo que a raquete saia da tela",
          "Iniciando a bola",
          "Fazendo com que a bola colida com a raquete",
          "Adendo antecipado",
          "Fazendo a bola quicar",
          "Criando o controlador da bola",
          "Dando movimento à bola por código",
          "Ajustando a velocidade inicial da bola",
          "Criando as paredes da cena",
          "Criando o player 2",
          "Resolução da atividade",
          "Otimizando nosso código",
          "Resolução da atividade",
          "Iniciando a bola em uma direção aleatória",
          "Resolução da atividade",
          "Iniciando a criação da AI do player 2",
          "Pegando a posição da bola",
          "Resolução da atividade",
          "Melhorando o movimento da IA",
          "Invertendo a posição dos players",
          "Alternando o player 2 entre manual e automático",
          "Resolução da atividade",
          "Fazendo o jogo reiniciar quando a bola sair da tela",
          "Resolução da atividade e SceneManagment",
          "Recarregando a cena",
          "Criando o evento de colisão da bola",
          "Tocando o som ao colidir",
          "Resolução da atividade e mudando o fundo do jogo",
          "Adendo sobre o fundo do jogo",
          "Configurando o delay para iniciar a bola",
          "Iniciando a bola com delay",
          "Criando o executável e compartilhando o nosso jogo",
          "Resumo da seção"
        ],
        "Programação intermediária": [
          "Apresentação da seção",
          "Introdução ao conceito de classes",
          "Atributos e métodos de uma classe",
          "Criando a nossa classe Ogro",
          "Criando os atributos do nosso ogro",
          "Questionário",
          "Criando o nosso método de apresentação",
          "Dando parâmetros ao nosso método",
          "Distinções entre instâncias de uma classe",
          "Acessando métodos de outras classes",
          "Controlando o acesso às classes",
          "Serializando os atributos e iniciando um método novo",
          "Resolução da atividade e conclusão do método",
          "Resolução da atividade",
          "Criando o nosso método de conversão",
          "Testando o método de conversão",
          "GetComponent",
          "Teste prático 2",
          "Resumo da seção"
        ],
        "Flappy Plane": [
          "Apresentação da seção",
          "Apresentação do jogo",
          "Pensando nas mecânicas do jogo",
          "Iniciando o projeto e usando o collab",
          "Iniciando o Player",
          "Animando o player",
          "Dando gravidade ao player",
          "Pegando o rigidbody do player",
          "Subindo ao apertar espaço",
          "Limitando a velocidade do player",
          "Colocando nosso código em métodos",
          "Iniciando o obstáculo",
          "Movendo os obstáculos",
          "Dando uma velocidade ao obstáculo",
          "Ajustando a posição e o colisor do player",
          "Prefabs",
          "Ajustando o tipo de colisão dos obstáculos",
          "Resolução do desafio",
          "Iniciando o game controller",
          "Resolução da atividade",
          "Criando as montanhas automaticamente",
          "Criando os obstáculos em posições aleatórias",
          "Destruindo os obstáculos",
          "Alterando a frequência das montanhas",
          "Iniciando o sistema de pontos",
          "Refatorando nosso código",
          "Arredondando os pontos",
          "Iniciando a interface do usuário",
          "Exibindo os pontos",
          "Resolução do desafio e criando o texto dos pontos",
          "Iniciando o sistema de level",
          "Resolução do desafio e novo desafio",
          "Resolução do desafio",
          "Iniciando o sistema de dificuldade do jogo",
          "Encontrando o gamecontroller automaticamente",
          "Ajustando a velocidade das montanhas",
          "Ajustando o intervalo das montanhas",
          "Modelo simples de background",
          "Background com movimento parte 1",
          "Background com movimento parte 2",
          "Resolução da atividade e novo desafio",
          "Resolução do desafio",
          "Ajustando os prefabs e o collab",
          "Iniciando a fumaça do avião",
          "Resolução da atividade",
          "Destruindo o puff",
          "Créditos dos assets do jogo",
          "Tocando a música de fundo",
          "Tocando o som do level up",
          "Iniciando a tela inicial",
          "Criando o objeto inicio",
          "Concluindo o jogo",
          "Adendo ao sistema de ganho de pontos",
          "Publicando o seu primeiro jogo",
          "Conclusão da seção"
        ],
        "Programação intermediária 2": [
          "Apresentação da seção",
          "O que é o switch",
          "Montando o nosso primeiro switch",
          "Default e atividade",
          "Resolução da atividade",
          "Criando o nosso primeiro array",
          "Preenchendo o array e atividade",
          "Resolução da atividade",
          "Entendendo o que é um laço de repetição",
          "Exemplo de como NÃO fazer um laço de repetição",
          "Exemplo de como fazer um laço de repetição e atividade",
          "Resolução da atividade",
          "Laços de repetição e arrays",
          "Resumo da seção"
        ],
        "SpaceShooter": [
          "175 - Apresentação da seção",
          "176 - Iniciando o jogo e o collab",
          "177 - Criando as pastas do projeto",
          "178 - Documentação do unity",
          "179 - Importando as sprites do player e iniciando o objeto player",
          "180 - Ajustando a sprite do player",
          "181 - Fazendo a animação do player",
          "182 - Iniciando o controlador do player e usando o Input Manager",
          "183 - Resolução da atividade",
          "184 - Movendo o player",
          "185 - Resolução da atividade",
          "186 - Resolução do desafio",
          "187 - Ajustando a movimentação do player",
          "188 - Iniciando o tiro do player",
          "189 - Aplicando velocidade ao tiro",
          "190 - Configurando o botão de tiro do player",
          "191 - Atirando!",
          "192 - Ajustando as camadas do jogo",
          "193 - Efeito no tiro do player",
          "194 - Iniciando o destruidor dos tiros",
          "195 - Entendendo melhor a colisão no unity",
          "196 - Destruindo o tiro do player",
          "197 - Iniciando o primeiro inimigo",
          "198 - Movendo o inimigo",
          "199 - Animando o inimigo",
          "200 - Iniciando o tiro e criando os prefabs",
          "201 - Destruindo o tiro do inimigo ao sair da tela",
          "202 - instanciando o tiro do inimigo",
          "203 - Organizando o sistema de colisão",
          "204 - Fazendo o inimigo atirar em intervalos",
          "205 - Resolução do desafio",
          "206 - Checando se o inimigo esta na tela do jogo",
          "207 - Resolução da atividade",
          "208 - Animando o tiro do inimigo",
          "209 - Ajustando a posição de tiro do inimigo",
          "210 - Resolução do desafio",
          "211 - Fazendo o tiro do player colidir com o inimigo",
          "212 - Resolução do desafio",
          "213 - Criando a vida do inimigo",
          "214 - Resolução do desafio e dando dano no inimigo",
          "215 - Criando as tags do inimigo e player",
          "216 - Resolução do desafio",
          "217 - Resolução do desafio e novo desafio",
          "218 - Resolução do desafio",
          "219 - Destruindo o impacto no final da animação",
          "220 - Resolução do desafio e novo desafio",
          "221 - Resolução do desafio de destruição do inimigo e novo desafio",
          "222 - Resolução do desafio",
          "223 - Conceito de herança em programação",
          "224 - Criando a classe do inimigo pai",
          "225 - Fazendo o inimigo ser filho do inimigo pai",
          "226 - Acesso protected",
          "227 - Fazendo o tiro usar o método do pai e super sequência de desafios",
          "228 - Resolução do desafio 1 e 2",
          "229 - Resolução dos desafios 3 e 4",
          "230 - Resolução dos desafios 5 e 6",
          "231 - Resolução dos desafios 7, 8 e 9",
          "232 - Resolução dos desafios 10 e 11 (menor aula do mundo)",
          "233 - Conclusão dos desafios",
          "234 - Resolução do desafio e novo desafio",
          "235 - Resolução dos desafios do tiro e novo desafio",
          "236 - Resolução do desafio",
          "237 - Corrigindo o bug do tiro 2",
          "238 - Resolução do desafio e refatorando o nosso código",
          "239 - Resolução do desafio e ajustando as camadas",
          "240 - Resolução do desafio e novo desafio",
          "241 - Resolução do desafio",
          "242 - Definindo a velocidade e direção do tiro do player",
          "243 - Resolução do desafio",
          "244 - Atirando na direção do player",
          "245 - Fazendo o tiro apontar para o player",
          "246 - Resolução do desafio",
          "247 - Corrigindo o bug do tiro do inimigo 2",
          "248 - Iniciando a movimentação do inimigo 02",
          "249 - Checando a posição Y do inimigo",
          "250 - Resolução do desafio",
          "251 - Resolução do desafio",
          "252 - Resolução do desafio",
          "253 - Resolução do desafio",
          "254 - Resolução do desafio",
          "255 - Ajustando os inimigos",
          "256 - Mais alguns ajustes nos inimigos e no player",
          "257 - Iniciando o gerador de inimigos",
          "258 - Resolução do desafio",
          "259 - Resolução do desafio",
          "260 - Resolução do desafio",
          "261 - Resolução do desafio",
          "262 - Criando inimigos diferentes com base no level",
          "263 - Criando vários inimigos por vez",
          "264 - Resolução do desafio",
          "265 - Ganhando pontos ao matar os inimigos",
          "266 - Ganhando level",
          "267 - Ganhando pontos diferentes de inimigos diferentes",
          "268 - Melhorando o gerador de inimigos",
          "269 - Resolução do desafio",
          "270 - Definindo os limites do player na tela",
          "271 - Resolução da atividade e impedindo que o player saia da tela",
          "272 - Resolução do desafio",
          "273 - Iniciando o sistema de particulas",
          "274 - Entendendo melhor o sistema de particulas",
          "275 - Ajustando o tamanho das particulas",
          "276 - Resolução do desafio e ajustando a velocidade das particulas",
          "277 - Mudando a cor das particulas",
          "278 - Finalizando o sistema de particulas",
          "279 - Iniciando o segundo tiro do player",
          "280 - Resolução dos desafios",
          "281 - Resolução dos desafios",
          "282 - Iniciando o sistema de tiros",
          "283 - Atirando com base no level do tiro",
          "284 - Resolução do desafio",
          "285 - Resolução do desafio",
          "286 - Criando dois tiros",
          "287 - Melhorando o metodo criatiro",
          "288 - Criando o tiro na posição correta",
          "289 - Resolução do desafio",
          "290 - Resolução do desafio",
          "291 - Finalizando o sistema de tiros multiplos",
          "292 - Iniciando o power up",
          "293 - Resolução da atividade e animando o power up",
          "294 - Segunda animação do power up",
          "295 - Criando a Tag e colisor do power up",
          "296 - Resolução do desafio",
          "297 - Resolução do desafio",
          "298 - Resolução do desafio",
          "299 - Impedindo a interação do tiro com o power up",
          "300 - Resolução da atividade",
          "301 - Preparando para criar o power up ao matar o inimigo",
          "302 - Resolução do desafio",
          "303 - Destruindo o power up",
          "304 - Fazendo a terceira animação do power up",
          "305 - Resolução do desafio",
          "306 - Dando uma direção aleatória para o power up",
          "307 - Resolução do desafio",
          "308 - Resolução do desafio",
          "309 - Criando uma chance para dropar o power up",
          "310 - Resolução do desafio",
          "311 - Corrigindo o bug dos inimigos",
          "312 - Checando a posição onde o inimigo vai ser criado",
          "313 - Ajustando a escala para checar",
          "314 - Resolução do desafio",
          "314b - Adento antes da próxima aula",
          "315 - Criando inimigos apenas em lugares vazios",
          "316 - Melhorando o gerador de inimigos",
          "317 - Checando se o gerador existe",
          "318 - Resolução do desafio",
          "319 - Iniciando o escudo",
          "320 - Resolução do desafio",
          "321 - Animando o escudo",
          "322 - Resolução do desafio",
          "323 - Resolução do desafio",
          "324 - Resolução do desafio",
          "325 - Resolução do desafio",
          "326 - Criando o botão do escudo",
          "327 - Resolução do desafio",
          "328 - Resolução do desafio",
          "329 - Fazendo o escudo seguir o player",
          "330 - Resolução do desafio",
          "331 - Resolução do desafio",
          "332 - Criando a animação de fim do escudo",
          "333 - Destruindo o escudo",
          "334 - Resolução do desafio",
          "335 - Resolução do desafio",
          "336 - Iniciando o boss",
          "337 - Resolução do desafio",
          "338 - Animando a entrada do boss",
          "339 - Resolução do desafio",
          "340 - Resolução do desafio",
          "341 - Resolução dos desafios",
          "342 - Resolução do desafio",
          "343 - Resolução do desafio",
          "344 - Resolução do desafio",
          "345 - Resolução do desafio",
          "346 - Resolução do desafio",
          "347 - Resolução do desafio",
          "348 - Criando o script da animação do boss",
          "349 - Instanciando o boss",
          "350 - Resolução do desafio",
          "351 - Ajustando a animação do boss",
          "352 - Iniciando o primeiro estado do boss",
          "353 - Movendo o boss",
          "354 - Fazendo o boss mudar de direção",
          "355 - Resolução do desafio",
          "356 - Resolução do desafio",
          "357 - Resolução do desafio",
          "358 - Resolução do desafio",
          "359 - Resolução do desafio",
          "360 - Resolução do desafio",
          "361 - Resolução do desafio",
          "362 - Alternando o intervalo entre tiros",
          "363 - Fazendo o boss alternar entre estados",
          "364 - Deixando o estado aleatorio",
          "365 - Resolução do desafio",
          "366 - Resolução do desafio",
          "367 - Fazendo a animação de morte do boss",
          "368 - Instanciando a morte do boss",
          "369 - Corrigindo o bug da morte do boss",
          "370 - Corrigindo o bug da entrada do boss",
          "371 - Resolução do desafio",
          "372 - Criando o canvas e configurando ele",
          "373 - Resolução do desafio",
          "374 - Usando uma fonte personalizada",
          "375 - Resolução do desafio",
          "376 - Resolução do desafio",
          "377 - Resolução do desafio",
          "378 - Ancorando os elementos da UI",
          "379 - Resolução do desafio",
          "380 - Resolução do desafio",
          "381 - Ajustando o canvas",
          "382 - Iniciando a barra de vida do boss",
          "383 - Pegando os dados da barra de vida",
          "384 - Convertendo a vida em um valor quebrado",
          "385 - Convertendo o retorno da divisão para float",
          "386 - Mudando a cor da barra de vida do boss",
          "382 - Ajustando a posição do boss",
          "388 - Ajustando meu bug da animação",
          "389 - Entendendo porque o boss é destruido pelo escudo",
          "390 - Resolução do desafio",
          "391 - Impedindo que o boss gire",
          "392 - Criando a tela inicial do jogo",
          "393 - Resolução do desafio",
          "394 - Animando o texto",
          "395 - Criando o botão de jogar",
          "396 - Resolução do desafio",
          "397 - Criando o gamemanager",
          "398 - Resolução do desafio",
          "399 - Dando uma função para o botão",
          "400 - Resolução do desafio",
          "401 - Tornando o gamemanager persistente",
          "402 - Reiniciando o jogo quando o player morre",
          "403 - Criando o singleton pattern do game manager",
          "404 - Resolução do desafio",
          "405 - Criando o delay para reiniciar o jogo",
          "406 - PostProcessing 1 - instalação",
          "407 - PostProcessing - Configurando a camera",
          "408 - PostProcessing - Criando os efeitos",
          "409 - Resolução da atividade",
          "410 - Ajustes gerais no jogo",
          "411 - Ajustando a escalada dos pontos",
          "412 - Deixando o boss mais dificil",
          "413 - Resolução do desafio",
          "414 - Resolução do desafio",
          "415 - Importando os sons do jogo",
          "416 - Resolução do desafio",
          "417 - Resolução do desafio",
          "418 - Resolução do desafio",
          "419 - Resolução do desafio",
          "420 - Resolução do desafio",
          "421 - Resolução do desafio",
          "422 - Criando as musicas do jogo",
          "423 - Resolução do desafio",
          "424 - Testando o jogo",
          "425 - Fazendo a morte do boss encerrar o level",
          "426 - Resolução do desafio",
          "427 - Ajustando a camera do canvas do boss",
          "428 - Criando o executavel do jogo",
          "429 - Conclusão do módulo"
        ],
        "Gamejam": [
          "Projeto",
          "Progresso",
          "Discussão de problemas"
        ]
      },
      "requirements": [
        "Não é necessário nenhum conhecimento prévio de programação para este curso",
        "Este curso requer paixão por jogos e o interesse de aprender como eles são criados",
        "Um computador capaz de rodar o Unity"
      ],
      "description": "Este curso vai ensinar os alunos a desenvolverem jogos com o Unity, ele vai além de apenas tutoriais, ele foca em explicar a lógica por trás do que esta sendo feito, explicando os conceitos e o porque das coisas e tudo isso com dezenas de atividades práticas para você colocar o seu conhecimento em prática, durante este curso você vai fazer mais de 100 atividades práticas para colocar em prática tudo o que você aprendeu durante o curso.\nNele você vai desenvolver 3 jogos diferentes um jogo similar a pong e um jogo similar ao flappy plane e um spaceshooter com vários tiros diferentes, inimigos distintos, power ups e uma boss fight para concluir.\nVocê vai aprender a usar o sistema de física do Unity\nLógica de programação com C#\nComo programar as mecânicas do seu jogo\nCriar uma inteligência artificial para o segundo player\nAumentar a dificuldade do seu jogo\nCriar animações\nAlternar entre cenas\nGeração procedural do jogo\nReiniciar ao perder\nCriar um sistema de pontos\nCriar um sistema de leveis\nAjustar a dificuldade de acordo com o level do jogo\nCriar inimigos\nConfigurar inteligência artificial\nSistema de power up\nCriar uma boss fight\nConfigurar animações\nAjustar estados de personagens\nConfigurar sprites dentro do unity\nMais de 100 atividades práticas\nUsar sistemas de debug\nConfigurar e ajustar UI do jogo\nComo publicar o seu jogo",
      "target_audience": [
        "Este curso tem como publico-alvo pessoas que querem aprender como criar jogos e esta começando a entrar nesta área",
        "Pessoas que já sabem programar, mas querem se aprofundar em programação para jogos",
        "Pessoas que querem desenvolver jogos",
        "Quem ama jogos e quer saber como eles são feitos"
      ]
    },
    {
      "title": "Le Pixel Art pour le Jeu vidéo : Guide Complet",
      "url": "https://www.udemy.com/course/le-pixel-art-pour-le-jeu-video-guide-complet/",
      "bio": "Apprenez le pixel art dans un cours complet! Accédez aux techniques de base et réalisez des assets 2D pour vos jeux",
      "objectives": [
        "Apprendre les bases pour réaliser tous ce que vous imaginez en Pixel Art",
        "Créer des ombrages époustouflants de réalisme",
        "Création de maquettes de jeu vidéo 2D",
        "Apprendre à faire des personnages et les animer rapidement",
        "Créer des tilesets pour des jeux RPG Top Down",
        "Construire des décors Isométrique en Pixel Art avec Aseprite",
        "Harmoniser les couleurs de l'univers de jeu"
      ],
      "course_content": {
        "Introduction": [
          "Ce que vous allez apprendre dans ce cours"
        ],
        "Faire du Pixel Art": [
          "Travailler avec un outil de création d’images Photoshop / Aseprite / LibreSprite",
          "Configurez les outils pour travailler en Pixel Art avec Photoshop",
          "Les raccourcis avec Aseprite",
          "Dessinez des lignes",
          "Dessinez des cercles",
          "Choisissez votre outil de travail et créer votre premier sprite - L'épée",
          "Conclusion section 2"
        ],
        "L'ombrage en pixel art": [
          "Comprendre l'ombrage",
          "Ombrer une sphère et un cube",
          "Créer un sprite de roche - Ombrage",
          "Créer un sprite de roche - Contour",
          "Créer un sprite de roche - Texture",
          "Créer un sprite de roche - Rebond de lumière",
          "Conclusion section 3"
        ],
        "Travailler avec les tuiles": [
          "Le concept de tuiles",
          "Créer une tuile de base d’un plateformer 2D",
          "Améliorer une tuile pour la mettre en volume",
          "Faire un arrière plan pour un jeu de plateforme",
          "Redéfinir les couleurs de la plateforme"
        ],
        "Améliorer l'environnement du jeu": [
          "Tuiles supplémentaires pour varier l'environnement du jeu",
          "Réaliser des éléments de décors",
          "Créer un arbre et de la végétation",
          "Créer une maison en vue de profil",
          "Adapter le tileset pour le rendre plus crédible",
          "Ombre et Lumière sur les éléments",
          "Conclusion Section 5"
        ],
        "Création des personnages 2D": [
          "Créer le personnage",
          "Créer un contour pour le personnage",
          "Créer un ennemi pour le jeu - Slime",
          "Conclusion Section 6"
        ],
        "Animation": [
          "Préambule de l'animation",
          "Animer un cycle de marche",
          "Animer un saut",
          "Donner vie au personnage grâce à l'animation",
          "Animation d'attaque",
          "Animer certains éléments élément du décor",
          "Conclusion Section 7"
        ],
        "Réaliser des Tuiles pour un jeu Top-Down (RPG 2D)": [
          "Qu’est-ce que la perspective Vue De Dessus ou Top-Down",
          "Création d’un chemin - Mise en place des tuiles basiques",
          "Création d’un chemin - Ajouter de l’ombrage sur les tuiles",
          "Conception d’une maison - La base",
          "Conception d’une maison - Détails",
          "Conception d'une maison - Lumière & Ombrage",
          "Créer des objets décoratifs avec Aseprite",
          "Construire une barrière et un portail pour la maison",
          "Réaliser un coffre au trésor",
          "Conclusion Section 8"
        ],
        "Création de personnage RPG TOP-DOWN": [
          "Introduction",
          "Faire la base d'un personnage réutilisable",
          "Créer la vue de face avec Aseprite",
          "Création de la vue arrière",
          "Création de la vue de profil",
          "Animer un cycle de marche vers le bas/haut",
          "Animer le cycle de marche gauche/droite",
          "Conclusion Section 9"
        ],
        "Faire du Pixel Art Isométrique": [
          "Comprendre la vue isométrique",
          "Construire une grille isométrique",
          "Importer la palette de couleur et réaliser la grille isométrique",
          "Construire un bâtiment en vue isométrique - La base",
          "Création du dessin et finition des détails",
          "Ajouter des ombres pour finir la construction",
          "Créer des détails supplémentaire pour enrichir la scène",
          "Conclusion Section 10"
        ]
      },
      "requirements": [
        "Des connaissances de base avec un logiciel de dessin type Photoshop, Aseprite sont un plus",
        "Même si vous êtes débutant vous n'aurez aucun mal à suivre le cours"
      ],
      "description": "Êtes-vous passionné par l’univers fascinant du Pixel Art? Avez-vous toujours rêvé de créer vos propres assets 2D pour donner vie à votre projet de jeu en toute indépendance? Si oui, ce cours est fait pour vous!\nDécoupé en plusieurs sections, cette formation a pour objectif de vous apprendre à réaliser des assets 2D pour différents types de jeux tels que RPG TOP DOWN (jeux de rôle en vue de dessus), RTS (jeux de stratégie en temps réel) et PLATEFORME (jeux de plateforme). Vous apprendrez les techniques de création d’assets 2D telles que le dessin de pixels (création d’images pixel par pixel), l’animation (création de mouvements et d’actions) et la création de tuiles (création de décors répétitifs). Vous découvrirez également comment utiliser des logiciels tels que Aseprite et Pyxel Edit pour créer des assets 2D professionnels. En suivant l’intégralité du cours, vous serez en mesure de recréer vous-même l’intégralité de vos décors de jeux vidéo.\nEn bref, que vous soyez débutant ou confirmé, cette formation vous permet d’apprendre de manière ludique et claire. Vous aurez accès à toutes les ressources utilisées dans le cadre de ce cours ainsi qu’à des tutoriels et des exercices pratiques pour vous aider à maîtriser les techniques enseignées. Suivez cette formation pour donner vie à vos projets de jeux vidéo en toute indépendance!\nDans la formation vous apprendrez :\nTravailler avec un outil de création d'images\nUtiliser Aseprite pour créer vos Assets 2D\nChoisir un outil de travail\nL'ombrage en Pixel art\nAméliorer l'environnement graphique de votre jeu\nCréer des personnages de jeu 2D\nAnimer des personnages et des éléments de décors\nCréer des décors RPG Top DOWN, type Zelda Link to the past...\nDécouvrir et créer des décors en vue isométrique pour des jeux Stratégie temps réels par exemple.\nExporter les assets 2d vers un moteur de jeu.\nVous avez besoin de créer une maison pour un projet de jeu RPG 2D (jeux de rôle en 2 dimensions) mais vous ne savez pas comment faire? Ce guide complet est la solution idéale pour apprendre rapidement et facilement à construire tous les éléments essentiels à la réalisation d’un projet de jeu 2D.\nNous verrons comment réaliser et animer des personnages en Pixel art (art graphique utilisant des pixels) pour le jeu vidéo. Je vous guiderai à travers toutes les étapes pour créer une maison en vue isométrique (perspective en 3 dimensions) à intégrer dans un projet de jeu 2D. Nous aborderons également l’animation et les 12 principes de l’animation largement utilisés dans l’univers du dessin animé et du jeu vidéo pour animer de manière cohérente.\n\nÀ la fin de cette formation, vous aurez acquis de solides bases avec le logiciel Aseprite (logiciel de création d’images en pixel art) et vous recevrez un certificat de réussite à ajouter à votre CV. Il s’agit d’une formation pas à pas simple à comprendre dans laquelle vous apprendrez à utiliser Aseprite.\nSi vous souhaitez également créer votre propre jeu ou des assets 2D, découvrez le cours le plus complet en français pour les débutants sur le sujet! Les points forts de la formation sont:\nCréer différents types d’assets 2D pour les jeux vidéo (Plateformer, jeux de plateforme; RPG 2D, jeux de rôle en 2 dimensions; Isométrique, perspective en 3 dimensions)\nApprendre des méthodes simples et efficaces pour réaliser n’importe quoi en pixel art.\nRejoignez-nous dès maintenant pour commencer votre aventure dans la création d’assets 2D!",
      "target_audience": [
        "Artistes qui aiment le style du Pixel Art",
        "Artistes désirant étendre leurs connaissances dans les outils qui proposent du Pixel Art",
        "Tous ceux qui souhaitent découvrir ce genre",
        "Ceux qui souhaitent s'initier au pixel art et au développement de jeux 2D"
      ]
    },
    {
      "title": "【한글자막】 Unreal Engine 5 : 강의 하나로 머티리얼 완벽 마스터하기! (Material 편)",
      "url": "https://www.udemy.com/course/unreal-engine5-material-korean/",
      "bio": "노드별, 단계별 접근으로 언리얼 엔진 5에서의 머티리얼 작동 방식을 학습합니다.",
      "objectives": [
        "다양한 노드를 사용해 복잡한 머티리얼 생성하기",
        "UV/Sine/Component Mask/Panner/Saturate/Lerp/World Position Offset 등",
        "어느 프로젝트에서든 사용할 수 있는 마스터 머티리얼 생성하기",
        "Base color/Roughness/Normal/Ambient Occulusion과 같은 비트맵 개념 및 작동법 이해 하기",
        "씬 처음부터 구축하기",
        "Material Blend/Vertex Painting/Decals/Paint Puddles 개념 소개",
        "랜드스케이프 처음부터 구축하기",
        "경사 블렌드/높이 블렌드/자동 폴리지/실시간 가상 텍스처",
        "Dot Product/Vertex Normal/Texture Bombing/Triplanar Projection 개념 소개",
        "자동 랜드스케이프 머티리얼 처음부터 생성하기"
      ],
      "course_content": {
        "강의 소개": [
          "강의 소개",
          "도움을 얻는 방법",
          "첫 번째 프로젝트 생성하기",
          "머티리얼을 이해하기 어려운 이유"
        ],
        "머티리얼 그래프 기초": [
          "섹션 개요: 머티리얼 그래프 기초",
          "기본 데이터 유형",
          "러프니스 (Roughness)",
          "Lerp 사용법",
          "UV",
          "컴포넌트 마스크 (Component Mask)",
          "텍스쳐 가져오기",
          "움직이는 텍스처 구현하기",
          "패너 (Panner)",
          "머티리얼 인스턴스 (Material Instance)",
          "코멘트(주석) 작성하기",
          "과제: 불 머티리얼 생성하기",
          "과제 공유하기: 자신이 만든 불 공유하기",
          "사인 표현식 (Sine)",
          "사인 표현식 다루는 방법",
          "떠다니는 바위 생성하기",
          "디졸브 머티리얼 생성하기",
          "가장자리에 빛나는 효과 추가하기",
          "더티 플랫폼과 상호작용하기",
          "디졸브 머티리얼과 상호작용하기",
          "과제 공유하기: 각자 만든 작업물 공유하기",
          "섹션 마무리"
        ],
        "마스터 머티리얼 생성하기": [
          "섹션 개요: 마스터 머티리얼 생성하기",
          "마스터 머티리얼 소개",
          "완전한 UV 제어",
          "정적 스위치 파라미터",
          "완전한 Color(색) 제어",
          "변수 (Parameter) 정리",
          "Metalic 제어",
          "Specular 제어",
          "러프니스 (Roughness) 제어",
          "텍스처 압축 설정",
          "노멀 (Normal)",
          "앰비언트 어클루전 (Ambient Occlusion)",
          "섹션 과제 1: 복습",
          "채널 패킹",
          "공유 과제: 의견 공유하기",
          "채널 언패킹",
          "섹션 과제 2: 마스터 머티리얼 내 채널 패킹된 텍스처",
          "디스플레이스먼트 (Displacement)",
          "프로젝트 템플릿 생성하기",
          "공유 과제: 마스터 머티리얼 공유하기",
          "섹션 마무리"
        ],
        "씬 (Scene) 생성하기": [
          "섹션 개요: 씬 생성하기",
          "씬 계획하기",
          "씬 조명 작업",
          "발광 머티리얼 (Emissive Material)",
          "머티리얼 블렌드",
          "버텍스 페인팅",
          "벽을 위한 버텍스 페인팅",
          "길을 위한 버텍스 페인팅",
          "페인트 퍼들 (Paint Puddles)",
          "섹션 과제 - 보행자용 도로 버텍스 페인팅",
          "데칼 (Decals)",
          "정적 메시 채우기",
          "폴리지 모드",
          "레벨 연출 설정",
          "카메라 움직임",
          "씬 렌더링하기",
          "공유 과제: 각자 렌더링한 결과물 공유하기",
          "섹션 마무리"
        ],
        "자동 랜드스케이프 머티리얼 생성하기": [
          "섹션 개요: 자동 랜드스케이프 머티리얼 생성하기",
          "랜드스케이프 프로젝트 구축하기",
          "기본 조명 설정",
          "간단한 조각하기(Sculpting)",
          "머티리얼 함수",
          "머티리얼 함수로 베이스 컬러 제어",
          "카메라 Depth Fade 표현식",
          "텍스쳐 바밍 (Bombing)",
          "변형 매크로",
          "랜드스케이프 내 Specular",
          "랜드스케이프 내 노멀",
          "섹션 과제: 랜드스케이프 내 ORD",
          "공유 과제: 각자의 머티리얼 그래프 공유하기",
          "Specular 및 변형 매크로 제어",
          "랜드스케이프 레이어 블렌드",
          "Gaea(가이아)로 랜드스케이프 만들기",
          "Gaea(가이아)에서 랜드스케이프 출력하기",
          "언리얼로 랜드스케이프 맵 가져오기",
          "섹션 과제 1 – 경사 레이어",
          "“자동 랜드스케이프”란 무슨 뜻인가",
          "경사 마스크 생성하기",
          "랜드스케이프 머티리얼에서 경사 마스크 사용하기",
          "전환 경사 블렌드",
          "Triplanar 프로젝션 (세 개의 다른 이미지를 투사)",
          "경사 레이어를 위해 Triplanar 프로젝션 사용하기",
          "섹션 과제 2 - 복습",
          "높이 마스크 생성하기",
          "랜드스케이프 머티리얼에서 높이 마스크 사용하기",
          "높이 마스크 추가 조정",
          "섹션 과제 3 – 높이 마스크와 경사 레이어 병행",
          "공유 과제: 솔루션 공유하기",
          "실시간 가상 텍스처 (RVT)",
          "실시간 가상 텍스처 구축하기",
          "실시간 가상 텍스처 블렌드 생성하기",
          "머티리얼 내 실시간 가상 텍스처 사용하기",
          "자동 폴리지",
          "랜드스케이프 그래스 타입",
          "폴리지 마스크 생성하기",
          "폴리지 성능 최적화",
          "그래스 페이드 인",
          "섹션 과제 4 : 자동 나무",
          "주변 환경 차단하기",
          "후처리 작업",
          "선택적 과제: 랜드스케이프 렌더링 하기",
          "섹션 마무리"
        ],
        "완강을 축하합니다!": [
          "이 강의 다음엔 무엇을 해야 하나요?",
          "앞으로도 언리얼 학습 여정을 이어나가기 바랍니다",
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "완전히 기초부터 다룰 예정이므로 사전 지식은 필요하지 않습니다",
        "언리얼 엔진 5가 작동되는 컴퓨터가 필요합니다"
      ],
      "description": "Unreal Engine 5 의 머티리얼 (Material) 을 만들고 이해하기 위해 필요한 모든 것을 배울 수 있는\n【한글자막】 Unreal Engine 5 : 강의 하나로 머티리얼 완벽 마스터하기! (Material 편) 강의에 오신 것을 환영합니다!\n\n\n먼저 첫 번째 섹션에서는 머티리얼 을 만들기 위한 가장 기본적인 내용을 다루고 있습니다.\n데이터 유형, Lerp, UV와 같은 것들로 머티리얼 학습을 본격적으로 시작합니다.\n\n\n두 번째 섹션에서는 이전에 학습한 내용을 활용하여 여러분의 첫 번째 마스터 머티리얼 을 직접 생성해 보고 더 심도 있게 다룹니다.\n마스터 머티리얼 이 어떻게 작동하는지 이해하는 것은 Unreal Engine 5 내에서 작업하는 데 필수적입니다. 그러므로 이를 완전히 기초부터 작업하여 베이스 컬러 (Base Color) , 노멀 (Normal) , 러프니스 (Roughness) 등 다양한 맵의 사용법도 다룰 예정입니다.\n\n\n세 번째 섹션에서는 버텍스 페인팅 (Vertex Painting) 을 사용하여 씬 (Scene) 을 만들기 시작합니다.\n계획부터 렌더링까지 전 과정을 학습할 것입니다. 이 섹션을 마치면 원하는 어떤 씬이든 만들 수 있도록 지도합니다.\n\n\n마지막 섹션에서는 자동 랜드스케이프 머티리얼을 처음부터 만들어 볼 것입니다.\n이 섹션에서는 이전에 학습한 모든 내용을 적용할 뿐만 아니라 머티리얼 블렌딩, 자동 폴리지, 실시간 가상 텍스처, 타일링 분리 기술 등을 위한 마스크를 생성하는 방법도 학습합니다.\n\n\n이 강의를 마치면 대부분의 복잡한 그래프도 분석할 수 있고, 마음에 드는 머티리얼 에 관한 모든 튜토리얼을 따라갈 수 있을 것입니다.\n\n지금 바로 Vince 강사님의 【한글자막】 Unreal Engine 5 : 강의 하나로 머티리얼 완벽 마스터하기! (Material 편) 에 등록해보세요!",
      "target_audience": [
        "언리얼 엔진의 머티리얼을 이해하고 싶은 입문자",
        "멋진 머티리얼을 처음부터 직접 만들어 보고 싶은 수강생",
        "씬을 처음부터 직접 만들어 보고 싶은 수강생",
        "랜드스케이프를 처음부터 직접 만들어 보고 싶은 수강생"
      ]
    },
    {
      "title": "Godot для абсолютных новичков | Создай 2D игру мечты",
      "url": "https://www.udemy.com/course/ru-godot/",
      "bio": "Создавай игры вместе с GDScript - языком программирования, очень похожим на многими любимый Python.",
      "objectives": [
        "Пользоваться Godot Engine - самым популярным open-source движком в мире",
        "Создавать 2D игры с нуля",
        "Программировать на GDScript - собственном языке Godot, похожем на Python и JavaScript",
        "Превращать идеи для игр в реальность"
      ],
      "course_content": {
        "Введение": [
          "Почему Godot?",
          "Пара слов о курсе",
          "Установка программы",
          "Первый запуск",
          "Что происходит в стартовом скрипте?",
          "Начинаем писать скрипт",
          "Переменные и типы данных",
          "Продолжаем писать скрипт",
          "Работа с print()",
          "Проверь свои знания - Часть 1",
          "Итоги модуля"
        ],
        "Создание персонажа": [
          "Загрузка ассетов",
          "Выбор компонента для персонажа",
          "Виды физических тел",
          "Настройка внешнего вида",
          "Создание скрипта",
          "Функции непрерывного исполнения",
          "Движение персонажа",
          "Функции движения",
          "Завершение программирования движения",
          "Два варианта реализации движения",
          "Закрепление: условные операторы и логические операции",
          "Гравитация",
          "Прыжок",
          "Закрепление: гравитация и прыжок",
          "Анимация персонажа",
          "Закрепление: анимация"
        ],
        "Основы будущего платформера": [
          "Создание уровня",
          "Слои физики",
          "Управление камерой",
          "Параллакс фоны",
          "Экран окончания игры",
          "Скрипт окончания игры",
          "Сигналы",
          "Проверь свои знания - Часть 2"
        ],
        "Погружаемся и погружаем игрока": [
          "Создание ловушек-шипов",
          "Закрепление: ловушки-шипы",
          "Добавление звука",
          "Платформы для прыжков",
          "Создание интерфейса",
          "Адаптивный интерфейс",
          "Интерфейс: закрепление",
          "Сбор монеток",
          "Проверь свои знания - Часть 3"
        ],
        "Слишком просто? Добавим врагов!": [
          "Первые NPC",
          "Затаптывание врагов",
          "Дальнобойная атака",
          "Улучшение дальнобойной атаки",
          "Последний враг",
          "Проверь свои знания - Часть 4"
        ],
        "Завершение": [
          "Портал на следующий уровень",
          "Система частиц",
          "Экспорт игры",
          "Завершите ваш проект",
          "Что дальше?",
          "Обратная связь"
        ]
      },
      "requirements": [
        "Наличие компьютера на Windows / Linux / MacOS",
        "Желание делать игры"
      ],
      "description": "Godot - самый популярный и быстрорастущий open-source движок для создания игр. Всё больше людей выбирают именно его - и не просто так. Всё больше на нём появляется крутых проектов - и, опять таки, не просто так.\nОн быстрый, удобный, понятный и очень функциональный. Прямо как этот курс, в котором вы научитесь:\nСоздавать полноценные игры - например, 2D платформер, который лежит в основе этого курса\nПрограммировать с нуля на языке GDScript (очень похожим на Python и Javascript)\nПолучать задачи и решать их самостоятельно - в курсе даётся вся необходимая информация, чтобы решать поставленные задачи\nИ разбираться во многих других вопросах, не описанных здесь\nСтандартный урок выглядит так: мы обсуждаем поставленную задачу, затем пытаемся ее решить. Практически в каждом видео можно встретить задания для самостоятельного выполнения - благо,  для этого дается вся нужная информация. Это помогает закрепить полученные знания. После показывается то, как выполнил задачу инструктор, а завершается урок подведением итогов - чему и как мы научились.\nВ курсе каждый желающий может задать интересующий его вопрос и получить ответ от автора (меня) и от других студентов. Также к вашим услугам наше большое сообщество в YouTube и Discord, где вам будут всегда рады.\nПри этом сам курс постоянно развивается, улучшается и расширяется. Уроки обновляются под актуальные версии игрового движка, а баги исправляются.\nОчень надеюсь, что вам понравится Godot Engine и наш курс, призванный познакомить вас с отличным инструментом для создания игр без каких-либо первоначальных знаний или дополнительных вложений.\nКурс актуален для версии Godot 4.0+",
      "target_audience": [
        "Для тех, кто хочет начать свой путь в разработке игр",
        "Для тех, кто хочет реализовать накопившиеся идеи в своей игре"
      ]
    },
    {
      "title": "Unityインストラクターが教えるシャドウバースのような本格2Dカードゲーム開発コース【スタジオしまづ】",
      "url": "https://www.udemy.com/course/unity2d-card-game/",
      "bio": "C#経験者や中級ゲーム開発者に送る究極のカードゲーム開発コース。 難易度が高いと言われるカードゲームを実践的なコーディングスキルを交えて紹介。 日本語では全く見つからなかったカードゲームのテクニックがここに集約！",
      "objectives": [
        "カードの生成、ドラッグ&ドロップ、敵AI、アニメーションなどカードゲーム開発に必要不可欠な実装方法が習得できます",
        "C#プログラミングのファイル構成や開発手順など、本格的なゲームを開発する際のコーディングスキルがハンズオンで学べます",
        "スペルカードやアビリティカードのような特殊な効果を持ったカードの実装方法が理解できます"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "準備運動（最低限の必要知識）": [
          "はじめに",
          "オブジェクトの生成（Instantiate）",
          "親要素の変更（SetParent）",
          "オブジェクトの表示/非表示（SetActive）",
          "テキストの作成と変更方法",
          "時間制御の実装（コルーチン）",
          "ドラッグの実装",
          "Scriptableオブジェクトの生成と使い方",
          "移動アセットDoTween",
          "追加動画：ショートカットキー"
        ],
        "カードゲームの作り方": [
          "はじめに",
          "UIの作成",
          "カードの生成",
          "カードデータの生成",
          "カードデータの表示",
          "カードデータの移動",
          "ターンの実装",
          "ドローの実装",
          "敵カードの移動",
          "敵カードの攻撃",
          "カードの攻撃反映",
          "Playerのカード攻撃実装",
          "攻撃カードの見かけ反映",
          "攻撃可能カードのバグ修正",
          "デッキの作成",
          "敵Heroへの攻撃",
          "敵からHeroへの攻撃",
          "勝利判定の実装",
          "マナコストの実装",
          "マナコストのバグ修正",
          "敵AIのマナコスト制限の実装",
          "マナコストの増加",
          "カウントダウンの実装",
          "敵AIの時間制御",
          "敵が複数枚カードを出す実装",
          "敵AIの移動アニメーション実装",
          "位置や動きのバグ修正"
        ],
        "カードゲーム（アビリティとスペルカード）": [
          "はじめに",
          "速攻アビリティの実装",
          "シールドアビリティの実装",
          "敵AIにアビリティを反映",
          "3つのバグ修正",
          "コードの整理（AI）",
          "コードの整理（UI）",
          "コードの整理（Playerクラス）",
          "スペルカードの実装準備",
          "スペルカード（単体攻撃カード）",
          "スペルカード（全体攻撃カード）",
          "スペルカード（Hero攻撃カード）",
          "スペルカード（単体回復カード）",
          "スペルカード（全体回復カード）",
          "スペルカード（Hero回復カード）",
          "スペルカード（敵AI）",
          "スペルカード（バグ修正）",
          "スペルカードのマナコスト消費",
          "スペルカードアニメーション"
        ],
        "おまけ": [
          "敵手札を見えなくする実装"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Unityで簡単なゲームを作ったことがある（推奨：Udemyの講座「インディーゲーム クリエイターが教えるマリオのようなゲームの作り方」を受講している）",
        "本や動画でUnityのチュートリアルをやったことがある",
        "まだUnityのことはわからないけど１度でいいから本格的なカードゲームを作りたいという熱意がある"
      ],
      "description": "【この講座は以下の方を対象としています】\n「僕の考えた最強のカードゲーム」を作ってリリースしたい方\n一度でいいからすごいと言われる本格ゲームを作ってゲーム開発者の仲間入りをしたい方\nサービス終了したカードゲームを作ろうとしたけど、作り方を調べても全然出なくて困っている方\nコミケやインディーゲームのイベントで出展側として参加したい方\n自身のポートフォリオを充実させたい方\n【習得できること】\nCygamesから発売されたシャドウバース、Blizzard Entertainmentから発売されているハースストーンはどちらもスマホ向けカードゲームの王道であり、非常に高い人気を誇っています。この講座では、このような本格カードゲームのシステムを自身の手で１から習得できます。\nカードゲーム開発は、一般的に難易度が高く、敵AIやゲームルールによる制限が複雑なため、高いコーディングスキルが求められます。この講座では以下の講座内容の流れで本格的なゲーム開発をするための実践的なコーディングスキルを、カードゲーム開発を通して解説しています。\n【講座内容】\n・カードゲーム開発に必要なUnityのテクニック\n・カードゲーム開発の実装\n・カード生成\n・ドラッグ&ドロップによるカードの移動\n・ターンの実装\n・ドローの実装\n・攻撃実装\n・マナコストの実装\n・時間制限の実装\n・敵AIの実装\n・本格カードゲーム開発の実装\n・スクリプトの整理\n・アビリティカードの実装\n・スペルカードの実装\n＊カードゲームを作ったことがない人向けに、カードゲーム開発に必要なUnityのテクニックから始めています。そのため、Unityにあまりなれていない人でもスムーズに講座を進められます（教え方や内容が気になる方はプレビューでご覧ください）。\n\n\n【最後に】\nカードゲームの開発はゲーム開発の中でも難易度の高いジャンルです。ただ、誰しも１度はチャレンジしてみたい憧れのジャンルでもあります。まだ本格的なゲームを作ったことがない方はこの機会にぜひ１つ上のUnityゲームクリエイターになって一緒に世界を驚かせましょう！\n--------------------------\n【他の私の講座との関係】\nまだ１度もゲームを作ったことがない方やC#を全く知らない方は\n・Unity ゲーム開発入門：インディーゲームクリエイターが教えるマリオのようなゲームを作成する方法【スタジオしまづ】\nを受講していることをお勧めします。（実際、私の知り合いのプログラミング初心者はこの講座でゲームを完成させました）\nゲームリリースを目的とされている方は\n・Unityゲーム開発：インディーゲームクリエイターが教えるC#の基礎からゲームリリースまで\nの受講をお勧めします。AppStoreやGoogle Playへのリリースの話が収録されています。",
      "target_audience": [
        "オリジナルイラストを使ったカードゲームを開発したいUnity中級者",
        "カードゲームを作ろうと思ったけど調べても作り方がわからなかったゲーム好きな方",
        "本格的なゲームをリリースして自身の実績として残したい方",
        "カジュアルゲーム開発だけでなく本格的なゲーム開発を体験してみたい方"
      ]
    },
    {
      "title": "【한글자막】 게임 수학 : 게임 개발자가 꼭 알아야 할 핵심 수학 이론",
      "url": "https://www.udemy.com/course/math-gamedev/",
      "bio": "실제 비디오 게임 속 문제를 재미있게 해결해보며 게임 디자인과 코딩을 위한 수학 이론 제대로 마스터하기",
      "objectives": [
        "보다 퀄리티 있는 게임 개발을 위한 핵심 수학 개념",
        "이진수, 십진수, 십육진수 등 기수법 이해",
        "다양한 기수 체계에서 덧셈, 뺄셈, 곱셈, 나눗셈을 하는 법 숙달",
        "IEEE754 부동소수점 표현법의 개념과 효과 이해",
        "2D, 3D, 그 이상의 고차원 벡터 공간에 관한 심화 학습",
        "사인, 코사인, 탄젠트 등 삼각법을 활용한 계산 방법 학습",
        "벡터의 내적과 외적 등 고급 벡터 연산 이해",
        "포물선 운동과 관련된 수학에 관한 이해",
        "조합과 확률 이론의 개념과 실제 용례 탐구"
      ],
      "course_content": {
        "강의 소개 및 연산": [
          "환영 인사",
          "덧셈과 뺄셈",
          "어림수",
          "곱셈과 숫자 블록",
          "나눗셈",
          "나머지",
          "BODMAS",
          "퀴즈",
          "거듭제곱, 제곱과 세제곱",
          "가로 계산기",
          "소수의 제곱",
          "제곱근",
          "퀴즈",
          "차트와 그래프 기초",
          "그래프 아래 면적 기초",
          "기울기 측정의 기초",
          "거리와 속도, 시간의 관계",
          "퀴즈",
          "변화율",
          "마법의 숫자 e",
          "로그 기초",
          "로그 - 밑변환 공식",
          "계승과 순열",
          "기수법",
          "과학적 표기법",
          "체크포인트",
          "퀴즈",
          "다음 학습"
        ],
        "대수학과 방정식": [
          "대수학과 방정식 소개",
          "대수학 기초",
          "부등식",
          "그래프 그리기",
          "기울기와 절편",
          "선형 방정식",
          "중간 퀴즈",
          "연립방정식의 도식화",
          "연립방정식 (치환)",
          "연립방정식 (소거)",
          "평행선",
          "퀴즈",
          "포물선",
          "2차방정식",
          "1차방정식의 표준",
          "포일 메서드 (The FOIL Method)",
          "꼭짓점 형식",
          "퀴즈",
          "완전제곱식 1",
          "완전제곱식 2",
          "인수분해를 이용한 2차방정식 풀이",
          "접점이 2개 이하인 포물선",
          "퀴즈",
          "섹션 마무리"
        ],
        "각도와 원에 대한 소개": [
          "각도와 원에 대한 소개",
          "원",
          "파이(π)란 무엇인가",
          "각도와 라디안",
          "삼각형",
          "퀴즈",
          "피타고라스의 정리",
          "사인, 코사인, 탄젠트 1부",
          "사인, 코사인, 탄젠트 2부",
          "SOH CAH TOA",
          "퀴즈",
          "사인 법칙",
          "코사인 법칙",
          "사인/코사인 법칙에 대한 설명",
          "삼각형 문제의 해법",
          "퀴즈",
          "사인, 코사인, 탄젠트의 그래프",
          "사인파의 조작",
          "파장의 합성",
          "퀴즈",
          "섹션 마무리"
        ],
        "벡터와 행렬": [
          "벡터와 행렬에 대한 소개",
          "벡터 읽고 쓰기",
          "크기와 크기의 제곱",
          "좌표계",
          "벡터의 덧셈",
          "스칼라 곱셈",
          "퀴즈",
          "벡터의 정규화",
          "영벡터",
          "내적",
          "외적",
          "반사",
          "평면으로의 사영",
          "퀴즈",
          "행렬이란 무엇인가",
          "행렬의 합 및 스칼라 곱셈",
          "인접행렬",
          "행렬의 곱셈",
          "퀴즈",
          "단위행렬",
          "행렬식",
          "역행렬",
          "퀴즈",
          "섹션 마무리"
        ],
        "회전과 보간": [
          "회전과 보간 소개",
          "벡터의 방향",
          "허수",
          "복소수",
          "복소평면",
          "퀴즈",
          "극좌표",
          "회전 행렬",
          "오일러 행렬",
          "짐벌락",
          "퀴즈",
          "사원수란 무엇인가",
          "사원수 곱셈 1부",
          "사원수 곱셈 2부",
          "사원수 회전 1부",
          "사원수 회전 2부",
          "퀴즈",
          "선형 보간(LERP)",
          "구면 선형보간(SLERP)",
          "이징 함수",
          "퀴즈",
          "섹션 마무리"
        ],
        "확률과 통계": [
          "확률과 통계에 대한 소개",
          "데이터 들여다보기",
          "백분율",
          "시그마 표기법",
          "평균",
          "극단치",
          "퀴즈",
          "왜도",
          "사분위간 범위",
          "표준편차",
          "상관",
          "인과",
          "데이터 정규화",
          "퀴즈",
          "확률의 기초",
          "연속 시행",
          "여사건 법칙",
          "이론적 확률과 경험적 확률",
          "퀴즈",
          "평균값 정리",
          "베이즈의 정리",
          "누적분포함수",
          "엘로 평점 시스템",
          "퀴즈",
          "섹션 마무리"
        ],
        "게임개발의 여정을 계속하기": [
          "과정 마무리",
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "게임 수학에 대한 배경 지식이 없어도 괜찮습니다",
        "직접 손으로 써가면서 퀴즈를 풀어보기 위해 펜과 종이, 필기도구가 필요합니다."
      ],
      "description": "게임 디자인과 개발을 더 잘 하도록 도와주는 국내 유일 게임 수학 강의\n실제 비디오 게임 속 문제 상황을 해결하며 재미있게 학습해보는 게임 개발 핵심 수학 이론\n퀴즈를 통한 학습 및 C#, C++, Python 언어로 코드화 하면서 게임 수학 기초 이론 완벽 마스터\n\n\n—\n\n[수학과 게임 개발에 무슨 관계가 있는건가요?]\n게임에서 점수를 집계하는 흥미로운 메커니즘, 한 물체가 다른 물체를 부드럽게 따라가도록 하는 방법, 발사체의 경로를 계산하는 방법, 삼각형의 특성을 이용해 적을 정확하게 겨냥하는 방법, 무작위로 아이템을 드롭하게 하는 방법 등.\n\n\n완성도 있는 게임 속에는 수학이 살아 움직입니다. 수학과 게임은 절대로 뗄 수 없는 관계입니다.\n\n\n본 강의에서는 게임 개발과 관련 있는 기초 수학 개념을 배웁니다. 흥미로운 실제 문제를 통해 게임을 더 재밌고 완성도 있게 하는 수학 개념을 여러분의 것으로 만들 수 있습니다.\n\n\n\n\n[게임 수학을 마스터하기 위한 최적의 학습 내용 & 방법]\n본 강의에서는 아래와 같은 내용을 배웁니다.\n\n\n게임 개발과 관련된 방정식을 작성하고 풀어내는 방법\n삼각형과 원, 기타 도형을 이용해 삼각법의 기초 내용을 재미있게 학습\n2D 및 3D 게임을 충분히 개발할 수 있을 만큼 벡터 연산 학습\n허수와 복소수, 각과 사원수에 관해 학습\n\n\n위 내용을 보다 재밌게 학습하기 위해, 실제 비디오 게임 기획과 개발 과정에서 발생하는 문제상황을 해결해가는 방식으로 수학 개념을 학습합니다. 이를 통해 수학적 개념 뿐만 아니라, 왜 이런 수학적 개념이 필요한지 목적도 이해할 수 있습니다.\n\n\n학습한 내용을 완벽하게 이해하기 위해 다양한 퀴즈와 함께, 연산 내용을 직접 코드화 해봅니다. 추상적인 개념 수준으로 학습을 끝내지 않고, 강의에서 학습한 수학적 내용을 실제 게임에 적용할 수 있게 됩니다.\n\n\n\n\n[130만 수강생의 게임개발 학습을 도운 Ben & Gray 강사의 한 마디]\nGameDevtv Team의 Ben, Gray 입니다. 저희의 <게임 수학 : 게임 개발자가 꼭 알아야 할 핵심 수학 이론> 코스에 오신 것을 환영합니다!\n\n\n이 코스는 킥스타터에서 성공적으로 펀딩을 완료한 결과물이며, 우리 커뮤니티에 모인 전 세계 수십만 회원들의 한결같은 요구에 답하기 위해 제작되었습니다. 여러분의 손으로 직접 필기 노트를 작성하고, C#, C++, 파이썬 등 최신 프로그래밍 언어로 일부 연산 내용을 코드화 해보면서 여러분의 수학 기초는 더 단단해질 것입니다.\n\n\n우리는 게임만을 위해서가 아니라 삶의 여러 분야에 적용하기 위해서도 수학을 배워야만 합니다. 여러분의 수학 실력이 향상되는 만큼, 여러분의 세상은 더욱더 다채로워질 것입니다.\n\n\n지금 바로 더 다채로운 세상의 문을 열기 위한 수학 강의를 저희와 함께하시죠. 분명히 만족하실 겁니다!\n\n\n강의에서 뵙겠습니다.\n\n\n- Ben & Gary",
      "target_audience": [
        "수학적인 기초가 부족하다고 느끼는 게임 개발자",
        "게임 개발자가 아니더라도 수학을 재미있게 배우고 싶은 분",
        "기초 수학 실력을 더욱 단단하게 다지고 싶은 개발자"
      ]
    },
    {
      "title": "【初心者から】Blender2.8x to Unreal Engine 4【プロまで】簡単なキャラクターtoヒト型モデル",
      "url": "https://www.udemy.com/course/blender28x-to-unreal-engine4/",
      "bio": "Blender2.8x LTSを学んでUnreal Engine 4で使えるアセットをモデリングして動かします。初心者はもちろんプロのアーティストでBlenderへの移行を考えている方にも役立つカリキュラムです！教材も豊富に用意しました。",
      "objectives": [
        "Blender2.8xの入門からプロの現場で通用する基礎知識の習得",
        "プロップ（小物）のモデリングとキャラクタモデリング",
        "Blenderで基本的なキャラクタのモデリングとリギング",
        "BlenderとUE4双方で基本的なマテリアルを作成",
        "UE4でキャラクターを操作して動かしたり、簡単なbotを動かせるようになる"
      ],
      "course_content": {
        "はじめに": [
          "はじめに",
          "まずはBlenderをさわってみよう",
          "EEVEEの紹介",
          "Grease Pencilの紹介",
          "Sculptの紹介"
        ],
        "Blenderの基本操作と基礎知識": [
          "Blenderの基本操作を知ろう",
          "Blenderの基本操作をマスターしよう",
          "3Dオブジェクトのトランスフォーム",
          "ツールと画面レイアウト",
          "アドオンとは"
        ],
        "Blenderの基礎知識と応用操作": [
          "モディファイアの種類",
          "編集モードとオブジェクトモードでのトランスフォームの違い",
          "シェーディングとノーマル",
          "Blenderの応用操作",
          "UE4とBlenderの連携"
        ],
        "かんたんなモデルでお試し": [
          "ハコちゃんをつくってみよう",
          "ハコちゃんにアニメーションをつけてみよう",
          "UE4にハコちゃんをスケルタルメッシュとしてインポートしてみよう",
          "UE4にハコちゃんをスタティックメッシュとしてインポートしてみよう"
        ],
        "Blenderでモデリング": [
          "モデリングに必要な基礎知識1",
          "モデリングに必要な基礎知識2",
          "PolyQuiltの導入",
          "アナログテレビくんのモデリング1",
          "アナログテレビくんのモデリング2",
          "アナログテレビくんのUV展開・サンプルマテリアル設定",
          "アナログテレビくんのマテリアル作成",
          "アナログテレビくんをUE4へインポート"
        ],
        "Blenderでリトポロジー": [
          "リトポロジーのワークフローを学ぼう: 練習1",
          "リトポロジーのワークフローを学ぼう: 練習2",
          "リトポロジーのワークフローを学ぼう: 人型モデル1",
          "リトポロジーのワークフローを学ぼう: 人型モデル2",
          "リトポロジーのワークフローを学ぼう: 人型モデル3",
          "リトポロジーのワークフローを学ぼう: 人型モデル4",
          "人型モデルのUV展開"
        ],
        "Blenderでテクスチャペイント": [
          "テクスチャペイント: 練習1",
          "テクスチャペイント: 練習2",
          "テクスチャペイント: 人型モデル1",
          "テクスチャペイント: 人型モデル2"
        ],
        "Blenderでアニメーションを作る": [
          "人型モデルにボーンの設定をしよう: 上半身",
          "ボーンの動かし方を学ぼう",
          "人型モデルにボーンの設定をしよう: 下半身",
          "人型モデルにウェイトを設定しよう",
          "人型モデルのアイドルアニメーションを作ろう",
          "人型モデルの歩きアニメーションを作ろう",
          "人型モデルの走りアニメーションを作ろう",
          "人型モデルのジャンプアニメーションを作ろう",
          "FBX形式でエクスポートしてみよう"
        ],
        "UE4で人型モデルを動かす": [
          "UE4でプロジェクトを作成しよう",
          "UE4に作成した人型モデルをインポートしよう",
          "髪の毛のマテリアルを設定しよう",
          "体のマテリアルを設定しよう",
          "人型モデルを動かすための設定をしよう",
          "人型モデルをジャンプさせてみよう"
        ],
        "UE4でアナログテレビくんAIを作ってみよう": [
          "簡単なAIを作ってみよう1",
          "簡単なAIを作ってみよう2",
          "プレイヤーを追いかけるAIを作ってみよう1",
          "プレイヤーを追いかけるAIを作ってみよう2",
          "浮遊するAIを作ってみよう"
        ]
      },
      "requirements": [
        "PCの基本的な操作ができること。",
        "Blenderでの3Dモデリングを通じてUE4でゲームなどのコンテンツを自分で作りたいと思っていること",
        "Blender2.81以降とUE4.23以降がインストールできて、快適に動かせるWindows PCが使えること"
      ],
      "description": "誰にでも使いやすいUIと大幅な機能強化を果たしたオープンソース3D統合ソフトであるBlender2.8x。この講座では長期サポート版Blender2.83xLTSを学ぶことでプロの現場でも通用する基礎的な知識と技術を学び、Unreal Engine 4（UE4）で使えるアセット制作と簡単なコンテンツ制作までを順序良く指導いたします。\nカリキュラムは初心者の方を対象に組んでいますが、既に他のソフトで3D制作に取り組んでいてBlenderへの移行を考えている方にも有用な内容となるように、プロの現場で押さえておくべき重要なポイントもしっかり学べます。特に、自分はアーティストでプログラムとかは苦手なんだけど本当にBlenderでUE4のアセットを作って動画やゲームを作れるのかな？という疑問には、とても明快にお答えできると思います。\n■講座内で制作するモデル\nハコちゃん（教材サンプルあり）\n立方体をベースにボーンとアニメーションの基礎を学習します。\nアナログテレビくん（教材サンプルあり）\n簡単なハードサーフェースモデリング。スタイライズドなテレビを題材に自由なモデリングを試してみましょう。\nリトポちゃん（教材サンプルあり）\n基礎的なヒト型モデルです。ハイポリからのリトポを中心にモデリングを学べます。\nモデルにボーンを組んでアニメーションを作成し、UE4でキャラクタ化するまでをカリキュラムにしました。\n■教材サンプルファイル\n各Blenderモデリングの完成モデルを収めたファイル\nリトポちゃんのモデリング経過ファイル\nサービスサンプルファイル\nUE4のプロジェクト完成ファイル",
      "target_audience": [
        "Blenderでの3Dモデリングを通じてUE4でゲームなどのコンテンツを自分で作りたいと思っている人",
        "すでに他のソフトで3D制作をしており、Blenderへの移行を考えている人",
        "Unreal Engine 4（UE4）に興味があるが、まだ使ったことがない3Dアーティストやゲームデザイナー",
        "リアルタイムレンダリングによる大きな可能性に触れてみたい未体験映像制作者"
      ]
    },
    {
      "title": "Crea tus propios juegos con HTML Y CANVAS JAVASCRIPT",
      "url": "https://www.udemy.com/course/crea-tus-propios-juegos-con-html-y-canvas-javascript/",
      "bio": "Aprende a programar Juegos en JS. Control de movimientos DE personajes, creación de niveles , dificultades y mucho más!",
      "objectives": [
        "Controlar las acciones del usuario",
        "Mover un objeto con respecto al apuntador del ratón, mover objetos hacia el centro y hacer disparos angulados",
        "a desarrollar varios juegos en javascript",
        "la POO aplicada a los videojuegos"
      ],
      "course_content": {
        "Introducción": [
          "presentacion del curso",
          "01.empezamos con el canvas html5",
          "02.generar figuras con el canvas parte1",
          "03.graficar lineas en el canvas",
          "04.propiedades de las lineas en el canvas",
          "05.trazos en canvas",
          "06.generar arcos en el canvas",
          "07.curvar bezier cuadraticas",
          "08.curva cubica de bezier",
          "09.creando un ziczac",
          "10.creando un espiral",
          "11.como dibujar un estrella",
          "12.dibujando un engranaje",
          "13.dibujando un rectangulo"
        ],
        "generar gradientes e imagenes en el canvas": [
          "14.creando una gradiente",
          "15.creando un gradiente radial",
          "16.manejo de patrones en canvas",
          "17.manejo de imagenes en canvas",
          "18.manejo de texto en canvas",
          "19.carga una imagen en el canvas",
          "20.animacion de una pelotita",
          "21.borrando el canvas de la pelotita",
          "22.detectando colisiones.mp4",
          "23.terminando la animacion"
        ],
        "creando un juego de naves espaciales": [
          "24.creando nuestro juego naves espaciales p1",
          "25.creando nuestro juego naves espaciales p2",
          "26.creando nuestro juego naves espaciales p3",
          "27.creando nuestro juego naves espaciales p4",
          "28.creando nuestro juego naves espaciales p5",
          "29.creando nuestro juego naves espaciales p6",
          "30.creando nuestro juego naves espaciales p7",
          "31.creando nuestro juego naves espaciales p8",
          "32.creando nuestro juego naves espaciales p9",
          "33.creando nuestro juego naves espaciales p10",
          "34.creando nuestro juego naves espaciales p11",
          "35.creando nuestro juego naves espaciales p12",
          "36.creando nuestro juego naves espaciales p13",
          "37.creando nuestro juego naves espaciales p14"
        ],
        "creando un juego de tanques en 2D \"worrl tanks\"": [
          "38.juego de tanques de guerra",
          "39.juego de tanques de guerra parte 2",
          "40.juego de tanques de guerra parte 3",
          "41.juego de tanques de guerra parte 4",
          "42.juego de tanques de guerra parte 5",
          "43.juego de tanques de guerra parte 6",
          "44.juego de tanques de guerra parte 7",
          "45.juego de tanques de guerra parte 8",
          "46.juego de tanques de guerra parte 9",
          "47.juego de tanques de guerra parte 10",
          "48.juego de tanques de guerra parte 11",
          "49.juego de tanques de guerra parte 12",
          "50.juego de tanques de guerra parte 13"
        ],
        "Creando un juego con Sprite Sheet (hojas de sprites)": [
          "01.Uso de Hojas de sprites en el canvas HTML5",
          "02.animacion de estrellitas en el CANVAS",
          "03.animacion de un pajarillo en el CANVAS",
          "04.Animacion con un sprite de ancho y altos",
          "05.activar la animacion del personaje usando el teclado",
          "06.animacion con imagenes individuales",
          "07.realizar un fondo deslizable para nuestros PERSONAJES",
          "08.juntar el personaje con el fondo deslizable",
          "09.haciendole mejoras a nuestro codigo",
          "10.bibujando objetos dentro del juego",
          "11.salto del personaje del juego"
        ]
      },
      "requirements": [
        "Un editor de texto, como Sublime Text por ejemplo",
        "Tener conocimientos básicos de JavaScript y de HTML5"
      ],
      "description": "El mundo de los juegos es grande y fascinante y divertido , hay muchas lenguajes de programacion  y posiblidades para desarrollarlos y una de la más usadas y potentes es JavaScript, para que tus juegos puedan estar implementadas  en la web, y de accesso a todo el mundo desde dispositivos tan usados como tablets, smartphones . Por ello en este curso aprenderas a desarrollar con JavaScript diferentes rutinas y funciones enfocadas al desarrollo de un juego, aunque tales conocimientos igualmente puedes orientarlos a tus propios objetivos.\n\n\n\n\nque es javascript?\nJavaScript es un lenguaje de programación que los desarrolladores utilizan para hacer páginas web interactivas. Desde actualizar fuentes de redes sociales a mostrar animaciones y mapas interactivos, las funciones de JavaScript pueden mejorar la experiencia del usuario de un sitio web. Como lenguaje de scripting del lado del servidor, se trata de una de las principales tecnologías de la World Wide Web. Por ejemplo, al navegar por Internet, en cualquier momento en el que vea un carrusel de imágenes, un menú desplegable “click-to-show” (clic para mostrar), o cambien de manera dinámica los elementos de color en una página web, estará viendo los efectos de JavaScript.\n\n\n¿Qué es la programación orientada a objetos ?\nLa programación orientada a objetos (Object Oriented Programming, OOP) es un modelo de programación informática que organiza el diseño de software en torno a datos u objetos, en lugar de funciones y lógica. Un objeto se puede definir como un campo de datos que tiene atributos y comportamiento únicos.",
      "target_audience": [
        "Diseñadores y desarrolladores Web",
        "Desarrolladores de Juegos",
        "Interesados en la programacion web",
        "Interesados en JavaScript"
      ]
    },
    {
      "title": "Unity3D Développer, Monétiser un jeu pour Smartphone ANDROID",
      "url": "https://www.udemy.com/course/unity3d-developper-monetiser-un-jeu-pour-smartphone-android/",
      "bio": "Apprenez a créer votre jeu de A à Z | Gagner de l'argent et Distribuer votre jeu.",
      "objectives": [
        "Programmer en C# avec Unity3D.",
        "Créer des jeux vidéo.",
        "Distribuer et faire connaitre votre jeu.",
        "Gagner de l'argent avec votre jeu grâce a la pub."
      ],
      "course_content": {
        "Introduction et installation": [
          "Installation de Unity"
        ],
        "Unity3D Les bases": [
          "Découverte de l'interface d' Unity3D",
          "Les Objects et la Physique",
          "Les prefabs"
        ],
        "Les Bases du C# dans UNITY3D": [
          "Les scripts et leurs méthodes",
          "Les Variables",
          "Les Conditions",
          "Les Boucles (loops)",
          "QUIZZ Bases C# & UNITY3D"
        ],
        "Création du personnage": [
          "Donner vie a son personnage avec les animations",
          "Gestion des transitions avec l'Animator",
          "Script C# de déplacement du Player",
          "Script C# Synchronisation des animations",
          "Effets sonore de notre personnage",
          "Créer un systeme de Footsteps",
          "Création du prefab Player",
          "Quizz Creation du personnage"
        ],
        "Création de notre premier niveau de jeu.": [
          "Introduction au Parallax Scrolling",
          "Mise en place de nos Layers",
          "Script C# pour le défilement des Layers (Parallax Scrolling)",
          "Création des prefabs plateforme et decors"
        ],
        "Création des Ennemis - Zombie Female": [
          "Animation du zombie Female",
          "Script AI Déplacement du Zombi vers le player",
          "Gestion des animations dans le script",
          "Script dégât sur le player"
        ],
        "Création des Ennemis - Zombie Male": [
          "Script de Déplacement Aller/retour de l' ennemi.",
          "Création des animations et paramètres de l'animator",
          "Synchronisation des animations dans le scripts et gestion du saut sur l'ennemi.",
          "Dégâts infligé au player"
        ],
        "Création des Ennemis - Ghost": [
          "Déplacement de l'objet Ghost grâce a l'animation",
          "Script de collision avec le ghost",
          "Animation et script dead du ghost",
          "Quizz Création d' ennemis"
        ],
        "Interface du jeu - UI": [
          "Introduction User Interface de Unity3D",
          "Script Interface utilisateur SCORE",
          "Script Interface utilisateur BARRE DE VIE",
          "Game Over"
        ],
        "Menu du jeu": [
          "Mise en place de la scène de MENU",
          "Le bouton PLAY",
          "Le Bouton EXIT",
          "Quizz User Interface"
        ]
      },
      "requirements": [
        "Unity3D installé sur ta machine et de l'envie"
      ],
      "description": "Bienvenue dans cette formation complète sur Unity3D et le développement de jeu vidéo.\nCette formation va vous permettre de développer un jeu destiné aux smartphones ANDROID, mais aussi de le distribuer grâce au store Google PLAY, et de le rentabiliser rapidement grâce à la publicité.\nCette formation a pour vocation de vous apprendre à maîtriser deux outils :\nle langage de programmation C#\nle moteur de jeu Unity\nVous apprendrez à utiliser ces deux technologies conjointement ou séparément pas à pas.\nVous disposerez des ressources (sprites, modèles, sons, etc...) afin de suivre ce cours le plus facilement possible et pourquoi pas, les réutiliser dans votre propre jeu ?\n\nTous les chapitres sont enregistrés en HD 1080p pour que vous puissiez tout voir clairement pendant le cours (vous pouvez regarder les previews gratuites).\nJe répondrai personnellement à vos questions si vous en avez, et je fournirai autant d'aide que possible pour vous aider à maîtriser le C# et Unity.\nN'attendez plus et cliquez sur Suivre ce cours en haut à droite. C'est parti !",
      "target_audience": [
        "Débutant en développement de jeux vidéo"
      ]
    },
    {
      "title": "Curso de Unity",
      "url": "https://www.udemy.com/course/curso-de-unity/",
      "bio": "Seja um Desenvolvedor de Jogos. Aprenda a usar o Unity da instalação até a criação de um jogo.",
      "objectives": [
        "Ao final do curso o aluno terá todo conhecimento básico do Unity, o curso está dividido em 16 tópicos, onde será abordado desde a instalação do Unity até a criação de um jogo. Ou seja, este curso tem tudo que você precisa para iniciar no desenvolvimento de jogos utilizando Unity.",
        "Concluído o curso o aluno será capaz de criar um jogo de plataforma 3D e terá aprendido a utilizar uma das maiores engines do mercado."
      ],
      "course_content": {},
      "requirements": [
        "Deve ter noções básicas de como usar o PC apenas, pois tudo que será abordado no curso será explicado. As aulas que envolvem programação vão explicar tudo passo a passo"
      ],
      "description": "Esse curso foi criado para introduzir o aluno ao desenvolvimento de jogos e à Unity. É um curso com grande quantidade de assuntos abordados e que se preocupa em entregar as informações essenciais para quem quer começar sem perder muito tempo.\nO curso está organizado em vídeo aulas de duração média de 15 min cada, dando um total de mais de 8h de vídeo aulas, onde qualquer pessoa que nunca trabalhou com a unity na vida poderá aprender a criar seu primeiro jogo!",
      "target_audience": [
        "Esse curso é para todos que querem criar seus próprios jogos e não sabem por onde começar. É um curso introdutório e destinado para quem tem pouca ou nenhuma experiência com a Unity."
      ]
    },
    {
      "title": "JavaScriptとHTMLで「レトロ風RPG」を作ろう 全コード解説",
      "url": "https://www.udemy.com/course/javascript-html-retro-rpg/",
      "bio": "JavaScriptとHTMLで、レトロ風RPGを作る講座です。ゲームの基本的な構造と、JavaScriptを使ったレトロ風RPGの作り方を学べます。",
      "objectives": [
        "Webブラウザで動作する、JavaScriptのゲームを作れるようになります。",
        "レトロ風RPGを作れるようになります。",
        "ゲームの基本的な仕組みを把握し、その処理を身に付けます。",
        "タイトル、マップ、イベント、戦闘といった画面遷移を伴うゲームを作れるようになります。"
      ],
      "course_content": {},
      "requirements": [
        "変数や関数の利用といった、初歩的なJavaScriptのプログラミングの経験が必要です。",
        "パソコンで開発をおこないます。",
        "WebブラウザとしてGoogle Chrome、エディタとしてVisual Studio Codeを利用します。どちらも無料です。"
      ],
      "description": "このコースでは、JavaScriptとHTMLで「レトロ風RPG」を作成する方法を学びます。\n\n\nタイトル画面、マップ移動、イベント発生、戦闘といった画面遷移を実現しながら、シンプルなコードでゲームを作ります。ゲーム自体は、簡単に一通り遊べるように、10分間ほどで終わるサイズにしています。\n\n\nコースで紹介するコードは、サンプルコードとして、全てダウンロードできます。\n\n\njQueryやその他のライブラリは一切使っていません。そのため必要な処理は、全てサンプル内に入っています。\n\n\nこのコースを習得すれば、次のような事ができるようになります。\n\n\n・ユーザー入力、アニメーション表示、ゲームデータの管理といった、ゲームの基本的な仕組みの理解。\n・データの保存と復帰、BGMや効果音といった、ゲームの補助的な仕組みの理解。\n・タイトル画面、マップ移動、イベント発生、戦闘といった画面遷移をともなうゲームの実現。\n・それらを実現するJavaScriptのコードとHTMLの把握。\n\n\n‥‥‥‥‥‥‥‥‥‥\n\n\nこのコースは、以下のように進みます。\n\n\n● 第1章　イントロダクション\n● 第2章　ゲームの構造と素材\n● 第3章　HTMLの枠組み\n● 第4章　ゲームのデータ\n● 第5章　ゲームの基本的な処理\n● 第6章　文字とウィンドウの描画\n● 第7章　マップの描画\n● 第8章　アイテムの描画\n● 第9章　タイトル画面とマップ画面\n● 第10章　マップ画面の処理\n● 第11章　イベント画面とバトル画面\n● 第12章　戦闘の描画\n● 第13章　戦闘のメニュー\n● 第14章　戦闘の内部処理\n● 終わりに\n\n\n‥‥‥‥‥‥‥‥‥‥\n\n\n本コースで作成するゲームは、以下の機能を持っています。レトロ風RPGの基本的な機能を一通り学べるようにしています。\n\n\n・マップ画面での移動。\n・マップ画面での戦闘発生イベント。\n・マップ画面での街、城への到達イベント。\n・経験値獲得によるレベルアップ。\n・アイテム獲得による能力の変化。\n・呪文獲得による戦闘メニューの変化。\n・戦闘画面での戦闘。\n・マップの土地種類ごとの出現敵の変化。\n・ラスボスを倒したあとのゲームクリア。",
      "target_audience": [
        "レトロ風RPGを作りたい人。",
        "ゲームの中身を基礎的な仕組みから知りたい人。",
        "JavaScriptとHTMLでゲームを作りたい人。"
      ]
    },
    {
      "title": "Unity C# ile Oyun Programlama",
      "url": "https://www.udemy.com/course/2022-unity-ile-oyun-programlama/",
      "bio": "Oyun programlamanın detayları",
      "objectives": [
        "Unity Programındaki tüm detaylar",
        "C# Programlama dilinin incelikleri",
        "Oyun Algoritması oluşturma",
        "Nesne tabanlı programlama (OOP)",
        "Oyun sektörü hakkında bilmeniz gereken bilgiler"
      ],
      "course_content": {},
      "requirements": [
        "Bu kurs için herhangi bir şekilde programlama ya da programcı geçmişiniz olması gerekmez.",
        "Oyun geliştirme konusunda istek ve arzuya sahip olmalısın.",
        "Orta seviyede bir bilgisayarın olmalı"
      ],
      "description": "Welcome to the world of Gaming, an industry larger than the world of cinema and music.\nWhat awaits you in this set?\nFirst of all, the basic dynamics of Unity were explained.\nThe foundations of C# programming were laid. And in-game basic advanced coding mechanics were used.\nComponents that will be useful to us were discussed in detail.\nFocused on mathematical functions and vectors.\nAll the details about graphics and sound were mentioned.\nIt was explained how to create a game world with Terrain.\nAn enjoyable game world was introduced with the brick breaking game.\nHow the character movements are given with the 2D platform game and the relationship between the scripts is given.\nWith the English training set, we focused on how to write a game using UI elements.\nA useful game for math lesson was explained with the numbers coin game.\nTween details were explained with the memory game.\nWith the step-by-step exploration game, the 3d game world was introduced.\n\n\nWhy should you choose this set?\nThis set was explained in a plain, plain and understandable language.\nSince it was told by an educator, the question of where the student would have difficulties was always taken into consideration.\nUnity is one of the most popular game engines right now. Therefore, you can learn about this engine in detail so that you can take part in this wide world.\nThe details of the game were explained in a way that comprehended the logic rather than a rote-based narrative.\nAfter the game is over, we focused on the outputs that we can get in Unity.\nHow to add to the market was explained.\nIn the software world, coding mechanics vary for each person. While some prefer long routes, others solve the situation for you with short routes. Since the details of the Mathematics course were also used in the explanation of this set, practical codes were preferred.\nnew added",
      "target_audience": [
        "Oyun programlamaya meraklı kişiler.",
        "Unity'de belli bir seviyede olup kendini daha fazla geliştirmek isteyenler",
        "Oyun geliştirmeyi kariyeri olarak hedefleyenler",
        "Oyun mekaniklerindeki ince detayları merak edenler"
      ]
    },
    {
      "title": "UNITY: как сделать свою игру? Начало",
      "url": "https://www.udemy.com/course/unity-iq/",
      "bio": "От концепции до игры! Научитесь создавать впечатляющие трехмерные компьютерные игры с помощью Unity!",
      "objectives": [
        "Изучите интерфейс Unity",
        "Разберете основные понятия",
        "Заложите основы нашей игры: создадите первую сцену",
        "Научитесь использовать камеру, свет, частицы"
      ],
      "course_content": {},
      "requirements": [
        "Желание учиться!",
        "Нужен доступ в интернет;",
        "Компьютер"
      ],
      "description": "В представленных уроках высокого качества мы подробно разберем с вами все этапы создания современной компьютерной игры; рассмотрим интерфейс, основные понятия и концепции современного программного обеспечения для создания игр. Вот что мы с вами будем делать в этой части:\nустановим и настроим внешний вид Unity;\nрассмотрим основные понятия этого \"движка\": game object, asset, prefab, компонент, сцена и т.д.;\nнаучимся расставлять и изменять игровые объекты в виртуальном трехмерном пространстве;\nрассмотрим, что такое камера, источники света, частицы;\nРассмотрим магазин игровых объектов Asset Store от компании Unity Technologies;\nнаучимся использовать физику внутри своей игры.\nКурс разбит на последовательности действий, выполняя которые автор подробно раскрывает некоторые секреты создания компьютерных игр с использованием Unity. По окончании первой части курса, помимо сертификата, вы получите практические навыки, которые позволят вам продолжить свою карьеру в игровой индустрии. Unity активно используется сегодня как независимыми разработчиками, так и большими студиями для создания компьютерных игр высокого качества.\nАвтор предлагает на каждом этапе создания игры воспользоваться уже готовыми файлами (трехмерные модели, скрипты, текстуры), которые будут доступны для скачивания и использования в вашем проекте. Проект посвящен созданию одного уровня компьютерной игры \"Save Aliens!\".\n--\nThe author offers at each stage of the game to take advantage of ready-made files (three-dimensional model, scripts, textures), which will be available for download and use in your project. The project is dedicated to creating the same level of the computer game \"Save Aliens!\".",
      "target_audience": [
        "Школьники, студенты, взрослые, мечтающие разрабатывать компьютерные игры",
        "Те, кто хочет связать свою профессию с программированием",
        "Увлекающиеся компьютером и жаждущие новых знаний"
      ]
    },
    {
      "title": "Games in Scratch #2: Tower bloxx",
      "url": "https://www.udemy.com/course/games-in-scratch-2-tower-crane/",
      "bio": "Creating Tower crane game with clones, \"My blocks\", conditional statements in Scratch (Hard level)",
      "objectives": [],
      "course_content": {
        "Setting up game environment": [
          "Introduction",
          "Importing sprites, preparing game field",
          "Set up static sprites"
        ],
        "Defining of core logic": [
          "Tower crane's hook behavior",
          "Logic of the stage (part 1)",
          "Quiz",
          "How to define relative position between two sprites",
          "Logic of the stage (part 2)",
          "Logic of the stage (part 3)"
        ],
        "Game enhancements": [
          "Adding game sounds",
          "Background skyscrapers behavior",
          "Conclusion"
        ]
      },
      "requirements": [
        "basic knowledge of Scratch: logging into your account, creating new project, practical experience with at least some of Scratch controls",
        "having experience working with variables in Scratch",
        "strong understanding of conditional statements (IF-ELSE, comparison, greater than, less than)"
      ],
      "description": "In this course we will create game \"Tower bloxx\" in the Scratch programming language. We will learn by doing!\nDifficulty level of this course: easy \\ medium \\ hard\n\n\nWho is this course suitable for:\nTeachers and parents who want to keep their children busy :)\nChildren and teenagers with with strong knowledge of Scratch\n\n\nThe course also contains theoretical explanations, but most of the course is practical. We will repeat or learn such areas as:\nworking with the coordinate system, why and when our coordinates are positive/negative;\nworking with variables: what it is and why they are needed;\ncreating sprite clones: how not to lose them during gameplay;\nwhat is the purpose of \"My blocks\" and how it can help us to ease game logic.\n\n\nI recommend that students simply repeat all the steps from the video, so at the end of the course they will have their own game, which they will be able to navigate and then be able to independently make some changes and expand the game at their own discretion. At the end of the course, materials with source codes for all sprites are provided - using them you can check whether the game is made correctly and fix any non-working parts.\n\n\nNote: Those who under 18 years old may use this course only if a parent or guardian provides their account and controls all key activities while using the account.",
      "target_audience": [
        "adults and teachers who want their children to be able to develop games",
        "teenagers who want to improve their programming skills"
      ]
    },
    {
      "title": "Sıfırdan Unity ile 10 adet HYPER CASUAL oyun yapımı",
      "url": "https://www.udemy.com/course/sifirdan-unity-ile-10-adet-hyper-casual-oyun-yapimi/",
      "bio": "Sıfırdan Hyper casual oyunların yapımı | Oyunların tamamlanmış kaynak kodlarını alma fırsatı | Acele edin!",
      "objectives": [
        "Sıfırdan oyun yapımını ve süreçlerini",
        "Hyper casual oyun yapımını",
        "Farklı oyun mekaniklerini",
        "Çeşitli oyun yönetim sistemlerini",
        "ve daha fazlası..."
      ],
      "course_content": {},
      "requirements": [
        "En az orta seviye oyun geliştirme ve unity bilgisi olması gerekmektedir"
      ],
      "description": "Merhabalar, bu eğitimimizde aşağıda listelenmiş oyunların hepsini sıfırdan yapıyor olacağız.  Bu eğitim ile oyun mekaniklerinin nasıl kurulduğu ve işlemlerin neler olduğunu sıfırdan öğreneceksiniz. Yapılan 10 adet oyununda mekanikleri birbirlerinden tamamen farklıdır. Bu sebeple 10 farklı oyun mekaniğini ve detayları öğrenmiş olacaksınız.\nOYUNLAR :\nRUN CONTROL\nCAR PARKING\nBALL SHOOT\nSLAM DUNK\nPICKER\nCUT THE ROPE\nDRAW AND COLLECT\nCABLE MANIA\nBALL BUSTER\nCOLOR HOOP STACK\nEğitimdeki ilgili bölümlerine giderek, bütün oyunların tanıtım videolarını ön izleme olarak görebilirsiniz.\nRun control oyunu pilot oyundur ve genel olan tüm işlemler bu oyunda gösterilmiştir. Anlatılan konular aşağıda listelenmiştir, oyunlarda bulunan video açıklamalarında, ilgili videoda hangi işlemlerin yapıldığı açıklanmıştır.\n\n\nYapay zeka sistemi\nObject Pooling\nDosyaya veri yazma ve dosyadan veri okuma | Dosya sistemi\nÇoklu dil sistemi | Dosya üzerinden işlem yapmaktadır\nKarakter özelleştirme | Karaktere Item objeleri eklenebiliyor ve özelleştirilebiliyor. Dosya sistemine kaydediyor ve okuyor.\nGoogle admob entegresi | Geçiş ve ödüllü reklam entegresi anlatıldı\nOyun içi satın alma sistemi anlatıldı ve çalışır hali gösterildi\nGoogle Play'e oyun yükleme işlemi | App store\nOptimizasyon ipuçları anlatıldı\nOyun seslerinin entegresi anlatıldı\nOyun efektlerinin entegresi anlatıldı\nMenü yapımı ve ayarları anlatıldı\nve çok daha fazlası...\nBunlar ana konu başlıklarıdır, eğitimin genelinde çok daha fazla detaylı işlemleri yapıldı ve anlatıldı.\nAnlatılması için seçtiğim konular, oyun türü ne olursa olsun gerekli olan ve kullanılabilecek özelliklerdir. Aslında bu eğitim size hem bu oyunların yapımını hem de genel oyun geliştirmeye dair bilgilere verecektir.\nBu eğitim bir çok avantaj sağlamaktadır. Hedefiniz ve amacınız ne olursa olsun, size katkı sağlayacağını düşünüyorum. Eğitimde ki Eğitimin avantajları nelerdir? kimlere hitap ediyor? adlı videoda bu konu açıklanmıştır.\nUzun bir çalışmanın eseri olarak bu eğitimi sizlere sunuyorum, umuyorum ki çoğu kişiye gelişimlerinde katkı  sağlayacaktır. Başarılar dilerim.",
      "target_audience": [
        "Oyun geliştirmek isteyenler",
        "Mobil oyun dünyasına adım atmak isteyenler",
        "Oyun sahibi olmak isteyenler"
      ]
    },
    {
      "title": "Unity C# | Unity Oyun Geliştirmeyi Oyun Geliştirerek Öğren",
      "url": "https://www.udemy.com/course/unity-oyun-gelistirme/",
      "bio": "Unity'le Sıfırdan 7 Farklı Oyun Programlama, Unity 2D & Unity 3D Uygulamalı Eğitimi Unity C#, Unity Oyun Geliştirme",
      "objectives": [
        "Unity arayüzünü tanıyıp ve etkin bir şekilde kullanabileceksiniz",
        "3 boyutlu ortamda oyun sahnesini oluşturabileceksiniz",
        "Oyun objelerini, komponentlerini anlayıp kullanabileceksiniz",
        "Oyun için gerekli C# kodlarını oluşturabileceksiniz",
        "Oyunlar için gerekli arayüzleri hazırlayabileceksiniz",
        "Geliştirdiğiniz oyunları Android, iOS ve Windows gibi temel işletim sistemlerinde ve Web de çalışır hale getirebileceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "Unity Hub ve Unity 2020 Kurulumu",
          "Unity Arayüzünü Tanıyalım",
          "Bazı Problem ve Çözüm Önerileri",
          "Bazı Kısayol Tuşları"
        ],
        "Programlamaya giriş (Tahmin Oyunu)": [
          "Giriş - Ünite İçeriği",
          "Kodlamaya Giriş - Debug.Log Komutu",
          "If, Else If, Else Kullanımı ve Değişkenler",
          "Metod Oluşturma",
          "Aklından Bir Sayı Tut Oyunu 1/2",
          "Aklından Bir Sayı Tut Oyunu 2/2"
        ],
        "Arayüz Objeleri (Dört işlem oyunu)": [
          "Giriş - Ünite İçeriği",
          "Sahneye UI Text Ekleme ve Yazı Fontu Değişikliği",
          "Sahneye UI Image Ekleme",
          "Sahneye UI Button Ekleme",
          "UI Objelerinde Anchorlar",
          "Buton OnClick Kullanımı",
          "Dört İşlem Oyunu Arayüz Hazırlama",
          "Dört İşlem Oyunu Kodlama",
          "Windows, Mac OS ve Linux İçin Çıktı Alma"
        ],
        "3 Boyutlu Objelerle Çalışma (Labirent Oyun)": [
          "Giriş",
          "3B Obje Oluşturma ve Genel Bilgi",
          "Materyal Oluşturma ve Objelerimize Uygulama",
          "3B Objelere Rigidbody Ekleme",
          "Labirent Oyunu İçin Sahne Hazırlığı",
          "Yön Tuşları ile Topu Hareket Ettirme",
          "OnCollisionEnter Methodu İle Çarpışma Kontrolü",
          "Oyun İçin Gerekli Arayüz Objelerini Ekleme",
          "Oyun İçin Gerekli Kodları Yazma(1/2)",
          "Oyun İçin Gerekli Kodları Yazma(2/2)",
          "Yeniden Oyna Butonu Ekleme",
          "Web Siteleri İçin Çıktı Alma (WebGL)"
        ],
        "2 Boyutlu Objeler (Balon Patlatma Oyunu)": [
          "Giriş - Ünite İçeriği",
          "Spritelar Özellikleri ve Sprite Animasyonu Oluşturma",
          "2D Objelerimize Collider2D Ekleme",
          "OnMouseDown Methodu ile Obje Üzerine Tıklandığını Saptama",
          "OnMouseDrag Methodu ile Sürükleme İşlemi",
          "Prefab Oluşturma ve Instantiate Komutu",
          "Balon Patlatma Oyunu Sahne Hazırlığı",
          "Rastgele Balon Oluşturma",
          "Balonlar İçin Patlatma Animasyonu Oluşturma",
          "Patlatma Animasyonu İçin Gerekli Kodlama",
          "Oyunumuza Süre Ekleme",
          "FindWithTag Komutu İle Sahnedeki Objeleri Bulma",
          "Oyunumuza Giriş Sahnesi Ekleme",
          "Oyunla İlgili Bazı Düzenlemeler",
          "Android Cihazlar İçin Çıktı Alma",
          "iOS Cihazlar İçin Çıktı Alma İşlemi"
        ],
        "İleri Seviye 3D Objeler (Altın Toplama Oyunu)": [
          "Giriş - Ünite İçeriği",
          "Unity Asset Store (Mağaza) Kullanımı",
          "Hareketsel ve Döngüsel Animasyon Oluşturma",
          "Kodla Animasyon Oluşturma",
          "Altın Toplama Oyunu Sahne Hazırlığı",
          "Oyuncu Kontrol Scriptini Oluşturma",
          "Kamera Kontrol Scripti",
          "Colliderlar ile İlgli Problemler ve Düzenleme",
          "Animasyonla ve Fizik Materyali ile Engel Oluşturma",
          "Altın Objesi ve Animasyonu",
          "OnCollisionEnter Methodu ile Çarpışma Kontrolü",
          "Oyuna Ses ve Müzik Ekleme",
          "Oyuna Başla Butonu Ekleme"
        ],
        "Survivor (Hayatta Kalma Oyunu)": [
          "Giriş - Ünite İçeriği",
          "Ada Oluşturma (1/2)",
          "Ada Oluşturma (2/2)",
          "Ağaç Çimen ve Su Oluşturma",
          "Oyuncu Kontrol ve Zombi Ekleme",
          "Kuşbakışı Kamera Ekleme",
          "Gece Gündüz Döngüsü",
          "Particle Systemle Efekt Oluşturma",
          "Silah Oluşturma",
          "Patlama Efekti Oluşturma",
          "Zombi İçin Gerekli Kodların Yazılması",
          "3D Mesafe Ölçümü ve Animation.Play() Komutu",
          "Life Bar(Hayat Çizgisi) Oluşturma",
          "Can Değeri ve Kalp Animasyonu (İleri Seviye Animasyon)",
          "Rastgele Zombi Oluşturma",
          "PlayerPrefs İle Kalıcı Bilgi Saklama",
          "Oyunumuza Ses Efektleri Ekleme"
        ],
        "Tuğla Kırma Oyunu": [
          "Giriş",
          "Sahne Hazırlığı",
          "Oyun Sahnesi Ayarları",
          "Top ve Pedal Oluşturma",
          "Pedal ve Top Scriptleri",
          "Duvar Colliderlarını Ayarlama",
          "Tuğlaları Hazırlama",
          "Static Değişken ile Toplam Tuğla Sayısını Tutma",
          "Hazır Objelerimizi Prefablere Dönüştürme",
          "Arka Plan Müziği Ekleme",
          "Oyunla İlgili Bazı Düzenlemeler",
          "Tuğla Kırma Oyunu Ses Efektleri Ekleme",
          "Oyunumuza Particle Sistem Kullanarak Görsel Efektler Ekleme (1/2)",
          "Oyunumuza Particle Sistem Kullanarak Görsel Efektler Ekleme (2/2)",
          "Son Ders Konuşması"
        ],
        "Projelerinizden Gelir Elde Etme": [
          "Oyunumuzu Play Store'da Yayınlama",
          "Admob Reklam Alt Yapı Hazırlığı",
          "Admob Reklam - Banner Reklam Ekleme",
          "Admob Reklam - Interstitial Reklam Ekleme",
          "Admob Reklam - Rewarded Reklam Ekleme",
          "Admob Reklam - Reklamları Test Etme",
          "Uygulama İçi Satış Yapma"
        ],
        "Ekstra Dersler": [
          "Hinge ve Fixed Jointler ile Zincir Benzeri Fiziksel Yapı Oluşturma",
          "Mobil Cihazlarda Accelerometer (İvme Ölçer) ile Hareket",
          "Level Sistemi Oluşturma (Kilitli Sahneler)",
          "Rastgele Renkli Balon Oluşturma",
          "Mobil Cihazlar İçin Joystik",
          "Text Mesh Pro Kullanımı",
          "Invoke ve InvokeRepeating ile Spawn ve Zaman Sayacı"
        ]
      },
      "requirements": [
        "Unity’i yükleyebilecek bir bilgisayara sahip olmak",
        "Programlama ile ilgili temel bilgi sahibi veya öğrenebilecek içgüdüye sahip olmak"
      ],
      "description": "Unit ile oyun nasıl geliştirilir diyorsanız ve eğer Android, iOS, Windows vb. farklı işletim sistemleri üzerinde çalışan oyunlar hazırlamak istiyorsanız, doğru yerdesiniz. Bu eğitim seti oyun sektörüne atılmayı düşünenler ve bağımsız oyun geliştirmeyi amaçlayanlar için hazırlanmış bir eğitim setidir.\nKursumuzda Unity'nin bilgisayarımıza nasıl yükleyebileceğimizden başlayarak, arayüzümüzü nasıl hazırlayacağımız, sahnemizi nasıl oluşturacağımız, scriptlerle objelerimizi nasıl ilişkilendireceğimizden tutun oyunumuzda kullanacağımız materyallere nasıl ve nereden erişebileceğimize, hatta, bu oyunlar üzerinden nasıl gelir elde edebileceğinize kadar, bir çok konu ele alınmıştır.\n\nKursumuz aktif proje tabanlı bir kurstur, derslerde kopyala yapıştır yöntemi ile kodlar vermek yerine neyi nasıl neden yaptığımızı adım adım anlatmayı tercih ediyorum ve bu yöntemin oyun geliştirme üzerine ders alan öğrenciler için en etkili yöntem olduğunu düşünüyorum. Çünkü neyi? neden? ne zaman? ve nasıl? yaptığımızı anlayarak ilerlemenin, kendi projelerinizi geliştirmeye başladığınızda kendi ayaklarınız üzerinde durup, problemlere kendi başınıza çözüm üretebilmenize olanak sağlayacağına inanıyorum. Tabi hem kurs süresince hemde kendi projelerinizi geliştirirken sorularınızı günlük cevaplamaya çalışıyor olacağım.\nKursa katılma nedeniniz İster hobi isterse profesyonel nedenlerle olsun, ister sıfırdan başlıyor, isterseniz olan bilgilerinize yenilerini ekleyerek kendinizi geliştirmek istiyor olun C# ile Unity de oyun geliştirmek isteyen herkese katkı sağlayacağına inanıyorum.\nKurs süresince 7 farklı oyun geliştiriyor olacağız ve her ünitede yeni yeni şeyler öğreniyor olacağız yani “Oyun geliştirmeyi oyun geliştirerek öğreniyor olacağız.",
      "target_audience": [
        "Kafasındaki oyun projesini hayata geçirmek isteyenler",
        "Okulunda herhangi bir ders için(oyun, eğitim, fizik, vb.) oyun projesi geliştirmeyi hedefleyenler",
        "Oyun sektörüne girmeyi amaçlayanlar.",
        "Geliştirdiği yazımların yanı sıra oyun da geliştirmeyi isteyenler.",
        "Bildiği oyun motorlarına bir yenisini eklemeyi düşünenler."
      ]
    },
    {
      "title": "【はじめて学ぶ人のための】Unreal Engine 5 背景・自然風景制作 基礎講座",
      "url": "https://www.udemy.com/course/ue5landscape/",
      "bio": "復習テキスト付！　初めてUnreal Engineに触れる背景デザイナーを目指す初心者のあなたへ　ランドスケープ機能を使用してマイワールドを作成しよう！Blenderなど３DCGツール使用者にもおすすめ。ブループリント無しの初心者向け講座！",
      "objectives": [
        "「最初に何をしたらいいか分からない…」インストール方法から基本的な操作方法",
        "「全行程を網羅的に！」風景制作のための地形編集から地面の塗分け・草木や３Dモデルの配置といった環境構築(スカルプト、ペイント、アセット、フォリッジ）",
        "「かっこよくなるコツを知る！」ポストプロセスやライティング等の基本的な環境設定方法",
        "「アウトプットできるスキルを身につける！」静止画や動画の撮影方法"
      ],
      "course_content": {
        "はじめに": [
          "講座選択のヒント",
          "講座紹介",
          "【必ずお読みください】講座に関する質問について",
          "参考サイト",
          "講座補助資料はこちらから！"
        ],
        "選択モードの基本的な操作を学び、UE5に慣れよう！": [
          "【重要】Unreal Engine5.1アップデートに伴う変更点①　エンジンバージョンの選択",
          "Unreal Engine 5のインストールとプロジェクトのスタート",
          "【必ず受講前に確認してください】QuixelBridgeの動作チェック",
          "ビューポートの視点操作とカメラ速度・プロジェクトの保存",
          "ビューポートの表示設定",
          "アイテムのトランスフォーム",
          "アウトライナーと詳細パネル",
          "選択モードと生成"
        ],
        "モデルをインポートしよう！": [
          "FBXファイルのインポート",
          "MegaScanアセットインポート",
          "マーケットプレイスからのアセットインポート・UE4プロジェクトの用意"
        ],
        "ランドスケープモードで地形づくりの基礎を学ぼう！": [
          "管理モードとメッシュの生成",
          "スカルプトツールとフォールオフ（減衰)",
          "スムーズ・平坦ツール",
          "傾きツール",
          "侵食ツール",
          "水侵食ツール",
          "ノイズ・リトポロジー・可視性ツール",
          "ミラー・選択・コピーツール"
        ],
        "作品をイメージしてリファレンスを集めよう！": [
          "作品のイメージづくり"
        ],
        "さぁ本番、地形をつくろう！": [
          "【重要】Unreal Engine5.1アップデートに伴う変更点②　開始プロジェクトの種類",
          "プロジェクトの用意・スカルプトワークフロー",
          "平坦な陸と海の用意　(メッシュ生成と海のメッシュ)",
          "島の概形　（スカルプト＆スムーズ＆平坦化）",
          "地形の編集1　(侵食)",
          "地形の編集2　(ノイズ)",
          "シンボル島づくり",
          "道づくり"
        ],
        "地面のマテリアル作成": [
          "【重要】Unreal Engine5.1アップデートに伴う変更点③　マテリアルプレビューの改善",
          "マテリアル探しの旅に出よう！(Quixe Bridge)",
          "Landscapeマテリアル作成1　(Landscape Layer Blend)",
          "Landscapeマテリアル作成2　(スペキュラとプレビューバグについて)",
          "【正常時のデモ】Unreal Engine 5　早期アクセス版のプレビュー　※UE5.1で解決しました。",
          "Landscapeマテリアル作成3　(RoughnessとMultiply)",
          "Landscapeマテリアル作成4　(LayerInformation)"
        ],
        "風景に色付けをしよう！": [
          "セクションの完成イメージとマテリアルの重要設定(共有ラップ)",
          "ペイントの設定項目",
          "浜辺のペイント（ペイントの基本フロー）",
          "山のペイント",
          "崖のペイント",
          "道のペイント",
          "島のペイント"
        ],
        "3Dアセットで島の細部をつくり込もう！": [
          "完成形のイメージ共有",
          "3Dアセット探し",
          "3Dアセットの配置方法　(トランスフォーム)",
          "完成イメージを確認しよう！"
        ],
        "フォリッジで草花を植えよう！": [
          "草のアセット(3D Plants)探し",
          "フォリッジの基本",
          "フォリッジで草を植えよう！"
        ]
      },
      "requirements": [
        "ゲームエンジンやプグラミングの知識は一切不要です。初めてこの分野に挑戦するあなた向けに、講座中の言葉選びをしています。",
        "Unreal Engine推奨スペックのPCが必要です。(プロセッサ：Quad-core Intel Intel または AMD、 2.5 GHz またはそれ以上、メモリ：8 GB RAM、グラフィック カード：DirectX 11 または DirectX 12 対応",
        "動作環境の一例として、CPUはInterCorei5以上のスペック　第10世代CPU以上(10***と記載のあるもの)が最低ラインです。",
        "動作環境の一例として、GPUはRTX3050以上があると比較的快適です。メモリは16GB以上が良いでしょう。"
      ],
      "description": "Unreal Engine 5 風景制作講座へようこそ！\n講師のうめちゃんです。「初心者に優しく、丁寧に」をモットーに活動しています。\n\n\nとっても面白そうだけど、「コードとか書くんでしょう？難しそう」と思っていませんか？\nなかなか教材が見つからなくて体系的に学べず、作品づくりに戸惑っていませんか？\n\n\nお任せください！\n受講生1万名超、最高講師評価をもつ私うめちゃんが、貴方のお悩みを解決します！\n\n\n・初心者から安心して学べるレベル設定と講座内でステップアップできる構成\n・動画を止めても安心なテロップに加え、省略の無い丁寧な解説\n・忙しくても無理なく続けられる、細分化された短時間のレクチャー\n・動画を見直さなくても復習できる、要点をまとめたテキスト\nこれらが私の講座の魅力です。\n\n\nこの講座では、Unreal Engine５のランドスケープ機能を用いて風景制作を行います。\nインストールや基本操作から学び、メインとなる風景制作を基礎を網羅的に扱い、最後は静止画と動画の撮影までカバーします。\n\n\n本講座にはブループリントは含まれず、プログラミングのようなちょっと難しい内容はまだ・・・という方も安心してスタートが切れるテーマを選んでいます。\n\n\n◆学習内容のキーワード\nUnreal Engine５のインストール\n基本的な操作\n地形の生成と管理\n地形の編集\nマテリアルの作成と管理方法\n地形のペイント\n草木（フォリッジ）の生やし方\nアセットの活用方法\nポスト処理\n静止画、動画の撮影\n\n\n初心者でも綺麗な風景制作ができるこの素晴らしいUnreal Engine５を一緒に学びましょう！\n\n\n※必ず受講前にご確認ください。\n本講座ではUnreal Engineで使用できる豊富な無料アセットライブラリ、Quixel Bridgeを使用します。\nMacOSでは本講座の内容から追加の作業が必要かつ、準備を済ませてもQuixelBridgeが機能しないPC環境がどうやらあるようです。動作確認について資料で確認するレクチャーがございますので事前に確認を済ませておきましょう。\nUdemyには受講開始時であれば30日間の返金申請に対応できますので必ず受講前にご確認ください。",
      "target_audience": [
        "「難しそうで心配…」Unreal Engineを始めて学ぶ初心者で、テンポよく、かつ丁寧な解説で一歩ずつ前進しながらステップアップしたい方",
        "「勉強も楽しみたい！」作品を制作しながら楽しくモチベーションを維持して学習したい方",
        "「挫折したくない！」忙しい中でも着実に進めるよう、細分化されたテーマごとのレクチャーで一歩一歩学習を進めたい方",
        "「いきなりプログラミングは…」ブループリント(ロジックをつくるもの）を使用せず、比較的簡単な内容からUnreal Engineを学び始めたい方",
        "「復習も大切！」充実の補助資料で受講後の復習もしっかりカバーしたい方"
      ]
    },
    {
      "title": "Lego Mindstorms EV3 ile Uygulamalı Robotik Kodlama Eğitimi",
      "url": "https://www.udemy.com/course/lego-mindstorms-ev3-programlama/",
      "bio": "Lego Mindstorms EV3 ile Robotik ve Kodlama",
      "objectives": [
        "Lego Mindstorms EV3 ile basitten karmaşığa bir çok robotik projesi yapabiliyor olacak."
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Robotik'in temel kavramları | Mekanik, Motorlar ve Brick Kavramı",
          "Robotik'in temel kavramları | Sensörler",
          "Robotik'in temel kavramları | Robotik Temel Kavramlar",
          "Robotik'in temel kavramları | Instruction / Kullanım Klavuzu Kullanımı"
        ],
        "LEGO EV3 Kodlama Ortamı": [
          "LEGO EV3 Kodlama Ortamı | Bloklar Genel Tanıtım"
        ],
        "Fiziksel Bağlantılar": [
          "| Kablo Bağlantıları"
        ],
        "Örnek Uygulamalar 1": [
          "Uygulamalar | Motor Uygulamaları",
          "Uygulamalar | Uygulamayı Robot Üzerinden Çalıştırma",
          "Uygulamalar | Robota Bluetooth ile Bağlanma",
          "Uygulamalar | Display Blok Uygulaması",
          "Uygulamalar | Action Tab Blokları",
          "Uygulamalar | Wait Blok Uygulaması"
        ],
        "Örnek Uygulamalar 2": [
          "Örnek Uygulamalar | Touch Sensor",
          "Örnek Uygulamalar | Infrared Sensör Uygulaması",
          "Örnek Uygulamalar | Mesafe Ölçüm Uygulaması",
          "Sensör Uygulamaları | Infrarered Sensör Uzaktan Kumanda Uygulaması",
          "Sensör Uygulamaları | Uzaktan Kumandayı Kovalayan Robot",
          "Örnek Uygulamalar | Color Sensör ile Çizgi İzleyen Robot (Renge göre)",
          "Örnek Uygulamalar | Color Sensör ile Çizgi İzleyen Robot (Parlaklığa Göre)",
          "Örnek Uygulamalar | Color Sensör ile Çizgi İzleyen Robot (Prportional Algoritma)",
          "Örnek Uygulamalar | Ultrasonic Sensör ile Masadan Düşmeyen Robot",
          "Örnek Uygulamalar | Ultrasonic Sensör ile Kenar İzleyen Robot",
          "Örnek Uygulamalar | Ultrasonic Sensör ile Labirentten Çıkan Robot (Basit)",
          "Örnek Uygulamalar | Ultrasonic Sensör ile Labirentten Çıkan Robot (Proportional)",
          "Örnek Uygulamalar | Ultrasonic Sensör ile Bardak Labirenti",
          "Örnek Uygulamalar | Gyro Sensör ile Açı Ölçme",
          "Örnek Uygulamalar | Gyro Sensör ile Denge Terazisi"
        ],
        "İleri Seviye Uygulamalar": [
          "İleri Seviye Uygulamalar | Zeka Küpü Çözen Robot"
        ]
      },
      "requirements": [
        "Lego Mindstorms EV3 sahibi olmak."
      ],
      "description": "Bu kursta Lego Mindstorms EV3 ile robotik ve kodlama öğrenmiş olacaksınız. Öğrenciler için kodlamayı ve robot yapmayı eğlenceli hale getiren Lego markasının tak çıkar ürünlerini sensör, motor ve  kontrol ünitesi ile programlanabilir hale getirdiği  Lego Mindstorms EV3 seti ile büyük küçük herkes mühendislik çalışmalarını çok basit bir şekilde yapabilir hale gelecektir.\nBu kursumuzda sıfırdan hiç bir şey bilmeden,\nUzaktan kumanda ile kontrol edilebilen robot\nÇarpmadan giden araba, çizgi izleyen araba\nLabirentten çıkan robot\nKızılötesi sensör ile bir nesneyi izleyen robot\nDenge sensörü ile ağırlığı değişen tahteravalliyi sürekli dengede tutan robot\nve hatta Zeka küpü çözen robot gibi uygulamaları kendi başınıza yapabiliyor olacaksınız.\nYaparken eğlenecek, eğlenirken öğreneceksiniz.\nAyrıca setin içinde gelen birbirinden güzel özellikleri bulunan robotları da yapabiliyor hale geleceksiniz.\nKursun devamında bu temeller üzerine robotumuzu yapay zeka ve görüntü işleme teknikleri ile kontrol etme uygulamaları da eklenecektir.",
      "target_audience": [
        "9 Yaş üstü çocuklar, Bilişim öğretmenleri, Maker olmak isteyen yetişkinler, kısaca Robotik ve Lego ile ilgilenen büyük küçük herkes"
      ]
    },
    {
      "title": "【UE5入門】これから始めるUnreal Engine5とBlueprint入門　ブロック崩しの作り方【スタジオしまづ】",
      "url": "https://www.udemy.com/course/studioshimazu_ue5blueprint_breakout/",
      "bio": "一緒にブロック崩しを作りながらBlueprintの基礎的な使い方を一通りマスターできる超入門者向けのハンズオン教材",
      "objectives": [
        "Unreal Engine5を使ったゲームの作り方が学習できます",
        "Blueprintを使ってオブジェクトの移動ができるようになります",
        "Blueprintを使ってUIの作成や、スコアの連携ができるようになります",
        "Blueprintを使ってキーボード入力やマウスの入力ができるようになります",
        "Blueprintを使って衝突判定が出来るようになります"
      ],
      "course_content": {
        "紹介": [
          "【必修】はじめに"
        ],
        "インストールと基本操作": [
          "インストール",
          "新規作成と操作説明",
          "カメラ操作",
          "Unreal Engine5の構造"
        ],
        "Blueprintの基礎": [
          "はじめに",
          "イベント関数",
          "入力の受付",
          "変数について",
          "if文について",
          "関数について",
          "衝突判定",
          "オブジェクトを破壊する",
          "音を出す",
          "エフェクトを出す",
          "他のブループリントを操作する",
          "UIの作成",
          "終わりに"
        ],
        "ブロック崩しを作りながら学ぶUnreal Engine5": [
          "はじめに",
          "壁の作成",
          "固定カメラの実装",
          "バーを動かす",
          "ボールを動かす",
          "ボールが跳ね返る",
          "壊れるブロックの実装",
          "リトライの実装",
          "ボールを生成する実装",
          "残機（ライフ）の実装",
          "ゲームオーバーUIの作成",
          "ゲームオーバー後のリトライ実装",
          "バーでボールを操作する実装",
          "ゲームクリアの実装",
          "クリア後のリトライの実装",
          "クリアUIの作成",
          "おわりに"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "プログラミングの経験は不要。必要なことは全てこの講座内で学習できます。"
      ],
      "description": "ストリートファイターVやドラゴンクエストの開発でも活用されているUnreal Engine。\nちょっと触ってみたいけど、やっぱり難しそうと思ったことはないですか？\n実際、私もUnityインストラクターとして、Unreal Engineに興味を持って触ってみたことは何度もありました。\nただ、、、難しい！！！\nとりあえずBlueprintの仕組みだけでも知りたいのに、全然動かない！\nってことになってました。そこから猛勉強して、初心者の方でもUnreal Engine(Blueprint)が使えるようになるようにまとめたのがこの教材です。\n\n\nいきなりFPSやTPSを作る教材もありますが、テンプレートを使って学んでもいざ作るとなると何も作れないことはないですか？\n今回はゲーム開発初心者におすすめと言われているブロック崩しを学習しながらBlueprintとUnreal Engineでゲームを作っていく流れを学んでいきます。\n\n\n初心者の方でも理解しやすいように構成は以下のようになっています。\n・UE5のダウンロード方法と注意点\n・Urenal Engineの基礎\n・Blueprintの基礎\n・ブロック崩しの作成\n初めてUE5を学ぶ方でも、まずは基礎を抑えることで、スムーズにブロック崩しの制作に取り掛かれるようになっています。\n\n\nUnreal EngineはUnityと違ってゲーム会社が作ったゲームエンジンなので、リッチなゲームを作りやすいツールではありますが、その分機能が豊富で初見ではわからないことがたくさんあります。\nでも、この教材を完了するころには「Unreal Engine5ちょっとできる」Tシャツが着れるはず。\n一緒にAAAタイトル級のゲームを作る第一歩を踏み出しましょう！",
      "target_audience": [
        "はじめてUnreal Engine5をさわる方",
        "Unityでゲーム開発をしていて、Unreal Engineにも興味のある方",
        "Blueprintをやってみたけど挫折した方",
        "とりあえずBlueprintを最短距離で学習したい方"
      ]
    },
    {
      "title": "UPBGE 0.2.5: Desenvolva jogos completos - Utilizando python",
      "url": "https://www.udemy.com/course/upbge-desenvolva-10-jogos-completos-utilizando-python/",
      "bio": "Aprenda a criar seus próprios jogos",
      "objectives": [
        "Desenvolver jogos utilizando a UPBGE como game engine",
        "Utilizar python para aprimorar seus próprios jogos",
        "Criar modelos 3D para seus jogos"
      ],
      "course_content": {
        "Introdução": [
          "Como baixar e instalar o UPBGE",
          "Breve introdução ao curso"
        ],
        "Introdução a interface e ferramentas": [
          "Navegando na interface do programa",
          "3D View",
          "Add e Remover objs",
          "Mover Objetos",
          "Escalonar Objetos",
          "Rotacionar Objetos",
          "Modos de visualização",
          "Modo de edição",
          "Tipos de shaders",
          "Tipos de materiais"
        ],
        "Introdução Python - API UPBGE": [
          "Como adicionar um Component (Script)",
          "Entendendo a organização do script",
          "Variáveis na prática",
          "Operações aritméticas",
          "Condições",
          "Funções no Python",
          "indentação no python",
          "Condições parte 2",
          "Arrays",
          "Parâmetros das funções",
          "Terminal no linux",
          "Terminal no windows",
          "API"
        ],
        "Desenvolvendo nosso primeiro jogo": [
          "Organizando a posição da câmera",
          "Adicionando os objetos do jogo",
          "Aplicando os materiais aos objetos",
          "Definindo os movimentos do player1",
          "Definindo os movimentos da bolinha",
          "Identificando colisões",
          "Limites de movimento da bolinha",
          "Corrigindo a posição dos players",
          "Retornando a bolinha ao centro",
          "Marcando pontos",
          "Condição de vitória",
          "Menu do jogo",
          "Programando as escolhas do menu",
          "Importando sons",
          "Sons no menu",
          "Caminho para arquivos",
          "Como exportar nossos jogos",
          "Demonstração do resultado da sessão"
        ],
        "Desenvolvendo o jogo BeeHoney": [
          "Organização do projeto",
          "Posicionando e configurando a Camera",
          "Adicionando objetos e materiais base",
          "Ajustes na iluminação",
          "Movimentando o Player",
          "Organizando o script com funções",
          "Definindo limites para o Player",
          "Gerando movimento da aranha e flor",
          "Aplicando sensor de colisão aos objetos",
          "Utilizando CollisionCallbacks",
          "Configurando o spaw",
          "Spawnando aranhas",
          "Aleatorizando as posições das aranhas",
          "Adicionando e aleatorizando as posições das flores",
          "Aleatorizando o tempo de spaw",
          "Adicionando timer e score",
          "Ativando o timer",
          "Script para registro de dados",
          "Ativando score",
          "Melhorando as colisões",
          "Modelo da abelhinha",
          "Ajustando a abelhinha a cena",
          "Modelo da aranha",
          "Modelo da Flor",
          "Adicionando os modelos ao jogo",
          "Leve explicação sobre Bones",
          "Adicionando os bones na abelhinha",
          "Hierarquia de parentes",
          "Ajustando os pesos dos bones",
          "Animando a abelha",
          "Aplicando a animação pelo python",
          "Adicionando os bones a aranha",
          "Animando a aranha",
          "Aplicando a animação da aranha pelo python",
          "Aplicando a animação da flor",
          "Criando a cena de Menu",
          "Programando as escolhas do menu",
          "Criando a cena de GameOver",
          "Aplicando sons ao jogo",
          "Demonstração do resultado da sessão"
        ],
        "Desenvolvendo o jogo Space Survivor": [
          "Organização do projeto",
          "Organizando a posição da câmera",
          "Aplicando um \"Céu\" ao jogo",
          "Adicionando objetos base",
          "Programação base da nave",
          "Programação base do tiro",
          "Programação base do inimigo",
          "Eliminando o inimigo com o tiro",
          "Adicionando tiros a cena",
          "Controle de disparos",
          "Eliminando o inimigo por propriedades",
          "Adicionando um \"Get Ready\"",
          "Iniciando o jogo após o \"Get Ready\"",
          "Modelando a nave",
          "Modelando um OVNI (Disco voador).",
          "Adicionando os outros discos a cena",
          "Melhorando o modelo do tiro",
          "Adicionando estrelas a cena",
          "Adicionando um score",
          "Adicionando uma cena de gameover",
          "Criando um menu principal",
          "Voltando para o menu principal",
          "Adicionando inimigos a cena",
          "Organizando o game",
          "Explicando o exercício",
          "Importar objetos",
          "Demonstração do resultado da sessão"
        ],
        "Desenvolvendo um jogo de plataformas": [
          "Organização do projeto",
          "Base do projeto",
          "Adicionando plataformas",
          "Preparando o player",
          "Programando o player",
          "Programando o pulo",
          "Controle de força do pulo",
          "Identificando colisões",
          "Painel de Hud",
          "Interações com a propriedade do objeto",
          "Interações com o HUD",
          "Contando vidas",
          "GameOver",
          "Menu principal",
          "Camera track",
          "Destruindo inimigos",
          "Sistema de queda das plataformas",
          "Plataformas",
          "Modelo dos inimigos",
          "Modelos do player",
          "Pequenos ajustes",
          "Rig do personagem",
          "Atenção com as hierarquias dos objetos",
          "Animação de andar e pular",
          "Utilizando as animações",
          "Corrigindo a orientação do objeto",
          "Corrigindo execução de animações",
          "Montando um cenario",
          "Corrigindo o game over",
          "Pequeno exercício",
          "Demonstração do resultado da sessão"
        ],
        "Menus - Interações com mouse": [
          "Organização do projeto",
          "Primeiro botão",
          "Animação do botão",
          "Identificando objetos",
          "Adicionando novos botões",
          "Modificando as cores dos botões com o mouse",
          "Adicionando sons aos botões",
          "Identificando clicks",
          "Finalizando o Menu",
          "Modificando a aparência do menu",
          "Como utilizar o menu em outros projetos"
        ],
        "Desafio": [
          "Tente reproduzir este jogo",
          "Desafio"
        ],
        "Otimização dos seus jogos": [
          "Otimização do arquivo .blend",
          "A importância de nomear objetos e malhas",
          "Como criar novas cenas, sem estragar o projeto.",
          "Removendo cópias"
        ]
      },
      "requirements": [
        "Computador ou Notebook com teclado e mouse"
      ],
      "description": "Bem vindo:\n\n\nOlá e seja muito bem vindo ao curso \"UPBGE 0.2.5: Desenvolva jogos completos - Utilizando Python\".\n\n\nAqui você aprenderá do zero, como criar seus próprios jogos, utilizando a ferramenta UPBGE, que gratuita e 100% livre,\nou seja, você poderá publicar seus jogos e até mesmo ganhar uma boa renda com eles.\n\n\nLogo no primeiro módulo, você já aprenderá a criar um jogo, assim aprendendo e já colocando tudo em prática!\nAlém do curso ser todo prático, deixo um seção onde você pode aprender sobre python, caso ainda não saiba nada sobre isso.\n\nJogos:\nDesenvolva um PONG utilizando Python\nDesenvolva um Bee Honey utilizando Python.\nAdventure Bge utilizando Python.\nSpace utilizando Python.\nAtualização para UPBGE 0.3\n\n\nSão mais de 100 aulas focadas em python e desenvolvimento de jogos.\nDa uma olhadinha no roteiro do curso.\n\n\nRoteiro do curso:\n\n\nIntrodução\n\n\nIntrodução a interface e ferramentas\n\n\nIntrodução Python - API UPBGE\n\n\nDesenvolvendo nosso primeiro jogo\n\n\nDesenvolvendo o jogo BeeHoney\n\n\nDesenvolvendo o jogo Space Survivor\n\n\nDesenvolvendo um jogo de plataformas\n\n\nMenus - Interações com mouse\n\n\nDesafios\n\n\nOtimização dos seus jogos\n\n\nPresente do curso.\n\n\nEntão de uma olhadinha nas aulas que deixo de demonstração do curso, caso este seja o curso certo pra você, te espero nas minhas aulas.\n\nOBS: O curso está sendo preparado para uma grande atualização. Logo todo o conteúdo será alterado para a versão 0.3 do UPBGE.\n\n\nBons estudos",
      "target_audience": [
        "Pessoas interessadas em aprender a desenvolver jogos",
        "Pessoas que queiram aprender a modelar, texturizar e animar modelos 3D"
      ]
    },
    {
      "title": "Unreal Engine 4: C++ ile Multiplayer Oyun Geliştirme",
      "url": "https://www.udemy.com/course/unreal-engine-4-c-ile-multiplayer-oyun-gelistirme/",
      "bio": "Platform üzerinde, En kapsamlı C++ ve Unreal Engine ile Multiplayer oyun geliştirme eğitimi: Üstelik baştan sonra Türkçe",
      "objectives": [
        "C++ ile Windows Ortamına Uygulamalar Programlayabileceksiniz",
        "Multiplayer oyun programlayabileceksiniz",
        "Unreal Engine ile C++ Multiplayer oyun programlayabileceksiniz",
        "UE'de adım adım başlangıç seviyesinden uzman seviyesine ulaşacaksınız.",
        "Oyun geliştirmenin yapı taşları olan tüm UE elementlerini öğreneceksiniz",
        "UE arayüzü ve arayüz elementlerine tamamen hakim olacaksınız.",
        "Blueprint, materyal ve animasyon programlayabileceksiniz.",
        "Kullanıcı arayüzü (UI) tasarlayıp; 2D UI animasyonları üretebileceksiniz.",
        "Unreal Engine ile hayalinizdeki oyunu geliştirebilecek kadar yeterli bilgi ve deneyime sahip olacaksınız."
      ],
      "course_content": {
        "Giriş": [
          "Unreal Engine Nedir ?",
          "Multiplayer ve Singleplayer Nedir ?",
          "MMORPG, MMORTS, MMOFPS ve MMOTPS Nedir ?",
          "Multiplayer Oyun Projelerimiz Nasıl Olacak ?"
        ],
        "Gerekli Programların Kurulumları": [
          "Epic Games üyeliği oluşturma ve Epic Games platformuna giriş",
          "Github Üyeliği oluşturma ve Github Desktop",
          "Microsoft Visual Studio Kurulumu",
          "Unreal Engine Github Projesi'ne Giriş İzni ve Proje Dosyaları",
          "Unreal Engine Kaynak Kodlarının Kurulumu ve Proje Dosyası",
          "Unreal Engine Editörünün Derlenmesi ve Build Tipleri",
          "GameSparks Hesabı Oluşturma ve GameSparks Plugini",
          "Photoshop CC Kurulumu",
          "Fuse CC Kurulumu",
          "Autodesk 3ds Max Kurulumu",
          "VMware Workstation Kurulumu",
          "Windows Sunucusu Kurulumu (Windows Server)",
          "Linux Sunucusu Kurulumu (Linux Server)"
        ],
        "Unreal Engine'e Giriş": [
          "UE Giriş ve Arayüz İnceleme",
          "Araç çubuğu (Toolbar)",
          "Dünya Modları (Modes)",
          "Faliyet alanı, Sahne (Viewport)",
          "Elementler, Dünya objeleri (World outliner)",
          "Ayrıntılar Ekranı",
          "İçerik Tarayıcısı (Content Browser)",
          "Unreal Engine ve C++",
          "Unreal Engine C++ Sınıfları",
          "Import ve Migrate"
        ],
        "C++'a Giriş": [
          "Visual Studio da bir C++ Console Projesi Oluşturma ve C++ Syntax Yapısı",
          "C++ Kütüphaneleri, #include",
          "Main Fonksiyonu",
          "Hello World (Merhaba Dünya!)",
          "Yorum Satırları",
          "Bölüm Sonu Projesi: Saat",
          "Ödev: Saat sistemini 1 saniye bekleterek yeniden saati yazdırma"
        ],
        "C++ Değişkenleri": [
          "Boolean (Doğru, Yanlış)",
          "Short (Kısa Tamsayı)",
          "Integer (Tamsayı)",
          "Long (Uzun Tamsayı)",
          "Float (Ondalık Sayı)",
          "Double (Uzun Ondalık Sayı)",
          "Long Double (Çok Uzun Ondalık Sayı)",
          "Char (Karakter)",
          "String (Metin)",
          "Pointer (Göstericiler)",
          "Array ve Matrix (Dizi ve Matris)",
          "List (Listeler)",
          "Bir Değişkenin Boyutunu Öğrenme",
          "Kullanıcıya Klavyeden Veri Girdirme",
          "Bölüm Sonu Projesi: Veri Tabanı"
        ],
        "C++ Operatörleri": [
          "Atama Operatörü (Eşittir, =)",
          "Toplama Operatörü (+)",
          "Çıkarma Operatörü (-)",
          "Çarpma Operatörü (*)",
          "Bölme Operatörü (/)",
          "Mod Operatörü (%)",
          "Arttırma (++) ve Azaltma (--) Operatörleri",
          "Aritmetik Atama Operatörleri (+=, -=, *=, /=, %=)",
          "Karşılaştırma Operatörleri (>, <, ==, >=, <=, !=)",
          "Mantıksal Operatörler (&&, ||, !)",
          "Ternary Operatörü (?)",
          "Bölüm Sonu Projesi: Hesap Makinası"
        ],
        "C++ Kontrol Yapıları ve Döngüler": [
          "If Yapısı",
          "Switch - Case Yapısı",
          "While Döngüsü",
          "Do...While Döngüsü",
          "For Döngüsü",
          "Bölüm Sonu Projesi: Otopark Otomasyonu"
        ],
        "C++ Yapılar, Sınıflar ve Fonksiyonlar": [
          "Header nedir ? Nasıl oluşturulur ?",
          "Fonksiyonlar",
          "Fonksiyon parametreleri ve Return",
          "Inline Fonksiyonlar",
          "Fonksiyonları Aşırı Yükleme",
          "Struct (Yapılar)",
          "Class (Sınıflar)",
          "Kalıtım, Public, Private ve Protected",
          "Constructor (Yapıcı) ve Destructor (Yıkıcı) Fonksiyonlar",
          "Nesneler, Nesne Tanımlama",
          "Bölüm Sonu Projesi: Sınıf ve Fonksiyon Örnekleri"
        ],
        "Unreal Engine: C++ Sınıfları": [
          "UPROPERTY ve UFUNCTION",
          "None (Boş) Sınıf",
          "Character",
          "Pawn",
          "Actor",
          "Actor Component",
          "Scene Component",
          "Player Camera Manager",
          "Player Controller",
          "World Settings",
          "HUD",
          "Player State",
          "Game State",
          "Game Mode Base & Game Mode",
          "Game Instance"
        ],
        "Unreal Engine: Materyal Programlama": [
          "Materyal Nedir ?",
          "Base Color (Ana renk)",
          "Metalic (Metal)",
          "Specular (Yansıtma)",
          "Roughness (Pürüz)",
          "Opacity (Saydamlık)",
          "Opacity Mask (Saydam Maskeleme)",
          "Normal",
          "Materyal Domain (Materyal alanı)",
          "Blend mode (Karıştırma modu)",
          "2-Sided Materyal",
          "Parallax nedir?",
          "Bump Mapping nedir?"
        ]
      },
      "requirements": [
        "Bu dersi anlamak için herhangi bir programlama/oyun geliştirme tecrübeniz olmasına gerek yoktur!",
        "Güçlü ve sürdürülebilir bir öğrenme arzusu",
        "Multiplayer oyun programlamayı öğrenme arzusu"
      ],
      "description": "Bu eğitim seti Udemy üzerindeki Unreal Engine, Oyun Geliştirme ve Multiplayer Oyun Geliştirme alanında tüm kaynaklardan daha kapsamlı bir içerik sunmaktadır ve tamamen Türkçe'dir! Hiçbir şekilde daha önceden programlama/oyun geliştirme tecrübeniz olmadığı varsayılarak anlatılmış olup; öğrencileri sıfırdan ileri seviyeye çıkarmayı hedefliyorum. Temel bilgiler ile başlayarak sağlam bir altyapı oluşturduktan sonra kendi ellerimizle gerçekçi Multiplayer oyunlar oluşturarak pratiğimizi güçlendireceğiz. Önce baştan sona C++ programlamayı, ardından baştan sona Unreal Engine'i ile oyun geliştirmeyi öğreneceğiz ve ardından Unreal Engine ile C++ Multiplayer Oyun Geliştirmeyi öğrenip, pratikler ile bilgilerimizi pekiştireceğiz.\n\nMüfredatın en sonunda geliştireceğimiz 30 saate yakın süren tamamen gerçekçi ve ince detaylarına kadar değinilmiş iki muhteşem oyun (Role Playing Game & MMORACE) dışında her bölümün sonunda o bölümde öğrendiğimiz bilgileri taze taze uygulayabileceğimiz özenle hazırlanmış projeler gerçekleştireceğiz:\nC++ ile \"Saat\" uygulaması geliştirme\nC++ ile \"Veritabanı\" uygulaması geliştirme\nC++ ile \"Hesap Makinesi\" geliştirme\nC++ ile \"Otopark Otomasyonu\" geliştirme\nC++ ile \"Sınıf ve Fonksiyon Örnekleri\" geliştirme",
      "target_audience": [
        "Oyun geliştirme konusunda hevesli olarak ilk adımı atmak isteyen herkes",
        "Unreal Engine ile oyun geliştirme dünyasına girmek isteyen programcılar",
        "Daha önceden Unreal Engine ile tanışmış ancak bir türlü başlama imkanı bulamayanlar",
        "Unreal Engine ile Multiplayer Oyun Programlamak İsteyenler",
        "C++ Öğrenmek isteyenler",
        "Unreal Engine C++ Programlamak isteyenler"
      ]
    },
    {
      "title": "Unreal Engine - Spieleentwicklung mit Blueprints",
      "url": "https://www.udemy.com/course/unreal-engine-spieleentwicklung-mit-blueprints/",
      "bio": "Umfangreiches Tutorial für Gamedesign, Charakter-Steuerung, Gegner mit AI-Controller, Behavoir Tree, Widgets, UE5, uvm.",
      "objectives": [
        "Unreal Engine - Landscape, Charaktersteuerung und Gameplay mit leichten GIMP und Blender Tutorials",
        "Erstellen und Strukturieren einer Landschaft",
        "Landscape Editing Mode",
        "Foliage Editing Tool",
        "Texturen und Materialien",
        "Blueprints",
        "Anwenden von Beleuchtungs- und Nachbearbeitungseffekten",
        "Partikelsysteme",
        "Lightfunction",
        "Widgets (Energie, Inventar, usw.)",
        "AI Programmierung und Steuerung",
        "Charakter Einbinden und Animieren Mixamo & Adobe Fuse CC",
        "Morph Targets für sprechende Charaktere und Gesichtsmimik",
        "Schwimmen und Tauchen",
        "Animation Montage",
        "Behavoir Tree",
        "Blackboard",
        "AI Perception",
        "Auftretende Probleme bei der Entwicklung bewältigen",
        "Splines",
        "Enemies Varianten erstellen",
        "Interface, Event Dispatcher",
        "Interaktionen mit Objekten/Actors",
        "Level Sequence",
        "Inventar und Waffenwechsel",
        "DirectionalWindSource steuern",
        "Cloth Paint",
        "Sound Cue Beispiele und deren Anwendung",
        "Post Processing",
        "Unreal Engine 5"
      ],
      "course_content": {},
      "requirements": [
        "Es werden keinerlei Grundkenntnisse vorausgesetzt"
      ],
      "description": "In diesem umfangreichen Kurs für Anfänger zur Unreal Engine 4 lernst Du alle Grundlagen zum Aufbau einer virtuellen Umgebung in UE4.\nBonus: Unreal Engine 5 Early Access - Einführung in neue Features (Update 29.07.2021)\nEs werden keinerlei Grundkenntnisse vorausgesetzt.\nDazu gehören das Erstellen und Strukturieren einer Landschaft mit Höhle unter Verwendung von Splines, Strand und Meer, das Erstellen und Importieren von Texturen und 3D-Modellen unter anderem mit Hilfe von von Blender 2.8 und GIMP, das Hinzufügen von Gras, Blumen, Bäumen, Palmen und Steinen mit dem Foliage Tool, sowie das Anwenden von Beleuchtungs- und Nachbearbeitungseffekten.\nWir erarbeiten uns Materialien, Partikelsysteme, binden einen animierten Charakter mit Steuerung ein, lassen unseren Charakter schwimmen und tauchen, benutzen Morph Targets für sprechende Charaktere und Gesichtsmimik, erschaffen Unterwassereffekte mit so genannten Light Materials, rüsten Gegenstände/Waffen aus und benutzen diese. Wir verwenden Projektile, Gegner mit AI-Controller, Behavior Tree inklusive Tasks, Services und Blackboard.\nWir benutzen Splines, erstellen ein Health- und modular aufgebautes Inventar Widget, das für jeden Einsatz gerüstet ist.\nAm Ende dieses Kurses wirst du in der Lage sein, ähnliche Level mit AI-Logic ganz nach deiner Vorstellung zu entwickeln. Du kannst von Beginn an deiner Kreativität freien Lauf lassen, denn du bist weder an das Leveldesign, noch an die Charaktere, Animationen oder Objekte gebunden, die in diesem Kurs verwendet werden.\nDieser Kurs baut auf dem Prinzip \"all you have to know\" auf, d.h. ich erkläre immer nur die Funktionen, die für die ensprechende Lektion notwendig sind. So wirst Du Schritt für Schritt spielerisch an die Unreal Engine 4 herangeführt und bevor du dich versiehst, wirst du schon dein erstes eigenes Level mit eigenen Ideen und entsprechendem Gameplay erschaffen können. Du wirst staunen, wie schnell du vorankommst!\nIch verwende in diesem Kurs die zum Zeitpunkt der Erstellung aktuellste UE4 Version 4.25.3. Desweiteren benutze ich Blender und GIMP, um Dir zu zeigen, wie leicht es ist und wieviel Spaß es machen kann, einige Assets selbst zu erstellen.\nFalls du im Laufe dieses Kurses irgendwelche Fragen hast, schreibe mir einfach eine Mitteilung, ich werde sie dir zeitnah beantworten.\nSämtliche in diesen Tutorial selbst erstellten Assets wurden nur zur Sicherheit als Download zur Verfügung gestellt, denn vertraue mir, du wirst sie nicht benötigen!\nWir erarbeiten uns in diesem Kurs alles Schritt für Schritt gemeinsam und du wirst staunen, zu was was du in kürzester Zeit fähig bist: Make something unreal!",
      "target_audience": [
        "Anfänger, die sich für die Entwicklung mit der Unreal Engine 4 interessieren"
      ]
    },
    {
      "title": "Building Your First 2D Game with Cocos Creator (Part Two)",
      "url": "https://www.udemy.com/course/building-your-first-2d-game-with-cocos-creator-part-two/",
      "bio": "Continuing our journey with Cocos Creator",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Did you start with part one?"
        ],
        "Finalize your game": [
          "Make The Bird Fly",
          "Building pipes with prefabs",
          "Hit detection",
          "Building sound effects"
        ],
        "Final Thoughts": [
          "Improve the game",
          "Final words"
        ]
      },
      "requirements": [
        "Beginner Typescript"
      ],
      "description": "We finish our game so that you have a completed game you can share with friends and family and have you ready to build your own 2D games. Just make sure you do this section after you finish part 1.\nIf you have finished part 1, then you are ready to finish this game with our second part and final part.\nIn this final section, we'll be ending the work we did. This includes a few more sections:\nLearning about a node pool\nHit detection in Cocos Creator\nFinalizing the logic for the game\nAdding sound effects to the game\nOnce you've figured out everything, go ahead and play with the code, assets, sounds, and more to personalize the game for yourself. We'll give you a few ideas in the final section.\nIf you get stuck, remember that the full source code is available in the Cocos Store. So make sure to look for it if you have trouble. It also comes with an ebook that is filled with everything you need to know and understand about the entire project. Thanks for being a creator with Cocos, the open-source game engine company used by AAA developers and indies for over 10 years!",
      "target_audience": [
        "Beginner and those starting to use Cocos Creator"
      ]
    },
    {
      "title": "Master Programación Android Firebase (Aprende con Juegos 2D)",
      "url": "https://www.udemy.com/course/android-juegos-2d-desde-cero/",
      "bio": "Aprende Java y Android desde 0 para juegos 2D con Android Studio + animaciones, gráficos, multiplayer online, rankings.",
      "objectives": [
        "Desarrollo de juegos 2D en Android",
        "Conexión de apps con Google Firebase",
        "Programación Java para Android",
        "Desarrollo de aplicaciones Android",
        "Conexión a base de datos en la nube",
        "Conexión en tiempo real a base de datos y dispositivos Android"
      ],
      "course_content": {
        "Presentación del curso": [
          "S01-CL01: Presentación del curso",
          "S01-CL02: Plataforma Udemy y cómo formular preguntas",
          "S01-CL03: Valoración del curso",
          "S01-CL04: Formato del curso (actualizaciones, estructura de las secciones, apps",
          "S01-CL05: Consejos para realizar el curso"
        ],
        "Entorno de Desarrollo": [
          "S02-CL01: Introducción a la sección",
          "S02-CL02: Instalación Android Studio MacOS",
          "S02-CL03: Instalación Android Studio Windows",
          "S02-CL04: Creación proyecto Hello World",
          "S02-CL05: Explicación estructura de proyecto Android",
          "S02-CL06: Características de Android Studio",
          "S02-CL07: Introducción al Gradle, SDKVersion, gestión librerías",
          "S02-CL08: Emuladores en Android Studio",
          "S02-CL09: Genymotion como alternativa de emulación",
          "S02-CL10: Probando aplicaciones en dispositivos físicos"
        ],
        "Conceptos básicos Android": [
          "S03-CL01: Qué es un Activity",
          "S03-CL02: Ciclos de vida de un Activity",
          "S03-CL03: Referencias en Android (fichero R.java)",
          "S03-CL04: Intro a Constraint Layout - Básica",
          "S03-CL05: View Components",
          "S03-CL06: Variables en Java",
          "S03-CL07: Conexión de variable con View Component: findViewById",
          "S03-CL08: Controles de Entrada: Buttons",
          "S03-CL09: Evento Click",
          "S03-CL11: Controles de entrada: EditText"
        ],
        "Solución de errores y Debug en Android": [
          "S04-CL01: Introducción a la Depuración en Android Studio",
          "S04-CL02: Breakpoints y ejecución paso a paso",
          "S04-CL03: Excepciones y localización de errores",
          "S04-CL04: Gradle sync y solución de error con fichero R.java."
        ],
        "Duck Hunt Game": [
          "S05-CL02: Creación del proyecto: DuckHunt",
          "S05-CL03: Diseño LoginActivity",
          "S05-CL04: Programación LoginActivity",
          "S05-CL05: Diseño GameActivity",
          "S05-CL06: Juego: mostrar nombre de usuario",
          "S05-CL07: Juego: personalizando fuente",
          "S05-CL08: Juego: click sobre el pato",
          "S05-CL09: Juego: movimiento aleatorio del pato",
          "S05-CL10: Juego: cuenta atrás",
          "S05-CL11: Juego: gestión GAME OVER",
          "S05-CL12: Juego: gestión reinicio del juego",
          "S05-CL13: Introducción a Firebase",
          "S05-CL14: Configuración de Firebase",
          "S05-CL15: Firestore: creación de base de datos",
          "S05-CL16: Firestore: conexión e inserción de nuevo usuario",
          "S05-CL17: Firestore: edición de puntuación de usuario",
          "S05-CL18: Ranking: fragment list",
          "S05-CL19: Ranking: Adapter",
          "S05-CL20: Firestore: obtener lista de Ranking",
          "S05-CL21: Resultado final del juego"
        ],
        "TicTacToe": [
          "S06-CL02: Creación del proyecto: TicTacToe",
          "S06-CL03: Diseño LoginActivity",
          "S06-CL04: Programación LoginActivity",
          "S06-CL05: Instalación Firebase Auth",
          "S06-CL06: Diseño RegistroActivity",
          "S06-CL07: Programación RegistroActivity",
          "S06-CL08: Implementación Firebase Auth en Registro",
          "S06-CL09: Implementación Firebase Auth en Login",
          "S06-CL10: Firestore: instalación y modelo User",
          "S06-CL11: Firestore: registro de usuarios",
          "S06-CL12: Gestión jugadas: diseño UI",
          "S06-CL13: Firestore: modelo Jugada",
          "S06-CL14: Casos de uso juego: diseño UI",
          "S06-CL15: Animaciones: librería Lottie",
          "S06-CL16: Firestore: buscar jugada libre",
          "S06-CL17: Firestore: crear nueva jugada",
          "S06-CL18: Firestore: esperar otro jugador",
          "S06-CL19: Animaciones: iniciar partida",
          "S06-CL20: Firestore: eliminar partida no iniciada",
          "S06-CL21: Firestore: evitar jugar con 1 jugador",
          "S06-CL22: GameActivity: diseño UI",
          "S06-CL23: GameActivity: inicializar juego",
          "S06-CL24: Firestore: obtener datos jugada",
          "S06-CL25: Firestore: obtener nombres jugadores",
          "S06-CL26: GameActivity: seleccionar casilla",
          "S06-CL27: Firestore: actualizar datos jugadas",
          "S06-CL28: GameActivity: actualizar UI",
          "S06-CL29: GameActivity: comprobar solución",
          "S06-CL30: GameActivity: Diálogo GameOver",
          "S06-CL31: GameActivity: Casos de GameOver",
          "S06-CL32: Firestore: actualización de puntos usuarios",
          "S06-CL33: Resultado final del juego"
        ]
      },
      "requirements": [
        "Conexión a Internet",
        "Tener nociones de programación general, aunque el curso es de Android desde 0",
        "Ganas de aprender"
      ],
      "description": "¡ En este curso vamos a enseñar como crear 2 juegos en Android desde cero y paso a paso !\n\n\nLa primera parte del curso, se compone de una introducción y presentación del curso. Veremos:\n\n\nPresentación del curso. Podrás tener una idea de como exprimir este curso y algunos consejos sobre la plataforma Udemy.\n\nEntorno de desarrollo. Aquí mostramos cómo descargar e instalar el entorno de desarrollo Android en Windows y Mac, algunos trucos sobre este IDE y haremos un hello world en Android.\n\nConceptos básicos Android. Aprenderás conceptos básicos del mundo Android tales como: Activity, ciclos de vida, Constraint layout...\n\nSolución de errores y Debug en Android. Saber el funcionamiento del depurador de errores de Android Studio es muy importante y te enseñamos cómo.\n\nDuck Hunt Game. Excelente y clásico juego de cazar al pato. Aquí aprenderás todos los pasos desde 0 para crear este juego 2D adictivo que todos conocen. Al final de esta sección, habrás creado tú mismo el juego completo igual que mostramos en nuestro vídeo de presentación. Aprenderemos a usar recursos gráficos y las fuentes. Incluiremos ránking actualizado online.\n\n\nTicTacToe. También conocido como el tres en raya, tres en línea, Triqui, Michi, Cuadritos, Gato...\nDivertido juego que todo el mundo conoce y que seremos capaces de crearlo desde cero totalmente. Añadiremos conexión a la nube con Firebase, bases de datos en tiempo real, modo multijugador online, sistema de ránking dinámico, sistema de inteligencia para creación y emparejamiento de partidas online, animaciones espectaculares... Y cuando termines esta sección, tú habrás hecho esta app paso a paso.\n\n\n\n\nEstos juegos son sencillos, puesto que este curso es una introducción al amplio y complejo mundo de los videojuegos, pero al mismo tiempo son adictivos y divertidos! Podrás aprender a crear partidas multi-jugadores, partidas online... ¿Te lo vas a perder?\n\n\nLo hacemos todo desde Android Studio, explicamos como instalarlo, como configurarlo y cómo empezar a crear las primeras líneas de código. Este curso es puramente práctico, donde durante el desarrollo de los dos juegos que crearemos, verás conceptos muy interesantes en el mundo de la programación Android:\n\n\nLog In (Firebase Authentication Service).\nConexión a base de datos en la nube (Firebase).\nGuardado de datos en la nube (Firebase).\nDatos en tiempo real en la nube y en los dispositivos Android (Firebase).\nAnimaciones Android.\nManejo y uso de recursos gráficos.\nLógica en juegos de 2D.\nAndroid Studio.\nSistemas de ránking.\nPartidas online en tiempo real.\n¡Partidas multi-jugador!\nY mucho más...\n\n\nAnímate, aprende con nosotros en este excelente curso de iniciación a juegos, donde te damos todo el código de las aplicaciones, los recursos gráficos y las lecciones necesarias para que aprendas a crear tus propios juegos 2D en Android.\n\n\n* Si lo que pretendes es aprender a crear juegos en 3D o juegos avanzados, este NO es tu curso.\n** Las secciones de entorno, conceptos Android y debug son reutilizadas del curso de Android Avanzado lanzado recientemente. Hemos decidido reusarlas porque el contenido de dichas secciones siguen siendo iguales y válidas. Si ya eres alumno de dicho curso, puedes obviar dichas secciones y adentrarte directamente a crear los juegos :)\n\n\nNos vemos en el curso!\nHappy Coding!",
      "target_audience": [
        "Desarrolladores principiantes sin conocimientos en Android",
        "Desarrolladores experimentados en Android que quieran aprender a diseñar juegos 2D",
        "Estudiantes de programación interesados en Android",
        "Desarrolladores principiantes que quieran introducirse al mundo de los juegos en Android"
      ]
    },
    {
      "title": "Débuter avec C# et Unity | Guide Complet",
      "url": "https://www.udemy.com/course/c-sharp-unity-guide-complet/",
      "bio": "Apprenez dès aujourd'hui à créer un jeu avec C# et Unity !",
      "objectives": [
        "Programmer en C# dans Unity",
        "Créer des jeux avec Unity"
      ],
      "course_content": {
        "Cours Unity 3D": [
          "Introduction",
          "2 Installation de Unity"
        ],
        "Utilisation de Unity": [
          "3 Présentation de l'interface",
          "4-a Primitive Object",
          "4-b Caméra et light",
          "Quizz Unity 1",
          "5 Composants Rigidbody & Collider",
          "Information importante : Standard Asset",
          "6 Standard Assets",
          "7 Asset Store",
          "8 Organisation des données",
          "9 Materiel et Texture",
          "10 Prefabs",
          "11 Zone de Spawn",
          "Quizz Unity 2"
        ],
        "Les Bases du C# avec Unity": [
          "12a - C# IDE et les Méthodes",
          "12b - C# Les Variables",
          "12c - C# Les Instructions conditionnelles",
          "12d - C# Les Tableaux (Array)",
          "12e - C# Les Boucles (Loops)",
          "Quizz Unity 3"
        ],
        "Création d'un Prefab Piége (Platform FallDown)": [
          "13a - Mis en place de l'Objet PlatformFallDown",
          "13b - Script C# Partie1",
          "13c - Script C# Partie3",
          "Quizz Unity 4"
        ],
        "Creation d'un Prefab Piége (Canon)": [
          "13d - Mise en place de l'Objet Canon",
          "13e - Script C# (ShootScript) Partie1",
          "13f - Script C# (ProjectilScript)",
          "Quizz Unity 5"
        ],
        "Unity et l' audio": [
          "14a Composant AudioSource",
          "14b Script C# & 3D Sound",
          "Quizz Unity 6"
        ],
        "Unity Scène de Menu": [
          "15a Découverte de l'UI de Unity",
          "15b ScriptC# UI et GameManager",
          "16 Création du prefab de chargement de niveau suivant",
          "Quizz Unity 7"
        ],
        "Création de prefab piége en C#": [
          "17a Création d'un Prefab Tourniquet",
          "17b Création d'un radeau- utilisation des animations",
          "17c Animation du préfab Canon",
          "17d Résumé et mise a disposition du projet",
          "Quizz Unity 8"
        ],
        "Gestion des vies et Game Over": [
          "18a GameOver",
          "18b Gestion des vies du player"
        ],
        "Compilation avec unity": [
          "19 Build du jeu (Compilation)"
        ]
      },
      "requirements": [
        "Unity installé sur ta machine",
        "De la motivation !"
      ],
      "description": "Bienvenue dans cette formation complète sur C# et Unity pour débutants ! Cette formation a pour vocation de vous apprendre à maîtriser deux outils:\nle langage de programmation C#\nle moteur de jeu Unity\nVous apprendrez à utiliser ces deux technologies conjointement ou séparément pas à pas.\nTous les chapitres sont enregistrés en HD 1080p pour que vous puissiez tout voir clairement pendant le cours (vous pouvez regarder les previews gratuits).\nJe répondrai personnellement à vos questions vous en avez, et je fournirai autant d'aide que possible pour vous aider à maîtriser C# et Unity.\nN'attendez plus et cliquez sur Suivre ce cours en haut à droite. C'est parti !",
      "target_audience": [
        "Ce cours s'adresse aux débutants en programmation, aux débutants en C# et Unity, ainsi qu'à tous ceux qui sont familiers d'autres technologies mais pas de celles-ci en particulier. Si vous avez déjà un niveau avancé en C# et Unity, ce cours n'est donc pas pour vous !"
      ]
    },
    {
      "title": "【メタバース入門】UnityでClusterのワールドをつくって世界を創造しよう",
      "url": "https://www.udemy.com/course/unity-cluster/",
      "bio": "プログラミングの知識不要｜全て無料でハイクオリティのゲーム開発｜ Unityの基礎知識も詳しく解説するので安心｜クラスターというアプリを使いメタバース空間にワールド作成｜初めてのVRやスマホゲーム、デスクトップゲーム開発にも最適｜丁寧な解説",
      "objectives": [
        "Unityの基本的な使い方とカスタマイズ",
        "UnityでCluster Creator Kit を開いてワールドをアップロード",
        "Unity Asset Store を使って無料でワールドをカスタマイズ",
        "Unityで地形を作って完全オリジナルのワールド作成",
        "Clusterでオリジナルアバターを作成して操作",
        "Clusterでアップロードしたワールドでイベントを企画",
        "Unityを使わずにスマホでオリジナルのワールド作成"
      ],
      "course_content": {
        "紹介": [
          "自己紹介と講座概要",
          "Cluster の紹介とユーザー登録",
          "Cluster のワールドの歩き方①",
          "Cluster のワールドの歩き方②"
        ],
        "Unity の基本的な使い方とカスタマイズ": [
          "Unity Hub をダウンロード",
          "アーカイブから 2021.3.4f1 をダウンロード",
          "2つの Creator Kit の概要を解説",
          "Creator Kit Sample を Unity で使用",
          "Unity 画面の設定変更",
          "Unity 画面の基本操作① ヒエラルキーとプロジェクトとシーンビュー",
          "Unity 画面の基本操作② インスペクター"
        ],
        "Unity で Cluster Creator Kit を開いてワールドをアップロード": [
          "ワールドを公開する前に、Play（実行）で動くかチェック",
          "ワールドを公開する為の、アクセストークンを発行",
          "ワールドを公開する為に、cluster のメールアドレス認証",
          "ワールドを公開",
          "公開したワールドを cluster アプリで Play",
          "Creator Kit Sample の中身を紹介①",
          "Creator Kit Sample の残り2つを紹介する前に既存のワールドをご紹介",
          "Creator Kit Sample の中身を紹介②",
          "Creator Kit Sample の中身を紹介③",
          "Creator Kit Template をダウンロード",
          "Creator Kit Template の中身を紹介",
          "Creator Kit (プロジェクト) とシーンの関係について",
          "Creator Kit Template の中身を Creator Kit Sample で使用する方法"
        ],
        "Unity Asset Store を使って無料でワールドをカスタマイズ": [
          "Asset Store から Skybox をインポート",
          "【注意】C#のスクリプトファイルがある場合は削除",
          "Asset Store から Green Forest をインポート",
          "インポートした無料アセットでワールド制作① SpawnPoints と DespawnHeight",
          "インポートした無料アセットでワールド制作② 赤文字のエラーを排除",
          "インポートした無料アセットでワールド制作③ ヒラルキーの中身を微調整",
          "インポートした無料アセットでワールド制作④ ワールドアップロード"
        ],
        "Unityで地形を作って完全オリジナルのワールド作成": [
          "新しくプロジェクトからシーンを作成",
          "Spawn Point と Despawn Hight を追加",
          "[地形を作成] Hierarchy から Terrain を配置",
          "[地形を作成] Inspector で Paint Terrain を選択",
          "[地形を作成] Raise or Lower Terrain で地形を作成",
          "Asset Store から Standard Assets がなくなってしまったことによる対応",
          "[色を変更] Asset Store から Standard Assets 入手",
          "[色を変更] Inspector で Paint Texture に変更後 Create New Layer で地形全体の色を変更",
          "[色を変更] 2色目を追加して道を作成",
          "[木を配置] Inspector で Paint Trees を選択後 Edit Trees から Add Tree で木を配置",
          "[木を配置] Add Trees でさらに複数の種類の木を配置",
          "[草を配置] Inspector で Paint Details に変更して草を配置",
          "Spawn Point をスタート地点に移動",
          "スクリプトは使えない為 console を開いてプロジェクトの中の該当スクリプトを削除",
          "Spawn Point の向きをスタートする向きに変更",
          "Creator Kit Template の Vehicle の中にある乗り物をワールドに追加",
          "Audio Source から音楽を追加",
          "ワールドを公開",
          "歩くスピードとジャンプ力を変更"
        ],
        "Clusterでオリジナルアバターを作成して操作": [
          "スマホでもう1人の自分を作成",
          "もう1人の自分として創った世界を馬で駆ける"
        ],
        "Clusterでアップロードしたワールドでイベントを企画": [
          "公開イベントを企画する方法",
          "Cluster Creators Guide のご紹介"
        ],
        "おまけ（Unityを使わずにオリジナルのワールド作成）": [
          "Unity を使わずにスマホで世界を創造しよう",
          "ワールドを公開",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "プログラミングやメタバースの知識不要。Unity で世界をつくり、Cluster（メタバースプラットフォーム）でその世界を公開するための必要な最低限の内容すべて学習できます"
      ],
      "description": "Unityやクラスターを全く知らない超初心者でも、講座の通りにやればメタバース空間を自分1人でつくれると思います。これからの未来のテクノロジーやメタバースの世界に興味を持っている人にとって、有意義な内容になれば幸いです。\n◆このコースでできること\nUnityの基本的な使い方とカスタマイズ\nUnityでCluster Creator Kit を開いてワールドをアップロード\nUnity Asset Store を使って無料でワールドをカスタマイズ\nUnityで地形を作って完全オリジナルのワールド作成\nClusterでオリジナルアバターを作成して操作\nClusterでアップロードしたワールドでイベントを企画\nUnityを使わずにスマホでオリジナルのワールド作成\n◆伝えたいこと\n３Dの世界がつくれるって『楽しい！』\n便利で手軽なのに『全て無料』\n思い描いた世界を形にして、その世界に入ることができることの『可能性』\n◆事前に用意して欲しいもの\ncluster のアカウント\n比較的スペックの高いパソコン\n※現在(2024年)販売されているパソコンであれば問題ないです。\n※参考までに、下記以上のスペックを推奨します。\nCPU：Intel Core i5以上\nメモリ(RAM)：16GB以上\nHDD・SSD：１TB 以上\n◆ 【追加対応】Standard Assets に関して\n2022年12月から Aseet Store から削除されてしまっているので、GitHubからZipファイルでダウンロードして解凍してください。講座購入された方は、レクチャー３９で解説していますので、そのレクチャーのリソースをご確認ください。",
      "target_audience": [
        "Unityを触ってみたい人",
        "メタバースについて知りたい人",
        "自分の思い描いた世界をつくりたい人",
        "バーチャル空間で友達と何かしたい人",
        "イベントをメタバース空間で開催したい人",
        "何か新しいことにチャレンジしたい人"
      ]
    },
    {
      "title": "EXPERTO en Realidad Virtual con Unity y Google VR",
      "url": "https://www.udemy.com/course/realidad-virtual-con-unity2019-y-google-vr/",
      "bio": "Crea experiencias en Realidad Virtual para Google Cardboard con Unity, Google VR y C#.",
      "objectives": [
        "Crear proyectos profesionales de Realidad Virtual para clientes o empresas interesadas en ésta tecnología",
        "Manejar todas las herramientas que ofrece Google VR",
        "Comprender conceptos básicos y avanzados de Realidad Virtual, para saber cómo sacarle el máximo provecho",
        "Prácticas 100% aplicables al mundo real que te servirán para afianzar todo lo estudiado"
      ],
      "course_content": {
        "Introducción al curso": [
          "Uso de la plataforma Udemy (Versión 2020)",
          "Instructor: Mariano Sosa"
        ],
        "Realidad Virtual": [
          "Historia",
          "El Mundo de la Realidad Virtual",
          "Conociendo Google VR",
          "Unity®2019 y Google VR",
          "Creando Proyecto Base",
          "Prueba Final"
        ],
        "Interfaz de Usuario": [
          "Introducción: Interfaz de Usuario",
          "Screen Fade In/Out",
          "Text vs Text Mesh Pro",
          "Canvas en Worldspace",
          "Reticle Pointer & Raycast",
          "Interacción: Dialog Bubble",
          "Interacción: Reticle Timer",
          "Interacción: Canvas Inside",
          "FIX: Reticle Timer",
          "Conclusión"
        ],
        "Locomoción": [
          "Introducción: Locomoción",
          "Teleport: Preparación",
          "Teleport: Implementación",
          "Roller Coaster: Cinemachine",
          "Roller Coaster: PathCreator",
          "Roller Coaster: Implementación",
          "Conclusión"
        ],
        "Proyecto: Inmobiliaria": [
          "Introducción",
          "Imagen 360",
          "Punto de Interés",
          "Interacción",
          "Prueba Final: Inmobiliaria",
          "Conclusión"
        ],
        "Proyecto: Galería de Arte": [
          "Introducción",
          "Level Design",
          "Obras de Arte",
          "Artwork Template",
          "Scriptable Object",
          "Implementación",
          "Teleport",
          "Optimización",
          "Prueba Final: Galería de Arte",
          "Conclusión"
        ],
        "Proyecto: Educación": [
          "Introducción",
          "Preparando escena",
          "Animaciones",
          "Timeline",
          "Implementación",
          "Prueba Final: Educación",
          "Conclusión"
        ],
        "Práctica Final": [
          "Introducción a la Práctica Final",
          "Preparando escena",
          "Programación: Botón",
          "Programación: Barra de progreso",
          "Animación: Entrada / Salida",
          "Animación: Cambio",
          "Animación: Selección",
          "Animación: Interacción con Botón",
          "Timeline: Animaciones",
          "JSON: Serialización con Google Drive",
          "JSON: Implementación",
          "Programación: Textos",
          "Programación: Verdadero o Falso",
          "Timeline: Interacción con Botón",
          "Timeline: Señales",
          "Programación: Fin del juego",
          "Prueba Final: Videojuego",
          "Fin del curso"
        ]
      },
      "requirements": [
        "Conocimientos intermedios de Unity",
        "Dispositivo Android, mínimo version 4.4 (KitKat)",
        "Ganas de aprender, practicar, y superarse",
        "Todas las herramientas utilizadas en el curso son gratuitas, y los materiales de trabajo estan incluidos."
      ],
      "description": "Hola y bienvenidos al curso de EXPERTO en Realidad Virtual con Unity 2019.\n\n\nEn este curso intensivo, orientado a estudiantes, empresas y emprendedores, aprenderás desde 0 cómo desarrollar proyectos de Realidad Virtual con Google VR, paquete oficial del gigante Google que se puede integrar a Unity para desarrollar aplicaciones y videojuegos en Realidad Virtual.\nEl mismo está orientado a trabajar con dispositivos móviles, por lo que no necesitas ningún casco de Realidad Virtual para aplicar lo estudiado en el curso. Google VR nos permite testear el proyecto dentro de Unity, y una vez listo, podemos pasarlo a nuestro celular para disfrutar de la experiencia desarrollada.\n\n\nÉste curso está dividido en 7 secciones:\nEn la primera, estudiaremos el mundo de la Realidad Virtual, y daremos los primeros pasos con Google VR.\nEn la segunda parte, hablaremos sobre diseño de interfaz orientado a Realidad Virtual, y cómo aplicar estos conceptos en nuestros proyectos de Unity.\nEn la tercera sección, aprenderemos los distintos tipos de movimiento, y trabajaremos con los más utilizados para dispositivos móviles.\nYa en las siguientes secciones, desarrollaremos 3 aplicaciones de Realidad Virtual que yo mismo vendí a distintos clientes:\nUn recorrido virtual con fotos 360 para una inmobiliaria.\nUna galería de arte 3D con cuadros personalizables.\nY una aplicación educativa sobre el sistema solar.\nEn la última sección nos introduciremos en la Práctica Final, donde desarrollaremos un videojuego desde cero, aplicando conceptos de arte y programación para lograr un producto acabado, completamente adaptable a las necesidades de cada cliente.\n\n\nMi nombre es Mariano Sosa, trabajo en un estudio de videojuegos como programador Unity, y también soy productor en mi emprendimiento dónde desarrollamos aplicaciones y videojuegos tanto en Realidad Aumentada como en Realidad Virtual. Ésto te garantiza a vos cómo alumno una excelente calidad del curso, y que el contenido es dado por alguien que vive de ésto, por lo que te transmitiré no solo mis conocimientos sino también la experiencia que fui ganando en ésta industria con el paso del tiempo.\nTe invito a que veas las clases gratuitas habilitadas en las secciones, que descargues los APK adjuntos para probar las aplicaciones en tu celular, y cualquier consulta no dudes en contactarte conmigo por mensaje privado.\n\n\nMuchas gracias, y te espero en el curso.",
      "target_audience": [
        "Estudiantes, empresas y emprendedores",
        "Toda persona que quiera trabajar con la Realidad Virtual",
        "Cualquier desarrollador que tenga noción de Unity y quiera aprender a utilizar Google VR",
        "En resumen: toda persona interesada en la Realidad Virtual"
      ]
    },
    {
      "title": "Unity C# | Oyun Geliştirme ve İllüstrasyon",
      "url": "https://www.udemy.com/course/oyun-gelistirme-egitimi/",
      "bio": "Üç eğitmen bir arada: Unity 'de oyun geliştirirken; iki illüstratörden Photoshop 'ta tasarım öğrenin! | Game Development",
      "objectives": [
        "Photosop'ta oyun için gerekli olan kendi karakter, mekan ve obje tasarımlarınızı yapmayı öğreneceksiniz.",
        "Oldukça ince detaylarıyla 2D - Top View bir oyunu adım adım kodlamayı deneyimleyeceksiniz.",
        "Bug'ları keşfetmenin ardından, o bug'ları nasıl kaldıracağımızı bulacaksınız.",
        "Gerçek anlamıyla kendi oyununuzu kodlamaya hazır hale geleceksiniz.",
        "Oyun içi karakterlerin ve silahların animasyonlarının yaratım sürecinde aktif rol alacaksınız.",
        "Aklınıza takılan her problemi bana sorarak 7/24 interaktif bir öğrenme deneyimine erişeceksiniz."
      ],
      "course_content": {
        "Başlıyoruz": [
          "Giriş",
          "Sahne Hazırlığı"
        ],
        "Oyunu Adım Adım Kodlama - Jankat Gürbüz": [
          "Karakter Hareket",
          "Fare Hareketi",
          "Fare Göstergesi",
          "Kamera Kontrol",
          "Raycast",
          "Ateş Etme",
          "Animasyon",
          "Ayak Animasyonu - I",
          "Ayak Animasyonu - II",
          "Şarjör Sistemi",
          "Bombacı Kontrol",
          "Random Oluşan Noktaya Ray Çizdirme",
          "Düşman Hareketi",
          "Düşmandan Karaktere Ray",
          "Bombalı Düşman Rotation",
          "Bombalı Düşman Animasyon",
          "Bombalı Düşmanın Karaktere Çarptığında Patlaması",
          "Bugları düzeltiyoruz",
          "Bombalı Düşmana Ateş Edildiğinde Patlaması",
          "Ağır Makinalı Ateş Alanı Olusturma",
          "Ağır Makinalı Dönme, Kurşun Kontrol Hakkında Bilgi ve Ateş",
          "Karakter Ve Ağır Makinalı Kurşun Kontrol",
          "Ağır Makinalı Animasyon",
          "Can Barı",
          "Boş Kovanları Saçma",
          "Ağir Makinalı Düşmanı Öldürme",
          "Ağır Makinalı Öldükten Sonra",
          "Mor Düşman: Giriş",
          "Mor Düşman için Editör Kodu Yazıyoruz",
          "Mor Düşmanın Hareket Sistemi - I",
          "Mor Düşmanın Hareket Sistemi - II",
          "Noktalara / Karaktere Doğru Döndürme",
          "Ufak Bir Hatayı Çözüyoruz",
          "Mor Düşmanın Ateş Etmesi",
          "Ateş Edince Canın Azalması",
          "Mor Düşmanın Ölümü",
          "Tasarim",
          "Post Processing"
        ],
        "İllüstrasyon I: Oyun Karakterleri - Mert Tugen": [
          "Ana karakter tasarımı",
          "Ana karakter şarjör animasyonu",
          "Ana karakter yürüme animasyonu",
          "Ayak animasyonu ve .png'leri kaydetme",
          "Bombacı tasarımı ve animasyonu - I",
          "Bombacı tasarımı ve animasyonu - II",
          "Bombacı tasarımı ve animasyonu - III",
          "Bombacı uzuvları çizimi",
          "Taramalı canavar tasarımı",
          "Taramalı animasyonu - I",
          "Taramalı animasyonu - II",
          "Taramalı animasyonlarını export etmek",
          "Ölü karakter tasarımı"
        ],
        "İllüstrasyon II: Oyun Mekanı - Selin Çınar": [
          "Mutfak: Sandalye, tabure, masa",
          "Mutfak: Bar, lavabo",
          "Mutfak: Telefon, gazete, bardak, içecek",
          "Dolap, kare masa, halı, bitki",
          "Çiçekler, duvar, bar kapısı",
          "Çiçek dokuları/desenleri",
          "Yol",
          "Ağaçlar",
          "Arabalar ve kamyonet",
          "Binalar",
          "Oda: Yatak, komidin, halı",
          "Oda: Dolap, kanepe",
          "Oda: Televizyon, bitki ve desen formları"
        ],
        "Oyun Tasarım Materyallerini Buradan İndirebilirsiniz (.png)": [
          "Karakter, Mekan ve Obje Tasarımları"
        ]
      },
      "requirements": [
        "Başlangıç düzeyde C# programlama bilgisi ve Unity ile oyun geliştirme tecrübesi",
        "Oyun içi tasarımları da yapmayı arzulayanlar için kurulu bir Adobe Photoshop CC",
        "Bilgisayarınıza kurulu Unity."
      ],
      "description": "Udemy'de bir ilk: 3 kurs, 3 eğitmen bir arada, tek bir eğitimde!\nBaşlangıç düzeyde oyun geliştirme deneyiminizi bir üst seviyeye mi çıkarmak istiyorsunuz?\nSadece oyun programlamayı değil; oyunlarda kullanılan karakter / mekan / obje illüstrasyonlarının da nasıl yapıldığına adım adım şahit olarak siz de oyunlarınızdaki tasarımları kendiniz yapmaya başlamak mı istiyorsunuz?\n\nO zaman doğru yerdesiniz!\nBu kursu ile oldukça kapsamlı 2D top view oyun projesi geliştirebilmek için süreç boyunca ne öğrenilmesi/uygulanması gerekiyorsa tüm işlemleri adım adım öğreniyor olacaksınız. Bu kursu, sizi orta düzey oyun geliştiricilik seviyesine çıkarmayı hedefleyerek oluşturdum ve altını çiziyorum: kursun kapsamı da siz izleyip, benimle beraber kodladıkça bir önceki eğitimimde olduğu gibi artacak!\n-------------------------\nDers boyunca geliştireceğimiz 2D top view oyunu sıfırdan kodlayarak ilerlemekle beraber oyunu tamamlamak için ihtiyaç duyacağımız tüm sanatsal öğeleri de nasıl tasarlayacağınızı illüstratörlerimiz Mert ve Selin sizlere adım adım öğretiyor olacak! Unutmayın böyle bir oyun geliştirme kursu Udemy'de ilk!\nÖğrencilerim arasına katılarak bu eğitime hayat boyu erişim hakkına sahip olmakla beraber, internet erişimi olan dilediğiniz her yerden telefon, tablet veya bilgisayarınız ile kursu takip edebileceksiniz.\nEğitmeniniz olarak bana 7/24 erişebileceğinizi ise aklınızdan çıkarmamanızı isterim. Aklınıza takılan en küçük soruyu bile bana sorabilirsiniz.",
      "target_audience": [
        "Oyun geliştirme deneyimini bir üst düzeye çıkarmayı hedefleyen herkes.",
        "İllüstrasyon alanında da tecrübe kazanarak oyunlarının karakter, mekan ve obje tasarımlarını da yapmak isteyenler.",
        "Udemy'deki ilk kursum 'Unity C#: Sıfırdan İleri Seviyeye 2D & 3D Oyun Geliştirme' dersini tamamlayan öğrenciler."
      ]
    },
    {
      "title": "Der komplette C# Unity Kurs – Entwickle eigene 3D Spiele",
      "url": "https://www.udemy.com/course/csharp-gamedev/",
      "bio": "Spiele-Entwicklung leicht gemacht: Lerne C# für Unity und programmiere Dein eigenes 3D-Jump-and-Run",
      "objectives": [
        "Grundkonzepte der objektorientieren Programmierung in C# für Unity kennen",
        "Die wichtigsten Komponenten von Unity kennen und einsetzen können",
        "C#-Scripte für Unity schreiben",
        "Unity grundsätzlich verstehen und die Konzepte auf andere Spieltypen übertragen",
        "Verschiedene Eingabehardware anbinden",
        "Physiksimulation anwenden",
        "Spielereignisse planen und auslösen",
        "Benutzerinterfaces und Menüs erstellen",
        "Wiederverwendbare Module bauen",
        "Komplexe Animationen umsetzen und mit Programmlogik im Code verbinden"
      ],
      "course_content": {
        "Einleitung & Setup": [
          "Einleitung und Überblick zu diesem Kurs",
          "Installation mit Unity Hub",
          "Unity-Projektstrukturen, Best-Practice und Plugin-Installation",
          "ColorFolders-Plugin (überspringbar)"
        ],
        "Crashkurs Programmieren": [
          "Einleitung und Überblick zum Coding-Crashkurs",
          "Variablen",
          "Funktionen",
          "Anweisungen gruppieren",
          "Klassen und Instanzen",
          "Wert- und Verweis-Typen",
          "Kompilierung und Build-Vorgang",
          "Kapitelabschluss",
          "Programmierquiz"
        ],
        "Basis-Projekt-Setup": [
          "Wo Du kostenlose oder günstige Modelle findest",
          "Material: Unity-Package mit Assets",
          "Gezipptes Unitypackage unter Mac OS richtig entpacken",
          "Demo-Assets importieren",
          "Einführung Input Axes",
          "Laufbewegung programmieren",
          "public vs. SerializeField",
          "Drehen bei Richtungswechsel",
          "Springen, mit Hilfe von Physiksimulation",
          "Sprungformel mit Gizmo-Zeichnung kontrollieren [überspringbar]",
          "Animations-Setup",
          "Update: Cinemachine über Package Manager 2020",
          "Die Kamera der Spielfigur folgen lassen"
        ],
        "Savegames - Teil 1 - Basics": [
          "Auslöser (Trigger) für Speicherpunkte anlegen",
          "Gizmos zeichnen, um unsichtbare Auslöser zu sehen",
          "Speicherstand erzeugen und in Datei schreiben",
          "Savegame bei Levelstart automatisch laden",
          "Versehentlichen Verlust von Änderungen vermeiden"
        ],
        "Savegames - Teil 2 - Interaktives Objekt speichern": [
          "Interaktive Tür hinzufügen",
          "Schalter für die Tür hinzufügen",
          "Schalter-Lämpchen per Materialwechsel ein/aus schalten",
          "Speichern des Schalterzustands mit Event-Handlern",
          "Laden des Schalterzustands mit Event-Handlern",
          "Überspringen der Tür-Animation beim Laden",
          "Optimierung: Wiederverwenden der Savegame-Instanz"
        ],
        "Savegames - Teil 3 - Mehrere Szenen verwenden": [
          "Szenenobjekte und globale Objekte trennen (+ Szenen-Licht-Einstellungen)",
          "Zweite Inhalts-Szene einfügen und Playerprefab erstellen",
          "Aktuelle Szenen-ID speichern",
          "Szenenwechsel auslösen",
          "Kamera an das Prefab binden",
          "Optimierung: Code durch Vererbung vereinfachen",
          "Optimierung: Gizmo-Code zentralisieren",
          "Der Code bis hier",
          "Warum XML und nicht PlayerPrefs?"
        ],
        "Menü und HUDs": [
          "Unitys UI-System kurz erklärt",
          "Menü: Bildschirm abdunkeln und Schriftart importieren",
          "Menü: Buttons verstehen und Menüpunkte hinzufügen",
          "Menü: Bei Eingabesignal ein- oder ausblenden",
          "Menü: Neustart- und Beenden-Befehle umsetzen",
          "Spiel pausieren, Code beschleunigen und verkürzen",
          "Korrektur: Pausieren der Update-Funktion",
          "Menü: Richtig skalieren"
        ],
        "Leben und Tod": [
          "Sterben durch fallen",
          "Level sanft ein- und ausblenden",
          "Ragdoll - Erstellen einer Gliederpuppe",
          "Ragdoll - Programmierung",
          "Sterben durch Fallen",
          "Abhänge runterrutschen",
          "Sinkende Gesundheit statt sofortigen Tod programmieren",
          "Gesundheitsanzeige hinzufügen",
          "Code optimieren und aufräumen",
          "Sammelbare Heilobjekte",
          "Beziehe das Fass ins Savegame ein",
          "Komplexe Datenstrukturen im Savegame"
        ],
        "Kämpfen": [
          "Armhaltung für Waffe zur Animation mischen",
          "Die Pistole einbauen",
          "Programmierung der Bewaffnung",
          "Geschoss und Ziel hinzufügen",
          "Pistolenkugel programmieren",
          "Abschussziele programmieren",
          "Korrektur: Gun aus Ragdoll-Code ausschließen",
          "Munition",
          "Kleinigkeiten ergänzen",
          "Optimierung: Dauerhafte Zerstörung vereinheitlichen",
          "Optimierung: UI-Reihenfolge und Player-Health-Property",
          "Der Code bis hier",
          "Bonus: Explosion des Trainer-Bots"
        ],
        "Sounds & Musik": [
          "Wo Du Sounds und Musik findest",
          "Basics und Explosion",
          "Optimierung: Prefabs entkoppeln",
          "Waffengeräusche, Audio per Skript steuern",
          "Audacity installieren",
          "Clips schneiden und mischen",
          "Sounds nahtlos loopen - Musik",
          "Sounds ergänzen"
        ]
      },
      "requirements": [
        "Mac oder PC auf dem Unity (ab 2017.3) läuft",
        "Geübter Umgang mit Computer und Software",
        "Bereitschaft zu experimentieren und an Software zu basteln"
      ],
      "description": "Stetig aktualisiert! Gerade neu: über 2 Stunden ergänzendes Video-Material zum Thema ScriptableObject und Inventar.\n\nLerne 3D-Spiele mit C# in Unity zu entwickeln, DEM weltweiten Industrie-Standard für Videospiel-Produktion.\nIn diesem Kurs lernst Du nicht nur die Grundkonzepte von C# sowie die wichtigsten Module von Unity kennen, sondern auch, wie Du diese einsetzt, um reale Spieleanforderungen umzusetzen. Wir bauen hier ein kleines Jump'n'Run-Spiel, doch das ist nur ein Anwendungsbeispiel - die Lektionen dieses Kurses sind so konstruiert, dass sich das Wissen auf sehr viele Spielekonzepte übertragen lässt. Am Ende zeige ich Dir sogar, wie Du mit wenigen Handgriffen den Spielstil komplett ändern und typische andere Spielelemente mit den gleichen Methoden umsetzen kannst.\nDer Kurs zielt darauf ab, die Funktionsweise von Unity so zu erklären, dass sie sogar ohne große Vorkenntnisse zu verstehen sind. Er ist perfekt dafür geeignet, sich in wenigen Stunden das nötige Wissen anzueignen, um selbst eigene Spiele zu entwickeln. Wenn Du kompletter Anfänger bist, als Gestalter Interaktion selbst umsetzen möchtest oder Du Dich für die Grundlagen der Spieleentwicklung aus Programmierersicht interessierst, bist Du hier genau richtig!\nDAS WIRST DU LERNEN:\nGrundlagen der C#-Programmierung (kann bei C#-Vorwissen einfach übersprungen werden)\n3D-Modelle finden und in ein Echtzeit-3D-Szenario einbauen und interaktiv steuern\nSpielereingaben Controller-übergreifend auswerten\nAnimationen realisieren und mit Code steuern\nPhysiksimulation und Ragdoll-Effekte verwenden\nKamerasteuerung\nAuslöser und Interaktionspunkte definieren und per C#-Script auswerten\nFunktionsweise von Savegames verstehen und im Spiel einbauen\nSzenenobjekte mit Physik, Animationssequenzen und Interaktion versehen\nMehrere Levels verwalten und Szenendateien parallel laden\nEigene Gizmos (grafische Hilfsobjekte im Editor) zeichnen\nUnity's UI-System verstehen und anwenden, Unterstützung für verschiedene Bildschirmauflösungen\nSammelbare Objekte, Lebensressourcen und Waffen\nEinfacher Schnitt und Audio-Bearbeitung, Einsatz in Unity, beteiligte Komponenten\nErstellen des verteilbaren Programms und dessen Anpassung (Grafiken, Bildschirmunterstützungen usw)\n...\n\n\nUND AUßERDEM LERNST DU DIESE ESSENTIELLEN C#-KONZEPTE KENNEN:\n\nUnitys Event-System und der grundlegende Code-Aufbau\nZugriff auf Unity-Komponenten, Suchen und Cachen\nWiederverwendbare Objekte und Komponenten erstellen\nVererbung und Modularisierung, Code effizient organisieren\nEigene Events realisieren\nObjektserialisierung, mit einfachen und komplexen Daten\nZeit-basierte Berechnungen\ndynamische 3D-Objekt-Instanziierung\nPhysik per Code beeinflussen\nBedingte Compilierung für Plattform-Spezifika sowie Development/Release-Unterscheidung\n...\n\n\nDAS SETZEN WIR IN DIESEM KURS KONKRET UM:\neinfaches Jump'n'Run-Spiel im 3D-Look\n3D-Spielfigur laufen und springen lassen\nVerschlossene Tür mit interaktiver Schalttafel öffnen (inkl. Interaktion, Animation, Savegame-Unterstützung)\nSide-Scroller mit einer Kamera, die automatisch dem Spieler folgt\nSavegame-System, das den Spielstand an Speicherpunkten sichert und beim Neustart dort wieder fortsetzt\nSpiel-Menü mit Restart- und Beenden-Befehl\nRollendes Fass, das den Spieler verletzt\nautomatisches anatomisch realistisches Zusammenklappen der Spielfigur bei Tod\nBewaffnung, sammelbare Munition und Heilobjekte\nLebens- und Munitionsanzeige\neinfaches Feindobjekt, das bei Abschuss explodiert\nSoundeffekte und Hintergrundmusik\neigenes Icon, Starter-Banner und Entwickler-Logo integrieren\n...\n\n\nES WIRD NOCH BESSER:\nÜbungen mit Musterlösungen zur eigenen Vertiefung der Themen\nkostenloses Asset-Paket mit den nötigen 3D-Modellen und Ressourcen, um sofort selbst mitzumachen\npures Kompaktwissen - keine Compiler- oder Wartezeiten in den Videos!\n... und natürlich Udemy's extrem kundenfreundliche Benefits: 30-Tage Rückgaberecht, integriertes Support-Forum und Abschlusszertifikat\n\n\nLos geht's - starte jetzt mit der Programmierung Deiner Spiele!",
      "target_audience": [
        "Alle, die Spiele-Entwickler werden wollen",
        "Anfänger ohne Vorwissen von C# und Unity",
        "Alle, die Unity kennenlernen wollen"
      ]
    },
    {
      "title": "Unity 3D | C# | UML | Doğru ve Sektörel Kod Yazımı (2025)",
      "url": "https://www.udemy.com/course/unity-3d-c-uml-dogru-ve-sektorel-kod-yazm-2023/",
      "bio": "Sektörel ve profesyonel bir perspektif ile oyun projesinin nasıl geliştirildiğini öğrenin!",
      "objectives": [
        "Unity ile sıfırdan Agile bir şekilde proje geliştirin",
        "\"Github\" & \"Sourcetree\" kullanımını öğrenin",
        "Modüler ve otomatize çalışmayı öğrenin",
        "\"Mixamo\" gibi animasyon araçları hakkında bilgi sahibi olun",
        "\"Resources\", \"Addressables\" & \"Barracuda\" gibi ileri seviye Unity teknolojilerine hakim olun",
        "\"UML\" & \"Class\" Diagram hazırlamayı öğrenin",
        "Proje templateleri oluşturmayı öğrenerek, proje otomasyonu yapmaya başlayın",
        "\"Render Pipeline\"larını öğrenerek, projenize uygun olan Render Pipeline'ı kullanmaya başlayın",
        "\"Scriptable Objeler\"i & \"Data Oriented Programming\"'i öğrenin",
        "\"SOLID Prensipleri\"'ni öğrenin",
        "\"Command, Observer, Strategy, Singleton, State, Pooling, Factory\" gibi bir çok patternin kullanımını öğrenin",
        "Yazılım mimarileri hakkında fikir sahibi olun ve Unity'nin neden C#'ı tercih ettiğini anlayın",
        "Kod & Proje optimizasyonunu öğrenin",
        "\"Editor Tooling\" nedir ve nasıl kullanılır, örnekleri ile öğrenin",
        "Tersine mühendislik yaparak bir projeyi analiz etmeyi öğrenin",
        "Teknik proje analizi yapmayı öğrenin",
        "Platform özelinde oyun çıktısı almayı öğrenin",
        "\"Post Process\" hakkında fikir sahibi olun",
        "Proje planlamayı ve süreçlendirilmesini öğrenin",
        "\"Responsive UI\" geliştirmeyi öğrenin",
        "\"MonoBehaviour LifeCycle\"'ı öğrenin",
        "Teknik döküman yazmayı öğrenin",
        "3. Parti Assetlerin bir Unity projesine yüklenilmesini ve kullanılmasını öğrenin"
      ],
      "course_content": {
        "Giriş": [
          "MonoBehaviour LifeCycle",
          "MonoBehaviour LifeCycle Test Code",
          "Github Kurulumu ve Kullanımı",
          "Sourcetree Kurulumu ve Kullanımı"
        ],
        "Unity'e Giriş": [
          "Unity Arayüz Önerileri",
          "Render Pipeline'lar Nedir, Hangisini Seçmeliyiz.",
          "Unity Tips & Tricks (Holdering)",
          "Unity Tips & Tricks (Foldering)"
        ],
        "Doğru Kod Yazımı": [
          "Kötü Kod Nasıl Daha İyi Hale Getirilir"
        ],
        "İlk Oyun: Picker 3D": [
          "Picker 3D Oyun Tanıtımı",
          "Picker 3D UML Diagram",
          "Github'ta Proje Oluşturma",
          "Level Sistemi",
          "Input Sistemi",
          "Canvas'lara Giriş & Doğru Canvas Yapılanması",
          "Core UI Yapısı",
          "UI Manager",
          "Level Panel Controller",
          "Camera Sistemi",
          "Player Manager & Player Data",
          "Player Controllers",
          "Extentions",
          "Non Convex Generation",
          "Pool Controller",
          "Projenin Sonlandırılması",
          "Android Platforma Build Almak"
        ],
        "İlk Oyun Ardından Değerlendirme": [
          "Neler Öğrendik & Bizi Neler Bekliyor"
        ],
        "Ara Başlıklar": [
          "Command Pattern",
          "Object Pooling",
          "Addressablelar"
        ],
        "ATM Rush": [
          "ATM Rush UML Diagram",
          "Github'ta Proje Oluşturma & Template Oluşturma",
          "Level Sistemi",
          "Core Game Signals & Game Manager",
          "Input Sistemi",
          "UI Sistemi",
          "Camera Sistemi",
          "Player Sistemi",
          "Score Sistemi Part 1",
          "Score Sistemi Part 2",
          "Feature & ATM Managers",
          "Stack Sistemi",
          "Collectable Sistemi",
          "Mini Game Sistemi",
          "Oyunun Son Aşamaları",
          "Mixamo & Shaderlar Part 1",
          "Mixamo & Shaderlar Part 2",
          "Oyunun Android Çıktısının Alınması"
        ],
        "Bizi Neler Bekliyor!": [
          "Yol Haritası"
        ]
      },
      "requirements": [
        "Temel düzey C# ve Unity bilgisi gerekmektedir",
        "IDE (Visual Studio, Rider) bilgisi gerekmektedir."
      ],
      "description": "\"Oyun yapmayı öğretmek yetmez; ben sizinle birlikte oyun geliştirmenin sanatını, teknolojisini yaşatacağım. Bu eğitimde sadece kod yazmayacak, doğru kod yapısı ve sektördeki en etkili yaklaşımlarla oyun geliştirmenin ruhunu hissedeceksiniz; bir yaratıcı, bir inovatör, bir sanatçı olacaksınız!\"\n\n\nMerhaba Oyun Geliştirme Tutkunları!\nUnity ile oyun geliştirme dünyasına heyecan verici bir bakış atın, ve bunu yaparken sektörde önemle tercih edilen IDE'lerden olan Rider'ı kullanın! Bu eğitim bir başlangıç seviyesi eğitimi değildir aksine, tamamiyle bir kılavuz niteliği taşıyan sektörel bir kaynakçadır. Kendinizi sektörel ve profesyonel ve multidisipliner bir yaklaşımla geliştirin. Şunları öğreneceğiz:\nUML Diagram Kullanımı: Oyun mimarinizi daha etkili inşa edin ve oyun geliştirmeden mimarinizi hazır edin.\n3th Party Assetlerin Kullanılması: Odin, Dotween, EasySave, MK Toon, Cinemachine gibi sektördeki en iyi araçları kullanın.\nSOLID Prensiplerinin Uygulanması: Kodlarınızı daha etkili ve verimli ve modüler hale getirin.\nÇeşitli Patternlerin Öğrenilmesi: Observer, Singleton, Factory, Pooling, Command gibi tasarım desenleriyle oyunlarınıza can verin.\nDependency Injection: Dependency Injection prensiplerine dair temel bir bilgi alın ve ileride nasıl kullanılacağına dair bir yol haritasına sahip olun.\nYeni Unity Teknolojilerine Giriş: Addressable, Universal Render Pipeline, ECS, Barracuda gibi geleceğin teknolojilerine hakim olun.\nYapay Zeka Bilgisi ve Kullanımı: ChatGPT, Bard gibi araçlarla oyunlarınıza akıl katabilin.\nBu eğitim burada bitmiyor! Sizi bekleyen bir YOL HARİTASI var. Kitaplar, Github linkleri, projeler, oyun önerileri, ve daha birçok öneri ile kariyerinizi geliştirmeye devam edin.\nEn önemlisi, eğitimin ardından çalışmalarınızı bana gösterirseniz, sizi sektöre yön veren Level UP Academy'e almak istediğimi bilin. Kariyerinizi profesyonellerin yönlendirmesi ile yeniden şekillendirin.\n\n\nSizinle birlikte yaratıcı dünyada heyecan verici bir yolculuğa çıkmak için sabırsızlanıyorum!",
      "target_audience": [
        "Oyun geliştirmeye merakı olan ve öğrenmek isteyen",
        "Unity hakkında bilgisini arttırmak isteyen",
        "Unity mimarisini merak eden",
        "Oyun geliştirme kuramlarını öğrenmek isteyen",
        "\"SOLID Prensipleri\"'ni öğrenmek isteyen",
        "Patternler hakkında bilgi sahibi olmak ve projelerinde kullanmaya başlamak isteyen",
        "Yazılım mimarisini merak eden",
        "AI (Yapay Zeka) hakkında yenilikleri öğrenmek isteyen",
        "\"Editor Tooling\" hakkında bilgi sahibi olmak isteyen",
        "Oyun motorları hakkında derinlemesine bilgi sahibi olmak isteyen",
        "3. Parti Assetleri öğrenmek ve kullanmak isteyen",
        "\"Android & IOS\" gibi platformlarda oyun projesi çıktısı almayı öğrenmek isteyen",
        "\"Responsive UI\" konusunu öğrenmek isteyen"
      ]
    },
    {
      "title": "Crie Jogos Completos para Roblox: Aprenda do Zero!",
      "url": "https://www.udemy.com/course/crie-jogos-para-roblox/",
      "bio": "Cria jogos para a plataforma que mais cresce no mundo e jogue no Celular, computador ou no Xbox!",
      "objectives": [
        "Aprenda funções como Tele transporte e Super Poderes",
        "Persista dados para quando o jogador voltar a jogar",
        "Crie Jogos Completos Passo a Passo",
        "Crie checkpoints caso o jogador morra",
        "Adicione som e música ao seu jogo",
        "De a seu jogador uma mochila com arma e espada",
        "Controle o clima, tempo e iluminação",
        "Aprenda a Linguagem de Script Lua",
        "Adicione NPCs ao seu jogo"
      ],
      "course_content": {
        "Introdução": [
          "Instruções",
          "Introdução",
          "O que Vamos Aprender",
          "Metodologia",
          "Multiplataforma: Rodando no Xbox (Series S)",
          "Baixe os Scripts"
        ],
        "Linguagem Lua": [
          "Introdução a Linguagem Lua",
          "IDE Zerobrane",
          "Tipos e Variáveis",
          "Prática: Tipos e Variáveis",
          "Tables",
          "Prática: Tables",
          "Estruturas de Decisão",
          "Prática: Estruturas de Decisão",
          "Estruturas de Repetição",
          "Prática: Estruturas de Repetição",
          "Funções",
          "Prática: Funções",
          "Mais Sobre Lua"
        ],
        "Roblox Studio": [
          "Apresentando Roblox Studio",
          "Instalação",
          "Uso do Teclado e do Mouse",
          "Janelas",
          "Modelos",
          "Modelagem",
          "Alinhamento"
        ],
        "Teletransporte, Super Poderes e Muito Mais!": [
          "Aumentando Poder de Pulo",
          "Tele Porte do Jogador",
          "Super Velocidade",
          "Perdendo e Ganhando Vida",
          "Movendo Objetos",
          "Rotacionar um Objeto",
          "Tratando Múltiplos Objetos com a Mesma Função",
          "Tratando Múltiplos Objetos com Diferentes Funções",
          "Criando Objetos Automáticamente",
          "Destruindo Objetos Automáticamente"
        ],
        "Checkpoints, Rankings e Persistência de Dados": [
          "Criando Checkpoints",
          "Criando Checkpoints: Prática",
          "Criando um Ranking/Leaderboard",
          "Criando um Ranking/Leaderboard: Prática",
          "Testando com Vários Jogadores",
          "Persistindo Dados mesmo com a saída do Jogador",
          "Persistindo Dados: Prática"
        ],
        "Interfaces de Usuário (UI)": [
          "Conceitos",
          "Criando Elementos",
          "Programando Elementos"
        ],
        "Clima, Tempo e Iluminação": [
          "Mudando o Horário",
          "Criando Neblina",
          "Mudando a Aparência da Atmosfera",
          "Criando Luzes"
        ],
        "Som e Música": [
          "Criando Música Ambiente",
          "Vinculando Som a Eventos"
        ],
        "Ferramentas e Mochilas": [
          "Tools, StarterPack e BackPack",
          "Colocando Espada na Mochila",
          "Starter Pack"
        ],
        "Criando um Jogo de Parkur: Crazy Obby": [
          "Planejando o Obby",
          "Implementando a Fase Branca",
          "Implementando a Fase Azul",
          "Implementando a Fase Verde",
          "Implementando as Fases Amarela e Laranja",
          "Implementando as Fases Vermelha e Preta",
          "Implementado o Conceito de Teams",
          "Programando os Pontos de Perda de Vida",
          "Objetos que Giram",
          "Criando a Persistência das Fases",
          "Finalizando o Código",
          "Publicando",
          "Tarefas: Melhorias no Jogo"
        ]
      },
      "requirements": [
        "Computador com no mínimo Windows 7 ou macOS 10.10",
        "Pelo menos 1GB de memória e Acesso a Internet"
      ],
      "description": "Seja bem vindo ao curso de Criação de Jogos para Roblox!\nEsta é sua chance de aprender a criar jogos na maior plataforma de desenvolvimento de jogos do mundo!\nPorque você deveria aprender Roblox:\nÉ divertido! você pode criar seus próprios jogos e jogar com seus amigos\nVocê aprende programação e pode fazer disso uma profissão\nVocê pode empreender: criar seus próprios jogos ou mesmo uma empresa de desenvolvimento de jgoos!\nEm 2020 criadores de jogos para a plataforma faturaram mais de 250 milhões de dólares!!\nNeste curso, você será capaz de aprender a criar jogos para Roblox utilizando Roblox Studio, começando do zero. Você vai aprender a fazer coisas como:\nDar super poderes de velocidade e pulo a um jogador\nTele transportar jogadores\nSalvar os pontos do seu jogador para quando ele voltar\nCriar checkpoint para quando o jogador morrer\nControlar clima, tempo e iluminação do seu jogo\nAdicionar som e música ao seu jogo\nDar ao seu jogador uma mochila com arma e espada\nCriar NPCs\nDesenvolver rankings de jogadores\nCriar jogos completos e publicar\nE muito mais!\nAlém de muitos tutorias, neste curso você vai criarm passo a passo, 2 jogos completos para Roblox. Para conhecer os jogos, busque no Roblox o usuário Foal2021, vá em criações, e veja \"Zumbi Attack\" e \"Crazy Obby\".\nSe inscreva agora e começa a desenvolver seus jogos!\nObservações: Os cursos na Udemy tem acesso vitalício e garantia de 30 dias. Se você não gostar do curso pode pedir o dinheiro de volta.",
      "target_audience": [
        "Todos que querem aprender a desenvolver jogos para Roblox"
      ]
    },
    {
      "title": "Unity3D: De 0 a la Realidad Virtual y Realidad Aumentada",
      "url": "https://www.udemy.com/course/unity3dde-cero-a-la-realidad-virtual/",
      "bio": "Crear aplicaciones interactivas e inmersivas con Unity3D, desde 2D hasta la integración de las gafas de realidad virtual",
      "objectives": [
        "Crear aplicaciones 2D en Unity completas, con menús 2D, pantalla de juego y conexión a bases de datos",
        "Crear aplicaciones de realidad aumentada en Unity3D con la librería Vuforia",
        "Crear aplicaciones de realidad virtual adaptadas a los últimos dispositivos de visualización avanzada: Google Cardboard, Oculus Rift, HTC Vive"
      ],
      "course_content": {
        "Configuración inicial de Unity": [
          "Intro",
          "Configuración del layout",
          "Configuración de la Preferences",
          "Cambiar de una plataforma a otra"
        ],
        "Creación de Proyecto 2D": [
          "Intro",
          "Definición de estructura del proyecto",
          "Infinite background",
          "Background Rooms",
          "Creación efecto de movimiento del fondo tipo Background Rooms",
          "Testeo y adecuación de nuestros fondos",
          "Creación de PREFABS",
          "Generador de objetos aleatorios",
          "Testeo y pulido del generador de objetos",
          "Creación del personaje principal de nuestro juego",
          "Animar al personaje principal",
          "Organizar las animaciones del player",
          "Testeo de las animaciones del player",
          "Entendiendo las físicas de Unity",
          "Ajustando la cámara al juego",
          "Control del movimiento del player en pantalla",
          "Interactuar con el escenario y los objetos",
          "Ajustando interacciones entre objetos",
          "Agregando Sonidos al proyecto",
          "Agregando Efecto Especiales al proyecto",
          "Creación de un proyectil para que nuestro player dispare",
          "Añadiendo movimiento al proyectil",
          "Hacer que nuestro player dispare!",
          "Doble click",
          "Comportamiento Proyectil",
          "Música Juego"
        ],
        "Responsive Design de interfaces y pantallas mediante el UI de Unity": [
          "Intro",
          "Crear panel de puntuaciones",
          "Actualizar información del panel en tiempo real",
          "Creacion de botones Pause-Play",
          "Creación de pantalla de Pause",
          "Creación de la pantalla de Salida",
          "Creación de pantalla de login de usuarios",
          "Comportamiento de la pantalla Login",
          "Creación de pantalla de Play",
          "Creación de pantalla de reiniciar juego",
          "Guardado de información persistente en el dispositivo",
          "Test de la app en un dispositivo móvil"
        ],
        "Manejo de bases de datos desde Unity con PHP y MySQL": [
          "Intro",
          "Instalación de XAMPP",
          "phpMyAdmin: Creación de nuestra base de datos",
          "PHP: Hola Mundo!",
          "De Unity a PHP",
          "Conectar con nuestra base de datos desde PHP",
          "PHP: Insert",
          "PHP: Select",
          "PHP: Delete",
          "PHP: Update",
          "Unity Login con PHP",
          "Guardado - Actualización puntuación del usuario en la base de datos",
          "Unity Ranking",
          "Despedida del 2D y bienvenida al 3D"
        ],
        "Introducción al mundo 3D en Unity": [
          "Intro",
          "Creación de terreno 3D",
          "Mejorar nuestro escenario 3D",
          "Probando nuestro escenario"
        ],
        "Creando nuestra primera aplicación de Realidad Aumentada con Vuforia": [
          "Intro",
          "Integrando Vuforia en Unity",
          "Probando la escena de prueba",
          "Creando marcadores personalizados",
          "Aumentando nuestros propios elementos 3D",
          "Interacción con elementos aumentados",
          "Más interacción con elementos aumentados",
          "Ejercicio de Realidad Aumentada",
          "Resolución ejercicio RA: Parte 1",
          "Resolución ejercicio RA: Parte 2"
        ],
        "Google Cardboard. Adaptando nuestro proyecto 3D a este dispositivo": [
          "Intro",
          "Adaptación proyecto Unity3D para las Google Cardboard",
          "Añadir interacción a la escena mediante la vista",
          "Mejorando la interacción con la vista",
          "Creación de menús 3D para entornos virtuales 3D",
          "Creación de un visor de imágenes 360º",
          "Ejercicio Google Cardboard",
          "Estas son las Google Cardboard (las originales)!!",
          "Resumen de Unity - Google Cardboard"
        ],
        "Oculus Rift. Adaptando nuestro proyecto 3D a este dispositivo": [
          "Intro",
          "Adaptación proyecto Unity3D para las Oculus Rift",
          "Estas son las Oculus Rift (las DK2)!!",
          "Interacción con la escena empleando la vista",
          "Visualizar líneas en Unity: Parte 1",
          "Visualizar líneas en Unity: Parte 2",
          "Añadir interacción a la escena mediante la vista",
          "Creando explosiones dentro del escenario 3D",
          "Resumen-despedida Oculus"
        ],
        "HTC VIVE. Adaptando nuestro proyecto 3D a este dispositivo": [
          "Intro",
          "Presentación de las HTC VIVE!!!",
          "Adaptación proyecto Unity3D para las HTC VIVE",
          "Cambio de modelos de mandos por defecto",
          "Interacción con los mandos",
          "Teletransporte",
          "Coger objetos",
          "Despedida del Curso"
        ]
      },
      "requirements": [
        "Los estudiantes deben instalarse el programa Unity3D",
        "Tener ganas de aprender y descubrir la realidad virtual",
        "Inquietud por desarrollar cualquier tipo de aplicación o juego para cualquier plataforma empleando Unity3D"
      ],
      "description": "Con este curso serás capaz de desarrollar cualquier tipo de aplicación con Unity3D, desde un juego 2D hasta una aplicación de Realidad Virtual con los más modernos dispositivos de realidad virtual como las google Cardboard, las Oculus Rift o las HTC VIVE.\nEl curso se irá actualizando con los nuevos contenidos en Unity así como para los nuevos dispositivos de realidad virtual que vayan surgiendo.\nEmpezaremos desarrollando una aplicación 2D, un juego del tipo infinite runner.\nCrearemos fondos dinámicos, crearemos personajes y los animaremos desde Unity\nImplementaremos clases reutilizables en cualquier proyecto para reproducir sonidos y efectos especiales\nAprenderemos a manejar el sistema de interfaz de usuario, UI, de Unity y crearemos unas pantallas de registro, inicio, pause y fin para nuestro juego, así como un interface para el gameplay.\nAprenderemos a crear una base de datos es un servidor y a conectarla desde Unity para almacenar y recuperar información desde ella, haciendo que nuestra aplicación sea compartida por cualquier persona en el mundo (aprenderemos el PHP y mySQL para permitir que cualquier aplicación de Unity3D interactúe con bases de datos)\nCrearemos un escenario 3D\nAprenderemos a manejar la librería de Realidad Aumentada Vuforia y crearemos un proyecto de realidad aumentada en Unity empleando esta librería.\nAdaptaremos nuestro escenario 3D para crear aplicaciones para las gafas Google Cardboard y veremos los mecanismos para interactuar con la visión dentro de este entorno, como crear interfaces 3D (menús de opciones, botones de acción,...) e interactuar con ellos.\nAdaptaremos nuestro escenario 3D para crear aplicaciones para las gafas de realidad virtual Oculus Rift y veremos los mecanismos para interactuar con la visión dentro de este entorno.\nAdaptaremos nuestro escenario 3D para crear aplicaciones para las gafas de realidad virtual HTC VIVE y veremos los mecanismos para interactuar con la visión dentro de este entorno, así como cambiar los mandos por defecto por unos customizados. Además interactuaremos con los mandos que vienen con las gafas y desarrollaremos funcionalidades como el teletransporte, coger y soltar objetos, simular un arma y disparar apretando botones de los mandos,...",
      "target_audience": [
        "Este curso va dirigido a personas que quieren empezar a aprender Unity3D",
        "Dirigido a desarrolladores que quieran ampliar conocimientos en temas de aplicaciones 2D",
        "Dirigido a cualquiera que quiera aprender cómo interactuar desde Unity con bases de datos en servidores web",
        "Dirigido a aquellos profesionales que quieren aprender a integrar Unity con la Realidad Virtual y cualquier dispositivo de visualización avanzado actual; así como las técnicas para interactuar en estos entornos"
      ]
    },
    {
      "title": "تعلم البرمجة للأطفال و المبتدأين ( بايثون و بلوكات )",
      "url": "https://www.udemy.com/course/programming-for-beginners-and-kids-python-blocks-arabic/",
      "bio": "Programming For Kids and Beginners (Python Game Development - Block Based Programming ) Arabic ( 8 Years Old and Older )",
      "objectives": [
        "اساسيات البرمجة بالبايثون",
        "اساسيات البرمجة المرئية بالبلوكات",
        "المبادئ البرمجية المطلوبة فى برمجة الالعاب",
        "برمجة 7 العاب كمبيوتر مختلفة بشكل احترافى",
        "البرمجة بواسطة لغة البايثون",
        "البرمجة باستخدام البلوكات",
        "تحديد المشكلات البرمجية و اصلاحها",
        "التفكير المنطقى و حل المشكلات",
        "كيفية استخدام برنامج \" mBlock \""
      ],
      "course_content": {},
      "requirements": [
        "تحتاج فقط هاتف او حاسوب و حماس للتعلم"
      ],
      "description": "كورس البرمجة للمبتدأين و الاطفال هو كورس شامل لتعليم البرمجة بأبسط الطرق و تأهيل الحاصلين على الكورس لأن يكونوا مبرمجين  ,حقيقيين يستطيعوا برمجة اى لعبة تخطر فى بالهم باستخدام ما سيتعلموه فى الكورس\n\n\nسنتعلم فى هذا الكورس:\nلغة البايثون و برمجة البلوكات\nكيفية البرمجة على برنامج \" mBlock \"\nو ايضا سنقوم بتنفيذ 7 العاب كمبيوتر متكاملة تطبيقا على ما تعلمناه\nبعضهم باستخدام برمجة البلوكات و البعض الاخر باستخدام لغة البايثون\n\n\nالكورس مصمم للتعليم التفاعلى و الشيق من خلال 16 درس مصممين بطريقة\nSTEAM : Science, Technology, Engineering, Arts, and Math comprise STEAM learning.\n\n\nالكورس به الكثير من الفيديوهات و الاشكال الرسومية لاضفاء المتعة الى التعليم و تثبيت المعلومات باكثر من طريقة شيقة .\n\n\nسنتعلم اساسيات البرمجة و هى كالاتى:\nBasic syntax\nEvery programming language has its syntax, and you must learn the fundamental syntax of the language you are learning.\nSyntax refers to the set of rules that define the structure of a language. It is almost impossible to read or understand a programming language without its syntax.\nVariable declaration:\nVariables are containers for storing data values, a memory location for a data type. Variables are created using a declaration or keyword that varies across languages.\nVariable names are usually alphanumeric, that is, they contain a-z and 0-9. They can also include special characters like underscore or the dollar sign.\nVariables can hold values of any data type supported by the programming language. This value may change during program execution.\nLists:\nList is the most versatile data type available in functional programming languages used to store a collection of similar data items.\nFunctions:\nFunctions are \"self contained\" modules of code that accomplish a specific task. Functions usually \"take in\" data, process it, and \"return\" a result. Once a function is written, it can be used over and over and over again. Functions can be \"called\" from the inside of other functions.\nIteration (Loops):\nA Loop is a programming structure that allows a statement or block of code to be run repeatedly until a specified condition is no longer true (will return Boolean, true or false). It is one of the most powerful and fundamental programming concepts.\nDebugging:\nDebugging is a crucial skill. It involves detecting and removing existing and potential errors, defects, or ‘loopholes’ in one’s code.\nConditionals:\nOften a computer program must make choices on which way to proceed, e.g., if the ball is in bounds, do one thing, else, do something different... if the data has all been processed, end the program, else continue to the next data item... while the player has lives left continue the game.\nAlgorithms:\nAn algorithm is simply a set of steps used to complete a specific task. They're the building blocks for programming, and they allow things like computers, smartphones, and websites to function and make decisions.\nCloning:\nIn computer science, cloning refers to the making of an exact copy of an object, frequently under the paradigm of instance-based programming, or object-oriented programming (OOP).\n\n\nملاحظة: يوجد خلال الكورس فيديوهات توضيحية باللغة الانجليزية و يتم شرحها باللغة العربية بشكل مفصل أيضا بعد او قبل عرضها.\n\n\nلا يجوز لمن هم دون سن 18 عامًا استخدام الخدمات إلا إذا فتح أحد الوالدين أو الوصي حسابهم ، وتعامل مع أي عمليات شراء ، وإدارة استخدام حسابهم, إذا كان عمرك أقل من 18 عامًا ، فلا يجوز لك إنشاء حساب ، لكننا نشجعك على دعوة أحد الوالدين أو الوصي لفتح حساب ومساعدتك في التسجيل في هذه الدورة.",
      "target_audience": [
        "للمبتداين من يريدون تعلم البرمجة",
        "للاطفال من سن 8 سنوات او اكبر"
      ]
    },
    {
      "title": "쉽게 해보는 메타버스(Metaverse) 로블록스 [게임 개발 기초]",
      "url": "https://www.udemy.com/course/basic-gamedev-roblox/",
      "bio": "10년 경력의 현역 프로그래머가 알려주는 게임 제작 방법",
      "objectives": [
        "로블록스 스튜디오를 활용하여 로블록스 게임제작을 할 수 있습니다.",
        "로블록스 게임 개발 언어 루아를 배웁니다.",
        "쉽고 재미있게 코딩을 배울 수 있습니다.",
        "프로그래밍에 대한 이해를 할 수 있습니다."
      ],
      "course_content": {},
      "requirements": [
        "프로그래밍 경험이 필요하지 않습니다. 필요로 하는 모든 부분을 배우게 됩니다."
      ],
      "description": "강의 Overview\n강의 난이도 :  초급\n강의 시간 : 8시간\n필요 툴 : 로블록스 스튜디오(Roblox Studio)\n\n\n강의 소개\n< 10년 경력의 현역 프로그래머가 알려주는  메타버스(Metaverse) 로블록스 게임 제작 방법>\n로블록스(Roblox) 게임 개발을 보다 전문적으로 배우고 싶은 분들을 위한 게임개발(game development) 기초 강의입니다.\n'게임 개발도구', '프로그래밍 언어', '게임 구성 요소' 까지! 경력 10년이상 현역 프로그래머 케이치가 알려드립니다.\n무작정 따라해보는 클론 코딩 방식이 아닌 '어떻게 만들었는지' , ' 다른 방법은 없는지', '여러 방법 중에서 왜 이 방법을 사용했는지'를 함께 고민하며\n프로그래밍에 대한 이해도를 높이는 것에 중점을 두고 강의합니다.\n\n\n핵심역량\nDesign : 내 손으로 꾸미는 로블록스! 로블록스 스튜디오를 활용해 직접 만드는 메타버스(Metaverse) 콘텐츠\nPlanning :  나도 게임 기획자! 직접 생각하고 만들어 보는 게임 개발 콘텐츠\nProgramming : 일반 코딩 수업보다 쉽고 재밌게 배우는 로블록스 코딩 수업\n\n\n강사 소개\n안녕하세요! 로블록스 게입 개발자 케이치 입니다. 로블록스에서 게임이 플레이 되는 모습을 보고 하나하나 직접 만들어 보는 과정을 통해 기초부터 실전 게임개발까지 쉽고 빠르게 성장 할 수 있도록 도와드리겠습니다.\n\n\n주요 경력\n- 합계 10년이 넘는 현역 프로그래머 경력\n- 일본에서 4년이상 임베디드 시스템 (카메라 시스템) 개발\n- 3년이상 게임 회사 근무(게임하이, 타임캐스트, 발칸)\n- 3년간 자체 게임 게발\n\n\n주요 작품\n- 500만이 설치한 “모두의 얼굴” 앱 개발\n- 게임 “몬몬몬” 개발\n- 게임 \"버그몬\" 개발\n- 게임 \"환생만이살길:NonstopRPG\" 자체 개발\n- 게임 \"워프매니아\" 자체 개발\n\n\n강의 준비는 이렇게 해주세요!\n강의 시청용과 실습용으로 사용기기는 2대 준비를 권장됩니다.\n강의에 필요한 툴 사전 설치가 필요합니다.\n- 로블록스 스튜디오(Roblox Studio)",
      "target_audience": [
        "로블록스 게임개발에 관심이 있는 분",
        "게임 개발 도구 및 프로그래밍 언어를 쉽고 재밌게 배우고 싶은 분",
        "게임을 직접만들어 친구들과 플레이 해보고 싶은 분",
        "나만의 게임을 만들어 보고 싶은 분"
      ]
    },
    {
      "title": "Flashbang Effect in Unreal Engine 5",
      "url": "https://www.udemy.com/course/flashbang/",
      "bio": "Learn the basics of creating a post-process effect in Unreal Engine",
      "objectives": [],
      "course_content": {
        "Setting up the basic effect": [
          "Getting started",
          "The process summarised",
          "Creating and applying a post-process material",
          "Setting a FlashTime parameter on the material",
          "Capturing the scene",
          "Applying the snapshot as an overlay",
          "Named reroute declaration",
          "Creating a simple particle system",
          "Spawning and capturing the particles"
        ],
        "Creating the post-process effect": [
          "Creating a highlight with a softer fade",
          "Re-applying the original overlay",
          "Transitioning the effect through different colours",
          "Improving the colour transition",
          "Multiple colours at once during the fade",
          "Adding noise",
          "Reducing the saturation",
          "Hiding the unmodified view",
          "Adding a wobble overlay"
        ],
        "Further improvements": [
          "Creating a light when the flash explodes",
          "Adding the grenade mesh & very basic physics",
          "Make the grenade trigger the flash effects",
          "Adding a camera shake",
          "Fixing the particle effect capture",
          "Final improvements"
        ]
      },
      "requirements": [
        "No prior experience is required, but some basic understanding of Unreal Engine will help. The included project files use Unreal Engine 5.5 but you could follow the course in any earlier version."
      ],
      "description": "In this course you will learn how to set up a custom post-process material in Unreal Engine to create a flashbang effect.\n\nWe cover:\n- Spawning a flashbang which has collision and physics (flashbang mesh included and free to use in your own project!)\n- Taking a snapshot of the screen to use as an overlay\n- Modifying a basic Niagara particle system to generate the glow/flash for the effect\n- Creating the post-process effect and controlling it from the character Blueprint\n\n\nThe completed files are included for you to reference or to use directly in your own projects, and the course is suitable for beginners.\n\nThis is not simply telling you the steps to take, but an iterative and experimental process where we gradually improve the effect piece by piece. The course should serve as a jumping off point to explore creating your own post-process effects. You will also learn some basics of using Blueprints in Unreal Engine (creating dynamic materials, linetraces, spawning actors, spawning particle systems, capturing the scene with a capture component, casting to actors in a loop, and more).\n\nThis course is created in Unreal Engine 5.5 but could be followed in any previous version of the engine, however, the completed project files will only work in 5.5+.",
      "target_audience": [
        "Unreal Engine developers looking to learn how to create post-process effects",
        "Game developers who want to add a realistic flashbang effect to their project"
      ]
    },
    {
      "title": "Sıfırdan Unreal Engine 5 ve Blueprint Eğitimi",
      "url": "https://www.udemy.com/course/sfrdan-unreal-engine-ve-blueprint-egitimi/",
      "bio": "Unreal Engine'de baştan sona blueprint kullanarak oyun yapmayı öğrenin!",
      "objectives": [
        "Unreal Engine kurulumu ve arayüzüne hakim olacaksınız.",
        "Blueprint'in ne olduğunu ve nasıl çalıştığını öğreneceksiniz.",
        "Blueprint ile nasıl oyun yapılır öğreneceksiniz.",
        "Unreal Engine içerisinde Menüler, Ayarlar, Kayıt sistemi gibi farklı sistemlere hakim olacaksınız.",
        "Unreal Engine'de oyun nasıl çıktı alacağınızı öğreneceksiniz.",
        "Unreal Engine için asset nereden bulunur ve nasıl kullanılır öğreneceksiniz.",
        "Unreal Engine ile baştan sonra bitmiş bir oyun yapmayı öğreneceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Herhangi bir yazılım ve oyun geliştirme bilgisi gerektirmez, isteyen herkes başlayabilir."
      ],
      "description": "Merhaba!\nUnreal Engine dünyasına adım atmak isteyenler için özel olarak hazırladığım bu kurs, sıfırdan başlayarak kendi oyunlarınızı yaratmanızı sağlayacak kapsamlı bir rehber sunuyor. Eğer oyun geliştirmeye meraklısınız ve bu alanda yeniyseniz, doğru yerdesiniz.\nKursum boyunca Unreal Engine'in temel yapı taşlarından başlayarak ileri seviyeye kadar adım adım ilerleyeceğiz. Blueprint ile kodlama konusunda detaylı bilgi sahibi olacak, değişkenlerden fonksiyonlara kadar olan süreci adım adım öğreneceksiniz. Kursun amacı, hiçbir bilgiye sahip olmayanları dahi bu konularda yetkin hale getirmektir.\nAyrıca oyun geliştirme sürecinde önemli taktikler ve pratik bilgilerle desteklenmiş örnekler sunacağım. Bu örnekler, kursun sonunda kendi projelerinizi oluşturmanızda size yol gösterecek şekilde tasarlandı. Verdiğim ödevlerle bu bilgileri pratiğe dökecek ve düzenli geri bildirimlerle gelişiminizi sağlayacağız.\nKurs içeriği sadece temel kodlama ile sınırlı kalmayacak; UI tasarımı, kayıt sistemleri, ayarlar menüsü oluşturma, asset yönetimi gibi oyun geliştirme süreçlerinin vazgeçilmezlerini de detaylı bir şekilde ele alacağız. Bu konuları anlaşılır bir dille açıklayarak, herkesin kolayca kavrayabileceği şekilde sunacağız.\nBu kursun amacı, size oyun geliştirme yolculuğunuzda sağlam bir temel ve ileri düzeyde bilgi sağlamak; böylece kendi oyunlarınızı yaratma ve geliştirme konusunda özgüvenle ilerlemenizi sağlamaktır. Eğer oyun geliştirmeye meraklıysanız ve bu alanda kendinizi geliştirmek istiyorsanız, bu kurs size kapılarını sonuna kadar açıyor. Sizi, yaratıcılığınızı sınırlamadan oyun geliştirme dünyasına davet ediyorum.",
      "target_audience": [
        "Unreal Engine'e sıfırdan yeni başlayanlara",
        "Önceden biraz çalışmış fakat konseptleri tam kafasında oturtamayanlara",
        "Giriş seviye bilgiye sahip olup pratik yapmak isteyenlere",
        "Unreal Engine'de yeni teknik ve taktikler öğrenmek isteyenlere",
        "Kendi bilgisini test etmek isteyenlere"
      ]
    },
    {
      "title": "Unity2Dゲーム開発入門：Unityインストラクターが教えるツムツム風カジュアルパズルゲームを作成する方法",
      "url": "https://www.udemy.com/course/unity2d_tsumu_puzzle/",
      "bio": "初心者でも簡単！ゲーム開発に必要なUnityの力がこれ一本で身につく完全攻略版！PC・スマホ共通のコードでアプリ化するのも楽々！",
      "objectives": [
        "Unityでゲームを開発する方法",
        "C#を中心とするプログラミングの基礎知識",
        "2Dゲームを作成する方法",
        "アニメーションを実装する方法"
      ],
      "course_content": {
        "【必修】はじめに": [
          "講座の活用方法"
        ],
        "【選択】Unityの設定": [
          "はじめに",
          "UnityHubのインストール",
          "Unityのインストール",
          "VisualStudioの設定",
          "Unityの画面説明",
          "Unityの操作説明"
        ],
        "【必修】Unityでゲームを作るには：Unityの仕組み": [
          "Unityでゲームを作るには"
        ],
        "【選択】C#の基礎": [
          "はじめに",
          "コンソールとコメントアウト",
          "変数の宣言",
          "変数の型",
          "たし算などの四則演算",
          "よく使う演算子",
          "比較演算子",
          "論理演算子",
          "【演習問題準備】",
          "【演習問題】変数の宣言〜比較演算子",
          "if文",
          "if - else文",
          "else if文",
          "switch文",
          "while文",
          "for文",
          "breakとcontinue",
          "列挙型",
          "【演習問題】if文〜列挙型までをやってください。",
          "配列",
          "List型",
          "【演習問題】配列とリストの問題をやってください（リンク先の問題全て）",
          "関数の基礎",
          "関数の返り値",
          "【演習問題】パート3　関数の問題をやってください",
          "クラス",
          "【演習問題】パート４　クラスの問題をやってください",
          "セクションのまとめ"
        ],
        "（必須）最新バージョンでの修正": [
          "Text"
        ],
        "【必修】Unityテクニック集": [
          "はじめに",
          "Rigidbodyの使い方",
          "Colliderの使い方",
          "Physics Materialの使い方",
          "Prefabの作り方",
          "GetComponentの使い方",
          "変数の宣言の種類",
          "Objectをコードから生成する",
          "Randomな値の取得と確率の出し方",
          "コルーチンを使った処理の時間指定やループ",
          "引数の使い方",
          "コードから画像を変更する",
          "コードからTextを変更する",
          "コードから別のコードを操作する",
          "コードからオブジェクトサイズを変更する",
          "簡単なアニメーションの作成",
          "クリック判定の実装",
          "Rayを使ってクリックしたものを判定する",
          "Scriptable Objectの使い方",
          "セクションのまとめ",
          "レビューについて"
        ],
        "【必修】ツムツム風パズルゲームの作り方": [
          "はじめに",
          "Ballと壁の作成",
          "Ballの自動生成",
          "Ballの差別化",
          "Ballのコードによる差別化",
          "ゲームシステムの作成",
          "Ballをリストに追加",
          "同じ種類のBallを削除",
          "Ballの追加",
          "スコア表示",
          "パラメータ調節",
          "レビューについて"
        ],
        "【追加】ツムツム風パズルゲームの作り方　発展編": [
          "はじめに",
          "Ballの色とサイズ変更.",
          "破裂エフェクトの実装",
          "Bombの実装1",
          "Bombの実装2",
          "スコアエフェクトの実装1",
          "スコアエフェクトの実装2"
        ],
        "【リクエスト追加】コメントでリクエストもらった機能の実装": [
          "はじめに",
          "タイトル画面の作り方",
          "カウントダウンの実装",
          "リトライ機能の実装",
          "BGM/SEの実装"
        ],
        "終わりに": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "UnityをインストールできるPCがある",
        "タイピングができる",
        "検索サイトでUnityを調べたことがある"
      ],
      "description": "子供から大人まで幅広い年代で長年愛され続けているディズニーツムツム。\nこの講座ではそのツムツムのようなカジュアルパズルゲームを作成するためのテクニックが習得できます。\nまた、Unityでゲームを開発する上で必要なC#を中心とするプログラミングの基礎知識、2Dゲームを作成する方法、アニメーションを実装する方法など、他のジャンルにも活用できるスキルを習得できます。\n\n\nこの講座は以下の方を対象としています。\nUnityを始めたはいいけど何から手をつけていいのかわからない人\nUnityのチュートリアルを勉強したけど挫折してしまった人\nポートフォリオを充実させ転職活動にいかしたい人\nコミケやインディーゲームのイベントで出展側として参加したい人\n自分のゲームを家族や知り合いに自慢したい人\n\n\n初心者の方でもゲームを完成させられるように、講座の構成は\nUnityのインストール\nUnityでゲームを作る基礎（コードでものを変化させる簡単な方法）\nプログラミングの基礎（ゲーム開発に必要な最低限のスキル）\nゲーム開発のテクニック（アニメーションやクリック判定のスキル）\nを1話完結形式で学び、基礎力をつけた後\n\n2Dツムツム風カジュアルパズルゲームの作成\nに取り掛かかります。講座を終えたときには自分で作ったオリジナルのツムツム風2Dパズルで遊ぶことができるようになっています。一人でゲームを作るのは「資料を探し、学び、実践する」っというとてもエネルギーのいることです。また、完成させるとなるとゲーム開発以外のことにも多くの労力を使います。この講座はこれらのエネルギーをゲーム開発に集中するための講座です。自分のGameを世界に向けて発信しましょう！\n＊他の私の講座との関係\n「Unityゲーム開発：インディーゲームクリエイターが教えるC#の基礎からゲームリリースまで」よりも簡単です。\n（実際、プログラミング初心者が同様の動画でゲームを完成させました）\nただし、リリース関係のテクニックは入れていないので、リリースを目的とされている方は、上の講座を購入された方がいいです。",
      "target_audience": [
        "Unityを始めたはいいけど何から手をつけていいのかわからない人",
        "Unityのチュートリアルを勉強したけど挫折してしまった人",
        "ポートフォリオを充実させ転職活動にいかしたい人",
        "コミケやインディーゲームのイベントで出展側として参加したい人",
        "自分のゲームを家族や知り合いに自慢したい人"
      ]
    },
    {
      "title": "Games in Scratch #4: Elevator",
      "url": "https://www.udemy.com/course/games-in-scratch-4-elevator/",
      "bio": "Creating Elevator game with clones, \"my blocks\", list variable, conditional statements in Scratch (Hard level)",
      "objectives": [],
      "course_content": {
        "Setting up game environment": [
          "Introduction",
          "Importing sprites, preparing game field",
          "Set up static sprites and costumes"
        ],
        "Core logic definition": [
          "Info board with levels queue - Part 1",
          "Defining elevator's logic",
          "Info board with levels queue - Part 2",
          "Info board with levels queue - Part 3",
          "Describing passengers behavior - Part 1",
          "Describing passengers behavior - Part 2"
        ],
        "Game enhancements": [
          "Adding game sounds",
          "Conclusion"
        ]
      },
      "requirements": [
        "basic knowledge of Scratch: logging into your account, creating new project, practical experience with at least some of Scratch controls",
        "having experience working with variables in Scratch",
        "strong understanding of conditional statements (IF-ELSE, comparison, greater than, less than)"
      ],
      "description": "In this course we will create game \"Elevator\" in the Scratch programming language. We will learn by doing!\nDifficulty level of this course: easy \\ medium \\ hard\n\n\nWho is this course suitable for:\nTeachers and parents who want to keep their children busy\nChildren and teenagers with with strong knowledge of Scratch\n\n\nThe course also contains theoretical explanations, but most of the course is practical. We will repeat or learn such areas as:\nworking with list variables: what it is and why they are needed;\nusing variables as indicators of some events and how to manage these events across your Sprites;\ncreating sprite clones: how to manage hundreds of clones at a time.\n\n\nThe plot of the game:\nwe have a building with 11 floors and one elevator;\nwe need to manage elevator's moving by pressing keys from 0 to 9 and \"q\" - they represent building levels;\nwe have a queue of floors for our elevator, it will be moving according to the order of pressed keys;\npassengers will be appearing on a random floor with a random target floor;\nwhen passenger sees the elevator on it's floor, it will move inside the elevator's cabin; when this passenger find out that elevator on the desired floor, it will disappear;\nthis game doesn't have any restrictions in passenger number inside the elevator or on the game screen; feel free to add you own logic of finishing the game (for example, when you reach some served passengers number).\n\n\nI recommend that students simply repeat all the steps from the video, so at the end of the course they will have their own game, which they will be able to navigate and then be able to independently make some changes and expand the game at their own discretion. At the end of the course, materials with source code for all sprites are provided - using them you can check whether the game is made correctly and fix any non-working parts.\n\n\nNote: Those who under 18 years old may use this course only if a parent or guardian provides their account and controls all key activities while using the account.",
      "target_audience": [
        "adults and teachers who want their children to be able to develop games",
        "teenagers who want to improve their programming skills"
      ]
    },
    {
      "title": "Curso completo de Unity: inicia en el mundo de videojuegos",
      "url": "https://www.udemy.com/course/unity-desde-cero/",
      "bio": "Inicia en el mundo de los videojuegos desde cero de la mano del instructor de Unity certificado, Juan Gabriel Gomila",
      "objectives": [
        "Domina el desarrollo de videojuegos con Unity 3D y C# a través de 6 proyectos prácticos diseñados para enseñarte desde los conceptos básicos hasta avanzados",
        "Programación de videojuegos en C#: Desarrolla y programa tus propios juegos utilizando el potente lenguaje C# en Unity.",
        "Técnicas avanzadas en Unity: Explora iluminación avanzada, probes de luz, reflejos, efectos de postprocesado, y más.",
        "Domina Unity con un instructor oficial: Aprende todos los trucos y secretos de Unity guiado por un instructor certificado en Europa.",
        "Prepárate para el sector profesional: Adquiere las habilidades necesarias para certificarte y trabajar como desarrollador de videojuegos con Unity.",
        "Conocimiento técnico integral: Comprende conceptos técnicos y profesionales de nivel básico, intermedio y avanzado en el desarrollo de videojuegos.",
        "Uso de prefabs y variantes: Crea gameplays y escenarios complejos utilizando prefabs, variantes, y anidados en Unity.",
        "Cinemática y manejo de cámaras: Aprende a manejar cámaras y crear escenas cinematográficas utilizando Timeline y Cinemachine.",
        "Optimización de videojuegos: Introducción a la optimización avanzada de videojuegos en Unity."
      ],
      "course_content": {
        "Introducción": [
          "Bienvenidos al curso de Unity",
          "Guía Completa para Instalar Unity y Configurar Herramientas de Programación"
        ],
        "Instalación y funcionamiento de Unity": [
          "Unity HUB y la instalación de Unity 2020",
          "Rider, un editor de código diferente",
          "Cómo instalar pluggins adicionales en Rider",
          "La comunidad y foros de Unity",
          "Creación y tipos de proyectos en Unity",
          "Un tour por la interfaz de Unity",
          "Shortcuts y trucos de Unity (Parte 1)",
          "Shortcuts y trucos de Unity (Parte 1)",
          "Cómo actualizar Unity a una nueva versión"
        ],
        "Proyecto 1 - Control del jugador": [
          "Los Assets del Proyecto 1 - Control del jugador",
          "El error con el Package Manager (en esta versión)",
          "Más acerca del gestor de paquetes de Unity",
          "Cómo colocar objetos en el entorno 3D",
          "El controlador, tu primer script",
          "Mover y trasladar el coche hacia adelante",
          "La ecuación del movimiento rectilíneo de la física",
          "Cuerpos rígidos y el mundo de la física",
          "Modificar la velocidad del movimiento del coche",
          "Los métodos de la API de Unity",
          "Cómo hacer que la cámara siga al jugador",
          "El truco del offset tras el jugador",
          "El Input Manager",
          "Cómo hacer que un objeto rote",
          "El primer reto del curso - Control de un avión",
          "Reto del Proyecto 1 - Control de un avión",
          "Solución del Proyecto 1 - Control de un avión"
        ],
        "Laboratorio 1 - Documentar un proyecto de videojuegos": [
          "El documento de diseño de un proyecto",
          "Los tiempos de entrega y los bocetos"
        ],
        "Proyecto 2 - Programación y diseño del Gameplay": [
          "Los Assets del Proyecto 2 - Diseño de Gameplay",
          "El diseño de nuestro escenario del juego",
          "Cómo mover el personaje de lado a lado",
          "Cómo mantener el personaje en la frontera del juego",
          "El truco de la variable de rango de juego",
          "Prefabs y Prefab Variants",
          "Lanzando pizzas a instanciando comida",
          "Generar prefabs con los animales enemigos",
          "Destrucción de las balas fuera de la zona de juego",
          "Destrucción de los enemigos fuera de la zona de juego",
          "Arrays y colecciones de Game Objects en variables",
          "Spawning de objetos en pantalla",
          "Números aleatorios y generación dinámica de contenido",
          "Cámara ortográfica vs cámara en perspectiva",
          "InvokeRepeating para ejecutar tareas pre programadas",
          "Colliders y triggers y eventos asociados",
          "Eventos asociados a triggers y colisiones, y el uso de las etiquetas",
          "El fin de la partida y cómo parar el tiempo",
          "Reto del Proyecto 2 - Programación de mecánicas, gameplay y aleatoriedad",
          "Solución del Proyecto 2 - Programación de mecánicas, gameplay y aleatoriedad"
        ],
        "Laboratorio 2 - Prototipado de un proyecto": [
          "Prototipado de un videojuego"
        ],
        "Proyecto 3 - Físicas, Efectos y Sonidos": [
          "Los Assets del Proyecto 3 - Físicas, Efectos y Sonidos",
          "Las skyboxes y las imágenes e HDRI",
          "Cómo se crean los modelos en 3D",
          "Físicas, movimientos y rigidbodies",
          "Los modos de aplicar fuerzas",
          "Detección de colisiones entre objetos",
          "Etiquetar el suelo para evitar el doble salto",
          "Los obstáculos del escenario",
          "Spawning de obstáculos",
          "El scroll lateral del escenario y los obstáculos",
          "La condición de Game Over",
          "Parar el gameplay en el Game Over",
          "Getters, Setters y Variables Auto Computadas",
          "Introducción al mundo de las animaciones",
          "Masterclass en Animaciones con Mecanim",
          "Las animaciones y el controlador de nuestro personaje",
          "La animación de muerte del personaje",
          "Acerca del rol de la música y el realismo en los videojuegos",
          "Los sistemas de partículas con Shuriken",
          "Reto: El rastro de suciedad tras el personaje al correr",
          "Solución: El rastro de suciedad tras el personaje al correr",
          "Música y configuraciones de sonido",
          "Cómo activar efectos de sonido por codigo",
          "El barril rodante y materiales físicos",
          "Cómo reiniciar la escena con el SceneManager",
          "Bugs y más bugs",
          "Reto: El vuelo del globo por la ciudad",
          "Solución: El vuelo del globo por la ciudad"
        ],
        "Laboratorio 3 - Prototipado de controles y restricciones": [
          "Cómo avanzar con el prototipado sin modelos 3D",
          "Controladores físicos vs por métodos de transform",
          "Mantener el personaje dentro de una zona"
        ],
        "Proyecto 4 - Gameplay avanzado": [
          "Los assets del Proyecto 4 - Gameplay avanzado",
          "Rotar la cámara alrededor de un punto",
          "Cómo mover la pelota utilizando coordenadas relativas",
          "Articulaciones en Unity",
          "Diseñando el comportamiento del enemigo",
          "Enemigo persiguiendo al jugador",
          "Spawning aleatorio de Enemigos",
          "El uso de funciones y su correcta documentación",
          "Creando Power Ups",
          "Programar el efecto del Power Up",
          "Cómo utilizar Corrutinas",
          "Indicador de uso del potenciador",
          "Ejercicio: cambiar de una animación a la siguiente con corrutinas",
          "Generar oleadas de enemigos",
          "Formas de programar la zona de la muerte",
          "La flow zone y el balance de la dificultad",
          "Reto: Gool!!!!",
          "Solución: Gool!!!"
        ],
        "Laboratorio 4 - Herramientas y formas de trabajar profesionalmente": [
          "Input Manager y los mandos de consola",
          "Github y los repositorios online",
          "Unity, sus servicios y Collaboratory",
          "Referencias para nuestro prototipo con diferentes Game Designs",
          "Cinemachine y las técnicas de cinematografía en Unity",
          "Timeline y las técnicas de director de cine",
          "Combinando Cinemachine y Timeline para cambiar de cámara"
        ]
      },
      "requirements": [
        "Curso previo recomendado: Completar el curso \"Aprende C# creando un videojuego desde cero\" de Juan Gabriel Gomila para una base sólida en programación.",
        "Equipo necesario: Tener un ordenador con conexión a internet, cualquier sistema operativo y conocimientos básicos de uso.",
        "Hardware recomendado: Un ordenador o portátil con al menos un procesador i7 y 16GB de RAM para un rendimiento óptimo."
      ],
      "description": "¡Sumérgete en el emocionante mundo del diseño de videojuegos con Unity y desbloquea tu potencial creativo!\n¿Te apasiona la idea de crear juegos 3D inmersivos? ¿Quieres convertirte en un desarrollador de videojuegos profesional, pero no sabes por dónde empezar? ¡Este curso es perfecto para ti!\nNuestro curso online de Unity está diseñado para llevarte de principiante a experto, sin necesidad de experiencia previa. Aprenderás a programar en C# desde cero, mientras trabajas en proyectos prácticos que te guiarán paso a paso en la creación de tus propios juegos. Con más de 60 horas de contenido en video, ejercicios, tareas, y el apoyo de una comunidad activa de estudiantes y profesores, estarás listo para publicar tu primer juego impresionante con Unity en poco tiempo.\nAl finalizar el curso, estarás preparado para presentar el examen oficial de Unity Certified Associate, lo que certificará tu dominio de los aspectos fundamentales del desarrollo de videojuegos con Unity.\n¿Qué aprenderás en este curso?\nFundamentos de la Programación en C#: Aprende a escribir código con proyectos prácticos que te ayudarán a adquirir confianza y habilidad.\nDesarrollo de Juegos Completo: Desde la idea inicial hasta la optimización final, crearás juegos 2D y 3D que podrás incluir en tu portafolio.\nInterfaz de Unity y Programación: Domina la interfaz de Unity y aplica los conceptos básicos de programación en C# que te enseñamos en el curso previo.\nGame Design y Mecánicas: Aprende a crear y configurar mecánicas comunes en juegos 2D y 3D, abarcando desde la programación hasta la animación y control de la cámara.\nPreparación para la Certificación: Los conocimientos adquiridos te prepararán para el examen Unity Certified Associate, un gran impulso para tu carrera.\n¿Por qué elegir este curso?\nInstrucción de Calidad: Aprenderás de la mano de Juan Gabriel Gomila, un instructor certificado oficialmente por Unity, quien te guiará a través de cada paso del desarrollo de videojuegos.\nEnfoque Práctico: Este curso no solo se centra en la teoría, sino también en la aplicación práctica, con un enfoque en crear juegos que puedas mostrar en tu portafolio.\nSoporte Continuo: Nuestros profesores experimentados están siempre disponibles para resolver tus dudas y ayudarte a avanzar.\nTestimonios de Estudiantes\n\"El curso online de Unity fue un recurso invaluable para mí. Completar todos los ejercicios y tareas, con el apoyo de la comunidad, me preparó para obtener mi título oficial de Unity Certified Associate. Estoy muy agradecida por la guía y apoyo de Juan Gabriel.\" - María, Unity Certified Associate\n¡No pierdas esta oportunidad!\nSi estás listo para dar el primer paso hacia una carrera emocionante en el desarrollo de videojuegos, ¡inscríbete ahora y comienza tu aprendizaje hoy mismo! Con nuestro curso, estarás creando juegos increíbles antes de lo que imaginas. ¡Nos vemos en clase!",
      "target_audience": [
        "Desarrolladores de videojuegos principiantes: Ideal para aquellos que desean aprender a crear y desarrollar videojuegos desde cero con Unity.",
        "Programadores experimentados: Perfecto para programadores que buscan perfeccionar sus habilidades y aprender más sobre el uso de Unity para crear juegos de nivel profesional.",
        "Estudiantes y profesionales que buscan certificación: Diseñado para aquellos que desean prepararse para el examen Unity Certified Associate y adquirir un conocimiento completo del desarrollo de videojuegos."
      ]
    },
    {
      "title": "Unity 2D 超入門 : C# と Unity を基礎から学んで 2D ゲーム を作ろう！",
      "url": "https://www.udemy.com/course/programming-unity2d/",
      "bio": "プログラミング初心者でも大丈夫！ゼロからダンジョン RPG や Flappy Bird 風のゲームを作っていきましょう。 C# や Unity の使い方などゲーム作りの基礎が身につきます。",
      "objectives": [
        "ダンジョンRPGの作成",
        "Flappy Bird風ゲームの作成",
        "Unityの基礎",
        "C#の基礎が身につきます",
        "Unity Hubを使ったUnityのインストール"
      ],
      "course_content": {
        "はじめに": [
          "このコースの概要",
          "ソースコード"
        ],
        "Unityの導入": [
          "ソースコード",
          "Unityとは",
          "Unity Hubとは",
          "UnityHubをインストール",
          "サインインする",
          "ライセンス認証",
          "Unityをインストール",
          "プロジェクトを作成",
          "レイアウトを変える",
          "Unityのインターフェースの説明",
          "オブジェクトを作る",
          "コンポーネント",
          "Visual Studioを使えるようにする",
          "スクリプト"
        ],
        "【新】Unityを使ったC#の基礎": [
          "ソースコード",
          "プロジェクトを作成",
          "変数",
          "文字列に変数を埋め込む",
          "関数",
          "定数",
          "配列",
          "foreach",
          "クラス",
          "アクセス修飾子",
          "継承",
          "名前空間",
          "if"
        ],
        "Unityの基礎": [
          "ソースコード",
          "プロジェクトを作成",
          "オブジェクトを移動させる",
          "オブジェクトの大きさを変える",
          "オブジェクトの色を変える",
          "物理現象の適用",
          "Update関数",
          "矢印キーで水平方向の入力",
          "矢印キーで垂直方向の入力",
          "スクリプトを追加したオブジェクトを取得",
          "オブジェクトのコンポーネントを取得",
          "オブジェクトに力を加える",
          "他のオブジェクトを取得する",
          "他のオブジェクトのコンポーネントを取得する",
          "オブジェクトとぶつかった時の処理",
          "オブジェクトとすれ違った時の処理",
          "オブジェクトを消す",
          "Prefab",
          "Canvas",
          "文字を表示する",
          "Tag",
          "スクリプトでTextの内容を変える",
          "スクリプトでシーンを読み込む",
          "Invoke",
          "画面サイズが変わっても同じように表示されるようにする",
          "Vector3"
        ],
        "玉転がし": [
          "今回作るゲーム",
          "ゲーム作りの流れ",
          "プロジェクトを作成",
          "地面を作る",
          "壁を作る",
          "オブジェクトをまとめる",
          "壁に色をつける",
          "Playerを作成",
          "物理現象の適用",
          "Playerの移動",
          "スピード調整",
          "CameraがPlayerを追いかけるようにする",
          "アイテムを設置する",
          "アイテムとすれ違ったら消えるようにする",
          "アイテムを複製する",
          "アイテムの残り個数を表示",
          "ゲームクリア時の処理",
          "壁と当たった時の処理",
          "Game Over!と表示させる",
          "最初から始まるようにする",
          "数秒後に最初から始まるようにする",
          "画面サイズが変わっても同じように表示されるようにする",
          "上から表示されるようにする"
        ],
        "フラッピーバード風ゲーム": [
          "今回作るゲーム",
          "プロジェクトを作成",
          "ゲームの画面サイズを変更する",
          "シーンの説明",
          "タイトルシーン作成の流れ",
          "シーンの作成",
          "キャンバスの作成",
          "背景の作成",
          "タイトルテキストの作成",
          "ボタン作成の流れ",
          "素材を調達",
          "ボタンを作成",
          "【入門】スクリプトの基礎",
          "【演習】好きな動物を出力",
          "変数とは",
          "【演習】変数を使って計算結果を出力",
          "【入門】メソッド①：メソッドとは？",
          "【演習】メソッドを作る",
          "【入門】メソッド②：引数とは？",
          "【演習】引数のある メソッドを作る",
          "【入門】メソッド③：戻り値とは？",
          "【演習】戻り値のある メソッドを作る",
          "ボタンを押した時の処理をするには？",
          "ボタンを押した時の処理をする",
          "画面遷移の処理",
          "関数をボタンに設定",
          "実行してみる",
          "ゲームシーン作成の流れ",
          "背景を作成",
          "プレイヤーを作成",
          "プレイヤーをジャンプさせる１",
          "【入門】コンポーネントとは？",
          "プレイヤーをジャンプさせる２",
          "if文とは",
          "【演習】if文を使った制御①",
          "【演習】if文を使った制御②",
          "プレイヤーをジャンプさせる３",
          "プレイヤーを前進させるには",
          "プレイヤーをスクリプトで前に進ませる",
          "カメラを追従させる",
          "背景をスクロールさせる",
          "ゲームオーバー画面を作るには",
          "キャンバスを作成",
          "ゲームオーバーテキストを作成",
          "リトライボタンを作成",
          "ゲームオーバー画面を見えないようにする",
          "外に出たらゲームオーバーにするには",
          "判定用のオブジェクトを配置",
          "ぶつかった時の処理",
          "スコアを表示",
          "アイテム作成の流れ",
          "アイテムを作る",
          "無限にアイテムを作る",
          "トラップ作成の流れ",
          "トラップを作る",
          "一定の確率でトラップを生成",
          "音をつけるには",
          "音を調達する",
          "音を出すオブジェクトを作る",
          "BGMを流す",
          "効果音を鳴らす",
          "ゲームオーバー時にBGMを停止する",
          "クリアシーン作成の流れ",
          "クリアシーンを作る",
          "10個アイテムを取ったらクリアにする"
        ],
        "ダンジョンRPG": [
          "今回作るゲーム",
          "サンプル",
          "プロジェクトを作成",
          "次の動画の補足",
          "素材を調達",
          "ダンジョンRPG作成の流れ",
          "地面を自動生成する流れ",
          "タイルのオブジェクトを作成",
          "スクリプトでタイルを自動生成する",
          "プレイヤーを作成する流れ",
          "プレイヤーのオブジェクトを作成",
          "【中級】継承",
          "【重要】次のレクチャーの抜け",
          "移動できるようにする① - 移動させる",
          "移動できるようにする② - 矢印キーを押した方向に移動する",
          "移動できるようにする③ - 移動できるかチェックする",
          "移動できるようにする④ - 移動を試みる",
          "次のレクチャーの補足",
          "移動するアニメーションをつける① - Unityエディタ",
          "移動するアニメーションをつける② - スクリプトから呼び出す",
          "HPゲージを作る",
          "敵を作成する流れ",
          "敵のオブジェクトを作成する",
          "敵を移動させる",
          "【重要】壁側に移動しようとした時のエラーの修正",
          "【重要】プレイヤーと敵が重なってしまうバグの修正",
          "ターンを作る",
          "プレイヤーを攻撃させる① - 仕組みを作る",
          "プレイヤーを攻撃させる② - プレイヤーにダメージを与える",
          "次の動画の注意点",
          "次の動画の注意点",
          "プレイヤーを攻撃させる③ - アニメーションをつける",
          "【重要】次のレクチャーの注意点",
          "ランダムな位置に敵を生成する",
          "プレイヤーのHPが0になったらゲームオーバー",
          "敵を攻撃できるようにする。",
          "階段を作成する流れ",
          "階段のオブジェクトを作る",
          "ランダムな位置に階段を作る",
          "階段をのぼる",
          "回復アイテムを作成する流れ",
          "回復アイテムのオブジェクトを作る",
          "ランダムな位置に生成する",
          "回復機能をつけていく",
          "音をつける流れ",
          "次のレクチャーの補足",
          "音を調達する",
          "音を出すオブジェクトを作る",
          "BGMをつける",
          "効果音をつける"
        ],
        "【旧】Unityを使ったC#入門": [
          "このセクションの説明",
          "プロジェクトの作成",
          "スクリプトとオブジェクトの関係",
          "Startメソッド",
          "Updateメソッド",
          "変数",
          "スコープ",
          "データ型",
          "if文",
          "算術演算子",
          "代入演算子",
          "関係演算子",
          "論理演算子",
          "条件演算子",
          "メソッド",
          "引数",
          "戻り値",
          "型変換",
          "型推論",
          "for文",
          "配列",
          "foreach文",
          "list",
          "Switch文",
          "プロパティ"
        ],
        "ボーナスレクチャー": [
          "その他の学習教材"
        ]
      },
      "requirements": [
        "パソコンと意欲があれば十分です。"
      ],
      "description": "Unityとは？\n無料で使えるゲームエンジンのことです。ゲームエンジンと言うと少し難しいですが、簡単に言うとゲームを作るためのツールのことですね。Unityを使えば、様々な端末に対応したゲームを作ることができます。例えばiOS、Android問わずスマートフォンや、PlayStation4、Nintendo Switchなどの据え置き機、近年ではVR/ARなどに向けたゲームを作ることができます。\n\n\nこのコースは\nUnityを使って簡単な2Dゲームを作成するコースです。プログラミング初心者でも理解できるようにわかりやすく解説しています。コースを通して一つのゲームを作っていくので、ゲーム作りの流れを掴みたい方におすすめです。",
      "target_audience": [
        "ゼロから2Dゲームを作りたい方",
        "理論より実践に重きを置く方",
        "プログラミング初心者",
        "フラッピーバード風のゲームを作ってみたい方",
        "ダンジョンRPGを作ってみたい方"
      ]
    },
    {
      "title": "Jogo de Tiro - Primeira Pessoa - FPS - Unity3D",
      "url": "https://www.udemy.com/course/jogo-terror-primeira-pessoa-unity3d/",
      "bio": "Desenvolvendo um jogo de tiro em primeira pessoa com todas suas principais mecânicas de movimentação e tiro na Unity.",
      "objectives": [
        "Criar um jogo 3D de tiro em primeira pessoa com toda a movimentação avançada do personagem criando tudo do zero.",
        "Andar, movimentar cabeça, respirar, ficar exausto, pular, abaixar, agarrar objetos, pegar objetos...",
        "ARMA DE GANCHO (Mecânica Bônus!!)",
        "Criar ícones de itens em menos de um minuto utilizando scripts na Unity.",
        "Bake na iluminação tirando partes escuras da cena sem precisar esperar horas.",
        "Efeitos 3D - Buraco de bala em paredes, sangue espirrando no chão, faísca, fumaça e rastro bala.",
        "Criar inimigos de ataque próximo e ataque a distância.",
        "Arma manual e automática.",
        "Aplicar força do tiro nos objetos e inimigos.",
        "Evitar que seu personagem saia do mapa pulando o terreno com a utilização de códigos para impedir o pulo dele na montanha.",
        "Animação e utilização de armas - Atirar, recarregar, mirar e arremessar facas.",
        "Como evitar erros - Collider dormindo, rigidbody força aplicada, impedir ficar em cima inimigo, entre outros.",
        "Formas diferentes de trajetória da bala.",
        "Utilizar shaders.",
        "Criar e utilizar Ragdoll.",
        "Drop de itens dos inimigos.",
        "Ganhar FPS no jogo.",
        "Utilizar Post-Processing.",
        "Criar cenário.",
        "Entre muitas outras mecânicas!"
      ],
      "course_content": {
        "Download Unity": [
          "Download Unity"
        ],
        "Criando Personagem - Movimentação Completa": [
          "Passos Iniciais",
          "Criando Movimentação Personagem - Parte01",
          "Normalizar Movimento",
          "Criando Movimentação Personagem - Parte02",
          "Criando Movimentação Camera",
          "Criando Movimento Cabeça",
          "Criando Respiração Personagem",
          "Movimento Abaixar Personagem",
          "Verificando Objetos Abaixado",
          "Som Passos Personagem"
        ],
        "Links Fantásticos": [
          "Locais Para Download Personagem, Sons e Fonte"
        ],
        "Utilizando RayCast": [
          "Identificando Objetos Com Raycast",
          "Arrastando/Pegando Objetos Com Raycast",
          "Utilizando Shader Objetos Selecionados",
          "Interface Raycast",
          "Ajustes e Resolução"
        ],
        "Desenvolvendo Arma": [
          "Criando Movimentação Arma",
          "Desenvolvendo Animação Arma",
          "Desenvolvendo Script Arma e Movimentando Objetos Com Tiro",
          "Utilizando Efeitos Armas - Faisca, Buraco, Fumaça",
          "Explicando Efeitos",
          "Destruindo Efeitos em Cena",
          "Formas Trajetórias da Bala"
        ],
        "Aprimorando Personagem": [
          "Suavizando Abaixar",
          "Aprimorando Movimento Cabeça"
        ],
        "Desenvolvendo HP e Stamina": [
          "Criando Interface Hp e Stamina",
          "Conectando Interface e Script"
        ],
        "Aprimoramento Arma": [
          "Efeito Rastro Bala",
          "Utilizando Scripts na Animação para Controle",
          "Adicionando Sons Animação",
          "Criando Interface Arma - Primeira Parte",
          "Criando Interface Arma - Segunda Parte",
          "Ajuste Animação Arma",
          "Animação Mira - Primeira Parte",
          "Animação Mira - Segunda Parte",
          "Criando Mira Dinamica"
        ],
        "Criando Inimigo - Ataque Perto": [
          "Construindo IA - Primeira Parte",
          "Construindo IA - Segunda Parte",
          "Construindo IA - Terceira Parte",
          "Construindo IA - Quarta Parte",
          "Construindo IA - Quinta Parte",
          "Construindo IA - Sexta Parte",
          "Construindo IA - Sétima Parte - Ragdoll",
          "Construindo IA - Oitava Parte - Ragdoll",
          "Construindo IA - Nona Parte",
          "Construindo IA - Décima Parte",
          "Construindo IA - Décima Primeira Parte",
          "Construindo IA - Décima Segunda Parte",
          "Construindo IA - Ultima Parte"
        ],
        "Criando Inimigo - Ataque Distância": [
          "Construindo IA - Primeira Parte",
          "Construindo IA - Segunda Parte",
          "Construindo IA - Terceira Parte",
          "Construindo IA - Quarta Parte",
          "Construindo IA - Quinta Parte",
          "Construindo IA - Ultima Parte"
        ]
      },
      "requirements": [
        "Conhecimento básico de programação."
      ],
      "description": "Este curso é para você que quer aprender ou aprimorar suas técnicas no desenvolvimento de jogos 3D na Unity. Irei estar ensinando a desenvolver e não apenas fazendo com que você copie códigos. Você irá aprender passo a passo de forma otimizada e com códigos simples de entender, dessa forma aprendendo tudo oque é preciso para construir um jogo 3D na Unity. Vou explicar para você o \"pulo do gato\" em cada parte, para que se torne uma experiência incrível de aprendizado. Desde já agradeço e espero vocês na nossa primeira videoaula!",
      "target_audience": [
        "Desenvolvedores iniciantes e intermediários de jogos em Unity.",
        "Desenvolvedores apaixonados por jogos.",
        "Pessoas interessadas em aprender a desenvolver jogos."
      ]
    },
    {
      "title": "Unreal Engine 5 : Blueprint para Iniciantes",
      "url": "https://www.udemy.com/course/unrealengine5blueprintparainiciantes/",
      "bio": "Curso de Blueprint do 0 ao PRO.",
      "objectives": [
        "O que são blueprints e como cria-las.",
        "O que são componentes e sua importância.",
        "O que são eventos e como criar seus próprios eventos.",
        "Utilizar funções e criar funções próprias.",
        "O que são macros e como criar seus próprios macros.",
        "Como criar sua própria biblioteca de funções e macros.",
        "Tipos de comunicação entre blueprints; tudo o que precisa saber.",
        "O que são variáveis e seus tipos.",
        "O que são enumeradores e sua utilidade.",
        "O que são estruturas e sua utilidade.",
        "O que são arrays.",
        "O que e fluxo de execução.",
        "Aulas praticas de criação e manipulação de blueprint.",
        "O que são estruturas",
        "O que são Data Tables e Data Assets",
        "Replicação e como e aplicado em jogos Multiplayer"
      ],
      "course_content": {
        "Introdução": [
          "Baixando a Engine",
          "Criando o projeto",
          "Primeiros passos na Unreal Engine 5"
        ],
        "Fundamentos das Blueprints": [
          "O que são Blueprints!",
          "Configurações e Layout das Blueprints",
          "Ordem de Execução"
        ],
        "Blueprint Class": [
          "O que são Blueprints Class?",
          "Atores",
          "Peão",
          "Personagem",
          "Controlador do Jogador",
          "Game Mode",
          "\"Actor Component\" e \"Scene Component\""
        ],
        "Eventos, Funções e Macros": [
          "O que São Eventos, Funções e Macros",
          "Eventos",
          "Funções",
          "Macros",
          "Biblioteca de Funções e Macros",
          "Função Construct"
        ],
        "Fluxo de Execução": [
          "O que e Fluxo de execução",
          "Verificação Is Valid",
          "Sequence",
          "Flip Flop",
          "For Loop",
          "Do once",
          "Gate"
        ],
        "Variaveis": [
          "O que são variáveis?",
          "Inteiro, Float e Byte",
          "Booleano",
          "Text, String e Name",
          "Vetores",
          "Rotação",
          "Transform",
          "Operadores de Variáveis",
          "Ramificações e Condições",
          "Get e Set",
          "Exemplo de Variaveis"
        ],
        "Arrays": [
          "O que são Arrays?",
          "Criando um Array",
          "Funções para Arrays"
        ],
        "Enumeradores": [
          "O que são enumeradores?",
          "Comparando Enumeradores",
          "Alternando com Enumeradores"
        ],
        "Struct e DATA": [
          "O que São Structs!",
          "O que são Data Table",
          "O que são Data Assets"
        ],
        "Comunicação entre blueprints": [
          "O que e comunicação entre blueprints?",
          "Projetar para",
          "Interface"
        ]
      },
      "requirements": [
        "Computador que suporte unreal engine 5"
      ],
      "description": "Hey! Prepare-se! Pois você está preste a desbloquear a habilidade mais importante para se desenvolver um jogo! Bem vindo ao curso sobre Blueprint do 0 ao PRO mais completo do nosso país!\nO curso completo de Unreal Engine 5 sobre Blueprint oferece uma imersão abrangente no mundo do desenvolvimento de jogos, desde os conceitos básicos até a criação de um projeto de jogo final. Projetado para iniciantes e entusiastas experientes, este curso é uma jornada passo a passo através do poderoso sistema de scripting visual da Unreal Engine.\n\n\nCom mais de 5 horas de conteúdo prático, os participantes aprenderão a criar lógicas de jogo complexas sem escrever uma única linha de código. Desde a compreensão dos fundamentos do Blueprint até técnicas avançadas, cada conceito é explicado de forma clara e aplicado em exemplos práticos.\n\n\nAo longo do curso, os tópicos incluem manipulação de assets, criação de interações de jogadores, implementação de mecânicas de jogo, design de interfaces e muito mais. Para consolidar o aprendizado, os alunos participarão da criação de um jogo completo usando Blueprint, aplicando as habilidades adquiridas em um projeto prático e desafiador.\n\n\nPrepare-se para mergulhar na Unreal Engine 5, dominar o poder do Blueprint e criar seu próprio jogo incrível ao final deste curso.",
      "target_audience": [
        "Para amantes de jogos e desenvolvedores Indie que buscam melhorar suas habilidades!"
      ]
    },
    {
      "title": "Jogos Digitais com Unity + C# + Modelagem e Animação 3D",
      "url": "https://www.udemy.com/course/unity-desenvolva-jogos-2d-e-3d-c-completo-modelagem-3d/",
      "bio": "Aprenda a criar jogos 2d e 3d Unity, programação C# completo e ainda animação e modelagem 3d para incrementar seus jogos",
      "objectives": [
        "Desenvolver jogos 2D e 3D no Unity",
        "Programação C# para jogos",
        "Aborda Modelagem 3D para Jogos",
        "Aborda Animação 3D para Jogos",
        "Texturização de personagens 3D",
        "Criação de personagem 2D e 3D",
        "Uso de Assets para agilizar o desenvolvimento",
        "Comportamento básico de IA - Inteligência Artificial",
        "Sistema de colisão",
        "Crie Jogos para plataformas web, pc e celulares"
      ],
      "course_content": {
        "Introdução": [
          "Apresentação",
          "O que podemos criar com o motor Unity?"
        ],
        "Passos para a criação de um projeto de jogo 2d": [
          "Introdução a seção",
          "Baixando e Instalando o Unity",
          "Criando Seu Projeto no Unity",
          "Porque usar o Unity?",
          "Conhecendo o editor do Unity - configurando preferências",
          "Unity Collaborate - Usando recursos nas nuvens",
          "Importando e utilizando recursos - Assets do Unity"
        ],
        "Desenvolvimento": [
          "Seção de desenvolvimento - intro",
          "Construindo nossa cena no espaço com uma galaxia estrelada",
          "Criando o Player para o jogo",
          "Entendendo o Vector3 - Pos x, y, z",
          "Dando movimento ao Player -Eixos x, y",
          "Controlando o objeto Eixo X - WASD Key",
          "Controlando o objeto Eixo Y - WASD Key",
          "Colisão no eixo X - Limitando a evasão na tela",
          "Colisão no eixo Y - Limitando a evasão na tela",
          "Otimizando o código para melhor depuração"
        ],
        "Configurando Prefabs - Tiros com lasers na cena": [
          "Introdução a seção",
          "Configurando Prefabs - Adicionando Laser Sprite",
          "Instanciando o objeto - Disparando com a barra de espaço",
          "Disparando laser - KeyCode",
          "Intervalo para os tiros de laser - Sistema CoolDown",
          "Otimizando o código - Otimize Code"
        ],
        "Introdução a seção de Power UP": [
          "Introdução a seção",
          "Tiro Triplo - Power UP",
          "Programando o Tiro Triplo de nossa nave - Script Player",
          "Criando Powerup - Novo Script",
          "Detectando colisão com Powerup - Sistema de colisão",
          "Script Powerup e Player comunicando",
          "Tiro triplo sendo temporário - Sistema de CoolDown"
        ],
        "Criando novo Powerup - Aumentar velocidade do jogador": [
          "Introdução - Impulso e velocidade",
          "Configurando - Impulso e velocidade",
          "Avançando nos códigos - Impulso e velocidade"
        ],
        "Criando nosso Inimigo - New GameObject": [
          "Introdução a seção",
          "Criando Inimigos - New GameObject",
          "Comportamento do Inimigo - Enemy behavior",
          "Otimizando código",
          "Destruindo o inimigo - Enemy",
          "Destruindo o Jogador - Player",
          "Explosão do inimigo - Efeito especial",
          "Criando Explosão do Inimigo - Script",
          "Explosão do Jogador - Efeito especial",
          "Explosão do Jogador - Script"
        ],
        "Campo de Força do Player - Shield Powerup": [
          "Introdução a Seção",
          "Criando o Campo de Força",
          "Visual do Campo de Força - Sprite",
          "Animação do Campo de Força - Shields Anim"
        ],
        "Spawn Manager - Gerenciador de Objetos": [
          "Introdução a seção",
          "Criando Spawn Manger",
          "Gerenciando nosso inimigo - Spawn Enemy",
          "Instanciando mais Powerups Automaticamente"
        ],
        "UI Interface do Usuário": [
          "UI - Interface do Usuário - Introdução",
          "Configuração do Gerenciamento da Interface do Usuário - UI",
          "Gerenciando o Display das Vidas",
          "Score Visual",
          "Score Script - Testando o Sistema de Pontuação",
          "Criando Display - Parte Visual",
          "Display - Script",
          "Display - GameOver",
          "Otimizando Powerups",
          "Otimizando código"
        ]
      },
      "requirements": [
        "Computador com acesso a internet que comporte a instalação do Unity",
        "Não requer conhecimento prévio, faremos tudo no passo a passo, é realmente para quem está começando"
      ],
      "description": "Criação de jogos digitais é para os fortes, esse curso é para quem quer realmente se tornar um profissional no desenvolvimento de jogos e ainda trabalhar com essas habilidades.\n⦁ Do que se trata esse curso\nSe você está procurando se tornar um profissional de desenvolvimento de Jogos com o motor Unity, se quer entrar no mercado de trabalho com essas habilidades, desenvolvendo jogos comerciais para várias plataformas, então esse curso de desenvolvimento de jogos no Unity é para você.\n\nAprofundaremos no desenvolvimento de jogos 2d e 3d, estudando com detalhes a programação C# e ainda vamos abordar como vender seus jogos ou até mesmo como trabalhar online utilizando seus conhecimentos de desenvolvimento de jogos esse é o nosso diferencial.\n\n⦁ O que você irá aprender nesse curso\n\n1. Programação C# completa, laços, variáveis, vetores, classes, estrutura de decisão e etc\n2. Tipos de tiros,  Lasers, tiros tripos, velocidade, impulso, escudo\n3. Conhecendo as características do motor Unity e sua navegação\n4. Como trabalhar um shader de qualidade para mais realismo no cenário\n5. Dados de entrada de usuários, Sistema de colisão, Movimentos de jogadores\n6. Trabalhando sistema de partículas, implementando músicas de fundo, efeitos sonoros\n7. IA - Inteligência Artificial para dar ação aos inimigos no jogo\n8. Coletagem e destruição de objetos dentro do jogo\n9. Team Collaboration do Unity, como ativar e usar esse serviço\n10. Distribuindo seu jogo em plataformas diferenciadas\n11. Comercializando seu jogo ou prestando serviço na aréa\n12. Conceitos de animação, modelagem 3d e rig\n13. Como trabalhar no mercado utilizando seus conhecimentos\ne muito mais...\n\nVocê irá aprender a desenvolver jogos com qualidade comercial totalmente profissional, não terá receio algum de produzir um jogo e gerar receita com ele, podendo realmente trabalhar na área ou construir seu próprio negócio de desenvolvimento de jogos.\n\n⦁ Para quem não é esse curso?\n\nEsse curso não é para curiosos que não querem levar a sério essa profissão de desenvolvedor de jogos, esse curso é para pessoas sérias e que querem se destacar no mercado de forma profissional e gerar autoridade nesse nicho, não é um cursinho de final de semana, é um curso muito sério e que exige foco e dedicação, é para os forte, para quem quer ser profissional.\n\n⦁ Porque ser um desenvolvedor de jogos e usar o motor Unity?\n\nHoje com o crescimento do setor, o Unity se destaca sendo o motor mais usado para o desenvolvimento de jogos em diversas plataformas.\n\nCom isso você poderá desenvolver uma carreira de sucesso e trabalhar com o que gosta, realmente poderá viver do desenvolvimento de jogos, hoje isso é possível com as diversas oportunidades que se encontrar no mercado online e até mesmo físico.\n\nO mercado está em crescimento e a industria de jogos está próxima a gerar um faturamento acima de $110 bilhões de dólares até 2020, esse é o momento certo de entrar e fazer parte dessa mina de ouro que só cresce.\n\nNosso curso foi criado pensando em você, em facilitar a produção ao máximo e ser o mais didático possível, visto que programar é algo que assusta muita gente.\n\n⦁ Que sou eu para te ensinar jogos digitais?\n\nSou graduando em jogos digitais e a anos pesquiso e estudo sobre programação de jogos, quando comecei eu não utilizava motores, eu fazia tudo na unha, tempos difíceis, hoje você tem a faca e o queijo nas mãos, tudo ficou mais fácil, eu aprendi a programação de jogos com Unity, com um curso autorizado pela própria Unity, então você imagina que as informações que tenho são realmente relevantes para que você possa se tornar profissional no mercado.\n\nMeus primeiros jogos foram criados utilizando C++ e API Direct X, fazia a modelagem dos personagens e mapas todos no 3DS Max, era um sofrimento agradável produzir uma pequeno mapa, esse foi meu início.\n\nEstudei e estudo animação 2d e 3d, Modelagem 3d e Rig, tudo para ter um conhecimento abrangente na área de desenvolvimento de jogos, mas você não precisa saber tudo isso, hoje você conta com diversos recursos que facilitam o seu desenvolvimento.\n\nTive aula de animação e desenho inicialmente com um diretor de animação do Maurício de Souza, algumas aulas com animadores da Pixar e por ultimo ainda estudando com um professor que foi animador da Disney.\n\nTrabalho hoje através de minha casa, prestando serviço nas áreas que possuo habilidades e isso eu também irei ensinar você a fazer nesse curso.\n\nAo final desse curso você terá um bom conhecimento de C# e poderá desenvolver seus próprios jogos 2d e 3d com domínio nas mais recentes técnicas de desenvolvimento de jogos do mercado. Venha aprender jogos digitais comigo.\nEncontro você do outro lado!",
      "target_audience": [
        "Esse curso é para quem quer aprender a programar jogos 2d e 3d com Unity e ter um bom conhecimento em programação C#",
        "Qualquer pessoas que queira entrar no mercado de desenvolvimento de jogos ou apenas produzir jogos por diversão",
        "Para pessoas que querem gerar renda através de suas habilidades na área de desenvolvimento de jogos",
        "Esse curso é para pessoas que querem iniciar na programação de jogos, não foi criado para quem já é experiente, também é para quem realmente quer aprender programação."
      ]
    },
    {
      "title": "Unity ile sıfırdan çeşitli oyun sistemlerini öğrenin!",
      "url": "https://www.udemy.com/course/unity-ile-sifirdan-cesitli-oyun-sistemlerini-ogrenin/",
      "bio": "Craft, Envanter, Çoklu Dil, Building, Input sistemleri ve daha fazlasının yapımını sıfırdan öğreneceksiniz.",
      "objectives": [
        "Oyunlarda kullanılan ana sistemlerin yapılışını",
        "Ana sistemlere bağlı olan alt sistemlerin mantığını",
        "Oyunlarda ki sistemlerin nelere ihtiyaç duyduğunu",
        "Sistemlerin yapılışının nasıl planlandığını"
      ],
      "course_content": {
        "GENEL VİDEOLAR - SATIN ALMADAN ÖNCE LÜTFEN İZLEYİNİZ.": [
          "EĞİTİMDE YAPILAN BAZI PROJELERİN ÖZET TANITIMI",
          "SEVİYE BİLGİSİ HAKKINDA BİLGİLENDİRME (ÖNEMLİ)",
          "KAYNAK KODLAR HAKKINDA BİLGİLENDİRME (ÖNEMLİ)"
        ],
        "INPUT SYSTEM | İnput sistemi | Game controller": [
          "İnput Sistemi Paketini Yükleme | Anlatım",
          "KLAYVE | İlk input girişi oluşturma ve Karakteri hareket ettirme (Class Yöntemi)",
          "Input Sistem Penceresi Detaylı Anlatım | Özellikler | Etkileşimler",
          "Kontrol Şeması | Input Asset Ayarı oluşturma | Input Debugger",
          "Hold|Press|Tap|Multi Tap|Slow Tap İşlemlerini Kullanma | Button durumunu yakalam",
          "Çeşitli Komutlar | Cihaz yakalama ve tuş kontrol",
          "Player Input Componenti| Input sisteminin component ile Kullanım Yöntemi",
          "Player Input Manager Componenti | Split Ekran | Local CO-OP",
          "##ÖRNEK## Tek ve farklı 2 aygıt ile 2 oyuncuyu oynatma örneği",
          "Aygıt Özellikleri | Control Type Önemi | Sensörler ve diğer aygıtların anlatımı",
          "Accelerometer | Touchscreen Giriş Aygıtlarını Kullanma",
          "Input system UI Input module"
        ],
        "WEBREQUEST | UZAK SİSTEMLERLE BAĞLANTI KURMA | VERİTABANI İŞLEMLERİ": [
          "WebRequest Genel Anlatım | Get methoduyla veri çekme | Genel komutlar",
          "WebRequest POST METHODU",
          "WebRequest PUT METHODU | Delete ve Head method anlatım",
          "#1 ÖRNEK UYGULAMA | VERİTABANINA OYUNCU BİLGİSİ KAYIT ETME | MYSQL VERİ EKLEME",
          "#2 ÖRNEK UYGULAMA | OTURUM AÇMA | GİRİŞ YAPMA İŞLEVİNİN YAPILMASI",
          "#3 ÖRNEK UYGULAMA | OYUNCU VERİLERİNİ ÇEKME | OYUNCU VERİLERİNİ GÜNCELLEME"
        ],
        "ÇOKLU DİL | MULTİ LANGUAGE YAPIMI | OYUNLARDA ÇOKLU DİL DESTEĞİ": [
          "Yöntem #1 | Çoklu dil | Temel Yöntem",
          "Yöntem #2 | Çoklu dil | Liste Yöntemi",
          "Yöntem #3 | Çoklu dil | Class Yöntemi",
          "Yöntem #4 | Çoklu dil | Component Yöntemi 1",
          "Yöntem #5 | Çoklu dil | Component Yöntemi 2",
          "Yöntem #6 | Çoklu dil | JSON DOSYA YÖNTEMİ | HARİCİ DOSYADAN OKUMA"
        ],
        "ENVANTER SİSTEMİ | INVENTORY SYSTEM": [
          "BÖLÜMÜN İŞLEYİŞ AÇIKLAMASI",
          "Yöntem 1# | Envanter Sistemi Objelerin oluşturulması ve Slot İşlemleri",
          "Yöntem 1# | Item Toplama | Slot Yönetimi | Item Kullanma",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Yöntem 1# | Envanter sisteminde Item sayısı kontrol sistemi",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Bonus İşlem | Item Kaydetme yollarının anlatımı | Playerprefs ile kaydetme işlem",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Yöntem 2# | Item yer değiştirme | Item Drag sisteminin yapılması",
          "Yöntem 2# | Canvas Raycast Ayarlamaları",
          "Yöntem 2# | Slot Ayarlamaları | Item Slot Kontrolleri",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Yöntem 3# | Envanterde Obje Havuzu Sisteminin Oluşturulması 1",
          "Yöntem 3# | Envanterde Obje Havuzu Sisteminin Oluşturulması 2",
          "Yöntem 3# | Envanterde Obje Havuzu Sisteminin Oluşturulması 3",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Bonus İşlem | Item objelerini Mouse Pozisyonunda Oluşturmak",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Bonus İşlem | Farklı Item Kullanma yöntemi",
          "Yöntem 4# | FPS karakter ile Item Toplama | Çarpma ve CrossHair yöntemleriyle",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Yöntem 5# | Silah Envanter Sisteminin Yapılması 1",
          "Yöntem 5# | Silah Envanter Sisteminin Yapılması 2",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****"
        ],
        "CRAFTİNG SİSTEMİ | ITEM ÜRETME SİSTEMİ": [
          "Crafting Sisteminin yapılması 1",
          "Crafting Sisteminin yapılması 2",
          "Crafting Sisteminin yapılması 3",
          "Crafting Sisteminin yapılması 4",
          "Crafting Sisteminin yapılması 5",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Crafting Sisteminin yapılması 6",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****"
        ],
        "BUİLDİNG SYSTEMS | OBJE OLUŞTURMA SİSTEMİ": [
          "Building Sisteminin Yapılması 1",
          "Building Sisteminin Yapılması 2",
          "Building Sisteminin Yapılması 3",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "Building Sisteminin Yapılması 4",
          "Building Sisteminin Yapılması 5",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****",
          "(Opsiyonel) Building Sisteminin Yapılması 6",
          "(Opsiyonel) Building Sisteminin Yapılması 7",
          "**** ŞARTA BAĞLI KAYNAK DOSYASI ****"
        ],
        "SHADER GRAPH": [
          "Proje oluşturma ve İlk Shader Graph oluşturma",
          "Node genel anlatım | Blackboard penceresi anlatım | Özellik tanımlama ve kullanm",
          "Tüm Pencere ve ayarlarının anlatımı | Genel kullanım yöntemleri ve ayarları",
          "ÖRNEK 1#",
          "ÖRNEK 2#",
          "Node türlerinin genel anlatımı | Input Node İnceleme",
          "Node türlerinin genel anlatımı | Math Node ve alt node | Diğer node anlatımları"
        ],
        "SCRİPTABLE OBJECT | VERİ DEPOLAMA VE KULLANMA": [
          "Scriptable anlatım ve örnekler"
        ],
        "BONUS": [
          "BONUS"
        ]
      },
      "requirements": [
        "En az ORTA ve üzeri bilgi seviyesi gereklidir.",
        "En az ORTA seviye PHP ve Mysql Veritabanı bilgisi",
        "Oyun geliştirmenin bilinmesi gereklidir."
      ],
      "description": "Merhabalar, bu eğitimde bana ulaşan insanlardan çokça talep gelen ve çok merak edilen oyun sistemlerini anlattım.\nOyunlarda kullandığımız sistemler oyun türlerine göre değişiklik gösterebilir ancak bazı sistemler olmazsa olmazdır. Oyun geliştirmeyi bilen ancak daha önce bu tarz sistemleri yapmamış kişiler, ihtiyaç duyduklarında bir kaynak bulmakta zorlanıyorlar. Bu sistemlere ihtiyaç duyan kişilere faydalı olabilmesi açısından oyunlarda kullanılan ana sistemleri anlatmaya çalıştım.\nBazı sistemler;\nINPUT SYSTEM\nWEBREQUEST (Mysql | Veritabanı işlemleri) **** En az ORTA seviye PHP ve Mysql Veritabanı bilgisi gerektirir ***\nÇOKLU DİL\nENVANTER SİSTEMİ\nCRAFTİNG SİSTEMİ\nBUİLDİNG SİSTEMİ\nBu sistemlere ek başka sistemlerde zamanla eklenecektir. Şuan planlamalarımda 4 farklı sistem daha vardır, bu sayı duruma göre artabilir.\nBelirli bir öğrenci sayısına ulaştığımızda öğrencilere anket sunacağım ve öğrencilerin en çok oy verdiği sistem veya sistemleri anlatacağım. Yani bu eğitim interaktif bir eğitim olacaktır. Sizlerden ricam, mesaj ile kişisel sistem istekleri yapmamanızdır. Bu bir eğitim olduğu için genel kitleye hitap edebilecek ve daha fazla insana faydalı olabilecek sistemlerin anlatılması hedeflenmektedir.\nEğitimde anlatılan sistemlerin hepsi sıfırdan anlatılmıştır, videolarda atlama yapmadan ilerlerseniz kolaylıkla yapabilirsiniz. Sistemler oluşturulurken sadece 1 yöntem üzerine gidilmedi, eğer yapılabilecek farklı yöntemler var ise hepsi gösterilmeye çalışıldı. Mesela çoklu dil sisteminin 6 farklı yöntemini gösterdim ve daha da farklı yöntemler vardır. Videoları izlerken videoda kullanılan yöntemlerden farklı yöntemler aklınıza gelebilir bu gayet olağandır. Oyun geliştirmede her işlemin en az 2-3 farklı yapılma şekli vardır. Bunu unutmadan salt bilgiye odaklanmanızı rica ederim.\n\n\nNot 1 : Satın almadan önce ön izleme videolarında var olan Sistem tanıtımı, Seviye bilgisi ve kaynak kod bilgilendirmesi videolarını izlemenizi rica ederim.",
      "target_audience": [
        "Oyun geliştirenlere",
        "Oyunlarında farklı sistemler oluşturmak isteyenlere"
      ]
    },
    {
      "title": "【Unity オンラインFPS】Photonを使ってオンラインのデスマッチFPSを開発しよう",
      "url": "https://www.udemy.com/course/unity-photon-fps/",
      "bio": "UnityとPhotonを使ったオンラインの”デスマッチFPS”開発講座‼一人称、銃の実装、銃の切り替えなどはもちろん、 Photonで全員敵のオンライン対戦を実装できる本格講座！この機会にあなたも\"オンラインゲーム開発\"デビューをしよう！",
      "objectives": [
        "UnityでFPSゲームを作る方法(1人称、銃、etc..)",
        "Photon【PUN2】を用いたオンラインシステムの構築",
        "Unityで3Dゲームを作る方法",
        "UnityとC#でのゲーム開発方法"
      ],
      "course_content": {
        "コース紹介": [
          "講座の進め方と注意点"
        ],
        "FPSプレイヤーの作成": [
          "仮Map生成とプレイヤーセットアップ",
          "マウスでPlayerのX軸移動",
          "マウスで視点移動_Y軸",
          "Playerの移動",
          "Playerのジャンプ",
          "Playerの走り",
          "カーソルの非表示",
          "銃のオブジェクト実装",
          "銃スクリプトの作成",
          "銃の切り替え_ホイール",
          "銃の切り替え_数値キー",
          "覗き込み",
          "射撃",
          "弾痕エフェクトの作成",
          "弾痕の実装",
          "リロード",
          "弾薬数表示UIの作成",
          "弾薬のUI更新",
          "照準UI"
        ],
        "ステージの実装": [
          "MAP実装",
          "スポーンポイント作成",
          "ランダムスポーン機能"
        ],
        "オンライン実装_ロビー機能": [
          "タイトルの画面作成",
          "Photon導入",
          "マスターサーバー接続",
          "ロビー接続"
        ],
        "オンライン実装_ルーム機能": [
          "ルーム作成UI",
          "ルーム作成システム",
          "ルームUI",
          "ルーム接続",
          "ルーム退出",
          "エラーUI",
          "エラー処理",
          "ルーム一覧UI",
          "ルームボタンスクリプト",
          "ルームの一覧表示",
          "ルームボタン表示",
          "ルームボタンの表示バグ修正",
          "一覧からルーム参加",
          "参加ユーザーの名前表示"
        ],
        "ユーザー": [
          "名前入力UIの作成",
          "ユーザーの名前入力",
          "参加ユーザー一覧の更新",
          "ルームボタン巨大バグの修正"
        ],
        "MAPへの遷移": [
          "遷移ボタン表示切替",
          "MAPへの遷移",
          "Player同期",
          "同期バグ修正"
        ],
        "プレイヤーモデル実装": [
          "3Dモデルセットアップ",
          "アニメーション遷移",
          "銃の位置修正",
          "モデルや銃の表示切り替え",
          "アニメーション同期",
          "銃の同期"
        ],
        "プレイヤーの撃ちあい": [
          "射撃でのHP削り合い実装",
          "HPUIの作成",
          "HPとUIの同期",
          "デスUIの作成",
          "死亡時に倒された敵の名前表示",
          "リスポーンの実装",
          "血のエフェクト作成",
          "撃たれたときにエフェクト発生"
        ],
        "試合システム": [
          "どんなイベントを作るのか",
          "コールバック関数の登録",
          "イベント作成",
          "新規参加ユーザーの情報処理",
          "ユーザー情報の共有",
          "キルデスイベント",
          "スコアボードUI作成",
          "ユーザー情報更新コード記述",
          "スコアボード機能実装",
          "クリア",
          "試合終了UIの作成",
          "試合終了"
        ]
      },
      "requirements": [
        "Unityで2,3回以上ゲーム開発を行った経験がある",
        "Unityのインストールが済んでいる",
        "C#やUnity基礎をある程度理解している",
        "VisualStudioの設定終了",
        "調べる癖がある人"
      ],
      "description": "「敷居が高そうでオンラインに挑戦できていない・・」\n「オンラインFPSを作ってみたい！」\nもし上記が”当てはまる”のであれば”、\nこの講座はそんなあなたに最適なものになっています!!\n\n【本講座は以下の方を対象としています】\nオンラインゲーム開発デビューをしてみたい人\n検索しても英語の解説ばかりで疲弊してしまった人\n公式ドキュメントや断片的な情報しかなく開発に苦戦している人\nゲーム開発の幅を広げたい人\n分からないことを調べる癖がある人\nオンラインFPSゲームを作りたい人\nUnityで何度かゲームを作ったことがある人※\n\n\n上記を対象に講座を作成したのは、\n私も同じ状況の時に「こんな講座があればな～」\nと思ったことがあるからです！\n\n\n最近はUnityの講座が増えてきて\n様々なゲームが作りやすくなってきました！\nしかし\n”オンライン”となると情報がほとんどなく\nあるのは断片的な情報と、公式ドキュメントのみ・・\n\n\nこれでは敷居を高く感じ、\nオンラインに挑戦したくてもできないでいる人が\n多いのではないかと思いました。\n\n\nそこでこれから\nオンラインゲーム開発に挑戦する人が\n\n\n敷居の高さを感じることなく\nオンラインゲーム開発に挑戦できるように\nこの講座を作成しました‼\n\n\n私のプロフィールから飛べるサイトで、\nクーポン発行しているのでご活用ください。\n\n\n【講座内容】\n本講座は、\n基本的なFPSの操作部分から開発を始めていきます！\n一人称視点や移動、ジャンプ、銃撃、銃の切り替えなど、\nFPSに必要な機能の作り方を学べるので\nソロのFPSゲームでも生かせる内容になっています。\n\n\nFPS部分の開発が終了したら、\nいよいよ”Photon 【PUN2】”を用いて\nオンライン機能の実装をしていきます！\n\n\nサーバー接続や、ルーム作成\nオンラインでプレイヤーの同期方法、\nキルデススコアなどの実装方法が学べます！\n\n\nまたサーバー接続やルーム作成、同期などは、\nFPS以外のゲームでも使えるテクニックになっています！\nこれを応用すればオリジナルゲームに\nオンラインを実装することが可能に‼\n\n\nさらに講座で記述したコードは\n”セクションごとに配布”をしているので\nエラーやバグで困った時も対応がしやすいようになっています！\n\n\nこの機会に是非、\n”オンラインゲーム開発デュー”をしてしまいましょう！\n\n\n【よくある質問】\nQ.どの位のレベルがあれば挫折せずに受講できるの？\nA.Unityで2,3度ゲームを作りきったことがある人ならば、\n講座を理解できると思います‼\nif文やループ文、継承などが分るレベルです。\n\nQ.これで何ができるようになるの？\nA.PhotonでデスマッチFPSを作る方法が学べます。\nマッチングやオブジェクト同期、カスタムイベントなどは\n応用すれば自作ゲームにも活かせます。\n\nQ.ゾンビFPS講座とオンラインFPS講座の違いは？\nA.ゾンビFPSはPlayer操作、地形、霧、敵AI、アイテム、画面エフェクト、SEなどの要素が含まれています。\nオンラインFPSはPlayer操作、リスポーン、PUN2でのマッチングシステム、オンライン対戦、スコアボードなどの\n要素が含まれています。\nまた銃の射撃やカメラ周りは実装方法が異なるので、\n別のパターンも学ぶことができます。\n\n\n【注意点】\n本講座はUnityでゲーム開発を、\n行ったことがある人を対象に作った講座です。\n\n\n【講座全体で習得できるテクニック】\n1人称の操作できるキャラクター（歩く：走る：ジャンプ：撃つ：リロード）\n銃（撃つ：ダメージ：銃の切り替え：覗き込み：弾痕エフェクト）\nHPバーや弾薬テキストなどのUI作成\nMAP上でランダムスポーン\nマッチング（サーバー接続：ロビー接続：ルーム接続：途中抜け：途中参加）\nデスマッチ戦闘機能（Xキルしたらマッチ終了）\nスコアボード（名前：キル数：デス数）\nタイトル画面\nゲーム終了機能\n\n\n【講座受講の推奨環境】\nUnityバージョン (2020.3.x)LTSでの作業\n3Dゲーム開発なのでそれなりのスペックがあるPCでの作業\n※参考までに講座撮影に使用したPCスペックです\nプロセッサ：Core i7-9700\nグラフィックメモリ：16GB\n\n\n\n\n【注意:講座の内容に含まれていません】\nビルドやリリースするまでの手順\nC#&Unity基礎\nアイテム所持\nチーム戦\n無料枠以上の対戦人数\n複数MAP\n待機画面等での武器種の変更\n講座と異なる進め方で出たエラーのQ&Aサポート\n\n\n※本講座はC#やUnity基礎の解説はしていません。\n\n\n【最後に】\nオンラインゲーム開発に挑戦したい\nオンラインFPS作ってみたい！\nこんな風に思っている人は、\nぜひこの講座でオンラインゲーム開発デビューをして\nより”本格的な”ゲームクリエイターとして進んでいきましょう‼\n\n\nそれでは講座本編であなたを\nお待ちしております！",
      "target_audience": [
        "オンラインゲームの開発に挑戦してみたい人",
        "オンラインFPSゲームを作ってみたい人",
        "3Dゲーム開発に挑戦してみたい人"
      ]
    },
    {
      "title": "Programowanie gier w Unity 2D dla początkujących",
      "url": "https://www.udemy.com/course/unity-2d-od-podstaw/",
      "bio": "Naucz się programowania C# i tworzenia gier od podstaw",
      "objectives": [
        "Podstawy programowania C# w Unity",
        "Tworzenie losowych liczb całkowitych i ułamkowych",
        "Dodawanie obiektów i komponentów",
        "Jak odnosić się do komponentów na danym obiekcie"
      ],
      "course_content": {},
      "requirements": [
        "Komputer z programem Unity"
      ],
      "description": "Cześć!\nWitam w kursie programowanie gier w Unity dla początkujących. Jest to pierwszy kurs, który nauczy Was wielu cennych informacji od podstaw. Będziemy tutaj omawiać wiele zagadnień technicznych i w odróżnieniu od inncyh kursów, które znajdziecie na naszym kanale, nie będzie tutaj długich projektów. Będziemy się starali uczyć teorii, ważnych zasad i krótkich przykładów. Można powiedzieć, że kurs ten będzie kompilacją odpowiednio ustruktyryzowanej wiedzy i tutoriali, których poznanie pozwoli wam tworzyć przeróżne projekty 2D.\nW tym kursie skupimy się tylko i wyłącznie na projektach 2D, a po jego ukończeniu będziemy kontynuwać bardziej zaawansowane elementy tworzenia gier w unity, ale już w przestrzeni 3D.\nW ramach tego kursu nauczymy się podstaw języka c sharp, który używany jest do pisania skryptów w unity. Początkowo poznamy najważniejsze elementy tego języka tak, by jak najszybciej dobrac się do samego silnika unity i zacząć w nim tworzyć interesujące projekty. Z czasem, w razie potrzeby, będziemy uzupełniac wiedzę z zakresu programowania o kolejne ważne informacje i dobre praktyki.\nW między czasie gorąco was zachęcam do uczestniczenia w tzw. code challenges, które z łatwością znajdziecie w internecie. Są to darmowe strony, gdzie możecie ćwiczyć rozwiązywanie problemów dotyczących języka C#. Wierzę, że to pozwoli wam stać się lepszymui programistami i twórcami gier komputerowych.",
      "target_audience": [
        "Osoby zaczynające przygodę z programowaniem i tworzeniem gier w Unity"
      ]
    },
    {
      "title": "Erstelle einen 3D Jump and Run Plattformer mit Unity 3D",
      "url": "https://www.udemy.com/course/3d-jump-and-run-unity-3d/",
      "bio": "Lerne wie Du ein Spiel wie Super Mario 64 entwickeln und umsetzen kannst.",
      "objectives": [
        "Erstellung von Multiplattform Spielen für iOS, PC, Android uvm.",
        "Gutes Verständnis für Physik in Spielen",
        "Bereit einen ganz eigenes Jump and Run Spiel zu entwickeln"
      ],
      "course_content": {
        "Intro and Installation": [
          "Einführung"
        ],
        "Die Grundlagen des Spiels": [
          "Erstellung einer Map Teil 1",
          "Wichtiger Hinweis!",
          "Erstellung einer Map Teil 2",
          "Hier findest Du alle Unterlagen",
          "Dem Spieler Bewegung hinzufügen Teil 1",
          "Dem Spieler Bewegung hinzufügen Teil 2"
        ],
        "Animationen": [
          "Verwendung von Animationen Teil 1",
          "Verwendung von Animationen Teil 2",
          "Wände einfügen",
          "Gegner einfügen und animieren"
        ],
        "Szenenwechsel und Screens": [
          "Home Bildschirm",
          "Game Over Bildschirm",
          "Punktesystem einfügen",
          "Zwischen Bildschirmen wechseln"
        ],
        "Powerups und andere Features inkl Gegner": [
          "Power Ups ins Spiel einfügen",
          "Münzkiste und Sounds Teil 1",
          "Münzkiste und Sound Teil 2",
          "Gegnertyp der schießt Teil 1",
          "Gegnertyp der schießt Teil 2",
          "Teleportieren Feature",
          "Mehr Animationen einfügen",
          "Gegner töten können",
          "Maps bearbeiten"
        ],
        "Mobile gehen, publishen und Werbung einbaun": [
          "Joystick für Mobile hinzufügen",
          "Werbung ins Spiel einfügen",
          "Spiel als APK exportieren",
          "Spiel im Playstore veröffentlichen"
        ],
        "Bonus": [
          "Bonus Lektion - Weitere Kurse von mir stark reduziert"
        ]
      },
      "requirements": [
        "Grundkenntnisse in Unity und C# - wie z.B. in meinem umfangreichen Unity3D Kurs vermittelt",
        "Man sollte einen PC/Mac besitzen, der Unity 3D abspielen kann."
      ],
      "description": "Möchtest Du ein eigenes 3D Jump and Run Spiel entwickeln können?\nDann bist Du hier genau richtig. In diesem Kurs lernst Du fortgeschrittene Funktionalitäten von Unity3D kennen, in dem Du Schritt für Schritt ein 3D Jump and Run Spiel, ähnlich wie Super Mario 64, entwickelst.\n\nIn diesem Kurs lernst Du nicht nur wie man dieses spezifische Spiel entwickelt, sondern viele zusätzliche Fähigkeiten, mit denen Du eigene Spiele entwickeln kannst.\nBeispiel der Features die Du nach diesem Kurs beherrschen wirst:\nErstellung von 3D Levels in wenigen Minuten\nVerwendung des Animators und von Animationen in Unity\nPlattformübergreifende Spiele Programmierung für den PC, aber auch Android und iOS\nEinfügen von Gegnerfiguren und Belebung dieser\nProgrammierung von Scripts - welche die Funktionalität von Spielelementen erweitern\nMenüführungen\nGame Over Bildschirme\nPunktesysteme\nVerwendung von Physik in Spielen\nSzenenwechsel\nPower Ups\nGegner töten\nund vieles mehr...\nDu wirst also komplett in die Lage versetzt, Deine eigenen Spiele zu entwickeln und lernst viele neue Fähigkeiten.\nDie Grundlage für diesen Kurs ist, dass Du zumindest Grundkenntnisse in Unity und in C# hast. Dabei ist z.B. mein Kompletter Unity 3D Kurs zu empfehlen. Jener Bietet die ideale Grundlage für diesen Kurs.\nDir steht wie bei allen meinen Kursen, ein super Support zur Seite, damit Du alles aus diesem Kurs rausholen kannst.",
      "target_audience": [
        "Videospielebegeisterte :)",
        "Jeder der schon ein bisschen mit Unity umgehen kann und viele neue Fähigkeiten in diesem Bereich erwerben möchte"
      ]
    },
    {
      "title": "Formation Création de Jeux Vidéo - Unreal Engine 4 avec NICO",
      "url": "https://www.udemy.com/course/formationue4avecnico/",
      "bio": "Formation pour apprendre à créer votre propre JEU VIDÉO de PLATEFORME EN 3D.",
      "objectives": [
        "Apprendre à utiliser Unreal Engine 4.",
        "Construire un niveau de jeu en 3D.",
        "Animer et contrôler un personnage.",
        "Créer un terrain (landscape).",
        "Créer des ennemis.",
        "Créer des plateformes mobiles.",
        "Créer des menus (widgets).",
        "Préparer son jeu pour l'exportation."
      ],
      "course_content": {},
      "requirements": [
        "Savoir utiliser un ordinateur de façon courante.",
        "Configuration minimale requise : Windows 7 64-bit, Intel Quad-core ou processeur AMD, 2.5 GHz ou plus.",
        "Carte graphique : NVIDIA GeForce 470 GTX ou AMD Radeon 6870 HD (ou supérieure).",
        "Ram : 8GB ou plus.",
        "Etre équipé d'une souris trois boutons."
      ],
      "description": "Bienvenue dans cette formation au développement de jeux vidéo avec Unreal Engine ! Grâce à ce cours, vous allez apprendre à créer vos propres jeux vidéo grâce au moteur Unreal Engine, le moteur le plus puissant et le plus populaire du moment. Nous allons ensemble créer un jeu vidéo de plateforme 3D !\nA qui s'adresse cette formation ?\nAucune connaissance n'est requise pour cette formation, nous allons voir absolument toutes les étapes de la création de ce jeu ! Elle s'adresse également aux développeurs voulant renforcer leurs bases.\nQu'allons nous voir ?\n\n- Tout d'abord nous allons découvrir l'interface et nous familiariser avec le logiciel Unreal Engine 4 (il s'agira d'ailleurs de la version 4.18 du logiciel). Nous commencerons dès le début à programmer un premier petit jeu pour découvrir ce qu'est le Blueprint !\n- Dans un second temps nous allons modéliser un terrain directement dans le logiciel, grâce aux outils landscape puis nous verrons comment ajouter de la végétation. Je vous fournis tous les objets 3D pour ce jeu, afin de vous faciliter la tâche dans l'apprentissage du logiciel.\n- J'ai consacré toute une section à l'apprentissage du Blueprint, avec à chaque fois des exemples concrets par soucis de clarté.\n- Nous passerons ensuite à l'importation et à la programmation d'un héro pour notre jeu. Nous découvrirons le \"character movement\", utile pour les déplacement du personnage puis nous apprendrons à mettre en place un \"animation blueprint\" pour animer notre personnage (Idle, course, saut combat !).\n- Enfin verrons comment optimiser un jeu via des commandes, ajouter des particules, améliorer l'image grâce au post-process volume, arranger les lumières, puis nous verrons comment exporter notre jeu pour les joueurs !\nAlors n'hésite plus et rejoins-nous dans cette formation dès maintenant !",
      "target_audience": [
        "Quiconque souhaite apprendre à créer un jeu vidéo sous Unreal Engine 4 sans connaissance préalable en développement."
      ]
    },
    {
      "title": "!Unreal Engine 5 دورة تطوير الالعاب المتكاملة باستخدام",
      "url": "https://www.udemy.com/course/unreal-engine-5-arabic/",
      "bio": "Unreal Engine 5 تعلم كيف تقوم بتطوير لعبة باركور في عالم مفتوح كاملة باستخدام",
      "objectives": [
        ".Unreal Engine 5 !ستتعلم بيئة العمل في احد افضل محركات الالعاب اطلاقا",
        "!Unreal Engine 5 ستقوم بتطوير لعبة كاملة من الصفر باستخدام",
        "!Unreal Engine 5 ستتعلم كيف تقوم بتصميم عالم لعبة متكامل باستخدام الادوات المساعدة في",
        "!ستتعلم كيف تصمم واجهة مستخدم تفاعلية"
      ],
      "course_content": {
        "Introduction - مقدمة": [
          "Course preview - العرض المسبق للدورة",
          "Downloading Unreal Engine - Unreal Engine تنزيل محرك",
          "User interface - واجهة المستخدم"
        ],
        "Pickup Actors - عناصر قابلة للاتقاط": [
          "First Blueprint - اول مخطوطة",
          "Coin code - كود العملة",
          "Continue coin - تكملة العملة",
          "Bomb - القنبلة",
          "Health - الصحة",
          "Challenge zone - منطقة التحدي",
          "Resetting pickups - اعادة اظهار العناصر"
        ],
        "Platforms - المنصات": [
          "Static & Moving platforms - المنصتان الثابتة والمتحركة",
          "Damaging platform - منصة الضرر",
          "Rotating platform - منصة الدوران",
          "Disappearing platform - منصة الاختفاء"
        ],
        "Open world creation - صناعة العالم المفتوح": [
          "World creation preview - العرض المسبق لصناعة العالم",
          "World creation - صناعة العالم",
          "Foliage - النباتات",
          "World creation tips - نصائح في صناعة العالم"
        ],
        "Character skills - مهارات الشخصية": [
          "Character setup - اعداد الشخصية",
          "Sprint Skill - مهارة الركض",
          "Double jump skill - مهارة القفز المزدوج",
          "Floating skill - مهارة الطفو",
          "Projectile skill setup - اعداد مهارة القذيفة",
          "Projectile skill - مهارة القذيفة"
        ],
        "User interface - واجهة المستخدم": [
          "Main widget - الواجهة الرئيسية",
          "Store widget setup - اعداد واجهة المتجر",
          "Store widget binding - ربط واجهة المتجر",
          "VFX & SFX - المؤثرات البصرية والصوتية"
        ],
        "Final touches - اللمسات الاخيرة": [
          "Challenges creation - صناعة التحديات",
          "Debugging - اصلاح الاخطاء",
          "Packaging the game - اصدار اللعبة"
        ]
      },
      "requirements": [
        ".لا تحتاج لان يكون لديك خبرة مسبقة بالبرمجة او في تطوير الالعاب لتتمكن من الاستفادة من محتويات الكورس",
        ".يفضل ان يكون لديك معرفة بسيطة باللغة الانجليزية لتسهيل التعلم"
      ],
      "description": "! Unreal Engine 5 سنقوم بتطوير لعبة كاملة من الصفر باستخدام محرك تطوير الالعاب الغني عن التعريف -\n. سنبدا بالتعرف على واجهة المحرك والقوائم الرئيسية -\n. سنتعرف على بعض المفاهيم الاساسية في البرمجة وسنتمكن من الاستفادة منها في تطوير اللعبة -\n. وهي طريقة لا تحتاج لكتابة اكواد برمجية في التطوير Blueprints سنتعرف على طريقة تطوير الالعاب بنظام -\n. سنتعلم كيف نقوم بتطوير مكونات اللعبة المختلفة وجعلها تتفاعل في عالم اللعبة وفيما بينها-\n. سنرى كيف يمكن ان تحصل على كل المكونات التي قد تحتاجها في تطوير العابك المستقبلية بشكل مجاني او مدفوع -\n. للقيام بذلك Unreal Engine 5 سنقوم بتصميم عالم اللعبة والتعرف على الادوات التي يقدمها -\n. سنقوم بتطوير واجهة مستخدم لعرض خواص الشخصية الرئيسية -\n. سنقوم بتطوير واضافة بعض المهارات لشخصية اللاعب لاضافة عمق وتحدي للعبة -\n. سنقوم بتطوير نظام حركة للشخصية ليتوافق مع المهارات المختلفة -\n. سنقوم بتطوير نظام متجر في اللعبة للحصول على المهارات الجديدة في مقابل اجتياز التحديات -\n. البسيطة التي سنستخدمها في تطوير اللعبة (Materials) سنصنع بعض المواد -\n. للحصول على بعض التاثيرات البصرية في اللعبة (Particle systems) سنتعلم كيف نقوم باضافة انظمة الجسيمات -\n. سنضيف بعض المؤثرات الصوتية وموسيقى داخل اللعبة لجعل العالم اكثر حيوية -\n. لجعل بيئة العمل افضل بالنسبك لك كمطور Unreal Engine 5 سنتعلم كيف يمكنك اضافة بعض الخصائص لمحرك -\n! وتجربتها حيث ستتمكن من مشاكرتها مع اصدقائك (Windows) وفي النهاية سنقوم بتصدير اللعبة لاجهزة وندوز  -",
      "target_audience": [
        ".المبتدئين في مجال تطوير الالعاب والبرمجة",
        ".Unreal Engine كل من لديه خبرة متوسطة في تطوير الالعاب باستخدام محركات اقل تطورا ويرغب في ان يبدا استخدام محرك"
      ]
    },
    {
      "title": "Unity C#|| 3D Fps || Hikayesi Olan Komple Oyun Yapıyoruz ||",
      "url": "https://www.udemy.com/course/unity-c-3d-fps-hikayesi-olan-komple-oyun-yapiyoruz/",
      "bio": "Herşeye Sıfırdan Başlayacağız | Unity nin Gücünü Kullanacağız.| Sağlam bir temel oluşturmak isteyen herkesi bekliyorum",
      "objectives": [
        "En başından başlayarak FPS türünün mantığı",
        "Uygulama üzerinde FPS ve birçok oyun türü için geçerli birçok farklı mekanik",
        "Unity Oyun motorunun gücünü kullanarak az kod çok mekanik mantığı",
        "Ana menüden başlayarak oyunun sonuna kadar adım adım...",
        "Oyun içine puzzlelar koyarak korku temalı tam bir proje yapacağız",
        "Mümkün olduğu kadar temiz ve anlaşılır kodlama",
        "Oyun Yapım Aşamasının Sadece Kodlama olmadığını Yaratıcılığın bu süreci ne kadar etkilediğini göreceğiz"
      ],
      "course_content": {
        "GENEL BİLGİLENDİRME": [
          "KURS TANITIM"
        ],
        "UNITY KURULUM ve ARAYÜZ TANITIM": [
          "Unity Kurulum ve Sürüm Seçme",
          "Unity Arayüz Tanıtımı",
          "Unity AssetStore Kullanımı"
        ],
        "NESNE İŞLEMLERİ(GameObject)": [
          "Scene & Game Paneli",
          "Nesne Oluşturma Ve Yön Hareketleri",
          "GameObject - Component İlişkisi",
          "Material Oluşturma",
          "Textures İşlemleri"
        ],
        "CAMERA & LİGHT & CANVAS": [
          "CAMERA",
          "LIGHT // Işık",
          "CANVAS // UI"
        ],
        "Oyun Alanı Yapımı(TERRAIN)": [
          "Terrain İşlemleri-1",
          "Terrain İşlemleri-2",
          "Terrain İşlemleri-3"
        ],
        "Animasyon Yapımı": [
          "Animasyon-1 (Animation)",
          "Animasyon-2(Animation)",
          "Animator",
          "Mixamo -3D Karakter Oluşturma"
        ],
        "C# TEMEL EĞİTİM": [
          "C# Giriş",
          "Fonksiyonlar",
          "Veri Tipleri-1",
          "Veri Tipleri-2",
          "Var Değişkeni",
          "Karşılaştırma Operatörleri",
          "Mantıksal Operatörler",
          "Component Tanımlama",
          "Private -Public Erişim",
          "If Koşulu",
          "For Döngüsü",
          "While-DoWhile Döngüsü",
          "Diziler ve Listeler",
          "Foreach Döngüsü",
          "For ve Array Uygulama"
        ],
        "OYUN UYGULAMA || Sahne-1": [
          "Oyun Alanı Oluşturma",
          "FPS Controller Ekleme",
          "Oyun Alanı Devam-2",
          "Oyun Alanı Devam 3",
          "Oyun Alanı-4"
        ],
        "Kapı Sistemi": [
          "Kapı Sistemi-1",
          "Kapı Sistemi-2",
          "RayCast İle Mesafe Ölçümü",
          "Kapı Etkileşim",
          "Kapı Etkileşim-2",
          "Kapı Mekaniği Devam-1",
          "Kapı Mekaniği Devam-2",
          "Kapı Mekaniği Devam -3",
          "Kapı Mekaniği Devam - 4"
        ],
        "Sahne 1 Devam": [
          "Crosshair Yapımı",
          "Slider Gate Yapımı",
          "Anahtar ve Kapı",
          "Anahtar ve Kapı -2",
          "Odaların Dizaynı",
          "Güvenlik Odasının Yapımı"
        ]
      },
      "requirements": [
        "Tek ihtiyacımız bir adet bilgisayar olacaktır. Herşeye sıfırdan başlıyor olacağız.",
        "Kodlama bilmek avantaj olmakla birlikte bilmiyormuşcasınıza başlayacağız :)"
      ],
      "description": "Oyun yapımının kodlamadan ibaret olmadığını uygulayarak göreceğiz , oyun yapım sürecinde karşılaşılabilecek birçok sorunu ve yöntemi bir proje üstünde aşmaya çalışacağız. Bir sahneden oluşan bir iki mekanik içeren ve  buglarla dolu  7 8 oyuncuk yapmak yerine,  birçok oyun türü için sağlam bir referans ve temel  oluşturacak bir proje yapacağız. Size yolu göstermeye çalışacağım ne noktaya, ne kadar uzağa gideceğiniz sizin hayal gücünüze ve sınırlarınıza bağlı olacak, bu sihirli dünyaya hepinizi bekliyorum.\nKısa bir c# bölümü hazırladım tamamen uygulama projesinde karşımıza çıkabilecek kısımlara önceden aşina olabilmek adına hazırlandı.\nAyrıca Uygulamada kullanacağımız unity özelliklerini kısa kısa ön bilgi olarak anlatmaya çalıştığım bir teorik kısmımız olacak. Kursun geri kalan kısmı ise tamamen uygulama olacak.\nTamamen uygulama ile ezbere dayalı şu şudur, bakın burda bu var, şunu şurdan çektik yerine nedenlere odaklanmaya çalıştım . Unity Çok kapsamlı ve detaylı bir oyun motoru bütün ekranlara bütün özelliklere biranda aşina olup Profesyonelleşmek malesef mümkün değil ama temel olarak hangi özellikleri nereden nasıl eklediğimizi anlayacağız ve zamanla üstüne koymak sizlere kalacak. Bu eğitim boyunca unity ile neler yapabileceğimizi öğreneceğiz ve öğrendiğiniz şeyleri farklı açılardan bakmayı göstermeye çalıscam yani öğrendiğiniz bir özellikle farklı şeylerde yapılabileceğini zamanla sizde göreceksiniz ve bu esnada bol bol zihnimizi çalıştıracağız.\nUmarım hepiniz hayallerinize benim ile bir adım daha yaklaşacaksınız.",
      "target_audience": [
        "Sıfırdan başlayarak bu alanda kendini geliştirmek isteyenler",
        "Bu sektöre adım atmak isteyenler",
        "Belli bir bilgi birikimi olup kendini geliştirmek isteyenler",
        "Yaratılcılığa ,üretkenliğe değer verenler"
      ]
    },
    {
      "title": "Pythonで作る レトロ風RPG: Pythonの基礎からWindows向けゲーム開発まで",
      "url": "https://www.udemy.com/course/python-retro-rpg/",
      "bio": "Pythonの基礎から学び、PythonとPygameを使ってWindows向けゲームを作り、EXE化までおこなう講座",
      "objectives": [
        "Pythonの基本を身に付けます",
        "Python用ゲームライブラリPygameの使い方を学びます",
        "Pythonを使って簡単なレトロ風RPGを作ります",
        "Windows用アプリケーションとしてPythonプログラムをEXE化します"
      ],
      "course_content": {
        "第1章 イントロダクション": [
          "コース全体のロードマップ",
          "どんなゲームを作るか",
          "使用する素材",
          "問題に答えよう",
          "ソースコードについて"
        ],
        "第2章 開発環境の構築": [
          "この章で学ぶこと",
          "Visual Studio Codeでの準備",
          "CLIのディレクトリ",
          "Pythonの導入",
          "venvの利用",
          "venvの利用 2",
          "Pygameの導入",
          "PyInstallerの導入",
          "mypyの導入"
        ],
        "第3章 Pythonの基本的な文法": [
          "この章で学ぶこと",
          "Pythonの特徴",
          "変数や単純な型",
          "変数や単純な型 2",
          "変数や単純な型 3",
          "変数や単純な型 4",
          "複数の値を格納する型",
          "複数の値を格納する型 2",
          "複数の値を格納する型 3",
          "複数の値を格納する型 4",
          "複数の値を格納する型 5",
          "処理をまとめる関数",
          "処理をまとめる関数 2",
          "処理をまとめる関数 3",
          "条件分岐",
          "条件分岐 2",
          "繰り返し処理",
          "繰り返し処理 2",
          "繰り返し処理 3",
          "例外処理",
          "例外処理 2",
          "モジュール",
          "モジュール 2",
          "モジュール 3",
          "クラス",
          "クラス 2",
          "クラス 3",
          "クラス 4",
          "async/await"
        ],
        "第4章 Pygameの使い方": [
          "この章で学ぶこと",
          "Pygameの基本的な処理",
          "Pygameの基本的な処理 2",
          "Pygameの基本的な処理 3",
          "Pygameの基本的な処理 4",
          "画像描画",
          "画像描画 2",
          "図形描画",
          "図形描画 2",
          "図形描画 3",
          "図形描画 4",
          "文字描画",
          "文字描画 2",
          "スプライト",
          "スプライト 2",
          "キー入力",
          "マウス入力",
          "音声（BGMとSE）"
        ],
        "第5章 main.pyと初期化": [
          "この章で学ぶこと",
          "プログラムの開始場所",
          "プログラムの開始場所 2",
          "初期化",
          "実行のバッチファイル",
          "練習をしよう"
        ],
        "第6章 データを作ろう": [
          "この章で学ぶこと",
          "保存するデータ ゲーム",
          "保存するデータ ゲーム 2",
          "保存するデータ アイテム",
          "保存するデータ マップ",
          "保存するデータ マップ 2",
          "保存するデータ マップ 3",
          "保存するデータ マップ イベント",
          "補助的な関数群 成長",
          "補助的な関数群 入出力",
          "補助的な関数群 入出力 2",
          "補助的な関数群 入出力 3",
          "保存しないデータ アクション",
          "保存しないデータ アプリケーション",
          "保存しないデータ 音声",
          "保存しないデータ バトル",
          "保存しないデータ 敵",
          "保存しないデータ シーン",
          "練習をしよう"
        ],
        "第7章 画像や描画の処理": [
          "この章で学ぶこと",
          "スクリーン",
          "スクリーン 2",
          "ユーティリティ",
          "スプライト キャラクター",
          "スプライト キャラクター 2",
          "スプライト マップ",
          "フォント",
          "ダイアログ",
          "練習をしよう"
        ],
        "第8章 ゲームの処理": [
          "この章で学ぶこと",
          "BGMとSE",
          "キーなどのイベント",
          "シーンとシーン管理",
          "練習をしよう"
        ],
        "第9章 タイトル シーン": [
          "この章で学ぶこと",
          "メイン",
          "描画 キャラクター",
          "描画 テキスト",
          "練習をしよう"
        ],
        "第10章 マップ シーン": [
          "この章で学ぶこと",
          "メイン",
          "マップの移動",
          "マップの移動 2",
          "イベント管理",
          "イベント管理 2",
          "描画 キャラクター",
          "描画 アイテム",
          "描画 ミニマップ",
          "描画 テキスト",
          "描画 その他",
          "練習をしよう"
        ]
      },
      "requirements": [
        "Windowsパソコンで開発をおこないます",
        "Windows用のアプリケーションとしてゲームを作ります",
        "エディタとして無料の Visual Studio Code を利用します"
      ],
      "description": "このコースでは、Pythonの基礎からはじめ、レトロ風RPGを作り、配布可能なWindowsのEXEファイルを作るまでを学びます。\n\n\nあなたはこのコースで、次のような事を学びます。\n\n\n・PythonでWindows向けアプリケーションを作るときの環境構築。\n・Pythonの文法の基本。\n・Python向けゲームライブラリPygameの使い方。\n・タイトル、マップ、バトルといったシーン移動をともなうレトロ風RPGの開発。\n・配布可能なWindows向けEXEファイルの作成。\n\n\nコースで紹介する文法やゲームのコードは、サンプルとして全てダウンロードできます。\n\n\n‥‥‥‥‥‥‥‥‥‥\n\n\nコースは、次のように進みます。\n\n\n● 第1章 イントロダクション\n・コースの説明\n・作成するレトロ風RPGの説明\n\n\n● 第2章 開発環境の構築\n・Visual Studio Codeでの準備\n・Pythonの導入\n・venvの利用\n・Pygameの導入\n・PyInstallerの導入\n・mypyの導入\n\n\n● 第3章 Pythonの基本的な文法\n・Pythonの特徴\n・変数や単純な型、複数の値を格納する型\n・関数、条件分岐、繰り返し処理、例外処理\n・モジュール、クラス、async/await\n\n\n● 第4章 Pygameの使い方\n・Pygameの基本的な処理\n・画像描画、図形描画、文字描画、スプライト\n・キー入力、マウス入力、音声\n\n\n● 第5章 mainと初期化\n・プログラムの開始場所\n・初期化\n\n\n● 第6章 データを作ろう\n・保存するデータ\n・ゲーム、アイテム、マップ、イベント\n・処理\n・成長、JSON入出力\n・保存しないデータ\n・アクション、アプリケーション、音声、バトル、敵、シーン\n\n\n● 第7章 画像や描画の処理\n・画面、画像、文字、ダイアログの表示など\n\n\n● 第8章 ゲームの処理\n・BGMとSE\n・キーなどのイベント\n・シーンとシーン管理\n\n\n● 第9章 タイトル シーン\n・キャラクターの描画\n・テキストの描画\n\n\n● 第10章 マップ シーン\n・移動とイベント管理\n・キャラクターとマップの描画\n・ステータスとミニマップの描画\n\n\n● 第11章 バトル シーン\n・メニューと進行管理\n・戦闘画面の表示\n・戦闘の計算\n・エフェクト表示\n\n\n● 第12章 EXE化して遊ぼう\n・ゲームのEXE化\n・画像保存\n\n\n‥‥‥‥‥‥‥‥‥‥",
      "target_audience": [
        "Pythonの基本を身に付けたい人",
        "Pythonでゲームを作ってみたい人",
        "Windowsパソコン用のゲームを作りたい人"
      ]
    },
    {
      "title": "Полный курс. Создание 2D платформера на Unity | 2020",
      "url": "https://www.udemy.com/course/unity-2020/",
      "bio": "Научитесь лучшим практикам на примере создания игры-платформера с нуля!",
      "objectives": [
        "Создание полноценной игры с абсолютного нуля",
        "Написание чистого и понятного кода",
        "Лучшие практики использования самых распространенных методов разработки игры"
      ],
      "course_content": {
        "Введение": [
          "Введение"
        ],
        "Знакомство с Unity": [
          "Введение в модуль",
          "Установка VS Code",
          "Создаем проект",
          "Первый объект на сцене. Sprite",
          "Камера. Какую роль она играет в Unity",
          "Группировка объектов"
        ],
        "Первый простой персонаж": [
          "Введение в модуль",
          "Создаем первого персонажа с физикой",
          "Collider",
          "Заставляем игрока бесконечно двигаться",
          "FixedUpdate и SerializeField",
          "Замораживаем вращение по оси Z. FixedDeltaTime",
          "Передвижение с помощью Input",
          "Прыжок!"
        ],
        "Окружение. Tilemap": [
          "Введение в модуль",
          "Asset Store. Магазин ассетов",
          "Ознакомление с проблемой окружения",
          "Разделяем спрайты на подспрайты",
          "Создаем Tilemap",
          "Единица измерения - Units",
          "Отрисовываем окружение",
          "Камера, следующая за игроком",
          "Cinemachine",
          "Исправляем TileCollider2D",
          "Platform Effector 2D"
        ],
        "Новая модель персонажа с анимацией": [
          "Введение в модуль",
          "1. Импортируем персонажа из Asset Store",
          "Работаем с Order in Layer",
          "Добавляем PlayerController новому персонажу",
          "Добавляем анимацию игроку"
        ],
        "Начало, середина и конец уровня": [
          "Введение в модуль",
          "Отдаляем камеру",
          "Создание финиша",
          "Пишем логику для финиша",
          "Как работает IsTrigger",
          "Добавляем рычаг",
          "Скрипт Finish",
          "Добавляем логику для рычага",
          "Почему именно эта логика для рычага"
        ],
        "Добавляем противников": [
          "Введение в модуль",
          "Первый враг на сцене",
          "EnemyController. Скрипт для контроля движения нашего врага",
          "Двигаем врага вправо",
          "Называем переменные правильно",
          "Как будет патрулировать наш противник?",
          "Заставляем врага ждать",
          "Полноценный патруль местности",
          "Как будет работать зрение нашего противника",
          "Зрение",
          "Layer Mask",
          "Полностью рабочий EnemyVision",
          "Как будет работать режим преследования",
          "Режим преследования",
          "Включаем режим преследования",
          "Поворачиваем врага",
          "Исправляем баги",
          "Добавляем таймер и скорость преследования",
          "Исправляем небольшой баг"
        ],
        "Боевая система": [
          "Введение в модуль",
          "Режим атаки",
          "Атакуем врага",
          "Здоровье врага",
          "Исправляем спрайты врага",
          "Игрок получает урон"
        ],
        "User Interface (UI)": [
          "Введение в модуль",
          "Главное меню",
          "Украшаем наш UI",
          "Добавляем функционал кнопкам",
          "UI для полоски здоровья",
          "Привязка здоровья к слайдеру",
          "Исправляем слайдер",
          "Добавляем полосу здоровья противнику",
          "Меняем структуру противника",
          "Исправляем все баги",
          "Как мы поменяли структуру врага",
          "Окно Game Over",
          "Задаем функционал кнопкам в окне Game over",
          "Анимация появления Game over",
          "Кнопка паузы и меню паузы",
          "Ставим игру на паузу"
        ],
        "Звуки и Музыка": [
          "Введение в модуль",
          "Музыка в главном меню",
          "Звук прыжка",
          "Звуки ударов и получения урона",
          "Меняем звук получения урона",
          "Игровая фоновая музыка"
        ]
      },
      "requirements": [
        "Знание ООП (Объектно Ориентированное Программирование) на базовом уровне",
        "Знание какого нибудь языка программирования. Например: C#, Java, Javascript, C++ или другое",
        "Желание написать свою собственную игру и выпустить ее для широкой публики"
      ],
      "description": "Любите играть в игры? Хочется тоже начать создавать свои игровые проекты, но вы не знаете с чего начать, так как в интернете все разбросано и не понятно, идете ли вы по правильному пути?\nТогда этот курс точно для Вас!\nЗдравствуйте, друзья! Меня зовут Анвар Абдулсатаров и я являюсь автором этого курса\nЭтот курс предназначен для студентов, которые знают какой нибудь язык программирования и хотят использовать эти знания в игровой индустрии. Студенты, на которых рассчитан этот курс, это начинающие и средние игровые разработчики, которые хотят как можно быстрее понять, как сделать игру наиболее быстрым, эффективным, правильным способом, и самое главное, понять ПОЧЕМУ используется то, или иное решение\nВ конце этого курса, вы сможете приступить к созданию своей собственной игры. Так же, у вас всегда будет несколько решений проблем, возникающих при разработке игры и вы будете точно знать какое из этих решений самое оптимальное и, самое главное, вы будете знать причину, почему нужно использовать именно выбранное вами решение.\nВ этом курсе покрываются не только простые, но и более сложные и интересные темы, такие как создание анимации, работа с физикой, raycasting, префабы, создание графического интерфейса, добавление звуков и музыки, отрисовка окружения с помощью Tilemap, манипуляция игровым временем и множество других тем, которые заставят быстро понимать все тонкости этого игрового движка.\nЕсли вы все еще сомневаетесь и думаете, что моя методика обучения может вам не подойти, то у меня для вас отличная новость!Приобретая курс на платформе udemy, Вы в течении 30 дней можете от него отказаться и вернуть все свои деньги.\nНо я надеюсь, что он вам понравится =)",
      "target_audience": [
        "Люди, знающие какой либо язык программирования, которые хотят создавать игры",
        "Начинающие игровые разработчики",
        "Средние игровые разработчики, которые хотят подтянуть свои знания и узнать что то новое"
      ]
    },
    {
      "title": "Unity Veritabanlı Bilgi Yarışması Oyunu PHP-MYSQL (Mobil)",
      "url": "https://www.udemy.com/course/unity-bilgi-yarismasi-oyunu-php-mysql-mobil/",
      "bio": "Hadi Sizlerde Bilgi Yarışması Oyunu Geliştirin",
      "objectives": [
        "Bilgi Yarışması Oyunu Geliştirme",
        "Unity Veritabanı Bağlantısı",
        "Php-Mysql Veritabanı İşlemleri"
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Anamenu Sahnesi": [
          "Proje Oluşturma ve Kayıt Paneli Tasarımı",
          "İnternet Kontrol Scripti Geliştirme",
          "Kullanıcı Kayıt Sistemi Geliştirme",
          "Kullanıcı Kayıt Sistemine Son Dokunuşlar ve Anamenu Paneli"
        ],
        "Oyun Sahnesi": [
          "Oyun Sahnesi Tasarımı",
          "Sorular Tablosunu Oluşturma Ve Unity Arayüzüne Çağırma (JSON)",
          "Sorularımızı Oyun Sahnesindeki Nesnelerle Etkileşime Geçirme",
          "Oyun Mekaniği Geliştirme",
          "Game Over Paneli Geliştirme",
          "%25-%50 Rastgele Çalışan Jokerler Geliştirme",
          "Pas Ve Doğru Cevap Jokeri Geliştirme",
          "Çift Cevap Jokeri Geliştirme",
          "Joker Sistemine Son Dokunuşlar",
          "Oyun İçi Skor Sistemi Geliştirme",
          "Oyun Sahnesi Son Dokunuşlar"
        ],
        "Yüksek Skor Sahnesi": [
          "Yüksek Skor Sahne Tasarımı ve Birim Kullanıcı Model Oluşturma",
          "Static ve Dinamik Content Yüksekliği Ayarlama",
          "Yüksek Skor Veritabanı İşlemleri (JSON)",
          "Kullanıcı Resimleri İçin Rastgele Resources Klasorü Kullanımı"
        ],
        "Son Detaylar": [
          "Build Almadan Önce Neler Yapmalıyız? Karşılaşılan Hatalar Nelerdir?",
          "Localhost'tan Web Hosting'e Taşıma İşlemleri"
        ]
      },
      "requirements": [
        "Temel Programlama Bilgisi",
        "Temel C# Bilgisi",
        "Temel Unity Bilgisi",
        "Temel Veritabanı Bilgisi"
      ],
      "description": "Bu kurs ile birlikte Unity3D Oyun Motoru, Mysql Veritabanı ve Php ara katman kullanılarak nasıl mobil bilgi yarışması oyunu geliştirebileceğinize değinilip sonrasında oyunumuzun son haline geldiğinde nasıl Build alınacağını ve Build alırken karşılaşılacak sorunlara nasıl çözümler yapmamız gerektiğinden bahsedilmiştir. Son olarak ise oyunumuzu herkesin oynayabilmesi için Hostinge taşıma işlemlerinin nasıl gerçekleştirildiği anlatılmıştır.",
      "target_audience": [
        "Oyun Geliştirmeye Meraklı Kişiler",
        "Bilgi Yarışması Oyunu Geliştirmek İsteyen Kişiler",
        "Unity İle Veritabanı Kullanımı Öğrenmek İsteyen Kişiler",
        "Sorunlara Farklı Çözüm Yöntemleriyle Bakmak İsteyen Kişiler"
      ]
    },
    {
      "title": "Criação de mods para Minecraft do zero com MCreator",
      "url": "https://www.udemy.com/course/criacao-de-mods-para-minecraft-com-mcreator/",
      "bio": "Curso completo sobre como desenvolver mods para Minecraft usando ferramentas como MCreator, BlockBench e Photoshop",
      "objectives": [
        "Desenvolvimento de mods para minecraft do zero, usando o MCreator",
        "Modelagem 3D para Minecraft usando o BlockBench",
        "Criação de texturas e texturas animadas para Minecraft usando o Photoshop e MCreator",
        "Pixel Art",
        "Programação Drag and Drop"
      ],
      "course_content": {
        "O básico do MCreator": [
          "Antes de começar... Link para baixar o MCreator",
          "Instalação, criação do projeto e interface",
          "Editor de imagens do MCreator e criação de texturas",
          "Criação de items, blocos e receitas"
        ],
        "Programando no MCreator": [
          "Antes de começar... Um pouco sobre lógica de programação",
          "Variáveis, eventos e procedimentos",
          "Procedimentos e parâmetros de procedimentos",
          "Workspace remoto com o Github"
        ],
        "Texturas avançadas e modelagem 3D": [
          "Antes de começar... Link para baixar o Block Bench",
          "Blocos 3D com Block Bench",
          "Texturas animadas",
          "Espadas, ferramentas e tabs do criativo",
          "Geradores do MCreator e Itens 3D com Block Bench"
        ],
        "Outros elementos do MCreator": [
          "Armaduras e armas",
          "Biomas e plantas",
          "NBT Tags e baús com chave",
          "Loot Table e estruturas",
          "Entidades e modelagem de entidades 3D",
          "Key binding, overlays e barra de sede",
          "GUIs e mochilas",
          "Combustível, comida e discos de música",
          "Dimensão e fluidos",
          "Avanços, poções e tags",
          "Funções, comandos e a tradução do mod"
        ],
        "Publicando seu mod": [
          "Exportando e publicando o mod",
          "Atualizando e instalando o mod"
        ]
      },
      "requirements": [
        "Este curso não requer conhecimento prévio de programação."
      ],
      "description": "Neste curso você irá aprender a desenvolver mods para Minecraft sem a necessidade de saber programação, fazendo tudo de forma simples e automatizada através do MCreator, um poderoso software de criação de mods.\nVocê vai ter uma visão ampla de todas as funcionalidades do MCreator, aprender a criar vários tipos de elementos, como blocos, itens, armas, magias, criaturas, biomas, dimensões e muito mais. Além disso, irá aprender a fazer modelagem 3D, animação de texturas e modelos, texturização e programação através de blocos, usando programas como Block Bench e Photoshop.\nTambém irá ver os conceitos básicos sobre o desenvolvimento de software, como usar o Github para hospedar e compartilhar seu projeto e como fazer a publicação do seu mod no site do MCreator e no site CurseForge.\nSe você gosta de Minecraft e sempre sonhou em criar seu próprio mod este curso é para você, matricule-se agora e aproveite esta oportunidade!",
      "target_audience": [
        "Jogadores de Minecraft",
        "Desenvolvedores iniciantes de jogos",
        "Desenvolvedores de mods"
      ]
    },
    {
      "title": "Unreal Engine 5: Blueprint Cơ Bản",
      "url": "https://www.udemy.com/course/unreal-engine-5-blueprint-co-ban/",
      "bio": "Học Unreal để làm game Nhập Vai chiến đấu với AI",
      "objectives": [
        "Làm game Unreal Engine 5.1 bằng Blueprint",
        "Khóa học về Unreal AI tốt nhất",
        "Cách dùng Animation Blueprint hiệu quả nhất",
        "Điều khiển nhân vật bằng Enhanced Input",
        "Cách thêm nhiều âm thanh khác nhau vào game như tiếng bước chân, nhạc nền",
        "HUD, Widget"
      ],
      "course_content": {
        "Giới thiệu": [
          "Giới thiệu khóa học",
          "Cách đặt câu hỏi"
        ],
        "Chuẩn bị": [
          "Project hoàn chỉnh",
          "Tải Unreal Engine 5.1",
          "Tạo Project đầu tiên",
          "Cách mở Project",
          "Giao diện Unreal Editor",
          "Import Starter Content"
        ],
        "Thao tác trong Level": [
          "Giới thiệu chương",
          "Actor là gì?",
          "Di chuyển trong Viewport",
          "Select Actor",
          "Transform Actor",
          "Đặt Actor vào Level",
          "Đổi vị trí Pivot"
        ],
        "Tạo Level cơ bản": [
          "Giới thiệu chương",
          "Tạo Level đầu tiên",
          "Sky Atmosphere và Sky Light",
          "Exponential Height Fog",
          "Volumetric Cloud",
          "Thiết kế Level cơ bản",
          "Thiết kế Level cơ bản 2",
          "Thử thách"
        ],
        "Blueprint cơ bản": [
          "Giới thiệu chương",
          "Tạo class Blueprint",
          "Event BeginPlay",
          "Event Tick",
          "Add Actor Offset",
          "FPS",
          "Biến trong Blueprint",
          "Sin Cos Tan",
          "Function",
          "Sắp xếp Blueprint",
          "Chuyển Actor sang Blueprint",
          "Level Blueprint",
          "Thử thách"
        ],
        "Class Pawn": [
          "Giới thiệu chương",
          "Class Pawn",
          "Class Controller",
          "Giới thiệu Enhanced Input",
          "Enhanced Input",
          "Di chuyển trái phải",
          "Di chuyển 4 hướng",
          "Floating Pawn Movement Component",
          "Game Mode",
          "Player Start",
          "Nhìn xung quanh",
          "Đổi trục di chuyển (tùy chọn)",
          "Spring Arm Component",
          "Xoay Pawn theo Controller"
        ],
        "Class Character": [
          "Giới thiệu chương",
          "Skeletal Mesh là gì?",
          "Skeletal Mesh Component",
          "Class Character",
          "Di chuyển theo hướng của Controller",
          "Plugin Auto Size Comments",
          "Animation Blueprint",
          "Blend Poses by bool",
          "State Machine",
          "Nhảy",
          "Animation Nhảy",
          "Animation Nhảy 2",
          "Xử lý Rơi xuống",
          "State Alias",
          "Sửa màu Comment"
        ],
        "Nhân vật Crunch": [
          "Tải Paragon: Crunch",
          "Đổi Nhân Vật mới",
          "Acceleration trong Animation",
          "Acceleration trong Animation 2",
          "Lỗi Texture Pool"
        ],
        "Tấn công cơ bản": [
          "Giới thiệu chương",
          "Animation Montage",
          "Event Attack",
          "Không Spam Attack",
          "Anim Notify",
          "Layered blend per bone",
          "Layered blend per bone 2",
          "Object Type",
          "Collision Attack",
          "Event Attack Overlap",
          "Physics Asset",
          "Line Trace For Objects",
          "Multi Line Trace For Objects",
          "Sphere Trace For Objects",
          "Custom Object Chanel",
          "Chỉ Hit Actor 1 lần",
          "Trace Hit Attack",
          "Anim Notify State",
          "Chỉ Trace Hit khi gây sát thương",
          "Attack bằng tay phải"
        ],
        "Tấn công nâng cao": [
          "Interface",
          "Attack Interface",
          "Attack Component",
          "Combo",
          "Save Attack",
          "Attack Index",
          "Danh sách Attack Montage",
          "Trace Color trái, phải",
          "Tải Paragon: Minions",
          "Enemy Character",
          "Kẻ Địch tấn công",
          "Class Player và Enemy",
          "Apply Damage",
          "Fix Apply Damage",
          "Apply Point Damage",
          "Spawn Hit Impact Effect",
          "Chỉnh Physics Asset",
          "Hit React",
          "Hit React Front - Back",
          "Hit React Left Right"
        ]
      },
      "requirements": [
        "Không yêu cầu kinh nghiệm lập trình, bạn sẽ học từ cơ bản nhất!"
      ],
      "description": "Khóa học Unreal Engine 5 Blueprint: Blueprint Cơ Bản\nKhóa học này sẽ giúp bạn làm một tựa game hoàn chỉnh, chỉ bằng Blueprint.\nMình sẽ bắt đầu từ những kiến thức cơ bản nhất. Chẳng hạn như cách tạo project, di chuyển camera trong level và đặt đối tượng vào level. Sau đó, mình sẽ tạo một level mới và điều chỉnh ánh sáng để tạo một màn chơi cơ bản.\nTiếp theo, bạn sẽ học về class Pawn. Mình có thể điều khiển Pawn di chuyển trong game, bằng chuột và bàn phím, thông qua hệ thống Enhanced Input của Unreal Engine 5.\nSau khi bạn đã quen với việc sử dụng Blueprint, mình sẽ hướng dẫn bạn tạo một nhân vật có animation hoàn chỉnh, và học nhiều cách để quản lý animation hiệu quả.\nKhóa học cũng tập trung vào việc thêm âm thanh, và hiệu ứng vào game, giúp nâng tầm trải nghiệm chơi game!\nPhần AI là điểm mạnh của khóa học này. Mình sẽ hướng dẫn bạn hiểu rõ về Unreal AI, Behavior Tree, và những kiến thức liên quan về Unreal AI, để kẻ địch trong game có thể tự vận hành được.\nNhững chương cuối, bạn sẽ học cách thêm nhiều tính năng hay vào game, và build project thành một tựa game hoàn chỉnh.\n\n\nHy vọng bạn sẽ đồng hành cùng mình trong khóa học này. Hẹn gặp bạn ở khóa học!",
      "target_audience": [
        "Những bạn chưa có kinh nghiệm lập trình, code",
        "Những bạn mới bắt đầu, hoặc chưa từng làm game",
        "Những bạn muốn học cách làm game hiệu quả, ít lỗi, workflow mượt mà, tối ưu",
        "Những bạn thích làm game có đồ họa đẹp trong Unreal Engine"
      ]
    },
    {
      "title": "UNITY3D Réalisez un First Person Shooter-FPS | Guide complet",
      "url": "https://www.udemy.com/course/unity3d-realisez-un-first-person-shooter-fps-guide-complet/",
      "bio": "Apprenez a créer votre FPS Game de A à Z | Réaliser des ennemis avec IA et animations.",
      "objectives": [
        "Créer un Player - Fisrt Person Shooter (FPS)",
        "Créer des armes et les gérer",
        "Créer des ennemis avec des animations",
        "Créer des missions de niveau",
        "Coder en C# et Unity",
        "Etre Autonome dans le développement de jeu vidéo"
      ],
      "course_content": {
        "Introduction et installation de UNITY3D": [
          "Introduction"
        ],
        "Les Bases d'Unity3D": [
          "Découverte de l'interface",
          "Les objets",
          "La Physique",
          "Les composants",
          "Les Materiaux",
          "Gestions des scenes",
          "Les prefabs",
          "Asset Store",
          "Information importante : Standard Asset",
          "Standart Assets",
          "Skybox",
          "L'outils de modélisation de terrain",
          "Zone de vent (Wind)",
          "La Lumiére (Light)",
          "L'Audio et effet sonore",
          "Les Bases de UNITY3D"
        ],
        "Les Bases du C#": [
          "Les Scripts et leur methodes",
          "Les Variables",
          "Les Conditions",
          "Array (Tableau)",
          "Les Boucles",
          "Quizz 2"
        ],
        "API Unity3D et le C#": [
          "Les Vecteurs - Vector2 et Vector3",
          "Get Component - Modification des composants par script",
          "Gestion des touches clavier (input) et déplacements",
          "Appliquer une force a un objet - Rigidbody",
          "Les Collisions d'objets grâce au méthode",
          "Raycast - Tester la présence d'un objet",
          "Coroutine - Pause dans l’exécution d'instruction",
          "Introduction a l'animation et l'animator",
          "Accéder a une variable public depuis un autre gameobject",
          "Introduction UI - User Interface",
          "Instantiate - Spawner des objets",
          "Scène Manager et compilation du jeux",
          "Quizz 3"
        ],
        "TP Mon Premier Jeu Avec Unity3D": [
          "Conseils et consignes pour le TP.",
          "Correction du TP"
        ],
        "Création du First person Shooter": [
          "Mise en place du player FPS",
          "Utilisation du Raycast pour le Tir",
          "Gestion de la repetition de Tir",
          "Gestions des cartouches",
          "Chargeurs Vide (son)",
          "Impacts de balles",
          "Étincelles a l'impact",
          "Animation Idle du FPS",
          "Animations walk et run",
          "Animations reload et fire",
          "Synchronisation des animations avec les déplacements du FPS",
          "Clipping de camera (arme qui traverse les murs)",
          "Flammes a la sortie du canon de l'arme",
          "Correction du script pour l'animation Reload",
          "Mise en place de l' arme Secondaire",
          "Animations de l'arme secondaire",
          "Synchronisation des animations de l'arme secondaire avec les déplacements du FPS",
          "Flammes a la sortie du canon de l'arme secondaire",
          "Animation de Transition d'arme",
          "Script ArmeManager"
        ],
        "Création de l'UI User Interface de notre Player FPS": [
          "UI Gestions des Munitions",
          "Modification script de tir chargeur vide.",
          "UI Barre de vie du Player FPS"
        ],
        "Custom Package FPS Player": [
          "Exportation custom package",
          "Importation du package dans un nouveau projet"
        ],
        "Création d'un Niveau de jeu": [
          "Mise en place de l'asset Subway Kit",
          "Mise en place du modèle 3D de l' ennemi"
        ],
        "Développement de L' IA de l'ennemi": [
          "Mise en place de l'agent de navigation et du navmesh",
          "Animation Walk et intelligence artificielle de l'ennemie",
          "Animation Attack de l'ennemi",
          "Animation et Script dead de l'ennemi",
          "Dégâts occasionnés au player",
          "Effet sonore de l'ennemi",
          "Paramètre \"Curve\" de l'animation Dead",
          "Paramètre \"Event\" de l'animation Dead",
          "Vitesse de déplacement aléatoire des ennemis",
          "Création du \"prefab\" ennemis Parasite"
        ]
      },
      "requirements": [
        "De la motivation !",
        "et aussi un peu de motivation !"
      ],
      "description": "Bienvenue dans cette formation complète sur Unity3D et le développement d'un Jeu First Person Shooter (FPS)\nCette formation va vous permettre de développer un jeu à la première personne, mais aussi d' apprendre a maîtriser Unity3D et le C# pour atteindre vos objectifs mais aussi développer vos compétences par la pratique.\nCette formation a pour vocation de vous apprendre à maîtriser deux outils :\nle langage de programmation C#\nle moteur de jeu Unity\nVous apprendrez à utiliser ces deux technologies conjointement ou séparément pas à pas.\nVous disposerez des ressources (Projet complet , modèles 3D, sons, etc...) afin de suivre ce cours le plus facilement possible et pourquoi pas, les réutiliser dans votre propre FPS GAME?\nTous les chapitres sont enregistrés en HD 1080p pour que vous puissiez tout voir clairement pendant le cours (vous pouvez regarder les previews gratuites).\nJe répondrai personnellement à vos questions si vous en avez, et je fournirai autant d'aide que possible pour vous aider à maîtriser le C# et Unity.\nN'attendez plus et cliquez sur Suivre ce cours en haut à droite. C'est parti !",
      "target_audience": [
        "Ce cours s'adresse aux débutants en programmation, aux débutants en C# et Unity, ainsi qu'à tous ceux qui sont familiers d'autres technologies mais pas de celles-ci en particulier"
      ]
    },
    {
      "title": "Unity C# | Sıfırdan Profesyonelliğe | 3D | 2D Oyun Yapımı",
      "url": "https://www.udemy.com/course/unity-ile-sifirdan-profesyonellige-3d-2d-oyun-yapimi/",
      "bio": "Sıfırdan başlayarak oyun geliştiricisi olmaya Hazır mısın? Hayallerine çok yakınsın, HAYDİ HEMEN BAŞLAYALIM!",
      "objectives": [
        "Unity Programının tüm detaylarını",
        "Oyun algoritmasını",
        "Sıfırdan oyun yapımını",
        "Yaptığı oyunlardan gelir elde etmeyi",
        "ve çok daha fazlasını..."
      ],
      "course_content": {},
      "requirements": [
        "Sıfırdan anlatılacağı için her seviyede öğrenciye hitap etmektedir."
      ],
      "description": "Ben size balık vermeyeceğim, balık tutmayı da öğretmeyeceğim. Ben size okyanus olmayı öğreteceğim.\nBu eğitim sıfırdan başlayarak, kişinin yeteneğine ve hayal gücüne bağlı olarak profesyonelliğe uzanan bir yolculuk içermektedir. Oyun programlama komplike bir durumdur. Yani oyun için gerekli olan 10 şey varsa ve siz 7 tanesini biliyorsanız bir şeyler eksik kalacak demektir. İşte o sebeple, bu eğitimde işin temelini ve mantığını öğreneceksiniz.\n\n\nKonu anlatımlarını maksimum detay seviyesinde anlatmaya çalıştım. Anlatılan konunun türüne bağlı olarak örneklendirme yaparak bir projede nasıl kullanılabileceğini de göstermeye çalıştım. Konu anlatımlarının yanı sıra farklı türde ÖRNEK oyunlar yaptık, bu örnek oyunların hepsinin algoritmaları birbirlerinden farklıdır. Burada ki amaç farklı algoritmaları ve farklı oyun türlerini görebilmenizdir. Konu anlatımlarında ki ve örnek oyunlardaki temel amaç siz değerli insanlara oyun algoritmasını ve problem çözme yeteneğini kazandırmaktır.\n\n\nEğitimin genelinde bütün konular sebep-sonuç ilişkisiyle anlatılmıştır. Bilgimizi kar topu misali büyüteceğiz, eğitimin ilk videolarında kullanılan tüm yöntemlerin ileri ki videolarda gelişmiş hallerini görebilirsiniz. Eğitim, tüm bilgi seviyeleri düşünülerek oluşturulmuştur. Eğer bilginiz var ise  kendi seviyenize uygun noktadan başlayarak, bildiğiniz noktaları atlayabilirsiniz. Böylece zaman kaybetmeden ilerlemiş olursunuz. Ancak genel bir bilginiz yok ise kesinlikle atlayarak ilerlememenizi tavsiye ediyorum.\n\n\nNOT: Videoların tümü 1080p HD kalitede kayıt edilmiştir. Video izlerken Video Player ayarlarınızdan Auto'yu seçerseniz, sistem videoyu otomatik 1080p kalitede oynatacaktır.",
      "target_audience": [
        "Oyun yapımına meraklı olanlar",
        "Hayalleri ve hedefleri olanlar",
        "Aaa abi nasıl yapmışlar diyen değilde, haydi bizde yapalım diyenler",
        "Sabırlı ve inançlı olanlar",
        "Önceliği para olmayıp, bir şeyler üretmeyi isteyenler"
      ]
    },
    {
      "title": "【Unreal Engine 5：本格的なゲーム作り】トップダウン型ゲームでシューティングゲームを作ってみよう。",
      "url": "https://www.udemy.com/course/unreal-engine-5-l/",
      "bio": "癖は強いが面白い！ゼロからトップダウン型のゾンビ シューティング ゲームを作成して、Unreal Engine 5 の使用方法を学びましょう",
      "objectives": [
        "Unreal Engine 5のインストール方法",
        "Unreal Engine 5の基本操作",
        "Unreal Engine 5を通じた3Dゲーム開発",
        "Blueprint・ユーザインターフェースの作成"
      ],
      "course_content": {},
      "requirements": [
        "プログラミンの知識は不要です。必要なことはすべてこの講座内で学習できます。",
        "Unreal Engine推奨スペックのPCが必要です。(CPU:Corei5以上,メモリ16GB以上、GPU:RTX3060以上を推奨)",
        "ご自身のPC（Windows）をお持ちの方。",
        "それなりのインターネット環境"
      ],
      "description": "当講座はUnreal Engine 5を使った【トップダウン型シューティングゲーム】制作講座です。\n内容は初心者向け・ビギナー向けとなっており、そこそこのスペックのPCは必要ですが、事前知識なしでご受講いただけます。\n\n\n当コースを通じて、知識だけでなく、Unreal Engineでゲーム開発することの魅力をご体験いただき、【楽しかった】と言っていただきくことが本当の目的です。\nご一緒にUE5を楽しみながらゲーム開発をやりましょう！",
      "target_audience": [
        "はじめてUnreal Engine5をさわる方",
        "Unreal Engine初学者",
        "Unreal Engine5でゲーム開発をしたい方",
        "効率よくUnreal Engine5の基礎を学習したい方"
      ]
    },
    {
      "title": "Construct 2 - Criando Jogo de Plataforma Com Aventura",
      "url": "https://www.udemy.com/course/construct-2-como-criar-jogo-de-plataforma-com-aventura/",
      "bio": "Aprenda como criar seus próprios jogos de Plataforma com Aventura usando o Construct 2 do Zero, sem codificação!",
      "objectives": [
        "Como desenvolver um jogo na engine Construct 2 de Plataforma Com Aventura",
        "Criar seus próprios jogos por meio da engine Construct 2",
        "Publicar o jogo na internet",
        "Animação de Personagens",
        "Controles com Mouse e Teclado",
        "Level Design",
        "Respawn",
        "Checkpoint",
        "Efeito Parallax",
        "Transição de Fases",
        "Criação de Menus",
        "Itens de Vida Extra",
        "Encontrar Assets Gráficos",
        "Obstáculos"
      ],
      "course_content": {
        "Arquivos do Curso e Instalação": [
          "Introdução da Plataforma Udemy",
          "Instalação do Construct 2",
          "Recursos Gráficos",
          "Projeto Final",
          "Participe do Nosso Servidor do Discord de Games"
        ],
        "Introdução": [
          "Estrutura Inicial",
          "DESCONTÃO PARA OUTROS CURSOS",
          "LINKS DE DESCONTOS PARA ALUNOS ATUAIS",
          "Jogador e Plataforma Estática",
          "Respawn do Jogador",
          "Espelhamento e WASD",
          "Câmera Seguindo o Jogador e Camadas",
          "Quizz 1"
        ],
        "Aulas Grátis": [
          "Mais de 200 Aulas 100% Grátis Para Você!"
        ],
        "Cenário e Game States": [
          "Plataforma que se move",
          "Parallax",
          "Porta e Transição de Fases",
          "Menu Inicial",
          "Vidas e Game Over",
          "Quizz 2"
        ],
        "Inimigos e Vida": [
          "Inimigo Simples",
          "Agrupamento, Concatenação e GUI de Vida",
          "Pular Na Cabeça do Inimigo",
          "Temporizador Reinicia Fase",
          "Vida Extra",
          "Quizz 3"
        ],
        "Animações e Funções": [
          "Pulo Duplo",
          "Funções e Level Design",
          "Encontrando Assets Gráficos",
          "Animação e Respawn",
          "Estados de Animação Andando e Parado",
          "Animação de Pulo",
          "Quizz 4"
        ],
        "Level Design e Detalhes Finais": [
          "LINKS DE DESCONTOS PARA ALUNOS ATUAIS",
          "Level Design",
          "Tilemaps e Decoração",
          "Animações do Inimigo",
          "Vidas com GUI",
          "Checkpoint",
          "Detalhes Finais e Spikes",
          "Quizz 5"
        ],
        "Aulas Particulares, Consultoria e Freelances": [
          "Aulas Particulares, Consultoria e Freelances"
        ],
        "Publicação Online ou na Google Play": [
          "Publicação na Web",
          "Exportando e Gerando APK Para Android",
          "Como Publicar na Google Play"
        ],
        "Extra": [
          "Joystick Virtual",
          "Versionamento de Projeto com BitBucket (Parte 1)",
          "Versionamento de Projeto com BitBucket (Parte 2)",
          "Google Analytics (Relatórios de Uso)",
          "Google AdMob (Adicionar Anúncios e Ganhar Dinheiro Parte 1)",
          "Google AdMob (Adicionar Anúncios e Ganhar Dinheiro Parte 2)",
          "Download Projeto Analytics e AdMob"
        ]
      },
      "requirements": [
        "Computador com Windows",
        "Construct 2 (Tudo poderá ser feito usando a versão Gratuita)",
        "Não é necessário saber programação (Será ensinado durante o curso)"
      ],
      "description": "Um curso para quem sempre sonhou em criar seus próprios jogos , mas nunca programou um joguinho sequer!\nTorne-se um desenvolvedor de jogos sem precisar codificar e dê asas a suas ideias usando o Construct 2, uma ferramenta gratuita , simples e prática.\nVocê aprenderá do ZERO (Não requer conhecimento prévio com programação) a utilizar a ferramenta para criar jogos no estilo Plataforma com Aventura com os componentes:\nAnimações Completas\nRespawn\nCheckpoint\nLevel Design com Tilemaps\nEfeito Parallax\nTransição de Fases\nCriação de Menus\nItens de Vida Extra\nEncontrar Assets Gráficos\nObstáculos\nAjuste de Layout e Collision\nContador de Vidas\nControles por Teclado\nAlém disso você terá suporte individual para tirar suas dúvidas e responderá a questionários para reforçar os seus conhecimentos.\nAo finalizar o curso você receberá um certficado.\nEsse curso é para iniciantes, mesmo que NUNCA TENHAM PROGRAMADO NA VIDA.\nMuito obrigado e te vejo lá",
      "target_audience": [
        "Pessoas que queiram aprender a criar jogos e protótipos sem usar codificação, de uma forma rápida, eficiente e divertida",
        "Pessoas sem qualquer experiência em programação"
      ]
    },
    {
      "title": "Minecraft Plugins programmieren leicht gemacht! 22 Std. Kurs",
      "url": "https://www.udemy.com/course/eigene-minecraft-plugins-programmieren/",
      "bio": "Lerne in diesem Kurs wie du mit Spigot eigene Plugins für Minecraft Server erstellst.",
      "objectives": [
        "Du lernst die Grundlagen der Programmiersprache Java.",
        "Du lernst wie du dein erstes eigenes Minecraft Plugin entwickelst.",
        "Du lernst wie du eigene Commands erstellst.",
        "Du lernst wie du deine eigenen Items erstellst.",
        "Du lernst wie du Inventare erstellen, speichern und verändern kannst.",
        "Du lernst wie du mit Blöcken in der Welt interagierst, sie bewegst, platzierst und löschst.",
        "Du lernst wie du dein erstes eigenes Minigame programmierst.",
        "Du lernst wie du auf verschiedene Events reagierst und sie nutzt.",
        "Du lernst wie du das beliebte Minigame \"Survivalgames\" selbst programmieren kannst.",
        "Du entwirfst dein eigenes Lobby Plugin."
      ],
      "course_content": {},
      "requirements": [
        "Du benötigst einen Computer mit einer Internetverbindung.",
        "Du benötigst das Spiel Minecraft.",
        "Du lernst das nötige im Kurs. Java Programmierkenntnisse sind KEINE Pflicht, aber hilfreich."
      ],
      "description": "In diesem Kurs lernst du alles was du benötigst, um deine eigenen Plugins für deinen Minecraft Server zu entwickeln!\nIch zeige dir, wie du dein Projekt erstellst, wie du mit der Programmierumgebung Intellij umgehst und wie du deinen Minecraft Server, durch die Programmiersprache Java, zum Leben erweckst!\nNach diesem Kurs kannst du Spielprozesse automatisch im Hintergrund laufen lassen, den Fortschritt deiner Spieler speichern, sowie auf Interaktionen mit verschiedenen Items, Blöcken und Lebewesen Reagieren.\nAußerdem kannst du deine eigenen Inventare und Items erstellen, sowie Blöcke in der Welt spawnen und verschieben.\nWährend des Kurses erhältst du eine vollständige Einführung in die Java Programmierung und nutzt dein gelerntes Wissen anschließend, um direkt mit diesem Kurs parallel dein eigenes Plugin zu erstellen.\nNeben einer ausführlichen Vorstellung der verschiedenen Möglichkeiten der Plugin-Programmierung, gehe ich auch auf beliebte Plugin Beispiele ein, sodass du erfolgreich deine eigenen Ideen umsetzen kannst!\nMeinen Code darfst du ohne Probleme selbst in deinen Plugins verwenden und weiterentwickeln.\nHast du dein eigenes Plugin erfolgreich fertiggestellt? Zeig es mir! Ich freue mich jetzt schon darauf, deinen Server zu besuchen und das Plugin zu testen.\nMelde dich dazu entweder direkt hier über Udemy, oder auf meinem Discord Server (Code: 27zjxdqrrC), bei mir.\nBei Fragen kannst du dich gerne an mich wenden und ich versuche dir bei deinem Problem zu helfen.\nFür diesen Kurs sind keine Vorkenntnisse nötig. Alles was du benötigst ist ein Computer und einen Minecraft Account.\nStarte jetzt in die erste Lektion und verwirkliche dir deinen Traum, deinen Minecraft Server mit deinen eigenen Plugins komplett nach deiner Fantasie zu gestalten!",
      "target_audience": [
        "Der Kurs richtet sich an Neulinge in der Minecraft Plugin Programmierung, die ihre eigenen Plugins entwickeln wollen."
      ]
    },
    {
      "title": "Phaser: Programación de juegos en HTML5",
      "url": "https://www.udemy.com/course/phaser-programacion-de-juegos-en-html5/",
      "bio": "Aprende a desarrollar increíbles juegos 2D desde cero con HTML5, JavaScript y Phaser",
      "objectives": [
        "Crear tus propios juegos en Phaser",
        "Aprender como controlar imágenes, textos, botones, tweens, animaciones, eventos de tiempo y mucho más",
        "Controlar Inputs de teclado y de ratón",
        "Vas a aprender a desarrollar paso a paso 3 juegos desde cero",
        "Mejorar tus conocimientos de JavaScript"
      ],
      "course_content": {
        "Intruducción al Curso": [
          "Introducción y herramiéntas que vamos a utilizar",
          "IMPORTANTE LEER ANTES DE COMENZAR EL CURSO",
          "Hola Mundo",
          "Código Fuente"
        ],
        "El Leñador": [
          "El Leñador - Introducción",
          "Abriendo el Proyecto Inicial",
          "Cómo cargar Imágenes",
          "Escalando la Pantalla",
          "Anchor: Punto de Referencia de un Sprite",
          "Escalar e Invertir un Sprite",
          "Rotar un Sprite",
          "Alpha: Cambiar la opacidad de un Sprite",
          "Botones",
          "Máquina de Estados",
          "Input de Teclado",
          "Cómo cambiar la textura de un Sprite",
          "Grupos",
          "Pool de Objetos",
          "Posicionando los Troncos",
          "Moviendo los Troncos",
          "Game Over",
          "Textos",
          "Controlando el Puntaje",
          "Barra de Tiempo",
          "Agregando Sonidos"
        ],
        "Camino Ninja": [
          "Camino Ninja - Introducción",
          "Creando el proyecto",
          "Animaciones usando tweenings",
          "Input de Ratón",
          "Prototipos - Heredando de la clase Sprite",
          "Controlando al Ninja",
          "Manager de Ninjas",
          "Estructura de Datos",
          "Animaciones con Sprites",
          "Agregando botón de Jugar",
          "Bitmap Fonts",
          "Vidas y Game Over",
          "Condiciones de fin de nivel",
          "Cargando Archivos JSON",
          "Agregando Sonidos"
        ],
        "Atrapando el Pinguino": [
          "Atrapando el Pinguino - Introducción",
          "Cargando Texture Atlas",
          "Utilizando Texture Packer para generar Texture Atlas",
          "Utilizando Adobe Flash para generar Texture Atlas",
          "Preparando nuestro Proyecto",
          "Calculando el ángulo entre 2 puntos",
          "Creando el Sprite Rayo de Agua",
          "Posicionando, Orientando y Escalando nuestro Rayo",
          "Agregando un Tween al Rayo",
          "Interpolaciones con curvas de Bezier",
          "Debug: Sprite Bounds",
          "Efecto Final al Colisionar",
          "GUI del Juego",
          "Guardando Datos de manera Persistente",
          "Condición de Fin de Juego",
          "Agregando Sonidos"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación",
        "Un editor de código - Estaremos utilizando Brackets en este curso",
        "Navegador Chrome",
        "Pasión por los video games :)"
      ],
      "description": "HTML5: Programación de juegos en Phaser es un video tutorial en el que aprenderás a crear 3 juegos desde cero en HTML5 utilizando el popular framework Phaser. Una vez finalizado el curso podrá crear tus propios juegos en Phaser.\nDurante muchos años Flash ha sido la plataforma líder para el desarrollo de juegos 2D para internet, como todos bien saben Flash dejará de tener soporte para los navegadores y ahí es donde entra en juego HTML5. Muchos de los sitios que cuentan con juegos Flash están cambiando sus contenidos por juegos en HTML5. Esto genera una gran oportunidad para los desarrolladores que sepan programar juegos en HTML5 y esta es una de las razones por las que he decidido realizar este curso donde podrás aprender a desarrollar juegos 2D en HTML5 utilizando el framework Phaser y desarrollando en Javascript.\nHace poco tiempo Facebook ha lanzado Instant Games, juegos que no necesitarán instalarse y se pueden jugar desde Facebook Messenger. Instant Games ha estado en beta cerrada por bastante tiempo pero ya se encuentra abierta para que cualquier desarrollador pueda publicar sus juegos. Los juegos para Facebook Messenger ofrecen una oportunidad única para los desarrolladores de HTML5 ya que es un mercado nuevo que aún no se encuentra saturado como las tiendas Google Play o el App Store, lo cual genera una gran oportunidad.. Está de más decir que los Instant Games son juegos desarrollados en HTML5 :)\n\nAlgo importante a tener en cuenta es que si bien Unity puede exportar juegos a HTML5 (WebGL), estos juegos alojados en un sitio solo pueden jugarse desde un ordenador, o sea que no funcionan si entras al sitio desde el navegador de un dispositivo móvil. Esto no sucede si desarrollas un juego utilizando Phaser, ya que podrías jugar el juego tanto desde un ordenador como desde un dispositivo móvil. Y esto es una gran ventaja, ya que muchas empresas buscan poder correr sus contenidos en navegadores desde dispositivos móviles.\n\nPara tomar el curso es necesario tener requisitos básicos de programación, pero alcanza con ser principiante. En el curso estaremos programando en JavaScript pero si vienes de cualquier otro lenguaje de programación no tendrás inconvenientes en adaptarte al lenguaje JavaScript para desarrolar video games en HTML5.\nEl curso ha sido diagramado en forma secuencial y a modo tutorial, ya que en los primeros juegos incorporaremos los conceptos básicos para crear un juego e iremos incrementando el nivel de dificultad durante los siguientes juegos. Los juegos y las lecturas han sido pensadas para poder ir adquiriendo siempre nuevos conocimientos de Phaser, o sea que con cada juego iremos incorporando nuevos conceptos.\nVamos a aprender como cargar y agregar imágenes en la pantalla, posicionarlas, rotarlas, escalarlas y entender como utilizar el punto de referencia (anchor).\nTambién veremos como utilizar textos, crear botones, animar nuestros sprites y controlarlos utilizando nuestro ratón y teclado.\nLuego aprenderemos a utilizar tweening y eventos de tiempo, grupos y pool de objetos.\nEn nuestros juegos vamos a utilizar herencia (prototipos), aprenderemos como cargar archivos externos JSON para configurar nuestros propios niveles.\nPor último vamos a ver como agregar sonidos y música a nuestros juegos.\nComenzaremos con conceptos básicos y terminaremos con conceptos intermedios/avanzados.\nEstos son los juegos que estaremos desarrollando:\nJuego 1 - El Leñador\nJuego en el que controlamos a un leñador utilizando el teclado con el objetivo de cortar el árbol, nos iremos moviendo de lado a lado evitando ser alcanzado por las ramas.\nQue aprenderemos:\nCargar Imágenes\nEscalar, Invertir, posicionar y rotar Sprites\nUtilizar Botones\nUtilizar Grupos y Pool de Objetos\nInput de teclado\nManejo de Textos y Sonidos\n\n\nJuego 2 - Camino Ninja\nPeligrosos ninjas irán apareciendo por la pantalla, nuestro objetivo será eliminarlos a todos haciendo click con el ratón sobre cada ninja, antes que desaparezcan.\nQue aprenderemos:\nTweens y Sprite Animados\nInput de ratón\nPrototipos: Herencia de la clase Sprite\nEstructura de Datos\nBitmap Fonts\nCargar archivos JSON\nJuego 3 - Atrapando el Pingüino\nKum tendrá que sumar la mayor cantidad de puntos en un tiempo limitado. Para eso tendrá que disparar con su pistola de agua a Penguin, el pingüino volador.\nQue aprenderemos:\nCargar y utilizar Atlas\nMover un Sprite por un path determinado\nGrabar datos de manera persistente\nOrientar Sprites en relación a las coordenadas de nuestro ratón\nEventos de tiempo\n\n\nQue dicen los estudiantes de este curso:\n\"Me gusta mucho, claro, preciso y divertido\"\n\n\"Te enseña como crear un juego Basico y la correcta estructura y organización de la logica de un juego de principio a fin. Manejo de tweens, Prototipos, inputs, etc.\"\n\n\"Un curso muy bien explicado paso a paso, hasta ahora muy satisfecho de que todo marche como debe ser\"\n\n\"Muy bien explicado y fácil de entender. Recomendado.\"\n\n\"Esta muy bien explicado :) y tiene los recursos necesarios y enlaces referentes.\"\n\n\n\nEsto y mucho más te estará esperando en este curso.\n\nApúntate ahora!!! Y comienza a desarrollar tus propios juegos en Phaser a nivel profesional.",
      "target_audience": [
        "Cualquier programador con conocimientos básicos que quiera aprender a desarrollar sus propios juegos en HTML5, desarrollando en JavaScript y utilizando el framework Phaser",
        "Desarrolladores que desean aprender nuevas técnicas para la programación de juegos."
      ]
    },
    {
      "title": "Godot 4 ile Oyun Geliştirmeyi Öğren",
      "url": "https://www.udemy.com/course/godot-4-ile-oyun-gelistirmeyi-ogren/",
      "bio": "Godot ile Sıfırdan ve Hızlıca 2D ve 3D oyunlar yapmaya başlayın",
      "objectives": [
        "Godot ile sıfırdan 2D Platformer ve 3D FPS oyunu geliştirmeyi",
        "3D modeller ekleyerek, kendi haritanızı nasıl inşa edeceğinizi",
        "Can ekleme, Animasyon yapma, karakter kontrolü, Pixel harita inşa etme gibi Platformer türü oyunlarda olması gereken pek çok özelliği",
        "Oyununuza görsel efektler ekleme yollarını",
        "Projelerinizi yaptığınız oyunun ihtiyaçlarına göre açabilmeyi ve düzenleyebilmeyi",
        "Godot'un kendi dili olan GDScript'i sıfırdan öğrenerek kendi kodlarınızı yazabileceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "GODOT Kurulumu ve Proje Açma",
          "Arayüz Tanıtımı",
          "Sahne Oluşturma ve Godot’daki Sahne Mantığı"
        ],
        "Kodlama Dersleri": [
          "Kodlama Dersi: Godot’da Kodlamaya Giriş ve Script Oluşturma",
          "Kodlama Dersi: Değişken Türleri",
          "Kodlama Dersi: Operatörler",
          "Kodlama Dersi: if ve elif",
          "Kodlama Dersi: Fonksiyon Oluşturma",
          "Kodlama Dersi: Constant",
          "Kodlama Dersi: Loop Türleri - For ve While",
          "Kodlama Dersi: Array’ler",
          "Kodlama Dersi: Match Kodu",
          "Kodlama Dersi: Autoload (Global Scriptler)",
          "Kodlama Dersi: Sinyaller"
        ],
        "2D Platformer Yapalım": [
          "2D Proje Açalım ve Ayarları Yapalım",
          "Asset Ekleme",
          "Tileset Yapımı ve Tilemap ile Harita Oluşturma",
          "Player Kontrolleri",
          "Temel 2D Kamera Ayarları",
          "Karakter Animasyonları Eklemek",
          "Harita Genişletme ve Arkaplan",
          "Smooth Kamera Yapımı",
          "Oyuna Yeni Input Yani Klavye Tuşları Atamak",
          "Sahneler Yani Level’lar Arası Geçiş Yapmak",
          "Kamera Sınırları",
          "Haritaya Görünmez Sınırlar Eklemek",
          "Haritaya Animasyonlu Proplar Eklemek",
          "Oyuna Düşmanlar (Enemy) Eklemek",
          "(Kod Düzeltme)",
          "Karakter Death Animasyonu",
          "Attack Animasyonu ve Mekaniği",
          "Respawn Yapmak",
          "Oyuna Toplanabilir Eşyalar Eklemek",
          "Karaktere Health Eklemek",
          "Health Bar Ekleme",
          "Health Potion Eklemek",
          "Ana Menü Ekleme",
          "Oyunu Build (Çıktı) Alma"
        ],
        "Godot 3D Kullanımı": [
          "3D Proje Açma",
          "Fizik Sistemine Giriş",
          "Basit Karakter Kontrolleri",
          "Sahneye Light Ekleme ve Light Türleri",
          "FPS bakış açısıyla Karakter Eklemek",
          "Harita İnşa Etme 1 - Texture Ekleme ve 3D Model Ekleme",
          "Mouse Cursor (İşaretçi) Kapatma",
          "Harita İnşa Etme 2 - Sis Ekleme ve Post Processing",
          "(1) Vuruş Mekaniği - Temeller",
          "(2) Vuruş Mekaniği - Crosshair Ekleme",
          "(3) Vuruş Mekaniği - Silah Patlama Efekti (Muzzle Flash) Ekleme",
          "Düşmanın Oyuncuyu Takibi (Pathfinding)",
          "Karaktere Health Ekleme",
          "Yerden Obje Toplama (Health)",
          "Oyunu 3D Olarak Build (Çıktı) Alma",
          "Mixamo’dan Godot’a Animasyon ve Model Aktarma (BLENDER KULLANMADAN)",
          "Godot'da Ses ve Müzik Ekleme",
          "2D Partikül Eklemek",
          "3D Partikül Eklemek"
        ],
        "Godot ve Mobil Oyunlar": [
          "Gerekli Kurulumlar",
          "Projeyi Mobil İçin Ayarlama ve Android Export Alma",
          "Diğer Platformlar Üzerine"
        ],
        "Assetler ve Yararlı Godot Kaynakları": [
          "Godot Üzerinden Asset Nasıl Alınır",
          "Hazır FPS Asset Kurulumu",
          "Godot Satranç Asseti",
          "Godot'da Terrain Yapımı"
        ]
      },
      "requirements": [
        "Bir bilgisayarınız olması gerek",
        "Daha önceden bir oyun motoru kullandıysanız çok daha hızlı adapte olabilirsiniz ama kesinlikle şart değil",
        "Bir miktar İngilizce bilmeniz gerekebilir, yine de isteğe bağlı olarak Godot oyun motorunun Türkçe seçeneği de mevcut"
      ],
      "description": "Godot ile oyun geliştirme serüvenine hoş geldiniz!\n\n\nBu kursta en meşhur oyun motorlarından biri olan Godot Engine'i sıfırdan öğreneceksiniz.\nİsterseniz 2D isterseniz 3D nasıl oyun yapabileceğinizi tecrübe etme şansı olacak.\nİllaki programlama bileceksiniz diye bir şart yok! Çünkü Godot'un GDScript isimli kendi kod yazma dili var. Ve kursta koca bir bölüm sadece bunu öğretmeye ayrıldı. O yüzden rahat olun :)\nDaha önce Unity tecrübeniz mi var? Hiç mesele değil. Godot'u pek çok eski Unity kullanıcısı kullanıyor ve memnun kaldıklarını belirtiyorlar!\nKursta örnek bir 2D platformer oyunu yapacağız. Bu oyunun içerisinde can sistemi düşmanlar, karakter kontrolü ve animasyonlar olacak.\nDaha sonra 3D bir örnek FPS oyunu yapacağız. Kameramızı ve kontrollerimizi nasıl ayarlayabileceğimizi öğrenip oyuna nasıl görsel efektler ekleyebileceğimize bakacağız.\nKursa kaydolduktan sonra bana her zaman soru sorabileceksiniz ve istekleriniz ölçüsünde kursa yeni videolar da ekleyeceğim.\nGodot tümüyle ücretsiz bir oyun motoru. Açık kaynak kodlu olduğu için Unreal veya Unity gibi bilindik oyun motorlarındaki lisans anlayışına sahip değil. Yani tümüyle ücretsiz bir şekilde indirip tümüyle ücretsiz bir şekilde oyununuzu yapabiliyorsunuz!\nÖzellikle Unity ile yapısal benzerliğinden dolayı pek çok Unity geliştiricisi aynı zamanda Godot'u da tercih ediyor. Ayrıca isteğe bağlı olarak tüm Godot oyunlarını C# ile geliştirme imkanı da mevcut.\nHaydi, hep beraber oyun geliştirme maceramıza başlayalım!",
      "target_audience": [
        "Oyun yapmayı öğrenmek isteyenlere",
        "Yeni, oyun yapma yolları keşfetmek isteyenlere",
        "Godot'u sıfırdan öğrenmeye başlamak isteyenlere"
      ]
    },
    {
      "title": "Unreal Engine 4 Workshop: Composição e Render",
      "url": "https://www.udemy.com/course/unreal-engine-4-composicao-render/",
      "bio": "Visualize na prática como Iluminar, Renderizar e compor uma cena completa na Unreal Engine 4 e Photoshop.",
      "objectives": [
        "Criar seus próprios cenários na Unreal Engine",
        "Iluminar uma cena na Unreal Engine",
        "Renderizar uma cena completa, com Render Passes",
        "Compor a imagem final no Photoshop"
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Cenário e Render": [
          "Preparação do Projeto",
          "Referências",
          "Layout e Camera",
          "Blocagem",
          "Objetos Primários",
          "Etapa de Luz 1: Luz Ambiente",
          "Objetos Primários parte 2",
          "Etapa de Luz 2: Keylight",
          "Folhagem",
          "Ajustes nos Assets",
          "Primeiro Build da Luz",
          "Etapa de Luz 3: Luz Indireta",
          "Ajustes na Composição",
          "Post Process",
          "High Resolution Screenshot"
        ],
        "Composição": [
          "Composição: Levels",
          "Composição: Cor",
          "Composição: Depth",
          "Composição: Céu",
          "Composição: Overlays",
          "Render Final"
        ]
      },
      "requirements": [
        "Conhecimentos básicos em Unreal Engine 4",
        "Conhecimentos básicos de Adobe Photoshop"
      ],
      "description": "A Cubo Class já é conhecida pelos seus cursos completos e detalhados.\nNo Workshop apresentamos um novo modelo de ensino, voltado para a prática.\nComo um grande atelier, vamos acompanhar um instrutor mostrando seu processo completo.\n\nEu quero te mostrar na prática como fiz uma cena inteira, desde a importação dos assets, até chegar na imagem final.\nVocê vai poder usar o mesmo processo para criar suas próprias imagens 3D.\nConfira na imagem de capa do curso e no video promocional a imagem que vamos criar durante as aulas.\n\nMas antes disso, faça uma promessa para mim.\nPrometa que você vai usar tudo o que aprender nesse curso para criar as imagens 3D incríveis. Isto pode mudar completamente sua vida profissional e dar um upgrade em seu portfolio.\nDescrição Detalhada:\nNesse curso vou mostrar como Criar, Iluminar, Renderizar e Compor uma cena na Unreal Engine 4 e Photoshop.\nVamos começar pela busca de Referências, escolha de Cores, Layout e posicionamento de Camera, Composição e Blocagem. Chegando até posicionamento das Luzes e configuração, Build da Luz, Exportação das imagens e Composição no Photoshop.\nVamos utilizar os assets do Infinity Blade, GRATUITOS e disponibilizados na Unreal Marketplace.\n\nEste curso é recomendado para alunos de todos os níveis.\nAlunos iniciantes podem ter um primeiro contato com uma pipeline completa de Iluminação, Render e Composição.\nAlunos avançados conseguem avançar mais rapidamente e vão absorver melhor os conceitos.\nTópicos Abordados:\nReferências\nCores\nLevel Design\nBlocagem\nImportação de Assets\nConfiguração da Cena e Cameras\nIluminação\nBuild Light\nPós-Processamento\nRender\nTratamento de Cor\nComposição Final",
      "target_audience": [
        "Interessados em criar renders na Unreal Engine",
        "Pessoas que querem entender o pipeline de criação de imagens na Unreal Engine",
        "Pessoas que gostam de Render e Composição",
        "Profissionais que necessitam de uma nova alternativa de renderizador"
      ]
    },
    {
      "title": "C#: Impara csharp con Unity sviluppando un videogioco",
      "url": "https://www.udemy.com/course/csharp-corso-unity-crea-videogioco-principianti-in-italiano/",
      "bio": "Impara come creare videogiochi con unity , impara csharp da zero a esperti in modo facile e preparati per dotnet",
      "objectives": [
        "Comprendere i fondamenti della programmazione come la creazione di variabili, operatori decisionali, iterazione, collezioni, classi e oggetti.",
        "Comprendere come funziona un programma per computer, le fasi e gli aspetti di cui è costituito e il suo ciclo di vita.",
        "Crea e comprendi gli script C# per Unity.",
        "Interagisci con lo schermo del videogioco attraverso la tastiera, muovendo il personaggio, facendolo saltare",
        "Programma videogiochi per Unity 5, inclusi aspetti come Game Design, HUD, dinamiche di gioco e visualizzazioni."
      ],
      "course_content": {
        "Introduction": [
          "Welcome and Introducing Hidran Arias instructor",
          "Introduction"
        ],
        "Installare unity hub e unity": [
          "Testare Unity e Visual Studio Community Edition",
          "Aiuto e documentazione di Unity",
          "Creare un gameobject e aggiungergli uno script"
        ],
        "Basi di programmazione": [
          "Introduzione al concetto di variabile",
          "Variabili. Aggiungere attributi ad una classe",
          "Creare una proprietà di tipo string",
          "Variabili. Riassunto e naming convention",
          "Creare una proprietá di tipo int",
          "Che cosa è un metodo e come eseguirlo",
          "Aggiungere un metodo ad una classe",
          "Creiamo una classe, Car, e aggiungiamo proprietà e metodi",
          "Creare una classe Weapon"
        ],
        "Processi decisionali": [
          "Introduzione ai processi decisionali",
          "Construtto IF ELSE",
          "Verificare se piovera' o no",
          "Operatore not: !",
          "Operatori && e ||",
          "Tabella della verità: Truth table"
        ],
        "Le variabili": [
          "Intro alle variabili",
          "Variabili pubbliche e private",
          "Tipi di variabili predefiniti",
          "Operatori matematici. Operatore resto o modulo",
          "Operatori unari.",
          "Assegnazione composta",
          "Visibilità delle variabili"
        ],
        "Metodi e funzioni": [
          "Definire un metodo e naming convention",
          "Parametri e argomenti di un metodo",
          "Tipi di ritorno dei metodi",
          "Dichiare una proprietá di tipo char per gestire il movimento di un personaggio",
          "Dichiare un metodo calculate per effettuare operazioni matematiche"
        ],
        "Collezioni di oggetti": [
          "Gli array",
          "Creare un array di nemici",
          "Le liste",
          "Creare una lista di nemici modificabile",
          "Accedere ai valori di liste e array",
          "Arraylists",
          "Dictionary & hashtable",
          "Creare un dizionario con i dati del giocatore"
        ],
        "OperatorI e iterazioni": [
          "Intro alle iterazioni",
          "Il ciclo foreach. Iterare array e liste",
          "Mostrare a video i dati di una lista",
          "Iterare hashtable e dizionari",
          "Iterare un dizionario",
          "Iterarea con il ciclo for",
          "Iterare col costrutto while e do while",
          "Collezioni. Algoritmo di ricerca"
        ],
        "Programmazione orientata agli oggetti": [
          "Classi e oggetti",
          "Instanziare oggetti",
          "Aggiungere metodi alle nostre classi",
          "Gesire e lanciare eccezioni",
          "Aggiungere ed eseguire diversi costruttori",
          "Ereditarietà di classe.",
          "Ordine di esecuzione dei metodi in MonoBehaviour",
          "Ordine di esecuzione, metodo update. Muovere un oggetto"
        ],
        "Creiamo un videogiochi: Game design": [
          "La storia infinita",
          "l'Idea, dividi ed impera",
          "Diverse piattaforme e risoluzioni"
        ]
      },
      "requirements": [
        "Pc or Mac con almeno 8 GB di memoria",
        "Connessione Internet"
      ],
      "description": "Benvenuto a Impara C# e crea un videogioco con Unity 2020: da principiante a professionista.\nSe sei qui, probabilmente è perché ti piacciono i videogiochi e vuoi imparare a creare i tuoi videogiochi. Inoltre, è probabile che tu sappia disegnare immagini, progettare i tuoi personaggi, i tuoi nemici, animazioni, scenari, abbia pensato alle meccaniche di gioco, ... ma ti manca una cosa: SAPERE PROGRAMMARE!\nNon devi vergognarti. Io stesso non ho creato il mio primo videogioco fino all'età di 23 anni e da allora ho studiato matematica. Nessuno nasce insegnato ed è per questo che siamo qui: perché tu possa imparare a creare il tuo videogioco in Unity con il linguaggio di programmazione C#  , un linguaggio semplice che è facile da imparare e che ti darà molte possibilità per ampliare le tue conoscenze. In questo corso, inizieremo con le basi e i fondamenti: la programmazione.\nImpareremo insieme aspetti di programmazione di base come:\nVariabili e tipi di dati\nMetodi o frammenti di codice\nProgrammazione a oggetti e orientata agli oggetti\nOperatori decisionali\nCollezioni, array ed elenchi di oggetti\nGli operatori di iterazione\n\n\nPertanto, una volta conosciuti gli strumenti e i principi base della programmazione, li metteremo in pratica con un vero e proprio progetto, il nostro primo videogioco 2D: una piattaforma 2D dove l'obiettivo sarà quello di schivare i nemici raccogliendo il numero massimo di monete. Sarà un videogioco semplice ma vedremo il suo vero potenziale in tutto ciò che si può davvero fare da quello che sappiamo:\nImpareremo come pianificare il Game Design e suddividere le fasi di sviluppo del nostro videogioco\nImpareremo cos'è un prefab e come vengono utilizzati per creare scene per un videogioco\nCreeremo i nostri menu e l'HUD delle informazioni di gioco\nImpareremo meccaniche e gameplay tipici come lo scorrimento infinito o la fisica di un videogioco\nE proprio con tutto questo, che tu ci creda o no, avrai realizzato il tuo primo videogioco!!!\nBene, mi sono già riscaldato e non vedo l'ora di imparare il C# insieme e iniziare a creare il nostro videogioco in Unity. Quindi non pensarci due volte e iscriviti ora per iniziare la tua carriera come sviluppatore di videogiochi con Unity 2020 e C#.",
      "target_audience": [
        "Giocatori e amanti dei videogiochi che vogliono iniziare nel mondo dello sviluppo di videogiochi.",
        "Principianti nella programmazione che desiderano avere solide basi nel mondo della programmazione e vogliono comprendere il codice come un esperto.",
        "Designer e grafici che vogliono imparare a programmare i propri videogiochi parallelamente alle proprie capacità di progettazione artistica."
      ]
    },
    {
      "title": "Unreal Engine 5 y Blender de 0 a Profesional!",
      "url": "https://www.udemy.com/course/unreal-engine-5-y-blender-de-0-a-profesional/",
      "bio": "La guía completa en Español para crear juegos y personajes mediante Blender y Unreal Engine 5 de forma profesional",
      "objectives": [
        "Modelado y animación en Blender. Todo enfocado a videojuegos!",
        "Texturizado de modelos, despliegue de UV's y generación de materiales en Blender y UE5",
        "Exportar objetos, animaciones, texturas, etc de Blender a Unreal Engine 5.",
        "Realizar escenarios fotorealistas en Unreal Engine 5",
        "Controlar a tu propio personaje creado en Blender con sus propias animaciones en Unreal Engine 5!",
        "Profundizar en Lumen y Naninte, las dos herramientas más potentes de Unreal Engine 5.",
        "Iluminar escenarios y personajes dentro de Unreal Engine 5.",
        "Realización de escenarios modulares en blender para su exportación a UE5."
      ],
      "course_content": {
        "Introducción": [
          "Los Archivos del Curso",
          "Valoraciones Prematuras",
          "Clases en directo gratuitas en Twitch",
          "Discord Hispano de Unreal Engine para desarolladores"
        ],
        "Instalación, Interfaz y navegación": [
          "Instalación de Blender",
          "Organización de la interfaz de Blender",
          "Navegación en Blender",
          "Transformación y Modo Edición"
        ],
        "Conceptos Básicos": [
          "¿Que es modelar?",
          "Herramientas de modelado",
          "Algunas herramientas más de modelado",
          "2 maneras de modelar una botella",
          "2 maneras de modelar una roca Low Poly",
          "Un poco de UVs",
          "Preparando la pieza y el workspace para pintar texturas",
          "Pintando texturas I"
        ],
        "Box Modeling": [
          "Buscando referencias",
          "Empezamos el modelado de la pieza",
          "Creando referencia de modelado a partir del concept",
          "Detallando el modelo",
          "Detallando el modelo...Más",
          "Últimos detalles",
          "Desplegamos UVs",
          "Desplegamos más UVs",
          "Preparando la pieza para el Sculpting",
          "Preparando la pieza para el Sculpting II",
          "Mejorando la forma",
          "Algunos conceptos de esculpido en Blender",
          "Esculpiendo los detalles en alta resolución",
          "El Bake",
          "Introducción a Substance painter: el Bake",
          "Introducción a Substance painter: Texturas Base",
          "Más texturas",
          "Un poco de Shading y Render"
        ],
        "Escenarios modulares 3D": [
          "introducción de la sección: ¿que son los entornos modulares?",
          "¿Que es el Texel density?",
          "Desplegado de UVs y Texel Density",
          "Planeando el Trim Sheet",
          "Modelando escenarios: Modelado Modular 1",
          "Modelando escenarios: Modelado Modular 2",
          "Desplegando las UVs 1",
          "Desplegando las UVs 2",
          "Organizando el Trim Sheet y ajustando el texel density"
        ],
        "Creando los materiales: Mini curso de Substance designer": [
          "Plaster en Designer",
          "Persiana Metálica en Designer",
          "Material de las cornisas 1",
          "Material de las cornisas 2",
          "Ladrillos",
          "Vidrio en Designer",
          "Calzada en Designer",
          "Acera en Designer",
          "Ordenando los materiales en Substance Designer",
          "Asignando el Trim Sheet en Blender"
        ],
        "Rigging": [
          "¿Que es un rig?",
          "Parent",
          "Constraint",
          "Armature",
          "Rigging de un personaje_01: El Set Up",
          "Preparar las piernas para cinemática inversa (IK)",
          "Pre-Binding (weight Paint) y controladores del Rig",
          "Weight Paint en Blender",
          "Animando un ciclo de caminar con nuestro Rig en Blender"
        ],
        "Modelado de personajes para animación en Blender": [
          "Modelando los pantalones en Blender",
          "Modelando la camiseta en blender",
          "Modelando las manos Pt1",
          "Modelando las manos Pt 2",
          "Modelando el brazo y uniendo la mano",
          "Modelando las botas",
          "Preparando la malla base de la cabeza",
          "Esculpiendo la cabeza I",
          "Esculpiendo la cabeza II",
          "Esculpiendo la cabeza III",
          "Retopología de la cabeza I",
          "Retopología de la cabeza II",
          "Retopología de la cabeza III",
          "Retopología de la cabeza IV",
          "Últimos retoques a la malla",
          "Pelo Low Poly",
          "Desplegado de UVs I",
          "Desplegado de UVs II",
          "Desplegado de UVs III"
        ],
        "Introducción a Unreal Engine 5": [
          "Descargar e instalar Unreal Engine 5",
          "Donde encontrar buenos tutoriales y excelente documentación",
          "En inglés o nada",
          "Movimiento básico por Unreal Engine 5",
          "Rotar, escalar, mover y manipular objetos",
          "Ventanas y modos"
        ]
      },
      "requirements": [
        "Conocimientos básicos de informatica",
        "Utilizaremos Unreal Engine 5 y blender (que enseñaremos a descargarlo en las primeras clases) la gran mayoría de clases del curso.",
        "PC con Windows 7/8/10, x64 o superior y tarjeta gráfica dedicada",
        "Empezamos DESDE CERO (nivel amateur) hasta llegar a NIVEL AVANZADO (listo para entrar a trabajar como Junior en la industria del videojuego o crear tus propios juegos de calidad AAA)"
      ],
      "description": "En este curso aprenderás todo lo necesario para dominar Blender y Unreal Engine 5 mientras creas un juego y el contenido para este (modelos, animaciones, personajes, texturas, etx) en Blender. Este curso te permitirá entrar a trabajar con Unreal y Blender en la industria del videojuego o crear tus propios juegos de calidad profesional para consolas (Switch PS5, Xbox), dispositivos móviles o plataformas como Steam. Unreal Engine 5 es el motor más famoso y versátil de la industria (y  gratis!) y con el han sido desarrollados infinidad de juegos de prestigio como Fortnite o Rocket League y también infinidad de juegos Indies!\n\nPor su parte, Blender es el software de creación y animación 3d standard en la industria. Su versatilidad y precio (no cuesta un solo euro) lo hacen perfecto tanto para amateurs como profesionales.\n\nQué hace este curso especial?\n\nEl hecho que diferencia este curso de otros es que todo lo explicado (desde la primera clase hasta la última) se explica mediante ejemplos prácticos al mismo tiempo que desarrollamos entornos, personajes y animaciones en blender junto a un juego de altísima calidad tanto gráfica como jugable; crearemos al mismo tiempo que aprendemos creación de entornos 3d realistas o conceptos de diseño y balanceo de juego!\n\nNinguna de las clases están enfocadas a explicar teoría, todo lo contrario! Siempre, siempre usaremos al mismo tiempo que explicamos los conceptos aprendidos en ejemplos prácticos que nos servirán para desarrollar un juego al mismo tiempo. Este es el orden en el que aprenderemos y aplicaremos los conocimientos:\nEmpezaremos con la instalación de Blender y nos habituaremos a su interfaz\nVeremos conceptos básicos acerca del modelado 3D, como que es una malla y como está constituida y empezaremos a ver algunas de las herramientas de modelado de las que dispone Blender y acabaremos modelando un objeto sencillo y pintando unas texturas sobre él.\nA continuación, mediante el proceso de modelado de un potente Hero Prop, profundizaremos en herramientas y técnicas avanzadas de modelado 3D, y nos introduciremos en el esculpido digital con Blender, y pintaremos unas interesantes texturas al objeto mediante el programa Substance Painter, para acabar la sección iluminando y haciendo un render del objeto, que podremos añadir a nuestro porfolio.\nYa tenemos una sólida base de conocimientos tanto de Blender como de técnicas de modelado, ahora podemos plantearnos la creación de un escenario para videojuegos, así que planificaremos una solución optimizada para un escenario modular, con el que, mediante piezas podremos ir construyendo y modificando el escenario dentro del propio Unreal.\nUna vez tenemos las piezas modulares de nuestra escena, debemos hacer que sean visualmente interesantes, así que en esta sección tendremos un minicurso de Substance Designer, que nos permite la creación de shaders procedurales, con los que podremos optimizar y hacer variaciones de materiales y texturas para nuestra escena de una forma muy potente.\nA continuación, querremos poner un personaje en nuestra escena, y querremos que pueda moverse, así que veremos que para animar el personaje necesitaremos crear un rig básico, así, en esta sección veremos los principios del rigging para personajes.\nUna vez conocemos que es el rigging y como asignarlo a un personaje, vamos a modelar un personaje que sea visualmente potente y técnicamente apto para animar. Para ello profundizaremos en técnicas de modelado y esculpido.\nEmpezaremos descargando Unreal Engine y familiarizándonos con su Interfaz y herramientas básicas.\nCrearemos un entorno 3d hyper realista a las pocas horas de empezar el curso para que veas que eres capaz de crear entornos de calidad AAA de forma rápida y eficiente.\nTras esta prueba de fuego exploraremos el contenido gratuito de calidad AAA que nos trae Unreal y realizaremos un escenario jugable.\nUna vez con las ideas claras iniciaremos nuestra odisea exportando los modelos, animaciones y personajes creador en Blender a Unreal Engine.\nPor fin llegaremos a utilizar Lumen y Nanite para dotar de un realismo singular a nuestro entorno y personaje en UE5.\nSeguidamente seguiremos investigando técnicas de texturizado avanzadas en UE5 o herramientas tan potentes como el Vertex Paint o los Decals.\nEn la siguientes secciones aprenderemos aspectos avanzados como aprender a importar texturas a Unreal, la creación de materiales y partículas y distintos trucos para ambientar nuestros niveles y dar variedad a nuestros entornos.\nPor fin llegaremos ya a los Blueprints para poder crear un pequeño reto al jugador (Si, también aprenderás ALGO de programación en este curso)\nUna vez realizado todo esto haremos la compilación final del juego.\n\n\nQué nos hace unos buenos maestros?\nIsmael Navales Farreras Seré tu instructor de Blender y soy Generalista 3D freelance desde hace 10 años y he trabajado en diferentes aspectos de la producción 3D como el modelado, texturización, rigging, animación y render, tanto en videojuegos, como en animación, y en visualización de producto y arquitectónica. Asimismo, soy profesor en activo desde hace 7 años en diferentes instituciones, entre ellas la universidad de Barcelona (la única universidad de habla hispana que logra llegar al TOP 50 de QS World University Rankings) y la UPC de Barcelona, y también soy formador en empresas.\n\nCarlos Coronado Muñoz (instructor con el que aprenderéis durante gran parte del curso) ha desarrollado más de 5 juegos en solitario con Unreal Engine 4 para diversas plataformas entre las que se incluyen Nintendo Switch, Playstation 4, Steam o VR. Algunos de sus juegos como MIND: Path to Thalamus han ganado premios internacionales como el TITANIUM Indie Game of the Year Award o son considerador directamente GOTY por desarrolladores, youtubes y periodistas de prestigio como Infernium. Además, es profesor de creación de juegos con Unreal Engine 4 y proyectos desde hace más de 4 años en la universidad de Barcelona (la única universidad de habla hispana que logra llegar al TOP 50 de QS World University Rankings). Además, sus cursos sobre Unreal Engine han sido premiados por EPIC GAMES con un Epic Mega Grant!",
      "target_audience": [
        "Apasionados de los videojuegos que quieran aprender a desarrollarlos.",
        "Creadores y estudios de videojuegos con ganas de aprender Unreal Engine 5 y profundizar en el.",
        "Desarrolladores hartos de Unity.",
        "Diseñadores, artistas, programadores y animadores que quieran trabajar con Unreal Engine en la industria del videojuego.",
        "Apasionados del arte 3d que quieran empezar a realizar sus primeros pasos."
      ]
    },
    {
      "title": "Aprendendo a Programar Games com C++ e a Unreal Engine.",
      "url": "https://www.udemy.com/course/programacaonaue4/",
      "bio": "Domine programação de jogos com C++ na Unreal: Crie Games com IA, Inimigos, Armas, Física e Gráficos Profissionais!",
      "objectives": [
        "CURSO TOTALMENTE COMPATÍVEL COM A UNREAL ENGINE 5! CRIEI DIVERSAS AULAS EXPLICANDO TELAS, BLUEPRINTS E COMO FAZER O CONTEÚDO DO CURSO JÁ NA UNREAL 5",
        "Programar seu o Jogador(Player) do Game com Animações, Movimentações, Armas, Efeitos e Física",
        "Aprender a utilizar os recursos de Física, Colisão, Materiais, Static e Skeltal Meshes, Animação e Movimentação de Personagens em seus Jogos",
        "Programar uma Arma tipo Rifle para Atirar, Ter efeitos de Partículas de Impacto de Sangue e na Parede, Causar Danos no Inimigo",
        "Criar Indicação de Saúde do Jogador com Widgets Huds e outras indicações de Tela",
        "Programar seu próprio Game com Linguagem de Programação C++ na Unreal Engine",
        "Utilizar o Paradigma da Programação Orientada a Objetos na criação de Seus Games C++ na Unreal 4",
        "Aprender e Consolidar com Exemplos Práticos sobre: Macros de visibilidade, Delegates, Events, Inputs, Rotações, Arrays Dinâmicos",
        "Templates, Iteradores, Timers, Geração de Atores(Spawn), Tags e muito mais!",
        "Usar com produtividade elevada o motor de Games Unreal Engine e a IDE Microsoft Visual Studio",
        "Compreender a hierarquia de CLASSES, as funções e a estrutura de código C++ utilizado no desenvolvimento de Games na Unreal Engine 4",
        "Saber como aproveitar o poder das Blueprints para estender seu código C++",
        "Inteligência Artificial com Behaviour Tree e Blackboard para Programar Inimigos que atiram e perseguem"
      ],
      "course_content": {
        "Instalação do Visual Studio 2022 e da Unreal Engine 4 ou 5": [
          "Bem-vindo e Bem-Vinda ao Curso - Informações Importantes do Curso!",
          "Apresentação Curso: Confira tudo que você vai aprender nas aulas das 15 seções.",
          "Recado Importante para você!",
          "Confira os conceitos e funcionalidades que você aprenderá antes de criar o game!",
          "Você pode usar versão 2022.",
          "ATENÇÃO: Instale esses workloads Visual Studio 2022 para usar UE5.6 ou superior",
          "Instalando o Visual Studio Community 2019 (instale a versão 2022)",
          "Atenção Instale versão 4.27.2 ou se preferir instale a versão 5.6 ou superior",
          "Instalando a Unreal Engine 5.6 ou superior",
          "Instalando a Unreal Engine , Epic Launcher e Editor",
          "Criando Projetos C++ na Nova Versão da Unreal Engine e Versões Superiores",
          "SOLUÇÃO ERRO NetFxSDK NetFrameWork SDK at 6.0.2 or Higher Error ou outros erros",
          "Se ocorrer o erro de compilação projeto em FHazarRecord() (CONFIRA SE SE É ISSO)",
          "Criando Seu Primeiro Projeto na Unreal Engine",
          "FAZENDO O BACK-UP DE SEU PROJETO E RESTAURANDO BACK-UPS AUTOMÁTICOS DA UNREAL",
          "Atenção: Na Unreal 5 Template Basic Code é o Template BLANK (use este blank C++)",
          "Resolvendo erro OUT OF MEMORY ao executar Unreal Engine ou Visual Studio"
        ],
        "Guia de Sobrevivência da Unreal Engine 4": [
          "Navegando pelo editor da Unreal Engine",
          "TECLAS DE ATALHO TECLADO E MOUSE PARA NAVEGAÇÃO NA CENA DENTRO DO EDITOR UNREAL",
          "Viewports: Vistas Ortográficas",
          "Exercícios Vista Ortográficas",
          "Atores: Inserindo, Manipulando e Duplicando",
          "Atores: Movimentação, Rotação e Escala",
          "Exercícios sobre inserção, manipulação, rotação e escala de atores",
          "Por que existem códigos C#(Csharp) e arquivos .cs em projetos da Unreal Engine?"
        ],
        "Primeiro Passos com C++ e a Unreal Engine 4": [
          "Atualização: Telas de Criação Projeto C++ no Visual Studio Community 2022/2019",
          "Criando Primeiro Programa C++",
          "Analisando Primeiro Programa C++",
          "Onde fica o Botão Compilar (Compile) na Unreal Engine 5?",
          "Crie sua Primeira Classe C++ (AActor) na Unreal Engine 4",
          "Se a opção C++ Classes não aparecer no content browser faça isso",
          "Entenda o Código da Sua Primeira Classe",
          "Criando Arquivo Hint para evitar os falsos positivos (.hint => arquivo de dicas)",
          "Entenda as funções BeginPlay() e Tick() e o Deltatime",
          "Exercícios dos Conceitos estudados na aula",
          "Mais sobre DeltaTime da função Tick()",
          "Como retirar a mensagem exit code 0 ao executar o programa C++",
          "Como Autocompletar UPROPERTY UCLASS USTRUCT UFUNCTION etc Unreal Engine com C++",
          "Configure Visual Studio pra Codar bem na Unreal",
          "Habilitando informação visual de identação de início de fim de cada bloco {...}",
          "Habilitando Intellisense"
        ],
        "Trabalhando com a Classe AActor: Criação e Inserção de Static Meshes": [
          "Error Cannot open source file \"suaclasse.generated.h\" Como Corrigir se acontecer",
          "Inserindo manualmente um componente em AActor",
          "E se ocorrem erros estranhos e não consegui abrir projeto ou carregar o projeto?",
          "Ponteiros C++ na Unreal 4 Sem Medo",
          "CreateDefaultSubobject(): criando componente via código",
          "ConstructorHelpers::FObjectFinder - Setando Componente via Código",
          "Por que colocar -60Z EsferaVisivel->SetRelativeLocation(FVector(0.f,0.f,-60.f));",
          "Explicando Conceitos Aulas CreateDefaultSubobject() e ConstructorHelpers",
          "Tentando deixar O processo de Compilação de projetos C++ na Unreal mais rápido!",
          "Delegates: Exibindo Texto na Sobreposição(overlap) de atores",
          "Utilizando Cores em Hexadecimal ao invés de FColor::Cor",
          "Unreal Crash Reporter - Como Descobrir onde está o erro se a Unreal der Crash",
          "Exercícios de Fixação da Seção",
          "E se você precisar enviar seu projeto do curso para eu analisar...."
        ],
        "A Macro UFUNCTION( ) e seus ESPECIFICADORES": [
          "Macro UFunction( ) BluprintCallable e BlueprintImplementableEvent",
          "Macro UFunction( ) BlueprintNativeEvent",
          "UInputComponent: Controlando Atores Com Inputs",
          "Macro UFunction( )BlueprintPure - Pure Functions",
          "Breve Pesquisa sobre seu próximo curso de Unreal Engine 4"
        ],
        "A Classe AActor": [
          "Conceitos de Orientação a Objetos: Classe, Objeto, Herança",
          "Analisando mais a fundo a classe AActor",
          "Structs C++ Unreal",
          "Rotacionando Atores - AddActorLocalRotation( )",
          "Alterando Transform(Localização, Rotação e Escala) AddActorLocalTransform( )",
          "Sobrecarrega de Funções e Parâmetros Padrão C++ Unreal Engine 4",
          "C++ Palavra-chave(Keyword) auto",
          "O que é Polimorfismo em C++? Conceitos e exemplos",
          "<Templates> C++ Unreal Engine",
          "Um pouco mais sobre <Templates> de função",
          "TArray<AActor*> Arrays Dinâmicos na Unreal Engine 4",
          "UWorld::SpawnActor( ): Gerando Atores em Tempo de Execução - Parte 1",
          "ATENÇÃO: UNREAL 5.6.1 ou superior: Onde fica o TARGET POINT da próxima?",
          "UWorld::SpawnActor( ): Gerando Atores em Tempo de Execução - Parte 2",
          "Analisando a aula anterior UWorld::SpawnActor( )",
          "SpawnActor através de uma Blueprint",
          "Utilizando C++ Timers | GetWorldTimerManager( ).SetTimer( )",
          "Função EndPlay( ) e StartPlay( ) e GetWorldTimerManager( ).ClearTimer( )",
          "Desacelerando o Tempo - Colocando parte de uma ação em Câmera Lenta com Timers",
          "Para que serve o FName(\"Nome Componente\") da função CreateDefaultSubobject?",
          "Como randomizar e deixar os tempos de explosão das granadas diferentes",
          "Como Ter Acesso ao Código Fonte da Unreal Via GitHub"
        ],
        "Iteradores: TActorIterator< > e TObjectIterator<>": [
          "TActorIterator< > e AddRadialImpulse( ) – Impulso Físico Radial na Explosão",
          "Explicando os Conceitos Aula Anterior: TActorIterator< > e AddRadialImpulse( )",
          "TObjectIterator<UObject> Criando Iteradores de Objects",
          "LEIA-ME ANTES DA PRÓXIMA AULA! AActor::GetName()",
          "Encontrando Atores Pelo Nome: GetName() == FString(\"Nome\")",
          "Encontrando com Tags ou Tipo da Classe: ActorHasTag(), ComponentHasTag() e IsA()",
          "Trocando o Jogador Padrão Por um Player da Unreal Com Movimentos e Animação",
          "Manipulando Componentes de Atores com GetComponentByClass( ) e GetOwner( )",
          "Como você pode utilizar essas novas habilidades pra gerar negócios?"
        ],
        "Colisão na Unreal Engine": [
          "ATENÇÃO: Importante Aula Sobre Sistema de Colisão da Unreal Engine (Leia-me!)",
          "Conceitos de Colisão na Unreal 4 Overlap, Hit, Ignore",
          "Como a Unreal Trata Colisão?",
          "Sobreposição(Overlap) de Atores - OnActorBeginOverlap",
          "Sobreposição(Overlap) de Atores - OnActorEndOverlap",
          "Sobreposição(Overlap) em Componentes de Atores - OnComponentBeginOverlap",
          "OnComponentBeginOverlap entendendo os parâmetros da função",
          "Codificando Colisões de Impacto - Hit - OnComponentHit()",
          "Codificando Colisões de Impacto - OnActorHit() - NotifyHit()",
          "Colisão via Raycasting (RayCast) - LineTraceSingleByChannel - Camera",
          "Colisão via Raycasting (RayCast) - LineTraceSingleByChannel - Visibility",
          "SweepMultiByChannel Colisões Com Esfera, Caixa ou Capsula",
          "Comentando Código da Aula Anterior - SweepMultiByChannel",
          "Consolidando a Macro UPROPERTY( ) e seus ESPECIFICADORES Parte 01",
          "Consolidando a Macro UPROPERTY( ) e seus ESPECIFICADORES Parte 02",
          "Site oficial da Unreal com referências de todas as classes, funções, enums C++"
        ],
        "Desenvolvendo O Game SurvivalDeimos: Programando Player Character e Animações": [
          "Criando o Projeto do Game SurvivalDeimos",
          "Error Cannot open source file \"suaclasse.generated.h\" Como Corrigir se acontecer",
          "Arquivos de Dicas(Hint) P/ ajudar VStudio a Ler Macros UCLASS(), UPROPERTY(),etc",
          "Criando a Classe Character e Configurando seus Inputs de Teclado",
          "Programando Funções Inputs Axis Mapping (Mover Para Frente e Mover Direita)",
          "Programando os Inputs Olhar Para Direita/Esquerda e Olhar Para Cima/Baixo",
          "Programando a Câmera e o Câmera Boom (SpringArm) que irá Acompanhará o Jogador",
          "DEBUG LENTO VISUAL STUDIO, VEJA O QUE FAZER",
          "Debugando e Encontrando Erro no Código da Câmera Após Crash da Unreal Engine 4",
          "Importando Pack Animação Gratuita da Unreal 4 e Colocando Malha(Mesh) no Player",
          "Codificando o Movimento de Agachar(Crouch) do Jogador",
          "Configurando as Animações na Blueprint de Animação Do Jogador",
          "Programando o Pulo(Jump) do Personagem",
          "Evitando Erros Blueprint Runtime Error bEstaPulando Após executar o game",
          "Se precisar enviar seu projeto para eu analisar"
        ],
        "Criando e programando a Arma do Player: Malha e Sokets": [
          "Criando e Programando a Classe Arma para Colocar na Mão do Jogador",
          "Utilizando Pacote de Armas(Weapons) da Unreal e Configurando Blueprint do Rifle",
          "Programando Via Blueprint o Spawn(Geração) da Arma do Jogador",
          "Transformando a Blueprint de Geração(Spawn) da Arma em Código C++",
          "Ajustando Socket no Skeleton do Personagem para colocar a Arma na Mão do Jogador",
          "Ajustando Cápsula de Colisão e Câmera Lag no Movimento Agachar(Crouch)"
        ]
      },
      "requirements": [
        "Ter acesso a Internet e computador para aprender a desenvolver Games",
        "Saber Manipular Arquivos, pastas e saber navegar pela internet no Windows",
        "Requisitos mínimos para executar a Unreal Engine 4: Sistema Operacional: Windows 7/8/10 64-bits Processador: Quad-core Intel ou AMD, 2.5 GHz ou superior e Memória: Mínimo de 8 GB RAM",
        "Placa de vídeo: NVIDIA GeForce 470 GTX ou AMD Radeon 6870 HD series card ou superiores com DirectX 11, DirectX 12 ou superior. Obs: Placas com DirectX versão 10 não funcionam com os atuais editores da Unreal Engine"
      ],
      "description": "Garantia de 30 dias da Udemy. Invista no seu futuro sem risco!\nAprenda criar jogos com meu suporte de professor, explicação detalhada de conceitos, códigos comentados e muita prática!\nCURSO TOTALMEMTE COMPATÍVEL COM A UNREAL ENGINE 5!\nCRIEI DIVERSAS AULAS EXPLICANDO TELAS, C++ E COMO FAZER O CONTEÚDO DO CURSO SE VOCÊ QUISER JÁ USAR A UNREAL ENGINE 5\nVá do Básico à Criação de um Jogo Completo com IA: Suporte do Instrutor, Código Comentado e Método Prático.\nVocê quer ir além das Blueprints e dominar a programação C++ dentro da Unreal Engine para criar sistemas complexos, high-performance e ter controle total sobre seu jogo? Este curso é a ponte definitiva entre a teoria do C++ e a aplicação prática em projetos reais de games. Com suporte direto, cada conceito é explicado na teoria e aplicado na engine, do zero até um projeto completo TPS com Inteligência Artificial.\nNÃO APENAS APRENDA C++. APLIQUE-O EM JOGOS REAIS.\nO QUE VOCÊ VAI CONSTRUIR & DOMINAR:\nIntegração Total: Configure o Visual Studio e a Unreal Engine para trabalhar em sincronia. Entenda a estrutura de classes, BeginPlay(), Tick(), e DeltaTime.\nControle com C++: Programe inputs de teclado, movimentação de atores, spawn de objetos (granadas), rotação e física diretamente via código.\nSistemas de IA Profissionais: Implemente Inteligência Artificial com Behavior Trees e Blackboard para inimigos com comportamentos complexos, tudo em C++.\nSistema de Tiro Avançado: Crie raycasting, efeitos de muzzle flash, decalques de impacto, sons espaciais e dano calculado com precisão.\nProjeto TPS Completo (\"Survival Deimos\"): Desenvolva um jogo do zero, incluindo HUD (Widgets), animações, sistema de vida, colecionáveis e armas.\nOtimização & Performance: Use timers, iteradores (TActorIterator), delegates e templates para escrever código eficiente e profissional.\nConceitos Chave Desmistificados: Domine ponteiros, delegates, macros (UFUNCTION), colisões (Overlap/Hit), raycasting e structs com exemplos práticos.\nPARA QUEM É ESTE CURSO?\nPara quem já tem uma base em programação (em qualquer linguagem) e quer migrar para o C++ na Unreal, ou para usuários de Blueprints que desejam ganhar mais poder e flexibilidade codificando diretamente. Não é para iniciantes absolutos em lógica de programação.\nChegou a hora de criar jogos com o poder total do C++.\nCom suporte direto para tirar todas as suas dúvidas ao longo do projeto!\n\nAprenda a desenvolver games com C++ na Unreal Engine com meu suporte total de professor durate todo o seu curso! Com todos os códigos comentados e exercícios práticos, você vai entender os conceitos passo a passo, com mini projetos guiados, até chegar ao desenvolvimento completo de um game TPS, dominando a lógica por trás da programação de jogos.\nOi Tudo bem com você? Espero que sim!\nEu Sou o Professor Marcos Pacheco e vou te guiar e te apoiar durante todo este curso!\nVocê já pensou em criar seus próprios jogos? Se sim, saiba que agora é o momento perfeito para você começar. E para isso, eu te convido a se inscrever neste curso \"Aprendendo a Programar Games com C++ e a Unreal Engine\".\nEste curso é o ponto de partida para você se tornar um desenvolvedor de jogos. Você irá aprender a programar utilizando a linguagem C++ e a Unreal Engine, uma das ferramentas mais poderosas para criar jogos profissionais. Com a minha orientação de professor experiente, você irá adquirir diversas habilidades necessárias para construir seus próprios jogos, desde o início até a programação do jogo em si.\nAlém disso, aprender a programar jogos é um investimento para o seu futuro profissional. A indústria de jogos está em constante crescimento e demanda profissionais qualificados. Com o conhecimento adquirido neste curso, você iniciará sua preparação para tentar se destacar nesse mercado repleto de oportunidades.\nE por último, mas não menos importante, programar jogos é uma atividade extremamente divertida e criativa. Com a ajuda da Unreal Engine, você terá a liberdade para criar mundos virtuais incríveis, personagens cativantes e games desafiadores.\nNESTE ANO: NOVOS PERSONAGENS PARA JOGADOR E INIMIGOS\nCURSO COMPATÍVEL COM AS VERSÕES MAIS RECENTES DA UNREAL ENGINE 5 E VISUAL STUDIO 2022!\nVOCÊ SE INSCREVERÁ NESTE CURSO SEM RISCOS, POIS TERÁ 30 DIAS PARA EXPERIMENTAR O CURSO OU TER SEU DINHEIRO DE VOLTA, COM  REEMBOLSO GARANTIDO PELA UDEMY!\nEntão, não perca mais tempo e se inscreva agora no curso \"Aprendendo a Programar Games com C++ e a Unreal Engine\". Você não vai se arrepender!\nEste curso é destinado para qualquer pessoa que queira programar e criar jogos mesmo se não tiver experiência!\nVocê vai aprender os conceitos iniciais sobre as principais classes C++ para criar games na Unreal Engine.\nVai programar miniprojetos com todos os códigos comentados e conceitos explicados e depois vai aprender a desenvolver do zero um game no estilo TPS (Third Person Shooter - Atirador  em Terceira Pessoa) utilizando C++ a e Unreal Engine com Inteligência Artificial  (Behaviour Tree e BlackBoard) e muito mais!\nOi! Tudo bem com você?\nEu sou o professor Marcos Pacheco e estudo Unreal Engine desde 2010. Ensinei programação em Universidade por 10 anos para alunos e alunas de Sistemas de Informação, Ciência da Computação e Engenharias. Atualmente ensino exclusivamente aqui na UDEMY. Possuo Mestrado que teve como tema: Games. Nele desenvolvi um game educacional (Unlock the Doors) utilizando a Unreal Engine 3.\nAlém disso:\n\n\nEu comento e explico todos os códigos do curso e este é um dos motivos que o curso é tão bem avaliado\nEu explico conceitos através de slides e via programação passo a passo para que tudo fique nítido para você\nVocê desenvolve miniprojetos para aplicar o que aprendeu\nVocê vai usar um programa profissional para programar em C++: o Visual Studio\nA Unreal Engine é o mais famoso e principal motor (Engine) para desenvolvimento de jogos da atualidade!.\nÉ a mesma tecnologia que deu vida ao Fortnite, Gears of War, Borderlands, Batman: Arkham, Mass Effect, Final Fantasy VII Remake, e muitos outros games de sucesso!\nE o melhor:\n\n\nVocê não precisa ter conhecimentos prévios para começar a desenvolver seus games\nVocê pode programar jogos inteiros sem usar códigos usando as Blueprints\nÉ totalmente gratuita em sua versão full (completa)!\nVocê terá a sua disposição diversos mapas, assets, personagens, materiais, animações e muito mais totalmente gratuitos no marketplace da Epic Games!\nPor isso, a Unreal Engine é um dos motores gráficos mais utilizados na indústria de games atualmente, abrindo espaço para grandes desenvolvedoras e pequenos estúdios indie desenvolverem games de sucesso e com altíssima qualidade!\n\n\nTODOS OS RECURSOS: ASSETS, ANIMAÇÕES, PERSONAGENS, SONS, FERRAMENTAS, ETC, UTILIZADOS NESTE CURSO SÃO GRATUITOS!\n\n\nE o que você irá aprender?\nNa primeira parte do curso:\nAo iniciar o curso você irá instalar e dará seus primeiros passos no Visual Studio Community e na Unreal Engine.\nDepois irei te ensinar a utilizar estas duas ferramentas, incluindo um guia de sobrevivência para a Unreal Engine.\nApós esta ambientação com as ferramentas você dará o início aos seus estudos com C++ e a Unreal Engine.\nVocê Irá criar seu primeiro programa C++ e sua primeira classe C++ dentro da Unreal e todos os conceitos e códigos serão explicados.\nVocê vai analisar e aprender com mais profundidade sobre as funções essenciais BeginPlay() e Tick() e o sobre o parâmetro Deltatime.\nDepois vai conhecer a classe AActor através da criação e inserção de Static Meshes, rotação de atores, criação de atores em tempo de compilação e em tempo de execução.\nIrá aprender de forma bem explicada sobre os ponteiros C++ e ver exemplos de uso na Unreal Engine.\nVai conhecer e aprender a manipular as importantes funções  CreateDefaultSubobject(),  FObjectFinder() que serão usadas e explicadas\nDepois você verá o conceito e uso de funções Delegates que será usado em conjunto com os eventos de Sobreposição(overlap) de atores.\nPosteriormente  a macro UFUNCTION( ) e seus ESPECIFICADORES serão explicados para que você possa usar e saber o que é uma macro e o que elas significam no código C++ da Unreal (Integração entre código e editor)\nAlém disso, você vai programar o controle e movimentação de atores pelo cenário através de INPUTS de Teclado.\nDepois vai aprender sobre importantes conceitos de Orientação à Objetos: Classes, Objetos e Herança\nA seguir você irá analisar mais a fundo a classe AActor.\nEm seguida vai conhecer também sobre as Structs C++ na Unreal\nIrá aprender o conceito e o uso da Palavra-chave(Keyword) auto\nIrá usar e aprender a programar com os importantes <Templates> C++\nVai conhecer o conceito e praticar a programação de Arrays Dinâmicos na Unreal Engine.\nDepois vai aprender a usar a função SpawnActor( ) para gerar atores(granadas) em tempo de execução.\nVocê vai usar o conceito de Timers para acionar eventos e funções por determinado período estipulado de tempo e  como desacelerar o tempo colocando parte de uma ação em câmera lenta.\nDepois você vai aprender os conceitos e utilização dos Iteradores: TActorIterator< > e TObjectIterator< >\nA como usar tags para manipular atores e objetos em seu game.\nPosteriormente o importante tema Colisão será amplamente abordado e explicado para que você aprenda como a Unreal Engine trata colisão (Overlap, Hit, Ignore, OnActorBeginOverlap, OnActorEndOverlap, Raycasting, LineTraceSingleByChannel)\nNa segunda parte do curso vira a aplicação dos seus conhecimentos adquiridos na construção de um Game estilo TPS (Tiro em Terceira Pessoa). Você irá desenvolver o game que nomeie como Survival Deimos.\nVocê vai neste projeto programar do zero em C++ na Unreal:\nO Player(Jogador) com personagem e suas animações\nOs Inputs de teclado que irão movimentar o Jogador(player)\nA câmera e o câmera boom (SpringArm) que irá acompanhar o jogador durante o Game\nA como aplicar danos dos tiros do inimigo no jogador e dano do tiro do jogador no inimigo.\nAlém disso, você vai usar Pack Animação Gratuita da Unreal e configurar as animações do jogador e inimigo.\nIrá colocar a Malha(Mesh) no jogador e configurar sockets para colocação da arma do jogador.\nPosteriormente vai programar a arma do jogador para atirar através do conceito de RayCasting\nVai configurar e programar os  Efeitos de Muzzle Flash da Arma\nVai programar os efeitos visuais de Decal Material de Impacto de sangue e furo da bala no chão e paredes\nDepois vai configurar e programar o efeito de Som do Tiro.\nVocê vai programar em C++ a Inteligência Artificial Avançada com Behavior Tree e BlackBoard.\nDepois vai aprender a colocar e programar as informações na tela do game através de Elementos de HUD(Head-up Display) WIDGET.\nEm seguida você vai criar um cenário de level design.\nVai colocar diversas static meshes de qualidade, sistema de partículas de fogo, fumaça, faísca, poeira.\nVai aprender a inserir e configurar uma névoa(Exponential Height Fog) que será inserida em todo o cenário.\nVai inserir luzes (Point Light e spot light), modificar materiais e muito mais.\n\n\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\nNo Brasil, há mais de 1.000 estúdios de desenvolvimento de jogos, refletindo o crescimento e a diversificação do mercado local (Visual Capitalist) . Globalmente, existem milhares de estúdios, com grandes concentrações na América do Norte, Europa e Ásia, particularmente no Japão, China e Coreia do Sul.\nO Unreal Engine é uma ferramenta versátil que oferece grande valor em várias indústrias, proporcionando alta demanda para profissionais qualificados. A indústria de games continua a ser um campo lucrativo e em crescimento, com amplas oportunidades para desenvolvedores de jogos e outras áreas interdisciplinares utilizando ferramentas como o Unreal Engine. O desafio principal será atender à demanda crescente por profissionais qualificados, especialmente no Brasil, onde a oferta de mão de obra especializada ainda é limitada.\nOportunidades com Unreal Engine\nPara aqueles com experiência no Unreal Engine, as oportunidades se estendem muito além do desenvolvimento de jogos:\nGames: Criação de jogos AAA, realidade virtual e aumentada.\nArquitetura: Modelagem e visualização arquitetônica em tempo real.\nMarketing: Produção de conteúdos interativos e envolventes para campanhas publicitárias.\nEngenharia: Simulações e prototipagem de produtos.\nCinema: Utilização em produções de efeitos especiais e animação.\nEmbarque nesta emocionante jornada de aprendizado e inicie sua trajetória para se tornar um programador de games, contando com todo o meu apoio ao longo de todo o curso!\nPossuo mais de 20 mil alunos na Udemy e a maioria deles está satisfeito com minha didática de ensino ;)\nAproveite!\nVocê pode se inscrever neste curso sem riscos, pois terá 30 dias para experimentar o curso ou ter seu dinheiro de volta, com  reembolso garantido pela udemy!\nComo a Udemy garante acesso vitalício você poderá fazer quando quiser, de onde estiver e no seu próprio tempo.\nVocê já pensou em fazer um curso na Udemy onde o professor realmente responde suas dúvidas, te orienta, e te acompanha de verdade durante toda a sua jornada?\nPois é exatamente isso que você vai encontrar nos meus cursos.\nDesde a primeira aula, você pode enviar quantas perguntas quiser, relacionadas aos conteúdos do curso, e eu estarei lá para te apoiar, corrigir seus erros e esclarecer suas dúvidas.\nNada de estudar sozinho ou ficar travado sem saber o que fazer. Aqui o aprendizado é interativo e com acompanhamento.\nEntão, use e abuse da ferramenta de perguntas da Udemy! Ela é seu canal direto comigo — e eu adoro quando os alunos participam.\nUm grande abraço!\nNos encontramos já!\nProfessor Marcos Pacheco",
      "target_audience": [
        "Pessoas interessadas em aprender como programar games com C++ e a Unreal Engine 4",
        "Pessoas interessadas em fazer jogos eletrônicos com a linguagem de programação mais utilizada no mundo para desenvolver jogos: A Linguagem de Programação C++",
        "Pessoas que desejam começar a fazer games em uma ferramenta poderosa responsável pela criação de diversos games famosos.",
        "Alunos de cursos de Computação e afins interessados em programação de Games",
        "Programadores interessados em aprender sobre desenvolvimento de Jogos com a Unreal Engine 4 e Linguagem de Programação C++",
        "Analistas de Sistemas, Programadores ou Profissionais de TI que desejam começar a desenvolver games com C++ e Unreal Engine 4"
      ]
    },
    {
      "title": "Débuter avec Unity et le 3D Game Kit sans rédiger de code",
      "url": "https://www.udemy.com/course/debuter-avec-unity-et-le-3d-game-kit-sans-rediger-de-code/",
      "bio": "Votre jeu sans aucune ligne de code avec Unity et le 3D Game Kit (Zero Code)",
      "objectives": [
        "Comprendre et réaliser des niveau grâce au Game Kit 3D d' Unity",
        "Decouvrir Unity"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Initiation a Unity": [
          "Installation d'Unity (Unity Hub)",
          "Découverte de l'interface d' Unity",
          "Importation du 3D GameKit dans Unity",
          "Initiation Unity"
        ],
        "Utiliser les prefabs du 3D Game Kit": [
          "Créer une nouvelle scène de jeu",
          "Paramétrer Ellen et l'armer",
          "Ajout d'une plate-forme mobile",
          "Ouverture d'une porte avec une commande",
          "Les ennemis",
          "Destructive Box",
          "Causer des dégâts",
          "Teleporteur",
          "Bain d'acid (Acid pool)",
          "Régénétation de vie",
          "CheckPoint",
          "Limite de terrain",
          "Zone d'Information",
          "Compteurs et commutateurs",
          "Cinematic Timeline",
          "Charger le level suivant",
          "Utilisation des Préfabs"
        ],
        "Level Design": [
          "Probuilder tools Modélisation",
          "Polybrush Vertex Colorisation",
          "Prefab d'Environement",
          "Vegetation & rock painter",
          "Gestion Musicale et sonore"
        ],
        "Compilation du jeu (version Windows)": [
          "Organisation de la scéne",
          "Timelaspe : Réalisation d'un Level",
          "Compilation Windows",
          "Session bonus"
        ]
      },
      "requirements": [
        "Un ordinateur"
      ],
      "description": "Unity Technologies a lancé  son 3D Game Kit. Ce pack se destine aux non-programmeurs et comprend une collection  d'éléments de gameplay et outils que vous pourrez utiliser sans taper la  moindre ligne de code.\nUn jeu 3D avec deux niveaux est inclus en  exemple.\nLe tout est gratuit, Unity et ce Kit !\n\n\nDans ce cours vous apprenez a exploiter :\nUtiliser les préfabs\nInitiation a Unity et son environnement de travail.\nParamétrer le personnage principal : Ellen\nCréer et designer un Level personnalisé.\nUtiliser les composants du Kit\nGérer l'audio\nCompiler votre jeu pour Windows",
      "target_audience": [
        "Tout le monde désirant débuter avec Unity",
        "Tout le monde désirant débuter avec le 3D Game Kit"
      ]
    },
    {
      "title": "Criação de Jogos para Android com Java e LibGDX",
      "url": "https://www.udemy.com/course/curso-de-criacao-de-games-para-android-com-libgdx/",
      "bio": "Aprenda na prática criando jogos famosos como Flappy Bird, Snake e Piano Tiles. Um jeito divertido de aprender Java!",
      "objectives": [
        "Criar diversos games para Android conforme suas necessidades.",
        "Desenvolver códigos em Java sem dificuldades.",
        "Publicar games e apps na loja da Google, Play Store.",
        "Utilizar os principais recursos do Android Studio e Emulador."
      ],
      "course_content": {
        "Antes de Começar": [
          "Utilizando o Player da Udemy",
          "Como Fazer Boas Perguntas?",
          "Links Úteis",
          "Download - Gráficos para Jogos 2D",
          "Download - Músicas e Efeitos para Jogos"
        ],
        "Java Básico": [
          "Introdução ao Java",
          "Utilizando Variáveis",
          "Operadores Aritméticos",
          "Operadores Lógicos",
          "Java Básico - Parte 1",
          "Tomando Decisões",
          "Realizando Repetições",
          "Arrays e Listas",
          "Criando Funções",
          "Java Básico - Parte 2"
        ],
        "Java Orientado a Objetos": [
          "O que é Orientação a Objetos?",
          "Classes, Atributos e Métodos",
          "Construtores e Objetos",
          "Encapsulamento e Modificadores de Acesso",
          "Membros Estáticos e Final",
          "Herdando Classes",
          "Implementando Classes"
        ],
        "Android Studio e Emulador": [
          "Download e Instalação",
          "Introdução ao Android Studio",
          "Utilizando o Emulador Padrão"
        ],
        "Matemática para Games": [
          "Sistema de Coordenadas",
          "Vetores",
          "Cálculo de Frames",
          "Matemática para Games"
        ],
        "Introdução à LibGDX": [
          "Download e Criação do Projeto Windows",
          "Download e Criação do Projeto Linux",
          "Estrutura do Projeto e Ciclo de Vida",
          "Desenhando Imagens",
          "Criando Sprites",
          "Recebendo Toques na Tela",
          "Desenhando Formas",
          "Tocando Sons",
          "Introdução à LibGDX - Parte 1",
          "Mudando de Tela",
          "Gerenciando Assets",
          "Criando SplashScreen",
          "Utilizando Câmeras",
          "Diferentes Tamanhos de Telas",
          "Introdução à LibGDX - Parte 2",
          "Desenhando Textos",
          "Criando Animações",
          "Armazenando Dados",
          "Interface Código Específico",
          "Introdução à LibGDX - Parte 3"
        ],
        "Piano Tiles": [
          "Apresentação do Jogo",
          "Planejando o Desenvolvimento",
          "Criando o Projeto",
          "Criando e Desenhando Fileiras",
          "Deslocando as Fileiras",
          "Recebendo Toques",
          "Adicionando Novas Fileiras",
          "Animando Tile",
          "Criando o Piano e Exibindo Título",
          "Exibindo a Velocidade e Pontuação",
          "Encerramento"
        ],
        "Snake": [
          "Apresentação do Jogo",
          "Planejando o Desenvolvimento",
          "Criando o Projeto",
          "Tela Inicial",
          "Configurando Tela do Jogo",
          "Criando Partes da Snake",
          "Movimentando a Snake",
          "Mudando Direção",
          "Criando \"Pontos\"",
          "Encerramento"
        ],
        "Flappy Bird": [
          "Apresentação do Jogo",
          "Planejando o Desenvolvimento",
          "Criando o Projeto",
          "Desenhando e Animando a Paisagem",
          "Criando o Pássaro Animado",
          "Movimentando o Pássaro",
          "Criando os Canos",
          "Gerando Canos",
          "Colisão e Estados",
          "Contando Pontos",
          "Exibindo Pontos",
          "Adicionando Botões e Sons",
          "Encerramento"
        ],
        "Publicando seu Game": [
          "Criando Conta de Desenvolvedor",
          "Implementando Ranking e Conquistas",
          "Código Principal",
          "Criando Botão do Ranking",
          "Inserindo Icone e Gerando APK",
          "Publicando seu Game",
          "Finalizando Publicação"
        ]
      },
      "requirements": [
        "É necessário ter um computador Windows, Mac ou Linux.",
        "NÃO é necessário nenhum conhecimento prévio sobre programação.",
        "Vontade de aprender e estudar.",
        "Todas as ferramentas que utilizaremos são GRATUITAS."
      ],
      "description": "ATENÇÃO: Este é um curso de 2016 e portanto algumas coisas estão desatualizadas. Mesmo assim, caso queira aprender sobre LibGDX este curso ainda possui muito conteúdo que pode te ajudar!\nSeja bem-vindo(a) ao curso de Criação de Jogos para Android!\nGostaria de aprender Java sem ter que ficar lendo um monte de teoria chata?\nJá teve alguma ideia que renderia um ótimo jogo, mas não sabia como colocá-la em prática?\nSonha em trabalhar desenvolvendo jogos ou softwares em Java?\nEntão você está no lugar certo!\nNeste curso você aprende tudo que é necessário para criar seus games em Java!\nNão sabe nada sobre programação? Não tem problema, te ensinaremos!\nNeste curso criaremos três Games semelhantes aos famosos: Flappy Bird, Snake e Piano Tiles! E no final, ainda veremos como implementar um sistema de Ranking Online, Conquistas e a publicar seu Game na loja da Google, a Play Store!\nO que está esperando para começar a criar seus Games incríveis? Não perca tempo! Inscreva-se já!",
      "target_audience": [
        "Alunos de Ciência e Engenharia da Computação.",
        "Entusiastas de Desenvolvimento e/ou Design de Games.",
        "Pessoas que tem o desejo de realizar seu próprio game.",
        "Pessoas que querem aprender Java de forma prática."
      ]
    },
    {
      "title": "Learn to use Python with Unreal Engine Blueprint IN GAME",
      "url": "https://www.udemy.com/course/learn-to-use-python-with-unreal-engine-blueprint-in-game/",
      "bio": "Use Python with UE5!",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic understanding of Python programming language and Unreal Engine"
      ],
      "description": "This tutorial will guide you through the process of creating a basic TCP Python server. You will learn how to set up the server and establish a connection with Unreal Engine. This will enable you to integrate Python code into your game development workflow and create more advanced games.\n\n\nIn addition, you will explore how to package your game as a Windows application, which will make it accessible to a wider audience. You will learn to use various tools and techniques to optimize your game for performance and reduce its memory footprint.\n\n\nBy the end of this tutorial, you will have a thorough understanding of how to use Python to create a fully functional game that's ready for distribution. You will gain valuable knowledge in integrating Python into your game development pipeline and be equipped to use it in future projects.\n\n\nIf you're interested in exploring the potential of Python with Unreal Engine 5, then do check out my YouTube channel. My channel is packed with informative and engaging content that can help you learn how to use Python with Unreal Engine 5 and create some amazing projects. So, don't miss out on this opportunity, and subscribe to my channel now!",
      "target_audience": [
        "Python developers curious about game development",
        "Developers how want to use python in Unreal Engine"
      ]
    },
    {
      "title": "Como Crear Videojuegos 2D en Unity: Sunset Riders",
      "url": "https://www.udemy.com/course/como-crear-videojuegos-2d-en-unity-sunset-riders/",
      "bio": "Making Games in Unity: Sunset Riders",
      "objectives": [
        "Crear Videojuegos con Unity",
        "Recrear un Clásico de los Videojuegos",
        "Manipular Unity",
        "Programación Básica en C#",
        "Manipular Diferentes y Tipicos Algoritmos para el Desarrollo de Videojuegos"
      ],
      "course_content": {
        "Introducción": [
          "Introducción"
        ],
        "Preparando el Terreno": [
          "Instalando Unity, Visual Studio y Gimp 2",
          "Obteniendo Recursos Base del Juego",
          "Interfaz de Unity y Creación de Proyecto"
        ],
        "Preparando Recursos del Juego": [
          "Adaptando Sprite de Caminar",
          "Adaptando Sprite de Reposo 1 (Billy)",
          "Adaptando Sprite de Reposo 2 (Billy)",
          "Adaptando Sprite de Reposo 3 (Billy)",
          "Agregando Transparencia (Alpha)"
        ],
        "Primeros Pasos en Unity": [
          "Primer Sprite en Unity",
          "Mas Sprites en Unity",
          "Insertando Sprites en Escena",
          "Creación de GameObject",
          "Agregando Fondo del Nivel (Background)",
          "Efecto de Imagen y Posición en Capa (Z Index)",
          "Creando el Primer Script"
        ],
        "Programación en C# (entrando en la Matrix)": [
          "Conceptos Básicos de Programación",
          "Variables",
          "Tipos Basicos de Variables",
          "Alcance y Estructura de Variables",
          "Asignación de Datos",
          "Operaciones",
          "Consola",
          "Operaciones con Texto",
          "Condiciones (IF)",
          "Complemento a Condicion (ELSE IF / ELSE)",
          "Clases"
        ],
        "Movimiento del Jugador": [
          "Procesando Eventos del Teclado",
          "Moviendo Posición",
          "Cuerpos Físicos",
          "Gravedad",
          "Moviendo Cuerpo",
          "Creando un Suelo",
          "Colisión Básica",
          "Colisión Con Objeto Específico",
          "Suelo y Gravedad",
          "Moviendo el Personaje Mediante Teclas",
          "Volteando al Personaje",
          "Sprites Dinamicos"
        ],
        "Animando a Billy": [
          "Animaciones de Caminar",
          "Ajustando Sprite de Caminar",
          "Fix de Sprite en Volteado",
          "Animacion de Reposo",
          "Animator",
          "Modificando Estados de Animator"
        ],
        "Camara": [
          "Asignando Camara al Jugador (Modo Sencillo)",
          "Camara Personalizada",
          "Limites"
        ],
        "Salto del Personaje": [
          "Animacion de Salto",
          "Transición de Salto",
          "Simluación Física de Salto",
          "Transicion de Salto a Reposo"
        ],
        "Etapa de Fixeo 1": [
          "Fixeando de Salto",
          "Fix Patinaje",
          "Fix Congelamiento Robotico"
        ]
      },
      "requirements": [
        "Una Computadora"
      ],
      "description": "En este curso enseñamos a utilizar Unity para la creación de videojuegos gratis, de forma sencilla y explicado sin tecnicismos innecesarios, buscando los mejores resultados posibles a traves de la experiencia.\nEn ésta ocasión recreando el juego del Sunset Riders aprenderemos los fundamentos básicos que nos permitirán diseñar un juego de plataformas (inclusive para 2 jugadores) tanto básico como complejo, comprendiendo las características fundamentales para llevarlo a cabo.\nAdemás recreamos los diferentes actores del primer nivel del juego, así como un avanzado sistema de detección de suelos y planos inclinados.\nSe exhiben fundamentos de la interfaz de Unity, Gimp2 (diseño de Sprites), lógicas y algoritmos ante diferentes aspectos de videojuegos de plataforma, y manejo del lenguaje C#.",
      "target_audience": [
        "Quien desea aprender a crear un videojuego clásico"
      ]
    },
    {
      "title": "Como hacer un juego tipo Metroidvania en Unity 2D Intermedio",
      "url": "https://www.udemy.com/course/como-hacer-un-juego-tipo-metroidvania-en-unity-2d/",
      "bio": "Aprende a como crear un videojuego tipo Metroidvania",
      "objectives": [
        "Un Curso Nivel Intermedio en Español - En este curso aprenderás a como crear un videojuego con las mismas mecanicas de castlevania"
      ],
      "course_content": {
        "Introduction": [
          "¿Qué vamos a hacer en este curso?"
        ],
        "Configuración del proyecto": [
          "Instalando Unity (OPCIONAL)",
          "Creando un proyecto en Unity (OPCIONAL)",
          "Importando los assets del proyecto (IMPORTANTE)",
          "Creando un Tilemap básico"
        ],
        "Implementación de las mecánicas del heroe": [
          "Primeros Pasos",
          "Programando Movimiento Básico del Héroe",
          "Creando las Animaciones del Héroe",
          "Programando el salto del Héroe",
          "Programando el Doble Salto",
          "Programando el Ataque del Héroe",
          "Implementando \"Aplicar Daño a un GameObject\"",
          "Programando el Feedback del Daño",
          "Haciendo que el Héroe Reciba Daño"
        ],
        "Añadiendo Audio al videojuego": [
          "Creando AudioManager con Patron Singleton"
        ],
        "Programando La Camara del Videojuego": [
          "Programando El Movimiento de La Cámara",
          "Programando el Efecto Parallax",
          "Solución de Bugs"
        ],
        "Creando Power Ups": [
          "Definiendo los Objetos Coleccionables",
          "Programando Magias Parte 1",
          "Programando Magias Parte 2"
        ],
        "Creando Coleccionables - Corazon y Moneda": [
          "Programando el Corazones y Monedas",
          "Programando las \"velas\" tipo Castlevania"
        ],
        "Programando Plataformas Especiales": [
          "Definiendo La clase WayPoints o Camino de Puntos",
          "Programando una plataforma Movil",
          "Creando una Plataforma Atravesable"
        ],
        "Programando la Inteligencia artificial de los enemigos": [
          "Programando El Skeleton",
          "Programando El Ghost",
          "Programando el enemigo HellGato"
        ],
        "Manejo de Escenas": [
          "Cargando Escenas Y Posicionando Al Jugador correctamente"
        ]
      },
      "requirements": [
        "Necesitas tener conocimiento de programacion en C#",
        "Necesitas conocer el motor de Unity almenos lo basico , manejo de ventanas y herramientas basicas (Consola, etc,)"
      ],
      "description": "En este curso aprenderas como hacer un videojuego 2d tipo metrovania en el motor grafico Unity, aprenderas a como crear las mecanicas principales del videojuego, inteligencia artificial de enemigos, un nivel completo, transiciones entre escenas, persistencia de datos, a la mitad del curso vas a aprender a como programar un jefe final.\n\n\nConceptos que aprenderas en este curso:\n\n\n\n\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo\n\n\n\n\n\n\n\n\n\n\nTAGS:\n\n\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo\n* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo* TileMaps\n*Como programar las mecanicas del protagonista\n* Como programar diferentes enemigos\n* Como programar un jefe final\n* Transiciones entre escenas\n* Diseñar un nivel completo\n* Diseñar UI\n* Diseñar el HUD\n* Diseñar una pantalla de titulo",
      "target_audience": [
        "Unity",
        "C#",
        "Videojuegos",
        "Desarrollo de videojuegos",
        "Unity 2D"
      ]
    },
    {
      "title": "Aprende a Programar Videojuegos con Game Maker Studio 2",
      "url": "https://www.udemy.com/course/aprende-a-programar-videojuegos-con-game-maker-studio-2/",
      "bio": "Desarrolla tus propios videojuegos en 2D con esta fantástica herramienta",
      "objectives": [
        "Aprenderás desde CERO a crear un juego completo, paso a paso.",
        "Utilizarás la última versión de la herramienta Game Maker Studio 2 para hacer tus propios proyectos.",
        "Diseñarás diferentes de juego. Descubre y domina el uso de las Rooms.",
        "Conocerás todos los recursos disponibles para dar vida a tu juego (gráficos, animaciones, sonidos...).",
        "Programarás de forma sencilla todos los elementos de un objeto: propiedades, eventos y acciones.",
        "¡Desarrolla tus propios videojuegos en 2D!"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "¿Por qué usar Game Maker Studio 2?",
          "Un paseo por la web de Game Maker Studio (yoyogames.com)",
          "Descarga e instalación del programa",
          "Interfaz gráfica de Game Maker Studio 2",
          "Actualización del programa",
          "Últimas novedades de Game Maker Studio"
        ],
        "Primer proyecto: juego de naves": [
          "Introducción",
          "Descarga de recursos",
          "Qué es una room (o habitación)",
          "Qué es un sprite",
          "Qué es un objeto",
          "Programar nuestro primer evento",
          "Añade una imagen de fondo al juego",
          "Cómo crear meteoritos de fondo",
          "Qué es una variable",
          "Usar variables en el meteorito",
          "Cómo crear disparos en la nave del jugador",
          "Programar alarmas",
          "Cómo crear nuestro primer enemigo",
          "Programar como aparecen los enemigos",
          "Eliminar enemigos",
          "Añadir vidas al juego",
          "Añadir puntuación al juego",
          "Definir niveles con timelines",
          "Cómo añadir sonidos",
          "Herencia de objetos",
          "Proyecto final naves"
        ],
        "Crear un juego de plataformas": [
          "Introducción",
          "Descargar recursos plataformas",
          "Añadir el primer sprite",
          "Añadir sprite del jugador",
          "Programar los eventos de movimiento",
          "Añadir gravedad al protagonista",
          "Programar el salto",
          "Reprogramar eventos con nuevos sprites",
          "Definir la room del juego",
          "Crear una máscara personalizada",
          "Dibujar nuestra room con tiles",
          "Crear el primer enemigo",
          "Añadir una marca para los enemigos",
          "Crear un nuevo enemigo (slime)",
          "Como eliminar a slime",
          "Dibujar vidas",
          "Gestionar vidas y daño",
          "Controlar cuando nos quedamos sin vidas",
          "Añadir puntuación",
          "Añadir monedas",
          "Cambiar de nivel o room",
          "Diseñar un nuevo nivel",
          "Crear vistas en room",
          "Corregir algunos errores con las vistas",
          "Crear un precipicio",
          "Crear una rampa",
          "Programar que suba la rampa",
          "Crear y programar escaleras",
          "Añadir sonido al juego",
          "Proyecto final plataformas"
        ],
        "Crear un juego de plataformas (NUEVO)": [
          "Introducción",
          "Descarga de recursos",
          "Añadir el primer sprite",
          "Añadir el sprite del jugador",
          "Añadir movimiento horizontal al protagonista",
          "Cambiar cámara de nuestra habitación o room",
          "Salto y gravedad del protagonista",
          "Añadir animaciones de movimiento",
          "Crear una máscara personalizada",
          "Pintar nuestra room con imagenes de fondo y tiles"
        ],
        "Opciones comunes en todos tus juegos: Menús y guardar partidas": [
          "Introducción",
          "Añadir un botón al menú",
          "Crear fondo al menú",
          "Agregar opciones de audio y música",
          "Como usar variables globales",
          "Crear una room de selección de niveles",
          "Desbloquear los niveles que vamos jugando",
          "Como guardar tu juego: introducción a los ficheros",
          "Scripts: como guardar las opciones del juego",
          "Guardar el idioma en nuestro proyecto",
          "Guardar y configurar textos en diferentes idiomas",
          "Programar los textos de idioma",
          "Proyecto final: menús y opciones globales"
        ]
      },
      "requirements": [
        "No es necesario tener conocimientos previos de programación.",
        "Todo el curso se puede hacer con la versión trial (gratuita) de Game Maker Studio 2.",
        "Necesitarás un ordenador con sistema operativo Windows 64 bits",
        "O bien un Mac OS (sistema operativo Mac OSX El Capitán o superior).",
        "¡Mucha motivación y ganas de aprender a crear tus propios juegos!"
      ],
      "description": "*** Este curso solamente funciona con el programa Game Maker Studio 2 ***\nEl contenido del curso se actualizará de forma frecuente. Habrá nuevos juegos próximamente.\n¡MUY IMPORTANTE! Si utilizas un ordenador con Windows, el sistema operativo debe ser de 64 bits.\n¿Siempre te ha gustado jugar a videojuegos, en consolas o en pc? ¿Quieres aprender a programar videojuegos? ¡Ahora es el momento de aprender a diseñarlos!\n¿No sabes programar? Este es el primer paso. Gracias a Game Maker Studio 2 y el curso que tienes delante, aprenderás lo necesario para programar un juego.\nGame Maker se creó para enseñar los fundamentos de la programación a niños a partir de los 10 años y, aunque el programa ha cambiado a lo largo de los años (y sobretodo con esta última versión), su facilidad a la hora de crear videojuegos no ha cambiado.\nGame Maker Studio 2 utiliza un sistema de acciones Drag&Drop predefinidas. Simplemente arrastrar y soltar en el orden correcto, y ya puedes crear un juego sin escribir ni una línea de código. En este curso aprenderás a utilizarlas de una manera práctica, aplicándolas en distintos tipos de juegos.\nEste curso es para principiantes: sabrás como funciona el programa, los diferentes recursos que puedes agregar, como funcionan los objetos, como añadir diferentes niveles con rooms... y así ir construyendo tu propio videojuego paso a paso.\nNo llegaremos a ver el lenguaje GML (el lenguaje de programación propio de Game Maker), pero aprenderás los fundamentos de la programación necesarios que te permitirá hacer cosas más avanzadas.",
      "target_audience": [
        "Este curso está dirigido a todos los que quieran ser desarrolladores de videojuegos 2D.",
        "A cualquier persona que quiera aprender a programar juegos con la herramienta Game Maker Studio 2.",
        "Si ya conoces Game Maker, este NO es tu curso."
      ]
    },
    {
      "title": "Le guide ultime du développement de jeux avec Unity",
      "url": "https://www.udemy.com/course/le-guide-ultime-du-developpement-de-jeux-avec-unity/",
      "bio": "Apprenez à créer des jeux professionnels de A à Z avec Unity",
      "objectives": [
        "Comprendre les fondamentaux d'Unity et sa place dans le développement de jeux vidéo.",
        "Compréhension de Unity et de son Écosystème",
        "Installer Unity et se familiariser avec Unity Hub sur différentes plateformes.",
        "Apprendre le C# pour le développement dans Unity.",
        "Création de Jeux 3D et en 2D",
        "Développement Mobile",
        "Intelligence Artificielle",
        "Maîtrise de l'Interface d'Unity",
        "Animation et Cinématique",
        "Optimisation et Publication"
      ],
      "course_content": {},
      "requirements": [
        "Un ordinateur capable d'exécuter Unity.",
        "Une connaissance de base en programmation est utile mais pas obligatoire.",
        "Un fort intérêt pour le jeu vidéo et la création numérique."
      ],
      "description": "Rejoignez notre formation certifiante sur Udemy, conçue pour tous, des débutants aux professionnels, centrée sur le développement de jeux avec Unity et C#.\nCette formation est la plus exhaustive et à jour disponible, proposant plus de 75 heures de contenu vidéo.\nCe programme complet vous permettra de conquérir les compétences en C# avec Unity en concevant plus d'une dizaine de projets réels, vous propulsant au rang de développeur de jeux vidéo qualifié.\nIdéal pour ceux qui débutent dans la création de jeux, souhaitent transitionner depuis un autre moteur de jeu, ou désirent monétiser leur passion, cette formation est conçue pour vous.\nNous explorerons intégralement la création de jeux avec Unity, sans exigence de connaissances préalables.\nCe cours exhaustif sur Unity 3D vous apprendra la conception de jeux 3D via le langage C#, avec un apprentissage axé sur des projets pratiques et concrets.\nNous nous concentrerons sur le développement de jeu alliant les genres plateforme, aventure, shoot 'em up ou jeu de stratégie accompagné d'autres initiatives visant à affiner vos aptitudes.\nL'objectif sera d'appliquer des méthodologies de haut niveau pour atteindre une qualité professionnelle, y compris la diffusion de votre travail sur internet.\nEn tant que formateur expert en Unity,  fort d'une expérience de plus de quinze ans dans le domaine, je vous transmettrai des méthodes essentielles pour le développement de jeux , incluant :\n\n\nChargement et utilisation d'éléments graphiques et sonores (modèles 3D, textures, sons, etc.)\nApplication des principes de physique dans le jeu\nDesign d'interfaces utilisateurs interactives\nCodage avec C#\nÉlaboration de prototypes de jeu\nRéglages des systèmes d'éclairage\nRetouches graphiques avec les techniques de post-traitement\nMise en mouvement des éléments et personnages du jeu\nAdministration des interactions et des conséquences des collisions\nCréation d'interactions entre composants du jeu\nGestion et manipulation des perspectives avec les caméras, enrichissement par des effets spéciaux\nDéveloppement exhaustif de jeux de plateforme, course de voiture en 3D, memory, Astéroïde, etc...\nCodage de comportements intelligents pour les entités non jouables\nDéfinition et suivi des buts et missions du jeu\nArchivage et récupération des progressions de jeu\nProcessus de finalisation et partage du jeu créé\nCe ne sont là que quelques aspects, mais le cours offre un contenu riche et varié.\nJe vous encourage à consulter le programme détaillé, les retours des participants et les vidéos d'aperçu pour saisir l'étendue de cette formation.\nVous bénéficierez d'un accès illimité et à vie au contenu vidéo, et aurez accès à des exercices, quiz, conseils, astuces,\nNe tardez plus, lancez vous et réalisez votre rêve de devenir un développeur de jeu indépendant.\nObtenez votre certification et ouvrez la porte à de nouvelles opportunités professionnelles dans le domaine du développement de jeux vidéo.",
      "target_audience": [
        "Les étudiants en jeu vidéo et programmation.",
        "Les développeurs logiciels désireux de s'orienter vers le jeu vidéo.",
        "Les enseignants et formateurs cherchant à intégrer Unity dans leur curriculum.",
        "Les amateurs de jeux vidéo voulant concrétiser leurs idées de jeu."
      ]
    },
    {
      "title": "Improving Jump Mechanics For Godot 3!",
      "url": "https://www.udemy.com/course/improving-jump-mechanics-in-your-godot-platformer/",
      "bio": "Make your game more friendly to your player and Use real world physics to make your players movement feel amazing.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Set Up"
        ],
        "Improving Your Jump": [
          "Coyote Time",
          "Jump Buffering",
          "Jump Physics",
          "Movement Physics"
        ],
        "Conclusion and Wrap Up": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Godot 3"
      ],
      "description": "Welcome to my course on Improving your Jump Mechanics in the Godot Game Engine.\nWhen designing a Platformer there are many things that need to be taken into consideration. Often, one of the most important mechanics is the Jump Mechanic.\nIn this class we’re going to be looking a some tips and tricks to help substantially improve the feel of your game by implementing some behind the scene mechanics that will prevent the player feeling frustrating and keep them playing.\nWe’re going to be going over four core ideas:\nCoyote Time\nWhere we give the player some time when walking off edges to jump\nJump Buffering\nwhere we allow a jump to happen even when the player has miss timed there jump\nWe’re going to be injecting some real world physics into our jump math to get a mathematically precise jump and give us, the designer, control down to the exact pixel to where the player can jump.\nThen Finally we're going to use those physics to calculate our movement speed.\nIgnoring these four core ideas leads to lower enjoyment and ultimately causes the player to stop playing soon than we want to.\nWork alongside me as we solve some of these issues in the Godot Game engine.",
      "target_audience": [
        "Begginer Game Developer"
      ]
    },
    {
      "title": "Unity3D Gestion des données avec MySql | Guide complet",
      "url": "https://www.udemy.com/course/unity3d-gestion-des-donnees-avec-mysql-guide-complet/",
      "bio": "Gestion des données utilisateurs : Login, Leaderboard, score, Mailing list,etc...",
      "objectives": [
        "Interagir avec une base de donnée Mysql depuis Unity3D",
        "Gérer les utilisateurs (Login, Mail,etc..)",
        "Gérer les données des utilisateurs (points, xp, top score,etc..)"
      ],
      "course_content": {
        "Pour commencer !": [
          "Introduction"
        ],
        "Mise en place de la base de donnée MySql": [
          "Installation de Wamp",
          "Création de la BDD et sa structure avec PHPMyAdmin",
          "Installation de mysql-connector-net",
          "Intégration de MySql Dans Unity",
          "Quizz 1"
        ],
        "Gérer les données dans Unity": [
          "Mise en place d'un Objet MySql Manager à instance unique",
          "Connexion a la base de données MySql"
        ],
        "Formulaire d'enregistrement (REGISTER)": [
          "Création du formulaire \"Register\"",
          "Vérification et sécurité de la saisie du champ Email",
          "Vérification de la longueur de la saisie des champs",
          "Enregistrement des données dans la base de données",
          "Compte, Login existant",
          "Cryptage des données MD5"
        ],
        "Formulaire de Login": [
          "Création du formulaire \"Login\"",
          "Login et récupération des données de l'utilisateur"
        ],
        "Switch de formulaire dans la scéne": [
          "Switch de formulaire et chargement de scène au login"
        ],
        "Gestion des données de la BDD dans Unity": [
          "Affichage des données",
          "Mise a jour des données (Update)",
          "Affichage des plus hauts scores - Leaderboard"
        ],
        "Migration de la base et compilation du jeu": [
          "Migration de la base de données vers un hébergeur OnLine",
          "Compiler son jeu avec Mysql"
        ],
        "Ressources avancée": [
          "Présentation de la méthode PHP/MySql",
          "Script Login.php serveur side",
          "Formulaire Login dans Unity"
        ]
      },
      "requirements": [
        "Les Bases de Unity3D",
        "Les Bases du C#"
      ],
      "description": "Bienvenue dans cette formation complète sur Unity3D et l'utilisation des bases de données MySql sous Windows.\nCette formation va vous permettre de développer vos compétences de gestions des données avec une Base de donnée afin de réaliser une interaction avec votre communauté de joueurs (Login, Highscrore, Emailing)\nCette formation a pour vocation de vous apprendre à maîtriser deux outils :\nL'utilisation d'une base de données MYSQL avec Unity\nManipuler les données depuis votre jeu vidéo.\nVous apprendrez à utiliser ces deux technologies conjointement ou séparément pas à pas.\nVous disposerez des ressources (ainsi que de l'asset complète du cours) afin de suivre ce cours le plus facilement possible et pourquoi pas, les réutiliser dans votre propre projet ?\nTous les chapitres sont enregistrés en HD 1080p pour que vous puissiez tout voir clairement pendant le cours (vous pouvez regarder les previews gratuites).\nJe répondrai personnellement à vos questions si vous en avez, et je fournirai autant d'aide que possible pour vous aider à maîtriser l'objet de ce cours.\nN'attendez plus et cliquez sur Suivre ce cours en haut à droite. C'est parti !",
      "target_audience": [
        "debutants ayant les bases de UNITY3D et le C#"
      ]
    },
    {
      "title": "Unreal Engine 5 od podstaw po polsku (PL)",
      "url": "https://www.udemy.com/course/unreal-engine-5-od-podstaw/",
      "bio": "Tworzenie gier 3D bez znajomości programowania",
      "objectives": [
        "Jak zrobić grę 3D",
        "Instalować i obsługiwać program Unreal Engine 5",
        "3d obiekty, Animacje, kontrola postaci, collisions w silniku Unreal",
        "Korzystać z gotowych, darmowych elementów Epic Games"
      ],
      "course_content": {
        "Poznawania silnika Unreal Engine 5": [
          "Instalowanie silnika",
          "Pierwszy projekt",
          "Manipulowanie obiektami",
          "Snapping i kamera",
          "Uruchamianie gry",
          "Outliner i details",
          "Content drawer",
          "Dodawanie obiektów do sceny"
        ],
        "Platformówka 3D": [
          "Nowy projekt HourOfCode",
          "Poznawanie gry i levelu",
          "Kolizje i fizyka",
          "Włączanie kolizji w obiektach",
          "Powielanie platform",
          "Zadawanie obrażeń",
          "Blueprints i character",
          "Budowanie przejścia",
          "Checkpoint",
          "Animacje poziomu",
          "Animacja wyspy",
          "Przejście na drugą stronę",
          "Blueprint",
          "Zbieranie elementów",
          "Więcej monet i boost",
          "Blueprint drzwi",
          "Własny Blueprint",
          "Blueprint EventGraph",
          "Ekran końca gry",
          "HUD",
          "Uaktualnianie HUD",
          "Wykończanie levelu"
        ],
        "Budowanie własnego poziomu": [
          "Nowy poziom",
          "Landscape",
          "Bridge",
          "Meterials i 3D assets",
          "Foilage",
          "Tworzenie menu",
          "Start i quit game",
          "Przeskakiwanie pomiędzy poziomami"
        ]
      },
      "requirements": [
        "Komputer zdolny do obsługiwania Unreal Engine 5",
        "Znajomość programowanie nie jest wymagane"
      ],
      "description": "W tym kursie dowiesz się jak zrobić grę 3D od podstaw. Żadna wcześniejsza wiedza nie jest wymagana. Wszystkie narzędzia które będziemy wykorzystywać w tym kursie również są za darmo. Do tego celu będziemy używać Unreal Engine w wersji 5.1.\nZaczniemy nasz kurs od interface użytkownika. Wprowadzę w jaki sposób może nawigować po świecie 3D. Jak manipulować obiektami i dodawać nowe. Jak uruchomić symulacje gry i co Unreal daje nam jako początkowy projekt. Do tego wykorzystamy shooter z perspektywy pierwszej osoby czyli tak zwany First Person Perspective shooter.\nGłówną częścią tego kursu będzie jednak robienie platformówki 3D w trybie trzeciej osoby (Third person platformer). Gdzie widok postaci jest zza jej pleców. Te sekcja nauczy cię wszystkiego co powinieneś wiedzieć o robieniu gry w Unreal Engine 5..\nBędziemy mówić o tym jak kontrolować kolizje obiektów i jak uruchamiać fizykę z grawitacją. Nauczymy się jak zresetować naszą postać i jak budować poziom gry. Nauczymy się również jak animować obiekty w nasze grze tak by się ruszały i wprowadziły w nasz poziom troche więcej interakcji. Będziemy również uczyć się krok po kroku pracowania z Blueprints. Coś co jest podstawą Unreal Engine. To tu tkwi cała logika gry. Nie musimy pisać żadnego kodu. Wszystko zrobimy w interfejsie Unreal. Zrobiły własny blueprint, z animowanym obiektem 3D, jak również będziemy używać gotowych elementów. Będziemy również pracować z widgets i HUD (heads up display) by wyświetlić dane z naszej gry na ekranie gracza. Ta sekcja nauczy cię w pełni jak zrobić i kontrolować twoją własną grę.\nW kolejnej sekcji pokaże jak zbudować nowy poziom. Pokaże jak korzystać z trybu landscape i foilage. Zrobimy nowy teren z górami, materiałem oraz elementami przestrzennymi jak, kamienie, głazy i klify. Pokaże jak możemy używać tysięcy dostępnych dla nas darmowych obiektów 3D. Będziemy również uczyć się jak dodawać roślinność do naszych poziomów. Jak również jak zrobić menu startowe oraz jak przenosić się z jednego poziomu do drugiego.",
      "target_audience": [
        "Dla początkujących developerów gier",
        "Dla osób które chcą zrobić grę 3d bez znajomości programowania",
        "Dla osób chcących poznać Unreal Engine 5"
      ]
    },
    {
      "title": "Curso de Desarrollo de Juegos para iOS, Android y Facebook",
      "url": "https://www.udemy.com/course/desarrollo-de-juegos-para-ios-android-y-facebook/",
      "bio": "Desarrolla tus juegos con AS3 de forma fácil y eficiente y publícalos en Facebook, Apple Store y Android Market.",
      "objectives": [
        "El alumno adquirirá un nivel avanzado en el desarrollo de juegos para iOS, ANDROID y FACEBOOK, obteniendo una base muy solida para dar un primer paso en el sector de los video juegos y/o crear un juego o demo."
      ],
      "course_content": {
        "Conceptos básicos": [
          "Introducción",
          "La interfaz I",
          "La interfaz II",
          "El color",
          "Práctica"
        ],
        "Teoría de la animación": [
          "Fundamentos teóricos",
          "Interpolación de movimiento clásica",
          "Interpolación de forma",
          "Anidamientos e interpolación de movimiento",
          "Práctica"
        ],
        "Capas especiales": [
          "Mascaras",
          "Guías",
          "Práctica"
        ],
        "Teoría del diseño": [
          "Fundamentos del diseño",
          "Diseñar marcas",
          "Teoría del color",
          "Teoría y práctica del color"
        ],
        "Fundamentos de programación": [
          "Action Script 3.0",
          "Botones",
          "Navegación",
          "Práctica"
        ],
        "Programación básica I": [
          "Variables",
          "Flujogramas",
          "If / else",
          "Práctica"
        ],
        "Programación básica II": [
          "Arrays",
          "While, For",
          "Intervalos",
          "Inicio práctica de ejemplo",
          "Diseño general",
          "Diseño botón",
          "Diseño interfaz I",
          "Diseño interfaz II",
          "Diseño interfaz III",
          "Animación",
          "Programación I",
          "Programación II",
          "Programación anidada",
          "Retoques finales",
          "Práctica"
        ],
        "Programación básica III": [
          "Enter frame",
          "Otros bucles",
          "Punteros",
          "Práctica"
        ],
        "Tratamiento del sonido": [
          "Tratamiento del sonido",
          "Sonido instanciado",
          "Sonido externo",
          "Práctica"
        ],
        "Programación avanzada": [
          "Introducción",
          "Conceptos teóricos I",
          "Conceptos teóricos II",
          "Conceptos teóricos III",
          "Implementación de clase",
          "Muestra",
          "Programación de clases",
          "Estructura básica de un paquete de código",
          "Paquete de código I",
          "Paquete de código II",
          "Paquete de código III",
          "Técnica de programación I (metodo \"divide y vencerás\")",
          "Técnica de programación II (metodo \"divide y vencerás\")",
          "Técnica de programación III (metodo \"divide y vencerás\")",
          "Técnica de programación IV (metodo \"divide y vencerás\")",
          "Introduccion a la programación con AS3",
          "Referencia completa oficial del lenguaje Action Script 3.0"
        ]
      },
      "requirements": [
        "Es un curso 100×100 practico y a medida para cada perfil de alumno. No es necesario conocimientos previos. Es un curso que se adapta al nivel de cada alumno. Desde un nivel inicial de cero hasta un nivel avanzado."
      ],
      "description": "Actualmente con la aparición del HTML5, Adobe Flash se encuentra en un lento retroceso en la creación de contenido multimedia para la web. Por este motivo ha dirigido sus esfuerzos en el desarrollo de aplicaciones y juegos orientados a las plataformas más conocidas: iOS, Android y Facebook, mediante la tecnología AIR. Esta tecnología empaqueta tus aplicaciones realizadas en Action Script 3.0 para que puedan ser ejecutadas con éxito en las plataformas antes mencionadas. Algunos ejemplos de éxito son Machinarium, Candy Crash Saga, City..., entre otros.\nEsto es debido, entre otras cosas, a que el SDK de Flash presenta una integración perfectamente simbiótica del diseño con la programación y gracias a la posibilidad de utilizar verdaderas técnicas de programación orientada a objetos en la versión 3.0 de ActionScript, es posible estructurar un juego en diferentes clases, obteniendo códigos más flexibles y fáciles de modificar.\nNOTA IMPORTANTE: Durante casi dos décadas, Adobe Flash ha sido el estándar de la animación web. El principal culpable del desuso de Flash ha sido el estándar web HTML5 y las tecnologías que le acompañan, como CSS3 y un viejo conocido, JavaScript, por este motivo, Adobe Flash Profesional se ha transformado en Adobe Animate CC, un cambio de nombre que supone un cambio de época y de concepto.\nEl SDK de Adobe Flash Profesional con el que realice este curso ya no esta en el mercado y por tanto les pido disculpas. Les aconsejo que se actualicen a los nuevos estándares de esta fabulosa tecnología: Adobe Animate CC. Para aquellos alumnos que dispongan del SDK de Flash Profesional, obviamente no hay ningun problema para realizar el curso.\nLa transición al “nuevo” software es relativamente suave e incluye las mismas herramientas, pero mejoradas. En la pagina web de Adobe puedan descargar a modo de prueba la nueva y alucinante herramienta.\nY recuerden que de ustedes depende su éxito!!",
      "target_audience": [
        "El mercado mundial de las aplicaciones móviles no deja de aumentar y con ella, el mercado de los video juegos. Si estas decidido a apostar por tu futuro en un sector que mueve más millones que la industria del cine y la música juntos, este curso te dará la base necesaria para iniciarte en el diseño y desarrollo de juegos para FACEBOOK y dispositivos móviles. Entrarás de lleno en un sector con una demanda de profesionales y especialistas en constante crecimiento."
      ]
    },
    {
      "title": "Aprenda Unity - 2D Definitivo",
      "url": "https://www.udemy.com/course/2d-definitivo-unity-2017/",
      "bio": "Aprenda a criar jogos 2D de forma profissional - Curso completo com muitos recursos",
      "objectives": [
        "Criar jogos de plataforma com elementos de RPG",
        "Sistema de Seleção de Personagens",
        "Inventário",
        "Aplicação de elementos de RPG como sistema de Resistências e Fraquezas",
        "Inteligência Artificial para diferentes tipos de Inimigos",
        "Sistema de Luta com Chefe de Fase",
        "Sistema de Evolução de Personagens e Armas",
        "Sistema de Animação para Múltiplos personagens sem necessidade da criação de vários clipes de animação",
        "Sistema de Diálogos",
        "Cutscene 2D",
        "Entre muitos outros recursos"
      ],
      "course_content": {
        "Introdução": [
          "Download e Instalação da Unity",
          "Conhecendo a Interface da Unity"
        ],
        "Básico de Programação": [
          "Configurando o monodevelop, entendendo a estrutura base do Script",
          "Variáveis, tipo de Dados, Print e Debug, Atribuição de Valores",
          "Operadores Aritiméticos, Regras Básica da Matemática",
          "Operadores Relacionais",
          "Tomada de Decisão - IF",
          "Operadores Lógico, E e Ou",
          "Tomada de Decisão Switch",
          "Array",
          "While",
          "For",
          "Foreach"
        ],
        "Desenvolvimento 2D com Unity 2017": [
          "Game Object - Tag - Layer - Transform",
          "Importação de Assets - Configuração Dos Sprites - Parte 1",
          "Importação de Assets - Configuração Dos Sprites - Parte 2",
          "Importação de Assets - Configuração Dos Sprites - Parte 3",
          "Sprite Renderer - Propriedades - Order In Layer",
          "Sprite Renderer - Propriedades - Sorting Layer",
          "Animator - Animator Controller - Criando Os Clipes De Animação",
          "Animator - Gerenciando Animações",
          "Gerenciando Animações Via Script",
          "Mecânicas Básicas Do Personagem Parte 1",
          "Mecânicas Básicas Do Personagem Parte 2",
          "Mecânicas Básicas Do Personagem Parte 3",
          "Mecânicas Básicas Do Personagem Parte 4",
          "Pacotes Gráficos",
          "Extra - Criação Sprite Sheet - Parte 1",
          "Extra - Criação Sprite Sheet - Parte 2",
          "Criação Do Tile Palette - Forma 1",
          "Criação Do Tile Palette - Forma 2",
          "Tilemap - Criando E Configurando o Grid",
          "Tilemap - Configuração do Tilemap",
          "Cenário - Parte 1",
          "Cenário - Parte 2",
          "Ajuste No Personagem - Decoração Animada",
          "Funções Para Colisores E Triggers",
          "Matrix de Colisão",
          "LayerMask",
          "RayCast2D",
          "Interação com Objetos - SendMessage",
          "Interação Entre Scripts",
          "Adicionando Arma ao personagem",
          "Adicionando o Sistema de Colisão da Arma",
          "Detectando quantidade de Dano da Arma e Tipo de Dano",
          "Sitema de Dano - Ajuste por Resistência e Fraqueza a elementos",
          "Sistema de KnockBack",
          "Ajustando o lado do KnockBack",
          "Implementando o Sistema de Vida do Inimigo",
          "Sistema de Invulnerabilidade após Hit",
          "Implementando Barra Indicativa de Vida Inimigo",
          "Instanciando a quantidade de dano",
          "Sistema de Dano Baseado em Minimo e Máximo da Arma",
          "Exibir Dano - TextMeshPro",
          "Chamando animação de Hit e Die",
          "Animação de Hit por tipo de Dano",
          "Animação de Pós Morte",
          "Adicionando Loot",
          "Aprimorando o Loot",
          "Aprimorando o Loot - Parte 2",
          "Hud - Parte 1",
          "Hud - Parte 2",
          "Substituindo Caracteres em uma String",
          "Dica - 9-Slice - Aprimorando o HUD",
          "Adicionando Indicativo de Interação",
          "Aprimorando a Interação com Objetos",
          "Sistema de Portas",
          "Criando o sistema de Fade In e Fade Out",
          "Implementando Iluminação 2D",
          "Animando a Iluminação - Aprimorando a troca de material",
          "Controle da Câmera - Cinemachine 2D",
          "Dica, truque - Adicionar SpriteSheets Novos Sem Retrabalho",
          "ReSkin",
          "Sistema de Troca de Armas - Parte 1",
          "Sistema de Troca de Armas - Parte 2",
          "Dica Sobre Bugs - Resolvendo um Bug da Transição",
          "Trocando de Cena",
          "Implementando Transição Entre as Cenas",
          "Mantendo Informações Entre Cenas - Parte 1",
          "Mantendo Informações Entre Cenas - Parte 2",
          "Mantendo Informações Entre Cenas - Parte 3",
          "Implementação de novas armas - Parte 1",
          "Implementação de Novas Armas - Parte 2",
          "Implementação de Novas Armas - Parte 3",
          "Implementação de Novas Armas - Parte 4",
          "Validando a Arma pela Classe do personagem e Arma",
          "Seleção de Personagem - Parte 1",
          "Inputs",
          "Trocando de Arma in Game",
          "Pause Menu - Parte 1",
          "Máquina de Estado",
          "Pause Menu - Parte 2",
          "Pause Menu - Parte 3",
          "Inventário - Parte 1",
          "Inventário - Parte 2",
          "Inventário - Parte 3",
          "Inventário - Parte 4",
          "Aprimorando o visual do Inventário",
          "Aprimorando a navegação dos menus e inventário",
          "Informações Item - Parte 1",
          "Informações Item - Parte 2",
          "Informações Item - Parte 3",
          "Definindo o Inventário Inicial",
          "Coletando Armas",
          "Adicionando Informações Ao Hud - Parte 1",
          "Implementado o gasto de Mana",
          "Implementando o uso das Flechas",
          "Equipando e trocando entre tipos de flechas",
          "Fazendo o uso de Poções (Cura e Mana)",
          "Adicionando ao HUD a informação sobre Poções",
          "Ajustando a posição dos Ícones dinamicamente",
          "Ajustando a representação das flechas no arco e game",
          "Inteligência Artificial - Parte 1",
          "Inteligência Artificial - Parte 2",
          "Inteligência Artificial - Parte 3",
          "Fazendo a escolha da arma do Inimigo",
          "Ajustes na IA e material para Ambientes Escuros",
          "Ajuste na Mecânica de Ataque do personagem",
          "Organizando a Hierarquia e preparando o Parallax",
          "Programando o Parallax",
          "Sistema de Diálogo - Parte 1",
          "Sistema de Diálogo - Parte 2",
          "Sistema de Diálogo - Parte 3",
          "Sistema de Dialogo - Importando XML",
          "Sistema de Diálogo Multilinguagem (português e inglês)",
          "Aprimorando o Sistema de Respostas",
          "Aprimorando o Sistema de Diálogo",
          "Sistema de Diálogo, verificando fim de missão",
          "Criando um sistema de Formatação para os textos no XML",
          "XML - Banco de dados de Armas Avançado - Parte 1",
          "XML - Banco de dados de Armas Avançado - Parte 2",
          "XML - Banco de dados de Armas Avançado - Parte 3",
          "XML - Banco de dados de Armas Avançado - Parte 4",
          "XML - Banco de dados de Armas Avançado - Parte 5",
          "Atualizando o GameController com As Infos do xml - Parte 1",
          "Atualizando o GameController com As Infos do xml - Parte 2",
          "Ajustando Os Itens Coletáveis",
          "Save/Load - Parte 1",
          "Save/Load - Parte 2",
          "Aplicando o Save/Load no Jogo - Parte 1",
          "Aplicando o Save/Load no Jogo - Parte 2",
          "Aplicando o Save/Load no Jogo - Parte 3",
          "Aplicando o Save/Load no Jogo - Parte 4",
          "Aplicando o Save/Load no Jogo - Parte 5",
          "Implementando um Efeito de Chuva - Sistema de Partículas",
          "Sistema de Áudio - Parte 1",
          "Sistema de Áudio - Parte 2",
          "Sistema de Áudio - Parte 3",
          "Sistema de Áudio - Parte 4",
          "Sistema de Áudio - Parte 5",
          "Planejamento do Chefe de Fase",
          "Programando o Chefe de Fase - Finalização!"
        ]
      },
      "requirements": [
        "Você não precisa ter conhecimentos prévios de programação",
        "você precisa ter um computador capaz de rodar a Unity em sua versão 2017 ou superior"
      ],
      "description": "Este curso é destino a todos que querem aprender a desenvolver jogos 2D com qualidade profissional.\nNão é necessário conhecimentos prévios de programação pois no módulo inicial daremos toda a base necessária de C# para o aluno acompanhar as aulas sem grandes dificuldades.\nNeste curso você irá aprender a desenvolver jogos 2D com elementos de RPG como sistema de progresso de personagem, armas, skiils bem como sistema de diálogos, inventário, sistema de fraquezas e resistências.\nNeste curso utilizaremos a versão 2017.3 da Unity utilizando a programação C#",
      "target_audience": [
        "Este curso é voltado a todas pessoas que desejam desenvolver jogos de qualidade",
        "Este curso é indicado até mesmo para quem já possui algum conhecimento em desenvolvimento de jogos"
      ]
    },
    {
      "title": "プログラムを使っても使わなくてもだれでも作れるUnity２D３Dゲームの作成",
      "url": "https://www.udemy.com/course/unity-nj/",
      "bio": "VR（仮想現実）は2025年に大阪での開催を目指す万博のテーマに採りあげられ、医療・健康、スポーツや娯楽など、あらゆる産業から注目されています。このコースはゲーム作りだけでなくVRのコンテンツ作成までできます。マスターするのは今がチャンス",
      "objectives": [
        "Unityというゲームエンジンの使い方をマスターすることができます。",
        "２D３Dのゲーム作りの基本をマスターすることができます。",
        "C#のプログラムを楽しくマスターすることができます。",
        "パソコンだけではなくAndroid・iPhoneでも使うことができるアプリを作ることができます。",
        "第4次産業革命として注目されているVR（仮想現実）AR（拡張現実）のコンテンツを作れるようになります。",
        "プログラムの基礎（変数・条件文・繰り返し）がマスターできたのでAI（人工知能）などのプログラムが理解しやすくなります。"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "はじめてのUnity": [
          "Unityで「始めてのUnity」のテキストをテキストボックスの中に追加して実行ボタンを押して表示されることを勉強します。"
        ],
        "プログラムを使わない２Ｄ　画像の配置（水槽）": [
          "水槽に金魚・出目金を配置するプロジェクトを作成します。"
        ],
        "プログラムを使わない２Ｄ　動く画像の配置（水槽）": [
          "水槽に動く金魚・動く出目金・動く藻を配置するプロジェクトを作成します。"
        ],
        "プログラムを使わない２Ｄ　金魚を右から左へ移動出目金を自由に移動": [
          "プログラムを使わず動く画像で使ったアニメーションを使って画像を移動させます"
        ],
        "プログラムを使わない２Ｄ　カーブを使って出目金をもっと自由に移動": [
          "AnimationのCurves機能を勉強して出目金を自由に移動させます。"
        ],
        "プログラムを使わない２Ｄ　Animatorビューを使った金魚の方向転換": [
          "Animatorビューを使って金魚を方向転換させます。"
        ],
        "プログラムを使わない２Ｄ　重力をつけたえさに金魚が衝突する": [
          "AssetStoreの使い方をマスターし金魚をえさに衝突させます。"
        ],
        "プログラムを使う２Ｄ　プログラムを使うはじめてのUnityの表示": [
          "C#の最初のプログラムを勉強します。"
        ],
        "プログラムを使う２Ｄ　変数の使い方": [
          "足し算・引き算・掛け算・割り算のプログラムを作ってプログラムの基礎となる変数を理解します。"
        ]
      },
      "requirements": [
        "初歩的なPC操作の知識が必要。Windowsで教材を作成していますがUnityはMacでも使うことができます。"
      ],
      "description": "Unityはゲームエンジンです。このコースを受講されますと、２D３Dのゲーム作りの基本をマスターすることができます。\n金魚がエサに衝突したり、玉が転がったり、Cubeが拡大・縮小しながら回転するコンテンツを作りながら簡単なゲームがプログラムを使わなくても作ることができるようになります。\nC#のプログラムを使えばもっときめこまやかなゲームが作れることがわかるようになります。\nこのゲームはパソコンだけでなくAndroid・Iphoneでも使うことができます。\nまた、プログラムの基礎がわかるだけでなく注目されているVR（仮想現実）AR（拡張現実）のコンテンツも作れるようになります。",
      "target_audience": [
        "ゲームに関心があり、Android・Iphoneのゲームを作りたい方。プログラムの基礎を楽しくわかりやすく勉強したい方。VR（仮想現実）AR（拡張現実）の新しい技術を学んでコンテンツを作りたい方"
      ]
    },
    {
      "title": "Formation Complète Développeur de jeux vidéo - UNITY3D",
      "url": "https://www.udemy.com/course/unity3d-formation-complete-developpeur-de-jeu-video/",
      "bio": "Le développement de jeux vidéo de A à Z. Distribuez, Monétisez, QuizzGame, Smartphone,FPS, Google Store, avec UNITY 3D",
      "objectives": [
        "Développer des jeux vidéo avec Unity3D en langage C#",
        "Maîtriser le développement 2D et 3D",
        "Monétiser un jeu vidéo",
        "Distribuer son jeu vidéo sur un Store",
        "Développer un jeu pour plateforme mobile - smartphone tablette",
        "Distribuer un jeu sur le store Google Play",
        "Manipuler les données d'une base de données MySql avec UNITY3D",
        "Gérer les données de vos utilisateurs"
      ],
      "course_content": {
        "Les bases de Unity3D et C#": [
          "Pour bien débuter votre apprentissage d' Unity et du C#",
          "Introduction",
          "Avant d'installer Unity",
          "Installation de Unity",
          "Présentation de l'Interface",
          "Les formes primitives",
          "Caméra et lumiére",
          "Composants Rigidbody et Collider",
          "Information importante : Standard Asset",
          "Standart Assets",
          "Information Asset Store",
          "Asset Store",
          "Organisations des données",
          "Matériel et Texture",
          "Prefabs",
          "Information Zone de Spawn",
          "Zone de Spawn",
          "C# IDE et les Méthodes",
          "C# Les Variables",
          "C# Les Instructions conditionnelles",
          "C# Les Tableaux (Array)",
          "C# Les Boucles (Loops)",
          "Mise en place de l'Objet PlatformFallDown",
          "Mise en place de l'Objet PlatformFallDown Script C# Partie1",
          "Mise en place de l'Objet PlatformFallDown Script C# Partie2",
          "Mise en place de l'Objet Canon",
          "Mise en place de l'Objet Canon Script C# (ShootScript) Partie1",
          "Mise en place de l'Objet Canon Script C# (ProjectilScript)",
          "Composant Audiosource",
          "Script C# & 3D Sound",
          "Découverte de l'UI de Unity",
          "ScriptC# UI et GameManager",
          "Chargement et création du niveau 2",
          "Création d'un Prefab Tourniquet",
          "Création d'un radeau- utilisation des animations",
          "Animation du préfab Canon",
          "Mise a disposition du projet de la formation",
          "Résumé et mise a disposition du projet",
          "GameOver",
          "Gestion des vies du player",
          "Build du jeu (Compilation)",
          "Conclusion & Remerciements"
        ],
        "Création d'un jeu FPS": [
          "Introduction",
          "Découverte de l'interface",
          "Les objets",
          "La Physique",
          "Les composants",
          "Les Materiaux",
          "Gestions des scenes",
          "Les prefabs",
          "Asset Store",
          "Standart Assets",
          "Skybox",
          "L'outils de modélisation de terrain",
          "Zone de vent (Wind)",
          "La Lumiére (Light)",
          "L'Audio et effet sonore",
          "Les Bases de UNITY3D",
          "Les Scripts et leur methodes",
          "Les Variables",
          "Les Conditions",
          "Array (Tableau)",
          "Les Boucles",
          "Quizz 2",
          "Les Vecteurs - Vector2 et Vector3",
          "Get Component - Modification des composants par script",
          "Gestion des touches clavier (input) et déplacements",
          "Appliquer une force a un objet - Rigidbody",
          "Les Collisions d'objets grâce au méthode",
          "Raycast - Tester la présence d'un objet",
          "Coroutine - Pause dans l’exécution d'instruction",
          "Introduction a l'animation et l'animator",
          "Accéder a une variable public depuis un autre gameobject",
          "Introduction UI - User Interface",
          "Instantiate - Spawner des objets",
          "Scène Manager et compilation du jeux",
          "Quizz 3",
          "Mise en place du player FPS",
          "Utilisation du Raycast pour le Tir",
          "Gestion de la repetition de Tir",
          "Gestions des cartouches",
          "Chargeurs Vide (son)",
          "Impacts de balles",
          "Étincelles a l'impact",
          "Animation Idle du FPS",
          "Animations walk et run",
          "Animations reload et fire",
          "Synchronisation des animations avec les déplacements du FPS",
          "Clipping de camera (arme qui traverse les murs)",
          "Flammes a la sortie du canon de l'arme",
          "Correction du script pour l'animation Reload",
          "Mise en place de l' arme Secondaire",
          "Animations de l'arme secondaire",
          "Synchronisation des animations de l'arme secondaire avec les déplacements du FPS",
          "Flammes a la sortie du canon de l'arme secondaire",
          "Animation de Transition d'arme",
          "Script ArmeManager",
          "UI Gestions des Munitions",
          "Modification script de tir chargeur vide.",
          "UI Barre de vie du Player FPS",
          "Exportation custom package",
          "Importation du package dans un nouveau projet",
          "Mise en place de l'asset Subway Kit",
          "Mise en place du modèle 3D de l' ennemi",
          "Mise en place de l'agent de navigation et du navmesh",
          "Animation Walk et intelligence artificielle de l'ennemie",
          "Animation Attack de l'ennemi",
          "Animation et Script dead de l'ennemi",
          "Dégâts occasionnés au player",
          "Effet sonore de l'ennemi",
          "Paramètre \"Curve\" de l'animation Dead",
          "Paramètre \"Event\" de l'animation Dead",
          "Vitesse de déplacement aléatoire des ennemis",
          "Création du \"prefab\" ennemis Parasite",
          "\"Prefab\" Healthbox",
          "\"Prefab\" Ammobox",
          "Objectif de la mission",
          "Réalisation du \"préfab\" Key",
          "Gestion de l' Exit",
          "Mort du player",
          "Spawner de prefab",
          "Création du menu",
          "Script du menu - utilisation des boutons",
          "Gestion du GameOver",
          "Gestion de la scène \"mission accomplie\"",
          "Conclusion du cours"
        ],
        "Développement et monétisation d'un jeu Android": [
          "Teaser ANDROID GAME 2D Plateform",
          "Donner vie a son personnages avec les animations",
          "Gestion des Transitions avec l'animator",
          "Script C# de deplacement du personnage",
          "Script C# Synchronisation des animations",
          "Effets Sonore du personnage",
          "Créer un système de FootStep",
          "Création du \"Prefab\" PLAYER",
          "Introduction au Parallax Scrooling",
          "Mise en place des Layers",
          "Script C# pour le défilement des layers",
          "Création des prefabs plateforme et decors",
          "Animation du Zombie Female",
          "Script AI Déplacement du Zombi vers le player",
          "Gestion des animations dans le script",
          "Script Dégâts sur du player",
          "Script Deplacement A/R Zombie Male",
          "Création des animations et paramétrage de l'animator",
          "Synchronisation des animations dans le scripts et gestion du saut sur l'ennemi.",
          "Dégâts infligés au player",
          "Déplacement de l'objet Ghost Grâce a l'animation",
          "Script de collision avec l'ennemi ghost",
          "Animation et Script Dead du Ghost",
          "Introduction User Interface de Unity3D",
          "Script Interface Utilisateur Score",
          "Script Interface utilisateur BARRE DE VIE",
          "Game Over",
          "Mise en place de la scène de MENU",
          "Le bouton PLAY",
          "Le Bouton EXIT",
          "Mise en place des niveaux suivants",
          "Prefab Endpoint chargement du level suivant",
          "Bouton CONTINUE du Menu",
          "Passage du score d'un level a l'autre",
          "Gestion du meilleur score",
          "Unity Remote",
          "Virtual joystick pour smartphone",
          "Gérer la fin du jeu",
          "Installation SDK Android et JDK Java dans Unity",
          "Compilation pour plateforme Android",
          "Distribuer votre jeu sur Google PLAY",
          "Signature du jeu Avec Unity (Obligatoire pour Google Play Store)",
          "Gagner de l'argent avec la Pub - Monétisation",
          "Des Ressources pour vos jeux"
        ],
        "Gestion d'une base de données avec Unity3D et MySQL": [
          "Teaser Unity3D Gestion des données avec MYSql",
          "Introduction Mysql",
          "Installation de Wamp",
          "Création de la BDD et sa structure avec PHPMyAdmin",
          "Installation de mysql-connector-net",
          "Intégration de MySql Dans Unity",
          "Mise en place d'un Objet MySql Manager à instance unique",
          "Connexion a la base de données MySql",
          "Création du formulaire \"Register\"",
          "Vérification et sécurité de la saisie du champ Email",
          "Vérification de la longueur de la saisie des champs",
          "Enregistrement des données dans la base de données",
          "Compte, Login existant",
          "Cryptage des données MD5",
          "Création du formulaire \"Login\"",
          "Login et récupération des données de l'utilisateur",
          "Switch de formulaire et chargement de scène au login",
          "Affichage des données",
          "Mise a jour des données (Update)",
          "Affichage des plus hauts scores - Leaderboard",
          "Migration de la base de données vers un hébergeur OnLine",
          "Compiler son jeu avec Mysql",
          "Présentation de la méthode PHP/MySql",
          "Script Login.php serveur side",
          "Formulaire Login dans Unity"
        ],
        "Débutez et réaliser un Quizz Game pour Android avec UNITY3D": [
          "Présentation de l'UI",
          "UI Text",
          "UI Image",
          "UI Canvas",
          "Point de Pivot et Ancrage",
          "UI Buttons",
          "UI Panel",
          "UI Toggle",
          "UI Slider",
          "RectTransform et Mask",
          "UI ScrollBar",
          "UI DropDown",
          "UI ScrollView",
          "UI InputField",
          "UI Events",
          "Canvas Group & UI Effects",
          "Les Layouts",
          "Introduction Quizz Game",
          "Mise en place du menu du quizz",
          "Gestion des questions (array)",
          "Gestion des doublons (question list)",
          "Extraction des propositions (Split)",
          "Création des boutons et affichage des propositions",
          "Affichage de la solution en cas de mauvaise réponse",
          "Limitation du clic sur les boutons",
          "Afficher la question suivante",
          "Game Over - la partie est terminée",
          "Gestion du score",
          "Gestion du meilleur Score",
          "Le script du menu - actions sur les boutons",
          "Limiter le temps de réponse (ProgressBar)",
          "Création d'un joker - le 50/50",
          "Asset Complète Quizz Game",
          "Installation SDK Android et JDK Java",
          "Paramétrages de la compilation (PlayersSettings)",
          "Installation du Quizz sur Smartphone Android"
        ],
        "Vidéo Bonus": [
          "Introduction",
          "Cinématique, lire une vidéo dans une scéne",
          "Effet de transparence (modification shader)",
          "MiniMap (Gestion des layers et Camera)",
          "Gérer le son avec un Slider (Lecteur audio)",
          "Session bonus"
        ]
      },
      "requirements": [
        "De la motivation !",
        "Un ordinateur"
      ],
      "description": "Bienvenue dans cette formation complète sur Unity3D et le développement de jeu vidéo.\nCe Guide complet de prêt de 44h de cours va vous permettre de maîtriser le développement de jeu vidéo étapes par étapes.\nLes premières sections vont vous permettre d’apprendre par la pratique :\nLes bases d’UNITY3D\nLes bases du langage C#\nManipuler les objets dans UNITY3D grâce des exemples concrets.\nEnsuite vous apprendrez grâce aux sections suivante à développer Un Jeux 3D de type FPS Shooter et un Jeu 2D destiné au plateforme Mobile ANDROID.\nVous apprendrez ensuite a monétisé votre jeu avec la publicité mais aussi à le distribuer sur le Store GOOGLE PLAY.\nCette formation a pour vocation de vous apprendre à maîtriser deux outils :\nle langage de programmation C#\nle moteur de jeu Unity3D\nVous apprendrez à utiliser ces deux technologies conjointement ou séparément pas à pas.\nVous disposerez des ressources (Projet complet, modèles 3D, sons, etc...) afin de suivre ce cours le plus facilement possible et pourquoi pas, les réutiliser dans votre propre JEU ?\nTous les chapitres sont enregistrés en HD 1080p pour que vous puissiez tout voir clairement pendant le cours (vous pouvez regarder les previews gratuites).\nJe répondrai personnellement à vos questions si vous en avez, et je fournirai autant d'aide que possible pour vous aider à maîtriser le C# et Unity3D.\nN'attendez plus et cliquez sur Suivre ce cours en haut à droite. C'est parti !",
      "target_audience": [
        "Ce cours s'adresse aux débutants en programmation, aux débutants en C# et Unity, ainsi qu'à tous ceux qui sont familiers d'autres technologies mais pas de celles-ci en particulier"
      ]
    },
    {
      "title": "Máster en Programación de Videojuegos con Unity 6 y C# 2025",
      "url": "https://www.udemy.com/course/master-programacion-de-videojuegos-con-unity-5-y-csharp/",
      "bio": "Aprende a programar videojuegos desde CERO a nivel AVANZADO con Unity, C# y Visual Studio Publica en PC Android iOS",
      "objectives": [
        "ACTUALIZANDO TODO EL MASTER a Unity 6 - 2024",
        "Aprenderás desde CERO a programar videojuegos con Unity 6 y C#.",
        "Desarrollar tus propios videojuegos en 2D y 3D para iOS, Android, PC y Mac con Unity 6 C#",
        "Entenderás conceptos técnicos y profesionales de nivel básico, medio y avanzado sobre desarrollo de videojuegos con Unity 6",
        "Podrás adentrarte y trabajar en el sector profesional de desarrollo de videojuegos.",
        "Empezarás a Crear, Diseñar y Desarrollar tus propios videojuegos programando con el lenguaje C#.",
        "Profundizaremos en el estudio de TODOS de los módulos del que tiene el motor de videojuegos Unity 6 C#"
      ],
      "course_content": {},
      "requirements": [
        "NO se requieren conocimientos previos de programación, 3D, animación y diseño gráfico.",
        "Tener un ordenador o portátil cuanto mas potente mejor y utilizar un PC o MAc a nivel básico.",
        "Todas las herramientas utilizadas en el curso son gratuitas y los materiales de trabajo están incluidos."
      ],
      "description": "¡YA ESTAMOS ACTUALIZANDO el Master A Unity 6 - 2025!\nCon este Máster estarás preparado para desarrollar y publicar tus propios videojuegos con el motor gratuito Unity y programando con C# y Visual Studio:\n\nEmpezaremos con la interface de Unity® y la programación desde cero.\nEn las primeras unidades estarás escribiendo tus primeras lineas de código.\nEstudiaremos como desarrollar mecánicas de videojuegos básicas y avanzadas.\nDiseñaremos niveles de Videojuegos en 2D y 3D.\nIluminaremos y daremos color con materiales y texturas.\nAprenderemos a trabajar con Mecanim y Animación de Personajes desde cero a nivel avanzado.\nEstudiaremos conceptos de desarrollo 2D y 3D a nivel profesional.\nAprenderás a publicar en plataformas móviles.\nEl Master siempre se mantiene actualizado y se agregan contenidos nuevos.\n\nAccederás de inmediato y de por vida a más de +38 horas de video y a todos los recursos descargables.\nEs un curso muy completo en el que estudiarás y aprenderás a programar tus propios videojuegos desde cero y podrás publicarlos en todas las plataformas:\n\nTendrás soporte directo del instructor en el foro de preguntas y respuestas\nPodrás disfrutar de todo el curso en cualquier momento y en todos los dispositivos con accesos de por vida\nTe invito a que veas el video de presentación con el recorrido completo de todo el curso.\nCualquier duda que tengas nos puedes contactar a través de nuestro perfil de Udemy o en cualquiera de nuestras redes sociales y estaremos encantados de poder ayudarte.\nNos vemos dentro.",
      "target_audience": [
        "A todos los que quieran empezar a programar Videojuegos a Nivel Profesional.",
        "A todos los que quieran profundizar en el motor de videojuegos Unity 6 y C#",
        "A todos los que quieran estar profesionalmente actualizados y documentados en Unity 6 y C#"
      ]
    },
    {
      "title": "Javascript: El curso práctico y completo",
      "url": "https://www.udemy.com/course/javascript-curso-practico-y-completo/",
      "bio": "Domina Javascript desarrollando 3 juegos! Aprende ES6+, POO, Módulos, Ajax, Webpack, Babel, NPM y muchos más conceptos.",
      "objectives": [
        "Crearás tus primeros juegos mientras aprendes Javascript",
        "Aprenderás a desarrollar aplicaciones haciendo uso de Javascript",
        "Estarás listo para crear páginas que interactúen con los usuarios que la visitan",
        "No volverás a confundir Javascript con algún otro lenguaje de programación",
        "Tendrás una sólida base para profundizar en temas más complejos"
      ],
      "course_content": {},
      "requirements": [
        "Sólo necesitas muchas ganas de aprender :)"
      ],
      "description": "El ecosistema de Javascript es inmenso. Tiene tanto que es hermoso pero terrorífico para quienes empiezan.\nMuchas veces, amigos que van a iniciar su camino en el desarrollo web me preguntan:\n¿Qué debería aprender primero? ¿JQuery, Ajax, Vue, React, Angular, Webpack o Node.js?\nEntonces mi respuesta es, primero debes aprender Javascript.\n\n\nAprender a usar un framework está genial. Aprender el uso de herramientas para automatizar tu trabajo también está genial.\nPero antes de ello, debes aprender a usar Javascript. ¡No tienes que memorizar todo, simplemente entender la idea general!\n\n\nEmpieza a usar Javascript. Usa Javascript sin ayuda de bibliotecas. Siéntete cómodo con el lenguaje y explora lo que ofrece.\nEste curso trata sobre ello. Es un curso principalmente práctico.\n\n\nEl curso incluye explicaciones teóricas, pero sólo las necesarias para pasar a la práctica. ¿Por qué?\nMi intención es incentivar que practiques Javascript, llamar tu atención mediante ejemplos, y empezar a practicar sin tantos rodeos.\nSi estás aprendiendo a programar, o quieres iniciar en el desarrollo web, es obligatorio que aprendas Javascript, ya que sin importar en qué te especialices, usarás Javascript sí o sí.\n\n\n* Inscríbete en el curso y empieza ya tu relación de amor y afecto con Javascript.\n\n\nNota: Recuerda que estaré disponible para atender cualquier duda que tengas con relación al curso.",
      "target_audience": [
        "Personas interesadas en aprender a programar con Javascript",
        "Personas que quieren aprender Javascript de forma práctica"
      ]
    },
    {
      "title": "Ultimate Unity Game Development Course in हिन्दी ( 2D & 3D )",
      "url": "https://www.udemy.com/course/unity_game_development_hindi/",
      "bio": "Professional Unity Game Development Course in हिन्दी from Beginner to Advanced (2D and 3D) along with C# Programming",
      "objectives": [
        "C# programming for beginners . Concepts like variable, data types, function, class, if else, loops & more. (No Programming experience needed)",
        "Master the skills of using Unity and Visual Studio with simple instructions in Hindi",
        "Design & Develop complete games from scratch , both in 2D & 3D.",
        "Unity Physics and Collisions between GameObjects , taking Inputs from Player",
        "Concept of Prefabs , Instantiating & Destroying GameObjects.",
        "Learn how to add UI & Sound , complete Animation workflow in Unity",
        "How to write efficient code for games and fix errors.",
        "Saving game data on Player device like Coins, Money, HighScore etc. Creating multiple Levels with Lock/Unlock system",
        "Test our game with Unity Remote 5 , build & export our game to multiple devices (mobile, PC, etc).",
        "Important tips to follow & avoiding common game dev mistakes while making Games"
      ],
      "course_content": {},
      "requirements": [
        "You need a PC or Mac capable of running Unity & Passion to learn Game Development.",
        "No Programming experience needed. We will start completely from Zero."
      ],
      "description": "If you want to learn Unity game development in Simple - सरल - हिन्दी , then this is the right place for you. Even if you are complete beginner or have no coding experience , you can still follow along this course to become a professional Game Developer . From installing Unity to making a complete game  , I will teach everything from Zero. We will Design & Develop complete games from scratch , both in 2D & 3D.\nFirst we will take an overview of Unity and Visual Studio. Then we will learn the fundamentals of C# programming , we will discuss concepts like variable, data types, function, class, if else, loops & more. We will take a practical example to understand the use of Start() , Update() & Awake() in unity.\nWe will make a Flappy Bird like game &  learn the important concepts of Unity like Scripting , Animation , Input System, Sound, Physics and Collisions between GameObjects , Prefabs , PlayerPrefs & more . We will create a script for our Flappy bird & make it fly through code , by taking inputs from player . Then we will add moving pipes & understand the use of Time.deltaTime . Later  We will discuss the concept of Prefabs & learn how to crate a prefab & instantiate it through script , we will create a PipeSpawner that will spawn(create) pipes at runtime . We will see how to Destroy game objects after a specific time to improve game performance . Then we will take a brief introduction about Animation in unity & how to add animation inside our game .\nWhile making games, we come across a lot of errors , so we will learn how to debug & fix different types of errors . Then we will take a look at Canvas , it's properties and learn how to add UI elements (image , text or buttons ) inside canvas . And by using UI , we will create GameOver screen , Tap-to-Play screen & Pause screen for our game. After that we will see what is PlayerPrefs & how to use it to save game data (like HighScore ) in player device . Later we will learn about Sound in unity , adding Sound Effects & BGM in our game ( AudioSource & AudioListener ) . Finally we will build & export our game to Apk file for mobile devices .\n\n\nAfter making a 2D game for mobile , we will focus on creating a 3D game for PC . First we will take a brief overview of 3D camera & 3D scene . We will see how to use 3D tools to design our Level , creating Materials & adding Texture to gameObjects . Then we will create a script for 4 directional player Movement & Jump. We will also create a Camera Follow script to make our camera follow our player. Later we will add water in our scene , create GameOver & Reload function. Then we will take a brief introduction about TextMeshPro & it's various properties.\nWe will add Coins in our level & make a script to Collect, Display & Save coins. Then we will setup our Home scene & Level Selection scene. After that we will create multiple Levels , see how to Lock & Unlock multiple levels. We will also add Play , Restart & Quit functions , make some improvements like adding BG , Fog , Sky & more. At last we will export our game to PC.\nLater on we will discuss some concepts like Importing & Exporting Assets , transition between multiple Animations , Animator properties , Events & more. I will also suggest you some websites where you can download Game Assets for FREE .\n\n\nSo, see you inside the Course.",
      "target_audience": [
        "Anyone who wants to be a Game Developer ( as a Hobbyist or Professional )",
        "Even if you are a complete beginner or have no prior knowledge of Programming , you can easily follow along the course to be a Game Developer ."
      ]
    },
    {
      "title": "Curso Completo de Desenvolvimento de jogos com Unity",
      "url": "https://www.udemy.com/course/unity-2019-top-mecanicas/",
      "bio": "Aprenda como criar jogos incríveis em 2D e 3D em um único curso!",
      "objectives": [
        "Criar jogos 2D e 3D na nova versão do Unity.",
        "Programar jogos usando a linguagem C#.",
        "Criar um jogo semelhante ao famoso Red Ball, entendendo a programação e física usada para seu funcionamento.",
        "Criar um jogo semelhante ao Donuts Drift, entendendo como funciona o movimento de um carro no mundo 2D, a influencia do combustível em seu movimento.",
        "Criar um jogo semelhante ao sucesso Captain Toad, entendendo movimento, manipulação de câmeras,eventos, entre outros.",
        "Entender como funciona o ScriptableObject e como ele pode acelerar o seu desenvolvimento.",
        "Como criar editores personalizados para acelerar o desenvolvimento dos seus jogos.",
        "Como criar um Joystick Mobile"
      ],
      "course_content": {
        "Introdução": [
          "Instalação",
          "Interface"
        ],
        "Conhecimentos básicos": [
          "Corpo Colisor",
          "Rigid Body",
          "Eventos de colisão",
          "Tags e Layers"
        ],
        "Programação": [
          "Variáveis",
          "Usando Variáveis",
          "Métodos",
          "Estrutura condicional",
          "Laços",
          "Array",
          "Classes",
          "Construtores",
          "Modificadores de acesso",
          "Listas",
          "Corotinas",
          "Enumerator",
          "Delegate",
          "Events"
        ],
        "Projeto 01 - Red Ball Clone": [
          "Preparando o projeto",
          "Elementos físicos",
          "Elementos físicos pt.02",
          "Elementos físicos pt. 03",
          "Elementos físicos pt.04",
          "Ajuste bola",
          "Movimento vilão pt. 01",
          "Movimento vilão pt. 02",
          "Movimento vilão pt. 03",
          "Comportamento vilão",
          "Dano no herói",
          "DAno no herói pt.02",
          "Dano UI",
          "DAno UI pt. 02",
          "Coleta estrelas",
          "Coleta estrelas pt. 02",
          "Coleta estrelas pt. 03",
          "Joystick UI",
          "Joystick UI pt. 02",
          "Áudio Game",
          "Troca de imagens/ Som/ Coleta",
          "Animação mata vilão",
          "Cena montada e câmera perseguidora",
          "Check point",
          "Ajuste fino Joystick",
          "Ajuste fino Joystick pt. 02",
          "Final Red Ball",
          "Últimas considerações"
        ],
        "Bônus Top Mecânicas Donuts Drift": [
          "Preparação",
          "Conceitos Parte 1",
          "Conceitos Parte 2",
          "Conceitos Parte 3",
          "Script do Carro Parte1",
          "Script do Carro Parte2",
          "Script do Carro Parte3",
          "Marcas de pneu",
          "UI Joystick",
          "Donuts Parte1",
          "Donuts Parte2",
          "Entendendo Cálculos Complexos",
          "Scriptable Object para o Combustível",
          "Ligação entre o Carro e o Scriptable Object",
          "Ligação entre Scriptable Object e UI",
          "Para Carro Combustível",
          "Comprimento da Circunferencia",
          "SENO_COSSENO_TANGENTE",
          "CIRCULO_TRIGONOMETRICO",
          "EXEMPLO_SENO_COSSENO",
          "Criando o círculo de combustível",
          "Código do Inspector",
          "Montagem de fase",
          "Finalizando a UI",
          "Finalizando a UI - parte 02"
        ],
        "Bônus Top Mecânicas - Capitain Toad": [
          "Apresentação",
          "Modelagem Chão",
          "Pintura e UV",
          "Exportação de Modelos",
          "Nossa Cena Parte 1",
          "Nossa Cena Parte 2",
          "Nossa Cena Parte 3",
          "Nossa Cena Parte 4",
          "Nossa Cena Parte 5",
          "Shader da Agua 01",
          "Shader da Agua 02",
          "Preparando o personagem 01",
          "Preparando o Personagem 02",
          "Preparando o Personagem 03",
          "Preparando o Personagem 04",
          "Preparando o Personagem 05",
          "Atualização do Unity",
          "Movimento Root",
          "Centralizando a Câmera",
          "UI",
          "Coleta de itens",
          "Coleta de itens 2",
          "GameManager",
          "Cristais",
          "Morte Heroi 1",
          "Morte Heroi 2",
          "Morte e Vitória do Herói"
        ],
        "Tapper": [
          "Introdução",
          "Montagem de Cena Protótipo",
          "Movimento Personagem",
          "Movimento Lateral",
          "Bebida",
          "Clientes 1",
          "Clientes 2",
          "Derrota",
          "Adição de Sprites",
          "Caneca",
          "Sprite Heroi",
          "Moedas 1",
          "Moedas 2",
          "Game Over"
        ],
        "Tomb of the Mask": [
          "Montagem de cena",
          "Continua..."
        ]
      },
      "requirements": [
        "Um computador capaz de rodar o Unity 2019"
      ],
      "description": "Comece a dar vida para suas ideias. A plataforma de desenvolvimento 3D em tempo real do Unity fornece tudo o que é preciso para criar, operar e monetizar.\nAprenda a desenvolver seus próprios jogos, tire aquela ideia do papel e coloque a mão na massa na produção de seus games. Para isso a melhor forma é aprender na prática, e foi pensando nisso que o curso Desenvolva Jogos com Unity 2019 - Top Mecânicas, esse é um curso focado em \"colocar a mão na massa\" aprendendo ou se aperfeiçoando descobrindo como foram feitas mecânicas de jogos conhecidos no mercado.\nEsse curso foi feito tanto para você que está começando a dar os primeiros passos como desenvolvedor como também para você que deseja aprender ainda mais, para estar apto a desenvolver qualquer tipo de jogo.",
      "target_audience": [
        "Interessados em desenvolvimento de jogos, iniciantes ou não;",
        "Desenvolvedores mais experientes que desejem aprimorar ainda mais o conhecimento em Unity.",
        "Pessoas que tenham algum ou nenhum conhecimento em programação.",
        "Alunos que estão migrando de outra Engine.",
        "Desenvolvedores em geral."
      ]
    },
    {
      "title": "Lighting in Unreal Engine 5",
      "url": "https://www.udemy.com/course/lighting-essentials-in-unreal-engine-5-crash-course/",
      "bio": "I Will Teach You How To Setup A Complete Light Mood For An Exterior Environment in UE 5. It's Beginner Friendly Course!",
      "objectives": [
        "Setup More Advanced Project Settings For Better Quality And Renders",
        "Create A Skydome Material From Scratch To Nail The Ambient And The Mood Of Any Lighting",
        "Manage Different Lighting Actors Within The Scene",
        "Create Gobo Light Material For Advanced Lighting Look",
        "Get In-depth Details About The Lighting Workflow Used in AAA Projects",
        "Basics Of Post Process Volume",
        "Create A Complete Light Setup For Exterior Environment",
        "How To Use Atmospherics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Preparing Our Project": [
          "Downloading Unreal Engine & Creating Our Project",
          "Configure Project Settings",
          "Basics of Editor Interface & Navigation"
        ],
        "Lighting Our Scene": [
          "Setting Our Skybox & Ambient Lighting",
          "Setting Up Our Camera",
          "Auto Exposure Explained",
          "Sky Light Basic Color & Intensity Matching",
          "Setting Our Exponential Height Fog",
          "Adding Our Directional Light",
          "Gobo Light Material Setup",
          "Adding Local Fake Lights",
          "Post Process Settings",
          "Get High Quality Renders - Submit Your Work"
        ],
        "Outro & More Resources!": [
          "Outro & Final Word"
        ]
      },
      "requirements": [
        "You don't need to have experience in lighting to start",
        "Preferred to have basic knowldege about Unreal Engine",
        "Unreal Engine 5 is Required - At least 5.2"
      ],
      "description": "Are you looking to improve your lighting skills in Unreal Engine 5 from an Unreal Authorized Instructor with 5+ years of expertise? You are in the right course then!\nIn this course, I'll teach you everything you need to know to start a proper lighting workflow for any scene you want, by going through the lighting actors inside the engine\n\n\nYou don't need to have a ton of knowledge about Unreal Engine 5 to start. I have discussed some basics of the editor to get you started with it so you can follow up easily. We will start with downloading UE 5.5, create our project 'Old West Learning', and start then with the needed Project Settings to ensure high-quality control.\n\n\nRight after that, we will discuss how to set up proper lighting workflow, starting with our Sky to get the right Ambient and feeling, and then add the main light source, and it's not only this level! because we will go through using Fake / Bounce Lighting which is a very advanced technique used by Pros! I will teach you how to use it in a very simple way to make your environment lighting look unique from anyone else!\n\n\nWe will then use Exponential Height Fog, Light Gobos, and Post Process Volumes to maintain better quality and settings for our scene.\n\n\nIf you are interested in all of that, I'm so excited then to teach you all these techniques that are used in big studios and production by experts.\n\n\nAnd don't forget to submit your work to get the chance to review it with me and get critique and feedback on it, to help you improve your skills even further.",
      "target_audience": [
        "Lighting Artists - All Levels",
        "Filmmakers Who Cares About Lighting",
        "Environment Artists",
        "Other Who Are Getting More Deep Into Unreal Engine"
      ]
    },
    {
      "title": "Learn to create a 2D Racing car game for FREE PART 5.",
      "url": "https://www.udemy.com/course/learn-to-create-a-2d-racing-car-game-for-free-part-5/",
      "bio": "Learn how to create a cool 2D top down racing car game with the unity game engine.",
      "objectives": [],
      "course_content": {
        "On to adding AI cars with features.": [
          "Building track 2 (My Kitchen).",
          "Showing my track with features.",
          "Coding the AICars controller.",
          "Adding one of the AI cars to the track.",
          "Coding AIMovement script for the AI car.",
          "Adding engine sound to the AI car (3D sound)."
        ]
      },
      "requirements": [
        "You will need to download unity and visual studio which is free and then be willing to learn game design.",
        "Basic understanding of the C# language and Unity"
      ],
      "description": "THIS COURSE WILL BE UPLOADED IN PARTS DUE TO VIDEO TIME RESTRICTIONS.\n\n\nIn my course we will start at the bottom and work our way up to advanced game design like AI path finding, we will be creating a car controller and many features with in our game.\nThis course is designed for beginner level and up as i will explain everything in best detail as i can, at the end of the course we will have made a racing car game like micro machines which in the 1980's was an amazing car game.\nIn this part of the course you will learn\nBuilding track 2 (My Kitchen).\nShowing my track with features.\nCoding the AICars controller.\nAdding one of the AI cars to the track.\nCoding AIMovement script for the AI car.\nAdding engine sound to the AI car (3D sound)",
      "target_audience": [
        "Students that want to learn to be a game designer."
      ]
    },
    {
      "title": "Aprende a programar con Minecraft Education",
      "url": "https://www.udemy.com/course/aprende-a-programar-con-minecraft-education/",
      "bio": "Conoce y aprende las herramientas que ofrece Minecraft Education así como la creación de tu propio mundo",
      "objectives": [
        "Intruducción e instalación de Minecraft Education",
        "Aprendizaje de la programación por bloques",
        "Introducción a los conceptos de variables, condicionales y bucles en Minecraft Education",
        "Realización de Casos prácticos o Retos"
      ],
      "course_content": {
        "Instalación e introducción": [
          "Introducción y requisitos mínimos",
          "Instalación e introducción",
          "Licencia Minecraft Education"
        ],
        "Coordenadas": [
          "Coordenadas"
        ],
        "Bucles: Creación de efecto \"Lluvia de pollos\"": [
          "Bucles: Creación de efecto \"lluvia de pollos\""
        ],
        "Condicionales": [
          "Condicionales"
        ],
        "Portales": [
          "Portales"
        ],
        "Rings": [
          "Rings"
        ],
        "Agente contructor": [
          "Agente contructor"
        ],
        "Raíles": [
          "Raíles"
        ],
        "Trampas": [
          "Trampas"
        ],
        "Diseño de Chunks": [
          "Diseño de Chunks"
        ]
      },
      "requirements": [
        "No es necesaria experiencia previa en programación",
        "No es necesaria experiencia previa en Minecraft",
        "Requisitos mínimos del hardware o equipo informático: Ordenador de sobremesa o portátil bajo Windows. Para ejecutar en tu equipo Minecraft Education (no para visualizar este curso) se recomienda tener al menos 4 GB de RAM, un disco duro con un mínimo de 500 MB libres por usuario que utilice el dispositivo, aunque se recomienda 1 GB, Navegador Chrome 83 o versiones posteriores. Posible incompatibilidad con Mac."
      ],
      "description": "Aprende a utilizar Minecraft Education y explora todas las funcionalidades que ofrece esta plataforma. Tanto si eres docente como alumno, en este curso encontrarás las claves principales para construir tu propio mundo y dejar volar tu imaginación con todas sus herramientas disponibles.\n\n\nNOTA IMPORTANTE:\n\n- Actualización 05/08/2025: A partir de agosto de 2025 NO ofrecemos licencias de prueba de Minecraft Education Edition con la adquisición del curso.\n\n\nNo es necesario tener experiencia previa con Minecraft Education, en este curso te explicamos paso a paso, y con un fresco toque de humor, todo lo que debes saber desde la instalación y configuración del software, hasta funcionalidades muy utilizadas como son los bucles, condicionales, chunks, etc.\n\n\nBasado en las áreas educativas STEAM ((Science, Technology, Engineering Arts and Mathematics), en este curso descubrirás y aprenderás cómo trabajar sobre los aspectos básicos del programa, con el que conectar con una comunidad de millones de jugadores y desarrolladores en todo el mundo apasionada por Minecraft.\n\n\nSi te apasiona la programación y el universo Minecraft, tienes que hacer este curso. Se ofrece 100% en español, aunque para una mejor comprensión dispondrás de subtitulos en varios idiomas (iremos incorporando nuevos idiomas paulatinamente, gracias por tu paciencia! )\n\n\nEl curso no incluye licencias de Minecraft Education Edition, al estar pensado para que tengas tu primera toma de contacto con este Software. Si deseas adquirir licencias de profesor y/o estudiante, debes hacerlo desde un centro educativo que las posea.\n\n\nNOTA IMPORTANTE: No hay una edad límite para aprender con este curso, pero si el alumno es menor 18 años de edad, se requiere la supervisión y tutorización de un adulto, ya que este curso se comercializa exclusivamente a mayores de 18 años. Los menores de 18 años pueden usar los servicios solo si un padre o tutor abre su cuenta, maneja cualquier inscripción y administra el uso de su cuenta.",
      "target_audience": [
        "Alumnos sin límite de edad, interesados en Minecraft o Minecraft Education (IMPORTANTE: Si el alumno tiene menos de 18 años se requiere gestión y supervisión de un adulto)",
        "Docentes y alumnos que quieran aprender la programación por bloques",
        "Docentes y alumnos que quieran aprender la lógica computacional"
      ]
    },
    {
      "title": "Criando plugins de Minecraft",
      "url": "https://www.udemy.com/course/como-criar-plugins-de-minecraft/",
      "bio": "Aprendendo Bukkit API do Zero ao Avançado",
      "objectives": [
        "Instalação e Configuração dos aplicativos necessários;",
        "Teoria básica, intermediária e avançada de Bukkit API;",
        "Criação de plugins em Maven;",
        "Utilização de Lombok para otimização de códigos;",
        "Criação de comandos, eventos, e inventários do básico ao avançado;",
        "Utilização de API's úteis para diversas ocasiões;",
        "Como fazer plugins específicos como ScoreBoard, Prefixos, Tablist, Minigames, Lobby, Punições, etc.",
        "Armazenamento de dados em FlatFile, e MySQL;",
        "Collections;",
        "Schematics;",
        "Stream e Lambda;",
        "Integração com JDA; (Integração com Discord-Java)",
        "Criação de diversos arquivos de configuração, incluindo folders alternativos dentro do projeto;"
      ],
      "course_content": {
        "Introdução": [
          "Instalação dos programas.",
          "GitHub e Introdução."
        ],
        "Seção básica": [
          "Primeiro projeto",
          "Primeiros comandos.",
          "Comandos com atividades.",
          "Comando com argumentos.",
          "Arquivos de configuração.",
          "Primeiro evento.",
          "Eventos simples.",
          "Atividade #01",
          "Eventos aprimorados.",
          "Criando GUI.",
          "Editando itens do GUI.",
          "Atividade #02",
          "For - StringList (Parte 1)",
          "For - StringList (Parte 2)",
          "For - ConfigurationSection (Parte 3)",
          "For - IntegerList (Parte 4)",
          "Atividade #03",
          "Organização e correção do código.",
          "Mexendo com target e argumentos.",
          "Evento de Loja.",
          "Máximo de jogadores.",
          "Aula 21",
          "Aula 22",
          "Aula 23",
          "Aula 24",
          "Aula 25",
          "Aula 26",
          "Aula 27",
          "Aula 28",
          "Aula 29",
          "Aula 30",
          "Aula 31",
          "Aula 32",
          "Aula 33",
          "Aula 34",
          "Aula 35",
          "Aula 36",
          "Aula 37",
          "Aula 38",
          "Aula 39",
          "Aula 40",
          "Aula 41",
          "Aula 42",
          "Aula 43",
          "Aula 44",
          "Aula 45"
        ]
      },
      "requirements": [
        "Não há requisitos, mas caso estude o básico de Java e POO será útil."
      ],
      "description": "Quer começar a criar plugin para Minecraft da maneira mais sofisticada possível? Vender e conseguir uma grana extra ou até mesmo abrir um servidor? Então venha fazer parte dessa turma incrível de alunos interessados nisto.\n\n\nO curso não é só a programação para o Minecraft em si. Aqui você aprenderá muito mais coisas, que poderão incluir linguagens como Java, e POO.\n\n\nAqui eu ensinarei vocês a criarem seus próprios plugins do zero, até o avançado, incluindo comandos, eventos, inventários, armazenamento, múltiplos arquivos de configuração, Maven, Gradle, e muito mais.\nIrei também ensinar a usar o Github e publicar os seus primeiros projetos.\nAlém de um suporte incrível destinado à você!!\nO curso é separado em três métodos, e cada método possuí duas seções, sendo:\n1ª Seção:\nMétodo básico, com teoria e prática, contendo desde a instalação, configuração e utilização dos principais aplicativos e programas necessários, criação dos primeiros projetos, organização do desktop para as aulas, utilização de armazenamento em flatfile, e criação de plugins em maven.\n2ª Seção:\nMétodo intermediário, com teoria e prática, contendo coisas mais avançadas, como integração com API de outros plugins, armazenamento em collections, e sqlite, ensinamentos de Gradle, e lombok.\n3ª Seção:\nMétodo avançado, com teoria e prática, contendo coisas mais complexas como criação de plugins específicos, utilizando APIs de plugins próprios, armazenamento em MySQL, mexer com stream e lambda, e muito mais.\nAlém de possuírem acesso vitalício ás aulas do curso, e ao suporte.\n\n\nO curso não está completo, por isso o conteúdo não bate com os módulos, lançaremos no mínimo 7 aulas novas semanais, até alcançarmos no mínimo, a aula 45.",
      "target_audience": [
        "Interessados em criar plugins para Minecraft utilizando a Bukkit API do Java."
      ]
    },
    {
      "title": "Diseño de Personajes y Terrenos: Unity y Blender en Acción",
      "url": "https://www.udemy.com/course/diseno-de-personajes-y-terrenos-blender-y-unity-en-accion/",
      "bio": "Domina la Creación de Personajes 3D y Escenarios Realistas en Dos Poderosas Herramientas",
      "objectives": [
        "Aprenderás a utilizar Blender de manera efectiva, modelando personajes en 3D con precisión y detalle.",
        "Dominarás la exportación de modelos desde Blender y su importación en Unity, garantizando una transición sin problemas entre las dos plataformas.",
        "Desarrolla habilidades en el rigging de personajes, creando una estructura de huesos y controladores para animar movimientos realistas.",
        "Implementa interacciones, controles y mecánicas de juego para que tus personajes cobren vida en la experiencia de juego.",
        "Aprende a utilizar las herramientas de Unity para diseñar y crear terrenos impresionantes. Domina la manipulación de la topografía, la elevación, etc",
        "Adquiere habilidades en la aplicación de texturas realistas y detalladas a tu terreno para lograr un aspecto natural y coherente.",
        "Dominarás la configuración de la iluminación global para mejorar la apariencia y el realismo de tu terreno.",
        "Aprende a optimizar tu terreno y sus elementos para mantener un buen rendimiento en tiempo de ejecución."
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Contenido"
        ],
        "Blender": [
          "Instalación de Blender",
          "Presentación de la interfaz de Blender",
          "Modo objeto y edición en Blender"
        ],
        "Portafolio de referencias": [
          "Creación de portafolio de referencias"
        ],
        "Modelado en Blender, práctica 1": [
          "Preparación del área de trabajo",
          "Torso",
          "Cabeza",
          "Casco 1/2",
          "Casco 2/2",
          "Piernas",
          "Antena",
          "Acabados suaves y correcciones"
        ],
        "Modelado en Blender, práctica 2": [
          "Preparación del área de trabajo",
          "Torso",
          "Cabeza",
          "Brazos",
          "Piernas",
          "Acabados suaves y correcciones"
        ],
        "Aplicación de texturas en Blender": [
          "Mapeado UV en Blender",
          "Texture Paint en Blender",
          "Exportación de texturas"
        ],
        "Animación en Blender": [
          "Animación Básica",
          "Creación del Esqueleto",
          "Poses Clave",
          "Animación Básica de Caminar"
        ],
        "Otras herramientas para animaciones": [
          "Introducción a la plataforma",
          "Importación del Personaje",
          "Exploración de Animaciones",
          "Descarga de Animaciones"
        ],
        "Unity y Visual Studio": [
          "Instalación de Unity y Visual Studio",
          "Creación de nuevo proyecto en Unity",
          "Presentación de la interfaz de Unity",
          "Editor de Scripts/Visual Studio",
          "Atajos y herramientas de Unity"
        ],
        "Creación de Terrenos en Unity": [
          "Introducción a los Terrenos",
          "Importación de herramientas",
          "Herramienta para relieves",
          "Avance en Proyecto: Relieves",
          "Avance en Proyecto: Texturas",
          "Avance en Proyecto: Skybox",
          "Avance en Proyecto: Cuerpo de agua",
          "Importar modelos 3D y Vegetación",
          "Avance en Proyecto: Vegetación",
          "Avance en Proyecto: Iluminación y Efectos Visuales"
        ]
      },
      "requirements": [
        "¡No se requiere experiencia previa en Blender o Unity para realizar este curso! Está diseñado tanto para principiantes como para aquellos con conocimientos previos en diseño y programación."
      ],
      "description": "En el apasionante curso \"Diseño de Personajes y Terrenos: Blender y Unity en Acción\", descubrirás un emocionante viaje hacia la creación de mundos virtuales envolventes y personajes cautivadores en 3D. Este curso está diseñado tanto para principiantes como para aquellos con experiencia previa en diseño y desarrollo de videojuegos.\n\n\nDesde los fundamentos básicos de Blender hasta las técnicas avanzadas de animación en Unity, este curso te llevará de la mano a través de un completo proceso de aprendizaje. Aprenderás a modelar personajes desde cero, aplicar texturas y materiales realistas, y darles vida con rigging y animaciones expresivas.\n\n\nAdemás, explorarás las poderosas herramientas de Unity para diseñar impresionantes terrenos y escenarios. Añadirás detalles naturales, como vegetación y cuerpos de agua, para crear entornos inmersivos y realistas.\n\n\nDurante el curso, abordarás proyectos prácticos y desafiantes que te permitirán aplicar tus habilidades en el desarrollo de videojuegos y experiencias interactivas. Al final, estarás preparado para crear tus propios mundos virtuales y emocionantes aventuras 3D.\n\n\n¡Únete ahora y comienza tu viaje en la creación de personajes y terrenos con Blender y Unity! Despierta tu creatividad y da vida a todas tus ideas en el emocionante mundo de la animación y el desarrollo de videojuegos.",
      "target_audience": [
        "Este curso está dirigido a cualquier persona apasionada por la creación de personajes en 3D y el desarrollo de videojuegos. No importa si eres un principiante absoluto o ya tienes experiencia en el campo, ¡todos son bienvenidos!",
        "Principiantes en la creación de personajes: Si eres nuevo en Blender y Unity, este curso te brindará una introducción completa y te guiará paso a paso para que puedas crear personajes increíbles desde cero.",
        "Estudiantes de diseño y animación: Si tienes experiencia en diseño gráfico, animación o modelado, este curso te permitirá llevar tus habilidades al siguiente nivel, aprendiendo a aplicarlas en el emocionante mundo del desarrollo de videojuegos.",
        "Desarrolladores de videojuegos en busca de más diversidad: Si ya tienes experiencia en desarrollo de videojuegos, pero buscas agregar más diversidad y complejidad a tus proyectos con personajes únicos y animaciones realistas, este curso te proporcionará las herramientas necesarias.",
        "Aficionados a la creación de videojuegos: Si simplemente amas los videojuegos y siempre has querido aprender a crear tus propios personajes y entornos, este curso te abrirá las puertas a un emocionante mundo creativo.",
        "No importa tu trasfondo, si tienes curiosidad y pasión por aprender, este curso te ofrecerá los conocimientos y habilidades para convertirte en un experto en la creación de personajes en Blender y Unity. ¡Únete a nosotros y descubre cómo dar vida a tus mundos virtuales con personajes cautivadores!"
      ]
    },
    {
      "title": "Unity 2D: Aprenda a Desenvolver um Jogo de Iniciante em C#!",
      "url": "https://www.udemy.com/course/unity-2d-aprenda-a-desenvolver-um-jogo-de-iniciante-em-c/",
      "bio": "Crie um Jogo 2D utilizando a incrível Unity Engine 2021 com a Linguagem de Programação C#!",
      "objectives": [
        "Desenvolver Jogos na Unity 2021 (mas também se aplica a outras versões)",
        "Programar em C#",
        "Scripts, Variáveis e Métodos",
        "Criar um Sistema de Spawn Infinito",
        "Animar gameObjects na Unity",
        "Componentes de Física e Colisão",
        "Adicionar e Configurar Músicas e Efeitos Sonoros",
        "Criação de Prefabs",
        "Adicionar Interface de Usuário (UI)",
        "Criar e Armazenar um High Score"
      ],
      "course_content": {
        "Primeiros Passos": [
          "Baixando e Instalando a Unity 2021",
          "Baixando e Instalando o Visual Studio Code (VSC)",
          "Criando o Projeto e Conhecendo a Interface da Unity",
          "Garantindo que o Visual Studio Code funcione com a Unity",
          "Importado os Assets do projeto"
        ],
        "Criando e Programando o Player": [
          "Criando o Player",
          "Criando nosso Primeiro Script e Entendendo o que são Variáveis",
          "Programando a Movimentação do Player",
          "Fazendo o Player olhar para o lado que está andando",
          "Inserindo Animações no Player",
          "Ativando as Animações via Código",
          "Impedindo que o Player saia do Cenário"
        ],
        "Cenário do Jogo": [
          "Caprichando no nosso Cenário e entendendo o que é \"Order in Layer\""
        ],
        "Criando, Animando e Programando as Moedas": [
          "Criando as Moedas Coletáveis",
          "Animando o Giro da Moeda",
          "Programando a Moeda",
          "Adicionando Efeito Sonoro quando a Moeda for coletada",
          "Criando nosso Primeiro Prefab (prefab da moeda)"
        ],
        "Criando, Animando e Programando a Serra": [
          "Criando a Serra (obstáculo do jogo)",
          "Animando o movimento da Serra",
          "Programando a Serra e o Game Over"
        ],
        "Criando e Programando um Sistema de Spawn Infinito": [
          "Criando um Sistema de Spawn Infinito",
          "Programando o Sistema de Spawn Infinito",
          "Configurando o Sistema de Spawn Infinito",
          "Criando um Destruidor de Objetos"
        ],
        "Criando, Configurando e Programando a UI do Jogo (Interface de Usuário)": [
          "Criando nossa Interface de Usuário (UI)",
          "Mostrando as Moedas na Tela"
        ],
        "Criando, Programando e Configurando o Game Over": [
          "Criando a Tela de Game Over",
          "Ativando a Tela de Game Over ao morrer",
          "Mostrando a Pontuação na Tela de Game Over",
          "Criando e Mostrando o High Score na Tela de Game Over",
          "Programando os Botões da Tela de Game Over"
        ],
        "Criando, Configurando e Programando a Tela de Início": [
          "Criando a Tela de Início",
          "Programando a Tela de Início"
        ],
        "Criando um Sistema de Músicas": [
          "Criando e Programando o Sistema de Músicas"
        ]
      },
      "requirements": [
        "Versão Gratuita da Unity",
        "Visual Studio Code da Microsoft (GRÁTIS)",
        "Uma Paixão por Desenvolvimento de Jogos :)"
      ],
      "description": "Neste curso você aprenderá a criar um Jogo 2D do zero, utilizando a poderosíssima Unity Engine e a incrível Linguagem de Programação C#!\n\n\nCurso voltado para Iniciantes na área, ou seja, todas as aulas foram gravadas dando o máximo de atenção aos detalhes;\n\n\nVamos ir desde os primeiros passos (instalação dos programas), até os passos finais (exportando o jogo em um arquivo que pode ser enviado para outras pessoas);\n\n\nAprenderemos como Inserir e Programar nosso Jogador, como adicionar e configurar músicas e efeitos sonoros, como criar e armazenar um High Score, e muito mais;\n\n\nIremos também aprender o que são Variáveis, Métodos, Arrays e muito mais, com a Linguagem de Programação C# (linguagem que foi criada pela Microsoft);\n\n\nEntenderemos como que funciona a Unity e como que podemos programar nossos jogos nela, em mais de 7 horas de conteúdo, dividas em 36 aulas bem elaboradas!\n\n\nE é claro, se tiver qualquer dúvida durante as aulas, não hesite em perguntar no campo de perguntas! Ficarei muito feliz em lhe ajudar!\nE também, se estiver com dúvidas em relação a compra do curso, da uma olhada nas classificações dele!\nEspero que aprendam diversas coisas novas com as aulas deste curso, e que também se divirtam bastante com o Jogo que estaremos criando nele!\n\n\nAbraços :)",
      "target_audience": [
        "Desenvolvedores Indies de Jogos",
        "Quem está começando a utilizar a Unity",
        "Quem está dando seus primeiros passos na Programação"
      ]
    },
    {
      "title": "【Unity C# ゲーム開発初心者レベルアップ】7つのトランプゲームを作っておぼえる！UnityとC#講座",
      "url": "https://www.udemy.com/course/ild-unity-playing_cards/",
      "bio": "1レクチャー10分で仕組みやルールを噛み砕いて図や動きで解説→プログラミングを進めていくので誰にでも分かりやすい内容になっています！",
      "objectives": [
        "ゲーム開発に必要な思考方法",
        "ゲーム開発に必要なUnityのスキル",
        "カードゲームのプログラミングの基礎",
        "ボードゲームのプログラミングの基礎"
      ],
      "course_content": {
        "紹介": [
          "紹介",
          "Q&Aガイドライン",
          "コースの進め方について"
        ],
        "Unity基礎": [
          "Unityの使い方と仕組み①",
          "Unityの使い方と仕組み②",
          "オブジェクトとスクリプトの関係",
          "オブジェクトとコンポーネントの関係",
          "Buttonオブジェクトの操作",
          "Textオブジェクトの操作",
          "別オブジェクトのコンポーネントを取得",
          "レイキャスト（当たり判定）の操作",
          "Prefabの操作",
          "シーン作成と遷移",
          "その他のテクニック"
        ],
        "C#基礎": [
          "前提知識とコメントとログ",
          "よく使う型と変数",
          "変数の生存期間",
          "変数の代入(型キャスト)",
          "const(定数)",
          "enum(列挙型)",
          "コンソールログの使い方",
          "演算と演算子",
          "比較演算子",
          "if文",
          "switch文",
          "for文",
          "while文",
          "配列",
          "2次元配列",
          "List",
          "Listの応用",
          "Dictionary",
          "foreachと配列関係まとめ",
          "関数入門①",
          "関数入門②",
          "クラス入門①",
          "クラス入門②",
          "スクリプトからコンポーネントへアクセス",
          "自作クラスへのアクセス方法",
          "アクセスレベルについて",
          "3と5の倍数で文字を表示する",
          "AudioSource(サウンド)の操作①",
          "AudioSource(サウンド)の操作②"
        ],
        "事前準備とDOTweenについて": [
          "プロジェクト作成と共通シーン作成",
          "このコースで使うDoTweenについて"
        ],
        "【Lv1】ハイ＆ロー(High&Low)": [
          "シーンとUI作成",
          "シーン初期化",
          "1ゲームプレイ",
          "連続ゲームプレイ",
          "正解した時にSEを鳴らす"
        ],
        "【Lv2】ブラックジャック(BlackJack)": [
          "シーンとUI作成",
          "シーン初期化",
          "プレイヤー",
          "ディーラーと連続ゲームプレイ",
          "BGMとSEを追加する"
        ],
        "【Lv3】神経衰弱(Memory)": [
          "シーンとUI作成",
          "シーン初期化",
          "タイマーとカードをめくる処理",
          "2枚のカードのチェック"
        ],
        "【Lv4】カップル(Couple)": [
          "シーンとUI作成",
          "シーン初期化",
          "カード選択",
          "2枚のカードのチェック",
          "ゲームクリア表示"
        ],
        "【Lv5】ポーカー(Poker)": [
          "シーンとUI作成",
          "シーン初期化",
          "カード交換",
          "役の判定"
        ],
        "【Lv6】ソリティア(Solitaire)": [
          "シーンとUI作成",
          "シーン初期化",
          "タイマー表示",
          "カード選択",
          "カード移動"
        ]
      },
      "requirements": [
        "パソコンの基本的な操作",
        "ゲーム制作スキルを学びたい",
        "脱入門レベルを目指している"
      ],
      "description": "7つのトランプのゲーム制作を通して汎用的なカードゲームの制作方法を習得しましょう。\n制作したゲームはそれぞれ独立して遊ぶことはもちろん皆さんのオリジナルゲームに組み込む事もできます！\nカードゲーム、ボードゲーム制作スキルの基礎となる部分がたくさん詰まっているのでぜひこの機会にチャレンジしてみてください！\n\n\nつまづきやすい部分は資料付きで解説を入れたり、画面ズームを使って進めていくので挫折しにくい構成になっています。\n1レクチャーを10分程度にまとめたハンズオン形式となっているので\n毎日少しづつでも、動画でやっていることを真似するだけでもOKなので、効率的に学習できる内容となっています。\n\n\n今回の題材はトランプ\nカードゲーム、ボードゲームのロジックが学習できる内容になっています。\nゲームロジックを実装して、幅広いゲーム開発の知識を手に入れよう！\n入門→初心者→脱初心者→初級者→中級者の中で、初心者のレベルアップ、ステップアップに該当するコースです.\n\n\nこちらのコースでは\nC#の基本的な使い方\nトランプゲームのロジック\nカードゲーム、ボードゲームの汎用的な制作手法\nが効率的に学習できます。\nなるべくスクリプト（プログラミング）を利用して制作していくので\nアイデア次第で汎用的なカードゲーム、ボードゲームを制作する知識も身につきます。\n\n\nまた、私のコースは日々頂いたレビューに対応しアップデートを行なっていきますので\n高評価＆レビューいただけますと励みになります。",
      "target_audience": [
        "Unityでのゲーム開発に興味をもっている方",
        "カードゲームのプログラミングの基礎に興味を持つUnity入門者",
        "ボードゲームのプログラミングの基礎に興味を持つUnity入門者"
      ]
    },
    {
      "title": "Unityでシューティングゲームを作る！プログラミングスキルアップ講座",
      "url": "https://www.udemy.com/course/sokudeunityzakushoo/",
      "bio": "コゲ猫ザクロシューティング、制作ハンズオン、目指せ脱初心者！",
      "objectives": [
        "Unityを使ったシューティングゲームの制作",
        "ハンズオン形式でゲームシステム一通り一式の作り方を学ぶ",
        "修正に強いプログラムづくり、データとロジックの分離の方法を学ぶ",
        "脱初心者プログラマー、スキルアップを目指す"
      ],
      "course_content": {
        "概要説明": [
          "概要説明"
        ],
        "Unityについて": [
          "Unityについて"
        ],
        "プロジェクト設定とモデル取り込み": [
          "新規プロジェクト作成",
          "モデル取り込み"
        ],
        "ステージの外観": [
          "ステージ作成"
        ],
        "プレイヤー作成": [
          "プレイヤーを操作できるようにしよう",
          "ステージのスクロール",
          "弾丸プレハブ",
          "弾丸プール",
          "プレイヤーの弾撃ち"
        ],
        "敵作成とそのふるまい": [
          "概要説明",
          "敵の表示と移動",
          "敵の消去と当たり判定",
          "着弾演出",
          "敵の攻撃１",
          "敵の攻撃２"
        ],
        "ステージの管理": [
          "ステージシーケンサー",
          "ステージのデータ作成",
          "ステージデータの解釈１",
          "ステージデータの解釈２",
          "ステージデータの実行",
          "敵のバリエーション作成",
          "CSVに敵の種類を書けるように",
          "敵のバリエーションを増やす",
          "敵のバリエーションを増やす ボス作成",
          "ボス登場アニメと攻撃ループアニメ",
          "ボスの攻撃動作"
        ],
        "演出と仕上げ": [
          "爆発演出",
          "ゲームの進行ステート",
          "タイトル表示のUI設置",
          "ゲームステートの変更１",
          "ゲームステートの変更２",
          "ゲームを繰り返し遊ぶために",
          "見た目の調整とレベルデザイン"
        ]
      },
      "requirements": [
        "Unityについて、全くの初めてではない。",
        "C#の基礎文法（変数、条件式、関数、クラスなど）を知っている",
        "ファイル操作などの基本的なPC操作スキルとインターネット接続環境（ダウンロード教材があります）"
      ],
      "description": "この講座はゲームエンジンUnityを使ったゲーム制作の学習コースです。ハンズオンでゲームを完成まで順を追って体験することができます。\nUnityの使用経験があり、書籍やWebでの情報を参照して自分なりに制作ができるようになった方へ、プログラマの目線で効率的なゲームシステム構築を行うための手法を紹介します。\nゲームエンジンの登場でゲームの制作は格段に身近になりました。ですが、効率的で変更に強く問題の発生しにくいゲームシステムの構築は、やはりプログラミングの専門知識が必要となります。この講座では脱初心者を目指し、Unityの便利な機能を活用し、シューティングゲームを制作する方法を紹介しています。\nゲームプログラマとしてキャリアを積み、大学と専門学校の教壇に立ち、Unity認定プログラマー資格を保有している講師が、ゲーム制作のノウハウと講義での理解のしやすさを濃縮してコースを作りました。\nこの講座でUnityでの制作スキルの向上を目指してみましょう。",
      "target_audience": [
        "プログラマ初学者でスキルアップを目指したい方",
        "Unityの少し高度なゲーム構築の方法を知りたい方",
        "シューティングゲームの制作に興味のある方"
      ]
    },
    {
      "title": "Unreal Engine 4 Dominando a Programação de Blueprint 2021",
      "url": "https://www.udemy.com/course/unreal-engine-4-dominando-a-programacao-de-blueprint/",
      "bio": "Aprenda como usar a programação de blueprints para dar vida em seus jogos com lógica e programação de fácil entendimento",
      "objectives": [
        "Criação de jogos utilizando blueprint",
        "Lógica de blueprint",
        "Programação de jogos com blueprint",
        "Criar jogos sem precisar usar programação complicada ou complexa",
        "Desenvolver jogos com blueprint",
        "Desenvolver jogos com uma linguagem de fácil aprendizado",
        "Lógica Matemática"
      ],
      "course_content": {
        "Introdução": [
          "Introdução e avisos parte 1",
          "Introdução e avisos parte 2",
          "Introdução e avisos parte 3",
          "A História",
          "A História Continuação",
          "A História Final",
          "Introdução"
        ],
        "Criando Conta, Baixando Inicializador e Instalando Motor UE4": [
          "Criação de Conta e Instalação do inicializador",
          "Criação de Conta e Instalação do Inicializador Continuação",
          "Configuração e Instalação do Motor Gráfico Unreal Engine"
        ],
        "Classes blueprint e Open level blueprint": [
          "Entendendo os Templates e Conhecendo as Opções Importantes",
          "Entendendo os Templates e Conhecendo as Opções Importantes Continuação",
          "Conhecendo as Principais Funcionalidades do Motor",
          "Conhecendo o Blueprint Inicial do Projeto",
          "Sobre malhas 3D (bônus)"
        ],
        "Criando nosso próprio blueprint e se aprofundando mais": [
          "Criando Nosso Primeiro BluePrint",
          "Conhecendo o Openlevel e Adicionando um Evento",
          "Movimentado uma Cadeira e Conhecendo as posições do mundo 3D",
          "Exercícios de fixação"
        ],
        "Conceitos básicos de lógica e criação de objetos": [
          "Trabalhando com malha de arbusto, Audio e Partículas",
          "Controlando a visibilidade do arbusto",
          "Controlando a fumaça e modificando a partícula",
          "Adicionando audio de fogo no arbusto",
          "Destruindo os objetos e finalizando arbusto"
        ],
        "Conhecendo as variáveis da UE4": [
          "Pausando o jogo com a variável boolean",
          "Uso da variável tipo Byte",
          "Variável Integer",
          "Conhecendo variável Integer64 e trabalhando com Float",
          "Trabalhando com as variáveis Name, String e Text",
          "Movimentando uma pedra usando a variável Vector",
          "Rotacionando porta usando a variável Rotator",
          "Usando todas opções de posição com variável Transform"
        ],
        "Operadores Aritméticos": [
          "Addition (Adição)",
          "Subtraction (Subtração)",
          "Division (Divisão)",
          "Multiplication (Multiplicação)",
          "Modulo"
        ],
        "Operadores Relacionais": [
          "Equal (Igual)",
          "Equal (igual) Continuação",
          "NotEqual (Não igual)",
          "Greater than (Maior que)",
          "Less than (Menor que)",
          "Greater than or equal to (Maior que ou igual)",
          "Less than or equal to (Menor que ou igual)"
        ],
        "Portas Lógicas": [
          "Introdução portas lógicas",
          "Conhecendo a porta lógica AND",
          "Conhecendo a porta lógica OR",
          "Conhecendo a porta lógica NOT",
          "Conhecendo a porta lógica NAND",
          "Conhecendo a porta lógica NOR",
          "Conhecendoa a porta lógica XOR"
        ],
        "Estruturas Condicionais": [
          "Adicionando uma lâmpada com colisão ao cenário",
          "Adicionando luz e lógica para a lâmpada",
          "Adicionando luz e lógica para a lâmpada continuação",
          "Construindo uma porta inteligente",
          "Construindo uma porta inteligente continuação"
        ]
      },
      "requirements": [
        "Conhecer o idioma Português",
        "Saber ler",
        "Saber escrever",
        "Gostar de jogos",
        "Querer aprender"
      ],
      "description": "Comece aprender os principais conceitos sobre blueprints e lógica de programação na Unreal Engine. Conforme o curso avança você vai aprendendo conceitos primordiais para criar códigos de jogos na UE4 sem medo. Você vai avançar comigo desde a criação da conta, instalação e criação de lógicas básicas, intermediárias e algumas avançadas, passo a passo você irá conhecendo o alfabeto da Unreal chamado blueprint. Neste curso você não irá aprender como desenvolver jogos e sim o conceito primordial em como programar jogos usando os famosos Blueprints ou seja gráficos criando conexões e dando vida para seus jogos de uma maneira descomplicada e fortemente detalhada.",
      "target_audience": [
        "Desenvolvedores de jogos",
        "Criadores de jogos",
        "Programadores de jogos",
        "Design de jogos",
        "Geek",
        "Qualquer um que goste de tecnologia de jogos",
        "Curiosos que desejam saber como uma lógica de jogo é criada",
        "Arquitetos",
        "Designer de Interiores",
        "Iniciantes em Unreal Engine"
      ]
    },
    {
      "title": "Jogos 2D para Android e iOS: Aprenda Criando 7 Jogos",
      "url": "https://www.udemy.com/course/criacao-de-jogos-para-android-curso-completo/",
      "bio": "Aprenda na Prática a Criar Jogos como Super Mario, Candy Crush, Pac-Man e Outros! Junte-se a Mais de 5 Mil Alunos!",
      "objectives": [
        "Criar diversos games para Android e iOS conforme suas necessidades.",
        "Publicar seu Game na Play Store.",
        "Utilizar os diversos recursos presentes na Engine Godot.",
        "Compreender os princípios essenciais da Criação de Games.",
        "Utilizar o algoritmo A* para inteligência artificial."
      ],
      "course_content": {
        "Introdução": [
          "O Que Aprenderemos Neste Curso?",
          "Grupo no Facebook e Links Úteis"
        ],
        "Introdução à Godot": [
          "Conhecendo a Engine Godot",
          "Versão 2.1.4 vs 3.0",
          "Download e Instalação",
          "Criando o Projeto e Configurações Básicas",
          "Conhecendo a Interface",
          "Entendendo Nodes e Scenes"
        ],
        "Programação Básica": [
          "Utilizando Variáveis",
          "Operadores Aritméticos",
          "Operadores Lógicos",
          "Tomando Decisões",
          "Outros Tipos de Variáveis",
          "Realizando Repetições",
          "Criando Funções"
        ],
        "Flappy Bird": [
          "Apresentação do Game",
          "Download dos Recursos e Projeto Final",
          "Animando o Pássaro",
          "Configurando e Limitando o Movimento",
          "Animação do Fundo Infinito",
          "Criando a Cena do Cano",
          "Gerando os Canos",
          "Detectando Colisão",
          "Contando Pontos",
          "Tocando Sons"
        ],
        "Timberman": [
          "Apresentação do Game",
          "Download dos Recursos e Projeto Final",
          "Criando o Projeto",
          "Animando o Felpudo",
          "Montando Scenes dos Barris",
          "Empilhando os Barris",
          "Quebrando Tudo!",
          "Implementando Barra de Tempo",
          "Contando Pontos"
        ],
        "Fruit Ninja": [
          "Apresentação do Game",
          "Download dos Recursos e Projeto Final",
          "Criando o Projeto",
          "Esquematizando uma Pera",
          "Lançamento da Fruta",
          "Cortando a Fruta",
          "Diversificando os Sabores",
          "Detectando Cortes",
          "Olha a Bomba",
          "Sistema de Pontuação e Vida",
          "Game Over"
        ],
        "Hand Spinner": [
          "Apresentação do Game",
          "Download dos Recursos e Projeto Final",
          "Criando um Hand Spinner",
          "Fazendo Girar",
          "A Tela de Jogo",
          "Muitos Sinais!",
          "Sistema de Pontuação",
          "Lógica do Game"
        ],
        "Super Mario": [
          "Apresentação do Game",
          "Download dos Recursos e Projeto Final",
          "Movimentando o Personagem",
          "Animando os Movimentos",
          "Criando o Mundo",
          "Camera e Fundo",
          "Adicionando Moedas",
          "Lesmas ao Ataque",
          "Entendendo Colisões",
          "A Morte",
          "Blocos Destrutíveis",
          "Plataformas Móveis",
          "Comandos Touch",
          "Respawn e Fim",
          "Trocando de Tela",
          "Infos do Jogo",
          "Mecânicas das Infos",
          "Como Impedir que o Personagem Volte?"
        ],
        "Candy Crush": [
          "Apresentação do Game",
          "Download dos Recursos e Projeto Final",
          "Importando Recursos",
          "Criando SplashScreen",
          "Transições de Tela",
          "Tela de Seleção de Fase",
          "Montando Tela de Jogo",
          "Animando o Docinho",
          "Randomizando Cores",
          "Matriz de Doces",
          "Indicando a Jogada",
          "Movendo os Doces",
          "Revertendo a Jogada",
          "Detectando Jogada Válida - Parte 1",
          "Detectando Jogada Válida - Parte 2",
          "Deslocando os Doces - Parte 1",
          "Deslocando os Doces - Parte 2",
          "Criando Levels",
          "Dividindo em Grupos",
          "Movimentos Restantes",
          "Barra de Pontuação - Parte 1",
          "Barra de Pontuação - Parte 2",
          "Lendo e Salvando Progresso - Parte 1",
          "Lendo e Salvando Progresso - Parte 2",
          "Tela Sobreposta",
          "Pausando o Game",
          "Tela da Vitória",
          "Tela da Derrota"
        ],
        "Pac-Man": [
          "Apresentação do Game",
          "Download dos Recursos e Projeto Final",
          "Criando o Mapa",
          "Dando Vida ao Pacman",
          "Movimentando o Pacman",
          "Ajustando o Movimento",
          "Criando o Fantasma",
          "Entenda o Algoritmo A*",
          "Implementando o A*",
          "Criando Lista Inteligente",
          "Código Principal do A*",
          "Listando o Caminho",
          "Perseguindo o Pacman",
          "Dando Vida Aos Fantasmas",
          "Movimento Especial",
          "Detectando Colisão",
          "Conectando os Sinais",
          "Modo Especial",
          "Finalizando os Sinais",
          "Controle Touch",
          "Implementando o HUD",
          "Adicionando Pontos"
        ]
      },
      "requirements": [
        "É necessário ter um computador Windows, Mac ou Linux.",
        "Não é necessário nenhum conhecimento prévio sobre programação.",
        "Vontade de aprender e estudar.",
        "Todas as ferramentas que utilizaremos são GRATUITAS."
      ],
      "description": "ATENÇÃO: Este é um curso de 2017 e portanto algumas coisas estão desatualizadas. Mesmo assim, caso queira aprender sobre Godot este curso ainda possui muito conteúdo que pode te ajudar!\n===== Algumas avaliações deste curso =====\n\"Muito bom, estou aprendendo coisas que com certeza vão me ajudar muito no futuro! Vale a pena fazer o curso...\" - Flavio de Souza Batista\n\"Curso muito prático e rápido, sem deixar de ter bastante conteúdo.\" - Thiago Sousa Santos\n\"O instrutor tranquilo e objetivo, o que torna fácil e produtivo o aprendizado.\" - Sergio Biazetto\nE muitas outras mais abaixo nesta página, confira!\n===== Descrição =====\nSeja bem-vindo(a) ao Curso Completo de Criação de Jogos para Android e iOS!\nJá teve alguma ideia que renderia um ótimo jogo, mas não sabia como colocá-la em prática?\nSonha em trabalhar desenvolvendo jogos?\nEntão você está no lugar certo! Neste curso você aprende tudo que é necessário para criar seus Games do zero!\nAqui, você aprenderá a utilizar a melhor ferramenta Open Source de desenvolvimento de Games, a Godot, que além de intuitiva é super potente e totalmente gratuita!\nMuitos estúdios de Desenvolvimento de Games já estão utilizando a Godot, então este curso te dará uma vantagem no momento de uma possível contratação!\nAcha que vai ficar só na teoria? Nada disso! Criaremos 7 Games semelhantes aos famosos:\nSuper Mario\nCandy Crush\nPac-Man\nFlappy Bird\nTimberman\nFruit Ninja\nHand Spinner\nNão sabe nada sobre programação? Não tem problema, te ensinaremos!\n\nTeve alguma dúvida durante a aula? Você terá um fórum totalmente exclusivo para fazer qualquer pergunta relacionada ao curso, que responderemos com o maior prazer!\nO que está esperando para começar a criar seus Games incríveis? Não perca tempo! Inscreva-se já!",
      "target_audience": [
        "Entusiastas de Desenvolvimento e/ou Design de Games.",
        "Pessoas que tem o desejo de realizar seu próprio game."
      ]
    },
    {
      "title": "Blender 2.8 Animação 3D para Jogos + 12 Princípios Disney",
      "url": "https://www.udemy.com/course/blender-28-animacao-3d-para-jogos-principios-disney/",
      "bio": "Guia Completo Para Animação 3D no Blender 2.8 para Jogos com base nos 12 Princípios da Animação criado por Disney",
      "objectives": [
        "Criar Animação 3D com Blender para Jogos ou outro Projeto",
        "12 Princípios Disney para Animação",
        "Técnicas Básicas e Avançadas para Animar um Personagem",
        "Introdução ao Rig de Personagens"
      ],
      "course_content": {
        "Introdução": [
          "Introdução e apresentação"
        ],
        "12 Princípios Disney para Animação": [
          "Animação Princípio Disney - Squash and Stretch",
          "Animação Princípio Disney - Antecipation",
          "Animação Princípio Disney - Staging",
          "Animação Princípio Disney - Straight Ahead and Pose to Pose",
          "Animação Princípio Disney - Follow Through and Overlapping Action",
          "Animação Princípio Disney - Slow In and Slow Out",
          "Animação Princípio Disney - Arc"
        ],
        "Blender Personagem e Asset Material": [
          "Blender Animação: Baixar Persoangem Eleven e Espada"
        ],
        "Animação 3d: Walk Cycle": [
          "Animação 3d: Walk Cycle 01",
          "Animação 3d: Walk Cycle 02",
          "Animação 3d: Walk Cycle 03"
        ],
        "Animação 3D: Run Cycle": [
          "Animação 3D: Run Cycle 02",
          "Animação 3D: Run Cycle 01"
        ],
        "Blender Animação 3D: Jump": [
          "Blender Animação 3D: Jump 01",
          "Blender Animação 3D: Jump 03",
          "Blender Animação 3D: Jump 02"
        ],
        "Animação 3D: Punch": [
          "Animação 3D: Punch 01",
          "Animação 3D: Punch 02",
          "Animação 3D: Punch 03"
        ],
        "Animação 3D: Sword Attack": [
          "Animação 3D: Attack 01",
          "Animação 3D: Attack 02",
          "Animação 3D: Attack 03",
          "Animação 3D: Attack 04",
          "Animação 3D: Attack 05"
        ],
        "Conclusão": [
          "Conclusão do curso"
        ]
      },
      "requirements": [
        "O Aluno deve ter acesso a internet",
        "Conhecimento da interface do Blender",
        "Programa Blender 2.8 instalado",
        "Programa Quick Time instalado"
      ],
      "description": "Pare de procurar por animação para jogos, você já encontrou aqui!\nVocê não precisa mais procurar por tutoriais espalhados na internet que não te ajudará a ter uma animação fluída e de qualidade para jogos, agora você acabou de encontrar o curso de animação 3d no Blender que você precisa.\nAnimação 3D Fluída no Blender?\nNesse curso você aprenderá a criar animações fluídas e de qualidade usando o software gratuito chamado Blender, é código aberto e você poderá baixar e instalar em seu computador, escolhemos o Blender para que você não precise investir nada mais para ter o conhecimento de um bom animador 3D para jogos.\nNosso foco no curso é a animação 3D para Jogos no Blender, mas o conteúdo que você irá aprender pode ser usado para qualquer outro projeto de animação também.\nO que você Aprenderá no Curso?\nVocê inicialmente aprenderá os 12 princípios Disney para uma boa animação e os ciclos de animações necessárias para animar seu personagem para jogos.\nOs 12 Princípios da Animação Disney\nSquash and Stretch\nAnticipation\nStaging\nStraight Ahead Action and Pose to Pose\nFollow Through and Overlapping Action\nSlow In and Slow Out\nArc\nSecondary Action\nTiming\nExaggeration\nSolide Drawing\nAppeal\ne muitos mais...\nNão espere mais para aprender a animar seus personagens de jogos com qualidade  usando o Blender, imagine você em nosso curso aprendendo como animar corretamente os seus personagens 3D e dando vida a eles, com foco em uma ferramenta gratuita e de alta qualidade que é o Blender, difícil você encontrar um curso como esse no mercado nacional e acessível.\nComo nosso foco é animação para jogos 3d, estudaremos a animação corporal do personagem, através de exemplos práticos e divertidos; com as técnicas que irei te ensinar, você estará apto a criar suas animações 3d após o curso.\nEstudaremos animações para jogos:\nWalk Cycle\nRun Cycle\nJump\nPunch\nSword Attack\nDefense\nCrawl\nCrouch\nKick\nDeath\nQuem sou eu para te ensinar animação para jogos?\nSou Edson Camacho e anos estudo sobre modelagem 3d, animação e jogos, estudei animação com um animador do filme \"Planeta dos Macacos\", aprendi a desenhar e dar os primeiros passos na animação 2d com um diretor de arte dos estúdios Maurício de Souza, estudo animação com um professor que foi animador da Disney e aprendi a desenvolver jogos com cursos aprovados pela própria Unity, tudo para levar o melhor conhecimento a você.\nEntão não perca mais tempo e entre para uma carreira que está em crescimento no Brasil, entre para nossa comunidade de artistas 3d, te vejo em nosso curso. Não perca essa oportunidade!\n\"Animar é convencer que há vida\".",
      "target_audience": [
        "Pessoa que queira Aprender Animação 3d para Jogos ou outros Projetos"
      ]
    },
    {
      "title": "Jumpstart Game Development: Create Custom Platformers!",
      "url": "https://www.udemy.com/course/godot-genisis-platformer/",
      "bio": "Platformer Game Mastery: Design, Development, and Creativity Unleashed\"",
      "objectives": [],
      "course_content": {
        "1. Concepts": [
          "Platformer Section Overview",
          "Lecture 1 - Positions",
          "Lecture 2 - Moving Positions",
          "Lecture 2.1 - Velocity",
          "lecture 3 - Jumping & Gravity"
        ],
        "2. Examples": [
          "Platformer Example Project 1"
        ],
        "3. Exercises": [
          "Assignment 1 - Infinite Platformer",
          "Obstacles - Solution to A1 - Part 1",
          "Player + BG - Solution to A1 - Part 2"
        ]
      },
      "requirements": [
        "No Previous Experience Required!"
      ],
      "description": "Unlock the Secrets of Platformer Game Creation\nWelcome to this course! – a course that takes you on a thrilling journey into the world of game development. Whether you're a complete beginner or an experienced game enthusiast, this course is designed to equip you with the skills and knowledge needed to design, develop, and launch your very own platformer games.\nComprehensive Learning in Three Phases:\nConceptualization: Begin by understanding the core principles of platformer game design. Learn how to brainstorm and conceptualize your game ideas, turning abstract concepts into potential game mechanics and narratives.\nExamples: Dive into analyzing classic and modern platformer games. Understand what makes them successful, the intricacies of their design, and how they manage to captivate players. This analysis will provide a solid foundation for your own game development process.\nHands-On Exercises: The course offers a variety of practical exercises that will guide you through the actual process of creating a game. From level design to character development, you'll gain first-hand experience in every aspect of game creation.\n\n\nBeyond This Course:\nWith this course under your belt, you will have mastered the overall structure of any platformer YOU wish to create! I would love to see what you can now do! Now go forth and practice creating your own ideas! Good luck and keep coding!",
      "target_audience": [
        "Beginners in Game Development: If you're taking your first steps into the world of game creation, this course will provide you with a solid foundation. You'll learn the basics of game design and development in a fun and engaging way.",
        "Hobbyists and Game Enthusiasts: Those who love playing platformer games and have always wanted to create their own will find this course invaluable. Transform your passion into creative output and bring your game ideas to life.",
        "Indie Game Developers: For independent developers seeking to expand their skills in platformer games, this course offers insights into design principles, level creation, and user engagement strategies."
      ]
    },
    {
      "title": "Oyunlarda Gelir Modelleri | Unreal Engine & Unity",
      "url": "https://www.udemy.com/course/oyunlarda-gelir-modelleri-unreal-engine-unity/",
      "bio": "Rainbow6, LoL vb Popüler oyunlarının nasıl para kazandığını ve stratejik gelir modellerini öğrenin.",
      "objectives": [
        "Yaptığınız oyunlarda maksimum gelir elde etmeyi öğrenin.",
        "Oyun içi birçok gelir modelini Öğrenin.",
        "Reklamlarınızı doğru yerlerde yayınlayın.",
        "Sponsorluk Mantığını Öğrenin",
        "E-Spor ve Turnuvalar ile kazanç sağlayın.",
        "Düşmemeniz gereken Hataları öğrenin.",
        "En çok kazanan oyunların neden kazandıklarını öğrenin."
      ],
      "course_content": {
        "Giriş": [
          "Giriş",
          "Oyunlarda gelir modeli nedir?",
          "Gelir modelleri nelerdir?",
          "Online ve Offline Oyun Gelirleri"
        ],
        "Gelir Modelleri": [
          "Oyunun Fiyatı",
          "DLC Paketler",
          "Oyun İçi Para",
          "Oyun İçi Para 2",
          "İndirimler",
          "Kostümler (Skins)",
          "Daha Çok Al Daha Az Öde",
          "Paketler",
          "Kutular",
          "Etkinlik Kartları",
          "Battle Pass",
          "Görevler",
          "Takviyeler",
          "E Spor Kostümleri",
          "Komisyon"
        ],
        "Reklamlar": [
          "Yayıncılar",
          "Görevler",
          "Youtube",
          "Google Ads ve Aso",
          "İyi Bir Oyun"
        ],
        "E-Spor ve Turnuvalar": [
          "E Spor Nedir?",
          "E Spor Satışları",
          "Turnuvalar",
          "Stadyum",
          "Canlı Yayın",
          "Sponsorluklar"
        ],
        "Neler Yapılmamalı": [
          "Pay To Win",
          "Skin Hileleri",
          "Bozuk Skin Efektleri",
          "Oyunun Oynanabilirdiğini Sağlamak",
          "Hatalı Ceza Sistemi"
        ],
        "İnceleme 1 : League of Legends": [
          "İncelemedeki Fiyatlandırma",
          "Ana Sayfa (Öne Çıkanlar)",
          "Oyun Parası ve Vitrin",
          "Vitrin 2",
          "Ebediler Ve Paketler",
          "Şampiyonlar",
          "Kostümler",
          "Kostüm Renkleri",
          "Paketler",
          "TFT",
          "TFT 2",
          "Battle Pass (TFT)",
          "Ganimet Ve Ek İçerik",
          "Hediye ve Hesap",
          "Tekrar Aldırmaya Zorlama",
          "Karşılaştırma"
        ]
      },
      "requirements": [
        "Bu kurs herhangi bir deneyim gerektirmiyor, herkes için uygundur."
      ],
      "description": "Bu kursta, Oyunlardan En Üst Düzeyde Gelir elde etmenin yollarını en popüler oyunlarda inceliyoruz. Rainbow Six Siege, League of Legends ve Fortnite gibi en çok kazanan oyunların gelir modellerini teker teker stratejileri ile öğrenin.\n\n\nBu kurs için hiçbir bilgi sahibi olmanıza gerek yoktur, çünkü her şeyi en baştan ele alıyoruz.\nUnreal Engine veya Unity üzerinden yaptığınız oyunların en ileri seviyede gelir elde etmesini sağlamayı öğrenin.\nBu kurs Teorik bir şekilde ilerlemekte olup, bolca örneklendirilmektedir.\nGerçek hikayelerden bir oyuncunun psikolojisini öğrenip fiyatlandırma yapmayı öğrenin.\n\n\nBu Kursta Öğrenecekleriniz şu şekildedir:\nOyun Fiyatı dengesi\nFiyat belirlemede rakip analizi\nOyun içi satışta püf noktalar\nOyuncu Psikolojisi\nOyun içi Huzuru Sağlamak\nE Spor\nTurnuvalar\nOyun içi para değerleri\nSatın alma Psikolojisi\nSatışta yapılmaması gereken hatalar (Pay To Win, ağır Ceza Sistemi...)\nOyuncuları başka karakterleri oynatarak kostüm almasını sağlamak\nDoğru Reklam Vermek\nReklam stratejileri\nFinansal olarak gücünüzü koruma\nOyuna özgü eşyaların satışı\nSponsorluklar\nOyun içi satışta doğru değerleri kullanma\nOyuncuya daha fazla satın almaya yönlendirme\nKutu sistemi\nBattle Pass Sistemi\nKomisyon ve Pazar mantığı\nİndirim Değerleri\nSkin Hileleri ve Sonuçları\n\n\n\n\n\n\n\n\nBu kurs aşağıdaki Gelir Modellerini ve fazlasını içermektedir\nOyun fiyatı\nKostümler (Skins)\nBattle Pass\nOyuna Özel İçerikler\nİndirimler\nSetler\nKutular\nEtkinlik Kartları\nTakviyeler\nE Spor\nTurnuvalar\nSponsorluklar\nReklam\nGoogle ads ve aso\nTwitch\nYoutube\nGörevler\nKomisyon\nDoğru hamleler ve denemeler sonucunda elde edeceğiniz geliri üst düzeye taşıyarak arttırın. Daha önce yapılan hatalara düşmeyin, oyuncuyu oyunda tutun ve daha fazla şey satın almasını sağlayın. Oyun içi satılan ürünlerin fiyatındaki dengeyi yakalayın. Oyun içi kullanılan parayı daha etkili bir şekilde göstererek oyuncuya satın. Gerçek örnekler ile sisteminizi geliştirip oyunculara sunun.",
      "target_audience": [
        "Oyun Geliştiricileri",
        "Online Oyunlar sevenler",
        "Gelir Modeli elde etmek isteyenler",
        "Finans ile ilgilenenler",
        "Para kazanmak isteyenler",
        "Reklam vermek isteyenler",
        "Unreal Engine",
        "Unity"
      ]
    },
    {
      "title": "Unreal Engine 5.4 - CRIANDO UM JOGO SOULS LIKE DO ZERO.",
      "url": "https://www.udemy.com/course/criando-souls-like-dozero/",
      "bio": "CRIANDO UM JOGO, SOULS LIKE, UNREAL ENGINE",
      "objectives": [
        "Motion Matching do Unreal Engine também contém um conjunto de configurações e ferramentas de depuração que você pode usar para ajustar seu sistema de animação.",
        "Lógica de Programação em Blueprint: Implementação de lógica de jogo usando o sistema visual de programação Blueprint.",
        "Notion, Trello, FigJam: Utilização de ferramentas de gerenciamento de projetos para planejar e",
        "Build and Test: Compilação e teste de projetos para garantir funcionalidade e desempenho.",
        "Mixamo Import Assets and Animations: Importação de ativos e animações do Mixamo para uso na Unreal Engine.",
        "System Component: Implementação de componentes de sistema para criar sistemas complexos e reutilizáveis.",
        "Blender Animations: Criação e exportação de animações usando o Blender para uso na Unreal Engine.",
        "Actor Components: Criação e utilização de componentes de ator para modularizar funcionalidades.",
        "Actors: Criação e manipulação de atores para representar objetos no mundo do jogo.",
        "Classes Blueprint: Criação e herança de classes blueprint para organizar e reutilizar funcionalidades.",
        "Blueprint Interface: Criação e utilização de interfaces de blueprint para comunicação entre objetos.",
        "AI Behavior: Implementação de comportamentos de IA usando Behavior Trees e AI Controllers.",
        "Nav Mesh: Configuração de áreas navegáveis para permitir que personagens AI se movam pelo ambiente.",
        "Eventos: Utilização de eventos para criar interações dinâmicas entre objetos no jogo.",
        "Animation Blueprint: Desenvolvimento de blueprints de animação para controlar animações de personagens.",
        "Skeletal Mesh: Importação e manipulação de malhas esqueléticas para personagens animados.",
        "Level Sequence: Criação e edição de sequências de nível para animações e cinematics.",
        "Inputs: Como configurar e manipular inputs do jogador para interação com o jogo.",
        "Widgets: Criação e personalização de widgets para criar interfaces de usuário interativas.",
        "Plugins: Utilização de plugins para estender e personalizar funcionalidades da Unreal Engine.",
        "Macros: Criação de macros para automatizar tarefas repetitivas.",
        "Funções: Criação de funções para encapsular e reutilizar blocos de lógica.",
        "Material Physics: Implementação de física de materiais para criar interações realistas.",
        "Blend Space: Criação de espaços de transição entre animações para transições suaves.",
        "Esses tópicos abrangem uma ampla gama de conceitos e habilidades necessárias para desenvolver jogos completos na Unreal Engine.",
        "Módulos Extra - Interface de Usuário (Common UI): Aprenda a criar interfaces dinâmicas e interativas.",
        "Módulos Extra - Sistema de Missões (Quests): Desenvolva missões e objetivos no jogo.",
        "Módulos Extra - Mapas: Crie e configure mapas navegáveis e detalhados.",
        "Módulos Extra - Comércio (Trade): Implemente sistemas de compra, venda e troca entre personagens.",
        "Módulos Extra - Montaria: Adicione mecânicas de montarias ao jogo.",
        "Módulos Extra - Árvore de Habilidades: Construa sistemas de evolução de habilidades para os personagens.",
        "Módulos Extra - Jogo Online (Online): Configure e otimize funcionalidades multiplayer."
      ],
      "course_content": {
        "Iniciando nossa jornada.": [
          "Conheça-me - Apresentando para vocês.",
          "Tirando dúvidas!"
        ],
        "Introdução - Conhecendo ferramentas de planejamentos (Iniciante).": [
          "Criando Notion e para que usaremos.",
          "Criando FigJam e para que usaremos.",
          "Criando Trello e para que usaremos.",
          "Baixando e instalando o GitHub Desktop e para que usaremos.",
          "Instalando Blender e Plugin Mixamo Converter."
        ],
        "Unreal Engine 5 (Iniciante).": [
          "A instalação da Unreal Engine e a criação do nosso primeiro projeto.",
          "Conhecendo um pouco da interface.",
          "Conhecendo alguns tipos de classes na Unreal Engine.",
          "Classe de Ator, Static Mesh, Collision e event."
        ],
        "Conhecendo a Classe Character na Unreal Engine (Iniciante).": [
          "Classe Character, Skeletal Mesh, Capsule Collision.",
          "Custom Events, Event Dispatch."
        ],
        "Básico de lógica com Unreal Engine 5 (Iniciante).": [
          "Resumindo, variáveis.",
          "Resumindo, Arrays.",
          "Resumindo, loops de repetição.",
          "Resumindo, Maps.",
          "Resumindo, Get e Set.",
          "Resumindo, Function e Macro."
        ],
        "Comunicando entre BluePrints (Iniciante).": [
          "Cast Character.",
          "Get all Actor Class, Spawn Actor, Destroy Actor.",
          "Apply Damage, Any Damage",
          "Entendendo a Unreal Engine."
        ],
        "BluePrints (Iniciante).": [
          "Class Child",
          "Enum, Struct, Table",
          "Class Actor Component",
          "Interface"
        ],
        "Configure seu game (Iniciante).": [
          "Game Mode",
          "Player Controller, Inputs"
        ],
        "Assets na Unreal Engine (Iniciante).": [
          "Quixel Bridge",
          "Unreal Marketplace"
        ],
        "User Interface - Widgets (Iniciante).": [
          "Conhecendo Widgets e Criando nosso HUD",
          "Crie seu primeiro exercício na Unreal Engine."
        ]
      },
      "requirements": [
        "Confira abaixo as especificações listadas no site oficial:",
        "Operating System: Windows 10 64-bit version 1909 revision .1350 or higher, or versions 2004 and 20H2 revision .789 or higher.",
        "Processor: Quad-core Intel or AMD, 2.5 GHz or faster",
        "Memory: 8 GB RAM",
        "Graphics Card: DirectX 11 or 12 compatible graphics card",
        "RHI Version: DirectX 11: Latest driversDirectX 12: Latest driversVulkan: AMD (21.11.3+) and NVIDIA (496.76+)",
        "Apesar das especificações acima, a mesma postagem da empresa indica o seguinte sistema:",
        "Windows 10 64-bit (Version 20H2) 64 GB RAM 256 GB SSD (OS Drive) 2 TB SSD (Data Drive) NVIDIA GeForce RTX 2080 SUPER Xoreax Incredibuild (Dev Tools Package) Six-Core Xeon E5-2643 @ 3.4GHz",
        "Por exeperiência própria, o computador acima vai permitir que você sofra muito menos, mas se você tiver um computador cumprindo os requisitos abaixo você já consegue utilizar muito bem e sem problema algum. A diferença será que a sua pré-visualização de algumas cenas será feita em qualidade mais baixa. Esta configuração citada abaixo é minha própria e lista o que sei que é o mínimo por testes.",
        "Processador: Intel Core i7 de 8ª geração ou AMD Ryzen 7 de 3ª geração Memória RAM: 16 GB Armazenamento: SSD de pelo menos 250 GB Placa de vídeo: NVIDIA GeForce GTX 1060 ou AMD Radeon RX 580 com pelo menos 6 GB de memória de vídeo Sistema operacional: Windows 10 64-bit",
        "Processador: Intel XEON 2667 V4",
        "Placa de Vídeo: RX 5500 8GB, GTX 1050 4GB"
      ],
      "description": "No nosso curso abrangente de desenvolvimento de jogos na Unreal Engine, você mergulhará em um emocionante mundo de aprendizado, explorando desde os conceitos fundamentais até técnicas avançadas para criar seus próprios jogos incríveis. Ao longo deste curso, você dominará uma ampla variedade de habilidades essenciais, capacitando-se para trazer suas ideias mais ambiciosas à vida de forma cativante e imersiva.  Começando com os princípios básicos, você aprenderá a configurar inputs do jogador, criar enums para organizar constantes, e explorar o poderoso sistema de sequências de nível para animações e cinematics deslumbrantes. Em seguida, mergulharemos no mundo da física de materiais, onde você descobrirá como criar interações realistas entre os elementos do seu jogo.\n\n\nDando um salto para a parte visual, você aprenderá a importar e manipular malhas esqueléticas para personagens animados, bem como a desenvolver blueprints de animação para controlar seus movimentos de forma precisa e dinâmica. Além disso, exploraremos a criação de interfaces de usuário interativas, widgets personalizados e a importação de animações do Blender, adicionando uma camada extra de polimento aos seus projetos.\n\n\nMotion Matching:\nO sistema Motion Matching do Unreal Engine também contém um conjunto de configurações e ferramentas de depuração que você pode usar para ajustar seu sistema de animação para corresponder aos objetivos do seu projeto. Com essas ferramentas, você pode observar escolhas de seleção, editar o processo de consulta e definir pesos de critérios de seleção.\n\n\nPara criar um mundo vivo e repleto de desafios, você dominará a implementação de comportamentos de IA usando Behavior Trees e AI Controllers, além de aprender a modelar e editar terrenos expansivos e realistas para seus jogadores explorarem. Com a configuração de áreas navegáveis, seus personagens AI poderão se movimentar com facilidade pelo ambiente, proporcionando uma experiência de jogo ainda mais envolvente.\n\n\nNo departamento de programação, você será guiado através da lógica de programação em blueprint, criando espaços de transição entre animações suaves e eficientes, bem como desenvolvendo e utilizando interfaces de blueprint para comunicação eficaz entre objetos.  Além disso, exploraremos ferramentas essenciais de gerenciamento de projetos, como Notion, Trello e FigJam, para ajudá-lo a planejar e organizar seu processo de desenvolvimento de forma eficiente.  Com uma abordagem prática e orientada para projetos, este curso oferece a você a oportunidade de aplicar suas habilidades recém-adquiridas em projetos desafiadores e envolventes.\n\n\nAo final do curso, você estará equipado com o conhecimento e as habilidades necessárias para criar jogos completos e emocionantes na Unreal Engine, prontos para compartilhar com o mundo e iniciar sua jornada como desenvolvedor de jogos de sucesso. Venha se juntar a nós e comece a transformar suas ideias em realidade hoje mesmo!",
      "target_audience": [
        "No nosso curso abrangente de desenvolvimento de jogos na Unreal Engine, você mergulhará em um emocionante mundo de aprendizado, explorando desde os conceitos fundamentais até técnicas avançadas para criar seus próprios jogos incríveis. Ao longo deste curso, você dominará uma ampla variedade de habilidades essenciais, capacitando-se para trazer suas ideias mais ambiciosas à vida de forma cativante e imersiva. Começando com os princípios básicos, você aprenderá a configurar inputs do jogador, criar enums para organizar constantes, e explorar o poderoso sistema de sequências de nível para animações e cinematics deslumbrantes. Em seguida, mergulharemos no mundo da física de materiais, onde você descobrirá como criar interações realistas entre os elementos do seu jogo. Dando um salto para a parte visual, você aprenderá a importar e manipular malhas esqueléticas para personagens animados, bem como a desenvolver blueprints de animação para controlar seus movimentos de forma precisa e dinâmica. Além disso, exploraremos a criação de interfaces de usuário interativas, widgets personalizados e a importação de animações do Blender, adicionando uma camada extra de polimento aos seus projetos. Para criar um mundo vivo e repleto de desafios, você dominará a implementação de comportamentos de IA usando Behavior Trees e AI Controllers, além de aprender a modelar e editar terrenos expansivos e realistas para seus jogadores explorarem. Com a configuração de áreas navegáveis, seus personagens AI poderão se movimentar com facilidade pelo ambiente, proporcionando uma experiência de jogo ainda mais envolvente. No departamento de programação, você será guiado através da lógica de programação em blueprint, criando espaços de transição entre animações suaves e eficientes, bem como desenvolvendo e utilizando interfaces de blueprint para comunicação eficaz entre objetos. Além disso, exploraremos ferramentas essenciais de gerenciamento de projetos, como Notion, Trello e FigJam, para ajudá-lo a planejar e organizar seu processo de desenvolvimento de forma eficiente. Com uma abordagem prática e orientada para projetos, este curso oferece a você a oportunidade de aplicar suas habilidades recém-adquiridas em projetos desafiadores e envolventes. Ao final do curso, você estará equipado com o conhecimento e as habilidades necessárias para criar jogos completos e emocionantes na Unreal Engine, prontos para compartilhar com o mundo e iniciar sua jornada como desenvolvedor de jogos de sucesso. Venha se juntar a nós e comece a transformar suas ideias em realidade hoje mesmo!",
        "Desenvolvedores de jogos indie: Para desenvolvedores independentes que buscam criar jogos com recursos profissionais e de alta qualidade, este curso oferece insights valiosos sobre como aproveitar ao máximo a Unreal Engine para seus projetos.",
        "Programadores aspirantes: Para aspirantes a programadores que desejam aprender a linguagem de programação visual Blueprints da Unreal Engine, este curso oferece uma oportunidade prática para desenvolver suas habilidades de programação e lógica de forma intuitiva.",
        "Educadores e instrutores: Se você é um educador ou instrutor que deseja ensinar desenvolvimento de jogos na Unreal Engine, este curso pode servir como um recurso valioso para desenvolver materiais didáticos e planos de aula estruturados.",
        "Hobbistas e entusiastas de tecnologia: Se você é um hobbista ou entusiasta de tecnologia que sempre quis explorar o desenvolvimento de jogos como um hobby ou paixão, este curso fornece uma oportunidade emocionante para aprender e criar suas próprias experiências de jogo.",
        "Profissionais de TI em transição para o desenvolvimento de jogos: Para profissionais de TI interessados em mudar para a indústria de desenvolvimento de jogos, este curso oferece uma oportunidade de aprendizado estruturado para adquirir as habilidades necessárias para entrar nesse campo emocionante.",
        "Em resumo, este curso é projetado para qualquer pessoa com interesse em criar jogos na Unreal Engine, independentemente do nível de experiência. Se você está animado para aprender e pronto para mergulhar no mundo do desenvolvimento de jogos, este curso é para você."
      ]
    },
    {
      "title": "(Unity & C#) 2025 تعلم صنع الألعاب مع يونيتي وسي شارب",
      "url": "https://www.udemy.com/course/arabic-unity-tutorial/",
      "bio": "تعلم صناعة الألعاب على يونيتي بأسرع وقت",
      "objectives": [
        "ستتعلم إستخدام محرك يونيتي",
        "ستتعلم لغة البرمجة السي شارب",
        "ستتعلم تصميم مراحل بالتو دي والثري دي",
        "ستتعلم علاأنميشن",
        "ستتعلم الخصائص الفيزيائية للمجسمات على يونيتي",
        "ستتعلم معاني المصطلحات من الإنجليزي للعربي",
        "Post Processing",
        "Cinemachine",
        "٥٤ نصيحة عن مختلف المواضيع باليونيتي تشمل البرمجة الإضائة تحسين أداء اللعبة وغيره"
      ],
      "course_content": {
        "Introduction": [
          "المقدمة - Introduction",
          "تحميل برنامج اليونيتي - Installation",
          "شرح عن واجهة اليونيتي - Unity UI"
        ],
        "لغة البرمجة سي شارب - C#": [
          "متغير - Variables",
          "مقارنة - if statement",
          "مقارنة ٢ - Switch statement",
          "Functions",
          "Arrays - قائمة",
          "Loops - تكرار"
        ],
        "استخدامات أخرى للونيتي": [
          "ريجيد بودي الجزء الأول - Rigidbody Part 1",
          "ريجيد بودي الجزء االثاني - Rigidbody Part 2",
          "الدوران - Rotations & Quaternions",
          "نسخ المجسمات - Instantiate",
          "الأنميشن - Animations & Animators",
          "إدخال - Inputs",
          "Prefabs - جاهز"
        ],
        "لعبة Crazy Pong 2D": [
          "المقدمة - Introduction",
          "تصميم الليفل - Level Design",
          "حركة المضارب - Pads Movement",
          "حركة الكرة - Ball Movement",
          "حركة الكرة ٢ - Ball Movement Pt.2",
          "لوحة النقاط - Score Board",
          "القائمة الرئيسية - Main Menu",
          "إضافة الأصوات - Audio & Music",
          "أثر - Trail Renderer",
          "قائمة إعدادات - Settings Menu",
          "سرعة مع الوقت - Speed Over Time",
          "وقف اللعبة خلال اللعب - In-Game Pause Menu",
          "أصدر اللعبة على موقع إلكتروني - Build your game on WebGL"
        ],
        "لعبة Endless Runner 3D": [
          "المقدمة + تحضير السين",
          "حركة الاعب - Player Movement",
          "كاميرا سينماشين - Cinemachine",
          "فخ - Obstacles",
          "سبون للفخ - Spawn Obstacles",
          "القفز - Jump",
          "أنميشن تفادي الفخوخ - Dodge Animation",
          "صمم الأرض - Ground",
          "دمر الفخوخ - Destroy Obstacles",
          "موت الاعب - Player Death",
          "جمع نقاط - Player Score",
          "صوت الاعب - Player Audio",
          "أنميشن لليو أي - UI Animation",
          "Particle Effects",
          "Post Processing",
          "صيانة اللعبة - Maintenance",
          "itch.io إرفع لعبتك على",
          "كيف تطور مشروعك + موارد تعليمية"
        ],
        "نصائح عاليونيتي - Unity UI Tips & Tricks": [
          "Snapping Tool",
          "Playmode Tint",
          "Using Icons for EmptyObjects",
          "Search objects in Scenes",
          "Change Tabs & Fullscreen mode",
          "Using lock in tabs",
          "Three dots on the component",
          "Copy Changes from Playmode",
          "Using maths in variables",
          "Using EmptyObjects",
          "Use TextMeshPro",
          "Unity Layout Customization",
          "Colour Picker and Copy & Paste",
          "Mute Audio",
          "Use Presets to save values",
          "Use Step button for step by step frame",
          "Prefabs and Preview Window"
        ],
        "إختصارات اليونيتي - Unity Shortcuts": [
          "Use F",
          "Use ALT",
          "Use QWERTY",
          "Shortcut Menu",
          "Use ALT + Shift + A"
        ],
        "Camera Tips - نصائح الكاميرا": [
          "Camera Placement",
          "Calling a Camera from script"
        ],
        "Programming Tips - نصائح البرمجة": [
          "Using sliders for variables",
          "Showing private variables in the inspector",
          "Organising the script (public & private)",
          "Organising the scripts (small scripts instead of one big script)",
          "Gizmo",
          "Using Headers for variables",
          "Using tooltips for variables",
          "Using Debug.Log",
          "Use Destroy Function",
          "Use double TAB",
          "Use CompareTag",
          "Use ALT up or ALT down",
          "Use Debug Mode",
          "Add a script through Add Component"
        ],
        "Optimization - تحسين": [
          "Cache Variables",
          "Stats and Profiler",
          "Frame Debugger and Physics Debugger",
          "Log Entry"
        ]
      },
      "requirements": [
        "نسخة يونيتي (فري)",
        "Visual Studio",
        "لازم تعرف شوية إنجليش (في مصطلحات كثيرة)"
      ],
      "description": "اليونيتي بدأ ب2005 اليونيتي محرك ألعاب يستخدم لغة السيشارب لبناء ألعاب التودي والثريدي اليونيتي ببلاش وتستطيع ان تشتري نسخة البرو ليعطيك أدوات ومساعدات مباشرة من اليونيتي يعتبر من اشهر المحركات الألعاب بالعالم إحصائية تقول ان هنالك بليونين مستخدم و ١.٥ مليون مستخدم شهريآ أشهر إستخدامات اليونيتي هي صناعة ألعاب البيسي و ألعاب موبايل الأندرويد وإحصائية تقول ان كل شهر تصل كمية الداونلود لبليونين شهريآ اليونيتي يدعم منصات مثل بيسي أندرويد أي أو إس\nماك أو إس لينكس بي إس فور إكس بوكس وان ويب من أهم وأقوى خصائص اليونيتي انه يدعم الواقع الإفتراضي والواقع المعزز اليونيتي يسمحلك ان ترفع وتنشر وتربح من العابك يلي تصنعها بدون نسبة لحتى تتعدى المليون دولار ثم يونيتي يأخد منك نسبة بسيطة خمسة بالمئة من المبيعات اليونيتي يحتوي على شي اسمو أسيت ستور ويحتوي فيه كل احتياجات لصنع الألعاب من خرائط وأسيتس ومؤثرات صوتية وجرافيكس و بارتكل إيفيكتس و أدوات للمساعدة ببناء ألعابك اليونيتي يدعم صنع ألعاب الملتيبلاير وأشهر الألعاب مثل كابهيد فولجايز امونجأس ولعبة الطخطخة الستراتيجية إسكيب فروم تاركوف أنا سأكون المعلم في الدورة وفي الدورة ستتعلم التالي: كيف تستخدم لغة السيشارب لصنع الألعاب تستخدم أدوات في اليونيتي مثل الأنميشن والخصائص الفزيائي حتتعلم المصطلحات والمعاني من الإنجليزي للعربي حتتعلم كيف تصنع لعبة تودي ولعبة ثريدي بالكامل وكيف تنشرهم وكيف ممكن تربح منهم\nبالكورس ستجد ٥٤ نصيحة عن اليونيتي تشمل البرمجة الإضائة تحسين أداء اللعبة تصليح حالة صار معك كراش نصائح الكاميرا وغيره",
      "target_audience": [
        "لمبتدئين السي شارب",
        "لمبتدئين برمجة الألعاب"
      ]
    },
    {
      "title": "[初心者向け] Blender 2.8でアニメーションを作成して Unity で動かすまでの30分講座",
      "url": "https://www.udemy.com/course/studio_shimazu_blender0/",
      "bio": "4つのSTEPでボーンの配置からウェイトペイントによるアニメーションの修正まで一気に学習できるBlenderアニメーション入門",
      "objectives": [
        "Blenderでアニメーションを作成する方法",
        "BlenderのモデルをUnityに取り込む方法",
        "Unity内でモデルをアニメーションさせる方法"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "Unityにモデルを取り込んでアニメーションさせる": [
          "はじめに",
          "STPE1. 人型アーマチュアをモデルに組み込んで出力する",
          "STPE2. Unityにオリジナルモデルを取り込んでアニメーションさせる",
          "Unityでアニメーションを行うための確認テスト"
        ],
        "Blenderでアニメーションを作成する": [
          "はじめに",
          "STPE3. モデルにボーンを入れて動かす",
          "STPE4. アニメーションのバグ修正を行う（ウェイトペイント）",
          "Blenderでアニメーションを作成するための確認テスト"
        ],
        "まとめ": [
          "ボーナスレクチャー（Q&A）"
        ]
      },
      "requirements": [
        "Blenderをインストールしている",
        "Unity（Unity Hub）をインストールしている"
      ],
      "description": "このコースは、Blenderという3DCGソフトで作成したモデルをUnityで動かすための一点集中型講座です。\n\n\n対象となる方は\n・作成したモデルをUnityで動かしてゲーム開発への第一歩にしたいBlender使いの方\n・オリジナルのモデルをUnityに取り込んで自分のゲームの自由度を高めたいUnity使いの方\nです。\n具体的なコース構成は\nSTEP1：モデルに既存の人型の骨を入れて出力する\nSTEP2：人型モデルをUnityに取り込んで既存のアニメーションで動かす\nSTEP3：モデルにオリジナルの骨を入れてオリジナルのアニメーションでUnityで動かす\nSTEP4：アニメーションの際に発生するバグを修正する\n（注意：Blenderによるモデリングは行なっていません。モデルがない方のために講座と同じモデルはダウンロードできます。）\n\n\nこのコースはBlenderとUnityを簡単につなぎ合わせる講座です。ぜひBlenderとUnityを使ってよりオリジナリティの高いゲーム制作を世界に発信していきましょう！",
      "target_audience": [
        "Blenderでモデルは作れるけどUnityで動かす方法がわからない方",
        "Unityでモデルは動かせるけどBlenderでモデルを作ったりアニメーションを作る方法がわからない方"
      ]
    },
    {
      "title": "Aprenda Game Design para Planejar e Criar Seus Jogos!",
      "url": "https://www.udemy.com/course/imersao-completa-em-game-design/",
      "bio": "Um curso além da Programação: Aprenda a transformar suas ideias em jogos com técnicas e boas práticas de Game Design.",
      "objectives": [
        "Conceitos de Game Design para construção de Jogos",
        "Dicas e Boas práticas para Desenvolver ideias de Jogos",
        "Orientações e escrita do GDD",
        "Dicas para construção de Histórias, Narrativas e Mecânicas.",
        "Técnicas de Prototipagem",
        "Como organizar cada etapa na Construção do Jogo",
        "Principais Game engines e Ferramentas"
      ],
      "course_content": {
        "Introdução": [
          "Game Start: A Jornada Começa Aqui!",
          "Links que vão potencializar seu aprendizado ⚡?"
        ],
        "Entendendo o Mercado de Games": [
          "História dos Videogames para Desenvolvedores - Parte 01",
          "História dos Videogames para Desenvolvedores - Parte 02",
          "Cenário da Indústria Brasileira de Jogos",
          "Começando de Forma Correta (Alinhamento Mental)",
          "Categorias de Jogos",
          "Perfis de Público",
          "Como Monetizar seus Jogos",
          "Distribuição de Jogos",
          "Ferramentas de Desenvolvimento",
          "Assuntos Complementares",
          "Material Complementar: Escolhendo uma Game Engine",
          "Material Complementar: Do Zero ao Jogo Publicado"
        ],
        "Game Design: Transformando Suas Ideias em Projetos Reais": [
          "O que é Game Design?",
          "O Profissional Game Designer",
          "Estrutura e Funções em um Estúdio de Games",
          "Abordagens sobre Game Design",
          "Os pilares na Construção de um Jogo",
          "Bagagem de Ideias",
          "História e Narrativa",
          "Mecânicas e Gameplay",
          "Gameflow e Teoria do Fluxo",
          "Protótipos e Documentação",
          "Exemplo de Protótipo Digital",
          "Power Up: IA como Ferramenta de Game Design ?"
        ],
        "Atividades Práticas": [
          "Colocando em prática",
          "Brainstorming - Técnicas para construção de jogos",
          "Brainstorming - Conhecendo o Padlet",
          "Brainstorming - Exemplo de como usar o Padlet para criar um Brainstorming",
          "Idealizando meu primeiro jogo",
          "Game Design Document (GDD)",
          "Criando o Fluxo de Telas de um Jogo",
          "Criando Fluxo de Fases de um Jogo",
          "Documentando meu jogo (GDD)",
          "Publicando meu jogo"
        ],
        "Controle de Desenvolvimento": [
          "Versões na Produção de um Jogo",
          "Etapas na Produção de um Jogo",
          "Agradecimentos: Game Design"
        ],
        "Bônus: Conhecendo alguns motores de jogo": [
          "Conhecendo as Engines de desenvolvimento",
          "Testando a GDevelop",
          "Testando a Construct",
          "Testando a Unity"
        ],
        "Construct: Construindo um jogo estilo plataforma (Duck Game)": [
          "Construindo o menu - 1 parte",
          "Construindo o menu - 2 parte",
          "Programando o player",
          "Construindo a primeira fase",
          "Programando a porta e a chave",
          "Construindo novas fases",
          "Programando a mecânica de dano",
          "Construindo as fases finais",
          "Exportando o jogo"
        ],
        "Extra: GDevelop - Game Engine": [
          "Como instalar a GDevelop (Nova Interface)",
          "Instalação da GDevelop",
          "Gerenciamento de contas",
          "Conhecendo a Interface da GDevelop"
        ],
        "Extra: GDevelop - Estórias Interativas": [
          "Criando o projeto",
          "Programando as cenas",
          "Criando as cenas intermediárias",
          "Finalizando nosso projeto",
          "Exportando o projeto para web, mobile e desktop"
        ],
        "Jogo da adivinhação": [
          "Apresentação",
          "Construindo o projeto",
          "Implementando a cena main",
          "Programando a adivinhação",
          "Implementando a dica",
          "Programando o Game Over",
          "Publicando o jogo"
        ]
      },
      "requirements": [
        "Noções de Informática"
      ],
      "description": "Se você quer subir de nível e aprender a criar jogos interessantes com chances reais de se destacar, este treinamento é pra você. Um curso diferente de tudo que você já viu!\nNele não vamos abordar somente o desenvolvimento de jogos com game engines ou linguagens de programação, mas sim o essencial que é deixado de lado na maioria das vezes: O Game Design.\n\nMas o que é Game Design?\nGame Design é um conjunto de habilidades para o planejamento e produção de jogos, sem ele é como conduzir o projeto no piloto automático, logo são habilidades que podem aumentar consideravelmente as chances de criar um jogo interessante, independente de sua escala, seja um jogo indie ou um grande projeto comercial.\n\nDa teoria a prática, veja o que você irá aprender:\n\nAulas completas sobre Game Design para o planejamento dos seus Jogos.\nAulas sobre as etapas e processos na criação de um game.\nAulas dinâmicas e interativas com informações e dicas para a produção do jogo!\nDicas e técnicas para construção de Histórias, Narrativas e Mecânicas.\nAulas práticas com exemplos e uso de ferramentas\nComo escrever o Documento de Design do seu jogo\nCriação de um jogo Completo usando o GameMaker Studio 2\n\n\nAlém de tudo isso, você ainda vai receber um modelo exclusivo de GDD para planejar o seu jogo completo com exercícios práticos para desenvolver suas percepções como game designer.\nVamos nessa? Se inscreva e vamos criar jogos incríveis!",
      "target_audience": [
        "Estudantes de Jogos Digitais",
        "Desenvolvedores de Jogos",
        "Futuros Game Designers",
        "Interessados em Criar Jogos"
      ]
    },
    {
      "title": "Creiamo uno sparatutto in 3D [Unity da Zero]",
      "url": "https://www.udemy.com/course/unity-da-zero-creiamo-uno-sparatutto-3d/",
      "bio": "Creiamo un videogioco 3D con Unity e impariamo a programmare in C# partendo da zero!",
      "objectives": [
        "Comincia la professione di Creatore di Videogiochi nel modo più semplice ed efficace!",
        "Realizza il tuo primo videogioco completo in 3D",
        "Impara le basi di programmazione con C#",
        "Esplora le principali funzionalità di Unity"
      ],
      "course_content": {
        "Introduzione": [
          "Presentazione del gioco",
          "Installare Unity e Visual Studio"
        ],
        "Le basi di Unity": [
          "Introduzione: le basi di Unity",
          "L’interfaccia di Unity",
          "La finestra Scene",
          "La finestra Game",
          "La finestra Project",
          "Il GameObject",
          "La finestra Inspector",
          "Creiamo un materiale"
        ],
        "Preparazione della scena": [
          "Introduzione: preparazione della scena",
          "Creiamo la struttura della cantina",
          "I materiali dei muri",
          "Creiamo una stanza",
          "Completiamo il labirinto"
        ],
        "Il carro armato e i nemici": [
          "Introduzione: il carro armato e i nemici",
          "Creiamo il carro armato",
          "Creiamo i nemici"
        ],
        "Le leggi della fisica": [
          "Introduzione: le leggi della fisica",
          "La fisica in Unity",
          "Il tank col RigidBody"
        ],
        "Muoviamo il tank": [
          "Introduzione: muoviamo il tank",
          "Lo script Movimento",
          "Il movimento del tank",
          "L'input da tastiera",
          "La durata dei frame",
          "Miglioriamo l'input"
        ],
        "Inserimento dei nemici": [
          "Introduzione: inserimento dei nemici",
          "Prepariamo i nemici",
          "Il navmesh",
          "Codice per rendere intelligenti i nemici",
          "Caccia al tank!"
        ],
        "Le collisioni": [
          "Introduzione: le collisioni",
          "Cosa sono le collisioni",
          "Lo script GameManager",
          "Energia per sopravvivere"
        ],
        "Spariamo il sapone!": [
          "Introduzione: spariamo il sapone",
          "Posizioniamo la camera",
          "Prepariamo il sapone",
          "Instanziamo un oggetto",
          "Gli array"
        ],
        "Le animazioni": [
          "Introduzione: le animazioni",
          "Le animazioni del nemico",
          "L'animator",
          "Creiamo un'animazione"
        ]
      },
      "requirements": [
        "Nessun prerequisito particolare",
        "Non hai bisogno di conoscere linguaggi di programmazione, imparerai tutto quello che ti serve durante le lezioni!",
        "Se hai un computer, PC o Mac, puoi cominciare subito il corso"
      ],
      "description": "**Alcuni estratti dalle recensioni degli studenti di questo corso**\n\"Bellissimo corso e spiegato in maniera chiara. Consigliato\" (Gabriele)\n\"mi sto appassionando alle lezioni e riesco a tenere il passo cosa che non mi è successo per altri corsi, dove ho abbandonato alle prime difficoltà\" (Ciro)\n\"L'insegnante è molto professionale, preparato ma soprattutto direi appassionato\" (Lorenzo)\n\n\nHai mai sognato di creare il tuo videogame in 3D? Questo corso di Unity è la risposta che stai cercando! Rivolto a tutti quelli che desiderano diventare sviluppatori di videogiochi, questo corso ti guiderà passo dopo passo nella creazione del tuo primo gioco tridimensionale. Non preoccuparti se non hai esperienza nella programmazione: nessuna conoscenza precedente è richiesta per iscriversi!\n\n\nUn Corso Pratico ed Innovativo\nIl corso è stato sviluppato con un approccio pratico e coinvolgente, che ti permetterà di imparare le basi della programmazione e del design di videogiochi in maniera divertente e intuitiva. Sarai seguito passo dopo passo e avrai l'opportunità di mettere subito in pratica le nozioni apprese, dando vita al tuo gioco 3D fin dalle prime lezioni.\nIl gioco vede come protagonista uno stagista in un’azienda, con un capo piuttosto esigente. La missione dello stagista è ripulire la cantina dell’azienda dallo sporco, e per farlo ha in dotazione un carro armato che usa il sapone come arma.\nScopo del gioco è distruggere tutti i nemici e prendere le 3 chiavi per aprire la porta di uscita. Una volta uscito dalla cantina il gioco termina. I nemici sono immobili finora quando il giocatore entra in un certo raggio di azione: a quel punto si attivano per ucciderlo. Non sparano, ma feriscono quando entrano in contatto con il giocatore portando via energia, e nel farlo si autodistruggono.\nIl nostro stagista dovrà procurarsi il sapone, scappare dai nemici, stare attento a non terminare l’energia altrimenti morirà. Potrà recuperare energia trovando delle pile per ricaricarsi.\n\n\nUna Piattaforma Potente e Versatile\nUnity è uno dei motori grafici più utilizzati nel mondo dei videogiochi, grazie alla sua potenza e versatilità. Con questo corso, potrai sfruttare al meglio tutte le sue funzionalità, imparando a creare ambientazioni tridimensionali, personaggi, oggetti interattivi e molto altro ancora. Inoltre, Unity è compatibile con una vasta gamma di piattaforme, come PC, console e dispositivi mobile, permettendoti di esportare il tuo gioco su diversi sistemi.\nCompletando il corso avrete una conoscenza di base di tutti i processi per realizzare in autonomia un gioco 3D in Unity, perché imparerete a muovere i personaggi, a creare animazioni, a interagire con gli oggetti, a gestire un’interfaccia utente.\n\n\nUn Trampolino di Lancio per la Tua Carriera\nSeguendo il nostro corso di Unity, non solo realizzerai il tuo primo gioco in 3D, ma acquisirai anche competenze preziose per il tuo futuro professionale. Il settore dei videogiochi è in continua espansione e offre numerose opportunità di carriera. Che tu voglia lavorare come programmatore, game designer o in altri ruoli creativi, il nostro corso rappresenta un ottimo punto di partenza per intraprendere il tuo percorso nel mondo dei videogiochi. Iscriviti ora e comincia la tua avventura!",
      "target_audience": [
        "Appassionati di videogiochi che vogliono realizzare il loro primo gioco",
        "Giovani imprenditori che vedono nello sviluppo di videogiochi una forma di reddito"
      ]
    },
    {
      "title": "【한글자막】 언리얼 C++ 멀티플레이어 마스터 : 중급 게임 개발",
      "url": "https://www.udemy.com/course/best-unreal-c/",
      "bio": "로컬&멀티플레이어 게임을 만드는 강의로 C++에 대한 지식이 있는 언리얼 초중급 대상 강의, 네트워크 레이턴시 기본부터 상태 동기화까지 포함 되어 있으며, 대규모 게임을 다루지는 않지만 MMO 구축 방법 제공",
      "objectives": [
        "언리얼 엔진과 C++ 및 블루프린트를 사용하여 자신만의 로컬 & 온라인 멀티플레이어 게임 만들어보세요.",
        "자신의 게임에 적용할 수 있는 기본적인 멀티플레이어 이론과 개념을 학습하세요.",
        "Steam API를 사용하여 온라인에서 친구들과 함께 게임을 플레이하세요.",
        "언리얼 모션 그래픽 UI 디자이너를 사용하여 유저 인터페이스를 만들어보세요.",
        "근거리 통신망(LAN)을 사용하여 게임을 만들어보세요.",
        "서버와 컴퓨터 네트워크가 연결되는 방식에 대한 이해를 획득하세요.",
        "언리얼이 상태를 복제하는 방법과 이것이 멀티플레이어 게임에 중요한 이유를 이해해봅시다."
      ],
      "course_content": {
        "퍼즐 플랫폼 - 플레이어 연결하기": [
          "교육 과정 소개",
          "퍼즐 플랫폼 소개",
          "두 플레이어 연결하기",
          "활동적인 수강생이 되는 법",
          "멀티플레이어 공간 측량하기",
          "클라이언트-서버 모델",
          "스포닝하지 않기 위한 팁",
          "코드 실행 위치 감지하기",
          "섹션 중간 퀴즈",
          "권한 및 복제",
          "FVector 프로퍼티용 위젯",
          "플랫폼 왕복시키기",
          "간단한 퍼즐 설정하기",
          "인터넷으로 플레이하기",
          "플랫폼 트리거 설정하기",
          "섹션 중간 퀴즈",
          "C++로 오버랩 이벤트 처리하기",
          "트리거에서 플랫폼 활성화",
          "GameInstance를 사용할 때",
          "Exec을 사용한 콘솔 명령",
          "ServerTravel로 서버 호스팅하기",
          "ClientTravel로 서버에 조인하기",
          "Itch.io에서 게임 공유하기",
          "퍼즐 플랫폼 요약",
          "섹션 마무리 퀴즈",
          "언리얼 엔진 4 (UE4) 네트워크 개요"
        ],
        "메뉴 시스템 - 게임 UI 다듬기": [
          "메뉴 시스템 소개",
          "메뉴 블루프린트 생성하기",
          "C++에서 UI 클래스 액세스하기",
          "C++에서 언리얼 모션 그래픽(UMG) 로드 및 표시하기",
          "잠재적인 오류 메시지",
          "UI 입력 모드 변경하기",
          "고급 언리얼 모션 그래픽(UMG) 위젯 레이아웃",
          "섹션 중간 퀴즈",
          "커스텀 버튼 및 폰트",
          "솔루션: 커스텀 버튼 및 폰트",
          "언리얼 모션 그래픽(UMG)을 C++에 연결하기",
          "이니셜라이저 및 UButton 콜백",
          "종속성을 반전시키는 인터페이스",
          "솔루션: 종속성 주입",
          "섹션 중간 퀴즈",
          "메뉴 비활성화하기",
          "위젯 스위처를 지닌 서브 메뉴",
          "솔루션: 서브 메뉴 스타일 지정하기",
          "C++에서 메뉴 탐색하기",
          "C++에서 텍스트 필드 읽기",
          "도전: 인-게임 메뉴 불러오기",
          "도전: 서버에서 나가기",
          "C++에서 게임 종료하기",
          "섹션 마무리 퀴즈",
          "메뉴 시스템 마무리"
        ],
        "온라인 멀티플레이어": [
          "Steam 멀티플레이어 소개",
          "Steamworks SDK 다운받기",
          "SpaceWar 빌드 오류",
          "Visual Studio에서 SpaceWar 빌드하기",
          "Xcode에서 SpaceWar 빌드하기",
          "Steam 로비 테스트하기",
          "온라인 서브 시스템",
          "테스트용 NULL 서브 시스템",
          "C++의 메모리 관리",
          "섹션 중간 퀴즈",
          "온라인 세션 생성하기",
          "온라인 세션 제거하기",
          "온라인 세션 찾기",
          "Query Parameters & 세션 세팅",
          "ScrollBox 위젯 리스트",
          "서버 리스트 채우기",
          "섹션 중간 퀴즈",
          "서버 선택하기",
          "세션에 조인하기",
          "Steam OSS 활성화하기",
          "패키지 빌드에서 Steam 활성화하기",
          "Steam 로비의 \"Presence\"",
          "섹션 중간 퀴즈",
          "리스트에서 Row 선택하기",
          "SearchResult 프로퍼티 디스플레이",
          "SearchResult 디버깅",
          "커스텀 세션 세팅",
          "커스텀 세션 세팅 (계속)",
          "섹션 중간 퀴즈",
          "게임 모드 및 멀티플레이어",
          "Seamless Travel 활성화하기",
          "엔진 코드 디버깅하기",
          "Steam OSS의 버그",
          "세션 시작하기",
          "네트워크 오류 처리하기",
          "섹션 마무리 퀴즈",
          "Steam 멀티플레이어 요약"
        ],
        "크레이지 카트(Krazy Karts) - 상태 동기화 및 보간": [
          "크레이지 카트 소개",
          "고카트 폰(Pawn) 만들기",
          "힘과 운동 이해하기",
          "물리학 없이 움직임 막기",
          "쿼터니언(Quaternions)을 사용한 회전",
          "공기 저항 시뮬레이션",
          "섹션 중간 퀴즈",
          "구르기 저항 시뮬레이션",
          "스티어링 및 터닝 서클",
          "서버 함수 및 치트 방지",
          "AutonomousProxy 대 SimulatedProxy",
          "시뮬레이션 오류의 원인",
          "섹션 중간 퀴즈",
          "서버에서 변수 복제하기",
          "복제시 코드 트리거",
          "부드러운 SimulatedProxy",
          "지연 및 패킷 손실 시뮬레이션",
          "자율 동작 재생",
          "섹션 중간 퀴즈",
          "클라이언트 측 예측 계획하기",
          "구조체 복제하기",
          "이동 시뮬레이션",
          "승인되지 않은 이동 대기열",
          "서버 타임 대 로컬 타임",
          "승인되지 않은 동작 시뮬레이션",
          "SimulatedProxy 예측 수정하기",
          "섹션 중간 퀴즈",
          "컴포넌트로 리팩토링하기",
          "무브먼트 컴포넌트 추출",
          "레플리케이션 컴포넌트 추출",
          "이동 및 복제 분리하기",
          "섹션 중간 퀴즈",
          "위치에 대한 선형 보간",
          "클라이언트 보간을 위한 FMath::Lerp",
          "회전을 위한 FQuat::Slerp",
          "허밋 3차 스플라인 보간",
          "속도를 위한 FMath::CubicInterp",
          "섹션 중간 퀴즈",
          "구조체로 리팩토링하기",
          "클라이언트 보간 메시 오프셋",
          "고급 치트 방지",
          "섹션 중간 퀴즈",
          "교육과정 마무리"
        ],
        "게임 개발 여정 계속하기": [
          "Q&A 게시판 안내"
        ]
      },
      "requirements": [
        "클래스와 포인터를 포함한 C++기본 지식이 필요합니다.",
        "폰(Pawn), 맵과 같은 언리얼의 기초 개념에 대한 이해가 필요합니다.",
        "간단한 동작(Behavior)을 프로그래밍 하기 위해 블루프린트를 생성하는데 익숙해야 합니다."
      ],
      "description": "C++로 만드는 로컬&멀티플레이어 게임!\n언리얼 초급부터 중급까지 쉽게 이해할 수 있는 강의!\n네트워크, 멀티플레어이어 게임에 대한 지식이 없어도 모든걸 알려 드립니다!\n3D 엔진인 언리얼에 도전해보세요!\n\n\n언리얼 C++ 멀티플레이어 마스터 강의를 선택해야 하는 이유\n에픽 게임즈와 협업으로 제작된, 이 교육 과정에서는 세계적인 수준의 언리얼 엔진을 사용하여, 에픽 멀티플레이어 경험을 만드는 방법을 보여줍니다. 이 과정은 즉시 다른 학생들과 함께 자신만의 멀티플레이어 게임을 플레이할 수 있게 해줍니다.\n많은 AAA 게임(Fortnite 포함)의 3D 엔진인 언리얼은 멀티플레이어 게임을 매우 빠르게 제작할 수 있는 도구로 가득합니다. 하지만 언리얼 엔진을 어디서 부터 시작해야 할지 엄두가 안날 겁니다.\n방대한 기능 세트와 적은 문서로는 어디서부터 시작해야 할지 막막하신가요. 여러분은 이 교육 과정을 통해 언리얼을 아주 쉽게 이해할 수 있을 겁니다. 엔진 사용 방법을 보여줄 뿐만 아니라, 기본 개념을 알려 드립니다. 이러한 기술을 통해 여러분은 새로운 기능을 직접 고를 수 있게 됩니다.\n이 과정은 C++에 대한 지식이 있는 언리얼 초중급 사용자를 대상으로 합니다. 자신감이 없다구요? 걱정하지 마세요. 이 과정은 모든 것을 단계별로 안내하고, 코딩에 대한 자신감을 키우기 위해 충분한 연습을 제공합니다.\n네트워킹이나 멀티플레이어 게임에 대한 지식이 있다고 가정하지 않습니다. 네트워크 레이턴시의 기본부터 상태 동기화의 고급 주제에 이르기까지 네트워크에 대해 알아야 할 모든 것을 알려드립니다..\n이 교육 과정에서는 대규모 멀티플레이어 게임을 만드는 방법을 배우진 않습니다. 그러나 MMO를 구축하는 방법을 이해하는데 필요한 기본 사항을 알려드립니다.\n\n\n언리얼 C++ 멀티플레이어 마스터 강의는 이런 것들을 다룹니다\n언리얼 엔진과 C++ 및 블루프린트를 사용하여 자신만의 로컬 & 온라인 멀티플레이어 게임 만들기\n자신의 게임에 적용할 수 있는 기본적인 멀티플레이어 이론과 개념을 학습\nSteam API를 사용하여 온라인에서 친구들과 함께 게임 플레이\n언리얼 모션 그래픽 UI 디자이너를 사용하여 유저 인터페이스 만들기\n근거리 통신망(LAN)을 사용하여 게임을 만들기\n서버와 컴퓨터 네트워크가 연결되는 방식에 대한 이해\n언리얼이 상태를 복제하는 방법과 이것이 멀티플레이어 게임에 중요한 이유 이해\n\n\nBen Tristem 강사의 한마디!\n이 교육 과정을 수강하시는 분께 옵션으로, 게임 및 3D 모델을 공유하고, 다른 학생들과 교류할 수 있는 무료 커뮤니티 사이트가 함께 제공됩니다.\n\n\n강의를 들으시고 강의와 관련하여 궁금하신 점은 무엇이든 Q&A에 남기실 수 있지만, 꼭 영어로 남겨주세요. 그래야 답변을 드릴 수 있습니다. :)\n\n\n지금 멀티플레이어 마스터가 되어 보세요. 실망하지 않을 겁니다!\n\n\n강의에서 만나요!",
      "target_audience": [
        "초급에서 중급 프로그래머.",
        "C++ 실력을 향상시키고 싶으신 분.",
        "멀티플레이어 게임을 만들고자 하는 언리얼 유저."
      ]
    },
    {
      "title": "Desarrolla Juegos en Diferentes Lenguajes con Mucha Practica",
      "url": "https://www.udemy.com/course/desarrolla-juegos-en-diferentes-lenguajes-con-mucha-practica/",
      "bio": "Practica con Proyectos reales de Video Juegos con Python, HTML, CSS y JS. Aprende con Pura Practica para tu Portafolio.",
      "objectives": [
        "Desarrollo de video juegos con lenguajes de programacion",
        "Proyectos y practicas",
        "Desarrollo en video juegos con JS",
        "Desarrollo en video juegos con HTML CSS",
        "Desarrollo en videojuegos con Python",
        "Desarrollo de videojuegos usando libreria Pygame"
      ],
      "course_content": {
        "Sobre el curso": [
          "Recomendaciones para una mejor experiencia en el curso",
          "Recuerda que cuentas con nuestro asesoramiento y respuestas a tus preguntas"
        ],
        "Instalación de Herramientas": [
          "Instalar Visual Studio Code en Windows",
          "Instalar Visual Studio Code en Linux",
          "Recorrido por Visual Studio Code",
          "Instalar Python",
          "Instalar Extensiones en Visual Studio Code",
          "Instalar Git en Windows",
          "Instalar Git en Linux",
          "Comandos Básicos de Consola"
        ],
        "Manejo de Librería Turtle": [
          "¿Qué es Turtle?",
          "Comandos Básicos",
          "Movimiento de Turtle en el Lienzo",
          "Comandos Especiales",
          "Personalizar Turtle",
          "Otros Atributos",
          "Automatizar Procesos"
        ],
        "Videojuego Básico: Carrera de Tortugas": [
          "Descripción del Proyecto",
          "Creando Jugadores",
          "Dibujando las Metas",
          "Personalizando Juego",
          "Pos()",
          "Implementando Método Pos()",
          "Fin del Proyecto"
        ],
        "Videojuego Intermedio: Snake": [
          "Descripción del Proyecto",
          "Creando la Serpiente y la Pantalla",
          "Movimientos de la Serpiente",
          "Mover la Serpiente con el Teclado",
          "Creando la Comida",
          "Alargar el Cuerpo de la Serpiente",
          "Alargar el Cuerpo de la Serpiente (Parte 2)",
          "Colisiones con Bordes y Cuerpo",
          "Marcador de Puntaje"
        ],
        "Videojuego Intermedio: Nave espacial": [
          "Empezemos con las dimensiones de la ventana",
          "Dando fondo y controlando FPS",
          "Añadiendo personaje al videojuego",
          "Añadiendo movimientos al personaje",
          "Limitando bordes de ventana",
          "Añadiendo enemigos al juego",
          "Aparicion aleatoria de enemigos",
          "Movimiento de enemigos",
          "Movimientos randoms del enemigo y fisicas de aceleracion",
          "Limitando bordes de movimiento para enemigos",
          "Añadiendo disparos al videojuego",
          "Muestra de disparos y asignarlos al jugador",
          "Colisiones de disparos y enemigos",
          "Mostrando texto en pantalla",
          "Añadiendo sonidos a nuestro videojuego",
          "Finalizando el proyecto"
        ],
        "Proyecto Avanzado: Juego de Shooter": [
          "Inicio del proyecto",
          "Estableciendo dimensiones de nuestra ventana",
          "Creando el Sprite enemigo",
          "Velocidad y limitantes del enemigo",
          "Creacion del jugador",
          "Movimiento y Limitante del jugador",
          "Añadiendo disparos",
          "Mostrasntdo disparos en pantallas",
          "Mostrando puntaje",
          "Fin de proyecto"
        ],
        "Proyecto Avanzado: Ahorcado": [
          "Iniciando videojuego",
          "Comenzemos con el script",
          "Iniciando evento de inicio de veideojuego",
          "Iniciando funcion para iniciar videojuego",
          "Detectamos eventos del usuario",
          "Creamos las funciones de fin de juego y evaluamos las palabras",
          "Finalizamos proyecto"
        ],
        "Uso de Git para Gestionar los Proyectos": [
          "Realidad del Desarrollo de Software",
          "Expectativa del Desarrollo de Software",
          "¿Qué es un Sistema de Control de Versiones?",
          "¿Qué es Git?",
          "Consideraciones Importantes de Git",
          "Comandos Básicos de Git",
          "Configuraciones Globales Importantes",
          "Git Init",
          "Working Directory, Staging Area y Repository",
          "¿En qué momento hacer Commit?",
          "Git Log",
          "Git Reset"
        ],
        "Crear tu Portafolio de Proyectos en Github": [
          "¿Qué es un Sistema de Control de Versiones Distribuido?",
          "¿Qué es GitHub?",
          "Crear el Repositorio Local para Subirlo",
          "Sobre tu Cuenta en GitHub y Creación de Cuenta",
          "Detalles Importantes de GitHub y Creación de Repositorios Remotos",
          "Git Fetch, Git Push y Git Pull",
          "Commits desde GitHub",
          "Cambios en GitHub"
        ]
      },
      "requirements": [
        "Solo PC e internet"
      ],
      "description": "En la profesión de programador, la practica es clave, de hecho lo primero que se aconseja es tener proyectos en tu portafolio para encontrar empleo en este rubro.\nSumado a esto, si tu pasión son los video juegos, creamos esta formación profesional para que tus conocimientos los materialices en proyectos reales y en este caso, sobre juegos que crearemos con distintos lenguajes de programación, cuales?\n- Javascript\n- HTML y CSS\nDe esta manera podrás iniciar en este mundo sin una curva de aprendizaje muy pronunciada, es decir, que en un corto plazo estarás desarrollando video juegos en estos lenguajes.\nYo soy Álvaro Chirou, tengo más de 20 Años de experiencia trabajando en Tecnología, eh dado disertaciones en eventos internacionales como OWASP, tengo más de 500.000 estudiantes en Udemy y 100 formaciones profesionales impartidas en la misma.\nY junto a mi compañero Walter Coto donde con él hemos dado formaciones profesionales en conjunto también en la plataforma de Udemy, que tiene más de 350.000 estudiantes.\nTambién con Kevin Garcia, con 50.000 Estudiantes en Udemy hoy les traemos esta oportunidad de que lleves a la practica tus conocimientos en Programación para que puedas agregarlo a tu Portafolio y asi, aumentar tus probabilidades de conseguir el empleo que buscas.\nTendrás acceso de por vida al curso, recibirás actualizaciones y respuestas a tus preguntas a través de la plataforma de Udemy.\nEmpieza a aprender ya mismo!\nNos vemos dentro!\nTus profesores: Álvaro Chirou, Walter Coto y Kevin García",
      "target_audience": [
        "toda persona que desee aprender"
      ]
    },
    {
      "title": "Unity: crea un gioco 3D per Android e iOS con monetizzazione",
      "url": "https://www.udemy.com/course/unity-crea-un-gioco-3d-per-android-e-ios-con-monetizzazione/",
      "bio": "Crea e pubblica un gioco 3D con Unity per Android e iOS con annunci interstitial, banner e rewarded video Unity e AdMob",
      "objectives": [
        "Creare un gioco 3D con Unity",
        "Inserire annunci di Unity per monetizzare il gioco",
        "Pubblicare il gioco nel Play Store di Google",
        "Aggiungere annunci di AdMob per monetizzare il gioco",
        "Creare una build del gioco per iOS (iPhone - iPad)"
      ],
      "course_content": {
        "Installazione e Preparazione": [
          "Presentazione del Corso",
          "Presentazione della Sezione",
          "Installazione Unity con Hub",
          "Creazione Progetto e Prima Ambientazione in Unity - Parte 1",
          "Creazione Progetto e Prima Ambientazione in Unity - Parte 2",
          "Prime impostazioni del progetto",
          "Altre impostazioni preliminari"
        ],
        "Creazione del Gioco 3D": [
          "Facciamo muovere la palla",
          "Aggiungiamo movimento destra sinistra - Parte 1",
          "Aggiungiamo movimento destra sinistra - Parte 2",
          "Aggiungiamo i comandi per lo smartphone - Parte 1",
          "Aggiungiamo i comandi per lo smartphone - Parte 2",
          "Introduzione alla prossima lezione",
          "Testiamo il gioco in uno smartphone Android",
          "Facciamo seguire la palla alla telecamera - Parte 1",
          "Facciamo seguire la palla alla telecamera - Parte 2",
          "Creiamo gli ostacoli - Parte 1",
          "Creiamo gli ostacoli - Parte 2",
          "Creiamo il primo gruppo di ostacoli",
          "Creiamo altri gruppi di ostacoli",
          "Creiamo lo script per lo score",
          "Facciamo apparire il punteggio sullo schermo",
          "Facciamo lo spawning degli ostacoli - Parte 1",
          "Facciamo lo spawning degli ostacoli - Parte 2",
          "Rendiamo lo spawning random e miglioriamo l'inizio",
          "Creiamo la piattaforma definitiva",
          "Rendiamo il mondo curvo!",
          "Ripetiamo la piattaforma all'infinito",
          "Mettiamo una Skybox",
          "Distruggiamo i gruppi di ostacoli",
          "Aggiungiamo la musica al gioco",
          "Aggiungiamo gli effetti audio",
          "Creiamo il pulsante per l'audio",
          "Implementiamo le funzionalità del pulsante audio",
          "Creiamo il pulsante per mettere in pausa il gioco - Parte 1",
          "Creiamo il pulsante per mettere in pausa il gioco - Parte 2",
          "Creiamo il pannello della pausa - Parte 1",
          "Creiamo il pannello della pausa - Parte 2",
          "Creiamo un'animazione per il PausePanel",
          "Creiamo lo Start Panel",
          "Creiamo l'animazione per rimuovere lo StartPanel",
          "Nascondo i pulsanti e lo scoreText",
          "Creiamo il GameOverPanel",
          "Blocchiamo il gioco quando si va in game over",
          "Miglioriamo il pannello Game Over",
          "Creiamo il sistema per registrare e mostrare l'high score"
        ],
        "Annunci di Unity": [
          "Presentazione della sezione Annunci di Unity",
          "Attiviamo gli annunci di Unity - Parte 1",
          "ttiviamo gli annunci di Unity - Parte 2",
          "Attiviamo e disattiviamo i pulsanti nel game over panel - Parte 1",
          "Attiviamo e disattiviamo i pulsanti nel game over panel - Parte 2",
          "Attiviamo e disattiviamo i pulsanti nel game over panel - Parte 3",
          "Creiamo le animazioni per i pulsanti",
          "Lanciamo le animazioni dei pulsanti tramite script",
          "Creiamo l'animazione per il primo pulsante",
          "Facciamo dei piccoli aggiustamenti",
          "Aggiungiamo una texture alla pallina",
          "Idee per una continuazione"
        ],
        "Pubblicazione del gioco": [
          "Presentazione della sezione Pubblicazione del gioco",
          "Preparazione del file Apk per il PlayStore - Parte 1",
          "Preparazione del file Apk per il PlayStore - Parte 2",
          "Installazione Inkscape oer Mac",
          "Installazione Inkscape per Windows",
          "Creiamo un'icona per il nostro gioco",
          "Creazione account Google",
          "Creiamo la scheda nella Play Console",
          "Creiamo le immagini per il play store",
          "Creiamo una Privacy Policy per la app",
          "Pubblichiamo il gioco"
        ],
        "Annunci di AdMob": [
          "Presentazione della sezione Annunci di Admob",
          "Attiviamo un account AdMob e creiamo le unità pubblicitarie",
          "Scarichiamo e installiamo il Plugin di AdMob",
          "Attiviamo il banner di AdMob nel gioco - Parte 1",
          "Attiviamo il banner di AdMob nel gioco - Parte 2",
          "Attiviamo l'interstitial di AdMob",
          "Aggiustamenti finali e aggiornamento app nel PlayStore"
        ],
        "Creazione della build per iOS": [
          "Presentazione della sezione Build per iOS",
          "Creiamo la build per iOS - Parte 1",
          "Installiamo Xcode e lanciamo l'app",
          "Saluti finali e consigli su come continuare",
          "Lezione Bonus (con Codici Coupons)"
        ]
      },
      "requirements": [
        "Avere una connessione internet",
        "Non sono necessarie conoscenze di programmazione, il corso è aperto a tutti",
        "Avere voglia di imparare e migliorarsi"
      ],
      "description": "Ciao e benvenuto nel corso che ti aprirà le porte alla carriera di sviluppatore di giochi 3d con Unity!\nQuesto è un corso aperto a tutti, sia a chi già conosce la programmazione e sia a chi è alle prime armi ma vorrebbe aprirsi le porte a nuove opportunità lavorative e una nuova carriera.\nCon questo corso creeremo un gioco 3D per piattaforma Android e iOS, partendo dalle basi arrivevermo ad ottenere un gioco completo e pronto da pubblicare.\nIl corso è strutturato in vari livelli, si parte dalle basi e si arriva gradualmente a creare un gioco altamente additivo e totalmente funzionale in ogni sua parte, e la cosa migliore sarà che il gioco conterrà anche gli annunci per la monetizzazione!\nOltre ad imparare a creare giochi in 3D con Unity, infatti, imparerai anche come monetizzare i tuoi giochi tramite gli annunci di Unity e di Google AdMob!\nTi seguirò passo dopo passo fino a portarti a pubblicare il tuo gioco nel Google Play Store e a farti cominciare a guadagnare grazie agli annunci con i banner, gli interstitial e i rewarded video inseriti all'interno del gioco.\nImparerai anche a creare una build del gioco per sistema iOS e quindi per iPhone e iPad.\nE' giunto il momento di \"monetizzare\" il tuo lavoro! E' giunto il momento di crearti un'entrata passiva mensile tramite gli annunci di AdMob e di Unity nei tuoi giochi e nelle tue app!\nE se ancora hai dubbi se questo possa essere il corso che fa per te puoi iscriverti senza timori grazie alla politica del \"Totale rimborso senza ne e senza ma entro 30 giorni dall'acquisto\"!\nCi vediamo in aula!",
      "target_audience": [
        "Chiunque voglia apprendere a creare giochi in 3D con Unity",
        "Chiunque voglia scoprire come monetizzare i propri giochi con gli annunci di Unity",
        "Chiunque voglia imparare a pubblicare giochi nel Play Store di Google",
        "Chiunque voglia scoprire come monetizzare i propri giochi con gli annunci di AdMob",
        "Chiunque voglia imparare a creare giochi per Android e iOS (iPhone e iPad)",
        "Chiunque voglia migliorare le proprie conoscenze e il proprio curriculum",
        "Chiunque voglia intraprendere una nuova carriera di sviluppatore giochi e app"
      ]
    },
    {
      "title": "Scratch 3.0 Game Hacking",
      "url": "https://www.udemy.com/course/scratch-3-game-hacking/",
      "bio": "Make Fun Changes to A Favourite Scratch Game",
      "objectives": [],
      "course_content": {
        "It's All Here": [
          "Introduction",
          "Getting Started",
          "First Little Hack - Purple Circles on Coins",
          "Saving Hacks and Playing the Game",
          "A Picture on Coins",
          "Funny Face on the Bad Guy",
          "100 Points Fancy Banner",
          "Funny Full Costume for a Bad Guy",
          "Banana Ground"
        ]
      },
      "requirements": [
        "A good amount of Practice with Scratch 3.0"
      ],
      "description": "Come join us and have a laugh in this super short but super fun course:\nScratch 3.0 Game Hacking.\nWe will be making some hilarious changes to the very popular game called Scratchnapped.\nWe will be changes parts of the background, changing the way the coins look, adding a fancy banner when you score 100 points and most importantly making the bad guys in the game look really really silly.",
      "target_audience": [
        "Scratch 3.0 Fans"
      ]
    },
    {
      "title": "Unityゲーム開発入門：Unityインストラクターが教えるマリオ風2Dアクションゲームを作成する方法【スタジオしまづ】",
      "url": "https://www.udemy.com/course/studio_shimazu_sideview_action/",
      "bio": "2Dアクションゲーム開発に必要な、C#・アニメーション・当たり判定など総合的なUnityの力がこれ一本で身につく完全攻略版。 自分の Gameを世界に向けて発信しよう！",
      "objectives": [
        "Unityでゲームを開発する方法",
        "C#を中心とするプログラミングの基礎知識",
        "2Dゲームを作成する方法",
        "マリオのような横スクロールゲームを作成する方法",
        "アニメーションを実装する方法",
        "当たり判定を取得する方法"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "Unityの導入": [
          "はじめに",
          "Unityのインストール",
          "Unityの初期設定"
        ],
        "新バージョンでの修正": [
          "Textについて"
        ],
        "Unityでゲームを作るには": [
          "はじめに",
          "Unityの画面説明",
          "Unityでゲームを作るには",
          "テキストの変更方法"
        ],
        "追加動画（ショートカットキーの解説）": [
          "作業効率爆上がり！講師も使っているショートカットキーの解説"
        ],
        "C#の基礎": [
          "はじめに",
          "コンソールとコメントアウト",
          "変数の宣言",
          "変数の型",
          "数値の演算と演算子",
          "if文",
          "switch文と演習",
          "繰り返し処理whileとfor",
          "配列の基礎と応用",
          "Listとforeach",
          "関数（メソッド）の作成と応用",
          "【演習&解説】1から10までの合計を求める関数",
          "【演習&解説】nからmまでの平均を求める関数",
          "【演習&解説】最大値を返す関数",
          "列挙型について",
          "（おまけの演習問題）nからmまでの偶数の和を求める関数を作成せよ",
          "（おまけの演習問題）3のつく数字でアホになる関数を作成せよ",
          "（おまけ）C#のクラスについて",
          "（おまけ）プロパティについて"
        ],
        "ゲーム開発の基礎（Unityのテクニック集）": [
          "はじめに",
          "キーボード入力の取得",
          "オブジェクトの動かし方とRigidbodyについて",
          "当たり判定の実装",
          "アセットのインポート方法",
          "アニメーションの作り方",
          "アニメーションの切り替え方法",
          "プレファブ化と生成方法",
          "オブジェクトの表示/非表示",
          "別オブジェクトの操作方法",
          "シーンの読み込み方法"
        ],
        "ゲームの作り方（マリオメーカーのようなステージ開発とプログラムの実装）": [
          "はじめに",
          "追加動画(Unity2019.2以上) Tile Paletteの追加",
          "素材のインポートとマリオメーカーのようなステージ作成",
          "Playerの作成",
          "ステージに当たり判定を実装",
          "Playerの移動（いよいよコード書きますよ！）",
          "ジャンプの実装",
          "地面との当たり判定実装",
          "ゲームオーバーとゲームクリアの実装（当たり判定の検出）",
          "ゲームオーバー時にテキストを表示する実装",
          "リスタートの実装",
          "トラップの実装",
          "アイテムの実装",
          "アイテム取得の実装",
          "アイテム取得時のスコア更新の実装",
          "敵キャラクターの実装",
          "敵キャラクターの移動",
          "敵キャラクターの落下対策",
          "敵キャラクターへの攻撃実装",
          "カメラの追従",
          "カメラの境界設定",
          "Playerが壁に引っかかるバグを修正",
          "Runアニメーションの実装",
          "Jumpアニメーションの実装",
          "敵撃破エッフェクトの実装",
          "アニメーションの終了取得",
          "死亡アニメーションの実装",
          "BGMとSEの実装"
        ],
        "終わりに：一緒にゲームを作りたい方へのメッセージ": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "タイピングができる",
        "検索サイトでUnityを調べたことがある",
        "UnityをインストールできるPC（Mac/Windows）がある"
      ],
      "description": "任天堂からこの夏Nintendo Switch向けに発売されたスーパーマリオメーカー 2。ゲーム開発の専門的な知識がなくても\nオリジナルのゲームが開発できることで注目を浴びています。この講座ではスーパーマリオメーカー 2のようにステージを作成するUnityのテクニックが習得できます。\nまた、ステージ作成だけではなくアクションゲーム開発に必要なC#・アニメーション・当たり判定など総合的なUnityの力がこれ一本で身につく完全攻略版です。\n\n\nこの講座は以下の方を対象としています。\nマリオメーカーのようにタイルを配置してゲームを作りたい方\n簡単なプログラムでとりあえずゲームを完成させたい方\nコミケやインディーゲームのイベントで出展側として参加したい方\n自身のポートフォリオを充実させたい方\n\n\n初心者の方でもゲームを完成させられるように、講座の構成は\nUnityのインストール\nUnityでゲームを作る基礎（コードでものを変化させる簡単な方法）\nプログラミングの基礎（ゲーム開発に必要な最低限のスキル）\nゲーム開発のテクニック（アニメーションや当たり判定のスキル）\nを1話完結形式で学び、基礎力をつけた後\n2Dサイドビューアクションゲームの作成\nに取り掛かかります。講座を終えたときにはマリオのような2Dゲームを自身の作成したステージで遊ぶことができるようになっています。\n\n\n一人でゲームを作るのは「資料を探し、学び、実践する」っというとてもエネルギーのいることです。また、完成させるとなるとゲーム開発以外のことにも多くの労力を使います。この講座はこれらのエネルギーをゲーム開発に集中するための講座です。自分のGameを世界に向けて発信しましょう！\n\n\n＊他の私の講座との関係\n「Unityゲーム開発：インディーゲームクリエイターが教えるC#の基礎からゲームリリースまで」よりも簡単です。\n（実際、私の知り合いのプログラミング初心者はテスト用に撮影した動画を見てゲームを完成させました）\nただし、リリース関係のテクニックは入れていないので、リリースを目的とされている方は、上の講座を購入された方がいいです。",
      "target_audience": [
        "マリオメーカーをプレイして似たようなゲームを作ってみたくなった人",
        "ポートフォリオを充実させ転職活動にいかしたい人",
        "Unityのチュートリアルを勉強したけど挫折してしまった人",
        "Unityを始めたはいいけど何から手をつけていいのかわからない人"
      ]
    },
    {
      "title": "Maîtrisez Godot : De l'Initiation au Développement de jeux",
      "url": "https://www.udemy.com/course/maitrisez-godot-de-linitiation-au-developpement-de-jeux/",
      "bio": "Apprenez à créer des jeux vidéo complets en 2D et 3D grâce à une approche pratique et progressive avec Godot Engine.",
      "objectives": [
        "Créer et structurer un projet dans Godot Engine",
        "Programmer des mécaniques de jeu en GDScript",
        "Développer des jeux 2D et 3D",
        "Créer des niveaux interactifs avec les outils de Level Design",
        "Gérer les effets sonores et la musique",
        "Configurer et compiler des jeux",
        "Créer des ennemis et gérer leur comportement",
        "Utiliser les outils de Level Design"
      ],
      "course_content": {},
      "requirements": [
        "Aucune expérience préalable en programmation ou en développement de jeux n'est nécessaire.",
        "Une motivation à apprendre et à créer des jeux vidéo.",
        "Un ordinateur capable de faire fonctionner Godot Engine."
      ],
      "description": "Pourquoi choisir Godot Engine ?\nGodot Engine est un logiciel de création de jeux vidéo, gratuit et open-source, qui permet de développer des jeux en 2D et en 3D. Avec son interface intuitive et ses outils puissants, il offre tout ce dont un développeur a besoin pour concevoir des jeux de qualité, que ce soit pour les ordinateurs, les consoles, ou les appareils mobiles.\nApprendre à utiliser Godot, c’est acquérir les compétences nécessaires pour créer des jeux vidéo de qualité professionnelle en 2D comme en 3D, tout en bénéficiant d’une communauté active et d’une documentation riche.\n\n\n\n\nPourquoi choisir cette formation ?\nAvec plus de 14 heures de vidéos e-learning, cette formation vous guide à travers une progression structurée, allant des bases de l’interface jusqu’à la création de jeux complets.\nVous découvrirez les principes fondamentaux de Godot, apprendrez la programmation avec GDScript et maîtriserez des outils essentiels comme le design de niveaux et l’animation.\nGrâce à des projets pratiques tels qu’un jeu de course, un jeu de plateforme et un labyrinthe en 3D, vous appliquerez vos connaissances de manière concrète.\nDes exercices pratiques interactifs viendront renforcer votre apprentissage, vous permettant d’évaluer vos compétences à chaque étape.\nEn fin de formation, vous serez capable de concevoir, développer et distribuer vos propres jeux vidéo, que ce soit pour le plaisir ou pour une carrière dans l’industrie du jeu.\nQue vous soyez un débutant passionné ou un futur créateur ambitieux, cette formation est votre point de départ idéal pour maîtriser Godot Engine et réaliser vos idées de jeux.\nÀ chaque étape, vous découvrirez des outils concrets, des techniques pratiques et des défis motivants qui transformeront votre créativité en compétences.\n\n\nPrenez part à l’aventure, le monde du développement de jeux n’attend plus que vous !",
      "target_audience": [
        "Pour les étudiants et professionnels",
        "Pour les développeurs en quête de nouvelles compétences",
        "Pour les enseignants et formateurs",
        "Public général : passionné de jeux vidéo"
      ]
    },
    {
      "title": "Games in Scratch #3: Train station",
      "url": "https://www.udemy.com/course/games-in-scratch-3-train-station/",
      "bio": "Creating Train passenger station game with clones, \"my blocks\", conditional statements in Scratch (Medium level)",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "basic knowledge of Scratch: logging into your account, creating new project, practical experience with at least some of Scratch controls",
        "having experience working with variables in Scratch",
        "strong understanding of conditional statements (IF-ELSE, comparison, greater than, less than)"
      ],
      "description": "In this course we will create game \"Train station\" in the Scratch programming language. We will learn by doing!\nDifficulty level of this course: easy \\ medium \\ hard\n\n\nWho is this course suitable for:\nTeachers and parents who want to keep their children busy\nChildren and teenagers with with strong knowledge of Scratch\n\n\nThe course also contains theoretical explanations, but most of the course is practical. We will repeat or learn such areas as:\nworking with variables: what it is and why they are needed;\nusing variables as indicators of some events;\ncreating sprite clones: how to manage hundreds of clones at a time;\nwhat is the purpose of \"My blocks\" and how it can help us to ease game logic.\n\n\nThe plot of the game:\nwe have 1 train station with 2 tracks on it;\nwe have 5 \"lines\" of the train - they have different colors. By clicking keys from 1 to 5 we can call a train to free track. If tracks are occupied, user's call will be ignored;\nthere is also Cargo train. It occupies any track occasionally in order to bring some mess our gameplay;\nthere are 5 types of passengers appear on the station. They can be collected only if they find a train with appropriate color on any track;\ngame ends if we serve 1000 passengers - in this case user win. Player lose if we reach 250 passengers located on the station simultaneously.\n\n\nI recommend that students simply repeat all the steps from the video, so at the end of the course they will have their own game, which they will be able to navigate and then be able to independently make some changes and expand the game at their own discretion. At the end of the course, materials with source codes for all sprites are provided - using them you can check whether the game is made correctly and fix any non-working parts.\n\n\nNote: Those who under 18 years old may use this course only if a parent or guardian provides their account and controls all key activities while using the account.",
      "target_audience": [
        "adults and teachers who want their children to be able to develop games",
        "teenagers who want to improve their programming skills"
      ]
    },
    {
      "title": "Curso de programación de Blueprints con Unreal Engine 5",
      "url": "https://www.udemy.com/course/curso-de-programacion-en-blueprints-para-unreal-engine-5/",
      "bio": "Obtén los fundamentos de programacion en blueprints para poder hacer cualquier videojuego en unreal engine 5",
      "objectives": [
        "En este curso completo para pricipiantes aprenderás a hacer videojuegos utilizando unreal engine 5 y blueprints",
        "Manejarás la interfaz de unreal engine como todo un experto y conocerás la interfaz de blueprints",
        "Trasladarás conocimientos de programación en otros lenguajes hacia unreal engine con blueprints",
        "Tendras todo el conocimiento para poder despegar en la programación de blueprints dentro de unreal engine",
        "Haremos tres videojuegos sencillos que funcionaran como prototipo para mas adelante crear videojuegos increibles."
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso",
          "Introducción a las herramientas más comunes y a un primer juego básico",
          "Hablemos un poquito de game design y de lo que implica hacer un videojuego",
          "Introducción a los Blueprints y a UNREAL ENGINE",
          "Leccion 1. Ejercicio 1 - Bases de los Actores, Nodo Print String",
          "Leccion 1. Ejercicio 2 - Text Renderer"
        ],
        "Creacion de Juego De Disparos en primera persona desde cero Con Enemigos": [
          "Creando un Jugador En primera persona desde cero - Gamemode - Input mapping",
          "Creando movimiento de la camara desde cero",
          "Creando movimiento del personaje y salto",
          "Aclaracion de los siguientes pasos",
          "Agregando Componente a Skeletal Mesh",
          "Agregando Un Arma al jugador",
          "Agregando Disparos al arma",
          "Creando un enemigo con vida que recibe disparos",
          "Agregando enemigos que nos puedan perseguir con Navegacion"
        ],
        "EXTRA: Terminología de Blueprints.": [
          "Terminología de Blueprints."
        ],
        "Programación con blueprints - Explorar los nodos": [
          "Variables Operadores Funciones Eventos y Macros Controles de flujo y Condicional",
          "Leccion 2 - Ejercicio 1 - Variables Publicas Y Privadas",
          "Leccion 2 - Ejercicio 2 - Nuestra primera Funcion, Variables Dinamica"
        ],
        "Eventos, Crear y destruir actores dinámicamente por Blueprints": [
          "Eventos, Crear y destruir actores, input del jugador",
          "Leccion 3 - Ejercicio 1 - Cambiar materiales por codigo, Construction Script",
          "Leccion 3 - Ejercicio 2 - Hacer Cajas Que Explotan"
        ],
        "Clases - Actores - Pawn - Character - Framework y Multijugador": [
          "Clases - Actores - Pawn - Character - Framework y Multijugador",
          "Leccion 4 Ejercicio 1 - Controlar Varios Personajes En el mismo Nivel",
          "Leccion 4 Ejercicio 2 - Un GameMode Que tenga un Timer como contador"
        ],
        "EXAMEN de las lecciones 1 a la 4.": [
          "Examen de las lecciones 1 a 4"
        ],
        "Crear tu primer videojuego con todo lo aprendido anteriormente - GAME MODES": [
          "Crear tu primer videojuego con todo lo aprendido anteriormente - GAME MODES",
          "Leccion 5 Ejercicio 1 - Sistema de particulas",
          "Leccion 5 Ejercicio 2 - Variable Cambiante de Rango"
        ],
        "Tutorial Blueprints Avanzados - ARRAYS, SET, MAPAS, ENUMS, STRUCTURE": [
          "Tutorial Blueprints Avanzados - ARRAYS, SET, MAPAS, ENUMS, STRUCTURE",
          "Utiliza Enums y Constructor Script para cambiar formas de un blueprint",
          "Encender y apagar focos"
        ],
        "Blueprints Avanzados 2 - Control de flujo, generar numeros aleatorios": [
          "Blueprints Avanzados 2 - Control de flujo, generar numeros aleatorios",
          "Lanza dos dados que tengan valores de ataque aleatorios",
          "Con el nodo Multigate Cambiamos el material del suelo dinamicamente"
        ]
      },
      "requirements": [
        "Este curso esta orientado a principiantes, y a personas sin conocimientos en unreal engine 5. Vamos a repasar los conceptos de programación en blueprint, sus nodos y funcionalidades."
      ],
      "description": "Este es un curso orientado a principiantes para conocer los nodos que nos ofrece la programación en blueprints, está considerando la documentación oficial de UNREAL ENGINE 5, es un conocimiento esencial para poder desenvolverse en unreal engine, al ser una programación visual, está hecha no necesariamente para programadores expertos, ya que hay muchas funciones que ya están hechas en formas de nodo, y para poder hacer un videojuego exitoso en unreal engine 5 es necesario conocerlos y manejarlos fluidamente. El desarrollo de videojuegos en unreal engine 5 se puede programar con blueprints asi como con C++, ambos pueden trabajar en conjunto para poder programar diversos comportamientos, sin embargo, resulta más intuitivo y está diseñado para que cualquier persona se involucre dentro de la programación en blueprints.\nUnreal engine 5 es un motor de videojuegos lider en la industria y que es requerido tanto en la escena indie con estudios pequeños como con estudios grandes, debido a su alta calidad visual que se puede alcanzar al desarrollar proyectos con esta engine, no solo es completamente gratuita de usar si no que con ella puedes crear proyectos impresionantes visualmente, sin embargo es necesario poder manejar la programacion con blueprints como inicio para poder desenvolverse en esta engine.",
      "target_audience": [
        "Principiantes que esten interesados en aprender a programar en blueprints dentro de unreal engine con la documentación oficial"
      ]
    },
    {
      "title": "Aprenda a Criar Jogos com Construct 2 - 10 Cursos em 1",
      "url": "https://www.udemy.com/course/curso-criacao-de-jogos-completo-crie-10-jogos-no-construct/",
      "bio": "Crie 10 Jogos + Monetização por Anúncios, Publicação na Google Play,Banco de Dados SQL,Joystick Virtual,Google Analytics",
      "objectives": [
        "Como desenvolver dois jogos na engine Construct 2 de plataforma usando os conceitos aprendidos",
        "Publicar o jogo na internet",
        "Exportar e Publicar jogos na Google Play",
        "Conhecer História e Conceitos de Game Design (Loops, Arcs, Feedbacks, Gráficos, Gerações de Jogos, Música...)",
        "Criar um jogo de Tap to Escape",
        "Criar jogos de Plataforma (Aventura, Tiro, Quebra Cabeça e Luta)",
        "Criar um jogo de Tower Defense",
        "Criar um jogo de Top Down Shooter",
        "Criar um jogo estilo Flappy Bird",
        "Criar um jogo estilo Angry Birds",
        "Criar um jogo de Infinite Runner",
        "Inserir e Receber dados de um Banco de Dados SQL",
        "Adicionar Anúncios para Monetizar Jogos",
        "Adicionar Analytics para ter Relatórios de Uso dos Jogos",
        "Versionar seu projeto utilizando Bit Bucket"
      ],
      "course_content": {
        "Introdução": [
          "Introdução da Plataforma Udemy",
          "Introdução (Entenda Como Funciona O Curso)",
          "Instalação da Ferramenta",
          "Link de Download do Construct",
          "Participe do Nosso Servidor do Discord de Games"
        ],
        "Arquivos de Projetos e Recursos Gráficos": [
          "01 - Tap To Move (Arquivos)",
          "02 - Plataforma Com Tiro (Arquivos)",
          "03 - Plataforma Com Aventura (Arquivos)",
          "04 - Plataforma com Quebra-Cabeça (Arquivos)",
          "05 - Plataforma Com Luta",
          "06 - Tower Defense",
          "07 - Top Down Shooter",
          "08 - Flappy Bird",
          "09 - Angry Birds",
          "10 - Infinite Runner com Banco de Dados"
        ],
        "Aulas Grátis": [
          "Mais de 200 Aulas 100% Grátis Para Você!"
        ],
        "(OPCIONAL) Game Design e Análise de Componentes": [
          "DESCONTÃO PARA OUTROS CURSOS",
          "LINKS DE DESCONTOS",
          "O quê é um Jogo",
          "Gerações de Vídeo Games (Parte 1)",
          "Gerações de Vídeo Games (Parte 2)",
          "Mercado de Jogos e Monetização",
          "Game Engines",
          "Dicas Para Iniciantes",
          "Camadas de Um Jogo",
          "Bons e Maus Tutoriais",
          "Gráficos e Animações",
          "Mecânicas e Controles",
          "Game Loops, Arcs e Feedbacks",
          "Música e Efeitos Sonoros",
          "Revisão, Conclusão e Exercício"
        ],
        "01 - Tap to Escape": [
          "Apresentação do Jogo",
          "Estrutura Inicial",
          "Splash Screen",
          "Chão e Colisão",
          "Comportamento Platformer",
          "Variáveis e Simulate Platformer",
          "Touch Muda Direção",
          "CORREÇÃO DO BUG NO CANTO DA TELA - VÍDEO",
          "CORREÇÃO DO BUG NO CANTO DA TELA",
          "On Collision e Limites",
          "Inimigos Caem do Teto a cada X Segundos",
          "Sprite Fonts, Textos e GUI",
          "Pontuação e Reiniciar o Jogo",
          "Game States (Pre-Game, In-Game, End-Game)",
          "Background, Grids e Sprite Font Color",
          "Animação do Jogador e Inimigos",
          "Música e Efeitos Sonoros",
          "Pause Game",
          "Timer",
          "Waves (Dificuldade Progressiva)",
          "Conclusão e Sugestões",
          "Ornaments"
        ],
        "02 - Plataforma com Tiro": [
          "Estrutura Inicial do Projeto",
          "Jogador e Tipos de Plataforma",
          "Câmera Seguindo Jogador",
          "Usando Outras Teclas Para O Jogador",
          "Animações de Andar,Pular e Cair",
          "Plano de Fundo e Design de Plataformas",
          "Disparar Projéteis",
          "Inimigos e Pontuação",
          "Barra de Vida",
          "Descendo de Plataforma Jump Thru",
          "Colisão e Respawn",
          "Próximas Fases e GUI Global",
          "Conclusão do Jogo"
        ],
        "03 - Plataforma com Aventura": [
          "Estrutura Inicial",
          "Jogador e Plataforma Estática",
          "Respawn do Jogador",
          "Espelhamento e WASD",
          "Câmera Seguindo o Jogador e Camadas",
          "Plataforma que se move",
          "Parallax",
          "Porta e Transição de Fases",
          "Menu Inicial",
          "Vidas e Game Over",
          "Inimigo Simples",
          "Agrupamento, Concatenação e GUI de Vida",
          "Pular Na Cabeça do Inimigo",
          "Temporizador Reinicia Fase",
          "Vida Extra",
          "Pulo Duplo",
          "Funções e Level Design",
          "Encontrando Assets Gráficos",
          "Animação e Respawn",
          "Estados de Animação Andando e Parado",
          "Animação de Pulo",
          "Level Design",
          "Tilemaps e Decoração",
          "Animações do Inimigo",
          "Vidas com GUI",
          "Checkpoint",
          "Detalhes Finais e Spikes"
        ],
        "04 - Plataforma com Quebra-Cabeça": [
          "Organização de Layers e Nomes",
          "Ajustando Layout, Collision e Player",
          "Controlar por Teclado e Animation Básica",
          "Animação de Caminhar e Idle",
          "Animação de Pular e Cair",
          "Plano de Fundo e Chão",
          "Jogador Atirando projétil",
          "Tiro se Decompondo",
          "Efeito de Ácido",
          "Tiro e Inimigo de Serra",
          "Dano e Barra de Vida",
          "Caindo no Ácido",
          "Camera e Lerp",
          "Revisando e Comentando",
          "Porta Transição de Fase",
          "Alavancas Abrem Portas",
          "Temporizador",
          "Joystick Virtual",
          "GUI Global"
        ],
        "05 - Plataforma com Luta": [
          "Apresentação do Curso",
          "Estrutura do Projeto e Introdução Physics",
          "Movendo Jogador com Physics",
          "Velocidade Máxima e Pulo Duplo",
          "Adicionando Animações",
          "Variável de Animação",
          "Correção do Pulo",
          "Animação de Soco",
          "Soco com Empurrão",
          "Jogadores Com Atributos Diferentes",
          "Força e Porcentagem Gradativas",
          "Upper Punch (Gancho Para Cima)",
          "Crouch e Crouched Punch",
          "Sobre A Cabeça Do Inimigo",
          "Condições de Morte e Respawn Aleatório",
          "Jogador 2",
          "Fim de Jogo (Por Mortes)",
          "Super Poderes Aleatórios e Itens",
          "Timer Regressivo",
          "Cenário",
          "Detalhe Na Força do Soco",
          "Câmera Avançada",
          "Conclusão e Agradecimento"
        ],
        "06 - Tower Defense": [
          "Apresentação do Jogo",
          "Estrutura Inicial",
          "Pahtfinding e Collision",
          "Spawn de Inimigos e Perder Vidas",
          "Torres Aliadas e Tiros",
          "Barra de Vida de Inimigos e Dano Sofrido",
          "Arrastar Novas Torres",
          "Dinheiro do Jogo",
          "Cenário e Level Design",
          "Função de Spawn Waves",
          "Controle de Waves e Fim de Jogo",
          "Fim de Jogo (Vitória ou Derrota)",
          "Torre Tipo 2",
          "Controlar Câmera",
          "Detalhes Finais",
          "Conclusão"
        ]
      },
      "requirements": [
        "Computador com Windows",
        "Construct 2 (Tudo poderá ser feito usando a versão Gratuita)",
        "Não é necessário saber programação (Será ensinado durante o curso)"
      ],
      "description": "Você irá aprender a criar jogos no estilo\n1-Tap to Escape\n2-Plataforma com Tiro\n3-Plataforma com Aventura\n4-Plataforma com Quebra Cabeça\n5-Plataforma com Luta\n6-Tower Defense\n7-Top Down Shooter\n8-Flappy Bird\n9-Angry Birds\n10-Infinite Runner com Banco de Dados\nE os cursos são independentes, não é preciso fazer em sequência, escolha os que mais te agradarem para fazer primeiro.\nO curso mais completo de Construct 2 do Brasil.\nCom mais de 232 Aulas de Curso + 15 Aulas Bônus.\nCom mais de 32 HORAS DE CONTEÚDO em Vídeo.\nAcesso a todos os materiais gráficos do curso e aos arquivos de código fonte dos jogos\nCom Certificado de Conclusão.",
      "target_audience": [
        "Pessoas que queiram aprender a criar jogos e protótipos sem usar codificação, de uma forma rápida, eficiente e divertida",
        "Pessoas sem qualquer experiência em programação"
      ]
    },
    {
      "title": "Lógica de Programação + Projetos na Godot/GDScript 4.3+",
      "url": "https://www.udemy.com/course/aprenda-godot-e-gdscript-em-7-dias/",
      "bio": "Tudo que você precisa saber, de forma PRÁTICA, para começar a criar os seus jogos!",
      "objectives": [
        "Você irá aprender na prática o GDScript, linguagem de programação nativa utilizada na Godot Game Engine!",
        "Aprenda como funcionam as Funções, Variáveis, Constantes, Operadores Lógicos, Estruturas de Repetição, Condicionais e muito mais!",
        "Aprenda como funcionam os Sinais (Callbacks), Grupos, Camadas, Máscaras e muito mais!",
        "Aprenda como utilizar os Objetos 2D da Godot, como o CharacterBody2D, a Camera, CollisionShape, Sprite2D etc!",
        "Aprenda como Utilizar os Objetos de Interface da Godot, como a Label, ColorRect, CanvasLayer, CanvasModulate etc!",
        "Aprenda como utilizar os Objetos de Animação da Godot, como o AnimationPlayer!",
        "Aprenderá como utilizar a Interface de Projetos e Interface do Editor da Godot!",
        "Pratique suas habilidades com os exercícios práticos + projetos do curso!"
      ],
      "course_content": {
        "Introdução a Godot": [
          "ATUALIZAÇÃO DO CURSO [IMPORTANTE]",
          "Download da Godot",
          "Interface de Projetos + Criação do Projeto",
          "Introdução a Godot, explicando o que são Cenas"
        ],
        "Lógica de Programação I": [
          "Padrões de Nomenclatura + Definindo cena principal",
          "Herança a partir de códigos em objetos",
          "Formatação do código + Declarando funções + Função _ready",
          "[RESOLUÇÃO DE EXERCÍCIO] - Exercício 'Olá Mundo'",
          "Falando um pouco sobre Variáveis",
          "[RESOLUÇÃO DE EXERCÍCIO] - Exercício 'Variáveis'",
          "Explicando sobre tipagem no código + Variáveis do tipo String",
          "Variáveis do tipo int",
          "[RESOLUÇÃO DE EXERCÍCIO] - Exercício 'Soma' + Concatenação + Conversão",
          "[RESOLUÇÃO DE EXERCÍCIO] - Exercício 'Substituição'",
          "Variáveis do tipo float + Interação entre números inteiros e números quebrados"
        ],
        "Lógica de Programação II": [
          "Variáveis do tipo bool + If/Else",
          "[RESOLUÇÃO DE EXERCÍCIO] - Exercício If/Else + bool",
          "Elif (Else If)",
          "Como usar a @Export (Annotation)",
          "[RESOLUÇÃO DE EXERCÍCIO] - Criando e validando as @Export vars",
          "Categorias de exportação (Grupos de variáveis no inspetor)",
          "Funções _process e _physics_process + Explicando o Delta",
          "Como criar ações (Inputs) no seu projeto - Teclado/Mouse/Controle etc",
          "Como listar/monitorar Inputs por código",
          "[RESOLUÇÃO DE EXERCÍCIO] - Ataque ao personagem (Pratiquem com novas lógicas)"
        ],
        "Lógica de Programação III": [
          "Variáveis do tipo Array + Randomização de números em listas",
          "[RESOLUÇÃO DE EXERCÍCIO] - Sobreviva ao ataque do inimigo (RNG 20)",
          "Armazenando OBJETOS + Como declarar objetos utilizando @onready e @export",
          "Armazenando diferentes tipos dentro de uma Lista",
          "Estrutura de repetição FOR + Triagem de elementos em uma lista",
          "Iterando por números em uma estrutura FOR",
          "[RESOLUÇÃO DE EXERCÍCIO] - Metade maior dos números + Continue e Break",
          "Estrutura de repetição WHILE + Exemplo barra de experiência Ragnarok Online",
          "Polindo o código + Retirando as Warnings",
          "Variáveis do tipo Dictionary + Como acessar valores de um dicionário"
        ],
        "Lógica de Programação IIII": [
          "Estrutura Match",
          "Funções e tipos de retornos",
          "[RESOLUÇÃO DE EXERCÍCIO] - Criando funções + Argumentos em funções",
          "[RESOLUÇÃO DE EXERCÍCIO] - Argumentos de funções + Argumentos arbitrários",
          "Constantes",
          "Variáveis e funções (Públicas e Privadas)"
        ],
        "swordFantasy - Desenvolvimento do Personagem": [
          "Apresentando o projeto e passando os exercícios do módulo",
          "Inputs + Movimentação do Personagem",
          "Configurando as animações de Parado/Andando",
          "Aplicando as animações do personagem por código",
          "Escalando a janela do jogo para HD/Full HD",
          "Configurando a ação de ataque com a espada",
          "Configurando a Área de Ataque",
          "Criando as outras ações + Refatorando lógica do ataque",
          "Feedback visual da arma atual + Mudando a arma atual por código",
          "Adicionando uma câmera ao personagem + Suavização da câmera"
        ],
        "swordFantasy - Criação do Terreno": [
          "Apresentando as atividades a respeito do terreno",
          "Configurando as camadas iniciais do nosso TileMap",
          "Principio de instanciação + Instanciando personagem + terreno no nível",
          "Construindo o terreno de base",
          "Configurando as colisões do terreno",
          "Criando os objetos de base (Árvores)",
          "Configurando outros objetos de decoração",
          "Lógica de destruir objetos de acordo com a ferramenta equipada"
        ],
        "swordFantasy - Entidades (Animais e Inimigos)": [
          "Apresentando as atividades do módulo",
          "Criando a entidade de base para os inimigos + animais",
          "Lógica de movimentação aleatória + Bounce + Estado de parar e andar",
          "Hitbox das entidades + flip_h + animações",
          "Entidades agressivas + lógica de perseguir o personagem",
          "Lógica para causar dano + matar o personagem",
          "Animação de morte + hit das entidades"
        ],
        "swordFantasy - Interface + Exportação do projeto": [
          "Apresentando as atividades do módulo",
          "Configurando a tela de Game Over",
          "Configurando a tela de Menu",
          "Configurando a interface do jogo (Vida + Arma atual)",
          "Exportando para Windows",
          "Exportando para web (Itch.io)"
        ],
        "NOVAS AULAS EM BREVE!": [
          "EM BREVE!"
        ]
      },
      "requirements": [
        "Não é necessário ter experiência com programação!",
        "Um computador para acompanhar as aulas e praticar os exercícios!"
      ],
      "description": "Lógica de Programação + Projetos na Godot/GDScript 4.3+\n\n\nE se eu te disser que é possível aprender Godot, uma das Game Engines mais intuitivas e populares de 2024 e GDScript, a linguagem de programação nativa da Godot Game Engine, muito similar ao Python, uma das linguagens de programação mais populares do mundo, em pouco tempo?\n\n\nNesse curso de Godot + GDScript você aprenderá fundamentos de programação e do GDScript, tais como:\n\n\nConstantes\nListas (Arrays)\nCamadas/Máscaras\nExport/Onready vars\nSignals (Callback da Godot)\nVariáveis (bool, float, int, string)\nEstruturas de Repetição (For)\nCondicionais (Match case/If Else Elif)\nFunções/Funções com Retorno/Funções com Argumentos\nGrupos (Comunicação entre Objetos de forma simples e rápida)\nObjetos de Animação representados pela cor Roxa (AnimationPlayer)\nObjetos do tipo Control/Controle representados pela cor Verde (Objetos de Interface)\nObjetos do tipo 2D representados pela cor Azul (CharacterBody2D, CollisionShape2D, Sprite2D, Camera)\n\n\nPorque aprender Godot e GDScript?\n\n\nA Godot Game Engine está entre os Motores de Jogos mais populares, poderosos e flexíveis para o Desenvolvimento de Jogos e Aplicativos em 2024, com sua nova versão 4.3, ela conta com um poderoso renderizador, o Vulkan, além de diversas outras melhorias, como um código mais performático e comercial. A Godot também conta com a linguagem de programação nativa, o GDScript, ou seja, você consegue programar diretamente de dentro da Engine, sem a necessidade de um programa externo para fazer a integração do código com o projeto.\n\n\nAlém de todos os benefícios, a Godot é open source, ou seja, de código aberto! Você consegue acessar todo o código fonte da Engine diretamente pelo GitHub, além disso, ela é livre de Royalties, então se você quiser comercializar qualquer jogo desenvolvido por você utilizando a Engine, você tem direito, podendo ficar com 100% dos lucros, sem precisar criar uma conta ou assinar algum tipo de contrato com a Engine!\n\n\nVocê está pronto para aprender?",
      "target_audience": [
        "Iniciantes no Desenvolvimento de Jogos/Programação que desejam Criar os seus Jogos!",
        "Pessoas que querem migrar para a Godot 4.0, mas ainda não tem experiência com a nova versão da Engine!"
      ]
    },
    {
      "title": "Unity 2D Temel C# ve Doğru Kodlama Eğitimi",
      "url": "https://www.udemy.com/course/unity2d-temel-c-ve-dogru-kodlama-egitimi/",
      "bio": "Unity 2D oyun geliştirme temel, dogru ve ileri seviye kodlama teknikleri, oop ve solid presipleri, design patternler",
      "objectives": [
        "Unity",
        "C#",
        "Unity 2D",
        "CSharp",
        "Temel Kodlama",
        "Doğru Kodlama Teknikleri",
        "Object Oriented Programming Prensipleri",
        "Solid Prensipleri",
        "Design Patterns",
        "GitHub"
      ],
      "course_content": {
        "Temel C# ve Unity Giris": [
          "Bilgilendirme",
          "Unity Hub Nedir Ne Isimize Yarar",
          "Ide Secimi Visual Studio Kurulumu",
          "Unity Temel Bilgiler",
          "Temel C# Bilgileri ve Yazim Kurallari",
          "Veri Tipleri Ve Anlamlari Part 1",
          "Veri Tipleri Ve Anlamlari Part 2",
          "Veri Tipleri Ve Anlamlari Part 3",
          "Local Degisken vs Global Degisken Part 1",
          "Local Degisken vs Global Degisken Part 2",
          "Operatorler",
          "Karar Yapilari ve If Else Giris",
          "Mantik Operatorleri ve TernaryIf Giris",
          "Switch Case Islemleri",
          "Donguler",
          "Koleksiyon Yapilarimiz ve Kullanimi Part 1",
          "Koleksiyon Yapilarimiz ve Kullanimi Part 2",
          "Deger Tip Referans Tip Arasindaki Farklar",
          "Method Nedir",
          "Deger Donduren vs Deger Dondurmeyen Methodlar",
          "Parametre Nedir Method Overload Nedir",
          "Default Value Parametresi",
          "Params Keyword",
          "Ref ve Out Keyword'leri"
        ],
        "Object Oriented Programming": [
          "Oop Nedir Class Nedir Encapsulation Giris Part 1",
          "Encapsulation Part 2",
          "Encapsulation Part 3",
          "Inheritance Miras Almak",
          "Polymorphism Cok Bicimcilik",
          "Constructor Yapici Methodlar",
          "Abstract Class Soyut Class",
          "Interface",
          "Static Class",
          "Delegate",
          "Event ve UnityEvent",
          "Design Patterns ve Singleton Pattern"
        ],
        "Udemy Proje 1": [
          "Unity Giris ve Ilk Proje olusturma temel kurallar",
          "Art Dosyasini Projeye Import Etmek",
          "Player Olusturma ve Transform Tanitimi",
          "Ilk Script'i olusturma",
          "Rigidbody2D ve Collider2D Mantigi ve Ekleme Islemleri",
          "Rigidbody2D Erisim ve AddForce Kullanimi",
          "Encapsulation ve Field kullanimi Attribute Aciklamasi",
          "GameManager Ekleme Controller Manager Arasindaki Fark ve Coroutines",
          "Update vs FixedUpdate",
          "Solid Prensipleri S ve O Harfleri",
          "EnemyController Mover Component'i",
          "Prefab Nedir Ne Isimize Yarar",
          "Obsticle Spawner Olusturuyoruz",
          "Obsticle Spawner Gelistiriyoruz",
          "Dizilerin Length Ozelligi",
          "Red Dragon Enemy ve Spawner",
          "Spawners Duzenleyelim",
          "Projectile Olusturuyoruz",
          "Mover Component'in Gelistiriyoruz",
          "ProjectileController Olusturuyoruz",
          "Projectile Atesleme",
          "Projectile Parent Sorunu Giderme",
          "Collision ve Trigger Arasindaki Fark",
          "Ui Giris ve Score Yazdirma",
          "GameCanvas Duzenleme ve GameOver Panel",
          "GameOver Islemleri ve Eventler",
          "Oyunu Yeniden Baslatalim",
          "Oyuncu Ve Projectile Seslerini Verelim",
          "Background Ses ve PersistentObjects",
          "Menu Scene Olusturalim",
          "PoolSystem Nedir GenericPool Olusturuyoruz",
          "Obsticle Pool Olusturuyoruz",
          "RedDragon Pool Ve EnemyController Duzenleme",
          "Son Dokunuslar",
          "Oyunu Build Edelim ve Bitirelim"
        ],
        "Udemy Proje 2": [
          "UdemyProject2 Olusturuyoruz",
          "Asset Store ve Indirme Islemi",
          "Tilemap Nedir Ne Foreground Olusturalim",
          "Tilemap Foreground Background Ayrimi",
          "Player Idle Animation Olusturuyoruz",
          "Player Hareket Ettirelim",
          "Player Run Animation Ve Animator Gecisleri",
          "Player Yon Degistirme",
          "Tilemap Collider2D ve Composite Collider2D",
          "Jump Islemleri ve Animasyonu",
          "PlayerController Toparlayalim Part 1",
          "PlayerController Toparlayalim Part 2",
          "OnGround Part 1",
          "OnGround Part 2",
          "Cinemachine ve Middleground Ekleme",
          "Tilemap Middleground Duzenleyelim",
          "Tilemap Ile Levelimizi Tamamlayalim",
          "Yeni Bolume Gecme Islemi ve GameManager",
          "Prefableri Olusturuyoruz ve Climping Hazirliklari",
          "Climbing Part 1",
          "Climbing Part 2",
          "FollowCamera Ayarlari",
          "Health ve Damage Olusturalim",
          "Checkpoint Controller ve Manager",
          "Menu Olusturalim",
          "Menu ve Ui Scene Ayni Anda Calistirma",
          "Level 1 ve Ui Birlikte Calistiralim",
          "Splash Scene Olusturalim",
          "Ui Health ve Score Eklemek",
          "Ui Panellerini Dogru Zamanda Calistiralim",
          "GameOverPanel Dogru Zamanda Cikarma",
          "Health Ui Text ile Gosterelim",
          "Score GameObject Olusturuyoruz",
          "Score Ui Ile Gosteriyoruz",
          "Enemy Olusturuyoruz Ilk Adimlar",
          "Enemy Gelistirmeye Devem Ediyoruz",
          "Enemy Haraket Ettirme",
          "Enemy ve Player Birbirine Zarar Versin",
          "Extension Methods Giris",
          "Health Damage Duzenleme",
          "Enemy Animasyon Olusturalim",
          "Sound Islemlerine Giris",
          "Observer Pattern Kullanalim",
          "Ses Islemleri ve Observer Tamamlayalim",
          "Son Dokunuslar ve Build Alalim"
        ],
        "Udemy Proje 3": [
          "UdemyProject3 Olusturuyoruz",
          "Game Scene Taniyalim",
          "Hazir Tilemap Sorunlarini Giderelim",
          "Player Ve Idle State Olusturuyoruz",
          "Inputs ve PlayerController Olusturuyoruz",
          "IMover ve Mover Olusturuyoruz",
          "IMover Kullanma Amaci Aciklamasi",
          "Blend Tree Giris ve Locomotion",
          "Character Animation Olusturuyoruz",
          "Flip Islemleri",
          "Cinemachine ve Jump Ekleyelim",
          "OnGround Part 1",
          "OnGround Part 2",
          "Jump Animation",
          "Attack Animation",
          "Attack Animation Kod ile",
          "Sword Particle Effect Ekleyelim",
          "Coklu Ziplama ve Attack Duzeltme",
          "Enemy Olusturalim",
          "PlayerAttacker Olusturuyoruz",
          "PlayerAttacker Animation Event ile Calistiriyoruz",
          "Enemy Idle ve Walk Animation Ekleyelim",
          "Enemy Attack ve TakeHit Animation Ekliyoruz",
          "Enemy Controller Olusturuyoruz",
          "Enemy Attack ve State Kurulumu",
          "StateTransition ve StateMachine",
          "StateMachine Kullanimi Part 1",
          "StateMachine Kullanimi Part 2",
          "Idle State",
          "Walk State Part 1",
          "Walk State Part 2",
          "Walk State Part 3",
          "ChasePlayer State",
          "Idle ve Walk Toparliyoruz",
          "Patrol'suz Skeleon",
          "TakeHit State",
          "Dead State",
          "Attack State Part 1",
          "Attact State Part 2",
          "State Machine Toparlayalim",
          "Enemy StopEdge",
          "Hierarchy Toparlayalim",
          "Animator Controller Override Giris",
          "MossGiant Attack Animation",
          "MossGiant Dead ve TakeHit Animations",
          "GameManager ve Menu Scene Olusturuyoruz",
          "SplashScreen ve Temel Sahne Gecisleri",
          "Ui Scene Olusturuyoruz",
          "Gecisler ve Ui Scene Toparliyoruz",
          "Sahne ve Canvas Gecislerini Kod ile Ayarliyoruz",
          "DisplayHealth Olusturalim",
          "GameOver Panel Hazirliyoruz",
          "GameOverPanel Kod ile Cikarma",
          "Player Dead Animation",
          "Score Olusturuyoruz",
          "ScoreController Olusturuyoruz",
          "Score Ui Yazdiriyoruz",
          "GameMenu Kodlarini Duzenleyelim",
          "Ui Uzerinde Shop Olusturuyoruz Part 1",
          "Ui Uzerinde Shop Olusturuyoruz Part 2",
          "Ui Shop Islemlerini Kod ile Yapalim Part 1",
          "Ui Shop Islemlerini Kod ile Yapalim Part 2",
          "Shop Keeper Olusturuyoruz",
          "Olum Mizraklarini Olusturuyoruz",
          "Dusmanlarimizi Yerlestirelim",
          "PlayerPrefs ile Score Sakliyoruz",
          "Pc Build Alalim",
          "Anroid Build Part 1",
          "Anroid Build Part 2",
          "Anroid Build Part 3",
          "IOS Macbook Build Part 1",
          "IOS Macbook Build Part 2",
          "IOS Macbook Build Part 3",
          "IOS Pc Build"
        ],
        "Unity ve GitHub": [
          "GitHub Nedir Ne Isimize Yarar",
          "GitHub ile Unity Uygun Repository Olusturuyoruz",
          "Bilgilendirme Private Repository icin",
          "Unity Projemizi GitHub'a Verelim",
          "Unity ve GitHub Kullanimi",
          "Asset Store'dan GitHub Eklentisi Kullanimi"
        ]
      },
      "requirements": [
        "Temel düzeyde C# bilgisi, örnek, değisken nedir, Veri tipi nedir gibi bu bilgiler yeterli olacaktır. Bu bilgiler yok ise eğitim içinde bilenler icin tekrar, bilmeyenler için tekrar üstünden geçilecek bilgilerdir."
      ],
      "description": "Arkadaşlar selamlar bu kursu yapma amacım ve 2D olmasının amacı Unity'i tanımak ve C# ile ezbere dayanmayan öğretici ve açıklayıcı bir eğitim çıkarmaktır. Bu eğitimin içinde yaptıgımız bütün işlemleri kaynaklarıyla birlikte açıklayıp, anlatıyorum. Sadece Unity'e odaklanmıyoruz C# dili ve prensiplerine OOP(Object Oriented Programming) nedir, Solid prensipleri nedir ne işimize yarıyor, sürdürülebilir kod nedir, doğru kod yazımı nedir ve nasıl yazılır diye bunları eğitimimin içinde kullanıyor ve açıklıyorum. Umarım yaptığım bu eğitimden benim kadar keyif alırsınız...",
      "target_audience": [
        "Unity ile hobi veya profesyonel olarak oyun gelistiricek olan veya kariyerini bu yonde ilerletmek istiyenler icin uygun bir egitimdir."
      ]
    },
    {
      "title": "Comportamento do Jogador e Psicologia Aplicada a Games",
      "url": "https://www.udemy.com/course/como-identificar-e-fidelizar-diferentes-tipos-de-jogadores/",
      "bio": "Aprenda como identificar os diferentes tipos de jogadores e atraí-los de forma eficiente para o seu jogo.",
      "objectives": [
        "Identificar interesses, valores, preferências e os elementos que atraem pessoas a determinados tipos de jogos.",
        "Compreender a importância de fidelizar clientes, estabelecer um vínculo duradouro e manter relações de longo prazo."
      ],
      "course_content": {
        "Módulo 1 - Introdução": [
          "1.0 - O perfil psicológico dos jogadores",
          "1.1 - Segmentação de mercado",
          "1.2 - Níveis de segmentação",
          "Material Complementar: Categorias, classificações e gêneros de jogos"
        ],
        "Módulo 2 - Tipologias": [
          "2.0 - Tipologia de Jung",
          "2.1 - Teste MBTI",
          "2.2 - Aspectos sociais"
        ],
        "Módulo 3 - Teóricos": [
          "3.0 - Richard Bartle",
          "Teste de Bartle",
          "Material Complementar 2: Bartle's Taxonomy - What Type of Player are You?",
          "Richard Bartle Investiga: Por que Jogadores Param de Jogar?",
          "3.1 - Temperamentos de Kersey",
          "3.2 - Chris Bateman",
          "3.3 - Teste BrainHex",
          "3.4 - Limitações da teoria dos tipos",
          "3.5 - Exercicio 01"
        ],
        "Módulo 4 - Hábitos e Características": [
          "4.0 - Tipos psicológicos e preferências",
          "4.1 - Hábitos culturais",
          "4.2 - Características chave"
        ],
        "Módulo 5 - Perfis e Utilização": [
          "5.0 - Informações de perfil para a construção de um jogo",
          "5.1 - Tipologia em outros tipos de indústrias e mercados"
        ],
        "Módulo 6 - Comportamento": [
          "6.0 - Comportamento do jogador",
          "6.1 - Métricas em conjunto com a tipologia",
          "6.2 - Balanceamento dinâmico",
          "6.3 - Exercicio 02",
          "6.4 - Encerramento"
        ],
        "Conclusão": [
          "Material Complementar 3: Pesquisas e Leituras",
          "Conclusão e Agradecimentos"
        ]
      },
      "requirements": [
        "Este curso não requer conhecimento prévio de programação ou habilidade mais técnica mas é desejável que tenha familiaridade com termos e conceitos relacionados ao mundo de jogos, tecnologia e negócios digitais.",
        "Este curso não requer a instalação de nenhum programa ou ferramenta específica."
      ],
      "description": "Este curso visa identificar os diferentes tipos de jogadores que existem. A tipologia determina interesses, valores, formas de interação e preferências dos jogadores, fatores em que todo profissional precisa ficar atento ao desenvolver não somente jogos, mas também produtos, serviços, e até na construção de marcas.\nDentro desse contexto, apresentaremos um detalhamento dos modelos de compreensão do comportamento do jogador, as diferentes demandas e as possibilidades para a construção de estratégias de fidelização de usuários.\n** Este curso será atualizado constantemente pelo professor através de adição de novas aulas, atualização informações, aulas comentadas por outros especialistas da EBG, inserção de estudos de casos e exercícios práticos.",
      "target_audience": [
        "Este curso é destinado profissionais da área de jogos digitais, comunicação e negócios.",
        "Profissionais das áreas ligadas a comunicação e comportamento humano vão obter insights interessantes sobre o mercado."
      ]
    },
    {
      "title": "Unreal Engine 5 Parkour Swing System For Beginner",
      "url": "https://www.udemy.com/course/unreal-engine-5-parkour-swing-system-for-beginner/",
      "bio": "Are you ready to take your game development skills to new heights? Join our course and learn how to create ex",
      "objectives": [],
      "course_content": {
        "Swing System": [
          "Root Motion Form Adobe Mixamo",
          "Create Swing Actor",
          "Box Trace For Swing Actor",
          "Adjust Swing Land Position",
          "Falling To Swing"
        ],
        "FrontFlip System": [
          "Setup FrontFlip Animation",
          "Setup Jump Logic",
          "Obstacle Trace",
          "Optimizeation"
        ]
      },
      "requirements": [
        "Unreal Engine 5 Parkour Swing System"
      ],
      "description": "Certainly! Here’s an engaging Udemy course description for your “Unreal Engine 5 Parkour Swing System for Beginners”:\nMaster Parkour Swing System in UE5!\nAre you ready to take your game development skills to new heights? Join our FREE Udemy course and learn how to create exhilarating parkour swing mechanics using Unreal Engine 5. Learn how to create an exhilarating parkour system from scratch using Unreal Engine. Whether you’re a beginner or an experienced developer, this course covers it all\n1. Introduction to Unreal Engine 5:\n- Understanding the basics of Unreal Engine 5.\n- Navigating the UE5 interface and toolset.\n\n\n2. Blueprints Visual Scripting:\n- Creating and managing Blueprints for game logic.\n- Implementing gameplay mechanics without extensive coding.\n\n\n3. Testing and Debugging:\n- Testing your game on various mobile devices.\n- Identifying and fixing common issues and bugs.\n\n\nCourse Highlights:\nSet up character movement blueprints.\nMaster character animation\nIntegrate rope physics seamlessly.\nCreate dynamic swing animations.\nOptimize for lifelike movement.\nBuild epic gameplay mechanics\nEnroll Now: Unreal Engine 5 Parkour Swing Course\nUnlock your creativity and swing into action!\nThis course ensures that all learning objectives are realistic and achievable, providing step-by-step guidance and hands-on projects to cement your understanding.\nFeel free to customize this description further to match your style. Happy swinging and teaching!",
      "target_audience": [
        "Anyone interested in game development In Unreal Engine"
      ]
    },
    {
      "title": "Kurs Unity - podstawy tworzenia gier",
      "url": "https://www.udemy.com/course/kurs-unity-podstawy-tworzenia-gier/",
      "bio": "Kompleksowy kurs, który uczy praktycznych umiejętności projektowania gier.",
      "objectives": [
        "Dowiedz się, jak stworzyć i zaprogramować swoją własną grę 3d z wykorzystaniem Unity."
      ],
      "course_content": {
        "Wstęp": [
          "Pobieranie",
          "Instalacja",
          "Uruchomienie Edytora",
          "Interfejs",
          "Panel projektu",
          "Panel hierarchi",
          "Panel inspektor",
          "Panel scena",
          "Panel game"
        ],
        "2. Świat Unity": [
          "10. Współrzędne 2D i 3D",
          "11. Współrzędne globalne i lokalne",
          "12. Transformacje"
        ],
        "3. Modele, materiały, tekstury": [
          "13. Wbudowane obiektu 3D",
          "14. Importowanie modelu",
          "15. Asset Store",
          "16. Tekstury",
          "17. Materiały"
        ],
        "4. Teren": [
          "18. Tworzenie terenu",
          "19. Rzeźbienie terenu",
          "20. Teksturowanie terenu"
        ],
        "5. Środowisko": [
          "21. Dodawanie drzew i roślin",
          "22. Dodawanie wody mgły",
          "23. Spacer po mapie"
        ],
        "6. Światła i kamery": [
          "24. Światła",
          "25. Anatomia kamery",
          "26. Wiele kamer",
          "27. Warstwy"
        ],
        "7. Skrypty podstawy": [
          "28. Tworzenie skryptu",
          "29. Pierwszy skrypt",
          "30. Zmienne",
          "31. Zmienne publiczne i prywatne",
          "32. Operatory Arytmetyczne",
          "33. Operatory Przypisania",
          "34. Instrukcje warunkowe if i else",
          "35. Operatory porównania",
          "36. Operatory logiczne",
          "37. Pętla while",
          "38. Pętla for"
        ],
        "8. Skrypty dane wejściowe": [
          "39. Metody(funkcje)",
          "40. Metody(zwracanie wartości)",
          "41. Kontrolery",
          "42. Wczytywanie danych z osi zmiennych",
          "43. Pobieranie danych wejściowych z naciśniętego guzika",
          "44. Osie myszy",
          "45. Dostanie się ze skryptu do lokalnego komponentu obiektu",
          "46. Wyszukiwanie i dodanie obiektu do skryptu"
        ],
        "9. Kolizje": [
          "47. Bryła sztywna",
          "48. Kolider sztywny kontra wyzwalacz",
          "49. Używanie wyzwalacza"
        ],
        "10. Gra „Armata”": [
          "50. Budowanie planszy do gry „Armata”",
          "51. Programowanie gry „Armata”"
        ]
      },
      "requirements": [
        "Dla początkujący bez doświadczenia lub z małym doświadczeniem tworzenia w Unity oraz kodowania w C#."
      ],
      "description": "Czego się nauczysz ?\nJeśli lubisz gry komputerowe , a do tego jesteś kreatywną osobą, która chciałaby stworzyć własną grę, ale nie wiesz jak zacząć, to ten kurs jest dla Ciebie. W kursie Unity podstawy pokażę Ci krok po kroku jak za pomocą silnika Unity 3D samodzielnie stworzyć własną grę. W pierwszej części kursu pokaże Ci skąd pobrać i jak zainstalować bardzo dobry silnik do tworzenia gier. Zaczniesz od nauki interfejsu programu, później stworzysz pierwsze obiekty dostępne w Unity oraz podstawową scenę. W kolejnej części stworzysz teren do gry. Tutaj zaczniesz od tworzenia wyspy, gór oraz innych elementów terenu, które występują w większości gier. Następnie ustawisz obiekty i modele, dodasz wodę , niebo i mgłę.\nW kolejnym rozdziale nauczę Cię podstawowych zagadnień związanych ze skryptowaniem w języku C#. Będziesz uczyć się korzystania ze zmiennych, instrukcji, pętli, funkcji. Nauczysz się wykorzystywać w praktyce obiekty oraz komponenty Unity.\n\n\n\n\nNauczysz się obsługi Unity 3d\nZainstalujesz i ustawisz program\nPoznasz interfejs Unity\nZobaczysz na czym polega świat projektowania w Unity\nNauczysz się pracować z modelami, materiałami oraz teksturami\nStworzysz kompletny teren oraz otoczenie w grze\nPoustawiasz światła oraz kamery\nPoznasz elementy języka C#\nNauczysz się stosowania skryptów\nDodasz elementy kolizyjne\nStworzysz dwie kompletne gry\n\n\nPodstawy projektowania i programowania Unity\nTen kurs przekaże Ci fundamentalną wiedzę z zakresu projektowania własnych gier. Kurs nauczy Cię poruszania się po programie , odczytywania, obsługi komponentów obiektu oraz podstawowych instrukcji, za pomocą których będziesz w stanie robić bardziej zaawansowane projekty. Ten kurs da Ci poczucie zrozumienia programu i zasad projektowania, dzięki temu Twoja praca w Unity będzie o wiele bardziej komfortowa i swobodna.\n\n\nPierwsza prosta gra\nPo zapoznaniu się z interfejsem i przejściu podstaw programowania oraz obsługi Unity stworzysz pierwszą bardzo prostą grę, polegającą na strzelaniu z armaty w wierzę skrzyń. W tym rozdziale nauczysz się tworzenia modeli z wykorzystaniem figur, przygotowania scen kamery oraz budowy skrzyń, które będą reagowały na prawa fizyki. W tym miejscu zaprogramujesz również kontroler gracza.\n\n\nDrugi projekt - gra 3d FPS\nKońcowym etapem kursu, będzie stworzenie gry w stylu FPS. Tutaj poznasz zagadnienia związane z tworzeniem takiej gry krok po kroku. Nauczysz się tworzyć mapy z sześcianów, rozmieszczenia gracza przeciwników i apteczek na planszy. Zobaczysz jak działa skrypt typu MouseLook ( czyli swobodne rozglądanie się myszą). Stworzysz kontroler dla gracza, bardzo proste SI przeciwników. Dodasz możliwość strzelania z broni, zbierania przedmiotów, uruchamiania urządzeń. Dodatkowo utworzysz prosty interfejs gracza.",
      "target_audience": [
        "Kurs przeznaczony jest dla osób, które dopiero zaczynają przygodę z projektowaniem własnych gier i nie znają jeszcze Unity."
      ]
    },
    {
      "title": "Build Your NFT Game on WAX: Part 1 - Creating the tokens",
      "url": "https://www.udemy.com/course/blockchain-wax-token/",
      "bio": "Turn your game idea into reality! Learn to create, deploy, and manage NFT games on the WAX Blockchain with ease.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic Programming Knowledge: A comfortable understanding of programming concepts, especially in JavaScript and C++, is highly recommended.",
        "General Understanding of Blockchain: A basic grasp of blockchain technology will help, though the course includes foundational topics for beginners.",
        "Tools and Equipment: A computer with internet access, capable of running Docker and other development environments introduced in the course.",
        "Enthusiasm for Learning: A keen interest in blockchain technology and a willingness to engage with the course materials and exercises.",
        "No Prior Blockchain Experience Needed: This course is structured to welcome beginners to blockchain development, with comprehensive instructions and foundational topics."
      ],
      "description": "Embark on an unparalleled journey into the heart of NFT game development with our comprehensive course, \"Build Your NFT Game on WAX: A Complete Guide.\" This meticulously crafted learning experience is designed to transform enthusiasts, developers, and gamers into skilled creators of NFT-based games on the WAX blockchain, one of the most innovative and rapidly growing ecosystems in the digital world.\nWhy WAX?\nThe WAX blockchain is celebrated for its user-friendly approach, eco-conscious operations, and a vibrant community that's reshaping the landscape of digital collectibles and gaming. With its unique features like low transaction fees, high throughput, and a robust set of development tools, WAX stands as the premier choice for deploying blockchain games that are accessible, engaging, and sustainable.\nCourse Overview:\nStarting with the foundational principles of blockchain technology, this course delves into the specifics of the WAX platform, equipping you with the knowledge to navigate its ecosystem confidently. You'll learn the ins and outs of smart contract development, focusing on how to utilize C++ and the WaxJS library to create dynamic, interactive gaming experiences.\nAs you progress, we'll guide you through the exciting world of Non-Fungible Tokens (NFTs), teaching you how to mint, manage, and integrate these digital assets into your games. You'll discover how to use the Atomic Assets standard to represent everything from in-game items and characters to land and buildings, providing a tangible value and ownership model for your game's assets.\nYour Journey to Becoming a Game Developer:\nThrough a blend of theoretical knowledge and practical exercises, you'll embark on the journey of conceptualizing and developing your own NFT game. From designing engaging game mechanics and narratives to implementing user interfaces that captivate and retain players, this course covers every angle.\nSecurity is paramount in the blockchain space, and we dedicate a significant portion of the course to teaching you the best practices for securing your smart contracts and DApps. You'll learn about common vulnerabilities, how to audit your code, and the strategies to mitigate risks, ensuring a safe and enjoyable experience for your players.\nCapstone Project:\nThe culmination of your learning experience will be the capstone project, where you'll apply everything you've learned to design, develop, and deploy your own NFT game on the WAX blockchain. This hands-on project not only solidifies your understanding but also serves as a portfolio piece to showcase your skills to the world.\nWhy Choose This Course?\nExpert Instructors: Learn from seasoned professionals who bring years of experience in blockchain development and game design.\nCommunity and Support: Join a community of like-minded individuals where you can share ideas, collaborate on projects, and receive feedback and support.\nUp-to-Date Curriculum: Stay ahead of the curve with a curriculum that's continuously updated to reflect the latest trends, tools, and technologies in the blockchain and gaming industries.\nReal-World Application: Move beyond theory with practical exercises and a capstone project that prepares you for real-world application.\nWhether you're a budding game developer, a blockchain enthusiast, or an entrepreneur looking to explore the potential of NFTs in gaming, \"Build Your NFT Game on WAX: A Complete Guide\" offers the knowledge, tools, and community support to turn your vision into reality. Enroll now and take the first step towards leading the future of gaming on the blockchain.",
      "target_audience": [
        "Aspiring Blockchain Developers: Individuals aiming to specialize in blockchain development, with a particular interest in the WAX platform.",
        "Web and Software Developers: Developers looking to diversify their skill set into the burgeoning field of blockchain and smart contract development.",
        "Tech Entrepreneurs: Entrepreneurs interested in exploring blockchain's potential for creating innovative products, especially in the realms of NFTs, gaming, and digital collectibles.",
        "Product Managers and Designers: Professionals seeking to understand the technical aspects of blockchain to better manage and design blockchain-based applications.",
        "Blockchain Enthusiasts: Anyone with a curiosity about blockchain technology and its practical applications, looking for a hands-on and comprehensive learning experience."
      ]
    }
  ]
}