{
  "courses": [
    {
      "title": "Electronic Repair: Learn How to Test Electronic Components",
      "url": "https://www.udemy.com/course/how-to-test-complex-electronic-components-using-a-multimeter/",
      "bio": "Laptop repair course, computer repair & Basic Electronics PC Motherboard, power elecronics, Hardware Technician, IT",
      "objectives": [
        "How to check and test the most complex electronic components with a multimeter;",
        "How to test Optocouplers/Opto-isolators using the multimeter;",
        "How to test Schottky diodes using the multimeter;",
        "How to test Bridge Rectifiers using the multimeter;",
        "How to test DC Motors using the multimeter;",
        "How to test Integrated Circuits using the multimeter;",
        "How to test the TRIAC with multimeter;",
        "How to test all types of diodes on a circuit;",
        "How to test the Relays and Transformers;",
        "How to test Voltage Regulators;",
        "How to test Current Sense Resistors;",
        "How to test 3, 4 and 8 pin MOSFETs on a circuit using the multimeter;",
        "How to test SMD ceramic capacitors, SMD inductors and much more.",
        "How to test Integrated Circuits"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Electronics Components Testing Mastery": [
          "Learn how to test voltage regulators",
          "Learn how to test transformers with multimeter",
          "Learn how to test Optocouplers/Opto-isolator",
          "Learn how to test Relays using the multimeter",
          "Learn how to test any bridge rectifier/diodes",
          "Learn how to test schottky diode using the multimeter",
          "Learn how to test DC Motors with multimeter",
          "How to test Transistors/Amplifiers",
          "Learn how to test TRIAC",
          "Learn how to test switches/SMD & THT Buttons",
          "Learn how to test THT diodes using the multimeter",
          "Learn how to test inductors/coils",
          "Learn how to test Current Sense Resistor on circuit",
          "N-Channel MOSFET & P-Channel MOSFET testing",
          "Learn how to test Light Emitting Diodes, LED",
          "Learn how to test Electrolytic Capacitors",
          "Learn how to check circuits Continuity with multimeter",
          "Learn how to test Ceramic capacitors/PF capacitors",
          "Learn how to test Integrated Circuits ICs",
          "Learn how to test diodes-Theorical-",
          "How to test Zener diodes using a multimeter",
          "Learn how to test SMD diodes",
          "Learn how to test 8 pins MOSFETs using the multimeter",
          "Learn how to test 8 pins MOSFETs part 2"
        ]
      },
      "requirements": [
        "Electronics basics;",
        "You will learn everything you need to know about how to test electronic components step by step."
      ],
      "description": "Important Note:\nThe course will be updated and supplemented with videos on how to measure new electronic components on an ongoing basis, until it encompasses all the electronic components that currently exist.\n28 Reasons why you should choose this course.\nThe course will teach you Everything about how to test electronic components using the multimeter.\nThe course is created with perfect care by a computer and electronics engineer.\nThe course is not long so you can complete it quickly.\nYour inquiries will be answered in a short time with a full explanation of any questions.\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course.\nYou are going to learn how to test MOSFET transistors.\nYou are going to learn how to test Optocouplers or Opto-isolators using the multimeter.\nYou will learn how to test all types of Schottky diodes.\nYou are going to learn how to test the Bridge Rectifiers.\nYou are going to learn how to test the TRIAC using the multimeter.\nYou are going to learn how to test Integrated circuits on a circuit.\nYou will learn how to test the Relays.\nYou will also learn how to test DC Motors using the multimeter.\nYou are going to learn how to test Transformers and Voltage regulators using the multimeter.\nYou are going to learn how to test Current Sense Resistors with the multimeter.\nYou will learn how to test all types of MOSFETs, including 3-pin MOSFETs, 4-pin MOSFETs, and 8-pin MOSFETs;\nYou will learn how to test Electrolytic Capacitors and Tantalum Capacitors.\nYou will learn N-Channel MOSFET & P-Channel MOSFET testing.\nYou are going to learn how to check Continuity on a circuit using the multimeter.\nYou will also learn how to test Ceramic capacitors, Zener diodes, and LEDs.\nWe are also going to see how to test switches/SMD & THT Buttons\nYou are going to learn how to test SMD Inductors.\nYou will learn how to use a digital multimeter.\nYou are going to learn how to test surface-mount devices.\nYou are going to learn how to test Through-Hole Technology components.\nYou are going to learn many tips, secrets, and tricks about testing components and much more.\nThis course will transform you from a beginner to a Pro.\nThe  main Topics that we will be discussing in this course are :\nHow to test the most complex electronics components using the multimeter.\nHow to use the Multimeter correctly.\nYou will also learn many tips and tricks that will make you a hardware professional and give you a deep understanding of how to test electronic components.\nI will guide you step by step with an easy explanation of this course.\nIf you are interested in one of the points we discussed before, this course is for you.\nWhat are you waiting for?\nEnroll now and join us.\nI'd love to see you in the class.",
      "target_audience": [
        "Any student, technician, or engineer who wants to learn and master how to test electronic components."
      ]
    },
    {
      "title": "Cognex In-Sight Machine Vision Industrial Development SCADA",
      "url": "https://www.udemy.com/course/cognex-in-sight-machine-vision-industrial-development-scada/",
      "bio": "Programming Guide of Cognex In-Sight Machine Vision Systems in Easy Builder - PLC Automation SCADA Development HMI",
      "objectives": [
        "Understand different applications of vision systems.",
        "Be able to deploy a Cognex In-Sight application into a manufacturing environment.",
        "Detect defects, take measurements and inspect products.",
        "Configure a Cognex camera, wire it into a set of IO, program it on a PLC & install a fully functional system."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of industrial control systems & circuits.",
        "Basic understanding of computer software, ability to install programs and follow software based instructions.",
        "Optional - Access to a Cognex In-Sight camera system (~200$ on eBay)."
      ],
      "description": "In this class, you will be learning about vision systems, their purpose within a manufacturing setting as well as how to develop an application for a Cognex In-Sight Machine Vision System.\nWe will start by learning the typical ways machine vision systems are employed in todays manufacturing. \"Why are they needed?\", \"How do they operate?\" as well as \"What are their capabilities?\" will be some of the topics we will explore.\nWe will then take a deep dive into the hardware involved within the Cognex In-Sight ecosystem. We will go over the setup you'd need to achieve in order to properly install one of these vision systems on the manufacturing floor, pass signals back and fourth and be able to communicate with it in a reliable fashion. As we progress through the next sections, we will revisit some of our initial hardware considerations and explore them further.\nThe core of the class will be spent learning about the In-Sight explorer application. This tool allows a vision systems programmer to create, troubleshoot and modify existing vision system applications. As we progress through the course, you will become familiar with the different tools & techniques at your disposal and which role they will play in your environment.\nAt the end of each section, you will face a brief quiz which will test your knowledge and make sure that you're getting the most out of the material covered within the class.\nWhat are the requirements for the class?\nYou don't need any hardware or software to follow the lectures, however, Cognex provides a free software package as well as an emulator which you may use to practice.\nThe hardware we will be utilizing within the course can be purchased on Ebay at around 200-500$USD. It's not required, but does give you an opportunity for hands on practice.\nWhat can I expect from this class?\nYou will know how to wire in the Cognex In-Sight Camera Hardware\nYou will know how to establish communication with the Cognex Camera in In-Sight Explorer\nYou will know how to create a new application in Easy Builder.\nYou will know how to utilize most of programming tools within Easy Builder.\nYou will know how to troubleshoot and tweak the application in order to meet the specific needs you may have.\nYou will know how to properly setup inputs & outputs for the Cognex camera application.\nWhat is the target audience for the class?\nTechnicians who work with Vision Systems.\nElectrical Engineers who work with Vision Systems.\nManufacturing personnel who's exposed to or looking to learn how to work with vision systems.\nManagers & Supervisors of those who work with vision systems.",
      "target_audience": [
        "Anyone who's interested in learning about industrial machine vision & its current applications & capabilities.",
        "A controls engineer or technician who's looking to learn about vision systems, how they work and how to use them in their job.",
        "Anyone who is currently working with or is going to work with vision systems within the scope of their position.",
        "Anyone who's curious about the capabilities of an industrial vision system and the role they play in manufacturing."
      ]
    },
    {
      "title": "Introduction to Internet of Things(IoT) using Arduino",
      "url": "https://www.udemy.com/course/introduction-to-internet-of-things-iot-using-arduino/",
      "bio": "Learn how to implement the communication between smartphones and also to control various home appliances wirelessly.",
      "objectives": [
        "Receive data from Arduino over Bluetooth serial using HC-06 Bluetooth module.",
        "Send voice commands to Arduino.",
        "Implement the communication between smart phones and home appliances.",
        "Improve technology used in a home.",
        "Use Android Device to wirelessly control electrical outlets using relay switches in order to prevent wastage of electricity."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Internet of Things(IoT)"
        ],
        "Detailed description of the hardware components": [
          "Controlling home appliances using Arduino with relay module in detail",
          "Bluetooth HC-06 key features and pin configuration",
          "Bluetooth networking"
        ],
        "Testing the Relay module": [
          "Project concept - Hardware requirements and Testing the Relay module",
          "Circuit Diagram_Testing the Relay module",
          "Source code_Testing the Relay module",
          "Internet of Things"
        ],
        "Home Automation(IoT)": [
          "Home Automation - Initiating the setup function",
          "Home Automation - Defining the condition and declaring the Voice commands",
          "Home Automation - Define voice commands and Compiling the code",
          "Home Automation - Error dubugging and Uploading the code into Arduino",
          "Programming",
          "Setting up the Home appliances and Explaning the circuit diagram",
          "Circuit Diagram",
          "Source code of the project",
          "Real time demostration - Mobile app download and Connect to the device"
        ],
        "Bonus Content : IoT: Ethernet Shield using Blynk app": [
          "Bonus Content: Ethernet shield for Arduino",
          "Bonus Content : Ethernet shield for Arduino: Blynk app account creation",
          "Bonus Content : Ethernet shield for Arduino: Authentication Token",
          "Bonus Content : Circuit diagram",
          "Bonus Content : Source code of the project"
        ]
      },
      "requirements": [
        "Pre-Installed Arduino programming environment.",
        "Complete Arduino kit."
      ],
      "description": "#1 IoT using Arduino course on Udemy, in terms of students (over 600)\n#1 IoT using Arduino course on Udemy, in terms of reviews (8)\n#1 IoT using Arduino course on udemy, in terms of 5 star reviews (8)\nBonus content added regularly. Latest update on 17-Nov-15. We will keep adding new content, so that our students have something to look forward to\nAll our students (Makerdemy brand) get VIP pricing ($8) for all our new courses. We have 10 courses under our brand and will be releasing a new course every 2 months.\n____________________________________________________________________\n\nThis is an introductory course on Internet of Things (IoT). However, this is not an introductory course on Arduino. Arduino is one of the cost effective boards you can purchase & start programming with to interact with physical elements using logic & create results the way you want it. It can be used in your Engineering projects, Industrial Projects and Home Automation related projects.\n\nThis course is ideal for those who are interested in exploring the possibilities of Internet of Things using Arduino. The course lesson will explain “How to work on IoT using Arduino\".\nIf you are a technology enthusiast and want to learn the cutting edge technology then this is the right course for you.\nIn this course you will learn how to implement the communication between smart phones and home appliances using Arduino to control the home appliances. This project is significant to reduce wastage of electricity, Improve technology used in a home, to provide convenience, security and increased quality of life and help you to use various wireless technologies.\nYou will learn how to use Android device to wirelessly control electrical outlets using relay switches in order to prevent wastage of electricity. How to configure your Bluetooth module to operate in the communication speed used in the Arduino.\nAndroid app to help you control the pins of your Arduino Uno from your Android phone wirelessly.\nApp employs a simple Android user interface to\n1) Control Arduino Uno's digital and PWM pins\n2) Send text commands to Arduino\n3) Receive data from Arduino over Bluetooth serial using the ever popular and really cheap HC-06 Bluetooth over serial module.\nThis project can be used to control various Home Appliances. And we can control device from a long distance, thus it gives ease of access. Faster operation and efficient. No need to carry separate remote or any other controlling unit.\nIn this project, a Relay and Bluetooth module is connected with Home appliances and is powered by Arduino which using Android app we can send commands to the Arduino to control the home appliances.\nI will teach you step by step how to go about building this project. I will also share the code with you so that you can replicate the project yourself.\nAt the end of the course, you'll be fully familiarized with Arduino and ready to build your own home appliances. If you're interested in Arduino, or microcontrollers in general, and don't know where to Start - you've found the perfect course. I look forward to you joining this course. It provides the complete source code of the real time project. You will have a firm foundation on Internet of Things using Arduino. You can easily climb the stairs of IoT advance projects.\nWhat are you waiting for? Enroll now!",
      "target_audience": [
        "This course is for anyone who is interested in learning about Internet of Things(IoT). The course does not require any prior knowledge about Arduino.",
        "It’s designed to introduce the Internet Of Things(IoT) using Arduino programming environment to get you started on building projects."
      ]
    },
    {
      "title": "Foundation of Embedded Systems with ARM Cortex and STM32",
      "url": "https://www.udemy.com/course/cortex-m/",
      "bio": "A 14 day proven course to a higher paying career in embedded systems, with deep understanding of ARM Cortex and STM32",
      "objectives": [
        "In-depth understanding of the ARM Cortex fundamentals",
        "Set up a free and open source toolchain on your computer to program, flash and debug ARM based microcontrollers",
        "Core register functionality like stack pointers, link registers, program counters, control registers, vector tables",
        "Understand different types of exceptions on the ARM Cortex-M processor and what each of them mean",
        "Understand different peripherals and how to program them",
        "Hardware Abstraction Layer (HAL) Libraries and how to use them",
        "Feel confident and comfortable programming applications on the Cortex-M platform",
        "What is a programmers model and how it works for an ARM Cortex-M",
        "Unprivileged and privileged software execution levels",
        "Vector Table Offset Register (VTOR) and its uses",
        "Big Endian Format vs Little Endian Format",
        "OpenOCD (Open source debugger)",
        "STCubeMX Application and how to generate HAL drivers"
      ],
      "course_content": {
        "Course basics": [
          "Important points before you get started"
        ],
        "Cortex-M Introduction and Architecture Overview": [
          "ARM Cortex Family",
          "Cortex-M Family",
          "Cortex-M4 Instruction Set",
          "ARM vs Thumb instructions quiz",
          "Guidelines",
          "Overview of the Nucleo F303RE board",
          "Reference Documents"
        ],
        "Cortex-M Programmer's Model": [
          "Programmer's Model",
          "General Registers and Process Specific Registers",
          "Special Registers",
          "Lab Session #1 - Programmers Model - General and Special Registers",
          "Programmers Model Quiz",
          "Lab Session #2 - Programmers Model - xPSR and Control Register"
        ],
        "Cortex-M Exception Model, Vector Table and VTOR": [
          "Exception Model and Vector Table",
          "Lab Session #3 - Reset Exception Handler and the Vector Table",
          "Vector Table Offset Register (VTOR)",
          "Lab Session #4 - Using VTOR to move vector table to SRAM",
          "Exception Model Quiz"
        ],
        "Cortex-M Core Blocks": [
          "Core Blocks inside the ARM microcontroller",
          "Big Endian vs Little Endian",
          "STM32F3x System Overview, Bus Interface"
        ],
        "How to choose the right microcontroller for your application": [
          "How to choose a microcontroller for your project",
          "Powering up a microcontroller on a breadboard"
        ],
        "Peripherals of the microcontroller": [
          "Timers and counters",
          "Prescalers",
          "PLL - Phase lock loop",
          "ADC - analog to digital converters",
          "DAC - Digital to analog converters",
          "I/O ports",
          "AC - Analog comparators"
        ],
        "Special features of a microcontroller": [
          "Interrupts",
          "Reset sequence and watchdog timer",
          "JTAG - Joint Test Action Group"
        ],
        "LAB: Windows, Mac, Linux - Development environment setup": [
          "Setting up the development environment"
        ],
        "LAB: UART driver development": [
          "A deep dive into UART and its implementation"
        ]
      },
      "requirements": [
        "Basic knowledge of embedded systems",
        "STM32 Nucleo development board is recommended, but not mandatory",
        "Eager to learn about ARM Cortex-M fundamentals"
      ],
      "description": "✓ Do you like working with microcontrollers, sensors, and other embedded devices?\n✓ Do you want a successful career in embedded systems, but can't find the right resources?\n✓ Are you preparing for a job interview in embedded systems?\n✓ Do you already have a career in embedded systems, but want to start working on more engaging projects?\n\n\nThis course on the \"Foundations of embedded systems with ARM Cortex and STM32\" is the right choice. Try it for 30 days with a no questions asked, money back guarantee, and you will thank yourself for making the right decision.\n\nYour instructor\nYou will be learning the material from the best of the best in the industry. Akshay has over 10+ years of solid experience and has worked for companies like Tesla, on crucial projects for the Model S, X and 3 cars.\nHe has a passion for teaching, and once you've experienced his teaching style, it is hard to go anywhere else. He is patient with students, and understands the learning journey you will go through, and will be there to guide you along the way.\nAkshay has been teaching since his first years at University and as won awards in teaching and entrepreneurship.\n\n\nIn one sentence, how is this course different from other embedded systems courses?\nIf you are looking for a course that is built from the ground-up with quality in mind, proven to make you successful in embedded systems, this is it.\n\n\nWhat hardware is needed for this course?\nThe instructor is using a STM32 Nucleo development board for this course. However, you are free to choose any ARM Cortex board you wish to. The learning from the content is transferable across different platforms.\nYou can choose to develop on Windows, Linux or Mac as per your preference. All 3 are supported in this course.\n\n\nYour 14 day journey to success\nWe recommend spreading out the content of the course over 14 days as it has proven to maximise your learning, giving you a chance to absorb the information and practice hands-on as you go.\n\nSection 1 - You will learn about the ARM Cortex architecture. Understanding this will allow you to select the right microcontroller for your project. With the deep understanding of ARM Cortex architecture, you will also be able to debug applications like a pro!\n\nSection 2 - The ARM Cortex programmers model, is hardly taught anywhere but such a crucial piece to understanding how the processor functions and how the C code that you write interfaces with the hardware after compilation.\n\nSection 3 - The ARM Cortex exception model and vector table is an important step to understanding how the working of the processor when things don't go as intended. In embedded systems, exceptions need to be handled elegantly in order to produce a safe functioning product!\n\nSection 4 - ARM Cortex blocks like the System Control Block, Floating point unit, bus interfaces will be covered. This will give you an understanding of how core blocks inside the microcontroller are connected to each other and their usefulness.\n\nSection 5 - The first and an important step for a project is to be able to choose the right microcontroller. You will need to take all sorts of considerations into mind before making the choice. Making the right choice here will make your project successful in the short term and the long term as well.\n\nSection 6 - Peripherals let the processor talk to the outside world. When developing applications for microcontrollers, every project you will work on will interface to one or more of these peripherals. Having this understanding will allow you to successfully interface devices with the microcontroller.\n\nSection 7 - Special features of the microcontroller, go through 3 unique features that you will most likely be interfacing with in your projects.\nSection 8 - Hands-on lab to set up your computer with a development environment that will run on Windows, Linux or Mac. Having this setup will allow you to work on the lab exercises in this course and on your projects after course completion.\nSection 9 - Understanding UART communication is immensely important, and almost every embedded job interview will ask you a question about it. You will be able to become a pro at UART and interface all kinds of devices with the microcontroller after working on the lab exercises included with the course.\nSection 10 - I2C communication runs over 2 wires and is used extensively in a lot of embeded devices. The lectures and timed challenge lab exercise for I2C will train you to be a professional in this communication interface. Having this understanding will allow you to interface with millions of I2C devices available in the market and use them for your projects.\nSection 11 - GPIO is a peripheral that will definitely be in every single application you work on. With the hands-on learning in this section, you will understand different ways in which ports and pins can be setup to allow you to interface various types of devices with the GPIO peripheral.\nSection 12 - DAC and TIM peripherals will open the world of timing, and digital to analog conversion for you. This is an extensive area where microcontrollers are used and the lab exercises included in this section will give you an excellent understanding of how these two peripherals can be used in your custom application.\nSection 13 - These days we just download an IDE and are good to go. But have you ever wondered what the different components inside an IDE (Integrated development environment) are? Going through these exercises will allow you to get that understanding which will make debugging so much easier going forward. Understanding the development environment from ground-up allows you to be confident when things go wrong.\nSection 14 - We talk about the next steps and a continued learning program to allow you to take the learnings from this course and continue to apply them in future projects. We also talk about how you can use the information learned in this course to guarantee a successful career in embedded systems.",
      "target_audience": [
        "An embedded systems enthusiast, professional or student who is struggling to start programming on the ARM Cortex-M platform",
        "Worked with Arduino before, and has basic working knowledge of embedded systems",
        "Worked with 8-bit and 16-bit microcontrollers and want to venture into the world of 32-bit microcontrollers",
        "Already been working with ARM Cortex microcontrollers and want to gain a deeper understanding of the processor’s fundamentals"
      ]
    },
    {
      "title": "Node-Red Design With Siemens S7-1200 PLC ( IoT Application)",
      "url": "https://www.udemy.com/course/node-red-design-with-siemens-s7-1200-plc/",
      "bio": "Node-Red Design With Siemens S7-1200 PLC ( IoT Application)",
      "objectives": [
        "How to Design Node-red Dashboard , MQQT Broker , OPC UA Server, SQL database management.",
        "For beginner can take 2 week for proper understanding.",
        "Test and simulate the application before implementing in plant.",
        "Use attached project for implementing a Logical project for your plant."
      ],
      "course_content": {
        "Installation and Configuration of Software Packages": [
          "01.Installing Node-Red on Windows 11 PC",
          "What is MQQT Broker?",
          "02.Install Eclips MQQT Broker",
          "03. Test the MQQT Broker using MQQT Box",
          "04. how to manage and Install Node-Red Palette"
        ],
        "Configuration and Communication between Node-Red and Siemens S7-1200": [
          "05. S7-1200 PLC Configuration (check attachment)",
          "07. Read PLC Data to Node-Red",
          "07. Write Node-red Data to PLC Data",
          "09. S7-Comm Read Node Configuration",
          "10. S7-Comm Write Node Configuration"
        ],
        "Configuration and Communication between Node-red and SQL": [
          "11. Detail installation and configuration of Microsoft SQL Server",
          "12. Configure SQL Database and Table",
          "13. Insert the Data From Node-red to SQL Server",
          "15. How to set ID in SQL Server Database",
          "16. Retrieve Data from SQL to Node-red"
        ],
        "MQQT Broker": [
          "17. MQQT Broker _Subscriber and Publisher Node Testing and Configuration",
          "MQQT Broker With SQL Server",
          "19.MQQT Beoker Username and Passwrod",
          "20.. Configure and test S7-1200 as a MQQT Client",
          "21. Publish and Subscribe the data between S7-1200 and Node-red",
          "22. WinCC Professional to node-red using string conversion method",
          "23. APPLICATION _subscribe and publish data from Android APP to s7-1200 PLC"
        ],
        "OPC-UA Server Application": [
          "24. Manage Pallete and Introduction to OPC UA",
          "25. Configure and Activate OPC UA Server in S7-1200",
          "26. Configure and Test Node-red with OPC UA Server"
        ],
        "Dashboard": [
          "Dashboard _Switch_Guages_LED_Slider_Text Input",
          "Use of Dropdown Node",
          "Dashboard Notification",
          "Momentary Push-Button using Template",
          "Username and Password to Node-red Editror",
          "Username and Password to Node-red Dashboard",
          "Dashboard Numeric Input",
          "Node-red Dashboard localhost to internet"
        ],
        "Test MQQT Application using PLCSim": [
          "Test MQQT Application using PLCSim"
        ],
        "Extra Lecture -- OPC UA": [
          "Kepserver EX as OPC UA Server",
          "Kepserver OPC UA with Node-red"
        ]
      },
      "requirements": [
        "Basic Knowledge of Siemens PLC"
      ],
      "description": "Hello Friends ,\nNode-red is worldwide best tool used for Data management and Data visualization.  Nowadays Node-red is also accepted in Many industries as there main dashboard. Node-red is cost effective tool as it is developed by IBM for free open source.\n\n\nIn this course Siemens S7-1200 PLC is used for many ways communication to node-red . I have use Direct nod communication , MQQT broker , OPC Communication to get data to and from. For MQQT broker I am using Eclipse MQQT broker.\nFor OPC UA Communication I have Programmed Siemens S7-1200 PLC as OPC UA Server. Also Informed How we can test OPC UA Data in UA expert software. In this we have used ngrok software to transfer our data from localhost to internet.\nAlso explain how we can control our MQQT broker through mobile , which can be directly used for IOT application.\nAlso explain how we can provide Node-red editor and Dashboard username and password and can be used as best security option. For Node-red database management I have used  microsoft SQL Server and  Microsoft SQL Management Studio.\nAlso explain how to install SQL database  and all other function like create database , create Table , insert , update  is also explain.\nFor data visualization I have used dashboard node which has wide range of feature.\n\n\nThis course will very useful in the field of IOT application.",
      "target_audience": [
        "Beginner For Node-red learner and IOT application developer."
      ]
    },
    {
      "title": "Simulink Embedded Coder for Automatic C Code Generation",
      "url": "https://www.udemy.com/course/simulink-matlab-embedded-coder-for-automatic-c-code-generation/",
      "bio": "Embedded Compiler Generate C and C++ code optimized for embedded systems.",
      "objectives": [
        "You will learn how to use Embedded Coder in Matlab Simulink to generate C code for your embedded target device",
        "You will learn how to start a new project and deal with STM32CubeMX",
        "You will learn how to create a Model in Matlab Simulink",
        "You will learn how to automatically generate C code from a model.",
        "You will also learn how to use Simulink to create an embedded system that can be used in a project.",
        "You will learn how to start a new project and use IAR Development Environment",
        "You will learn how to automatically generate C code from a model.",
        "You will also learn how to create an embedded system that can be used in a project."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Embedded Coder Features",
          "Model-Based Design and Code Generation Fundamentals",
          "Download and Install Matlab",
          "Build your first Model with Simulink",
          "Introduction and Getting Started with Simulink Embedded Coder",
          "Using Embedded Coder for the First Time",
          "Exporting Your C Code files into a ZIP File",
          "Creating New Project in STM32CubeMX",
          "Finishing Up the Project using IAR",
          "Final Testing",
          "Using Embedded Coder and Integrating with STM32CubeMX and IAR",
          "Building and Exporting Your First Simulink Model"
        ],
        "Arduino Programing without Coding": [
          "Introduction",
          "Hardware and Software Requirements",
          "Programming without Coding Software",
          "Download and Install Programming Software",
          "Introduction to Programming Without Coding",
          "User Interface",
          "User Interface In Details",
          "Blink Led Example with One Click",
          "Upload Code to test Blink Led Example",
          "Understanding User Interface and Blinking LED Example",
          "Turn ON LED With a Push Button",
          "Serial Monitor Feature",
          "Read Analog Sensor Value",
          "Infrared Obstacle Avoidance Practical Example",
          "Practical Applications with LED, Push Button, Serial Monitor, and Sensors",
          "Connect Components Together",
          "Testing Avoidance Sensor",
          "Ledbar counter encoder shift register",
          "Component Connections and Sensor Testing",
          "Programming Arduino Using a GUI-Based Tool"
        ],
        "Practice Test": [
          "Simulink Embedded Coder Essentials - Practice Test"
        ],
        "Course Project": [
          "Course Project",
          "Embedded C Code Generation from Simulink Model"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A basic understanding of accounting principles.",
        "Laptop/ computer",
        "Knowledge of the C programming language."
      ],
      "description": "Introduction:\nThis course is designed to teach students how to use Simulink Embedded Coder to automatically generate C code from Simulink models. Students will learn how to configure the code generator, specify target hardware, and generate executable code. They will also learn how to debug and optimize embedded applications.\nUnderstanding how Embedded Coder works under the hood, how to troubleshoot and optimize generated code Embedded Coder, and Embedded System prototyping tools allows someone to understand its impact on subsystems and topologies during coding. You can learn how to optimize the generated code as necessary to preserve the efficiency of the Embedded System.\nExplore different aspects of code generation such as target hardware, compilation settings, and debugging. Embedded Coder generates C and C++ code optimized for embedded systems by extending the capabilities offered by MATLAB coder in Simulink coder. The generated code is ANSI and ISO C compliant, so it can run on virtually any fixed or floating-point device and is particularly well-suited for applications that need to minimize memory usage or maximize speed. You can replace the default code output with target-specific optimizations and customizations using code replacement libraries.\nWhat Will You Learn in This Course?\nHow to use Embedded Coder in MATLAB Simulink to generate C code for your embedded target device.\nHow to start a new project and deal with STM32CubeMX.\nHow to create a model in MATLAB Simulink.\nHow to automatically generate C code from a model.\nHow to use Simulink to create an embedded system that can be used in a project.\nLearn to configure for code generation.\nLearn optimizing and packaging code.\nLearn what Simulink is.\nLearn about MATLAB.\nLearn what an Embedded Coder is.\nLearn how to generate code for your MATLAB files and functions.\nLearn to select your processor and code generation output.\nSupported Hardware:\nSTMicroelectronics\nAnalog Devices®\nARM\nAUTOSAR\nBeagleBoard\nIntel\nDronecode\nTexas Instruments\nWind River\nXilinx\nCourse Benefits:\nCode Commenting Made Easy: As any experienced programmer knows, commenting on code is essential for two main reasons. First, it allows other developers (or yourself, when you return to old code) to more easily understand the purpose of various sections of code. Second, comments can act as documentation for how a system is supposed to work. Comments can also help with debugging by allowing you to insert print statements in key places in your code that will help you track down errors.\nGenerate Powerful Code Automatically: Simulink Embedded Coder automatically generates consistent, readable, and portable C/C++ code from Simulink diagrams, Stateflow charts, and MATLAB functions. You can optimize generated code for improved performance and minimize memory footprint with just a few clicks. The software also provides tools for commenting, tracing, and documenting code so that you can more easily share and maintain your designs.\nTraceability and Optimization: Commenting, tracing, and documenting code is important for creating readable and maintainable code. Simulink Embedded Coder can help to ensure that your code is well-documented and easy to follow. In addition, Simulink Embedded Coder can optimize your code for performance, making it more efficient.\nCourse Outline:\nSelecting Targets\nWorking with Custom Data\nOptimizing and Packaging Code\nCommenting, Tracing, and Documenting Code\nExecuting and Verifying Code\nAutomate your embedded software development process with Simulink and Coder.\nEnroll in the course now!\nWhat You Will Learn:\nUnderstanding the use of Simulink Embedded Coder for automatic C code generation.\nLearning to configure and optimize the code generation process.\nDeveloping and debugging embedded applications using Simulink.\nPractical applications and projects using Simulink and Embedded Coder.\nWho This Course is For:\nBeginners to Simulink and MATLAB.\nEmbedded systems engineers looking to optimize their code generation process.\nStudents and professionals wanting to deepen their understanding of automatic C code generation.\nAnyone interested in improving their embedded systems development skills.\nRequirements:\nBasic understanding of electronics and programming is helpful but not required.\nA desire to learn and explore Simulink and MATLAB capabilities.\n\n\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is a leading team in the Microcontroller Industry, with over 13 years of experience in teaching and practical projects. We strive to share our hands-on experience in these courses, providing step-by-step blueprints on taming both simple and complex topics in easy-to-digest bite-sized videos.\nAshraf:\nEducator, Mechatronics engineer, electronics and programming hobbyist, and Maker.\nCreator of online video courses on the EduEng YouTube Channel with over 4 million views and 20k+ subscribers.\nAuthor of four Microcontroller books.\nFounder and Chief Educational Engineer at Educational Engineering Team.\nPassionate about exploring new trends and technology, and helping educate the world.\nOur online courses have helped over 250,000 people worldwide to improve their skills and careers in the industry.\nCall to Action: Join us and start mastering Simulink Embedded Coder for automatic C code generation today! Enroll now and streamline your embedded systems development process.\nFAQ:\nWhat is Simulink Embedded Coder?\nSimulink Embedded Coder is a tool that automatically generates C and C++ code from Simulink models.\nDo I need prior experience to take this course?\nNo prior experience with Simulink or Embedded Coder is needed; this course is designed for beginners.\nWhat will I learn in this course?\nYou will learn how to use Simulink Embedded Coder to generate and optimize C code for embedded systems.",
      "target_audience": [
        "This course is for anyone who wants to learn how to use Embedded Coder in Matlab Simulink to generate C code for your embedded target device",
        "This course is designed for students who have basic experience with embedded systems.",
        "This can be for beginners who has knowledge on basic c language",
        "This course is for Embedded Hobbyist",
        "This course is for engineers"
      ]
    },
    {
      "title": "Embedded System Design with Microblaze and Vitis IDE",
      "url": "https://www.udemy.com/course/embedded-system-design-with-microblaze-and-vitis-ide/",
      "bio": "Using Xilinx Vivado Design Suite and Vitis 2020.2",
      "objectives": [
        "Embedded System Design flow with Xilinx Vitis 2020.2",
        "Designing Embedded System using Microblaze Soft Processor",
        "Development of C applications for Microblaze Devices",
        "Software and Hardware Debugging",
        "Handling Interrupts in Microblaze based designs",
        "Understanding Xilinx Drivers"
      ],
      "course_content": {
        "Installation : Vivado 2020.2": [
          "Downloading Setup File",
          "Choosing Installation Settings",
          "LIC File",
          "Adding License"
        ],
        "Getting Started": [
          "Agenda",
          "Design Flow Steps P1",
          "Design Flow Steps P2",
          "Design Flow Steps P3",
          "Fundamentals: Project Types",
          "Fundamentals P2 : Flow Navigator",
          "Fundamentals P3: Useful files in Project Directory",
          "Fundamentals P3: How to update Hardware Platform P1",
          "Fundamentals P3: How to update Hardware Platform P2",
          "TCL Script for automation",
          "Different Reporting Mechanism"
        ],
        "Simple Peripherals": [
          "Agenda",
          "Fundamentals of XIL Drivers P1",
          "Fundamentals of XIL Drivers P2",
          "Fundamentals of XIL Drivers P3",
          "Writing Data to GPIO P1",
          "Writing Data to GPIO P2",
          "Writing Data to GPIO P3",
          "Code",
          "Reading Data from GPIO P1",
          "Reading Data from GPIO P2",
          "Code",
          "Using Dual Channel of GPIO P1",
          "Using Dual Channel of GPIO P2",
          "Code",
          "Multiple Instances of GPIO P1",
          "Multiple Instances of GPIO P2",
          "Code"
        ],
        "Intermediate Peripherals": [
          "Agenda",
          "Sending Data to UART P1",
          "Sending Data to UART P2",
          "Code",
          "Receiving Data from UART",
          "Code",
          "Multiple Instance of UARTLITE P1",
          "Multiple Instance of UARTLITE P2",
          "Code",
          "Working with UART16550 P1",
          "Working with UART16550 P2",
          "Code"
        ],
        "Working with Timers": [
          "Agenda",
          "Using AXI Timer P1",
          "Using AXI Timer P2",
          "Code",
          "How we observe the Current Count Value",
          "Using Auto Reload Mode",
          "Code",
          "Using both Timers",
          "Code",
          "Using PWM : 50% Duty Cycle P1",
          "Using PWM : 50% Duty Cycle P2",
          "Using PWM : 50% Duty Cycle P3",
          "Code",
          "Varying Duty Cycle",
          "Code",
          "Fading Effect",
          "Code",
          "AXI Timebase Watchdog Timer P1",
          "AXI Timebase Watchdog Timer P2",
          "Code",
          "Mulitple Event with WDT",
          "Code"
        ],
        "Profiling": [
          "Agenda",
          "Profile with AXI Timer P1",
          "Profile with AXI Timer P2",
          "SDK Profiler P1",
          "SDK Profiler P2",
          "Code"
        ],
        "Memory Resources": [
          "Understanding Byte Addressable and Word Addressable",
          "Adding BRAM IP to Block Design",
          "BRAM Transactions using pointers",
          "BRAM Transactions using XIL_IO Drivers",
          "Code"
        ],
        "Debugging Technique": [
          "Hardware Debugging : Integrated Logic Analyzer P1",
          "Hardware Debugging : Integrated Logic Analyzer P2",
          "Hardware Debugging : Integrated Logic Analyzer P3",
          "Software Debugging : Serial Window"
        ],
        "Interrupts": [
          "Agenda",
          "Interrupt with GPIO P1",
          "Interrupt with GPIO P2",
          "Code",
          "AXI Timer Interrupt P1",
          "AXI Timer Interrupt P2",
          "Code",
          "Interrupt with WDT P1",
          "Interrupt with WDT P2",
          "Code",
          "Reset with WDT",
          "Code"
        ],
        "Building Custom AXI Peripherals for Microblaze": [
          "Agenda",
          "Create SLAVE AXI LITE Interface P1",
          "Create SLAVE AXI LITE Interface P2",
          "Adding Port to Slave AXI LITE Interface P1",
          "Adding Port to Slave AXI LITE Interface P2",
          "Adding Port to Slave AXI LITE Interface P3",
          "Create AXI Stream Interface P1",
          "Create AXI Stream Interface P2"
        ]
      },
      "requirements": [
        "Understanding of Digital Electronics",
        "Fundamentals of Computer Architecture"
      ],
      "description": "A faster Reconfigurable system makes FPGA a prominent choice for a large set of applications, but Hardware alone is incomplete without smart software synchronizing all the events fruitfully to achieve the desired Application. This course covers fundamentals of Popular Xilinx drivers viz. UART, AXI Timers, UART16550, AXI GPIO, AXI BRAM, etc. The course also illustrates the usage of the AXI interrupt controller for handling Interrupts. Also to felicitate incorporation of  Hardware accelerators with Microblaze based design few examples on building Custom AXI Peripherals are also included. Software and Hardware Debugging, Profiling fundamentals are demonstrated with Microblaze to felicitate performance measurement.\nThe Microblaze is an FPGA-based Soft Processor capable of executing single instruction per cycle with few exceptions. The MicroBlaze interconnect is reconfigurable capable of communicating with a large set of peripherals to fit most of the medium-scale applications. It allows configuration of cache size, pipeline depth, peripherals, memory management unit, and bus interface suitable to fit different application requirements. As systems complexities are growing day by day, Microblaze will play central role in the non-Zynq based FPGA families whereas it will be the best light-weight alternative working in tandem with the Zynq hard processor for Zynq and Ultrascale based FPGA families.",
      "target_audience": [
        "Anyone wish to build expertise in Xilinx Microblaze Devices with Xilinx Vivado and Vitis IDE",
        "Embedded System Design with FPGA Soft Processors"
      ]
    },
    {
      "title": "Professional PCB Fabrication For Everyone",
      "url": "https://www.udemy.com/course/create-pcb-design-and-fabrication-for-everyone-pcbway-pcb-design/",
      "bio": "Learn How to Manufacture Top Quality (PCB) Boards saving Time, Money and Effort by PCBWay",
      "objectives": [
        "Make PCB with Zero Experience in Electronics",
        "What are the best PCB Manufacturing Companies",
        "How to Prepare Your PCB Design for Manufacturing",
        "How to Make an Account on PCBWay",
        "Different settings Provided by Manufacturer Companies for PCB Production",
        "Placing Your Address the right way to get the PCB at your door steps",
        "Choose the right shipping method depending on your circumstances",
        "Track Your PCB",
        "Receiving Your PCB and Checking Quality"
      ],
      "course_content": {},
      "requirements": [
        "A Computer or Laptop with any operating system",
        "The Software that will be used to create the PCB Provided in the first Section (FREE)"
      ],
      "description": "Learn How to Manufacture Top Quality (PCB) Boards saving Time, Money and Effort by PCBWay\nProfessional PCB fabrication has traditionally been only available to the largest of companies, but now it is finally possible for everyone. There are a number of start-ups that offer low-cost printed circuit board fabrication and assembly services for small electronics projects. These services can be used by prototypers, hobbyists, and professionals alike. If you are interested in this, then you are in the right place.\nWelcome to this course.\nThis course will help you to Manufacture an Industrial Quality Speclized PCB Board which will help you to get started freelancing or to kickstart your project with a professional board which will save you hours of hard work, a lot of money and effort that you can invest elsewhere, so you won't have to pay hundreds of dollars to get your PCB up and ready, I'll also teach you how to get your board assembled if you don't have time to solder components.\nPrinted Circuit Board design is very interesting for any electronics geek, microcontroller programmers anyone wishing to build his own PCB. This is a step-by-step guide that will be very simple and easy to understand for beginners.\n\nNo Previous Experience + Free Grebber Viewer + Time-Saving Techniques = Perfectly Manufactured PCB Board\nThis is available for you in this course + Bonuses and additional Material.\n\n\nWhy you should take this course?\nLearn how to manufacture and process PCB boards with the help of professional software.\nThis course will show you how to design and manufacture your own PCB boards so you can save time, money, and effort.\nThe course includes detailed instructions on how to fabricate top-quality PCBs by using an affordable process that is not only effective but also easy.\nThe course is guaranteed to teach everything you need to know about PCB board fabrication so you can be successful in this industry.\nThis course is perfect to learn the basics and advanced techniques of PCB board manufacturing.\n\n\nWhat you can take advantage of after finishing this Course:\n1. PCB prototyping and manufacturing\nFR-4 and Aluminum boards, also advanced PCB like Rogers, HDI, Flexible and Rigid-Flex boards\n2. PCB assembly\nSMT & THT assembly\n3. Layout and design\nPartnering with quality service providers to offer design services\n4. Open-source community\nStudent sponsorship shared PCB projects and so on.\n\n\nWhat You Will Learn:\nWhat are the best PCB Manufacturing Companies\nHow to Prepare Your PCB Design for Manufacturing\nHow to Make an Account on PCBWay\nDifferent settings Provided by Manufacturer Companies for PCB Production\nPlacing Your Address the right way to get the PCB at your door steps\nChoose the right shipping method depending on your circumstances\nTrack Your PCB\nReceiving Your PCB and Checking Quality",
      "target_audience": [
        "Circuit Designers",
        "PCB Designers",
        "Electronics Geeks",
        "Circuits Creators"
      ]
    },
    {
      "title": "Building Custom AXI Interface Peripherals for ZYNQ Devices",
      "url": "https://www.udemy.com/course/custom-axi-interface-zynq-peripherals-for-newbie/",
      "bio": "All about AXI Slave Lite and AXI Stream Interface",
      "objectives": [
        "Building custom AXI Slave Lite Interface",
        "Handling Interrupts with Custom AXI Slave Lite Interface",
        "Creating Custom AXI Stream Interface with Vivado Template",
        "Building Custom AXI Stream Interface with Verilog RTL",
        "Writing Drivers for Custom AXI Interface",
        "Interfacing of Custom AXI Interface with Zynq devices"
      ],
      "course_content": {
        "Section 0 : Course Framework": [
          "Interface Type",
          "Course Framework"
        ],
        "Building AXI Slave Lite Interface : Using Vivado Template without I/O ports": [
          "Agenda",
          "Slave Lite Interface without I/O Ports P1 : Creating IP",
          "Slave Lite Interface without I/O Ports P2 : Creating IP",
          "Slave Lite Interface without I/O Ports P3 : Creating IP",
          "Slave Lite Interface without I/O Ports P4 : Creating C Application",
          "Slave Lite Interface without I/O Ports P5 : Creating C Application",
          "C Code"
        ],
        "Building AXI Slave Lite Interface : Using Vivado Template with I/O ports": [
          "Agenda",
          "Adding Output port to Slave Lite Interface P1",
          "Adding Output port to Slave Lite Interface P2",
          "Adding Output port to Slave Lite Interface P3",
          "Adding Input and Output ports to Slave Lite Interface P1",
          "Adding Input and Output ports to Slave Lite Interface P2",
          "Adding Input and Output ports to Slave Lite Interface P3"
        ],
        "Understanding AXI4-Lite Signals": [
          "Agenda",
          "Understanding Mandatory Signal: Master Write to Slave (Writing Ops) P1",
          "Understanding Mandatory Signal: Master Write to Slave (Writing Ops) P2",
          "Understanding Mandatory Signal: Master read from Slave (Reading Ops)",
          "Other Signals in Slave Lite Interface",
          "Block Design used in Demonstration",
          "Analyzing Signals on ILA Probe"
        ],
        "Adding AXI Lite Interface for existing Verilog Code": [
          "Agenda",
          "Add Existing RTL : Delay Generator P1",
          "Add Existing RTL : Delay Generator P2",
          "Adding Existing RTL : Multiplier P1",
          "Adding Existing RTL : Multiplier P2",
          "Adding Exisitng RTL : COMPLEX FSM P1"
        ],
        "Adding Interrupts to Slave Lite Interfaces": [
          "Agenda",
          "Fundamentals of Interrupt C Application",
          "Adding Interrupt with RTL P1",
          "Adding Interrupt with RTL P2",
          "Code"
        ],
        "Adding Interrupts with Vivado Template": [
          "Agenda",
          "Using Vivado Interrupt Template Code P1",
          "Using Vivado Interrupt Template Code P2",
          "Code",
          "Modifying Delay of the Vivado Interrupt Template",
          "Generating Continuous Interrupt P1",
          "Generating Continuous Interrupt P2",
          "Blinking Effect with Interrupt",
          "Code"
        ],
        "Adding Master Interface": [
          "Agenda",
          "Creating Master Interface with Vivado Template P1",
          "Creating Master Interface with Vivado Template P2",
          "Code"
        ],
        "AXI Stream Slave Interface with Vivado Template": [
          "Agenda",
          "Building AXIS Slave Interface P1",
          "Building AXIS Slave Interface P2",
          "Code",
          "Building Complex FSM with existing FSM for AXIS",
          "Code"
        ],
        "AXI Stream Master Interface with Vivado Template": [
          "Agenda",
          "Creating AXIS Master Interface P1",
          "Creating AXIS Master Interface P2",
          "Code"
        ]
      },
      "requirements": [
        "Fundamentals of Xilinx Drivers and Embedded Design Flow"
      ],
      "description": "As system complexities are growing day by day, the Zynq device alone is incapable of providing the same performance and the Pure RTL module or Programmable logic (PL) needs to be integrated along with the Zynq. As Zynq works with Advanced Extensible Peripheral (AXI), it becomes mandatory for FPGA engineers to gain a fundamental understanding of adding AXI Interface to the Verilog RTL. The AXI4 offers different variants to fit diverse application needs. Understanding of the simpler variants such as AXI Lite and AXI Stream Interface lays a foundation for building an understanding of the complex AXI4 variant such as AXI Full.\nThis course focuses on the usage of the Vivado IP Integrator and Vivado RTL integration for building the custom AXI interface for pure Verilog modules. There are four ways to achieve the addition of the AXI interface to the Verilog RTL viz. Using Vivado IP Packager, Vivado RTL Integration, Using System Generator, Using Vivado HLS. The course discusses two methodologies viz. Vivado IP Packager and Vivado RTL Integration in details with a simple example along with the demonstration of the integration of the created IP with the Zynq device. It will also discuss the creation of some basic device drivers, showing how software can be written to access the registers on the custom peripheral.",
      "target_audience": [
        "Anyone wish to build expertise in designing Custom AXI interface for Zynq Devices",
        "Developing Hardware Accelerators with Verilog RTL"
      ]
    },
    {
      "title": "STM32 Beginner Course",
      "url": "https://www.udemy.com/course/stm32-beginner-course/",
      "bio": "STM32 With HAL Libraries",
      "objectives": [
        "stm32 with the HAL library",
        "stm32 gpio, interrupt, pwm, timer, dma, uart, usb, freertos, spi, i2c"
      ],
      "course_content": {},
      "requirements": [
        "Basic understand in the C programming language"
      ],
      "description": "Hello and welcome to the stm32 course!\nMy name is Johan Svensson and I am working as an embedded developer. I’ve created this course with the aim to educate people about the stm32 products and it’s development environment.\nIf you have been using the Arduino products and maybe outgrown the development environment it offers or the microcontrollers, this course might be something for you. Stm32 has a wide range of microcontrollers which can be used for many types of applications, and stm32cubeide which is based on eclipse, is a very powerful integrated development environment and it can be used for many programming languages, as well as C and C++. By the way, Eclipse is my preferred IDE for doing development.\nDuring the course we will cover the common peripherals, such as:\nGeneral Purpose Input Output (GPIO)\nInterrupt (IRQ)\nDirect Memory Access (DMA)\nPulse Width Modulation (PWM)\nTimers\nAnalog to digital converter (ADC)\nuniversal asynchronous receiver-transmitter (UART)\nUSB Virtual COM Port\na real time operating system called FreeRTOS\nSerial Peripheral Interface (SPI)\nInter-Integrated Circuit (I2C)\nWe will use the stm32cubemx to configure the peripherals. We will program the microcontroller using the C programming language together with the STM32 HAL libraries.\nSo, who am I? I have a bachelor degree in Electrical Engineering from KTH and I have been working as an embedded developer since 2017. The two computer languages I’ve been using mostly, are C and C++, and scripting languages in Linux. I’ve also worked as a Unix and Windows administrator.\nIf you have any questions, feel free to contact me. I’ll try to answer your questions as best I can.",
      "target_audience": [
        "Developers",
        "Embedded developers",
        "Makers",
        "Arduino",
        "curious about embedded system"
      ]
    },
    {
      "title": "Learn SCADA from Scratch - Design, Program and Interface",
      "url": "https://www.udemy.com/course/learn-scada-in-a-day-starting-from-scratch/",
      "bio": "Learn and practice SCADA in open source software",
      "objectives": [
        "Install SCADA in their computer",
        "Link it to the PLC and create tags",
        "Monitor and Control PLC operations"
      ],
      "course_content": {
        "Understanding SCADA": [
          "What is SCADA?",
          "How to Download SCADA for free?",
          "Download and Install Rs Logix and Rs Linx",
          "How to link SCADA to PLC - Allen Bradley Micrologix 1400?",
          "Understanding SCADA designer platform",
          "Join our student community",
          "Updates in Industrial Internet of Things"
        ],
        "Things to know before designing SCADA Screen?": [
          "Understanding Tags"
        ],
        "Button Elements": [
          "Momentary Button",
          "Toggle Button",
          "One shot button",
          "Multistate Buttons"
        ],
        "Numeric Entry & Display Elements": [
          "Simple Lable",
          "Numeric Lable",
          "Multi-state Indicator",
          "LED Display",
          "Moving Analogue Indicator",
          "Cylindrical Tank, Level Indicators & Linear Scale",
          "Meter & Thermometer",
          "Numeric Input"
        ],
        "PLC SCADA Projects (Digital ON/OFF based)": [
          "PLC Box Sorting (1)- Understanding the Environment & SCADA Screen",
          "PLC Box Sorting (2)- Creating and Linking Tags",
          "PLC Batching (1)- Understanding the Environment and Ladder Logic",
          "PLC Batching (2)- Creating and Linking tags",
          "PLC Batching (3)- Animaitng the Level Indicators",
          "PLC Batching (4)- Monitoring Plant Status"
        ],
        "PLC SCADA Project (Analogue Based)": [
          "Controlling and Monitoring an Analogue Process- VFD Control"
        ],
        "Publishing your SCADA Project": [
          "How to publish the SCADA project?",
          "How to save SCADA Project",
          "How to link Delta PLC with Ignition SCADA via Modbus"
        ],
        "Introduction to Ignition SCADA and interfacing with PLC": [
          "Course Updated with new lectures!",
          "Downloading and Installing SCADA software",
          "Creating OPC-UA Server and adding Siemens PLC in Ignition SCADA",
          "Configuration of Siemens S7-1200 PLC to connect to SCADA",
          "Testing connection between Siemens PLC and Ignition SCADA"
        ],
        "Reading/Writing Tags between Siemens PLC and Ignition SCADA": [
          "How to make PLC tags for Siemens PLC in Ignition SCADA (1)",
          "How to make Database tags for Siemens PLC in Ignition SCADA (2)"
        ],
        "Connect Ignition SCADA to PLC Simulators": [
          "Connect Ignition SCADA to TIA Portal PLCSIM",
          "Connect Ignition SCADA to RsLogix Emulate500"
        ]
      },
      "requirements": [
        "PLC Programming at beginners level"
      ],
      "description": "We all know SCADA stands for Supervisory Control and Data Acquisition, but most of us confuse that with HMI- Human Machine Interface. SCADA is merely software whereas HMI is hardware. The advantage of SCADA is we can use a computer, install the SCADA software, and can work it like an HMI as well.\nThis course is for those who are looking for basic and advanced knowledge of SCADA. This course has high-quality video tutorials in SCADA features and elements. You will also get information on \"How to download FREE SCADA software\" and link it to your PLC.\n\nThe SCADA software which is used in this course is Ignition which can be downloaded for free from the Ignition website and can be used for a trial period of 2 hours which can be reset and used again. The PLCs which are used to interface with SCADA are Siemens S7-1200 and Micrologix 1400. However, any PLC which supports Ethernet, MODBUS, OPC UA or PROFINET can be connected to Ignition SCADA to make SCADA screens.\nIn this course, you will learn not only how to make SCADA screens but also how to log the PLC data in the database to make data analytics.\nThe following are the key features of the course:\n\nHigh-Quality Video Tutorials\nLink to download SCADA software\nPresentations to review the content\nTechnical support.\nThis course starts from the basic introduction and ends with PLC SCADA application projects. If you looking for a course to learn and apply the gained skills immediately, this course is for you! You will get a course completion certificate after completing the course.",
      "target_audience": [
        "Engineering Students",
        "Working Engineers",
        "Industrialist"
      ]
    },
    {
      "title": "No Code Raspberry Pi with Scratch 3.0",
      "url": "https://www.udemy.com/course/no-code-raspberry-pi-with-scratch-3/",
      "bio": "Learn the fundamentals of Scratch 3.0. & Use Scratch 3.0 to control Raspberry Pi to do Physical Computing projects.",
      "objectives": [
        "Learn the basic concepts of coding.",
        "What is Scratch and how to use the features offered by Scratch 3.",
        "How to do the physical computation on Pi using Scratch programming.",
        "How to make animations, games, and projects using Scratch and Raspberry Pi.",
        "Learn Scratch by implementing cool and fun projects on Raspberry Pi.",
        "Learn in-depth all the features and blocks of Scratch 3.0."
      ],
      "course_content": {
        "Getting started with Scratch": [
          "Introduction to the course",
          "What is Coding?",
          "What is Scratch?",
          "Hello, I am Raspberry Pi",
          "Ouiz 1"
        ],
        "Let's learn from 'Scratch'": [
          "A guided tour of the Scratch 3 interface",
          "Train Scratchy to greet you",
          "Exploring the Blocks: Part 1",
          "Exploring the Blocks: Part 2",
          "Exploring the Blocks: Part 3",
          "Working with Backdrop, Costumes, Sprites & Sounds",
          "Extension blocks of Scratch",
          "Assignment 1"
        ],
        "Scratchy's adventure": [
          "The Adventure begins",
          "Magic gone wrong",
          "Help Scratchy, I am lost",
          "Take me back home, Scratchy",
          "Assignment 2"
        ],
        "Raspberry Pi & Scratch 3 - A match made in heaven": [
          "Physical Computing with Raspberry Pi & Scratch 3",
          "Sensors and Actuators",
          "LED and Push Button",
          "Let there be light",
          "Motion sensor",
          "Who is there in the dark?",
          "Relay",
          "Touch sensor",
          "Home Automation",
          "Assignment 3"
        ],
        "The Fun Zone": [
          "7 Segment display",
          "A Game of Dice",
          "Break the chain",
          "Air Guitar",
          "Musical Keyboard",
          "Safe Locker - Part 1",
          "Assignment 4"
        ],
        "Think out of the Box": [
          "Sense HAT",
          "You have a reminder",
          "Let me show you the way - Part 1",
          "Let me show you the way - Part 2",
          "Be careful at the curve",
          "Greenhouse Monitoring",
          "Safe Locker - Part 2",
          "Air Brush",
          "Music Band",
          "Conclusion",
          "Assignment 5"
        ]
      },
      "requirements": [
        "To get the maximum value out of this course, you should have a curious and creative mind.",
        "Should have a good interest in learning to code."
      ],
      "description": "Update June 2022:\nHeadless Raspberry Pi Setup Update\nBill of Materials Links Update\nHello learners, Welcome to MAKERDEMY's \"No Code Raspberry Pi with Scratch 3.0.\" course. This is an introductory course on Physical Computing using Raspberry Pi & Scratch 3.0.\nIf you are a student or teacher who is a beginner at coding and is new to Raspberry Pi and physical computing and is interested in learning how to do fun and useful projects, this course is right for you.\nThis is a beginner level course, so to get the maximum value out of this course, you only will need a curious and creative mind with an interest in coding.\nThis course will teach you the basic concepts of Raspberry Pi using Scratch 3 like what is coding, what is Scratch, how to use the features of Scratch 3, how to do physical computation on Raspberry Pi using Scratch programming, and how to make animations, games, and projects using Scratch and Raspberry Pi. We will learn by implementing handpicked projects using the Raspberry Pi and the Scratch 3.0 Platform. Few of these projects include Musical Keyboard, Music Band, A game of Dice, Safe locker, Airbrush, Air guitar, Home automation, and we will even learn how to create an animation based on a storyline. For building these projects we have used peripherals like LED, Beeper, Pushbuttons, Touch sensor, PIR sensor, Relay module, 7-segment display, etc. We have also created projects using a very popular add-on board for Raspberry Pi known as the Sense HAT. We will also cover in-depth the features offered by Scratch 3.0 blocks. Throughout the course, we have provided a curated collection of resources. These resources include links to documents for in-depth learning, code, circuit diagrams, and more. Furthermore, our Instructor team has an excellent track record of answering your queries and clearing your doubts. Thus, they will be ready to answer any of your course-related questions.\nBy the end of the course, you will understand the basics of coding and how to control Raspberry Pi using Scratch. Once you have completed all the sections in the course and the course assignments, you will gain the knowledge and confidence to do your own projects using Raspberry Pi and make great animations using Scratch.\nSo, what are you waiting for?! Come, join me in this course. I’m looking forward to being your instructor and to make you step into the world of physical computing and coding.",
      "target_audience": [
        "Any student or teacher who is a beginner at coding and using Scratch programming to make amazing, fun, and exciting projects.",
        "Someone who is new to the world of Raspberry Pi and coding and is interested to learn how to do real time projects."
      ]
    },
    {
      "title": "Simple AXI bus Design using Verilog HDL",
      "url": "https://www.udemy.com/course/simple-axi-bus-design-using-verilog-hdl/",
      "bio": "AXI in easy understand",
      "objectives": [
        "Concept of AMBA bus protocol",
        "Concept of AXI Bus",
        "Design and implementation of AXI bus using Verilog HDL",
        "Verification of AXI bus"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "AMBA introduction",
          "Comparision between AHB, AXI, APB"
        ],
        "AXI bus": [
          "Introduction to AXI",
          "AXI channel Architecture of Read/writes",
          "AXI signals",
          "Handshaking signals",
          "Signal Diagram",
          "Write process Timing diagram",
          "Read process Timing diagram",
          "Dependencies between channel handshake signals"
        ],
        "Implementation of Simple AXI bus": [
          "AXI state machine for write & read",
          "AXI Master/Slave Block diagram and Write/read process"
        ],
        "Source code": [
          "Design of AXI bus using verilog HDL- write process",
          "Design of AXI bus using verilog HDL- Read process",
          "AXI master & slave",
          "Test bench & simulation"
        ]
      },
      "requirements": [
        "Verilog HDL"
      ],
      "description": "AMBA is an open standard for SoC design created by Arm to allow for high-performance, modular, and reusable designs that work right the first time while minimizing both power and silicon.\nThis course discusses the AMBA, which introduced the Advanced Extensible Interface (AXI) protocol.\nOriginally conceived for high-frequency systems, the AXI protocol was designed to meet the interface requirements for a wide range of components, while allowing for flexibility in how those components are interconnected. Suitable for high-frequency, low-latency designs, AXI remains backward compatible with the AHB and APB from the previous AMBA revision.\nUnderstanding AXI will give you deep insight into how an SoC works while making you a versatile and well-rounded designer.\n\n\nRecall that the AHB (Advanced High-Performance Bus) is a single-channel bus that multiple masters and slaves use to exchange information. A priority arbiter determines which master currently gets to use the bus, while a central decoder performs slave selection. Operations are performed in bursts that can take multiple bus cycles to complete. Every burst transfer consists of an address and control phase followed by a data phase.\nAXI was designed with a similar philosophy but uses multiple, dedicated channels for reading and writing. AXI is burst-based like its predecessor and uses a similar address and control phase before data exchange. AXI also includes several new features including out-of-order transactions, unaligned data transfers, cache support signals, and a low-power interface.\nYou can refer to AMBA AXI Protocol v1.0 for a deeper look into the AXI.",
      "target_audience": [
        "Intermediate level people who planning to going for job"
      ]
    },
    {
      "title": "Developing Humanoid Robots: From Concept to Creation | 2025",
      "url": "https://www.udemy.com/course/developing-humanoid-robots-step-by-step/",
      "bio": "Master the Art of Building Your Own Humanoid Robot Step by Step",
      "objectives": [
        "Initially, you will understand the concept of Humanoid Robot Development, exploring its essential hardware and software requirements.",
        "Subsequently, you will come to know about Arduino Nano, which will act as a central board for your Humanoid Robot.",
        "Next, you will learn about the working principles and functionalities of the Arduino Nano, Expansion Module, Servo Motors, Servo Tester, HCSR04 Sensor, etc.",
        "Next, you will proceed to install the Arduino IDE and test the main motherboard of your project, which will be your Arduino Nano.",
        "Going forward, you will understand the circuit diagrams of all the hardware components and test each hardware individually",
        "Then, you will delve into the circuit diagram of your Humanoid Robot, thoroughly understanding its components and connections.",
        "Following that, you will assemble the entire humanoid robot, utilizing all hardware components and 3D-printed parts based on the circuit diagram.",
        "Next, you will learn the main code line by line, which will be responsible for giving life to your robot and carrying out various movements.",
        "In the concluding phase, you will successfully wrap up the entire project and conduct a live demonstration to showcase the real-time output."
      ],
      "course_content": {},
      "requirements": [
        "You should have a PC with a reliable internet connection.",
        "You should be eager to learn and actively engage in the project development."
      ],
      "description": "I would like to introduce you to a brand new online course where you can learn to create a humanoid robot from scratch. This comprehensive project guides you through gathering all the necessary hardware components and assembling them to create a fully functional walking robot. Equipped with advanced features, the robot can detect and avoid obstacles autonomously, be wirelessly controlled via an infrared remote, and display all movement activities on the OLED screen. With step-by-step instructions, this course offers hands-on experience in robotics, allowing you to create and control your own innovative humanoid robot. Let me show you the demo of this exciting project.\nHere are two main reasons why you should take this course?\nImmediate Technical Support - We offer prompt technical support services, available from Monday to Saturday. Simply submit your query regarding the lecture where you're encountering difficulties, and our dedicated technical support team will respond to you as soon as possible.\nFull Stack Developer Experience - Through this project, you're not just learning a few coding techniques, but you're actually building a complete full-stack project combining hardware & software. This valuable hands-on experience is incredibly beneficial, especially for aspiring full stack developers. The skills and knowledge you gain from this course will be directly applicable to real-world scenarios and could significantly enhance your job prospects in the field of Embedded Systems and Robotics.\nI have always been a firm believer in learning by doing, and in this course, you will learn what you need to know by hands-on experience. You don’t need any special knowledge except basic computer skills to get started with this course. Every one of you comes from a different background and hence the course is crafted from basic to advanced level with minute detail in every lecture.\nTo make the learning curve easier, the entire course has been divided into 6 sections. Let's take a look at the major topics that will be covered in each section of the course.\nIn the first section, we will explore the fundamental concepts of robotics and get to know about all the hardware components required to successfully build the project.\nIn the second section, we will understand theoretical principles and concepts. We will begin by learning about the main modules of the project which is our Arduino Nano. Then we will go ahead and get to know about the Expansion Module, servo motor, servo tester, servo driver, distance sensor, OLED display, IR receiver, and transmitter. Once we've comprehended the functionality of these modules, we will focus on the pivotal software tool, the Arduino IDE. This IDE serves as our platform for coding and deploying programs onto the Arduino Nano board.\nThe third section will be our testing phase, We will kick off our journey by installing the Arduino IDE and then begin testing our main controller which is our Nano module. Next, we will proceed by connecting the Arduino Nano with our expansion module. Following this, we will write the code and verify the functionality of our RGB LED. Subsequently, we will test the Infrared sensor to ensure it correctly receives commands from an IR remote. Moving forward, we will conduct test of the distance sensor module and check its value using the measurement scale. Thereafter, we will shift our focus towards testing of the OLED module and then we will write code to display specific text on its screen. Continuing with our testing, we will individually test our servo motor using the servo tester to verify its rotation capabilities. Finally, we will conclude this section by testing all the six servo motors simultaneously using the servo driver module.\nIn the fourth section, we will first examine the main circuit diagram of our humanoid robot. Following this, we will assemble all the hardware components together and do the wiring to create a fully operational robot.\nIn the fifth section, We will thoroughly explore the coding of our humanoid robot. For your easy understanding, we have divided the code into 15 parts. Each part will be explained in detail, demonstrating the purpose and significance of every function employed.\nFinally in the sixth section, we will operate our robot using an IR remote, observe its live output, and conclude by summarizing all the knowledge gained throughout the entire course.\nEach video in the course will teach you new concepts and techniques which you may apply to any of your projects immediately. This course assumes just a basic knowledge of programming and you can leave the rest to us. I will guide you through each concept, breaking down complex ideas into step-by-step explanations.\nDon’t let technical errors hold you back from achieving your goals. If you ever need help, simply post your question in the question and answer section and our dedicated support team will get back to you within 24 hours. They are available to assist you 6 days a week, from Monday to Saturday.\nI will also share the complete source code with you, so that you can easily replicate the project. All lectures are accompanied by English subtitles, ensuring clear and comprehensive understanding.\nIn case, if you don’t like the course, don’t worry at all, you are always protected by 30 days, no questions asked, money back guarantee.\nAlright, so at the end of the day, you have got nothing to lose. So join me in this incredible journey, into the world of Robotics and take your technical skills to the next level. If you enroll now, you'll take advantage of this limited-time offer at this special price.",
      "target_audience": [
        "This course has been specifically designed with beginners in mind, making it accessible to individuals with basic knowledge of computer.",
        "If you've interests in Robotics, you're also welcomed.",
        "Whether you are just starting out or have a foundational understanding of the subject, you can confidently enroll in this course.",
        "Our curriculum takes into consideration the needs of learners at various skill levels, providing clear explanations and step-by-step guidance to ensure a smooth learning experience for everyone.",
        "Don't hesitate to join, as this course is tailored to support your learning journey from the ground up."
      ]
    },
    {
      "title": "Laptop Motherboard Repair with Schematics Course",
      "url": "https://www.udemy.com/course/how-to-repair-laptops-using-schematics-beginner-to-pro/",
      "bio": "Learn step-by-step laptop repair using schematics: power sequence, circuits, troubleshooting, and professional tips.",
      "objectives": [
        "How to troubleshoot laptop motherboard using schematics.",
        "Learn the most common faults on laptop motherboard.",
        "How to read motherboard schematics.",
        "How to track voltage using schemes on laptop motherboard.",
        "Understand motherboard circuits working principle."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laptop Repair Using Schematics": [
          "Understanding Laptop Power Sequence",
          "Understanding Laptop Power Sequence part 2",
          "19V power rail studying in laptop motherboard",
          "3V/5V system power",
          "Charge circuit studying",
          "CPU circuit studying",
          "1.8V/1.5V Power system",
          "+VCCP system power",
          "2.5 V Power system",
          "0.9V VTT Power system for RAM Terminals",
          "Thermal & FAN Controller Circuit",
          "Schematics reading & Signals Tracking",
          "Summary"
        ]
      },
      "requirements": [
        "Basics of computer hardware"
      ],
      "description": "Do you want to repair laptops like a professional technician and master the use of schematics to troubleshoot and fix motherboard issues?\nThis course will take you from beginner to pro, step by step, with clear explanations, real examples, and practical skills you can use immediately.\nWhat You’ll Learn\nHow to read and use schematics to repair laptops step by step.\nUnderstand the laptop motherboard power sequence and how signals flow.\nStudy and test 19V rails, 3V/5V systems, 1.8V/1.5V circuits, +VCCP, +VCC_Core, RAM, CPU, and more.\nIdentify and troubleshoot failed components quickly and accurately.\nAnalyze charge circuits, MOSFETs, ICs, and protection components.\nLearn multimeter techniques to test laptop circuits correctly.\nDiscover tips, secrets, and tricks used by real hardware professionals.\nWhy This Course?\nCovers everything about laptop schematics in detail.\nDesigned with care by a computer engineer.\nOne-on-one support for your questions.\nShort and practical lessons for fast learning.\nConstant updates and new tips added.\nSimple explanations with real examples.\nCertificate of completion included.\nTransforms you from a beginner to professional repair technician.\nWho Is This Course For?\nBeginners who want to start repairing laptops.\nTechnicians who want to upgrade their skills with schematics.\nStudents of electronics who want practical motherboard repair knowledge.\nAnyone interested in understanding and fixing laptop motherboards.\nBy the end of this course, you’ll confidently analyze, diagnose, and repair laptop motherboards using schematics.\nEnroll now and take the first step toward becoming a laptop repair expert.",
      "target_audience": [
        "Hardware students and technicians;",
        "Anyone who wants to understand How to troubleshoot & repair laptops using schematics"
      ]
    },
    {
      "title": "Learn Smartphone Repair Using Service Manual Diagrams",
      "url": "https://www.udemy.com/course/learn-smartphone-repair-using-service-manual-diagrams/",
      "bio": "Foundation Course of Troubleshoot Smartphone Common Faults Beginner to Intermediate (Make Money Opportunity)",
      "objectives": [
        "Learn What are a hazard and Safety Precautions you have to take before starting smartphone repair",
        "Learn The Use of Tools to Disassemble and Assemble smartphones with the help of the Internet and video websites",
        "Learn to download a smartphone service manual diagram and read it",
        "Advanced Diagnostic Techniques Learn In-depth methods and tools for diagnosing complex issues in smartphones with level 2, and level 3 Repair Techniques",
        "Learn the Function of Parts and How to Check and Test Them with Digital Multimeter",
        "Learn the Use of DC Power Supply to Test and Check Smartphones",
        "Learn Use of Tools and Equipment involved in soldering and desoldering on-circuit components and ICs",
        "Learn Customer Service Skills including Active Listening, Communication, Problem-Solving, Technical Knowledge, Time Management, and Professionalism"
      ],
      "course_content": {},
      "requirements": [
        "Internet access",
        "For this course you will need a PDF reader device this may be a phone, Computer, or Tablet for viewing PDF schematics diagrams",
        "You will also need a smartphone and its motherboard for physically seeing what we shall be talking about, this might be old, new, or probably not working condition",
        "Basic computer knowledge would be helpful",
        "Experience with smartphone screen/battery exchange would be helpful",
        "Some knowledge about soldering would be helpful"
      ],
      "description": "Whether you're a beginner looking to start a cell phone repair service or trying to save money by learning to fix your smart phone issues, this course is exactly what you need to build a solid foundation in smartphone repair.\nHi, my name is Muhammad Asif Azeemi and I have been working as a cell phone technician and teacher since 2004. As someone who has been repairing for a long time, I know the challenges of learning smartphone repairs, especially if you are learning by yourself. If you’ve thought about getting information main parts of smartphones, but don’t know where to start, this course gives you the information you need.\nWhat You Will Gain From This Course:\nThis course is prepared to provide Beginner to Intermediate in-depth knowledge starting from:\nEnables you to get prepared for Safety Precautions before starting cell phone and smartphone repair work.\nEnables you to Set up workspace for starting the phone repair.\nEnables you to examine the data from the internet for practicing disassembling, and Assembling smartphones and identifying their spare parts.\nTeaches you what service manual diagrams are and why mobile phone companies make them.\nTeaches you how to find and download a smartphone service manual diagram and how to open it for reading.\nEnables you to learn the use of In-depth methods and tools for diagnosing complex smartphone issues with level 2, and level 3 Repair Techniques.\nEnables you to examine the knowledge from the service manual diagram and diagnose the smartphone problem quickly.\nEnables you to perform common soldering and desoldering tasks on the PCB of smartphones.\nTeaches you Customer Service Skills, including:\nActive Listening\nCommunication\nProblem-Solving\nTechnical Knowledge\nTime Management\nProfessionalism\nWith practical examples. Also, will learn where to get technical knowledge to enhance your customer service skills to create the best future in the phone repair business.\nBenefits of Having The Course:\nAfter this course, you will be able to use service manual diagrams to diagnose and fix smartphone issues with earliest their brands. You will be able to fix smartphone brands like\nOppo\nSamsung\nHuawei\nXiaomi\nMediaTek Processor Smartphones\nQualcomm Processor Smartphones\nand many more.\nYou will also be able to fix complex smartphone issues like\nSmartphones that don't power on\nWater damage\nBlack Display\nAbnormal Touch or Ghost touch\nReboot during Power on\nSudden Discharge in the idle state\nAbnormal Camera\nSPK sound abnormal\nAccelerometer Sensor Problem\nWi-Fi Connection Problem\nGPS Problem\nNot charging\nand many more.\nOnce you have watched and practiced the videos from this course, you will be able to examine the parts and components of smartphones, diagnose the problem, and replace the faulty parts from the smartphones.\nSo don't hesitate whether you're a tech enthusiast, a DIY hobbyist, or simply someone who wants to understand the inner workings of their smartphone, I encourage you to join this course now and see how smartphone repair skills can change your life.\n\"Don't wait! Get started right away!\"\nDon't let your smartphone troubles hold you back any longer! Sign up now by clicking the Buy Now button at the top of this page.",
      "target_audience": [
        "Anybody that wants to Do-It-Yourself repairs",
        "Anybody that wants to fix his/her smartphone",
        "Everyone who is interested in Phone repair",
        "Anyone that wants to make money in fixing Phone hardware issues",
        "Anyone who wants to become cell phone repair technician",
        "Anyone who wants to startup smartphone repair shop",
        "Small business owners looking to expand into the smartphone repair",
        "Technology enthusiasts interested in the business side of smart phone repair",
        "Retail managers aiming to incorporate smartphone repair services",
        "Marketing professionals seeking to understand customer skills for smartphone repair",
        "Anyone who wants to work abroad",
        "Aspiring entrepreneurs eager to launch their own mobile shop",
        "All hobbyist curious people like to discover how smartphone parts and their motherboards work",
        "This course is for people who are computer repair technicians, IT specialists, and Computer science students who would like to learn level 2 and level 3 smartphone repair"
      ]
    },
    {
      "title": "Fundamentals of RISC-V architecture",
      "url": "https://www.udemy.com/course/austin-riscv1_arch/",
      "bio": "Comprehensive and practical guide of key features of RISC-V Architecture",
      "objectives": [
        "RISC-V ecosystem",
        "The use of register",
        "Assembly instruction",
        "Privilege mode and privilege level",
        "Exception handling",
        "Calling Convention"
      ],
      "course_content": {
        "Introduction": [
          "Introducing RISC-V architecture",
          "Ecosystem: RISC-V architecture",
          "Outline - Registers",
          "Outline - Assembly instructions",
          "Outline - Privilege mode",
          "Outline - Exception",
          "Outline - Calling convention"
        ],
        "Register": [
          "Overview: Registers in RISC-V",
          "The general-purpose registers",
          "CSRs (Control and Status) Register",
          "Primary CSR (Control and Status) Register"
        ],
        "T32 practice - Register": [
          "Introducing general-purpose registers (TRACE32 Practice)",
          "How the general purpose registers work (TRACE32 Practice)",
          "PC (Program Counter) with Branch operation (TRACE32 Practice)",
          "Identifying key CSRs (TRACE32 Practice)"
        ],
        "Assembly Instruction (Part1)-Introducing Assembly Instruction": [
          "Why software engineer need to learn about assembly instruction - Part1",
          "Why software engineer need to learn about assembly instruction - Part2",
          "Why software engineer need to learn about assembly instruction - Part3",
          "RISC-V instruction formats",
          "MV instruction",
          "MV instruction (TRACE32 practice)"
        ],
        "Assembly Instruction (Part2)-Arithmatic Instruction": [
          "ADD instruction",
          "ADD instruction (TRACE32 practice)",
          "SUB instruction",
          "SUB instruction (TRACE32 practice)"
        ],
        "Assembly Instruction (Part3)-Jump operation": [
          "J instruction",
          "J instruction - (TRACE32 Practice)",
          "JAL instruction",
          "JAL instruction - (TRACE32 Practice)",
          "JR instruction",
          "JALR instruction"
        ],
        "Assembly Instruction (Part4)- Conditional Jump operation": [
          "BEQ (Branch if Equal) instruction",
          "BEQ (Branch if Equal) instruction - example",
          "BNQ (Branch if NOT Equal) instruction",
          "BNEZ instruction",
          "BEQ instruction (TRACE32 practice)",
          "BEQZ instruction (TRACE32 practice)",
          "BNEZ instruction (TRACE32 practice)",
          "BLT instruction",
          "BLTZ instruction",
          "BGE instruction",
          "BGEZ instruction",
          "BLTZ instruction (TRACE32 practice)",
          "BGEZ instruction (TRACE32 practice)"
        ],
        "Assembly Instruction (Part4)-Memory Access instruction": [
          "Introducing load instruction",
          "LD instruction",
          "LW instruction",
          "The example routine: LD, LW instruction",
          "Introducing store instruction",
          "SD instruction",
          "LD and LW instruction (TRACE32 practice)",
          "SD and SW instruction (TRACE32 practice)"
        ],
        "Assembly Instruction (Part5)-Logical operation": [
          "AND instruction",
          "AND instruction (TRACE32) - Part.1",
          "AND instruction (TRACE32) - Part.2",
          "OR instruction",
          "OR instruction (TRACE32 practice)",
          "XOR instruction"
        ],
        "Assembly Instruction (Part6)-Bit Shift Operation": [
          "SLL instruction",
          "SLL instruction (TRACE32 practice)",
          "SRL instruction"
        ]
      },
      "requirements": [
        "Operating System",
        "Computer Architecture"
      ],
      "description": "What You Will Learn:\nYou will be able to confidently answer and explain RISC-V-related questions in technical interviews.\nLearn the core features of RISC-V, including registers, assembly instructions, and privilege modes.\nPractice debugging registers, assembly instructions, and privilege modes using the TRACE32 simulator program.\nUnderstand how the RISC-V architecture is used in operating system kernels like the Linux kernel.\nAnalyze startup code for bootloaders and the Linux kernel running on RISC-V-based systems.\n\n\nThe Rise of RISC-V Architecture in the System Software Industry:\nThe RISC-V architecture, an open-source CPU architecture, is gaining attention in the tech industry. You can find the following trends in IT-related news and articles:\n\n\nBig tech companies like NVIDIA, Intel, and Qualcomm are developing RISC-V-based products (chipsets).\nThe number of startups designing chips using RISC-V is increasing, and more companies are focusing on developing products based on RISC-V devices.\nRISC-V-based CPU architecture is widely used in designing AI semiconductors.\nBy 2026, 15 billion devices are expected to be launched based on RISC-V.\nGraduate schools (processor design) are conducting various research projects using toolkits to design RISC-V CPUs.\nEmbedded and system software companies are increasingly using the RISC-V CPU architecture for product development.\n\n\nFor this reason, job seekers also need to prepare for technical interviews about RISC-V.",
      "target_audience": [
        "Chipset Engineers who design and develop processors based on RISC-V architecture",
        "Embedded Software Developers working on firmware, device drivers, and low-level software for RISC-V devices",
        "System Software Engineers focused on operating systems, hypervisors, and kernel development based on the RISC-V architecture",
        "Students in computer science or electrical engineering and researchers exploring RISC-V to gain foundational knowledge and hands-on experience",
        "Professionals already working in the tech industry who want to stay ahead by learning the latest trends in processor design and software development"
      ]
    },
    {
      "title": "Learn IoT with Arduino basically and easily be professional",
      "url": "https://www.udemy.com/course/learn-iot-with-arduino-and-wemos-d1/",
      "bio": "Learn how to start programming on Wemos d1 /Wemos d1 mini with Arduino IDE",
      "objectives": [
        "how install Arduino IDE on Mac os/windows os",
        "how install driver on Mac os/windows os",
        "how install libary for all of esp8266 platform",
        "blink on wemos d1 / wemos d1 mini",
        "I/O on wemos d1 / wemos d1 mini",
        "read analog sensors on wemos d1 / wemos d1 mini",
        "read digital sensors on wemos d1 / wemos d1 mini",
        "read humidity and temperature with wemos d1 / wemos d1 mini and DHT sensors",
        "send data to the server with wemos d1 / wemos d1 mini",
        "create Access Point with wemos d1 / wemos d1 mini",
        "create Wifi Scanner with wemos d1 / wemos d1 mini",
        "control LED (Pins) from WebServer",
        "control servo from WebServer"
      ],
      "course_content": {
        "Introduction": [
          "1.Introduction"
        ],
        "Installing and Testing Wemos D1": [
          "2.Installing Arduino I.D.E and Wemos Driver",
          "3.The first program in Wemos d1 and test Wemos d1"
        ],
        "Connecting to the internet": [
          "4.MQ Sensor on Wemos D1",
          "5.DHT Sensor on Wemos D1"
        ],
        "Analog read - Digital read - DHT sensor": [
          "6.initialize the web server and send data from Wemos into our server",
          "7.Send DHT data to the server from Wemos"
        ],
        "Connecting to the Wemos D1": [
          "8.Create a Wi-Fi Access Point and Wi-Fi Scanner",
          "9.Control L.E.D in Wi-Fi Access Point Mode",
          "10.Control Servo in Wi-Fi Access Point Mode"
        ]
      },
      "requirements": [
        "This course starts from basically into the advanced  but on episode 6 we upload PHP file on server.  you must have knowledge about how upload file in your server."
      ],
      "description": "after this lessons, you can easily learn I.o.T from basic into the advanced and Make your Own I.o.T Devices\nWith these lessons, you can learn the fundamental information to build your devices in I.o.T,  including reading sensors and sending information to the server and more.\n\nThese courses are designed from the base and are without prerequisites, but for episode 6 you should have information about uploading the file on the server.",
      "target_audience": [
        "any student want to learn IoT from basic into the advanced."
      ]
    },
    {
      "title": "Computer Organization Computer Architecture Instruction Set",
      "url": "https://www.udemy.com/course/computer-organization-computer-architecture-instruction-set/",
      "bio": "Computer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials",
      "objectives": [
        "Computer Organization Computer Architecture",
        "Computer Organization",
        "Computer Architecture",
        "Instruction Set Architecture"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "what is computer organization"
        ],
        "Computer Organization": [
          "what is Difference between computer Organization and computer architecture",
          "what is basic operational concepts",
          "What is hardware parts of computer",
          "how manage personal files folder"
        ],
        "What is Computer": [
          "What is Computer",
          "Type of computers",
          "What is Computer History",
          "What is Classification of Memory",
          "What is new age of memory",
          "Computer Organization Quiz",
          "What is Cloud Computing and Virtualization"
        ],
        "What Is Information Communication Technology": [
          "What Is Information Communication Technology",
          "A Journey Through Communication Technology",
          "Exploring the Foundations of ICT",
          "The Foundation of Computing Understanding Operating Systems",
          "Types of Software System Software vs Application Software",
          "What ICT is transforming",
          "What is Cloud Computing An Introduction",
          "Computer Components A Guide for Beginners"
        ],
        "Data Representation in Computer System,": [
          "what is Data Representation",
          "Information Technology Troubleshooting Steps",
          "what is structured data"
        ],
        "What is Cache Memory": [
          "What is Cache Memory",
          "What is memory hierarchy",
          "What is Associative Mapping",
          "What is Stack Memory",
          "how check Cache Memory Performance",
          "How to Clear Cache Memory in windows"
        ],
        "What is Boolean Algebra Logic Circuits": [
          "What is Boolean Algebra Logic Circuits"
        ],
        "what is Instruction Set Architectures": [
          "what is Instruction Set Architectures",
          "What is Computer Level Hierarchy",
          "What is addressing mode direct and indirect mode"
        ],
        "What is Desktop Systems Setting": [
          "Desktop Support Intro",
          "How create user account of windows system",
          "how check recent download files",
          "how delete unwanted applications",
          "How run Defregment file on system",
          "how run disk cleanup on system",
          "Install Windows on System",
          "Recycle Bin Setting Delete and Restore File",
          "how install Printer on System",
          "how use help system Windows",
          "How to Uninstall Programs in Windows 10",
          "How to Remove Unwanted Emails from Gmail Account"
        ]
      },
      "requirements": [
        "No experience requirement"
      ],
      "description": "Computer Organization & Computer Architecture Instruction Set Architecture Tutorials\nComputer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials\nComputer organization and architecture explain all instruction of Computer define the following parts of Computer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials Computer Organization Instruction Set Architecture\nComputer Organization & Computer Architecture Instruction Set Architecture Tutorials\nComputer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials\nComputer organization and architecture explain all instruction of Computer define the following parts of Computer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials\n\n\nComputer Organization\nIn the Computer Organization define all desktop computer Organization where you learn about the hardware and software and manage your Personal Computer according your requirements and manage all file and folder can easy create Computer Organization files and folder setup for Computer Organization Computer organization and architecture explain all instruction of Computer define the following parts of Computer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials\n\n\nInstruction Set Architecture\nInstruction Set Architecture here you learn about all Instruction Set Architecture which can help you understand of the basic to advance level especially for your grow knowledge about Architecture Computer organization and architecture explain all instruction of Computer define the following parts of Computer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials Computer Architecture Computer Hardware What is Computer Organization?\n\n\nComputer Organization & Computer Architecture Instruction Set Architecture Tutorials\nComputer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials\n\n\nInstruction Set Architecture here you learn about all Instruction Set Architecture which can help you understand of the basic to advance level especially for your grow knowledge about Architecture Computer organization and architecture explain all instruction of Computer define the following parts of Computer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials\nComputer Organization Instruction Set Architecture Computer Architecture\nComputer Hardware\n\n\nWhat is Computer Organization Instruction Set Architecture here you learn about all Instruction Set Architecture which can help you understand of the basic to advance level especially for your grow knowledge about Architecture Computer organization and architecture explain all instruction of Computer define the following parts of Computer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials\n\n\nComputer Organization & Computer Architecture Instruction Set Architecture Tutorials\nComputer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials\nComputer Architecture Instruction Set Architecture here you learn about all Instruction Set Architecture which can help you understand of the basic to advance level especially for your grow knowledge about Architecture Computer organization and architecture explain all instruction of Computer define the following parts of Computer Organization & Computer Architecture Instruction Set Architecture learn Computer Hardware Tutorials Computer Hardware What is Computer Organization",
      "target_audience": [
        "Computer Architecture",
        "Computer Organization",
        "Computer Architecture Instruction",
        "Instruction Set Architecture"
      ]
    },
    {
      "title": "MSP430G2 microcontroller programming Fun and Easy way",
      "url": "https://www.udemy.com/course/msp430g2lauchpad-microcontroller-programming/",
      "bio": "learn MSP430 launchpad programming with Energia IDE like a Arduino programming - step by step guide by making projects",
      "objectives": [
        "You will be able to program MSP430 microcontroller",
        "you will be able to use MSP430G2 LaunchPad in your projects",
        "MSP430 microcontroller programming fun and easy way",
        "you will be easily able to write code for MSP430"
      ],
      "course_content": {
        "Module#1 Getting started with MSP430G2 Launchpad": [
          "Introduction to MSP430G2 Launchpad - overview of board",
          "How to download and install Energia IDE",
          "Getting started with Energia IDE and connecting your board with Energia",
          "MSP430G2 LaunchPad manual",
          "Introduction to Energeia IDE"
        ],
        "Module#2 Overview of MSP430 programming with Energia IDE": [
          "Pin mapping of MSP430 Launch pad with Engergia IDE",
          "Basics of Energia sketch ( first code)",
          "How to define variables in Energia IDE",
          "How to define functions in Energia IDE"
        ],
        "Module#3 input output ports of MSP430G2553 microcontroller": [
          "MSP430 data sheet",
          "How to use input output ports of MSP430G2253",
          "LED blinking using MSP430G2 Launchpad",
          "How to use push button with MSP430G2 Launchpad",
          "How to use RGB LED with MSP430G2 Launchpad",
          "motion detector PIR sensor interfacing",
          "Motion sensor reference manual"
        ],
        "Module#4 LCD interfacing": [
          "Introduction to 16X2 LCD",
          "HD44780U LCD 16 x 2 reference manual",
          "How to interface LCD with 16x2 LCD",
          "Scrolling text on LCD",
          "Display counter value on LCD"
        ],
        "Module#5 Serial communication using MSP430G2 LaunchPad": [
          "What is UART communication ?",
          "How to use UART communication module library in Engeria IDE",
          "How to send data through UART?",
          "How to receive data through UART?"
        ],
        "Module#6 How to use Analog to digital converter channels of MSP430": [
          "Introduction to ADCs",
          "How to measure analog voltage with msp430"
        ],
        "Module#7 Pulse width modulation using MSP430G2 LaunchPad": [
          "Introduction to PWM",
          "How to generate PWM with MSP430G2 LaunchPad"
        ]
      },
      "requirements": [
        "MSP430 Board"
      ],
      "description": "learn MSP430 launch pad programming with Energia IDE like a Arduino programming - step by step guide by making projects. In this course, you will learn to program MSP430D2 launch pad with Energia IDE by making practical projects.\nModule#1 Getting started with MSP430G2 Launchpad\nIntroduction to MSP430G2 Launchpad - overview of board\nHow to download and install Energia IDE\nGetting started with Energia IDE and connecting your board with Energia\nModule#2 Overview of MSP430 programming with Energia IDE\nPin mapping of MSP430 Launch pad with Engergia IDE\nBasics of Energia sketch ( first code)\nHow to define variables\nHow to define functions\nModule#3 input output ports of MSP430\nHow to use input output ports of MSP430G2553\nLED blinking using MSP430G2 Launchpad\nHow to use push button with MSP430G2 Launchpad\nHow to use RGB LED with MSP430G2 Launchpad\nPIR motion sensor interfacing with MSP430G2 LanuchPad\nModule#4 LCD interfacing\nIntroduction to 16X2 LCD\nHow to interface LCD with 16x2 LCD\nHow to display counter value on LCD\nHow to scroll text on LCD\nModule#5  Serial communication\nWhat is UART communication ?\nHow to use UART communication module of MSP430G2553?\nHow to send data through UART?\nHow to receive data through UART?\nModule#6 Analog to digital converter of MSP430\nHow to use ADC of MSP430\nHow to measure voltage with MSP430\nTemperature sensor interfacing with MSP430\nrain sensor interfacing with MS430\nModule#7 Pulse width modulation\nHow to generate PWM with MSP430 microcontroller\nHow to control brightness of LED with PWM and  MSP430?\n\n\nModule#8 servo motor interfacing (UPCOMING)\nHow to interface servo with MS430\nHow to control direction of dc motor\nModule#9 stepper motor interfacing  (UPCOMING)\nHow to interface servo motor with MS430\nHow to control servo motor",
      "target_audience": [
        "Anyone having access to internet",
        "Anyone who want to learn about microcontrollers programming"
      ]
    },
    {
      "title": "Embedded Audio Solutions: Developing an Audio Media Player",
      "url": "https://www.udemy.com/course/embedded-audio-solutions-developing-an-audio-media-player/",
      "bio": "Embedded Audio Solutions: Developing an Audio Media Player",
      "objectives": [
        "Build Your Own MP3 Player",
        "Write Bare-Metal Circular Buffers for Managing Communcation Data",
        "Develop Bare-Metal Drivers for Interfacing DFPlayer to Microcontrollers",
        "Develop a Library for DFPlayer"
      ],
      "course_content": {},
      "requirements": [
        "-NUCLEO-F411",
        "-DFPlayer Mini",
        "-microSD Card and Adapter"
      ],
      "description": "Welcome to the \"Embedded Audio Media Player\" course, your quickest way to developing a complete audio media player. This is also your first step to becoming the unsung hero behind the everyday sounds that make life extraordinary.\n\nSo, What's in it for you?\n\n1. Turn Ideas into Inventions: Ever thought of creating your own voice-activated device? or a custom speaker system? With hands-on modules, this course gives you the toolkit to make your vision a reality.Whether it's setting the mood in smart homes or enriching driving experiences in smart cars, you'll be the magician behind the curtain.\n\n\n2. Future-Proof Your Career: With IoT and smart devices becoming pupolar, the demand for embedded systems experts is skyrocketing. Add the ability to work with audio to your skillset.\n\n\nSome highlights of the course\n\n\nModule : Introduction to Audio Systems in Embedded Devices\nBasics of Audio Systems\nTypes of Audio Systems\nModule : Audio Solutions Available to Microcontrollers\nOn-chip Peripherals and Interfaces\nSystem-on-Chip (SoC) Solutions\nDedicated DSP Chips\nReal-time Operating Systems in Audio\nModule: Real-world Applications of Audio Systems\nConsumer Electronics\nPublic Address Systems\nAutomotive Systems\nSecurity Systems\n\n\nModule: The DFPlayer Mini Architecture and Components\nKey Features\nApplications\nCommunication Protocols\nKey Ports and AD Keys\nModule: Interfacing DFPlayer Mini with STM32\nAnalysing the documentations\nDeveloping the communication driver\n\n\nModule: Audio Operations and Features\nPlaying Tracks\nPausing and Resuming\nPlay Modes\nFunction Keys and Their Allocations\nCreating Playlists and Loops",
      "target_audience": [
        "Embedded Systems Professionals & Hobbyists"
      ]
    },
    {
      "title": "Most Frequently Asked 30 PCIe Interview Questions!",
      "url": "https://www.udemy.com/course/most-frequently-asked-30-pcie-interview-questions/",
      "bio": "Practical Guide to cracking PCIe Interviews.",
      "objectives": [
        "Guide to PCIe Interview preparation.",
        "Most Frequently Asked PCIe Questions by MNCs.",
        "Practical approach to PCIe Interview Questions.",
        "Guided Approach to Crack PCIe Interview."
      ],
      "course_content": {
        "Most Frequently Asked 30 Interview Questions": [
          "PCIe_Interview_Questions_1_to_6",
          "PCIe_Inerview_Questions_7_to_12",
          "PCIe_Interview_Questions_13_to_18",
          "PCIe_Interview_Questions_19_to_24",
          "PCIe_Interview_Questions_25_to_30"
        ]
      },
      "requirements": [
        "Basic PCIe knowledge is required.",
        "Knowledge of PCIe protocol is compulsory."
      ],
      "description": "In this course, You will learn the most frequently asked 30 interview question. Those questions are collected from multiple PCIe interview conducted in various semiconductor MNCs. There are 5 different videos in this course. Those 5 different videos are discussing 6 questions in details. Once students go through this course then they will be able to crack any PCIe interviews in MNCs. Answer to each questions are explained in details. Questions are covering all the three PCIe layers. This course gives confidence to students before going into PCIe interviews in semiconductor MNCs. Videos explain answer to each and every question in details. This course requires basic knowledge of PCIe. There is one more course in Udemy which helps gaining the basic knowledge of PCIe. This course is intended for all the experience levels of people working in semiconductor domain. This course will give confidence to all the levels of people before facing the PCIe interviews.  Students can ask questions in case any of the videos are not clear. Students will get the PDF in case they complete the course. If course is not completed then students will not get the course PDF. Students can provide their feedback at the end of the course. Any kind of feedback will be highly appreciated.",
      "target_audience": [
        "Candidates part of VLSI and PCIe Software Field.",
        "Candidates who wants to enter into PCIe protocol based career."
      ]
    },
    {
      "title": "PCI-Express Development with FPGA",
      "url": "https://www.udemy.com/course/pci-express-development-with-fpga/",
      "bio": "Learn how to develop PCI-Express(PCIe) based system on FPGA Design Tools: Generating & Simulating the PCIe based Design.",
      "objectives": [
        "To learn about the PCIe Technology",
        "PCIe Based Development with FPGA",
        "Implementing PCIe based IP on Xilinx and Altera Tools",
        "Generating and Simulating the PCI Express based IP on FPGA Design Tools [Xilinx VIVADO]",
        "Debugging the PCI Express based Design with Xilinx VIVADO",
        "Decoding and Analyzing the PCI Express based Packets"
      ],
      "course_content": {
        "Section 1 PCI Express Overview": [
          "PCIe Introduction Part I",
          "PCIe Introduction Part II",
          "PCIe Terminology"
        ],
        "Section 2 PCI Express Solution with FPGA": [
          "PCIe Solution [Hardware+IP] from Xilinx , Altera and 3rd Party Companies"
        ],
        "Section 3 PCIe Development with FPGA": [
          "Lab 31 Customizing 7 Series PCIe IP with VIVADO 2018.1",
          "Simulating the 7 Series PCIe IP for FPGA"
        ],
        "Section 5 PCI Express Packet Decoding & Analysis": [
          "Lecture 51: PCIe Packet Analysis Methodology",
          "Lab 51 Analyzing the PCIe Packet by loading ILA Capture Data"
        ],
        "Section 6 Queue DMA Overview": [
          "QDMA IP Overview and Customization Process"
        ],
        "Section 7 LsPCI , SetPCI Commands & Bash Scripting for PCIe Systems in Linux": [
          "LsPCI, SetPCI Commands & Bash Scripting for PCIe Systems in Linux"
        ],
        "Section 8 PCIe Driver Development Basics": [
          "PCIe Driver Development Resources"
        ],
        "Bonus Lecture": [
          "What Next?",
          "Links & References of all Lecture"
        ]
      },
      "requirements": [
        "Basics of PCI or PCI Express",
        "FPGA Design Basics",
        "IP Design and Implementation Methodology on Xilinx and Altera Tools"
      ],
      "description": "PCIe Based Development with FPGA based design environment. This course will teach about the PCI-Express (PCIe) Technology and its development methodology on FPGA design tools. We will have sessions on How to Design, Simulate those mainly Xilinx IP of PCIe for FPGA. We will customize the PCIe IP on VIVADO and Design (Generate Design), and Simulate it on VIVADO Environment. We also have session on lspci and setpci commands, bash scripting for PCIe, PCIe Packet Analysis, PCIe Driver Development basics on Linux etc.\nWe are introducing most of PCIe based IP at Xilinx VIVADO tool and Altera Quartus Tool. Aside of it we are reviewing and showing the design process of third party PCIe IP from Northwest Logic, PLDA and some other companies. This Course will taught about what are the PCI Express based design possibilities on FPGA. Major FPGA Vendor: Xilinx and Intel Altera has large set of FPGA which offers PCI Express based design implementation for Data Center Application, Teleco Back Place and High Speed Computing Application.\nThe Major PCI-Express IP on Xilinx FPGA's platform are: 7 series IP for PCI-Express, Ultrascale and Ultrascale+ IP for PCI-Express, DMA Subsystem for PCI-Express, AXI Streamming to Memory Mapped PCIe Core etc.\nThere are similar PCIe IP from Intel Altera and some third party IP vendors for PCIe are: NWL, PLDA, LogicBricks etc.",
      "target_audience": [
        "FPGA Design Enthusiast",
        "Masters on Electrical Engineering",
        "Masters on Embedded System",
        "VLSI Design Enthusiast",
        "Electrical Engineering",
        "Computer Science"
      ]
    },
    {
      "title": "PIC Microcontroller Mastery: Validate, Certify & Shine!",
      "url": "https://www.udemy.com/course/pic-microcontroller-mastery-validate-certify-shine/",
      "bio": "Showcase your embedded systems expertise, validate your skills, and earn a certification that highlights your PIC microc",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you ready to prove your knowledge of PIC microcontrollers? This course gives you a powerful opportunity to validate your embedded skills, strengthen your command of low-level systems, and earn a certification that distinguishes you in the hardware development field.\nThrough a comprehensive, exam-style assessment, you’ll tackle real-world challenges in C programming, register manipulation, timing systems, interrupts, and peripherals—core elements of PIC microcontroller applications in robotics, IoT, and industrial control.\nWhether you're preparing for a job, leveling up your resume, or benchmarking your knowledge, this course helps you stand out as a serious embedded developer.\nWhat You Will Learn\nNavigate the architecture and instruction set of PIC microcontrollers\nWrite efficient embedded C code for memory, timing, and interrupts\nUnderstand how to configure I/O ports, ADC, PWM, and UART\nDebug common errors in PIC-based systems\nAnalyze real-world circuit integration using PIC chips\nApply your knowledge to practical design questions\nEarn a PIC Certification backed by tested technical skill\nWho Should Enroll?\nExperienced Engineers: If you're an engineer in the Microcontroller industry aiming to solidify and certify your expertise, this is for you!\nExam Preparers: Students gearing up for Engineering or Microcontroller certification exams.\nMicrocontroller Aficionados: For the geeks passionate about Microcontrollers and eager to test their skills.\nProgramming Enthusiasts: Coders looking to dive deeper into the world of Microcontroller.\nElectronics Buffs: For those who love the magic of circuits and wish to gauge their expertise.\nRequirements\nIntermediate knowledge of C programming\nFamiliarity with basic embedded systems concepts\nPrior exposure to PIC microcontroller platforms (any family)\nNo hardware required—assessment is simulation-based\nStand Out with Certification:\nIn a competitive world, certification can set you apart. It’s a testament to your dedication, commitment, and specialized skills. With our course, you not only prepare for the certification but also gain a deeper understanding of PIC Microcontroller, ensuring that you're always a step ahead in your career.\nDive In Now:\nJoin a community of learners, share experiences, and grow together. With detailed assessments, robust resources, and expert guidance, it's more than just a course - it's your future. So, are you ready to rise and shine? Enroll today!\nStudent Reviews\n“I’ve worked with PIC for years, but this test showed me what I truly knew—and what I didn’t. The certificate is a real asset.” — Omar E.\n“Great structure and challenging enough to feel like an actual certification exam.” — Lily T.\n“This is the PIC skills assessment I wish I had before my first embedded job interview!” — Ronny M.\nFAQ\nQ: What do I receive after completing the test?\nA: A digital PIC Microcontroller Mastery Certificate, ideal for resumes and LinkedIn.\nQ: Is hardware required?\nA: No—all test scenarios are simulation-based and concept-driven.\nQ: Can I retry the test?\nA: Yes—two retakes are included with enrollment.\nQ: What topics are covered?\nA: From I/O control and memory management to timers, interrupts, and peripheral interfacing.\nQ: Is there a refund policy?\nA: Yes! Get a full refund within 7 days if the course isn’t the right fit for you.",
      "target_audience": [
        "Current Engineers on the Microcontroller Industry Who Wish to Validate Their Skills by Pursuing the Certification",
        "Students preparing for Engineering or Microcontroller Certification Exam",
        "Microcontroller Geeks",
        "Programming Geeks",
        "People who are looking to test their skills in Microcontroller",
        "Electronic Geeks"
      ]
    },
    {
      "title": "HDMI Device Driver Development Training",
      "url": "https://www.udemy.com/course/hdmi-device-driver-development-training/",
      "bio": "Understand How to Port or Write HDMI device driver",
      "objectives": [
        "HDMI device driver development",
        "Understand how to write or Port HDMI device Driver",
        "How HDMI takes cares of multimedia data",
        "Interaction of HDMI driver with V4L2"
      ],
      "course_content": {
        "HDMI Device Driver Development": [
          "HDMI Introduction",
          "HDMI Modes",
          "Hot Plug Detection (HPD) & EDID",
          "CEC & HDCP",
          "HDMI PHY Code Walkthrough",
          "HDMI code Walkthrough",
          "Other HDMI Modules Code Walkthrough",
          "HDMI Device Tree Understanding"
        ]
      },
      "requirements": [
        "Basic knowledge of Linux Device Driver",
        "Basic knowledge of C Programming"
      ],
      "description": "This course is designed for Students or Professionals who works on Linux device driver development or want to lean about Multimedia device Driver Development.  This Course will give you good insight on how Multimedia device drivers works in Linux Kernel and how we can write or Port HDMI drivers for new SOCs.\n\n\nThis Training is going to covers below topics:\n\n\nIntroduction to HDMI\nUnderstanding of HDMI PHY and HDMI CORE in linux kernel.\nDifferent  mode supported by HDMI\nHot Plug Detection and EDID .\nKnowledge of HDCP and CEC.\nHDMI Core and PHY code walkthrough .\nUnderstanding HDMI Device Tree changes for porting HDMI\nThis course will give you idea about HDCP (High Bandwidth Digital Content Protection) and CEC (Consumer Electronics Control).  Also you will learn how Hot Plug detection works for HDMI.\n\n\nAfter going through this training you will have good idea of HDMI device driver and will have good insight about how HDMI data transfer works in Linux Kernel .  Nowadays multimedia devices play very important role in our lives so being a device driver developer or embedded system leaner its an added advantage if you have knowledge of any Multimedia Driver . Hope you will Enjoy going through this training.\n\n\nprerequisite for Course :\nBasic understanding of Linux Device Drivers\nBasic knowledge of C Programming",
      "target_audience": [
        "Beginner",
        "Professionals",
        "Linux Device Driver Developers",
        "Embedded Software Students"
      ]
    },
    {
      "title": "Sensors / Actuators & IoT Dashboard with Arduino",
      "url": "https://www.udemy.com/course/iot-dashboard/",
      "bio": "IoT Dashboard with Microcontroller",
      "objectives": [
        "Use a microcontroller to visualize multiple sensors data and remotely control switches",
        "Learn how to read various sensors such as ultrasonic, infrared, temperature and voltage",
        "Create a professional looking, animated & interactive IoT Dashboards",
        "Basic refresher courses on html / CSS / JavaScript and C++ for beginners"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of electronics",
        "A computer along with basic computer skills",
        "Some basic electronic parts are required (covered in lecture 3)",
        "No paid software required - both Arduino IDE and  VS Code editor  are free downloads"
      ],
      "description": "Microcontrollers play a significant role in our daily lives. In fact, they are very often imbedded in many of the products we use on a daily basis and are completely taken for granted. They are behind the scenes, orchestrating the complexities of using various SENSOR devices such as liquid level sensors, temperature sensors, distance sensors to name only a few, read their respective values and decide when it’s time to power ACTUATORS, which are other devices such as electromagnetic valves, pumps, fans or heating elements until the entire process they were designed for is completed.\nDuring this course, you will learn how to create a fully interactive webpage dashboard with animated gauges and switches using HTML/CSS/JavaScript as well as AJAX (Asynchronous JavaScript and XML) to display the values of various sensors and remotely control actuators through relays in real time.\nWe'll use the Arduino Uno as our programmable microcontroller of choice for this course, as it is highly configurable, inexpensive and offers a great IDE or integrated development environment for learning purposes.\nThe  course also includes some refresher modules on HTML, CSS, JavaScript and C++ to help the beginner level students.  We will simplify your learning experience as we supply all the code and make it easy for you to follow step-by-step instructions, as we explain each line of the code. We'll also encourage and point you to some resources and exercises outside the course to familiarize yourself with some of the required tools, and in no time, you will have a good understanding of the basics.\nAt the end of this course, our hope is that you’ll have gained a better understanding of the endless possibilities offered when combining micro controllers with sensors, actuators and resulting real time data visualization they offer.\nSo, we hope you decide to join us on this exciting learning adventure, and I’ll see you in the next lecture.",
      "target_audience": [
        "Anyone interested in learning to utilize IoT devices",
        "Electronics enthusiasts",
        "If you'd like to learn how to remotely operate and monitor devices",
        "If you'd like to learn how to automate equipment based on sensor data"
      ]
    },
    {
      "title": "Autonomous Car:Deep Learning & Computer Vision for Beginners",
      "url": "https://www.udemy.com/course/autonomous-car-deep-learning-computer-vision-for-beginners/",
      "bio": "Autonomous cars: Deep Learning and Computer Vision Using Python & OpenCV on Raspberry Pi",
      "objectives": [
        "Build your own Self Driving Car (Mini-Tesla)",
        "Learn (Divide and Conquer Approach) of solving complex problems i.e. Detection -> (Localization + Classification)",
        "Segment Lane Lines using Computer Vision techniques i.e. Canny Edge detection & Color Thresholding",
        "Localize objects in images based on specific shapes using Algorithms i.e. ShapeApproxPoly and HoughCircles",
        "Estimate Straight Line Trajectories Using Hough Lines and Curved Lanes using Custom Algo.",
        "Learn about Artificial Neural Networks and why Convolutional Neural Network are best for classification in Images.",
        "Learn to identify the right Algorithm in OpenCV and how to tweak it to your requirements",
        "Build, Train and deploy Custom CNN model (Deep Learning) for classifying Signs.",
        "Profile/Time your program using cProfile in Python",
        "Compare S.O.A Tracking techniques available in OpenCV and identify most suitable for project requirements",
        "Optimize your Code using simple but very effective IP techniques and threading",
        "Make SDV Navigate Autonomously in Custom Track and also obey road speed limits",
        "Understand how to extract actionable data from images",
        "Gain all the knowledge required to enter to more advance versions of (SDV series) upcoming courses to come... :)",
        "Brief Overview of SSD for Sign Detection and why its not the solution for every Object Det. problem"
      ],
      "course_content": {},
      "requirements": [
        "Basic Python programming and OpenCV",
        "3D model's STL files printing"
      ],
      "description": "This is course is involves both the hardware and the software part for building your custom car\nTopics Which Will be Covered in the Course are\nHardware Part :\nRaspberry Pi Setup with Raspbian\nRaspberry pi and Laptop VNC Setup\nHardware GPIO Programming\nLed Controlling with Python Code\nMotor Control\nCamera Interfacing Video Feed\n\n\nSoftware Part :\nVideo Processing Pipeline setup\nLane Detection with Computer Vision Techniques\nSign Detection using Artificial Deep Neural Network\nSign Tracking using Optical Flow\nControl\n\n\nCourse Flow (Self-Driving [Development Stage])\nWe will quickly get our car running on Raspberry Pi by utilizing 3D models ( provided in the repository) and car parts bought from links provided by instructors. After that, we will interface raspberry Pi with Motors and the camera to get started with Serious programming.\n\nThen by understanding the concept of self-drive and how it will transform our near future in the field of transportation and the environment. Then we will perform a case study of a renowned brand in self-driving (Tesla) ;).After that, we will put forward our proposal of which (autonomous driving level) self-driving vehicle do we want to build.\nThe core development portion of the course will be divide into two parts. In each of this portion and their subsection, we will look into different approaches. program them and perform an analysis. In the case of multiple approaches for each section, we will do a comparative analysis to sort out which approach best suits our project requirements.\n1) Detection: responsible for extracting the most information about the environment around the SDV\nHere we will understand how to tackle a large problem by breaking it down into smaller more manageable problems e.g in the case of Detection. we will divide it into 4 targets\na) Segmentation\nb) Estimation\nc) Cleaning\nd) Data extraction\n2) Control: actions will be performed based on the information provided by the detection module.\nStarting by defining the targets of this module and then implementation of these targets such as\na) Lane Following\nb) Obeying Road Speed Limits\nIn the end, we will combine all the individual components to bring our Self Driving (Mini - Tesla) to life. Then a Final Track run along with analysis will be performed to understand its achievement and shortcoming.\nWe will conclude by describing areas of improvement and possible features in the future version of the Self-driving (Mini-Tesla)\nHardware Requirements\nRaspberrypi 3b or greater\nAckerman Drive car\n12V lipo Battery\nServo Motor\nSoftware Requirements\nPython 3.6\nOpencv 4.2\nTensorFlow\nMotivated mind for a huge programming Project\n\n\n\n\n- This course is only supported for  Raspberry pi 3B and 3B+ , for other version of raspberry pi we do not guide how to install Tensorflow.\n- Before buying take a look into this course Github repository  or message\n\n\n( if you do not want to buy get the code at least and learn from it :) )",
      "target_audience": [
        "Beginner Programmers looking for an exciting project in the upcoming domains",
        "Enthusiastic students wanting to get their feet wet in multidisciplinary projects",
        "Engineers wanting to embark in the fields of Computer Vision, Artificial Intelligence and Robotics",
        "Self Driving Cars Enthusiasts looking to build one of their own"
      ]
    },
    {
      "title": "Embedded C++ programming",
      "url": "https://www.udemy.com/course/embedded-programming-with-c/",
      "bio": "Advanced C++ concepts for embedded project development",
      "objectives": [
        "Use the C++ concepts of generic programming and object oriented programming principles for writing firmware",
        "Debug the code and make the appropriate changes",
        "Understand the datasheet and reference manual of cortex microcontroller",
        "Understand the way to write peripheral driver and memory management using C++ features",
        "Learn the ways to verify concepts using debugging principles"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Overview",
          "KEIL IDE download",
          "KEIL IDE installation",
          "Package installation for STM32 device",
          "Creating a project in KEIL",
          "Dev C++ installation"
        ],
        "C++ topics": [
          "concept of \"constexpr\"",
          "Use of 'namespaces' in embedded program",
          "Use of 'explicit conversions' in embedded program",
          "Intro to class: lec-1",
          "Intro to class: lec-2",
          "use of \"dynamic polymorphism\"",
          "Intro to template: lec-1",
          "Intro to template: lec-2",
          "Intro to template: lec-3"
        ],
        "Register Access": [
          "Memory model of Cortex-M3 microcontroller",
          "Accessing a register using macro",
          "Accessing a register using “reinterpret_cast”",
          "Accessing a register using “template class”"
        ],
        "GPIO Driver": [
          "GPIO peripheral explanation",
          "GPIO driver development",
          "Adding template class to GPIO driver",
          "OOP based GPIO driver"
        ],
        "Custom Memory Management": [
          "Basic heap usage",
          "Custom Pool Allocator"
        ]
      },
      "requirements": [
        "Basic experience in C programming is required"
      ],
      "description": "As there are many features and intricate details incorporated in C++ language, embedded developers are finding it a fascinating topic in recent years. The present course will essentially give a practical understanding to write software for the ARM cortex microcontrollers, along with modern C++ features.\nIn the present course, the author has mainly concentrated to teach a way to leverage the C++ features along with object-oriented principles for microcontroller software. The C++ 11 version has been considered, for writing the drivers to peripherals and memory management of the STM32F446RE microcontroller.\nIn section-1, the discussion is all about understanding the build process, KEIL, and DEV IDE installation. Such that reader will get comfortable with using ARM version-6 compiler for writing software to Cortex devices. Throughout the course, the community edition of those IDE’s are used for exploring the subject and it is free.\nIn section-2, the discussion is all about giving some insight into the key topics related to C++ 11, such as templates and classes. For a better understanding, real-time examples were considered.  In addition, some focus is given to the scalability, modularity, and performance of software.\nIn section-3, we have discussed the topic of register access,  by simply using both macros and explicit casting. In addition, the concept templates were also considered for understanding real-time usage.\nIn section-4, the discussion is all about creating a GPIO peripheral driver and then a custom library using advanced C++ topics for controlling the Led connected to STM32F446RE. The listener will understand the usage of UML and generic programming concepts while designing the code.\nThe section-5 is all about heap usage and custom memory management in the microcontroller, by using C++ concepts. Here only the standard libraries are considered, for the sake of a clear and practical understanding of concepts.",
      "target_audience": [
        "Firmware developers",
        "hobbyists",
        "Students and Instructors",
        "Embedded software developers",
        "Researchers"
      ]
    },
    {
      "title": "Embedded Firmware Interview Questions & Detailed explanation",
      "url": "https://www.udemy.com/course/embedded-firmware-interview-questions-detailed-explanation/",
      "bio": "Ace all your future interviews!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "A bundle of industry oriented questions that are most likely to be asked when you attend an Embedded firmware/software interview as a fresher or during a job/role change.\nAs a student or a professional you can come by once every week to check your hold on Embedded systems by attempting these new questions.\nThe questionnaire will begin with basic embedded C questions and will gradually progress to advanced level questions.\nThe concepts covered will be based on I2C, SPI, CAN, USART etc. communication protocols, RTOS, Bootloader programming, In-depth conceptual breakdown of ARM CORTEX-M processor based  MCU's, Embedded Linux internals, IoT architecture + layer by layer breakdown  etc.\nThe range of questions are very broad and just cannot be discussed fully in this short description (The RTOS section currently has 80+ questions ! )\nAll the questions are arranged in such a way, that the candidate attempting them gradually descends into the hard problems, we do not believe in bombarding you with fancy concepts and nomenclatures, we will ease you into this fancy world, at your pace.\nI stand 100% behind this questionnaire, if you find any difficulty on understanding the answer to any of the question, feel free to text me or discuss in the Q&A section, along with answering your queries, I will provide you resources for going further deep into the topic where you feel, you lack knowledge.\n\n\nAll the very best for your future interviews because I know, you will ace it!\n\n\n*UPDATE*\nAdded - In-depth Bootloader, IAP programming question set.\n\n\nFuture Updates include:\nIn-depth Embedded Linux internals question set\nIn-depth IoT programming/architecture question set\n\n\n(However, if your background in embedded only consists of Arduino IDE, I would recommend you not to buy this quiz, I would also recommend you to buy a new development/evaluation board by Texas Instruments / ST / NXP etc and start learning device coding from scratch without much library support)",
      "target_audience": [
        "Students preparing for embedded system interview (fresher & experienced)",
        "Students curious about what kind of questions can be asked in an embedded interview in top companies like Qualcomm, NXP, STMicroelectronics, ARM, Texas Instruments etc.",
        "Embedded firmware/software developers"
      ]
    },
    {
      "title": "Communication series P3 : AMBA AXI in Verilog",
      "url": "https://www.udemy.com/course/communication-series-p3-amba-axi-in-verilog/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "Essential principles of AXI Stream, AXI Lite and AXI Full.",
        "Implementation of AXI Stream, AXI Lite and AXI Full master and slave from scracth.",
        "Implementation of AXI Burst modes in Verilog.",
        "Implementation of AXIS Arbiter, AXIS FIFO and AXI Lite GPIO from scratch."
      ],
      "course_content": {},
      "requirements": [
        "Basics understanding of Verilog and Digital Electronics"
      ],
      "description": "AXI (Advanced eXtensible Interface) is widely used in System-on-Chip (SoC) designs because it provides a highly efficient and flexible interconnect solution for complex systems.\nMaster the essentials of the AXI protocol with our hands-on course, designed to provide in-depth knowledge of AXI fundamentals in Verilog. With 95% coding and only 5% theory, the focus is on practical, real-world skills. You will explore the signals of AXI Stream, AXI Lite, and AXI Full interfaces and build AXI Master and Slave components from scratch. Learn to implement various burst modes, verify AXI transactions using the AXI protocol checker, and design advanced components like AXI Stream FIFOs, arbiters, and AXI Lite GPIO modules.\nThe course emphasizes coding practice while offering essential theoretical insights to strengthen your understanding of AXI’s intricacies. Ideal for design and verification roles, this training equips you with the skills to excel in your career and confidently tackle challenging interviews. Whether you're a beginner or an experienced professional looking to sharpen your expertise, this course provides a comprehensive learning experience. In addition, you'll gain exposure to real-world applications of AXI in complex systems, enhancing your ability to design, debug, and verify AXI-based solutions. Enroll now to gain the knowledge and hands-on experience needed to master AXI in Verilog and take a significant step forward in your VLSI journey.",
      "target_audience": [
        "A VLSI engineer is interested in constructing Custom AXI peripheral in Verilog for SoC."
      ]
    },
    {
      "title": "Embedded System Design with Xilinx Microblaze and SDK",
      "url": "https://www.udemy.com/course/embedded-system-design-with-microblaze-for-newbie/",
      "bio": "Using Xilinx Vivado Design Suite 2019.1 or Lower",
      "objectives": [
        "Embedded System Design flow using Microblaze Soft Processor",
        "Development of C applications for Microblaze Devices",
        "Software and Hardware Debugging",
        "Handling Interrupts in Microblaze based designs",
        "Understanding Xilinx Drivers",
        "Profiling"
      ],
      "course_content": {
        "Installing Vivado": [
          "Recommendation",
          "Agenda",
          "Installation Part 1",
          "Installation Part 2",
          "Xilinx LIC File",
          "Adding Licencse",
          "Digilent Board Files (Download before proceeding)",
          "Adding Digilent Boards and Hardware Connection"
        ],
        "Toolchain Configuration": [
          "Agenda",
          "Configuring Toolchain for Development P1",
          "Configuring Toolchain for Development P2",
          "C Code",
          "Fundamental P1 : Project Types",
          "Fundamentals P2 : Flow Navigator",
          "Useful files in Project Directory",
          "How to Use TCL Script for BD automation",
          "Fundamentals of SDK P1",
          "Fundamentals of SDK P2",
          "Different Reporting Mechanism"
        ],
        "Understanding Simple Peripherals": [
          "Agenda",
          "Fundamentals of XIL Drivers P1",
          "Fundamentals of XIL Drivers P2",
          "Fundamentals of XIL Drivers P3",
          "Writing DATA to LED's P1",
          "Writing DATA to LED's P2",
          "Code",
          "Reading Data from Peripherals P1",
          "Reading Data from Peripherals P2",
          "Code",
          "Multiple GPIO Instances P1",
          "Multiple GPIO Instances P2",
          "Code",
          "Using Multiple Channels P1",
          "Using Multiple Channels P2",
          "Code"
        ],
        "Intermediate Peripherals": [
          "Agenda",
          "Sending data with AXI Uartlite P1",
          "Sending data with AXI Uartlite P2",
          "Code",
          "Receiving data with AXI Uartlite",
          "Code",
          "Multiple Uartlite Instance P1",
          "Multiple Uartlite Instance P2",
          "Code",
          "Using UART16550",
          "Code"
        ],
        "Complex Peripherals": [
          "Agenda",
          "Using AXI Timer P1",
          "Using AXI Timer P2",
          "Using AXI Timer P3",
          "Code",
          "Checking Count Value",
          "Code",
          "Operating Timer in Auto-Reload Mode",
          "Code : Using Auto-Reload Option",
          "Code : Using Reset API",
          "Working with WDT P1",
          "Working with WDT P2",
          "Code"
        ],
        "Profiling": [
          "Agenda",
          "Profiling with AXI Timer P1",
          "Profiling with AXI Timer P2",
          "Code",
          "SDK Profiling P1",
          "SDK Profiling P2",
          "Code"
        ],
        "Memory resources": [
          "Agenda",
          "Understanding Byte Addressable and Word Addressable",
          "Using AXI BRAM P1",
          "Using AXI BRAM P2 : Pointers",
          "Using AXI BRAM P3 : XIL_IO Drives",
          "Code : Pointer",
          "Code : XIL_IO",
          "Using external DDR"
        ],
        "Hardware and Software Debugging": [
          "Agenda",
          "Adding ILA in Design P1",
          "Adding ILA in Design P2",
          "Debugging with Serial Terminal",
          "Breakpoint and Memory Viewer usage",
          "Xilinx Software Command line Tool (XSCT) usage"
        ],
        "Interrupts": [
          "Agenda",
          "Fundamentals",
          "Using Interrupts with GPIO P1",
          "Using Interrupts with GPIO P2",
          "Code",
          "Using Interrupt with AXI Timer P1",
          "Using Interrupt with AXI Timer P2",
          "Code",
          "Working with Watchdog Timer Interrupt",
          "Code"
        ],
        "Custom AXI Peripherals": [
          "Agenda",
          "Slave Lite Interface without I/O ports P1",
          "Slave Lite Interface without I/O ports P2",
          "Code",
          "Slave lite Interface with I/O ports P1",
          "Slave lite Interface with I/O ports P2",
          "Slave lite Interface with I/O ports P3",
          "Code",
          "Building AXI Stream Interface P1",
          "Building AXI Stream Interface P2",
          "Building AXI Stream Interface P3",
          "Codde"
        ]
      },
      "requirements": [
        "Understanding of Digital Electronics",
        "Fundamentals of Computer Architecture"
      ],
      "description": "A faster Reconfigurable system makes FPGA a prominent choice for a large set of applications, but Hardware alone is incomplete without smart software synchronizing all the events fruitfully to achieve the desired Application. This course covers fundamentals of Popular Xilinx drivers viz. UART, AXI Timers, UART16550, AXI GPIO, AXI BRAM, etc. The course also illustrates the usage of the AXI interrupt controller for handling Interrupts. Also to felicitate incorporation of  Hardware accelerators with Microblaze based design few examples on building Custom AXI Peripherals are also included. Software and Hardware Debugging, Profiling fundamentals are demonstrated with Microblaze to felicitate performance measurement.\nThe Microblaze is an FPGA-based Soft Processor capable of executing single instruction per cycle with few exceptions. The MicroBlaze interconnect is reconfigurable capable of communicating with a large set of peripherals to fit most of the medium-scale applications. It allows configuration of cache size, pipeline depth, peripherals, memory management unit, and bus interface suitable to fit different application requirements. As systems complexities are growing day by day, Microblaze will play central role in the non-Zynq based FPGA families whereas it will be the best light-weight alternative working in tandem with the Zynq hard processor for Zynq and Ultrascale based FPGA families.",
      "target_audience": [
        "Anyone wish to build expertise in Xilinx Microblaze Devices and Vivado SDK Environment",
        "Embedded System Design with FPGA Soft Processors"
      ]
    },
    {
      "title": "Complete KiCAD PCB design course",
      "url": "https://www.udemy.com/course/embedded-system-design-course/",
      "bio": "PCB Design, Arduino, Testing, Programming, KiCAD V6",
      "objectives": [
        "What is PCB and the Design Software",
        "Schematic Design, PCB design, Manufacturing hardware and generating gerber files",
        "How to make a board based on Atmega microcontroller",
        "Soldering, Testing and Debugging the board",
        "Firmware and Arduino IDE",
        "How you can work on making this board step by step and work on real world projects",
        "What are the tools needed while working on embedded system",
        "Basic theory and real world examples",
        "Design Rule and electrical rules",
        "Testing of PCB board",
        "KiCAD 6, Arduino IDE and Freerouting software",
        "Also build projects on this board",
        "Understand the Hardware and software",
        "Connect digital sensor, Sound sensor, GPS modules and OLED display to the board"
      ],
      "course_content": {
        "Introduction to the course": [
          "Course Contents"
        ],
        "Introduction to PCB design": [
          "What is a PCB",
          "Printed Circuit Board",
          "What is KiCAD",
          "Download KiCAD software",
          "A Glimpse on the kicad software"
        ],
        "Schematic Design": [
          "Basics of Schematic editor in KiCAD",
          "Schematic editor",
          "Schematic of 5V power circuit",
          "How can we add symbols in the sheet",
          "Atmega328 microcontroller and communication protocols",
          "Schematic of Microcontroller circuit",
          "Microcontroller",
          "Schematic of USB to UART",
          "Why to use CH340G IC",
          "Annotation and ERC check",
          "ERC",
          "Footprint Assignment"
        ],
        "PCB Layout": [
          "Basics of PCB Layout",
          "Component placement of Power circuit",
          "On which layer we can place components",
          "Microcontroller and USB section",
          "Silkscreen Layer",
          "Using Freerouting",
          "Routing",
          "Copper pour",
          "DRC",
          "Gerber viewer",
          "Notes"
        ],
        "PCB Manufacturing": [
          "PCB Manufacturing",
          "Where can I order the components"
        ],
        "Soldering & Testing": [
          "Tools required",
          "Soldering and Testing of Power circuit",
          "Final board",
          "Bootloader Part 1",
          "Arduino IDE",
          "Uploading the First code",
          "Connect Digital humidity and temperature sensor(DHT22) to the board",
          "Sound sensor",
          "I2C communication (OLED Display)",
          "Connecting GPS module",
          "Thanks video"
        ],
        "Project 1": [
          "IOT Project (Design and Build your own IOT board)",
          "Part 2 (Circuit explanation, Hardware Testing , Software Testing"
        ],
        "Extra": [
          "Import 3D model for components in KiCAD"
        ]
      },
      "requirements": [
        "Basic knowledge of electronics"
      ],
      "description": "Learn the most popular atmega328 microcontroller and design the Printed circuit board and work on real world examples. After completing this course you will be able to design your own custom board based on the arduino based microcontroller. You will aslo learn about component ordering, uploading gerber files and send it to the manufacturer, Testing the hardware board, uploading the code the board. Learn the KiCAD 6 Version.\nLearning Outcomes:\n1. What is PCB: PCB terminology and keywords. Understand the printed circuit board (PCB) and different layers in it. Types of PCBs based on different layers. Types of components present on the PCB and their size and shapes. Learn about the packages of the components.\n2. Schematic Design: Learn the schematic editor and how you can place and search for the components, Symbols used for different components. Pins and connection of the components, Work on Annotation and Electrical rules check. Assign footprint to the symbols used. How you can create the schematic section by section as power circuit, microcontroller circuit and USB to UART interface. Datasheet of the components and their mechanical dimensions. Communication protocols.\n3. PCB Layout and Routing: Basic setting of the editor, Placement of the components based on some rules, use the  freerouting software to route the tracks, silkscreen layer, do the DRC(Design rule check). How you can solve the errors in DRC and how you can change the footprint. How you can work on different layers, board outline and 3D view of the PCBs.\n4. PCB Manufacturing: Generate the gerber files and upload this gerber files to the PCB Manufacturer. Also you will get to know on how PCB manufacturer provide the component procurement, assembly and soldering service.\n5. Soldering and Testing the PCB: Soldering and testing the circuits based on the schematic design. Understand through hole and SMD components. Tools which are essential for soldering and working on testing tools like multimeter and power supply.\n6. Uploading the code: Blink an onboard led by programming the atmega328 using the mini USB. Understand the ch340g as USB to UART interface. You can connect sensor to this board or you can even connect oled display, leds, analog and digital sensors etc. Work on tons of projects with this board. Once can even modify this PCB according to their project requirements. Create exciting projects with this course.",
      "target_audience": [
        "Beginner, College student, hobbyist who want to make career in electronics and embedded system",
        "Curious to learn new things",
        "Want to work on design, development, research and testing.",
        "Learn to design PCBs"
      ]
    },
    {
      "title": "CMOS VLSI",
      "url": "https://www.udemy.com/course/cmos-vlsi-by-vinayak-pachkawade-phd/",
      "bio": "VLSI and IC Design fundamentals!",
      "objectives": [
        "Learn about CMOS VLSI design",
        "Learn MOS transistor and how it is used in CMOS logic/circuit design",
        "Understand step-by-step CMOS fabrication process",
        "Learn how to draw a CMOS transistor layout",
        "Learn CMOS circuit design principles",
        "Learn basics of Hardware Description Language (HDLs)",
        "Know about the latest in VLSI Technology and IC design fundamentals",
        "Update yourself with the advances and know-how in VLSI and IC design",
        "Know the design flow used in VLSI industry",
        "Get job-ready for in-demand carrier in VLSI and IC design",
        "Learn about multi-project wafer (MPW) service to fabricate your chip"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "The MOS transistor",
          "Transistor Switching Models",
          "CMOS Logic",
          "Tristate, latch and flip-flop",
          "CMOS fabrication and layout",
          "CMOS fabrication and layout",
          "IC layout principles",
          "Design partioning",
          "Circuit design",
          "Netlisting and floorplan"
        ],
        "Solutions to Exercise": [
          "ex1",
          "ex2",
          "ex3",
          "CMOS LOGIC _ Pull-Up and Pull-Down Network",
          "CMOS LOGIC _ Pull-Up and Pull-Down Network (1)",
          "CMOS Compound Logic _ Pull-up & Pull-down"
        ],
        "Revision": [
          "Revision",
          "Revision",
          "Revision",
          "Revision",
          "Instructor-led training"
        ],
        "New lectures": [
          "Mastering Low Power Design in VLSI_ Dynamic, Static, and Secrets Unveiled!",
          "Process to fabricate your own chip",
          "FPGA I Program Your IC",
          "The Inside of FPGA IC"
        ]
      },
      "requirements": [
        "Basics knowledge in semiconductors and electronics",
        "Interest in semiconductor technology, VLSI and IC design"
      ],
      "description": "CMOS VLSI technology has ascended to the preeminent position in modern electronic system design. This technology has enabled the widespread use of wireless communication, Internet of things, and the personal computers. The inventions and innovations in this technology in the past two decades has seen a rapid and enormous growth. The transistor counts and clock frequencies of state-of-the-art integrated chips have grown by orders of magnitude. Power consumption of the chips is one of the concern today in chip design.\nThis course will provide you the fundamentals and most relevant information in the semiconductor/VLSI/IC design process (with breadth and depth). The course will provide you the detailed information on the VLSI technology and equip you with the knowledge and the skills required to understand and perform the jobs in the VLSI industry. The course starts with the basics of CMOS logic/transistors/circuits and advances through many examples to the process of IC design and fabrication. This course is tailored for beginners who are interested in VLSI design, digital logic/circuit design and verification. The course will start with providing the background on the VLSI IC design flow used in ASIC/SoC design in the industry.\nThe course contains detailed lectures and hands-on exercises. Each lecture has downloadable resources which you can use as a reference material. Most of the course contents contain brainstorming exercises/assignments/homework, so you'll learn extra to strengthen your understanding and the skills. Most importantly, a set of revision lectures are provided in Section 2 to not only brush-up the contents we learn in section 1, but also to provide you details and in-depth understanding, examples and know-how of the subject.\nWish you happy learning!",
      "target_audience": [
        "Beginners interested in VLSI technology, IC design process, and fundamentals",
        "Freshers looking for an entry-level jobs in VLSI industry",
        "Training course for higher division undergrdautes in electronics, graduates in electronics and VLSI"
      ]
    },
    {
      "title": "Embedded Systems using 8051 Microcontroller",
      "url": "https://www.udemy.com/course/embedded-c-for-8051-microcontroller/",
      "bio": "Learn how to program 8051 Microcontroller using Embedded C and build Embedded Systems!",
      "objectives": [
        "Practical Exposure to Embedded Systems",
        "Knowing how to program in Embedded C",
        "Understanding the architecture of 8051 Microcontroller",
        "Building Embedded Systems Projects"
      ],
      "course_content": {
        "Introduction": [
          "1. What is Embedded C",
          "2. Differences between C and Embedded C",
          "3.Microprocessor vs Microcontroller",
          "4. Variants of Microcontroller and Criteria in choosing them"
        ],
        "Understanding the architecture of 8051": [
          "Architecture of 8051",
          "Importance of External Memory",
          "Working with Hexadecimal Notation",
          "Register banks in 8051",
          "Bit Addressability and Special Function Registers",
          "10. Ports in 8051"
        ],
        "Getting started with Embedded C & Keil IDE": [
          "Structure of Embedded C",
          "Datatypes used in 8051 C",
          "To know about KEIL IDE!"
        ],
        "Experiments - Interfacing On Chip and Off Chip Peripherals using Embedded C": [
          "Hardware Description of the development board",
          "Blinking of LEDs in C",
          "Hardware Demo - Blinking of LEDs in C",
          "16. Toggling the Ports using C",
          "Hardware Demo - Toggling the Ports",
          "The concept of Shifting",
          "Hardware Demo - Shifting",
          "How to interface a seven segment display with 8051",
          "Code to interface a seven segment display",
          "Hardware Demo - Working with Seven Segment displays",
          "Algorithm to show different numbers on different segments",
          "Hardware Demo - Interfacing multiple seven segment displays",
          "How to interface a 4x4 Matrix Keypad with 8051",
          "Algorithm to interface a 4x4 Matrix Keypad with 8051",
          "Embedded C code to interface a 4x4 Matrix Keypad with 8051",
          "Hardware Demo - Interfacing keypad with 8051",
          "Introduction to Timers and Counters",
          "Essentials to Program Timers - 30 min",
          "Algorithm to program Timers in Mode 1 with Delay Calculation Formula",
          "Embedded C code to produce 1 second delay using Timers",
          "Simulation of Timers in mode 2 using Embedded C",
          "The concept of Interrupts and ISR",
          "Embedded C code to implement hardware interrupts",
          "Hardware Interrupts Demo",
          "Implementing Timer Interrupts in Embedded C",
          "Hardware Demo - Implementing Timer Interrupts in Embedded C",
          "Project 1 - Stopclock",
          "Embedded C code for Stopclock",
          "Hardware Implementation of the Project"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A very basic knowledge in C Programming is preferred"
      ],
      "description": "By learning this course,\n\n\nYou'll be able to\n1. Understand the differences between C and Embedded C\n2. Know how to program in Embedded C\n3. Understand the internal architecture, on chip and off chip peripherals of 8051 microcontroller.\n4. Understanding the usage of Keil IDE to program 8051.\n5. Understanding the hardware components in 8051 development kit.\n6. Build Embedded Systems Projects.\n\n\nThis course is completely practical oriented. We will be working with an hardware kit called 8051 development kit. Perhaps it's not necessary to buy the hardware if you don't wish to. Since, the results of each code can be verified in the simulation tool itself. But, working with hardware and getting the practical knowledge enhances the learning.\nAn embedded system is a microprocessor-based computer hardware system with software that is designed to perform a dedicated function, either as an independent system or as a part of a large system. At the core is an integrated circuit designed to carry out computation for real-time operations.\nHardware + Software = Embedded System!\nWe will be understanding both the things in this course. At the end of this course, the learner should be able to develop an embedded product using 8051 microcontroller for any application.",
      "target_audience": [
        "Beginner Electrical, Electronics and CS Aspirants"
      ]
    },
    {
      "title": "Honeywell PLC Programming using SoftMaster (PLC-SCADA-5)",
      "url": "https://www.udemy.com/course/honeywell-plc-programming-using-softmaster-from-scratch/",
      "bio": "Live examples and industry based projects.",
      "objectives": [
        "You will be enriched with the latest technical knowledge related with the industrial automation.",
        "Students can establish their career in various manufacturing industries like Oil and Gas, Water/Waste Water Treatment, food & Beverages, Power Plants, Manufacturing Process, Chemicals and Pharmaceutical Industries, Power Generation, Automotive, Fabricated Metals, Packaging Process, Metals and Mining’s Aerospace, etc."
      ],
      "course_content": {
        "Overview of PLC": [
          "Introduction to PLC",
          "Block Diagram of PLC",
          "Working Principle of PLC (Scan Time and Scan Cycle of PLC)",
          "What is Sink and Source concept?",
          "PNP and NPN wiring of sensor with PLC (Example Sink and Source Input)"
        ],
        "Basics of Honeywell PLC": [
          "Software Interface of SoftMaster",
          "Data types in Honeywell PLC",
          "Addressing Format in Honeywell PLC-Part 1",
          "Addressing Format in Honeywell PLC-Part 2"
        ],
        "Basics of Ladder diagram": [
          "Programming Language of PLC with Basic Example",
          "Bit Logics (NO Type)",
          "Bit Logics (NC Type and Output Coil)",
          "Basic Programming Rule 1",
          "Basic Programming Rule 2",
          "Basic Programming Rule 3",
          "Basic Programming Rule 4",
          "Basic Programming Rule 5",
          "Basic Programming Rule 6",
          "First program in SoftMaster",
          "Problem 1 With Solution",
          "Problem 2 With Solution",
          "Problem 3 With Solution",
          "Problem 4 With Solution",
          "Ladder Logic Program for Boolean Expression",
          "Logic Gates (AND & OR Gate)",
          "Logic Gates (AND & OR Gate) in Software",
          "Logic Gates (NAND & NOR Gate)",
          "Logic Gates (NAND & NOR Gate) in Software",
          "Logic Gates (EX-OR & EX-NOR Gate)",
          "Logic Gates (EX-OR & EX-NOR Gate) in Software",
          "Positive And Negative Transition Input",
          "Positive And Negative Transition Output"
        ],
        "Latching and Unlatching": [
          "Introduction to Latching (Holding) and Unlatching Concept",
          "Latching (Holding) and Unlatching Concept in Software",
          "Latching and Unlatching Problem-1",
          "Latching and Unlatching Problem-1 Solution Explanation",
          "Latching and Unlatching Problem-1 Solution in Software",
          "Introduction of Set and Reset Instruction",
          "Set and Reset Instruction in Software"
        ],
        "Interlocking": [
          "Interlocking Concept",
          "Interlocking Concept in Software"
        ],
        "Timer": [
          "Introduction to Timer",
          "Different Types Of Timer In Softmaster",
          "ON Delay Timer(TON) Part-1",
          "ON Delay Timer(TON) Part-2",
          "Problem-1(Flicker Bit)",
          "OFF Delay Timer(TOFF)",
          "Problem-2(Conveyor Sequence) Part-1",
          "Problem-2(Conveyor Sequence) Part-2",
          "Accumulating Timer(TMR)",
          "Monostable Timer(TMON)",
          "Retriggerable Timer(TRTG)",
          "Problem-3(Traffic Light)",
          "Problem-3 Solution Part-1(with three timers)",
          "Problem-3 Solution Part-2 (with three timers)"
        ],
        "Counter": [
          "Introduction of Counter",
          "Different Types Of Counters In Softmaster",
          "UP Counter(CTU)",
          "Down Counter(CTD)",
          "UP Down Counter(CTUD)",
          "Problem(Adjustment Control Of The Number Of Motor Operation)",
          "Solution Part-1(Adjustment Control Of The Number Of Motor Operation)",
          "Solution Part-2(Adjustment Control Of The Number Of Motor Operation)",
          "Ring Counter(CTR)"
        ],
        "Data Transfer Instruction": [
          "MOV,MOVP,DMOV,DMOVP Part-1",
          "MOV,MOVP,DMOV,DMOVP Part-2"
        ],
        "Output Terminal Compare Instruction(Unsigned)": [
          "CMP,CMPP,DCMP,DCMPP Part-1",
          "CMP,CMPP,DCMP,DCMPP Part-2"
        ],
        "Input Terminal Compare Instruction(Signed)": [
          "Input Type Comparison(LOADX,LOADDX) Part-1",
          "Input Type Comparison(LOADX,LOADDX) Part-2",
          "Problem(Traffic Light With One Single Timer)",
          "Solution(Traffic Light With One Single Timer)"
        ]
      },
      "requirements": [
        "Students are supposed to be familiar with Desktop/Laptop.",
        "No other prerequisites for this course, Because instructor will teach everything from scratch.",
        "Hunger for Learning new Technology"
      ],
      "description": "Today, PLC is being used in every process and manufacturing industries, apart from knowing the wires and connections, anyone should know the way to do PLC programs.\nPLC-Programmable logic controller is an industrial solid-state computer that monitors input and output, and makes logic-based decisions for automated processes or machines.\nHoneywell automation tools provide solutions with high performance and flexibility to effectively deploy with various industries and applications such as water, building infrastructure, data Center, renewable energy, machinery automation, material handling, marine and others.\nSoftMaster, programming software for all Honeywell’s PLC series. SoftMaster includes various types of features to accelerate the development of your PLC program.And this course is covering complete programming of PLC Model ML-50 Series of Honeywell PLC.\nAfter doing this course, you can easily program the other PLC series.This software is used for all the PLC series. And the instructions remain the same.\nThis course will teach you step by step How to make a Ladder Logics & Programming to any industrial process Control.\nWe have made explanation by Real Time LIVE Camera & Designing Software to understand the concept clearly.\nCourse Details:-\nCourse Title:- Honeywell PLC Programming using SoftMaster (PLC-SCADA-5)\nCourse Duration:- 12hr 43min\nModules:-\nOverview of PLC\nBasics of Honeywell PLC\nBasics of Ladder diagram\nLatching and Unlatching\nInterlocking\nTimer\nCounter\nData Transfer Instruction\nOutput Terminal Compare Instruction(Unsigned)\nInput Terminal Compare Instruction(Signed)\nIncrease/Decrease Instruction",
      "target_audience": [
        "Students who are pursuing or having Masters/ Bachelor’s Degree /Diploma in EC/EE/EEE/EI Branches.",
        "Working Professionals are also invited to join this course to enhance their knowledge in Industrial Automation."
      ]
    },
    {
      "title": "ATtiny microcontroller development for Arduino programmers",
      "url": "https://www.udemy.com/course/attiny-microcontroller-development-for-arduino-programmers/",
      "bio": "A practical guide for the development with the microcontrollers ATtiny 24/44/84 and 25/45/85",
      "objectives": [
        "What is an ATtiny and which variants are available",
        "Technical data and pinout discussion",
        "Effect of CPU clock speed and power supply",
        "Power saving mode Deepsleep and interrupts",
        "Brown-out detection and CPU clock setting with fuses",
        "Apply hardware settings with Arduino IDE and PlatformIO (Fuses)",
        "Source Code Creation with C++",
        "Configuring and setting up Visual Studio Code with PlatformIO and Arduino IDE",
        "Get to know different ATtiny cores and sources of supply",
        "Create Arduino ISP DIY Shield for flashing",
        "Use USB ISP Flasher",
        "Use different upload methods with different IDEs",
        "LED control with PWM",
        "Use of WS2812b and FastLED with ATtiny",
        "RTC module and shift register usage with ATtiny",
        "Evaluation of humidity sensor and Deepsleep"
      ],
      "course_content": {
        "Introduction": [
          "Introducation to this course",
          "About me",
          "Download code snippets",
          "Prerequisites for this course",
          "Course structure",
          "Surely there's another way",
          "Disclaimer"
        ],
        "ATtiny Basics": [
          "Introduction",
          "What is an ATtiny?",
          "Which programming language?",
          "How is the ATtiny flashed?",
          "ATtiny variants 25/45/85 and 24/44/84",
          "Technical specification using the ATTiny 44/45 as an example",
          "Digispark ATtiny85 with USB",
          "Pinout ATtiny 25/45/85 and 24/44/84",
          "CPU clock speed",
          "Overview of power consumption in idle mode",
          "Brown-out Detection",
          "Set hardware configuration"
        ],
        "IDE setup and upload devices": [
          "Introduction",
          "ATtiny Cores for Arduino IDE 1.8",
          "Setting up VSCode with PlatformIO for ATTiny",
          "Wiring Arduino UNO as ISP",
          "DIY Shield for Arduino UNO",
          "Using a USB ISP",
          "Microchip Studio",
          "Open VS Code in Arduino IDE",
          "Online Simulator for ATTinys"
        ],
        "First sketch with different upload variants": [
          "Introduction",
          "Wiring",
          "Upload with Arduino IDE 1.8.x and Arduino Uno",
          "Upload with Arduino IDE 1.8.x and USB-ISP",
          "Upload with VS Code PlatformIO and USB ISP",
          "Upload with VS Code PlatformIO and Ardiomp Uno",
          "Upload to Digispark ATtiny85 with Arduino IDE 1.8.x"
        ],
        "PWM with 3 LEDs": [
          "Project idea",
          "Wiring and PWM",
          "Create Project and analogWrite",
          "Source Code RGB LED",
          "3D design and printing",
          "Learnings"
        ],
        "Digital dice with Randomnumber and LEDs": [
          "Project overview",
          "Wiring",
          "Is a random number always random?",
          "Project setup and first test",
          "Start sequence",
          "Debounce Button",
          "Dice with effect",
          "3D Print pocket dice",
          "Learnings"
        ],
        "Digital dice with WS2812b and FastLED": [
          "Project idea LED dice",
          "Wiring",
          "Settings with start sequence and FastLED",
          "Debounce button and set Flags",
          "Control FastLED",
          "3D Print",
          "Learnings"
        ],
        "Binary clock with RTC Module and Shift Register": [
          "Project overview binary clock as keychain",
          "Wiring",
          "Set and read RTC SD1307 with Arduino Uno",
          "Shift register 74HC595N Pinout and wiring",
          "Set project settings and global variables",
          "Shift Register test and control all LEDs",
          "Convert decimal to binary code",
          "Display Minutes with RTC and Shift Register",
          "Read time and display hours with minutes",
          "3D Print",
          "Learnings Binary Clock"
        ],
        "Plant monitor and Deepsleep with CR2032 Battery": [
          "Project idea",
          "Wiring",
          "Calibrate moisture sensor with Arduino Uno",
          "Start project and activate buzzer",
          "Global variables",
          "Photoresistor and LED",
          "Function for Moisture Sensor",
          "Implement entire logic",
          "Attiny Snore or Deepsleep with current measurement",
          "3D Design"
        ],
        "Plant monitor with OLED": [
          "Project idea",
          "Wiring",
          "Flow chart and project setup",
          "Output text to OLED display",
          "Output sensor data display",
          "Create graphic for OLED display",
          "Read out and display battery voltage",
          "Deepsleep and Interrupt",
          "Learnings"
        ]
      },
      "requirements": [
        "First experiences in Arduino development (millis, pinMode, data types) advantageous",
        "Basics C++ in the Arduino environment",
        "With the online simulators a lot can be simulated, but you have a greater learning success if you rebuild the practical examples with the hardware components",
        "Everything about ATtiny is taught in this course"
      ],
      "description": "ATtinys are low-cost microcontrollers that impress with their small form factor and low power consumption (~4-8µA during DeepSleep). The ATtinys can be programmed easily and quickly in the familiar Arduino environment (IDE and C++), so you have a cheap alternative to the Arduinos and ESPs. The ATtinys can be operated with a button battery CR2032 and have enough memory for common DIY projects.\n\n\nFor the whole course the ATtinys 25/24, 44/45 and 84 as well as the Digispark ATtiny85 are used.\n\n\nWhat we go through in the course:\nBasics of Atmel ATtiny microcontrollers.\nGetting to know different components like transistors, OLED displays, shift registers and much more.\nGetting to know different upload variants for flashing the ATtinys\nUse of Visual Studio Code with PlatformIO or Arduino IDE\nSet hardware configurations like CPU clock frequency, brown-out detection etc.\nUse of digital-analog GPIOs and PWM controls\nPractical example: Digital dice with random number and LEDs\nPraPractical examplexisbeispiel: Digital dice with WS2812b and FastLED\nPractical example: Binary clock with RTC Module and Shift Register\nPractical example: Plant monitor and Deepsleep with CR2032 Battery\nPractical example: Plant monitor with OLED\nPractical example: Tones (creating own Melody) as circuit board pendan\nPractical example: Transistor circuit with reedswitch and clap detector\nPractical example: Temperature sensor with OLED 0,96” at Digispark ATtiny85\nPractical example: DIY Rubber Ducky with Digispark ATtiny85\n\n\nMy approach in the course:\nNo (ok, only very few) slides/Powerpoint but more projects. We start in the basics immediately with a practical example. You can also try out the theory immediately with the ATtinys and thereby understand it better.\nThe practical projects are developed together in step-by-step instructions.\nIn this context, together means that I demonstrate the code, depending on the task, and you can follow the execution or rebuild your own way.\nAll codes are available for download on the platform, so you can get to the result without frustration.\nNo lengthy explanations or theory monologues, we start right away in the basics chapter.\n\n\nBenefit from my years of experience and get the key skills in microcontroller development.\nGet this course right now and you can start right away.\nSee you in class\nMarkus Edenhauser",
      "target_audience": [
        "Anyone who wants to deepen their knowledge of low-power, small form factor microcontrollers.",
        "Developers who are interested in using low-cost microcontrollers for their projects.",
        "All those who want to understand, apply and write their own practical projects with microcontrollers.",
        "All those who want to learn more about microcontrollers with limited hardware resources"
      ]
    },
    {
      "title": "PathWave System Design (SystemVue) for RF & Antenna Engineer",
      "url": "https://www.udemy.com/course/keysight-pathwave-system-design-systemvue-rahsoft-rf-antenna-engineer/",
      "bio": "Become an expert in PathWave System Design (SystemVue)",
      "objectives": [
        "A top level understating on PathWave System Design (SystemVue) tool from Keysight from an Antenna and RF aspect",
        "Please note software will NOT be provided and you need to reach out to Keysight directly and ask for 1 month free trial",
        "Please note this is an advance coursed and we wont be going over RF and Antenna concept and will only show the software and tools"
      ],
      "course_content": {},
      "requirements": [
        "Antenna fundamentals or RAHAE102",
        "RF Fundamentals or RAHRF201",
        "RF Microwave fundamentals or RAHRF200",
        "RF Transceiver Design Fundamentals or RAHRF409"
      ],
      "description": "PathWave SystemVue for RF and Antenna Engineers\nImportant Notes:\nSoftware will not be provided; please request a 1-month free trial from Keysight directly.\nThis is an advanced course solely focused on the software and tools, excluding RF and Antenna concepts.\nThe course concentrates exclusively on the RF and Antenna aspects of the tool.\nCourse Overview:\nWelcome to RAHAE209, your gateway to mastering PathWave System Design (SystemVue) for RF and Antenna engineering. This advanced course is designed to introduce you to the versatile toolset of PathWave SystemVue, enabling you to analyze and design various RF systems, transmitters, receivers, and antenna arrays.\nCourse Highlights:\nIn RAHAE209, we will delve into the following key areas of PathWave SystemVue:\nIntroduction to PathWave SystemVue: Get acquainted with the design environment and interface of PathWave SystemVue.\nData Flow Analysis: Explore data flow analysis and simulations within the software.\nAnalog/RF Components: Learn about the Analog/RF components essential for system design in PathWave SystemVue.\nRF System Design: Master the art of RF system design, including RF transmitters, receivers, and transceivers.\nRF Budget Analysis: Understand how to perform RF budget analysis for your designs.\nHeterodyne Receiver: Explore the design and analysis of a heterodyne receiver.\nBlock Up Converter (BUC): Dive into the design and analysis of a Block Up Converter for X-Band applications.\nFilter Response Analysis: Learn to analyze filter responses using PathWave SystemVue.\nAntenna Array Design: Delve into the design of antenna arrays, including an 8x8 Uniform Rectangular Array.\nPhased Array Design: Explore simple phased array system design at 6 GHz.\nData Flow RF Beamforming: Understand the principles of data flow RF beamforming.\nTarget Audience:\nThis course is tailored for professionals working in the field of RF and Antenna Engineering, including:\nAntenna Engineers\nRF Engineers\nElectrical Engineers\nPostgraduate students pursuing antenna-related courses\nResearch scholars specializing in RF and Antenna fields\nInstructors:\nDr. Akhilesh Verma\nAntenna Engineering Scientist at Rahsoft\nPhD candidate in 5G Antennas\nOver 6 years of teaching experience\nSpecializes in 5G antennas, microstrip filters, disruptive beamforming, and more\nAhsan Ghoncheh\nCourse Adviser and Head of RF & Antenna Engineering Department at Rahsoft\nFormer roles include Avionic Design Engineer at Thales Avionics, Qualcomm RF Engineer, and Staff Engineer at Broadcom\nJoin us in RAHAE209, and gain the skills and expertise to harness the power of PathWave SystemVue for RF and Antenna system design. Enroll today and take the next step in advancing your career in this dynamic field!",
      "target_audience": [
        "Antenna Engineers",
        "RF Engineers",
        "Analog Engineers",
        "Electrical Engineers",
        "Electrical Students"
      ]
    },
    {
      "title": "PLC Advance Course Data Registers and Internal Relays",
      "url": "https://www.udemy.com/course/plc-advance-course-data-registers-and-internal-relays/",
      "bio": "Stop using old coding techniques and start Programming PLC like professionals in no time without going through long code",
      "objectives": [
        "Create a PLC Control Program",
        "Write codes instead of drawing long SFC or Ladder diagrams to",
        "Create amazing PLC projects",
        "Advance in your knowledge about PLC"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Mastering Data Registers and Internal Relays in PLCs",
          "Very Important Note: Review Process",
          "Programmable Logic Controller",
          "Quiz"
        ],
        "Internal Relays and Data Registers": [
          "Internal Utility Relays M",
          "Data Registers",
          "Internal Relays and Data Registers"
        ],
        "Examples": [
          "First Example Internal Relays M",
          "Second Example Internal Relays and Counters",
          "Reading Material",
          "Quiz"
        ],
        "MC & MCR with Example": [
          "Seaction Intro",
          "MC and MCR",
          "Summary",
          "Quiz",
          "Reading Material"
        ],
        "MOV and MOVP": [
          "Seaction Intro",
          "MOV and MOVP Commands",
          "Quiz",
          "Summary",
          "Reading Material",
          "Final Assignment: Integrating Advanced PLC Concepts"
        ],
        "Compare, Branch and Increment with Example": [
          "Seaction Intro",
          "Compare Branch and Increment with Example",
          "Summary",
          "Reading Material",
          "Master Control and Advanced Commands in PLC"
        ],
        "Practice Test": [
          "Practice Test on Programmable Logic Controllers (PLC) and Operations"
        ],
        "Who we are?": [
          "Who We Are?"
        ],
        "The End": [
          "The End"
        ],
        "Course Project": [
          "Course Project",
          "Data Registers and Internal Relays in PLC Applications"
        ]
      },
      "requirements": [
        "Basic Knowledge in PLC",
        "A Will to apply, not just watch"
      ],
      "description": "Stop using old coding techniques and start Programming PLC like professionals in no time without going through long code <<<\nWhy you should take this course?\nLearn how to control your machines and devices with the power of programming PLC.\nThis course makes the process easier by simplifying the coding language to make it understandable.\nThe course includes video tutorials, slides, and exercises for hands-on experience.\nImprove proficiency in programming PLC systems and gain knowledge on switches, sensors, input/outputs, data registers, and internal relays.\nContinual Updates <<<\nMore Than 1500 STUDENTS!!! THANK YOU!!!\nWhat students are saying:\nDarsh Gajjar says, \"Contents delivered is good, overall I enjoyed and explored much about how to program PLCs like this way.\"\nMark Luis says, \"What I was looking for.\"\nWelcome to this course.\nThis course will take you to a new level of PLC (Programmable Logic Controller) Programming. It will be a fun, easy, fast, and enjoyable programming journey for you.\nYou will no longer program PLCs like a newbie.\nAs most of you know, there is an easy way, a long way, and a smart way to program a PLC. Drawing long ladder logic diagrams or an SFC might solve the problem easily or simply, but it won't solve it effectively. It requires a thorough understanding of ladder diagrams to give you the ability to turn your idea into a project that is professionally programmed with PLC.\nWhat if I tell you that now you can unleash your full potential in PLC programming and be your own professional programmer?\nYou think this is cool but not yet interested? Well, how about the fact that this course will allow you to know what happens in internal registers inside PLC.\nTopics like internal relays, data registers, branching, if statements, and more advanced techniques will be introduced.\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects.\nWe strive to put all our hands-on experience into these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k + Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, in particular for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nWhat you will learn\nAdvanced PLC programming techniques.\nUnderstanding and utilizing data registers and internal relays.\nSimplified coding practices for PLC.\nHands-on exercises with switches, sensors, and I/O modules.\nProfessional programming practices to control machines and devices.\nWho is this course for\nIndividuals looking to advance their PLC programming skills.\nProfessionals in automation and control systems.\nStudents and hobbyists interested in PLC programming.\nAnyone looking to streamline and professionalize their PLC coding techniques.\nRequirements\nBasic understanding of PLC programming.\nA computer with internet access.\nEnthusiasm to learn and improve PLC programming skills.",
      "target_audience": [
        "PLC - Programmable Logic Controller - Geeks",
        "People Interested in Industrial Automation",
        "Anyone interested in Programming Programmable Logic Controller"
      ]
    },
    {
      "title": "Circuit Design and Simulation without Software",
      "url": "https://www.udemy.com/course/multisim-live-multisim-live-circuit-design-simulation-without-software/",
      "bio": "Multisim is the most complete and robust circuit design and simulation suite available.",
      "objectives": [
        "Simulate Microcontrollers",
        "Simulate Electronics Components",
        "Simulate Different Circuit Scenarios",
        "What Is a Circuit Simulator?",
        "Get Started With Multisim Live",
        "Multisim Live User Interface",
        "Build Your First Circuit",
        "SimulateYour Circuit",
        "Save, Edit, and Delete Circuits",
        "MultisimLive on Mobile",
        "More Advance Option! Multisim Software Package",
        "Use Oscilloscope and Props to Test different Circuit Locations",
        "Use Measurement devices to monitor circuit behavior"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "What Is a Circuit Simulator?",
          "Manual Circuit Design and Simulation Fundamentals",
          "Introduction to Circuit Simulators",
          "Section summary",
          "Reading Material"
        ],
        "Getting Started": [
          "Section Intro",
          "Getting Started with Multisim Live",
          "Exploring Multisim Live",
          "Section summary",
          "Reading Material"
        ],
        "Build Your First Circuit": [
          "Build Your First Circuit",
          "Simulate Your First Circuit",
          "Fundamentals of Building and Simulating Circuits",
          "Building and Simulating Your First Circuit",
          "Section summary",
          "Reading Material"
        ],
        "Simple DC LED Circuit": [
          "Section Intro",
          "Simulate Simple DC LED Circuit",
          "Designing a Simple DC LED Circuit",
          "Section summary",
          "Reading Material"
        ],
        "Sine to Square Wave Converter Using an Analog Comparator": [
          "Section Intro",
          "Sine to Square Wave Converter Using an Analog Comparator",
          "Sine to Square Wave Conversion",
          "Section summary",
          "Reading Material"
        ],
        "Fuse burn indicator": [
          "Section Intro",
          "Fuse burn indicator",
          "Designing a Fuse Burn Indicator",
          "Section summary",
          "Reading Material"
        ],
        "Power BJT Switching With Speed-Up Capacitor": [
          "Section Intro",
          "Power BJT Switching With Speed-Up Capacitor",
          "Improving Power BJT Switching Speed",
          "Section summary",
          "Reading Material"
        ],
        "Simple Series and Parallel Connection": [
          "Section Intro",
          "Simple Series and Parallel Connection",
          "Exploring Series and Parallel Connections",
          "Section summary",
          "Reading Material"
        ],
        "Digital to Analog Converter - DAC": [
          "Section Intro",
          "Digital to Analog Converter - DAC",
          "Simulating a DAC Circuit",
          "Section summary",
          "Reading Material"
        ],
        "Saving Editing and Deleting Circuits.": [
          "Section Intro",
          "Saving Editing and Deleting Circuits.",
          "Managing Circuit Projects in Multisim Live",
          "Section summary",
          "Reading Material"
        ]
      },
      "requirements": [
        "Have A Mobile, Laptop or Computer",
        "Have A basic Experience in browsing the internet",
        "Have a Will to apply",
        "No materials required if you only wish to view the course"
      ],
      "description": "Welcome to Multisim Live: Circuit Design and Simulation without Software\nIf you have any experience with electronics at all and have not yet heard about National Instruments or any of their software or hardware solutions like Multisim, LabVIEW, then you are missing a lot!!\nIn this course, you will get to learn Multisim Live, the newly announced browser-based circuit simulator based on NI's phenomenal Multisim standalone software.\nMultisim is easy to install, intuitive to use, and offers unparalleled performance in circuit design and simulation. You'll be able to design from scratch or import an existing circuit and get instant feedback on performance and power analysis.\nIt is the most comprehensive simulation tool available for designers and engineers in the electronic design industry today.\nWe hope you will enjoy this course!\nWhy you should take this course?\nMultisim is the most complete and robust circuit design and simulation suite available.\nIt includes only the best, proven SPICE analysis tools.\nYou can choose to create your own circuits or use simulations provided.\nThe software is compatible with Windows 7, 8, 10, Mac OS X 10.6 or later, and Linux.\nNo other application in this category has as many features.\nNow let's talk about circuit simulation software.\nPhysical circuits built with real components can be difficult to deal with. Each component has its own properties and parameters. If you are just getting started, you don't know exactly what parts will work, so you want to do some swapping and testing. Maybe you don't have the parts, and all you have is an idea. Or even if you know exactly what you're doing, the cost of the system requires that it be tested virtually before actual hardware assembly.\nThis is why you need simulators. You can design and build in a virtual environment, adjust and edit virtual component parameters to match real tested components. Multisim is the most complete and robust circuit design and simulation suite available.\nSimple and easy-to-use format and layout.\nThe component library is EXTENSIVE and easy to navigate.\nAccess to numerous virtual versions of benchtop test equipment like function generators, oscilloscopes, and others.\nIn this course, you will learn how to simulate electronic circuits in a professional simulation environment. It will help you unleash your full coding potential without buying any electronic components. This course will help you test your ideas and schematics without the risk of burning your board. No more bad connections or wrong codes.\nContents and Overview This course is designed for anyone interested in learning electronic design and simulation. You don't need to have any previous experience, and all you need is a computer or a mobile device.\nBonus: Multisim and Ultiboard Design Suite Step By Step Guide\nWhat you will learn\nSimulate electronic circuits in a professional simulation environment.\nDesign from scratch or import existing circuits and get instant feedback.\nUse SPICE analysis tools.\nNavigate the extensive component library.\nAccess virtual versions of benchtop test equipment like function generators, oscilloscopes, and more.\nTest your ideas and schematics without the risk of burning your board.\nWho is this course for\nBeginners interested in electronic design and simulation.\nElectronics hobbyists and enthusiasts.\nEngineering students and professionals.\nAnyone looking to learn Multisim and circuit simulation.\nRequirements\nNo prior experience required.\nA computer or a mobile device.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelance engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone looking to learn How to Use mobile device to Draw, Simulate and Test Circuits",
        "Anyone looking to learn How to Simulate Electronic Circuits",
        "Anyone looking to learn Multisim National Instrument Software",
        "Anyone looking to learn Multisim Live National Instrument Software",
        "Microcontroller Geeks",
        "Electronics Geeks"
      ]
    },
    {
      "title": "10 Days of Schematic Diagrams: Master Mobile Phone Repair",
      "url": "https://www.udemy.com/course/10-days-of-schematic-diagrams-master-mobile-phone-repair/",
      "bio": "Master Phone Schematic Diagrams & PCB Repair | Step-by-Step Mobile Board Repair with Scorpion App | For All Levels",
      "objectives": [
        "Read and interpret mobile phone schematic diagrams with confidence",
        "Use the Scorpion Repair App for professional phone diagnostics",
        "Perform advanced board-level repairs on iPhone, Samsung, and Xiaomi devices",
        "Navigate and understand complex PCB layouts and component relationships",
        "Diagnose and fix common phone issues using professional techniques",
        "Apply systematic troubleshooting methods to solve complex repair challenges"
      ],
      "course_content": {
        "Start Here - Your Repair Success Path": [
          "What You're Really Getting in This Course",
          "Your Success Pledge: Start Your Repair Journey",
          "Essential Resources for Your Repair Success"
        ],
        "Day 1 - Mastering The Scorpion Schematic Diagram Phone Repair App": [
          "Start Hour: Getting Started with Repair Software",
          "Practical: First Steps with Scorpion App",
          "Power Hour: Navigation Mastery Achieved"
        ],
        "Day 2 - PCB Map Navigation": [
          "Start Hour: Unlocking PCB Photo Powers",
          "Practical: Scorpion Map in-Action",
          "Power Hour: Map Navigation Success"
        ],
        "Day 3 - Diode Measurement": [
          "Start Hour: Diode Testing Fundamentals",
          "Practical: Testing Phone Connectors",
          "Power Hour: Testing Mastery Unlocked"
        ],
        "Day 4 - Solution Finding": [
          "Start Hour: Solution Database Secrets",
          "Practical: Power Key Repair Workshop",
          "Power Hour: Speed Repair Mastery"
        ],
        "Day 5 - Layout and Parts": [
          "Start Hour: PCB Layout Detective Skills",
          "Practical: Component Location Workshop",
          "Power Hour: Parts Recognition Victory"
        ],
        "Day 6 - Block Diagrams": [
          "Start Hour: System Flow Foundations",
          "Practical: Block Diagram Analysis",
          "Power Hour: System Analysis Mastery"
        ],
        "Day 7 - Bitmap PCB Files": [
          "Start Hour: Route Color Secrets",
          "Practical: Ground Path Workshop",
          "Power Hour: Route Analysis Expert"
        ],
        "Day 8 - iPhone Schematics Diagrams": [
          "Start Hour: iPhone Schematic Secrets",
          "Practical: Test Points Mastery",
          "Power Hour: iPhone Repair Master"
        ],
        "Day 9 - Samsung Schematics Diagrams": [
          "Start Hour: Samsung Sheet Success",
          "Practical: Power Circuit Repair",
          "Power Hour: Samsung Repair Expert"
        ]
      },
      "requirements": [
        "A Windows PC/laptop (Windows 10 or 11) for running the Scorpion Repair App",
        "Basic understanding of phone hardware components",
        "Willingness to practice and follow along with exercises",
        "No prior experience with schematic diagrams required"
      ],
      "description": "Are confusing schematic diagrams slowing down your phone repairs? Unlock the secrets of professional board-level repair in this comprehensive, practical course. Join over 14,110 successful students of CPU Academy on Udemy who have mastered Android and iPhone Mobile phones repair with CPU Academy.\n\n\nWHY THIS COURSE IS DIFFERENT:\n100% practical with real Android and iPhone on Scorpion Repair App\nStep-by-step schematic manual diagram tutorials for all major brands\nAccess to the powerful Scorpion Repair App\nDaily hands-on practice with real repairs\nComplete system for diagnosing ANY phone issue\nProfessional techniques used in actual repair shops\n\n\nWHAT YOU'LL MASTER IN 10 DAYS:\n\n\nDays 1-3: Essential Foundations\n- Professional schematic manual diagram interpretation\n- Android and iOS PCB layout analysis\n- Component identification across all platforms\n- Advanced diagnostic techniques using Scorpion App\n- Quick fault-finding methods used by experts\n- Systematic troubleshooting approaches\n\n\nDays 4-7: Advanced Techniques\n- Universal power distribution analysis\n- Android and iOS signal path tracing\n- Component testing strategies\n- Ground path identification\n- PCB repair fundamentals\n- Advanced board navigation for all devices\n\n\nDays 8-10: Brand-Specific Mastery\n- iPhone schematic secrets\n- Android system architecture mastery\n- Samsung Galaxy repair techniques\n- Xiaomi board-level solutions\n- Universal Android repair principles\n- Real-world repair scenarios\n- Business scaling strategies\n\n\nREAL SKILLS YOU'LL GAIN:\n1. Read ANY Phone Schematic Diagram\n- Interpret complex Android and iOS schematics diagrams\n- Navigate multi-page schematics easily\n- Understand component relationships\n- Master PCB layout analysis for all devices\n\n\n2. Professional Diagnostics\n- Use the Scorpion Repair App like a pro\n- Perform advanced component testing\n- Identify issues in minutes, not hours\n- Save time with expert shortcuts\n- Master Android-specific diagnostic tools\n\n\n3. Business Growth Skills\n- Increase repair success rates\n- Handle complex board-level repairs\n- Build customer trust with expertise\n- Scale your repair business\n- Offer specialized Android repair services\n\n\n4. Android & iOS Expertise\n- Master both Android and iOS repairs\n- Fix Android bootloop issues\n- Solve Android charging problems\n- Address common Android sensor faults\n- Repair Android display issues\n- Universal Android board repair techniques\n\n\n5. Practical Applications\n- Fix charging issues on all devices\n- Solve display problems\n- Repair camera modules\n- Address power faults\n- Fix network issues\n- Resolve Android-specific challenges\n\n\nCOURSE FEATURES:\n- 30 detailed video lessons\n- Daily practical exercises\n- Real repair demonstrations\n- Professional diagnostic techniques\n- Lifetime access to updates\n- Mobile and TV access\n- Course completion certificate\n- Android and iOS repair guides\n\n\nWHO SHOULD TAKE THIS COURSE:\n- Phone repair technicians seeking advanced Android and iOS expertise\n- Repair shop owners expanding services\n- Electronics enthusiasts wanting practical skills\n- IT professionals adding mobile repair expertise\n- Small business owners entering repair industry\n- Technical training instructors\n- Android repair specialists\n- Mastering Mobile Phone Schematic Diagram\n\n\nSUCCESS STORIES:\nReviews on my Courses:\n\"Fixed my first Android motherboard after just 3 days!\" - Mike, USA\n\"I've learned enough knowledge to increase my income with Android repairs\" - Sarah, UK\n\"Finally understanding schematics I avoided for years\" - Raj, India\n\"Now handling complex Android board repairs confidently\" - Tom, Australia\n\n\nINSTRUCTOR SUPPORT:\n- Direct question responses\n- Active discussion participation\n- Regular content updates\n- Android repair troubleshooting assistance\n\n\nWHY WAIT?\nEvery day you delay is another day of:\n- Wasting time on trial-and-error repairs\n- Missing out on profitable Android board-level repairs\n- Losing customers to more skilled technicians\n- Struggling with complex phone issues\n- Missing Android repair opportunities\n\n\nNote: This course requires a Windows PC/laptop (Windows 10/11) for running the Scorpion Repair App.",
      "target_audience": [
        "Aspiring phone repair technicians looking to build professional diagnostic skills",
        "Current repair shop owners wanting to expand their service capabilities",
        "Electronics enthusiasts seeking to master board-level repairs",
        "IT professionals expanding into mobile device repair",
        "Small business owners planning to start a repair business",
        "Technical training institutes teaching phone repair"
      ]
    },
    {
      "title": "Program your first PLC EASY!",
      "url": "https://www.udemy.com/course/program-your-plc/",
      "bio": "Learn how to program your first PLC the EASY way, with this novice course to Programmable Logic Controllers",
      "objectives": [
        "Master a basic PLC hardware configuration in a typical industrial system using Schneider Electric Zelio Logic",
        "Master ZelioSoft software environment that Schneider Electric Zelio Logic uses in industrial automation",
        "Master the basic programming elements that FBD language uses in industrial automation",
        "Master the basic elements that a PLC uses for digital control, including both discrete and analogue signals.",
        "Understand and identify the elementary elements of debugging and control for error prevention and problem solving.",
        "Understand the basic 5S methodology and how to implement their own methodology in PLC programming for industrial automation.",
        "Start programming in FBD language right away!!!!"
      ],
      "course_content": {
        "Introduction - Why follow this course?": [
          "What am i going to learn?"
        ],
        "PLC programming: Let's refresh some of the basics!": [
          "Hardware Elementary...",
          "Bits and Words!",
          "What is Ladder Diagram?",
          "What is Function Block Diagram?",
          "Bit or Word ??"
        ],
        "Software environment": [
          "How to start and select controller hardware in ZelioSoft software",
          "Taking a tour in the Menus and Modes in ZelioSoft 2 Software",
          "Our first look at the ZelioSoft 2 Function Bar",
          "Do you know ZelioSoft software?"
        ],
        "Discrete programming elements": [
          "Discrete Inputs and Outputs",
          "Set - Reset Function",
          "Bistable Function",
          "Logic Functions",
          "Timer Functions",
          "Counter Functions",
          "Fast Counter Function",
          "Boolean Function",
          "RTC Function",
          "CAM Block Function",
          "Edge recognition with Pulses on Edges Function",
          "Which function should i choose?"
        ],
        "Numeric programming elements": [
          "Analogue Inputs and Outputs",
          "GAIN Function",
          "Compare Function",
          "Min-Max Comparison Function",
          "Schmitt Trigger Function",
          "Multiplexing Function",
          "Math Functions",
          "Text Function",
          "Archive Function",
          "Solar Functions",
          "Status Function"
        ],
        "Conclusion - Let's create our first program!": [
          "Following the 5S rule!",
          "Workshop 1 -Smart House",
          "Workshop 2 - Industrial Production Line",
          "Start Programming!!"
        ]
      },
      "requirements": [
        "All you need is to be interested in Industrial Automation!!! (it's always easier if you are familiar with PLC basics)"
      ],
      "description": "What you are going to learn within the next hours of my course, which I really hope that you will enjoy, is how to program your first PLC, by examining step by step the basic parts that comprise a modern Programmable Logic Controller, using Schneider Electric Zelio Logic.\nTo be more precise, we are going to start with a small refreshing of basic knowledge on the “heart” of a PLC, see what are the basic staff that a PLC is made of, and later on we will examine PLC’s mind, in order to “capture” the key elements inside PLC Ladder and mainly Function Block Diagram (FBD) programming languages standard...\nFollowing that, we will start by analyzing one by one and step by step all the programming elements involved, from the simplest to the most complex, both analogue and digital, while at the same time we will take a detailed tour in the FBD programming environment.\nAs soon as we describe software's programming elements, we will begin programming our first example in FBD language, having in mind how to use most of our resources, fast & proffesionally, the EASY way!!\nFinally when we finish this course above all I hope that you will be ready to start programming your first PLC in FBD language, by knowing how to implement a 5S methodology in your future PLC programming.\nWhat i have learned from all my years of experience is, that it doesn’t matter if you are an electrician, an academic, or an IT programmer…\nWhat really makes the difference is, having someone to show you the easiest way, on how to be clear and methodical….since after all “PLC is for everyone!!”",
      "target_audience": [
        "Maintenance engineers",
        "Engineering Students",
        "Engineers",
        "Technologists",
        "Technicians",
        "Electricians",
        "Industrial Users",
        "Students",
        "Mechanical Engineers",
        "Automation Enineers",
        "System Integrators",
        "Automation Specialists"
      ]
    },
    {
      "title": "Practical Circuit Design and Simulation Tips - ADC, LDO, BGR",
      "url": "https://www.udemy.com/course/adc-practical-circuit-design-and-simulation-tips/",
      "bio": "Refresh your knowledge on these topics",
      "objectives": [
        "ADC Design",
        "FFT needed in ADC",
        "CMOS Switch design for Sample and Hold",
        "Operational Amplifier design",
        "Layout strategies for opamp",
        "ADC simulation time and number of samples",
        "Resistors and calibration loops",
        "Latch and MUX design",
        "20 Gbps Serializer",
        "Parallel Input to Serial Output"
      ],
      "course_content": {
        "Biasing a transistor": [
          "BGR Design and Voltage/Current Distribution Circuits",
          "Gm/Id design methodology for sub-100 micron CMOS technology",
          "Common Source (CS) Amplifier with Active load circuits - design and analysis"
        ],
        "Feedback Circuits": [
          "Feedback in IC Design",
          "Sense and Return circuits for feedback"
        ],
        "Layout Design Strategies - Opamp Design": [
          "Amplifier with Active Loads",
          "Amplifier Design - Working Example",
          "Differential Amplifier to Opamp - Circuit Design Methodology and example",
          "Layout Design and Floor Planning Strategies for Opamp and CMFB Circuits"
        ],
        "Voltage Reference Circuit Design -": [
          "DC Bias Circuits and Voltage Generation",
          "Voltage Regulation circuits and Low Dropout regulators (LDOs)",
          "Current Mirrors"
        ],
        "Low Drop Out - Practical Tips": [
          "Common Notations in LDO",
          "PSRR in LDO",
          "Improve PSRR in LDO"
        ],
        "Data Transport Applications": [
          "High Speed Latch Design",
          "2:1 MUX design for Transmitter",
          "Serializer for 20Gbps Transmitter",
          "Question: CTLE in FPGA"
        ],
        "ADC Design and Simulation": [
          "ADC - Spectral Analysis and FFT points",
          "ADC - CMOS Switch Design for Sample-and-Hold",
          "ADC - Types of Resistors used in IC Design",
          "ADC - Opamp Performance near Nyquist Frequency",
          "ADC - Performance - SNR SNDR INL DNL",
          "DAC - Choice of DAC for Sigma Delta ADCs and Simulation time of ADCs"
        ],
        "ADC Performance Metrics": [
          "Data Converter Performance Metrics",
          "How to improve accuracy of ADC",
          "ADC Gain Error",
          "ADC Offset Error"
        ],
        "Sensor Interface Read Out": [
          "Sensor data read out - Accuracy and Calibration"
        ]
      },
      "requirements": [
        "CMOS Analog IC Design",
        "DC Bias of Transistors and small signal Gain calculation",
        "Curiosity to learn and design"
      ],
      "description": "Practical circuit design and simulation tips to be used in DC Biasing, LDO/BGR, ADC Opamp design.\nThis course addresses those topics which are practical in nature and used by practicing engineers. The 3-hour course material is based on my CMOS Analog IC Design Q&A Refresher Course offered in Spring 2020, where practicing designers from the industry and academia brought out questions that they needed answers for.\nThere might not be a continuity of topics. I will try to cover the topics with in the scope of designing an ADC. These principles are applicable to most of the ADC designs.\nLearn more about\nDesign Thinking in IC Design\nDC Biasing of the circuits\nCircuits for reference voltage and current generation\nVoltage Regulator\nBGR\nLDO\nV-to-I\nPrecision Current References\n.Opamp design for Analog to digital converters\nOTA\nBuffer\nUnity Feedback OTA\nLayout design strategies – 2stage opamp + CMFB\nSense and Return mechanisms in Feedback circuits\nCurrent and Voltage circuits\nSub-Threshold Conduction\nLow voltage Operation\nADC Design and Simulation\nNear Nyquist performance of Opamp for ADC Circuits\nSpectral Analysis and No. of FFT Points for simulation\nSimulation time for performance\nResistors – their variation and Calibration\nSwitch design for S/H\nCDAC - Capacitive DAC for Sigma Delta ADC\nData Transport Applications\nHigh Speed Latch design\n2:1 MUX and 1:2 DEMUX\nSerializer design for 20Gbps",
      "target_audience": [
        "Electronics enthusiasts",
        "Beginner IC designers",
        "ADC designers who need some help",
        "Curious students of Analog design",
        "Freshers in Electronics"
      ]
    },
    {
      "title": "VSD - Functional Verification Using Embedded-UVM - Part 1",
      "url": "https://www.udemy.com/course/functional-verification-using-embedded-uvm-part-1/",
      "bio": "Introduction to Discrete Event Simulation Technology, Functional Verification, Getting acquainted with Simulation tools",
      "objectives": [
        "SoC design flow, role of Functional Verification",
        "Logic Modeling, Introduction to Verilog",
        "Concept of Hierarchy, Simulation-Time, and Concurrency in Hardware Modeling",
        "Simulation Technology, Discrete Event Simulation",
        "Verification Trends and Challenges",
        "Concepts and Principles of Functional Verification",
        "Testbench Architecture and Components",
        "Lab – Tool Setup and Usage -- a simple DUT with traditional Verilog testbench will be provided with a Makefile to compile and simulate – Debug using waveforms"
      ],
      "course_content": {
        "E-UVM Installation procedures": [
          "E-UVM Installation Procedure - Part 1",
          "E-UVM Installation Procedure - Part 2"
        ],
        "Introduction to verification frame-work": [
          "Introduction to Makefile concept and labs",
          "Introduction to functional spec and behavioral description",
          "Introduction to typical System-On-Chip",
          "Introduction to functional simulation and TLM simulation",
          "Basics of hardware, software, virtual platform and algorithms",
          "More information about virtual platforms",
          "Classification and conclusion of tasks involved in frontend and backend"
        ],
        "Verification Trends And Challenges": [
          "Introduction to SoC FPGA",
          "Why the world needs more verification?",
          "Corollary of Moore's Law and its significance",
          "Repercussions of Moore's Law on verification",
          "Why the need of System Verilog and not Verilog ?",
          "Verification tool performance and take-aways",
          "Simulation vs Emulation and concept of multi-threading"
        ],
        "The need of the hour : Embedded-UVM": [
          "Multi-core processor throughput vs latency and why E-UVM?",
          "More on multi-threading and world-wide initiatives on open-source verification",
          "More details and opportunities on open-source verification",
          "Present and future of programmable hardware",
          "How programmable hardware will be verified in future?"
        ],
        "Conclusion": [
          "Open-source hardware is not free",
          "Implications of FPGA in future"
        ]
      },
      "requirements": [
        "Should be good with digital electronics",
        "Should be good with Linux/UNIX basic commands"
      ],
      "description": "Now here's a course, \"hand-crafted\" for anyone and everyone, who want to move from back-end to front-end OR for people just curious to know and learn, what exactly happens in field of VLSI verification. The reason its \"hand-crafted\" is because it starts from very basics and in coming parts of this course, things will slowly move towards advanced level UVM.\nAnother reason for this course to be \"hand-crafted\" is due to the open-source tool used to cover labs introduced in this course. This is Part - 1 in the \"Verification Series\". This part will cover SoC design flow, basics of functional verification, trends and challenges, introduction to open-source Embedded-UVM, emulation, and the DUT\nAbout Embedded-UVM:\nEmbedded UVM is an opensource implementation of IEEE 1800.2 standard of Universal Verification Methodology. In this webinar, we take a dive into Embedded UVM and its use cases as a platform for Functional Verification and SoC-FPGA based Emulation.\nAbout Speaker:\nPuneet Goel is a 1994 graduate in Electronics from Punjab Engineering College. He has 24 years of experience in the VLSI industry where he worked for STMicro, Motorola, Texas Instruments and TranSwitch. For the past 8 years, he has been working for Coverify Systems Technology, where he provides verification services and works on creating viable opensource solutions for chip verification. Puneet is the main developer of Embedded UVM.",
      "target_audience": [
        "Beginner electronics student, curious to know about verification",
        "Professional from a different back-ground of VLSI, but wants to learn VLSI verification methodologies",
        "Anybody looking to change domain to Verification from other VLSI domains"
      ]
    },
    {
      "title": "Design and Create Any Custom Component in Altium Designer",
      "url": "https://www.udemy.com/course/design-and-create-your-own-custom-component-in-altium/",
      "bio": "A-Z Guide to designing, testing and Manufacturing any Component, using the most Popular Electronic Software Altium",
      "objectives": [
        "Design any Microcontroller module",
        "Make your Own Training Kit"
      ],
      "course_content": {},
      "requirements": [
        "Altium Designer Software (Included)"
      ],
      "description": ">>> Learn How to design any Component from Scratch With Zero Experience in Electronics, No Effort <<<\n>>> Continues Updates <<<\n1000 STUDENTS!!! THANK YOU!!!\nWhat students are saying:\nAlejandro Said says, \"The instructor has a good speech speed. He presents concise examples showing important software controls.\"\nWhy you should take this course?\nIn this course, you will have access to everything from basics of schematic capture to 3D modeling and physical circuit simulation. You will be able to design and create any custom component in Altium Designer. Learn how to design any electronic component with the most popular software in the industry.\nA-Z Guide to designing, testing, and manufacturing any component using the most popular electronic software Altium.\nYou will be able to develop your own successful business with this knowledge.\nWelcome to this course.\nAn A-Z guide that allows you to make factory-quality components that meet your exact needs. This guide covers designing, drawing, and testing any electronic component using one of the most popular software in the electronics industry. After this course, you will be a master at making your own electronic components.\nYou will become a professional in making your own electronics components and will even be able to master mass production of any electronic item you find useful. Video lectures are included along with the software package used in this course.\nThe course begins with an introduction to electronic circuit design software, followed by lessons for beginners to become experts. By the end, we will make fully functional electronic components and prepare them for mass production like professionals.\nAll you need for this course is your laptop and headphones.\nThis course is open for comments and suggestions.\nWhy should you take this course? Because you will learn by doing, not just by listening, and you will become an expert in making your own electronic items.\nWhat You Will Learn:\nBasics of schematic capture in Altium Designer.\n3D modeling and physical circuit simulation.\nDesigning, drawing, and testing custom electronic components.\nPreparing components for mass production.\nDeveloping a successful business with these skills.\nWho is This Course For:\nBeginners with no experience in electronics.\nHobbyists and DIY enthusiasts.\nEngineers and technicians looking to enhance their skills.\nAnyone interested in learning Altium Designer.\nRequirements:\nNo prior experience required.\nBasic computer skills.\nWillingness to learn and apply new skills.\n\n\nAbout the Instructor:\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading entity in the Microcontroller industry with over 13 Years of Experience in teaching and practical projects. We provide in-depth, step-by-step blueprints on taming complex topics in easy and digestible bite-sized videos.\nHaving been in the Programming and Microcontroller business since 2007, we've catered to students' and educators' needs, teaching over 250k-THOUSAND students and counting through our 100+ courses on Udemy.\nAshraf Said AlMadhoun is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He is the Chief Educational Engineer at Educational Engineering Team, a company founded to explore new trends and technologies and to educate the world.\nOur online courses have helped over 250,000 people globally to excel and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Engineering Students",
        "Electronics Students",
        "Everyone who's interested in Electronics",
        "Everyone who's interested in Circuit Design"
      ]
    },
    {
      "title": "Arduino Cloud: Retrieving and Storing Sensor Data",
      "url": "https://www.udemy.com/course/arduino-cloud-retrieving-and-storing-of-sensors-data/",
      "bio": "Arduino Cloud is the perfect solution for retrieving and storing sensor data. With its simple and easy-to-use interface",
      "objectives": [
        "Learn how to configure and use variables in your Arduino IoT Cloud sketches.",
        "Learn retrieving from Arduino IoT Cloud",
        "Learn storing of sensors data to Arduino Cloud",
        "Learn how to authenticate with the Arduino IoT Cloud REST API to make requests using HTTP Client, JavaScript and Python.",
        "Learn how two Things can communicate with each other through variable syncing."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "About",
          "Setup",
          "Initial Interview: Cloud-Based Sensor Data Logging with Arduino",
          "Fundamentals of Arduino Serial Communication Setup",
          "Setting Up Arduino for Cloud Communication",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Arduino Cloud: Retrieving and Storing Sensor Data Test",
          "Summary",
          "Reading Material"
        ],
        "who we are": [
          "who we are?"
        ],
        "Project": [
          "Section Intro",
          "Project 1",
          "Project 2",
          "Project 3",
          "Implementing Serial Communication in Arduino Projects",
          "Building and Implementing Cloud-Integrated Projects",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Course Project",
          "System Demonstration: Arduino Cloud Sensor Data Dashboard"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Fritzing app",
        "Willingness to learn",
        "Arduino board"
      ],
      "description": "In today's world, managing and analyzing data from various sensors is crucial for numerous applications. Arduino Cloud: Retrieving and Storing Sensor Data is designed to teach you how to effectively use Arduino Cloud for monitoring and storing your sensor data. This course provides a comprehensive introduction to using the Arduino platform to connect sensors, send data to the cloud, and retrieve it for further analysis.\nCourse Overview:\nThis course covers the fundamentals of the Arduino Cloud platform, teaching you how to retrieve and store data from sensors. You'll learn to connect sensors to an Arduino board, send data to the cloud, and utilize various features of Arduino Cloud for real-time data monitoring and analysis. Perfect for beginners and professionals alike, this course will equip you with the skills needed to leverage the power of IoT in your projects.\nWhat You'll Learn:\nIntroduction to Arduino Cloud: Understand the basics and benefits of using Arduino Cloud.\nConnecting Sensors: Learn how to connect various sensors to your Arduino board.\nData Transmission: Send sensor data to the cloud for monitoring and analysis.\nData Storage: Store sensor data in the cloud and retrieve it as needed.\nAdvanced Features: Explore features like webhooks, OTA uploads, and integration with Alexa.\nPractical Projects: Develop projects that utilize cloud storage and real-time data monitoring.\nWho Is This Course For:\nElectronics Enthusiasts: Individuals passionate about electronics and IoT.\nSTEM Students and Educators: Those involved in STEM education seeking practical IoT projects.\nHobbyists: Hobbyists who want to add cloud connectivity to their Arduino projects.\nProfessional Developers: Developers interested in integrating cloud solutions into their projects.\nRequirements:\nBasic Electronics Knowledge: A fundamental understanding of electronics is recommended.\nComputer Access: A computer with internet access.\nArduino Kit: Arduino board, sensors, and a Wi-Fi module for hands-on practice.\nAbout the Instructor:\nEducational Engineering Team is a renowned group of skilled engineers with over 13 years of experience in teaching and practical projects. Led by Ashraf, a seasoned educator and mechatronics engineer, the team has taught over 250,000 students worldwide. Known for their clear and comprehensive teaching style, the team has created over 100 courses on Udemy. Ashraf’s mission is to explore new trends and technology and help educate the world, making complex topics easy to understand and accessible.\nTestimonials:\n\"This course is excellent for anyone wanting to learn about IoT and cloud data storage. The projects are practical and easy to follow.\" - Sarah M.\n\"Highly recommend this course for beginners. It provided me with the necessary skills to use Arduino Cloud effectively.\" - Tom R.\n\"A well-structured course with clear instructions. I've learned a lot about integrating sensors with cloud platforms.\" - Jessica L.\nFAQ Section:\nWho can benefit from this course? This course is ideal for electronics enthusiasts, STEM students, hobbyists, and professional developers.\nWhat are the payment options? Various payment plans are available, including one-time payments and installment options.\nIs there a refund policy? Yes, we offer a 30-day money-back guarantee if you're not satisfied with the course.\nWhat equipment do I need? You'll need a computer with internet access, an Arduino board, sensors, and a Wi-Fi module.\nCan I communicate with peers and instructors? Yes, the course includes forums and Q&A sections for interaction with peers and direct support from instructors.\nCall to Action: What are you waiting for? Enroll now and start leveraging the power of Arduino Cloud for your sensor data projects!",
      "target_audience": [
        "this is for anyone who wants to begin in Arduino Cloud",
        "for engineering students",
        "for students who wants to learn Arduino Cloud"
      ]
    },
    {
      "title": "PIC Microcontroller meets LabVIEW : Step by step guide",
      "url": "https://www.udemy.com/course/labview-meets-pic-microcontroller-step-by-step-guide/",
      "bio": "Virtualize your Microcontroller on PC Screen using LabVIEW",
      "objectives": [
        "Design Microcontroller Circuits",
        "Learn Microcontroller Programming & Interfacing",
        "Program Microcontroller using C Language",
        "Design LabVIEW Interface",
        "Program Using LabVIEW",
        "Connect LabVIEW with Microcontroller",
        "Learn serial communication basics in LabVIEW",
        "Learn serial communication basics in PIC Microcontroller"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Digital Electronics"
      ],
      "description": "Do you know that really cool microcontroller, the PIC? You may be wondering what this has to do with LabVIEW. It turns out that they work together quite well! In this course, we will show you how to use a PIC microcontroller and LabVIEW together.\nMicrocontroller interfaces are changing today. A new breed of microcontrollers called the PICmicro offers a high-performance interface to LabVIEW programs. This course will help you understand how to integrate the two technologies and work with them effectively.\nLabVIEW meets PIC Microcontroller: Step by Step Guide is a course specially created for electronic geeks and engineers who want to take PIC Microcontroller programming to the next level.\nWhy You Should Take This Course?\nThis is a step-by-step guide course that will teach you how to virtualize your PIC Microcontroller on a PC screen using LabVIEW.\nThe course includes an introduction to LabVIEW and its interface, as well as basic programming techniques in C.\nLearn how to develop programs using the popular PIC programming language, which is then programmed onto the PIC Microcontroller circuit board.\nContinual Updates More Than 1000 STUDENTS!!! THANK YOU!!!\nWhat Students Are Saying:\n\"Thanks a lot for teaching the course. I learnt a lot from this course. Thanks again.\" - Yves Lebrun\n\"Good quality content that meets my exact needs. Thanks.\" - Fawzi Attalah\n\"Thanks for this course, it has everything I needed to know to start my project. Would recommend it to anyone who asks. Thanks.\" - William Johan\nWelcome to this course.\nCourse Overview: The course lessons will explain “How to work on PIC Microcontroller and LabVIEW” by using C Language and LabVIEW Environment. This course will work best for you if you have basic knowledge of electronics. You will learn how to interface the PIC Microcontroller with LabVIEW.\nWhy Learn PIC Microcontroller?\nIf you are an engineering or science student, you might come across projects in which you want physical interaction with your computer system and display the operations on a PC screen. PIC Microcontroller is one of the cost-effective tools which you can create or purchase and start programming to interact with physical elements using your logic and create results the way you want.\nUsing LabVIEW, you can display various process parameters like motor speed, LED ON/OFF feedback, temperature signal. You can also create unlimited buttons, switches, and message boxes to control the PIC Microcontroller.\nAt the end of this course, you can create innovative projects. The only thing you need to do is THINKING, WIRING, and CODING.\nWhat You Will Learn\nIntroduction to LabVIEW and its interface.\nBasic programming techniques in C for PIC Microcontroller.\nHow to develop programs using PIC programming language.\nInterfacing PIC Microcontroller with LabVIEW.\nVirtualizing PIC Microcontroller on a PC screen using LabVIEW.\nWho Is This Course For\nElectronic geeks and engineers.\nStudents and professionals interested in microcontroller programming.\nAnyone looking to integrate PIC Microcontrollers with LabVIEW.\nRequirements\nBasic knowledge of electronics.\nA computer with LabVIEW and PIC programming software installed.\nEnthusiasm and a willingness to learn.\n\n\nAbout the Instructor Info Educational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology, helping educate the world to make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and provide guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students"
      ]
    },
    {
      "title": "FCC-GROL-Cert (General Radiotelephone Operator License)",
      "url": "https://www.udemy.com/course/fcc-grol-cert-general-radiotelephone-operator-license/",
      "bio": "GROL Certification Practice Exams Questions",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Welcome to the comprehensive FCC GROL exam preparation program! The General Radiotelephone Operator License (GROL) is a crucial certification for individuals working in the field of radio communication. This license, issued by the Federal Communications Commission (FCC), empowers professionals with the knowledge and skills needed to operate, repair, and maintain various types of radio communication equipment.\nTo be eligible for the GROL, applicants must pass a written exam that covers three key elements: Element-1 (Basic Radio Law and Operating Practice), Element-3 (General Radiotelephone Theory), and Element-8 (Ship Radar Endorsement). Our Udemy practice questions focus on Element-1 and Element-3, providing a targeted approach to mastering these fundamental aspects.\nWith 6 practice quizzes designed to mimic the exam format, aspiring candidates can assess their knowledge and readiness. The overall passing mark of 70% ensures that participants grasp the essentials. Moreover, the detailed package containing 744 questions with explanations serves as a valuable resource for in-depth understanding.\nFor those craving a deeper dive into the concepts, a separate detailed class is available on request (Please DM for more details). Having successfully guided veterans and radio professionals, I am confident that this Udemy program stands as one of the most cost-effective solutions for exam preparation. Share the initiative and let's collectively support aspiring individuals in achieving success in the FCC GROL exam.",
      "target_audience": [
        "These test papers will help you prepare and clear the GROL certification."
      ]
    },
    {
      "title": "Analog Engineering Interview Preparation (Analog CMOS IC)",
      "url": "https://www.udemy.com/course/rfic-interview-questions-analog-interview-questions-rahsoft/",
      "bio": "a crash course review of the common questions asked in the Analog Engineering Interviews",
      "objectives": [
        "preparation for Analog Engineering Interviews",
        "There is no guarantee that only these topics would be asked but based on our experience and interactions with our students after tens of interviews these are the common questions.",
        "This is not a guarantee that you will answer all questions or will pass the interview as Analog Engineering takes hundreds of hours of classes as well as years of experience and it is just an additional help to review the shared topics before the interview."
      ],
      "course_content": {},
      "requirements": [
        "Foundation is needed this is not a course that teaches you everything on analog but a crash course for those whom need to freshen up before their interview day",
        "Electrical Engineering Background"
      ],
      "description": "Please note this course is open and we would be adding content to it as we go based on student feedback on monthly basis\nThe Analog and RFIC Engineering Interview Preparation course is a summary of topics asked from our students over the past 6 years . This course does not guarantee your readiness for answering every single question of an Analog or RF interview as there are many topics and one might get a post doc and still be missing topics covered in Analog and RF Engineering however it is the most common questions we have seen used during different interviews from entry level test engineering all the way to RF Design positions.\nFor the past 4 years we have been providing hard copy of these questions to our 10000+ students around the world and those who have studied them have mentioned some questions had been similar to the topics covered however please note taking this course with no RF and Analog background or without review of fundamental topics included in our Rahsoft RF Engineering Certificate might help you on answering some question or for some maybe the chance of getting your feet in the door but it will not help you for surviving the actual job as dedication and depth study is needed on the Analog and RFIC Engineering related jobs.\nPlease keep in mind in order to have the minimum knowledge of the topics we recommend you study RAHRF101,RAHRF200,RAHRF201,RAHRF152 and RAHRF409 in order and for more advance topics refer to our RF Certificate page on all courses offered such as RAHRF412, RAHRF469,RAHRF526,RAHRF527\nThat said we will briefly go over top level RF and Analog topics which is the minimum each RF Analog engineer must know\n\n\nWe would be very grateful if you can message us if there was a topic or an interview question you were asked and we can see if it is related to add to our course.\nPlease note we are not allowed to help you with any interview question you have or recommend any guidance on work or school project. Please do not ask us questions which are out of the topics covered.",
      "target_audience": [
        "Electrical Engineers",
        "Analog Engineers",
        "Electrical Engineering Students"
      ]
    },
    {
      "title": "Membership Sites With aMember: Starter & Advanced Training",
      "url": "https://www.udemy.com/course/membership-sites-with-amember-starter-advanced-training/",
      "bio": "40 - Brand New Over-The-Shoulder Video Series On How To Build A Wordpress Membership Site With aMember",
      "objectives": [
        "Learn How To Create A Membership Site With aMember Starter & Advanced Training",
        "Learn How To Install And Configure aMember on Wordpress",
        "Learn How To Plan Out Your New Membership Site",
        "aMember Makes It Easy To Operate A Membership Site Using WordPress"
      ],
      "course_content": {},
      "requirements": [
        "A Wordpress Website is required",
        "A computer with internet access",
        "A willingness to learn and take action"
      ],
      "description": "Membership Sites With aMember: Starter & Advanced Training\n\n\nUpgrade Your Skills And Expertise With Our Advanced Video Training…\n\n\nHere's What You'll Learn In These Upgraded Video Series:\nHow to work with the advanced features and make the best of it.\nHow to become more efficient in your daily activities and speed up your output using this platform.\nLearn the smart way to make things happen fast as the experts do with some key features of this service.\nLearn how to reduce frustrations and time-consuming activities by applying my practical advice when using this service.\nHow about automation? Learn the simple tricks and tips we use to get it done.\nMaster every aspect of this service so that you can train other people how to use it as it.\nStay at the top of your competition and keep your business ahead of the learning curve.\nAnd so many more...\n\n\nWant to build passive income?\n\n\nBrand New Over-The-Shoulder Video Series On How To Launch Membership Sites With aMember.\nEveryone online is searching for the elusive passive income. Did you know it was right under your nose the entire time?\nIt is, and it’s in the form of a membership site. If you’re here, then you’ve probably figured that out by now.\nYou also know that using a service like aMember is a great way to put it all together.\nMembership sites are great because they enable you to get monthly recurring payments from your members.\nEach month a person stays a member your wallet gets a little fatter. All of this is possible when using a service like aMember to maintain your membership site.\n\n\nOpen Your Membership Site To Affiliate Marketers\nDid you know that aMember gives you the opportunity to allow affiliates to make money by referring members?\nThis may be the number one reason why you’re considering aMember in the first place. You may not have time to go out there and find people to join your site.\nYou’ll be surprised by how quickly your site grows if it converts well for those pushing your affiliate program.\n\n\nThe Main Thing Holding You Back Is How Difficult Amember Is To Use\nLet’s be honest, aMember is complicated. There is so much that you need to learn before your site can become profitable.\nHow much time and money are you going to waste learning how to do it all? Not much time at all if you watch our videos.\nThey will pay for themselves in a matter of no time flat. You can spin your wheels forever trying to figure out aMember, or you can build up your membership site.\nThe choice is yours, but choosing the wrong route will cost you in the end.\nTime is money, and you can easily blow a lot of it by thinking it’s possible to learn everything on your own.\n\n\nIntroducing…\n\n\nMembership Sites With aMember Simplify Running A Membership Site\nIt can seem like a million different obstacles are getting in your way when trying to start a membership site.\nYou know deep down inside this is something that you’ve wanted to do for quite some time.\nYou can’t wrap your mind around how aMember works. You’ve spent countless hours trying to figure out the smallest of details. Look, you’re not the only person who has been in this situation before.\nThat’s why we created our aMember video series. We wanted to help people get the site of their dreams launched.\nThat’s precisely what we’ve done in creating our foolproof videos. Anyone can set up a membership site after watching them.\nIt’s only a matter of watching the videos and then putting the information in them to use.\n\n\nEarn Money During The Lifetime Of Their Membership\nYou’ll make money as long as a customer continues to be a member. There are many different types of sites you can run using aMember.\nWe go through all of that with you. You’ll have zero questions after watching our videos. Better yet, you’ll be well on your way to make money.\nMembership sites are one of the oldest methods of making money, and they are here to stay.\nYour members will continue to pay a monthly fee as long as you offer them a good reason to do so.\n\n\nSign up for this training today and make your future as bright as it possibly can be.\n\n\nMembership Sites With aMember: Starter Training\nSee the course subjects below:\n1 - Overview\n2 - Purchasing Or Upgrading Amember\n3 - Download and Extract Amember\n4 - Uploading To The Server Through FTP\n5 - Setting Up the Database and Admin Pages\n6 - Admin Setup Global Settings\n7 - Setting Up Plugins\n8 - Setting Up Transactional E-Mail - Part 1\n9 - Setting Up Transactional E-Mail - Part 2\n10 - Setting Up PDF Invoices\n11 - Customizing the Login Page\n12 - Customizing the Video Player\n13 - Customizing Personal Data Settings\n14 - Cutomizing Your Payment System\n15 - Custoimizing Your Autoresponder E-Mail\n16 - Setting Up a Backup Payment System\n17 - Setting Up the Help Desk.\n18 - Creating A New Product\n19 - Creating A Buy Button\n20 - Conclusion\n------------------------------------------\nMembership Sites With aMember: Advanced Taining\nSee the course subjects below:\n21 - Overview\n22 - Creating Recurring Products\n23 - Managing Multiple Products\n24 - OTO Integration\n25 - Managing Users - Part 1\n26 - Managing Users - Part 2\n27 - Managing Content - Part 1\n28 - Managing Content - Part 2\n29 - Managing Content - Part 3\n30 - Setting Up Your Help Desk\n31 - Integration with Warrior Plus - Part 1\n32 - Integration with Warrior Plus - Part 2\n33 - Editing Standard Forms\n34 - Customer Blacklist\n35 - WordPress Integration\n36 - E-mail Broadcast Newsletters\n37 - Affiliate Management\n38 - Amazon S3\n39 - Facebook Integration\n40 - Conclusion - Cron Job\n-------------------------------------------",
      "target_audience": [
        "Professionals, Business Owners, Internet Marketers, Entrepreneurs, Hobbyists",
        "If you want to master aMember and the unlimited income potential is has for your business"
      ]
    },
    {
      "title": "Operational Amplifiers: Linear Integrated Circuits",
      "url": "https://www.udemy.com/course/operational-amplifiers-linear-integrated-circuits/",
      "bio": "Learn the concepts of OP AMPs from Linear Integrated Circuits and solve problems!",
      "objectives": [
        "Understand the concepts of OP AMPS",
        "Know how to apply principles of electrical engineering for the circuits involving op amps",
        "Using IC741, Build different analog circuits",
        "Solve Problems on Linear Integrated Circuits"
      ],
      "course_content": {},
      "requirements": [
        "No Prerequisites, Everything is covered from the scratch (Even Ohm's Law)"
      ],
      "description": "The course deals with having a complete understanding on IC741 - Operational Amplifiers, as a part\nof Linear Integrated Circuits.\nTo understand the concepts, there is a video on 'A review on Network Theory'\nThe following are the contents discussed:\n1. What is IC741?\n2. Ideal characteristics of OP AMP\n3. Open loop configuration of OP AMP\n4. The concept of virtual short and virtual ground\n5. Closed loop configuration - Inverting Amplifier, Non Inverting Amplifier\n6. DC Characteristics\n7. AC Characteristics - Slew Rate\n8. Applications - Voltage Follower, Bufer,\nAnalog Inverter, Summer, Subtractor\n9. Log and Antilog Amplifier, Analog Amplifier\n10. Differentiator, Integrator\n11. Non Linear Applications - Half Wave Rectifier\n12. Open Loop Comparator\n13. Zero Crossing Detector\n\n\nProblems on OP AMPs from competitive examinations will also be solved.\nAn operational amplifier, or op-amp for short, is a voltage amplifier with external feedback components such as resistors and capacitors connected between its output and input terminals. These feedback components determine the amplifier's final function or \"operation,\" and the different feedback topologies, whether resistive, capacitive, or both, allow the amplifier to execute a wide range of operations, earning it the name \"Operational Amplifier.\"\nOperational amplifiers have a large open loop DC gain on their own, but by using Negative Feedback, we can create an operational amplifier circuit with a very accurate gain characteristic that is only dependent on the feedback employed. The term \"open loop\" refers to the absence of any feedback components around the amplifier, implying that the feedback line or loop is open.",
      "target_audience": [
        "Anyone who wants to learn Linear Integrated Circuits"
      ]
    },
    {
      "title": "ESP32 WIFI Lessons",
      "url": "https://www.udemy.com/course/esp32-wifi-lessons/",
      "bio": "ESP32 WIFI Commnunication on TCP, UDP, Http, WebSocket, MQTT and ESPNow",
      "objectives": [
        "ESP32 WIFI Communication on UDP",
        "ESP32 WIFI Communication on TCP",
        "ESP32 WIFI Communication on Http",
        "ESP32 WIFI Communication on WebSocket",
        "ESP32 WIFI Communication on MQTT"
      ],
      "course_content": {},
      "requirements": [
        "one or two ESP32 boards"
      ],
      "description": "This course focus on ESP32 WIFI communication based on the following protocols: TCP, UDP, Http, WebSocket and MQTT.\n\n\nAll the code has been tested on ESP32_idf_sdk_ver4.4.1. In the videos, we use the command line compile environment to compile and test the code.\n\n\n(1) For TCP,  we discuss the ESP32 lwIP socket TCP work stand flow from both the server side and the client side. And demo how to communicate ESP32 device with the computer TCP server software or the computer TCP Client software.\n\n\n(2) For UDP, we discuss the difference between the TCP and UDP, and compare the work flow of UDP with TCP work flow, and also we program the ESP32 device with UDP code, demo it how to communicate with PC UDP software.\n\n\n(3) For Http, we discuss every detail about the Http protocol, including http get, post, put, request methods, and demo how we run the code on ESP32 board to get web page data through the different methods from internet.\n\n\n(4) For WebSocket, we discuss why we need the websocket and the websocket data format, and demo how the websocket work from the websocket server, the websocket script and the websocket client.\n\n\n(5) For Mqtt, we discuss the Mqtt protocol, and demo how the Mqtt works on ESP32 from the client and server side.\n\n\n(5) For ESPNow, we discuss the espnow protocol, data format and demo how to send, receive and broadcast data by using espnow.",
      "target_audience": [
        "People who are interested in programming ESP32 WIFI software based on ESP32 idf SDK."
      ]
    },
    {
      "title": "Advanced Tesla diagnostic education course",
      "url": "https://www.udemy.com/course/advanced-tesla-diagnostic-education-course/",
      "bio": "for enthusiasts of tesla cars",
      "objectives": [
        "knowledge about changing secured configuration of tesla",
        "root access to file of tesla system",
        "Keys. How to add, how to read, how to write new. Several methods",
        "Airbags crash reset. How to read and reset by software and hardware"
      ],
      "course_content": {},
      "requirements": [
        "recommendation to go through basic course"
      ],
      "description": "General. MCU. Warning lights. Driving status. How to connect to vechicle ports.\nMCU is Tesla's  Media Control Unit hardware. MCU 1 was used in Model S and Model X cars after March 2018. The Model 3 and Model Y started with MCU2 and later transitioned to MCU3 in late 2021. Vehicles with MCU1 can be upgraded to MCU2. MCU2 has the Intel Atom processor.\nDriving status\n1.The power meter displays real-time power usage. During acceleration, the bar fills to the right with a gray color (or white if the display is dark) to represent power being used. During deceleration (when Model Y is moving and you release your foot from the accelerator pedal), the bar fills to the left with a green color to represent power being fed back to the Battery by regenerative braking. 2.When Autosteer is available but you haven't activated it, the icon is gray. When it is active - the icon is blue 3.Currently selected drive mode: Park, Reverse, Neutral, or Drive. 4.Driving speed. 5.Other cars detected on the road (as applicable) and etc.\nConnection to the LAN ports\nAnother new port will be open after entering into Factory / Developer mode in Tegra CPU\n\n\nDiagnostic modes. Activation of modes.\nOn new firmware, the entrance to the Factory occurs through reset all data. The main difference between modes:\n• Factory mode remains after MCU reboot (Media control unit)\n•Developer mode after reboot MCU crashes\n•After enabling these modes, you can read Alerts (errors) in the block\n\n\nLoki diagnostic hardware. Installing firmware, changing configuration and maps.\n•You also can do the following work:\n•Reset valet\nReset pin to drive\nReset pin speed limit\n•Rail on\nRead / Write Tesla car Config\nInstall Firmware\nInstall Maps, change map region\nRedeploy devices and car parts\n\n\nInstalling navigation maps\n•WARNING! Before installing maps, make sure that the vehicle is not downloading / installing the firmware and whether the alarm clock is off.\n•To install car maps, you need to connect to WiFi, and wait about 10 minutes to make sure that the car does not suddenly download the firmware at the moment of maps installation.\n•If something is installing than you need to wait until the firmware will be fully installed.\n\n\nToolbox 2.1 offline & 3.0 online – diagnostic software.\n•Toolbox 2.1 must be in Factory Mode to work. For cars with a date of manufacture from 2012 to February 2018.\n•Press the brake pedal to turn on the rail mode (“car ignition”) if there are no keys. Press the diagnostics button, Alerts DTCs. After that, in the Panel menu, we can view all Errors.\n•Then go through the menu items, such as Battery, Brakes, Body Controls, Thermal ( for example, we can see what is happening with pumping coolant, de-airing the cooling system), Restraint System (For example, resetting airbag errors and air suspension errors.)\n\n\nAbbreviations. Rear and Front lights .\n\n\nAbout Autopilot.\nSecure configuration.\nI am root.\nKeys. How to add, how to read, how to write new. Several methods.\nAirbags crash reset. How to read and reset by software and hardware\n•Some materials will be repeated from basic course..",
      "target_audience": [
        "tesla car owners, self-studing amateur, enthusiasts of tesla cars"
      ]
    },
    {
      "title": "Machine Learning Mastery: Essential Crash Course",
      "url": "https://www.udemy.com/course/machine-learning-crash-course-s/",
      "bio": "Master the Essentials of Machine Learning: A Comprehensive Crash Course",
      "objectives": [
        "Understanding the Basics of Machine Learning:",
        "Diverse Learning Models",
        "7-Step Machine Learning Process",
        "Real-World Applications",
        "Hands-On Experience",
        "Critical Thinking and Problem-Solving"
      ],
      "course_content": {
        "Machine Learning": [
          "Section Intro",
          "What is Machine Learning",
          "Machine Learning Fundamentals",
          "History of Machine Learning 1",
          "History of Machine Learning 2",
          "Supervised Learning",
          "Fundamentals of Machine Learning",
          "Unsupervised Learning",
          "Semi-Supervised Learning",
          "Reinforcement Learning",
          "Types of Machine Learning",
          "7-Steps of Machine Learning Process 1",
          "7-Steps of Machine Learning Process 2",
          "Foundations of Machine Learning",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Machine Learning Essentials Practice Test",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Course Project",
          "Predictive Churn Analysis for Client Retention"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No prior experience in machine learning is required, making this course accessible to beginners. Familiarity with basic programming concepts will be beneficial but not mandatory."
      ],
      "description": "Machine Learning - Crash Course: Your Pathway to Becoming a Tech Innovator!\nEmbark on a Transformative Journey and Skyrocket Your Career!\nWelcome to an Exciting World Where Machines Learn and Innovate!\nAre you ready to unlock the mysteries of Machine Learning? Our \"Machine Learning - Crash Course\" is tailored for aspiring tech enthusiasts, professionals seeking a career leap, and anyone fascinated by the power of AI.\nWhy Machine Learning Matters:\nHigh-Demand Skill: Step into a world where your expertise in Machine Learning opens countless doors in various sectors.\nCareer Transformation: Equip yourself with skills that are pivotal in shaping the future of technology.\nLeading Innovation: Be at the cutting edge, understanding how machines can learn, predict, and revolutionize industries.\nUnveil the Secrets of Machine Learning:\nEmbark on an insightful journey starting with the basics of 'What is Machine Learning?' Gain exclusive insights with our preview-enabled introductory lectures, where we demystify the evolution and history of this fascinating field.\nProgress into understanding complex concepts like Supervised and Unsupervised Learning, exploring how machines interpret and process data without human intervention. Delve into the nuances of Semi-Supervised and Reinforcement Learning, unraveling how machines learn from minimal guidance and self-discovery.\nConclude your learning with a deep dive into the 7-Steps of the Machine Learning Process, gaining practical knowledge on implementing these skills in real-world scenarios.\nYour Learning Experience:\nHands-On Approach: Engage in practical exercises for real-world proficiency.\nGuidance from Experts: Learn from industry leaders with rich practical experience.\nFlexible Study Modules: Learn at your pace with our learner-friendly platform.\nVibrant Community: Join a network of peers and experts for collaborative learning.\nCertification: Receive a certificate that adds weight to your professional profile.\nWho Will Benefit the Most?\nAmbitious Data Scientists and Analysts\nSoftware Developers aiming to expand their expertise\nStrategic Business Professionals\nCurious Minds eager to understand AI and Machine Learning\nExclusive Offer Alert!\nGrab your chance for early bird discounts and additional learning resources.\nStart Your Machine Learning Adventure Today\nJoin \"Machine Learning - Crash Course\" and be at the forefront of technological innovation!\nEnroll Now - Begin Your Transformative Journey!\nWhat You Will Learn\nBasics of Machine Learning\nSupervised and Unsupervised Learning\nSemi-Supervised and Reinforcement Learning\nThe 7-Steps of the Machine Learning Process\nPractical implementation in real-world scenarios\nWho Is This Course For\nAspiring data scientists and analysts\nSoftware developers\nBusiness professionals\nAnyone interested in AI and Machine Learning\nRequirements\nBasic understanding of computer science\nInterest in learning about AI and Machine Learning\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Individuals looking to kickstart a career in AI and Machine Learning.",
        "Professionals seeking to expand their expertise into the realm of artificial intelligence.",
        "Enthusiasts eager to stay abreast of the latest developments in this rapidly evolving field."
      ]
    },
    {
      "title": "Learn Internet of Things(IOT) in Fun and Practical way",
      "url": "https://www.udemy.com/course/esp32-cam-moduleiot-in-new-practical-approach/",
      "bio": "Learn IOT step by step. And learn to make real time Projects with ESP32 Camera Module.",
      "objectives": [
        "How to get started with ESP32 CAM Module.",
        "you will understand about OV2640 camera and its settings.",
        "you will learn to make live video streaming with local IP.",
        "you will learn to make live video streaming with Blynk application platform.",
        "you will learn how to make Face and Eye recognition based projects.",
        "Definitely you will get idea about SD card feature and how to use for projects.",
        "you will learn to take picture with ESP32 CAM module and how to store in SD card.",
        "how to send emails using SMTP server and ESP32 camera module with image attachments."
      ],
      "course_content": {},
      "requirements": [
        "Passion with own interest. Nothing else needed.",
        "All are explained from scratch."
      ],
      "description": "About this course :\nwelcome to this amazing project oriented course. this course is all about ESP32 CAM module. through this course you can make your own projects using this module. What ever needed to make projects is explained in this course.\nFirst of all this course is fully practical oriented. This course covers all the basics of ESP32 CAM module and Arduino software which is used to program the ESP32 CAM module. also i explained about the FTDI module.\nWhy this ESP32 CAM ?\nyou may seen all the IOT courses. those are made with ESP8266 and ESP32. using these device we can only do some advanced things. also it is concerned in this course, because without these devices we cant learn basics. but, these device do not have camera and SD card features. this is advantage of this module over ESP8266 and ESP32.\nWhat we can do with ESP32 CAM ?\nUsing this camera feature, we can create projects like spycam, security system, door lock system based on face recognition, and etc. we can do projects wherever need face recognition for example: face recognition based attendance system. also we can recognise eye, text, objects and so on. And using SD card feature, we can save taken images and videos. we do not need to bother about storage.\nDevices and software's i used in this course :\nESP32 CAM MODULE and FTDI programmer module\nFor programming i used Arduino software, thats it.\nwhat will you learn by section by section :\nOn first section, I explained about the hardware(ESP32 CAM), software, and programming connection with FTDI programmer. Also i explained how to program with Arduino uno board.\nIn second section, I taught how to make your own live video streaming with local IP address and ESP32 CAM.\nIn third section, you will learn about the Blynk IOT platform and how to make live video streaming with blynk IOT platform.\nIn Fourth section, I will teach you all about the SD card feature and how to use it with your projects. And i explained how to store image taken by ESP32 CAM module in SD card.\nIn Fifth section, this is an exciting section. in this i taught about the face and eye recognition using python. And i explained this through the Face and Eye recognition project.\nIn sixth section, i taught about the SMTP server. And how to use it with ESP32 CAM. here, I explained with the project named as how to send email notification with image attachments( Image taken with ESP32 CAM ).\nIn seventh and eighth sections you will learn to make telegram alert with image and take photo with Blynk IOT.\nNinth section consist all the codes and details.\nAfter this course what you can do :\nAfter this course completion you can make your projects ( like i mentioned before in this description ) for your home security system. Also you would be learnt about Blynk and some IOT platforms. like other IOT courses, you will be learn basic IOT developer things.\nSee some of the industries started to use ESP32 boards. so as a techy learning about these boards is essential. that is the esssence of this course. Thank you.",
      "target_audience": [
        "Everyone. Who want to kick start your career in IOT."
      ]
    },
    {
      "title": "Arduino Mastery Projects",
      "url": "https://www.udemy.com/course/arduino-step-by-step-2017-getting-started-projects/",
      "bio": "Become a confident maker by creating 10 fun projects",
      "objectives": [
        "Convert the broad specifications of a system into a working gadget.",
        "Understand the iterative process of prototyping",
        "Understand the challenges of implementing an idea into a gadget",
        "Appreciate that a single set of specifications can be implemented in a variety of ways",
        "Earn confidence in their ability to make simple gadgets"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of the Arduino platform",
        "An Arduino Uno",
        "The Arduino IDE installed on your computer",
        "Basic hardware components (see free Lecture 4 for details)",
        "Basic tools (see free Lecture 3 for details)",
        "Know how to use the Arduino IDE to write sketches and upload them to the Arduino",
        "Know how to install libraries to your Arduino IDE",
        "Understanding of programming the Arduino at the beginner level",
        "Patience"
      ],
      "description": "If you have already taken, or are in the process of taking my Arduino Step by Step Getting Started course, or if you already know the basics of the Arduino platform, then with a little practice you can create very interesting and fun projects on your own!\n\nWe created this project course for anyone who wants to practice the design of simple gadgets based on the Arduino.\nThese projects will give you the opportunity to apply your knowledge of individual components and simple programming to design and make fun gadgets.\n\nBy the end of this course, you will have dramatically improved your skills and confidence in designing small Arduino-based systems. You will be able to go on and create your own gadgets.\nLearning how to design a simple system requires you to think not just about the individual components, but also about how they will work together, how the end-user will interact with your gadget, and how to iterate from prototype to the final version\nIn this course you will practice simple system design by creating 10 gadgets of increasing difficulty.\nIf you have an Arduino and a few basic components, like environment sensors, an LCD screen, buttons and LEDs, then you are ready to get started with this course!\n\nI invite you to review the free lectures in the first section of the course to find out more details about it.\nIf you are excited about making simple gadgets with the Arduino, join many other Makers and me in Arduino Step by Step Getting Started - Projects!\nPLEASE consider the list of prerequisites of this course carefully. If you are not familiar with any of the prerequisites, please consider enrolling to Arduino Step by Step Getting Started first. That course will help you prepare for this project course.",
      "target_audience": [
        "Current students of Arduino Step by Step Getting Started",
        "Recent graduates of Arduino Step by Step Getting Started",
        "Anyone with a beginners-level understanding of the Arduino who wishes to create their first projects"
      ]
    },
    {
      "title": "Mastering Trinamic Stepper Motor Drivers with Arduino",
      "url": "https://www.udemy.com/course/trinamic/",
      "bio": "Learn to Use Trinamic Stepper Motor Drivers and Control them Wirelessly in Arduino",
      "objectives": [
        "Understand Trinamic Stepper Motor Drivers in Standalone Mode",
        "Learn to program all Trinamic drivers via SPI and UART",
        "Master StallGuard and throw away your limit switches",
        "Use the ESP32 to wirelessly control your stepper motor over Wi-Fi"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Arduino"
      ],
      "description": "Trinamic stepper drivers are the most advanced, yet affordable, stepper drivers on the market. They have all kinds of amazing features such as StallGuard which can detect when something is pressing against the motor. However, these drivers are difficult to understand and set up.\nIn this course, I will show you how to become a master with these drivers and write your own firmware in Arduino. We will also learn Blynk in order to control our motors over WiFi.\n1) First, we will discuss the basics of a stepper motor and how they work.\n2) Then we will dive into controlling the TMC2209 via UART both manually as well as with the TMCStepper library. This will allow you to set different settings such as current and stall settings.\n3) Then we will explore the AccelStepper Library where I will show you how to use it to control the motor with advanced positioning. You will be able to accelerate and decelerate your motor to a position, speed it up and slow it down, and control it as precisely as you want.\n4) Finally, we will quickly cover Blynk, where I will show you how to build a custom Android or iOS app to control your stepper motor over WiFi.",
      "target_audience": [
        "Anyone wanting to learn to use Trinamic stepper drivers"
      ]
    },
    {
      "title": "Never Miss a Pill Again: Automate with Arduino!",
      "url": "https://www.udemy.com/course/arduino-automatic-medicine-reminder/",
      "bio": "Craft your personalized Arduino-powered medicine reminder and ensure timely doses every single day.",
      "objectives": [
        "Make your own Arduino Automatic Medicine Reminder",
        "Learn Working Principle of RTC Time Module and Buzzer for firing Sound",
        "Interface LCD, Switches and Sound devices with Arduino",
        "Learn the working principle of Automatic Medicine Reminder",
        "How to Deal with Sounds and Tones Using Arduino.",
        "How to set Each Mode",
        "How to interface Buttons with Arduino.",
        "How Arduino Can make your life easier.",
        "How Program, burn a code and wire Arduino.",
        "What are the right tools that you need to start making amazing projects?"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Arduino",
        "A Will to apply, not just watch"
      ],
      "description": "The Power of Automation for Health:\nIn the hustle and bustle of modern life, it's easy to miss out on that critical medicine dosage. But what if technology could assist you? Dive into the world of Arduino and electronics to craft a solution that ensures you never miss a pill again!\nCourse Highlights:\nComprehensive Learning: Start from the basics, understanding the core concepts of Arduino programming and progressing to design your medication reminder.\nHands-On Experience: With each module, immerse yourself in hands-on activities, transforming theoretical knowledge into practical skills.\nUnderstand Core Electronics: Delve deep into components like resistors, transistors, LEDs, and more, understanding their role and implementation in your project.\nTailored Solutions: Learn to customize alarms, set specific timings, and even adapt to power outages with battery backups.\nWhy This Course?\nReal-World Application: Not just another Arduino project, but a tool that can genuinely impact health and well-being.\nEngaging Content: With clear explanations, practical sessions, and expert guidance, your learning journey is bound to be exciting and impactful.\nCommunity Support: Engage with fellow learners, share insights, troubleshoot issues, and collaborate on innovative ideas.\nCourse Outcome:\nBy the end of this course, not only will you have a functional Automatic Medicine Reminder but also a solid foundation in Arduino programming and electronics. This project could be a stepping stone to many more innovations, or even a thoughtful gift for someone you care about.\nUnlock the Benefits:\nLifetime Access: Enroll once and get lifetime access to course updates, resources, and community discussions.\nExpert Assistance: Have queries? Our expert instructors are just a message away!\nCertificate of Completion: Validate your skills and add value to your professional journey.\nTake the Step for Health and Knowledge:\nBlend the wonders of technology with the essentiality of health. Dive into a world where electronics meets everyday utility. Enroll today and embark on a journey of innovation, learning, and immense satisfaction.",
      "target_audience": [
        "Arduino Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning How Automatic Medicine Reminder works",
        "Anyone Interested in Learning How to Make Automatic Medicine Reminder using Arduino",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning How to make Arduino Automatic Medicine Reminder",
        "Anyone Interested in Microcontrollers"
      ]
    },
    {
      "title": "Arduino Smart Parking System",
      "url": "https://www.udemy.com/course/arduino-parking-system/",
      "bio": "Master Arduino Programming and Build Your Own Automated Parking Solution",
      "objectives": [
        "Dive into the fundamentals of Arduino programming, gaining a solid understanding of its capabilities and versatility.",
        "Explore the world of distance measurement using ultrasonic sensors, a crucial component for detecting obstacles in your parking system.",
        "Master the art of controlling DC motors to precisely maneuver a car in and out of a parking space, showcasing your ability to create physical movement with Ardu",
        "User Interface",
        "Combine all your skills to assemble an automated parking system from scratch, ensuring that it functions flawlessly and efficiently."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Smart Parking System Concepts",
          "Circuit making",
          "Coding introduction",
          "Coding loop",
          "Quiz",
          "Coding concept and function of robot",
          "Stimulation",
          "Understanding Basic Concepts of Circuitry and Coding",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Fundamentals of Circuits and Coding for Robotics",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Summary",
          "Reading Material",
          "Final System Demo: Arduino-Based Smart Parking Prototype"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge",
        "Electronics Basics",
        "A basic understanding of mathematics, including algebra and geometry, will be useful for understanding sensor data and calculations involved in the course.",
        "Computer Skills",
        "Motivation and Enthusiasm"
      ],
      "description": "Welcome to the Arduino Parking System course! Are you interested in learning how to build an automated parking system using Arduino? This course is designed to teach you the fundamentals of Arduino programming and electronics while creating a real-world project.\nIn today's rapidly evolving technological landscape, automation and smart systems are becoming increasingly prevalent. The Arduino platform has emerged as a powerful tool for electronics enthusiasts, students, and DIYers to bring their innovative ideas to life. This course is designed to provide you with hands-on experience in building an automated parking system using Arduino, offering a blend of theory and practical application.\nWhat You'll Learn:\nArduino Basics: Learn the basics of Arduino programming and electronics.\nUltrasonic Sensors: Understand how to use ultrasonic sensors for distance measurement.\nMotor Control: Control DC motors to move a car in and out of a parking space.\nUser Interface: Create a user-friendly interface to interact with the system.\nAutomation: Build an automated parking system from scratch.\nBy the end of this course, you'll have the knowledge and skills to create your own Arduino-based parking system.\nWhy This Course Matters:\nWith the rise of smart cities and the growing demand for automation in various industries, the ability to create real-world projects like an Arduino-based parking system is a valuable skill. Whether you're an aspiring electronics engineer, a curious student, or a DIY enthusiast, this course offers you the opportunity to:\nGain hands-on experience and confidence in working with Arduino.\nDevelop problem-solving skills as you tackle real engineering challenges.\nUnderstand the principles of automation and smart systems.\nShowcase your abilities through a fully functional parking system project.\nEnroll Now\nReady to embark on your Arduino parking system journey? Click the button below to enroll in the course:\nEnroll Now\nWhat You Will Learn\nBasics of Arduino programming and electronics\nUsing ultrasonic sensors for distance measurement\nControlling DC motors for parking automation\nCreating user-friendly interfaces\nBuilding a complete automated parking system\nWho Is This Course For\nAspiring electronics engineers\nStudents and DIY enthusiasts\nTech hobbyists interested in automation and smart systems\nRequirements\nBasic understanding of electronics and programming\nInterest in Arduino and automation projects\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Electronics enthusiasts looking to apply Arduino in real-life projects.",
        "Students or beginners interested in learning Arduino and electronics.",
        "DIYers who want to build an automated parking system."
      ]
    },
    {
      "title": "Program Microcontrollers With Drawings - Coding No More",
      "url": "https://www.udemy.com/course/flowcode-program-microcontrollers-with-drawings-coding-no-anymore/",
      "bio": "Stop writing long codes that waste your time and required skills and effort, Start Drawing your Code with Simple Shapes",
      "objectives": [
        "Program Any Microcontroller without writing a single code",
        "Draw instead of writing codes",
        "Create amazing projects"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge in Microcontroller",
        "Basic Knowledge in Electronics"
      ],
      "description": "Welcome to the Program Microcontrollers With Drawings - Coding No More course!\nAre you tired of writing long, complex codes to program microcontrollers? Do you find traditional programming methods challenging and time-consuming? This course is here to revolutionize your approach to microcontroller programming by introducing a new, intuitive, and enjoyable way to program using drawings.\nWhy You Should Take This Course:\nInnovative Learning: Learn to program microcontrollers with drawings in less than an hour.\nBeginner-Friendly: Perfect for those new to programming or who find traditional coding daunting.\nFun and Engaging: Use simple shapes to control LEDs, create music, and even make a robot walk.\n100% Online: Accessible anytime, anywhere, making learning convenient and flexible.\nContinuous Updates: Stay ahead with the latest content and improvements.\nWhat Our Students Are Saying:\nFloyd Craig Wolverton: \"Good overview of this tool. Met my needs. I am interested in ways to teach people who say they hate programming to learn to create programs despite their predisposition.\"\nImran Ahmad: \"Best explanation of everything, taking topics right from scratch. Great experience.\"\nJoin over 800 students who have already discovered the joy of programming microcontrollers with drawings!\nAuthor Bio\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects. We strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos. This real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects. Educational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting. Currently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\"\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place. Educational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers. That team also works as freelancer engineers, helping many students in their graduation projects, and provides guidance and consulting for many students over the years to help them kick-start their careers. Ashraf’s core skill is explaining difficult concepts through in a step by step easy to understand matter using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate. His passion for Microcontrollers and Programming and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi has guided his personal development and his work through Educational Engineering. Ashraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry. Educational Engineering Team offers Course on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nWhat You Will Learn\nDraw shapes to program microcontrollers\nCreate fun projects such as controlling LEDs, making music, and building walking robots\nUnderstand the basics of programming in a visual, intuitive way\nDevelop projects without writing a single line of code\nWho is This Course For\nBeginners who are new to programming\nHobbyists looking for a fun way to program microcontrollers\nEducators seeking innovative teaching methods\nAnyone interested in microcontroller programming without the hassle of coding\nRequirements\nNo prior programming experience needed\nBasic understanding of microcontrollers is helpful but not necessary\nA computer with internet access\nA willingness to learn and experiment",
      "target_audience": [
        "Anyone interested in Microcontrollers",
        "Anyone who have problem with coding and using programming languages",
        "Anyone looking for a new adventure in Programming Microcontrollers",
        "Anyone looking to simulate systems before production easily"
      ]
    },
    {
      "title": "PIC Microcontroller Meets Python: Step by Step",
      "url": "https://www.udemy.com/course/pic-microcontroller-meets-python-step-by-step/",
      "bio": "Control your PIC Microcontrller using Python effectively and unleash the power of Python coding and PIC Hardware",
      "objectives": [
        "Control PIC Microcontroller using Python Language",
        "Connect Python Script with PIC Microcontroller",
        "Learn serial Communication basics in Python",
        "Learn serial Communication basics in PIC Microcontroller",
        "Design PIC Microcontroller Circuits",
        "Set up electronic circuits",
        "Set up the Communication protocol on PIC Microcontroller",
        "Write basic applications for PIC Microcontroller in Python to control basics functions",
        "Advanced Control of analog and digital inputs and outputs",
        "Fully Control PIC Microcontroller using Python"
      ],
      "course_content": {},
      "requirements": [
        "An Internet Connection",
        "Basic knowledge in Programming",
        "Basic Knowledge of Digital Electronics"
      ],
      "description": ">>> PIC Microcontroller meets Python: Control your PIC Microcontroller using Python effectively and unleash the power of Python coding and PIC Hardware in a step-by-step manner for everyone who wants to take PIC Microcontroller Programming to the next level. <<<\nWelcome to this course.\nAs most of you know, Python is a very powerful programming language, and it's widely used because of its simplicity, functionality, and platform-independent nature.\nWhy you should take this course?\nLearn the basics of PIC hardware and software with a step-by-step guide\nBenefit from PiPy to run Python on your PIC\nLearn how to use Python to handle I/O pins, digital input and output, analog input and output, interrupts, serial communications\nLearn how to use a visual representation tool\nIn this course, we will look at how you can use Python to control PIC microcontrollers and interact with any type of microcontroller, both virtually and in hardware.\nWe will cover how you can use Python with serial ports easily and effectively.\nLet's talk about what you will learn in this course:\nThe working principle behind controlling PIC microcontrollers using Python\nHow to set up a Python environment inside Windows or Linux operating systems\nHow you can easily access serial ports using Python\nHow to interact with PIC microcontrollers serially using Python coding\nHardware and software setup required to get started with Python and PIC Microcontroller\nSimple circuit design and a code that you can easily write using Python to control PIC microcontrollers\nCoding of PIC Microcontroller so that it will be able to receive Python codes or commands serially and execute them\nImportant functions and libraries that you can implement to go to the next level and pass on controlling of microcontrollers or big microcontrollers\nThe knowledge explained in this course can be used with any other type of microcontrollers, including Arduino, PSP boards, or any other type that you are using. All of them can be controlled using Python and serial communication.\nI'm sure that you will enjoy this course content.\nAt the end of this course, you can create innovative projects. The only thing that you need to do is THINKING, WIRING & CODING.\nWhat You Will Learn\nThe basics of PIC hardware and software with a step-by-step guide\nHow to use Python to handle I/O pins, digital input and output, analog input and output, interrupts, serial communications\nHow to set up a Python environment inside Windows or Linux operating systems\nHow to access serial ports using Python\nHow to interact with PIC microcontrollers serially using Python coding\nSimple circuit design and coding to control PIC microcontrollers\nImportant functions and libraries to control microcontrollers\nCreating innovative projects using PIC microcontrollers and Python\nWho is This Course For\nPIC microcontroller enthusiasts looking to expand their skills\nDIY electronics hobbyists\nStudents of technology and engineering\nEducators looking for practical STEM projects\nAnyone interested in controlling microcontrollers using Python\nRequirements\nBasic understanding of electronics and circuitry\nEnthusiasm for DIY projects and learning new technology\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in controlling PIC Microcontroller using Python",
        "Anyone Interested in Learning how to interface a Python Script with PIC Microcontroller",
        "Anyone Interested in Learning New Things about PIC Microcontroller",
        "Anyone with slight interest in moving to the next level in PIC Microcontroller",
        "PIC Microcontroller Geeks",
        "Electronics Geeks",
        "Hardware developers",
        "Engineering Students - Electronics, Electrical & Computer Science"
      ]
    },
    {
      "title": "FPGA Filter",
      "url": "https://www.udemy.com/course/fpga-filter/",
      "bio": "analysis, coding and simulation",
      "objectives": [
        "FPGA filter design and simulation"
      ],
      "course_content": {
        "FPGA Mean (Average) Filter": [
          "FPGA Mean (Average) Filter 01 -- Introduction",
          "FPGA Mean (Average) Filter 02 -- Coding",
          "FPGA Mean (Average) Filter 03 -- Simulation"
        ],
        "FPGA Median Filter": [
          "FPGA Median Filter 01 -- Introduction",
          "FPGA Median Filter 02 -- Sort Module Coding",
          "FPGA Median Filter 03 -- Sort Module Simulation",
          "FPGA Median Filter 04 -- Median Module Coding",
          "FPGA Median Filter 05 -- Median Module Simulation"
        ],
        "FPGA Gaussian Filter": [
          "FPGA Gaussian Filter 01 -- Introduction",
          "FPGA Gaussian Filter 02 -- Coding",
          "FPGA Gaussian Filter 03 -- Simulation"
        ]
      },
      "requirements": [
        "verilog basic knowledge"
      ],
      "description": "This series of lessons will focus on the FPGA filter algorithm design and simulation. It currently includes three parts (It might include more in the future):\n(1) FPGA Mean (Average) Filter:\nThe Mean filter, or average filter is windowed filter of linear class, that smoothes signal (image). The filter works as low-pass one. The basic idea behind filter is for any element of the signal (image) take an average across its neighborhood.\n(2) FPGA Median Filter:\nThe median filter is a non-linear digital filtering technique, often used to remove noise from an image or signal. Such noise reduction is a typical pre-processing step to improve the results of later processing (for example, edge detection on an image). Median filtering is very widely used in digital image processing because, under certain conditions, it preserves edges while removing noise, also having applications in signal processing.\nThe main idea of the median filter is to run through the signal entry by entry, replacing each entry with the median of neighboring entries. The pattern of neighbors is called the \"window\", which slides, entry by entry, over the entire signal.\n(3) FPGA Gaussian Filter:\nIn electronics and signal processing, a Gaussian filter is a filter whose impulse response is a Gaussian function (or an approximation to it, since a true Gaussian response is physically unrealizable as it has infinite support). Gaussian filters have the properties of having no overshoot to a step function input while minimizing the rise and fall time. This behavior is closely connected to the fact that the Gaussian filter has the minimum possible group delay. It is considered the ideal time domain filter, just as the sinc is the ideal frequency domain filter. These properties are important in areas such as oscilloscopes and digital telecommunication systems.\nMathematically, a Gaussian filter modifies the input signal by convolution with a Gaussian function; this transformation is also known as the Weierstrass transform.",
      "target_audience": [
        "FPGA learner"
      ]
    },
    {
      "title": "Opamp Projects: Design & Simulate on Proteus & LTSpice",
      "url": "https://www.udemy.com/course/opamp-741-projects-design-simulate-circuit-on-proteus-ltspice/",
      "bio": "Hands-on Lab Based Course on OpAmp Projects:- Learn, Design and Simulate Op-Amp Circuits on Proteus, LtSpice Softwares",
      "objectives": [
        "Battery Level Indicator Circuit Using Opamp",
        "Peak/Envelope Detector Circuit Using Opamp",
        "Light Detector Circuit Using Opamp and LDR Sensor",
        "Sample & Hold Circuit Using Opamp",
        "Voltage to Current Converter using Opamp"
      ],
      "course_content": {},
      "requirements": [
        "Students should have strong command on BJTS, FETs, Diodes, Opamps orelse they can look forward to enroll in previous courses",
        "Strong Command on Proteus & Lt-Spice Softwares"
      ],
      "description": "Are you ready to master opamp circuits through practical, hands-on projects? This comprehensive course is designed for enthusiasts, students, and professionals who want to dive deep into the world of operational amplifiers. With a focus on the widely-used Opamp 741, you'll learn to design and simulate a variety of innovative circuits using Proteus and LTSpice software.\n\n\n@ What You'll Learn:\nBattery Level Indicator Circuit Using Op-Amp: Learn how to effectively monitor battery levels using opamp circuits. This project will guide you through the design of a battery level indicator that utilizes the precision of an operational amplifier to detect and display the battery charge status. You will understand the principles of voltage comparison and threshold detection, essential for creating reliable battery monitoring systems.\nLight Detector Circuit Using Op-Amp:\nDesign a circuit that detects light intensity using an operational amplifier and a light-dependent resistor (LDR). This project will guide you through creating a sensitive light detection system where the opamp amplifies the signal from the LDR, indicating the presence or absence of light. Such circuits are fundamental in applications like automatic lighting, alarm systems, and light-sensitive switches, providing an efficient way to monitor and respond to changing light conditions.\nPeak/Envelope Detector Circuit Using Op-Amp:\nExplore the principles of peak detection and envelope detection in signal processing with this project. You will design a circuit using an opamp to detect the peak value of an input signal and track the envelope of varying signal amplitudes. This is crucial in applications such as audio signal processing and communication systems, where understanding signal characteristics is vital.\nSample & Hold Circuit Using Op-Amp:\nGain insights into capturing and holding analog signals for further processing with this project. You will design a sample and hold circuit using an operational amplifier, which captures an analog voltage at a specific moment and maintains (or holds) this voltage for a period. This is essential in analog-to-digital conversion, where stable signal sampling is required for accurate digital representation.\nVoltage to Current Converter Using Op-Amp:\nConvert voltage signals to current with precision using opamp configurations in this project. You will learn how to design a voltage-to-current converter circuit, also known as a V-I converter, which is used in various applications such as sensor interfacing, where sensor output voltage needs to be converted to a corresponding current for further processing or transmission.\n\n\n@ Why This Course?\nHands-On Learning: Engage with practical projects that enhance your understanding of opamp applications.\nSoftware Simulation: Use industry-standard software, Proteus and LTSpice, to design, test, and simulate your circuits.\nExpert Guidance: Learn from detailed instructions and real-world examples provided by an experienced instructor.\n\n\n@ Who Should Enroll?\nElectronics hobbyists and tinkerers\nElectrical engineering students\nProfessionals looking to refresh their knowledge\nAnyone interested in learning about operational amplifiers\n\n\nBy the end of this course, you'll have the skills and confidence to design and simulate a variety of opamp-based circuits, giving you a solid foundation in analog electronics. Enroll now and start your journey into the fascinating world of operational amplifiers!",
      "target_audience": [
        "Electrical & Electronic Engineers",
        "Intrumentation and Biomedical Engineers",
        "Electronics hobbyists and tinkerers",
        "Professionals looking to refresh their knowledge",
        "Anyone interested in learning about operational amplifiers"
      ]
    },
    {
      "title": "Mastering Embedded Systems with C and ARM Cortex (STM32)",
      "url": "https://www.udemy.com/course/mastering-embedded-systems-with-c-and-arm-cortex-stm32/",
      "bio": "Become an expert in Embedded Systems using C and STM32 ARM Cortex — fundamentals to real-time hardware implementation.",
      "objectives": [
        "Fundamentals of Embedded Systems and C programming",
        "Flow control, loops, functions, arrays, pointers, and strings in C",
        "STM32CubeIDE setup and embedded project development",
        "Hands-on practice with ARM Cortex STM32 microcontrollers",
        "Bitwise operations, memory mapping, register-level coding",
        "Advanced concepts: volatile/const qualifiers, structures, unions, bit-fields"
      ],
      "course_content": {
        "Embedded Systems using C": [
          "Introduction to the Course",
          "Embedded System - Overview",
          "Component and Structure",
          "Architecture of Embedded System",
          "MCU-vs-MPU",
          "Devices in Embedded System",
          "Environment Setup For Embedded System",
          "Introduction to C",
          "C Vs Embedded C",
          "How C Programming Works",
          "Basic C Program",
          "Variables in C",
          "Operators Introduction",
          "Arithmetic Operator and Assignment Operator Part 1",
          "Arithmetic Operator and Assignment Operator Part 2",
          "Relational Operator and Logical Operator Part 1",
          "Relational Operator and Logical Operator Part 2",
          "Relational Operator and Logical Operator Part 3",
          "Bitwise Operator and Size of Operator Part 1",
          "Bitwise Operator and Size of Operator Part 2",
          "Bitwise Operator and Size of Operator Part 3",
          "Conditional Operators",
          "Comma Operators",
          "Types and Storage Classes in C",
          "Introduction to Flow Controls and its Types",
          "If Condition and its Type",
          "Nested if Condition",
          "Multiple if-Else Statements",
          "Switch Statement Part 1",
          "Switch Statement Part 2",
          "Loops and Its Types",
          "For Loop",
          "While Loop",
          "Do-While Loop",
          "Nested Loop",
          "Break and Continue Statement",
          "Go to and Return Statement",
          "What is Function in C and its Types",
          "Programming Demonstration of Function Part 1",
          "Programming Demonstration of Function Part 2",
          "What is an Array",
          "1D Array and Its Iteration Part 1",
          "1D Array and Its Iteration Part 2",
          "2D Array and Its Iteration",
          "3D Array and Its Iteration Part 1",
          "3D Array and Its Iteration Part 2",
          "Arrays and Functions",
          "What Is A Pointer",
          "Pointers Demo",
          "Pointer to A Pointer",
          "What is A String",
          "Programming Demonstration of String",
          "Pointer and Strings",
          "Array and Strings",
          "Creating A Simple Project",
          "Programming Demonstration and Build",
          "Deployment of The Program Part 1",
          "Deployment of The Program Part 2"
        ],
        "Embedded C Programming Essentials": [
          "Course Introduction",
          "Downloading Ide",
          "Key Features of The Stm32Cubeide",
          "Installing Stm32Cubeide",
          "Meet The Embedded Target of This Course",
          "Installing Compiler (Gcc) For Host (Windows)",
          "Importing Course Projects Into Workspace Part 1",
          "Importing Course Projects Into Workspace Part 2",
          "Creating A Project For The Host",
          "Creating A Project For The Target",
          "FPU Warning Fix",
          "Onlinegdb Web Tool",
          "Printf and Hello World",
          "Printf Exercise 1 Solution",
          "Escape Sequences in C",
          "Printf Exercise 2 Solution",
          "Printf Exercise 3 Solution",
          "Commenting in C",
          "Data Types in C",
          "C Integer Data Types and Value Ranges",
          "Char Data Type and Variable Definition",
          "Variable Definition Exercise",
          "Range Calculation For Char Data Type",
          "Sizeof",
          "Variables Naming Rules and Definition Vs Declaration",
          "Declaration Vs Definition - An Illustration",
          "Variables Scope and Illustration",
          "Address of Variables",
          "Storage Class Specifiers in C",
          "Use Cases of Static With Variables",
          "Use Cases of Static With Functions",
          "Extern Storage Class Specifier",
          "Introduction to Functions in C Part 1",
          "Introduction to Functions in C Part 2",
          "Function Prototypes",
          "Returning Data From A Function",
          "Function Exercise Part 1",
          "Function Exercise Part 2",
          "Ascii Codes",
          "Typecasting in C Part 1",
          "Typecasting in C Part 2",
          "Embedded - Hello World Part 1",
          "Embedded - Hello World Part 2",
          "Testing Printf Over Arm Part 1",
          "Testing Printf Over Arm Part 2",
          "Issues With Ide",
          "Compiler Settings on Stm32Cubeide",
          "Embedded Project Build Process Part 1",
          "Embedded Project Build Process Part 2",
          "Run Sizeof On Embedded Target",
          "Sizeof Testing",
          "What is A Microcontroller Part 1",
          "What is A Microcontroller Part 2",
          "Code Memory of The Microcontroller",
          "Code and Data of The Program Using Memory Browser Part 1",
          "Code and Data of The Program Using Memory Browser Part 2",
          "Analyzing Elf File Using Gnu tools Part 1",
          "Analyzing Elf File Using Gnu tools Part 2",
          "Disassembly Part 1",
          "Disassembly Part 2",
          "Ide Option for Instruction Level Debugging",
          "Section 1 and Section 2"
        ],
        "ARM Cortex (STM32) Fundamentals Building Embedded Systems": [
          "Course Introduction",
          "Manipulating Decimal Numbers in C",
          "Single Vs Double Precision",
          "Working With Float and Double Variables Part 1",
          "Working With Float and Double Variables Part 2",
          "Scanf Introduction",
          "Scanf Exercise Implementation Part 1",
          "Scanf Exercise Implementation Part 2",
          "Scanf Exercise 2 Part 1",
          "Scanf Exercise 2 Part 2",
          "Pointers in C",
          "Pointer Variables and Initialization",
          "Pointer Variables and Pointer Data Types",
          "Read and Write Operation on Pointers",
          "Pointer Exercise 1 and Exercise 2 - Understanding",
          "Pointer Exercise 1 Implementation",
          "Pointer Exercise 2 Implementation Part 1",
          "Pointer Exercise 2 Implementation Part 2",
          "What Is Stdint Header File",
          "Understanding-Stdint-Header-File",
          "Operators in C",
          "Unary Operator in C",
          "Unary Operators with Pointers",
          "Relational Operators in C",
          "Logical Operators in C",
          "If Statement",
          "If Statement Exercise",
          "If and Else",
          "If and Else Exercise Implementation",
          "If -Else-If Ladder Statements",
          "If-Else-If Ladder Exercise Solution",
          "Conditional Operator",
          "Switch Case Statement in C",
          "Switch Case Exercise",
          "Switch Case Exercise Solution - Part 1",
          "Switch Case Exercise Solution - Part 2",
          "Bitwise Operators in C",
          "Bitwise and and Bitwise OR",
          "Applicability of Bitwise Operators - Testing of Bits",
          "Finding Even OR Odd Number Using Testing of Bits",
          "Applicability of Bitwise Operators - Clearing of Bits",
          "Applicability of Bitwise Operators - XOR",
          "Applicability of Bitwise Operators - Setting of Bits",
          "Coding To Turn on An Led",
          "Controlling Io Pin Using Software",
          "Process OR Addressable Memory Regions",
          "Stm32 Memory Map",
          "Memory Mapped Peripheral Registers and Io Access",
          "Procedure To Turn on Led",
          "Enabling Peripheral Clock",
          "Calculating Peripheral Register Addresses",
          "Led on Exercise Coding Part 1",
          "Led on Exercise Coding Part 2",
          "Led on Exercise Coding Part 3",
          "Led on Exercise Coding Part 4",
          "Bitwise Right Shift Operator",
          "Bitwise Left Shift Operator",
          "Applicability of Bitwise Shift Operators",
          "Modifying Led on Exercise Using Bitwise Shift Operators",
          "Bit Extraction",
          "Looping in C",
          "While Loop Exercise Part 1",
          "While Loop Exercise Part 2",
          "Do While Loop",
          "FOR Loop Exercise Part 1",
          "FOR Loop Exercise Part 2",
          "FOR Loop Exercise Part 3",
          "Modifying Led on With Software Delay",
          "Led Toggle Using Software Delay Part 1",
          "Led Toggle Using Software Delay Part 2",
          "Course Conclusion"
        ],
        "ARM Cortex (STM32) Deep Dive: Mastering Embedded Systems": [
          "Const Type Qualifier Part 1",
          "Const Type Qualifier Part 2",
          "Placements of Const Variables in Memory",
          "Compiler Optimization and Flags",
          "Different Compiler Optimization Levels",
          "Volatile and Effect of Optimization",
          "When to use Volatile Qualifier ?",
          "Introduction to Structures",
          "Accessing Structure Member Elements Part 1",
          "Accessing Structure Member Elements Part 2",
          "Size of Structure",
          "Typedef and Structure",
          "Structures and Pointers Part 1",
          "Structures and Pointers Part 2",
          "Structures and Pointers Part 3",
          "Unions Part 1",
          "Unions Part 2",
          "Applicability of Unions Part 1",
          "Applicability of Unions Part 2",
          "Applicability of Unions Part 3",
          "Bit-Field Exercise Part 1",
          "Bit-Field Exercise Part 2",
          "Bit-Field Structure for RCC AHB1ENR",
          "Bit-Field Structure for GPIOx ODR",
          "Modifying LED Toggle Exercise with Structures Part 1",
          "Modifying LED Toggle Exercise with Structures Part 2",
          "Arrays in C",
          "Read-Write Operation on Array",
          "Passing Array to Function",
          "Strings in C",
          "String Literal",
          "Section 3 and Section 4"
        ]
      },
      "requirements": [
        "Basic understanding of programming logic",
        "Enthusiasm for hardware and embedded development",
        "A Windows-based PC with internet access",
        "Optional: STM32 development board for hands-on practice"
      ],
      "description": "Introduction: Dive into the powerful world of embedded systems where software meets hardware. This comprehensive course walks you through the fundamentals of embedded systems using the C programming language, and gradually transitions into advanced programming with ARM Cortex-based STM32 microcontrollers. Whether you are a beginner or a budding engineer, this course will bridge the gap between theory and hands-on embedded application development.\nSection 1: C Programming for Embedded Systems This section sets the stage by providing a deep introduction to embedded systems, including their architecture, components, and differences between MCUs and MPUs. It then builds a solid foundation in the C programming language — starting from variables and operators to loops, flow control, functions, arrays, pointers, and strings. It wraps up with a complete embedded project cycle from coding to deployment, enabling learners to understand how C works in embedded environments.\nSection 2: Embedded C Programming Essentials Learn how to get your hands dirty with real embedded development. This section focuses on installing and using STM32CubeIDE, creating host and target projects, compiler setups, and key debugging practices. You'll also refine your knowledge of C syntax, data types, functions, scope, and memory addressing through embedded-specific demos and tool-based exercises.\nSection 3: ARM Cortex (STM32) Fundamentals – Building Embedded Systems Step into the ARM Cortex (STM32) domain where you apply C knowledge to manipulate I/O, control memory-mapped registers, and implement decision-making with real hardware. Learn core embedded programming concepts like bitwise operations, LED control, software delays, peripheral register access, and instruction-level debugging, leading to practical embedded system builds.\nSection 4: ARM Cortex (STM32) Deep Dive – Mastering Embedded Systems Take your embedded skills to an expert level. This advanced section introduces compiler optimizations, const and volatile usage, memory placements, and extensive structure and union handling. It culminates in advanced applications like GPIO register manipulation via structures and hands-on system design with bit-fields, arrays, and strings.\nConclusion: By the end of this course, you'll confidently code embedded applications, manipulate hardware registers, and build real-time projects using C and STM32. You'll bridge the gap from basic C concepts to complex embedded projects that prepare you for industry-level challenges.",
      "target_audience": [
        "Engineering students and electronics enthusiasts",
        "Embedded system hobbyists and programmers",
        "Professionals switching to embedded development",
        "Anyone seeking a hands-on and deep technical foundation in embedded systems"
      ]
    },
    {
      "title": "Fatek Plc Programming Basics with Applications - All In One",
      "url": "https://www.udemy.com/course/fatek-plc-programming-basics-with-applications-all-in-one/",
      "bio": "Learn Fatek Plc Programming Effectively and Improve Plc Programming Skills and Experiences in Industrial Automation",
      "objectives": [
        "You are going to learn Fatek Plc Programming Basics.",
        "You are going to learn PLC Programming Basics.",
        "You are going to learn that how to do an application with Plcs.",
        "You are going to understand power circuit of Plcs and Electronical Components."
      ],
      "course_content": {},
      "requirements": [
        "This course does not require any prior knowledge."
      ],
      "description": "Dear Students,\n\n\nMini Fatek Plc Programming Basics course is suitable for anyone who has just started to learn plc and wants to learn fatek plc.\nThis tutorial series created for students who wants to control fatek plcs or faced in any machine with fatek plc.\nYou will start this course by learning the winproladder software.\nWe will control a Fatek FBs-48MAR2-AC plc together with winproladder software.\nBy working with real hardware, you will be able to see all the possibilities that will come your way.\nThis part, where we see what we can do with an FBs-48MAR2-AC plc, will also teach us the basics of plc programming.\nLater, we will learn HMI programming software used FV Designer.\nYou will find the maximum HMI programming information required for a machine process in this course.\nAnd finally, with our technical information section, you will learn other basic information you need.\nAt the end of the course, when you want to work with a fatek plc, you will realize that you have learned what you need.\n\n\nAlso this mini course supported by electrical drawing and simulation tutorials with another softwares.\n\n\nAt the end of the course, in summary;\n- You Will Learn Plc Programming Basics\n- You will Learn the WinProLadder Software\n- You will Learn the FV Designer Software\n- You will Learn Fatek Plc Programming.\n- You will Learn Basic Plc Techniques and Informations\n\n\n\n\nAfter starting the course, you can ask your questions at any time.\n\n\nBest regards\nMustafa",
      "target_audience": [
        "Anyone who wants to learn plc programming.",
        "Anyone who wants to learn fatek plc & hmi programming basics.",
        "Anyone who interested in with plcs.",
        "Anyone who wants to work in industrial automation field.",
        "Anyone who interested in with create a powerful real machine programs."
      ]
    },
    {
      "title": "Autonomous Mastery: Leading the Future of Self-Driving Cars",
      "url": "https://www.udemy.com/course/self-driving-cars-a-guide-to-mastering-autonomous-mobility/",
      "bio": "Journey Beyond the Wheel: Pioneering the Era of Driverless Technology",
      "objectives": [
        "Foundational Knowledge: Understand the history, evolution, and significance of self-driving vehicles in modern transportation.",
        "Technological Insights: Delve into the core technologies that enable autonomous driving, including sensors, cameras, radar, and software systems.",
        "Levels of Autonomy: Decode the various stages of vehicle automation, from basic driver assistance to full autonomy.",
        "Machine Learning Mastery: Grasp the pivotal role of machine learning in autonomous vehicles, enabling them to learn, adapt, and make decisions.",
        "Future-Forward Thinking: Stay informed about the emerging trends, innovations, and challenges in the autonomous vehicle sector.",
        "Safety & Ethics: Recognize the safety protocols, measures, and ethical considerations associated with self-driving vehicles.",
        "Real-world Applications: Explore case studies showcasing the practical implementation and impact of autonomous vehicles in various sectors.",
        "Industry Landscape: Get acquainted with major players, startups, and collaborations that are shaping the future of autonomous driving.",
        "Career Opportunities: Gain insights into potential career paths, roles, and opportunities in the autonomous vehicle industry.",
        "Community Engagement: Learn to collaborate, share, and engage with a community of like-minded enthusiasts and professionals."
      ],
      "course_content": {},
      "requirements": [
        "Interest in Autonomous Systems: A genuine curiosity about self-driving vehicles and the future of mobility.",
        "Basic Mathematics Knowledge: Understanding of basic mathematical concepts, especially if diving deep into machine learning aspects.",
        "Computer Access: A computer or tablet with a stable internet connection to access course materials and participate in interactive modules.",
        "Willingness to Learn: An open mind and eagerness to engage with new concepts, technologies, and ideas.",
        "Reading & Research Skills: Ability to read supplementary materials and conduct light research for certain assignments or discussions.",
        "Collaborative Spirit: Willingness to participate in community forums, group discussions, and collaborative projects."
      ],
      "description": "Your Passport to the Future of Mobility\nBe a part of the groundbreaking revolution in transport. Witness the transformation from conventional driving to the magic of autonomous mobility. This course is more than just a learning experience - it's your key to understanding and mastering the future.\nCourse Highlights:\nFoundational Learning: Embark on a captivating journey tracing the history of self-driving vehicles, their impact, and the core technologies that fuel them.\nIn-depth Insight: Understand the varied levels of vehicular autonomy and explore how Machine Learning enables these cars to make informed decisions.\nFuture Preparedness: Always be ahead, with updates on the latest trends and innovations sculpting the autonomous vehicle landscape.\nWhy This Course is Essential in the Tech Era:\nPractical Approach: Engage in real-world scenarios, compelling case studies, and immersive assessments.\nEvolving Content: Receive lifetime updates to ensure your knowledge remains cutting-edge.\nVibrant Community: Network with a dynamic community of fellow learners and industry leaders.\nCertification: Stamp your authority in the industry with our certificate of achievement.\nStudent Testimonials:\n\"Engaging, informative, and absolutely transformative. This course is the window to the future of mobility.\"\n— Jane D.\n\"Every module, every lecture brought a fresh perspective. Truly prepares one for the autonomous transport era!\"\n— Alex R.\nDive Deeper into Autonomous Vehicles:\nPerception - Definition and Tasks: Delve into the essence of perception in autonomous vehicles and grasp its significance.\nImportant Sensors in AVs: Understand the pivotal role sensors play in making autonomous vehicles truly 'autonomous'.\nV2X Technology: Decode Vehicle-to-Everything technology and its game-changing implications.\nThe New Tech Era is Here, and You Can Lead It\nThe world of transport is undergoing its most radical transformation. Don't just witness it. Be a part of it. Enroll now, and let's drive into the future together.\nQuestions? Dive Deeper into the World of Autonomous Mobility\nWe're here to help you navigate this exciting journey. For more details or queries, reach out.\nEducational Engineering Team – Bridging Today with Tomorrow.\nWhat You Will Learn\nHistory and impact of self-driving vehicles\nCore technologies of autonomous vehicles\nLevels of vehicular autonomy\nMachine Learning in autonomous driving\nReal-world applications and case studies\nLatest trends and innovations in autonomous vehicles\nWho Is This Course For\nAspiring data scientists and engineers\nAutomotive enthusiasts and professionals\nTech hobbyists interested in autonomous technology\nAnyone passionate about the future of transportation\nRequirements\nBasic understanding of technology and programming\nInterest in autonomous vehicles and robotics\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Tech Enthusiasts: Individuals keen on understanding the latest technological advancements, especially in the realm of transportation and mobility.",
        "Aspiring Engineers & Developers: Students and professionals aiming to specialize in autonomous vehicle systems, software development, or machine learning as applied to mobility.",
        "Industry Professionals: Those already in the automotive or tech sectors looking to pivot or expand their knowledge into the rapidly growing field of autonomous vehicles.",
        "Entrepreneurs & Innovators: Visionaries aiming to tap into the business opportunities and innovations presented by the autonomous vehicle industry.",
        "Policy Makers & Urban Planners: Individuals involved in transportation infrastructure and policy who need to understand the future impact and integration of autonomous vehicles into urban landscapes.",
        "Environmental Advocates: Those interested in the potential environmental benefits and challenges presented by self-driving vehicles.",
        "Educators & Trainers: Individuals who wish to teach or train others about autonomous vehicles and require a comprehensive understanding of the subject matter.",
        "General Public: Anyone curious about the future of transportation, eager to understand how autonomous vehicles will shape our world in the coming decades."
      ]
    },
    {
      "title": "Learn Arduino: Practical Approach",
      "url": "https://www.udemy.com/course/learn-arduino-practical-approach/",
      "bio": "Master Arduino with Practical Approach from scratch and start making Arduino Based Projects",
      "objectives": [
        "Easily learn Arduino by making your own projects",
        "Learn how to use the Arduino software (IDE) and how to install hardware devices",
        "you'll learn How to install your Arduino development environment on your computer.",
        "learn to use LEDs, buttons, switches, and sensors with the Arduino software.",
        "learn about this popular platform and get started with electronics prototyping.",
        "learn how to code in Arduino"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of the Arduino language and programming in C or C++",
        "arduino IDE",
        "Computer/ Laptop",
        "Arduino Boards"
      ],
      "description": "If you are looking to get started with Arduino, or want to brush up on your skills, then this is the course for you. The Learn Arduino Practical Approach course provides a comprehensive overview of the basics of Arduino programming and how to use it in creative ways. In addition, this course provides an introduction to C programming, basic electronics concepts, and how to implement this knowledge with Arduino.\nArduino is an open-source electronics prototyping platform based on flexible, easy-to-use hardware and software. It is a popular microcontroller that can be used for a variety of purposes, ranging from controlling simple devices to creating sophisticated embedded systems. This course will teach you how to use Arduino in practical ways, from setting up your development environment to writing code that interacts with external hardware. By the end of this course, you'll be able to create your own projects and make things happen with Arduino!\nWhat You Will Learn:\nSimulate Arduino Boards and Test Your Code\nStart Testing Arduino vs PIC microcontrollers vs Raspberry Pi\nMake Your Own Arduino Board at Home\nConnect and Interface Raspberry Pi with Arduino\nArduino Web Control: Step By Step Guide\nArduino Bluetooth\nArduino Radar\nArduino + Processing Code Version\nPractical Assembly\nArduino Motion Detector: Step By Step Guide\nArduino Weather Station\nAutomatic Irrigation System with Arduino\nArduino Alarm Clock Using a Real-Time Clock and LCD Screen\nArduino Wireless Power Transmission\nArduino Multicolor RGB LED Lamp Controlled Using Bluetooth\nWho Is This Course For:\nAnyone interested in Arduino with zero background knowledge\nElectronics enthusiasts looking to create their own projects\nHobbyists wanting to learn and use Arduino software\nStudents and educators seeking practical applications of Arduino\nRequirements:\nNo prior experience is required\nAn Arduino board and a few simple electronic components\n\n\nAbout the Instructor:\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience into these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact, step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k + Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelance engineers, helping many students in their graduation projects, and provides guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone who wants to learn electronics and programming",
        "Anyone who wants to make their own projects",
        "People who want to get a better understanding of the Arduino language",
        "this is for Arduino Hobbyist",
        "this is for begginers and Profesionals",
        "great  Course for Engineers"
      ]
    },
    {
      "title": "SystemVerilog/UVM for ASIC/SoC Verification Part 1",
      "url": "https://www.udemy.com/course/systemveriloguvm-for-asicsoc-verification-part-1/",
      "bio": "Basic SystemVerilog/UVM Concepts Explained using AMBA APB Example",
      "objectives": [
        "Learn the basics of SystemVerilog, different data types, procedural blocks, and control flow constructs.",
        "Explore how OOP concepts facilitate reusable and scalable testbenches.",
        "Learn how to use SystemVerilog interfaces to simplify connectivity between design modules.",
        "Learn how to verify correct master-slave interaction and signal behavior in APB transactions.",
        "Learn basics of UVM",
        "System on Chip Design Verification Concepts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Design Verification",
          "Introduction to SystemVerilog and Datatypes",
          "Arrays and Memories",
          "Arrays & Memories: Array Manipulation Methods Part 1",
          "Array & Memories: Array Manipulation Methods Part 2",
          "Advanced Data Types",
          "Classes and OOP Concepts",
          "Randomization and Constraints Randomization",
          "Task and Functions",
          "Task & Functions: Pass by Reference",
          "Connectivity blocks in SV",
          "Program Block",
          "Inter process Communication",
          "SystemVerilog Testbench Architecture",
          "Introduction to UVM",
          "Basics of APB Protocol",
          "APB Testbench Project",
          "APB Testbench Explanation : Part 1 (Design)",
          "APB Testbench Explanation : Part 2",
          "APB Testbench Explanation : Part 3"
        ]
      },
      "requirements": [
        "Digital Design",
        "Logic Design flow",
        "Verilog",
        "Digital Electronics",
        "Basic programming Knowledge"
      ],
      "description": "Mastering SystemVerilog/UVM for ASIC/SoC Verification with Quant Semicon: From Basics to Industrial Applications\nAre you ready to dive deep into the world of SystemVerilog and unlock its potential for industrial-level design and verification? Our comprehensive course specifically designed by Quant Semicon's Team is for both beginners and advanced learners who want to master SystemVerilog (SV) and its object-oriented programming (OOP) concepts. With a hands-on approach and real-world examples, this course will take you from the basics of SV to advanced applications, preparing you for the challenges of the semiconductor industry.\nWhat You’ll Learn:\nSystemVerilog Basics: Start your journey by understanding the core features of SystemVerilog. We’ll cover syntax, data types, control structures, and how SV enhances traditional Verilog for modern design and verification needs.\nObject-Oriented Programming (OOP) in SV: Discover how OOP principles such as inheritance, encapsulation, and polymorphism are applied within SV. Learn why these concepts are crucial for creating scalable, maintainable verification environments.\nHands-On Industrial Examples: Theory alone isn’t enough—this course is packed with real-life examples. We’ll guide you through implementing practical, industry-relevant examples like the Advanced Peripheral Bus (APB), giving you the confidence to handle real projects. In coming levels we will also be learning Protocols like AHB, AXI, low peripheral communication and also expand our knowledge on RISC V.\nQuizzes & Assessments: Each module includes quizzes designed to test your knowledge and ensure you’re ready for the next level. These interactive assessments help you retain what you’ve learned while keeping you engaged.\nAdvanced SystemVerilog Concepts: As you progress, we’ll delve into advanced features such as assertions, coverage, and randomization, preparing you for the complexities of large-scale designs.\nUVM Introduction: The course also provides a solid introduction to the Universal Verification Methodology (UVM). You’ll grasp the basics of UVM and understand how it integrates with SystemVerilog, setting the stage for mastering UVM in future projects.\nCourse Highlights:\nEngaging, Real-World Examples: Every concept is backed by practical, real-life scenarios.\nDetailed OOPs Coverage: Master OOPs, the cornerstone of efficient SV programming.\nQuizzes & Practice Exercises: Test your knowledge and apply what you’ve learned.\nUVM Foundations: Prepare for advanced UVM concepts in Part 2 of the course.\nBy the end of this course, you will have a strong foundation in VLSI verification principles and hands-on experience, preparing you to tackle complex verification challenges in the industry.\nWhether you’re a student preparing for a career in the semiconductor industry or a professional looking to sharpen your skills, this course provides a complete, structured path to mastering SystemVerilog. Join us and take the first step toward becoming a SystemVerilog expert!",
      "target_audience": [
        "Students: Electronics, Microelectronics, VLSI, Embedded",
        "Working Professionals : VLSI design professional, Verification Engineers, Verification Leads"
      ]
    },
    {
      "title": "Siemens Simatic Manager S7 System and Programming 2",
      "url": "https://www.udemy.com/course/siemens-simatic-manager-s7-system-and-programming-2/",
      "bio": "Siemens Simatic Manager S7 System and Programming 2 by Caner SEZER",
      "objectives": [
        "Status Bit-Dependent Instructions",
        "Accumulator Functions",
        "Instructions with REAL Numbers",
        "Indirect Addressing and Address Register Instructions",
        "STEP 7 Data Types and Variables",
        "Block Calls and MultiInstance Model",
        "Using Libraries",
        "Synchronous and Asynchronous Error Handling",
        "Program Generation Using Text Editor",
        "Basic and Extended S7 Communication",
        "S7-400 PLC System",
        "Distributed I/O and Parameter Assignment",
        "Engineering Tools for S7/M7",
        "Solutions to the Exercises",
        "Indirect Access to FC and FB Parameters",
        "Exercises",
        "Comments And Notes",
        "Recommendation"
      ],
      "course_content": {
        "1 - Status Bit-Dependent Instructions": [
          "1 - Status Bit-Dependent Instructions"
        ],
        "2 - Accumulator Functions": [
          "2 - Accumulator Functions"
        ],
        "3 - Instructions with REAL Numbers": [
          "3 - Instructions with REAL Numbers"
        ],
        "4 - Indirect Addressing and Address Register Instructions": [
          "4 - Indirect Addressing and Address Register Instructions"
        ],
        "5 - STEP 7 Data Types and Variables": [
          "5 - STEP 7 Data Types and Variables"
        ],
        "6 - Block Calls and MultiInstance Model": [
          "6 - Block Calls and MultiInstance Model"
        ],
        "7 - Using Libraries": [
          "7 - Using Libraries"
        ],
        "8 - Synchronous and Asynchronous Error Handling": [
          "8 - Synchronous and Asynchronous Error Handling"
        ],
        "9 - Program Generation Using Text Editor": [
          "9 - Program Generation Using Text Editor"
        ],
        "10 - Basic and Extended S7 Communication": [
          "10 - Basic and Extended S7 Communication"
        ]
      },
      "requirements": [
        "Basic Knowledge of Siemens Simatic Product Family",
        "Required Siemens Programs to be Installed",
        "Basic Knowledge of PLC"
      ],
      "description": "Hello everyone,\n\n\nWith this course from one collegue to another about Siemens SIMATIC both Hardware And Software Side you will able to get information and for your future career, you will gain more experience during your business life. So from this point of view if you are interested with industrial automation sector, specially automation and control area, Simatic is one of the most commonly used product family in industry.\n\n\nFrom beginning step by step this the second course offers you complete walktrough of a serie. And it will continiue with \"Siemens Simatic Manager S7 System and Programming\" as 1-2-3.\n\n\nDuring this course you will become familiar with the fundemental principle of a logic controller, concept of modular SIMATIC system, basic operating procedures of Simatic Manager.\n\n\nYou will be familiar with Registers and Memory areas of S7-CPU, status word structure, instructions in STL, extended mathematical functions with real variables, direct and indirect adressing.\n\n\nYou will know how to work with adress registers for area-internal or area-crossing indirect adressing. And you will see any, pointer data types, elementary and complex data types, such as arrays, structures, user defined data types with datablocks.\n\n\nYou will get information related with structured programming, function and function blocks, object oriented programming with multi instance data blocks of function blocks.\n\n\nDuring this training you will examine standart library, overview of SFC, SFB system functions, and other libraries such as S5 to S7 converting blocks, TI to S7 converting blocks, communication blocks, pid control blocks and so on.\n\n\nAfter this training you can handle with system errors, asynchronous faults, use organisation blocks for programming error, access error.\n\n\nYou will be familiar with topics, for example, subnets in network configuration, S7 communication between PLCs, SFC and SFB blocks for put, get, receive and send data, configuring profibus network with slaves, diagnostics, reading and writing data.\n\n\nYou will better know S7-400 family with modules, rack system, process image partioning, multicomputing, startup characteristics, interrupts, special function modules, interface modules and communication processors.\n\n\nYou will get knowlegde about enginnering tools and option packages of Simatic Step 7 family, S7-Graph, Higraph, S7-SCL structured control language, S7-CFC continous function charts, S7-SFC sequental function charts and other features.\n\n\nBefore you start it would be wiser decision to look at the first training, if you are a beginner at Simatic world, this course will be really useful and helpful i guess. And I suggest you to spare at least couple of days for this training, and you are going to need some free time to do exercises at your own pc and if it's possible you can use real hardware or democase to make some practice.\n\n\nI hope you will enjoy this course.\n\n\nWith sincerely.\n\n\nCaner Sezer.",
      "target_audience": [
        "Target students are electrical electronic engineering with bach. deg.",
        "Computer Programmers",
        "Beginner of PLC software developers",
        "University students doing practice with project or lab"
      ]
    },
    {
      "title": "Verilog Lint essentials for RTL Design Engineer",
      "url": "https://www.udemy.com/course/lint-essentials-for-rtl-design-engineer/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "Role of Lint in DUT analysis",
        "Reset & Clock best practices",
        "Naming Conventions & Assignment Operators best practices",
        "Loop best practices",
        "Case best practices",
        "Function & Tasks best practices"
      ],
      "course_content": {},
      "requirements": [
        "Fundamentals of Digital Electronics and Verilog"
      ],
      "description": "We have two types of analysis for the DUT (Device Under Test). The first type is static analysis, where we examine the design without applying any stimulus. This involves analyzing the constructs and coding patterns to identify early bugs or applying mathematical models to check the correctness of the DUT. Examples of static analysis include linting and formal verification.\nThe second type is dynamic analysis, where we apply a set of stimuli to the DUT based on test cases and analyze the response to verify functionality.\nLinting is crucial in Verilog design to ensure code quality and prevent errors. It enforces coding standards, detects bugs early, and checks for correct syntax and semantics. Using lint tools helps Verilog engineers maintain consistency across codebases, enhance readability, and preempt issues that might not affect simulation but could lead to unexpected results during synthesis.\nA key advantage of linting in RTL (Register Transfer Level) design is its ability to detect incorrect usage of clocks, resets, modeling styles, loops, and control structures, which can lead to unsynthesizable designs. The difficulty with these bugs is that they are often hard to identify during debugging, as they are typically logical errors. Early detection of these issues saves designers significant time and effort.",
      "target_audience": [
        "Anyone interested in becoming an RTL Design Engineer."
      ]
    },
    {
      "title": "Omron Pulse Servo (CX-Programmer)",
      "url": "https://www.udemy.com/course/omron-pulse-servo-cx-programmer/",
      "bio": "Training to set up pulse input servers by Omron PLC using CX-Programmer",
      "objectives": [
        "Familiarity with servo drives and Learning pulse commands in PLC",
        "The difference between absolute and relative movements",
        "Home system in Servo based projects",
        "Learn ready function blocks for servo systems in Omron PLC",
        "What is Auto-TunConnect pulse outputs to the servo and step drive and What is Auto-Tune and how is it done?e and how is it done?"
      ],
      "course_content": {
        "Omron Pulse Servo (CX-Programmer)": [
          "Introduction of servo motor and servo drive",
          "PLC wiring and pulse output types",
          "Servo wiring",
          "ACC instruction",
          "INI instruction",
          "Pulse output flags and sample program",
          "PRV instruction",
          "SPED and PULS instruction",
          "PLS2 instruction",
          "Introducing CX-Drive, Gearbox coefficient",
          "Home concept",
          "Feed Example",
          "Torque control",
          "Speed control",
          "CP1L pulse output",
          "Omron Pulse Output Function Blocks",
          "Move Interrupt Function Block",
          "Move Sequence Function Block",
          "Gearbox Coefficient and Move Absolute Function Block",
          "Move sequence Function Block with an example",
          "Connecting PLC to Stepper Drive",
          "Introducing CP2E pulse output",
          "Introducing the ITPL instruction"
        ]
      },
      "requirements": [
        "Knowledge about CX-Programmer"
      ],
      "description": "Lecture 1\n- Introduction of servo motor and servo drive hardware\n- Setting up a Servo system\nIn this training lecture, you will get acquainted with servo motors and servo drives. What are the parts of a servo drive and servo motor and what models of PLCs do we need to control the servo drive through pulse?\n\n\nLecture 2\n- Set up a Servo with pulse output\n- Show PLC wiring\n- Differences in types of pulse outputs\n- How to connect PLC and Servo\n- How to choose a servo\n- Introducing servo Inputs and outputs\nIn this lecture, you will get acquainted with some of the servo settings and we will explain servo drive cabling. You will also learn about different types of pulse outputs and then work with the inputs and outputs of a servo drive. Finally, we will teach you how to choose a serving system for your specific application.\n\n\nLecture 3\n- Servo wiring\nIn this chapter, you will learn wiring between PLC and Servo\n\n\nLecture 4\n- Introducing the ACC instruction\nIn this chapter, you will get acquainted with the ACC instruction.\nIn this chapter, you will get acquainted with the ACC instruction.\nACC(888) outputs pulses to the specified output port at the specified frequency using the specified acceleration and deceleration rate.\nACC(888) starts pulse output on the port specified in P using the mode specified in M using the target frequency and acceleration/deceleration rate specified in S. The frequency is increased every pulse control period (4 ms) at the acceleration rate specified in S until the target frequency specified in S+1 and S+2 is reached.\nThe pulse output is started each time ACC(888) is executed. It is thus normally sufficient to use the differentiated version (@ACC(888)) of the instruction or an execution condition that is turned ON only for one scan.\n\n\nLecture 5\n- Introducing the INI instruction\nIn this chapter, you will get acquainted with the INI instruction.\nINI(880) is used to start and stop comparison for a comparison table, to change the present value (PV) of a high-speed counter, to change the PV of an input interrupt in counter mode, to change the maximum value of the ring counter (CJ2M only), to change the PV of a pulse output (e.g., to 0 to establish the origin), to stop pulse output, or to change the settings for origin searches/returns (CJ2M only).\n\n\nLecture 6\n- Introduction of pulse output flags\n- Start/Stop servo with slope by the ACC instruction\nWhen working with PLC pulse outputs, there are a number of flags that can be used in programming. In this training lecture, you will get acquainted with these flags and learn how to use them. Also in this lecture, a simple start and step servo program have been written with acceleration and deceleration using the ACC instruction.\n\n\nLecture 7\n- Introducing the PRV instruction\nPRV (881) reads the High-speed counter PV and pulse output PV and interrupt input PV in counter mode.\nPRV (881) reads the data specified in C for the port specified in P. The possible combinations of data and ports are shown in the following table.\n(0000 to 0003 hex): Pulse output\n(0010 to 0013 hex): High-speed counter input\n(0100 to 0107 hex): Interrupt input in counter mode\n(1000 to 1003 hex): PWM (891) output\nLecture 8\n- Introducing the SPED and PULS instruction\n- Introducing Absolute and Relative Movements\n- Solve a simple example of a reciprocating motion\nSPED (885) is used to set the output pulse frequency for a specific port and start pulse output without acceleration or deceleration.\nSPED (885) starts pulse output on the port specified in P using the method specified in M at the frequency specified in F. Pulse output will be started each time SPED (885) is executed. It is thus normally sufficient to use the differentiated version (@SPED (885)) of the instruction or an execution condition that is turned ON only for one scan.\nPULS (886) is used to set the pulse output amount (number of out­put pulses).\nPULS (886) sets the pulse type and a number of pulses specified in T and N for the port specified in P. Actual output of the pulses is started later in the program using SPED (885) or ACC (888) in independent mode.\nLecture 9\n- Introducing the PLS2 instruction\n- How to draw a pulse output diagram in CX-Programmer\nPLS2(887) outputs a specified number of pulses to the specified port. Pulse output starts at a spec­ified startup frequency, accelerates to the target frequency at a specified acceleration rate, decel­erates at the specified deceleration rate, and stops at approximately the same frequency as the star­tup frequency.\nLecture 10\n- Introducing CX-Drive software\n- Introduction of gearbox coefficient\n- How to convert a pulse to the desired unit and vice versa\n- How to tune a servo\nLecture 11\n- Introducing the Home concept\nIn this lecture, we will look at the issue of home working with servo systems. What is Home and what are the different models of Home? We will also write a sample program for the homing servo.\nLecture 12\n- Feed Example\nthis lecture uses an input interrupt as a trigger to switch from speed control to position control and move the specified number of pulses.\n\n\nLecture 13\n- Torque control\nIn this lecture, you will learn about torque control mode in the servo. with this control mode, you can easily control the servo using the desired torque.\nLecture 14\n- Speed control\nIn this lecture, you will learn about servo speed control mode. In this control mode, you can control the servo speed by using analog inputs.\nLecture 15\n- Introducing CP1L pulse output\nIn this lecture, you will get acquainted with the pulse outputs of the CP1L model, and we will show that we do not need any special changes to control the servo with this PLC.\nLecture 16\nOmron has prepared a series of function blocks to work with pulse outputs. Using these function blocks will make programming much easier. In this lecture, you will get acquainted with these function blocks.\n- Introducing the Omron function blocks\n- Move Absolute FB\n- Set Position FB\n- Read Actual Position FB\n- Move Relative FB\n- Move Velocity FB\n- Stop FB\n- Read Status FB\nLecture 17\n- Move Interrupt and solve a problem\nIn this lecture, you will get acquainted with the move interrupt function block and learn how to operate and use it.\nLecture 18\n- Move Sequence FB\nIn this lecture, you will get acquainted with the move sequence function block and learn how to operate and use it.\nLecture 19\n- How to get the gearbox coefficient\n- Convert speed and position and display in HMI\n- A practical example of Move Absolute with HMI\nIn this lecture, you will get acquainted with the gearbox coefficient. You will learn how to convert a pulse to a custom unit and display it on the HMI, and in the following, you will see a practical example of using the Move Absolute function.\nLecture 20\n- A practical example of Move sequence with HMI\nIn this lecture, you will get acquainted with the move sequence function block and learn how to operate and use it. and also, we solve a practical example by using HMI.\nLecture 21\n- Connecting Omron PLC to a Stepper Drive and running it\nIn this lecture, we will set up a step drive using pulse output. And we will show that in using the pulse outputs, there is no difference between setting up a servo drive or a step drive.\nLecture 22\n- Introducing CP2E pulse output\nIn this lecture, you will get acquainted with the pulse outputs of the CP2E model, and we will show that we do not need any special changes to control the servo with this PLC.\nLecture 23\n- Introducing the ITPL instruction\nITPL (893) outputs a 2 to 4 axes linear interpolation to the specified port.\nITPL (893) starts pulse output from the port specified in C1 (port0~3) using the method specified in C2 (axis2~4) at the start frequency (1 in the diagram) and acceleration/deceleration rate (2 in the diagram) in S.\nITPL (893) supports at most 2 linear interpolation operations. The pulse output port method is determined by the settings of linear interpolative port specified in C1.\nThe interpolated axes are determined by the settings specified in C2.",
      "target_audience": [
        "For everyone that uses or wants to use Pulse/Analogue Servo Systems"
      ]
    },
    {
      "title": "Siemens Simatic Manager S7 Applications And Examples 1",
      "url": "https://www.udemy.com/course/siemens-simatic-manager-s7-applications-and-examples-1/",
      "bio": "Siemens Simatic Manager S7 Applications And Examples 1",
      "objectives": [
        "S7-300/400 PLC Programming Applications And Examples",
        "Simatic Manager Projects",
        "S7 Organisation Blocks",
        "PLC Standart Library System Functions And Functions Blocks",
        "PLC Clock Memory Bits",
        "Analogue Value Process Scale And Unscale",
        "Fault Management",
        "Additional Libraries Oscat",
        "Easy Motion Control Package",
        "Real Running Machine Project Reviews"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Siemens Product Family",
        "Required Siemens Programs to be Installed",
        "Basic Knowledge of Simatic Manager S7 PLC"
      ],
      "description": "Hello everyone,\n\n\nWelcome all, with this course \"Siemens Simatic Manager Step 7 Applications And Examples 1\", from one collegue to another about Simatic both Hardware And Software Side you will get information and for your future worklife, you will gain more experience during this training. So from this point of view, if you are interested with industrial automation sector, specially in automation control area, Simatic is one of the most commonly used product family in the industry.\n\n\nFrom beginning step by step this course offers you tips and tricks with applications and exercises.\n\n\nYou will become familiar with the Simatic Manager step by step.\nYou will be able to know S7 Organisation Blocks, PLC Standart Library System Functions And Functions Blocks.\nYou will work with PLC Clock Memory Bits, process analogue Values with Scale And Unscale functions.\nYou will see how Fault Management can be handled inside CPU, you get some information related about Additional Libraries such as Oscat, Easy Motion Control Package.\nThere are some real running machine project reviews during videos.\n\n\nI suggest you, before you start this course, if you are a beginner at Simatic world, maybe you should take my previous trainings about Simatic named as \"Siemens Simatic Manager S7 System And Programming 1/2\".\n\n\nI hope you will enjoy this course.\n\n\nWith Best Regards.\n\n\nCaner Sezer.",
      "target_audience": [
        "Target students are electrical electronic engineering with bach. deg.",
        "Computer Programmers",
        "Beginner of PLC software developers",
        "University students doing practice with project or lab"
      ]
    },
    {
      "title": "Arduino Robotics With Scratch Programming in TinkerCAD",
      "url": "https://www.udemy.com/course/arduino-robotics-with-scratch-programming-in-tinkercad/",
      "bio": "Learn Arduino Robotics Using Visual Programming Methods With Electronics Simulation Software with Interesting Projects",
      "objectives": [
        "Make Arduino Robotics Projects",
        "Make Programs for their own Projects",
        "Develop Programs for Arduino in Scratch Programming",
        "Design Circuit Diagrams in TinkerCAD",
        "Adhere to the Engineering Best Practices in making Projects",
        "Handle Arduino Electronics Components with Care"
      ],
      "course_content": {},
      "requirements": [
        "A Windows, Mac or Linux computer or a Smartphone to Access the software",
        "An Arduino Uno and USB cable to practice Robotics",
        "Electronics Components such as Resistors, LEDs, Sensors and Batteries. Links are provided to buy",
        "No prior Technical Knowledge or Electronics Knowledge or Programming Knowledge is required"
      ],
      "description": "Arduino Robotics With Scratch Programming in TinkerCAD - Learn Arduino Robotics Using Visual Programming Methods With Electronics Simulation Software with Interesting Projects\nThis is the original comprehensive course for Arduino makers and inventors by using scratch programming in TinkerCAD. Students can learn to design circuits, code and build robots by learning this exciting course. The explanations are given for each step you have to follow from the beginning if you are new to Arduino. This course provides you the overall understanding about the working principles of Arduino and scratch programming. You don’t have to copy others' code anymore. You can code yourself for your innovative projects. Arduino needs C++ Program natively to upload codes. But here, the TinkerCAD software will generate the C++ Programming from the scratch program that we write. But how to write a scratch program? Don’t worry. Here, I have explained to you an easy way to create a scratch program by using flowcharts. Therefore, you can create programs for your own projects.\n\nThis course is for absolute beginners and intermediate students in Arduino. All the software access guides, Arduino IDE download and installation guides are provided as separate lectures. If you don’t know, you can watch and learn step by step. If you know, you can just skip those lectures. Safety is very important since we are handling electronics. Therefore, safety guidelines are explained clearly before starting on projects. The important electronic components we use in the course are explained clearly. And also the electronics components buying links are provided for easy purchase from Amazon.\n\n\nMethod of Study:\nHere I will explain 5 different projects to you. If you learn those 5 you are not limited to work on only 5 projects. You can create tons of different projects by learning the working principles of the electronics components, circuit design and scratch coding. First, you have to focus on the projects. And follow my steps. Then you have to achieve the simplified version of the projects. After you have achieved the simplified version of them, then you can expand it. Such as you can add more sensors, change the code, combine our projects and increase the complexity of the projects. That is how I advise my students to practice my courses. Then you can understand the theories and practicals clearly. Throughout the study, if you don't understand anything you can ask me questions. I am always available for my students to clarify their doubts.\n\n\nWho can learn this course?\nAge above 10 years\nAbsolute beginners to Arduino\nIntermediate students to Arduino\nParents who wish to teach Electronics, Robotics to their kids\nSTEM educators & Teachers\nHobbyists with no programming background\n\n\nWhat are the benefits?\nFree Software Access to practice Arduino Robotics.\nFree Simulation is available for checking our program and playing around with different changes in the circuit.\nEveryone can learn visual programming easily.\nNo need to copy others' code. We can create our own code.\nEven for simplifying the Scratch Program Flowchart method was used.\nWiring diagrams with Engineering Best Practices are explained clearly for professional circuit designs. Starting from early childhood.\nFree Download and Installation guides for Arduino IDE Software are provided.\nProject Based Learning - 5 Interesting projects will be explained clearly.\nNo C++ Coding. No Problem. We will program in Scratch Visual Programming Language. Then the software will automatically generate the C++ code for us.\n\n\nWhat is included in this Arduino Robotics Course?\nFree TinkerCAD Software access guide.\nFree Arduino IDE Software download and installation guide.\nFree download of Lecture Notes with Wiring Diagrams, Scratch Programs and C++ coding for the projects.\nFree software is sufficient to practice Arduino Robotics. But, if you want to practice practically, you can buy some electronic components. The links to buy suitable electronic components from Amazon are provided for reducing the surfing time for electronic kits.\nSafety First. Safety guidelines are explained clearly before start working on electronics.\n\n\nProjects in Arduino Robotics With Scratch Programming in TinkerCAD\nHome Security System\nObject Detection System\nAutomatic Smart Dustbin System\nObstacle Avoiding Robot\nLine Following Robot\n\n\nWhy Scratch Programming in TinkerCAD for Arduino Robotics?\nScratch is the world's largest coding community for children and a coding language with a simple visual interface that allows young people to create digital stories, games, and animations. Scratch is designed, developed, and moderated by the Scratch Foundation, a nonprofit organization.\nBest of all, TinkerCAD Circuits provides a bottomless supply of virtual components that students can use to build and simulate their projects. When they're ready to physically prototype their projects, TinkerCAD Circuits makes it easy to export their code as a native Arduino.\n\n\nKeywords:\nProgramming Fundamentals, Scratch Programming, Arduino Robotics, C++, C Programming, Arduino, Robotics, Electronics, The original comprehensive course for Arduino makers, Coding for kids, TinkerCAD, Artificial Intelligence, Python, Arduino Uno, Arduino Nano, Arduino IDE, Arduino Projects, Programming for kids, Programming languages, Step by step guide, Comprehensive Course in Arduino, Computer Science, Programming Fundamentals.",
      "target_audience": [
        "Age above 10 years",
        "Absolute beginners to Arduino",
        "Intermediate students to Arduino",
        "Parents who wish to teach Electronics, Robotics to their kids",
        "STEM educators & Teachers",
        "Hobbyists with no programming background"
      ]
    },
    {
      "title": "Mastering Online Electronics Shopping: Buy Smart, Save Big",
      "url": "https://www.udemy.com/course/how-to-buy-electronic-components-online/",
      "bio": "Learn to Purchase High-Quality Electronic Components at Unbeatable Prices",
      "objectives": [
        "Learn how to buy electronic components and why would you do that",
        "Know what exactly do you need to buy things online",
        "Get Free shipping for items they need to purchase online",
        "Get the highest quality at the lowest prices",
        "Take advantage of special offers",
        "Start your first online purchase operation",
        "Break online shopping fear"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Navigating the World of Online Electronics Shopping",
          "Educational Engineering Team - Who we are?",
          "Credit Cards",
          "Quiz",
          "Very Important Note: Review Process",
          "Will The Product Arrive To My Country",
          "How to Check Product Quality",
          "Quiz",
          "Let’s Buy Some Electronics",
          "Shipping Methods",
          "Managing Online Purchases – Handling Issues and Confirming Orders"
        ],
        "Buy, Track and Receive": [
          "Let’s Buy Some Electronics",
          "What happened if I didn’t receive the Goods",
          "Step-by-Step Electronics Purchase – From Selection to Tracking"
        ],
        "End of Course": [
          "End Of Course"
        ],
        "Practice Test": [
          "Mastering Online Electronics Shopping: Buy Smart, Save Big Practice Test"
        ],
        "who we are": [
          "who we are"
        ],
        "Course Project": [
          "Course Project",
          "Strategic Sourcing Plan for Electronics Projects"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Internet",
        "Computer or Mobile"
      ],
      "description": "Mastering Online Electronics Shopping is your comprehensive guide to buying electronic components online with confidence. Whether you're a hobbyist, a DIY enthusiast, or a professional, this course equips you with the knowledge and skills to procure electronic components for your projects efficiently and economically.\nCourse Highlights:\nSourcing Electronics Online: Discover the benefits of buying electronic components online, from competitive pricing to a vast selection.\nChoosing Trusted Sellers: Learn how to identify reputable online stores and sellers to ensure the quality of your purchases.\nPrice vs. Quality: Navigate the trade-off between cost and quality, ensuring you get the best value for your money.\nTracking and Returns: Master the art of tracking your orders and securing refunds if your purchases don't meet expectations.\nWhat You Will Learn:\nStep-by-step guidance on finding trustworthy online stores for electronic components.\nMethods to evaluate seller credibility based on feedback and sales history.\nTechniques for locating top-quality components at the most competitive prices.\nStrategies for order tracking and handling returns in case of incorrect or defective items.\nWhy Take This Course:\nSay goodbye to overpriced local electronics stores and tap into the world of online savings. Whether you're a seasoned online shopper or new to the process, this course will empower you to make informed decisions, save money, and access a wider range of electronic components.\nEnroll Today:\nDon't miss out on the opportunity to enhance your electronics shopping skills. Enroll now to start saving money and building better electronic projects today!\nStudent Testimonials:\nYves P.: \"I used to hesitate when buying electronics online, but this course boosted my confidence. I'm now enjoying quality components at unbeatable prices!\"\nSarah K.: \"This course is a game-changer. It demystified online electronics shopping for me, and I've been saving money on all my projects ever since!\"\n100% Money-Back Guarantee:\nWe stand by the quality of this course. If it doesn't meet your expectations or needs, we offer a 30-day money-back guarantee. Your satisfaction is our priority.\nJoin Us Today:\nStart your journey to becoming a savvy online electronics shopper. Click \"Enroll Now\" and embark on the path to smarter, more cost-effective purchases.\nWhat You Will Learn:\nHow to source electronic components online\nIdentifying and choosing trusted sellers\nBalancing price and quality\nOrder tracking and handling returns\nWho is This Course For:\nHobbyists and DIY enthusiasts\nProfessionals in the electronics field\nStudents and educators\nAnyone interested in saving money on electronic components\nRequirements:\nNo prior experience needed\nA computer or mobile device with internet access\nWillingness to learn and experiment",
      "target_audience": [
        "Anyone who want's to buy something online",
        "Anyone who's tired from buying things with high prices from local stores"
      ]
    },
    {
      "title": "Variable Frequency Drive Basics",
      "url": "https://www.udemy.com/course/vfd-configuring-and-programming/",
      "bio": "Configuring, wiring, and programming VFDs",
      "objectives": [
        "Configuring the Powerflex Variable Frequency Drive",
        "WIring the Powerflex Variable Frequency Drive",
        "Prgramming the Variable Frequency Drive Internally",
        "Operating the Variable Frequency Drive From External Devices",
        "Operating the Variable Frequency Drive From a Programmable Logical Controller"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Section 2: Wiring the VFD": [
          "Wiring the power components of VFDs"
        ],
        "Section 3: Configuring parameters of a VFD": [
          "Configuring the parameters of a VFD"
        ],
        "Section 4: Wiring the VFD for 2 wire control": [
          "Wiring a VFD for two wire control."
        ],
        "Section 5: Wiring a VFD for 3 wire control": [
          "Wiring a VFD for three wire-control."
        ],
        "Section 6: PLC and HMI three-wire control of VFD": [
          "Controlling the VFD three-wire operation from a PLC monitored through the HMI"
        ],
        "Section 7: Introduction to Analog": [
          "Introduction to Analog configurations"
        ],
        "Section 7: Programming analog for VFD operation": [
          "Programming analog circuit to control VFD"
        ],
        "Section 8: Analog Gauge Setuo on HMI": [
          "Analog gauge setup on the HMI"
        ],
        "Section 9: Wiring and setting up VFD for analog operation": [
          "Set up and wire the PLC analog modules and wire and set up the VFD for analog op"
        ]
      },
      "requirements": [
        "Students should be familiar with programmable logical controllers and PLC software.  Students should have an interest in industrial maintenance or manufacturing."
      ],
      "description": "Welcome to the third and final course in a series of three entitled VFD Configuring and Programming. VFD is the acronym for variable frequency drives which are used extensively in industry and manufacturing to control speeds of single and three-phase motors and servo motors. Historically, industry used DC motor and controls to control the speed of motors because all that was needed is varying the voltage to control the speed. The motors were bulky and had a lot more parts than its current day AC motors, so maintenance was very high. Also, plants had to have AC to DC conversion equipment which was also bulky and needed high maintenance. AC motors are much more efficient and require a lot less maintenance than its DC counterpart so cam the advent of AC drive whereby adjusting the frequency you can control the speeds of motors. It is a piece of equipment that consists of AC to DC converter where the DC voltage can be manipulated, converted back to AC with its new frequency and voltage output.\nIn this course we will cover: learning the parameters of the VFD and how to set them up for the desired voltage, frequency, torque, current, acceleration and deceleration speeds. You’ll learn how to control the VFD from the embedded key pad, from external switches, from the PLC, and monitor and control all of this with the Panelview 800 human machine interface (HMI).\nThe sections include an introduction, wiring the power components of the VFD, configuring the parameters of a VFD, wiring the VFD for two-wire control, wiring the VFD for three-wire control, introduction to analog configuration, Analog PLC programming, configuring an analog gauge on the HMI, analog configuring and wiring the VFD for 0 – 10 VDC, and configuring and wiring the VFD for 4 – 20 mA DC. I hope you enjoy the course.",
      "target_audience": [
        "This is for students who current work in industrial maintenance or manufacturing or wish to enter those fields."
      ]
    },
    {
      "title": "Basic Electronics Course for Beginners",
      "url": "https://www.udemy.com/course/basic-electronics-for-beginners/",
      "bio": "Learn the most fundamental electronics concepts to design and build electric circuits!",
      "objectives": [
        "Understand basic concepts like voltage, current, power, heat and etc",
        "Understand working principle of the most important electronic components",
        "Use open source circuit simulation tools like Tinkercad and Falstad",
        "Identify schematic symbols and simple schematic diagrams",
        "Design basic circuits in a simulation environment"
      ],
      "course_content": {
        "Fundamental Concepts": [
          "Be Inspired!",
          "Fundamental of electricity",
          "Fundamental of Electricity - Quiz",
          "Current",
          "Current - Quiz",
          "Voltage",
          "Voltage - Quiz",
          "Resistance",
          "Resistance - Quiz",
          "Ohm's law",
          "Create Tinkercad account",
          "Tinkercad interface",
          "Electrical measuring instruments",
          "Power",
          "Heat"
        ],
        "Resistors": [
          "Introduction to resistors",
          "Resistor color code and power rating",
          "Series connection of resistors - Part 1",
          "Series connection of resistors - Part 2",
          "Parallel connection of resistors - Part 2",
          "Kirchhoff's current law",
          "Kirchhoff's voltage law"
        ],
        "Capacitors": [
          "Introduction to capacitors",
          "How does a capacitor store electrical energy",
          "Calculate the energy stored in a capacitor",
          "Difference between AC and DC",
          "Why capacitor blocks DC flow",
          "Capacitors in parallel",
          "Capacitors in series",
          "You have done great job"
        ],
        "Extra Module": [
          "Bonus"
        ]
      },
      "requirements": [
        "No prior electronic knowledge is needed - just basic algebra",
        "No electric components are required"
      ],
      "description": "Welcome to the world of electronics! If you're curious about how everyday devices work, this course is perfect for you.\nIn this beginner-friendly course, we'll explore the most important electrical engineering concepts in a fun and engaging way. You'll learn the fundamentals of electronics without getting bogged down in complex technical jargon.\nThroughout the course, we'll practice analyzing simple circuits using free and easy-to-use web-based simulation tools like Tinkercad and Falstad. We'll even provide problems and simulations to help you understand the importance of each topic.\nThe course is divided into three sections:\nSection 1: Fundamental Topics - Learn how electrons move through wires and get a solid grasp on the most important electronic concepts.\nSection 2: Resistors - Discover the different types of resistors and learn how to use them in your circuits.\nSection 3: Capacitors - Understand how capacitors store electrical charge and simulate simple RC circuits to deepen your understanding.\nBy the end of this course, you'll have the skills and knowledge needed to create simple electronic circuits. Don't worry if you don't have any experience with electronics, we've got you covered!\nPlus, the course is regularly updated with new materials, tips, and tricks to help you take your circuits to the next level.\nSo what are you waiting for? Join us today and unlock the secrets of the electronic world. This course is meant for everyone, from beginners to seasoned pros. Good luck!",
      "target_audience": [
        "Anyone curious about electronics and would like to have understanding of basic electronics",
        "Makers and hobbyists who wants to know how really electronic components work",
        "Robotics enthusiasts who mainly deal with programming"
      ]
    },
    {
      "title": "PCB Design Using Kicad9 | Free Kicad EDA | PCB Design Course",
      "url": "https://www.udemy.com/course/pcb-design-with-kicad-step-by-step-tutorial/",
      "bio": "A Short Course on PCB Design Using Kicad 9.0",
      "objectives": [
        "How to design PCB layouts using KiCad 9.0",
        "Learn PCB Design Process",
        "Schematic & PCB Layout Design",
        "Production Output and Ordering PCB"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of electronics (resistors, capacitors, microcontrollers, etc.)",
        "The knowledge of PCB structure",
        "KiCad 9.0 installed (we’ll guide you through this at the beginning)"
      ],
      "description": "Are you aiming for a career in embedded systems? Want to learn how to design your own custom circuit boards from scratch? Then this course is for you.\nIn this hands-on course, you'll learn how to design PCBs using KiCad 9.0, one of the most powerful and open-source EDA tools in the industry. Whether you're a student, electronics hobbyist, or aspiring embedded engineer — this course will take you from zero to designing your own PCB, ready for fabrication.\nWe'll guide you step-by-step through:\nDesign Process\nCreating schematic diagrams\nAdding components\nMaking connections\nAssigning foot prints\nCross Checks\nSwitching schematic to PCB\nComponent Placement\nDrawing PCB layouts\nRouting signals\n3D View\nAutomatic Rule Check\nGenerating Gerber files and BoM\nPCB ordering walkthrough\n\n\nWhat makes this course special?\nIt’s beginner-friendly, no prior PCB design experience needed\nIt focuses on practical skills, not just theory\nYou’ll gain confidence to design your own hardware\nIt sets a strong foundation for a career in embedded systems\nBy the end of the course, you’ll be able to take an idea from your notebook to a real, manufacturable PCB design, using industry-level workflows — a skill that's highly valued in the embedded world.\n\n\nBe ready to elevate your skill!",
      "target_audience": [
        "Students and graduates who want to pursue a career in embedded systems or electronics design",
        "Beginner engineers looking to learn practical PCB design from scratch",
        "Hobbyists and makers who want to bring their embedded projects to life",
        "Anyone who wants to learn how to design production-ready PCBs using KiCad 9.0",
        "Diploma, B.E/B-Tech, or M.E/M-Tech students in Electronics, or related fields"
      ]
    },
    {
      "title": "Learn IOT Basics",
      "url": "https://www.udemy.com/course/learn-iot-basics/",
      "bio": "Towards Learning Basics",
      "objectives": [
        "A basic learning as a priority.",
        "A must for Individuals into any profession.",
        "A learning bondage of Networking Connections.",
        "Cloud Computing as a data collection through IoT devices as a priority."
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience Needed."
      ],
      "description": "The module defines how:: The phrase \"Internet of Things\" (IoT) refers to the collective network of linked devices and the technology that enables the communication between devices and the cloud and between the devices themselves. This communication may also take place between the devices themselves. There are currently billions of gadgets linked to the internet due to the development of low-cost computer processors and increased bandwidth in telecommunications. This indicates that everyday household items such as toothbrushes, vacuum cleaners, vehicles, and machinery may employ sensors to gather data and react intelligently to the input of humans.\n\n\n\"Internet of Things\" is what \"IoT\" stands for. It is the network of physical objects, devices, vehicles, buildings, and other items embedded with sensors, software, and connectivity, enabling them to collect and exchange data with each other and their environment over the internet. It is also referred to as the Internet of Things (IoT). Devices connected to the internet of things may vary from simple sensors and high-tech household appliances to intricate factory equipment and driverless cars. The information gathered by the Internet of Things devices may be studied and used to enhance decision-making, enhance process optimization and automation, and establish new business models and income streams. The Internet of Things has the potential to revolutionize various sectors, including healthcare, manufacturing, transportation, and agriculture.\nThe Internet of Things connects \"things\" that people use daily to the internet. Since the 1990s, computer engineers have incorporated sensors and computers into various commonplace items. Nevertheless, development was painfully slow since the chips were so large and cumbersome at first. The early applications for the low-power computer chips known as RFID tags were in tracking pricey equipment. These circuits' size, speed, and intelligence continued to improve over time, even as computer devices become more compact.",
      "target_audience": [
        "Beginners and Independent Learners"
      ]
    },
    {
      "title": "Learn Electronics with Real-World Arduino Circuit Projects",
      "url": "https://www.udemy.com/course/foundations-of-electronics-and-circuit/",
      "bio": "Newly Updated Electronics Fundamentals 2023: From Basics of Electronics to Arduino Circuit projects",
      "objectives": [
        "This course will completely get you started in the study of ELECTRONICS as well as how to build simple electronic circuit with Arduino",
        "Understand basic concept of Electricity and Electronics and build circuit with Arduino",
        "Build Your Own Electronic Devices with Practical Arduino Circuit Projects",
        "You should be able to analyze, design simple electronics circuits using some common semiconductor components such as diodes, transistors, operational amplifiers",
        "You will learn how to design and simulate Electronic circuit on your computer",
        "Understand the concept of CURRENT, VOLTAGE, RESISTANCE AND POWER",
        "Understand OHM'S LAW and POWER LAW",
        "How to read and make circuit with Breadboards",
        "Understand how different Electronics components work",
        "Discover the Exciting World of Electronics with Engaging Arduino Circuits"
      ],
      "course_content": {},
      "requirements": [
        "No previews knowledge of Physics is Required",
        "Desire to learn Electronics",
        "No Hardware or Software is required"
      ],
      "description": "Are you ready to take your electronics skills to the next level? Look no further than our newly updated course, \"Learn Electronics with Real-World Arduino Circuit Projects\". In 2023, we're bringing you a comprehensive foundation in electronics, from the basics to practical Arduino circuit projects.\nOur course is designed for beginners and those with some electronics experience. You'll start by learning the fundamentals of electronics, including electricity, current, voltage, resistance, and energy. From there, we'll dive into more advanced topics like passive components such as switches, relays, resistors, capacitors, inductors, transformers, and active components such as the transistor, diodes, SCR, LED, linear and digital ICs, and op-amp applications.\nBut that's not all - our course is packed with engaging and practical Arduino circuit projects that will help you apply your knowledge and build your own electronic devices. With our easy-to-follow videos, interactive quizzes, and real-world examples, you'll be well-equipped to take on any electronics challenge\nTHE BEAUTY OF THIS COURSE\nThis Course concentrate more on how this components works and how to use them in your circuit construction rather than the cumbersome theories that other courses offer that is of little value in real world electronics projects\nSome of the major topics covered include:\nWhat is Electricity and Electronics\nhow to build simple electronics circuits using some common semiconductor components such as diodes, transistors, and operational amplifiers\nUnderstating ohm's law and power law\nWhat exactly is current, voltage, resistance and energy\nPassive components such as switches, Relays, Resistors, Capacitors, Inductors, Transformers etc\nActive components such as the Transistor, Diodes, SCR, LED, Linear and Digital IC's etc\nDiode applications\nNPN and PNP bipolar junction transistors\nOp-amp applications\nHow to use the Breadboard and other circuit board\nHow to simulate, analyze and design Electronic circuit in your computer\nPractical Arduino circuit projects\nLIFE TIME ACCESS:   By enrolling in this course you have an instant Life- Time access\n30 DAY MONEY BACK GUARANTEE:  This course comes with a 30 day money back guarantee! If you are not satisfied in any way, you will be refunded of your money.\nSo if you're ready to discover the exciting world of electronics and build your own real-world circuit projects, enroll in our newly updated course today. Whether you're a hobbyist or aspiring electronics engineer, this course will provide you with the knowledge and skills you need to succeed in this exciting field.\nTHANK YOU AND HOPE TO SEE YOU IN THE COURSE",
      "target_audience": [
        "Any one who aspires to become an Electrical / Electronic Engineer",
        "First year engineering students",
        "Any one who wants to refresh his previous knowledge of electricity and electronics",
        "Any one who want to build electronics circuit with Arduino",
        "For students, inventors, developer and any one who want to teach electronics in the simplest form",
        "Any one seeking for a job opportunity."
      ]
    },
    {
      "title": "PIC Microcontrollers: Design & Manufacture Your Training Kit",
      "url": "https://www.udemy.com/course/pic-microcontrollers-design-manufacture-your-training-kit/",
      "bio": "A-Z Guide that allows you to make a factory quality training kits that meet your exact needs.",
      "objectives": [
        "Make your Own Training Kit",
        "Design and Manufacture any PCB that comes in your mind",
        "Design any Microcontroller module"
      ],
      "course_content": {},
      "requirements": [
        "Download Proteus Software"
      ],
      "description": "Welcome to the A-Z Guide to designing, drawing, and testing different training kit circuits using one of the most popular software in the electronics industry. After this course, you will be a master at making PIC Microcontrollers Training Kit instead of buying it.\nWhy You Should Take This Course?\nFull instructions on how to use the tools.\nDesign your own training kit from scratch.\nLearn with the A-Z Guide that includes topics for engineering, assembly, inspection, and testing.\nAvoid difficulties in production by following our step-by-step instructions for assembly lines.\nGet hands-on experience with the most common tools used for manufacturing microcontrollers.\nNo previous knowledge needed.\nContinual Updates More Than 400 STUDENTS!!! THANK YOU!!!\nWhat Students Are Saying:\n\"It is self-explanatory and very rich in terms of content, great for practical tests.\" - George Aggrey Mensah\nReasons to Take This Course:\nCommercial training kits have many functions you might never use and add an additional cost, making the overall cost of a kit very high.\nThere is no chance that you will find a kit that matches your exact needs.\nMaking things with your own hands will give you a very good understanding of how electronic boards are made and will help you become a professional in making permanent printed circuit boards.\nYou can easily adjust the items of the kit and make many copies at your home at a very low price.\nYou will get to practice playing with electronics.\nSo, the Make PIC Microcontrollers Training Kit course will offer you:\nA-Z Guide to designing, drawing, and testing different training kit circuits using one of the most popular software in the electronics industry. After this course, you will be a master at making your own training kit instead of buying it.\nBecome a professional in making your own circuits. You will even be able to master mass producing an electronic module for Microcontroller that you find useful.\nVideo and text lectures are included along with the software package that will be used in this course.\nAll you need for this course is your laptop and headphones.\nThis course is open for comments and suggestions. Another reason why you should take this course is that you will learn by doing, not by listening, and you will become an expert in making your own circuits.\nWhat You Will Learn\nDesign and draw training kit circuits for PIC microcontrollers.\nAssemble and test your own training kits.\nAvoid common pitfalls in electronic production.\nMaster the use of common manufacturing tools.\nGain hands-on experience in making your own circuits.\nWho Is This Course For\nElectronics enthusiasts and hobbyists.\nStudents and professionals looking to deepen their knowledge of microcontroller design.\nAnyone interested in DIY electronics and learning by doing.\nRequirements\nNo prior knowledge of electronics required.\nA laptop and headphones.\nEnthusiasm and a willingness to learn.\n\n\nAbout the Instructor Info Educational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology, helping educate the world to make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and provide guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Microcontrollers Fans",
        "Electronics Lovers",
        "Engineers",
        "No prior Circuit design knowledge is required",
        "Newbies looking to enhanse there Circuit design skills and make great PCBs and training kits in not time"
      ]
    },
    {
      "title": "An Introduction To VHDL",
      "url": "https://www.udemy.com/course/an-introduction-to-vhdl/",
      "bio": "A basic guide to learning the fundamentals of VHDL design",
      "objectives": [
        "How to design different circuits and functions using VHDL",
        "Understand and interpret other VHDL code and describe what functionality it is performing",
        "Learn about different design structures & styles that can be used when coding in VHDL",
        "Learn how to implement a test bench to test your VHDL designs",
        "Learn how to run a simulation in order to provide stimulus to your designs to test and verify functionality",
        "Examples on how to design several different circuits using VHDL from beginning to end",
        "((Bonus)) The basic FPGA development flow used for VHDL designs & tools used for implementing VHDL designs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What Is VHDL?",
          "VHDL Example",
          "Introduction Quiz"
        ],
        "Data Objects": [
          "Introduction to Data Objects",
          "Constants",
          "Files",
          "Variables",
          "Signals",
          "Data Objects Quiz"
        ],
        "Data Types": [
          "Introduction to Data Types",
          "Standard Logic 1164 Library",
          "Standard Logic Arithmetic Library",
          "Numeric Bit Library",
          "Standard Logic Text IO Library",
          "Data Types Quiz"
        ],
        "Entities and Architectures": [
          "Introduction to Entities & Architectures",
          "Entity Declaration",
          "Structural Style",
          "Dataflow Style",
          "Behavioral Style",
          "Mixed Styles",
          "Entities and Architectures Quiz"
        ],
        "Advanced VHDL Statements": [
          "If Statements",
          "Case Statements",
          "Loop Statements",
          "Advanced VHDL Statements Quiz"
        ],
        "Advanced Design Styles": [
          "Structural Design Example",
          "Behavioral Design Example",
          "Data Flow Design Example",
          "Advanced Design Styles Quiz"
        ],
        "Testbench Designs": [
          "Introduction to Designing Testbenches",
          "Testbench Decoder Design Example #1",
          "Testbench Full Adder Design Example #2",
          "Testbench Designs Quiz"
        ],
        "Running a Simulation": [
          "Full Adder Testbench Simulation using Vivado",
          "Decoder Testbench Simulation using Vivado"
        ],
        "((Extra Material)) FPGA Implementation of Decoder VHDL Design": [
          "FPGA Implementation Example"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of Logic Design & Logic Gates",
        "Xilinx Vivado Tool Suite used for running simulations (Download link will be provided in course)",
        "Basic knowledge of how to use a computer, install programs, unzip files and edit files"
      ],
      "description": "An Introduction To VHDL is an introductory course that teaches the basics of VHDL, so students have a beginner understanding of writing VHDL code. It presents a set of simple and commonly used features of the VHDL language, so that students can begin writing models of digital logic circuits in VHDL. Numerous examples are included within the course, that explain the different formulations of the language constructs and their semantics.\n\n\nCourse Outline:\n\n\nIntroduction to VHDL: Understanding the purpose and applications of VHDL in digital design.\nGetting Started with VHDL: Setting up your development environment and writing your first VHDL code.\nVHDL Syntax and Data Types: Mastering VHDL syntax, data types, and basic constructs.\nBehavioral Modeling: Writing VHDL code to describe the behavior of digital circuits.\nStructural Modeling: Designing digital circuits using component instantiation and structural modeling techniques.\nSequential Logic Design: Understanding flip-flops, registers, counters, and state machines in VHDL.\nConcurrent Logic Design: Exploring concurrent signal assignments, processes, and sensitivity lists.\nAdvanced Topics: Delving into advanced VHDL features such as generics, packages, and testbenches.\nFPGA Programming with VHDL: Applying VHDL to program FPGA devices for custom digital designs.\n\n\nAn Introduction To VHDL provides a great beginner level introduction to the VHDL language, that can be understood both by digital logic design enthusiasts, as well as electrical engineers and those interested in learning VHDL language to broaden their knowledge of the digital world.\nBy the end of this course, you'll have the basic knowledge and skills to confidently write, simulate, and synthesize VHDL code for various digital design applications. Whether you're pursuing a career in digital design or simply passionate about electronics, this course will empower you to take your first steps into the exciting world of VHDL programming. Join us today and embark on your journey to mastering VHDL!",
      "target_audience": [
        "Students who want to learn about VHDL",
        "Students who want to learn how to design digital circuits",
        "Students who want to learn how to test the functionality of digital circuits using a simulator",
        "Students studying Digital Design or Electrical Engineering"
      ]
    },
    {
      "title": "SCADA System Interface with Arduino",
      "url": "https://www.udemy.com/course/arduino-scada-system-interface-with-arduino/",
      "bio": "Learn SCADA hands-on by developing your own interfaces for different systems and control Your Arduino Based Device.",
      "objectives": [
        "Create SCADA interfaces using various technologies allowing operators to interact with a live, running system.",
        "Use the provided Arduino program as the basis for your interfaces.",
        "Create a fully-functional graphical interfaces to monitor Arduino",
        "Create a fully-functional graphical interfaces to interact with Arduino",
        "Create a fully-functional graphical interfaces to log data from sensors using Arduino",
        "Build a fully functional Arduino Program",
        "Understand the Working principle of Relays and how they interact with Contacts",
        "Differentiate between Arduino and PLC",
        "Learn different methods for programming Arduino"
      ],
      "course_content": {},
      "requirements": [
        "All software required for this course will be provided Free with Installation instruction in video lectures",
        "A Computer / Laptop"
      ],
      "description": "Welcome to this course.\nWe will explain SCADA hands-on by elaborating your own interfaces for distinguishable systems and control Your Arduino Based Device.\nIn this course, you are going to get familiar with SCADA by creating visual interfaces that you can utilize to cover the automated procedures, demonstrate operating parameters, and indeed acquire data from a system that's formerly operated and working.\nWe're clarifying one of the most accustomed solutions in the world of visualization. As such, we'll be working considerably with that technology.\nWe will also be working hands-on with SCADA, and by the end of this course, you'll be capable of making a completely running monitor, control, and data acquisition system employing Arduino.\nSo be ready to start designing and creating your very first SCADA interface effortlessly and effectively, with 24/7 support. I am certain that you'll enjoy this course content. See you inside.\nWhat you will learn\nWrite Arduino code as the base for your interfaces.\nProduce a completely functional graphical interface to cover Arduino.\nMake a completely functional Arduino Code to read sensors and control outputs based on SCADA Interface.\nUse different kinds of Graphical Elements for controlling different kinds of devices.\nUnderstand the Working principle of communication between SCADA Systems and Arduino.\nProduce SCADA interfaces using varied technologies allowing operators to interact with a living, streaming system.\nLearn different methods for programming Arduino.\nWho is this course for\nBeginners interested in learning SCADA systems.\nHobbyists and electronics enthusiasts.\nEngineering students and professionals looking to expand their skill set.\nAnyone interested in Arduino and SCADA integration.\nRequirements\nBasic understanding of Arduino and electronics.\nAn Arduino board with necessary peripherals.\nBasic programming knowledge is helpful but not required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone who want's to learn how to Control Arduino using a visualized Interface",
        "Anyone who want's to control a device remotely or using a visual interface",
        "Any Tech Geek who want's to know Arduino, SCADA and How to take full advantage of SCADA System design.",
        "For those lacking the requisite knowledge to make the most of this course, my first course \"Arduino Programming covers things you'll need.",
        "This course requires students to already know the basics of Arduino programming"
      ]
    },
    {
      "title": "Mini Course - iPhone Face ID Repair Course",
      "url": "https://www.udemy.com/course/mini-course-iphone-face-id-repair-course/",
      "bio": "All about Face ID You Want to Know",
      "objectives": [
        "You will know how does the iPhone Face ID work.",
        "You will know how to troubleshoot for iPhone Face ID issues.",
        "iPhone Face ID repair jail break step by step with replacing earspeaker flex",
        "iPhone Face ID dot projector flex repair reference process",
        "iPhone Face ID Infrared camera flex replacement and wire jumping"
      ],
      "course_content": {
        "Mini Course - iPhone Face ID Repair Course": [
          "Small Tips of checking Face ID",
          "Face ID workflow and troubleshooting reference process",
          "Face ID Repair-Jailbreak Steps with Earspeaker Flex Repair Reference Process",
          "Face ID Repair - Jail Break with replacing earspeaker flex",
          "Fast tutorial of repair dot projector",
          "Face ID dot projector repair",
          "Face ID IR camera flex replacement",
          "Face ID Repair - Wire Jumping",
          "Face ID Repair - Motherboard issues"
        ]
      },
      "requirements": [
        "Anyone who is interested in mobile phone repair"
      ],
      "description": "This face ID repair course inludes the workflow of face id parts and chips, the repair process of face ID about earpiece speaker flex, dot projector flex and infrared camera.\n\n\n* 10 Video and PDF lessons guide you step by step to understand the workflow and troubleshooting of Face ID;\n* 60 Minutes Tell You how does the Face ID work and how to repair Face ID within 60 minutes.\n_______________________________________________________________________________________________________________________\n* Face ID workflow and troubleshooting reference process\n* Small tips of checking face ID\n* Face ID Repair-Earspeaker Flex Repair Reference Process\n* Jail Break steps with replacing earspeaker\n* Face ID Repair - Jail Break with replacing earspeaker flex\n* Face ID-Dot Projector Repair Reference Process\n* Fast tutorial of repair dot projector\n* Face ID dot projector repair\n* Face ID IR camera flex replacement\n* Face ID Repair - Wire Jumping\n* Face ID Repair - Motherboard issues\n\n\nRelying on the ten years of industry experience and a professional technical team, REWA has developed a series of industry-leading and practical iPhone repair training courses. Combining teaching experiences at home and abroad and feedback from trainees, our curriculum system is designed to take trainees into the electronic repair world step by step with the help of our online and offline courses. So that our trainees can master necessary technical skills like the workflow of components, fault-finding analysis, repair solutions, the usage of repair tools, etc.. and become a qualified repair technician.\n\n\nREWA Academy, help you to open the door to Phone Repair.",
      "target_audience": [
        "Anyone who is interested in mobile phone repair"
      ]
    },
    {
      "title": "Computer Architecture",
      "url": "https://www.udemy.com/course/computer-structure/",
      "bio": "Computer Structure, Operating System, Disk, Memory, CPU",
      "objectives": [
        "Computer architecture",
        "CPU",
        "Integer arithmetic",
        "Floating point structure",
        "Instruction cycle",
        "Memory, Cache",
        "Interrupt",
        "DMA",
        "Disk",
        "Input Ouput device"
      ],
      "course_content": {
        "Computer Structure": [
          "Computure Structure",
          "Photo of devices",
          "Semiconductor",
          "CPU Structure",
          "ALU"
        ],
        "Integer operation": [
          "Adder",
          "Substractor",
          "Shifter",
          "Multiplier",
          "Divisor"
        ],
        "Floating-point": [
          "Floating-point Structure",
          "Floating-point Operation"
        ],
        "Instruction": [
          "Instruction Cycle",
          "Instruction Process",
          "Addressing Mode",
          "CISC vs RISC"
        ],
        "Memory Management": [
          "Page",
          "MMU"
        ],
        "Storage Device": [
          "Memory Hierarchy",
          "Cache",
          "SRAM vs DRAM"
        ],
        "Interrupt": [
          "Types of interrupt",
          "IDT, ISR",
          "Trap",
          "Internal Interrupt",
          "External Interrupt"
        ],
        "DMA": [
          "PIO vs DMA",
          "Device Configuration",
          "DMA Wrting",
          "DMA Reading"
        ],
        "Disk": [
          "HDD",
          "HDD vs SSD"
        ],
        "Input Output Device": [
          "I/O connecting method",
          "ADC, DAC",
          "GPU"
        ]
      },
      "requirements": [
        "Little assembly, C",
        "Logical thinking"
      ],
      "description": "1. Lecture Objective\nCoding is the process of creating instructions to operate a cutting-edge technology-intensive computer. Therefore, it is important to understand the principles of computer architecture and operation in order for you to grow into a skilled software developers capable of writing good code.\nGaining a deep understanding of the intricate processes of a computer can be challenging. Thus, in this lecture, we will provide a detailed explanation of the complex operations based on the structural representation of computers.\n\n\n2. Lecture Features\nWe will explain the computer architecture and operation that software developers need to know in an easily understandable way through illustrations. Around 50 pages of diagrams will be provided to represent the structure of computer devices.\nUnlike typical computer architecture lectures in computer major undergraduate programs, which focus on hardware development, the purpose of this lecture is to understand the principles of computer architecture and operation so as to become excellent in software development.\n\n\n3. Technology and Principle-Centered Lecture\nIn the latest CPUs, a high-performance \"Carry Look-Ahead Full Adder\" can be incorporated. However, in this lecture, we will only explain the \"Full Adder\" that can easily illustrate the principles of addition, which is not based on such state-of-the-art technology.\nThe lecture will be based on the past 4/8-bit standards instead of the modern 32/64-bit ones. Since the principles remain the same, with only the number of bits being different, simple explanations will be provided using a smaller bit size.",
      "target_audience": [
        "SW developer who wants to understand how the computer operates.",
        "Student majoring in computer science who wants to lean more than just theory.",
        "Anyone who does not have a degree in computer science and wants to learn about the mechanism and structure of computers."
      ]
    },
    {
      "title": "Raspberry Pi Full Stack Upgrade Project",
      "url": "https://www.udemy.com/course/raspberry-pi-full-stack-upgrade-project/",
      "bio": "A challenging upgrade project that blends Raspberry Pi, ESP32, sensors, displays, radio communications & Cloud services.",
      "objectives": [
        "Become better at the analysis, design, and planning required when working on large projects.",
        "Improve your ability to build a full-stack application based on the Raspberry Pi, the ESP32 and a combination of software tools and technologies.",
        "You will gain new skills in maintaining, modifying, and extending a full-stack application.",
        "Improve your understanding of the the Linux operating system and the command line.",
        "Learn how to use the HC12 transceiver to allow communications between a Raspberry Pi and ESP32 (or any Arduino compatible) boards.",
        "Show Raspberry Pi status information on an OLED screen.",
        "Get environment data from a BME280 sensor on a Raspberry Pi and ESP32.",
        "Use Google Charts and Plotly Graph Object in a Raspberry Pi web application."
      ],
      "course_content": {},
      "requirements": [
        "I recommend that you Raspberry Pi Full Stack before attempting Raspberry Pi Full Stack Upgrade Project.",
        "Be comfortable with Linux and the command line.",
        "Be comfortable with wiring simple circuits.",
        "Any prior experience with the Raspberry Pi, ESP32, or the Arduino is a plus."
      ],
      "description": "Welcome to Raspberry Pi Full Stack Upgrade Project!\nIn the original Raspberry Pi Full Stack course, you learned how to build an application that integrates microcomputers, microcontrollers, sensors, radio transceivers, web servers, a database, and Cloud services.\nThis course will teach you how to upgrade this application with new hardware and software.\nThe upgraded Full Stack application utilises the Raspberry Pi Zero 2 W single-board computer and the ESP32 microcontroller - although you can use any Raspberry Pi and Arduino-compatible board.\nThe two nodes communicate via a modern radio transceiver. They can sense their environment, show their status on an organic LED display and a web interface, log data on the Cloud, and trigger notifications when specific conditions arise.\nBy completing this course, you will gain and improve soft and hard knowledge and skills. You will become better at the analysis, design, and planning required when working on large projects.\nAnd you will learn how to integrate sensors, displays, and local and Cloud communications using Raspberry Pi and ESP32 or Arduino boards.\nThis course will stretch your skills.\nI designed it for intermediate-level Makers that, ideally, have completed the original Raspberry Pi Full Stack course.\nPlease review the free lectures in the first section to find out more details about the course.\nI'm looking forward to seeing you on the course.",
      "target_audience": [
        "Graduates of the original Raspberry Pi Full Stack course.",
        "Makers looking for a non-trivial Raspberry Pi project.",
        "Makers keen to up-skill their entire skill set, from the operating system to the Internet of Things."
      ]
    },
    {
      "title": "Analog Circuits From Scratch",
      "url": "https://www.udemy.com/course/analog-circuits-from-scratch/",
      "bio": "Learn the concepts of Analog Elecronics and Design Analog Circuits from Scratch!",
      "objectives": [
        "Understand the concepts of Analog Electronics",
        "Solve circuits using diodes and transistors",
        "Design analog circuits from scratch using basic electronic components",
        "Learn about Power Supplies, Amplifiers, Current Mirrors, Multistage Amplifiers, Differential Amplifiers, Power Amplifiers and so on."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fundamentals of Diode Circuits": [
          "A review on PN Junction, Biasing",
          "Diode - Symbol, Circuits, Ideal Approximation",
          "V-I Characteristics of a diode",
          "Problem 1 - Solving Diode Circuits",
          "Problem 2 - Solving Diode Circuits"
        ],
        "Power Supplies": [
          "Blocks of a DC Power Supply",
          "Half Wave Rectifier - Circuit, Working, Performance measures",
          "A basic problem on Half Wave Rectifiers",
          "The complete working of Centre tapped rectifier",
          "Bridge Rectifier - Working, Parameters",
          "Filters - Types, Response curves",
          "HWR, FWR with Capacitor Filters",
          "An Example on Rectifier with Filter",
          "Regulators - Classification, Important blocks",
          "Series Voltage Regulator - Block Diagram",
          "Shunt Voltage Regulator - Block diagram",
          "Waveforms at each stage of a power supply"
        ],
        "Applications of Bipolar Junction Transistors": [
          "Transistors - Basics, Classification",
          "BJT - Sections, Types, Modes",
          "Biasing the Transistor, Q Point",
          "Different Configurations and Current Gains",
          "Explanation for all the components of a common emitter amplifier",
          "Frequency Response Curve of an Amplifier",
          "BJT Current Mirror - Working, Requirements",
          "Deriving Current Transfer Ratio for Current Mirrors",
          "An Important question on Current Mirrors",
          "Darlington Pair"
        ],
        "MOSFET Amplifiers": [
          "Comparison between FET and BJT, Amplifier Characteristic",
          "Types of Field Effect Transistor",
          "Construction and Working of N-Channel Depletion type MOSFET",
          "The influence of gate voltage",
          "Output Characteristics curve of a N-Channel Depletion type MOSFET",
          "Transfer Characteristics curve of a N-Channel Depletion type MOSFET",
          "Construction and Working of NMOS",
          "Transfer Characteristics curve of a NMOS",
          "Using MOSFET as an amplifier",
          "MOSFET Current Mirrors"
        ],
        "Differential Amplifiers": [
          "Differential Amplifier, Common Mode Rejection Ratio",
          "An important pre-requisite to understand Differential Amplifiers",
          "The Voltage and the Current Curve of Differential Amplifier"
        ],
        "Power Amplifiers": [
          "Power Amplifiers - Introduction, Classification",
          "Class A Power Amplifier",
          "Class B Amplifiers",
          "Crossover Distortions",
          "Class AB Amplifiers",
          "Class C Amplifiers"
        ],
        "Update - Amplifier Design": [
          "Amplifier Design Problem"
        ]
      },
      "requirements": [
        "No. But a basic knowledge in Circuit Theory will help"
      ],
      "description": "Hey all! Welcome to my course on Analog Circuits From Scratch where everything is taught from scratch towards applications. The syllabus of the course is as follows:\n\n\nUnit 1 - Fundamentals of Diode Circuits:\nFundamentals of PN Junction\nFundamentals of Diode\nForming circuits using Diode\nDiode Approximation\nSolving Diode Circuits\n\n\nUnit 2 - Power Supplies:\nBuilding blocks of a power supply\nHalf wave rectifier circuit – RMS, Average values, Ripple Factor, Form Factor\nFull wave rectifier circuit – RMS, Average values, Ripple Factor, Form Factor\nCentre tapped rectifier - RMS, Average values, Ripple Factor, Form Factor\nBridge rectifier - RMS, Average values, Ripple Factor, Form Factor\nProblems on Rectifiers\nFilters – Response Curves\nCapacitor Filters\nRegulator – types\nSeries Voltage Regulator\nShunt Voltage Regulator\n\n\nUnit 3 - Bipolar Junction Transistor Applications\nWorking of BJT\nBJT – Characteristics, Types\nBJT – Modes of Operation\nBJT Amplifier\nBJT Amplifier – Frequency Response Curves\nBJT Voltage Regulator – Series, Shunt\nBJT Current Mirrors – Explanation, Equation, Problems\n\n\nUnit 4 - MOSFET Applications;\nWorking of MOSFET\nMOSFET – Characteristics, Types\nMOSFET – Modes of Operation\nMOSFET Amplifier\nMOSFET Current Mirrors – Explanation, Equation, Problems\n\n\nUnit 5 - Differential Amplifiers and Power Amplifiers\nDifferential Amplifier – Introduction, Circuit using BJT\nVoltage and Current curves of Differential Amplifier\nPower Amplifiers – Classification\nClass A, B, C, AB, D\n\n\nYou will get all the basics right to build a strong foundation in understanding, analyzing and designing the analog circuits using the fundamental electronic components such as a diode, transistor and so on. What are you waiting for? See you there in my course!",
      "target_audience": [
        "Beginner Electronics Aspirants",
        "Beginner Electrical Engineering Aspirants",
        "Anyone who wants to learn and design Analog Circuits from Scratch"
      ]
    },
    {
      "title": "Turn Raspberry Pi into A Web Server",
      "url": "https://www.udemy.com/course/raspberry-pi-into-a-web-server-host-website-wordpress-raspberry-pi/",
      "bio": "Setup Webserver on your own Raspberry Pi and have full control over your files and web scripts + Avoid monthly fees",
      "objectives": [
        "Host your files, scripts, web pages, monitoring systems on your own web server",
        "Create a web page to read sensors data and control your house vie home automation using your own server",
        "Avoid the monthly fees of hosting services by paying only for the raspberry pi board once!",
        "Have full control over your server, turn it on, off, make it visible and a lot of other options",
        "Host other people websites and charge a monthly fee!",
        "Setup the Raspbian operating system to the RPi",
        "Wire up your Raspberry Pi to create a fully functional computer",
        "Use and Learn Python programming language",
        "Write Python code to control the Raspberry Pi hardware",
        "Install the OS on Your SD Card",
        "Enable SSH And Setup Wi-Fi on Raspberry Pi",
        "Install Required Packages",
        "Installing Apache Server",
        "Install Database MySQL",
        "Download and Install Web Scripts: WordPress",
        "Configure Web Server",
        "Give Raspberry Pi A Domain Name to access it worldwide.",
        "Setup Your Router to allow connection to your Pi"
      ],
      "course_content": {},
      "requirements": [
        "A Raspberry Pi, any version (Optional)",
        "A Windows, Mac or Linux computer",
        "Access to the Internet"
      ],
      "description": "Welcome to this course.\nSetup Webserver on Raspberry Pi and Host Websites and Automate your territory via a web interface.\nOne of the appealing aspects of systems on chips (SoC) like Raspberry Pi is their capability to serve as web servers to host websites and other online applications. This web server hosts files when the call is made from the customer end. In this course, I show you how to set up a Webserver on Raspberry Pi and install a web script or produce a website that can be accessed from anywhere. You can even place Raspberry Pi online by port forwarding technique and access the website from anywhere in the world.\nDo you want to discover how to host your files, scripts, web pages, and monitoring systems on your own web server, starting from zero?\nRaspberry Pi is a credit card-sized computer that has a processor, memory, and can be connected to any big screen and boot up like a completely functional computer at a really low expense starting at $25.\nYou'll learn how to:\nHost your files, scripts, web pages, and monitoring networks on your own web server.\nProduce a web page to read sensor data and control your home via home automation utilizing your own server.\nAvoid the annual fees of hosting services by paying just for the Raspberry Pi board one time!\nHave full control over your server, turn it on, off, make it transparent, and a lot of other options.\nHost other people's websites and charge a recurring fee!\nWhen you join this course, you'll also get to learn:\nRaspberry Pi From Zero to Hero\nWordPress Websites: Make a website that everyone will love.\nRaspberry Pi From Zero to Hero\nTo see the big picture, you need to know why you need to learn Raspberry Pi, and how it will make your life different. In my newest course \"Raspberry Pi Step By Step: Your Complete Guide,\" you'll be taken from the very beginning. Everything will be covered, starting from why Raspberry Pi board is much better than PIC Microcontroller and ending in how you can write a code to control its LEDs just like in Microcontroller.\nGetting a credit card-sized fully functional computer at that low price is really worth it. By the end of this course, you can turn any idea that you have into a trending Kickstarter project and get crowdfunding for it from the online community. Raspberry Pi board will help you a lot in turning your ideas into reality in no time.\nDon’t have a Raspberry Pi board? No problem! What makes this course really special is the fact that you don’t need the Raspberry Pi Board to be in your hands. There's a full section on how to simulate the board in your operating system environment and start learning without having the board.\nThings that you'll be able to do at the end of this course:\nTurn any old Television into a SMART Television using Raspberry Pi board.\nProgram a code in Python that can take sensor signals as input and send light signals as an output. The sky will be your new limit (No prior programming knowledge required).\nGet inside the IOT (Internet of Things) world and start making your own awesome projects that can make everybody’s life easier.\nInstall Linux for the first time and deal with it like a professional.\nControl the Raspberry Pi board remotely in more than three different ways.\nKnow how Raspberry Pi boards can be used to make a supercomputer.\nWhat you will learn\nHost your files, scripts, web pages, and monitoring networks on your own web server.\nProduce a web page to read sensor data and control your home via home automation.\nAvoid the annual fees of hosting services by using Raspberry Pi.\nGain full control over your server.\nHost other people's websites and charge a recurring fee.\nRaspberry Pi From Zero to Hero.\nWordPress Websites: Make a website that everyone will love.\nWho is this course for\nBeginners interested in learning how to use Raspberry Pi as a web server.\nHobbyists and electronics enthusiasts.\nEngineering students and professionals looking to expand their skills.\nAnyone interested in hosting their own web server and avoiding hosting fees.\nRequirements\nBasic understanding of Raspberry Pi and electronics.\nA Raspberry Pi board with necessary peripherals.\nBasic programming knowledge is helpful but not required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone interested in Hosting your files, scripts, web pages, monitoring systems on your own web server",
        "Anyone interested in Avoiding the monthly fees of hosting services by paying only for the raspberry pi board once!",
        "Anyone interested in Having full control over your server, turn it on, off, make it visible and a lot of other options",
        "Anyone interested in Hosting other people websites and charge a monthly fee!",
        "Anyone interested in Creating a web page to read sensors data and control your house vie home automation using your own server",
        "Ability to Practice Not Just Watch",
        "Ability to do independent research using online resources"
      ]
    },
    {
      "title": "Arduino Multicolor RGB LED Lamp Controlled Using Bluetooth",
      "url": "https://www.udemy.com/course/arduino-multicolor-rgb-led-lamp-controlled-using-mobile/",
      "bio": "Learn to Interface Arduino with a Mobile App via Bluetooth and Master RGB Multicolor LED Control",
      "objectives": [
        "Discover what is RGB and how it can be used to control colors",
        "Dicover Bluetooth module and how it works",
        "Communicate with Arduino using Your Smartphone",
        "Interface Bluetooth module with Arduino"
      ],
      "course_content": {},
      "requirements": [
        "You must be familiar with Internet browsing",
        "You must have the Will to apply not just watch"
      ],
      "description": "Introduction\nWelcome to the world of Arduino and Bluetooth control!\nIn this course, you'll dive into the fascinating intersection of mobile apps, Bluetooth modules, and RGB LEDs to create an amazing project that is both functional and visually stunning. Imagine being able to control multicolor LEDs wirelessly through your smartphone and showcasing your creation to friends, colleagues, or even in your professional projects.\nWhether you're a beginner or someone looking to expand your Arduino project collection, this course is tailored to provide straightforward, hands-on guidance.\nWhat You Will Learn\nInterfacing Arduino with Mobile Apps: Learn how to establish seamless Bluetooth communication.\nControlling RGB LEDs with Arduino: Understand the basics of working with RGB LEDs and how to achieve stunning color effects.\nMixing Colors Using RGB LEDs: Master the art of creating any color by mixing red, green, and blue LED intensities.\nPractical Bluetooth Applications: Implement Bluetooth control for LED lamps and explore its real-world uses.\nWhy This Course?\nUnlike many Arduino programming courses that overwhelm beginners with unnecessary details, this course is designed to be accessible and engaging. You’ll gain practical skills in a concise and focused manner, guided by a highly experienced instructor with a deep background in Arduino and hardware development.\nWhat Students Are Saying\nEric Dion: \"I learned a lot about the Arduino Bluetooth module in this course. The course is not very long, but it is a good introduction to the Arduino Bluetooth module.\"\nJoin the 4000+ students who have already discovered the joys of controlling Arduino projects with Bluetooth!\nWho Is This Course For?\nBeginners: Those new to Arduino and electronics.\nHobbyists and DIY Enthusiasts: People who enjoy building fun, creative projects.\nEducators and Students: Ideal for teaching and learning about Bluetooth technology and RGB LEDs.\nAnyone Curious About Arduino: No prior experience required—just a willingness to explore and create!\nRequirements\nNo prior experience with Arduino or programming is necessary.\nBasic understanding of electronics is helpful but not required.\nAn Arduino board and simple electronic components (details provided in the course).\nAn Android smartphone or iPhone for Bluetooth control.\nAbout the Instructor\nEducational Engineering Team\nWith over 13 years of experience, the Educational Engineering Team has become a leader in microcontroller education. Teaching over 250,000 students globally, we specialize in making complex topics simple and approachable.\nAshraf Said AlMadhoun\nAshraf is a Mechatronics Engineer, maker, and Chief Educational Engineer at the Educational Engineering Team. Passionate about exploring new trends and sharing knowledge, Ashraf brings practical insights and engaging teaching methods to his courses.\nEducational Engineering Team Offers Courses On\nCircuit Design and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and More\nIndustrial PLC Programming\n3D Design and IoT\nCall to Action\nGet ready to explore the endless possibilities of Arduino and Bluetooth control!\nEnroll now and join thousands of students in creating colorful, interactive, and innovative projects that will leave a lasting impression.",
      "target_audience": [
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone with slight interest in making great things",
        "Arduino Geeks",
        "Electronics Geeks",
        "Hardware developers"
      ]
    },
    {
      "title": "Embedded Wifi Bare-Metal Development From Ground Up™",
      "url": "https://www.udemy.com/course/embedded-wifi-bare-metal-development-from-ground-uptm/",
      "bio": "Connect Your Embedded Device to the Internet : STM32, Web Server, Web Client, Cloud Storage etc.",
      "objectives": [
        "Develop a Complete WIFI Library for ESP8266 and STM32 Microcontrollers",
        "Develop an Embedded WIFI Client for Accessing Web APIs",
        "Develop an Embedded Web Server for Controlling Hardware Remotely",
        "Develop Bare-Metal Firmware for Storing Sensor Data in the Cloud",
        "Develop Bare-Metal Drivers for Connecting ESP8266 to STM32 Microcontrollers",
        "Develop First-In-First-Out (FIFO) Data Structure for Managing Communication Data",
        "Develop Circular Buffer Data Structure for Managing Communication Data",
        "Understand the Fundamentals of the IEEE 802.11 (WIFI) Protocol"
      ],
      "course_content": {},
      "requirements": [
        "NUCLEO-STM32F411 DEVELOPMENT BOARD",
        "ESP8266"
      ],
      "description": "Welcome to the Embedded WIFI Bare-Metal Development From Ground Up™ course.\n\nThis course teaches you how to develop drivers and libraries for connecting your embedded device to the internet.\nThis course uses the STM32 microcontroller and the ESP8266 WIFI chip. The ESP8266 is a low-cost WIFI chip with a full TCP/IP stack and a microcontroller. If you do not understand what TCP/IP stack means, do not worry, by the end of this course you will understand this and much more.\nThe course can be divided into four parts. The first part is theoretical. In this part we shall learn about some networking concepts and the fundamentals of the WIFI protocol.\nIn the next part of the course we shall develop bare-metal drivers for interfacing the ESP8266 chip to the STM32 microcontroller.\nAfter developing our drivers for connecting the ESP8266 chip to the STM32 microcontroller we shall then go ahead and develop efficient data structures for managing communication data between the ESP8266 chip and the STM32 microcontroller.\nIn the final part we shall combine the drivers and data structures developed in the previous parts to develop a library for connecting to the internet. We shall then go on to use the library to develop a WebServer, a Web Client as well as accomplish tasks such as storing sensor data in the cloud and so much more.\nPlease take a look at the full course curriculum.\n\n\nREMEMBER : I have no doubt you will love this course. Also it comes with a  FULL money back guarantee for 30 days!  So put simply, you really have nothing to loose and everything to gain.\nSign up and let's start transmitting some packets.",
      "target_audience": [
        "If you are an embedded developer and want to learn how to connect your embedded device to the internet then take this course."
      ]
    },
    {
      "title": "Introduction to ARM Cortex M3 and M4 Processors",
      "url": "https://www.udemy.com/course/introduction-to-arm-cortex-m3-and-m4-processors/",
      "bio": "Learn the complete architecture of Cortex Processors and also the assembly language instructions!",
      "objectives": [
        "Understand the architecture of ARM Cortex-M Processors",
        "Understand the applications of ARM Processors",
        "Understand and Write Assembly Language Programs using ISA of ARM Cortex-M",
        "Interpret the usage of different registers and memory system features in ARM Cortex-M"
      ],
      "course_content": {
        "Architecture and Features": [
          "Introduction to ARM Microprocessor",
          "Three important features of ARM Processor",
          "Versions and Applications of ARM Processors",
          "Three Stage Pipeline in Cortex M3",
          "Operation Modes of Cortex M3 and M4",
          "The Thumb-2 Technology"
        ],
        "Registers": [
          "General Purpose Registers in ARM",
          "The Stack Pointer, Stack Memory, PUSH and POP",
          "The Link Register",
          "Special Register - Program Status Registers - APSR, IPSR, EPSR",
          "Interrupts, Interrupt Masking, IM Registers",
          "The Control Register"
        ],
        "Features of Memory Systems in ARM": [
          "Address Bus, Memory Space",
          "The Memory Map",
          "The Bit Band Region Feature in Cortex M3",
          "Little Endian and Big Endian Architecture"
        ],
        "The ARM Cortex M3 and M4 Instruction Set": [
          "The Instruction Set Architecture, Types of Instructions",
          "Moving data within the processor",
          "Memory Accesses Instructions - Modes of Indexing, Offset",
          "Load and Store of Multiple Words",
          "Arithmetic Instructions - Addition",
          "Arithmetic Instructions - Subtraction",
          "Multiplication and Division Instructions",
          "Multiply and Accumulate (MAC) Instruction'",
          "Logical Instructions",
          "Shift and Rotate Instructions",
          "Data Conversion Instructions - Signed and Unsigned Extension",
          "Reverse Byte Instructions",
          "Program to add two 16 bit numbers",
          "Bit Field Processing Instructions - BFC, RBIT",
          "Compare and Test instructions",
          "Program Flow Control Instructions"
        ],
        "Handwritten notes for Architecture": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "A very basic knowledge in Electronics is sufficient"
      ],
      "description": "Hi all! Welcome to my course on 'Introduction to ARM Cortex M3 and M4 Processors'. This course will help you gain knowledge in the architecture, registers, features of ARM Cortex Processors. The other half of the course will help you understand the instruction set of ARM Cortex-M so that you'll be able to write programs in assembly language.\n\n\nThe Architecture part covers\n1. Features of ARM Processors.\n2. Versions of ARM\n3. Applications of ARM Cortex-M\n4. Specific Features of ARM Cortex.\n5. Three stage pipeline of Cortex.\n6. Registers - General Purpose, Special Purpose in ARM Cortex M3\n7. Memory Features.\n8. Bit Band Region.\n9. Little Endian, Big Endian Architecture.\n10. The Thumb-2 Technology\n11. Difference between ARM and Thumb Instructions in Classical ARM Processors.\n12. Stack Memory\n13. Interrupts/Exceptions\n14. Interrupt Masking\n\n\nThe Instruction set part covers\n• Moving data within the processor\n• Memory accesses\n• Arithmetic operations\n• Logic operations\n• Shift and Rotate operations\n• Conversion (extend and reverse ordering) operations\n• Bit field processing instructions\n• Program flow control (branch, conditional branch, conditional execution, and\nfunction calls)\n• Multiply accumulate (MAC) instructions\n• Divide instructions\n• Memory barrier instructions\n• Exception-related instructions\n• Sleep mode-related instructions\n• Other functions\n\n\nWhat are you waiting for? I'll see you there in my course.\nThe Cortex-M3 and Cortex-M4 are processors designed by ARM. The Cortex-M3 processor was the first of the Cortex generation of processors, released by ARM in 2005 (silicon products released in 2006).\nThe Cortex-M4 processor was released in 2010 (released products also in 2010). The Cortex-M3 and Cortex-M4 processors use a 32-bit architecture. Internal registers in the register bank, the data path, and the bus interfaces are all 32 bits wide. The Instruction Set Architecture (ISA) in the Cortex-M processors is called the Thumb ISA and is based on Thumb-2 Technology which supports a mixture of 16-bit and 32-bit instructions",
      "target_audience": [
        "Beginner Embedded Engineers",
        "Beginner Electronics Aspirants",
        "Beginner CS Aspirants"
      ]
    },
    {
      "title": "VLSI-Low Power Design Concepts-part1",
      "url": "https://www.udemy.com/course/low-power-design-concepts-part1/",
      "bio": "Low power design analysis with understanding of power grid in multivoltage design and its low power cells",
      "objectives": [
        "Basics of Low power",
        "Requirement to adopt low power techniques",
        "Practical way of low power techniques",
        "Able to get industry level of identification and implementing low power techniques"
      ],
      "course_content": {
        "Low Power Design Part 1": [
          "Introduction",
          "Power consumption basic elements",
          "CMOS operation and different equtions of current and power",
          "Types of power modes and their description",
          "Power contribution in chip and power delivery network in microprocessor",
          "Power grid network decaps, Low power multi voltage concepts",
          "Low power multi voltage in older chips and LP cells",
          "Test your knowledge!!"
        ]
      },
      "requirements": [
        "Basics of electronics operation and cmos operation"
      ],
      "description": "Power contribution in the chip design is vital one for any chip design engineer who wants to implement low power is the cutting edge goal apart from the silicon scaling then this would be the best course to learn and advanced  topics covered in part2.  At deep submicron short channel all the time facing multiple design challenges along with silicon scaling. As the frequency of the design is achieving and the major implement gap while achieving frequency is area and power. In this course you are empowered to learn most of the low power techniques which practically uses in chip designing.\nIn this part 1 course covered introduction of the power consuming elements and its basic equations, CMOS current equation, different power dissipation in the design, power modes for robustness, power grid network, Power grid EM and IR, decaps in power network, active decap, decap distribution in power distribution network of micro processor, multi voltage, multi voltage power grid off and its low power methodology before power intent format from IEEE and implementation cells of power grid gating.\nPower Performance Area are the three challenging sign off goals for any chip designer right from architecture to till GDSII Physical design engineer. All the design duration low power techniques are implemented.\nPower contribution in entire SOC\n•Power Grid Network\n•Devices\n•RC Network\n•Data/Signal\n•Clock\n•Physical Only Cells\nPresent trending methodologies are covered in part-2 which is even more advanced way.",
      "target_audience": [
        "Fresher and upto senior engineer and any one in Semiconductor Engineer roles"
      ]
    },
    {
      "title": "Allen Bradley Micro 850 PLC, Panelview HMI",
      "url": "https://www.udemy.com/course/micro-850-plc/",
      "bio": "Programming and wiring the micro 850 PLC",
      "objectives": [
        "How to program an Allen Bradley Micro 850 programmable logical controller. This controller is used in small manufacturing processes and will enhance future learning in Human Machine Interface and Variable Frequency Drive development."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Micro 800 PLCs"
        ],
        "Program, wire, and operate a micro 850 PLC": [
          "Purpose, function, and applications of PLCs"
        ],
        "Section 2: wiring the Micro 850 PLC": [
          "Wiring the Micro 850 PLC"
        ],
        "Programming and Wiring an Output on the PLC": [
          "Programming a switch controlling an output to prepare for wiring an output",
          "Wiring Output Part 2"
        ],
        "Section 4: Wiring a PLC Input": [
          "Wiring an Input to a PLC"
        ],
        "Section 5: HMI configuration": [
          "Configuring and operating an HMI from a PLC program"
        ],
        "Section 6: Programming and wiring a stop start station": [
          "Wiring and programming a start stop station controlling a motor."
        ],
        "Section 7: Electric Interlock": [
          "Electrical Interlock"
        ],
        "Section 8: Timers": [
          "Section 8: Time on, Time off, and Pulse Timers"
        ],
        "Section 9: Counters": [
          "Section 9. Up and down counters",
          "Section 10: Compare Instructions"
        ]
      },
      "requirements": [
        "Should have some prior electrical knowledge"
      ],
      "description": "This course encapsulates wiring and programming of the Micro 850 PLC with an emphasis on digital inputs and outputs, timers, counters, comparison, and math instructions. The Micro 850 is a recent product and is primarily used in small manufacturing processes and control. It is compatible with most Allen Bradley Human Machine Interfaces and Variable Frequency Drives. The first section is a general introduction to PLCs and where they are used and their purposes. The second section focuses on the nomenclature and physical properties of a PLC. The third section shows us how to wire inputs and outputs of a PLC, and speak a little towards sinking and sourcing inputs and outputs. In the next section, we program a short switch controlling an output. We program a start stop station and actually give an example of setting it up on the human machine interface device for monitoring and control. We introduce the electrical interlock program for forward and reverse motor control. We'll then program timers, counters, comparison instructions, and math instructions. The lessons are primarily provided by videos that contain lectures and physical demonstrations. It is advisable that the students have a little background in electrical circuitry. A little background in PLCs would be helpful but not absolutely necessary. Terms will be introduced like inputs, outputs, downloading and uploading, IP addresses, protocol, binary numbering systems, and addressing at the instruction level.",
      "target_audience": [
        "People currently working in manufacturing or the electrical industry or aspire to those positions"
      ]
    },
    {
      "title": "Mastering Bionic Arm Technology with Arduino",
      "url": "https://www.udemy.com/course/bionic-arm-using-arduino/",
      "bio": "From Human Gesture to Robotic Precision: Crafting the Ultimate Bionic Experience with Arduino",
      "objectives": [
        "Understanding the basics of Arduino, including its hardware and programming environment.",
        "Learning about essential electronic components, circuit design, and breadboarding.",
        "How to control various types of motors (servo, DC, stepper) with Arduino.",
        "Using sensors (such as flex sensors) to detect muscle movements and gestures.",
        "Understanding the basic principles of human arm movement and anatomy."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Developing a Bionic Arm with Arduino",
          "Circuit making",
          "Circuit making 2",
          "Basics of Circuit Making",
          "Coding",
          "Stimulation",
          "Building and Simulating an Arduino Circuit",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Mastering Bionic Arm Technology: Fundamentals Practice Test",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Demonstrating a Bionic Arm Powered by Arduino",
          "Summary",
          "Reading Material"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic Electronics Knowledge",
        "Programming Skills",
        "Mechanical Skills"
      ],
      "description": "Bionic Arm Mastery with Arduino\nDiscover the Future of Robotics Today\nEver dreamt of controlling a robotic arm using just the movements of your hand? Now, the future is in your hands—literally! Dive deep into the world of robotics and Arduino with our comprehensive video course on creating a Bionic Arm.\nCourse Highlights:\nFlex Sensors: Learn the fundamentals of flex sensors, their applications, and how they can detect even the slightest hand movements.\nCircuit Design: Get hands-on with designing circuits that can effectively translate human motion into mechanical action.\nCoding: Demystify the code that makes it all happen. With step-by-step tutorials, you'll be writing your own scripts in no time.\nSimulation: Before the real test, simulate your designs to ensure flawless execution.\nTesting: Put your bionic arm to the test. See how accurately it mirrors your movements.\nWhy Choose This Course?\nInnovative Learning: A perfect blend of theory and practical lessons ensures you grasp both the concept and its real-world application.\nExpert Instructors: Our team of robotics and Arduino experts are always available to guide you through every step.\nInteractive Community: Join a community of like-minded enthusiasts. Collaborate, discuss, and share your creations.\nTestimonials:\n\"A game-changer in my robotics journey! This course made the complex world of bionic arms seem so approachable. The lessons are clear, concise, and incredibly engaging.\"\n— Jane D., Robotics Enthusiast\n\"From understanding flex sensors to actually building a working bionic arm, this course took me from zero to hero. Highly recommended for anyone passionate about robotics.\"\n— Liam K., Student\n\"The community support, expert advice, and hands-on projects made this one of the best courses I've ever taken. My bionic arm now mimics my hand movements perfectly!\"\n— Sasha M., DIY Maker\nEnroll Now and Step into the Future\nDon't just learn about the future, be a part of creating it. With our Bionic Arm Mastery with Arduino course, you'll be at the forefront of technological innovation. Enroll today and embark on a journey like no other.\nLimited Seats Available! Secure your spot now and bring your robotic dreams to life.\n[ Get Started Today → ]\nWhat You Will Learn\nBasics of flex sensors and their applications\nDesigning circuits for translating human motion to mechanical action\nCoding for Arduino to control bionic arm movements\nSimulating and testing your bionic arm designs\nWho Is This Course For\nRobotics enthusiasts\nStudents and DIY makers\nTech hobbyists interested in bionic technology\nAnyone passionate about Arduino and robotics\nRequirements\nBasic understanding of electronics and programming\nInterest in robotics and bionic technology\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Engineering and Robotics Students",
        "Makers and Hobbyists",
        "High School Students",
        "Professionals and Engineers",
        "Accessibility Advocates",
        "Entrepreneurs and Innovators"
      ]
    },
    {
      "title": "ESP32 para Desenvolvedores Arduino - Português Brasileiro",
      "url": "https://www.udemy.com/course/esp32-para-desenvolvedores-arduino/",
      "bio": "Utilize este microcontrolador poderoso para acelerar seus projetos do Arduino",
      "objectives": [
        "Aprenda sobre o ESP32 e o que faz dele uma escolha excelente para desenvolvedores Arduino.",
        "Aprenda sobre as diferenças e as semelhanças entre o ESP32 e o Arduino.",
        "Aprenda sobre as variações do módulo ESP32.",
        "Aprenda sobre as características do kit de desenvolvimento ESP32",
        "Aprenda a usar o ESP32 no lugar do Arduino para controlar LEDs, botões, potenciômetros, displays, motores e ler sensores digitais e analógicos (incluindo intern",
        "Aprenda a usar as funções avançadas do ESP32, como memória flash, conversores digital-analógico e analógico-digital.",
        "No fim, se tornar confiante em usar o ESP32 nos seus projetos.",
        "Aprenda como utilizar o ESP32 para habilitar seu projeto a se comunicar com a Internet.",
        "Aprenda como utilizar o ESP32 para habilitar seu projeto a se comunicar com dispositivos Bluetooth (clássico e BLE)."
      ],
      "course_content": {
        "Introdução": [
          "01.10 Sobre o que é esse curso?",
          "01.20 Software que você irá precisar",
          "01.30 Hardware que você irá precisar",
          "01.40 Como aproveitar este curso ao máximo"
        ],
        "Conheça o seu ESP32": [
          "02.10 O módulo ESP32",
          "02.20 O kit de desenvolvimento ESP32",
          "02.30 ESP32 vs Arduino",
          "02.40 GPIOs",
          "02.50 Comunicações",
          "02.60 Alimentação"
        ],
        "Ambientes de Desenvolvimento": [
          "03.10 Configurando o ESP32 na IDE do Arduino no Mac OS (para usar neste curso)",
          "03.20 Configurando o ESP32 na IDE do Arduino no Windows 10 (para este curso)",
          "03.30 Instalando o driver do chip USB CP2102"
        ],
        "GPIOs": [
          "04.10 LED output digital",
          "04.20 PWM e LED",
          "04.30 LED RGB e PWM",
          "04.40 Input digital com botão",
          "04.50 Input analógico com um potenciômetro",
          "04.52 Input analógico com potenciômetro e output PWM",
          "04.62a Uma visão global do Conversor digital para analógico no ESP32.",
          "04.62b Código demo DAC",
          "04.62c DAC analog waveform demo",
          "04.62d Fazendo barulho com o DAC",
          "04.70a Interrupção na GPIO, uma introdução",
          "04.70b Interrupções na GPIO. código e demonstração."
        ],
        "Sensores": [
          "05.10 Efeito Hall integrado (utilize um ímã)",
          "05.20 Sensor de toque (capacitivo) com LED",
          "05.30 Sensor de toque (capacitivo) com interrupções e LED",
          "05.40 Fotorresistor",
          "05.50 Sensor de ambiente BME280 utilizando I2C",
          "05.60 DHT22",
          "05.70 Acelerômetro ADXL335"
        ],
        "Displays": [
          "06.10 Tela LCD com I2C",
          "06.20 Display de sete segmentos",
          "06.22 Display de sete segmentos com biblioteca",
          "06.30 Display relógio de sete segmentos com I2C",
          "06.40 Display matriz de LEDs 8x8 (singular)",
          "06.42 Display matriz de LEDs 8x8 (múltiplos)"
        ],
        "Motores": [
          "07.10 motores DC com o controlador de motor DRV8871",
          "07.20 Servo motor"
        ],
        "Armazenamento": [
          "08.20 EEPROM",
          "08.30 SPIFFS",
          "08.40 Como apagar a memória flash"
        ],
        "Data e Hora": [
          "09.10 Data e Hora com o DS3231",
          "09.20 Um relógio com um LCD e o DS3231"
        ],
        "Wifi": [
          "10.10 Conexão wifi",
          "10.20 Cliente HTTP wifi",
          "10.30 Cliente HTTPS wifi",
          "10.40 Cliente HTTPS wifi e controle de LED"
        ]
      },
      "requirements": [
        "Esteja familiarizado com o Arduino Uno.",
        "Esteja familiarizado com a escrita e a edição de códigos para o Arduino Uno",
        "Tenha completado o curso \"Arduino Step by Step Getting Started\" (ou possua um conhecimento equivalente)",
        "Esteja familiarizado com I2C, comunicações seriais.",
        "Esteja familiarizado com a protoboard e a fiação."
      ],
      "description": "O ESP32 é um microcontrolador poderoso.\nEle integra Wifi e Bluetooth, muitas GPIOs, funcionalidades de output e input analógicos, muitos protocolos de  interconexão de dispositivos, um processador dual-core rápido.\nTudo isso por um preço baixo.\nE o melhor de tudo: você pode utilizar o seu conhecimento e habilidades no Arduino para  acelerar os seus projetos.\nEspecialmente se você já aprendeu como utilizar o Arduino Uno nos seus projetos, é provável que você tenha alcançado uma limitação de hardware.\nTalvez seus projetos precisassem de mais memória, mais velocidade, ou mais pinos.\nCom o ESP32, você pode conseguir muito mais capacidade para construir projetos mais interessantes, quase gratuitamente.\nContudo, o ESP32 não é um substituto para o Arduino.\nEnquanto ele compartilha muito da interface de programação e GPIOs, você ainda precisa aprender o básico antes de você poder implementá-lo.\nEste é o propósito deste curso.\nNeste curso você aprenderá:\nO que é o ESP32.\nQuais são as múltiplas variações de módulos com este nome, e como estes módulos estão disponíveis para nós no formato de kits de desenvolvimento.\nQuais são as diferenças e as semelhanças entre o ESP32 e o Arduino.\nComo podemos utilizar o que sabemos do Arduino para fazer coisas baseadas no ESP32.\nComo podemos utilizar as GPIOs para trabalhar com componentes simples como LEDs e botões, mas também controlar periféricos como displays, sensores (incluindo os integrados) e motores.\nComo configurar a IDE do Arduino para que nós possamos escrever programas para o ESP32.\nComo armazenar dados em uma memória não volátil.\nComo se comunicar com dispositivos em um campo próximo e com a Internet.\nNeste curso, Eu também incluí múltiplos mini projetos para demonstrar como utilizar funcionalidades como leitura e escrita de GPIOs, Bluetooth clássico, Bluetooth de Baixa Energia, Wifi, conversão digital para analógico, sensores de toque, e mais.\nProjetos maiores também mostrarão a você como criar aplicações simples de Internet das Coisas (IoT) e Bluetooth, por exemplo.\nSe você estiver preparado para aprender mais, por favor, tenha certeza de assistir as aulas na seção introdutória para descobrir mais.",
      "target_audience": [
        "Pessoas que já estão fazendo coisas com o Arduino e estão buscando por um microcontrolador mais poderoso.",
        "Pessoas que querem utilizar o ESP32 mas não estão certos em como começar."
      ]
    },
    {
      "title": "Program Arduino Like A Professional with Registers",
      "url": "https://www.udemy.com/course/arduino-code-registers-level-up-arduino-coding/",
      "bio": "This course will take you in a step by step guide on how to Program Arduino Like A Professional with Registers",
      "objectives": [
        "Difference between Normal Arduino Programming and Register Level Programming",
        "Level up Your Arduino Programming Skills with Register Level Programming",
        "Arduino CPU in datasheet",
        "What are Registers",
        "Bit-wise operations for register level programming",
        "Write this  value to a certain special function  register",
        "Different types of  memory",
        "I/O ports overview section and dip package",
        "I/O ports register  description",
        "Arduino Coding example",
        "Rewrite the code using Registers",
        "Arduino source code",
        "Hex File Size difference",
        "When you should use Registers"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Learning Low-Level Arduino Programming with Registers",
          "Who We Are?",
          "Summary",
          "Reading Meterial"
        ],
        "Important Note: Review System": [
          "Section Intro",
          "Important Note: Review System",
          "Summary",
          "Reading Meterial"
        ],
        "General Overview": [
          "Section Intro",
          "AVR Architecture in Datasheet",
          "Summary",
          "Reading Summry"
        ],
        "Registers": [
          "Section Intro",
          "Introduction to Registers",
          "Why using Register Level Programming",
          "Summary",
          "Reading Meterial"
        ],
        "Memory": [
          "Section Intro",
          "Types of Memory",
          "Summary",
          "Reading Meterial"
        ],
        "Input Output Ports Overview": [
          "Section Intro",
          "Input Output Ports Overview",
          "Summary",
          "Reading Meterial"
        ],
        "Register Summary": [
          "Section Intro",
          "Register Summary",
          "Summary",
          "Reading Meterial"
        ],
        "Circuit Design": [
          "Section Intro",
          "Download and Install Fritzing Software",
          "Circuit Design",
          "Circuit Schematic",
          "Summary",
          "Reading Meterial"
        ],
        "Coding": [
          "Section Intro",
          "Download and Install Arduino IDE",
          "Coding",
          "Simple Code",
          "Summary",
          "Reading Meterial"
        ],
        "Rewrite our Code using Registers": [
          "Section Intro",
          "Setup Function",
          "DigitalWrite using Registers",
          "Summary",
          "Reading Meterial"
        ]
      },
      "requirements": [
        "An Internet Connection",
        "Basic knowledge in Programming"
      ],
      "description": "Program Arduino Like A Professional with Registers\nProgramming Arduino is not just for professionals anymore! This course will take you on a step-by-step guide on how to program Arduino like a professional with registers. Within this course, you will be introduced to the different registers within the Atmega 328P chip that is used in most hobby projects these days.\nWhy You Should Take This Course:\nLearn how to program Arduino like a professional.\nGain a practical understanding of the registers used to program in Arduino.\nStart with the fundamentals of programming and then dive into the registers.\nLearn the basics of programming including variables, loops, if statements, and functions.\nBuild your own circuits to use with the examples in the course.\nThis course will teach you how to develop your Arduino coding using registers. It will help you level up your Arduino code with registers.\nWelcome to This Course\nIn this course, you will learn about registers, how to interact with them in Arduino, and how to control hardware using them. To use more advanced features or optimize our code for space and speed, we need to understand how to work with registers directly in microcontrollers.\nIf you're looking to learn more about how your Arduino works, create more advanced projects using things like interrupts, or optimize your code for speed and size, then you'll need to work with registers.\nRegisters are nothing more than storage containers for data inside a processor or microcontroller. Many microcontrollers have special function registers that have hardware connections and are usually used for setting up timers, toggling pin voltage, reading analog voltages, and so on.\nSpecial function registers control microcontrollers in the background. Knowing how to use them allows you to control hardware connected to the microcontroller. Arduino IDE and framework provide easy implementation so you don't need to worry about working with registers, which is both a good and bad thing!\nOn one hand, you don't have to dig through a datasheet and learn all the register names for that microcontroller. The abstraction is perfect if you want to make a project or prototype.\nOn the other hand, if you are making a product and need your code to be as small and fast as possible, ditching the Arduino framework is often the way to go. Reducing the size of your program so that it fits on a cheaper microcontroller can save a few cents for each unit produced. Additionally, making your program run more efficiently may mean less power used and extended battery time!\nIf you're making a product and need your code to be as small and fast as possible, learning to deal directly with registers can be very helpful and will help you get rid of the extra code overhead that Arduino introduces.\nHowever, if you're making a project or a prototype and just need something to work, the extra development effort to learn new registers and register names for your architecture can be quite a pain. In that case, the abstraction layer that Arduino introduces is a wonderful blessing. Being able to call digital write instead of figuring out which bits to flip in which register is fantastic.\nThat being said, if we want to do more advanced things like setting up interrupts, then learning how to deal directly with registers is the way to go.\nA lot of information is waiting for you inside this course, join now and start making your own.\nUser Testimonials and Social Proof: \"This course took my Arduino projects to the next level. Understanding registers is a game-changer!\" - Alex T.\n\"Great course for anyone wanting to dive deeper into Arduino programming. Clear and concise.\" - Emily R.\nAn Author Bio: Ashraf, the founder of Educational Engineering Team, is a seasoned educator, Mechatronics engineer, electronics and programming hobbyist, and maker. With over 13 years of experience in teaching and practical projects, Ashraf's courses have helped over 250,000 people improve their skills and build successful careers.\nA Single Powerful CTA: Enroll now to master Arduino programming with registers and take your projects to the next level!\nFAQ Section: Q: Do I need any prior experience to take this course? A: No prior experience is necessary. This course is suitable for beginners and experienced individuals alike.\nQ: How quickly can I start using registers in my Arduino projects? A: You can start using registers immediately after completing the relevant sections of the course.\nQ: Is there a money-back guarantee? A: Yes, Udemy offers a 30-day money-back guarantee if you're not satisfied with the course.\nWhat You Will Learn\nHow to program Arduino like a professional\nPractical understanding of the registers used in Arduino programming\nBasics of programming including variables, loops, if statements, and functions\nInteracting with registers and controlling hardware using them\nAdvanced features like setting up interrupts and optimizing code for speed and size\nWho is This Course For\nArduino enthusiasts looking to enhance their programming skills\nDevelopers wanting to optimize their Arduino projects\nBeginners seeking a deeper understanding of how Arduino works\nAnyone interested in learning about registers and microcontroller programming\nRequirements\nBasic computer skills\nInternet access\nNo prior experience with Arduino needed\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Learning in Leveling Up their Arduino Programming Skills",
        "Anyone Interested in Learning What the difference does it Make to Use Register Level Programming",
        "Anyone Interested in Learning Programming Arduino Like A Professional with Registers",
        "Anyone Interested in Learning New Things about Arduino",
        "Hardware developers",
        "Electronics Geeks",
        "Anyone Interested in Learning"
      ]
    },
    {
      "title": "Raspberry Pi Essentials and Extras",
      "url": "https://www.udemy.com/course/raspberry-pi-essentials-and-extras/",
      "bio": "Dig a little deeper into the capabilities of this powerful little credit-card sized computer - UPDATED 2020!",
      "objectives": [
        "Install a virtual desktop on the Raspberry Pi",
        "Install and use the Raspberry Pi camera board",
        "Interface with UART devices using the Raspberry Pi's GPIO pins",
        "Interface with I2C devices using the Raspberry Pi's GPIO pins",
        "Install and run Windows 10 on the Raspberry Pi",
        "Use the Raspberry Pi as a webserver",
        "Use the Raspberry Pi as an NFS (Network File Server)",
        "Learn how to use the Pi's watchdog timer"
      ],
      "course_content": {
        "The Lectures": [
          "Introduction",
          "Tour of the Raspberry Pi",
          "The Virtual Desktop",
          "The Raspberry Pi camera board",
          "UART - Part 1",
          "UART - Part 2",
          "I2C - Part 1",
          "I2C - Part 2",
          "The Watchdog Timer",
          "Windows on the Pi",
          "The PI as a webserver",
          "The Pi as a network file server",
          "Conclusion"
        ]
      },
      "requirements": [
        "A familiarity with Linux and the Pi is helpful, but not necessary."
      ],
      "description": "It may have initially been designed as a teaching tool, but since its introduction, the Raspberry Pi has become an integral part of the hobbyist/maker culture around the world. Projects range from soil moisture detectors to dashboard cameras to Commodore 64 emulators. A Pi has even been sent up to the International Space Station!\nLearn what makes your Raspberry Pi tick!\n\nBut one thing that seems to be missing in the sea of projects and books available is an easy-to-understand introduction to some of the communication protocols that the Pi sometimes uses, and how those protocols work. In addition, there are some basic projects that often get missed when someone picks up a Pi and starts tinkering. I designed this course explicitly to fill some of those gaps in general Pi-knowledge.\nContents of the course:\n\nIn this course, you'll learn:\nHow to install the optional Pi camera board\nWhat the UART protocol is\nHow to interface with a GPS module using I2C\nHow to turn your Pi into a fully-functioning web server\nUsing the Pi as an NFS server\nPutting Windows 10 on your Raspberry Pi\nand much more!\n\n\nIf you've been interested in picking up a Raspberry Pi but are unsure where to start, or if you've already got one and would like to 'peek under the hood' and learn about some of the useful protocols it can use, then this course is for you! There are code samples included, as well as all lecture notes. I designed the course for beginners to the Pi, but intermediate Pi aficionados will likely learn something as well from the video lectures and code samples.\nWhen you're done with this course, you'll have a better understanding of just what makes that little Raspberry Pi do what it does so well!",
      "target_audience": [
        "This course is meant for beginning to intermediate Raspberry Pi users who would like to dig a little deeper into the Pi's capabilities.",
        "This course is probably not for advanced users."
      ]
    },
    {
      "title": "Fundamentals of Computer Hardware",
      "url": "https://www.udemy.com/course/computer-hardware-basics-peripherals-components/",
      "bio": "Learn The Fundamentals of Computer Hardware: Exploring Peripherals, and Components",
      "objectives": [
        "Identify and describe the functions of key computer hardware components.",
        "Explain how the components of a computer system work together to create a functional computer.",
        "Recognize and differentiate between different types of hardware components.",
        "Understand computer peripherals and components and how they can be used to enhance the function",
        "Identify and describe the functions of different computer peripherals and components.",
        "Understand the different interfaces and ports used to connect peripherals and components to a computer system.",
        "Install, configure, and troubleshoot common peripherals and components on a computer system."
      ],
      "course_content": {},
      "requirements": [
        "There are no prerequisites for this course. However, basic computer literacy and familiarity with operating systems and software applications is helpful."
      ],
      "description": "Embark on a comprehensive exploration of computer components and hardware fundamentals in this course. Delve into the intricacies of each component, uncovering their roles, significance, and collective impact on your computer's overall performance.\nTailored for beginners, this course serves as a gateway to the foundational aspects of computer hardware. Students will gain insights into pivotal components such as the central processing unit (CPU), memory (RAM), storage devices, input/output devices, and the motherboard.\nThe curriculum extends to elucidate the diverse types and functionalities of each component, elucidating how they collaborate to forge a cohesive and operational computer system. Participants will adeptly identify and differentiate between various hardware components, comprehending their individual contributions to the overall system.\nMoreover, the course delves into the realm of computer maintenance and troubleshooting, equipping students with the skills to diagnose and resolve common hardware issues. Safety precautions for working with computer hardware are also emphasized.\nUpon successfully completing this course, students will possess a robust understanding of computer hardware components and their functionalities. Armed with the expertise to maintain and troubleshoot prevalent hardware issues, participants will emerge with a solid foundation. The course concludes by ensuring students grasp basic terminology and acquire a deeper comprehension of the internal workings of computers, paving the way for progression in their career paths.",
      "target_audience": [
        "This course would be beneficial for anyone who wants to gain a better understanding of computer hardware peripherals and components. It is particularly useful for individuals who want to enhance their computer knowledge and skills, such as computer technicians, IT professionals, computer enthusiasts, and students studying computer science or information technology"
      ]
    },
    {
      "title": "Arduino Uno 101",
      "url": "https://www.udemy.com/course/arduino-101/",
      "bio": "Learn to program Arduino by interfacing various sensors (Analog & Digital both) and actuators to build awesome projects",
      "objectives": [
        "Program Arduino board confidently",
        "Develop electronic prototypes themselves",
        "Interface various sensors and passive electronic components with Microcontrollers"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge is expected. Some familiarity with programming concepts is helpful but not necessary.",
        "An Arduino Uno board, a Multimeter and basic electronic components are required to make the projects"
      ],
      "description": "The word Micro-controller carries an infamy as it is perceived to be hard to learn from a laymen's perspective. Even computer science engineers are easily distracted by the placid architecture and terse jargon of micro-controllers.\nThat's exactly why Arduino platform took the world of engineers, enthusiasts, hobbyists, artists, and students by storm. It's easy to program, cheaply available and is supported by one of the largest community on internet.\nIn this course, I'll be teaching you how to interface various sensors, read various inputs (Analog and digital both), generate outputs (Analog and Digital both), trigger the actuators and troubleshoot your micro-controller. The board of choice for this course is Arduino Uno but the concepts are same for any Arduino board.",
      "target_audience": [
        "Internet of things enthusiasts",
        "Anyone interested in learning how to develop electronic prototypes",
        "Budding entrepreneurs",
        "School students preparing for international competitions and interested in learning how to make things",
        "Young engineering students",
        "Professional plant engineers"
      ]
    },
    {
      "title": "Embedded Rust Debugging",
      "url": "https://www.udemy.com/course/embedded-rust-debugging/",
      "bio": "The Rust debugger you didn't know you need",
      "objectives": [
        "Install the embedded Rust toolchain",
        "Run your first embedded Rust application",
        "Embedded Rust debugger Installation and Visual Studio Code Integration",
        "Embedded Rust application debugging"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience is necessary. However, the fact that you are here shows me you may already know some Rust.",
        "During the courses initial chapters we install and configure all the tools we'll need"
      ],
      "description": "Welcome everyone to this brief tutorial where you will be presented to a very useful tool: an embedded Rust debugger.\n\n\nIf you are a software engineer you know how useful a software debugger can be at times to debug your applications. If you are an EMBEDDED software engineer you know how useful a debugger can be not only to debug your software but also hardware since a debugger provides visibility of hardware configuration such as the microcontroller internal memory, peripherals and overall registers.\nTypically most chip manufacturers have their own Integrated Development Environments (IDEs) which include their own integrated debugger. However, these IDEs only allow for embedded software to be developed in C and C++ programming languages. Rust is currently not supported.\nRust is a new system programming language which is becoming increasingly adopted in the development of embedded applications, but because it is not supported by the mainstream IDEs, most Rust development tools are open source... and this includes embedded debuggers!\nAt the moment, most Rust debugging options consist of command line based tools like OpenOCD and or GDB. OpenOcd and GDB are a fantastic tools which all embedded software engineer should at some point learn and be proficient with. However, as any tool, there are associated learning curves and the associated time necessary learning time... and, as we all know, time is not always available!\nAs such, I’d like to present you a fantastic project which is currently under development which makes the embedded Rust debugging experience similar to the one provided by most mainstream graphical interfaces tools one is used to when using most mainstream IDEs. This new embedded Rust debugger is called \"Probe-rs debugger\" and is meant to be used with Visual Studio Code editor. Probe-rs debugger fills a void in the embedded Rust development world and makes the embedded Rust debugging experience much faster, more pleasant and easier specially for beginners.\nThe objective of this brief course is to demonstrate how to setup and use the probe-rs debugger by providing practical examples using two platforms: a microchip and a stm32 CortexM4 based microcontrollers.\nStarting from a clean state, we will install all the necessary tools and learn how to configure them.\nBy the end of this brief tutorial, you will be able to debug more than one application simultaneously.",
      "target_audience": [
        "Beginner embedded Rust developers"
      ]
    },
    {
      "title": "Learn Arduino & 'C' Programming through Projects",
      "url": "https://www.udemy.com/course/arduino-c-programming-codecircuitry/",
      "bio": "A step by step course to learn the fundamentals of embedded systems through Arduino and C programming.",
      "objectives": [
        "Embedded system fundamentals.",
        "Arduino programming.",
        "'C' programming.",
        "Arduino IDE & Tinkercad platform.",
        "Register level programming.",
        "Build multiple projects in Arduino Uno.",
        "PWM, SPI, UART & I2C programming.",
        "Inbuilt EEPROM and FLASH memory access."
      ],
      "course_content": {
        "Module 0: Introduction": [
          "Overview",
          "FAQs"
        ],
        "Module 1: 'C' Programming": [
          "Hello World",
          "Variables & Data Types",
          "Branch & Loop Statements",
          "Operators",
          "Exercises-1",
          "Arrays & Strings",
          "Typedef, Typecast & Modifiers",
          "Enum, Structure, Union & Bitfields",
          "Function & Scope",
          "Pointers",
          "Miscellaneous - Preprocessor directives, Command Line Arguments, File I/O",
          "Exercises-2",
          "Quick Review",
          "M1T2A1-Module Assignment",
          "Module Test"
        ],
        "Module 2: Arduino Programming": [
          "Arduino IDE",
          "Tinkercad",
          "GPIO Pins",
          "Push Button & Keypad",
          "8x8 LED Matrix Display",
          "16x2 LCD Display",
          "Analog Read & Write",
          "UART Communication",
          "I2C Communication",
          "Timers",
          "External Interrupts",
          "Miscellaneous - Buzzer, SPI Communication & Utility Functions",
          "Quick Review",
          "M2T2A1-Module Assignment",
          "Module Test"
        ],
        "Module 3: Advanced Topics": [
          "What's inside - 1: Processor Internals, Clock, GPIO Register Level Programming",
          "What's inside - 2: Register Level Programming (ADC, UART, TIMER, EEPROM & FLASH)",
          "Bare Metal Programming",
          "Quick Review",
          "M3T2A1-Module Assignment",
          "Module Test"
        ],
        "Module 4: Project": [
          "Project 1: Obstacle Detection",
          "Project 2: LCD Text Scroll",
          "Project 3: Servo Motor Control",
          "Project 4: Digital Door Lock"
        ],
        "Module 5: Test": [
          "Final Test"
        ],
        "Module 6: Conclusion": [
          "Summary"
        ]
      },
      "requirements": [
        "Basic knowledge in electronics, Basic computer proficiency, Self motivated.",
        "Tinkercad platform is used for doing the hardware simulations.  A free account is required in tinkercad.",
        "No programming experience needed.",
        "Physical hardware is not mandatory to complete the course. If you are using Arduino IDE for the entire course, then that requires physical hardware.   We base our exercises on Arduino Uno Board and various other peripherals.   Buy them as needed. But this is optional, since all the projects can be done in Tinkercad itself.",
        "A desktop/laptop with good internet connectivity is recommended. This is because the practicals can be done only on a desktop/laptop.  A 64 bit computer of atleast 4GB RAM and 10GB of HDD free space with Windows/Ubuntu/Mac OS is recommended.",
        "Install the latest version of Arduino IDE."
      ],
      "description": "Every day the world is becoming more and more digital, connected and automated. But what makes this transformation possible? In many cases, it is a technology that is often overlooked; the embedded systems. From the CCTV security systems to the ATMs we use regularly to access cash, embedded systems can be found everywhere in our society. Embedded systems play a part in nearly every aspect of modern life. They impact the way we spend our leisure time, the way we commute, and the way we do business. In today’s evolving world, technology is not only becoming more and more advanced, but also more and more common in our everyday lives.This is the era of internet of things or connected devices aka IoT.\nSo how is this possible?\nEmbedded systems use microprocessors or micro-controllers to do the computations. That's how its done. Today virtually all commercially produced electronic devices use processors or micro-controllers.\nSo,\nHow do you design an embedded system?.\nWhat are the tools used?\nHow do you program a micro-controller?\nHow do you communicate with a micro-controller?\nHow does the micro-controller interpret real world signals ?\nWhere do you place Arduino programming in the realm of embedded design?\nThis course covers all these topics. This course is a blend of both theory and practicals. This is a step-by-step course on Arduino & C programming with information suitable for beginners and gradually progressing to intermediate level.\nIn the realm of Embedded Systems Programming, the vast array of micro-controllers available, its features and the various tool sets required can be overwhelming for a beginner. It might be difficult for a beginner to assemble a board from scratch even for switching on or blinking a LED. This is where Arduino programming is useful. Arduino programming is a bit easier if you want to start really simple. It is an easy tool for fast prototyping, aimed at students without a background in electronics and programming.\nThis course is designed to teach you the basics of Arduino programming using 'C' language. You will not only learn the syntax and structure of the 'C' language but also understand how to use it to create interactive projects with Arduino.\nThe quintessential elements related to what's necessary in an embedded environment as well as the common components of developing a project in 'C' will be discussed.\nYou will learn to use different components of Arduino for different functionalities, write code for them and create circuits using them.\nThe course is designed at a beginners level. However the course upscale your theoretical and practical understanding on Arduino hardware, register level programming & bare metal programming. As you progress through the course you will learn to use software tools like Arduino IDE & Tinkercad.\nBy the end of this course, you will have a solid foundation in Arduino programming and be able to create your own projects.",
      "target_audience": [
        "Anyone who fulfills the pre-requisites can join the program.",
        "Freshers/Beginners of engineering/diploma in EE/ECE/CSE.",
        "Students looking for certification or credits.",
        "Hobbyists.",
        "Seasoned or experienced or professional embedded system programmers wouldn't find the course useful."
      ]
    },
    {
      "title": "ESP32 Lesson Season 01",
      "url": "https://www.udemy.com/course/esp32-lesson-season-01/",
      "bio": "ESP32 SDK Periperals Driver Development",
      "objectives": [
        "ESP32 basic hardware knowledge",
        "ESP32 SDK Compile Environment Setup",
        "ESP32 Periperals Driver development: Uart, GPIO, Interrupt, Timer, DAC, ADC, I2C, SPI, SDCard, I2S etc."
      ],
      "course_content": {
        "ESP32 Lesson Season 01": [
          "Feature Review",
          "Minimum System",
          "Setup compile environment",
          "Hello World",
          "GPIO LED",
          "GPIO Interrupt",
          "Timer",
          "UART",
          "DAC",
          "ADC",
          "I2C",
          "I2C Further Discussion",
          "I2C LSM6DS3 Sensor Full Function Coding",
          "Integrate I2C OLED Original Driver",
          "Drive I2C OLED By u8g2 GUI Library",
          "SPI",
          "SDCard",
          "NVS",
          "I2S 01 --- I2S Protocol and ESP32 I2S interface",
          "I2S 02 --- Drive Speaker by Internal DAC"
        ]
      },
      "requirements": [
        "Basic C knowledge"
      ],
      "description": "This season will cover three aspects of ESP32 wifi chip software development:\n(1) ESP32 basic hardware knowledge;\n(2) ESP32 SDK Compile Environment Setup；\n(3) ESP32 Periperals Driver software development: Uart, GPIO, Interrupt, Timer, DAC, ADC, I2C, SPI, SDCard, I2S etc.\n\n\nThis season is the first part of the ESP32 development lesson series. It mainly takes the ESP32 as a regular Microcontroller to demo how to control other sensors or MCU.",
      "target_audience": [
        "ESP32 developers",
        "Wifi developers"
      ]
    },
    {
      "title": "Build Internet of Things (IoT) with ESP8266 and Micropython",
      "url": "https://www.udemy.com/course/project-internet-of-things-with-esp8266-and-micropython/",
      "bio": "Build projects with ESP8266, NODEMCU, wifi module, Micropython, Home Automation, Sensors, IoT Cloud (ThingSpeak) & IFTTT",
      "objectives": [
        "ESP8266 (NODEMCU)",
        "Micropython",
        "Internet of Things",
        "Integrate ESP8266, Sensor, Device Software (Written in Micropython), IoT Cloud, ThingSpeak, IFTTT and mobile phone",
        "Calls you phone when an intruder is detected using a motion sensor installed at a remote place (Home / office or anywhere)"
      ],
      "course_content": {
        "Expectations !!": [
          "Must Watch - What to Expect from this Course ?"
        ],
        "Setting Up ESP8266 for Micropython": [
          "Introduction to ESP8266 (NODEMCU)",
          "Setting up NODEMCU and Micropython for Internet of Things"
        ],
        "What's Up PIR Sensor !! - Motion Detection": [
          "How PIR Sensor Works ?",
          "Setting up PIR sensor as per Use Case",
          "Demonstration - PIR sensor is able to detect motion"
        ],
        "Hello Micropython !!": [
          "Interfacing LED with NODEMCU (ESP8266)",
          "Micropython Code to Control a LED, Use GPIOs as OUTPUT",
          "Modifying Micropython Code",
          "Pullup Resistor",
          "Switch interfacing with NODEMCU",
          "Micropython Code to read a Switch"
        ],
        "Welcome to the world of IoT (Internet of Things) . . . .": [
          "What is IoT?",
          "IoT Technology Stack",
          "Application Domains of IoT",
          "IoT Market Trend and Business",
          "Industrial IoT - IIoT"
        ],
        "The ThingSpeak Cloud Platform - IoT Cloud by Mathworks": [
          "An overview of ThingSpeak",
          "ThingSpeak Apps / Services offered",
          "Create a ThingSpeak Account",
          "Create a ThingSpeak Channnel",
          "Navigate through ThingSpeak Channel Dashboard",
          "Upload Data to ThingSpeak Channel",
          "Read Data from ThingSpeak Channel"
        ],
        "My Device can now talk to Cloud - Uploading data to Cloud": [
          "Micropython Code to Connect NODEMCU to Access Point (Hotspot)",
          "NodeMCU and PIR Interfacing",
          "Setting up ThingSpeak for the Project",
          "Installing Module to NodeMCU with Micropython",
          "Micropython Code to Upload PIR Sensor Status to IoT Cloud",
          "Demonstrating Data Upload"
        ],
        "The Voice call from IFTTT": [
          "IFTTT - Applet Creation",
          "The Voice Call"
        ],
        "Integration: PIR - ESP8266 - ThingSpeak - IFTTT - Phone": [
          "Insights - Establishing Communication between ThingSpeak and IFTTT",
          "ThingSpeak - Create ThingHTTP Instance",
          "ThingSpeak - Create React Instance",
          "Hurrah!!!, Project Demonstration"
        ]
      },
      "requirements": [
        "Be able to understand logical operations like AND, OR, XOR etc"
      ],
      "description": "In this course, we will develop a Security System with the Internet of Things Technology. Complete hands-on, Learning by doing experience.\nKey Take-Aways from Course\nESP8266 wifi Module\nNODEMCU\nPython Fundamentals\nMicropython\nThingSpeak by Mathworks\nIFTTT\nPIR Sensor (Motion Sensor)\nHome Automation by implementing Security System\nAt the end of the course, you will be able to interface sensors with IoT devices and IoT Cloud.\nYou will be to use Channel, React, ThingHTTP services from ThingSpeak cloud.\nI will be teaching this course using ThingSpeak Cloud Platform from Mathworks and IFTTT\nWe will learn to program IoT Devices using Micropython (not Arduino) Programming Language.\nTogether we will go deep inside of IoT product design by developing an IoT Application end to end.\nImplement this story in this course\nA guy name Alex left for the office, and his home was all alone, He was working happily at his workplace.\nAt the same time, a thief name \"P\" is looking for the next target and He found an empty house and Obsoiulsy this house belongs to Alex {No Suspense, I am not good in making stories :) :) }\nLet's Move Forward......\nSo, \"P\" enters and start picking things.\nAt the same time.... Alex's phone Starts Ringing.......... (Alex is at the office)\nAlex Picked Up the phone a voice message is Played,\n\"Alert... Alert...., Alert...., Somebody is there in the house\".\nAlex calls the cops and cops visit Alex's house and \"P\" got caught.\nAlex's home is safe, Nothing was stolen.\nWho is the Hero here ???\nHow it all happened??\nYes, you are right, \"Internet of Things\", with Motion Detection sensor, ESP8266 (NODEMCU) and Cloud.\nLet's Learn this technology by implementing this project.",
      "target_audience": [
        "Beginner curious to develop IoT projects and deploy them to cloud"
      ]
    },
    {
      "title": "VLSI/FPGA Design P2: Verilog for Design and Verification",
      "url": "https://www.udemy.com/course/icfpga-design-p2-verilog-for-design-and-verification/",
      "bio": "Learning from Examples, Achieve Consistency between circuit diagram, RTL code and waveform",
      "objectives": [
        "Common used Verilog syntaxes for design and verification",
        "Install Verilator and GTKwave on windows OS(using WSL)",
        "Descript combination logic (basic logic gates, MUX, decoder, one-hot decoder)",
        "Descript sequential logic (DFF with sync/async reset, ounter, edge detect, shift registers, sequence check, sync_fifo)",
        "Design finite state machine (FSM)",
        "Write testbench",
        "Using Verilator and GTKwave to debug a design",
        "Common mistakes for synthesis (incomplete sensitive list, latch, multi-driven, combination logic loop)",
        "Practice time: z-scan, complex sequence check (FSM)"
      ],
      "course_content": {
        "Introduction and Preparation": [
          "Introduction",
          "Digital IP and IC Design Flow",
          "Quick Review of Digital Fundamental",
          "Install Verilator and GTKwave"
        ],
        "Using Verilog to Describe Basic Logic Gates and Simulation": [
          "Hello World in Verilog",
          "Describe Combination Logic and Sim",
          "Describe Sync and Async DFF and Sim",
          "Power-Up sim value difference for Verilator and other sim tools"
        ],
        "Common Used Verilog Syntaxes": [
          "Verilog Syntanx: Declare and Operators",
          "if-else if-else and case statement",
          "sign extension and one-hot decoder"
        ],
        "Describe counter, edge detect, shift regs and common mistakes for RTL": [
          "Describe small but usefull circuit: counter, edge detect, shift regs",
          "Common mistakes: Incomplete Sensitive list, Latch, Comb. loop, Multi-driven"
        ],
        "Practice time: design and verify z-scan function": [
          "design and verify z-scan function",
          "Reference design and verification code for z-scan",
          "Project Directoies and Makefile"
        ],
        "Finite States Machine Design": [
          "Design Finite States Machine",
          "Using FSM to Design Sequence Detect Function",
          "Sequence Detect by Shift Regs"
        ],
        "Function and Task": [
          "Function and Task Syntax",
          "Task example in testbench"
        ],
        "Execution Order of Verilog in SW View": [
          "Execution Order of Verilog in SW View"
        ],
        "Concept of Design Testbench": [
          "Concept of Design Testbench"
        ],
        "Advanced Topics": [
          "Generate and Parameter Construct",
          "Concept of Design Large Scale Designs"
        ]
      },
      "requirements": [
        "Basic C or C++ programing language",
        "Basic knowledge of digital fundamental"
      ],
      "description": "The speech isn't fluent, please turn on subtitle to help your understanding.\n\n\nIf you don't need Q&A, you can also find a free version of this chapter at my homepage of Udemy.\nQuick master through examples and coding exercises, in videos less than 10 hours. After study, you can have the ability of consistency between circuit schematic, Verilog code and waveform. That’s given anyone of them, you can figure out the other two. In this chapter (will be divided to several free sections), I’ll explain:\n1: Digital IP/IC design flow;\n2: Quick review of digital fundamental\n3: Install Verilator and GTKwave\n4: Common used Verilog syntax for design and verification\n5: Design combination logic(basic gates, MUX, decoder, one-hot decoder)\n6: Design sequential logic(sync-DFF, async-DFF)\n7: Design small but useful block(counter, edge detect, shift registers, sequence check, sync_fifo)\n8: Design FSM(finite state machine)\n9: Design basic testbench\n10: Common mistakes for synthesis(incomplete sensitive list, latch, multi-driven, combination logic loop)\n11: Practice time: design and verify z-scan and complex sequence check(FSM)\n\n\nThis is chapter 2, section 1 of whole Digital IC and FPGA design course.\nIn the whole course, I will introduce fundamentals of digital IC and FPGA design, with 12+ coding exercises and 3 course projects.\nTheory part: MOS transistor -> logic cells -> arithmetic data path -> Verilog language -> common used HW function blocks and architecture -> STA -> on-chip-bus(APB/AHB-Lite/AXI4) -> low power design -> DFT -> SOC(MCU level).\nFunction blocks and architecture: FSM, pipeline, arbiter, CDC, sync_fifo, async_fifo, ping-pong, pipeline with control, slide window, pipeline hazard and forward path, systolic.\nProject: SHA-256 algorithm with simple interface, SHA-256 with APB/AXI interface, 2D DMA controller with APB/AXI interface.\nAfter explaining of each HW architecture, I will give you a coding exercise, with reference code. Coding difficulty will begin from several lines to fifty lines, more than 100 lines, then around 200 lines. While the final big project will be 1000+ lines.\nI suppose these should be essential knowledge and skills you need master to enter this area.\nI will try my best to explain what-> how-> why and encourage you to do it better in this course.\n\n\nPlease browse to my homepage on Udemy to obtain information about each chapter of this course.",
      "target_audience": [
        "Anyone who wants to study Verilog and digital IC/FPGA design"
      ]
    },
    {
      "title": "Laptop Motherboard Repair: Circuits & Signal Analysis Course",
      "url": "https://www.udemy.com/course/computer-repair-laptop-motherboard-circuits-analysis-course/",
      "bio": "Master laptop motherboard repair by learning power sequences, signal tracking, and circuit analysis, from basics to pro",
      "objectives": [
        "You will master Laptop motherboard repair with perfect care by a computer engineer;",
        "Laptop motherboard circuits analysis;",
        "How to track motherboard voltages;",
        "19V/3V/5V power rail explained;",
        "Laptop motherboard components explained;",
        "Main Power (+VBAT), 3.3V/5V circuit, RAM VDD & VTT circuit, +VCC_CORE, (1.8V/1.5V/0.9V VTT) circuit;",
        "Motherboard power sequence analysis and much more."
      ],
      "course_content": {},
      "requirements": [
        "No hardware experience needed. You will learn everything you need to know."
      ],
      "description": "Are you ready to master laptop motherboard repair and become confident in analyzing circuits, tracking signals, and fixing real problems like a professional?\nThis course is carefully designed by a computer engineer to give you the knowledge, skills, and confidence to repair laptop motherboards step by step.\n- What You’ll Learn\nUnderstand laptop motherboard circuits in detail: charging circuits, 3V/5V rails, RAM power, CPU circuits, and more.\nRead and analyze motherboard block diagrams and power sequences.\nTrack and measure motherboard signals: 19V rail, +VBAT, +VCCP, +VCC_CORE, VDD, VTT, and more.\nLearn how to use test points and identify voltage rails for faster troubleshooting.\nMaster all motherboard components, symbols, and functions.\nDevelop real repair skills with tips and tricks used by hardware professionals.\nWhy Choose This Course?\nCovers everything about laptop motherboard circuits in detail.\nCreated with care and experience by a computer engineer.\nOne-on-one support gets your questions answered quickly and clearly.\nShort, practical lessons that save time but deliver maximum knowledge.\nConstant updates to keep your skills fresh.\nSimple explanations with real examples are easy for beginners, powerful for advanced learners.\nA certificate of completion to showcase your skills.\nTransform from beginner to pro in motherboard repair.\nWho Is This Course For?\nStudents who want to learn practical motherboard repair skills.\nComputer and electronics technicians who want to upgrade their knowledge.\nBeginners interested in hardware troubleshooting.\nAnyone who wants to master motherboard circuits and signals.\nBy the end of this course, you’ll be able to confidently analyze, diagnose, and repair laptop motherboards like a professional.\nEnroll now and start your journey to becoming a laptop motherboard repair expert.",
      "target_audience": [
        "Technicians who want to improve and update their skills on laptop repairing;",
        "Anyone who want to understand how to repair dead laptop motherboard."
      ]
    },
    {
      "title": "Introduction to mBot",
      "url": "https://www.udemy.com/course/introduction-to-mbot/",
      "bio": "mBot is an all-in-one solution for learners to enjoy the hands-on experience about programming, electronics and robotics",
      "objectives": [
        "Program robot wirelessly.",
        "Line-following vehicle",
        "Remote control car",
        "Control the speed of fan by using ultrasonic sensor",
        "Interact with physical world.",
        "Create your own interactive stories, games, and animations."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Install the mBlock software"
        ],
        "Assembling the mBot mechanical and electronic parts": [
          "Construction of mBot mechanical and electronic parts",
          "Connecting mBot to the mBlock interface"
        ],
        "Functions of mBlock interface and details of sensors in mBot": [
          "Commonly used functions in the mBlock interface",
          "Electronic Modules of mBot"
        ],
        "Infrared remote controller to control mBot": [
          "Infrared remote controller to control mBot",
          "Code: Infrared remote controller to control mBot",
          "Uploading the code into mcore of mBot and Real time demonstration of the project",
          "mBot: Infrared remote controller"
        ],
        "Controlling the speed of fan by using Ultrasonic sensor": [
          "Controlling the speed of fan by using Ultrasonic sensor",
          "Code: Controlling the speed of fan by using Ultrasonic sensor",
          "Real time demonstration: Controlling the speed of fan by using Ultrasonic sensor",
          "Controlling the speed of fan by using Ultrasonic sensor"
        ],
        "Race track map for the Line follower module": [
          "Race track map for the Line follower robot",
          "Functionality of the Line follower module",
          "Code: Race track map for the Line follower robot",
          "Line follower robot",
          "Real time demonstration: Race track map for the Line follower robot"
        ]
      },
      "requirements": [
        "mBot Educational robot kit",
        "You will need to download the mBlock and Arduino IDE software",
        "Adobe Air version 17.0+",
        "Windows or Mac operating system"
      ],
      "description": "This cute little fella is the mBot a do-it-yourself educational robot kit from robotics experts Makeblock. Built around the Arduino open-source platform, it's designed to induct kids into the fields of robotics and programming. The company chose to build around the concept of STEM education: science, technology, engineering & mathematics. Specifically, it helps children get an early start into these disciplines. There are two versions of the mBot: a Bluetooth version for home use and a 2.4 GHz Wi-Fi version, which is designed for classroom use.\nEverything that you need to build it is in the box in a nutshell, you need to assemble it using the precise instructions provided and add batteries. There are 45 pieces and it's easy to put them together in about 15 minutes. It's neatly packaged and consists of very high quality materials. Every little part that you need from the main Arduino board, DC motors, to each screw, cable and even a set of tools is in the box. It comes pre-programmed but it's also designed to be tinkered with. Parent of pre-teens might be familiar with Scratch. It’s a free, graphical based programming language developed by MIT Media Lab.\nWell, Makeblock has built their own version for this and called it mBlock. The idea behind mBlock is that younger children can start out with graphical programming and move on to text-based programming as they become more advanced.\nUltimately, once you put everything together, mBot can move around and avoid obstacles on its own, follow a line on the ground or just accept commands from the supplied IR remote controller. With the Makeblock app, you can control the robots wirelessly. For children, especially, it can be a surreal experience: actually building something out of tiny parts and seeing it come to 'life'. And there's no limit to what you can do add more parts, add another robot to play games or program your own actions. This is what will inspire the next generation of engineers.",
      "target_audience": [
        "No prior knowledge of programming or coding is required",
        "People who want to try mBot and learn about microcontrollers"
      ]
    },
    {
      "title": "Master RStudio: Beginner to Advanced",
      "url": "https://www.udemy.com/course/master-rstudio-beginner-to-advanced/",
      "bio": "Learn RStudio step-by-step, from basic scripts to powerful data visualization.",
      "objectives": [
        "Navigate the RStudio interface confidently, including using scripts, the console, and managing packages.",
        "Create and manipulate variables, vectors, and data frames to organize and analyze data effectively",
        "Import, clean, summarize, and transform datasets from sources like CSV and Excel using R and dplyr.",
        "Build and customize visualizations using ggplot2 and export plots and results for reports or presentations.",
        "Write and publish professional R Markdown reports to clearly communicate your data findings."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to this course",
          "Installing Rstudio"
        ],
        "Understanding Statistics First - Statistics Fundamentals": [
          "Statistical Fundamentals Introduction",
          "Welcome to Statistics Fundementals",
          "Summarizing and Interpreting Data",
          "Finding Patterns in Data"
        ],
        "Basic Functions": [
          "Rstudio Overview",
          "Scripts, Console and Running Your First Script",
          "Installing and Loading Packages"
        ],
        "Manipulate Variables, Vectors and Data": [
          "Variables, Vectors, and the Environment Pane",
          "Using built-in Functions and Help Docs",
          "Working with Data Frames and Viewing Data",
          "Data Manipulation with R - Select, Mutate and Arrange"
        ],
        "Functions and Data Frames": [
          "Creating Basic Plots With ggplot2",
          "Writing Your First R Markdown Report",
          "Importing Data from CSV and Excel"
        ],
        "Working with Datasheets": [
          "Data Cleaning Basics with dplyer",
          "Summarizing and Grouping Data",
          "Visualizing Data",
          "Saving Plots and Exporting Results"
        ],
        "Advanced Data Wrangling and Visualization": [
          "Filtering and Selecting",
          "Combining Datasets",
          "Faceted Plots",
          "Transforming Data with Pivot Longer and Pivot Wider",
          "Grouping and Summarizing",
          "Visualizing Summaries",
          "Exporting Visualizations and Summaries"
        ]
      },
      "requirements": [
        "No programming experience needed."
      ],
      "description": "Are you ready to start your journey into data analysis?\nThis beginner-friendly course will teach you how to use RStudio from scratch, even if you have never coded before. This course will help you whether you're a student, a professional, or a  future data scientist, you'll get hands-on practice working with real datasets, writing R scripts, cleaning messy data, and creating powerful visualizations.\nEach section builds your skills step-by-step:\nSection 1: Gives an introduction to RStudio and what you can achieve with it.\nSection 2: Focuses on learning the basics: how to run scripts, install packages, create variables, and navigate RStudio's environment.\nSection 3: Dives into functions, working with data frames, and creating your first plots and R Markdown reports.\nSection 4: Brings your skills together by learning how to import, clean, summarize, and visualize real-world data.\nSection 5: You'll advance your toolkit with filtering, combining datasets, pivoting data, and making polished summaries and visualizations.\nBy the end of this course, you'll have the confidence to analyze data, create visual reports, and present your results using RStudio!\nWho this course is for\nAbsolute beginners who want to learn R and RStudio\nStudents and researchers needing basic data analysis skills\nProfessionals working with data who want to add RStudio to their skill set\nAnyone interested in data science, data visualization, or reporting\nRequirements\nNo prior R or programming experience required!\nA computer with internet access to install R and RStudio (free software)\nA willingness to learn by doing — we’ll walk through everything together!\nCourse Sections Overview\nSection 1: Introduction\nGet an overview of the course and how RStudio can supercharge your data projects.\nSection 2: Basic Functions\nExplore RStudio, run your first scripts, and master variables, vectors, and environments.\nSection 3: Manipulate Variables, Vectors and Data\nDive into variables, vectors and data manipulation and working with and viewing data.\nSection 4: Functions and Data Frames\nLearn to use functions, work with data frames, and build basic visualizations with ggplot2.\nSection 5: Working with Datasheets\nImport, clean, summarize, and visualize real datasets from Excel and CSV files.\nSection 6: Advanced Data Wrangling and Visualization\nTake your skills further with data filtering, combining datasets, pivoting tables, and creating faceted plots.\nWhy Take This Course?\nClear, beginner-friendly explanations\nHands-on practice with real-world data\nStep-by-step screen demonstrations\nPractical examples and guided exercises\nSkills you can immediately apply in school, work, or projects\nYou can Enroll today and start mastering RStudio with confidence!",
      "target_audience": [
        "Beginners, students, researchers, professionals and anyone interested in data science, visualization, or reporting."
      ]
    },
    {
      "title": "ARM Assembly Language From Ground Up™ 2",
      "url": "https://www.udemy.com/course/arm-assembly-language-from-ground-uptm-2/",
      "bio": "Write Assembly Peripheral Drivers : ARM Cortex, ADC,UART,TIMERS, GPIO etc.",
      "objectives": [
        "Write firmware using only ASSEMBLY code",
        "Write Analog-to-Digital Converter (ADC) drivers using ASSEMBLY code",
        "Write PWM drivers using ASSEMBLY code",
        "Write UART drivers using ASSEMBLY code",
        "Write TIMER drivers using ASSEMBLY code",
        "Write Interrupt drivers using ASSEMBLY code"
      ],
      "course_content": {
        "Introduction": [
          "Overview of ARM Cortex-M General Purpose Input/Output Module",
          "Notice"
        ],
        "STM32 General Purpose Input/Output(GPIO)": [
          "Coding : Assigning Symbolic Names to Relevant GPIO Registers",
          "Coding : Writing the GPIO Output Driver",
          "Coding : Toggling GPIO Outputs",
          "Coding : Toggling GPIO Outputs with the BSRR Register",
          "Coding : Developing the GPIO Input Driver (Part I)",
          "Coding : Developing the GPIO Input Driver (Part II)"
        ],
        "Writing Assembly Programs with STM32CubeIDE": [
          "Notice",
          "Coding : Writing a Simple Assembly Project",
          "Coding : Developing a GPIO Driver (Part I)",
          "Coding : Developing a GPIO Driver (Part II)",
          "Coding : Converting Keil uVision Assembly to CubeIDE GCC Assembler Project"
        ],
        "STM32 Universal Asynchronous Receiver-Transmitter(UART)": [
          "Overview of the UART Protocol",
          "Coding : Assigning Symbolic Names to Relevant UART Registers",
          "Coding : Writing the UART Initialization Subroutine",
          "Coding : Sending Characters through the UART",
          "Coding : Testing the UART Transmit (TX) Subroutine",
          "Coding : Writing the UART Receive (RX) Driver",
          "Coding : Combining UART RX and TX",
          "Coding : Calling UART Subroutines from C code"
        ],
        "STM32-The System Tick Timer": [
          "Overview of the System Tick Timer",
          "Coding : Assigning Symbolic Names to Relevant SysTick Registers",
          "Coding : Writing the Systick Init Subroutine",
          "Coding : Testing the SysTick Driver"
        ],
        "STM32 General Purpose Timers (GPTM)": [
          "Overview of General Purpose Timers",
          "Coding : Assigning Symbolic Names to Relevant GPTM Registers",
          "Coding : Developing the General Purpose Timer Driver"
        ],
        "STM32 Analog to Digital Converter (ADC)": [
          "Overview of the ADC",
          "Coding : Assigning Symbolic Names to Relevant ADC Registers",
          "Coding : Writing the ADC Driver",
          "Coding : Testing the ADC Driver",
          "Coding : Calling ADC Subroutines from C code"
        ],
        "TM4C123 General Purpose Input/Output(GPIO)": [
          "Overview of ARM Cortex-M General Purpose Input/Output Module",
          "Stellaris Driver",
          "Coding : Assigning Symbolic Names to Relevant GPIO Output Registers",
          "Coding : Writing the GPIO Output Driver",
          "Coding : Toggling GPIO Outputs",
          "Coding : Assigning Symbolic Names to Relevant GPIO Input Registers",
          "Coding : Writing the GPIO Input Driver"
        ],
        "TM4C123 System Tick Timer": [
          "Overview of the System Tick Timer",
          "Coding : Assigning Symbolic Names to Relevant SysTick Registers",
          "Coding : Writing the SysTick Timer Driver",
          "Coding : Creating Delay Subroutines with SysTick Timer"
        ],
        "TM4C123 Universal Asynchronous Receiver-Transmitter(UART)": [
          "Overview of the UART Protocol",
          "Coding : Assigning Symbolic Names to Relevant UART Registers",
          "Coding : Writing the UART Driver",
          "Coding : Testing the UART Driver"
        ]
      },
      "requirements": [
        "We shall be using the Keil uVision 5 IDE and toolchain  which is FREE.",
        "You will need to first take  the ARM Assembly Language From Ground Up™ 1 course",
        "You will need an STM32F411-NUCLEO Board or TM4C123-TIVA Launchpad"
      ],
      "description": "Welcome to the ARM Assembly Programming Ground Up™ 2 course.\nWith a programming based approach, this course is designed to give you a solid foundation in bare-metal firmware development for  ARM-based microcontrollers . The goal of this course is to teach you how to navigate the microcontroller reference manual and datasheet to extract the right  information to professionally  build peripheral drivers and firmware. To achieve this goal, no libraries are used in this course, purely ARM Assembly Language.\n\n\nBy the end of this course you will be able configure microcontroller peripherals  like ADC, UART,PWM, GPIO, TIMERS,  etc.  You will also master the ARM architecture, ARM Instruction Set Architecture (ISA) and building professional embedded firmware in assembly for ARM processors.\n\n\nSpecially Designed For People Who Hate Copy/Paste\nListen. If you don’t like “Copy/Paste” you’re not alone. I can’t stand it either. I’d literally rather have a piece of code that I wrote from scratch that doesn’t work than someone else’s working code I copied and pasted.\nAnd that’s why I’ve spent months designing and recording this course in which I show you how to locate every single register used and the meaning of every hexadecimal value written into the register.\n\n\nSome Highlights\n----------------------------\nWrite ADC Drivers in Assembly Language\nWrite UART Drivers in Assembly Language\nWrite GPTM Drivers in Assembly Language\nWrite GPIO Drivers in Assembly Language\nMaster the ARM Instruction Set\nMaster the Thumb and Thumb-2 Instruction Sets\n\n\nREMEMBER : I have no doubt you will love this course. Also it comes with a  FULL money back guarantee for 30 days!  So put simply, you really have nothing to loose and everything to gain.\nSign up and lets start toggling some register bits",
      "target_audience": [
        "If you are an absolute beginner to embedded systems, then take this course.",
        "If you are an experienced embedded developer and want to learn how to professionally develop embedded applications for ARM processors, then take this course.",
        "If you want learn how to write peripheral drivers in ASSEMBLY language then take this course."
      ]
    },
    {
      "title": "Learn Arduino Fast A complete Beginner's Guide",
      "url": "https://www.udemy.com/course/arduino-x/",
      "bio": "Arduino programming and prototyping (Simple, Easy and BEST ways to do it..)",
      "objectives": [
        "After this course you'll be able to turn your DIY ideas into a reality.",
        "I'll teach you basics of arduino programming and prototyping techniques",
        "Along with very basic electronics.",
        "Pdf manual included with basic code."
      ],
      "course_content": {},
      "requirements": [
        "Be able to read and write :) and that's it. Arduino is like super easy so in my opinion a 7th grader can do it so you don't need to worry about Computer science degree or any other Engineering degree to learn arduino prototyping board."
      ],
      "description": "Welcome to Charcoal's Arduino programming and prototyping (Simple, Easy and BEST ways to do it..), where you will extend your knowledge of Arduino components and techniques and build up new skills in the largest, and the most comprehensive course on the Web!\nArduino is the world's favorite electronics learning and prototyping platform. Millions of people from around the world use it to learn electronics, engineering, programming, and create amazing things, from Autopilots for drones to tree climbing robots remotely controlled lawnmowers, IOT products (Controlling your House hold appliances from all over the world) and many more.\nIt is a gateway to a career in engineering, a tool for Science, Technology, Engineering, and Mathematics education, a vehicle for artistic and creative expression.\nWhat's in this course ?\nEasy for those who are new to Arduino.\nComplete course on Arduino (programming + electronics).\nHands-on learning and experiments\nNew content added.\nCreated by an electrical engineer.\nPdf attached with sample projects.\nEasiest methods to learn Arduino coding and programming.\nIt’ll help you understand coding in most easiest and cool way possible.\nI hope in the end of this tutorial series you'll be able to do most sophisticated DIY projects completely on your own.\nBest Regards\nTeam Charcoal",
      "target_audience": [
        "Everyone who is motivated and passionate about Engineering, Who is creative and want to do something new, Want to create something new. After this course you'll be able to do very cool DIY projects on your own. This course is not for Extremely Expert programmers."
      ]
    },
    {
      "title": "LIDAR Technology: Learn the Fundamentals of LIDAR Technology",
      "url": "https://www.udemy.com/course/distance-measurement-with-lidar-sensor/",
      "bio": "Mastering Distance Measurements with LIDAR Sensors: From Theory to Practice",
      "objectives": [
        "Understand the basics of LIDAR technology and its applications",
        "Learn about the different types of LIDAR sensors and how they work",
        "Select and wire LIDAR components for a project",
        "Program a microcontroller to interface with a LIDAR sensor and interpret its data",
        "Build and assemble a LIDAR circuit on a breadboard and PCB",
        "Customize LIDAR projects to suit specific needs and applications",
        "Troubleshoot and optimize LIDAR projects",
        "Interpret LIDAR data and use it to make informed decisions",
        "Build specific LIDAR projects, such as obstacle avoidance or 3D scanning",
        "Gain practical experience by building their own LIDAR projects from scratch."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to lidar measurement",
          "Introduction to components",
          "Exploring the Fundamentals of LIDAR Technology",
          "Vlx Sensor",
          "Quiz",
          "OLED",
          "LASER",
          "Introduction to LIDAR Technology and Components",
          "Circuit part 1",
          "Circuit part 2",
          "Coding part 1",
          "Quiz",
          "Coding part 2",
          "Project build 1",
          "Project build 2",
          "Project demonstration",
          "Circuit Design, Coding, and Project Building for LIDAR",
          "Introduction to LIDAR Technology and Components"
        ],
        "Practice Test": [
          "LIDAR Technology: Learn the Fundamentals of LIDAR Technology Test"
        ],
        "Course Project": [
          "Course Project",
          "Applying the Fundamentals of LIDAR Technology"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic understanding of electronics and circuitry, such as Ohm's law, basic components (resistors, capacitors, diodes), and how to use a breadboard",
        "Basic programming knowledge, such as familiarity with programming concepts and a programming language (Arduino IDE, C++, Python, etc.)",
        "Familiarity with microcontrollers, such as Arduino or similar platforms",
        "Basic understanding of sensors and how they work",
        "Access to LIDAR components, such as a VL53L0X sensor and OLED display, and a microcontroller board (such as an Arduino Uno or Nano)",
        "Basic knowledge of 3D printing (if relevant to the course)"
      ],
      "description": "LIDAR sensors are becoming essential in various fields, from robotics and autonomous vehicles to environmental monitoring. This comprehensive course will guide you through everything you need to know about harnessing the power of LIDAR sensors for accurate distance measurements.\nWhat You Will Learn:\nUnderstanding LIDAR Technology:\nExplore the basics of LIDAR technology, its working principles, types of sensors, and applications.\nSetting Up LIDAR Sensors:\nLearn to choose, wire, and configure LIDAR sensors with microcontrollers or computers.\nAccurate Distance Measurement Techniques:\nMaster different distance measurement techniques using LIDAR, such as Time-of-Flight (TOF) and phase-shift methods.\nData Interpretation and Visualization:\nCreate 3D maps and point clouds using LIDAR data to gain valuable insights.\nHands-on Projects:\nBuild various projects from simple measurements to advanced robotics, leveraging LIDAR technology.\nCourse Highlights:\nIntroduction to Components:\nDelve into the foundational components like VL53L0X sensors, OLED displays, and lasers.\nCircuit Design and Construction:\nUnderstand the intricacies of circuit design, from concept to creation.\nProject Demonstrations:\nGain insights from comprehensive demonstrations of practical LIDAR projects.\nTailored Project Builds:\nFollow step-by-step instructions to build two tailored LIDAR projects that you can customize to fit your needs.\nWho Should Enroll:\nHobbyists and Students:\nWhether you're a beginner or have some experience, this course will enhance your understanding of LIDAR technology.\nProfessionals:\nIf you work in robotics, automation, or environmental monitoring, this course will broaden your technical skill set.\nInnovators:\nThose looking to apply LIDAR sensors in innovative projects will find ample guidance.\nPrerequisites:\nBasic knowledge of electronics and programming is recommended to fully benefit from the course.\nLearning Objectives:\nDevelop a deep understanding of LIDAR technology, its applications, and working principles.\nGain hands-on experience in selecting, wiring, and configuring LIDAR sensors.\nMaster various distance measurement techniques using LIDAR.\nAcquire the skills to interpret and visualize LIDAR data.\nBuild and customize advanced LIDAR projects.\nEnroll in this course to unlock the full potential of LIDAR technology and elevate your projects to new heights!\nWhat You Will Learn\nBasics of LIDAR technology and its applications\nSetting up and configuring LIDAR sensors\nAccurate distance measurement techniques using LIDAR\nData interpretation and visualization with LIDAR\nBuilding hands-on projects using LIDAR technology\nRequirements or Prerequisites\nBasic knowledge of electronics and programming\nWho Is This Course For\nHobbyists and Students: Beginners or those with some experience in electronics and programming.\nProfessionals: Working in robotics, automation, or environmental monitoring.\nInnovators: Looking to apply LIDAR sensors in innovative projects.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Engineers or technicians who want to learn more about LIDAR technology and its applications",
        "Makers or DIY enthusiasts who want to build LIDAR-based projects, such as obstacle avoidance robots or 3D scanners",
        "Anyone who wants to expand their knowledge of electronics and programming with hands-on, practical projects involving LIDAR technology."
      ]
    },
    {
      "title": "IoT-Based Smart Home Automation System on Budget",
      "url": "https://www.udemy.com/course/home-automation-low-budget-esp8266-board-arduino-ide/",
      "bio": "Build low budget IoT Web and mobile Controller to Control any device in your house via Internet in a step by step manner",
      "objectives": [
        "Build low budget IoT Controller to Control any device in your house via Internet",
        "Turn your house into an interactive place that you can control from anywhere",
        "Implement IoT concept by connecting everything to the web in your house",
        "Introduction About Internet of Things (IoT)",
        "Introduction to the ESP boards and how to easily program them using the famous Arduino IDE",
        "Building Home Automation Projects using ESP8266 board and Arduino IDE",
        "Creating low budget Web Server"
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction About Internet of things (IoT)",
          "Introductory Interview: Affordable Smart Home Automation Solutions",
          "Hardware and Software Requirements",
          "Introduction to IoT and Smart Home Automation",
          "Introduction to IoT and Home Automation",
          "Section Summary",
          "Reading Material"
        ],
        "Introduction to Internet of Things": [
          "Section Intro",
          "Introduction to Internet of Things",
          "Understanding the Basics of IoT",
          "Section Summary",
          "Reading Material"
        ],
        "Boards that support Wi-Fi Connectivity": [
          "Section Intro",
          "Different Boards with Built in Wi-Fi",
          "Boards Pinout",
          "Different Boards with Built-in Wi-Fi & Boards Pinout",
          "Introduction",
          "The board to be used in this course",
          "Hardware and Software Requirements",
          "Main board Features",
          "What is a Web Server",
          "Main Board Features and Hardware/Software Requirements",
          "Exploring the ESP8266 Module",
          "Section Summary",
          "Reading Material"
        ],
        "Arduino IDE": [
          "Section Intro",
          "ESP32 Operating Modes",
          "Download and Install Arduino Pro IDE",
          "Circuit Design",
          "Add Board to Arduino IDE",
          "Setting Up the Arduino IDE and ESP32 Operating Modes",
          "Understanding how esp32 work as a server",
          "Prepare Arduino IDE to Program Your Board",
          "Coding Wifi and Webserver settings",
          "Circuit Design, ESP32 as a Server, and Coding Webserver Settings",
          "Setting Up the Arduino IDE",
          "Section Summary",
          "Reading Material"
        ],
        "Web Interface": [
          "Section Intro",
          "Coding HTTP Requests and Server Start",
          "Prepare Web Interface to Control Device",
          "Coding Client Methods",
          "Web Interface, HTTP Requests, and Client Methods in IoT",
          "Building an IoT Control Interface",
          "Section Summary",
          "Reading Material"
        ],
        "Coding": [
          "Section Intro",
          "Writing HTML Code for WebPage",
          "The Code",
          "Practical",
          "Coding Your Board",
          "Coding the IoT Board, HTML for Web Interface, and Practical Implementation",
          "Coding for ESP8266 with Arduino IDE",
          "Section Summary",
          "Reading Material"
        ],
        "Mobile Control": [
          "Section Intro",
          "Create Mobile Interface to Control Your Device",
          "Creating a Mobile Interface for IoT Control",
          "Setting Up and Using the Blynk App for IoT Device Control",
          "Section Summary",
          "Reading Material"
        ],
        "Hardware Explained": [
          "Section Intro",
          "Hardware Explained",
          "Hardware Connection Explained",
          "Uploading the code to the board",
          "Practical Testing",
          "ESP8266 Circuit Connections and Components",
          "Preparing the Hardware for ESP8266 Programming",
          "Section Summary",
          "Reading Material"
        ],
        "Final Testing and Code edits": [
          "Section Intro",
          "Final Testing and Code edits",
          "The 100% Working Code",
          "Section Summary",
          "Reading Material"
        ],
        "Code Examples": [
          "ESP8266",
          "ESP32"
        ]
      },
      "requirements": [
        "Computer/Laptop",
        "All Softwares needed for this course are provided during the lecture"
      ],
      "description": "Are you interested in mastering IoT home automation? Do you need to enrich your skills in building Internet of Things (IoT) systems? This course will unleash your skills and teach you how to make your own IoT system. It will show you how to assemble the hardware and software for your home automation system.\nThe IoT-based smart home automation system allows you to control your home remotely from anywhere in the world, even if you are halfway around the world.\nWhy you should take this course?\nComprehensive Learning: A complete course for anyone who wants to build an IoT-based Smart Home Automation system on a budget.\nBeginner-Friendly: Learn how to build a low budget IoT-based Smart Home Automation System that will allow you to control any device in your house. This course works for people with no coding experience at all - it starts from square one and teaches you exactly what you need to know.\nPractical Applications: You will also learn how to use electronics like sensors and switches with their advantages and implement them in your IoT projects.\nBuild low budget IoT Web and mobile Controller to Control any device in your house via the Internet in a step by step manner.\nThe ESP Wi-Fi modules are microcontrollers with Wi-Fi and Bluetooth (not all models) qualification, evolved by Espressif Systems. It consists of numerous development boards like ESP8266-01, ESP8266, NodeMCU, ESP12, ESP32, etc. All the development boards can be effortlessly programmed using Arduino IDE and can be utilized in a diversity of applications like territory Automation, Internet of Things (IoT), Smart bias etc.\nThe ESP8266 is a system on a chip (SOC) Wi-Fi microchip for Internet of Things (IoT) applications produced by Espressif Systems. Given its low charge, small size, and rigidity with embedded devices, the ESP8266 is today used massively across IoT devices.\nAt the end of this course, you'll have a thorough understanding of it and get to experience creating your very own IoT Home Automation system.\nWhat makes us suitable to educate you?\nWe're an educational engineering crew with 13 years of experience with both tutoring and practical projects. Since 2007, we've been in the programming and micro-controlling business. We do our best to produce courses that are easy to understand and follow. Furthermore, we're glad to educate aspiring learners like you. We hope to inspire more people to pursue this career.\nApply now and click the enroll button!!!\nThroughout this course, you'll get to know about the following:\nIntroduction to the Internet of Things (IoT)\nIntroduction to the ESP8266 board and Arduino IDE\nLearn About the Advantages of utilizing Arduino IDE\nStructure Home Automation Systems using ESP8266 board and Arduino IDE\nCreating the Best Web Server\nInterface with Arduino IDE using your laptop\nInteracting with GPIO\nInterfacing with sensors, modules, and displays\nDetailed Explanation About Web Servers\nThe Internet of Things (IoT) is a system that allows devices to be interconnected and remotely monitored across the Internet. The IoT concept has seen strong evolution in the last few years and is now utilized in various domains like smart homes, telemedicine, industrial environments, etc. Wireless sensor network technologies integrated into the IoT allow a global connection of smart devices with developed functionalities. A wireless home automation network, composed of sensors and actuators that share resources and are connected to each other, is the key technology to fabricating intelligent homes. A “smart home” is a part of the IoT paradigm and aims to integrate home automation. Allowing objects and devices in a home to be joined to the Internet enables users to remotely monitor and control them. These include light switches that can be turned on and off using a smartphone or by voice command, thermostats that will adjust the inner temperatures and generate reports about energy usage, or smart irrigation systems that will start at a specific time of day, on a custom monthly schedule, and therefore control water waste. Smart home solutions have become very popular in the last several years.\nWhat You'll Learn\nIntroduction to IoT and its applications\nOverview of ESP8266 board and Arduino IDE\nAdvantages of using Arduino IDE\nBuilding home automation systems with ESP8266\nCreating web servers for IoT applications\nInterfacing sensors, modules, and displays with Arduino\nDetailed explanation of web servers and their functionalities\nRequirements\nNo prior experience needed\nBasic understanding of electronics (helpful but not required)\nAn ESP8266 board (NodeMCU recommended)\nArduino IDE installed on your computer\nBasic electronic components (sensors, switches, etc.)\nWho This Course is For\nBeginners interested in IoT and smart home automation\nHobbyists wanting to create practical IoT projects\nElectronics enthusiasts looking to expand their skills\nDevelopers seeking to understand and implement IoT systems\n\n\nInstructor Profile\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience into these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and provides guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone who wants develop competency in the area of IoT Home Automation systems",
        "Anyone looking to Build low budget IoT Controller to Control any device in their houses via Internet",
        "Professionals working in the Industry",
        "Engineering Students",
        "Researchers",
        "Teaching professionals"
      ]
    },
    {
      "title": "VLSI Design Flow",
      "url": "https://www.udemy.com/course/vlsi-design-flow/",
      "bio": "Learn everything about VLSI and semiconductor design flow",
      "objectives": [
        "The course covers basics of VLSI Design Flow and semiconductor industry",
        "Understand each step in VLSI Design Flow",
        "Know about semiconductor industry and various job roles",
        "Understand Soft IPs, Hard IPs, FPGA, ASIC, Analog IPs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Overview of VLSI Design Flow": [
          "Overview of VLSI Design Flow"
        ],
        "Frontend Design Flow": [
          "Front End Design Flow"
        ],
        "Backend design flow, Fabrication & Packaging": [
          "Backend design flow, fabrication and packaging"
        ],
        "VLSI Career Roles": [
          "VLSI Career roles"
        ]
      },
      "requirements": [
        "No prerequisite"
      ],
      "description": "The course covers the following topics\n· Introduction to VLSI\n· Semiconductor market overview\n· Design Complexity\n· Semiconductor future trends and enablers\n· AI Accelerators\n· IOT\n· Automotive\n· Overview of VLSI Design Flow\n· Soft IPs\n· Soft IPs Flow\n· Hard IPs\n· Hard IP Flow\n· Analog IPs\n· Analog IPs Flow\n· System on a chip (SOC)\n· SOC Flow\n· Software vs Hardware in SoC\n· FPGA vs ASIC\n· FPGA Architecture\n· FPGA Flow\n· Specification\n· Tools used in Specification\n· Architecture\n· Tools used in architecture\n· RTL design and behavioural coding\n· RTL Linting\n· Verification\n· Simulation and Dynamic Verification\n· Emulation\n· Static Verification\n· Formal Verification\n· Assertion Based Verification\n· CDC Verification\n· Logic Synthesis\n· Synthesis Flow\n· Synthesis inputs and outputs\n· Synthesis tools\n· Equivalence Checking\n· Tools for equivalence checking\n· Testing\n· Defect\n· Defect Modeling\n· Scan Chains\n· Scan Flipflop\n· Test mode operation\n· Shift and Capture operation\n· Scan Insertion Design Flow\n· Board level testing and diagnosis\n· JTAG\n· Built-in self-test (BIST)\n· Analog circuit testing\n· Tools for DFT and testing\n· Power consumption\n· Dynamic power\n· Clock Gating\n· Multi-voltage design\n· Power tools\n· Post synthesis STA\n· STA Definition\n· STA Features\n· Types of timing paths\n· Setup check\n· Hold Check\n· STA - Inputs and Outputs\n· Timing Report\n· STA Tools\n· Please and Route\n· Physical Design Flow\n· Partitioning\n· Floorplanning\n· Clock tree synthesis\n· Routing\n· Timing analysis and closure\n· Physical Verification\n· PnR - Tools\n· Signoff STA\n· Signoff checks\n· Gate level verification\n· ECO Flow\n· Fabrication\n· IC Packaging\n· IC Testing\n· Roles in architecture\n· Roles in frontend\n· Roles in the backend\n· Roles in EDA companies",
      "target_audience": [
        "ECE undergard and master students. New entrants into semiconductor industry, professionals looking to revisit various aspects of semiconductor industry"
      ]
    },
    {
      "title": "Home Automation in 48 hours without coding",
      "url": "https://www.udemy.com/course/home-automation-in-48-hours-without-coding/",
      "bio": "Learn how to automate your day to day activities and remotely control any home appliance",
      "objectives": [
        "Learn to control four different AC appliances remotely using Cayenne app without writing a single line of code",
        "Eliminate the manual effort and save energy by automating the garden lights",
        "Build your own security alert system and get notified via email and SMS upon intrusion",
        "Read analog sensors and visualize the data in a web dashboard using Cayenne without writing any code"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Raspberry Pi",
        "Basic knowledge of electronic circuits"
      ],
      "description": "In this course, We will help you explore Internet of things, using Raspberry Pi and Cayenne. Have you ever wanted to build great IoT projects without writing a single line of code?  Yes! That’s absolutely possible with Cayenne. Cayenne is the world's first drag-and-drop project builder developed to quickly design, prototype and commercialize IoT solutions.\nCayenne provides a digital dashboard to control and monitor your project from anywhere. You can Quickly connect to the Internet and hook up sensors, actuators, and extensions in minutes.\nIn this course, you will learn to interface sensors and actuators with the cayenne web application after which we will build the Home Automation project. You will learn to control the different home appliances using the cayenne web application or with the mobile app. Whether it is a television, a lamp, a fan or even an AC motor, each one of these can be turned ON or OFF with the help of a smartphone from anywhere in the world.\nNext, you will also learn to use a digital motion sensor and deploy it for a security alert while you are away from your home. You will get notified by an email as well as a text message if something goes wrong.\nYou will also learn how to read analog sensors using Raspberry Pi without writing lines and lines of code to convert analog signals to digital signals using ADC ICs. You just need to design the circuit, and the system will be smart enough to establish an connection with the circuit.\nLastly, you will learn to save energy by building an automatic garden lighting system. A simple light switch is the traditional way to operate garden lights. However, it is sometimes easy to forget to switch the lights on or off. With a simple switch, you also have to bear in mind that darkness falls at different times throughout the year. So, the idea is to turn on the lights only when it is dark. This can save energy and eliminate manual effort. A light sensor can switch on outdoor lights when the light intensity drops below a certain threshold level. When the sky clears up, the sensor will turn off the lights.\nAll the projects will be discussed step by step and with real-time demonstration of the output.\nIf you face any technical issue during the development process, please post your query in the udemy discussion forum. We will get back to you within 48 business hours.",
      "target_audience": [
        "Anyone who wants explore Internet of Things (IoT) and and automate day to day activities",
        "Anyone who don't wish to write any code and build the complete project using visual editor"
      ]
    },
    {
      "title": "Arduino Uno and Visual Displays Bootcamp",
      "url": "https://www.udemy.com/course/arduino-uno-and-visual-displays-bootcamp/",
      "bio": "Learn Electronics Basics, Arduino Platform and Ecosystem, Arduino C Programming, and interfacing various displays",
      "objectives": [
        "Build projects with Arduino Uno",
        "Understand what is the Arduino Platform and Ecosystem",
        "Understand Digital Outputs",
        "Detailed Tour of Arduino IDE and Settings",
        "Work with simple and RGB LEDs",
        "Work with LED Bar Display",
        "Work with 7-Segment LED display",
        "Prepare LED Chaser Circuits",
        "Max 72xx Matrix display",
        "OLED display",
        "TFT display",
        "WS2821b display"
      ],
      "course_content": {},
      "requirements": [
        "A Windows, Raspberry Pi, Mac, or Linux computer",
        "An Arduino Uno, Clone, or Compatible",
        "Parts like LEDs, Breadboards, and Jumper Wires"
      ],
      "description": "Learn Basics of Electronics, Arduino Ecosystem, and Visual Displays. These are a few of the most in-demand skills of the 21st Century! An expert level Electronics and IoT professional can earn $100000 (that's five zeros after 1) in today's scenario.\nThis is the most comprehensive and straight-forward course for the Electronics basics, Arduino, and various visual displays on Udemy! Irrespective of your level of familiarity with Arduino and Electronics, you can register for this course. In this course we will teach you Arduino Basics, Arduino Ecosystem, Basics of Electronics, Arduino C Programming, and Interfacing with Visual Displays.\n(Note: Arduino C Code files, Fritzing Circuit Diagrams, and other PDFs can be downloaded from the downloadable section)\nWith more than 70 lectures and more than 7 hours of videos, this comprehensive course leaves no stone unturned in teaching you Arduino, Electronics Basics, and interfacing with various displays!\nThis course is the easiest way to learn basics of Electronics and Arduino. You also get to learn how to interface Arduino with various visual displays.\nYou will get lifetime access to over 70 lectures plus corresponding PDFs, Arduino C code files, and the circuit diagrams for the lectures!\nSo what are you waiting for? Learn Arduino and Electronics in a way that will advance your career and increase your knowledge, all in a fun and practical way!",
      "target_audience": [
        "Anyone interested in learning programming and electronics",
        "Anyone who wants to learn"
      ]
    },
    {
      "title": "VERILOG / VHDL guided project tutorial UART design on FPGA",
      "url": "https://www.udemy.com/course/complete-training-design-uart-using-verilog-or-vhdl-on-fpga/",
      "bio": "Design of UART on FPGA using VHDL / verilog programming (Guided project)",
      "objectives": [
        "the student will learn how to design a half-duplex and also a full duplex transceiver.",
        "the student will learn about baud rates, how to design one and the different lists of standard baud rates",
        "the student will learn how to design a UART serial communication protocol and implement it on an FPGA Board",
        "design UART transmitter AND receiver on FPGA with vhdl code, and simulate on logism",
        "the student will learn how to convert serial bits to parallel bits and vice versa, and also implement in VHDL",
        "the student will also learn some commonly used VHDL structural blocks like shift registers, parallelizer, serializer,",
        "design UART transceiver on FPGA with vhdl code, and simulate on logism"
      ],
      "course_content": {},
      "requirements": [
        "No external hardware needed. We would simulate the FPGA design in logism. Basic knowlegde of vhdl and how to use logism may be required."
      ],
      "description": "This is a practical course, that will teach you how to design your first UART project on FPGA  using Verilog HDL programming language.\nIn this course, you will learn the difference between a full duplex UART transmission and a half-duplex transmission including their technical difference.  You will how to use LOGISM EDA tool to design, test and simulate logic circuits.\nYou will a baud clock, learn how it is synthesized from system clock and how to calculate the frequency of generation.\nyou will learn what a baud rate means and also learn the standard baud rates and how to generate them from the system clock.\nYou will learn how to design and wire the receiver and transmitter to their baud clocks and how they are joined together to make up the transceiver.\nThe course is divided into three sections: the receiver, the baud generator and transmitter.\nThis a 17 video course. each module teaching about a particular part of the design.\na lot of visuals, arrows, pictures were used to make the tutorials easy to understand.\nkindly use the logism circuit file while watching the tutorial for easy understanding.\n\n\nYou will get the VHDL scripts and the logism circuit attached to lesson two.\nNo hardware is required just your pc.\nIt was kept brief and straight to the point.",
      "target_audience": [
        "Students with basic knowledge of VHDL, looking for a project to design"
      ]
    },
    {
      "title": "Power Electronics: Fundamentals of Power Electronics & SMPS",
      "url": "https://www.udemy.com/course/fundamentals-of-power-electronics-understanding-smps/",
      "bio": "Switch Mode Power Supply | Power Electronics, electrical engineering, electronics engineering, circuit diagram analysis",
      "objectives": [
        "Understand Fundamental of Power Electronic Converters theory;",
        "Learn Switch Mode Power Supply (SMPS) Parts;",
        "Understand how Switch Mode Power Supply (SMPS) works;",
        "SMPS components and their schematics;",
        "Be able to analyze & understand Switch Mode Power Supply scheme;",
        "Learn the advantages & disadvantages of SMPS;",
        "How Optocoupler works in detail."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Switching Mode Power Supply Definition",
          "Switching Mode Power Supply Major Parts"
        ],
        "Switching Mode Power Supply ( SMPS ) Studying": [
          "SMPS Components Studying Part 1",
          "SMPS Components Studying Part 2",
          "SMPS Circuit Diagram Analyzing",
          "SMPS Circuit Board studying",
          "SMPS schematics analysis",
          "Switching Mode Power Supply Stages",
          "SMPS Circuit Board Paths Understanding",
          "Optocoupler Studying + SMPS Advantages & Disadvantages"
        ]
      },
      "requirements": [
        "Basic knowledge in Electronics;",
        "Basic knowledge in electric circuits."
      ],
      "description": "Fundamentals of Power Electronics & Understanding SMPS course is intended for those interested in Power Electronics, Electronics Repair, Electronic Circuits, Fault Finding & troubleshooting.\nContinuous updates;\n8 Reasons why you should choose this course.\nThe course will teach you the Fundamentals of Power Electronics.\nThe course is created with perfect care by a professional in Electronics & Schematics analysis.\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences.\nYour inquiries will be answered in a short time with a full explanation of any question.\nConstant updates.\nOne-On-One Support.\nSimple and easy-to-understand explanation with examples.\nA certificate will be provided upon completion of the course.\nTopics that we will be discussed in this course are :\nThe definition of Switch Mode Power Supply (SMPS);\nThe Switch Mode Power Supply parts & components;\nSMPS input devices;\nSMPS switching devices;\nSMPS output devices;\nSMPS feedback & control circuit\nThe working principle of optocoupler;\nSMPS circuit board design;\nSMPS circuit diagram analysis;\nSMPS components symbols and how to test them using a multimeter;\nSwitching Mode Power Supply stages from A to Z;\nWe Will discuss how to read circuit boards using their paths;\nSMPS advantages & disadvantages in detail, and much more.\nTo tell the truth, this course is for those who want to be professional in electronics.\nIf you are interested in one of the points we talked about before, then this course is for you.\nBy understanding this course, you will be able to repair any electronic motherboard based on Switch Mode Power Supply (SMPS), regardless of its model or type. because the functioning and working principle are the same.\nUpon completion of this course, you will be able to master the Fundamentals of Power Electronics. besides acquiring many skills that will make you professional and have a deep understanding of electronic circuits and parts.\nWhat are you waiting for?\nGo ahead and join us.\nI'll love to see you in the class.",
      "target_audience": [
        "Electronic technicians.",
        "Students who are interested in electronic repair;",
        "Anyone who wants to understand electronic repairing."
      ]
    },
    {
      "title": "Master the Craft of Flame Detection with PIC Microcontroller",
      "url": "https://www.udemy.com/course/pic-microcontroller-flame-detector/",
      "bio": "Unveil the Secrets of Building a DIY Flame Detector System, from Scratch, in Simple Steps!",
      "objectives": [
        "Make your own Flame Detector using PIC Microcontroller",
        "Learn Working Principle of Different Types of Fire Detector",
        "Learn Working Principle of Different Types of Flame Detector",
        "Learn how Fire is Detected using Different Types of Fire detectors and Which one is right for you",
        "Learn how How Flame Detector can save your life! and Why it's better than other types of Detectors",
        "Interface Flame Detector with PIC Microcontroller",
        "Use Electronic Circuit Simulator Software",
        "Learn How to Turn this into a Product by Making a PCB ready for manufacturing from your Design"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Hardware and Software Requirements",
          "Discussing Flame Detection Concepts in Embedded Design",
          "Quiz",
          "Setting Up the Arduino Motion Detector – Practical Assignment",
          "Summary",
          "Reading material"
        ],
        "Working Principle": [
          "Section Intro",
          "Different Types of Detectors",
          "Different Types of Flame Detectors",
          "Working Principle behind Flame Detector",
          "Arduino Motion Detector – Software and Hardware Essentials",
          "Software and Hardware Setup for Arduino Motion Detector",
          "Quiz",
          "Summary",
          "Reading material"
        ],
        "Circuit Connection": [
          "Section Intro",
          "Download and Install Proteus Software",
          "Circuit Connection",
          "Circuit Schematic",
          "Summary",
          "Reading material"
        ],
        "Make Your Own IR Detector": [
          "Section Intro",
          "IR Detector Schematic",
          "IR Module",
          "Summary",
          "Reading material"
        ],
        "Coding": [
          "Section Intro",
          "Download and Install MikroC Software",
          "Coding",
          "The Code",
          "Summary",
          "Reading material"
        ],
        "PCB Design": [
          "Section Intro",
          "Download and Install Altium",
          "Install Altium",
          "PCB Design",
          "Finishing the PCB",
          "Summary",
          "Reading material"
        ],
        "Practice Test": [
          "Flame Detection with PIC Microcontroller Practice Test"
        ],
        "Course Project": [
          "Course Project",
          "Demonstrating a Flame Detection System with PIC Microcontrolle"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Programming",
        "A Will to apply, not just watch"
      ],
      "description": "Safety first! Dive deep into the world of Flame Detection with the PIC Microcontroller. This course is meticulously designed for those who wish to create a safer environment by making their own Flame Detector System.\nWhy Enroll in This Course?\nUnique DIY Approach: Craft a Flame Detector System from scratch, step-by-step.\nComprehensive Learning: Understand the nuances between flame detectors, smoke detectors, and carbon monoxide detectors.\nHands-On Experience: Dive deep into the PIC microcontroller, circuit designing, coding, and practical applications.\nExpert Insights: Grasp the science behind flame detection, ensuring utmost safety.\nFeatures & Benefits:\nFrom Basics to Advanced: Whether you're a beginner or a seasoned expert, this course is tailored for all.\nPractical Application Examples: Real-world examples to ensure practical knowledge application.\nIn-Depth Understanding: Know the science, components, and methods behind flame detection.\nReal Student Testimonials: \"The DIY approach of this course is incredible! Learned a lot.\" - Aria J.\n\"Finally, a course that goes beyond just theoretical knowledge.\" - Raj M.\nWhat's Covered?\nHardware & Software Essentials\nDeep Dive: Smokeless Flame Detectors Vs. Other Detectors\nFlame Detection's Working Principle & Detection Options\nPIC Microcontroller: Circuitry, Coding, and Prototyping\nReady-for-Production Circuit Designs and Protocols\nFAQs: Who should enroll? Safety enthusiasts, DIY lovers, students, and professionals keen on mastering flame detection!\nWhat's the takeaway? A comprehensive understanding of flame detection systems, hands-on experience, and a DIY Flame Detector.\nAbout the Instructors: Meet the Educational Engineering Team - your expert guides in the microcontroller world! With over a decade of industry experience, countless practical projects, and a passion for teaching, they aim to bring the best of engineering education to students worldwide.\nKeen on Creating a Safer Environment? Enroll Today and Kickstart Your Flame Detection Journey!\nWhat You Will Learn\nTechniques to build a DIY flame detector system\nUnderstanding the differences between flame, smoke, and carbon monoxide detectors\nHands-on experience with PIC microcontroller, circuit designing, and coding\nScience and components behind flame detection\nPractical application examples\nWho is This Course For\nSafety enthusiasts\nDIY lovers\nStudents\nProfessionals keen on mastering flame detection\nRequirements\nBasic computer skills\nInternet access\nNo prior coding or electronics experience needed\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Learning New Things about PIC Microcontroller",
        "Anyone Interested in Learning How to make Flame Detector using PIC Microcontroller",
        "Anyone Interested in Learning how Fire Detector Works",
        "Anyone Interested in Learning how Flame Detector Works",
        "Anyone Interested in Learning How to Choose the Right Fire detector for your needs",
        "Anyone Interested in Learning How to make a PCB from scratch for a Product",
        "Anyone Interested in Making Projects",
        "Anyone Interested in Learning New Topics in Programming and Microcontroller"
      ]
    },
    {
      "title": "Foundations of Li-ion batteries, battery management systems",
      "url": "https://www.udemy.com/course/battery-management-systems/",
      "bio": "A comprehensive course on getting you started with batteries and battery management systems with a practical approach",
      "objectives": [
        "Foundations of lithium-ion batteries",
        "Foundations of battery management",
        "Foundations of electric vehicle batteries",
        "Practical understanding of batteries and battery management systems"
      ],
      "course_content": {},
      "requirements": [
        "No prior experience is needed"
      ],
      "description": "There are no pre-requisites to this course and no previous knowledge of Battery Technology or Battery Management Systems is needed.\nAre you looking for a successful career in the Electric Vehicle / Battery Technology industry?\nAre you a startup creating products and services for the EV / BMS industry?\nAre you an established business in the EV industry looking to up-skill your staff?\nAre you a university or college looking to train students for the EV industry?\nAre you a student aspiring for a fulfilling career in the EV industry?\n\n\nHERE'S WHAT IS INCLUDED IN THIS COURSE\n\nMODULE 1 - WHAT IS A BMS, IS IT NECESSARY?\nIn this module, you will learn what a Battery Management System (BMS) is and why it is necessary in certain types of products.\n\n\nIntuitively understand what is inside a BMS\nWhat type of products need a BMS\nCan you ship a product without a BMS\nDo all battery types need a BMS\n\nMODULE 2 - DEEP DIVE INTO BMS HARDWARE AND IDENTIFYING COMPONENTS\n\nWhat hardware sections are in a BMS\nDive into a BMS schematic to understand its components\nHow to identify the parts of a vehicle BMS\nHow to identify the parts of a stationary storage BMS\n\nMODULE 3 - HOW DOES THE BMS SOFTWARE WORK TOGETHER WITH THE HARDWARE\n\nWhat is the difference between firmware, hardware and software\nWhat role does software play in a BMS\nHow does the BMS firmware work with the hardware to measure voltage\nHow does the BMS firmware work with the hardware to measure current\nHow does the BMS firmware work with the hardware to measure temperature\n\n\nMODULE 4 - BMS TECHNOLOGY COMPLEXITY\n\nWhat decides the rating of components in a BMS\nDo all products have similar BMS\nFailure mitigation mechanisms of a BMS\n\nMODULE 5 - DEBUGGING OF BMS SYSTEMS\n\nIdentifying failures in a BMS\nDebugging hardware failures\nDebugging firmware failures\nDevelop experience in failure analysis",
      "target_audience": [
        "Students looking to get a job in the electric vehicle or battery industry",
        "Professionals looking to get a job in the electric vehicle or battery industry"
      ]
    },
    {
      "title": "FreeRTOS applied to STM32 microcontrollers",
      "url": "https://www.udemy.com/course/freertos-for-stm32f4-microcontrollers/",
      "bio": "STM32 FreeRTOS implementations and proof of concept examples",
      "objectives": [
        "Implement different FreeRTOS API functions on STM32F4 microcontrollers",
        "Explore and understand the mainly FreeRTOS API concepts",
        "Develop a bunch of examples appling API functions as Queues, Semaphores, Software Timers, Event Groups etc",
        "Analyse, using SEGGER SystemView trace tool, the RTOS behaviour for the developed examples"
      ],
      "course_content": {},
      "requirements": [
        "STM32F407 Development board + ST-Link Programmer + USB Serial Converter"
      ],
      "description": "Understand FreeRTOS main characteristics, its behavior, setup possibilities etc.\n\n\nImplement functions as queues, semaphores, software timers, task notification, event groups and mutex. Comprehend their behavior using proper tools and integrating microcontroller peripherals such as uart and gpio.\n\n\nReference online bibliography is also explored in order to assist the student during the training and for future consultancy.\n\n\nThe Training examples will be developed using STM32CubeIDE, the resulting behavior will be analyzed using SEGGER SystemView and Termite softwares.\n\n\nSTM32CubeIDE is an integraded development tool you can develop different programs for STM32 microcontrollers its advanced C or C++ development platform with bunch of peripheral configuration, code generation, compilation and also debbuging features for all STM32 microcontrollers and microprocessors.\n\n\nSEGGER SystemView is a software used to analyze the embedded rtos application behaviour executing on target. All necessary steps to install and modify necessary software files in order to collect rtos events at ram and save the data to an output file will be covered in the training.\n\n\nIn the hardware side, we gonna use STM32F407ZGT6 Development board. We also need a ST-Link programmer if we not choose the STM32F4Discovery development board, as this board comes with a ST-Link/V2 embedded debug tool. And a usb/serial adaptater.",
      "target_audience": [
        "Programmers",
        "Engineers",
        "Technicians",
        "Electronic hobbyists"
      ]
    },
    {
      "title": "Antenna Design Using PathWave Advanced Design System (ADS)",
      "url": "https://www.udemy.com/course/antenna-design-pathwave-advanced-design-system-ads-rahsoft-rahae448/",
      "bio": "Become an Antenna Design Engineer Guru using PathWave Advanced Design System (ADS)- RAHAE448 Rahsoft Antenna Certificate",
      "objectives": [
        "Design of Inset feed patch antenna basics",
        "Schematic and layout design basics",
        "Different type of slot antenna basics",
        "Role of slots on patch basics",
        "Mobile phone antenna design basics",
        "Defective ground antenna",
        "Distributed Impedance matching methods",
        "Inset feed patch antenna with quarter-wave transformer feedline",
        "WLAN antenna design basics",
        "Filtering antenna design basics",
        "Dual feed microstrip patch antenna basics",
        "2x2 Antenna Array design basics",
        "MIMO antenna design basics"
      ],
      "course_content": {},
      "requirements": [
        "Antenna Fundamentals RAHAE102",
        "Electromagnetics RAHAE101",
        "This is a hand on course using ADS software . Academics behind Antenna is taught in another course.",
        "Keysight ADS software will not be provided by us but you can request 1 month free trial from Keysight directly and renew it (we have not seen a student get rejected on the renewal)"
      ],
      "description": "Course Description:\nDive into the captivating world of antenna design with RAHAE 448, an advanced course that focuses on Antenna Design Fundamentals using the powerful Keysight PathWave Advanced Design System (ADS). In this course, you'll embark on a journey into the intricacies of antenna design, exploring topics such as Inset feed microstrip patch antennas, defective ground structures, mobile phone antenna design, impedance matching techniques, quarter wave transformers, antenna arrays, and MIMO antenna design.\nCourse Highlights:\nInset Feed Microstrip Patch Antenna Design: Learn the art of designing microstrip patch antennas with inset feeds, a crucial component in modern RF systems.\nDefective Ground Structure and Its Role: Understand the impact of defective ground structures on antenna performance and how to optimize their design.\nMobile Phone Antenna Design: Explore the intricacies of designing antennas for mobile phones, considering space and performance constraints.\nImpedance Matching Methods: Master various impedance matching techniques to ensure efficient power transfer between the antenna and the transmission line.\nQuarter Wave Transformer: Learn the principles of quarter-wave transformers and their applications in antenna design.\nAntenna Array Design: Delve into the world of antenna arrays, understanding their benefits and design considerations.\nMIMO Antenna Design: Explore Multiple Input, Multiple Output (MIMO) antenna design techniques for enhanced wireless communication performance.\nTarget Audience:\nThis course is designed for professionals working in the dynamic field of RF/Antenna engineering. It's also an ideal choice for:\nAntenna Engineers: Elevate your antenna design skills and stay ahead in the ever-evolving world of RF and antennas.\nPostgraduate Students: Enhance your academic journey by gaining practical knowledge of advanced antenna design principles.\nResearch Scholars: Propel your research endeavors in the RF/Antenna domain by mastering cutting-edge design techniques.\nPrerequisites:\nPlease note the following prerequisites to ensure a smooth learning experience:\nThis is not an entry-level Antenna Design course. A background in Antenna and Electromagnetics or prior completion of RAHAE101 and RAHAE102 is highly recommended to grasp the course content effectively.\nAccess to the Keysight PathWave Advanced Design System (ADS) software is essential for this course. Students are responsible for requesting the software directly from Keysight. Fortunately, many students have successfully obtained a 1-month free trial from Keysight, ensuring you have the necessary tools to excel in this course.\nUnlock the potential of advanced antenna design with RAHAE 448. Gain hands-on experience with industry-standard software, tackle complex design challenges, and become a sought-after expert in the RF/Antenna field. Enroll today and take your career to new heights in the world of wireless communication and technology.",
      "target_audience": [
        "This course is set for professionals working in the area of RF/Antenna field.",
        "Research scholars working in the field of RF/Antenna",
        "Post graduate students taking antenna course",
        "Antenna Engineers"
      ]
    },
    {
      "title": "Embedded Systems Challenges: Things You Must Know",
      "url": "https://www.udemy.com/course/embedded-systems-challenges-ess-things-you-must-know/",
      "bio": "Embedded System challenges and concepts you need to understand before starting your next embedded system project",
      "objectives": [
        "Learn about the basics of embedded systems and electronics",
        "Understand what an embedded system is",
        "Learn about the various different types of embedded system architectures",
        "Learn how computers are different from embedded systems"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Computing Systems and Embedded Systems",
          "Embedded Systems Challenges",
          "Understanding Embedded System Challenges",
          "Quiz",
          "ESS SoB and SoC",
          "Microcontrollers Processors and CPU",
          "Exploring the Core Concepts of Embedded Systems",
          "Summary",
          "Reading Material"
        ],
        "CISC and RISC": [
          "Section Intro",
          "CISC and RISC",
          "Summary",
          "Reading Material"
        ],
        "Processor Clock Cycle": [
          "Section Intro",
          "Fetch Decode Execute",
          "Fetch Decode Execute Example",
          "Quiz",
          "Summary",
          "Reading Material"
        ],
        "Memory Types": [
          "Section Intro",
          "RAM",
          "ROM",
          "More about Memory NVRAM",
          "Quiz",
          "Summary",
          "Reading Material"
        ],
        "Harvard Architecture Vs Von Neoman Architecture": [
          "Section Intro",
          "Harvard Architecture Vs Von Neoman Architecture",
          "Comparing Harvard and von Neumann Architectures in Embedded Systems",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Embedded Systems Fundamentals and Challenges Practice Test"
        ],
        "who we are ?": [
          "who we are?"
        ],
        "Course Project": [
          "Course Project",
          "Addressing Real-World Embedded Development Challenges"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic experience in Embedded Systems",
        "A Will to apply, not just watch"
      ],
      "description": "What is Embedded System?\nEmbedded Systems is a broad term that can refer to anything from small-to-large scale systems such as microwaves and cars with computer components, to small microcontrollers like the Arduino. There are many challenges with these systems that can be difficult to learn for people unfamiliar with the concepts.\nIt's really important for anyone who wants to work in embedded systems design to have a solid understanding of how Embedded Systems work.\nWhat you will learn in this course:\nComputing Systems and Embedded Systems\nEmbedded Systems Challenges\nESS SoB and SoC\nMicrocontrollers, Processors, and CPU\nCISC and RISC\nFetch Decode Execute Example\nMemory Types: RAM and ROM\nMore about Memory: NVRAM\nHarvard Architecture Vs Von Neumann Architecture\nWhy you should take this course?\nYou will learn the basics of embedded systems, and how to get started with them.\nLearn the things you must know to become a successful programmer.\nLearn how to control hardware devices that may not have a human interface, such as motors or LEDs, or other similar components.\nDiscover the secrets behind how these products work and understand their limitations.\nLearn what hardware is needed to create your design for an embedded system.\nYou will be able to control systems used in all situations where humans interact with the world.\nThere are many challenges to designing embedded systems. With the growth of more complex systems, there is a need for engineers to learn new skills alongside new fields of study. One must also consider the environment in which the embedded system will be running. This can include temperature ranges, shocks, vibration levels, etc. Manufacturers often use environmental testing equipment to test their products for these factors before releasing them to market.\nEmbedded System challenges and concepts you need to understand before starting your next embedded system project. Join and Enroll Now to know more.\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and provide guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming and in particular for the world of Arduino, PIC Microcontroller, and Raspberry Pi has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nEnroll now and take your embedded systems knowledge to the next level!\nFAQ Section:\nDo I need any prior experience?\nNo prior experience is necessary. This course is designed for beginners.\nWhat materials do I need?\nYou will need a computer and an internet connection.\nHow long do I have access to the course?\nYou will have lifetime access to the course materials.\nWhat You Will Learn\nBasics of embedded systems.\nUnderstanding different types of memory and their uses.\nHow to control hardware devices.\nConcepts of microcontrollers, processors, and CPUs.\nDifferences between CISC and RISC architectures.\nThe Fetch Decode Execute cycle.\nWho Is This Course For\nBeginners interested in embedded systems.\nHobbyists and makers looking to expand their skills.\nEngineers and developers seeking practical knowledge in embedded systems.\nRequirements\nBasic understanding of electronics.\nA computer with an internet connection.",
      "target_audience": [
        "Anyone Interested in Learning Infrared control with and without Microcontroller",
        "Anyone Interested in Reading Infraraed Signals from any remote Control that you have inside your house and get the code for each button easily",
        "Anyone Interested in Embedded Systems"
      ]
    },
    {
      "title": "The Complete AI Guide: Generative AI and ChatGPT",
      "url": "https://www.udemy.com/course/the-complete-ai-guide-generative-ai-and-chatgpt/",
      "bio": "Master Generative AI and ChatGPT from Scratch. Only Generative AI course that you need!",
      "objectives": [
        "You will learn the complete Generative AI in this course",
        "You will learn ChatGPT in this course",
        "You will learn every concept from very basics",
        "You will learn Generative and Other Generative Features in this course"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Generative AI core components",
          "Building Resources for Generative AI",
          "Create a list store in Generative AI",
          "LangChain in Generative AI"
        ]
      },
      "requirements": [
        "You do not have any knowledge on AI. You will learn everything from Scratch"
      ],
      "description": "This course will teach you the complete generative AI from basics to More advanced topics. You will be equipped the complete Generative AI knowledge. Generative AI is revolutionizing the way we create content, solve problems, and interact with technology. This comprehensive course on Generative AI is designed to introduce learners to the foundational concepts, tools, and applications of this transformative field. Aimed at students, professionals, creatives, and tech enthusiasts, the course offers a balanced mix of theory and hands-on practice to build a solid understanding of how machines can generate human-like content across various domains.\nBy the end of the course, participants will have the ability to not only understand how generative AI models function but also apply them in meaningful ways. They will be prepared to create AI-powered content, explore entrepreneurial opportunities, or contribute to AI projects in professional settings.\nThis Generative AI course offers a forward-thinking learning experience that combines creativity with technology. It empowers individuals to harness the power of AI for ideation, automation, and content creation, shaping the future of work and innovation. Whether you're a beginner exploring AI or a professional looking to upskill, this course provides the knowledge and confidence to thrive in the era of intelligent machines.",
      "target_audience": [
        "This is for those who want to master Generative AI and ChatGPT from Scratch"
      ]
    },
    {
      "title": "xv6 operating system kernel design from scratch in C program",
      "url": "https://www.udemy.com/course/xv6-operating-system-kernel-design-from-scratch/",
      "bio": "practical hands-on design of the xv6 operating system kernel",
      "objectives": [
        "How to setup xv6 kernel pagetable using virtual memory adressing",
        "How manage shared data memory using spin locks and sleep lock",
        "How to enable timed operations in operating system using timer interrupt",
        "How to enable concurrent disk access using virtio memory mapped io virtualization",
        "How to generate operating systems, system calls",
        "How to schedule operating systems process using round robin technique",
        "How to link display and keyboard hardware using the 16550a UART"
      ],
      "course_content": {
        "Introduction to machine mode": [
          "1. Introduction to kernel development",
          "download course zipped files",
          "xv6 installation and test",
          "2. System memory setup using kernel .ld and how to setup system stack",
          "3 How to read machine mode status register and setup timer interrupt in timervec"
        ],
        "Virtual memory addressing and page table allocation setup in supervisor mode": [
          "4. How to protect shared memory data using spinlocks and sleeplocks",
          "5. How to connect 16550a uart as console device for keyboard and display",
          "6. How to setup kernel page table (virtual memory addressing)",
          "7. How to map page table virtual address to physical memory using KALLOC",
          "8. Virtual memory addressing 2"
        ],
        "Traps and interrupt processing": [
          "9. How to setup platform level interrupt controller PLIC",
          "10. How to setup and process traps and interrupts using the sstaus register",
          "11. How to process traps and interrupts in user mode using uservec and usertrap"
        ],
        "Disk Management": [
          "12. Hardware virtualization using virtio memory mapped io library",
          "13. How to read/write between kernel and host system",
          "14. Buffer management - concurrent memory access using buffers",
          "15. Logging - disk access abstraction layer",
          "16. how to map memory blocks using bitmapping of data blocks"
        ],
        "file handling and management": [
          "17. file and directory structures, and how to access them using inodes",
          "18. file handling technique - file allocation, read, write, open, close, stat",
          "19. pipe handling technique - pipe read, write, open, close, allocation"
        ],
        "Process management": [
          "20. How to manage a process using procinit, allocproc, fork, reparent, userini",
          "21. How to setup system call"
        ]
      },
      "requirements": [
        "basic C or C++ experience"
      ],
      "description": "The xv6 is a multi-core processor kernel designed for educational purposes. This operating system kernel runs successfully on qemu virtual machine and has options for extending the features. In this 8hrs long course, you will learn how to write the C program code from scratch and understand several operating systems concepts used including:\n1. How to initialize kernel subsystems - e.g process, memory, disk, interrupts, trap, mode.\n2. You learn the different kernel operating modes - machine mode, supervisor mode, user mode and how to switch between the modes.\n3. How to protect shared memory data using spin locks and sleep locks on a multi-core processor.\n4.  Hardware virtualization - How to link external hardware e.g keyboard and display using 16550a UART chip.\n5. Virtual memory addressing and how virtual memory is mapped to physical memory.\n6. How to generate system calls from user mode including how its transition ad execution in supervisor mode\n7. How timed operations like sleep(), scheduling is managed in an operating system using timer interrupts.\n8. Disk management techniques including buffering, bit-mapping, logging etc.\n9. How hardware virtualization is used enable disk access from virtual machine to host system using VIRTIO memory mapped registers.\n10. File management technique - how to store files and directories as inodes, pipes and device files on disk and in memory.\n11. Process management and scheduling techniques - process creation, process allocation and process manipulation techniques",
      "target_audience": [
        "beginner to expert C , C++ and kernel developers"
      ]
    },
    {
      "title": "Arduino for Beginners with Grove",
      "url": "https://www.udemy.com/course/arduino-getting-started-with-grove/",
      "bio": "The perfect course for beginners who want to learn electronics and programming without worrying about wires.",
      "objectives": [
        "Arduino programming",
        "Sensors to measure temperature, humidity, atmospheric pressure, light intensity, sound.",
        "How to use buttons, LED and potentiometer.",
        "How to use a graphics OLED screen.",
        "How to combine components and create interesting gadgets."
      ],
      "course_content": {
        "Introduction": [
          "01.10 What is this course about?",
          "01.20 Software you will need",
          "01.30 Hardware you will need",
          "01.40 A quick review of the Grove Beginner Kit",
          "01.50 How to get the most out of this course"
        ],
        "Control an LED with the potentiometer and button": [
          "02.10 What is this mini project about?",
          "02.20a Basics: How to use the LED - DigitalWrite",
          "02.20b Basics: How to use the LED - AnalogWrite",
          "02.30 Basics: How to use the button",
          "02.40 Basics: How to use the potentiometer",
          "02.70 Experiment 1: Control the LED blink rate",
          "02.80 Experiment 2: Control the LED brightness"
        ],
        "Make noise with buzzer, potentiometer and button": [
          "03.10 What is this section about?",
          "03.20 Basics: How to use the buzzer",
          "03.30 Experiment 1: Make random noises",
          "03.40 Experiment 2: Frequency sweep with potentiometer",
          "03.50 Experiment 3: Music with button"
        ],
        "Draw text in the OLED": [
          "04.10 What is this mini project about?",
          "04.20 How to use the OLED",
          "04.30 Experiment 1: Draw text",
          "04.40 Experiment 2: Draw text with potentiometer",
          "04.50 Experiment 3: Draw a counter"
        ],
        "Draw graphics in the OLED": [
          "05.10 What is this mini project about?",
          "05.20 How to draw graphics on the LCD",
          "05.30 Experiment 1: Draw boxes",
          "05.40 Experiment 2: Draw circles",
          "05.50 Experiment 3: Draw lines",
          "05.60 Experiment 4: Draw pixels"
        ],
        "Control a servo motor": [
          "06.10 What is this mini project about?",
          "06.20 Experiment 1: How to use the servo motor, servo sweep",
          "06.40 Experiment 2: Servo control with potentiometer",
          "06.50 Experiment 3: Servo control with pre-programmed moves",
          "06.60 Experiment 4: Servo control with OLED position indication",
          "06.70 Experiment 5: Servo control with OLED position indication improved"
        ],
        "Light and Relay": [
          "07.10 What is this mini project about?",
          "07.20 How to use the light sensor",
          "07.30 Experiment 1: Show light sensor data in LCD",
          "07.40 Experiment 2: Determine bright or dark",
          "07.50 How to use a relay",
          "07.60 Experiment 3: Turn on a flash light using the light sensor and a relay"
        ],
        "Sensors: Temperature, humidity and air pressure": [
          "08.10 What is this mini project about?",
          "08.20 Experiment 1: How to use the temperature and humidity sensor DHT11",
          "08.30 Experiment 2: Show temperature, humidity in OLED with DHT11",
          "08.40 Experiment 3: How to use the BMP280",
          "08.50 Experiment 4: Show air pressure and temperature in the OLED"
        ],
        "Sensors: Sound": [
          "09.10 What is this mini project about?",
          "09.20 Experiment 1: How to use the sound sensor",
          "09.30 Experiment 2: Show sound sensor data in the OLED",
          "09.40 Experiment 3: Turn on an LED with a loud sound"
        ],
        "Accelerometer": [
          "10.10 What is this mini project about?",
          "10.20 Experiment 1: How to use the accelerometer",
          "10.30 Experiment 2: Show acceleration sensor data in OLED",
          "10.40 Experiment 3: Show acceleration animation"
        ]
      },
      "requirements": [
        "A computer.",
        "The Grove Beginners Kit for Arduino."
      ],
      "description": "This course will introduce you to the Arduino by teaching you how to use all of the hardware that comes with the innovative Grove Beginner Kit for Arduino.\nThe Grove Beginner Kit consists of a single printed circuit board which contains an Arduino board and many common sensors and actuators.\nThis Kit is ideal for beginners who want to learn electronics and programming without worrying about wires and loose connections.\nThe main objective of this course is to teach you how to use all of the hardware that is included in the Grove Beginner Kit for Arduino in addition to a few extra components.\nFor each component, you will learn how to use it on its own, and then how to combine it with other components to create interesting gadgets and experiments.\nThe innovation of the Grove Beginner Kit is that while all of its hardware comes as distinct modules, they are already connected to the included Arduino via traces on the printed circuit board.\nThis means that you do not need to do any wiring at all.\nThe various sensors and actuators, even the bitmap display, are already connected and ready to use.\nAs a result, in this course, you will not need to do any wiring to use any of the components on the Grove Beginner Kit printed circuit board. This will save you a lot of time without affecting the quality of your learning.\nThanks to the Grove kit from Seeed Studio, you learning will be better because you will be able to concentrate on the software programming part, and on being creative.\nThis course is practical.\nYou will learn by completing a series of mini-projects.\nEach mini-project is small enough so that you can complete it in a single session.\nMost mini-projects guide you through a series of improvements so that you can gently learn new knowledge based on knowledge that you gained in previous steps.\nThis ensures that there will be no gaps in knowledge, and no frustration.",
      "target_audience": [
        "Anyone interested to learn how to use the Arduino.",
        "STEM teachers looking for classroom-friendly teaching resources and hardware."
      ]
    },
    {
      "title": "ESP32: Sending SMS with ESP32 without GSM",
      "url": "https://www.udemy.com/course/esp32-sending-sms-using-twilio-with-esp32/",
      "bio": "How to Send SMS without GSM Module using ESP32",
      "objectives": [
        "Learn How to Send SMS without GSM Module using ESP32",
        "Learn how to Test our ESP32 development board on Wokwi with our computer PC.",
        "Learn how to Setup Code for ESP32 using Twilio",
        "Learn the methods on sample codes",
        "Learn the methods on Push Button",
        "Learn the methods on Sensor"
      ],
      "course_content": {},
      "requirements": [
        "Arduino IDE with ESP32 Board manager",
        "Internet Connectivity",
        "Wokwi(Optional for Simulation)",
        "COMPUTER PC"
      ],
      "description": "Ready to take your ESP32 projects to the next level? This Sending SMS Using Twilio with ESP32 course provides a comprehensive and hands-on guide for mastering sending SMS messages using Twilio APIs with the mini marvel that is the ESP32 development board. Through this course, you will learn how to connect your ESP32 development board to Twilio and create powerful applications that send and receive text messages from anywhere in the world!\nThis course is the perfect way to get started with using a popular communication platform. With this course, you will be able to quickly and easily incorporate SMS messaging into your projects. The comprehensive curriculum is designed to help you learn how to use the ESP32 microcontroller to send SMS messages using Twilio. You will gain hands-on experience in setting up and programming an ESP32 board for sending messages, walking through step-by-step instructions on how to configure the board and connect it to a Wi-Fi network, as well as how to use Twilio's API for sending text messages.\nUser Testimonials and Social Proof\n\"This course made integrating SMS functionality into my ESP32 projects so easy! The instructions were clear and the examples were very practical.\" - Mark D.\n\"As a beginner, I found the course very accessible. The step-by-step guidance was incredibly helpful.\" - Sarah K.\nAn Author Bio Showing Off Credentials Educational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\"\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and provide guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming and in particular for the world of Arduino, PIC Microcontroller, Rasberry Pi has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offer Course on Circuit Design, Simulation, and PCB Fabrication Arduino, PIC Microcontroller, and Raspberry Pi Programming in C, Python, and other programming languages PLC Industrial Programming and Automation 3D Design and Simulation ESP and IoT World\nA Single Powerful CTA Enroll Now and start sending SMS with your ESP32 today!\nFAQ Section Do I need prior experience with ESP32 to take this course? No, this course is designed for beginners as well as those with some experience.\nWhat hardware do I need for this course? You will need an ESP32 development board, a computer, and an internet connection.\nIs there any prerequisite knowledge required? Basic programming knowledge is recommended but not required.\nWhat You Will Learn\nHow to send and receive SMS messages with your ESP32 board\nHow to use the popular Twilio service for messaging\nHands-on experience in coding and manipulating text messages\nTroubleshooting techniques for common issues\nWho Is This Course For\nBeginners in embedded development\nHobbyists and enthusiasts looking to integrate SMS messaging into their projects\nDevelopers seeking to expand their skills with ESP32 and Twilio\nAnyone interested in learning about IoT and communication technologies\nRequirements\nBasic programming knowledge (recommended but not required)\nESP32 development board\nA computer with an internet connection\nTwilio account setup (instructions provided in the course)",
      "target_audience": [
        "engineers",
        "students"
      ]
    },
    {
      "title": "VLSI DFT Basics: From Industry Perspective",
      "url": "https://www.udemy.com/course/vlsi-dft-basics-from-industry-perspective/",
      "bio": "The purpose of DFT testing in VLSI along with industry standard DFT implementation flows",
      "objectives": [
        "The purpose of DFT testing in VLSI and its role in reliable chip manufacturing",
        "The chip design flow and how DFT integrates into chip design flow",
        "Common manufacturing defects and fault models (stuck-at, transition, IDDQ, path delay)",
        "Introduction to core DFT techniques including SCAN, MBIST, and Boundary Scan",
        "How analog IPs are tested — a topic rarely covered in other courses",
        "Never taught before industry-standard DFT implementation flow used in real chip projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "The Purpose of Testing (Why?)": [
          "Chip Design Flow-RTL to GDSII",
          "Purpose of Testing",
          "Types of Testing"
        ],
        "The Target of Testing (What?)": [
          "Manufacturing Defects",
          "Fault Modeling and Types",
          "Stuck-at Fault Model",
          "Transition Fault Model",
          "IDDQ Fault Model",
          "Path Delay Fault Model",
          "Cell-Aware Fault Model"
        ],
        "The Basics of Testing Methods (How?)": [
          "Introduction to Basics of Testing Methods Section",
          "Introduction of Basics of Testing Methods",
          "Building Blocks of Chip",
          "Memory BIST (MBIST)",
          "Boundary Scan Diagnosis (BSD)",
          "SCAN",
          "Analog IPs Testing"
        ],
        "Basic DFT Implementation Flows used in Industry": [
          "Basic DFT Implementation Flows used in Industry",
          "Basic SCAN Insertion Flow",
          "MBIST Insertion Flow",
          "BSD Insertion Flow",
          "Analog IP Test Mode Insertion Flow",
          "Different Tools Usage in DFT"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Test your knowledge": [
          "Test your knowledge of DFT basics"
        ]
      },
      "requirements": [
        "Basic digital logic design knowledge (logic gates, flip-flops, combinational vs. sequential circuits)",
        "Familiarity with HDL (Verilog or VHDL) at an introductory level",
        "Basic awareness of the VLSI design flow (RTL to GDSII)",
        "General understanding of semiconductor basics (what is a chip, role of transistors, CMOS)",
        "Comfortable with timing concepts such as setup/hold, clock, and reset"
      ],
      "description": "VLSI DFT Basics: From Industry Perspective\n\n\nUnlock the world of Design-for-Test (DFT) with this industry-oriented course designed for engineers, graduate students, and VLSI enthusiasts. DFT is a critical part of modern chip design, ensuring that your silicon is manufacturable, reliable, and testable.\nIn this course, you’ll learn the concepts and methods used by top semiconductor companies, presented in simple, easy-to-understand language. Unlike traditional courses, this course also covers analog IP testing and DFT implementation flows—a topic often missing in standard DFT training.\n\n\nYou’ll gain hands-on understanding of:\nWhy testing is crucial and the goals it serves\nThe types of manufacturing defects and fault models\nCore DFT methods including SCAN, MBIST, and boundary scan\nHow DFT is integrated into the industry-standard chip design flow\nWhether you’re a fresh graduate, RTL/backend engineer, verification engineer, or aspiring DFT professional, this condensed curriculum delivers months of industry knowledge in just a few hours.\nBy the end of this course, you’ll be ready to understand basics of DFT and DFT implementation flows used in industry in real-world chip designs.\nThis course was designed personally by me as it took me months to understand about VLSI DFT and went through so many books, trainings, user guides, and a lot more. I have condenesed all of my months of learning into this short course, which I also present in chip companies.",
      "target_audience": [
        "Undergraduates, fresh graduates or early-career engineers looking to build a foundation in DFT",
        "RTL, synthesis, and physical design (place & route) engineers seeking DFT awareness",
        "DFT engineers and flow developers aiming to strengthen foundational knowledge",
        "Graduate students aspiring to build a career in the DFT domain"
      ]
    },
    {
      "title": "CPU Overclocking: Unlock Your Processor's Hidden Potential",
      "url": "https://www.udemy.com/course/overclock/",
      "bio": "Learn How to Overclock CPU Processor Functions; Safely Manipulate Core Frequencies and Increase Overall PC performance.",
      "objectives": [
        "Overclock CPU Chips",
        "Manipulate CPU Attributes",
        "Test Computers for Total Stability",
        "Properly Optimize for Cooling",
        "Execute System Benchmark Tests"
      ],
      "course_content": {
        "Introduction": [
          "So, What Is Overclocking?",
          "Real-world Advantages of Overclocking"
        ],
        "Equipment Check: Getting Ready to Tweak": [
          "In-depth Look at CPU Coolers",
          "Quick Look at Various Cooling Options",
          "Installing Aftermarket Cooler"
        ],
        "Pre-Test": [
          "Required Software",
          "Stress Test"
        ],
        "Navigating BIOS & Frequency Manipulation": [
          "Accessing Your BIOS",
          "Are you ready to start manipulating CPU frequencies?",
          "In-Depth Analysis of Clock Speed (FSB) x Multiplier",
          "Establishing Stable Core Voltage / VCore"
        ],
        "Running Benchmarks": [
          "Further Testing"
        ],
        "Wrap Up": [
          "Working With Your Overclocked CPU"
        ]
      },
      "requirements": [
        "Patience",
        "Basic Math Skills",
        "A Windows PC"
      ],
      "description": "Join 1800+ Satisfied Students!\nWhat is Overclocking?\n- 'Overclocking' refers to the fundamental process of increasing the processing speed of computer hardware. Mainly, the CPU (Central Processing Unit)\nHow many times has your computer slowed down when trying to execute an important task? Ever have your applications / programs freeze on you?\nA very effective way to increase the speed of your computer is by carefully and precisely increasing your CPU's processing frequencies. If these terms seem unfamiliar, don't worry. In this course, I will take you by the hand and lead you through this entire process; from learning about processing frequencies to safely testing every modification along the way, as to make sure your computer will remain stable. No matter what you throw at it!\nOnce your computer is overclocked to an appropriate speed, you'll be surprised as to what your machine will be capable of! You'll reap the benefits of everything from;\nQuicker Application Start-up times\nFaster Audio/Video Render times\nIncreased Time Efficiency for Compiling Programs/Files\nSmoother Overall PC Performance\nFaster Load Times\nI'll be showing you how to do it all with the best CPU Overclocking software, and yes, they're all free.\nIf you're looking to boost your PC's performance with a CPU overclock, you've arrived at the perfect destination!\n\nGo ahead, Enroll now!",
      "target_audience": [
        "Anyone who wants more power out of their PC",
        "PC Gamers",
        "Video Editors / Photoshop Wizards",
        "Performance Enthusiasts"
      ]
    },
    {
      "title": "Computer Hardware Engineering Certification Training",
      "url": "https://www.udemy.com/course/computer-hardware-engineering/",
      "bio": "Learn Hardware, Computer Architecture & Instructions, Processors, Memory, Monitors, Printers, Disk Drives, NTFS, CD ROM.",
      "objectives": [
        "Learn basic concepts of Hardware and Computer Architecture",
        "Understand how Computer Instructions work",
        "Learn the architecture of Processors, Memory, Cache, Disk Drives, NTFC, CD ROM, and other computer components",
        "Describe the working of Monitors and Printers",
        "Take a deep-dive into Processor architecture & specifications",
        "Understand Communication Buses & Bridges"
      ],
      "course_content": {
        "Basics of Hardware": [
          "Basics of Hardware"
        ],
        "Basic Computer Architecture": [
          "Basic Computer Architecture"
        ],
        "Computer Instructions": [
          "Computer Instructions"
        ],
        "Infix Postfix Stack": [
          "Infix Postfix Stack"
        ],
        "Binary Numbers": [
          "Binary Numbers"
        ],
        "Processors": [
          "Processors"
        ],
        "Memory": [
          "Memory"
        ],
        "Cache": [
          "Cache"
        ],
        "Memory Type Selection": [
          "Memory Type Selection"
        ],
        "Disk Drives": [
          "Disk Drives"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Computer Hardware Engineering course by Uplatz.\n\n\nComputer Hardware Engineering involves design, development, and testing of computer systems and components. Computer hardware engineers work in organizations and research laboratories that build and test various types of computer models. Most work in computer systems design services and in manufacturing of hardware. In summary, computer hardware engineers help to accelerate new computer technology by creating advancements in computer hardware. They develop computer systems and equipment such as circuit boards, routers, processors, and memory devices. Hardware engineering includes design and supervision of the manufacturing and installation of computer systems and related products.\nComputer hardware engineers often spend considerable time solving problems, guiding installation, and conducting computer product testing. With degrees and experience, new computer hardware engineers can qualify for their first positions, but young graduates typically struggle to gain professional experience. Computer hardware engineering field is extremely competitive, so candidates must set themselves apart with excellent academic performance and certifications. Computer hardware engineers often perform an array of diagnosis, design, and testing tasks, depending on employer needs. They use creativity to design computer equipment and hardware. Computer hardware engineers also employ analytical and problem-solving skills as they diagnose and fix problems with hardware designs, media, and storage devices. Often communicating with software developers, computer hardware engineers work to ensure compatibility between computer hardware and software. In this era of quick computer advancement, hardware engineers enjoy opportunities to work on exciting emerging technology.  They utilize their imagination to build computer hardware and software. As they analyze and solve problems with hardware designs, media, and storage devices, computer hardware engineers use analytical and problem-solving abilities. Computer hardware experts frequently communicate with software developers to guarantee that computer hardware and software are compatible.\n\n\nThis computer hardware engineering course provides necessary knowledge and skills required to make a successful entry into the hardware, systems & networking domain. Hardware engineering is a good choice begin a career, and continuing education resources such as certification programs, online learning sites, and professional organizations for computer hardware engineers.  Because this sector is so competitive, individuals must stand out by having strong academic credentials and certifications. Depending on the demands of the business, computer hardware engineers may conduct a variety of diagnosis, design, and testing jobs.\n\n\nCourse Objectives\nCreate schematics of computer equipment to be produced and write blueprints to design new computer hardware systems, components, and peripherals.\nTest the computer equipment they develop, including electronic circuits, assemblies, and other electrical components, evaluate the findings, and tweak the design as required.\nOversee the fabrication of the actual components that allow computers to function.\nUpdate current computer systems to ensure that they are compatible with the most recent software releases.\nRecommend computer systems and peripherals to end-users depending on their business requirements.\n\n\nComputer Hardware Engineering - Course Curriculum\nBasics of Hardware\nBasic Computer Architecture\nComputer Instructions\nInfix Postfix Stack\nBinary Numbers\nProcessors\nMemory\nCache\nMemory Type Selection\nDisk Drives\nNTFS\nCD ROM\nPipelining\nInstruction Level Parallelism (ILP)\nMonitors\nPrinters\nCommunication Buses & Bridges\nProcessor Specifications",
      "target_audience": [
        "Computer Hardware Engineers",
        "Hardware Design Engineers",
        "Beginners & newbies interested to become Computer Hardware Engineers",
        "Embedded Hardware Engineers",
        "Computer Hardware & Networking Engineers",
        "Anyone aspiring for a career in Computer Hardware Engineering",
        "Hardware Architects",
        "IT Hardware Engineers",
        "Hardware Testing Specialists",
        "Engineers - Hardware Development Engineering",
        "Software Engineers",
        "Server Engineers",
        "Computer Service Engineers",
        "Embedded Systems Engineers",
        "Hardware Engineers - Lead",
        "Hardware EE and Test Engineers",
        "Hardware/Software Architects"
      ]
    },
    {
      "title": "Unveil the Magic of Gaming — Powered by Arduino!",
      "url": "https://www.udemy.com/course/create-a-game-with-arduino-and-processing/",
      "bio": "Breathe Life into Your Games with Arduino Integration. Simple, Exciting, and Ingeniously Crafted for Absolute Fun!",
      "objectives": [
        "Designing a Game from Scratch using Processing with a score system, objects that move and hardware interaction with components inside the game",
        "Mixing Arduino Powerful hardware with Processing Powerful Software",
        "Control your main Game Character using an Arduino hardware Sensor Reading",
        "Add a scoring system and how to change your main character with different shapes",
        "Designing your own game and mix it with your Arduino board",
        "Create a link between a Game that you will design and code and an Arduino Hardware",
        "Hardware and Software Requirements",
        "Working Principle in brief",
        "Ultrasonic Sensor Working Principle",
        "Circuit Design and Connection",
        "Arduino Coding",
        "Processing Coding",
        "Pictures and Scoring System"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Exploring Game Design Concepts in an Arduino-Focused Interview"
        ],
        "Hardware and Software Requirements": [
          "Hardware and Software Requirements",
          "Download and Install Fritzing Software",
          "Download and Install Arduino IDE"
        ],
        "Ultrasonic Sensor Working Principle": [
          "Ultrasonic Sensor Working Principle"
        ],
        "Circuit Design and Connection": [
          "Circuit Design and Connection",
          "Circuit Schematic",
          "Hardware Connection"
        ],
        "Arduino Coding": [
          "Arduino Coding",
          "The Code"
        ],
        "Processing Code for Game Design": [
          "Initializing Variables",
          "Read Incoming Data",
          "Play Function",
          "Finishing Up",
          "The Code"
        ],
        "Practical Implementation and Code Testing": [
          "Testing Arduino",
          "Practical Testing the Gameplay"
        ],
        "Practice Test": [
          "Arduino and Ultrasonic Sensor Integration",
          "Presenting a Functional Arduino Game Prototype"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Programming",
        "A Will to apply, not just watch",
        "programming, basic electronics, and computer science fundamentals."
      ],
      "description": "Ever dreamed of bridging the thrilling world of games with the tangible realm of Arduino hardware? Welcome to a course that does precisely that!\nIn collaboration with the renowned Educational Engineering Team, this course unveils the seamless integration between the classic Flappy Bird-style gaming with the versatile Arduino board. Whether you're a gaming enthusiast or an Arduino hobbyist, this course brings the best of both worlds to your fingertips.\nHighlights:\nInteractive Gameplay: Control your game characters, from planes to birds, using the Arduino board.\nSensory Control: Dive deep into ultrasonic sensors and control in-game motions without ever touching your mouse or keyboard.\nCustomizability: Adapt the game's scoring system, swap out characters, and truly make the game your own.\nWhy This Course?\nHolistic Learning: Master Arduino programming, Processing, and even C++ in one comprehensive package.\nHands-On Approach: Practical sessions, from circuit design to coding, to ensure you not only learn but also create.\nFun While Learning: Embrace an innovative learning approach, where education meets recreation.\nCourse Contents:\nUnveiling Hardware and Software Essentials.\nUnraveling the Working Principle of Ultrasonic Sensors.\nDesigning and Connecting Circuitry.\nMastering the Art of Arduino and Processing Coding.\nAdvanced Topics: Introducing Images and Scoring Mechanisms in Gaming.\nYour Takeaway: By the end of this course, you won't just be a passive gamer or a conventional Arduino programmer. Instead, you'll wear the dual hat of a game developer, where you craft and control using Arduino. The world of interactive gaming awaits you!\nJoin the Revolution! Dive into a course that’s set to redefine how we perceive games and hardware interaction. Enroll today and embark on an unforgettable journey!\nUser Testimonials and Social Proof: \"This course is an incredible blend of gaming and Arduino. It made learning so much fun!\" - Chris H.\n\"A fantastic course for anyone looking to merge their passion for gaming with hardware programming. Highly recommend!\" - Lisa P.\nAn Author Bio: Ashraf, the founder of Educational Engineering Team, is a seasoned educator, Mechatronics engineer, electronics and programming hobbyist, and maker. With over 13 years of experience in teaching and practical projects, Ashraf's courses have helped over 250,000 people improve their skills and build successful careers.\nA Single Powerful CTA: Enroll now to start breathing life into your games with Arduino integration!\nFAQ Section: Q: Do I need any prior experience to take this course? A: No prior experience is necessary. This course is suitable for beginners and experienced individuals alike.\nQ: How quickly can I start creating Arduino-powered games? A: You can start creating games immediately after completing the relevant sections of the course.\nQ: Is there a money-back guarantee? A: Yes, Udemy offers a 30-day money-back guarantee if you're not satisfied with the course.\nWhat You Will Learn\nTechniques to integrate Arduino with gaming projects\nHow to use ultrasonic sensors for interactive game control\nMethods to customize game scoring systems and characters\nStep-by-step guidance on Arduino and Processing coding\nDesigning and connecting circuitry for gaming applications\nWho is This Course For\nGaming enthusiasts looking to enhance their projects with Arduino\nArduino hobbyists wanting to explore gaming applications\nBeginners seeking a fun and engaging way to learn Arduino\nDevelopers interested in merging hardware with gaming\nAnyone curious about interactive game control through sensors\nRequirements\nBasic computer skills\nInternet access\nNo prior coding or electronics experience needed\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Electronics Geeks",
        "Arduino Geeks",
        "Anyone interested in making amazing electronics Projects",
        "Anyone interested in making amazing Microcontroller Projects",
        "The course covers: programming, basic electronics, and computer science fundamentals.",
        "1. The Create a Game with Arduino and Processing course is perfect for those who want to start their own business as an online game programmer"
      ]
    },
    {
      "title": "Control PIC Microcontroller using a GUI via USB or RS232",
      "url": "https://www.udemy.com/course/pic-microcontroller-graphical-user-interface-usb-serial-rs232-control/",
      "bio": "Interface PIC Microcontroller using Serial Communication RS232 or USB and a Visual Interface",
      "objectives": [
        "Interface Microcontroller with Computer or Laptop via Serial Communication RS232 or USB",
        "Create a Visual Interface for Your System",
        "Interface PIC Microcontroller with Computer or Laptop via USB Port",
        "Create a Visual Interface for Your System to easily Control It",
        "Write a Code to Make PIC Microcontroller recognize USB and use it to send and receive data",
        "Control PIC Microcontroller using USB Port and a Computer",
        "Know how USB function and learn about it’s internal structure",
        "Write code for USB Interfacing",
        "Embed code in the design",
        "Program PIC Microcontroller like a champ",
        "Understand the principles of USB Interfacing and programming in PIC Microcontrollers",
        "Connect your PIC Microcontroller to PC or Laptop and control it using USB Interfacing",
        "Understand basic principles of USB Interfacing"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro:",
          "Introduction",
          "Integrating GUI Control with PIC Microcontroller",
          "What is a GUI",
          "Introduction to GUIs and Their Role in Microcontroller Control",
          "Section Summary:",
          "Reading Material:"
        ],
        "Important Note: Review System": [
          "Section Intro:",
          "Important Note: Review System",
          "Section Summary:",
          "Reading Material:"
        ],
        "Software Needed for This Course": [
          "Section Intro:",
          "Note",
          "Microsoft Visual Studio",
          "Proteus Simulation Software",
          "MikroC Pro for C Coding of Microcontrollers",
          "Virtual COM Port Driver",
          "Proteus Virtual USB Installation",
          "Quiz",
          "Section Summary:",
          "Reading Material:",
          "Exploring Software Tools for Microcontroller Development"
        ],
        "Software that can be used to design a GUI": [
          "Section Intro:",
          "Software that can be used to design a GUI",
          "Selecting and Using GUI Design Software",
          "Section Summary:",
          "Reading Material:"
        ],
        "Communication": [
          "Section Intro:",
          "Different Communication Methods that Can be used",
          "What is Serial Communication and RS232",
          "Quiz",
          "Section Summary:",
          "Reading Material:",
          "Understanding Communication Protocols: RS232 and More"
        ],
        "Your First GUI": [
          "Section Intro:",
          "How To Create Your First GUI Project Quick Intro",
          "Creating Your First GUI for Microcontroller Control",
          "Section Summary:",
          "Reading Material:"
        ],
        "USB Communication": [
          "Section Intro:",
          "Introduction to the USB World",
          "Introduction to the USB World",
          "Hardware and Software Requirements",
          "Quiz",
          "Advantages of USB Communication",
          "USB Pinout Port Wiring",
          "USB Transfer speeds",
          "USB Device Classes",
          "Section Summary:",
          "Reading Material:",
          "USB Communication Essentials and Configurations"
        ],
        "Introduction to Descriptors": [
          "Section Intro:",
          "Introduction to Descriptor",
          "Creating a descriptor file in MikroC",
          "Creating a descriptor file in MikroC - Practica",
          "Quiz",
          "Creating and Understanding USB Descriptor Files",
          "Section Summary:",
          "Reading Material:"
        ],
        "USB Libraries HID Enable": [
          "Section Intro:",
          "USB Libraries HID Enable",
          "Quiz",
          "Section Summary:",
          "Reading Material:"
        ],
        "USB RAM and Functions": [
          "Section Intro:",
          "USB RAM",
          "USB Functions",
          "Exploring USB RAM and Functional Capabilities",
          "Section Summary:",
          "Reading Material:"
        ]
      },
      "requirements": [
        "A computer to run the software",
        "A basic knowledge in Programming in any language",
        "No Material is required for this Course",
        "Download and Install Proteus Professional (FREE & Explained inside the Course)",
        "Download and Install MikroC Pro! (FREE & Explained inside the Course)",
        "Download The course Material in PDF and Print them if possible",
        "Students must have the knowledge of basic electronics"
      ],
      "description": "Interface PIC Microcontroller using Serial Communication RS232/USB and a Visual Interface\nWelcome to this course.\nIn this course, you will learn how to move to the next level in communication between microcontrollers and computers. You will receive a step-by-step guide on how to create a visual interface on your computer/laptop that will send and receive data to and from a microcontroller using RS232 serial communication standard or USB.\nWhy You Should Take This Course:\nMore than 3.5 hours of Full HD Content\nSupporting Material and Example Codes\nStep-by-step explanation of connection diagrams and coding stages\nCertificate of Completion when you finish the course\nSimulation and practical lessons to cover everything there is to know about USB and RS232 serial communication\nBuild a fully functional interactive system to monitor variables like temperature and send control signals to turn devices on or off\nSerial/USB Communication provides a means to control any type of microcontroller via your own computer, whether it's a desktop or a laptop. All you need to do is create the proper interface, which we will teach you how to do in this course.\nThis course will be your gateway to creating various applications, such as a temperature control system, RC robot, SCADA system, and more via serial interfacing.\nEverything You Wanted to Know About USB Interfacing but Were Too Afraid to Ask, or Asked Without Getting Answers!\nThis course also contains a step-by-step guide to USB interfacing with PIC microcontroller. This USB section consists of 39 lectures with more than 3 hours of HD video content and supplementary material. We cover every aspect of USB interfacing, including designing, simulating, and connecting everything in real life. After this course, you will be a professional in USB interfacing with PIC microcontroller.\nWhy You Should Use USB Interfacing:\nHigher speed than any conventional interfacing method\nOnly four wires are used (two PIC microcontroller pins are needed to connect more than 100 devices via USB)\nLow power consumption\nSupport and libraries\nUser Testimonials: \"This course made interfacing with PIC microcontrollers easy and practical. Highly recommended!\" - John D.\n\"A must-take for anyone working with PIC microcontrollers and serial communication. Clear explanations and practical examples.\" - Emily R.\nAuthor Bio: Ashraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world. With over 250,000 students from around the world, Ashraf’s online courses have helped many to kick-start their careers in the industry.\nCall to Action: Enroll now to master serial communication with PIC microcontrollers and take your projects to the next level!\nFAQ: Q: Do I need prior experience in electronics or programming to take this course? A: No, this course is designed for all levels.\nQ: Will I need to buy additional equipment? A: The course provides a list of necessary hardware, all of which are affordable and easily accessible.\nWhat You Will Learn\nUnderstand serial communication protocols (RS232 and USB)\nInterface PIC microcontrollers with a computer\nCreate a GUI for serial communication\nImplement practical applications using serial communication\nWho Is This Course For\nElectronics enthusiasts\nPIC microcontroller hobbyists\nBeginners in microcontroller communication\nAnyone interested in serial communication and GUI design\nRequirements\nA PIC microcontroller and basic electronic components\nBasic understanding of using a computer\nNo prior programming or electronics experience needed\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects. They strive to provide deep, hands-on experience in their courses, offering step-by-step blueprints on various topics.\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and maker. He has been the Chief Educational Engineer at Educational Engineering Team since 2007, and his mission is to explore new trends and technology to help educate the world. His online courses have helped over 250,000 people worldwide to build successful careers.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Microcontrollers Geeks",
        "Anyone Interested in Interfacing Microcontroller with their Computer or Laptops",
        "Anyone Interested in Controlling Microcontrollers via Visual Interactive Interface",
        "PIC Microcontroller Lovers",
        "Anyone Interested in Interfacing PIC Microcontroller with their Computer or Laptops via USB Port",
        "Anyone Interested in Controlling Microcontrollers via Visual Interactive Interface using USB Connection"
      ]
    },
    {
      "title": "Mastering 8051 Assembly Language Programming",
      "url": "https://www.udemy.com/course/assembly-language-programming-in-8051/",
      "bio": "Acquire proficiency in programming the 8051 Microcontroller through the use of assembly language constructs!",
      "objectives": [
        "Differentiate Microprocessors and Microcontrollers: Learn the key distinctions between these core components of embedded systems.",
        "In this course, you'll gain in-depth knowledge of the 8051 Microcontroller's architecture, encompassing CPU, memory, I/O, and more.",
        "Master Assembly Language Programming: Develop expertise in 8051 Family Microcontroller programming, including hexadecimal numbers and program memory.",
        "This course will enable you to master the Keil Integrated Development Environment (IDE) for efficient 8051 Microcontroller programming.",
        "Apply Knowledge Practically: Put your skills to use with practical tasks, such as addition, PSW flags, and assembly language programs for real-world application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "2.Microprocessor vs Microcontroller",
          "3. Variants of Microcontroller and Criteria in choosing them"
        ],
        "Features of 8051 Microcontroller": [
          "4. Architecture of 8051",
          "5. Importance of External Memory",
          "6. Working with Hexadecimal Notation",
          "7. Hexadecimal operation",
          "8.Register banks in 8051",
          "9. Bit Addressability and Special Function Registers",
          "Correction Info"
        ],
        "Writing Assembly Language Programs": [
          "10. Flow of Assembly Language Execution",
          "11. Structure of Assembly Language Programming",
          "12. Classification of Instructions and The Instruction Set",
          "13. Addressing Modes of 8051",
          "14. Assembler Directives and the Program Memory",
          "15. Importance of Program Counter",
          "16. Working with Keil IDE",
          "17. Single byte Addition",
          "18. Carry Flag in PSW",
          "19. Other Flags in PSW",
          "20. Overflow in Addition",
          "21. Importance of Stack and the Stack Pointer",
          "22. PUSH and POP Instructions",
          "23.Double byte Addition",
          "24. Subtraction Instruction",
          "25.Single Bit Instructions",
          "Bit Logical Instructions"
        ],
        "Jump and Call Instructions": [
          "26. Introduction to Jump Instructions",
          "27. Understanding DJNZ through an example",
          "28.Multiplication through repeated addition",
          "29. Algorithm to find the sum of first five natural numbers",
          "29. Finding the sum of first five natural numbers",
          "30. Call Instructions",
          "Different types of Branching"
        ],
        "I/0 Programming": [
          "31. Ports in 8051",
          "32. Blinking the ports",
          "33. Bit Addressability in Ports"
        ],
        "Update - TImer Programming in 8051": [
          "Introduction to Timers and Counters",
          "Essentials to program Timers",
          "Programming the Timers",
          "Programming the Timers - 2"
        ],
        "Scale up to an application": [
          "Outline to code an embedded system in assembly language"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A basic knowledge in C Programming and Electronics"
      ],
      "description": "In this course, we will delve into the realm of assembly language programming, focusing on the utilization of instructions for programming 8051 Family Microcontrollers. It's important to note that no physical hardware is required, as all the exercises will be performed within simulation software.\nThroughout this course, we will:\nExplore the distinctions between Microprocessors and Microcontrollers.\nInvestigate the various variants of Microcontrollers available.\nDiscuss the criteria for selecting the appropriate Microcontroller for specific applications.\nDive into the internal architecture of the 8051 Microcontroller.\nGain proficiency in working with Hexadecimal numbers.\nUnderstand the concepts of Program Memory and Data Memory.\nLearn about Bit Addressability and its application to registers.\nDifferentiate between a Program Counter and a Stack Pointer.\nFamiliarize ourselves with the Keil Integrated Development Environment (IDE).\nMaster the art of Single Byte Addition.\nExtend our knowledge to Double Byte Addition.\nComprehend the significance of the Program Status Word (PSW) Flags.\nGrasp the concept of Overflow in addition operations.\nRecognize the importance of the stack in program execution.\nImplement assembly language programs, including:\nProgram 1: Calculating the Sum of the first five natural numbers.\nProgram 2: Achieving Multiplication through repeated addition.\nGain proficiency in programming Input/Output (I/O) Ports.\nImplement Logical instructions for data manipulation.\nUnderstand the Single Bit Instructions for precise control.\nThis course is tailored for beginners who are venturing into the world of embedded systems and wish to explore it in-depth. Rest assured, the content is presented from the ground up, making it accessible to complete novices. Additionally, we have provided an instruction set for your reference to facilitate your learning journey.",
      "target_audience": [
        "Beginner Electronics Aspirants"
      ]
    },
    {
      "title": "Line Follower Robot: Master Robotics with Precision and Code",
      "url": "https://www.udemy.com/course/line-follower-robot/",
      "bio": "Navigating the Future with Precision and Code: Your Ultimate Line Follower Robot Guide",
      "objectives": [
        "What is IR sensor",
        "Working of IR sensor",
        "Circuit making of line follower robot",
        "Coding concepts",
        "Assembly",
        "Design and build their own Line Follower Robot from scratch."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of electronics and programming (recommended but not mandatory)."
      ],
      "description": "Are you fascinated by robotics and automation? Ready to dive into the world of Line Follower Robots and take your skills to the next level? Look no further! This comprehensive course is designed to guide you through every step of creating your very own Line Follower Robot, from concept to coding to simulation. Whether you're a beginner or an experienced hobbyist, this course will equip you with the knowledge and skills to bring your robot to life and watch it follow lines with precision.\nCourse Overview\nIn this hands-on and engaging course, you'll acquire the skills and knowledge required to create a line-follower robot from scratch. Whether you're a beginner with no prior experience or an intermediate enthusiast looking to enhance your robotics expertise, this course caters to all skill levels.\nThis course will cover IR sensors, the working principle of IR sensors, and how to make a line-following robot by the collaboration of two or more IR sensors with a single Arduino. We will also learn how to make circuits for the robot and develop the coding and logic for the project.\nCourse Outline\nIntroduction\nProject Information\nCircuit Making\nCoding\nSimulation\nWhat You'll Learn:\nIntroduction to Robotics: Understand the fundamentals of robotics, learn about different types of robots, and explore the applications of line-follower robots.\nElectronics Essentials: Gain insights into electronic components, circuit design, and sensor integration crucial for your robot's functionality.\nMechanical Design: Learn how to design and assemble the chassis, wheels, and motor systems, ensuring optimal performance and maneuverability.\nSensors and Actuators: Explore various types of sensors, with a focus on infrared (IR) sensors for line detection, and learn to control actuators for precise movement.\nProgramming Logic: Master programming concepts using platforms like Arduino and Python to implement algorithms for line detection, decision-making, and motor control.\nAlgorithm Optimization: Discover techniques to fine-tune your robot's performance, from tuning PID constants to optimizing line-following algorithms.\nAdvanced Topics: Explore advanced topics such as multi-sensor integration, obstacle avoidance, and wireless communication for remote control.\nWhy Take This Course:\nStep-by-step guidance from experienced robotics instructors.\nPractical hands-on projects to reinforce your learning.\nAccess to a supportive community of fellow learners and experts.\nBuild a strong foundation in robotics and automation.\nEnhance problem-solving and programming skills.\nGain a valuable addition to your engineering and robotics portfolio.\nEmbark on a journey of creativity, innovation, and technical prowess as you develop your very own Line Follower Robot. Enroll now and become a master of robotics!\nWhat You Will Learn\nFundamentals of robotics and line-follower robots\nElectronic components and circuit design\nMechanical design and assembly\nIntegration of IR sensors and actuators\nProgramming and coding for line-following\nAlgorithm optimization and advanced techniques\nReal-world applications and advanced topics\nWho Is This Course For\nAspiring robotics engineers\nElectronics enthusiasts\nStudents and hobbyists interested in automation\nAnyone looking to enhance their robotics skills\nRequirements\nBasic understanding of electronics and programming\nInterest in robotics and automation\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Students and hobbyists interested in robotics and automation.",
        "Educators seeking to enhance their robotics curriculum.",
        "Engineers and programmers looking to expand their skillset.",
        "Anyone curious about the intersection of technology and creativity."
      ]
    },
    {
      "title": "Build a Gaming PC from Scratch!",
      "url": "https://www.udemy.com/course/build-a-gaming-pc-from-scratch/",
      "bio": "This course is packed with everything you need to know about How to Build, Assemble, and Upgrade your Gaming PC.",
      "objectives": [
        "Step by step guide on planning your PC budget",
        "Learn how to select the best parts for your gaming PC",
        "Learning how to NOT fall into the seller's trap!",
        "Learning to assemble your PC step by step!",
        "Answers to every single question you have about your PC building journey!",
        "Seperate lectures on \"Things to know\" about your components and \"How to choose\" the best parts under your budget!",
        "Knowing about the components required to build a gaming PC!",
        "New lectures every week!",
        "Tips on how to save money where you can while shopping for parts",
        "Learn how to select the best parts to future-proof your build!",
        "Learn how to cable manage your PC",
        "Learn how to test and benchmark your PC"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge about gaming PCs or the PC building sector required, students will be taught everything required to know from scratch!"
      ],
      "description": "Are you ready to take the leap and build your own gaming PC? Look no further! Our comprehensive course on building a gaming PC from scratch is tailored to guide you through the process step by step, from allocating your budget to selecting and assembling the perfect components for your dream machine.\nIn this course, you'll start by learning the basics of PC building and how to effectively allocate your budget to get the most bang for your buck. Then, we dive into the nitty-gritty of each component, including the processor, graphics card, motherboard, and more. Our expert instructors will provide in-depth explanations of the things to consider when choosing each component, and how to select the best options for your needs and budget.\nBut building a PC is not just about selecting parts, it's also about putting them together. Our course also includes a comprehensive guide on how to assemble your PC, troubleshoot and maintain it.\nThis course is perfect for beginners and experienced builders alike. Whether you're looking to build your first gaming PC or upgrade your current machine, our step-by-step approach will give you the knowledge and confidence you need to create the ultimate gaming experience. So, what are you waiting for? Enroll now and start building your dream gaming PC today!",
      "target_audience": [
        "Anyone interested in the Gaming and PC building space can begin this course with any level of knowledge. You will learn every relevant thing in this course step by step.",
        "This course is targeted towards anyone who wishes to save endless hours of researching and confusion about steps to building a PC.",
        "Whether you have a technical background or not, if you just want to get started and build, then you have found the very thing you were looking for."
      ]
    },
    {
      "title": "Building Processor with VHDL from Scratch",
      "url": "https://www.udemy.com/course/building-processor-with-vhdl-from-scratch/",
      "bio": "Step by Step Guide",
      "objectives": [
        "Startegies to implement VHDL based CPU",
        "Buliding Custom Intruction Set to meet resource utilizations",
        "Strategies to add Program and Data Memory inside Processor",
        "Strategies to add Jump and Branching Instructions inside Processor"
      ],
      "course_content": {
        "Adding Arithmetic Unit": [
          "Understanding Processor architecture",
          "Agenda",
          "Types of Instructions",
          "Addressing Modes",
          "Understanding Intruction Register",
          "Creating new project in Vivado",
          "Adding MOV instruction to processor P1",
          "Adding MOV instruction to processor P2",
          "Verifying RTL Designing",
          "Design Code",
          "Testbench Code",
          "Adding Arithmetic Instructions to Processor",
          "Verifying Design",
          "Design Code",
          "Testbench Code",
          "A11 : Testing Multiplication operation"
        ],
        "Adding Logic Unit": [
          "Agenda",
          "Logical Operators in VHDL",
          "Adding Logical Unit to Processor",
          "Testing Logical Operation",
          "Design Code",
          "Testbech Code",
          "Understanding Subprogram in VHDL",
          "Working with Procedure",
          "Code",
          "Converting Instruction Decoder to Procedure",
          "Design Code",
          "Testbench Code",
          "A21 : Testing Logical Operation in Register mode"
        ],
        "Adding Condition Flags": [
          "Agenda",
          "Condition flags usage",
          "Understanding Carry Flag",
          "Understanding Overflow flag",
          "Understanding Sign and Zero Flag",
          "Adding Condition flags to processor",
          "Testing Operation of Condition flags",
          "Design Code",
          "Testbench Code"
        ],
        "Adding Program and Data Memory to Processor": [
          "Agenda",
          "Processor architecture based on Memory model",
          "Testbench Code",
          "Adding Program Memory to processor P1",
          "Adding Program Memory to processor P2",
          "Program Data",
          "Design Code",
          "Testbench Code",
          "Adding Control FSM to processor P1",
          "Adding Control FSM to processor P2",
          "Program Data",
          "Design Code",
          "Testbench Code",
          "Working with Data Memory and I/O Ports P1",
          "Working with Data Memory and I/O Ports P2",
          "Program Data",
          "Design Code",
          "Testbench Code"
        ],
        "Adding Jump and Branch Instructions": [
          "Agenda",
          "Branch and Jump Instructions our processor support",
          "Operation of Jump Instructions",
          "FSM to handle Jump and Halt P2",
          "Testing Previous Code",
          "Program Data",
          "FSM to handle Jump and Halt P1",
          "Design Code",
          "Testbench Code",
          "Testing Jump Instruction",
          "Program Data",
          "Design Code",
          "Testbench Code",
          "Testing Halt Instruction",
          "Program Data",
          "Testing Branch Instructions",
          "Program Data",
          "Design Code",
          "Testbench Code"
        ]
      },
      "requirements": [
        "Fundamentals of Digital Electronics"
      ],
      "description": "Most of the 21st-century applications require powerful hardware but also along with the centralized controller allowing the development of complex algorithms. As we enter into the AI or Cloud-based devices and as systems complexity is growing daily, the need for incorporating multiple processor instances becomes mandatory as we progress in the AI era. Zynq and Microblaze are two popular alternatives that exist in the market suitable for almost any application requirements. The requirements of using Multiple instances of Processor viz. Multiple instances of Microblaze soft processor or using a hard processor such as Zynq Processor along with single or multiple instances of  Microblazer become necessary to independently handle both Data processing and control requirements. The fundamental challenge of incorporating multiple instances of Soft processors like Microblaze is the number of resources consumed for implementing Microblaze on the FPGA. Since FPGA consists of a limited amount of the FPGA resources, hardware and Software partition plays a prominent role in building complex systems. Another popular alternative approach followed by Embedded Engineers to build a Custom CPU /   Processor with the only required functionality thereby saving a large amount of the resources as compared to adding Microblaze instance. The course will discuss all the fundamentals required to build a simple processor/ CPU with VHDL and strategies to test its functionality. After completing this course, you will understand all the necessary skills required to build Complex CPU architecture to meet requirements. Best wishes for crafting your own processor.",
      "target_audience": [
        "Anyone Interested to build Custom CPU on FPGA for Load Sharing"
      ]
    },
    {
      "title": "Build a Computer 101: Computer Hardware",
      "url": "https://www.udemy.com/course/build-a-computer-101-computer-hardware/",
      "bio": "Gain insight on the underlying principles of Computer Hardware. Learn how to select the right parts for your system.",
      "objectives": [
        "Learn the principles of computer hardware",
        "Gain valuable information about computer hardware and reach into intermediate to advanced level",
        "Be able to pick the right components for your builds in any technology",
        "Be able to compare components and conclude which one is better"
      ],
      "course_content": {
        "Introduction": [
          "Why Should You Buy This Course?",
          "Introduction",
          "Why Build a Custom PC?"
        ],
        "Computer Hardware": [
          "CPU",
          "CPU Cooler",
          "CPU Naming",
          "Practice Quiz 1",
          "Motherboard",
          "RAM",
          "Practice Quiz 2",
          "GPU: Part 1",
          "GPU: Part 2",
          "Practice Quiz 3",
          "Case",
          "PSU",
          "Storage",
          "Practice Quiz 4"
        ],
        "Course Summary": [
          "Computer Hardware Overview",
          "Mastery Quiz",
          "Thanks"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No experience or knowledge about computer hardware is required, just an eager mind."
      ],
      "description": "Learn how to select the right parts for your computer by understanding the underlying principles of computer hardware.\nObtain timeless computer hardware principles that will serve you many years.\nBuild a strong foundation in computer hardware,\nEmbrace what you've learned with summaries at the end of each lecture,\nPut what you've learned to test with many practice quizzes and final mastery quiz.\n\n\nContents and Overview\nThis course has more than 2 hours of content and has a lot of useful resources that will help you gain the habit of be able to learn things on your own, which is crucial in IT & hardware. This course is designed for beginners, and guarentee to help you reach to intermediate to advanced level.\nWe are Kickstart Hardware, founded with the mission of teaching you hardware fast, simple but also comprehensive. In this course, and actually, in any of our courses, we will never make you memorize information that will be obsolete in a few years or even months. We will directly teach you the principles that makes a component better than the other one, so you will learn to decide on your own and within any technology.\nStarting with why custom PC's are better than pre-built computers, we will quickly dive into the parts you need to buy in order to build a computer. We will start with CPU, which is crucial for your system's operation. You will learn what makes a CPU operate, and learn how to select the right CPU. You will not memorize the components on the market, you will directly learn the principles on how to compare them and find out which one is better. Then, we will continue with CPU cooler and CPU naming. We will finish off CPU and start learning about motherboard and RAM. Then, maybe the most important component, especially for gaming PCs, you will learn about GPU. You will learn about how to compare GPUs and how to select the right version. Then, you will learn about case and PSU. You will learn what to look for when buying a case. You will learn how to calculate your power usage of your system and the benefits of getting a high quality PSU in the long term. Then, we will finish off our course with storage units. You will learn about different storage unit types and which one makes more sense on different use cases. Lastly, we have a course summary lecture which summarizes everything you learned in this course and have a final mastery quiz to test yourself.\nBy the end of this course, you'll be able to recognize computer hardware elements and have a deep understanding of computer hardware. You'll not memorize any existing part in the market: you will directly learn how to decide between components in any market and any technology. You'll be able to select the right parts according to your needs and budget.\nThis course is designed in a beginner friendly way. All of the information are explained as simple as possible, without making it too basic. At the end of each lecture, we will summarize everything we've covered in the lecture, so you can really embrace what you've learned effectively. We will also have many practice quizzes, which will be a great opportunity for you to test yourself. At chapter 3, we will summarize everything you've learned in this course, and have a mastery quiz, for the ultimate test.\nIn this course, Udemy gives you 30-day money back guarentee, so you can try it without any risk. As Kickstart Hardware, we promise to always be here for you if you've questions along the way. We commit ourselves to improving and deeply think about how we can make your learning experience better. We're hoping to see you inside, where you can learn precious information about computer hardware in a very short time frame.\n\n\nWhat you'll learn in this course\nWhat is CPU?\nHow to Select the Right CPU?\nCPU Cooler\nCPU Naming\nMotherboard\nRAM\nWhat is GPU?\nHow to Compare GPUs?\nHow to Select the Right GPU?\nCase\nPSU\nStorage Units\n\n\nWhat you'll NOT learn in this course\nHow to overclock your components\nAdvanced computer hardware techniques such as SLI and CrossFireX.",
      "target_audience": [
        "This course is for complete beginners and for intermediate users who want to take it a step further. This course is not suitable for users who wants to learn about advanced concepts, however it can be great start point."
      ]
    },
    {
      "title": "CHT - Certified Hardware Technician",
      "url": "https://www.udemy.com/course/cht-certified-hardware-technician/",
      "bio": "Prepare for the Mile2® Certified Hardware Technician (CHT) exam with this course.",
      "objectives": [
        "Fundamentals of networking",
        "Fundamentals of security/forensics",
        "Understanding of properly and safely diagnosing",
        "Applying troubleshooting skills"
      ],
      "course_content": {
        "Introduction": [
          "Intro"
        ],
        "Module 1": [
          "Troubleshooting"
        ],
        "Module 2": [
          "Motherboards and CPUs"
        ],
        "Module 3": [
          "Power Supplies"
        ],
        "Module 4": [
          "Memory"
        ],
        "Module 5": [
          "Computer Expansion"
        ],
        "Module 6": [
          "Physical Storage"
        ],
        "Module 7": [
          "Input-Output Devices"
        ],
        "Module 8": [
          "Display Devices"
        ],
        "Module 9": [
          "Network Cables and Connectors"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Mile2® is the exclusive provider of this course. An authorized exam simulator and exam prep are included in this official Mile2® video, both of which are accessible upon request. When you are ready, send us an email through your Udemy account to request this.\nBy giving you the fundamental skills required to install, configure, and support computer hardware systems, the Certified Hardware Technician (CHT) course can jumpstart your career in the IT industry. This includes installing, configuring, and maintaining devices, PCs, and servers.\nThe Certified Hardware Technician (CHT) will also be able to apply troubleshooting techniques and correctly and safely diagnose, fix, and document typical problems. He or she will also provide an awareness of the foundations of networking and security/forensics.\nCustomer service is a crucial part of anyone's skill set, and this course gives you insight into how to offer the right kind of support. The course's exploration of wireless networks, mobile technology, and tailored deployment for end users is one of my favorites. The CompTIA A+ 220-901 certification exam and the Mile2 Certified Hardware Technician test are both aligned with the Certified Hardware Technician course.\nThe Certified Hardware Technician (CHT) is a part of the following role-based Progressions on the Mile2 Certification Roadmap.",
      "target_audience": [
        "Everyone",
        "End Users",
        "Employees with access to computers",
        "Managers"
      ]
    },
    {
      "title": "PIC Microcontroller & Mikro C Engineering Students Projects",
      "url": "https://www.udemy.com/course/proteus-circuit-design-simulations-mikro-c-pic-programming/",
      "bio": "Amazing PIC Microcontroller Projects using Mikro C Programming with Circuit Designs for Engineering Final Year Students",
      "objectives": [
        "Download And Installation Of Mikro C: Step-by-step guide to downloading and installing Mikro C for PIC programming.",
        "Mikro C And Proteus ISIS: Understand the integration of Mikro C with Proteus ISIS for seamless programming and simulation.",
        "LED Blinking: Your first program: make an LED blink using Mikro C and a PIC microcontroller.",
        "Push Button With LED: Program a push button to control an LED, a fundamental concept in embedded systems.",
        "Triggering A Relay With PIC16F877A: Learn how to use Mikro C to trigger a relay using the popular PIC16F877A microcontroller.",
        "Seven Segment Display With PIC16F877A: Display numbers on a seven-segment display, controlled by a PIC16F877A.",
        "Displaying Text In LCD With PIC16F877A: Program an LCD to display custom text, enhancing your interface design skills.",
        "Keypad Scanning: Learn to interface and scan a keypad, essential for user input in embedded systems."
      ],
      "course_content": {
        "Mikro C Programming for PIC Microcontroller": [
          "Introduction to Mikro C for PIC Microcontroller Programming",
          "Download And Installation Of Mikro C Pro",
          "Mikro C And Proteus ISIS",
          "LED Blinking",
          "Push Button With LED",
          "Triggering A Relay With PIC16F877A",
          "Seven Segment Display With PIC16F877A",
          "Displaying Text In LCD With PIC16F877A",
          "Keypad Scanning (Part 1)",
          "Keypad Scanning (Part 2)"
        ],
        "Water Level Indicator with LCD using PIC16F877A": [
          "Intro to Water Level Indicator with LCD",
          "Creating and Saving new project",
          "LCD Initialization",
          "Microcontroller Initialization",
          "Mikro C Code",
          "Code Review",
          "Project Simulation"
        ],
        "LDR Based Smart Street Light with PIC16F877A": [
          "Project Overview",
          "Creating and Saving new project",
          "Program Initialization",
          "Mikro C Code For The Project",
          "Project Simulation"
        ],
        "Water level indicator with Seven Segment Display and PIC16F877A": [
          "Intro to Water Level Indicator with Seven Segment Display",
          "Creating and Saving New Project",
          "Program Initialization",
          "Microcontroller Initialization",
          "Mikro C Code",
          "Project Simulation"
        ],
        "Password Based Wireless Home Automation System with PIC16F877A": [
          "Introduction To Password Based Wireless Home Automation System",
          "Creating and Saving new project",
          "Program Initialization",
          "Keypad Press Verification",
          "Keypad Press Verification Alternative",
          "Microcontroller Initialization",
          "Enabling Devices From The Transmitter",
          "Enabling UART1 For Transmitter And Receiver",
          "Tracking Keypad Press",
          "Tracking Keypad Press On Row 1",
          "Tracking Keypad Press On Row 2",
          "Tracking Keypad Press On Row 3",
          "Tracking Special Functions On The Keypad",
          "Code Compilation For Transmitter",
          "Creating New Project For The Receiver",
          "Mikro C Code For The Receiver",
          "Code Review",
          "Project Conclusion And Simulation"
        ],
        "Emergency override traffic light system with PIC16F877A": [
          "Introduction To Emergency Override System",
          "Creating And Saving Your Project",
          "Program Initialization",
          "Enabling PortB Internal Interrupt",
          "Enabling Terminals For Signal Listening",
          "Activating Emergency At Terminal One",
          "Activating Emergency At Terminal Two",
          "Activating Emergency At Terminal Three",
          "Activating Emergency At Terminal Four",
          "PortB Interrupt Flag",
          "Microcontroller Initialization",
          "Final Program Code",
          "Project Compilation And Simulation"
        ],
        "Traffic light with GSM Density checker using PIC16F877A": [
          "Introduction To GSM Based Traffic Light System With Density Checker",
          "Creating And Saving Your Project",
          "Program Initialization",
          "Tracking Special Symbols From Incoming Data",
          "Enabling PortB Internal Interrupt",
          "Removing Empty Spaces Between Received Data",
          "AT Commands For SMS",
          "Displaying Traffic Density at Lane A",
          "Traffic Density At Lane B, Lane C And Lane D",
          "General System Initialization",
          "Final Code For Project",
          "Code Review",
          "Project Simulation"
        ],
        "Password Based Security System with GSM Alert technology (PIC16F877A)": [
          "Introduction to Password Based Security System with GSM Alert technology",
          "Creating and Saving new project",
          "Program Initialization",
          "Passing Password Verification",
          "Checking Password Validation",
          "Check For Invalid Password",
          "AT Commands For SMS Alert",
          "Microcontroller Initialization",
          "Tracking Keypress On The Keypad",
          "Tracking Keypad First Column",
          "Tracking Keypad Second Column",
          "Tracking Keypad Third Column",
          "Code Review And Compilation",
          "Project Simulation"
        ],
        "Underground cable fault locator with PIC16F877A": [
          "Introduction to Underground cable fault locator with PIC16F877A",
          "Creating and Saving new project",
          "Program Initialization",
          "Fault Display Function",
          "No Fault Display Function",
          "Microcontroller Initialization",
          "Control Switch",
          "Tracking Fault At Wire 1",
          "Tracking Fault At Wire 2",
          "Tracking Fault At Wire 3",
          "ASCII Chart Reference",
          "Code Review",
          "Final Project Simulation"
        ],
        "Rash Drive/High Speed Detector using PIC16F877A": [
          "Introduction to Introduction to High Speed Detector",
          "Creating and Saving new project",
          "Program Initialization",
          "Interrupt Functions",
          "SMS Function (AT Commands)",
          "Alert Function",
          "LCD Function",
          "Microcontroller Initialization",
          "Activating Sensor A For Remote Monitoring",
          "Check Speed Limit",
          "Project Compilation",
          "Project Simulation And Conclusion",
          "Congratulations! Keep Learning..."
        ]
      },
      "requirements": [
        "Basic understanding of electronics principles",
        "A computer with Windows OS for software installation",
        "Enthusiasm to learn and explore the world of electronics and microcontroller programming"
      ],
      "description": "Embark on a comprehensive journey into the world of electronics circuit design and programming with our course, \"PIC Microcontroller Projects with Mikro C Pro for Engineers\" This course is meticulously crafted for beginners and intermediate learners who wish to master the art of circuit design and microcontroller programming, using the powerful Proteus IDE and Mikro C for PIC microcontrollers.\nIntroduction to Electronics Circuit Simulations on Proteus IDE\nDive into the world of circuit simulations as we introduce you to the Proteus IDE. You'll start by exploring and understanding the Proteus environment, where you'll learn how to select components, design your first circuit, and control an LED with a button. As you progress, you'll get hands-on experience with configuring NPN and PNP transistors, relays, simulating buzzers and DC motors, and even creating wireless circuit connections. By the end of this section, you’ll be equipped with the skills to save and manage your projects effectively.\nIntroduction to Electronics Circuit Simulations on Proteus IDE:\nExploring & Understanding Proteus Environment: Get familiar with the Proteus interface, its tools, and how to navigate the workspace.\nHow To Pick Components From Proteus: Learn how to select the right components from the Proteus library for your circuit designs.\nYour First Circuit Design In Proteus: Create your first simple circuit in Proteus, understanding the basics of circuit layout.\nLED Control With Button In Proteus: Design a circuit to control an LED with a button, a fundamental skill in electronics.\nHow To Save Your Project In Proteus: Learn to save your work properly to ensure your designs are preserved and easily accessible.\nConfiguring NPN And PNP Transistor: Understand the configuration of NPN and PNP transistors for circuit designs.\nConfiguring A Relay With NPN Transistor: Learn how to integrate a relay into your circuits using an NPN transistor.\nConfiguring A Relay With PNP Transistor: Explore the use of a PNP transistor to control a relay in your designs.\nHow To Simulate a Buzzer: Discover how to add and simulate buzzers in your circuits.\nHow To Simulate DC Motor: Learn to simulate DC motors, essential for many mechanical and robotics applications.\nWireless Circuit Connection: Delve into wireless circuit design and simulation, a critical skill in modern electronics.\nTransition from simulation to real-world application as you learn Mikro C programming for PIC microcontrollers. Starting with the installation and setup of Mikro C and Mikro C Pro, you'll be guided through various programming exercises, including LED blinking, push button interactions, relay triggering, seven-segment displays, and more. This section will empower you with the knowledge to integrate Mikro C with Proteus ISIS for seamless design and simulation.\nDownload And Installation Of Mikro C: Step-by-step guide to downloading and installing Mikro C for PIC programming.\nDownload And Installation Of Mikro C Pro: Learn how to install the professional version of Mikro C for advanced features.\nMikro C And Proteus ISIS: Understand the integration of Mikro C with Proteus ISIS for seamless programming and simulation.\nLED Blinking: Your first program: make an LED blink using Mikro C and a PIC microcontroller.\nPush Button With LED: Program a push button to control an LED, a fundamental concept in embedded systems.\nTriggering A Relay With PIC16F877A: Learn how to use Mikro C to trigger a relay using the popular PIC16F877A microcontroller.\nSeven Segment Display With PIC16F877A: Display numbers on a seven-segment display, controlled by a PIC16F877A.\nDisplaying Text In LCD With PIC16F877A: Program an LCD to display custom text, enhancing your interface design skills.\nKeypad Scanning: Learn to interface and scan a keypad, essential for user input in embedded systems.\nProject Design and Programming:\nWater Level Indicator with Seven Segment using PIC16F877A: Design and program a water level indicator with a visual display.\nLDR Based Smart Street Light with PIC16F877A: Create an energy-efficient smart street light system using an LDR sensor.\nWater Level Indicator with Tank Status Checker (PIC16F877A): Develop a more advanced water level indicator that also checks tank status.\nRecommended Projects for Engineering Students:\nPassword Based Wireless Home Automation System with PIC16F877A\nEmergency Override Traffic Light System with PIC16F877A\nTraffic Light with GSM Density Checker using PIC16F877A\nPassword Based Security System with GSM Alert Technology with PIC16F877A\nRash Drive/High Speed Detector with GSM Alert with PIC16F877A\nUnderground Cable Fault Locator with PIC16F877A\nDot Matrix LED Display with 8051 Microcontroller\nPrinted Circuit Board Design with Proteus IDE\nBenefits of This Course:\nComprehensive Learning: Gain a solid understanding of both circuit design and microcontroller programming, from basics to advanced projects.\nPractical Skills: Develop hands-on experience with real-world applications of Proteus and Mikro C, preparing you for projects in electronics and embedded systems.\nCareer Advancement: Enhance your resume with skills highly sought after in electronics engineering, automation, and IoT development.\nProject-Based Learning: Apply your knowledge to practical projects that can be used as a portfolio or as a basis for further innovation.\nReal-World Application:\nThe skills learned in this course can be applied to various industries, including electronics design, home automation, robotics, IoT (Internet of Things), and more. Whether you're developing new consumer electronics or automating industrial processes, the knowledge gained here will be invaluable.\nEnroll in \"Proteus Circuit Design Simulations and Mikro C Programming\" today and take the first step towards mastering the exciting world of electronics and embedded systems!",
      "target_audience": [
        "Electronics engineering students",
        "Hobbyists and makers interested in microcontroller programming",
        "Engineers looking to upgrade their skills in circuit design and simulation",
        "Anyone interested in learning about PIC microcontrollers and Proteus IDE"
      ]
    },
    {
      "title": "Control Anything Anywhere without Internet with Arduino",
      "url": "https://www.udemy.com/course/arduino-dtmf-control-anything-anywhere-without-internet-gsm-call/",
      "bio": "How to make your own Arduino Wireless long distance Controller via DTMF Decoding without the Internet, WiFi or Bluetooth",
      "objectives": [
        "Learn how to make your own Arduino Wireless long distance Controller via DTMF Decoding without the Internet, WiFi or Bluetooth",
        "Learn about DTMF Decoder and how they are useful to your electronic Projects",
        "Learn how to give Arduino Super-Powers without extra modules",
        "Learn How to program Arduino using Arduino IDE",
        "Learn How to make your own DTMF Decoder",
        "Learn How to use interface DTMF Decoder with Arduino.",
        "Learn How to make your own DTMF Decoder PCB Board using Eagle Free Circuit Design Software",
        "Learn How to Simulate Your Circuit using Proteus Professional Software",
        "Learn How to Make a 3D Case for your Project Board to Protect them from Environmental Conditions using Fusion 360"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Programming"
      ],
      "description": "Learn how to make your own Arduino Wireless long distance Controller via DTMF Decoding without the Internet, WiFi or Bluetooth!!\nHave you ever needed to control a device, sensor, or a project from a long-distance location that doesn't have Internet? Are you tired of using Radio, WiFi, or Bluetooth modules that cost a lot and have a limited range, plus the programming pain that comes with them? If yes, then you have come to the right place.\nIn this course, we'll introduce the DTMF technique that will give your simple Arduino board superpowers. With DTMF, you can control anything, anywhere with a simple, cost-effective solution.\nIn this course, you will learn how to write a very simple code to control multiple devices in an easy way.\nWhy you should take this course?\nLearn how to create robot algorithms using the Robot Operating System (ROS)\nGain the skills to use ROS's powerful features for your own robotics project\nLearn how to integrate multiple sensor inputs and actuators with Arduino\nWhy you should learn how to Control Anything Anywhere via DTMF:\nEasier to program\nSave time in the development phase of your project\nLess effort when you want to change or update something in your Arduino-based device/project\nNo need for extra Bluetooth, WiFi, RF, or any other module\nWhat you will learn in this course:\nHow to program Arduino using Arduino IDE\nHow to make your own DTMF Decoder\nHow to interface DTMF Decoder with Arduino\nHow to make your own DTMF Decoder PCB Board using Eagle Free Circuit Design Software\nHow to simulate your circuit using TinkerCad Free Web Simulator\nHow to make a 3D case for your project board to protect it from environmental conditions using Fusion 360\nGoal From This Course:\nLearn how to make your own Arduino Wireless long-distance Controller via DTMF Decoding without the Internet, WiFi or Bluetooth\nRequired Materials:\nArduino\nArduino IDE\nDTMF Decoder\nMobile/Smartphone\nFusion 360\nEagle Free Circuit Design Software\nProteus Professional Software\nWhat You Will Learn\nHow to program Arduino using Arduino IDE\nHow to make your own DTMF Decoder\nHow to interface DTMF Decoder with Arduino\nHow to make your own DTMF Decoder PCB Board using Eagle Free Circuit Design Software\nHow to simulate your circuit using TinkerCad Free Web Simulator\nHow to make a 3D case for your project board to protect it from environmental conditions using Fusion 360\nWho Is This Course For\nAnyone interested in learning how to control devices from a long distance without the internet\nArduino enthusiasts looking to expand their skills\nHobbyists and DIY electronics enthusiasts\nRequirements\nBasic understanding of electronics and Arduino\nArduino board\nDTMF Decoder module\nAccess to a computer with Arduino IDE installed\nMobile/Smartphone\nFusion 360 software (optional for 3D case design)\n\n\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects. We strive to put all our hands-on experience into these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos. This real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nAshraf Said AlMadhoun\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place. Educational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers. The team also works as freelance engineers, helping many students in their graduation projects and providing guidance and consulting for many students over the years to help them kick-start their careers. Ashraf’s core skill is explaining difficult concepts through a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate. His passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering. Ashraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone interested in making his own Arduino Wireless long distance Controller via DTMF Decoding without the Internet,WiFi or Bluetooth",
        "Anyone interested in Controlling sensors, devices or projects from a distance without WiFi, Bluetooth or RF Modules",
        "Anyone looking for an easier to program Arduino for Long distance Control",
        "Anyone looking to Save time in the development phase of your project",
        "Anyone looking for an easy way to change or update something in his Arduino based device/project.",
        "Anyone looking for long distance control without the need for extra Bluetooth, WiFi, RF, or any other module.",
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Embedded Systems Geeks",
        "Arduino Geeks",
        "IoT and embedded systems Geeks",
        "Anyone interested in connecting his project to the internet with a low budget solution",
        "Home Automation Geeks"
      ]
    },
    {
      "title": "Arduino GSM Communication for Internet of Things",
      "url": "https://www.udemy.com/course/arduino-gsm-communication-for-internet-of-things/",
      "bio": "Learn how to send and receive SMS using the A6 GSM module and control gadgets via SMS",
      "objectives": [
        "Learn how to use Arduino and GSM to create Internet of Things applications",
        "Learn SENDING AND RECEIVING MESSAGES USING GSM MODULE",
        "Learn the software and hardware requirements",
        "Learn how to connect your Arduino to your smartphone and the Internet of Things.",
        "Learn how to use the Arduino GSM Shield and the SIM900 GSM module for IoT projects.",
        "Learn how to use Arduino and GSM technology for fun and profit!",
        "Learn how to use the Arduino GSM Shield and the SIM900 GSM module for IoT projects."
      ],
      "course_content": {
        "Interfacing GSM module with Arduino": [
          "Section Intro",
          "About",
          "Introduction",
          "Implementing GSM Communication for IoT Projects with Arduino",
          "Setting Up 1",
          "Setting up 2",
          "Planning Arduino GSM Communication for IoT",
          "GSM Module Basics and Setup",
          "Interfacing GSM Module with Arduino",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Arduino GSM Communication for Internet of Things",
          "Summary",
          "Reading Material"
        ],
        "who we are?": [
          "Section Intro",
          "who we are?",
          "Summary",
          "Reading Material"
        ],
        "Projects": [
          "Section Intro",
          "Project 1",
          "Project 2",
          "Project 3",
          "Hands-On Projects with GSM and Arduino",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Deploying GSM Communication for IoT Devices with Arduino",
          "Arduino-Based GSM IoT Communication",
          "Summary",
          "Reading Material"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Computer",
        "Arduino Board",
        "A6 GSM Module",
        "Arduino Uno",
        "BreadBoard",
        "Fritzing App",
        "Arduino IDE"
      ],
      "description": "Welcome to Arduino GSM Communication for Internet of Things! This course is designed to teach you how to integrate GSM communication with Arduino, enabling your projects to connect with the world through cellular networks. With the A6 GSM module, you can send and receive SMS messages, make calls, and access the internet over a GPRS connection, opening up endless possibilities for your IoT projects.\nCourse Overview:\nThis course provides a thorough introduction to using the GSM module with Arduino. You will learn to connect your Arduino board to a GSM modem, send and receive data using AT commands, and build projects that require internet connectivity. Whether you're interested in remote data logging or controlling devices over the internet, this course covers it all.\nWhat You'll Learn:\nIntroduction to GSM Module: Understand the basics of the A6 GSM module and its functionalities.\nConnecting GSM Module to Arduino: Step-by-step guide on interfacing the A6 GSM module with Arduino UNO.\nSending and Receiving SMS: Learn how to send and receive SMS messages using the GSM module.\nMaking Calls: Understand how to make and receive phone calls using the GSM module.\nInternet Connectivity: Connect to the internet over a GPRS connection and send data.\nPractical Projects: Develop projects such as remote data logging and controlling devices via SMS.\nWho Is This Course For:\nElectronics Enthusiasts: Individuals passionate about electronics and IoT.\nSTEM Students and Educators: Those involved in STEM education looking for practical IoT projects.\nHobbyists: Hobbyists who want to add cellular connectivity to their Arduino projects.\nProfessional Developers: Developers interested in integrating GSM communication into their projects.\nRequirements:\nBasic Electronics Knowledge: A fundamental understanding of electronics is recommended.\nComputer Access: A computer with internet access.\nArduino Kit: Arduino UNO and A6 GSM module for hands-on practice.\nAbout the Instructor:\nEducational Engineering Team is a renowned group of skilled engineers with over 13 years of experience in teaching and practical projects. Led by Ashraf, a seasoned educator and mechatronics engineer, the team has taught over 250,000 students worldwide. Known for their clear and comprehensive teaching style, the team has created over 100 courses on Udemy. Ashraf’s mission is to explore new trends and technology and help educate the world, making complex topics easy to understand and accessible.\nTestimonials:\n\"This course is fantastic! I was able to set up GSM communication with my Arduino in no time. The instructions were clear and easy to follow.\" - John D.\n\"Highly recommend this course for anyone interested in IoT. The projects were practical and really helped me understand GSM communication.\" - Emily S.\n\"A great course that covers all the basics of GSM and Arduino. I feel much more confident in my ability to build IoT projects now.\" - Mark P.\nFAQ Section:\nWho can benefit from this course? This course is ideal for electronics enthusiasts, STEM students, hobbyists, and professional developers.\nWhat are the payment options? Various payment plans are available, including one-time payments and installment options.\nIs there a refund policy? Yes, we offer a 30-day money-back guarantee if you're not satisfied with the course.\nWhat equipment do I need? You'll need a computer with internet access, an Arduino UNO, and an A6 GSM module.\nCan I communicate with peers and instructors? Yes, the course includes forums and Q&A sections for interaction with peers and direct support from instructors.\nCall to Action: Sign up for the course now and start building IoT projects with Arduino and GSM!",
      "target_audience": [
        "this course is applicable to anyone who wants to learn Arduino GSM communication",
        "anyone who has knowledge in Arduino is Advantage",
        "Arduino enthusiasts and IoT developers who want to add GSM to their projects.",
        "Arduino GSM Communication for Internet of Things is for people who want to learn how to connect Arduino with a GSM chip and use it to send data to the internet.",
        "If you are a maker, engineer or entrepreneur who wants to turn your IoT ideas into reality, or if you want to add mobile connectivity to your existing projects, this course is for you."
      ]
    },
    {
      "title": "PCB Design And Manufacturing: The Complete Guide",
      "url": "https://www.udemy.com/course/pcb-design-and-manufacturing-the-complete-guide/",
      "bio": "Learn pcb design and manufacturing by making a variable power supply",
      "objectives": [
        "Design your own Pcbs",
        "Simulate your projects before buying the required components",
        "Transform your circuits from schematics to Pcbs",
        "Make your own Pcb at home",
        "Make a variable DC Power supply as a practical project based on this course content"
      ],
      "course_content": {
        "Introduction": [
          "Course Roadmap",
          "What Is A PCB",
          "Course Requirments",
          "PCB Making Steps"
        ],
        "Proteus Tutorials": [
          "Proteus Tutorials Intro",
          "ISIS",
          "ARES",
          "Flasher Circuit Usign Timer NE555",
          "Zone And Diminsion Modes",
          "Bridges (Via Mode)",
          "3D Visualization"
        ],
        "Project Basics": [
          "Project Basics intro",
          "Differences Between DC And AC",
          "Power Supply Steps",
          "Voltage Regulators",
          "BreadBoard"
        ],
        "Power Supply Design And Manufacturing": [
          "Project making intro",
          "Power Supply Circuit Explanation",
          "Breadboard Test",
          "Toner Transfer",
          "Etching",
          "Drilling",
          "Soldering",
          "Finishing The Power Supply (Input Circuit)"
        ]
      },
      "requirements": [
        "Proteus software",
        "Computer (Windows)",
        "Some tools that will be represented in the second lecture"
      ],
      "description": "Introduction to the fundamentals of printed circuit board design using Proteus software for designing PCBs.\n\nA printed circuit board (PCB) mechanically supports and electrically connects electronic components using conductive tracks, pads and other features etched from copper sheets laminated onto a non-conductive substrate.\nContents and Overview In this course you will learn how to design your own PCB using Proteus and learn how to make the PCB at your home using common tools that are most likely to be found at any home like iron, soldering iron …etc.\nIn 24 lectures this course will make you a confident PCB designer and maker using Proteus software.\nAfter this course you will be able to design and make professional PCBs that work from the first time.",
      "target_audience": [
        "People who have no experience in electronics",
        "Electrical and embedded systems engineering students"
      ]
    },
    {
      "title": "Mastering IoT: Unleashing the Power of Arduino Cloud",
      "url": "https://www.udemy.com/course/arduino-iot-cloud-f/",
      "bio": "From Zero to IoT Hero: Navigate, Innovate & Dominate with Arduino Cloud!",
      "objectives": [
        "Learn how to create an account",
        "Learn how to Build Dashboard",
        "For those already familiar with Arduino programming, this course offers a chance to expand their skills into the realm of IoT and cloud integration.",
        "Students can learn how to collect, analyze, and visualize data from sensors, a skill applicable in data-driven decision-making scenarios.",
        "Learning how to remotely monitor and control devices using smartphones prepares students to create practical applications for home automation"
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Cloud-Connected Devices Interview: Readiness for Arduino IoT Projects",
          "Getting Started",
          "Quiz",
          "Setting Up your device and creating your first thing",
          "Quiz",
          "Adding variables and controlling it using your smartphone",
          "Creating a simple IoT project using DHT11 sensor",
          "Understanding Arduino IoT Cloud and Initial Setup",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "IoT and Arduino Cloud Essentials Practice Test",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Summary",
          "Reading Material",
          "System Demonstration: Real-Time Cloud-Based IoT Dashboard"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Arduino Account"
      ],
      "description": "The Arduino IoT Cloud course offers a comprehensive exploration of utilizing the Arduino platform in conjunction with IoT (Internet of Things) technologies to create and manage smart devices and projects. Students will gain hands-on experience in setting up, programming, and interacting with Arduino boards through the IoT Cloud platform. The course empowers participants to create real-world applications that integrate sensors, connectivity, and cloud-based control for efficient and intelligent systems.\nMastering the Future: Unleashing IoT with Arduino Cloud is a comprehensive exploration of harnessing the power of the Arduino platform in conjunction with IoT technologies. This course empowers participants to create and manage smart devices and projects with real-world applications, integrating sensors, connectivity, and cloud-based control for efficient and intelligent systems.\nWhy Enroll in This Course?\nExplore IoT's Impact: Understand how the Internet of Things (IoT) is transforming industries and daily life, gaining insight into its immense potential.\nHands-On Learning: Get practical, hands-on experience working with Arduino boards and the IoT Cloud platform, bridging the gap between theory and application.\nArduino Expertise: Become proficient in using Arduino, a leading platform in electronics and IoT, opening doors to various projects and opportunities.\nReal-World Applications: Learn to create IoT projects with practical applications, from home automation to environmental monitoring, and solve real-world problems.\nCloud Integration: Master connecting devices to the cloud, enabling remote control and data collection for your IoT projects.\nInnovative Solutions: Equip yourself to innovate and create IoT-based solutions, fostering creativity and entrepreneurial ventures.\nNo Experience Required: All skill levels are welcome, with instructors guiding participants regardless of prior experience.\nCertification: Earn a certificate of achievement upon course completion, validating your IoT and Arduino Cloud skills and boosting career prospects.\nFuture-Proofing: Gain skills relevant to the ever-growing IoT industry, ensuring you're prepared for future technological advancements.\nShape the Future: Be part of the IoT revolution, contributing to shaping the future of technology and its applications.\nCareer Advancement: Enhance your career prospects by acquiring sought-after skills in the expanding field of IoT.\nNetworking Opportunities: Connect with fellow enthusiasts, engineers, and innovators in the IoT community, building valuable professional networks.\nProblem Solving: Develop critical problem-solving skills by tackling real-world challenges with IoT solutions.\nInstructor Expertise: Learn from experienced instructors with deep knowledge in IoT and Arduino technology.\nFlexibility: Adapt to your learning pace and schedule, making it accessible for a wide range of learners.\nCourse Outline:\nIntroduction to IoT and Arduino (Session 1):\nIntroduction to the Internet of Things\nIntroducing Arduino IoT Platform\nWhy is Arduino Cloud over the options?\nIntroducing our Tutorial Series\nConclusion\nGetting Started:\nArduino Cloud Plan\nCreating an Arduino Account\nSigning Up and Creating an Agent for Windows\nSetting Up Your Device and Creating Your First Thing\nArduino Cloud:\nCreating Your First Thing\nAdding Variables and Controlling Them Using Your Smartphone\nLesson Objectives\nCloud Variables\nBuild Dashboard\nCreating a Simple IoT Project Using DHT11 Sensor\nConnecting DHT11\nWiring and Programming\nMonitoring\nComponents\nSimple Project\nEnrolling in this course offers a unique opportunity to embrace the world of IoT, master Arduino, and become part of the technological revolution that is reshaping industries and everyday life. Don't miss out on this chance to gain valuable skills and be at the forefront of innovation.\nBy the end of the Arduino IoT Cloud course, students will have the skills and confidence to create and deploy IoT applications using Arduino boards and the IoT Cloud platform. They will be equipped to design and develop smart devices that interact seamlessly with the digital world, paving the way for innovative solutions in various domains.\nEnroll in this course Now!\nWhat You Will Learn\nBasics of IoT and the Arduino IoT Cloud platform\nSetting up and programming Arduino boards for IoT projects\nIntegrating sensors and connectivity for smart devices\nCloud-based control and data collection\nReal-world applications and innovative IoT solutions\nWho Is This Course For\nAspiring IoT developers and enthusiasts\nArduino hobbyists and electronics enthusiasts\nStudents and professionals looking to expand their skills in IoT\nAnyone interested in creating smart devices and IoT projects\nRequirements\nBasic understanding of electronics and programming\nInterest in IoT and Arduino projects\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Students",
        "Begginers",
        "Entrepreneurs",
        "Curious Learners"
      ]
    },
    {
      "title": "Creality Rundown (3D Printer Course)",
      "url": "https://www.udemy.com/course/creality-rundown/",
      "bio": "Learn EVERYTHING related to Creality 3D printer Products, from somebody who works closely, with Creality",
      "objectives": [
        "Step By Step Assembly of most Creality Filament 3D Printers, OLD *AND* NEW",
        "Step By Step SETUP of most Creality 3D Filament Printers, OLD *AND* NEW",
        "How to Manually LEVEL YOUR BED on older machines",
        "How to Manually set your Z-OFFSET on older machines",
        "Troubleshooting common hardware problems",
        "Upgrades and Repairs",
        "Working CURA, Creality Print, and ORCA Slicer, with your Creality Printer",
        "Working with CR/BL Touch, and ABL Mesh",
        "Using Creality Cloud",
        "Working with the Creality HALOT MAGE Resin Printer"
      ],
      "course_content": {
        "Introduction": [
          "WHY you should take a 3D printer course, with me."
        ],
        "Nebula Pad": [
          "Load/Remove Filament on a Modern Ender Printer, running Klipper or Nebula Pad"
        ],
        "CREALITY PRINT 4.x (consider, updating to 5.x)": [
          "Slicing your 1st Model with Creality Print 4.X",
          "Update Creality Print",
          "Making Holes and Shapes in a Model"
        ],
        "Creality Print 5.0 (Please upgrade to CP6)": [
          "Intro to Creality Print 5",
          "Creality Print 5 Tutorial"
        ],
        "Creality Print 6": [
          "*DEAP DIVE* TUTORIAL",
          "Intro to Painting, for Multicolor Printing",
          "PRINT BY OBJECT"
        ],
        "HOMEWORK": [
          "Print this Test Cube"
        ],
        "Working with ORCA Slicer": [
          "How to use ORCA SLICER on Creality K1, K1C, K1 MAX, (and others)"
        ],
        "Creality K1 Series": [
          "Complete K1 Unboxing, and Setup",
          "Install the K1 AI Camera, and create your first Time Lapse",
          "K1 MAX Unboxing and Build",
          "K1 MAX Setup and 1st Test Print",
          "How to Clean and Lube the X/Y Rails",
          "Making & Accessing a Timelapse video on Creality K1, K1C, K1 MAX",
          "Changing the Filament",
          "How to replace or upgrade the Creality K1 or K1 MAX Extruder",
          "How to replace Creality K1 or K1 MAX Hot End or Upgrade to Unicorn Hot End",
          "CFS COLOR UPGRADE KIT for K1 and K1 MAX (Demo on K1 MAX)"
        ],
        "Ender 3 V3": [
          "Ender 3 V3 - Step By Step Unboxing & Assembly"
        ],
        "Ender 3 V3 Plus": [
          "Unboxing and Assembly"
        ]
      },
      "requirements": [
        "Own a Creality FDM (Filament) 3D Printer, such as an ENDER 3, K1, or CR10",
        "1 Roll of Filament, or a Sample Roll that may have shipped with your printer.",
        "Computer with CURA, ORCA, or CREALITY PRINT installed. (They are FREE)"
      ],
      "description": "Are you any of these:\nYou've bought a 3D Printer. The Box is in your living room. Now what..\nYou built your 3D Printer, and have no idea what to do next..\nYou've started using your 1st 3D Printer, but, all your prints are junk..\nYou installed a Slicer program, and are staring at the screen, with a headache..\n\n\nIf so. This is the Course for you.\n\n\nThis course is taught by ME, Gregg Cerenzio. I work closely, with Creality, as an adviser, and creator, of Service, and Instructional content for their products. I have a close, personal relationship with them, and a deep understanding of their ecosystem.\n\nI am a retired Computer Technician, and Network Administrator, for countless major Corporations, with over 25 years of experience, Solving problems, and teaching others, to get along better, with their Tech. I also host two partnered 3D Printing YouTube Channels, and operate a top 10% Etsy Shop, for 3D Printed items. I am an internationally known Cosplay/Movie Prop maker.\n\nHaving donated endless hours of my time, assisting 3D Printer owners, in various internet forums, on a daily basis, I have become familiar with the common problems, facing them. I utilize that experience, to create in-depth courses, for new, frustrated 3D Printer owners, can learn the craft, overcome their issues, and become print READY, rather than print SPAGETTI!\nMy courses will also help, those that CAN print, learn to print more effectively, to get better results, and rise above the average maker, with limited knowledge.\n\nIn this course, I will take you on a Journey from DAY ONE with your Creality Printers, all the way, to advanced methods, for high quality results. I'll explain things, using easy to comprehend language and methods.",
      "target_audience": [
        "3D Printer Beginners, that know NOTHING about 3D Printing",
        "People struggling to print properly",
        "People looking to up their 3D printing game, by learning new things",
        "People struggling to get things to \"Stick\" to the bed.",
        "People looking to learn how to slice STL files properly, for better results"
      ]
    },
    {
      "title": "2 Courses in 1 : Learn IOT with ESP8266 and ESP32 Cam module",
      "url": "https://www.udemy.com/course/the-internet-of-things-complete-beginners-course/",
      "bio": "Two in one. Learn about ESP8266 and ESP32 Camera module. Make lots of projects using these modules.",
      "objectives": [
        "You will learn everything about NODEMCU and ESP32 CAM development board.",
        "You will learn everything about Arduino IDE.",
        "You will learn to make projects with ESP32 CAM",
        "You will learn how to use controller as wifi Accesspoint and wifi Client.",
        "You will learn separately ADC and PWM of NODEMCU.",
        "You will learn how to add webserver to your project.",
        "You will learn to Face and eye detection using ESP32 CAM",
        "You will learn how to use and add Blynk IOT platform to your project.",
        "Also you will learn how to use and add Thingspeak IOT platform to your project.",
        "You will learn some important IOT protocols.",
        "you will learn about IFTTT protocol in detail."
      ],
      "course_content": {},
      "requirements": [
        "Nothing required."
      ],
      "description": "About this course :\nThis course is fully practical oriented.\nIt covers all basic IOT platforms and all important protocols like MQTT, IFTTT, SMTP and etc.\nEvery sections has quiz. Questions are related to content of that particular section\nAlso some sections has projects that helps to improve skills.\nThis course is based on NODEMCU module.\nApparatus I used\nI have used some basic electronics components in this course, like LED, Push button, LM35, Vibration sensor, Gas sensor, Sound sensor and etc.\nIf you don't have these components, don't worry. I will demonstrate everything.\nWhat will you learn section by section\nOn section 1 we will discuss on introduction to NODEMCU and how to use Arduino ide for this course.\nOn second section I elaborated the basic programming experiments with NODEMCU.\non third, I will teach more about ADC and PWM of NODEMCU with experiments.\nNext section covers wifi related actions like acces point, wifi scan and connection with board.\nOn fifth section I will teach you how to interface Blynk IOT platform to your project with some experiments and one project.\nNext sixth section covers about Thingspeak IOT platform with some experiments and one project.\nOn seventh section I elaborated the important protocols in IOT.\nOn eighth section I will tech you to the IFTTT platform to add your projects. In this section I taught 2 advanced experiments, you can learn easily.\nCourse outcome\nAfter this course you can confidently make projects with NODEMCU.\nYou can IOT platforms to your project like Blynk and Thingspeak.\nYou can use several sensors for IOT projects as I used in this course.\nYou are now a basic IOT developer.\nSecond course!!!!!!!!!!!\nEsp32 Cam module\nAbout this course\nwelcome to this amazing project oriented course. this course is all about ESP32 CAM module. through this course you can make your own projects using this module. What ever needed to make projects is explained in this course.\nFirst of all this course is fully practical oriented. This course covers all the basics of ESP32 CAM module and Arduino software which is used to program the ESP32 CAM module. also i explained about the FTDI module.\nWhy this ESP32 CAM ?\nyou may seen all the IOT courses. those are made with ESP8266 and ESP32. using these device we can only do some advanced things. also it is concerned in this course, because without these devices we cant learn basics. but, these device do not have camera and SD card features. this is advantage of this module over ESP8266 and ESP32.\nWhat we can do with ESP32 CAM ?\nUsing this camera feature, we can create projects like spycam, security system, door lock system based on face recognition, and etc. we can do projects wherever need face recognition for example: face recognition based attendance system. also we can recognise eye, text, objects and so on. And using SD card feature, we can save taken images and videos. we do not need to bother about storage.\nDevices and software's i used in this course :\nESP32 CAM MODULE and FTDI programmer module\nFor programming i used Arduino software, thats it.\nwhat will you learn by section by section :\nOn first section, I explained about the hardware(ESP32 CAM), software, and programming connection with FTDI programmer. Also i explained how to program with Arduino uno board.\nIn second section, I taught how to make your own live video streaming with local IP address and ESP32 CAM.\nIn third section, you will learn about the Blynk IOT platform and how to make live video streaming with blynk IOT platform.\nIn Fourth section, I will teach you all about the SD card feature and how to use it with your projects. And i explained how to store image taken by ESP32 CAM module in SD card.\nIn Fifth section, this is an exciting section. in this i taught about the face and eye recognition using python. And i explained this through the Face and Eye recognition project.\nIn sixth section, i taught about the SMTP server. And how to use it with ESP32 CAM. here, I explained with the project named as how to send email notification with image attachments( Image taken with ESP32 CAM ).\nIn seventh and eighth sections you will learn to make telegram alert with image and take photo with Blynk IOT.\nNinth section consist all the codes and details.\nAfter this course what you can do :\nAfter this course completion you can create your own security  for your home security system. Also you would be learnt about Blynk and some IOT platforms. like other IOT courses, you will be learn basic IOT developer things.\nSee some of the industries started to use ESP32 boards. so as a techy learning about these boards is essential. that is the esssence of this course. Thank you.",
      "target_audience": [
        "Anyone with interest in IOT."
      ]
    },
    {
      "title": "Add WiFi to Arduino Boards: Enable Web Connectivity Features",
      "url": "https://www.udemy.com/course/add-wifi-to-arduino-boards/",
      "bio": "Make your Arduino a Web Enabled Board without WiFi Module with this step-by-step practical guide",
      "objectives": [
        "How to download and install the required software",
        "The user interface and the components that you need to use to program Arduino without coding.",
        "How to send output signals to different Arduino pins.",
        "How to read digital input and control output."
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch"
      ],
      "description": "This course is designed for people who have a basic understanding of Arduino and want to learn how to add internet connectivity to their projects. The course covers everything from setting up the WiFi connection to sending data over the web. By the end of this course, students will be able to build projects that can communicate with the outside world using the internet.\nIntroduction: Adding WiFi capabilities to Arduino boards is a great way to add web connectivity to your projects. While using an Arduino WiFi shield can be costly and complex, this course will teach you how to use an alternative board that is cheaper, faster, and easier to set up. This board plugs into your Arduino and provides a WiFi interface, allowing you to access websites, send data to the internet, and more.\nAdvantages of This Course:\nEasily add web connectivity to your Arduino boards.\nControl your projects remotely and unlock new possibilities.\nThe ESP8266 WiFi module is a complete Wi-Fi network adapter that connects easily to any microcontroller-based design using its Serial Communication or UART interface.\nWhy You Should Take This Course:\nLearn how to add WiFi to Arduino UNO.\nConnect your Arduino to the internet using the ESP8266 WiFi Module.\nUnderstand the components required and set up a connection.\nStart your own projects immediately and learn at your own pace.\nDiscover a better and cheaper alternative to an Arduino board with built-in WiFi and Bluetooth.\nCourse Process: The course covers various ways to communicate with ESP8266, including sending and receiving data via the internet and uploading data regularly. Learn how to interface with Arduino wirelessly using your phone (Android or iPhone) without needing an internet connection. The ESP8266 will act as an Access Point (AP Mode), giving other devices access to the Wi-Fi network and connecting them to a wired network.\nSimulated Boards:\nArduino boards\nArduino clones\nESP8266, ESP32\nRaspberry Pi\nTeensy\nFemto IO\nControllino, Goldilocks Analogue, FreeSoC2, chipKIT, micro:bit, Maple Mini, and other Arduino clones\nProgramming Without Coding: Learn to program the Arduino board without writing a single line of code. Simply drag and drop to construct any Arduino device. Additionally, learn to use other modules such as Bluetooth, SPI, I2C, graphical LCDs, and stepper motors.\nClient Applications: If you're familiar with building mobile apps, web apps, web services, or web development, you can create client applications that send TCP requests to ESP. Examples include Remote Control, Web Control Panel, ChatBot, Push the Button app, and more.\nSign Up, Learn, and Have Fun!\nWhat You Will Learn:\nAdding WiFi to Arduino\nConnecting Arduino to the internet\nSetting up WiFi connections\nProgramming without coding\nCreating client applications\nWho Is This Course For:\nArduino enthusiasts\nElectronics hobbyists\nStudents and educators\nAnyone interested in adding internet connectivity to their projects\nRequirements:\nBasic knowledge of Arduino\nWillingness to learn and experiment\n\n\nAbout the Instructor: Educational Engineering Team\nA team of skilled engineers sharing knowledge with the world. Educational Engineering Team is a leading team in the microcontroller industry, with over 13 years of experience in teaching and doing practical projects. We strive to put all our hands-on experience into these courses, providing a step-by-step blueprint on how to tame simple and complex topics in easy and digestible bite-sized videos.\nAshraf Ashraf is an educator, mechatronics engineer, electronics and programming hobbyist, and maker. He creates online video courses on the EduEng YouTube Channel, which has more than 4 million views and 20k+ subscribers. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology, helping educate the world and make it a better place. His online courses have helped over 250,000 people from around the world to improve their skills and careers in the industry.",
      "target_audience": [
        "Anyone Interested in Programming Arduino Without coding",
        "Anyone Interested in Teaching Arduino for Kids and Old people without  the hassle of coding",
        "Anyone Interested in Learning A New Way to Program Arduino",
        "Anyone Interested in Turn Ideas into Projects quickly"
      ]
    },
    {
      "title": "Internet of Things (IoT) with ESP8266 & Arduino IDE",
      "url": "https://www.udemy.com/course/internet-of-things-iot-with-esp8266-arduino-ide/",
      "bio": "Completely Learn Programming in ESP8266 Wi-Fi SoC for Building IoT Products",
      "objectives": [
        "Learn how to design code and Build IoT Products",
        "Learn to use Arduino IDE and Arduino Programming Language from scratch",
        "Learn how to connect sensors and actuators to commercial cloud platforms",
        "Learn to fetch data from sensors like Variable Resistor",
        "Builld IoT Projects in this course",
        "REST HTTP Methods - GET, POST, PUT etc",
        "All services offered by ThingSpeak Cloud platform - Data Storage, ThingTweet, TalkBack, ThingHTTP, React, etcc"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course IoT Programming Using Nodemcu (ESP8266)"
        ],
        "Introduction to (IoT) Internet Of Things": [
          "Introduction to (IoT) Internet Of Things"
        ],
        "Hardware used in this Course (Nodemcu)": [
          "Features of NodeMCU (ESP8266) Explained Clearly"
        ],
        "Software used in this Course": [
          "Downlaoding Arduino IDE For Nodemcu (ESP8266) Programming",
          "Features of Arduino IDE Explained"
        ],
        "Interfacing LED's to ESP8266": [
          "Interfacing LED with Nodemcu (ESP8266)"
        ],
        "Interfacing of Pushbuttons to Nodemcu": [
          "Interfacing Pushbutton with Nodemcu (ESP8266)"
        ],
        "Wifi Networks Explained": [
          "WifiModes For ESP8266 Explained"
        ],
        "Connecting Nodemcu to WiFi Network": [
          "Connecting Nodemcu (ESP8266) to Wifi Network in Station Mode",
          "Dynamically connecting Nodemcu to Wifi Network in Soft Access-Point Mode"
        ],
        "Basics of HTTP (Hyper Text Transfer Protocol)": [
          "Basics of HTTP (Hyper Text Transfer Protocol) Explained"
        ],
        "Introduction to Thingspeak IoT Platform": [
          "Thisngspeak IoT Platform Introduction"
        ]
      },
      "requirements": [
        "Basics of Electronics Components",
        "Basic C Programming But Manditory"
      ],
      "description": "Over a 29+ lecture videos, 7.7+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of IoT Programming in ESP8266, but also learn the very basics of Arduino IDE Basics required for building your own IoT products connected to Thingspeak Cloud, how it really works and how it is connecting and communicating ESP8266 with Cloud.\nHi, welcome you all to this course on Internet of Things (IoT) with ESP8266 & Arduino IDE.\n-> You will learn in detail about the ESP8266 Programming in Arduino IDE\n-> You will learn all peripherals IoT Programming Methodologies for Passing the data's to and from the Thingspeak Cloud Platform.\nThe course is structured for the need of learners to understand ESP8266 & Arduino IDE from scratch till you master this skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the AVR microcontroller than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.\n\n\nCurriculum:\n-> LED Blink in ESP8266\n-> Pushbuttons with ESP8266\n-> Navigate through ThingSpeak Cloud Platform\n-> Upload Random Numbers to Cloud Platform from Hardware - ESP8266-NODEMCU using REST HTTP GET method.\n-> Using React and ThingTweet Service [IoT Cloud]\n-> Interfacing Variable Resistor with ESP8266\n-> Wi-Fi Modes\n-> Connecting ESP8266 in Station Mode\n-> Connecting ESP8266 dynamically to Access Point\n-> Push data to the cloud using REST HTTP POST Method\n-> Read Data from Cloud\n-> TalkBack\n-> TalkBack Add Command\n-> TalkBack Update Command\n-> TalkBack Read Command\n-> TalkBack Execute Command\n-> ThingHTTP\n-> IFTTT\n-> Voice Control Using Google Assistant.\n-> Push Notification to Mobile Using IFTTT.\n\n\n\n\nThis course starts with the very basics of IoT and gradually the complexity is increased in a scientific manner to attain the learning outcomes.\nAfter completion of this course, You will be able to:\nBuild IoT products using ESP8266 Wi-Fi SoC.\nDeploy IoT product to ThingSpeak Cloud platform using all its services\nIntegrate ThingSpeak IoT Cloud, IFTTT, google assistant to develop products.",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "People with some experience in electronics",
        "People with an beginner knowledge of embedded systems",
        "Electronics students and hobbyist"
      ]
    },
    {
      "title": "The Complete computer motherboard schemes analysis course",
      "url": "https://www.udemy.com/course/the-complete-computer-motherboard-schemes-analysis-course/",
      "bio": "Basic Troubleshoot|hardware electronics technician|Chip level repairing|laptop circuit diagram for beginners|PCB design",
      "objectives": [
        "How to Read and understand any motherboard scheme;",
        "Working principle of the motherboard;",
        "Measurement points and the correct way to take Measurement on the motherboard;",
        "The meaning of the symbols used in the motherboard circuit diagrams;",
        "How to analyze the motherboard schemes;",
        "How to analyze schemes and finding motherboard faults;",
        "The functioning of motherboard components and the relationship between them;"
      ],
      "course_content": {},
      "requirements": [
        "Have knowledge of basic computer hardware.",
        "Have knowledge of Basic electronics."
      ],
      "description": "The Complete computer motherboard schemes analysis course is intended for those interested in computers and electronics.\n· Continuous updates\nTopics that we will be discussed in this course are :\nMotherboard Block Diagram\nMotherboard Power Rail\nMotherboard Scheme Symbols\nCPU ( Central Processing Unit ) Scheme Analysis\nGMCH ( Northbridge ) Scheme Analysis\nICH ( Southbridge ) Scheme Analysis\nRAM Scheme Analysis\nKBC Scheme Analysis\nBIOS IC Scheme Analysis\nCharge IC Scheme Analysis\nSystem Power 3V/5V Scheme Analysis\nCPU System Power Analysis\nRAM System Power Analysis\n1,05V/1,5V System Power Analysis\nMotherboard Connectors Scheme Analysis etc...\n\n\nWe will go deeper, study, and analyze all these Parts using real schematics in detail.\nupon completion of this course, you will gain 7 skills that will make you a hardware professional and have a deep understanding of motherboard circuit diagrams.\nSkill N°1: Be Professional in laptop schematics reading.\nSkill N°2: Go deeper into understanding computer work.\nSkill N°3: Knowing the measurement points and the correct way to do so on the motherboard.\nSkill N°4: Knowing the meanings of the symbols used in the motherboard circuit diagrams.\nSkill N°5: Go deeper into understanding and analyzing the motherboard circuit.\nSkill N°6: Building a high capability in analyzing schemes and finding motherboard faults.\nSkill N°7: Go deeper into understanding the functioning of motherboard components and the relationship between them.\nTo say the truth, this course is for those who want to be professional in computer scheme analysis and motherboard repair. It will be a reference for you in solving obstinate computer failures. If you are interested in one of the points we talked about before, then this course is for you.\nI want to add that by understanding this course, you will be able to understand the scheme of any computer motherboard, regardless of its model or type. because the computer working principle is the same.\n\n\nEnroll in this course, and Join the caravan of maintenance and circuit diagram analysis experts.",
      "target_audience": [
        "Anyone how wants to go deeper into understanding or repairing computer motherboards.",
        "Electronic and computer technicians.",
        "Students who are interested in schemes analysis, hardware and electronics."
      ]
    },
    {
      "title": "Arduino for Beginners - (Complete Course From Scratch)",
      "url": "https://www.udemy.com/course/arduino-programming-course-for-beginners-zero-to-hero/",
      "bio": "Master Arduino Starting From Zero - Learn with Practical Arduino Projects and Interfaces",
      "objectives": [
        "Programming Arduino microcontroller in Arduino IDE",
        "You will learn how to program a Arduino Microcontroller from scratch",
        "Build your own projects with the Arduino microcontroller..",
        "You will be learning all the peripherals programming from scratch no libraries used in Arduino IDE",
        "Everything you want to learn in Arduino Uno",
        "Understand analog and digital inputs and outputs",
        "Measure the distance between the sensor and an object in front of it",
        "Display text on a liquid crystal display using Arduino",
        "Write simple Arduino sketches that can get sensor reading, make LEDs blink, write text on an LCD screen, read the position of a potentiometer, and much more.",
        "Understand the ways by which the Arduino can communicate with other devices",
        "Understand what is the Arduino.",
        "Build simple circuits around the Arduino Uno, that implement simple functions.",
        "With the Arduino IDE, write, compile and upload sketches."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Hardware and Software used in this Course": [
          "Hardware and Software used in this Course",
          "Downloading Arduino IDE and Installing in PC"
        ],
        "Data Conversions in Embedded C": [
          "Binary to Hexadecimal | Hexadecimal to Binary"
        ],
        "LED's with Arduino": [
          "Interfacing LED with Arduino"
        ],
        "7Segment Display with Arduino": [
          "7Segment Display working principle explained",
          "Interfacing 7Segment Display with Arduino",
          "Multiplexing Two 7Segment Display's with Arduino"
        ],
        "LCD's with Arduino": [
          "LCD Working Explained in 8-Bit Mode",
          "Interfacing LCD with Arduino in using inbuilt Library",
          "Interfacing LCD with Arduino in 8-Bit Mode without inbuilt Library",
          "LCD Working Explained in 4-Bit Mode",
          "Interfacing LCD with Arduino in 4-Bit Mode without inbuilt Library"
        ],
        "Pushbuttons with Arduino": [
          "Input devices working logics explained",
          "Interfacing Pushbuttons with Arduino"
        ],
        "Relay with Arduino": [
          "Relay working principle explained",
          "Interfacing Relays with Arduino"
        ],
        "Infrared sensor with Arduino": [
          "Interfacing IR sensor with Arduino"
        ],
        "DC Motors with Arduino": [
          "Interfacing DC Motors with Arduino"
        ]
      },
      "requirements": [
        "Basic knowledge on electronics components",
        "Basic knowledge on C programming not mandatory"
      ],
      "description": "Over a 47+ lecture videos, 10+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of Arduino Uno Microcontroller, but also learn the very basics of Arduino Microcontroller internal structure and hardware schematics required for building your own products out of Arduino  (Atmega328) microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on Arduino Programming Course for Beginners.\nThe course is structured for the need of learners to understand microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the AVR microcontroller than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "People with some experience in electronics",
        "People with an beginner knowledge of embedded systems",
        "Electronics students and hobbyist"
      ]
    },
    {
      "title": "Learn Microcontroller 8051 from basics to advance",
      "url": "https://www.udemy.com/course/learn-microcontroller-8051-from-basics-to-advance/",
      "bio": "Microcontrollers",
      "objectives": [
        "On completion of this course student will describe the architecture of 8051and the organization of 8051 microcontroller",
        "On completion of this course student will Identify the Instruction set and addressing modes of 8051 microcontroller",
        "On completion of this course student will Develop programming skills in assembly language",
        "On completion of this course student will Explain the need for different interfacing devices."
      ],
      "course_content": {
        "Introduction": [
          "Introduction and features of 8051",
          "Bus structure",
          "Block diagram of 8051 microcontroller",
          "Registers of 8051",
          "Registers of 8051_02",
          "Registers of 8051_03",
          "Registers of 8051_04"
        ],
        "Memory organization of Microcontroller": [
          "Harvard and Princeton architecture",
          "Internal RAM structure of 8051 microcontroller",
          "On-chip ROM and external memory",
          "Pin diagram of 8051",
          "Input and output ports of 8051",
          "Location of special function registers in 8051"
        ],
        "Serial Communication of 8051": [
          "Parallel and Serial data transfer",
          "Synchronous and asynchronous data transfer",
          "SCON and SBUF register function",
          "PCON Register"
        ]
      },
      "requirements": [
        "Basic knowledge of electronic devices and Digital electronics like Combinational and sequential circuits"
      ],
      "description": "8051 microcontroller was designed in 1981 by INTEL. In this course I am going discuss difference between microprocessor and microcontroller. 8051 microcontroller is designed by Intel in 1981. It is an 8-bit microcontroller. It is built with 40 pins DIP (dual inline package), 4kb of ROM storage and 128 bytes of RAM storage, 2 16-bit timers. It consists of are four parallel 8-bit ports, which are programmable as well as addressable as per the requirement. An on-chip crystal oscillator is integrated in the microcontroller having crystal frequency of 11.0592MHz.\nBasic structure of ALU and registers. Block diagram of 8051 microcontroller. register organization of 8051 microcontroller, pin diagram of 8051 microcontroller. Function of special registers, Addressing modes and Instruction set of 8051 microcontroller.\nAssembly language Programming, Memory interfacing, Interfacing with peripheral ICs 8251- serial I/O, 8255-parallel I/O ( The 8255A is a general purpose programmable I/O device designed to transfer the data from I/O to interrupt I/O under certain conditions as required. It can be used with almost any microprocessor.\nIt consists of three 8-bit bidirectional I/O ports (24I/O lines) which can be configured as per the requirement.) ,\n8257-DMA( DMA stands for Direct Memory Access. It is designed by Intel to transfer data at the fastest rate. It allows the device to transfer the data directly to/from memory without any interference of the CPU.\nUsing a DMA controller, the device requests the CPU to hold its data, address and control bus, so the device is free to transfer data directly to/from the memory. The DMA data transfer is initiated only after receiving HLDA signal from the CPU.) ,\n8259 PIC( The 8259 is known as the Programmable Interrupt Controller (PIC) microprocessor. This chip combines the multi-interrupt input source to single interrupt output. This provides 8-interrupts from IR0 to IR7.\nThe 8259A was the interrupt controller for the ISA bus in the original IBM PC and IBM PC AT. By connecting 8259 with the CPU, we can increase the interrupt handling capability. ),\n8251 USART, serial communication and types of serial communication.  8051 microcontrollers have 4 I/O ports each of 8-bit, which can be configured as input or output. Hence, total 32 input/output pins allow the microcontroller to be connected with the peripheral devices.\nInput Configuration\nIf any pin of this port is configured as an input, then it acts as if it “floats”, i.e. the input has unlimited input resistance and in-determined potential.\nOutput Configuration\nWhen the pin is configured as an output, then it acts as an “open drain”. By applying logic 0 to a port bit, the appropriate pin will be connected to ground (0V), and applying logic 1, the external output will keep on “floating”. 8051 has 5 interrupt signals, i.e. INT0, TFO, INT1, TF1, RI/TI. Each interrupt can be enabled or disabled by setting bits of the IE register and the whole interrupt system can be disabled by clearing the EA bit of the same register.",
      "target_audience": [
        "Beginners electronic circuits developer",
        "Engineering students"
      ]
    },
    {
      "title": "Mastering Arduino Control with Python",
      "url": "https://www.udemy.com/course/mastering-arduino-control-with-python/",
      "bio": "Mastering Arduino Control with Python: Unlock the Power of IoT",
      "objectives": [
        "Learn Python Programming Language",
        "Learn to interface Arduino with Python.",
        "Control Arduino",
        "Save Arduino Sensors data to a file or database with Python",
        "Control Arduino over the internet with Python"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Python Basics": [
          "Installing Python",
          "Installing VS Code",
          "Math and Order of Operations",
          "Data Types in Python",
          "Creating Variables",
          "Strings and String Operations",
          "Booleans and Comparison Operators",
          "If Statement",
          "In Operator",
          "Formatted String",
          "Special Characters and Data Type Conversion",
          "User Input",
          "Creating Lists",
          "Lists Methods and Operations",
          "Lists Slicing and Copying",
          "Check the Existence of Certain Value in a List",
          "Foor Loop",
          "Tuples",
          "Creating Dictionary",
          "Looping a Dictionary",
          "While Loop",
          "Creating Functions",
          "Function Parameters",
          "Function Return Value",
          "Exceptions",
          "Files",
          "Imports",
          "Installing 3rd Party Libraries"
        ],
        "Control Arduino with Python": [
          "Installing PySerial and Checking for Available Ports",
          "Reading Data From Arduino",
          "Writing Data to Arduino and Controlling an LED",
          "Pros and Cons of Serial Communications"
        ]
      },
      "requirements": [
        "Basic Arduino Level"
      ],
      "description": "Welcome to the comprehensive Udemy course on controlling Arduino using Python! In today's world of interconnected devices, the fusion of Arduino and Python offers an incredible gateway into the Internet of Things (IoT). This course is designed to equip you with the knowledge and skills needed to seamlessly integrate these powerful platforms for building innovative projects and automating real-world applications.\nThroughout this course, you'll embark on a journey from the basics of Arduino and Python to mastering the art of controlling your Arduino-based hardware using Python scripts. Whether you're a beginner or an experienced enthusiast, this course caters to all levels of expertise.\nHere's a glimpse of what you'll learn:\nIntroduction to Arduino and Python: Get familiar with Arduino boards, their functionalities, and Python programming basics.\nSetting Up the Development Environment: Learn how to set up the Arduino IDE and configure Python for interacting with Arduino.\nCommunication Protocols: Dive into understanding communication protocol: Serial for seamless interaction between Arduino and Python.\nControlling Sensors and Actuators: Explore how to read sensor data and control actuators such as LEDs, and more, using Python scripts.\nBy the end of this course, you'll be proficient in leveraging Python's flexibility and Arduino's versatility to control hardware, collect data, and create innovative IoT solutions. Whether your goal is personal projects, academic exploration, or professional development, this course will equip you with the skills and confidence to embark on your own Arduino-Python ventures.\nJoin us now and unlock the endless possibilities of controlling Arduino with Python! Let's dive into the exciting realm of IoT together.",
      "target_audience": [
        "Python Programmers",
        "Arduino Makers",
        "Hobbyist",
        "IoT Engineers"
      ]
    },
    {
      "title": "Get a job in Hardware Asset Management - the basics",
      "url": "https://www.udemy.com/course/ham-setup-guide/",
      "bio": "Guide to ITIL discovery, design audit, and road mapping your deliver of a ITIL hardware asset management database. (ITAM",
      "objectives": [
        "Definitions of assets and CIs and the importance of difference",
        "Understanding of policy and process development in HAM",
        "Understand how to map out processes to understand how HAM can fit in",
        "Establishing core basics; asset labelling, agreement of field definitions, core data",
        "How to transition from Manual to automated Hardware Asset Management",
        "Configuration Management - working in a manual manner and how to transition to automation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Understanding the basics - terminologies",
          "User Research - understanding the business and end user needs",
          "Strategic viewing before you begin",
          "Understanding the scope, size and expectations of your organization",
          "Some memory testing!",
          "ITIL and HAM"
        ],
        "Policy and Process - how to write": [
          "Why do I need a policy and what should be in it?",
          "What is process mapping and how it will impact your delivery",
          "Process Mapping considerations - Joiners, movers, leavers and much more"
        ],
        "Managing Logistics": [
          "What other activities you need consider.."
        ],
        "Auditing and controls": [
          "Auditing tips and controls",
          "Reporting and ROI"
        ],
        "Preparing for an automated world": [
          "Automation preperation"
        ],
        "Where to find jobs in SACM": [
          "Some tips for helping get that first job"
        ],
        "Summary": [
          "Some additional resource and reading",
          "Summary and final tips"
        ]
      },
      "requirements": [
        "Basic knowledge of IT equipment",
        "no Asset management knowledge required, it will be taught at the start"
      ],
      "description": "Thinking of a career in asset management and want knowledge to get you past interview?\nAlready an asset manager but want some tips and artefacts?\nWelcome to the ultimate guide to hardware asset management operations!\n\n\nIn today's fast-paced and technology-driven world, hardware asset management has become an essential aspect of any successful business. Whether you're a small business owner or part of a large corporation, managing your hardware assets effectively is crucial to maximizing productivity and reducing costs. That's why we've created this comprehensive course that covers everything you need to know about hardware asset management operations.\n\n\nOur course is designed to equip you with the skills and knowledge needed to manage your hardware assets effectively, from inventory management to equipment retirement. We cover key topics such as asset identification, procurement, deployment, maintenance, and disposition, providing you with a comprehensive understanding of the entire hardware asset management lifecycle.\n\n\nOur experienced instructors bring years of real-world experience in hardware asset management operations to the table, ensuring that you receive practical and actionable insights that you can apply in your organization immediately. Our course materials are designed to be interactive and engaging, with hands-on activities and case studies to help you apply your learning in real-world scenarios.\n\n\nBy the end of this course, you'll be able to develop and implement a hardware asset management program that meets your organization's unique needs and requirements. Whether you're looking to optimize your hardware assets' recovery, audit effectively , or comply with industry regulations, this course will give you the skills and knowledge you need to succeed.\n\n\nEnroll now and take the first step towards becoming a hardware asset management expert!",
      "target_audience": [
        "Businesses starting up Hardware Asset Management and those establishing new services within IT businesses",
        "Contractors who want to gain skills in setting up a Hardware Asset Management Database"
      ]
    },
    {
      "title": "Living Online",
      "url": "https://www.udemy.com/course/ic3-gs4-living-online/",
      "bio": "Living Online",
      "objectives": [
        "Learn to use web browsers",
        "Understand the internet connection types",
        "Learn about email communication and manage junk emails",
        "Use internet responsibly",
        "Protect themselves by securing communications and protecting data",
        "Search the web to get correct information"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction",
          "Instructor Introduction",
          "Tracy Instroduction"
        ],
        "Module 01 - Web Browsers": [
          "Web Browsers",
          "Web Browsers (cont.)",
          "Web Browsing",
          "Demo - Basic Web Browsing",
          "Navigating the Browser",
          "Navigating the Browser (cont.)",
          "Demo - Searching",
          "Module 01 Review",
          "Review Questions"
        ],
        "Module 02 - Networking Terminology": [
          "Networking Terminology",
          "Internet Connections",
          "Network Types",
          "Troubleshooting",
          "Demo - Network Troubleshooting",
          "Module 02 Review",
          "Review Questions"
        ],
        "Module 03 - E-mail": [
          "E-mail",
          "E-mail (Cont.)",
          "Inbox",
          "Demo - Creating and Sending a Message",
          "Tools for Managing Junk Email",
          "Demo - Exploring Junk Email Management Features",
          "Live Chat",
          "Chat Communications",
          "Demo - Chat",
          "Real-Time",
          "E-mail (Cont.)",
          "Module 03 Review",
          "Review Questions"
        ],
        "Module 04 - Communicating in the Modern World": [
          "Communicating in the Modern World",
          "Standards",
          "Legal and Responsible Use",
          "Demo - Licenses",
          "Module 04 Review",
          "Review Questions"
        ],
        "Module 05 - Protecting Yourself": [
          "Protecting Yourself",
          "Secure Communications",
          "Data Protection",
          "Demo - Malware Protection",
          "Ergonomics",
          "Module 05 Review",
          "Review Questions"
        ],
        "Module 06 - Web Searching": [
          "Web Searching",
          "Using Search Engines",
          "Do You Believe the Results?",
          "Advanced Search Options",
          "Demo - Advanced Searching",
          "Demo - Advanced Searching (cont.)",
          "Module 06 Review",
          "Review Questions",
          "Course Closure"
        ]
      },
      "requirements": [
        "The course has no formal perquisites.",
        "Anyone can enroll for this course.",
        "Please note that the course is very basic in nature; hence, it is not recommended for experienced professionals."
      ],
      "description": "The Living Online course is an entry-level training course which targets to develop basic awareness of online browsing and electronic communication among the candidates. The course is oriented towards enabling the candidates to learn the basic concepts of browsing, email communications, web searching and securing themselves on the internet.\nThis course is designed for staff members of an organization who are transitioning to personal computers from manual work. The course helps the organization to reduce unnecessary burden on their IT team by enabling the non-IT staff to take care of the very basic issues they may face while using personal computers and internet at their workplaces and get the know-how of the most common internet applications such as browser, email and search engine.",
      "target_audience": [
        "Students beginning to learn to use computer for official or personal productivity",
        "Non-IT staff members of an organization",
        "Candidates looking forward to gain basic knowledge about internet and its uses"
      ]
    },
    {
      "title": "Electronics Course: Practical Labs",
      "url": "https://www.udemy.com/course/electronics-course-practical-labs-b/",
      "bio": "Hands-on electronics course with real-world labs—build, test, and troubleshoot circuits like a pro!",
      "objectives": [
        "Build and analyze simple electronic circuits using components like resistors, LEDs, and transistors.",
        "Use a multimeter to measure voltage, current, and resistance in electronic circuits.",
        "Troubleshoot common circuit issues and apply debugging techniques to fix faulty circuits.",
        "Design and simulate circuits using online tools like Tinkercad, Multisim, or LTspice."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Technical Interview: Foundational Electronics and Lab Skills",
          "Setup Lecture",
          "V1 BreadBoard",
          "V2 Multimeter",
          "Quiz",
          "V3 Function Generator",
          "V4 Oscilloscope",
          "V5 DC Power",
          "Quiz",
          "Summary",
          "Reading Material",
          "Fundamentals of Electronics & Measurement Tools"
        ],
        "Circuits and Resistors": [
          "Section Intro",
          "Introduction",
          "Series Circuit",
          "Parallel Circuit",
          "Quiz",
          "Parallel and Series Circuit",
          "Experiment's with Ohm's Law",
          "Quiz",
          "Summary",
          "Reading Material",
          "Parallel& Series Circuit and Ohm’s Law"
        ],
        "RLC Circuit": [
          "Section Intro",
          "Analysis of Capacitor Charge and Discharge",
          "Quiz",
          "RLC Circuits",
          "Introduction to RLC Circuit",
          "Experiment on RLC Circuits",
          "Quiz",
          "Summary",
          "Reading Material",
          "Analysis and Application of RLC Circuits"
        ],
        "Circuit and diodes": [
          "Section Intro",
          "Introduction",
          "Diode Characteristic Curve",
          "Quiz",
          "Introduction to Rectifier",
          "Half Wave Recifier Design",
          "Ripple Analysis and Filtering",
          "Quiz",
          "Zener Diode voltage Regulator",
          "Summary",
          "Reading Material",
          "Diodes, Rectification, and Voltage Regulation"
        ],
        "Circuits with Operational Amplifier": [
          "Section Intro",
          "Non-Inverting Operational Amplifier Configuration",
          "Inverting Operational Amplifier",
          "Op-amp Differentiator Circuit",
          "Quiz",
          "Op-amp Integrator Circuit",
          "Op-amp Comparator Circuit",
          "Quiz",
          "Summary",
          "Reading Material",
          "Operational Amplifier Circuits – Analysis and Applications",
          "Lab Project Evaluation: Analog and Digital Circuit Integration"
        ]
      },
      "requirements": [
        "No prior electronics experience needed – this course is beginner-friendly!",
        "A basic understanding of electrical concepts (optional but helpful).",
        "Access to a breadboard, resistors, LEDs, transistors, jumper wires, and a power source (or use circuit simulation software)."
      ],
      "description": "Are you ready to master electronics through hands-on practical labs instead of just theory? This course is designed to help students, hobbyists, and aspiring engineers build, test, and troubleshoot real electronic circuits step by step.\nWhether you’re new to electronics or looking to sharpen your practical skills, this course guides you through real-world projects using essential components and tools.\nWhat You’ll Learn:\nHow to work with resistors, capacitors, transistors, diodes, and ICs\nThe basics of circuit design and prototyping on breadboards\nHow to use multimeters, oscilloscopes, and power supplies\nSoldering techniques for assembling circuits\nTroubleshooting common circuit issues like a professional\nWho Should Take This Course?\nBeginners who want a hands-on approach to learning electronics\nEngineering students looking to reinforce theoretical knowledge\nDIY enthusiasts and makers eager to build electronic projects\nAnyone curious about electronics and how real circuits work\nWhy Take This Course?\n100% Practical Learning – Focused on real applications, not just theory\nStep-by-Step Guidance – Beginner-friendly explanations with demonstrations\nReal-World Projects – Build circuits that you can actually use\nLifetime Access & Certificate – Learn at your own pace and showcase your skills\nBy the end of this course, you'll have the confidence to design, build, and troubleshoot electronic circuits on your own!",
      "target_audience": [
        "Beginners interested in learning practical electronics with hands-on projects.",
        "Engineering students or hobbyists looking to develop fundamental circuit-building skills.",
        "Makers and DIY enthusiasts who want to create and test small electronic projects.",
        "Anyone curious about electronics and circuit design, even without prior experience."
      ]
    },
    {
      "title": "X86 Assembly Programming",
      "url": "https://www.udemy.com/course/x86-assembly-programing-stack-overflow-hacking/",
      "bio": "Learn How to Master Assembly Language",
      "objectives": [
        "X86 Assembly Language",
        "Intel 8086 and 80386 Architectures",
        "Stack Overflow Attacks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Historic Background of X86 Intel Processors",
          "Turning C into Object Code"
        ],
        "Intel Computer Architectures": [
          "The 8086 Processor",
          "The 80386 Processor",
          "Integer Registers (IA32)",
          "Processor State (IA32)",
          "Conditions Codes",
          "Byte Ordering"
        ],
        "Jump Instructions": [
          "The different Jump Instructions",
          "Example Use of a Jump Instruction"
        ],
        "Data Movement Instructions": [
          "The mov Instruction",
          "Memory Addressing Modes",
          "Address Computation Instruction"
        ],
        "The Gnu Debugger (GDB)": [
          "Basic GDB Commands",
          "Example Use Cases of GDB"
        ],
        "Arithmetic Instructions": [
          "Basic Arithmetics",
          "Arithmetic Expression Example",
          "Floating Point Instructions"
        ],
        "Memory Allocation of C data structures": [
          "Array Allocation",
          "Structure Allocation",
          "IA32 Linux Memory Layout",
          "Operating Modes"
        ],
        "Stack Instructions": [
          "What is the Stack?",
          "Push and Pop Instructions",
          "Procedure Call",
          "Procedure Return",
          "Linux Stack Frame",
          "Register Saving Conventions"
        ],
        "SSE": [
          "What is SSE ?",
          "SSE Registers",
          "SSE Instructions"
        ],
        "Stack Overflow Exploits": [
          "Vulnerable Code",
          "Buffer Overflow: Stack Example",
          "Buffer Overflow Exploit"
        ]
      },
      "requirements": [
        "Linux Command Line"
      ],
      "description": "During this class you will learn X86 Assembly Language, the 8086 and 80386 Intel Architectures, and everything you need to know about the Stack:  What is the Stack ? What are procedure calls and how procedure Calls are using the Stack to operate? How to allocate C data structures in Memory ? And How Hackers use code vulnerabilities to operate Stack Overflow Exploits and how to protect your code against such attacks. What are SSE Instructions and how to use them ? This is the ideal class to start learning X86 Assembly, understand how compilation works and how your computer compiles and executes C code. During the class we will also review multiple code examples and debug them using Gnu Debugger GDB debugging tool. The compilation process will be reviewed and we will go in details into the disassembled code to see how it works. All major X86 Instructions types will be explained, as for example: jump instructions, arithmetic instructions, mov instructions and more. The end of the class will be dedicated to stack overflow attacks, and how to prevent vulnerable code to be exploited by attackers. Requirements for the class is a working linux system and basic linux knowledge. We will go through the steps of how to install gdb and start turning C code into assembly code for debugging. All major GDB commands will be listed so that a comprehensive view of GDB is given.",
      "target_audience": [
        "Electrical Engineering students",
        "Computer Science students",
        "Anyone who wants to learn about Assembly Programing and Intel Architectures"
      ]
    },
    {
      "title": "iPhone Motherboard Repair Foudation Course",
      "url": "https://www.udemy.com/course/iphone-motherboard-repair-foudation-course/",
      "bio": "iPhone Motherboard Repair Foudation Course For Repair Enthusiasts and Beginners",
      "objectives": [
        "This is a detailed explanation of basic electronic components, like resistors, capacitors, diodes, etc.",
        "This is useful knowledge to have as you'll know exactly what electronic components can do and what different component symbols mean when analyzing the circuit diagram.",
        "A detailed user guide on necessary repair tools recommended by REWA repair technicians.",
        "Some useful cellphone repair method and skills, like rosin detecting method, current analyze method, etc."
      ],
      "course_content": {
        "Introduction of the iPhone Motherboard Repair Foundation Course": [
          "Promotion Video",
          "DC power Machine",
          "Multimeter",
          "Brief introduction of components on the motherboard",
          "Motherboard Structure Introduction",
          "Soldering Iron",
          "Hot Air Rework Station With Vertical Wind Operation Guide",
          "Hot Air Rework Station With Helical Wind Operation Guide",
          "NAND Flash Chip Programmer Operation Guide",
          "Rosin Detecting in Troubleshooting",
          "Observation",
          "Measurement In Toubleshooting",
          "Brief Introduction Of Commonly Used Repair Tools",
          "Current Analyze",
          "Analysis on iTunes Error Codes",
          "Dummy Antenna Method",
          "Brief introduction of mobilephone repair",
          "How to use bitmap software"
        ]
      },
      "requirements": [
        "Be interested in phone repair"
      ],
      "description": "From this iPhone Motherboard Repair Foundation Course, you will learn\nThe detailed explanation of basic electronic components, like resistors, capacitors, diodes, etc.\nThe useful knowledge to have as you'll know exactly what electronic components can do and what different component symbols mean when analyzing the circuit diagram.\nA detailed user guide on necessary repair tools is recommended by REWA repair technicians.\n\n\nContent and Details\n1. DC power Machine\nHave a basic understanding of how the DC power supply looks like, the function, and how to use the DC power supply machine to power the motherboard. A demo to show the operation process of the DC power supply.\n\n\n2. Multimeter\nIntroduce the structure of the multimeter, explain the use of each measurement mode. Demo to show how to measure the diode value, resistance value, voltage value, etc. Introduce how to use the multimer to check different kinds of components are good or not.\n\n\n3. Introduction of components on the motherboard\nFirst, will introduce the features of the commonly used components on the iPhone motherboard, like the capacitor, inductor, resistor, MOSFET, etc. Then take the iPhone 7 motherboard as an example to show how the components look like. So that we can have a better impression and understanding.\n\n\n4.Motherboard structure introduction\nIntroduce the structure and section of the motherboard. For example, will introduce how the CPU controls the other chips to achieve the relevant functions. After learning this lecture, can have a clear idea about how the inner circuit works.\n\n\n5. Soldering iron\nAs one of the most common use tools during the chip level repair process, the operation, and maintenance of the soldering iron are very important, use it the right way to achieve a better soldering effect and prolong the life span of the soldering iron.\n\n\n6. Hot air rework station with vertical wind\nThe hot air gun is used to heat up the component and chips for removing or replacing. And vertical wind hot air gun/station can output vertical and focus heating air, which is more suitable for removing small components and chips.\n\n\n7. Hot air rework station with helical wind\nHelical hot wind can heat with larger area evenly, compare with the vertical hot air gun, it normally used to remove large chips like CPU, NAND, etc. and also suitable for moving connector with plastic part included.\n\n\n8. NAND flash chip programmer\nWhen phones get damaged and need to do data recovery, and sometimes when we need to upgrade the memory, the NAND programmer can be used to read and write the NAND kernel data. Besides, in some situations, like changing the Wi-Fi chip for iPhone above 6S models, the NAND programmer can be used to unbind the connection between the Wi-Fi and NAND.\n\n\n9. Rosin Detection Method\nCompare with the thermal camera method, it's the most effective way to find out the shorted components. This lecture will introduce the detailed operation process of the rosin detection method.\n\n\n10. Observation Method\nFor most cellphone issues, the problem might be caused by reasons like drop damage, water damage, large/surge current damage. So it's important to form a habit of observing the motherboard carefully, maybe the issue is caused by components missing, corrosive, board deforming, etc.\n\n\n11. Measurement in troubleshooting\nTo measure the motherboard voltage/current is just like a doctor measuring the pulse/heart rate, which is a very efficient way to diagnose and locate the defect. This lecture will mainly introduce the operation of diode value and voltage value measurement.\n\n\n12. Introduction of commonly used repair tools\nIt is necessary to have effective tools to do good work. This lecture will introduce the necessary repair tools and materials for cell phone repair.\n\n\n13. Current Analyze\nThe current reading on the DC power supply shows how the circuit works, sometimes, by the current reading we can have a preliminary judgment of the defect, which will save our time to finish the repair work more efficiently.\n\n\n14. Analysis Of iTunes Error Code\nShow the operation process of restore with iTunes, and an Error Code chart is listed for reference. With error code reference, we can locate the defect range. And error code may change with time, for example when iOS is updated the error code may be different.\n\n\n15. Dummy Antenna Method\nThe little repair trick for repairing the Wi-Fi signal weak issue, helps the repair technician narrow the fault range.\n\n\n*. Two more videos to share how to use the bitmap, and an iPhone repair learning journey tutorial.",
      "target_audience": [
        "Repair technicians and enthusiast"
      ]
    },
    {
      "title": "Computer Basics: basic computer course | complete guide",
      "url": "https://www.udemy.com/course/computer-basics-fundamentals-for-absolute-beginners/",
      "bio": "Learn Computer basics, Hardware, Software, motherboard parts, basic computer components | it computer science | OS",
      "objectives": [
        "Computer hardware;",
        "Computer Input & output devices;",
        "Computer Operating Systems (OS);",
        "Microsoft Excel explanation, Word and PowerPoint basics;",
        "How to restore deleted files from recycle bin;",
        "Learn how to create new Folders, Files, MS Office Documents & Text Documents;",
        "Learn how to Change Themes in your computer (Personalize option);",
        "Computer Programs and Applications;",
        "Computer Motherboard Analysis;",
        "Computer Parts and components."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Computer Overview"
        ],
        "Computer Hardware": [
          "Computer Motherboard Analysis",
          "Computer Hardware Studying"
        ],
        "Microsoft Office Applications": [
          "Microsoft Excel explanation",
          "Microsoft Word explanation",
          "Microsoft PowerPoint explanation"
        ],
        "Computer Software": [
          "Learn how to create new Folders, Files, MS Office Documents & Text Documents",
          "Learn how to Change Themes in your computer (Personalize option)",
          "Learn how to restore deleted files from recycle bin",
          "Computer Programs & Applications",
          "Computer Operating Systems (Windows)"
        ]
      },
      "requirements": [
        "Basic knowledge in Computer;"
      ],
      "description": "Computer Basics & Fundamentals for Absolute beginners course is intended for those interested in Computer studying, Motherboard Repairing & Software.\nContinuous updates;\n8 Reasons why you should choose this course.\nThe course will teach you Computer Basics & Fundamentals in detail.\nThe course is created with perfect care by a professional in Electronics & Schematics analyzing.\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences.\nYour inquiries will be answered in a short time with a full explanation of any question.\nConstant updates.\nOne-On-One Support.\nSimple and easy-to-understand explanation with examples.\nA certificate will be provided upon completion of the course.\nTopics that we will be discussing in this course are :\nComputer hardware;\nComputer Parts and components;\nComputer Motherboard Analysis;\nComputer Input & output devices;\nComputer Operating Systems (OS);\nComputer Programs and Applications;\nLearn how to Change Themes on your computer (Personalize option);\nLearn how to create new Folders, Files, MS Office Documents & Text Documents;\nLearn how to restore deleted files from recycle bin;\nMicrosoft Excel explanation;\nMicrosoft Word explanation;\nMicrosoft PowerPoint explanation and\nIf you are interested in one of the points we talked about before, then this course is for you.\nUpon completion of this course, you will be able to master Computer Basics & Fundamentals. besides acquiring many skills that will make you professional and have a deep understanding of hardware & software.\nWhat are you waiting for?\nGo ahead and join us.\nI'll love to see you in the class.",
      "target_audience": [
        "Computer technicians.",
        "Students who are interested in computer Hardware & Software;",
        "Anyone who wants to understand computer basics and fundamentals."
      ]
    },
    {
      "title": "Siemens PLC Programming Using SCL with MODBUS - Part 03",
      "url": "https://www.udemy.com/course/siemens-plc-programming-using-scl-with-modbus-part-03/",
      "bio": "Siemens PLC Programming Using SCL with MODBUS (Energy Meter) - Part 03",
      "objectives": [
        "Learn How to effectively use Modbus Communication using Siemens SCL Programming Language.",
        "If you have PLC and CB1241 and Communication Cable then this course will be very useful.",
        "Take care while implementing",
        "After Completing this course you will be able to handle any Modbus communication device very easily."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "02. Physical Wiring For Modbus Communication using CB1241 Card": [
          "02. Physical Wirring For Modbus Communication using CB1241 Card"
        ],
        "03.S7-1200 Hardware configuration for Modbus Channel": [
          "03.S7-1200 Hardware configuration for Modbus Channel"
        ],
        "Modbus Library Configuration": [
          "04. Configuration of MB_COMM_LOAD library",
          "05.MB_MASTER Configuration"
        ],
        "06. Getting 5 Different Modbus Slave device data in S7-1200 using SCL Commands.": [
          "06. Getting 5 Different Modbus Slave device data in S7-1200 using SCL Commands."
        ],
        "06. Test Modbus Slave with S7-1200 Modbus Master": [
          "06. Test Modbus Slave with S7-1200 Modbus Master"
        ],
        "08.Mapping 5 Different Energy meter Data to Datablock using CASE Statement": [
          "08.Mapping 5 Different Energy meter Data to Datablock using CASE Statement"
        ],
        "09. Configure MB_MASTER for Write Operation": [
          "09. Configure MB_MASTER for Write Operation"
        ],
        "10.Testing the Modbus Write data": [
          "10.Testing the Modbus Write data"
        ]
      },
      "requirements": [
        "Basic Knowledge of PLC and Modbus Communication."
      ],
      "description": "Hello Student,\nAfter the SCL-1 and SCL-2, I have brought another interesting tutorial related to SCL programming. In this course you will be able to learn SCL Programming related to Modbus RS-485 Communication. After this course you will be able to communicate multiple devices based on Modbus RS-485 Communication very easily.\nIn this Course I have used Modbus Master , Modbus Poll and TIA Portal V17 Software to make understanding. Modbus Poll software is used to simulate Modbus Read and Write Data with Real PLC using RS-485 Communication Cable. Using This Course tutorial, you will be able to communicate with Modbus VFD and Servo Drive , Modbus Energy Meter , Modbus Based Any Controller. To make Communication with PLC and Modbus Poll Software in PC , I have used DTECH USB to RS-485 Communication Convertor Cable. This Cable Is common and Very Easily available.\nFor PLC , I am using Siemens S7-1200 CPU1214  DC/DC/DC PLC and CB1241 Modbus Communication Card which is attached on top of the PLC. Siemens S7-1200 PLC has wide range of Modbus Communication library and In this Course I will Explain how you can utilize this Library and Ready to use this Course Program. In this Course i have added some practical session t show how to make communication wiring with PLC and CB1241 Communication Card.",
      "target_audience": [
        "Students , Engineers and Professionals."
      ]
    },
    {
      "title": "Transmitter & Receiver Design Architectures for RF Systems",
      "url": "https://www.udemy.com/course/rf-transmitter-radio-frequency-receiver-transceiver-design/",
      "bio": "RF Transceiver Design Methods: Direct Conversion, Hetrodyne, Dual Conversion, Sliding IF, Image Reject, Zero IF & Low IF",
      "objectives": [
        "Radio Frequency (RF) Transceiver architectures",
        "Direct Conversion Transmitter and Receivers",
        "Superheterodyne Receivers and Transmitters",
        "Dual Conversion IF Receivers,",
        "Sliding IF Receivers",
        "Image Reject Receivers (Hartley and Weaver Architectures)",
        "Zero Second IF Receivers",
        "Low IF Receiver"
      ],
      "course_content": {
        "Introduction": [
          "Modulation and Demodulation: Fundamental Requirement for RF Communication",
          "Amplitude Modulation in Time and Frequency Domain",
          "Amplitude Demodulation in Time and Frequency Domain",
          "The Bigger Picture: Transmitter Block Diagram",
          "The Bigger Picture-Receiver Block Diagram",
          "Quadrature Amplitude Modulation and Demodulation",
          "Quadrature Phase Shift Keying (QPSK) Modulation",
          "Quadrature Phase Shift Keying (QPSK) Demodulation",
          "Difference Between Frequency Band and Channel",
          "General Considerations for Narrow channel Bandwidth on Transmitter Side",
          "Considerations for Narrowband Receiver Side: Channel Selection Vs Band Selection"
        ],
        "RF Receiver Architectures": [
          "Direct Conversion Receivers",
          "Drawbacks of Direct Conversion Receivers-Local Oscillator Leakage",
          "Local Oscillator Leakage Cancellation Technique",
          "Drawback of Direct Conversion Receivers: DC Offsets",
          "Cancellation of DC Offsets Using AC Coupling",
          "Draw Back Of Direct Conversion Receiver: Sensitivity to Even-Order Distortion",
          "Solution to Even-Order Distortion",
          "Drawbacks of Direct Conversion Receiver: Effect of Flicker Noise",
          "I/Q Mismatch in Direct Conversion Receivers",
          "Analysis of I/Q Mismatch",
          "Analysis I/Q Mismatch with Gain Error",
          "Effect of I/Q Mismatch In presence of Phase Error",
          "Computation and Correction I/Q Mismatch",
          "Hetrodyne Receiver Architecture",
          "How A Heterodyne Receiver Receives Different Channels In a Given Frequency Band?",
          "Advantages of Hetrodyne Receiver Over Direct Conversion Receiver",
          "Problem of Image Frequency in Hetrodyne Receivers",
          "An Example of Image",
          "High Side and Low Side Injection",
          "Image Frequency Example 1",
          "Image Frequency Example 2",
          "Image Reject Filter",
          "Image Rejection Vs Channel Selection Trade-off in Hetrodyne Receivers",
          "Is Image Reject Filter Required In Absence Of Interferers?",
          "Dual Conversion IF Receiver",
          "Dual Conversion Receiver Noise Figure And Linearity Considerations",
          "Problems of Mixing Spurs in Dual Conversion Receivers",
          "Example Showing Effect Of Mixing Spurs",
          "Advantages and Disadvantages Of Dual Conversion IF Receivers",
          "Modern Hetrodyne Receivers",
          "Secondary Image Problem in Modern Dual Conversion Receivers",
          "Zero Second IF Receivers",
          "Demodulation of Symmetric Vs Asymmetric Signals in Zero 2nd IF Receivers",
          "Zero 2nd IF Receiver With Quadrature Downconversion for Asymmetric Signals",
          "Advantages of Zero Second IF Receivers",
          "Sliding IF Receivers",
          "Sliding IF Receivers: Divide by 2 Circuit",
          "Sliding IF Receivers: Divide by 4 Circuit",
          "Comparison of Divide by 2 and Divide by 4 Sliding IF Receivers",
          "Example: Sliding IF Receiver type for 802.11g",
          "Dual Band Zero Second IF Receiver",
          "Image Reject Receivers",
          "90 Phase Shift in Cosine Signal",
          "90 Degree Phase Shift in Modulated Signal",
          "How to Implement 90 degree Phase Shift: RC-CR Network",
          "90 degree Phase Shift using Quadrature Downconversion with High Side Injection",
          "90 degree Phase Shift using Quadrature Downconversion with Low Side Injection",
          "Hartley Image Reject Receiver Architecture",
          "Realization of 90 Degree Phase Shift in Hartley Architecture",
          "Disadvantages of Hartley Image Reject Receiver",
          "Weaver Image Reject Receiver Architecture",
          "Secondary image problem in Weaver Architecture and Its Solution",
          "Low IF Receiver Architectures",
          "Image Rejection in Low IF Receivers"
        ],
        "RF Transmitter Architectures": [
          "Characteristics of an RF Transmitter",
          "Direct Conversion Transmitters",
          "I/Q Mismatch in QPSK Direct Conversion Modulator",
          "I/Q Mismatch Quantification",
          "I/Q Mismatch Calibration-Phase Mismatch Removal",
          "I/Q Mismatch Calibration-Gain Mismatch Removal",
          "Effect Of Carrier Leakage in Direct Conversion Transmitters",
          "Reduction Of Carrier Leakage",
          "Effect of Mixer Non-Linearity in Direct Conversion Transmitters",
          "Effect of Non-Linearity in Power Amplifier and its Solution",
          "Problem Of Oscillator Pulling in Direct Conversion Transmitters and its Solution",
          "Solutions to Oscillator Pulling using Frequency Divider and Frequency Doubler",
          "Solution to Oscillator Pulling Using Mixing",
          "Single SideBand (SSB) Mixing To Solve Oscillator Pulling",
          "Corruption From Harmonics in Single SideBand (SSB) Mixing",
          "SSB Mixing To Generate Quadrature Output",
          "Direct Conversion Tx Using SSB Mixing",
          "Hetrodyne Transmitters",
          "Sliding IF Hetrodyne IF Transmitter",
          "Carrier Leakage In Hetrodyne Transmitters",
          "Problem of Mixing Spurs in Hetrodyne Tx Due To Local Oscillator Harmonics",
          "Use of SSB Mixing to Suppress the Unwanted Sidebands in Hetrodyne Transmitters",
          "On-off Keying (OOK) Transmitter and Receiver"
        ],
        "RF Transceiver Architectures": [
          "What is an RF Transceiver?",
          "Time Division Duplexing (TDD) Transceiver",
          "Frequency Division Duplexing (FDD) Transceiver",
          "Tx-Rx Leakage in FDD Transceiver"
        ]
      },
      "requirements": [
        "Complete Understanding of RF fundamentals"
      ],
      "description": "RF Signals are widely used in wireless communication, automation and the rapidly emerging phenomenon of Internet of Things (Iot) making RF technology essential in any device. This course describes and discusses key performance aspects of RF and wireless transceiver architectures. In this course you will learn about these types of RF transceiver architectures:\nDirect Conversion Transmitter and Receivers\nHetrodyne Transmitter And Receivers\nDual Conversion IF Receiver\nSliding IF Receivers\nZero Second IF Receiver\nImage Reject Receivers (Hartley & Weaver)\nLow IF Receivers\nWe will also study from the design perspective what are the drawbacks and the advantages of different architectures in a comparative manner, highlighting the design choices in different scenarios.\nThis online RF and microwave course is ideal for new entrants to the field of RF and microwave engineering. Students and job seekers will also find the course beneficial since it covers areas likely to arise during a technical interview. Technical sales engineers and technical managers who need to improve their understanding of RF and microwave communications in order to better manage projects. The contents of this course are:\n\n\nSection 1: Introduction\nModulation and Demodulation: Fundamental Requirement for RF Communication\nAmplitude Modulation in Time and Frequency Domain\nAmplitude Demodulation in Time and Frequency Domain\nThe Bigger Picture: Transmitter Block Diagram\nThe Bigger Picture-Receiver Block Diagram\nQuadrature Amplitude Modulation and Demodulation\nQuadrature Phase Shift Keying (QPSK) Modulation\nQuadrature Phase Shift Keying (QPSK) Demodulation\nDifference Between Frequency Band and Channel\nGeneral Considerations for Narrow channel Bandwidth on Transmitter Side\nConsiderations for Narrowband Receiver Side: Channel Selection Vs Band Selection\nSection 2: RF Receiver Architectures\nDirect Conversion Receivers\nDrawbacks of Direct Conversion Receivers-Local Oscillator Leakage\nLocal Oscillator Leakage Cancellation Technique\nDrawback of Direct Conversion Receivers: DC Offsets\nCancellation of DC Offsets Using AC Coupling\nDraw Back Of Direct Conversion Receiver: Sensitivity to Even-Order Distortion\nLecture 18:Solution to Even-Order Distortion\nDrawbacks of Direct Conversion Receiver: Effect of Flicker Noise\nI/Q Mismatch in Direct Conversion Receivers\nAnalysis of I/Q Mismatch\nAnalysis I/Q Mismatch with Gain Error\nEffect of I/Q Mismatch In presence of Phase Error\nComputation and Correction I/Q Mismatch\nHetrodyne Receiver Architecture\nHow A Heterodyne Receiver Receives Different Channels In a Given Frequency Band?\nAdvantages of Hetrodyne Receiver Over Direct Conversion Receiver\nProblem of Image Frequency in Hetrodyne Receivers\nAn Example of Image\nHigh Side and Low Side Injection\nImage Frequency Example 1\nImage Frequency Example 2\nImage Reject Filter\nImage Rejection Vs Channel Selection Trade-off in Hetrodyne Receivers\nIs Image Reject Filter Required In Absence Of Interferers?\nDual Conversion IF Receiver\nDual Conversion Receiver Noise Figure And Linearity Considerations\nProblems of Mixing Spurs in Dual Conversion Receivers\nExample Showing Effect Of Mixing Spurs\nAdvantages and Disadvantages Of Dual Conversion IF Receivers\nModern Hetrodyne Receivers\nSecondary Image Problem in Modern Dual Conversion Receivers\nZero Second IF Receivers\nDemodulation of Symmetric Vs Asymmetric Signals in Zero 2nd IF Receivers\nZero 2nd IF Receiver With Quadrature Downconversion for Asymmetric Signals\nAdvantages of Zero Second IF Receivers\nSliding IF Receivers\nSliding IF Receivers: Divide by 2 Circuit\nSliding IF Receivers: Divide by 4 Circuit\nComparison of Divide by 2 and Divide by 4 Sliding IF Receivers\nExample: Sliding IF Receiver type for 802.11g\nDual Band Zero Second IF Receiver\nImage Reject Receivers\nPhase Shift in Cosine Signal\n90 Degree Phase Shift in Modulated Signal\nHow to Implement 90 degree Phase Shift: RC-CR Network?\n90 degree Phase Shift using Quadrature Downconversion with High Side Injection\n90 degree Phase Shift using Quadrature Downconversion with Low Side Injection\nHartley Image Reject Receiver Architecture\nRealization of 90 Degree Phase Shift in Hartley Architecture\nDisadvantages of Hartley Image Reject Receiver\nWeaver Image Reject Receiver Architecture\nSecondary image problem in Weaver Architecture and Its Solution\nLow IF Receiver Architectures\nImage Rejection in Low IF Receivers\nSection 3:RF Transmitter Architectures\nCharacteristics of an RF Transmitter\nDirect Conversion Transmitters\nI/Q Mismatch in QPSK Direct Conversion Modulator\nI/Q Mismatch Quantification\nI/Q Mismatch Calibration-Phase Mismatch Removal\nI/Q Mismatch Calibration-Gain Mismatch Removal\nEffect Of Carrier Leakage in Direct Conversion Transmitters\nReduction Of Carrier Leakage\nEffect of Mixer Non-Linearity in Direct Conversion Transmitters\nEffect of Non-Linearity in Power Amplifier and its Solution\nProblem Of Oscillator Pulling in Direct Conversion Transmitters and its Solution\nSolutions to Oscillator Pulling using Frequency Divider and Frequency Doubler\nSolution to Oscillator Pulling Using Mixing\nSingle SideBand (SSB) Mixing To Solve Oscillator Pulling\nCorruption From Harmonics in Single SideBand (SSB) Mixing\nSSB Mixing To Generate Quadrature Output\nDirect Conversion Tx Using SSB Mixing\nHetrodyne Transmitters\nSliding IF Hetrodyne IF Transmitter\nCarrier Leakage In Hetrodyne Transmitters\nProblem of Mixing Spurs in Hetrodyne Tx Due To Local Oscillator Harmonics\nUse of SSB Mixing to Suppress the Unwanted Sidebands in Hetrodyne Transmitters\nOn-off Keying (OOK) Transmitter and Receiver\nSection 4:RF Transceiver Architectures\nWhat is an RF Transceiver?\nTime Division Duplexing (TDD) Transceiver\nFrequency Division Duplexing (FDD) Transceiver\nTx-Rx Leakage in FDD Transceiver",
      "target_audience": [
        "Wireless Design Engineers",
        "RF Design Engineers",
        "Radio Frequency enthusiasts",
        "Electrical & Electronic Engineers",
        "Microwave Technicians and Engineers"
      ]
    },
    {
      "title": "Siemens PLC Programming Using SCL -Part 2 (TIA Portal)",
      "url": "https://www.udemy.com/course/siemens-plc-programming-using-scl-part-2-tia-portal/",
      "bio": "Learn Siemens PLC Programming Using SCL -Part 2 (TIA Portal)",
      "objectives": [
        "How to Program Siemens PLC using SCL language - Advance Leve;"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "All Move Instruction In Detail": [
          "Serialization In Detail",
          "Move Block in Detail",
          "De-serialization in Detail",
          "Move Block Variant",
          "Fill Block in Detail",
          "UFILL_BLK: Fill block uninterruptible",
          "SCATTER _SCATTER BLOCK",
          "GATHER_GATHER BLOCK",
          "SWAP in Detail"
        ],
        "Diagnostic using SCL in Detail": [
          "Diagnostic LED status tracking using SCL",
          "GET IM DATA using SCL in Detail",
          "GET DIAG using SCL in Detail"
        ],
        "Recipe Export and Import With PLC using SCL": [
          "How to Enable Webserver?",
          "Recipe Export From PLC using SCL",
          "Recipe Import to PLC Using SCL"
        ],
        "Data Logging with PLC using SCL": [
          "Create Datalog",
          "Write Datalog",
          "Datalog_Clear",
          "Datalog_Delete",
          "Datalog_Newfile_Retain old file"
        ]
      },
      "requirements": [
        "Basic knowledge of Siemens SCL. Learn SCL part - 1"
      ],
      "description": "Hello Friends,\nAfter great learning of Siemens PLC Programming Using SCL -Part 1 using TIA Portal it's time to Learn Siemens PLC Programming Using SCL -Part 2 (TIA Portal).\nIWe know some Programming Language for Siemens PLC programming Languages Like LAD,FBD,STL and SCL.\nAmong them Every Language has its own Benefit.\nThe SCL language is very powerful and well suited for complex math operations, data handling with arrays and string processing. SCL is a high-level text based language that is easy to understand, yet provides many benefits over traditional ladder programming. This Course will provide the foundation for you to start programming in SCL.I have tried to Explain Every Single Instruction in Easy Understanding Way.\nNowadays Programmers are using structural language so that they can make logic easy to find issue as well as complex task in simple way.\nSCL provides you the same programming manner as other languages provide like FBD,LAD etc.\nHere also you can use FC,FB,DB, OB.\nSame way you can call SFB and ready made block as you call in STL and LAD.\nIn this Course I have also used Factory IO. So that you can understand practical used of SCL with real example of Factory IO.\nI have shared some program which is possible to share.",
      "target_audience": [
        "Engineer , Technician , Electrician , and Engineering Student"
      ]
    },
    {
      "title": "Automotive Electrics and Automotive Electronics",
      "url": "https://www.udemy.com/course/automotive-electrics-and-automotive-electronics/",
      "bio": "Learn electrical & electronic technologies used in automobiles. Design architecture of automotive electrical components.",
      "objectives": [
        "Understand the Electrical & Electronic technologies in an automobile",
        "Learn Electronic Diesel Control, Lighting Technology, Electronic Stability System, etc.",
        "Manage Adaptive Cruise Controls",
        "Understand Automotive Networking",
        "Describe Bus Systems, LIN Bus, MOST Bus",
        "Design Architecture of Electronic Systems & Diagnosis Interfaces",
        "Learn to operate Control Units and Automotive Sensors",
        "Understand Mechatronics and Manufacturing of Semiconductor Components & Circuits",
        "Take a deep-dive into Sensor Measuring Principles",
        "Learn about different Sensor Types",
        "Understand Actuators, Hybrid Drives, Vehicle Electrical Systems",
        "Learn about Starter Batteries, Battery Design, and Battery Maintenance"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Automotive Electrics and Automotive Electronics course by Uplatz.\n\n\nAutomotive electronics technologies such as autonomous driving, all-electric cars, and in-car infotainment are the new trends in the automotive industry. Automotive vehicles are transforming into the ultimate electronic devices. Automotive electronics are predicted to constitute near a third of the total cost of the entire car. The automotive transformations give rise to new features and challenges including autonomous driving, all-electric cars with extreme high power, and high-speed and secure communications and infotainment.\nAutomotive electrics refer to the electrical systems used in automobiles and comprises of a storage battery, generator, starting (cranking) motor, lighting system, ignition system, and various accessories and controls. Originally, the electrical system of the automobile was limited to the ignition equipment but in modern age vehicles the electrical systems span the entire ecosystem of the vehicles.\nAutomotive electronics are fundamentally the electronic systems used in vehicles, including engine management, ignition, radio, carputers, telematics, in-car entertainment systems, and others. Ignition, engine and transmission electronics are also found in trucks, motorcycles, off-road vehicles, and other internal combustion powered machinery such as forklifts, tractors and excavators. Related elements for control of relevant electrical systems are also found on hybrid vehicles and electric cars.\n\n\nAutomotive Electrics and Automotive Electronics - Course Curriculum\n\n\nElectrical and Electronic Technology in Automobile\nElectronic Diesel Control\nLighting Technology\nElectronic Stability Program\nAdaptive Cruise Control\nOccupant Protection Systems\nBasic Principles of Networking\nAutomotive Networking\nBus Systems\nLIN Bus\nMOST Bus\nBluetooth\nFlexRay\nDiagnosis Interfaces\nArchitecture of Electronic Systems\nMechatronics\nElectronic Components in the Vehicle\nSemiconductor Components\nManufacture of Semiconductor components and circuits\nControl Units\nAutomotive Sensors\nSensor Measuring Principle\nGas Sensor and Concentration Sensors\nSensor Types 1\nSensor Types 2\nActuators\nHybrid Drives\nVehicle Electrical Systems\nStarter Batteries\nBattery Design\nBattery Maintenance",
      "target_audience": [
        "Automotive Engineers",
        "Product Development Engineers",
        "Beginners and Newbies in the field of Automobile Engineering",
        "Electrical and Electronics Engineers",
        "Anyone aspiring for a career in Automotive Electric industry",
        "Lead Engineers - Vehicle Quality",
        "Power Electronics Engineers",
        "Mobile Automotive Engineers (cars and vans)",
        "Automotive Technicians",
        "Manufacturing Process Engineers",
        "Service Managers",
        "Automotive Performance Planning Engineers",
        "Automotive Performance and Durability Engineers",
        "Paint Repair Technicians",
        "Automotive Product Engineers",
        "Embedded Engineers",
        "Control Engineers"
      ]
    },
    {
      "title": "Clean Sensor Data with Filters",
      "url": "https://www.udemy.com/course/sensors-filter-sensor-data-clean-sensor-data-with-filters-arduino-pic/",
      "bio": "Read any Noisy Sensor Data and use different types of filters to reduce the noise and convert RAW data to useable data",
      "objectives": [
        "Read Analog Sensors Data using Arduino",
        "Filter noise using Low Pass Filter",
        "Analyze, Filter and Convert Sensor Readings",
        "Filter noise using High Pass Filter",
        "Filter noise using Band Pass Filter",
        "Filter noise using Stop Pass Filter",
        "Filter noise using Moving Average Filter",
        "Filter noise using Normal Average Filter",
        "Learn the difference between different filters and which to use and when",
        "Learn how to code each filter in Arduino C Coding",
        "Use sensor data to achieve project goals"
      ],
      "course_content": {},
      "requirements": [
        "An Internet Connection",
        "Basic knowledge in Programming"
      ],
      "description": "Sensors and microcontrollers allow us to turn real-life phenomena into simple numerical signals that we can learn from. However, the raw output from the sensor may not be sufficient to extract desired information from. Real hardware is subject to interference and noise from the environment.\nFiltering is a simple technique that you can use to smooth out the signal, removing noise and making it easier to learn from the sensor output. This course introduces the concept of filters in different types and how to incorporate them into your design.\nMeasurements from the real world often contain noise. Loosely speaking, noise is just the part of the signal you didn’t want. Maybe it comes from electrical noise: the random variations you see when calling analogRead on a sensor that should be stable. Noise also arises from real effects on the sensor. Vibration from the engine adds noise, etc.\nFiltering is a method to remove some of the unwanted signals to leave a smoother result.\nWhy you should take this course?\nSince many sensors produce noisy data, this course will show you how to filter and clean the data so that it can be used for more accurate measurements.\nYou will learn practical ways on how to reduce sensor noise and can perform some of these filters using MATLAB.\nNowhere else will you find the information in this course because it is a comprehensive guide.\nThe videos not only teach you about filters but also give exercises that can be done to gain hands-on experience.\nThis course will give you the confidence to know that you can perform different types of filters which are already specified by MATLAB.\nA wide variety of lessons are available such as signal preprocessing, filtering algorithms, and error models.\nYou Will Learn:\nWhy we need to clean noise data\nWhat are Filters\nHow to implement Filters using Microcontrollers like Arduino\nMoving Average Filter\nAveraging filter\nRunning average filter\nExponential filter\nTurning Filtering equations into actual code\nCompare results before and after filtering\nYou will learn as you practice with real-world examples in this course.\nUser Testimonials and Social Proof\n\"This course provided me with the practical skills to clean sensor data efficiently. Highly recommended!\" - Sarah J.\n\"A comprehensive and easy-to-follow guide on using filters for sensor data. Excellent for beginners and professionals alike!\" - Michael T.\nAn Author Bio Showing Off Credentials\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nA Single Powerful CTA\nEnroll now and start your journey to mastering sensor data cleaning with filters today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nWhy we need to clean noise data\nWhat are Filters\nHow to implement Filters using Microcontrollers like Arduino\nMoving Average Filter\nAveraging filter\nRunning average filter\nExponential filter\nTurning Filtering equations into actual code\nCompare results before and after filtering\nWho Is This Course For\nAnyone interested in sensor data processing\nBeginners with no prior experience in filtering techniques\nMakers and hobbyists wanting to enhance their data accuracy\nStudents and professionals looking to improve their skills in data processing\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "Anyone Interested in Filtering Noise from different Sensors using Microcontrollers like Arduino",
        "Anyone Interested in Learning how to code filters using Arduino C Programming",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone with slight interest in making great things",
        "Arduino Geeks",
        "Electronics Geeks",
        "Hardware developers"
      ]
    },
    {
      "title": "Arduino for Biometrics",
      "url": "https://www.udemy.com/course/advanced-arduino/",
      "bio": "Learn how to Transmission data between two Arduinos, Bio-metric Fingerprint, Touch sensor with these lot more projects.",
      "objectives": [
        "Fire detection system using Arduino and Flame sensor",
        "Measure moisture level via Analog output pins using Rain water sensor module with Arduino",
        "Arduino to Arduino Serial Communication",
        "Use 433Mhz RF Transmitter and Receiver modules with Arduino",
        "Digital TTP223B Arduino Capacitive Touch Sensor using Relay module",
        "Turn your Fingerprint Sensor into Biometric Toggle Switch using Windows software and Arduino",
        "Optical Fingerprint sensor will make adding fingerprint detection and verification"
      ],
      "course_content": {},
      "requirements": [
        "You would need to download the Arduino IDE software and SFGDemo windows software for Fingerprint sensor",
        "Two Arduino UNOs",
        "1 x Flame sensor, 1 x Rain sensor, 1 x 433Mhz RF Transmitter Receiver module",
        "1 x TTP223B Digital Touch Sensor, 1 x R305 Fingerprint sensor",
        "Thin wires to solder and jumper wires"
      ],
      "description": "This is an advanced level course on Arduino. This course is designed for advanced makers. We’ll help you to get started with the basics of creating circuits with the Arduino board.\nIn this course, we will show you Fire detection using Arduino and Flame sensor. In the second project is Rain Sensor Module allows you to measure the moisture level via Analog output pins to detect whether it’s raining or not.\nThe third project is how to communicate data using two Arduinos and also using the 433Mhz RF transmitter and receiver modules with two Arduinos to receive the message. The fourth project is Digital capacitive touch sensor with Arduino to light up the lamp with a single touch, and the last project is based on the biometric fingerprint sensor.\nIt Secures your project with biometrics - this all-in-one optical fingerprint sensor will make adding fingerprint detection and verification. This module is typically used in safe there's a high powered DSP chip that does the image rendering, calculation, feature-finding, and searching.\nThe prerequisite for this course is a basic understanding of electrical and electronic concepts and ability to download and install software on your computer. Along the way, you will learn about programming, sensors, and communications.\nThe course split into six parts:\nProject 1:\nIn this project, we will teach you how Flame sensor is interfaced with the Arduino to detect Flame. We have connected the Led and buzzer with Arduino to indicate the flame.\nProject 2:\nIn this project, we teach you how to build Rain sensor module allows you to measure moisture via Analog output pins, and it provides a digital output when a threshold of moisture level is exceeded.\nProject 3:\nTransmission between two Arduinos we’ll make an Inter-Integrated Circuit bus using two Arduinos. We will program one master Arduino to command the other slave Arduino to blink its built-in LED once or twice depending on the received value.\nProject 4:\nIn this project will explain you the complete guide for the RF 433MHz Transmitter and Receiver module. We’ll explain this module how it works, and will show you how to work with the Arduino.\nProject 5:\nIn this project, the device uses your body as part of the circuit. When you touch the sensor pad, the capacitance of the circuit is changed and detected. That detected a change in capacitance results in the output changing states.\nProject 6:\nThis is my first fingerprint sensor project to read users fingerprint and recognized the user, we obsessed with the biometric system and was curious if we could use a fingerprint to turn on and off a device.\nFingerprint sensor Secure your project with biometrics - this all-in-one optical fingerprint sensor will make adding fingerprint detection and verification super simple. This module is typically used in safe - there's a high powered DSP chip that does the image rendering, calculation, feature-finding, and searching.\nYou can also enroll new fingers directly - up to 162 fingerprints can be stored in the onboard FLASH memory.\nIf you are a technology enthusiast and want to learn the cutting-edge technology, then this is the right course for you.\n\nIn this course, I show you how to get up and running on the Arduino platform so you can make your own projects to interact with the world.\nI will teach you step by step how to go about building this project. I will also share the code with you so that you can replicate the project yourself. I look forward to you joining this course. It provides the complete source code of the real time project.\nWhat are you waiting for? Enroll now.",
      "target_audience": [
        "People who want to try Arduino and learn about microcontrollers",
        "Makers who have an existing intermediate or better understanding of electronics",
        "Individuals wanting to learn more about Bio-metrics, Data Transmission between two Arduinos",
        "Engineering Students - Electronics, Electrical & Computer Science",
        "Electronic Geeks, Hobbiest & Art Students",
        "High School Science Students"
      ]
    },
    {
      "title": "Laptop Repair: Most Common Faults On Failed Laptops",
      "url": "https://www.udemy.com/course/laptop-repair-most-common-faults-on-failed-laptops/",
      "bio": "Motherboard faults repair, computer hardware Technicians, Laptop repair course, Integrated Circuits, Electronics, PC",
      "objectives": [
        "The Most common faults about failed laptops;",
        "How to diagnose laptop motherboards;",
        "How to troubleshoot, isolate and repair failed laptops,",
        "How to identify short circuit on laptop motherboards;",
        "Tips and Tricks about laptop hardware repairing and much more."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laptop most common faults studying": [
          "Power Adapter failure",
          "The Power jack failure",
          "The Random Access Memory RAM",
          "Power circuit & protection components failure",
          "Power switches ( power MOSFETs )",
          "Charge IC",
          "The Super IO IC failure",
          "Power switch troubleshoot",
          "The BIOS IC failure",
          "Graphic Card failure repair",
          "The CMOS battery failure",
          "The HDD or SSD failure",
          "Motherboard connectors failure",
          "USB & other motherboard connectors failure",
          "Dry solder failure",
          "Blown IC failure",
          "Identifying the short circuit",
          "Electro static problems",
          "Summary part 1",
          "Summary part 2"
        ]
      },
      "requirements": [
        "Basics of computer hardware"
      ],
      "description": "13 Reasons why you should choose this course\nThe course will teach you Everything about the Most Common Faults On Failed Laptops;\nThe course is created with perfect care by a computer engineer;\nOne-On-One Support;\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences;\nYour inquiries will be answered in a short time with a full explanation of any question;\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course;\nYou going to understand laptop motherboard parts and components;\nYou will learn how to check laptop motherboard circuits and components;\nYou going to learn how to identify the short circuit in any laptop motherboard;\nYou will learn and master how to troubleshoot, isolate and repair the most laptop common faults;\nYou going to learn many tips and tricks about laptop repair;\nThis course will transform you from a beginner to a Pro.\nTopics that we will be discussing in this course are :\nPower Adapter failure;\nThe Power jack failure;\nThe Random Access Memory RAM;\nPower circuit & protection components failure;\nHow to check Super Input-Output IC, SIO, and its circuit;\nHow to check Basic Input Output System IC, BIOS;\nPower switches ( power MOSFETs );\nCharge IC;\nPower switch troubleshooting;\nThe BIOS IC failure;\nThe HDD or SSD failure;\nGraphics Card failure repair;\nThe CMOS battery failure;\nMotherboard connectors failure;\nUSB & other motherboard connectors failure;\nDry solder failure;\nBlown IC failure\nIdentifying the short circuit;\nElectrostatic problems;\nHow to use the Multimeter in the correct way.\nYou will also learn many tips and tricks that will make you a hardware professional and have a deep understanding of Laptop motherboard repair.\nI will guide you step by step with an easy explanation of this course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nWhat are you waiting for?\nEnroll now and join us.\nI'll love to see you in the class.",
      "target_audience": [
        "Hardware Students and technicians;",
        "Everyone who want to improve their hardware skills;"
      ]
    },
    {
      "title": "ESP8266 Wifi module Software Programming",
      "url": "https://www.udemy.com/course/esp8266-wifi-module-software-programming/",
      "bio": "AT Command and NONOS SDK software implement",
      "objectives": [
        "ESP8266 WiFi module software programming:"
      ],
      "course_content": {
        "AT command and NONOS SDK software programming": [
          "Meeting with ESP8266 WiFi Chip",
          "Minimum ESP8266 System",
          "Connect_ESP8266 by AT Command",
          "ESP8266 Data Pass Through to PC in Station Mode",
          "ESP8266 Data Pass Through to PC in AP Mode",
          "ESP8266 Web Server",
          "ESP8266 Setup SDK Compile Environment",
          "ESP8266 NONOS SDK UART Hello World",
          "ESP8266 NONOS SDK Software Timer",
          "ESP8266 NONOS SDK Hardware Timer",
          "ESP8266 NONOS SDK GPIO LED Hello World",
          "ESP8266 NONOS SDK GPIO Interrupt",
          "ESP8266 NONOS SDK I2C",
          "ESP8266 NONOS SDK PWM",
          "ESP8266 NONOS SDK Connect WiFi Router",
          "ESP8266 NONOS SDK Connect TCP IP Server",
          "ESP8266 NONOS SDK AP Mode"
        ]
      },
      "requirements": [
        "Basic coding knowledge"
      ],
      "description": "Basic hardware and software programming knowledge about ESP8266 Wifi module, including:\n(1) ESP8266 wifi chip's features and minimum system;\n(2) AT command control ESP8266 by PC;\n(3) Setup ESP8266 web server by AT command;\n(4) Setup ESP8266 SDK compile environment;\n(5) ESP8266 NONOS SDK software timer, hardware timer, gpio led, gpio interrupt, I2C, PWM, Wifi Connect mode coding examples;",
      "target_audience": [
        "Beginner for ESP8266 WiFi Chip"
      ]
    },
    {
      "title": "An Introduction to PLC Programming",
      "url": "https://www.udemy.com/course/an-introduction-to-plc-programming/",
      "bio": "Learn PLC programming with the PLC Tutor",
      "objectives": [
        "Use i-TRiLOGI to write the ladder logic to start and stop a motor",
        "Use i-TRiLOGI to write to ladder logic to run a motor for a specified time and then stop",
        "Use i-TRiLOGI to write the ladder logic to inhibit the starting of a motor after a specified number of starts",
        "Use i-TRiLOGI to write the ladder logic to turn on an output by latching",
        "Use i-TRiLOGI to program and display a message"
      ],
      "course_content": {},
      "requirements": [
        "No PLC programming experience is required. You will learn all the PLC programming basics in this course"
      ],
      "description": "In this beginners course, you will learn the fundamentals of PLC programming by hands on practice with the PLC programming software i-TRiLOGI.\nYou will learn how to program a motor start stop, add timing, count events, latch & un-latch, and add a display message.\nYou will be shown how to obtain a free educational version of iTRiLOGI with which you can practice you programming skills. The PLC Tutor will provide online solutions to all exercises so that you may obtain immediate feed back on your course work.\nYou will be taught how to set up in-put and out-put lables using the IO Table, and how to program simple control elements such as normally open & normally closed contacts, and output coils. You will also be taught how to use i-TRiLOGI to program a custom function.\nYou will be taught how the use the i-TRiLOGI virtual Human Machine Interface (HMI) to check that your program functions as intended.\nTopic covered are:\nProgramming:\n1. A motor start stop\n2. Adding timing to stop a motor after a specified time.\n3. how to use the count function to inhibit the start of a motor after a specified number of consecutive starts\n4. How latch and un-latch an output.\n5. How to program a display message.\nThis introductory course will prepare to the take advantage of more advanced PLC programming",
      "target_audience": [
        "This course is for anyone interested in learning how to program PLCs"
      ]
    },
    {
      "title": "Design a Floating Point Unit 1 - Numbers",
      "url": "https://www.udemy.com/course/design-a-floating-point-unit-1-numbers/",
      "bio": "Computer Architecture and Design (FPU)",
      "objectives": [
        "Decimal to 32 Bit Floating Point Binary Conversion",
        "32 Bit Floating Point Binary Conversion to Decimal",
        "Normal and Subnormal (Denormal) numbers",
        "Excel VBA Conversion Tool",
        "Nearest Even Rounding",
        "Special Values (NaN, Infinity, Zero)",
        "IEEE754 Standard",
        "Worked Examples"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Normal Numbers": [
          "Normal Numbers",
          "Normal Numbers Worked Examples",
          "Binary to Decimal Conversion in Excel",
          "Decimal to Binary Conversion in Excel",
          "Floating Point Conversion tool (BTD , DTB)",
          "Intuition"
        ],
        "Subnormal Numbers": [
          "Subnormal Numbers",
          "Subnormal Numbers Worked Examples"
        ],
        "The Number Line": [
          "Largest Floating Point Number and Overflow to Infinity",
          "Normal Subnormal Interface",
          "Smallest Floating Point Number and Underflow to Zero",
          "Negative Numbers"
        ],
        "Rounding and Precision": [
          "Special Values and Rounding",
          "Special Values in Excel Tool",
          "Rounding and Precision in Excel Tools",
          "IEEE 754 Floating Point Number Specification",
          "Goodbye"
        ]
      },
      "requirements": [
        "Basic Arithmetic"
      ],
      "description": "The first part of Design a Floating Point Unit concentrates on an introduction to floating point numbers and the IEEE 754 standard for single precision 32 bit floating point binary numbers.\nThis course concentrates on the basics of floating point numbers. How to convert from decimal to 32 bit floating point binary and back again. We  look at both normal and subnormal (denormal) numbers ,  nearest even rounding  and rounding errors, precision and cover all the details we need from the IEEE754 standard for 32 bit single precision floating point binary numbers.\nThroughout the course we use a conversion tool that I created in Microsoft Excel VBA which helps us to automate the conversion process and also helps us to understand and check the results of conversion. Without this type of tool teaching and learning about floating point numbers would be a difficult and laborious process. I hope that this tool helps to demystify floating point numbers and make them more understandable.\nBy ensuring we have a solid foundation in floating point numbers we can then go ahead in the later courses to design each of the floating point arithmetic operations required to produce a full floating point unit in Logisim.\nOnce this course is completed then you will have all the information required to progress to the next course ,  Design a Floating Point Unit 2 - Multiplier.",
      "target_audience": [
        "Computer Science , Engineering students and everyone who is curious about floating point numbers."
      ]
    },
    {
      "title": "Mastering Xilinx DSP IP Cores: FIR, CIC, DDS, FFT",
      "url": "https://www.udemy.com/course/xlnx-dsp-ip/",
      "bio": "Practical FPGA DSP with Xilinx IP cores (FIR, CIC, DDS, FFT): from simulation to real-time deployment on Zynq 7000",
      "objectives": [
        "How to Simulate Xilinx DSP IP cores (FIR, CIC, DDS compiler and FFT) in Vivado with Verilog testbenches & Python analysis",
        "How to Integrate IP cores into FPGA designs on development board",
        "How to Develop standalone embedded C application to interface with DSP IP cores",
        "How to Automate Vivado & Vitis workflow with TCL and Python scripts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Requirements and Workflow Automation"
        ],
        "Xilinx DSP IP cores simulation": [
          "Vivado Simulation: FIR compiler v7.2",
          "Vivado Simulation: CIC compiler v4.0",
          "Vivado Simulation: DDS compiler v6.0",
          "Vivado Simulation: Fast Fourier Transform v9.1"
        ],
        "Development C application to interface with Xilinx DSP IP cores on Zynq 7000": [
          "Zynq 7000 SoC: development C application to interface with FIR compiler IP cores",
          "Zynq 7000 SoC: development C application to interface with CIC compiler IP cores",
          "Zynq 7000 SoC: development C application to interface with DDS compiler IP cores",
          "Zynq 7000 SoC: development C application to interface with FFT IP core"
        ]
      },
      "requirements": [
        "Vivado 2024.2",
        "Vitis 2024.2",
        "Python >= 3.0",
        "Powershell",
        "Any development board with Zynq 7000 SoC (Arty z7-20 as example)"
      ],
      "description": "Whether you're a beginner or an engineer looking to level up your FPGA skills, this course will guide you step by step through the entire workflow—from simulation to real-world deployment on the Arty Z7-20 development board.\nThis hands-on course covers four essential Xilinx DSP IP cores: FIR Compiler, CIC Compiler, DDS Compiler, and Fast Fourier Transform (FFT). You’ll learn how to configure and simulate each core using Vivado 2024.2, generate Verilog testbenches, and analyze the outputs using Python.\nWe’ll explore multiple configurations for each IP core:\nFIR Compiler as a bandpass filter, Hilbert transformer, interpolator, and decimator\nCIC Compiler as both an interpolator and decimator\nDDS Compiler in two configurations: with phase generator (internally generated phase increment) and without phase generator (streaming external phase input)\nFFT IP Core for both forward and inverse (backward) transforms\nNext, we take everything to the hardware. You’ll integrate these cores into practical FPGA designs and deploy them on a Zynq-7000 SoC. We'll develop bare-metal C applications in Vitis to manage data transfer between the processing system (PS) and programmable logic (PL) using AXI DMA.\nYou’ll also learn how to automate your development workflow with TCL scripts for Vivado and Vitis, and how to debug FPGA designs using System ILA.\nBy the end of this course, you’ll have a comprehensive, hands-on understanding of DSP design with Xilinx IP cores—both in simulation and on real hardware.\nThis course is ideal for FPGA beginners, digital designers, embedded engineers, and anyone working with signal processing systems on Xilinx platforms.",
      "target_audience": [
        "Beginner",
        "Intermediate"
      ]
    },
    {
      "title": "Arduino UNO R4 Mastery: Designing Tomorrow's Tech",
      "url": "https://www.udemy.com/course/arduino-uno-r4-schematic-and-pcb-design/",
      "bio": "Unveiling the Secrets of the NextGen Arduino Board: Master the Art of Custom Electronics with Professional PCB Technique",
      "objectives": [
        "Gain the independence to design and develop custom PCBs for a wide range of Arduino projects, unlocking creative possibilities.",
        "Learn valuable insights and techniques from experienced professionals to streamline your PCB design process.",
        "Enhance your ability to identify and address common issues that may arise during PCB design and fabrication.",
        "Develop a deep understanding of industry-standard best practices for designing high-quality and reliable PCBs.",
        "Discover methods for optimizing PCB designs to balance cost-effectiveness and performance requirements."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Arduino programming and electronics concepts is recommended but not required."
      ],
      "description": "Are you passionate about Arduino and looking to dive deep into custom PCB design? Do you want to be at the forefront of Arduino's evolution by mastering the all-new Arduino UNO R4 Board? Look no further!\nWelcome to \"Arduino UNO R4: Master the Art of Custom Electronics with Professional PCB Design Techniques.\"\nWhy Choose This Course?\nExclusive Content: This is the ONLY online course that takes you on an immersive journey through the Arduino UNO R4 schematic and PCB design using Altium Designer.\nDetailed Exploration: Dive deep into the world of Arduino UNO R4:\nLecture 2: Unveil the features and functionality of the brand-new Arduino R4.\nLecture 3: Understand every intricate detail of the Arduino R4 schematic and get ready to be surprised by the innovation!\nHands-On Learning: Not just theory! Get practical, step-by-step guidance:\nLecture 4: Design your own Arduino R4 schematic using Altium Designer.\nLecture 5: Master component placement with precision and efficiency.\nLecture 6: Lay out the PCB, ensuring optimal performance and aesthetics.\nExpert Guidance: Designed by industry professionals, our course offers insights and best practices that are essential for budding and experienced electronics enthusiasts alike.\nJoin a Community: By enrolling, you become a part of a thriving community of learners, innovators, and Arduino enthusiasts. Engage in discussions, share your projects, and grow together!\nSpecial Offer! Enroll now and get exclusive access to downloadable Arduino UNO R4 design resources and a community forum moderated by our experts.\nBe ahead of the curve and master the art of designing the future with Arduino. Your journey towards becoming an Arduino R4 design maestro begins here.\nEnroll Now and Start Designing the Future!\nWhat You Will Learn\nFeatures and functionality of the Arduino UNO R4\nDetailed understanding of the Arduino R4 schematic\nDesigning custom schematics using Altium Designer\nPrecision in component placement\nProfessional techniques in PCB layout\nWho Is This Course For\nAspiring electronics engineers\nArduino enthusiasts\nStudents and DIY makers\nTech hobbyists interested in PCB design\nRequirements\nBasic understanding of electronics and programming\nInterest in Arduino and custom PCB design\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Electronics enthusiasts",
        "Arduino hobbyists",
        "Engineers and developers",
        "Makers and tinkerers",
        "Professionals seeking to enhance their PCB design skills"
      ]
    },
    {
      "title": "JTAG: Boundary Scan, JTAG standard, TAP and DFT Introduction",
      "url": "https://www.udemy.com/course/jtag-protocol-boundary-scan-tap-and-dft-introduction/",
      "bio": "Boundary Scan Testing, JTAG Standard, JTAG connectivity, JTAG Debuggers, DFT Intro, BSDL",
      "objectives": [
        "Explain different types of PCB testing.",
        "Complete understanding on JTAG standard or protocol.",
        "Describe about JTAG HW debuggers and SW tools.",
        "Introduction to DFT (Design for Testability)."
      ],
      "course_content": {
        "PCB Testing Methods": [
          "Section1",
          "Functional Testing",
          "Structural Testing",
          "Boundary Scan Testing",
          "Boundary Scan: Transparent",
          "Boundary Scan: Capture",
          "Boundary Scan: Update",
          "Boundary Scan: Serial Shift",
          "JTAG Standard",
          "JTAG Uses",
          "Quiz1"
        ],
        "JTAG Standard": [
          "Section2",
          "JTAG Signals",
          "JTAG Register",
          "TAP Controller",
          "TAP State Machine",
          "TAP State Machine Flow",
          "TAP Shift Operation",
          "TAP Shift Operation FLow",
          "IDCODE Register",
          "IDCODE Read Example",
          "Boundary Scan Register",
          "JTAG Instructions",
          "Quiz 2"
        ],
        "JTAG Connectivity": [
          "Section3",
          "JTAG vs cJTAG",
          "IJTAG - Internal JTAG",
          "Multicore Connection",
          "Multicore Connection Flow",
          "Multicore Connection Example",
          "CPU Synchronization",
          "Host Interface",
          "Quiz 3"
        ],
        "HW and SW Debuggers": [
          "Section4",
          "HW Debuggers",
          "SW Debugger Tools",
          "JTAG Questions",
          "Quiz 4"
        ],
        "DFT - Design for Testability": [
          "DFT Intro",
          "DFT Techniques",
          "BSDL",
          "Conclusion",
          "Quiz 5"
        ]
      },
      "requirements": [
        "Basic knowledge in digital electronics required.",
        "No programming experience required. You can learn the complete JTAG standard for the debugging or developing purpose and also for interview.."
      ],
      "description": "A job oriented exhaustive course on JTAG protocol for PCB hardware design testing using the JTAG HW debugger and SW debugger tools.\nDifferent types of testing methods for PCB testing like functional testing, structural testing and boundary scan testing methods and  how boundary scan cell works.\nIn detail explanation of JTAG standard especially about JTAG signals, JTAG register, TAP controller operation, TAP controller state machine and how it will works, IDCODE register read example.\nUnderstand all the components in the JTAG standard and it usage and also how the JTAG debugging works.\nDetailed explanation on difference between JTAG and cJTAG and its working.\nDifferent types of JTAG and how multicore connection will be done using JTAG.\nDetailed explanation of IRPRE, IRPOST, DRPRE, DRPOST in JTAG standard.\nUsage of different types of JTAG HW debuggers available in the market and JTAG SW debugger tools for debugging the IC.\nIntroduction to DFT - Design for testability and why its required in VLSI chips and various DFT techniques used.\nLoads quizzes to check your understanding.\nUnlimited support with the instructor.\nAccess to all the materials and the future upgrades.\nAfter completing this course you can confidently understand how JTAG protocols works for debugging the digital design chips.\nWork through the lessons at your own place.",
      "target_audience": [
        "Embedded systems Validation and Testing Enginneers"
      ]
    },
    {
      "title": "STM32L0 Bare-Metal Peripheral Drivers Development",
      "url": "https://www.udemy.com/course/stm32l0-bare-metal-peripheral-drivers-development/",
      "bio": "No Libraries used, Professional CMSIS Standard, ARM Cortex, ADC,UART,TIMERS, GPIO,SPI,I2C etc.",
      "objectives": [
        "Write firmware using only bare-metal embedded-c",
        "Understand the Cortex-M Architecture",
        "Write Bare-Metal ADC Drivers for the STM32L0 Microcontroller",
        "Write Bare-Metal TIMER Drivers for the STM32L0 Microcontroller",
        "Write Bare-Metal UART Drivers for the STM32L0 Microcontroller",
        "Write Bare-Metal INTERRUPT Drivers for the STM32L0 Microcontroller",
        "Write Bare-Metal GPIO Drivers for the STM32L0 Microcontroller",
        "Write Bare-Metal SPI Drivers for the STM32L0 Microcontroller",
        "Build every single line of code from scratch by writing to the microcontroller’s memory space directly.",
        "Use No third party libraries or header files",
        "Understand and write every single line of code yourself- no Copy/Paste",
        "Use the debugger effectively to analyze and resolve any bugs",
        "Develop proficiency in your embedded development skills and confidently take the next steps",
        "Define addresses for the different peripherals",
        "Analyze the chip documentation",
        "Create registers from the addresses"
      ],
      "course_content": {},
      "requirements": [
        "NUCLEO-STM32L0 DEVELOPMENT BOARD",
        "No programming experience needed - I'll teach you everything you need to know."
      ],
      "description": "Are you tired of Copying and Pasting code you don't understand?\nWith a programming based approach, this course is designed to give you a solid foundation in bare-metal firmware development for  ARM-based microcontrollers . The goal of this course is to teach you how to navigate the microcontroller reference manual and datasheet to extract the right  information to professionally  build peripheral drivers and firmware. To achieve this goal, no libraries are used in this course, purely bare-metal embedded-c and register manipulations.\nStill keeping it simple, this course comes in different ARM Cortex-M development boards  so that students can put the techniques to practice using an ARM Cortex-M development board of their choice. This version of the course uses the STMicroelectronics  STM32L0-NUCLEO which has an ARM Cortex-M0+ microcontoller.\n\n\nSo with that understood, let me tell you…\n\nExactly What You’re Getting\nThis is dramatically different from any course you have ever taken because it’s more of a professional hands-on “field guide” to stm32 bare metal firmware development.\nThe reason why is because there’s no fluff or filler. It immediately gets down to the actual subject, showing you exactly what to do, how to do it, and why.\nPlus, it’s easy.\nAnd you’ll immediately “get” the entire mythology I personally use to build firmware for consumer devices in my professional life.\nIt's About MORE Than Just Getting the Code to Work\nSee, this course will change your professional life forever. Here is what one student had to say about the 1st version (STM32F4) of the course :\n\n\n\"I would suggest this course for all the beginners. The concepts have been covered in the right sequence.And also the best part of this lecture series is getting to know how to explore the reference manual and datasheets.\"\nHere is what another student had to say :\n\"Extremly helpful to get to understand the uC programming deeper! For me it is much easier from now to develop code because I undertstand the base behind, so I'm more confident and more experienced to develop and debug the code. Really, this course is very useful to link the hardware knowledge with the coding skills. This fills the gap between them. Thanks for it! :)\"\nA third student :\n\"I am a professional semiconductor chipset application engineer with 30 years in global embedded product design in system applications. I can say this teacher is very straight forward by sharing his many years knowledge to the students with his true heart. Yes. I love his teaching pace and style!\"\n\n\n\n\nThe First Version (STM32F4)  is being Taken by 5000+ Students with 1000+ Reviews\nIf at least one of the following applies to you then keep reading if not then simply skip this course:\n\n\" Escape From \"\nCopying/Pasting code you don’t understand\nUsing third party libraries and header files like HAL, LL and StdPeriph\nExperiencing bugs you don’t understand\nBeing afraid of technical documentations like the reference manual and datasheet of the chip\nImposter syndrome\n\" Arrive At \"\nBuilding every single line of code from scratch by writing to the microcontroller’s memory space directly.\nUsing No third party libraries or header files\nUnderstanding and writing every single line of code yourself- no Copy/Paste\nUsing the debugger effectively to analyze and resolve any bugs\nDeveloping proficiency in your embedded development skills and confidently take the next steps\nSo like I said, there’s more than just getting each piece of code to work.\nHere’s an overview of what you’re getting...\nAnalyzing the chip documentations:\nBefore developing the firmware for any chip you have to learn how to read the documentation provided by the chip manufacturer.\n\n\nDefining Peripheral address\nAll components on the microcontroller have an address range. To write to a component or read from a component you need to locate its address range in the documentation and properly define the addresses in your code.\n\n\nCreating registers from the address:\nThe addresses in the address range of a component represent the registers of that component. To access these registers you have effectively typecast the addresses.\n\n\nUnderstanding CMSIS:\nCortex-Microcontroller Interface Standard (CMSIS)CMSIS is a standard developed by Arm for all Cortex-Microcontrollers. This is the standard used in professional firmware development\n\n\nBut it gets better because you’re also getting…\n\nDeep Lessons on Developing Peripheral Drivers\nYou will learn how to develop bare-metal drivers for the following peripherals :\nAnalog-to-Digital Converter (ADC)\nSerial Peripheral Interface (SPI)\nNested Vector Interrupt Controller (NVIC)\nGeneral Purpose Timers (TIM)\nSystem Tick Timer (SysTick)\nGeneral Purpose Input/Output (GPIO)\n\n\nSpecially Designed For People Who Hate Copy/Paste\nListen. If you don’t like “Copy/Paste” you’re not alone. I can’t stand it either. I’d literally rather have a piece of code that I wrote from scratch that doesn’t work than someone else’s working code I copied and pasted.\nAnd that’s why I’ve spent months designing and recording this course in which I show you how to locate every single register used and the meaning of every hexadecimal value written into the register.\n\n\nAlso it comes with a money back guarantee so you have nothing to loose.",
      "target_audience": [
        "If you are an absolute beginner to embedded systems, then take this course.",
        "If you are an experienced embedded developer and want to learn how to professionally develop embedded applications the STM32L0 microcontroller, then take this course."
      ]
    },
    {
      "title": "MOSFET Transistor - Complete Course for Beginners | MOSFETS",
      "url": "https://www.udemy.com/course/moseft-transistor-the-complete-course-for-beginners/",
      "bio": "All about MOSFET Transistor, Testing Transistor, MOSFET Transistor working principle, , NPN & PNP Channel MOSFET",
      "objectives": [
        "How MOSFETS works;",
        "How to check PNP & NPN MOSFET;",
        "How to test MOSFETs using Multimeter;",
        "Types of MOSFETS;",
        "MOSFETs Enhancement Mode & Depletion Mode;",
        "MOSFETs Failures;",
        "Important Tips & Tricks about MOSFETS maintenance;",
        "How to identify MOSFETs in Motherboards;",
        "MOSFET limitations;",
        "Benefits & advantages of MOSFETs;",
        "Various applications of MOSFETs;",
        "Real examples of MOSFETs use."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "MOSFET Overview",
          "MOSFET Definition & Historical",
          "MOSFET Structure",
          "MOSFET Working Principle"
        ],
        "MOSFET Types": [
          "Types of MOSFETS",
          "Enhancement Mode",
          "Depletion Mode"
        ],
        "Study of MOSFET Features & Limitations": [
          "MOSFET Advantages",
          "MOSFET Limitations",
          "MOSFET Applications"
        ],
        "Test & Examination of MOSFET": [
          "Checking PNP & NPN MOSFET Using Multimeter",
          "Testing MOSFET Using Multimeter",
          "MOSFET Failures",
          "Important Tips & Notes"
        ],
        "Conclusion": [
          "MOSFETs In Real Motherboards"
        ]
      },
      "requirements": [
        "A basic knowledge in Electronics"
      ],
      "description": "Hi,\nThis is a very very special Course that will let you master one of the most important electronic components, the MOSFET.\n10 Reasons why you should choose this Title\nThe course will teach you the MOSFET TRANSISTOR from A to Z,\nThe course is created with perfect care by a professional in Electronics with 8 years of experience.\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences.\nYour inquiries will be answered in a short time with a full explanation of any question.\nConstant updates.\nOne-On-One Support.\nSimple and easy-to-understand explanation with examples.\nA certificate will be provided upon completion of the course.\n\n\nThis is what we will cover in this course :\nSection 1 :\nIntroduction:\nMOSFET Overview\nMOSFET Definition & Historical\nMOSFET Structure\nMOSFET Working Principle\nSection 2 :\nMOSFET Types:\nTypes of MOSFETS\nEnhancement Mode\nDepletion Mode\nSection 3 :\nStudy of MOSFET Features & Limitations:\nMOSFET Advantages\nMOSFET Limitations\nMOSFET Applications\nSection 4 :\nTest & Examination of MOSFET:\nChecking PNP & NPN MOSFET Using Multimeter\nTesting MOSFET Using Multimeter\nMOSFET Failures\nImportant Tips & Notes\nSection 5 :\nConclusion:\nMOSFETs In Real Motherboards\nUpon completion of this course, you will be able to master the MOSFET repairing and much more\nWhat are you waiting for?\nGo ahead and join us\nI'll love to see you in the class.",
      "target_audience": [
        "Beginners & Intermediate in Electronics,",
        "Computer and Electronic technicians.",
        "Students who are interested in computer motherboard repair;",
        "Anyone who wants to understand MOSFETs & Transistors repairing."
      ]
    },
    {
      "title": "The Ultimate Embedded C Interview Prep Course",
      "url": "https://www.udemy.com/course/master-the-embedded-c-programming-interview/",
      "bio": "Unlock your potential with targeted interview prep",
      "objectives": [
        "To prepare for an Embedded C programming interview",
        "Will learn complex C programming topics",
        "Embedded C",
        "Prepare for a C embedded interview, for a automotive company or an embedded one"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and presentation"
        ],
        "Operators(theory + interview prep)": [
          "Operators questions",
          "Question 6",
          "Question 11",
          "Question 15",
          "Question 16",
          "Question 18",
          "Question 22",
          "Question 29",
          "Question 30",
          "Question 42",
          "Question 80",
          "Question 86",
          "Question 94",
          "Question 96",
          "Question 101",
          "Question 102",
          "Question 103",
          "Question 104",
          "Question 105",
          "Question 106",
          "Question 108",
          "Question 113",
          "Question 118",
          "Question 119",
          "Question 122",
          "Question 123",
          "Question 125"
        ],
        "Variables, data types, storage classes and scope rules": [
          "Variables, data types, storage classes and scope rules questions",
          "Question 5, part 1",
          "Question 5, part 2",
          "Question 7",
          "Question 8, part 1",
          "Question 8, part 2",
          "Question 12",
          "Question 13",
          "Question 19, part 1",
          "Question 19, part 2",
          "Question 20",
          "Question 21",
          "Question 27",
          "Question 35",
          "Question 36",
          "Question 37",
          "Question 38",
          "Question 44",
          "Question 45, part 1",
          "Question 45, part 2"
        ],
        "Loops questions": [
          "Loops",
          "Question 9",
          "Question 10",
          "Question 14",
          "Question 17",
          "Question 28",
          "Question 31",
          "Question 76",
          "Question 115",
          "Question 126",
          "Question 132"
        ],
        "\"Functions\" questions": [
          "Functions",
          "Question 1",
          "Question 2",
          "Question 3",
          "Question 24",
          "Question 32",
          "Question 46",
          "Question 48",
          "Question 52",
          "Question 66",
          "Question 79"
        ],
        "\"Macros\" questions": [
          "Macros",
          "Question 4",
          "Question 43",
          "Question 55",
          "Question 57",
          "Question 58",
          "Question 62",
          "Question 68",
          "Question 77",
          "Question 114",
          "Question 124"
        ],
        "\"Code examples and other generic topics\" questions": [
          "Generic topics",
          "Question 39",
          "Question 40",
          "Question 41",
          "Question 127",
          "Question 128",
          "Question 129",
          "Code examples",
          "Question 25",
          "Question 26",
          "Question 33",
          "Question 34",
          "Question 59",
          "Question 90",
          "Question 116",
          "Question 117",
          "Question 120"
        ]
      },
      "requirements": [
        "Go through a C programming tutorial, or be familiar with this programming language"
      ],
      "description": "Hi and welcome to my \"Master the Embedded C programming interview\" course!\nMy name is Alex and I am an SW engineer with more than 10 years experience in Automotive industry, in this course I want to share with you all my experience in embedded systems programming interviews.\nThis course is structured in 6 Chapters/Section, over 130 questions(with detailed explanations and answers) and more than 90 video explanations.\nIn this course I tried to cover most important topics which you might encounter in an Embedded C programming interview.\nAt the beginning of each section you will find a lecture with the same name as the section and this lecture will have attached a document that will contain all the questions(with detailed explanations and answers) of that chapter. After this lecture in that section, there will be other lectures that will contain some video explanations for the questions in that section.\nYou are free to download the pdf file with the questions(with detailed explanations and answers), if you prefer to study the questions yourself or you can join us and go through these questions together, watching the videos explanations.\nI believe you’ll do very well at the interview. All you need to do is stay as calm as possible and give them your best shot. Best of luck!",
      "target_audience": [
        "Those who want to prepare for an Embedded C programming interview for a job in Automotive or other Embedded systems field"
      ]
    },
    {
      "title": "Arduino Power Consumption",
      "url": "https://www.udemy.com/course/arduino-power-consumption-external-timers-reduce-power/",
      "bio": "Get in depth knowledge on Arduino Power requirements and Power Consumption with advance Tips and Tricks to Power Arduino",
      "objectives": [
        "Low power Arduino libraries",
        "Deep sleep mode.",
        "Slowing down Arduino clock speed.",
        "Replace or neglect power-consuming components in your Arduino board",
        "Lower the voltage supply on your Arduino.",
        "Make your Arduino board that consumes away much less power than the one that you will buy.",
        "Reduce Arduino power consumption using external timers.",
        "More Tips and Tricks to reduce power consumption and you can choose from them.",
        "Reduce power using an external timer circuit and how this timer can reduce power consumption.",
        "Solar-powered battery charger circuit for your Arduino board",
        "Sensor-based power friendly external circuit."
      ],
      "course_content": {},
      "requirements": [
        "An Internet Connection",
        "Basic knowledge in Programming"
      ],
      "description": "Get in-depth knowledge on Arduino Power requirements and Power Consumption with advanced Tips and Tricks to Power Arduino\nWith this knowledge, you can make a much more educated decision about how to power your final project, choose the right board for your application, and optimize your code with routines like sleep mode and low power libraries. Arduino is a versatile platform that can be used to create many different projects. You’ll have all the tools necessary to integrate batteries, solar panels, capacitors, resistors, voltage regulators into your projects. The Arduino Platform power management has been a key design feature from the beginning, which means no additional hardware or software is needed to monitor power. It is a versatile platform that can be used to create many different projects.\nArduino is a development board built with several different circuits, including a USB converter, regulators, indicators, short circuit protection, a damage control circuit, and a lot of other circuits. All of these internal components use more power than the minimum necessary.\nWhy you should take this course?\nArduino is an open-source technology that is great for beginners and experts alike to create any project they want.\nKnowledge about power requirements and power consumption.\nLearn how to detect and fix common power problems.\nNo need to worry about Arduino's power usage anymore.\nGreat for any Arduino user who wants to increase their knowledge on this topic.\nIn this course, we will look at different ways we can use to reduce the power consumption of an Arduino by changing some hardware or using special codes. You will learn how to increase your project's efficiency by reducing the amount of power consumption through these tips and tricks that we are going to provide in this course.\nWe will look at ways to reduce power consumption within the Arduino by changing hardware or modifying code.\nHowever, there are also ways to reduce the power consumption of an Arduino by adding some simple external circuitry.\nIn this course, we will design some external circuits, some simple and intermediate, and even complex circuits to control the power flow of our Arduino to help externally regulate the power flow.\nThe circuits that we will present in this course are to be used and work best when you want to multiply your battery life in any Microcontroller project, not just Arduino.\nI'm sure that after this course, you will know a lot about Arduino and about its internal structure and how you can reduce power consumption.\nWhat you will learn in this course:\nLow power Arduino libraries\nDeep sleep mode\nSlowing down Arduino clock speed\nReplace or neglect power-consuming components in your Arduino board\nLower the voltage supply on your Arduino\nMake your Arduino board consume much less power than the one that you will buy\nReduce Arduino power consumption using external timers\nMore Tips and Tricks to reduce power consumption and you can choose from them\nReduce power using an external timer circuit and how this timer can reduce power consumption\nSolar-powered battery charger circuit for your Arduino board\nSensor-based power-friendly external circuit\nI'm sure that you will enjoy this course content. It has a lot of useful information.\nIn the end, you will gain information not only about reducing Arduino power consumption but also about the Arduino board structure.\nYou will learn as you practice with real-world examples in this course.\nWhat You Will Learn\nLow power Arduino libraries\nDeep sleep mode\nSlowing down Arduino clock speed\nReplace or neglect power-consuming components in your Arduino board\nLower the voltage supply on your Arduino\nMake your Arduino board consume much less power than the one you will buy\nReduce Arduino power consumption using external timers\nTips and tricks to reduce power consumption\nSolar-powered battery charger circuit for your Arduino board\nSensor-based power-friendly external circuit\nWho is This Course For\nArduino enthusiasts looking to expand their skills\nDIY electronics hobbyists\nStudents of technology and engineering\nEducators looking for practical STEM projects\nAnyone interested in optimizing power consumption in Arduino projects\nRequirements\nBasic understanding of electronics and circuitry\nEnthusiasm for DIY projects and learning new technology\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in controlling Arduino Power Consumption",
        "Anyone Interested in Learning how reduce Arduino Power Consumption",
        "Anyone Interested in Learning Why Arduino Consume so much power",
        "Anyone Interested in make Arduino Battery Powered Project",
        "Anyone Interested in learning different ways to reduce Arduino Power Consumption",
        "Anyone Interested in Making his own low power Arduino Board at Home",
        "Anyone with slight interest in making great things",
        "Arduino Geeks",
        "Electronics Geeks",
        "Hardware developers"
      ]
    },
    {
      "title": "PyUVM Series Part 2 : COCOTB fundamentals",
      "url": "https://www.udemy.com/course/python-for-vlsi-engineer-p2-understanding-cocotb/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "How to employ COCOTB for DUT verification.",
        "Approaches to generating clock and reset stimuli.",
        "Python extensions beneficial for DUT verification.",
        "Generation of stimuli in concurrent and sequential manners."
      ],
      "course_content": {
        "Getting Started with IDE": [
          "Installation",
          "Linux Commands",
          "How to compile codes",
          "adder.sv",
          "adder_tb.py",
          "makefile",
          "Print vs Logging",
          "Code",
          "Sending Variable values on console in differnt formats P1",
          "Sending Variable values on console in differnt formats P2",
          "Sending Variable values on console in differnt formats P3",
          "Code"
        ],
        "Fundamentals": [
          "Executing DUT from python TB",
          "Code",
          "Apply Stimuli P1 : Accessing I/O handles P1",
          "Apply Stimuli P1 : Accessing I/O handles P2",
          "Apply Stimuli P1 : Accessing I/O handles P3",
          "Code",
          "Apply Stimuli P2 : Accessing Value property",
          "Apply Stimuli P3 : Direct Assignment",
          "Code"
        ],
        "Stimuli for Reset": [
          "Fixed Duration Stimuli",
          "Code",
          "Accessing Internal Signals of DUT P1",
          "Accessing Internal Signals of DUT P2",
          "Code",
          "Reset based on edge of other signal P1 : Rising, Falling, Edge",
          "Reset based on edge of other signal P2 : FOR LOOP",
          "Code",
          "Clock Cycles Function",
          "Code"
        ],
        "Stimuli for Clock": [
          "Custom Clock P1",
          "Custom Clock P2",
          "Code",
          "Built-In Clock Function",
          "Code",
          "Sync and Async Functions P1",
          "Sync and Async Functions P2",
          "Code"
        ],
        "BinaryValue and Utils extensions": [
          "Understanding BinaryValue",
          "Adding Values in differnt format",
          "Conversion to differrnt representation",
          "Conversion to different radix",
          "Logical, len and is_resolvable operator",
          "Code",
          "Used Case : Priority Encoder P1",
          "Used Case : Priority Encoder P2",
          "Used Case : Priority Encoder P3",
          "Code",
          "Working with integer",
          "Code"
        ],
        "Concurrent Execution": [
          "Understanding FORK",
          "Code",
          "Operation of Fork",
          "Code",
          "Operation of start_soon",
          "Code",
          "Operation of await start",
          "Code",
          "Used Cases",
          "Code"
        ],
        "Combinational Circuit Verification": [
          "4-bit adder P1",
          "4-bit adder P2",
          "Code",
          "8:1 Mux",
          "Code",
          "4:1 8-bit Multiplexer",
          "Code",
          "4-bit Ripple Carry Adder",
          "Code"
        ],
        "Sequential Circuits": [
          "D-Flipflop",
          "Code",
          "Memory P1",
          "Memory P2",
          "Code"
        ],
        "Bonus Series Course": [
          "Bonus Course"
        ]
      },
      "requirements": [
        "Fundamental grasp of Python or successful completion of the Python for VLSI Engineer Part 1 course."
      ],
      "description": "COCOTB stands for \"Coroutine-based Co-simulation TestBench.\" It is an open-source Python-based framework used for verifying digital designs through simulation. COCOTB allows engineers to write testbenches in Python and seamlessly integrate them with popular hardware description languages (HDLs) such as Verilog and VHDL. By leveraging Python's flexibility and power, COCOTB simplifies the process of creating test environments, generating stimuli, and analyzing results for digital designs. It supports both sequential and concurrent simulation, making it suitable for a wide range of verification tasks, from simple combinational circuits to complex sequential designs. Overall, COCOTB is a versatile and efficient tool for digital design verification, offering a modern and Pythonic approach to simulation-based testing.\nIn this extensive course, you'll dive deep into the world of COCOTB, an invaluable tool for validating digital designs. We'll explore a broad spectrum of topics, beginning with the foundational principles of generating stimuli for both data and control signals. As you progress, you'll acquire advanced techniques for crafting robust reset and clock stimuli, establishing a solid foundation for ensuring the dependability of your verification environment. Throughout the course, we'll navigate the intricacies of sequential and concurrent stimulus generation, empowering you to seamlessly adapt to a variety of verification scenarios. Additionally, we'll delve into Python extensions specifically tailored to enhance the verification process, furnishing you with a versatile set of tools to optimize your workflow and amplify productivity. Finally, dynamic demonstrations will offer firsthand insight into COCOTB's capabilities, showcasing its application across diverse verification scenarios, ranging from straightforward combinational circuits to intricate sequential designs. By the culmination of this transformative journey, you'll emerge as a proficient COCOTB user, equipped to confidently tackle any verification challenge and uphold the functionality and reliability of your digital designs.",
      "target_audience": [
        "If you're excited about Python and DUT verification with Python, this is the place for you."
      ]
    },
    {
      "title": "Arduino IoT Environment Monitor Project",
      "url": "https://www.udemy.com/course/arduino-iot-environment-monitor-project/",
      "bio": "The perfect project for the new Arduino maker looking for a weekend IoT challenge.",
      "objectives": [
        "How to create an Arduino IOT system.",
        "Intergrate sensors, LEDs, LCDs, and Wifi hardware.",
        "Create and interact with a mobile and web dashboard powered by Blynk.",
        "How to use the the DHT11 sensor.",
        "How to use the photoresistor.",
        "How to use the 2x16 LCD display using the 4-bit parallel connection method.",
        "How to use the ESP01S WiFi module with an Arduino Uno.",
        "How to configure the ESP01S Wifi module using its AT command set.",
        "How to use the above mentioned hardware within the limited resource constraints of the Arduino Uno.",
        "How to create an Arduino shield PCB in KiCad to replace the prototyping breadboard."
      ],
      "course_content": {
        "Introduction": [
          "1-10 What is the course about?",
          "1-20 Hardware and kit overview",
          "1-40 How to get the most out of this course"
        ],
        "Getting to know the hardware": [
          "2-10 The potentiometer",
          "2-20 The photo resistor",
          "2-30 Measuring light with Lux and the Axel-Benz formula",
          "2-40 Temperature and humidity with the DHT11",
          "2-50 The 2x16 LCD display",
          "2-60 ESP-01S WiFi module - Configuration wiring",
          "2-61 ESP-01S WiFi module – Configuration AT commands",
          "2-62 ESP-01S WiFi module - Create Blynk account and project",
          "2-63 ESP-01S WiFi module - Simple LED control with Blynk"
        ],
        "Prototype 0: Introduction to Blynk": [
          "3-10 Create a simple Blynk dashboard",
          "3-20 ESP01, LED and potentiometer wiring",
          "3-30 Demo sketch",
          "3-40 Create mobile dashboard"
        ],
        "Prototype 1: Blynk and sensors": [
          "4-10 Wire DHT11 and light sensors",
          "4-20 Web dashboard",
          "4-30 Sketch",
          "4-40 Mobile dashboard"
        ],
        "Prototype 2: LCD": [
          "5-10 Wiring LCD module",
          "5-20 Sketch"
        ],
        "Prototype 3: Improvement with a custom PCB": [
          "6-10 Objective and PCB schematic",
          "6-20 Sketch modification and testing",
          "6-30 Fix PCB bugs and add LED"
        ],
        "Conclusion": [
          "7-10 Recap: What did you learn in this project?"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "This is not an introductory course.",
        "You should know how to wire up simple circuits on a breadboard",
        "You should know how to upload a sketch to your Arduino.",
        "You should be able to read and understand simple Arduino code.",
        "You should be able to install external libraries to the Arduino desktop IDE",
        "You should be able to fix simple code bugs and wiring errors."
      ],
      "description": "With this course, you will apply the knowledge you acquired from Arduino Step by Step Getting Started to create a simple Internet of Things device.\nThis course aims to give you the opportunity to complete your first Arduino project that is non-trivial, combines modern hardware and software components, and includes an Internet of Things element.\nIn designing this course, one of my core objectives was to make this project course small and focused in scope. With this project, I want to give you a quick win and bolster your confidence so that you will feel good about continuing with bigger and more complicated projects.\nIn this course, you will learn to use an Arduino Uno along with these peripherals:\nThe DHT11 sensor.\nThe photoresistor.\nThe 2x16 LCD display with the 4-bit parallel connection method.\nThe ESP01S WiFi module.\nYou will learn how to assemble those peripherals into a single circuit. You will also learn how to calculate the appropriate fixed resistor for the photoresistor so that light sensor readings are accurate.\nOn the software side of the project, you will learn how to write a sketch that:\n\nMakes use of the peripherals within the limited resource constraints of the Arduino Uno.\nDesign a web and mobile dashboard that displays sensor data and controls the Arduino.\nYou will also learn how to power your Arduino motor project with one or two batteries to separate the Arduino and motor sub-circuits.\nHardware\nMost of the hardware I used in this course is conveniently part of the \"3 in 1 IoT/Smart Car/Learning Kit for Arduino\" by Sunfounder.\nThis kit contains an Arduino Uno clone board, the sensors, the wifi module, assorted resistors, wires and the breadboard.\nThis hardware is not included in this course, and you must purchase it separately.\nYou can purchase these items as part of a kit sold by Sunfounder, or individually from your preferred retailer.\nBefore you purchase any hardware, please take a few minutes to watch the lecture, \"Hardware and kit overview\", where I discuss all hardware components needed in this course.\nThis course has a prerequisite: Arduino Step-by-Step Getting Started\nThis is not an introductory course.\nYou should know how to wire up simple circuits on a breadboard and upload a sketch to your Arduino.\nYou should be able to read and understand simple Arduino code, install external libraries to the Arduino desktop IDE, and know how to fix simple code bugs and wiring errors.\nIf you don't feel confident about the skills I described, I recommend that you complete my course Arduino Step by Step Getting Started before attempting this course.",
      "target_audience": [
        "Post-beginner Arduino makers.",
        "Anyone looking for an opportunity to complete their first non-trivialArduino project.",
        "Anyone looking for a quick win and bolster their confidence."
      ]
    },
    {
      "title": "Writing Robotic Arm using Arduino (Develop Your First Robot)",
      "url": "https://www.udemy.com/course/writing-robot-using-arduino-writing-robotic-arm/",
      "bio": "Writing Robotic Arm Development Using Arduino, Graphical Understanding of Algorithm - Develop Your First Robot",
      "objectives": [
        "Able to Develop his/her own Writing Robotic Arm using Arduino Simple Code",
        "Able to Understand Writing Robot Algorithm",
        "Able to develop their own Arduino Robot"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of C Programming Language - Arduino Programming Language (Optional)",
        "Arduino IDE"
      ],
      "description": "- Do you Want to develop a robotic arm which can write just like human ?\n- Do you Want to learn writing robot Algorithm using graphical material ?\n- Do you Want to develop your own custom robotic arm which can write any alphabet ?\n- Do you Want to develop your first robot ?\n\n\nWriting Robotic Arm is Arduino based project. It is a programmable robot with similar functions of human arm. Writing robot able to write different alphabets. Writing robot can write in our handwriting style.\nAn algorithm designed for this purpose which provide different angles to robotic arm on which robot moves to write alphabets. Algorithm is completely designed by me. Graphical material will allow the students to learn algorithm from A-Z easily without any complexity.\nThis course will cover theory to practical implementation of writing robotic arm development step-by-step. It doesn't matter you are beginner or advance robotics developer. I designed this course so that everyone can learn basics to advance concept of writing robot.\n\n\nWhy Should You Enroll in This Course ?\nYou should:\n- If you are super psyched about robotics\n- If you want to develop your own Writing Robot which can write any alphabet like human\n- If you want to develop a custom robotic arm\n- If you want to learn writing robotic arm algorithm and its implementation using Arduino\n\n\nMoreover if you learn how writing robotic arms actually work then you can develop other robots very easily, like Welding Robot, Painting Robot, Assembly Robot, Material Handling Robot, Palletizing Robot.",
      "target_audience": [
        "Anyone Who Wants Develop his/her own Writing Robot Using Arduino",
        "Anyone Who Wants to Learn Writing Robotic Arm Writing Process/Concept",
        "Beginner Who Wants Learn How to Program Servo With Arduino",
        "Beginner Who Wants to Know How to Develop Hardware of Writing Robotic Arm"
      ]
    },
    {
      "title": "Partial Reconfiguration with FPGA",
      "url": "https://www.udemy.com/course/partial-reconfiguration-with-fpga/",
      "bio": "Learn about the complete Partial Reconfiguration Flow with Xilinx VIVADO and FPGA",
      "objectives": [
        "Partial Reconfiguration Design Flow",
        "Xilinx VIVADO tool and FPGA devices for Partial Reconfiguration Flow",
        "Debugging the PR Design with ILA and VIO",
        "Using PR Controller with VIVADO IP platform and FPGA"
      ],
      "course_content": {},
      "requirements": [
        "Basics of FPGA Design"
      ],
      "description": "This course covers the basics of \"Partial Reconfiguration (PR)\" flow with Xilinx VIVADO tool and FPGA. We have followed the standard syllabus on this training, so the enthusiast who want to learn will get in depth knowledge and skills on the \"Partial Reconfiguration\". PR flow is necessary when there is larger design and need to fit on the specific series of FPGA. PR flow is followed on the Xilinx as well as Intel-Altera based design tools and FPGA.\nThis are the major points which covered on this course:\nPartial Reconfiguration flow with Xilinx VIVADO and FPGA [7 series, Ultrascale and Ultrascale+ FPGAs]\nUsing Debugging method [using ILA and VIO] on Partial Reconfiguration flow\nDesigning PR flow with Partial Reconfigurable Controller\nPR flow with MicroBlaze\nBitStream Relocation-overview",
      "target_audience": [
        "FPGA Design Enthusiast",
        "Electrical Engineering and Computer Science Student"
      ]
    },
    {
      "title": "Learn VHDL and FPGA Development Hands On",
      "url": "https://www.udemy.com/course/fpga-turbo-series/",
      "bio": "Use VHDL to develop FPGA applications that run on development boards",
      "objectives": [
        "Understand the VHDL design and development process",
        "Learn how to implement designs using VHDL development tools",
        "Become familiar with the various FPGA development tools available",
        "Complete projects from conception to full implementation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Vivado": [
          "Creating a Project in Vivado",
          "Download and Installation"
        ],
        "Communications Introduction": [
          "Communications Course Introduction"
        ],
        "PWM Implementation": [
          "PWM Introduction",
          "Simulating your PWM Design in Vivado",
          "PWM Servo Motor",
          "PWM Buzzer Control",
          "PWM Waveforms",
          "PWM Terminal Demo"
        ],
        "Infrared Communication": [
          "Infrared Communications Introduction",
          "Infrared Data Transmission",
          "Infrared Receiver Demo",
          "Conclusion"
        ],
        "PS/2 Communication": [
          "Intro to PS/2 Communication",
          "PS/2 Protocol",
          "Mouse Communications",
          "PS/2 Mouse Project",
          "Keyboard",
          "PS/2 Keyboard Project"
        ],
        "UART": [
          "UART Introduction",
          "UART Board Compatibility",
          "UART ASCII",
          "UART Protocol",
          "UART Transmission Example"
        ],
        "UART Transmitter": [
          "UART Transmitter Design",
          "Transmitter State Machine Diagram",
          "UART Creating UART Transmitter Vivado",
          "UART Transmitter Simulation and Verification"
        ],
        "UART Receiver": [
          "UART Receiver State Machine Design",
          "UART Creating UART Receiver Vivado",
          "UART Receiver Simulation and Verification"
        ],
        "UART Controller": [
          "UART Controller State Machine Design",
          "UART Creating UART Controller Vivado",
          "UART Controller Simulation and Verification"
        ]
      },
      "requirements": [
        "Basic knowledge of digital electronics such as logic gates"
      ],
      "description": "Learn the Essentials of VHDL and FPGA Development Hands on is a course that is designed to teach students about VHDL and FPGA's through hands on labs.  Prior to working through the projects you will go through the various VHDL design structure sections that will explain the various concepts and terms needed to implement the projects in VHDL. The projects in this course:\n\n\nPulse Width Modulation\nThis section of projects covers various uses for PWM, including buzzers and servo motors.\nInfrared Communication\nA project that is designed to teach sudents how they can use an FPGA to interpret commands or codes that are sent via infrared signals, such as a tv remote.\nPS/2 Communication\nThis project implements a PS/2 interface to communicate with a mouse and keyboard.\nUART Controller\nIn this section students will design and build a UART transmitter, receiver, and controller that will be able to receive commands via the on board UART terminal on the development board.\nLED Controller\nThis section covers ways to control various types of LEDs including Neo Pixels and RGB LEDs.\nAll of the required background and knowledge to complete each project will be explained prior to completing the projects above. There are demonstration videos and walkthroughs for each project so that you can have a deep understanding of how the project works. Walkthroughs of the completed projects are also included to further your understanding of how these designs are implemented.",
      "target_audience": [
        "Anyone interested in learning how to create VHDL designs"
      ]
    },
    {
      "title": "Learn Mobile Robotics with WeBots",
      "url": "https://www.udemy.com/course/learn-mobile-robotics-with-webots/",
      "bio": "Learn Mobile Robotics with WeBots",
      "objectives": [
        "To understand the building blocks of Mobile Robots",
        "To understand the various applications of robots.",
        "To study locomotion and geometric significance in Mobile Robots",
        "To develop virtual simulation of robot performance in an environment",
        "To understand the principles of sensors and their applications in robots"
      ],
      "course_content": {},
      "requirements": [
        "Basic Understanding of Programming",
        "Interest in the fields of Robotics"
      ],
      "description": "Robotics is a multidisciplinary field of engineering and science that involves the design, construction, operation, and use of robots. Robots are programmable machines that can perform tasks autonomously or semi-autonomously, often in environments that may be hazardous to humans. Robotics draws on expertise from various areas such as mechanical engineering, electrical engineering, computer science, and artificial intelligence. If you ever wondered how to start your journey into robotics, then this is the correct course for you. This course is all about the fundamental concepts of building robots. Right from the characteristics of a robot to Sensors used in robots, this course is a power packed Kickstarter into robotics. In this course, we will be using Webots simulation software to develop various virtual models of a robot. This is an opensource software which can be used in any platform and widely used for cross interface with other devices. At this point, you would be wondering what is the purpose of learning simulation using webots? This is a very important topic. This helps people understand how different aspects of a robot work together and achieve what robots do today. We also see where improvement can be carried out. This is all done with lesser cost and time compared with working on a prototype. In this course, we will cover the basics of the different aspects of service robotics and work with Webots.",
      "target_audience": [
        "Anyone interested in the field of Robotics",
        "Anyone interested in Mobile Robotics"
      ]
    },
    {
      "title": "Awaken Your Arduino Skills: Craft a Custom Alarm Clock!",
      "url": "https://www.udemy.com/course/arduino-alarm-clock-using-a-real-time-clock-and-lcd-screen/",
      "bio": "Master the Art of Time with Arduino: Design, Code, and Illuminate Your Mornings!",
      "objectives": [
        "Make your own Arduino Alarm Clock",
        "Interface Real Time Clock Module with Arduino",
        "Learn Working Principle of Real Time Clock DS3231",
        "Interface LCD with Arduino"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Arduino",
        "A Will to apply, not just watch"
      ],
      "description": "The Dawn of New Learning!\nEver gazed at your alarm clock and wondered about the tech behind it? Dive into the world of Arduino and illuminate your mornings by designing a custom alarm clock using a Real-Time Clock and an LCD screen. Whether you're new to the Arduino realm or a seasoned tinkerer, this course will guide you through every beep and tick!\nYour Blueprint to Success:\nMaster the Microcontroller: Uncover the intricacies of the Arduino and how it interfaces with other components.\nTime in Your Hands: Learn how to set, reset, and manage alarms with precision using the RTC module.\nVisual Delight: Seamlessly integrate an LCD screen to display time, alarms, and other essential data.\nCode Like a Pro: Dive deep into the Arduino IDE and craft codes that breathe life into your designs.\nWhy This Course?\nInteractive Learning: From soldering components to writing intricate codes, this is hands-on learning at its best.\nExpert Guidance: With the seasoned expertise of Ashraf Said AlMadhoun, every doubt is cleared, every concept clarified.\nFor Everyone: Catering to all, whether you're a novice curious about electronics or an expert looking to refresh your knowledge.\nWhat's Inside?\nComprehensive video lessons that are easy on the eye and brain.\nEngaging practical activities that solidify learning.\nA plethora of downloadable resources.\nRobust support, ensuring every query is addressed.\nTestimonials:\n“This course was a revelation! I never thought I could design my alarm clock. Kudos to the team for such a detailed guide.” - Anna M.\n“From the components to the code, everything was explained so well. Now, I wake up to an alarm clock I designed!” - Rajeev S.\nInvestment & Assurance:\nYour investment in this course comes with a promise. Not satisfied? We offer a hassle-free money-back guarantee. Plus, you get lifetime access to course updates and our exclusive student community.\nThe Time is Now!\nWith limited seats and a world of knowledge to gain, delay might mean missing out. Enroll today, and embark on a journey where every second counts!\nDescription should have minimum 200 words.\nBasic info:\nCourse locale: English (US)\nCourse instructional level: All Levels\nCourse category: IT & Software\nCourse subcategory: Hardware\nWhat is primarily taught in your course?\nTopic: Arduino\n\n\nAbout the Instructor:\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading entity in the Microcontroller industry with over 13 Years of Experience in teaching and practical projects. We provide in-depth, step-by-step blueprints on taming complex topics in easy and digestible bite-sized videos.\nHaving been in the Programming and Microcontroller business since 2007, we've catered to students' and educators' needs, teaching over 250k-THOUSAND students and counting through our 100+ courses on Udemy.\nAshraf Said AlMadhoun is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He is the Chief Educational Engineer at Educational Engineering Team, a company founded to explore new trends and technologies and to educate the world.\nOur online courses have helped over 250,000 people globally to excel and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Arduino Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning How to make Arduino Alarm Clock",
        "Anyone Interested in Microcontrollers"
      ]
    },
    {
      "title": "LabVIEW 15 Days Bootcamp: Learn LabVIEW Practical Approach",
      "url": "https://www.udemy.com/course/labview-bootcamp-learn-labview-with-practical-examples/",
      "bio": "A Comprehensive 15-Day Guide to Master LabVIEW with Practical Examples and Real-World Projects",
      "objectives": [
        "Understand the fundamentals of LabVIEW",
        "Program in LabVIEW like a champ",
        "Use tools to build control system apps",
        "Learn LabVIEW and establish a strong understanding of the concept behind Control Systems.",
        "Create fully functional Apps",
        "Design Arduino Circuits",
        "Learn Arduino Programming & Interfacing",
        "Program Arduino using C Language",
        "Design LabVIEW Interface",
        "Program Using LabVIEW",
        "Connect LabVIEW with Arduino",
        "Learn serial communication basics in LabVIEW",
        "Learn serial communication basics in Arduino"
      ],
      "course_content": {
        "Day 1 - LabVIEW Bootcamp Introduction": [
          "LabVIEW Bootcamp Introduction",
          "Gaining Practical Skills in LabVIEW"
        ],
        "Day 2 - Introduction & Getting Started": [
          "LabVIEW Step by Step Introduction",
          "Very Important Note: Review Process"
        ],
        "Days 3-5 - LabVIEW Step By Step": [
          "What is LabVIEW",
          "Compare LabVIEW with traditional Tools",
          "LabVIEW Fundamentals Flow of data",
          "LabVIEW Environment",
          "LabVIEW Environment - Continue",
          "Common Data Types",
          "LabVIEW Key Features",
          "Run LabVIEW",
          "Express VIs VIs and Functions",
          "Tools Palette and Status Toolbar",
          "First Example Creating VI",
          "Help Options",
          "Converting C to F",
          "Exercise 1 Convert C to F",
          "Debugging Techniques",
          "Sub VI",
          "For Loop and While Loop edited new",
          "For Loop and While Loop",
          "Charts",
          "Arrays"
        ],
        "Days 6-9 - Arduino Meets LabVIEW": [
          "Introduction",
          "What you will learn In this Course",
          "What is Arduino",
          "Why Interfacing of Arduino is Necessary with LabVIEW",
          "Hardware and Software Requirements",
          "How to Download LabVIEW",
          "How to download and Install LINX Library for LabVIEW Arduino",
          "More about LINX Library",
          "How to Download and Install VISA",
          "More about VISA Library",
          "Quick LabVIEW Intro",
          "Creating the Block Diagram for LM35 Temperature",
          "Creating the User Interface GUI using Front Panel",
          "Finishing up in LabVIEW",
          "Very Important thing to do in the Block Diagram to Make it Work",
          "Arduino Code",
          "Writing Arduino Code",
          "Circuit Diagram",
          "Notes on the Practical Implementation",
          "Final Practical"
        ],
        "Days 10-12 - Interfacing LabVIEW With Arduino via LINX": [
          "Introduction",
          "Software and Hardware Requirements",
          "Creating the Block diagram and Visual Interface using LINX",
          "Configuring the LINX Firmware Wizard",
          "Practical Control LED with LabVIEW Interface"
        ],
        "Days 13 - 15: Practice Test": [
          "Testing Your Skills"
        ],
        "Who we are?": [
          "Who we are?",
          "Applying LabVIEW Skills in Practical Projects"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer or laptop - With Window 7 or later, > 2Gb of RAM (4Gb Reccomended) , 1.5Ghz Processor or higher (Multicore Core 2Ghz processor Recommended).",
        "LabVIEW Software in trial version or you can purchase a license",
        "Internet connection to download LabVIEW",
        "Basic Knowledge of Digital Electronics"
      ],
      "description": "Learn the fundamental concepts, tools, and functions needed to build fully functional control applications with LabVIEW through practical, hands-on examples. This intensive 15-day bootcamp is designed to take you from a beginner to a proficient LabVIEW user, with a focus on real-world Arduino projects.\nWhat You Will Learn:\nLabVIEW Step By Step: A-Z Guide to mastering LabVIEW, starting from the basics and advancing to complex applications.\nArduino Meets LabVIEW: Virtualize your Arduino on a PC screen using LabVIEW and practice with microcontroller projects.\nInterfacing LabVIEW With Arduino via LINX: Enhance your control capabilities with the LINX library.\nWhy You Should Take This Course:\nThis course offers an A-Z guide, starting with basic concepts and advancing to complex applications, ensuring you gain a thorough understanding of LabVIEW.\nThe course is descriptive with code snippets and diagrams that help you start using LabVIEW efficiently.\nLearn to automate repetitive tasks, code faster, and produce better results.\nGain mastery over the programming process with LabVIEW's user-friendly interface.\nStudent Testimonials:\nChris Hayden: \"Informative. Good graphical explanations help to show examples.\"\nYves Lebrun: \"Thanks a lot for sharing this information with us. I learned a lot from this course. Thank you so much.\"\nAbhishek Dhar: \"Gets you started with LabVIEW. Good introductory course.\"\nMarie-Neige Guerin: \"Perfect for Beginners. Exactly what I need, how it works, what it does, what are the tools, etc.\"\nBrady Alan Readling, Jr.: \"Great foundation for LabVIEW. By the end, I was able to grasp some pretty complex concepts such as loops & graphs.\"\nWoo-Young Yoon: \"Wonderful teaching.\"\nCourse Highlights:\nLabVIEW Download and Installation: Step-by-step guidance on installing LabVIEW.\nBasic Features: An overview of LabVIEW's essential features and functionalities.\nExamples and Exercises: Practical examples and exercises to solidify your understanding.\nAdvanced Features and Techniques: Explore advanced features and techniques in LabVIEW.\nInterfacing with Arduino: Learn how to interface Arduino with LabVIEW using C Language and the LabVIEW environment.\nArduino and LabVIEW via LINX Library: Master the LINX library to enhance your control applications.\nA Powerful Skill at Your Fingertips: Learning LabVIEW equips you with a powerful tool that is easy to learn, well-documented, and fundamental to modern control applications. Jobs related to LabVIEW application development are abundant, and mastering LabVIEW provides a solid foundation to easily pick up other control software and hardware.\nWhy Learn Arduino with LabVIEW?\nAs an engineering or science student, you'll encounter projects requiring physical interaction with computing systems and display operations on a PC screen.\nArduino is a cost-effective tool for creating projects that interact with physical elements using your logic.\nLabVIEW allows you to display various process parameters, such as motor speed, LED feedback, and temperature signals, and create unlimited buttons, switches, and message boxes to control Arduino.\nBy the end of this course, you'll be able to create innovative projects by simply thinking, wiring, and coding.\nComplete with Working Files: You'll receive working files, datasets, and code samples. Upon completing the course, you'll receive a verifiable certificate of completion. Additionally, we offer a full Udemy 30-Day Money Back Guarantee if you're not satisfied, allowing you to learn without risk.\nSee You Inside the Course: Join us and build a strong foundation in LabVIEW fundamentals, starting your journey towards excellence in the control industry.",
      "target_audience": [
        "Anyone with a curiosity for building control applications",
        "People with no experience in Control or Programming",
        "People with an intermediate knowledge of Control Systems",
        "Engineering Students - Electronics, Electrical & Computer Science",
        "Electronic Geeks, Hobbiest & Art Students",
        "Arduino Geeks"
      ]
    },
    {
      "title": "Arduino UNO & Basic Electronics: Beginner Course",
      "url": "https://www.udemy.com/course/arduino-uno-and-basic-electronics-complete-beginner-course/",
      "bio": "Arduino UNO Step by Step | Electronics from scratch | 35+ interesting activities | 8 exciting hands-on projects.",
      "objectives": [
        "Learn about the concepts of electricity.",
        "Understand what Arduino UNO is.",
        "Learn about Arduino UNO, electronics, Embedded C programming language from basics.",
        "Build 8 physical robotics projects. (Detailed explanation, circuits and list of components are included).",
        "Learn general concepts of programming.",
        "Understand Embedded C programming language step by step from basics.",
        "Learn about different sensors like ultrasonic, temperature, moisture, IR sensor (many more)from basics.",
        "More than 40 activities included using various component through out the course for better practice and better understanding of different electronic components.",
        "Learn the correct method to trim and join 2 wires, join wires with components etc.",
        "Learn about how to perform soldering step by step (Basics).",
        "Series and parallel connections.",
        "Learn to measure resistance of a resistor by 2 different methods.",
        "Learn about AC DC properties.",
        "L:earn to measure current,. voltage from a circuit/ component using a multimeter.",
        "Learn to work with libraries in Arduino.",
        "Learn about more than 20 different electronics components."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction to Arduino": [
          "All About Arduino",
          "Arduino UNO rev3!",
          "All about Block coding",
          "Practice Quiz"
        ],
        "LED's": [
          "What is a LED?",
          "Activity on LED",
          "What is a buzzer?",
          "What is a RGB LED?",
          "Section - 3: Quiz - 1"
        ],
        "Resistors": [
          "What is a resistor?",
          "Resistance calculation by ohms law.",
          "Section- 4: Quiz - 1",
          "Ohms law Practice Assignment.",
          "Resistance calculation by method - 2",
          "Section- 4: Quiz - 2"
        ],
        "Capacitor": [
          "what is a capacitor?"
        ],
        "Diode": [
          "What is a diode?"
        ],
        "Cells And Batteries": [
          "what are cells and batteries?",
          "Battery Activity - 1",
          "Battery Activity - 2",
          "Battery Activity - 3",
          "Battery Activity - 4",
          "Section - 7: Quiz -1"
        ],
        "Motors": [
          "What are motors?",
          "Motor type - 1",
          "Motor type - 2",
          "Motor type - 3",
          "Motor type - 4",
          "Motor Activity - 1",
          "Motor Activity - 2",
          "Motor Activity - 3",
          "Motor Activity - 4",
          "Section - 8: Quiz - 1"
        ],
        "Revision Activities Part - 1": [
          "Revision Activities Part - 1",
          "Revision Test - 1",
          "Practice assignment"
        ],
        "Revision Activities Part - 2": [
          "Revision Activity - 2",
          "Revision Test - 2"
        ]
      },
      "requirements": [
        "A laptop or a Desktop will be required.",
        "No prior knowledge on Arduino is required.",
        "No prior knowledge on coding is required.",
        "No prior knowledge on electronics required.",
        "In this course majority of the portion is covered in the simulation software. But if you are interested in making the projects or performing the activities physically then Arduino UNO and required components can be purchased (List of components for each project is included in the course itself).",
        "Last but not the least, a lot of excitement and tinkering mind to play with electronics is required :) :) !!"
      ],
      "description": "Hello there!\nWelcome to \"Arduino UNO & Basic Electronics: Beginner Course\".\nThis course covers both Arduino UNO and basic electronics topics. It offers a blend of theoretical knowledge and hands-on experience with plenty of activities for practice. You'll dive into 8 real-life projects, some based on practical examples, to apply what you learn. From sensors to electronic components, you'll explore everything from scratch, step by step. Activities like soldering and wire trimming are included to enhance your skills. By the end, you'll have a solid understanding of Arduino UNO and basic electronics, ready to tackle projects with confidence.\n\n\nWhat will you learn ?\nLearn about Arduino UNO from scratch based on block coding.\nExperience real life look a like electronics components in simulation software first and later on use them in real life as well.\nLearn about basics of coding by using practical and user friendly method called block coding. No prior experience in coding is required for learning block coding.\nLearn in-depth things about different electronic components like their usages/ functionalities, specifications, capacities, connections, working principles, etc.\nHave hands on learning tutorials even for trimming of wires, Soldering and see build the 8 projects  and much more.\nLearn about embedded C language from scratch to intermediate with activities and examples. The text based programming language, Embedded  C (Nothing but, extension of C language) is being taught in a different way in this course by comparing it with the block based coding language which makes it easier for the learner to understand the working of the text based code and have a better understanding on the code.\nLearn to make a circuit in simulation and real life by reading the electronic circuit diagrams.\n\n\nLearning style of this course:\nFirst, theory is being taught and after that supporting examples or practice activities are conducted for proper understanding of that particular topic.\nKnow about the \"How, when and why\" behind the electronic components.\nStep by step process from scratch.\nAll the sections are supported by quiz's for knowing evaluating the learners knowledge.\nQuick response by the course creator for doubts related to course topics asked by the learners so that learning does not stop!\nSome Do It Yourself (DIY) or self making project ideas based on basic electronics and Arduino UNO which are fun to make and play based on real life usages!\n\n\nThis course is designed from basics and organized in a user friendly structure. This course is for everyone who are new in this field and wants to learn something new and exciting about Arduino UNO and Basic electronics, and for those students as well who are experienced but they want to practice or brush-up their knowledge. This course will not make you job ready or a professional in this field but will surely give you a stepping stone to move ahead in this field of electronics and robotics.\nBy the end of the course you will be having enough skill sets which will help you in selecting the right electronics components for your projects,  it will also help you to handle the electronic components in the correct way and let you code and make projects on your own.\nLooking forward to see you soon! Join me in the course - \"Arduino UNO and Basic electronics - Complete course\" to develop and brush up your skill sets..\nHappy Learning :) !!",
      "target_audience": [
        "This course is for all the students from any field or grade who wants to learn and explore new things or clear there concepts about Arduino UNO, Electronics and want to learn how to create innovative things on their own using Arduino UNO and learn to deal with electronic components.",
        "Anyone who wants to create some cool school/college project and wants to learn something new and exciting.",
        "Anyone who wants to initiate there career in Electronics, Robotics, Coding.",
        "This course is for everyone who likes to tinker with Arduino, Robots, Electronics and love to innovate.",
        "This course is for all the individuals who like to think out of the box!",
        "Anyone who wants to find out the amazing side of Arduino UNO and basic electronics !!"
      ]
    },
    {
      "title": "Programming STM32 with MATLAB without single line of code",
      "url": "https://www.udemy.com/course/programming-stm32-with-matlab-without-single-line-of-code/",
      "bio": "Program advance STM32 microcontroller without single line of code and without going through architecture of controller.",
      "objectives": [
        "Programming of STM32 Microcontroller"
      ],
      "course_content": {
        "Introduction Hardware and Software Requirements": [
          "Introduction",
          "Hardware and Software Requirements",
          "Installing MATLAB",
          "Installing ST link utility",
          "Installing Required blockset for STM32 programming"
        ],
        "Introduction to discovery Board": [
          "STM32 Discovery board"
        ],
        "Introduction and working with GPIO (Digital I/O)": [
          "Introduction to GPIO (Digital Input and Output)",
          "Practicing with GPIO",
          "Generating squarewave of 50% duty cycle on digital out pin of STM32",
          "Latching the status of digital input pin to be operated as toggle switch"
        ],
        "Programming of UART (Universal asynchronous reception and transmission)": [
          "Programming of UART (Serial Communication)"
        ],
        "Programming of ADC (Analog to Digital Converter)": [
          "Programming of on chip ADC of STM32"
        ],
        "Programming of DAC (Digital to analog Converter)": [
          "Programming of on chip digital to analog converter"
        ],
        "Programming of PWM(Pulse width Modulation) using basic and advance timer": [
          "Introduction to PWM",
          "PWM by using timer"
        ]
      },
      "requirements": [
        "Knowledge of MATLAB simulink is necessary"
      ],
      "description": "Programming of advance STM32 microcontroller is very difficult and time consuming if it is done by traditional embedded c programming. It also increase prototype development time.\nWith this course you will learn programming of STM32 by MATLAB. one can take advantage of of MATLAB toolboxes like PID controller, Filters, various transformations, Image processing tool boxes, Communication protocol toolboxes, drone design and much more.\nThis will reduce programming time for various intensive algorithm implementation of advance controller like STM32.\nThe STM32 microcontroller we are going to learn in this STM32F407VGT6. This microcontroller can handle any complicated algorithms  like motor control, image processing, IoT, Artificial intelligence etc. This controlller is way batter than what arduino can do.\nThe MATLAB toolbox that we are going to study generates very efficient code for a particular target microcontroller so further optimization is not required and this supports almost all cortex m4 and cortex m0 series from ST microelectronics.\nThis course requires very little experience on using and programming microcontroller. With this course you can directly start programming section without worrying about its complex architecture. This course covers all the peripheral of STM32 microcontroller strating from GPIO (Digital Input and Output) to advance motor control  PWM (Pulse width Modulation) implementation.\nSo, join this course and become embedded application developer in no time.",
      "target_audience": [
        "Embedded programmer"
      ]
    },
    {
      "title": "A beginner's guide to the concepts of RTOS",
      "url": "https://www.udemy.com/course/mastering-rtos/",
      "bio": "Understand RTOS kernel objects and schedulers in great detail to start working with any RTOS based embedded application.",
      "objectives": [
        "Real Time Operating System (RTOS)",
        "Scheduling",
        "Context Switching",
        "Resource Sharing",
        "Mutex",
        "Semaphore",
        "Event Flag Group",
        "Timers",
        "Message Queue",
        "Critical Session",
        "Task",
        "Stack Overflow",
        "Configuring RTOS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Operating System Basics and Scheduling": [
          "Operating System Basics",
          "Context Switching",
          "Scheduling"
        ],
        "Resource Sharing across Tasks": [
          "Resource Sharing",
          "Mutex"
        ],
        "Priority Inversion and Priority Inheritence": [
          "Priority Inversion and the solution"
        ],
        "Kernel Variables": [
          "Different types of Kernel Variables"
        ],
        "Task Creation and Starting Scheduler": [
          "Task Creation",
          "Starting the Scheduler",
          "Task Control Block"
        ],
        "Mutex": [
          "Mutex",
          "Recursive Mutex and Deadlock"
        ],
        "Semaphores": [
          "Couting and Binary Semaphores",
          "Mutex and Semaphore Comparison",
          "Semaphore APIs"
        ],
        "Timers": [
          "Oneshot and Periodic Timers",
          "Timer APIs"
        ],
        "Event Flag Groups": [
          "Event Flag Groups",
          "Event Flag Group APIs"
        ]
      },
      "requirements": [
        "Basic programming"
      ],
      "description": "This course is designed to provide an in-depth understanding of the RTOS concepts. It's a tour through the RTOS objects such as task, mutex, semaphores, timers, event flag groups, message queues, and the RTOS preemptive scheduler. Additionally, you will also learn some useful RTOS features and will get a basic overview of configuring some important RTOS parameters.",
      "target_audience": [
        "Embedded Systems Engineers",
        "Firmware Engineers",
        "IOT developers",
        "Computer Engineers",
        "Computer Science Students",
        "Electronics Students"
      ]
    },
    {
      "title": "Home Automation with ESP32 and Google Home | 2025",
      "url": "https://www.udemy.com/course/home-automation-with-esp32-and-google-home/",
      "bio": "Master the art of controlling your home appliances from anywhere with a comprehensive step-by-step learning journey.",
      "objectives": [
        "You will gain a comprehensive understanding of the ESP32 board and its role as the central device for the project development.",
        "You will then understand the functionality and utilization of different GPIO pins available on the ESP32.",
        "You will learn to test each hardware module thoroughly before deploying it in the project.",
        "You will install the Arduino IDE and test the functionality of ESP32 board manager library for the ESP32 using basic program.",
        "You will explore the working principle and functionality of relays, also study the circuit diagram and implement the code to control the corresponding device.",
        "You will address and resolve the inverted relay problem through various approaches.",
        "You will integrate physical switches into our circuit and control the devices accordingly.",
        "You will explore IoT for remote device control, MQTT protocol and its underlying mechanisms.",
        "During the project deployment, you will identify and troubleshoot common errors.",
        "You will test the main project using the mobile app as well as physical switches to control the connected appliances."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Home Automation",
          "Getting Started with ESP32",
          "Mastering GPIO Pins"
        ],
        "Setup and Configuration": [
          "Hardware Requirements for the Complete Project",
          "Document - Hardware Requirements List",
          "Connecting and Verifying the USB to UART Chip in ESP32",
          "Arduino Installation",
          "Setting Up ESP32 in Arduino IDE",
          "Testing the ESP32 Board (PART 1)",
          "Testing the ESP32 Board (PART 2)",
          "CODE - Testing the ESP32 Board"
        ],
        "Relay Testing": [
          "Introduction to Relay",
          "Understanding the Circuit Diagram to Test One Input of 4 Channel Relay",
          "Circuit diagram - Testing One Input of 4 Channel Relay",
          "Understanding the Code to Test One Input of 4 Channel Relay",
          "CODE - Testing One Input of 4 Channel Relay",
          "OUTPUT - Testing One Input of 4 Channel Relay"
        ],
        "Fixing the Relay": [
          "Resolving the Inverted Operation of the Relay",
          "CODE - Resolving the Inverted Operation of the Relay using the code modification",
          "Circuit Diagram - Resolving the Inverted Operation of the Relay using NC"
        ],
        "Reading the input of Mechanical Switch": [
          "Understanding the Circuit Diagram to Control a Bulb with a Physical Switch",
          "Circuit diagram - Controlling a Bulb with a Physical Switch",
          "Understanding the Code to Control a Bulb with a Physical Switch",
          "CODE - Controlling a Bulb with a Physical Switch",
          "Output - Controlling a Bulb with a Physical Switch",
          "Understanding the Circuit Diagram to Control 4 Bulbs with 4 Physical Switches",
          "Circuit diagram to Control 4 Bulbs with 4 Physical Switches",
          "Understanding the Code to Control 4 Bulbs with 4 Physical Switches (PART 1)",
          "Understanding the Code to Control 4 Bulbs with 4 Physical Switches (PART 2)",
          "CODE - Controlling 4 Bulbs with 4 Physical Switches",
          "C++ Fundamentals"
        ],
        "Getting to know about ESP Rainmaker and IOT Protocols": [
          "An Introduction to Internet of Things",
          "Exploring ESP Rainmaker",
          "Understanding MQTT Protocol"
        ],
        "Understanding the Circuit Diagram and Code of the Main Project": [
          "Understanding the Circuit Diagram for Controlling 4 Home Appliances",
          "Circuit Diagram - Controlling 4 Home Appliances with ESP Rainmaker",
          "Powering the Whole Circuit using One Power Supply",
          "Circuit Diagram - Powering the Whole Circuit using One Power Supply",
          "Understanding the Code to Control 4 Home Appliances with ESP Rainmaker (PART 1)",
          "Understanding the Code to Control 4 Home Appliances with ESP Rainmaker (PART 2)",
          "Understanding the Code to Control 4 Home Appliances with ESP Rainmaker (PART 3)",
          "Understanding the Code to Control 4 Home Appliances with ESP Rainmaker (PART 4)",
          "Understanding the Code to Control 4 Home Appliances with ESP Rainmaker (PART 5)",
          "Understanding the Code to Control 4 Home Appliances with ESP Rainmaker (PART 6)",
          "CODE - Controlling 4 Home Appliances with ESP Rainmaker"
        ],
        "Setting Up the Environment for the Execution of the Main Project": [
          "Flashing ESP32",
          "Uploading Final Code to ESP32",
          "ESP RainMaker Setup and Device Provisioning",
          "Setting Up and Configuring Google Home",
          "Testing the Live OUTPUT of the Project using Mobile App",
          "Testing the Live OUTPUT of the Project using External Adapter Only",
          "Testing the Live OUTPUT of the Project Without WIFI",
          "Fundamentals of ESP32, Relay and IoT",
          "Project Summary"
        ],
        "Quizzes, Coding Exercise and Assignment": [
          "Write a program to print all the even numbers between 1 and 20.",
          "Write a program to calculate the sum and average of elements in an array.",
          "Write a program to concatenate two strings.",
          "Write a program to calculate permutations and combinations for given values of n and r.",
          "Write a program to calculate the sum of the series 1 + 1/2 + 1/3 + 1/4 + ...",
          "Implement C++ class to manage student information like name, roll, gender, class and grades.",
          "Relay Program",
          "C++ Program",
          "Temperature Reading"
        ]
      },
      "requirements": [
        "Basic programming knowledge is recommended for this course to ensure a smooth learning experience.",
        "Ensure that you have a laptop or desktop equipped with reliable internet connectivity."
      ],
      "description": "Welcome to a brand new online course where you can learn to create a home automation system that allows you to remotely control your household appliances using a mobile application. With just a simple tap or a voice command on your phone, you can turn your home appliances ON or OFF from anywhere. Let me show you the demo of the project.\nI have always been a firm believer in learning by doing, and in this course, you will learn what you need to know by hands-on experience. You don’t need any special knowledge except basic computer skills to get started with this course. Every one of you comes from a different background and hence the course is crafted from basic to advanced level with minute detail in every lecture.\nHere are two main reasons, why you should take this course. The course will help you to level up your career as an embedded systems developer. These developers work on projects that involve a wide range of technologies, including hardware and software. These projects are often complex and challenging, providing developers with the opportunity to work on cutting-edge technology and develop innovative solutions. Embedded systems are used in critical applications such as medical devices, transportation systems, and industrial control systems. As an embedded systems developer, you have the opportunity to work on diverse projects and gain experience in different industries.\nAs far as the language is concerned, we have decided to go ahead with C++. It is the most popular programming language in the field of embedded systems. This is because the language sits in between higher-level software and hardware, allowing you to access and control hardware directly without sacrificing the benefits of a high-level language. It’s widely used by major companies like Google, Microsoft, and Oracle. In fact, Google’s own programming language called \"Go\" is strongly influenced by C++.\nTo make the learning curve easier, The course has been divided into 8 sections. Then, let us see what we are going to learn in each section.\nIn the first section, we'll explore the significance of Home Automation and how it enhances convenience and security in our daily lives. We will then shift our focus to the remarkable ESP32 board, which plays an essential role in our project development.\nThereafter, we will understand about the General Purpose Input/Output pins of the ESP32. These pins serve as the vital interface between the ESP32 board and the external realm, enabling seamless connectivity with an array of sensors and actuators. With a profound grasp of GPIO functionality, a world of endless project possibilities awaits you.\nIn the second section, our focus will shift towards understanding necessary hardware requirements for building the project. We will begin by powering up the ESP32 board and identifying the specific USB to UART chip integrated into the board.\nMoving forward, we will proceed with installing the Integrated Development Environment (IDE) and configuring the board manager library which is specifically designed for ESP32. This step is crucial as it enables us to create a suitable software environment for programming and interacting with the ESP32 board.\nOnce the IDE is successfully set up, we will proceed to install the necessary drivers for the USB to UART chip, ensuring seamless communication between the board and our computer. With everything in place, we will test the functionality of the board using a basic program. This essential test will help us to determine if our recently acquired ESP32 board is functioning as intended.\nIn the third section, our focus will be on exploring the fascinating world of relays and gaining an in-depth understanding of their working principles. Once we have acquired the fundamental concepts of relays, we will move on to studying the circuit diagram for controlling one home appliance using a relay. We will then implement the circuit diagram and write the necessary code to program the relay to establish control over the connected electrical appliances. This hands-on approach will enable us to gain practical experience in implementing the relay circuitry and empower us to harness their potential effectively. By the end of this section, you will be well-equipped to harness the capabilities of relays in real-world applications.\nIn the fourth section, our focus will be on addressing the issue of inverted relay operation and exploring various solutions to rectify this problem. We will delve into the realm of programming and examine the logic implementation that can effectively resolve the problem. By leveraging our programming skills, we will develop strategies to ensure the relay operates in the desired manner.\nAdditionally, we will also explore alternative approaches to mitigate the inverted relay operation by modifying the circuit wiring. Through careful examination and experimentation, we will discover alternative wiring configurations that can rectify the issues and align the relay behavior with our intended functionality.\nBy examining both programming-based and wiring-based solution, you will gain a comprehensive understanding of the options available to you for resolving inverted relay operation. This knowledge will empower you to choose the most suitable approach based on your specific requirements and constraints.\nIn the fifth section, we will introduce an additional functionality to our existing circuit. We will incorporate a physical switch and utilize its input to control the behavior of the relay. By integrating this switch, we can enhance the interactivity and flexibility of our circuit.\nInitially, we will focus on understanding how to effectively read the input from a single switch and develop the necessary code logic to control its operation. Once we have mastered this process, we will expand our coding skills to incorporate the remaining three relays into our circuit. This expansion will enable us to control multiple appliances simultaneously based on the input from their respective switches.\nThrough this exercise, we will not only refine our coding skills, particularly in the areas of decision-making and logical thinking, but also gain insights into establishing common connection throughout the circuit.\nIn the sixth section, we will delve into the world of Internet of Things. We will familiarize ourselves with the concept of IoT and its significance in connecting and controlling devices over the internet.\nThereafter, we will explore the cloud platform that serves as the backbone of our project, allowing us to effectively harness the power of IoT.\nFurthermore, we will also get to know about the underlying MQTT protocol that facilitates the communication and data exchange between our devices and the cloud platform.\nIn the seventh section, we will embark on the development of our main project. We will begin by studying the circuit diagram and comprehending its components and connections. With this understanding, we will proceed to design and assemble the circuit accordingly, ensuring its proper functioning.\nNext, we will then go through the source code that enables us to control all the appliances remotely. We will gain valuable insights into how data is sent to the server and retrieved based on user choices. We will also analyze how the data is synchronized between the cloud platform and the physical input by the user.\nAdditionally, we will also explore the concept of powering the entire circuit using a single external power adapter. This approach simplifies the setup and enhances convenience, providing a reliable and efficient power source for our project.\nIn the eighth section, we will showcase the practical output of our main project. We will utilize both the mobile app and manual switches to control the appliances in real-time, providing a hands-on demonstration of their functionality.\nAdditionally, we will explore how the devices can be seamlessly integrated and controlled through Google Home, allowing for effortless control through voice commands. This integration will enhance the overall user experience, providing added convenience and simplicity in managing the connected appliances.\nLastly, we will showcase an additional feature of our project that ensures uninterrupted control of the appliances even in situations where the user's Wi-Fi connection is unavailable. In such cases, users will have the option to rely on manual switches to effortlessly operate and manage all the connected appliances. This dual-mode functionality provides a reliable backup solution, ensuring convenience and accessibility at all times.\nEach video in the course will teach you new concepts and techniques which you may apply to any of your projects immediately. This course assumes just a basic knowledge of programming, and you can leave the rest to us. So if you are somebody who has never built an embedded systems project before, you need not to worry, I will be with you every step of the way.\nDon’t let technical errors hold you back from achieving your goals. If you ever need help, simply post your question in the question and answer section and our dedicated support team will get back to you within 24 hours. They are available to assist you 6 days a week, from Monday to Saturday.\nWe will also share the complete source code with you, so that you can easily replicate the project and deploy it immediately.\nAll lectures are accompanied by English subtitles, ensuring clear and comprehensive understanding.\nAlso if you don’t like the course, don’t worry at all, you are always protected by 30 days, no questions asked, money-back guarantee.\nAlright, so at the end of the day, you have got nothing to lose, so join me in this incredible journey, into the world of embedded systems.\nTake control of your career and invest in your future. Don’t miss the opportunity to improve your skills. Enroll now and take the first step towards a better future.",
      "target_audience": [
        "This course has been specifically designed with beginners in mind, making it accessible to individuals with basic knowledge of computer science.",
        "Whether you are just starting out or have a foundational understanding of the subject, you can confidently enroll in this course.",
        "Our curriculum takes into consideration the needs of learners at various skill levels, providing clear explanations and step-by-step guidance to ensure a smooth learning experience for everyone.",
        "Don't hesitate to join, as this course is tailored to support your learning journey from the ground up."
      ]
    },
    {
      "title": "Mastering hardware protocols with ESP32 and Arduinos",
      "url": "https://www.udemy.com/course/mastering-hardware-protocols-with-esp32-and-arduinos/",
      "bio": "Analysis and use of UART, I2C, OneWire, SPI and non-standard protocols in the Arduino environment.",
      "objectives": [
        "What is I2C, UART, SPI and Onewire?",
        "Analysis and discussion of data sheets",
        "Understanding and using bit operations",
        "Analysis of external libraries for understanding control",
        "Evaluating sensors without external libraries",
        "Protocol Reverse Engineering",
        "Understand the different communication protocols such as UART, I2C, OneWire and SPI and explain how they work.",
        "To analyse the advantages and disadvantages of the different protocols and select the appropriate protocols for specific use cases.",
        "To successfully establish serial communication between Arduino and ESP microcontrollers and implement data transfers between them.",
        "To recognise and analyse non-standard protocols and integrate them into own Arduino and ESP projects to meet specific requirements."
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Prerequisites for this course",
          "Practice before theory",
          "Differentiation from Wifi, Bluetooth ESP NOW and Co.",
          "Open VSC PlatformIO program in Arduino IDE",
          "Sketches, part list and e-book",
          "Disclaimer"
        ],
        "Basics logic analyzer and bit operators": [
          "Intro",
          "Difference Oscilloscope vs. Logic Analyzer",
          "Logic Analyzer Characteristics",
          "Practical use cases at a glance",
          "Mask with AND",
          "Mask with OR",
          "Bitwise shift",
          "Practical Exercise Examples 1",
          "Practical Exercise Examples 2"
        ],
        "PulseView Basics": [
          "Start",
          "Why PulseView?",
          "Download",
          "Base sketc for all examples",
          "Configuration and connecting Logic Analyzer",
          "Samples and MHz setting",
          "Frequency and milliseconds",
          "Baud rate",
          "Produce and measure PWM signal",
          "Trigger on level with IR sensor"
        ],
        "UART": [
          "Intro",
          "Overview of serial communication with UART",
          "Theory of data transmission",
          "Hardware Serial Arduino Uno",
          "Software Serial Arduino Uno",
          "Display ASCII with decoder",
          "HEX to ASCII with Arduino UNO",
          "LSB and MSB",
          "Binary LSB and MSB with Arduino UNO",
          "Hardware Serial with ESP32",
          "What is a parity bit ?",
          "Example Parity Bit SERIAL_8E1 with ESP32",
          "UART communication between two Arduino UNOs",
          "Note the logic Level with ESP32 to Arduino UNO",
          "Finding or calculating the baud rate",
          "Analysing the IKEA air quality sensor Vindriktning",
          "Self-made analysis with ESP32 for PM2,5 sensor from IKEA",
          "Advantages and disadvantages of UART"
        ],
        "OneWire": [
          "Intro",
          "OneWire Protocol Basics",
          "DS18B20 Sketch and Wiring",
          "Info from the data sheet",
          "Data analysis with Logic Analyzer",
          "Change resolution to 9 bit",
          "Adding an external decoder",
          "Get Data only with OneWire Library"
        ],
        "Non-standard protocols- DHT11 (DHT22)": [
          "Intro",
          "Circuit and wiring",
          "Understanding the protocoll and signal analysis",
          "Using the DHT11 decoder",
          "Insight into the DHT library"
        ],
        "SPI": [
          "Intro",
          "Basics",
          "Sketch Arduino Uno to Uno",
          "Analysis with Logic Analyzer",
          "DHT22 values via SPI"
        ],
        "I2C": [
          "Intro",
          "I2C Introduction",
          "Protocol in detail",
          "Sketch and wiring BH1750",
          "Analysis BH1750",
          "Sketch BH1750 without external library",
          "Sketch and wiring DHT20",
          "Analysis DHT20",
          "Sketch DHT20 without external library",
          "Arduino Uno to Arduino Uno",
          "Overview of I2C addresses",
          "Create own Sketch for reading I2C addresses",
          "I2C Multiplexer"
        ],
        "Closing chapter": [
          "Conclusion",
          "Thank you and good by"
        ]
      },
      "requirements": [
        "Logic Analyzer for analysing the logs with PulseView (Windows, macOS & Linux)",
        "Arduino or ESP32",
        "First experience with programming Arduinos and ESPs. You should already know how to use the IDE.",
        "Various sensors for evaluating protocols such as DHT20, DHT11, BH1750. More details in the parts list",
        "Fun with the analysis of protocols"
      ],
      "description": "Welcome to the video course \"Analysis and use of UART, I2C, OneWire, SPI and non-standard protocols in the Arduino/ESP environment\"!\nIn this course we dive deep into the world of communication protocols and show you how to use them effectively with Arduino and ESP microcontrollers.\nThis course is ideal for Arduino and ESP enthusiasts who want to expand their understanding of communication protocols to create complex projects. Whether you are an experienced developer or a beginner, this course will provide you with valuable knowledge and practical applications.\nThis is not a theory course. We will jump straight into practical implementation and analyse and evaluate the protocols with a logic analyser.\nIn the course of the course, we will mainly deal with the most important communication protocols in the Arduino environment:\nUART\nI2C\nOneWire\nSPI\nWe will also look at non-standard protocols that are often used in special applications. You will learn how to identify, analyse and integrate these protocols into your Arduino and ESP projects.\nAfter the introductory chapter, we can are able to handle bit operators so that we can do our own evaluations and libraries at bit level.\nWe will evaluate a light sensor (BH1750), DHT20 and DHT11 as well as an Ikea air quality sensor ourselves, without any external libraries.\nIn this video course we will use practical examples and demonstrations to teach you how to use these protocols. You will learn how to set up serial communication between different microcontrollers, transfer data, read sensors. We will also cover common challenges and troubleshooting that can occur when using these protocols.\nBy the end of the course you will have a solid understanding of UART, I2C, OneWire, SPI and non-standard protocols. You will be able to use these protocols safely and effectively in your Arduino and ESP projects and significantly expand your skills as a developer.\nSign up for my video course now and dive into the fascinating world of hardware protocols with microcontrollers!",
      "target_audience": [
        "Arduino and ESP hobbyists",
        "Electronics and IoT enthusiasts",
        "Programmers and developers: if you already have basic programming skills and want to expand your skills in the field of microcontroller programming",
        "Anyone who enjoys developing with microcontrollers"
      ]
    },
    {
      "title": "Heating and Air Conditioning 101 for Beginners",
      "url": "https://www.udemy.com/course/heating-and-air-conditioning-101-for-beginners/",
      "bio": "Learn how to do your own service on your Heating and Air Conditioning",
      "objectives": [
        "Learn how to check and troubleshoot HVAC systems including different components. You can be very profitable in this business",
        "Using Volt Meters",
        "Using refrigerant gauges"
      ],
      "course_content": {
        "Heating and Air Conditioning 101 DIY": [
          "Introduction",
          "Air Filters",
          "Step Down Transformer",
          "Transformers how to prevent them from going bad",
          "Contactor",
          "Electric Air Handler",
          "Checking a AC/Heat Pump Line voltage",
          "R-22 Gauges and Vacuum Pumps",
          "Heat Pumps How They Work and What You Need To Get Started",
          "Refrigeration Cycle"
        ]
      },
      "requirements": [
        "Understanding of minor skills willingness to learn"
      ],
      "description": "Learn how to do your own Heating and Air Conditioning troubleshooting and repairs. Why you should safe guard your transformer and how to do this. Filters and air purifiers, how to save money on your electric bill. Not having to call a technician if your heat or AC goes out. Learning low and high voltage and how to test this. What to look for if your outside unit quits working.",
      "target_audience": [
        "Beginner HVAC interested in either earning a living or repairing your own HVAC systems"
      ]
    },
    {
      "title": "Mastering Power Shields: Design with Arduino & EasyEDA",
      "url": "https://www.udemy.com/course/easyeda-pcb-circuit-design-diy-arduino-power-supply-shield-easyeda/",
      "bio": "Unleash the Power of Web-Based PCB Design: From Simulation to 3D Viewing with EasyEDA",
      "objectives": [
        "Get Started and Create a FREE Account",
        "Create Simple and Complex PCB Design",
        "Design your own part",
        "How to create a free account",
        "Interface explained in details",
        "How to get from idea to PCB design and order PCBs",
        "How to create a simple schematic and PCB design and get the 3D view",
        "How to create an Arduino power shield using this free platform and prepare it for manufacturing",
        "How to get the Gerber file",
        "How do use other people designs and edit them for free",
        "How to order a PCB online and things to set before doing that.",
        "Tips and tricks for a great PCB design and manufacturing process",
        "How to create a component in case you can't find it in the online library.",
        "Tricks and tips about tracks, rules, exposed copper, board outline",
        "Schematic editor including NgSpice-based simulation, WaveForm viewer, and other common features.",
        "PCB layout editor including PCB photo viewer, Gerber viewer, scripts support, and other features.",
        "Library editor and manager.",
        "Integrated PCB fabrication and components purchase service.",
        "Team collaboration with good sharing capabilities."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Planning to Design a Custom Arduino Power Shield",
          "Get Started and Create a FREE Account",
          "Simple Circuit Design",
          "Quiz",
          "PCB Design",
          "3D View of PCB Design Online",
          "Desktop Version of the Web App",
          "Quiz",
          "Arduino Power Shield Schematic Design",
          "Arduino Power Shield PCB Design",
          "Tips and Tricks",
          "Quiz",
          "Create Your Own Part and Footprint",
          "Understanding the Basics of PCB Design and Tools",
          "Section Summary",
          "Reading Material"
        ],
        "Next Level PCB Manufacturing": [
          "Section Intro",
          "Introduction",
          "What are the best PCB Manufacturing companies",
          "How to Prepare Your PCB Design for Manufacturing",
          "Quiz",
          "How to Make an Account",
          "PCB prototype PCB Specification Selection",
          "Online Gerber Viewer",
          "Quiz",
          "Finishing the PCB Order",
          "Shipping Address and Payment Options",
          "Share a Project and Earn Money",
          "Advanced Techniques in PCB Design and Preparing for Manufacturing",
          "Section Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Practice Test: Mastering Power Shields: Design with Arduino & EasyEDA"
        ],
        "Course Project": [
          "Course Project",
          "Custom Power Shield for Arduino—Design Review"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "An Internet Connection",
        "Computer, Laptop, Mac or Chrome device"
      ],
      "description": "Harness the Future of Electronics with EasyEDA\nIn the swiftly evolving world of electronics, cloud-based EDA tools are not just a trend; they're a revolution. Tools like EasyEDA have stormed the scene, transforming how we visualize, simulate, and realize our electronic designs.\nAbout this Course\n\"Mastering Power Shields: Design with Arduino & EasyEDA\" isn't just another technical course—it's your hands-on guide to the future of electronics design. Dive deep into the world of EasyEDA and uncover its potential while designing a practical, vital tool: an Arduino power supply shield.\nWhy This Course?\nComprehensive & Clear: Learn every facet of EasyEDA, from the intuitive interface to intricate simulation tools.\nPractical Application: Don't just learn the theory. Design an Arduino Power Supply Shield, useful for high-powered devices that surpass Arduino's standalone capacity.\nFinancially Smart: Why invest a fortune in other EDA tools? Discover the multi-layer PCB design potential of EasyEDA, a tool that offers top-notch features without breaking the bank.\nCollaboration & Community: Dive into a tool that promotes teamwork and sharing, allowing you to leverage others' designs and insights.\nCourse Highlights:\nUnderstand the EasyEDA platform: why and how to use it.\nNavigate the interface with ease.\nJourney from idea inception to PCB design and ordering.\nMaster schematic creation, 3D PCB viewing, and Gerber file extraction.\nTips, tricks, and industry secrets for efficient PCB design and manufacturing.\nExplore advanced features: component creation, track rules, exposure settings, and more.\nWhether you're an electronics hobbyist, a professional looking to upskill, or simply curious about the magic behind your devices, this course promises a comprehensive, practical, and enjoyable journey.\nUnlock the Power of EasyEDA. Enroll Today!\nWhat you will learn\nNavigate and use the EasyEDA platform.\nDesign and simulate electronic circuits.\nCreate a practical Arduino Power Supply Shield.\nUnderstand schematic creation and PCB layout.\nExtract Gerber files and order PCBs.\nUse advanced features like component creation and track rules.\nCollaborate with others using EasyEDA’s community features.\nWho is this course for\nElectronics hobbyists and enthusiasts.\nEngineering students and professionals.\nMakers and DIYers.\nAnyone interested in PCB design and manufacturing.\nRequirements\nBasic understanding of electronics.\nAn Arduino board and related peripherals.\nNo prior experience with EasyEDA required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelance engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Arduino Geeks",
        "Anyone interested in making amazing PCB Boards",
        "Anyone interested in Circuit Design and PCB",
        "Anyone Interested in Learning How to get from idea to PCB design and order PCBs",
        "Anyone interested in Learning How to create a simple schematic and PCB design and get the 3D view",
        "Anyone interested in Learning How to create an Arduino power shield using this free platform and prepare it for manufacturing"
      ]
    },
    {
      "title": "Step into the World of Arduino: Craft Your Digital Ohmmeter",
      "url": "https://www.udemy.com/course/arduino-digital-ohmmeter/",
      "bio": "Discover the magic of Arduino and electronics. Elevate your DIY projects with a Digital Ohmmeter crafted by you!",
      "objectives": [
        "Learn in a step by step manner how to make an Arduino Digital Ohmmeter",
        "Interface different electronic components with Arduino",
        "Make your own Arduino Based Digital Ohmmeter",
        "Learn Working Principle of Digital Ohmmeter",
        "Interface LCD Display with Arduino",
        "Learn Analog to digital conversion using Arduino",
        "Deal with LCD Display and Analog signals Using Arduino.",
        "Display resistance value in Arduino Digital Ohmmeter",
        "Program, burn a code and wire Arduino.",
        "Interface resistor, LCD and other components with Arduino."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Educational Engineering Team - Who we are?",
          "Exploring Electrical Measurement Concepts Using Arduino",
          "How it works",
          "Understanding the Course Overview",
          "Summary",
          "Reading Material",
          "Understanding the Course Overview"
        ],
        "Hardware and Software Requirements": [
          "Section Intro",
          "Hardware and Software Requirements",
          "Summary",
          "Reading Material"
        ],
        "Circuit Schematic": [
          "Section Intro",
          "Circuit Schematic",
          "Circuit Design",
          "Summary",
          "Reading Material",
          "Decoding Circuit Schematics"
        ],
        "Arduino Analog to Digital Conversion": [
          "Section Intro",
          "Important Note",
          "ADC",
          "Summary",
          "Reading Material"
        ],
        "Coding": [
          "Section Intro",
          "Coding Overview",
          "Coding the OhmMeter",
          "Code Adjustments",
          "Coding Concepts and Implementation",
          "The Code",
          "Summary",
          "Reading Material",
          "Writing and Optimizing Code for Your Ohmmeter"
        ],
        "Practical Work": [
          "Section Intro",
          "Practical Work",
          "Summary",
          "Reading Material"
        ],
        "Download and Install Software Section": [
          "Section Intro",
          "Download and Install Arduino Software",
          "Download and Install Circuit Design and Wiring Software",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Step into the World of Arduino: Craft Your Digital Ohmmeter Test",
          "Summary",
          "Reading Material"
        ],
        "Who we are?": [
          "Section Intro",
          "Who we are?",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Presenting an Arduino-Based Digital Ohmmeter Project",
          "Summary",
          "Reading Material"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Arduino",
        "A Will to apply, not just watch"
      ],
      "description": "Why Arduino Digital Ohmmeter?\nHave you ever been fascinated by the intricate world of electronics? Want to create something hands-on that combines both fun and learning? This course is tailor-made for you! Dive deep into the world of Arduino and electronics, and emerge with your very own Digital Ohmmeter. Understand circuits, engage with the Arduino Microcontroller, and bring your creation to life.\nCourse Highlights:\nDeep Dive into Arduino: A beginner-friendly approach to understanding the fundamentals of Arduino and its applications.\nHands-On Learning: From theory to practical execution, transform your knowledge into a tangible Digital Ohmmeter.\nExpert Guidance: Benefit from comprehensive instruction, ensuring you grasp every concept at a comfortable pace.\nWhat Awaits You:\nA blend of easy-to-understand video lessons.\nEngaging practical activities to solidify learning.\nValuable downloadable resources.\nContinuous support from seasoned instructors.\nLifelong access to course updates and our exclusive student community.\nTestimonials:\n\"This course was a game-changer for me! The balance of theory and hands-on activities made learning so much fun.\" - John D.\n\"The instructor's passion for Arduino is infectious! I started with zero knowledge and now have my very own Digital Ohmmeter. Highly recommended!\" - Lucia M.\nOur Promise:\nYour satisfaction is our top priority. If for any reason you're not completely satisfied, we offer a 30-day money-back guarantee. We continuously seek feedback and strive to enhance the course content. If you have any suggestions, we're all ears!\nAre You Ready?\nEmbrace the world of Arduino. Unleash your creativity. Dive into this course and embark on an enlightening journey of discovery.\nEnroll today and take your first step towards the world of Arduino mastery!\nUser Testimonials and Social Proof\n\"This course was a game-changer for me! The balance of theory and hands-on activities made learning so much fun.\" - John D.\n\"The instructor's passion for Arduino is infectious! I started with zero knowledge and now have my very own Digital Ohmmeter. Highly recommended!\" - Lucia M.\nAn Author Bio Showing Off Credentials\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nA Single Powerful CTA\nEnroll now and start your journey to mastering Arduino and crafting your very own Digital Ohmmeter today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nUnderstanding the fundamentals of Arduino\nCreating and programming a Digital Ohmmeter\nPractical execution of circuit designs\nHands-on learning with Arduino projects\nWho Is This Course For\nAnyone interested in creating practical Arduino projects\nBeginners with no prior experience in Arduino\nMakers and hobbyists wanting to expand their knowledge\nStudents and professionals looking to enhance their skills\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "Arduino Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning How Digital Ohmmeter work",
        "Anyone Interested in Learning How to get unknown resistance value using Arduino Digital Ohmmeter",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning How to make Arduino Digital Ohmmeter",
        "Anyone Interested in Learning Analog to Digital Conversion using Arduino",
        "Anyone Interested in Microcontrollers"
      ]
    },
    {
      "title": "Tablet Repair: Tablet motherboard repair course for beginner",
      "url": "https://www.udemy.com/course/motherboard-repair-tablet-repairing-course-for-beginners/",
      "bio": "Tablet Repair, Wacom Tablet Repair, Motherboard Repair, Mobile Cell Phone Repair basics, Laptop repair, Computer repair",
      "objectives": [
        "Tablet repairing from scratch;",
        "Tablet motherboard components;",
        "How to diagnose a failed Tablet,",
        "How to test and check motherboard components,",
        "How to to troubleshoot and track signals;",
        "You going to learn everything you will need about Tablet repair;",
        "How to use the Multimeter"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course overview"
        ],
        "Tablet Motherboard Repairing": [
          "Tablet Motherboard Architecture",
          "Overview to Tablet motherboard components",
          "How to check Integrated Circuits Serviceability",
          "How to check switches Serviceability",
          "How to troubleshoot a short circuit in the motherboard",
          "How to check USB connectors",
          "How to check and test Tablet motherboard battery",
          "How to replace failed components in Tablet motherboard",
          "Learn symbols of Chips, ICs and all components in tablet motherboard",
          "Learn how to diagnose Tablet motherboard part 1",
          "Learn how to diagnose Tablet motherboard part 2",
          "Tablet motherboard common faults part 1",
          "Tablet motherboard common faults part 2",
          "Conclusion"
        ]
      },
      "requirements": [
        "No experience needed, You will everything step by step;"
      ],
      "description": "Constant updates.\n19 Reasons why you should choose this course\nThe course will teach you Everything about Tablet Repairing.\nThe course is created with perfect care by a computer engineer;\nOne-On-One Support;\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences;\nYour inquiries will be answered in a short time with a full explanation of any question;\nConstant updates.\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course;\nYou going to understand Tablet Motherboard circuits;\nYou will learn how to follow and track signals in the Tablet motherboard;\nYou going to learn Tablet architecture;\nyou going to learn how to check and test Tablet ICs, connectors, switches, capacitors, and all components;\nYou will learn and master Tablet motherboard components symbols;\nYou going to learn how to troubleshoot a failed Tablet;\nYou will learn the basic input-output system BIOS working principle;\nI'm going to teach you how to find a short circuit easily;\nYou are going to learn and master how to use the multimeter;\nYou going to learn many tips, tricks, and secrets on hardware repair;\nThis course will transform you from a beginner to a Pro.\nTopics that we will be discussing in this course are :\nTablet Motherboard Architecture;\nTablet Motherboard Parts and Components;\nHow to check Integrated Circuits Serviceability;\nHow to check switches' Serviceability;\nHow to troubleshoot a short circuit in the Tablet motherboard;\nUnderstanding Tablet Motherboard Common Faults;\nHow to check switches' serviceability;\nSymbols of Chips, ICs, and all components in tablet motherboard\nHow to replace failed components in Tablet motherboard;\nMotherboard connectors;\nHow to check USB connectors;\nHow to check and test Tablet motherboard battery;\nTablet motherboard tracking signals analysis;\nLearn how to check and test Tablet motherboard components;\nLearn how to diagnose Tablet motherboard;\nLearn Tablet motherboard components symbols;\nMaster the use of the Multimeter and much more.\nYou will also learn many tips and tricks that will make you a hardware professional and have a deep understanding of Tablet motherboard repair.\nI will guide you step by step with an easy explanation along this course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nWhat are you waiting for?\nEnroll now,\nAnd let's get started.",
      "target_audience": [
        "Everyone who want to learn and master hardware repairing;"
      ]
    },
    {
      "title": "Learn Digital Electronics using Schematics & FPGA Boards",
      "url": "https://www.udemy.com/course/learn-digital-electronics-using-schematics-fpga-boards/",
      "bio": "Use Xilinx ISE Schematics without coding to Learn how to design Digital Systems and See them work on a Basys 2 Board",
      "objectives": [
        "Design simple digital systems from scratch",
        "Use ISE Schematics to design digital systems on FPGA",
        "Load design on FPGA Board and Verify Design"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Ready": [
          "Download and Install ISE",
          "Get a free ISE Webpack License",
          "Getting around in ISE"
        ],
        "Gates": [
          "Gates",
          "Implementing an XOR gate",
          "Logic",
          "Implementing Many Gates",
          "Logic2"
        ],
        "Registers": [
          "Registers",
          "Implementing a basic Flip Flop (FF)",
          "Implementing a FF with Clear and Enable",
          "Implement a Shift Register using Flip Flops",
          "Debouncer Circuit",
          "Implement Debouncer with Shift Registers",
          "Registers"
        ],
        "Multiplexers": [
          "Multiplexers",
          "Implementing a Multiplexer",
          "Mux"
        ],
        "Counters": [
          "Counters",
          "Implement a Counter"
        ],
        "Arithmetics": [
          "Adders and Subtractors",
          "Implementing an Adder",
          "AddSub"
        ],
        "Random Access Memory - RAM": [
          "Random Access Memory - RAM",
          "Implement a Block RAM",
          "RAM"
        ],
        "Finite States Machines (FSM)": [
          "State Machines",
          "An example State Machine",
          "State Transition Table",
          "Equations for Transition & Output Logic",
          "FSM"
        ]
      },
      "requirements": [
        "Basic knowledge in software download/installation",
        "Basic knowledge in working with Windows"
      ],
      "description": "This course was designed to give students an opportunity to kick-start their skills to Design Digital Electronics WITHOUT the hurdle of having to code in HDL.\nHow this course works\nConcepts are first explained, then demonstrated by using the ISE software from Xilinx. Coding in HDL languages will not be taught in this course but instead, Schematics will be used as it is easier for beginners. Students will only need drag, drop and connect schematic symbols together. Then Run through the flow of ISE to generate the bit file.The bit file will be downloaded on the board to see the results.\nThe goal is to quickly put together designs and try them on the board, without the hurdle of VHDL/Verilog coding. In this way, you will focus on how Digital Electronics works.\nThis course doesn't show software simulation but focuses on testing your designs straight on the board.\nWhat will you need?\nYou will need to download and install Xilinx ISE software in the Webpack version, which is free. Ideally you will need the Basys 2 board, which uses the Spartan 3E FPGA, to verify your design on hardware.\nContent\nThe course is split in sections of the main building blocks of Digital Electronics such as Registers, Logic Gates, Random Access memory etc...\nIn each section there is explanation of various blocks e.g in the Registers section will be explained the Flip Flops and Shift Registers. After most blocks explanation there will be a practical activity on how to implement the circuit on an FPGA and verify the design on the Basys 2 board.\nQuizzes\nThere is a generous number of quizzes between the lessons to help the students keep focused and find the course fun to undertake.\nPractical\nMost of the Practical Activities will be simply to load the design on your Basys2 board and use the switches as input & LEDs as output. Additionally, at the end of the course, you will also learn how to connect the board to other external components using JTAGs through the use of wires and a breadboard.",
      "target_audience": [
        "Digital Electronics enthusiasts",
        "Students in Electronics Engineering",
        "Those who are interested in FPGA"
      ]
    },
    {
      "title": "Best Raspberry Pi Course and Guide 2024",
      "url": "https://www.udemy.com/course/learn-raspberry-pi-tutorial-course/",
      "bio": "Raspberry Pi Tutorial. From Beginner to Expert Level in 3 days -Everything has been updated to new standards.",
      "objectives": [
        "Learning about Raspberry Pi devices ?",
        "Installation ,configuration and troubleshooting on Raspberry Pi",
        "Project ideas using by Raspberry Pi",
        "Python Programming with Raspberry Pi",
        "Learn the ins and outs of working with the Terminal and Linux commands",
        "Raspi System Management Commands",
        "and MORE !"
      ],
      "course_content": {
        "Introduction to Raspberry Pi -Model1-2-3-4": [
          "INTRO",
          "Buy a Raspbeery Pi Device",
          "What should I know before buying a Raspberry Pi?",
          "Raspbbery Pi is For you?",
          "How many models has Raspberry Pi ?",
          "Raspberry Pi Pico",
          "Change the keyboard layout",
          "CLI Shurtcuts"
        ],
        "Getting Started with Raspberry Pi": [
          "Which Component Do you need ?",
          "What’s inside the Raspberry Pi Box",
          "Connect your Raspberry Pi -All Companents",
          "HDMI Configuration"
        ],
        "Installation": [
          "How to install Raspberry Pi on SD Card",
          "How to Install Manjaro on Raspberry Pi?"
        ],
        "Enable / Disable Connections": [
          "IP Address on Raspberry Pi",
          "How to Enable SSH ?",
          "How to Enable VNC ?"
        ],
        "Linux -Raspberry Pi Commands": [
          "sudo raspi-config",
          "Checking the File Systems",
          "How to install fonts on Raspberry Pi?",
          "Sudo",
          "pwd",
          "ls",
          "cd",
          "cat",
          "man",
          "less",
          "Ping",
          "history",
          "whoami",
          "rmdir",
          "Add a User",
          "Poweroff  /Reboot /Shutdown",
          "Disable /Enable Intefaces",
          "crontab",
          "nslookup",
          "File Management Commands",
          "Edit a config file",
          "Display system processes",
          "Check free and used RAM",
          "Monitor kernel events",
          "Install and manage software",
          "Curl - Transfer data over a network",
          "grep",
          "Working with Filesystem Commands"
        ],
        "Project Ideas for Raspberry Pi": [
          "Train Departure Screen",
          "Small backup storage",
          "Monitoring",
          "Internet or Network / Wi-Fi speed tester",
          "Nagios Remote Agent",
          "Proxy or VPN server in a DMZ",
          "Make your own NAS drive",
          "Power Cat Feeder",
          "Stratux",
          "Build a Weather Station",
          "Whatsapp on your Raspberry Pi",
          "Radio",
          "Twitter Bot",
          "IPTV",
          "Robot Arm",
          "Magic Mirror",
          "Minecraft Machine",
          "Make a Phone"
        ],
        "Python Programming": [
          "Install and Update Python",
          "Opening the Python",
          "Writing Codes",
          "Run a Python Code",
          "Make a Python Executable"
        ],
        "Problems & Fix": [
          "SPI EEPROM has become corrupted.",
          "I can not assign ip address ?",
          "Why is my Raspberry Pi not Booting?"
        ],
        "PI-HOLE": [
          "What is Pi-hole, and what does it do?",
          "What you’ll need to set up Pi-hole?",
          "Install Pi-hole on Raspberry Pi",
          "Change your pi-hole web password",
          "Difference from traditional advertisement blockers",
          "MTR Command"
        ]
      },
      "requirements": [
        "Desire to learn Raspberry Pi"
      ],
      "description": "Learn from A-Z about Raspberry Pi.\nInstallation,\nTroubleshooting,\nProjects,\nProgramming with Python +c++ etc.\n\n\nThis Raspberry Pi course will provide the information you need to Raspberry Pi\n\n\nNo previous programming or electronics knowledge is required.\n\n\n\nYOU WILL FIND THESE SECTIONS AND LECTURES IN THIS COURSE\n\n\n\n\nSection 1:Introduction to Raspberry Pi -Model1-2-3-4\nLecture 1:What should I know before buying a Raspberry Pi?\nLecture 2:What is a Raspberry Pi ?\nLecture 3:How many models has Raspberry Pi ?\nSection 2:Getting Started with Raspberry Pi\nLecture 4:Which Component Do you need ?\nLecture 5:What’s inside the Raspberry Pi Box\nLecture 6:Connect your Raspberry Pi -All Companents\nSection 3:Installation\nLecture 7:How to Run Raspbian in a Virtual Machine (VMWare / Virtualbox / QEMU) ?\nLecture 8:How to install Raspberry Pi on SD Card\nLecture 9:How to Install Manjaro on Raspberry Pi?\nSection 4:Enable / Disable Connections\nLecture 10:IP Address on Raspberry Pi\nLecture 11:How to Enable SSH ?\nLecture 12:How to Enable VNC ?\nSection 5:Linux -Raspberry Pi Commands\nLecture 13:sudo raspi-config\nLecture 14:Checking the File Systems\nLecture 15:How to install fonts on Raspberry Pi?\nLecture 16:Sudo\nLecture 17:pwd\nLecture 18:ls\nLecture 19:cd\nLecture 20:cat\nLecture 21:man\nLecture 22:less\nLecture 23:Ping\nLecture 24:history\nLecture 25:whoami\nLecture 26:rmdir\nLecture 27:Add a User\nLecture 28:Poweroff  /Reboot /Shutdown\nLecture 29:Disable /Enable Intefaces\nLecture 30:crontab\nLecture 31:nslookup\nLecture 32:File Management Commands\nLecture 33:Edit a config file\nLecture 34:Display system processes\nLecture 35:Check free and used RAM\nLecture 36:Monitor kernel events\nLecture 37:Install and manage software\nLecture 38:Curl - Transfer data over a network\n\n\nSection 6:Project Ideas for Raspberry Pi\nLecture 39:Train Departure Screen\nLecture 40:Small backup storage\nLecture 41:Monitoring\nLecture 42:Internet or Network / Wi-Fi speed tester\nLecture 43:Nagios Remote Agent\nLecture 44:Proxy or VPN server in a DMZ\nLecture 45:Make your own NAS drive\nLecture 46:Power Cat Feeder\nLecture 47:Stratux\nLecture 48:Build a Weather Station\nLecture 49:Whatsapp on your Raspberry Pi\nLecture 50:Radio\nLecture 51:Twitter Bot\nLecture 52:IPTV\nLecture 53:Robot Arm\nLecture 54:Magic Mirror\nLecture 55:Minecraft Machine\nLecture 56:Make a Phone\nSection 7:Python Programming\nLecture 57:Install and Update Python\nLecture 58:Opening the Python\nLecture 59:Writing Codes\nLecture 60:Run a Python Code\nLecture 61:Make a Python Executable\nSection 8:Problems & Fix\nLecture 62:SPI EEPROM has become corrupted.\nLecture 63:I can not assign ip address ?\nLecture 64:Why is my Raspberry Pi not Booting?\n\n\n\n\n\n\nYou'll Also Get:\nLifetime Access to course updates\nFast & Friendly Support in the Q&A section\n\n\nDon't Miss Out!\nEvery second you wait is costing you valuable leads.\nGo ahead and Start your Raspberry Pi experience today!\n\n\nThank you very much and have a wonderful day!\nGood Luck :)",
      "target_audience": [
        "Anyone interested in learning about Raspberry Pi"
      ]
    },
    {
      "title": "Embedded System Interview Preparation Plan in detail",
      "url": "https://www.udemy.com/course/embedded-system-interview-preparation-plan-in-detail/",
      "bio": "Lets Prepare for Linux Kernel , Device Driver or Embedded Systems jobs",
      "objectives": [
        "Direction to prepare for Embedded Systems Software interview",
        "Focus Points for preparation",
        "Linux Kernel and Device Drivers Interview Preparation Guidance",
        "Embedded System Softwares Roles wise guidance"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "C Programming Focus": [
          "C Programming Concepts to focus"
        ],
        "Device Drivers": [
          "Device Drivers Concepts"
        ],
        "Linux Kernel": [
          "Linux Kernel Concepts to focus"
        ],
        "BSP Engineer Specifics": [
          "BSP Engineer Specific Interview Preparation"
        ],
        "Low Level Drivers Specifics": [
          "Low Level Driver Development specific Preparation"
        ],
        "MultiMedia Driver Specific": [
          "Mutlimedia device driver development specific interview Preparation"
        ]
      },
      "requirements": [
        "Basic C programming",
        "Dedication to Prepare for Interview"
      ],
      "description": "Are you Preparing for interview for below job profiles\n\n\nLinux kernel engineer\nEmbedded System Engineer\nDevice Driver Developer\nBSP engineer\nMultimedia Device Driver engineer\nThen you are at right place . This course is specially design for you to have a good and result oriented strategy to prepare for upcoming interview . This course will give you good insight on how to prepare for interview . What to focus more and what to focus less . This course will help you to plan for interview preparation as per the job profile you are preparing for .\n\n\nWe have divided Embedded Systems job role in below three categories\n1) BSP Engineers\n2) Low Level Driver Developer\n3) Multimedia Device Driver Developer (Video , Audio , Camera)\n\n\nWe have covered specific interview preparation for above job roles .  Every roles has some specific area of tasks to focus so we have identified the specific area to focus on according to above job profile .   We have prepared this course as per the feedback from different interviewer from Embedded System Industries who have taken lot  of interview s . So their guidance will help you to prepare for interview in short time .\nLets not wait and start preparing for Interview . Hoping after this training you will have good confidence for your interview preparation .",
      "target_audience": [
        "Student , Fresh graduates, Beginners and Embedded System Software Professional who is preparing for embedded Systems , Linux kernel or device drivers interview ."
      ]
    },
    {
      "title": "Manufacturing Process: Becoming a Sheet Metal Design Pro!!",
      "url": "https://www.udemy.com/course/advanced-sheet-metal-design-training/",
      "bio": "Learn all the design considerations to be kept in mind while designing a manufacturable sheet metal part.",
      "objectives": [
        "Sheet Metal Design Considerations; a designer must keep in his mind while design a sheet metal part"
      ],
      "course_content": {},
      "requirements": [
        "Although there are no prerequistes for this course but you shoould be aware of any CAD software so that you can practice on rules after watching the class."
      ],
      "description": "If you are planning to become a sheet metal designer or product design, then this is the right course for you. In this course, you will learn about design considerations; a designer needs to keep in mind while designing a product.\nI have not discussed any sheet metal operation here. I am discussing the consideration which a designer should use so that sheet metal parts do not get deform while manufacturing. Overall, 20 considerations have been discussed in the course. Students can make a list of all the points and use the values when they are designing parts in sheet metal. You will also get a detailed lecture on flat length so that your basics are clear before proceeding with the other design features.\nPre-requisites -   There are no pre-requisites for this course; you should know about only CAD software as without any CAD knowledge you will not be able to practice.\n\n\nCourse Outcomes-  After completing this course, you would have detailed knowledge of\n1. Calculating Flat Length\n2. Extruded Holes\n3. Holes\n4. Bends\n5. Embossment\n6. Cut\n7. Hem\n8. Notch\n9. Dimples\n10. Gusset\n11. Counterbore\n12. Countersinks\n13. Lance\n14. Burrs\n15. Offset bends\n16. Knife Edges\n17. Fillets\n18. Uniform Thickness\n19. Welding\n20. Stiffener\n21. Plating\n\n\n\n\nWho can join?\n1. Mechanical Engineers\n2. Product Designers\n3. Industrial Designers\n4. Manufacturing Engineers\n5. Sheet Metal Designers",
      "target_audience": [
        "Mechanical Engineer",
        "Product Designer",
        "Sheet Metal Designer",
        "Manufacturing Engineer"
      ]
    },
    {
      "title": "Arduino Communication with I2C Protocol",
      "url": "https://www.udemy.com/course/arduino-i2c-itwoc-communication-with-i2c-protocol/",
      "bio": "Arduino Communication with I2C Bus: A step by step guide to Master I2C Protocol and Start using it in your Arduino",
      "objectives": [
        "What is I²C and how it works",
        "Advantages of I²C",
        "Disadvantages of I²C",
        "I²C Operation",
        "Main I²C Bus Library Functions",
        "Interface different devices with Arduino using I²C",
        "How to implement I²C in your project",
        "What is the difference between I²C and other communication methods",
        "Why using I²C will make your life easier",
        "How to code I²C the right way and how to talk to multiple devices easily",
        "A practical example of I²C enabled DS1307 Data and Time IC and how to read data from it using I²C"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro:",
          "Introduction",
          "Mastering I2C Communication with Arduino",
          "What is I2C",
          "Things Your Need to Know about I2C",
          "Where to use i2c communication",
          "Introduction and Basics of I2C Communication",
          "Exploring the Basics of I2C Communication",
          "Section Summary:",
          "Reading Material:"
        ],
        "Advantages to I2C + Disadvantages to I2C": [
          "Section Intro:",
          "Advantages to I2C",
          "Disadvantages to I2C",
          "Advantages and Disadvantages of I2C Communication",
          "Evaluating the Pros and Cons of I2C Communication",
          "Section Summary:",
          "Reading Material:"
        ],
        "Download and Install The Required Software": [
          "Section Intro:",
          "Software Requirements",
          "Reading Material:"
        ],
        "I2C Bus Operation": [
          "Section Intro",
          "Operation of I2C Bus",
          "Understanding I2C Bus Operation",
          "Section Summary:",
          "Reading Material:"
        ],
        "I2C Pins in Arduino": [
          "Section Intro:",
          "I2C Pins in Arduino",
          "Section Summary:",
          "Reading Material:"
        ],
        "Arduino Wire Library I2C Functions": [
          "Section Intro:",
          "Arduino Wire Library I2C Functions",
          "Exploring Arduino Wire Library Functions",
          "Section Summary:",
          "Reading Material:"
        ],
        "Arduino to Arduino I2C Example": [
          "Section Intro:",
          "Circuit Design",
          "Coding",
          "Setting Up Arduino-to-Arduino I2C Communication",
          "Section Summary:",
          "Reading Material:"
        ],
        "Arduino to DS1307 Time and Date Module Example": [
          "Section Intro:",
          "Arduino to DS1307 Time and Date Module Circuit Design",
          "Interfacing Arduino with DS1307 RTC Module Using I2C",
          "Section Summary:",
          "Reading Material:"
        ],
        "Download and Install Software Section": [
          "Section Intro:",
          "Download and Install Proteus Software",
          "Download and Install Arduino Software",
          "Download and Install Circuit Design and Wiring Software",
          "Section Summary:",
          "Reading Material:"
        ],
        "Practice Test": [
          "I2C Communication Essentials for Arduino"
        ]
      },
      "requirements": [
        "A computer to run the software",
        "A basic knowledge in C Programming language",
        "No Material is required for this Course"
      ],
      "description": "I²C (pronounced I-squared-C)\nArduino Communication with I2C Bus: A step-by-step guide to Master I2C Protocol and start using it in your projects. I²C allows communication of data between I2C devices over two wires, making it easier for anyone to exchange information without too much wiring.\nWhy You Should Take This Course:\nLearn how to communicate with devices over the I2C Bus.\nCreate your first Arduino-based relay from scratch.\nLearn how to transmit data from an I2C Bus to an Arduino, and vice versa.\nDiscover other uses for the I2C Bus, such as transmitting data between a microcontroller and a memory chip.\nWhat You Will Learn in This Course:\nWhat is I²C and how it works\nHow to implement I²C in your project\nThe difference between I²C and other communication methods\nWhy using I²C will make your life easier\nThe advantages and disadvantages of using I²C\nHow to code I²C the right way and how to talk to multiple devices easily\nA practical example of I²C-enabled DS1307 Data and Time IC and how to read data from it using I²C\nThe Arduino Communication with I2C Protocol course teaches you how to use the I2C Bus in your Arduino projects. The course starts by explaining how the protocol works, then guides you through creating your own I2C-based relay. It continues with transmitting data between an Arduino and an I2C bus, applicable for tasks like sending data between a microcontroller and a memory chip.\nUser Testimonials: \"This course made I2C communication easy to understand and apply in my projects. Highly recommended!\" - John D.\n\"A must-take for anyone working with Arduino and I2C. Clear explanations and practical examples.\" - Emily R.\nAuthor Bio: Ashraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world. With over 250,000 students from around the world, Ashraf’s online courses have helped many to kick-start their careers in the industry.\nCall to Action: Enroll now to master the I2C protocol and enhance your Arduino projects!\nFAQ: Q: Do I need prior experience in electronics or programming to take this course? A: No, this course is designed for all levels.\nQ: Will I need to buy additional equipment? A: The course provides a list of necessary hardware, all of which are affordable and easily accessible.\nWhat You Will Learn\nUnderstand the I²C protocol and its workings\nImplement I²C in your Arduino projects\nDifferentiate between I²C and other communication methods\nCode I²C to communicate with multiple devices\nPractical applications of I²C in real-world projects\nWho Is This Course For\nElectronics enthusiasts\nArduino hobbyists\nBeginners in microcontroller communication\nAnyone interested in learning I²C protocol\nRequirements\nAn Arduino board and basic electronic components\nBasic understanding of using a computer\nNo prior programming or electronics experience needed\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects. They strive to provide deep, hands-on experience in their courses, offering step-by-step blueprints on various topics.\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and maker. He has been the Chief Educational Engineer at Educational Engineering Team since 2007, and his mission is to explore new trends and technology to help educate the world. His online courses have helped over 250,000 people worldwide to build successful careers.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone interested in talking to multiple devices easily via I²C the right way",
        "Anyone Interested in Interfacing Arduino with other ICs or devices via I²C",
        "Anyone Interested in Controlling different devices using I²C Protocol",
        "Arduino Lovers",
        "Microcontrollers Geeks"
      ]
    },
    {
      "title": "PIC Microcontroller Communication with I2C",
      "url": "https://www.udemy.com/course/i2c-pic-microcontroller-communication-with-i2c/",
      "bio": "PIC Microcontroller Communication with I2C Bus: A step by step guide to Master I2C Protocol and Start using it",
      "objectives": [
        "What is I²C and how it works",
        "Advantages of I²C",
        "Disadvantages of I²C",
        "I²C Operation",
        "Main I²C Bus Library Functions",
        "Interface different devices with PIC Microcontroller using I²C",
        "How to implement I²C in your project",
        "What is the difference between I²C and other communication methods",
        "Why using I²C will make your life easier",
        "How to code I²C the right way and how to talk to multiple devices easily",
        "A practical example of I²C enabled DS1307 Data and Time IC and how to read data from it using I²C"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Setting Up I2C Communication with PIC",
          "What is I2C",
          "Things Your Need to Know about I2C",
          "Quiz",
          "Summary",
          "Reading Material"
        ],
        "Advantages to I2C + Disadvantages to I2C": [
          "Section Intro",
          "Advantages to I2C",
          "Disadvantages to I2C",
          "Comparative Analysis of I2C Communication: Benefits and Limitations",
          "Summary",
          "Reading Material"
        ],
        "Download and Install The Required Software": [
          "Section Intro",
          "Software Requirements",
          "Summary",
          "Reading Material"
        ],
        "I2C Bus Operation": [
          "Section Intro",
          "Operation of I2C Bus",
          "Operation Explained in More Details",
          "Quiz",
          "I2C Bus Operation Diagram explanation",
          "Summary",
          "Reading Material"
        ],
        "I2C Library Routines": [
          "Section Intro",
          "I2C Library Routines",
          "Utilizing I2C Library Routines to Implement Communication with Slave Devices",
          "Summary",
          "Reading Material"
        ],
        "Simple I2C Example": [
          "Section Intro",
          "Circuit Design for I2C Testing",
          "Circuit Design",
          "Coding Simple Example",
          "Quiz",
          "Code",
          "Summary",
          "Reading Material"
        ],
        "Practical Example Reading Data from DS1307 Time and Date IC": [
          "Section Intro",
          "Reading Data from DS1307 Time and Date IC",
          "Code",
          "Internal DS1307 Memory Allocation",
          "Summary",
          "Reading Material"
        ],
        "I2C Library": [
          "Section Intro",
          "I2C Library",
          "Summary",
          "Reading Material"
        ],
        "Download and Install Software Section": [
          "Download and Install Proteus Software",
          "Download and Install MikroC Software",
          "Circuit Design and Simulation for I2C Communication with PIC Microcontroller"
        ],
        "Practice Test": [
          "PIC Microcontroller Communication with I2C"
        ]
      },
      "requirements": [
        "A computer to run the software",
        "A basic knowledge in C Programming language",
        "No Material is required for this Course"
      ],
      "description": "I²C (pronounced I-squared-C)\nI²C allows communication of data between I2C devices over two wires, making it easier for anyone to exchange information without too much wiring.\nWhy You Should Take This Course:\nLearn how I2C is used in microcontrollers.\nUnderstand what each I2C register does, and how to read it.\nConfigure an I2C device, especially for 8-bit processors.\nLearn about address bits, their configuration, and correct address matching.\nMaster the commands used on an I2C bus to configure device settings, read registers, send data, and more.\nIn this course, you will learn what I2C is and why it is used. We will discuss the advantages of I2C and cover the following topics:\nHow to operate using I2C\nThe working principle behind this interesting and famous communication protocol\nMikroC Pro Libraries for PIC Microcontroller I2C bus\nCoding examples on how to implement I2C using MikroC libraries\nRecommendations for using MikroC Pro for programming\nPIC projects with I2C\nI'm sure that you will enjoy this course and learn a lot from it. Join us on this journey to take your programming skills to the next level in communicating with PIC microcontrollers and other devices.\nWhat You Will Learn in This Course:\nWhat is I²C and how it works\nHow to implement I²C in your project\nThe difference between I²C and other communication methods\nWhy using I²C will make your life easier\nThe advantages and disadvantages of using I²C\nHow to code I²C the right way and how to talk to multiple devices easily\nA practical example of I²C-enabled devices and how to read data from them using I²C\nUser Testimonials: \"This course provided me with a solid understanding of I2C communication with PIC microcontrollers. It's very detailed and easy to follow.\" - Laura M.\n\"A great course for anyone wanting to master I2C communication with PIC microcontrollers. Highly recommended!\" - Daniel P.\nAuthor Bio: Ashraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world. With over 250,000 students from around the world, Ashraf’s online courses have helped many to kick-start their careers in the industry.\nCall to Action: Enroll now to master I2C communication with PIC microcontrollers and elevate your electronics projects!\nFAQ: Q: Do I need prior experience in electronics or programming to take this course? A: No, this course is designed for all levels.\nQ: Will I need to buy additional equipment? A: The course provides a list of necessary hardware, all of which are affordable and easily accessible.\nWhat You Will Learn\nUnderstand the I²C protocol and its workings\nImplement I²C in your PIC microcontroller projects\nDifferentiate between I²C and other communication methods\nCode I²C to communicate with multiple devices\nPractical applications of I²C in real-world projects\nWho Is This Course For\nElectronics enthusiasts\nPIC microcontroller hobbyists\nBeginners in microcontroller communication\nAnyone interested in learning I²C protocol\nRequirements\nA PIC microcontroller and basic electronic components\nBasic understanding of using a computer\nNo prior programming or electronics experience needed\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects. They strive to provide deep, hands-on experience in their courses, offering step-by-step blueprints on various topics.\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and maker. He has been the Chief Educational Engineer at Educational Engineering Team since 2007, and his mission is to explore new trends and technology to help educate the world. His online courses have helped over 250,000 people worldwide to build successful careers.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone interested in talking to multiple devices easily via I²C the right way",
        "Anyone Interested in Interfacing Microcontroller with other ICs or devices via I²C",
        "Anyone Interested in Controlling different devices using I²C Protocol",
        "PIC Microcontroller and Arduino Lovers",
        "Microcontrollers Geeks"
      ]
    },
    {
      "title": "PyUVM Series Part 4 : Python OOPS verification env projects",
      "url": "https://www.udemy.com/course/pyuvm-series-part-4-python-oops-verification-env-projects/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "Verification of Combinational Circuit",
        "Verification of Sequential Circuit",
        "Verification of UART device",
        "Verification of SPI device with and without slave",
        "Verification of I2C device"
      ],
      "course_content": {
        "Introduction": [
          "How to use IDE",
          "Code",
          "Components of Verification Environment",
          "Learning Path"
        ],
        "Combinational Circuit": [
          "Design",
          "TB Part 1",
          "TB Part 2",
          "TB Part 3",
          "Design Code",
          "TB Code",
          "Makefile",
          "A21"
        ],
        "D-Flipflop": [
          "Design",
          "TB Part 1",
          "TB Part 2",
          "Design Code",
          "TB Code",
          "Makefile",
          "A31"
        ],
        "FIFO": [
          "Understanding Design",
          "TB part 1",
          "TB part 2",
          "Design Code",
          "TB Code",
          "Makefile",
          "A41"
        ],
        "SPI": [
          "SPI Master Design",
          "TB Part 1",
          "TB Part 2",
          "TB Part 3",
          "TB Part 4",
          "Design Code",
          "TB Code",
          "Makefile",
          "SPI with Slave device Design",
          "Testbench COde",
          "Design Code",
          "Verilog TB",
          "TB Code",
          "Makefile"
        ],
        "I2C": [
          "Understanding start and stop conditions",
          "I2C Write and Read Transactions",
          "I2C Master FSM",
          "I2C Master",
          "I2C Slave",
          "TB P1",
          "TB P2",
          "TB P3",
          "Design Code",
          "TB Code",
          "Makefile",
          "A61"
        ],
        "UART": [
          "Understanding Design P1",
          "Understanding Design P2",
          "TB P1",
          "TB P2",
          "Design Code",
          "TB Code",
          "Makefile",
          "A71"
        ]
      },
      "requirements": [
        "Fundamentals of Digital Electronics and Verilog",
        "Completion of Python for VLSI Engineer P1, P2 and P3 Course or Fundamentals of Python, Python OOPs & COCOTB"
      ],
      "description": "Welcome to our comprehensive course on Class-Based Python Verification Environment for Digital Design! In this dynamic program, participants will delve into the realm of hardware verification, focusing on UART, SPI, DFF, I2C, FIFO, and combinational multiplier Design Under Test (DUT). Leveraging the power of Python and object-oriented programming, this course equips learners with the essential skills to construct robust verification environments for these key digital components.\nThroughout the course, participants will gain hands-on experience in creating modular and reusable verification components using Python classes. We will explore the intricacies of UART, SPI, DFF, I2C, FIFO, and combinational multiplier behaviors and implement comprehensive testbenches to verify their functionality. Participants will learn how to create comprehensive verification plans, write effective test cases to ensure a thorough and well-documented verification process.\nBy adopting a class-based approach, participants will develop a deep understanding of the underlying design principles and be well-prepared to handle complex verification scenarios.\nKey topics include building a scalable testbench architecture, crafting effective stimulus generation and response checking mechanisms, and implementing advanced features such as constrained random testing.\nJoin us on this transformative journey, where you will not only gain expertise in class-based Python verification but also foster a holistic understanding of the digital design verification landscape. Elevate your career by mastering the skills necessary to navigate the complexities of modern digital systems and contribute effectively to the success of digital design projects.",
      "target_audience": [
        "If you're excited about Python and DUT verification with Python, this is the place for you."
      ]
    },
    {
      "title": "Complete Raspberry Pi & Python Bootcamp: Learn and Code 2025",
      "url": "https://www.udemy.com/course/python-programming-using-raspberry-pi/",
      "bio": "Unlock the Power of Raspberry Pi through Practical Python Programming",
      "objectives": [
        "You will learn python programming and its benefits along with its uses and features.",
        "You will then get to know about recommended hardware and software to do this course.",
        "You will learn about Raspberry Pi 4 and thereafter you will get to know how to set up the Operating Systems and finally use it as a full-fledged computer.",
        "You will then learn about IP Scanner Tools and the process of finding the dynamic IP allocated to the Raspberry Pi.",
        "You'll learn about Remote Desktop Connections such as SSH & Putty along with downloading, installing and customizing these applications.",
        "You'll get to know about Virtual Network Computing, VNC. Thereafter, you'll learn about the process to access the GUI of the Pi without a monitor.",
        "Next, you'll proceed with the Thonny installation in Raspberry Pi, along with Python and Development IDE installations and so on.",
        "Then you'll get to know how to work on Windows, Mac, and Linux machines in case, if you don’t have the Raspberry Pi device.",
        "From here, you'll start learning Python Programming, starting with python syntax, variables, constants, literals, python data types and numbers in python.",
        "You'll learn about python strings, string methods, and operators in python.",
        "Next, we’ll dive deep inside python programming such as, learning bitwise operators, and-or -xor operators and so on.",
        "Then, you'll learn about lists and tuples in detail.",
        "Thereafter, you'll get to know about python sets and dictionaries in detail.",
        "Going forward, you'll learn about conditional statements, control flow statements and built-in functions in python.",
        "Then, you'll learn about arrays in detail.",
        "At the end, you'll learn to build two cool and attractive projects using python programming."
      ],
      "course_content": {},
      "requirements": [
        "No prior programming knowledge is required, you will learn everything from the ground up.",
        "A working PC or Laptop with good internet connection."
      ],
      "description": "Welcome to a brand new online course where you can learn hands-on Python programming using Raspberry Pi 4.\nWe will first begin with the essential steps to set up the Raspberry Pi, starting from the important aspects of SSH and WIFI configuration and then burning the operating system to the SD card. You will then learn how to transform your Raspberry Pi into a full-fledged computer using all the peripherals. Upon completing this, you will learn how to access the terminal using the IP Scanner tool and the Putty application, and then we will go ahead with the Virtual Network Computing to access the graphical user interface of the Pi.\nAfter completing the first phase of our journey, we will now turn our attention towards Python programming. I will guide you through the process of setting up your programming environment using the official Python IDE and Thonny on your Raspberry Pi. But here is the best part, even if you don't have a Raspberry Pi, you can still join the course! We understand that everyone has different setups, so we will also demonstrate how you can work on other platforms such as Windows, Mac, and Linux. No matter what device you have, we have got you covered.\nWhether you're a beginner or have some coding experience, we'll start from scratch and progress step by step, ensuring everyone can follow along. We will cover all the essential topics that form the foundation of Python. What sets this course apart is the inclusion of practical examples after each theoretical concept, allowing you to witness how these concepts are applied in real-world scenarios. This hands-on approach will deepen your understanding and enable you to effectively implement logic through programming.\nUpon mastering Python, you will be presented with exciting opportunities to apply and demonstrate your newly acquired knowledge. You will develop 2 projects. In the first project, you will be creating a thrilling number-guessing game that will challenge your coding skills and ignite your logical thinking abilities. Whereas in the second project, you will be creating a dynamic snake game that will unleash your creativity and expand your problem-solving abilities.\nI have always been a firm believer in learning by doing, and in this course, you will learn what you need to know by hands-on experience. You don’t need any special knowledge except basic computer skills to get started with this course. Every one of you comes from a different background and hence the course is crafted from basic to advanced level with minute detail in every lecture.\n\n\nHere are two main reasons, why you should take this course :-\n#1 This course is carefully crafted to deliver both theoretical knowledge and practical application. Each topic is thoughtfully explained with real-world examples, enabling you to learn and practice simultaneously.\n#2 Upon completing each section, you will encounter a series of coding exercises and assignments specifically tailored to reinforce your understanding of the topic at hand. These exercises will require you to apply your own logical thinking to solve problems, thereby enhancing your problem-solving skills and developing a systematic approach to tackle such challenges.\n\n\nTo make the learning curve easier, the entire course has been divided into 10 sections. Let's take a look at the major topics that will be covered in each section of the course.\nIn the first section, we will delve into the fundamental concepts of Python programming and explore the essential software and hardware requirements necessary to successfully complete this course.\nIn the second section, we will dive into the world of Raspberry Pi. We will begin by exploring the configuration of SSH and WIFI and then go through the process of burning the OS onto the SD card. With the bootable SD card and other peripherals, we will transform Raspberry Pi into a full-fledged computer. Next, we will explore a unique scenario where the availability of an external monitor is limited. So to solve this issue, we will learn the process of remotely accessing the terminal of Raspberry Pi by utilizing the concept of IP scanning and SSH. This method allows for seamless connectivity and control over the Raspberry Pi, even without the need for a physical monitor.\nBuilding upon this knowledge, we will venture into the realm of virtual network computing, which will allow us to seamlessly interact with Raspberry Pi's graphical user interface. Additionally, we will familiarize ourselves with the official Python IDE, Thonny, and its installation process. And in case, you don't have a Raspberry Pi, we will guide you through setting up the IDE on Windows, Mac, and Linux machines.\nIn the upcoming 3rd section, we will start learning Python programming. This phase will take us on a comprehensive journey through essential topics such as Python syntax, variables, constants, and literals. We will also explore various data types, including numbers, and various ways of string formatting along with important string methods. By the end of this section, you will have a solid foundation in these fundamental concepts of Python programming.\nIn the 4th section of the course, we will learn about operators in Python. In this phase, we will explore a variety of operators, including arithmetic, assignment, comparison, and logical operators. Additionally, we will also go through identity, membership, bitwise, and boolean operators. By the end of this section, you will have a comprehensive understanding of how to effectively utilize these operators to manipulate and evaluate data in Python.\nIn the 5th section, we will go ahead with Lists and Tuples. We will cover accessing, adding, removing, and updating elements in lists and tuples. But that's not all! We'll also get to know about nested lists and tuples, unlocking new possibilities for organizing and manipulating data. By the time you complete this section, you'll possess a deep understanding of lists, tuples, and their advanced functionalities.\nThe 6th section begins with Sets and Dictionaries. Here, we will explore the creation, access, removal, joining, and copying of sets and dictionaries in Python. Apart from that, we will also see how to implement nested sets and dictionaries, unraveling their hidden potential and mastering the important methods associated with these powerful data structures. By the time we complete this section, you'll have a solid grasp of sets, dictionaries, and their advanced features, empowering you to manipulate and organize data in efficient and effective ways.\nIn the 7th section, we will unlock the true power of Conditional and Control Flow Statements. Here, we will go through \"if\" statements, \"if-else\" statements, and the versatile \"if-elif-else\" statements. But that's not all! We will also master the art of control flow with the mighty For and While loops, along with the invaluable break, pass, and continue statements. By the time we conquer this section, You will gain the expertise to effectively handle decision making and confidently exercise control over program execution.\nIn the 8th section, we will get to know about functions. Get prepared to unlock the true potential of code organization and reusability as we explore the art of creating and calling functions. Witness the magic of declaring functions with input parameters, allowing for dynamic and flexible behavior. And fear not, for we shall master the art of passing arguments to functions, empowering our code with the ability to adapt and respond to different scenarios. By the end of this section, you will harness the power of functions and utilize their efficiency and elegance to create cleaner and modular code.\nIn the 9th section of our Python journey, we will start with arrays. We will see how we can create arrays and access its individual elements. We will then see how arrays enhance our ability to organize and manipulate data with precision and ease. By the end of this section, you will possess the knowledge and skills to harness the full potential of arrays.\nIn the 10th section, you will learn to build two projects using the knowledge and skills gained so far. In the first project, you will be developing a number guessing game whereas in the second project you will be designing your own snake game. These hands-on projects will not only solidify your programming skills but also ignite your creativity and problem-solving abilities.\n\n\nEach video in the course will teach you new concepts and techniques which you may apply to any of your projects immediately. This course assumes you as a newbie and no prior knowledge of programming is required. So if you are somebody who has never learnt Python programming before, you do not need to worry, I will be with you every step of the way.\nDon’t let technical errors hold you back from achieving your goals. If you ever need help, simply post your question in the question and answer section and our dedicated support team will get back to you within 24 hours. They are available to assist you 6 days a week, from Monday to Saturday.\nWe will also share the complete source code with you, so that you can easily replicate the code examples and practice on your own. All lectures are accompanied by English subtitles, ensuring clear and comprehensive understanding.\nIn case, if you don’t like the course, don’t worry at all, you are always protected by 30 days, no questions asked, money back guarantee.\nAlright, so at the end of the day, you have got nothing to lose. So join me in this incredible journey, into the world of Python Programming and take your technical skills to the next level. If you enroll now, you'll take advantage of this limited-time offer at this special price.",
      "target_audience": [
        "This course has been specifically designed with beginners in mind, making it accessible to individuals with basic knowledge of computer science.",
        "Whether you are just starting out or have a foundational understanding of the subject, you can confidently enroll in this course.",
        "Our curriculum takes into consideration the needs of learners at various skill levels, providing clear explanations and step-by-step guidance to ensure a smooth learning experience for everyone.",
        "Don't hesitate to join, as this course is tailored to support your learning journey from the ground up."
      ]
    },
    {
      "title": "Arduino Based Real-Time Oscilloscope",
      "url": "https://www.udemy.com/course/arduino-oscilloscope-based-real-time-oscilloscope/",
      "bio": "Learn and have fun Practicing Arduino by Making Your Own Arduino Based Real-Time Oscilloscope in a Step by Step Manner",
      "objectives": [
        "Move to the next level by make your own Oscilloscope using Arduino",
        "Make your own Arduino Based Real-Time Oscilloscope",
        "Learn Working Principle of Real-Time Oscilloscope",
        "Interface Switches and other devices with Arduino",
        "Learn in a step by step manner how to make your own oscilloscope"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Arduino",
        "A Will to apply, not just watch"
      ],
      "description": "Welcome to this course.\nThis course will teach you how to make your own Arduino Based Real-Time Oscilloscope at home using Few switches some components, This Guide will take you in a step by step manner to know what each component is, why we use it, and what it does and how to wire it up, starting with the basics of Arduino and ending with displaying data on Real-Time Oscilloscope.\nYou will know what is the actual working principle of a Real-Time Oscilloscope, what is needs to be coded, and how to interface - wiring -and code all parts correctly so that you can adjust the Real-Time Oscilloscope using different buttons in which each of the buttons will output different signal.\nLearn and have fun Practicing Arduino by Making Your Own Arduino Based Real-Time Oscilloscope in a Step by Step Manner\nAfter this course, you will be able to make your homemade very own Arduino Based Real-Time Oscilloscope and the choice is yours to use it and apply it with any application that comes to your mind.\n\n\nAll connections are explained in detail, and you can choose the sound level for each signal and the number of Real-Time Oscilloscope buttons to be used.\n\n\nWhy you should take this course?\nMake your own  Arduino Real-Time Oscilloscope that works efficiently and effectively.\nWhat you will learn in this Course\nHow to make Arduino Real-Time Oscilloscope.\nHow to Deal with Sounds and Tones Using Arduino.\nHow to set output in Real-Time Oscilloscope.\nHow to interface Buttons with Arduino.\nHow Arduino Can make your life Is easier.\nHow Program, burn a code, and wire Arduino.\nWhat are the right tools that you need to start making amazing projects?\n\n\nEnroll today and instant access:\nEasy-to-watch video lessons\nPractical activities\nDownloadable resources\nPremium instructor support\nLifetime access to course updates\nAccess to our exclusive student community\n100% Money-back Guarantee\nIf you are unsatisfied with the course, or if it just isn't for you, we have a 30-day money-back guarantee.\nMy goal is to make sure you love this course! We are always listening to students and improving our courses to make them even better. If you ever have a suggestion on how to make this course better, just let me know!\nWhat are you waiting for?\nJoin us now in this journey, Click Enroll Now and learn something new today!",
      "target_audience": [
        "Arduino Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning How Real-Time Oscilloscope works",
        "Anyone Interested in Learning How to Output different Signals using Arduino Real-Time Oscilloscope",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning How to make Arduino Based Real-Time Oscilloscope",
        "Anyone Interested in Microcontrollers"
      ]
    },
    {
      "title": "Unlock the ICSP Power :Program PIC Microcontrollers in Board",
      "url": "https://www.udemy.com/course/icsp-pic-microcontrollers/",
      "bio": "Step-by-Step Guide to Master In-Circuit Serial Programming (ICSP) & Enhance Your Embedded Systems Workflow!",
      "objectives": [
        "Get to know what is ICSP and why you need to start using it",
        "Spend more time coding instead of swapping ICs",
        "Program PIC Microcontroller without removing it from it's Socket or Boards using a simple cable",
        "Program PIC Microcontroller while In Circuit using ICSP Technique",
        "Save time and Money by reducing swapping time and reprogramming and development time",
        "Understand the principles of In Circuit Serial Programming",
        "Program PIC Microcontroller like a champ without swapping it",
        "Understand the principles of Low voltage Programming",
        "save you Money, Time and effort while programming Microcontrollers by Knowing new Techniques"
      ],
      "course_content": {},
      "requirements": [
        "Download The course Material in PDF and Print them if possible",
        "Students must have the knowledge of basic electronics",
        "Students must have basic knowledge in PIC Microcontroller"
      ],
      "description": "Seamless Microcontroller Programming!\nEver faced the hassle of constantly removing and re-inserting your PIC microcontroller during development? With ICSP, you can now program them without ever taking them out of the circuit. This course unveils the powerful techniques of in-circuit serial programming, ensuring smoother and faster project development.\nInside this Comprehensive Guide:\nDeep Dive into ICSP: Discover the principles behind ICSP and why it's the future of microcontroller programming.\nPractical Implementation: From circuits to code, get hands-on experience in setting up and using ICSP for your PIC microcontrollers.\nBenefits of ICSP: Learn why ICSP can revolutionize your workflow, especially with surface-mounted devices.\nWhy Enroll in this Course?\nExpert Curriculum: Dive deep into the world of ICSP with a curriculum designed by industry experts.\nReal-world Applications: Implement ICSP in your projects, improve efficiency, and reduce development time.\nContinuous Support: Premium instructor support ensures you're never stuck.\nTestimonials:\n\"This course has completely changed how I approach PIC programming. ICSP is a game-changer, and this course is the perfect guide.\" - Daniel K.\n\"Practical, detailed, and to the point. Highly recommended for anyone working with PIC microcontrollers!\" - Maria L.\n100% Risk-Free Learning:\nConfident in the value we provide, we back this course with a 30-day money-back guarantee. If you're not satisfied, you get your money back. No questions asked.\nAre You Ready to Master ICSP?\nJoin thousands of satisfied students and bring efficiency to your PIC microcontroller projects. Enroll now and embark on a transformative learning journey!\nWhat You Will Learn\nUnderstand the principles and advantages of In-Circuit Serial Programming (ICSP).\nLearn to set up ICSP for PIC microcontrollers.\nGain hands-on experience in programming PIC microcontrollers without removing them from the circuit.\nDiscover the benefits of ICSP for surface-mounted devices and complex projects.\nWho Is This Course For\nElectronics hobbyists and engineers.\nStudents and professionals interested in microcontroller projects.\nAnyone looking to streamline their microcontroller programming workflow.\nRequirements\nBasic knowledge of electronics and programming.\nA computer with internet access.\nEnthusiasm to learn and implement ICSP in your projects.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the microcontroller industry, with over 13 Years of Experience in teaching and doing practical projects.\nWe strive to put all our hands-on experience into these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos. This real-world knowledge enables you to grasp concepts easily and apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the programming and microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four microcontroller books.\nAs Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and bootcamps, articles, lessons, and online support for electronics hobbyists, programming hobbyists, microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for microcontrollers and programming, particularly for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "Engineering students and Anyone looking to save Money, Time and Effort by using the same Microcontroller",
        "Microcontroller Geeks"
      ]
    },
    {
      "title": "Sensor Interface Design - Circuits for Read Out IC",
      "url": "https://www.udemy.com/course/jacmi-javeds-attofarad-cmi/",
      "bio": "Javed's Attofarad Capacitance Measurement Interfaces",
      "objectives": [
        "Lab On Chip design / MEMS design",
        "Sensing Platform - Integration Engineers",
        "Circuit Design",
        "Dielectric Measurement",
        "Planning, design and execution",
        "Capacitance sensing interface",
        "ADC interface"
      ],
      "course_content": {
        "Capacitive Sensing - Be Thorough for PhD applications": [
          "What is Capacitive Sensing ?",
          "Applications of Capacitive Sensing",
          "Capacitive Touch Sensing - Practical Applications",
          "Liquid Level Sensing"
        ],
        "Types of Capacitance Sensors - Extremely IMPORTANT": [
          "Grounded Sensors",
          "Floating Sensors",
          "Inter Digitated Capacitors IDCs",
          "Silicon Implementation of IDCs"
        ],
        "System Design": [
          "Capacitance Detection and Measurement",
          "Integrated Sensors",
          "Sensor Signal Processing"
        ],
        "Capacitance Sensing Read-Out": [
          "Charge Amplification - Basics",
          "Sensing Read-Out Circuits",
          "Common Configurations for sensor read-out Circuits",
          "Inverter based Read out circuits - Low Power Implementation",
          "Fully Differential Read out circuit"
        ],
        "Capacitance to Digital Converter (CDC)": [
          "Capacitance to Digital Converter (CDC) - Basics"
        ],
        "Design and Measurement": [
          "Time Domain Processing - Time to Digital Converter",
          "Voltage Domain Processing - Analog to Data Converter",
          "Measurement",
          "Accuracy of sensor output",
          "Calibration of sensor output"
        ],
        "Performance Metrics of ADC - MOST IMPORTANT for Interviews": [
          "Data Converter Performance Metrics",
          "Improve the accuracy of ADC / TDC",
          "ADC Offset Error",
          "ADC Gain Error"
        ],
        "Summary": [
          "Summary"
        ]
      },
      "requirements": [
        "Curiosity to learn design",
        "Design Thinking",
        "User need understanding"
      ],
      "description": "The capacitance to digital converter (CDC) are being extensively used in Biomedical diagnostics, Water and level sensing applications in Industrial sector, MEMS sensor interface and plenty of hobby projects by young engineers. The basics of capacitance sensors, types of cap sensors - Floating and Grounded and their construction is discussed. Learn about the interdigitated Capacitor platform for many Gas Sensing applications and pressure sensing applications.  In this course, you will learn about the following:\n1. What is a sensor ?\n2. How to design and build a capacitance sensor ?\n3. Use a MEMS capacitance sensor in an application.\n4. Interfacing an ADC to the sensor and reading out the values.\n5. Touch sensing / Pressure Sensing\n\n\nIn my research, I have proposed and demonstrated a sensitivity enhancement technique and a sensitivity tunability technique using Ring Oscillators for capacitance-based measurements. I combined both these techniques and an additional temperature calibration method and integrated the capacitance sensor in a single chip to act like a Lab-on-Chip platform. I was able to measure hundreds of atto-farad using this technique and methods. The papers based on this research work have been published in flagship IEEE Circuits and Systems Society conferences -  ISCAS, MWSCAS and India's top VLSI conference - VLSID.\n\nThe fundamental points used in this talk use the material from the other 4 courses offered in this platform. Do visit and enroll in the other courses to gain benefit.\nProvide your feedback/ on completing the course.",
      "target_audience": [
        "School students",
        "College students",
        "Engineers, young engineers",
        "research scholars",
        "MEMS Sensor designers",
        "Sensor Interface design developers"
      ]
    },
    {
      "title": "Arduino Home Security System",
      "url": "https://www.udemy.com/course/arduino-home-security-system/",
      "bio": "The course is designed for beginner to intermediate level Arduino users.",
      "objectives": [
        "This course will teach you how to build a complete home security system using Arduino.",
        "You will learn how to use sensors to detect intruders, and how to use an Arduino to sound an alarm.",
        "You will also learn how to send SMS alerts when the system is triggered.",
        "Arduino Home Security System is a course that will teach you how to use Arduino to create a home security system.",
        "You will learn how to use sensors to detect movement, how to use an alarm to notify you of intruders, and how to create a password protected system.",
        "You will learn how to choose the right components for your system, how to wire them up, and how to program them."
      ],
      "course_content": {},
      "requirements": [
        "Arduino Uno Board for Hardware requirements",
        "PIR Sensor HC SR501 for Hardware requirements",
        "LDR for Hardaware requirements",
        "10k resistor for hardware requirements",
        "LEd for hardware requirements",
        "Buzzer for hardware requirements",
        "9v battery for hardware requirements",
        "Arduino IDe sowftware requirements",
        "Fritzing Software requirements"
      ],
      "description": "In this Arduino Home Security System course, you will learn how to use an Arduino microcontroller to create a home security system. You'll be able to detect intruders with a motion sensor and sound an alarm, and you'll also learn how to send text or email alerts when the system is triggered. This course is perfect for anyone who wants to create a simple, low-cost home security system. Even if you have never used Arduino before, you will be able to follow along and learn how to build your own home security system.\nCourse Overview:\nThis course will guide you through building a basic home security system using Arduino. You will learn how to connect various sensors, such as motion detectors, door sensors, and smoke detectors, to a microcontroller. You'll also learn how to create a web interface to remotely control your security system and customize it to fit your specific needs.\nWhat You'll Learn:\nBuilding a Home Security System: Learn the fundamentals of creating a home security system from scratch.\nConnecting Sensors: Understand how to connect motion detectors, door sensors, and smoke detectors to an Arduino.\nRemote Control: Create a simple web interface to remotely turn the alarm on and off.\nCustomization: Learn how to add features and customize your security system to suit your specific needs.\nPractical Projects: Implement projects that demonstrate the practical application of the security system.\nCourse Outline:\nIntroduction and Discussion\nRequirements\nCoding\nCircuit Design\nPrototype House Construction\nCircuit Building\nProject Demonstration\nWho Is This Course For:\nBeginners in Electronics: Individuals new to Arduino and home security systems.\nElectronics Hobbyists: Enthusiasts looking to expand their skills and create new projects.\nHomeowners: Those interested in creating a customizable and affordable home security system.\nSTEM Students and Educators: Those involved in STEM education seeking practical, hands-on experience.\nRequirements:\nBasic Electronics Knowledge: A fundamental understanding of electronics is recommended.\nComputer Access: A computer with internet access.\nArduino Kit: Arduino board, motion sensors, door sensors, buzzers, and other basic electronic components.\nAbout the Instructor:\nEducational Engineering Team is a renowned group of skilled engineers with over 13 years of experience in teaching and practical projects. Led by Ashraf, a seasoned educator and mechatronics engineer, the team has taught over 250,000 students worldwide. Known for their clear and comprehensive teaching style, the team has created over 100 courses on Udemy. Ashraf’s mission is to explore new trends and technology and help educate the world, making complex topics easy to understand and accessible.\nTestimonials:\n\"This course was exactly what I needed to get started with Arduino and home security. The instructions were clear and easy to follow.\" - David K.\n\"Highly recommend this course for anyone interested in home security systems. The projects were practical and very informative.\" - Linda J.\n\"A great course for beginners and hobbyists alike. I've learned so much and can't wait to implement my own security system.\" - Mark R.\nFAQ Section:\nWho can benefit from this course? This course is ideal for beginners, electronics enthusiasts, homeowners, and STEM students.\nWhat are the payment options? Various payment plans are available, including one-time payments and installment options.\nIs there a refund policy? Yes, we offer a 30-day money-back guarantee if you're not satisfied with the course.\nWhat equipment do I need? You'll need a computer with internet access and an Arduino board with motion sensors, door sensors, and buzzers.\nCan I communicate with peers and instructors? Yes, the course includes forums and Q&A sections for interaction with peers and direct support from instructors.\nCall to Action: Enroll Now and Protect Your Home with Arduino!",
      "target_audience": [
        "This course is perfect for anyone who wants to increase the security of their home, or for anyone who is interested in learning more about Arduino programming.",
        "This course is for anyone who wants to learn how to set up a home security system using Arduino.",
        "This course is perfect for anyone who wants to improve their home security, or who is interested in learning more about electronics and programming."
      ]
    },
    {
      "title": "Arduino coding with 3D-Printing, Product Design, Fabrication",
      "url": "https://www.udemy.com/course/product-design-fabrication-3d-printing-arduino-coding/",
      "bio": "Make your own inventions through modelling, designing, product fabrications and coding all within the home environment.",
      "objectives": [
        "Product design & modelling",
        "Applications of Fusion 360",
        "3D printing",
        "Coding on Arduino micro-controller"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction"
        ],
        "Preparations before we start": [
          "Accessories needed for the project",
          "Why use Arduino?",
          "How to download Fusion 360",
          "Opening up Fusion 360 for the first time"
        ],
        "1.1 Fabricating the Lower Base": [
          "The Lower Base - Video 1",
          "The lower Base - Video 2",
          "The Lower Base - Video 3",
          "The lower Base - Video 4",
          "The Lower Base - Video 5",
          "The Lower Base - Video 6",
          "The Lower Base - Video 7",
          "The Lower Base - Video 8",
          "The lower Base - Video 9",
          "The lower Base - Video 10",
          "The Lower Base - Video 11",
          "The lower Base - Video 12",
          "The Lower Base - Video 13",
          "The Lower Base - Video 14 (Optional)"
        ],
        "1.2 Fabricating the Upper Base": [
          "The Upper Base - Video 1",
          "The Upper Base - Video 2",
          "The Upper Base - Video 3",
          "The Upper Base - Video 4",
          "The Upper Base - Video 5"
        ],
        "Fabricating the small items": [
          "Small items - making dimensional changes",
          "Small items - Saving the small items in STL file",
          "Small items - Saving the small items in G-code file"
        ],
        "Making the Images": [
          "The Image Background",
          "The Image Background - The Wording Indentation",
          "The Image Background - The Wordings",
          "The Image Background - Saving in STL file",
          "The Image Background - Saving in G-Code file"
        ],
        "Electronics and Arduino programming": [
          "Expectations at the end of this section",
          "Downloading Arduino IDE",
          "Download FastLED into Arduino IDE",
          "Input parameters for the program",
          "Arduino Uno board and LED strip",
          "Number of LEDs needed for the project",
          "Verifying, Uploading and Testing",
          "Final Programming",
          "Before we mount"
        ],
        "Final Assembly of the whole project": [
          "Final Assembly I",
          "Final Assembly II",
          "How you can benefit from the course",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "No prerequistes or specific requirements for students as everything starts from basics. Of course, some technical knowledge to visualize or already of some knowledge of basic electricity would help speed up learning process.",
        "For hands-on people who like to model, fabricate, do programming and invent things."
      ],
      "description": "In this course, you shall learn how to make a physical object that does not exist in the world in form, fit and function. This course brings you right from the beginning stage of design from our imagination to one that is physical that we can see, touch and feel. This is exactly how new inventions are created. In other words, you are learning to make things that do not exist in this world. This is something unique that you can impress not only to those around you, but could, one day, impress many people in the world as well.\n\n\nIn this project, you will be learning how to make a table lamp. I shall bring you right from the design stage to the final design. Not only will you be learning how to model the piece parts , you will also learn how to put all parts together into an assembly with proper mating surfaces. The learning experience is not only to cater for its own assembly, it also cater to incorporate a micro-controller as well as other electronics parts put together. As we know, most of our products today, are not just made from piece parts put together, we need to bring in other electronics, micro-processors or even micro-controllers to make the design turn into a useful product. With the incorporation of the electronics parts, it will bring a lot of life to the final invention that you made. Start to be an inventor today. Join the course and enjoy the whole design and fabrication journey all within your control.",
      "target_audience": [
        "People who like to learn product designs, modelling, 3D printing.",
        "People who like to do coding and programming.",
        "People who like to transform their imaginations into real inventions."
      ]
    },
    {
      "title": "ROS Demystified: A Beginner's Roadmap",
      "url": "https://www.udemy.com/course/ros-demystified-a-beginners-roadmap/",
      "bio": "Learn the essentials required to build your own robot",
      "objectives": [
        "Installation ROS and It's Dependencies",
        "Installation ROS and It's Dependencies",
        "Understanding URDF",
        "Visualization of URDF using software",
        "Robot motion and Teleoperation"
      ],
      "course_content": {},
      "requirements": [
        "Basic Understanding of Programming",
        "Fundamental Knowledge in Robotics"
      ],
      "description": "ROS or Robot Operating System is an open-source middleware suite deemed as an essential mile stone while learning robotics. Robot Operating System (ROS) is a flexible framework for writing robot software. It provides a structured communication layer between the hardware drivers and the high-level code responsible for task execution and decision-making. ROS is not a traditional operating system but rather a middleware framework that runs on top of an existing operating system, such as Linux. It is a framework that helps researchers and developers build robot applications. ROS has a global open-source community of engineers, developers and hobbyists who contribute to develop better robots which are more accessible and available to everyone. ROS has been adopted into some of the biggest names in robotics. The majority of organisations are using ROS as it can be installed by anyone or a part of ROS in some form. Some companies like ABB, Fetch Robotics, OTTO motors use ROS for application development. ROS allows developers to easily simulate their robot in any environment, before deploying anything in the real world. Tools like Gazebo even allow you to create simulations with robots you don’t possess. This is the ideal course to learn the basics of Robot Operating System. You will be able to have a strong foundation about the essentials ROS. This course will give you a glimpse into the world of research and development of robots using ROS.",
      "target_audience": [
        "Anyone interested in the field of Robotics"
      ]
    },
    {
      "title": "FPGA101: Digital System Design using Verilog and Python",
      "url": "https://www.udemy.com/course/fpga101-digital-system-design-using-verilog-and-python/",
      "bio": "From Verilog basics to building a miniature of Google's TPU",
      "objectives": [
        "Understand the fundamentals of Verilog and FPGA.",
        "Understand RTL design, including combinational logic, sequential logic, FSM, and FSMD.",
        "Interface the digital circuit on the FPGA to an ARM processor.",
        "Build a miniature Google's TPU."
      ],
      "course_content": {},
      "requirements": [
        "Fundamentals of digital circuits and programming will give an added advantage."
      ],
      "description": "Updates:\n2025/09/05: Added embedded web application example.\n\n\nFPGAs are often used to implement digital signal processing applications that require computation acceleration. FPGAs are also used to verify digital circuits before taping them out into silicon chips, called application-specific integrated circuits (ASICs). The Verilog/VHDL hardware description language (HDL) is used to describe the digital circuits, both for FPGA and ASIC targets. This course focuses on the Verilog language.\nThis course teaches the fundamentals of building digital circuits with Verilog. Four topics of fundamental digital circuits are explained: combinational logic, sequential logic, finite state machines (FSM), and finite state machines with data paths (FSMD). Three more topics about integrating the digital circuit on the FPGA into an ARM processor are explained. At the end of the course, a final project on how to build a miniature Google TPU is explained.\nIn the final project, you are going to learn the methodology design of an accelerator for a neural network based on a matrix multiplication core. Matrix multiplication is used in engineering for many applications. Once you get familiar with the methodology, then you should be able to apply the methodology design to any design that you want.\nAfter finishing the course, you will receive a certified certificate of completion. A complete Udemy 30-day money-back guarantee if you are not satisfied with this course, allowing you to study with no risk.\nSee you within the course.",
      "target_audience": [
        "Anyone interested in learning the fundamentals of digital system design."
      ]
    },
    {
      "title": "Hardware Design using PIC Microcontroller",
      "url": "https://www.udemy.com/course/iot-with-pic-mcu/",
      "bio": "Hardware Design & Prototype, PIC Basics",
      "objectives": [
        "PCB design for PIC MCU for IoT",
        "PIC programming using C and XC8 Compiler",
        "Hardware Prototyping and DIY",
        "Building & Testing circuits"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know",
        "Laptop with KiCAD & MPLAB IDE software- available for free download",
        "Internet connection for Android app development and testing IoT projects"
      ],
      "description": "This course is special for me for a few reasons. Having already published a few courses on PIC microcontrollers, PCB Design and PIC32 MCU with more than 5500 students registered for my courses, I was getting a feeling that my courses are incomplete. I wanted to prepare a course that covers both hardware design and firmware development. This course is the outcome of all the inputs and experiences I gained from my previous courses and my professional experience.\nThis course covers the following items as you can see from the course curriculum:\nPCB Design and prototype development\nPIC programming from basics to advanced concepts\nThe first section is an introduction to PIC MCUs and the tools you need to install for the course. You will get a list of components required for the hardware development.\nIn the second section, you will get all the knowledge required to design your own hardware based on PIC MCU. You will be able to design a PCB on KiCAD and then produce a DIY PCB using a simple etching process. You will know how to solder the components on the PCB and then test the hardware by using the test code provided by me.\nIn the third section, you will understand how to write a simple LED blink code using MPLABX IDE and XC8 C compiler. You will know how to interface switches using external interrupts and LCD display with the PIC MCU. You will know how to use the peripheral pin select feature to map PIC peripheral feature with the possible set of pins.\nAfter getting a hold of PIC basics, you will understand timers, PWM modules, watchdog timer, Analog to Digital Converter and UART modules to meet advanced project requirements in the fourth section",
      "target_audience": [
        "Beginners, Engineers and DIY enthuasists"
      ]
    },
    {
      "title": "GPS Geofencing: A Modern Way to Protect Your Home | 2025",
      "url": "https://www.udemy.com/course/code-a-complete-geofence-project-using-raspberry-pi/",
      "bio": "A step-by-step guide using HTML, CSS, JavaScript, Flask, and Python to build your own geofence boundary from scratch.",
      "objectives": [
        "Initially, delve into the critical role of a custom web dashboard for efficient, geofence monitoring system & GPS data tracking, laying the project foundation.",
        "Then, you will understand the concept of, exploring its essential hardware and software requirements.",
        "Subsequently, you will to know about Raspberry Pi, which acts as a central board, and then we learnt about NEO6M GPS Module and its operating principle.",
        "You will then learn about IP Scanner Tools and the process of finding the dynamic IP allocated to the Raspberry Pi.",
        "You'll learn about Remote Desktop Connections such as SSH & Putty along with downloading, installing and customizing these applications.",
        "You'll get to know about Virtual Network Computing, VNC. Thereafter, you'll learn about the process to access the GUI of the Pi without a monitor.",
        "Next, you'll proceed with the Thonny installation in Raspberry Pi, along with Python and Development IDE installations and so on.",
        "Going forward, you'll understand how to test the newly purchased GPS Module under windows environment.",
        "Next, you'll come to know, settingup GPS Modules, which will act as a backend machine, installing GPSD and CGPS libraries for the GPS Hardware,and its testings.",
        "Next, we'll understand the functions of the OLED display and will go through the circuit diagrams to conduct a test before integrating it into the project.",
        "Upon successfully concluding the initial phase of the geofence project,you'll transition into the realm of the Firebase database, account creation & setups etc.",
        "It includes private key generation, and accessing remote machine and facilitating file transfers operations.",
        "In this phase,you'll examie the circuit diagram for backend operations,&will establish setups for OLED and WIFI,conducting checks for Firebase Connectivity etc.",
        "After wrapping up the second phase,you'll proceed to the frontend designs,your journey began by integrating Flask files,incorporating MapboxAPI functionalities.",
        "Then you'll learn about establishing connection between the backend server and the frontend GUI using Google Firebase.",
        "Subsequently, you'll incorporate the crucial functionalities into your dashboard which will include the displaying data within the dashboard and many more.",
        "Next, you'll ensure the implementation of an alert systems so that guardians receive a notification if the child or device ventures outside the Geofence Area.",
        "After confirming the smooth operation of all components, you'll proceed to deploy your project on the internet to allow public to access your geofence service.",
        "At the end, you'll be successfully wrapping up the entire project and conducted a live demonstration to showcase the real-time output."
      ],
      "course_content": {},
      "requirements": [
        "Basic programming knowledge is recommended for this course to ensure a smooth learning experience.",
        "Ensure that you have a laptop or desktop equipped with reliable internet connectivity."
      ],
      "description": "I would like to introduce you to a brand new online course where you can learn to create a cutting-edge geofence monitoring system. This project enables you to create a virtual boundary around a designated area and then monitor the presence or absence of your loved ones or vehicle through a user-friendly web application that offers detailed information. Not only this, you will also come to know, how to accurately determine the distance from a stolen vehicle or person, with just a simple click of a button, allowing you to locate and recover your belongings promptly. Let me show you the demo of this innovative project.\nHow this course is completely different from all other courses?\nWhat sets this course apart from others is its unique methodology. Unlike many courses that rely on 3rd party IoT dashboard, where coding is limited to extracting data from the GPS and then using the 3rd party IoT dashboard for creating the geofence boundary and marker, using the drag and drop pre-built widgets. So you only learnt the backend coding, the database and the frontend are handled completely by the GUI based platforms. By following this approach the learning is almost zero.\nWhereas, our course takes a comprehensive approach to full stack development mastery. This means you will be personally crafting the entire backend using Python, and write the code to send all the acquired data to the realtime database. Upon completing these two phases, you will start designing the frontend using HTML, CSS, JavaScript, Bootstrap and Python. So you are actually constructing the backend, database and the frontend, handling every aspect of the development process.\nHere are four main reasons, why you should take this course?\n1. Custom Dashboard - By building your own dashboard, you'll have complete control over its design and functionality. You can tailor it precisely to your needs, ensuring a unique and customized user experience.\n2. Unlimited Access - Unlike most IoT dashboards that offer only trial accounts with limited features, this course empowers you to overcome such limitations. Your project won't be constrained by server restrictions or data access. You'll have the freedom to access the data as you please, ensuring your project remains fully accessible and functional.\n3. Full Stack Developer Experience - Through this project, you're not just learning a few coding techniques, but you're actually building a complete full-stack project from scratch. This valuable hands-on experience is incredibly beneficial, especially for aspiring full stack developers. The skills and knowledge you gain from this course will be directly applicable to real-world scenarios and could significantly enhance your job prospects in this field.\n4. Offering to Clients - If you're a developer aiming to provide this solution to clients, you can fully customize and tailor the project to their specific requirements. This course grants you the capability to be the master developer, offering a solution that's both powerful and versatile for a wide range of scenarios.\nI am a beginner, can I do this project?\nI have always been a firm believer in learning by doing, and in this course, you will learn what you need to know by hands-on experience. You don’t need any special knowledge except basic computer skills to get started with this course. Every one of you comes from a different background and hence the course is crafted from basic to advanced level with minute detail in every lecture.\nTo make the learning curve easier, the entire course has been divided into 11 sections. Let's take a look at the major topics that will be covered in each section of the course.\nIn the first section, we will explore the fundamental concepts of goefence monitoring sysem and will get to know about the essential software and hardware requirements necessary to successfully complete the project.\nIn the second section, we'll kick off our journey with Raspberry Pi. Initially, we'll familiarize ourselves with this credit sized computer, followed by an exploration of SSH and WIFI configurations. Subsequently, we'll walk through the process of installing the operating system onto the SD card. With this bootable SD card and other peripherals, we will transform Raspberry Pi into a full-fledged computer. Next, we will explore a unique scenario where the availability of an external monitor is limited. So to solve this issue, we will learn the process of remotely accessing the terminal of Raspberry Pi by utilizing the concept of IP scanning and SSH. This method allows for seamless connectivity and control over the Raspberry Pi, even without the need for a physical monitor. Building upon this knowledge, we will venture into the realm of virtual network computing, which will allow us to seamlessly interact with Raspberry Pi's graphical user interface. Additionally, we will also get to know about ThonnyIDE.\nIn the third section, we'll delve into the testing phase, where our objective is to thoroughly test each hardware module before integrating them into the project. We will first begin with the NEO6M GPS Module and CP2102 USB to UART module. Upon understanding the circuit diagram, we will test it on Windows as well as on the Raspberry Pi. Thereafter, we will get to know about OLED Display and then write the code to test the same using the Raspberry Pi.\nIn the fourth section, we will explore the google firebase, understanding its realtime database features. Thereafter, we will navigate through essential operations, such as creating and configuring accounts in Firebase. Once we complete this, we will cover the process of private key generation and then we will learn how to access remote machines for seamless file transfer.\nSection five will take us to the world of Backend development. We’ll first understand the circuit diagram of the backend server and then we will proceed ahead with the code. We will start with the script of OLED and WIFI and then learn to code the Firebase connectivity, GPS server operations, and the retrieval of data from the GPS module. Upon completing all this, we will master the art of seamlessly sending all this gathered data to the Firebase realtime database.\nIn the sixth section, our focus shifts to Frontend Development. We kickstart this phase by understanding Mapbox and getting to know its rich features. Following that, we will move ahead with account creation and explore various Geographical Maps available for integration into our project. Thereafter, we will get to know, how to integrate Flask into our development process. Finally, we will delve into the mastery of creating a virtual boundary in our selected area and this will be considered as a secure zone.\nIn the seventh section, we will synchronize the backend and the frontend, weaving them into a cohesive unit. We will begin by retrieving the entire backend data and monitor the server running status. Thereafter the journey continues with a deep dive into the Haversine Formula, a vital tool for finding geographical directions through paired lat/long coordinates. Following that, we will learn to track the device or a child, triggering an immediate alert to their guardians the moment they breach the virtual boundary. All these information will be seamlessly available in our user-friendly dashboard, providing a comprehensive and intuitive experience.\nIn the eight section, our main goal will be making our project live on the internet, enabling anyone to reach our dashboard remotely. With the understanding that our aim is to create a web application entirely free of charge, our initial step involves investigating a no-cost Python-based hosting provider where we can upload our entire project. As far as, Firebase is concerned, you may be aware that, we are utilizing a free Firebase account for our database. But, if we need to store these real-time data permanently, an upgrade to a paid Firebase plan with a recurring fee is necessary. So, as a developer, we should always find a way to fix these types of hurdles. Hence, we will be writing our own app script code to fetch all the upcoming data from the firebase and store them into Google Sheets. This approach ensures that all valuable GPS data is meticulously organized in a tabular format, providing a robust data repository that can be harnessed for various purposes in the future.\nIn the ninth section, we'll reap the rewards of our efforts. We will do the live demonstration of our final project, showcasing its performance with real-time data.\nAnd, once we complete all this, we will conclude by providing a concise summary of the entire project.\nEach video in the course will teach you new concepts and techniques which you may apply to any of your projects immediately. This course assumes just a basic knowledge of programming and you can leave the rest to us. I will guide you through each concept, breaking down complex ideas into step-by-step explanations.\nDon’t let technical errors hold you back from achieving your goals. If you ever need help, simply post your question in the question and answer section and our dedicated support team will get back to you within 24 hours. They are available to assist you 6 days a week, from Monday to Saturday.\nI will also share the complete source code with you, so that you can easily replicate the project. All lectures are accompanied by English subtitles, ensuring clear and comprehensive understanding.\nIn case, if you don’t like the course, don’t worry at all, you are always protected by 30 days, no questions asked, money back guarantee.\nAlright, so at the end of the day, you have got nothing to lose. So join me in this incredible journey, into the world of full stack web development and take your technical skills to the next level. If you enroll now, you'll take advantage of this limited-time offer at this special price.",
      "target_audience": [
        "This course has been specifically designed with beginners in mind, making it accessible to individuals with basic knowledge of computer science.",
        "Whether you are just starting out or have a foundational understanding of the subject, you can confidently enroll in this course.",
        "Our curriculum takes into consideration the needs of learners at various skill levels, providing clear explanations and step-by-step guidance to ensure a smooth learning experience for everyone.",
        "Don't hesitate to join, as this course is tailored to support your learning journey from the ground up.",
        "If you're eager to undertake exciting projects with your Raspberry Pi, then this project is just right for you.",
        "This course is perfect for individuals aspiring to construct a comprehensive full-stack project right from the ground up."
      ]
    },
    {
      "title": "Mastering 8086 Microprocessor and Assembly language Programs",
      "url": "https://www.udemy.com/course/mastering-8086-architecture-and-assembly-language-programs/",
      "bio": "Learn the concepts of 8086 architecture,instruction set,assembler directives and assembly language programming",
      "objectives": [
        "Introduction and Architecture of 8086",
        "8086 Bus cycles and Timing diagrams",
        "Instruction set of 8086 microprocessor and Assembler Directives",
        "Assembly Level Language programming for the 8086 microprocessor"
      ],
      "course_content": {
        "Introduction to 8086 architecture Architecture": [
          "Introduction",
          "8086 Microprocessor Architecture",
          "Register organization of 8086 microprocessor",
          "pin diagram of 8086 microprocessor",
          "Physical memory organization of 8086 microprocessor",
          "Memory map of 8086 microprocessor",
          "I/O address capability or I/O address map for 8086"
        ],
        "Timing diagrams of 8086": [
          "8086 system bus structure or Bus operation of 8086",
          "Minimum mode configuaration of 8086",
          "8284 clock generator",
          "Minimum mode 0f 8086 Timing diagrams for reading and writing (input and output)",
          "Maximum mum configuration for 8086",
          "Maximum mode Timing diagrams for reading and writing (input and output) for 8086"
        ],
        "Intruction set of 8086 microprocessor": [
          "Introduction to Instruction set",
          "Addressing modes of 8086(register,immediate,direct,register indirect addr modes)",
          "Addressing modes:Based,Indexed ,based indexed Addressing",
          "Addressing modes contd., string,relative,implied addressing modes",
          "classification of instructions",
          "data transfer instructions-Usage of MOV instruction",
          "data transfer instructions- XCHG,LES",
          "LDS and LES instruction in data transfer type",
          "Arithmetic instructions--ADD,ADC",
          "MUL and IMUL instructions in arithmetic type",
          "DIV and IDIV instructions in arithmetic type",
          "INCREMENT and DECREMENT instructions in arithmetic",
          "DAA instruction in 8086",
          "DAS instruction in 8086",
          "CBW and CWD instructions in 8086",
          "ASCII instructions--AAA and AAS",
          "ASCII instructions --AAM and AAD",
          "logical operations-AND operation",
          "Logical operations-AND, OR ,XOR,NOT,NEG instructions",
          "CMP instruction in 8086",
          "TEST instruction in 8086",
          "Rotate instructions-RCR,ROR,ROL",
          "Shifting of Instructions-SAR,SAL,SHR",
          "Transfer of control or Branch Instructions (Jump vs Call instructions)",
          "Different types of jump instructions",
          "Different types of LOOP instructions",
          "Different types of CALL instructions",
          "String manipulation type instructions",
          "Flag manipulation of instructions",
          "stack related instructions (PUSH,POP,PUSHF,POPF)",
          "Assembler directives"
        ],
        "Assembly Level Language programming": [
          "Intoduction Assembly language and its format",
          "Assembly language flow chart steps",
          "Assembly language programming development tools",
          "Assembly language programming for 8 bit ADDITION/SUBTRACTION/MULTIPLICATION/DIV",
          "ALP for 16 bit ADD/SUB/MUL/DIV and 32 bit ADDITION & SUBTRACTION programs",
          "Write an ALP for 32 bit addition and subtraction"
        ],
        "Interrupts and Interfacing": [
          "Need of an Interrupt",
          "Classification of interrupts'",
          "Interrupt Service Interrupt in 8086",
          "Interrupt Vector Table",
          "programmable peripheral interface 8255A",
          "Features of 8255A Porgrammable peripheral interface",
          "PIN Diagram of 8255A Porgrammable peripheral interface"
        ]
      },
      "requirements": [
        "No prior experience required but its useful those who are studying Electrical,Electronics  &Computer science students."
      ],
      "description": "In this course, you will learn all the information regarding the 8086 microprocessor and its assembly language programming techniques and programs. It is a well-suited course for those who are appearing for engineering exams at your responding universities.\nBefore going to dive into the embedded systems field, every engineer must have knowledge of microprocessors and microcontrollers. Once you learn all these concepts, it will be easy to learn the design aspects in the embedded area.\nSection1\nIntroduction to 8086 microprocessor\n8086 Microprocessor Architecture\nRegister organization of microprocessor\nPin diagram of 8086 microprocessor\nPhysical memory organization\nMemory organization of 8086\nMemory map of the 8086\nI/O address capability\nSection2\nSystem bus structure\nGeneral bus cycle operation\nMaximum mode timing diagram\nMinimum mode timing diagram\n8284 clock generator\n8288 bus controller\nSection3\nInstruction set of a microprocessor\nAddressing modes of 8086\nData transfer instructions\nArithmetic instructions\nBCD instructions\nDecimal and ASCII instructions\nLogical and shifting instructions\nConditional and unconditional instructions\nStack instructions\nAssembler directives\nSection4\nIntroduction to the Assembly Language Program\nAssembly language format\nFlow chart method in assembly language\nAssembly language program of 8-bit addition\nAssembly language program of 8-bit subtraction\nAssembly language program of 8-bit multiplication\nAssembly language program of 8-bit division\nAssembly language program of 16-bit addition, subtraction, multiplication and division\nAssembly language program of 32-bit addition and subtraction",
      "target_audience": [
        "This course is foundation for entering into Embedded systems field and also knowing about the processors is mandatory."
      ]
    },
    {
      "title": "Building SDRAM Controller in Verilog from Scratch",
      "url": "https://www.udemy.com/course/building-sdram-controller-in-verilog-from-scratch/",
      "bio": "Using Vivado 2024",
      "objectives": [
        "Architecture of 3rd Gen SDRAM memories",
        "Building Initialization, Write, Read modules from scratch",
        "Building Self refresh & Auto refresh modules",
        "Mode Register usage & Understanding Write and Read transactions of SDRAM",
        "Use Micron SDRAM model to test codes"
      ],
      "course_content": {
        "Introduction": [
          "DRAM Resources",
          "How Single DRAM Cell write operate",
          "How Single DRAM Cell read operate P1",
          "How Single DRAM Cell read operate P2",
          "Why periodic refresh is required in DRAM P1",
          "Why periodic refresh is required in DRAM P2",
          "Understanding First Generation DRAM controllers P1",
          "Understanding First Generation DRAM controllers P2",
          "Understanding First Generation DRAM controllers P3",
          "Understanding First Generation DRAM controllers P4",
          "Self Evaluation Exercise"
        ],
        "Day 2 : Overview of DRAM Generations": [
          "Second Generation of DRAM P1",
          "Second Generation of DRAM P2",
          "Second Generation of DRAM P3",
          "Third Generation of DRAM",
          "Internal Block Diagram of SDRAM Controller",
          "How we proceed with Course",
          "Self Evaluation Exercise"
        ],
        "Day 3 : DRAM Initialization": [
          "Why Initialization is required ?",
          "Initialization Steps",
          "Building init module flowchart",
          "Building Initialization module P1 - Ports",
          "Building Initialization module P2 - 150uS delay",
          "Building Initialization module P3 - Wait cycle counter",
          "Building Initialization module P4 - Next State FSM",
          "Building Initialization module P4 - Output values",
          "Testing Initialization module P1",
          "Testing Initialization module P2",
          "INIT Design Code",
          "INIT TB Code",
          "Micron SDRAM Model",
          "Self Evaluation Exercise"
        ],
        "Day 4 : Building Auto refresh Generator": [
          "Understanding Refresh P1",
          "Understanding Refresh P2",
          "Understanding Auto-refresh P1",
          "Building Auto refresh Genrator : Flowchart",
          "Building Auto refresh Genrator : Refresh Counter",
          "Building Auto refresh Genrator : Delays",
          "Building Auto refresh Genrator : Next State FSM",
          "Building Auto refresh Genrator : Output Logic",
          "Adding TB for auto refresh generator",
          "AREF Design Code",
          "AREF TB Code",
          "Self Evaluation Exercise"
        ],
        "Day 5 : Self refresh Mode": [
          "Understanding Self Refresh",
          "Understanding FSM",
          "Building Self Refresh Generator",
          "Adding TB for Self refresh generator module",
          "SREF Design Code",
          "SREF TB Code",
          "Self Evaluation Exercise"
        ],
        "Day 6 : Mode Register": [
          "Understanding Mode register transactions P1",
          "Understanding Mode register transactions P2",
          "Mode Register bits P1",
          "Mode Register bits P2",
          "Mode Register bits P3",
          "Self Evaluation Exercise"
        ],
        "Day 7: Write": [
          "Understanding DQM pin usage",
          "Write Transaction P1",
          "Write Transaction P2",
          "Write Transaction P3",
          "Write FSM",
          "Building Write Module P1",
          "Building Write Module P2",
          "Building Write Module P3",
          "Building Write Module P4",
          "Testing Write Module",
          "WR Design Code",
          "WR Testbench Code",
          "Self Evaluation Exercise"
        ],
        "Day 8 : Read Module": [
          "Understanding Read Transactions P1",
          "Understanding Read Transactions P2",
          "Building Read Module P1",
          "Building Read Module P2",
          "Building Read Module P3",
          "Testing Read Module",
          "RD Design Code",
          "RD TB Code",
          "Self Evaluation Check"
        ],
        "Day 9: Modifying Write Module": [
          "Ways to handle intermediate refresh requests P1",
          "Ways to handle intermediate refresh requests P2",
          "Building Write Controller P1",
          "Building Write Controller P2",
          "Building Write Controller P3",
          "Testing Updated Write Module",
          "Write Design Code",
          "Write TB Code",
          "Self Evaluation Check"
        ],
        "Day 10 : Building Controller": [
          "Understanding Controller Operation P1",
          "Understanding Controller Operation P2",
          "Building Controller P1",
          "Building Controller P2",
          "Building Controller P3",
          "Building Controller P4",
          "Controller Design Code",
          "Connecting all modules together P1",
          "Connecting all modules together P2",
          "Testing top module P1",
          "Testing top module P2",
          "Top Design Code",
          "Top TB code",
          "Self-Evaluation Exercise"
        ]
      },
      "requirements": [
        "Fundamentals of Digital Electronics and Verilog"
      ],
      "description": "This course offers a comprehensive journey into SDRAM controller design, starting with Day 1, where learners explore the fundamentals of DRAM cell operation, including how read and write operations work and why periodic refresh is mandatory, followed by an overview of the evolution of DRAM controller generations and the basics of first-generation controller design. Day 2 delves deeper into the architecture of second and third-generation DRAMs, introduces the internal block diagram of an SDRAM controller, and outlines the course design roadmap. On Day 3, participants learn the importance of SDRAM initialization, build flowcharts and FSMs, and implement the INIT module with complete testbench coding. Day 4 focuses on auto-refresh mechanisms, covering the design and verification of the refresh FSM and control logic. Day 5 explains how SDRAM enters low-power self-refresh mode, guiding learners through FSM design and testbench development for the self-refresh generator. Day 6 explores mode register programming, detailing the transactions and configuration of key parameters such as burst length and CAS latency. Day 7 covers write path design, highlighting DQM pin usage, write timing, FSM construction, and testbench verification. Day 8 addresses read path design by teaching SDRAM read timing and the development and testing of the read module. Day 9 introduces enhanced write control by addressing how to manage write operations during auto-refresh events and building a refresh-aware write controller. Finally, Day 10 brings all components together—INIT, AREF, SREF, WRITE, READ, and MODE—into a unified SDRAM controller design, preparing learners with the foundational knowledge required to transition confidently into DDR-based memory system design.",
      "target_audience": [
        "Anyone wish to work with modern memories."
      ]
    },
    {
      "title": "Make 3 IoT Projects - Beginner, Intermediate & Advanced 2025",
      "url": "https://www.udemy.com/course/getting-stared-with-asus-tinker-board/",
      "bio": "OS Installation, Full Fledged PC, Remote Access along with Beginner, Intermediate and Advanced Level Project Development",
      "objectives": [
        "Learn about the Asus Tinker Board's specifications and how it compares to Raspberry Pi.",
        "Discover how to burn an OS image to a microSD card and make it bootable.",
        "Assemble hardware components to use the Tinker Board as a personal computer.",
        "Access the Linux terminal of the Tinker Board remotely using Putty.",
        "Master key Linux commands for daily tasks via the command-line.",
        "Explore virtual computing and remotely access the Tinker Board’s GUI on Windows.",
        "Understand GPIO pins and learn how to control them programmatically.",
        "Start with a basic light control project to dive into physical computing.",
        "Build an automatic garden light system using sensors for intelligent control.",
        "Create an advanced Home Automation system to control 4 appliances remotely.",
        "Learn to transfer files from a Windows PC to the Tinker Board using FTP."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Asus Tinker Board",
          "Asus Tinker board vs Raspberry Pi 4"
        ],
        "OS installation & IP scanning": [
          "Burning the OS image to SD card",
          "Using Asus Tinker Board as a full-fledged PC",
          "Understanding IP Scanner",
          "Auto scanning IP & Putty"
        ],
        "Useful Linux Commands": [
          "Important Linux Commands Part 1",
          "Important Linux Commands Part 2"
        ],
        "Remote Desktop and GPIO": [
          "Accessing remote desktop of the Tinker Board",
          "Exploring the graphical user interface of Tinker Board",
          "Tinker Board GPIO",
          "Reference - Tinker Board GPIO pin structure"
        ],
        "Getting started with Physical computing": [
          "Hands-on Physical computing with Tinker Board",
          "Circuit diagram - LED sequence",
          "Understanding the code LED sequence",
          "Source Code - LED sequence",
          "Real-Time Demonstration - LED sequence"
        ],
        "Automatic garden lights": [
          "Introduction - Automatic garden lights",
          "Hardware requirements - Automatic Garden Light",
          "Understanding the circuit diagram - Automatic Garden Light",
          "Circuit Diagram - Automatic garden light",
          "Understanding the code - Automatic Garden Light",
          "Source code - Automatic Garden light",
          "Real-time Demonstration - Automatic Garden light"
        ],
        "Home Automation": [
          "Introduction to Home Automation",
          "Understanding IoT and the dashboard used",
          "Understanding the circuit diagram - Home Automation",
          "Circuit Diagram Home Automation",
          "IoT dashboard account creation and setup",
          "Understanding the code - Home automation",
          "Source Code - Home Automation",
          "Real-time Demonstration - Home Automation"
        ],
        "Remote File Transfer": [
          "Transfer file from windows to Tinker Board",
          "Conclusion"
        ],
        "Coding Exercise": [
          "Write a program to calculate the average of numbers in given list.",
          "Write a program to display twin prime pairs below a given number N.",
          "Write a program to check if a list is an arithmetic progression.",
          "Write a program to convert seconds into hours, minutes, and seconds.",
          "Write a program to calculate the number of words and the number of characters present in a string.",
          "Write a program to find the next prime number greater than a given number.",
          "Assignment related to area calculation"
        ]
      },
      "requirements": [
        "Basic knowledge of computers."
      ],
      "description": "Don't let errors hold you back! Our dedicated technical support team is here to assist you every step of the way. Whether you have a question or concern, simply post in the Question and Answer section and one of our experts will get back to you within 24 hours. They are available from Monday to Saturday, ensuring you complete satisfaction for all the errors you encounter.\nApart from that, your money is 100% safe as the course comes with a 30-days, no-questions-asked Money Back Guarantee. For any reason, if you are not happy with the course, the entire amount will be refunded back to your bank account.\nSo at the end of the day, you have nothing to lose. Enroll in the course with confidence and complete peace of mind and take your technical skills to the next level.\nHello Everyone, I would like to introduce you to a brand new online course “Getting started with Asus Tinker Board”. I have always been a firm believer in learning by doing and in this course, you will learn what you need to know by hands-on experience. You don’t need any special knowledge except basic computer skills to get started with the course. Every one of you comes from a different background and hence the course is crafted from basic to advanced level with minute details in every lecture.\nThe course is divided into 8 sections. In the first section, you will learn in detail about the Asus tinker board and how it is different from its competitor Raspberry Pi.\nIn the second section, we will understand how to burn the OS image to the SD card and use the tinker board as a full-fledged PC. Once we are done with this we will go ahead and understand the IP scanner tool and then use the putty application to access the Linux terminal of the Asus tinker board.\nStarting on a Tinker board is not always easy because you don’t necessarily have the habit of using command lines. However, they are essentials and often faster or more efficient than going through the GUI. So in the third section, we will get to know about all the day to day usage Linux commands with practical examples.\nThe fourth section begins with remotely accessing the graphical user interface of the tinker board and understanding the basic GUI applications. Once we are done with this we will go ahead and understand the general-purpose input-output functionality.\nIn the fifth section, we will step into the world of physical computing. We will begin with a basic project where we will learn to program different LEDs and a buzzer. This will help us to understand the GPIO pin structure and how to use them for programming.\nThe sixth section exposes you to the intermediate level of project development. Here, you will learn to build automatic garden lights. This project will solve your day to day problems of manually turning the light ON in the evening and then turning it off again in the morning. You will learn to program and automate things as per your requirements.\nIn the seventh section, we will go ahead with the advanced project where we will learn to build our own home automation project. We will first understand about the IoT and how it is implemented in real-time. You will learn to control your home appliances from anywhere. For example, If you are in the US, you will be able to turn off your lights from the UK.\nFinally, in the eight section, you will come to know how to transfer files remotely from PC to Tinker Board. You will also go through what you have learned so far in the entire course.\nPlease note that the project covered in the course will work on any version of the Tinker Board.\nAll the lectures contain English subtitles for clear and better understanding. If you face any technical issues, please post your query in the question and answer section and I will get back to you within 1 business day.\nAt the end of the course, you will have a solid foundation on tinker board, relay and sensor usage, IoT dashboard implementation, etc. So apart from building this project, you will also find it easy to build any other project of your choice.\nThank You",
      "target_audience": [
        "Ideal for anyone looking to explore and compare the Asus Tinker Board with Raspberry Pi.",
        "Perfect for beginners wanting to dive into physical computing and IoT projects.",
        "Great for those interested in building home automation systems and remotely controlling devices."
      ]
    },
    {
      "title": "PLC Essentials",
      "url": "https://www.udemy.com/course/plc-essentials/",
      "bio": "Empower your skills: PLC Essentials, the first step to become a savvy PLC Programmer!",
      "objectives": [
        "Fundamentals of PLC: Concepts and Standards",
        "PLC Hardware components",
        "PLC programming Elements and Environment",
        "PLC Software Tools and Practices"
      ],
      "course_content": {},
      "requirements": [
        "Understanding basic computer logics and electrical circuits"
      ],
      "description": "Improve your expertise in Industrial Automation by joining our quick and easy course on programmable logic controllers (PLCs). Whether you're new to the field or seeking to enhance your skills, this program is designed to equip you with the essential knowledge required to excel with any PLC system.\nWhat sets this course apart from others is its unique emphasis on independence from specific PLC brands and models. Our goal is to provide you with a solid foundation that transcends any particular platform.\nThroughout multiple chapters, we will go over the core aspects of PLC systems, covering critical topics such as industry standards, hardware components, program elements, environment setup, software tools, and best practices. By mastering these fundamentals, you'll be prepared to tackle any PLC system, regardless of its brand or model.\nWhile the hardware components of PLCs share many similarities, the real distinction lies in the software. Different vendors offer varying degrees of user-friendliness, and navigating their tools can be time-consuming. Our course ensures you understand the hardware and software capabilities of standard PLC systems, enabling you to make informed choices and adapt seamlessly to any specific platform.\nBy the course's conclusion, you will possess a strong grasp of PLC essentials and have a clear understanding of hardware and software functionalities. You'll be fully prepared to embark on your journey of learning and mastering a specific PLC platform with confidence. Begin your path to proficiency today!",
      "target_audience": [
        "This course assumes that you have little or no prior experience with PLCs. It’s intended for:  - Those currently working in manufacturing and process industries and wish to expand their knowledge on automation with PLC. - Technicians, engineers and programmers interested in industrial controls and automation - All engineering students"
      ]
    },
    {
      "title": "Siemens TIA Portal for KTP400 HMI Programming (PLC-SCADA-12)",
      "url": "https://www.udemy.com/course/siemens-tia-portal-for-ktp400-hmi-programming/",
      "bio": "Learn from scratch how to design HMI using TIA",
      "objectives": [
        "Learn how to communicate HMI with PC and PLC using TIA",
        "Learn from scratch how to design HMI using TIA"
      ],
      "course_content": {},
      "requirements": [
        "Basic Fundamentals of Electronics",
        "Knowledge of basic PLC programming using TIA",
        "Hunger for Learning new Technology"
      ],
      "description": "The Human Machine Interface (HMI) is the interface between the process and the operators – in essence an operator’s dashboard. This is the primary tool by which operators and line supervisors coordinate and control the industrial and manufacturing processes in the plant. HMIs serve to translate complex process variables into usable and actionable information.\nDisplaying near real-time operational information is the domain of the HMI. Visual process graphics give meaning and context to motor and valve status, tank levels and other process parameters. HMIs give operational insight into the process and enable control and optimization by regulating production and process targets.\nThis course is specifically designed for the people who wants to learn from very basics that how to design or program SIEMENS HMI. In this course we are using Siemens KTP 400 HMI along with Siemens-TIA(Total Integrated Automation).\nWe have interfaced Siemens S7-1200 PLC with HMI in order to learn monitoring and control of PlC parameters.\nWe have also used Factory IO software in order to simulate industrial application in 3d environment and we have controlled and monitored these industrial application by Siemens HMI.\nThis course will start from very scratch such as how to create a switch in HMI and it’ll take you up to very advance features of HMI such as Alarms, Recipe, Trends etc.\nAfter learning this course you will be able to design and install Siemens HMI in your project or industrial application.",
      "target_audience": [
        "Engineering Students",
        "Working Engineers-Maintenance, Production or Supervisors",
        "Industrialist"
      ]
    },
    {
      "title": "Mastering the design of professional PCB using EasyEDA",
      "url": "https://www.udemy.com/course/mastering-the-design-of-professional-pcb-using-easyeda/",
      "bio": "Design and order your PCB boards with an easy way and order them from the cheapest factory",
      "objectives": [
        "By the end of this course you will know how to order your design with cheapest way",
        "You will be easily able to create double layer PCBs",
        "You will know how to create Surface mount PCB",
        "You will design some projects and sell them",
        "All problems for designing the PCB's will be solved with an easy way",
        "I will show how you can choose the correct pcb components for your project",
        "you will learn how to create your component package if it is not exist",
        "Also you will learn how to design many projects on the same board to make save",
        "I will teach you how to get your Gerber files and order your pcb by them"
      ],
      "course_content": {},
      "requirements": [
        "Electronic basics only"
      ],
      "description": "Breadboards are great for prototyping circuits, but they aren’t so good for actually using the thing you’re building. At some point, you’ll probably want to make a project more permanent. The best way to do that is to put it on a PCB.\nIn this course you will learn the designing of a professional PCB boards with the most easiest online tool\nAlso I will teach you how to order your board from the most cheapest factory with high quality and with a good offer for the shipment\nyou will learn all features that makes you able to design any project small or large",
      "target_audience": [
        "Engineers",
        "Hardware hoppiest"
      ]
    },
    {
      "title": "Introduction to openHAB 3.0",
      "url": "https://www.udemy.com/course/introduction-to-openhab-3/",
      "bio": "Learn the fundamentals of openHAB 3.0 and build home automation solutions from scratch",
      "objectives": [
        "Learn the fundamentals of Home Automation",
        "In-depth understanding of concepts in openHAB",
        "Learn how to set up and configure openHAB 3.0",
        "UI-driven and File-based configurations in openHAB 3.0",
        "Home Automation using Rules",
        "Design user interfaces for your smart home"
      ],
      "course_content": {
        "Getting Started with openHAB 3.0": [
          "Introduction to the Course",
          "Home Automation Fundamentals",
          "What is openHAB?",
          "Functional View of openHAB Part 1",
          "Functional View of openHAB Part 2",
          "Boards best suited for openHAB",
          "Quiz 1",
          "Assignment 1"
        ],
        "Setting up openHAB 3.0": [
          "Installation Overview",
          "Install openHAB on Raspberry Pi 4",
          "Initial Steps with openHAB 3.0",
          "openHAB 3.0 UI Overview",
          "In-depth Overview of Main UI Dashboard Part 1",
          "In-depth Overview of Main UI Dashboard Part 2",
          "Working on openHAB 3.0 in Raspberry Pi from the PC",
          "Assignment 2"
        ],
        "In-depth Overview of openHAB 3.0": [
          "UI-driven Configuration",
          "File-based Configuration Part 1",
          "File-based Configuration Part 2",
          "Sitemaps",
          "Persistence",
          "Rules",
          "Scripts",
          "Assignment 3"
        ],
        "Capstone Project - Home Security and Thermostat System using openHAB 3.0": [
          "Project Overview",
          "Project Setup: MQTT Configuration Part 1",
          "Project Setup: MQTT Configuration Part 2",
          "Interfacing Components and Coding",
          "Updated method for Connecting ESP32 to OpenHAB",
          "Creating the Main UI Dashboard & Integrating Rules",
          "Project Implementation and Upgrades",
          "Further Learnings",
          "Course Conclusion",
          "Assignment 4"
        ]
      },
      "requirements": [
        "Basic understanding of electronics and related concepts",
        "Working knowledge of the Raspberry Pi and ESP32 Boards",
        "Basic experience with Arduino IDE, though prior experience with programming languages is not mandatory"
      ],
      "description": "JUNE 2022 Update\nUpdated method for Connecting ESP32 to OpenHAB\nHello learners!\nWelcome to MAKERDEMY's “Introduction to openHAB 3.0” course.\nThis is an introductory course on the popular home automation platform, openHAB. Do you wish to build your own customized home automation system that is cloudless, technology and manufacturer-independent? Want to explore more and learn what makes openHAB so cool?\nThis course is a one stop destination for an easy introduction to openHAB. By the end of the course, you would have internalized all the concepts behind openHAB 3.0 and its features. You would have implemented a capstone project in openHAB using the Raspberry Pi 4 and ESP32 boards, as well as implement mini-projects and assignments that help you understand concepts with ease. At the end of the course, you will be in a position to come up with your own Home Automation solutions using openHAB 3.0.\nThroughout the course, we have provided a curated collection of original resources. These resources include links to documents for in-depth learning, links, videos, and more. At MAKERDEMY, we have a dedicated instructor team who will promptly answer any of your course-related queries.\nSo, what are you waiting for?! Come, join me in this course. I look forward to being your instructor for this course and turn you into a home automation expert!",
      "target_audience": [
        "Any developer or an engineer who wishes to work with automation platforms in general",
        "Home automation enthusiasts who wish to control all aspects of their smart home products and devices",
        "Electronics hobbyists who look forward to tinkering with programming boards like the Raspberry Pi, and work on automation tasks for smart homes"
      ]
    },
    {
      "title": "PiBot: Build Your Own Raspberry Pi Powered Robot",
      "url": "https://www.udemy.com/course/raspberry-pi-pibot/",
      "bio": "A step-by-step guide to building your own small, mobile robot with a Raspberry Pi minicomputer.",
      "objectives": [
        "By the end of this course, youi will have the knowledge necessary to construct a small, mobile robot with a Raspberry Pi brain"
      ],
      "course_content": {},
      "requirements": [
        "Raspberry Pi minicomputer",
        "Misc. robot-building parts (wheels, servos, etc.)",
        "some knowledge of Linux and Python is helpful"
      ],
      "description": "Since the Raspberry Pi was released in 2012, it has changed the game for both professionals and hobbyists alike. Its small size (about the size of a credit card) and low price have made it a popular alternative to the Arduino microprocessor for projects ranging from home automation to web servers to mobile image processing. Its ARM processor allows it to run a version of Debian Linux, and it can be configured to work with the physical world via onboard GPIO pins and optional extra equipment. The newest version can even run both Windows 10 and a full Ubuntu distribution.\nPiBot: Build Your Own Raspberry Pi Powered Robot, is meant to be a companion course to the bestselling book of the same name on Amazon. Together with the book, students will be taken step-by-step through the process of building one, from installing the libraries needed to access the GPIO pins to configuring a wireless adapter to some suggestions (not explicit instructions) on how to construct the bot's body. When you have finished, you will have a working robot that you can log into and control remotely via command line, with the possibility of using a shell or a Python script. All course participants will receive an electronic copy of the book to go along with the course. The newest updated version of the course includes information regarding the Raspberry Pi version 2 and how to interact with servos using a different library, PiGPIO.\nIf you would like to do something impressive with your Pi, but learn better from seeing and hearing rather than reading, this course is for you!",
      "target_audience": [
        "Hobbyists wanting to experiment further with the Raspberry Pi"
      ]
    },
    {
      "title": "PIC Microcontroller Interfacing with Graphical LCD",
      "url": "https://www.udemy.com/course/glcd-graphical-liquid-crystal-display-pic-microcontroller-interfacing/",
      "bio": "Design dynamic visual interfaces by learning to program 128x64 Graphical LCDs with PIC microcontrollers.",
      "objectives": [
        "Control GLCD using Different GLCD Commands",
        "Know how GLCD (Graphical Liquid Crystal Display) function and learn about it’s internal structure",
        "Write code for GLCD (Graphical Liquid Crystal Display) display",
        "Embed code in the design",
        "Display numbers and letters on GLCD (Graphical Liquid Crystal Display) Display",
        "Write a Moving numbers, letters and words on GLCD (Graphical Liquid Crystal Display)",
        "Program PIC Microcontroller like a champ",
        "Understand the principles of programming micro-controllers",
        "Connect your PIC Microcontroller to GLCD (Graphical Liquid Crystal Display) Display and control it.",
        "Understand basic principles in electronics design."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Seaction Intro",
          "Introduction",
          "Introductory Interview: Integrating Graphical LCDs with PIC Microcontrollers"
        ],
        "Hardware and Software Requirements": [
          "Hardware and Software Requirements",
          "Very Important Note: Review Process",
          "Software Requirements",
          "What is GLCD Display"
        ],
        "GLCD Datasheet": [
          "GLCD Datasheet"
        ],
        "GLCD Interfacing with PIC Microcontroller Wiring": [
          "GLCD Interfacing with PIC Microcontroller Wiring",
          "Quiz",
          "Wiring the GLCD to a PIC Microcontroller"
        ],
        "First Code Initialize and Fill GLCD": [
          "First Code Initialize and Fill GLCD",
          "Initializing and Testing the GLCD"
        ],
        "Start Drawing": [
          "Draw a dot and a line then Clear GLCD",
          "Rectangle box and circle",
          "Drawing a Vertical Line and a Horizontal Line",
          "Drawing Shapes and Lines on GLCD",
          "Drawing Shapes on the GLCD"
        ],
        "Writing Char and Texts and Dealing with Fonts": [
          "Write Char and Text and set Font",
          "Displaying Text on the GLCD"
        ],
        "Dealing with Images": [
          "Display Images on GLCD",
          "Displaying an Image on the GLCD"
        ],
        "Understanding GLCD Dots Arrangement": [
          "Set Page and Set Sides",
          "Working with Text, Fonts, and Images on GLCD"
        ],
        "Extra Information about PIC Microcontroller": [
          "What is PIC Microcontroller",
          "Understanding the PIC Microcontroller"
        ]
      },
      "requirements": [
        "Download and Install Proteus Professional",
        "Download and Install MikroC Pro!",
        "Download The course Material in PDF and Print them if possible",
        "Students must have the knowledge of basic electronics"
      ],
      "description": "Bring Your Embedded Projects to Life with Stunning Visual Interfaces\nGo beyond simple characters—learn to control full graphic displays using PIC microcontrollers. In this hands-on course, you’ll unlock the ability to build custom UIs, draw shapes, plot sensor data, and create interactive interfaces with a GLCD (Graphical LCD).\nWhy This Course?\nMost microcontroller courses stop at basic LCDs. But in real-world products—industrial dashboards, instruments, and consumer electronics—graphical displays are standard. This course teaches you how to interface and program a Graphical LCD (GLCD 128x64) with a PIC microcontroller using embedded C, so you can show live data, design custom screens, and impress with visual polish.\nWhether you're working on a professional prototype or an academic project, this is the course that elevates your hardware design from functional to professional.\nWhat You’ll Learn\nThe internal structure and working of a graphical LCD (e.g., KS0108)\nHow to wire a GLCD to your PIC microcontroller (pin mapping and setup)\nProgramming graphics primitives: pixels, lines, boxes, text rendering\nCreating custom characters and bitmaps on screen\nReal-time display of sensor data or menu systems\nHow to organize graphics code for modular, reusable design\nReal Skills You’ll Gain\nUnderstand the GLCD architecture and pin configuration\nProgram with KS0108 driver-compatible GLCDs (128x64)\nDraw shapes, icons, and custom graphics\nDisplay sensor readings in real time as visuals\nUse graphical libraries for PIC microcontrollers\nCreate splash screens and navigation menus\nStructure code for scalable display applications\nTroubleshoot and optimize for clarity, contrast, and power\nWhat You’ll Build\nA real-time data monitor that visually displays temperature, light, or any sensor input\nA graphical menu or selection screen for a device interface\nCustom animations or splash screens for microcontroller-based products\nA visual debugging interface for your circuits and sensors\nWho Should Take This Course\nIntermediate-level embedded programmers ready to expand their display skills\nStudents working on capstone or final-year electronics projects\nProduct developers building user-facing microcontroller systems\nEngineers prototyping devices with visual dashboards\nHobbyists aiming to create graphical IoT interfaces or smart gadgets\nWhat’s Inside the Course\nModule 1: Introduction to GLCD Hardware & Setup\nModule 2: Writing Initialization and Display Drivers\nModule 3: Drawing Pixels, Lines, Circles, and Rectangles\nModule 4: Displaying Text and Custom Fonts\nModule 5: Interfacing GLCD with Analog Sensors\nModule 6: Animation, Menus, and Real-World Applications\nBonus: Troubleshooting Techniques and Library Integrations\nBefore & After\nBefore this course: You’re limited to 16x2 text-based LCDs, struggling to display more than a few lines of data.\nAfter this course: You can build fully visual embedded interfaces, simulate dashboards, and enhance your microcontroller projects with sleek graphic output.\nTools You’ll Need\nA PIC development board (e.g., PIC16F877A or PIC18F4550)\nKS0108-compatible GLCD (128x64)\nResistors, potentiometer, wires, breadboard\nMPLAB X IDE and XC8 Compiler\nOptional: Sensor modules for real-time display integration\nWhy Learn from Us?\nWith over 250,000 students worldwide, the Educational Engineering Team has taught microcontroller mastery for over a decade. We specialize in taking you beyond theory—into the practical, hands-on engineering that makes careers and products successful.\nCertification & Support\nCertificate of Completion to showcase your skills\nDirect access to Q&A and support forums\nLifetime updates and access to future lessons\nEnroll Now – Take Control of Your Display Game\nReady to stop printing plain text and start building graphic-rich interfaces?\nJoin now and take the next step in your microcontroller journey—start programming Graphical LCDs with PIC today.",
      "target_audience": [
        "Anyone Who Wants to Control GLCD",
        "Anyone interested in Interfacing GLCD (Graphical Liquid Crystal Display)  with PIC Microcontroller",
        "Anyone Who Wants to Learn how to send Commands Such Clear, Move Text, Turn GLCD On and Off",
        "Anyone who wants to learn how to output different type of data on GLCD",
        "Anyone with a curiosity for making electronics",
        "Engineering students",
        "Technology hobbyists",
        "Computer programmers",
        "Microcontroller Geeks"
      ]
    },
    {
      "title": "Altium Course: Learn Altium Designer Today",
      "url": "https://www.udemy.com/course/altium-course-learn-altium-designer-today/",
      "bio": "Take your PCB design skills to the next level",
      "objectives": [
        "Learn how to use Altium software to create professional PCB designs",
        "Gain an edge in your industry and increase your income.",
        "You will learn a lot about PCB design and get the skills you need to create your own PCBs.",
        "Become the best PCB designer in your company or start your own business as a freelancer."
      ],
      "course_content": {
        "Introduction and Getting Started": [
          "Section Intro:",
          "Introduction",
          "Planning Session – Introducing Altium Designer for PCB Projects",
          "Summary:",
          "Reding Material"
        ],
        "Note": [
          "Section Intro:",
          "Note",
          "Quiz",
          "Understanding Altium Designer and Basic PCB Design Concepts",
          "Summary:",
          "Reading Material"
        ],
        "Know Your Way Around Altium": [
          "Section Intro:",
          "The Design",
          "Creating a New PCB Project",
          "Adding a Schematic to the Project",
          "Setting the Document Options",
          "Accessing the components",
          "Exploring the search results",
          "Understanding the supplier Tier",
          "Acquiring from the manufacturer part search panel to the workspace",
          "Acquiring the multivibrator parts",
          "Placing the multivibrator parts",
          "Working with the properties panel during placement",
          "Quiz",
          "Placing the capacitors",
          "Placing from the components panel onto the schematic",
          "Placing the transistors",
          "wiring up the circuit",
          "Editing in the Properties panel",
          "Placing the resisitors",
          "the Active bar",
          "Nets and Net Labels",
          "Adding Net Labels",
          "Setting Up Project Option",
          "Checking the electrical properties of your schematic",
          "Setting up the connection matrix",
          "Configuring the Class generation",
          "Setting Up the comparator",
          "Verifying the project to check for errors",
          "Quiz",
          "Creating a new PCB",
          "Adding a new board to the project",
          "Configuring the board shape and location",
          "Setting the origin and the grid",
          "Editing the board shape",
          "Editing the board shape part II",
          "Configuring the defaults",
          "Transferring the design",
          "Transfering the design from schematic capture of pcb layout",
          "Displaying Layers - View Configuration",
          "Configuring the display of layers",
          "Physical layers and the layer stack manager",
          "Configuring the Grid",
          "Suitable Grid Settings",
          "Setting the snap grid",
          "Quiz",
          "Setting up the design rules",
          "Routing width design rules",
          "Defining the electrical clearance constraint",
          "Defining the routing via style",
          "Existing design rule violations",
          "Review the design rules",
          "Positioning the components on the PCB",
          "Component positioning and placement options",
          "Positioning Components",
          "Interactively routing the board",
          "Preparing for interactive routing",
          "Time to Route",
          "Interactive routing modes",
          "Feedback during interactive routing",
          "Modifying and rerouting existing routes",
          "Rearrange existing routes",
          "Interactive sliding tips",
          "Activeroute automated interactive routing",
          "Working with activeroute",
          "Verifying your board design",
          "Verifying your board design (part 2)",
          "Configuring the rule checker",
          "DRC rules to check",
          "Running a design rule check (DRC)",
          "Locating the error condition",
          "Understanding the error condition",
          "PCB Rules and Violations Panel",
          "Resolving the violations",
          "Clearance violations",
          "Silk to silk clearance violation",
          "Viewing your board in 3d",
          "Output documentation and project release",
          "Available output types",
          "Individual outputs or an output job file",
          "Configuring the gerber files",
          "Configuring the bill of materials",
          "Preparing the output BOM",
          "Project Release",
          "Project History",
          "Viewing the design in a web browser",
          "Document Commenting",
          "Project Share",
          "PCB Project Design and Schematic Setup in Altium",
          "Quiz",
          "Summary:",
          "Redaing Material"
        ],
        "PCB Design: Make Arduino Nano using Altium Designer": [
          "Section Intro:",
          "Download and Installing Altium Design",
          "Altium Designer Interface Introduction",
          "Create Component Symbol & Add Pins",
          "Finishing Schematic",
          "Creating Your Componenets Symbol - Making Footpring and PCB Layout",
          "Link footprint with Schematic Library",
          "Adding the new Library File to your Desi",
          "Creating the Atmega Component Symbol",
          "Creating the Atmega PCB Footprint",
          "Adding Components and Placing them on Schematic",
          "ATMEGA Schematic Connect",
          "USB Connector Schematic",
          "Header Pins for Nano Board",
          "Adding Resistors LED Indicators Voltage Regulator",
          "Annotating and Compiling Project",
          "Getting Started with the PCB Design Solve Errors",
          "Drawing the Board Shape",
          "Placing PCB Items Atmega and Header",
          "ICSP SWITCH Resistor array crystal microusb",
          "FTDI Regulator Capacitors",
          "Manual Routing",
          "Autorouting",
          "How to make the auto routing work for you",
          "Improve AutoRouting Trial and Error",
          "Greber File and Bill of Material",
          "Designing an Arduino Nano PCB in Altium Designer",
          "Quiz",
          "Summary:",
          "Reding Material"
        ],
        "Practice Test": [
          "Altium Designer Essentials - Practice Test"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "Design and Create Any Custom Component in Altium Designer": [
          "Section Intro:",
          "Download and Install Altium Designer",
          "Create Component Symbol & Add Pin",
          "Finishing the Schematic",
          "Making Footpring and PCB Layout",
          "Link footprint with Schematic Library",
          "6 Adding the new Library File to your Design",
          "Designing and Integrating a Custom Component in Altium Designer",
          "Quiz",
          "Summary:",
          "Reading Material:"
        ],
        "Course Project": [
          "Course Project",
          "Project Review – Designing and Managing PCBs in Altium Designer"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "knows PCB design",
        "willingness to learn"
      ],
      "description": "The Altium Designer Circuit Board Design Course is an online, self-paced course that teaches you how to design PCBs using Altium Designer. In this course, you will learn everything you need to know about Altium. The course covers everything from basic to advanced PCB design topics and includes over 10 hours of video tutorials and hands-on labs.\nAltium Limited is a publicly-traded company that provides PC-based electronics design software for engineers who design printed circuit boards. Founded as Protel Systems Pty Ltd in Australia in 1985, the company has offices in the United States, Australia, China, Europe, and Japan. Altium is a PCB design software that is used by many professionals in the industry. It has a free trial version that can be used to learn the software. The company offers different courses that teach you how to use the software. The course is very comprehensive and covers all aspects of PCB design. If you are looking to learn Altium, I would highly recommend taking one of their courses.\nWhat is Altium Designer?\nAltium Designer is a PCB design software used by engineers all over the world. The software has a steep learning curve, but a great online course can teach you everything you need to know. The course is offered by Altium and covers the basics of PCB design all the way up to more advanced topics. The course is free, so you can't go wrong!\nWhy you should take this course?\nLearn how to use the software for advanced design tasks, including 3D printing.\nDiscover tips and tricks to improve your workflow and get the most out of the software.\nGet practical experience with real-world projects from different industries.\nTake your designs to production, with manufacturing outputs and report generation.\nCreate schematic designs and PCB layouts for single- and multi-board projects.\nUnderstand best practices for Altium design, to help you create high-quality PCBs.\nCourse Benefits:\nCreate more efficient designs.\nDevelop your skills in a fun and interactive way.\nGain a strong understanding of the software and its capabilities.\nGet ahead of the competition.\nGain confidence in your ability to design and create electronic circuits.\nThe course also includes a detailed guide to the Altium Designer software, so you can start designing your own PCBs right away.\nSign up for the Altium Course NOW and take your career to the next level!\nCourse Outline:\nIntroduction to Altium Designer\nBasic PCB Design Concepts\nAdvanced PCB Design Techniques\n3D Printing with Altium\nReal-World Projects\nManufacturing Outputs and Report Generation\nSchematic Design and PCB Layout\nBest Practices for High-Quality PCB Design\nGet your career off the ground with this comprehensive Altium Designer course.\nEnroll now and become a PCB design expert!\n\n\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is a leading team in the Microcontroller Industry, with over 13 years of experience in teaching and practical projects. We strive to share our hands-on experience in these courses, providing step-by-step blueprints on taming both simple and complex topics in easy-to-digest bite-sized videos.\nAshraf:\nEducator, Mechatronics engineer, electronics and programming hobbyist, and Maker.\nCreator of online video courses on the EduEng YouTube Channel with over 4 million views and 20k+ subscribers.\nAuthor of four Microcontroller books.\nFounder and Chief Educational Engineer at Educational Engineering Team.\nPassionate about exploring new trends and technology, and helping educate the world.\nOur online courses have helped over 250,000 people worldwide to improve their skills and careers in the industry.\nCall to Action: Join us and start your journey to mastering Altium Designer today! Enroll now and take your PCB design skills to the next level.\nFAQ:\nWhat is this course about?\nThis course covers the essential steps and knowledge needed to use Altium Designer for PCB design.\nDo I need prior experience to take this course?\nNo prior experience is needed; this course is designed for beginners.\nWhat will I learn in this course?\nYou will learn about PCB design, 3D printing, manufacturing outputs, and more using Altium Designer.",
      "target_audience": [
        "If you have ever wondered how to design a PCB, this course is for you",
        "Anyone who has  interest in electrical engineering",
        "This course is designed for beginners",
        "as well as people who've been doing PCB design for many years."
      ]
    },
    {
      "title": "How to Build Your Own Computer",
      "url": "https://www.udemy.com/course/stress-free-computer-building-on-a-budget/",
      "bio": "Get to know what the different components are and how they all go together before building your own computer.",
      "objectives": [
        "Pick out the parts they need for a new computer.",
        "Build their own computer"
      ],
      "course_content": {},
      "requirements": [
        "This course doesn't assume you've bought or picked anything out for building your computer. In fact, you'd benefit more from watching this course before picking out your components so you'll get a better idea of how it all goes together."
      ],
      "description": "Have you ever wanted to build your own computer? What components do you buy? Will they fit together? Are they the right ones?\nThese are all questions that Brian had when he thought about building his own computer. So he approached one of his good friends, Dan, to help walk him through the process.\n\nOver the course of a couple hours, we'll look at how to take some of the scariness out of building a computer. One of the key things Brian found out when building his computer is that there's a ton of different options. Do you pick an Intel processor? AMD? How much RAM do you need on your GPU? How can you make sure your power supply supports everything in your computer?\nThese are all tough questions that you'll need to answer every time you build a computer. And since every computer is built differently, there's not necessarily a correct answer for every scenario. A huge part of the computers you build is dependent on why you want to build it and what you'll be using it for.\nSo instead of focusing on the specific parts Brian picked out for his computer, we'll look at why they were picked and talk about how you can start choosing your own.\n\nWe've structured this in a way where both Brian and Dan will chat about each component first. We'll start each module with an introduction where we'll look at what the component is, why we picked that particular one and offer some tips and insights for how you can pick your own parts.\nFrom there, in each module we'll take a look at how the components are installed. Again, we'll focus on not only the specific pieces we're building in this course but looking at some more general tips you can use for your own build.\nJoin Brian and Dan on this journey as they take the stress out of building a computer and help you do the same.",
      "target_audience": [
        "You should take this course if you're new to building a computer and want to know what parts to pick and how they all go together.",
        "You don't need to take this course if you've already built your own computers and understand how computers are put together."
      ]
    },
    {
      "title": "NCA-GENL: NVIDIA-Certified Generative AI LLMs Specialization",
      "url": "https://www.udemy.com/course/nca-genl-nvidia-certified-generative-ai-llms-specialization/",
      "bio": "Complete Guide to Passing NVIDIA’s NCA-GENL Exam: Generative AI, LLMs, Prompting, and Model Deployment",
      "objectives": [
        "Understand foundational concepts in machine learning and neural networks critical to generative AI.",
        "Explain the architecture of transformers and large language models (LLMs), including attention mechanisms and training strategies.",
        "Design and evaluate effective prompts using zero-shot, few-shot, and chain-of-thought techniques.",
        "Compare fine-tuning, instruction tuning, LoRA, and PEFT approaches for adapting pretrained models.",
        "Use key NVIDIA tools such as NeMo, Triton, RAPIDS, and TensorRT for LLM training, optimization, and deployment.",
        "Apply best practices in LLM evaluation, experimentation, and reproducibility to prepare for real-world use and the certification exam."
      ],
      "course_content": {
        "Understanding the NCA-GENL Certification": [
          "What is the NCA-GENL Certification?",
          "Exam Format and Logistics",
          "Cost and Registration",
          "Skills and Tools Tested",
          "Study Plan and Mindset",
          "QUIZ: Understanding the NCA-GENL Certification"
        ],
        "Machine Learning and Neural Network Foundations": [
          "Types of Learning Paradigms (Supervised, Unsupervised, Reinforcement)",
          "Neural Network Architecture and Components",
          "Model Training and Optimization (Gradient Descent, Backpropagation)",
          "Overfitting, Regularization, and Generalization",
          "Evaluation Metrics and Model Performance",
          "QUIZ: Machine Learning and Neural Network Foundations"
        ],
        "Transformers and Large Language Model (LLM) Architecture": [
          "Attention Mechanisms (Self-attention, Multi-head Attention)",
          "Positional Encoding and Transformer Blocks",
          "Encoder-Decoder vs Decoder-only Architectures",
          "Pretraining Strategies: MLM vs CLM",
          "BERT vs GPT vs T5",
          "QUIZ: Transformers and LLM Architecture"
        ],
        "Prompt Engineering, Alignment, and Fine-Tuning": [
          "Prompt Types: Zero-shot, Few-shot, Chain-of-Thought",
          "Prompt Design Best Practices and Principles",
          "Instruction Tuning and Prompt Tuning",
          "Model Alignment, Safety, and Hallucination Mitigation",
          "Fine-tuning vs LoRA vs PEFT",
          "QUIZ: Prompt Engineering, Alignment, and Fine-Tuning"
        ],
        "NVIDIA Ecosystem and Toolchain": [
          "Introduction to NVIDIA NeMo",
          "Triton Inference Server: Serving and Scaling LLMs",
          "RAPIDS, cuDF, cuML: GPU-Accelerated Data Processing",
          "TensorRT, ONNX, and Model Optimization",
          "DGX Systems and NVIDIA Base Command",
          "Quiz: NVIDIA Ecosystem and Toolchain"
        ],
        "Experimentation, Data Pipelines, and Evaluation": [
          "Data Preprocessing and Feature Engineering",
          "Text Embeddings and Tokenization",
          "LLM Evaluation Metrics (BLEU, ROUGE, Perplexity)",
          "Experiment Tracking and Reproducibility",
          "Scalability, Inference Performance, and GPU Utilization",
          "Quiz: Experimentation, Data Pipelines, and Evaluation"
        ],
        "Practice, Mock Exams, and Final Review": [
          "Full-Length Mock Exams and Timing Strategies",
          "Mistake Analysis and Last-Mile Review",
          "Final Tools Checklist and Hands-On Recap",
          "Remote Proctoring Setup and Exam-Day Readiness",
          "Confidence Building and Mindset"
        ],
        "Mock Exams": [
          "Mock Test 1",
          "Mock Test 2"
        ]
      },
      "requirements": [
        "Basic understanding of Python programming (e.g., variables, functions, loops)",
        "Familiarity with general AI/ML terminology such as “model,” “training,” “inference,” and “dataset”",
        "Curiosity about generative AI technologies, including chatbots, LLMs, and prompt-based tools",
        "Access to a computer with a modern browser for hands-on labs and NVIDIA-recommended tools",
        "Optional but beneficial: Experience with Jupyter notebooks or platforms like Google Colab"
      ],
      "description": "Unlock your future in Generative AI with the NCA-GENL: NVIDIA-Certified Generative AI LLMs Specialization. This comprehensive course is designed to help you master the foundations of large language models (LLMs), prompt engineering, model alignment, and the powerful NVIDIA AI ecosystem—all while preparing you to pass the NCA-GENL certification exam with confidence.\nWhether you're an aspiring AI engineer, data scientist, product manager, or a tech-savvy learner eager to break into the world of transformer-based models, this course will guide you step-by-step. You'll learn the core principles of machine learning, neural networks, and self-attention mechanisms that power modern LLMs like GPT, BERT, and T5. We'll dive deep into fine-tuning strategies, including LoRA and PEFT, and help you master zero-shot, few-shot, and chain-of-thought prompting techniques to enhance model performance.\nHands-on labs and real-world examples will walk you through using NVIDIA tools such as NeMo, Triton Inference Server, TensorRT, cuDF, and Base Command—tools that are essential for deploying and optimizing LLMs at scale.\nBy the end of this course, you’ll not only be equipped with the technical knowledge to pass the NVIDIA-Certified Associate: Generative AI and LLMs (NCA-GENL) exam—you’ll also gain practical, job-ready skills to thrive in the fast-growing world of AI and LLM deployment.\nIf you're looking for a clear path into AI certification, a career in LLM applications, or hands-on experience with NVIDIA generative AI tools, this course is your launchpad.",
      "target_audience": [
        "Aspiring AI professionals seeking foundational knowledge in LLMs, prompt engineering, and model alignment",
        "Students and early-career technologists looking to validate their skills with an industry-recognized certification",
        "Product managers and technical leads who want to understand how LLMs work and how to apply them in real-world scenarios",
        "Engineers and data analysts exploring transitions into AI-focused roles",
        "Anyone curious about building, fine-tuning, or deploying generative AI applications with NVIDIA tools"
      ]
    },
    {
      "title": "The Ultimate Node-RED Programming for Electronics DIY",
      "url": "https://www.udemy.com/course/the-ultimate-node-red-programming-for-electronics-diy/",
      "bio": "Design IoT Projects with Raspberry Pi, Arduino, and ESP32",
      "objectives": [
        "Understand the basics of Node-RED, its visual programming interface, and how it simplifies IoT application development.",
        "Learn how to install and set up Node-RED on Raspberry Pi, Arduino, and ESP32.",
        "Explore flow-based programming concepts.",
        "Build flows by connecting nodes to create automation logic.",
        "Connect Raspberry Pi, Arduino, and ESP32 devices to Node-RED.",
        "Learn how to read sensor data (e.g., temperature, humidity) and control actuators (e.g., LEDs, motors).",
        "Understand MQTT, HTTP, and other communication protocols, Implement MQTT-based communication between devices and Node-RED.",
        "Design interactive dashboards using Node-RED’s dashboard nodes. Display real-time data, charts, and visualizations.",
        "Work on practical projects such as home automation, weather stations, and smart gardening systems.",
        "By the end of the course, students will have the knowledge and hands-on experience to create their own IoT solutions using Node-RED and the mentioned hardware p"
      ],
      "course_content": {
        "Setting up and Installing Raspberry Pi for Node-Red": [
          "Introduction to the Sections",
          "Raspberry Pi 4 Specifications",
          "Raspberry Pi External Devices",
          "Installing the Raspberry Pi OS",
          "Physical Setup and Power on the Raspberry Pi",
          "Setting up Remote Connection to Raspberry Pi using ssh and VNC"
        ],
        "Installing Node-Red on Raspberry Pi": [
          "What is Node-Red?",
          "Installing Node-Red from the ssh Remote Terminal CMD",
          "How to Access and Use the Node-Red Applicationc",
          "Node-Red Screen Layout",
          "First Flow: Node-Red Flow Hello World!",
          "Second Flow: Print date and time on the debugging panel",
          "Third Flow: Convert Temperature",
          "Node-Red Core Explainations",
          "Understanding Node-Red"
        ],
        "Node-Red Base Raspberry Pi": [
          "Raspberry Pi GPIOs Pin",
          "Flashing LED ON/OFF from Node-red Flow",
          "Flashing LED ON/OFF using the trigger Node",
          "Flashing LEDs ON/OFF alternatively using the trigger Node",
          "Another way To toggle LED using Function Node write JavaScripts",
          "Controll LED using Push Button input switch with Node-Red Raspberry Pi GPIO",
          "DHT11 Temperature Raspberry Pi Node-Red"
        ],
        "Building Interactive Dashboards with Node-RED on Raspberry Pi": [
          "First project with the node-red dashboard",
          "Connecting the node-red switch and Button to control LEDs",
          "Dashboard Layout Designing"
        ]
      },
      "requirements": [
        "Some familiarity with Raspberry Pi, Arduino, or ESP32 boards is beneficial.",
        "If students are new to these platforms, they can start with basic tutorials to understand their components and usage.",
        "A basic understanding of Internet of Things (IoT) principles will be useful.",
        "While no prior experience with Node-RED is required, students should be open to learning a visual programming approach.",
        "Basic knowledge of connecting components (sensors, LEDs, etc.) to these boards is essential.",
        "Enthusiasm for hands-on learning and building real-world IoT applications is key.",
        "Curiosity and a willingness to explore different project ideas are encouraged!",
        "This course is designed to guide beginners through the process, so even if students don’t meet all prerequisites, their curiosity and willingness to learn will go a long way!"
      ],
      "description": "Certainly! In the course titled “Node-RED Programming: Design IoT Projects with Raspberry Pi” students will embark on an exciting journey into the world of Internet of Things (IoT) development. Node-RED is a powerful, flow-based development tool for visual programming, perfect for IoT projects. With Node-RED, you can easily create workflows to control your devices, integrate APIs, and much more. Here’s what they’ll learn:\nIntroduction to Node-RED:\nUnderstand the fundamentals of Node-RED, a powerful visual editor for building IoT applications.\nSet up Node-RED on Raspberry Pi.\nFlow-Based Programming:\nExplore flow-based programming concepts.\nCreate automation logic by connecting nodes within Node-RED.\nDevice Integration:\nConnect sensors, actuators, and devices to Node-RED.\nLearn how to read data from Raspberry Pi.\nIoT Protocols and Communication:\nDive into communication protocols like MQTT and HTTP.\nImplement MQTT-based communication between devices and Node-RED.\nDashboard Creation:\nDesign interactive dashboards using Node-RED’s nodes.\nVisualize real-time data, charts, and visual elements.\nAdvanced Topics:\nMaster debugging techniques, error handling, and logging in Node-RED.\nIntegrate external APIs and cloud services seamlessly.\nHands-On Projects:\nWork on practical projects such as home automation, weather stations, and more.\nApply your skills to real-world scenarios and unleash your creativity!\nBy the end of this course, students will be well-equipped to build their own IoT solutions using Node-RED, Raspberry Pi. Let’s dive in and create something amazing!",
      "target_audience": [
        "Students or professionals with a background in electronics or computer science who want to learn about IoT and its applications.",
        "Hobbyists or DIY enthusiasts who want to build their own IoT projects using Raspberry Pi, ESP32 and Arduino.",
        "Entrepreneurs who want to explore the potential of IoT and its impact on businesses.",
        "Engineers or developers who want to integrate IoT into their existing projects or products.",
        "Anyone who is curious about IoT and wants to learn about this exciting and rapidly growing field.",
        "This course is ideal for beginners who want to explore IoT development using Node-RED and popular hardware platforms like Raspberry Pi, Arduino, and ESP32. Whether you’re a hobbyist, a student, or someone curious about building practical IoT projects, this course provides a solid foundation."
      ]
    },
    {
      "title": "Motion Control with Servo Motor",
      "url": "https://www.udemy.com/course/motion-control-with-servo-motor/",
      "bio": "Control movements with precision and repeatability",
      "objectives": [
        "Operate motor servo (the same concept applies to other brands);",
        "Control the servo in different modes: position, speed, torque, stand alone mode;",
        "Check servo variables through the digital oscilloscope;",
        "Adjust servo motor homing routine;",
        "Configuration of drive inputs and outputs;",
        "Development of the individual functioning algorithm;",
        "Auto tuning adjustment of the motor;",
        "Comparison with conventional motors."
      ],
      "course_content": {},
      "requirements": [
        "Understand some concepts of electronics, but it is not mandatory."
      ],
      "description": "Hi, my name is Wallace Alves, I'm Control and Automation Engineer, specialist in Software Engineering. Since 2011 I have worked in the field of industrial automation and robotics. I've had the opportunity to work with several brands of servo motors. This content I learned in the industry, I am making available here in the form of training with practical and theoretical classes about servo motors.\nThe Servo motor is an electromechanical component present in almost all industrial automation and robotic machines/devices, which require: precision, speed, high precision, torque and process repeatability.\nToday it is possible to find them even in industrial robots, collaborative robots and cartesian robots.\nIt basically consists of a stator with coils and a rotor with magnets, in some cases it has a brake, and at the end it has a position and speed feedback encoder.\nThis training comes to show how a servo motor works in theory and practice. How to parameterize and test servo drives and motors in a didactic way, with support for students.\nThe servo motor software is free and will be available in classes. There is nothing on the market like this training yet! Take advantage of this opportunity and good studies.",
      "target_audience": [
        "For those who seek to learn how a servo motor works in theory and practice."
      ]
    },
    {
      "title": "Digital number systems: 1's and 0's on computers",
      "url": "https://www.udemy.com/course/digital-number-systems/",
      "bio": "How do computers codify numbers and information?",
      "objectives": [
        "The student will learn binary, octal and hexadecimal codes",
        "The student will be able to codify numbers in fixed-point and floating-point",
        "The student will learn some error detection and correction codes",
        "The student will learn some binary codes for data",
        "The student will be able to express numeric and non-numeric information in several binary codes"
      ],
      "course_content": {
        "Introduction": [
          "What are you going to learn on this course?",
          "Some advices for making the most of this course"
        ],
        "Information": [
          "Presentation",
          "Analog world, how do we perceive information?",
          "Digital world, how information is perceived by computers?",
          "Codes and codification",
          "Counting in binary system"
        ],
        "Numeric codification, binary code": [
          "Presentation",
          "Decimal and binary numbers conversion",
          "Add operation with binary numbers",
          "Exercises 1",
          "Solved exercises - 1",
          "Negative numbers in binary code",
          "Binary numbers subtraction",
          "Exercises 2",
          "Solved exercises - 2",
          "Test 1"
        ],
        "Other numeric codes": [
          "Presentation",
          "Octal and hexadecimal codes",
          "Exercises 3",
          "Solved exercises - 3",
          "Rational numbers codification",
          "Fixed-point binary codification",
          "Exercises 4",
          "Solved exercises - 4",
          "Floating-point binary codification",
          "Exercises 5",
          "Solved exercises - 5",
          "More numeric codes",
          "Test 2"
        ],
        "Data codes": [
          "Presentation",
          "Codes for the transmission of data",
          "Exercises 6",
          "Solved exercises - 6",
          "Error detection and correction codes",
          "Exercises 7",
          "Solved exercises - 7",
          "Test 3"
        ],
        "Final summary": [
          "What have you learned?",
          "And from now on..."
        ]
      },
      "requirements": [
        "Math basic knowledge: add, substract, multiply, division",
        "The students just need pen and paper to do the course exercises",
        "The student need to have some curiosity about how is it formed the computer internal language"
      ],
      "description": "Human beings use lots of languages or codes to exchange information. We can speak in different languages but we know that the information is unique, the difference is the code we are using to comunicate it. To be able to understand and use this information we need to know the rules of the code we are using, we need to know the language in which the information is transmitted.\nWhat is the language that computers and digital systems speak? How you are going to learn in this course, digital systemos only understand data containing 1's and 0's.\n\nWe can organize the information that a digital system keep and process on numeric and non-numeric data. Along this course you will learn how it's codified the numeric information using only 1's and 0's. We will start learning to codify simple numeric integers and we will advance little by little until more complex codifications until finding the codification of rational numbers with floating-point.\nAlthough the main part of the course \"Digital number systems\" is centered on numeric information we will not forget non-numeric data so you will also learn some codes for this kind of information. Besides, we will analize the error detection and correction error codes importance, studying some of these codes.\nThe course \"Digital numeric systems\" is divided into 6 blocks with more than 3 hours of video. To unsure the knowledge you are going to obtain, you can practice with the proposed exercises and with tests so you can check your level.\nThere is no need for the students to have a high technological level to take advantage of this course and being able to follow from the start. The students only need some mathematical basic concepts (add, subtract, multiply, division). We will start with simple concepts that will form the base to advance into more complex concepts.\nDo you want to know what is the language of the computers? In this course you will start to understand it.",
      "target_audience": [
        "Students with just some curiosity about computer language, from beginners to students with more computing level"
      ]
    },
    {
      "title": "Control Arduino with Your Own Voice",
      "url": "https://www.udemy.com/course/arduino-voice-control-arduino-with-your-own-voice-processing-wekinator/",
      "bio": "Take Arduino Control to the Next Level with a Step by Step Guide on How to Control Arduino Using Your Own Voice Commands",
      "objectives": [
        "Move your Arduino Controlling to the Next level with Your Voice Commands",
        "Make your own Voice Controlled Arduino Based Device",
        "Learn Working Principle of Artificial Intelligence Voice Recognition Software",
        "Use different voice commands to initiate different actions on the Arduino side"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Planning Voice-Controlled Arduino Systems"
        ],
        "Hardware and Software Requirements": [
          "Hardware and Software Requirements"
        ],
        "Wekinator Artificial Intelligence AI Software": [
          "What is Wekinator AI Software",
          "Quiz",
          "What is Wekinator?",
          "Download and Install Wekinator Software"
        ],
        "Using Wekinator Software": [
          "How to Create a New Project in the Wekinator Software",
          "Creating and Configuring a New Project in Wekinator"
        ],
        "Processing Code": [
          "Download and Install Processing Software",
          "Processing Code Explained",
          "Processing Code"
        ],
        "Arduino Code": [
          "Download and Install Arduino Software",
          "Quiz",
          "Arduino Code Explained",
          "Arduino Code"
        ],
        "Practical: Controlling a LED Though Voice Commands": [
          "Controlling a LED Though Voice Commands",
          "Implementing Voice-Controlled LED Operations"
        ],
        "Practical: Controlling Servo Motor Direction by Voice": [
          "Arduino Code",
          "Processing Code"
        ],
        "Need to Know More? Wekinator Walk-through": [
          "Walk-through",
          "Wekinator Detailed Instructions",
          "Wekinator Troubleshooting"
        ],
        "Practice Test": [
          "Control Arduino with Your Own Voice – Practice Test"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch"
      ],
      "description": "Welcome to this course.\nYou will learn the actual working principle of Voice Control with Arduino and start using Artificial Intelligence Voice Recognition without complex coding. You will also learn what you can do with it and how to use it to control your own Arduino and make it execute any action using simple codes with free software.\nAfter this course, you will be able to control your own Arduino Projects using Your very Own Voice Commands, and the choice is yours to use it in any application that comes to your mind that can make your life easier, since all connections and coding are explained in detail.\nI'm sure that this course will take your Arduino Control to the Next level and open your mind to new possibilities.\nWhy you should take this course?\nIt's a step-by-step guide on how to control your Arduino with your own voice commands.\nLearn how to use your voice to control an Arduino.\nLearn how to use a microphone and its sound waves to read the analog voltage level.\nCreate your own project or follow many examples in this course.\nCourse includes videos and text tutorials.\nGoal From This Course:\nTake Arduino Control to the Next Level with a Step by Step Guide on How to Control Arduino Using Your Own Voice Commands.\nRequired Materials\nHardware:\nArduino or an Arduino clone board (freeduino), or you can make your own custom Arduino board.\nAny component you wish to control with your own voice.\nConnecting wires.\nSoftware:\nArduino IDE (FREE)\nProcessing Software (FREE)\nVoice AI Software (FREE)\nStart Now and You will See and Use Arduino in a whole new way\nUser Testimonials: \"This course opened up new possibilities for my Arduino projects. Highly recommended!\" - John D.\n\"I never thought controlling Arduino with my voice could be this easy. Great course!\" - Sarah L.\nAuthor Bio: Ashraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world. With over 250,000 students from around the world, Ashraf’s online courses have helped many to kick-start their careers in the industry.\nCall to Action: Enroll now to master the knowledge of voice-controlling Arduino and start building your voice-activated projects today!\nFAQ: Q: Do I need any special equipment or software to take this course? A: No, you only need a computer with internet access and the free software mentioned in the course.\nQ: How quickly can I start controlling my Arduino with my voice after taking this course? A: Results may vary, but many students see success within the first few projects by following the strategies taught in this course.\nWhat You Will Learn\nHow to control Arduino with voice commands\nHow to use a microphone to read analog voltage levels\nHow to integrate voice AI software with Arduino\nPractical projects to implement voice control\nWho Is This Course For\nAnyone interested in Arduino and voice control\nIntermediate Arduino enthusiasts looking to expand their skills\nHobbyists and makers wanting to integrate voice commands into their projects\nRequirements\nA computer with internet access\nBasic understanding of Arduino programming\nNo prior voice control experience needed\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects. They strive to provide deep, hands-on experience in their courses, offering step-by-step blueprints on various topics.\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and maker. He has been the Chief Educational Engineer at Educational Engineering Team since 2007, and his mission is to explore new trends and technology to help educate the world. His online courses have helped over 250,000 people worldwide to build successful careers.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Electronics Geeks",
        "Arduino Geeks",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning More about Voice Control with Arduino",
        "Anyone Interested in Learning about Artificial Intelligence Voice Controlling Methods",
        "Anyone looking for a new way to control his Arduino Projects"
      ]
    },
    {
      "title": "Unleash the Power of JavaScript to Control Your Arduino",
      "url": "https://www.udemy.com/course/arduino-control-your-browser-arduino-web-browser/",
      "bio": "A Comprehensive Guide: Learn to Seamlessly Integrate Arduino with JavaScript & Control it via Your Browser!",
      "objectives": [
        "Learn how to turn Arduino into a controller for your web pages written in HTML, JavaScript",
        "Move to the next level in connecting Arduino with your Laptop/PC and unleash the power of JavaScript and HTML to Control it",
        "Build your own Arduino Controlled web page",
        "Build your own Arduino interactive display that listen to Arduino and Send commands to the board using a state of the art GUI web page interface"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Programming",
        "Basic Knowledge of Arduino"
      ],
      "description": "Ever wanted to elevate your Arduino projects by integrating them with a browser using JavaScript? Dive deep with this course that will simplify the complex!\nMaster the art of controlling your Arduino from any web browser, without relying on any additional modules like Wi-Fi. Just your Arduino board, a USB, and a browser! Experience the magic of two-way communication with only a few lines of code.\nHistorically, Arduino's interface with software like 'processing' required intricate setups. But with our groundbreaking method using serial API, engage with any Arduino-based device directly from your browser - no complicated installations or setups.\nWhy This Course?\nEngage with Hands-On Projects: Step by step, see the integration of JavaScript with Arduino in action.\nStay Ahead of the Curve: Exploit a method that's faster, simpler, and opens doors to a multitude of applications.\nNo Prior Knowledge Required: Whether you’re a novice or an expert, this course is crafted for all skill levels.\nFeatures & Benefits:\nEasy Integration: Learn to use JavaScript to give your Arduino superpowers.\nBroad Applications: Create interactive, web-based projects with ease.\nAffordability: No need for expensive modules or setups. Just use what you already have!\nCross-Platform: Easily share and execute your projects on various devices and OS.\nReal Student Testimonials: \"This course transformed my approach to Arduino projects!\" - Sam L.\n\"Finally, a hassle-free method to combine JavaScript and Arduino. Highly recommend!\" - Priya K.\nWhat Will You Learn?\nBasics of HTML and integration with Arduino.\nHow to harness JavaScript for browser-based Arduino control.\nArduino coding practices for two-way communication.\nPractical application examples for real-world projects.\nFAQs: Who is this course for? Anyone passionate about elevating their Arduino projects by integrating them with a browser!\nWhat do I get out of this course? Expertise in a unique method of combining Arduino and JavaScript for seamless browser-based controls.\nCan I get a refund? Absolutely! We offer a hassle-free money-back guarantee.\nWill I get support? Yes, our team is here to help. Just drop us a message!\nAbout the Instructor: The Educational Engineering Team brings a wealth of experience in electronics and software. With a passion for teaching, they've helped thousands of students worldwide.\nReady to Elevate Your Arduino Skills? Enroll Now and Dive into the World of Browser-Based Control!\nWhat You Will Learn\nBasics of HTML and integration with Arduino\nHow to harness JavaScript for browser-based Arduino control\nArduino coding practices for two-way communication\nPractical application examples for real-world projects\nWho is This Course For\nAnyone passionate about elevating their Arduino projects\nJavaScript and Arduino enthusiasts\nDIY electronics hobbyists\nStudents of technology and engineering\nEducators looking for practical STEM projects\nRequirements\nBasic understanding of electronics and circuitry\nEnthusiasm for DIY projects and learning new technology\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobb",
        "Embedded Systems Geeks",
        "Arduino Geeks",
        "IoT and embedded systems Geeks",
        "Anyone interested in connecting Arduino with a web-page without a WiFi Module or any additional circuitry",
        "Anyone interested in Controlling Arduino through a Web Page Interface and display incoming data + the ability to send live command to Arduino via the same Web Page"
      ]
    },
    {
      "title": "Bare Metal Programming Kinetis KL25 ARM Cortex-M0+ Processor",
      "url": "https://www.udemy.com/course/bare-metal-programming-kinetis-kl25-arm-cortex-m0-processor/",
      "bio": "Mastering the Embedded Firmware Programming using NXP KL25 Freedom Development Board (FRDM-KL25)",
      "objectives": [
        "ARM Cortex-M0+ Architecture",
        "Embedded System Fundamentals",
        "Kinetis KL25 ARM Microcontroller",
        "General Purpose Input / Output ( GPIO )",
        "GPIO Output Configuration & RGB LED Interfacing",
        "GPIO Input Configuration & Key Input Handling",
        "Interrupt Handling, Vector, Service Routine",
        "Low Power Timer ( LPTMR )",
        "Periodic Interrupt Timer",
        "GPIO based DHT11 Temperature Sensor Interfacing",
        "Kinetis Software Development Kit",
        "Eclipse based MCU Expresso IDE",
        "Analog to Digital Converter and Interfacing with sensors",
        "MH MQ-2 Gas Sensor Interfacing and Smoke Detection Implementation",
        "Inter Integrated Circuit ( I2C )",
        "I2C device driver for MMA8451Q Inertial Sensor",
        "Universal Asynchronous Receiver Transmitter",
        "USB-to-UART device interfacing and communication with Teraterm"
      ],
      "course_content": {},
      "requirements": [
        "C Language Programming",
        "Basic Electronics",
        "NXP KL25 Freedom Development Board ( FRDM-KL25 )",
        "NEEVEE GPIO Shield or Switches, LEDs and DHT11 modules",
        "POTENTIOMETER",
        "MH MQ Gas Sensor",
        "USB UART TTL Module"
      ],
      "description": "1. ARM Cortex-M0+ Processor Architecture and Bus Models\n2. Kinetis KL25 Micro Controller\n3. MCUXpresso IDE and NXP Kinetis KL25 Freedom Development Platform\n4. General Purpose Input Output\n5. Interrupt Handling, Vectors and Service Routine\n6. Timer ( KL25 Low Power Timer, Periodic Interrupt Timer )\n7. DHT11 Temperature / Humidity Sensor\n8. Analog to Digital Convertor\n9. MH MQ-2 Gas Sensor\n10. Inter Integrated Circuit Interface\n11. MMA8451 Accelerometer\n12. Universal Asynchronous Receiver Transmitter\n13. USB-UART TTL Interface and Teraterm access",
      "target_audience": [
        "Embedded System Beginners",
        "Professionals wants to refresh their knowledge",
        "Developer willing to know about various microcontroller interfacing",
        "Embedded Systems developers"
      ]
    },
    {
      "title": "Arduino Microcontroller: learn Arduino making projects",
      "url": "https://www.udemy.com/course/learn-arduino-making-projects/",
      "bio": "created 2020, Arduino Course: learn electrical engineering with the Arduino Microcontroller",
      "objectives": [
        "C++ programming language for arduino",
        "Get more confidence for your next Arduino projects",
        "programming a display",
        "use and programming motors",
        "measure the speed of sound with the Arduino",
        "control motors with a Joystick",
        "draw circuits",
        "read physical circuits",
        "functions, boolean functions",
        "measure light intensity",
        "make sound with the Arduino",
        "understand how the arduino is working",
        "Build functioning circuits on a breadboard",
        "detect water",
        "recognize the orientation of objects",
        "understand analog and digital pins",
        "how to use pulse width modulation",
        "how to program RGB LEDs",
        "understand and program a Potentiometer",
        "dim LEDs with a Potentiometer",
        "recognize sound with the Arduino",
        "measure distance with the Arduin0"
      ],
      "course_content": {
        "Introduction to Arduino": [
          "Introduction",
          "What do we need?"
        ],
        "Getting started": [
          "What is an Arduino?",
          "download the software",
          "Arduino Software introduction",
          "connecting a LED",
          "LED",
          "programming a LED",
          "Lecture 7 code",
          "control the LED with a button",
          "Lecture 9 code",
          "boolean function",
          "Lecture 11 code",
          "programming a LED"
        ],
        "RGB LED": [
          "RGB LED introduction",
          "Lecture 13 code",
          "RGB LED with buttons",
          "Lecture 15 code",
          "RGB LED"
        ],
        "Potentiometer": [
          "Potentiometer: physical circuit",
          "Potentiometer: programming",
          "Lecture 18 code",
          "dim a led with the Potentiometer",
          "Lecture 20 code",
          "Potentiometer: programming"
        ],
        "Servo Motor": [
          "Servo Motor introduction",
          "Lecture 22 code",
          "Control the servo motor with a potentiometer",
          "Lecture 24 code",
          "programming Servo Motor"
        ],
        "Joystick": [
          "physical circuit",
          "connecting and programming",
          "Lecture 27 code",
          "Control the servo motor with a Joystick",
          "Lecture 29 code"
        ],
        "LCD Display": [
          "I2C module for the LCD Display",
          "program the LCD Display",
          "Lecture 32 code",
          "I2C module + LCD display",
          "Lecture 34 code",
          "programmin the LCD display"
        ],
        "Active Buzzer": [
          "Active Buzzer",
          "Lecture 36 code"
        ],
        "water sensor introduction": [
          "water sensor",
          "Lecture 38 code",
          "programming the water sensor"
        ],
        "Project: water level": [
          "circuit",
          "programming part 1",
          "Lecture 41 code",
          "programming part 2",
          "Lecture 43 code"
        ]
      },
      "requirements": [
        "Interest in programming"
      ],
      "description": "This course is specifically designed for beginners or people who want to deepen their knowledge.\n\n\nI think the best way to learn Arduino is hands-on, so you can get involved with the course right from the start and replicate the projects at home.\n\n\nI will use the Arduino kit from Elegoo because most of you probably also have the kit.\n\n\nWe will start with simple projects such as programming leds and later move on to more advanced projects as soon as we gain a better understanding of Arduino.\n\n\nOf course I will make the programmed code available to you after each project so that you can check your program and improve it if necessary, but I would strongly recommend that you write the program yourself to better learn the C++ programming language adapted to the Arduino.\n\n\nAfter each chapter you can deepen and check your knowledge in a quiz.\n\n\nThe aim of the course is to build up a deeper understanding and to be able to carry out complex projects with the Arduino at the end.\n\n\nSince all questions can never be answered in the videos, I offer you the opportunity to ask me your questions personally. I will answer those individually.\n\n\nIf you don't like the course, you can get your money back within 30 days.",
      "target_audience": [
        "Everybody who wants to improve or learn how to use the arduino microcontroller for any purposes."
      ]
    },
    {
      "title": "Create Your Own Scada for Plc with C# Language",
      "url": "https://www.udemy.com/course/create-your-own-scada-for-plc-with-c-language/",
      "bio": "Learn How to Create Your Own Scada for Plc with Delta Plc Basics and C# Language Basics",
      "objectives": [
        "SCADA",
        "Delta Plc Basics",
        "Delta Plc Modbus TCP/IP",
        "C# Language Basics",
        "Visual Studio Software"
      ],
      "course_content": {
        "Introduction": [
          "Hardware - Delta AS Series Plc"
        ],
        "Learn C# Programming Basics + Visual Studio": [
          "Visual Studio Software Download and Install",
          "Visual Studio First Project",
          "Buttons, TextBoxes , Labels",
          "PictureBox Usage",
          "How to Add Library",
          "C# Variables Basics - How to Define",
          "If Loop",
          "For Loop",
          "While Loop",
          "Do-While Loop",
          "Logical AND & OR",
          "Relational Operators",
          "Binary Operators",
          "New Form - MenuStrip etc."
        ],
        "Delta Plc Programming Basics": [
          "Download Delta Plc Softwares",
          "ISPSoft General Review",
          "Plc Data Register",
          "Plc Auxiliary Relays",
          "Simulation",
          "Move Instruction",
          "Timer Monitoring",
          "Counter Monitoring",
          "How to Create a Function Block"
        ],
        "SCADA Application": [
          "Application Part -1",
          "Application Part - 2",
          "Application Part - 3",
          "Application Part - 4"
        ],
        "Bonus": [
          "Sql Connection - Write to SQL and Read From SQL",
          "Excel - Read From SQL and Save to Excel"
        ],
        "Images File Download": [
          "Images File Download"
        ]
      },
      "requirements": [
        "This course does not require any prior knowledge."
      ],
      "description": "Dear Students;\nIn this tutorial, you will learn how you can create your own scada.\nI used Delta AS series plc in this tutorial.\nIn the beginning, you will learn about delta plc programming.\nYou will see how you can read the data in the delta plc with your scada and how you can write data to the plc.\nNext, you will learn the basics of the C # programming language.\nAnd then you will see and learn the application that we created our own scadam with Visual Studio program.\nIn the meantime, you will learn to use the visual studio program in detail.\nMainly what you will learn in this course;\n-Delta plc basics\n- C # basics\n- Visual studio basics\n- C # <-> Plc communication\nand you will learn a little more.\nAnd also , I showed that how to connect to SQL server and how to save and read data to/from Sql.\nAlso you can see that how to send sql datas to excel.\nThis course, which is our 6th course as the Derstagram academy family, is a course based on teaching you your own scada professionally in a short and self-explanatory manner.\nWith this course, you will understand the logic of plc - c # communication and can use this program with other plcs.\nThus, you will be able to control PLCs on the computer.\nOn the other hand, you will be able to respond to the demands of your customers.\nBest Regards\nMustafa",
      "target_audience": [
        "Anyone who wants to create their own Scada Software with C# and communicate with plc via TCP/IP communication."
      ]
    },
    {
      "title": "PIC Microcontroller Insect Detector",
      "url": "https://www.udemy.com/course/pic-microcontroller-insect-detector/",
      "bio": "Detect Insect Buzzing using A Microphone and Program PIC Microcontroller Timer and ADC to Filter Different Frequencies",
      "objectives": [
        "How to detect different frequencies with PIC Microcontroller",
        "Insect Detector Working Principle",
        "Amplifying Sound with an Electret Microphone",
        "PIC Microcontroller Digital to Analog Conversion",
        "What are the things that you need regarding the hardware and what are the software that we are going to use, how to download and install each of them?",
        "Hardware and Software Requirements",
        "PIC microcontroller insect detector class.",
        "Coding your Insect detector",
        "The PIC-Microcontroller Insect Detector is a low-cost, easy to build and very useful device.",
        "protect their home from insects."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Evaluating Sensor-Based Thinking in Microcontroller Projects",
          "Hardware and Software Requirements",
          "Summary",
          "Reading matrial"
        ],
        "Working Principle": [
          "Section Intro",
          "Working Principle",
          "Quiz",
          "PIC Microcontroller Frequencies Detection",
          "Summary",
          "Reading matrial"
        ],
        "Hardware and Software Requirements": [
          "Section Intro",
          "Download and Install Proteus Software",
          "Download and Install MikroC Software",
          "Quiz",
          "Summary",
          "Reading matrial"
        ],
        "Operational Amplifiers": [
          "Section Intro",
          "Operational Amplifiers",
          "Quiz",
          "Summary",
          "Reading matrial",
          "Operational Amplifiers – Fundamentals and Applications"
        ],
        "Circuit Design": [
          "Section Intro",
          "Circuit Design",
          "Adding Microphone Library to Proteus 8 Professioal",
          "Quiz"
        ],
        "Coding": [
          "Creating Variables",
          "Configure Analog to Digital Converter",
          "Timer0 and Interrupt",
          "Quiz",
          "Buzz Detection",
          "Summary",
          "Reading matrial",
          "Simulating LCD Interfacing with PIC Microcontroller Using PICSimLab"
        ],
        "Resources": [
          "PIC18 Datasheet",
          "LM358",
          "INTCON",
          "Quiz",
          "RCON",
          "T0CON",
          "Reading matrial",
          "LCD Interfacing Resources and Simulation Tools"
        ],
        "Practice Test": [
          "PIC Microcontroller Insect Detector Fundamentals Practice Test"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "Course Project": [
          "Course Project",
          "Explaining a Functional PIC-Based Insect Detection System"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Programming",
        "A Will to apply, not just watch",
        "dedication to Learning new things and gain more knowledge"
      ],
      "description": "Welcome to \"PIC Microcontroller Insect Detector\"! In this course, we will create a circuit that can detect flying bugs. You will learn new things about some of the electronic components, how to use your microphone, amplify the signal that comes out of your microphone, and read it using a microcontroller.\nWho We Are: We are the Educational Engineering Team, a leading team in the microcontroller industry with more than 10 years of experience in teaching and doing practical projects. Our team of skilled engineers is dedicated to delivering high-quality engineering content, including courses, articles, lessons, and online support for engineering students from all around the world. We also work as freelance engineers, helping many students in their graduation projects and providing numerous courses on engineering topics.\nCourse Highlights:\nInteractive Gameplay: Control your game characters, from planes to birds, using the Arduino board.\nSensory Control: Dive deep into ultrasonic sensors and control in-game motions without ever touching your mouse or keyboard.\nCustomizability: Adapt the game's scoring system, swap out characters, and truly make the game your own.\nWhy This Course?\nHolistic Learning: Master Arduino programming, Processing, and even C++ in one comprehensive package.\nHands-On Approach: Practical sessions, from circuit design to coding, to ensure you not only learn but also create.\nFun While Learning: Embrace an innovative learning approach, where education meets recreation.\nCourse Contents:\nUnveiling Hardware and Software Essentials.\nUnraveling the Working Principle of Ultrasonic Sensors.\nDesigning and Connecting Circuitry.\nMastering the Art of Arduino and Processing Coding.\nAdvanced Topics: Introducing Images and Scoring Mechanisms in Gaming.\nYour Takeaway: By the end of this course, you won't just be a passive gamer or a conventional Arduino programmer. Instead, you'll wear the dual hat of a game developer, where you craft and control using Arduino. The world of interactive gaming awaits you!\nJoin the Revolution! Dive into a course that’s set to redefine how we perceive games and hardware interaction. Enroll today and embark on an unforgettable journey!\nUser Testimonials and Social Proof: \"This course is an incredible blend of gaming and Arduino. It made learning so much fun!\" - Chris H.\n\"A fantastic course for anyone looking to merge their passion for gaming with hardware programming. Highly recommend!\" - Lisa P.\nAn Author Bio: Ashraf, the founder of Educational Engineering Team, is a seasoned educator, Mechatronics engineer, electronics and programming hobbyist, and maker. With over 13 years of experience in teaching and practical projects, Ashraf's courses have helped over 250,000 people improve their skills and build successful careers.\nA Single Powerful CTA: Enroll now to start breathing life into your games with Arduino integration!\nFAQ Section: Q: Do I need any prior experience to take this course? A: No prior experience is necessary. This course is suitable for beginners and experienced individuals alike.\nQ: How quickly can I start creating Arduino-powered games? A: You can start creating games immediately after completing the relevant sections of the course.\nQ: Is there a money-back guarantee? A: Yes, Udemy offers a 30-day money-back guarantee if you're not satisfied with the course.\nWhat You Will Learn\nTechniques to integrate Arduino with gaming projects\nHow to use ultrasonic sensors for interactive game control\nMethods to customize game scoring systems and characters\nStep-by-step guidance on Arduino and Processing coding\nDesigning and connecting circuitry for gaming applications\nWho is This Course For\nGaming enthusiasts looking to enhance their projects with Arduino\nArduino hobbyists wanting to explore gaming applications\nBeginners seeking a fun and engaging way to learn Arduino\nDevelopers interested in merging hardware with gaming\nAnyone curious about interactive game control through sensors\nRequirements\nBasic computer skills\nInternet access\nNo prior coding or electronics experience needed\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Learning How to make PIC Microcontroller Insect Detector",
        "Anyone Interested in Learning New Things about Amplifiers and Detected Different Frequencies",
        "Anyone Interested in Learning how Insect Detectors work",
        "Anyone Interested in Learning New Things about PIC Microcontroller",
        "Anyone Interested in Learning How to make a PCB from scratch for a Product",
        "Anyone Interested in Making Projects",
        "Anyone Interested in Learning New Topics in Programming and Microcontroller",
        "Anyone who wants to add extra care about the cleanliness."
      ]
    },
    {
      "title": "Introducing Embedded Systems and Microcontrollers",
      "url": "https://www.udemy.com/course/embedded-systems-and-microcontrollers/",
      "bio": "Getting Started with Embedded Systems and Microcontrollers",
      "objectives": [
        "The fundamentals of embedded systems and microcontrollers",
        "Examples of embedded systems used in real-world applications",
        "Computer essentials and microprocessor/microcontroller architecture",
        "Practical examples of coding for the AT89C51 microcontroller",
        "The PIC microcontroller, specifically the 12 Series PIC",
        "Design and implementation of embedded systems"
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Understanding Embedded Systems and Microcontrollers",
          "Example",
          "Computer Essentials",
          "Microcontroller",
          "Understanding the Basics of Microcontrollers and Computer Essentials",
          "PIC Controllers",
          "Summary",
          "Example Demonstrate",
          "Understanding PIC Controllers and Their Applications",
          "Exploring the Basics of Embedded Systems and Microcontrollers",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Introducing Embedded Systems and Microcontrollers Test",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Mastering the Basics of Embedded Systems and Microcontrollers",
          "Summary",
          "Reading Material"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of programming concepts (such as variables, loops, and conditional statements)",
        "Familiarity with basic electronics (such as circuits, resistors, and capacitors)",
        "Access to a computer with an internet connection and software tools for programming microcontrollers (such as MPLAB, Keil, or Arduino)"
      ],
      "description": "Are you interested in learning about the fascinating world of embedded systems and microcontrollers? Do you want to gain the skills and knowledge required to design and develop sophisticated embedded systems that can perform complex tasks? If yes, then this course is perfect for you!\nIn this comprehensive course, you will learn the fundamentals of embedded systems, microprocessors, and microcontrollers. You will explore various examples of embedded systems used in the real world and discover how they work. You will also dive into computer essentials and the architecture of the PIC microcontroller, specifically the 12 Series PIC.\nThe course includes practical examples of coding for the AT89C51 microcontroller, a popular choice for many embedded systems. You will learn how to write and execute code on this microcontroller, and gain hands-on experience with designing and implementing embedded systems.\nBy the end of this course, you will have a solid understanding of embedded systems and microcontrollers. You will be able to design and develop your own embedded systems and have the skills to work with various microcontrollers.\nSome of the Topics Covered:\nDefinition of embedded systems\nExamples\nComputer Essentials\nMicroprocessors and microcontrollers\nPIC Microcontroller\n12 Series PIC\nAT89C51 Coding Practical Example\nPrerequisites:\nBasic knowledge of programming concepts (such as variables, loops, and conditional statements)\nFamiliarity with basic electronics (such as circuits, resistors, and capacitors)\nAccess to a computer with an internet connection and software tools for programming microcontrollers (such as MPLAB, Keil, or Arduino)\nThis course is perfect for:\nStudents and professionals interested in learning about embedded systems and microcontrollers\nEngineers and developers who want to design and develop their own embedded systems\nHobbyists who want to build their own electronic projects and devices\nDon't miss this opportunity to learn about the exciting world of embedded systems and microcontrollers. Enroll now and start your journey towards mastering this fascinating field!\nWhat You Will Learn\nFundamentals of embedded systems and microcontrollers\nUnderstanding the architecture of microcontrollers like PIC and AT89C51\nPractical coding examples on microcontrollers\nDesigning and developing embedded systems from scratch\nApplications of embedded systems in real-world scenarios\nRequirements or Prerequisites\nBasic knowledge of programming concepts\nFamiliarity with basic electronics\nAccess to a computer with internet and programming tools\nWho Is This Course For\nStudents: Interested in embedded systems and microcontrollers\nProfessionals: Engineers and developers looking to design and develop embedded systems\nHobbyists: Those who want to build their own electronic projects and devices\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Students and professionals interested in learning about embedded systems and microcontrollers",
        "Engineers and developers who want to design and develop their own embedded systems",
        "Hobbyists who want to build their own electronic projects and devices."
      ]
    },
    {
      "title": "Build 9 PIC Microcontroller Engineering projects today!",
      "url": "https://www.udemy.com/course/pic-microcontroller-build-engineering-projects-today/",
      "bio": "Learn by Practicing real world Projects to apply everything you have learned",
      "objectives": [
        "Connect different type of sensors and actuators to PIC Microcontroller",
        "Interface different type of electronic elements with PIC Microcontroller.",
        "Use sensors and actuators to make useful projects",
        "Program, burn a code and wire PIC Microcontroller",
        "Learn What are the right tools that you need to start making amazing projects",
        "Learn What makes a great Microcontroller Project"
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction & Getting Started",
          "Introduction",
          "Building Multiple PIC Microcontroller Projects",
          "Section Summary",
          ": Reading Material"
        ],
        "PIC Microcontroller: Garage Door System Ultrasonic Sensor": [
          "Section Intro",
          "Introduction",
          "Section Summary",
          ": Reading Material"
        ],
        "Hardware and Software Components": [
          "Section Intro",
          "Hardware and Software components",
          "Quiz",
          "Section Summary",
          ": Reading Material"
        ],
        "How it works and applications": [
          "Section Intro",
          "How it works and applications",
          "Circuit Design",
          "Designing and Simulating a Circuit with Embedded Components",
          "Section Summary",
          ": Reading Material"
        ],
        "Coding": [
          "Section Intro",
          "Circuit Design",
          "Coding",
          "Programming a Motion Detection System with PIC Microcontroller",
          "Section Summary",
          ": Reading Material"
        ],
        "Motion Detector Interfacing with PIC Microcontroller": [
          "Section Intro",
          "Hardware and Software Components",
          "Quiz",
          "Section Summary",
          ": Reading Material"
        ],
        "How It Works & Common Applications": [
          "Section Intro",
          "How It Works & Common Applications",
          "Section Summary",
          ": Reading Material"
        ],
        "PIC Microcontroller: Make an Electronic Door Lock System": [
          "Section Intro",
          "Quick Overview",
          "Section Summary",
          ": Reading Material"
        ],
        "Software For Coding and Simulation": [
          "Software For Coding and Simulation"
        ]
      },
      "requirements": [
        "Basic Knowledge in Electronics Circuits",
        "Basic Knowledge in Circuit Design",
        "Basic Knowledge in C Language"
      ],
      "description": ">>> Learning by theory and simulation is only half the answer, but connecting, wiring, and burning a code to an actual Microcontroller, not a simulated one, is the other more important half. This is what we will cover in this course: you will learn by making PIC Microcontroller Practical Projects. <<<\nContinual Updates <<<\nMore Than 55k Students on All of Our Courses!!! THANK YOU!!!\nWelcome to this course.\nLearning by doing is what makes the difference between someone who learns and someone who applies what they learned.\nIn this course, you will get the chance to see PIC Microcontroller in action, starting from simulation and moving forward to connecting the hardware and testing the code in real life. This will help you make sure your circuit works as expected, and you can witness yourself building your first fully functional PIC Microcontroller project.\nThe most important thing to note here is that when a circuit works in simulation, it doesn’t mean it will work in real life. In more than 85% of cases, the simulated circuit doesn’t work when you connect it.\nWhy You Should Take This Course?\nThis course will teach you how to use PIC Microcontrollers.\nLearn by practicing real world projects to apply everything you have learned.\nYou will learn C Programming, which is the programming language many engineers use for microcontrollers such as PIC Microcontrollers.\nThis course will enable you to develop engineering systems and products.\nThis course is for anyone who wants to learn how to program a PIC microcontroller.\nWhat is the Best Way to Learn?\nLearning by doing PIC Microcontroller Practical Projects is the learn-by-practice approach that I prefer. This method allows you to not only master new PIC Microcontroller skills but also gain practical knowledge along the way. Only a few people are satisfied with simulation, but if you want good results you must move on and hook up your circuit and test it out using real-life hardware parts. I'm trying to help you gain real world practical experience in PIC Microcontroller, so let's start.\nProject Highlights\nPIC Microcontroller: Garage Door System with Ultrasonic Sensor\nThis guide will help you make a Garage Door System using an Ultrasonic Sensor in a step-by-step manner at home in no time.\nMotion Detector Interfacing with PIC Microcontroller\nYou will be able to detect motion and protect your home, work, or any area using this PIC Microcontroller step by step.\nPIC Microcontroller: Make an Electronic Door Lock System\nThis guide will help you make an Electronic Door Lock system in a step-by-step manner at home in no time.\nPIC Microcontroller Wireless Power Transmission\nMake your own PIC Microcontroller Wireless Power Transmission project and learn the principles behind wireless power.\nDot Matrix LED Display Interface with PIC Microcontroller\nYou will enter the Dot Matrix LED Display world of wonders, write anything, and make it shine using a matrix of LEDs.\nLCD Interfacing with PIC Microcontroller\nYou will enter the LCD Display world of wonders, write anything, and make it shine using LCD (Liquid Crystal Display).\nPIC Microcontroller: Learn By Building Practical Projects\nLearn PIC Microcontroller by creating real-life practical projects with your own hands in this step-by-step guide.\nWhat You Will Learn\nBuild 9 practical PIC Microcontroller projects\nInterface various sensors and components with PIC Microcontroller\nWrite and test PIC Microcontroller code for real-world applications\nGain hands-on experience in electronics and programming\nWho Is This Course For\nElectronics hobbyists and engineers\nStudents and professionals interested in microcontroller projects\nAnyone looking to learn about PIC Microcontrollers through practical projects\nRequirements\nBasic knowledge of electronics and programming\nA computer with internet access\nEnthusiasm to learn and create\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the microcontroller industry, with over 13 Years of Experience in teaching and doing practical projects.\nWe strive to put all our hands-on experience into these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos. This real-world knowledge enables you to grasp concepts easily and apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the programming and microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four microcontroller books.\nAs Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and bootcamps, articles, lessons, and online support for electronics hobbyists, programming hobbyists, microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for microcontrollers and programming, particularly for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "Anyone wants to move from Simulation to Practical Work",
        "Anyone intersted in building real things",
        "People with no experience in electronics",
        "People with an intermediate knowledge of electronics",
        "Children over 14 years old"
      ]
    },
    {
      "title": "Getting Started with Raspberry Pi",
      "url": "https://www.udemy.com/course/raspberry-pi-getting-started-with-raspberry-pi/",
      "bio": "Learn the basics of Raspberry Pi, including hardware and software",
      "objectives": [
        "Learn how to use the Raspberry Pi and create awesome projects.",
        "Learn how to program in Python, control electronics",
        "This course will help you get started with Raspberry Pi and make your first project.",
        "Get the best learning experience and the highest quality training materials for your needs.",
        "Learn how to set up your Raspberry Pi and start programming in no time.",
        "Learn to build your own projects with a Raspberry Pi.",
        "You will learn how to use the Raspbian operating system",
        "You will learn how to set up your Raspberry Pi and use it for basic computing tasks.",
        "You will also learn how to use the GPIO pins on the Raspberry Pi to control hardware.",
        "You will also learn how to use GPIO pins, connect a screen and keyboard, and more"
      ],
      "course_content": {},
      "requirements": [
        "Raspberry Pi computer",
        "raspberry pi board",
        "HDMI cable",
        "SD card"
      ],
      "description": "The only course you need to learn to program and become a Raspberry Pi developer. Basics, intermediate, and advanced topics in addition to practical examples and more!\n4.5 Hours of Full HD Content | More Than 70 Lectures\nThis course is designed to help people with no prior Raspberry Pi programming experience with the basic tools necessary to create a complete Raspberry Pi program and then teach them advanced Raspberry Pi topics in addition to practical examples.\nWelcome to this course.\nThis is an introductory course about Raspberry Pi, a credit card-sized computer. In this course, you will be exploring the possibilities of Raspberry Pi as a computer and multifunction Microcontroller.\nHow This Course Will Help You:\nThe course material and methods do not assume any prior knowledge. So if you do not know Linux or Python, no need to worry. The course has sections that cover the basics of Linux and Python where you can get started.\nIt comes with many features that most of today’s computers have. You will learn to start using the Raspberry Pi with a keyboard, monitor, and mouse just like a low-cost computer.\nInteraction with the hardware of the Pi will also be introduced, you will learn by doing, practicing, and coding. You will learn from 4 examples. From lighting LEDs to reading switch signals and hooking up a sensor to Raspberry Pi ports. You will be able to write codes to make the most of your Raspberry Pi, using the Python language.\nDo you want to discover how you can program and control Raspberry Pi: a hundred-time faster Microcontroller than PIC Microcontroller which can be used in controlling almost anything, starting from zero?\nRaspberry Pi is a credit card-sized computer that has a processor, and memory and can be connected to any screen and boot up like a fully functional computer at a very low cost starting at $25.\nWhat is this course all about:\nTo see the big picture, you need to know why you need to learn Raspberry Pi, and how it will make your life different. In my newest course, Raspberry Pi Step By Step: Your Complete Guide, you will be taken from the very beginning, everything will be covered, starting from why the Raspberry Pi board is a way much better than PIC Microcontroller and ending in how you can write code to control its Pins just like in Microcontroller.\nGetting a credit card-sized fully functional computer at that low price is really worth it, at the end of this course you can turn any idea that you have into a trending Kickstarter project and get crowdfunding for it from the online community. Raspberry Pi board will help you a lot in turning your ideas into reality in no time.\nDon’t have a Raspberry Pi board? No problem! What makes this course really special is the fact that you don’t need the Raspberry Pi Board to be in your hands, there is a full section on how to simulate the board in your operating system environment and start learning without getting that board.\nThings that you will be able to do at the end of this course:\nTurn any old TV into a SMART TV using a Raspberry Pi board.\nProgram a code in Python that can take sensor signals as input and send light signals as output.\nGet inside the IoT (Internet of Things) world and start making your own awesome projects that can make everybody’s life easier.\nInstalling Linux for the first time and how to deal with it like a professional.\nControl the Raspberry Pi board remotely in more than three different ways.\nKnow how Raspberry Pi boards can be used to make a supercomputer.\nRaspberry Pi board provides tons of libraries that make controlling sensors and handling data a really easy job.\nYou don’t need to make any PCB, you just need to buy the board and plug it into any screen and you are good to go.\nYou will get to practice both programming and electronics with two new gadgets that will add a lot to your knowledge.\nWhy you should take this course:\nThe only course you need to learn to program and become a Raspberry Pi developer.\nThis comprehensive course teaches you the basics, intermediate, and advanced topics on how to be a successful Raspberry Pi developer.\nWith this course, you will be able to troubleshoot common problems, set up your OS on your PC/Mac successfully, program in Python 3, have an understanding of how to use GPIO pins, and know how to install new packages on the system.\nIt's an entertaining way for individuals looking for a career change or hobbyists interested in learning more about programming.\nThings That Will Be Covered in This Course:\nRaspberry Pi Basics: This is an introductory course about Raspberry Pi, a credit card-sized computer. In this course, you will be exploring the possibilities of Raspberry Pi as a computer and a state-of-the-art control machine.\nArduino Vs Raspberry PI Vs PIC Microcontroller: You will no longer wonder what board should you start with, or what board should you learn or use, this is your way in.\nConnect and Interface Raspberry Pi with Arduino: In this section, you will learn how to connect Raspberry Pi and Arduino the software and hardware parts and why it's useful.\nMake a Smart Mirror Using Raspberry Pi: How to make a Smart Mirror that works as a News, Weather, time, and Date feed using Raspberry Pi in this Step By Step Section.\nObstacle Avoiding Robot with Raspberry Pi: Make your own Obstacle Avoiding Robot and start making amazing applications such as fire fighting and remote control.\nIf you take this course now, you can count on these three results in just a few hours!\nAdd knowledge to all the new skills you are learning now!\nDesign and program your ideas into reality as easily as 1 2 3, and this will also help you make great applications using the fast processor inside the Raspberry Pi board!\nUse state-of-the-art design software to reduce the time spent finding the right solutions since it’s already in your hands.\nEnroll in the Getting Started with Raspberry Pi course today!\nWhat You Will Learn:\nBasics of Raspberry Pi\nInstalling and using Linux on Raspberry Pi\nProgramming in Python\nConnecting and interfacing with hardware\nBuilding practical projects\nWho Is This Course For:\nBeginners in electronics and programming\nIndividuals interested in learning Raspberry Pi\nHobbyists and enthusiasts looking to expand their knowledge\nRequirements:\nBasic computer skills\nNo prior knowledge of Raspberry Pi or electronics required\nAccess to Raspberry Pi and basic electronic components\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact, step-by-step blueprint on how to tackle simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of “Educational Engineering”\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k + Subscribers) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelance engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "This course is for anyone who wants to get started with Raspberry Pi, from beginner to experienced users",
        "This course is for anyone who wants to learn how to use Raspberry Pi, a tiny and affordable computer that can be used for a variety of purposes.",
        "This course is for people who want to learn how to use Raspberry Pi",
        "this is for beginners who wants to know about Raspberry Pi"
      ]
    },
    {
      "title": "Introduction to VESA Display Stream Compression (DSC)",
      "url": "https://www.udemy.com/course/introduction-to-vesa-display-stream-compression-dsc/",
      "bio": "Display Stream Compression (DSC), Prediction and Quantisation, ICH, Slice, Picture Format, MPP, MMAP, Block Prediction",
      "objectives": [
        "Understand the Role of VESA in Display Technologies",
        "Basics of Display Stream Compression (DSC)",
        "Introduction to Video Formats like 4:4:4 Video Format, 4:2:2 Video Format, 4:2:0 Video Format and 4:4:4:4 Container Format",
        "Prediction and Quantization Fundamentals like Midpoint Prediction (MPP), Modified Median-Adaptive Prediction (MMAP), Block Prediction (BP)",
        "Index Color History (ICH) Overview",
        "Basic Picture Syntax Concepts",
        "Entropy Encoding Introduction",
        "Overview of Color Space Conversion"
      ],
      "course_content": {
        "Introduction": [
          "Overview of VESA and Its Role",
          "What is Display Stream Compression (DSC)?",
          "Significance of DSC in Modern Display Technologies"
        ],
        "Understanding VESA DSC Terminology": [
          "4:4:4 Video Format",
          "4:2:2 Video Format",
          "4:2:0 Video Format",
          "4:4:4:4 Container Format"
        ],
        "Overview of DSC Algorithm": [
          "Overview",
          "Picture Layer and Slice Layer Syntax",
          "Encoding Process",
          "Decoding Process",
          "Hypothetical Reference Decoder (HRD)",
          "Hardware Throughput",
          "Color Space Conversion"
        ],
        "Prediction and Quantization": [
          "Prediction and Quantization Process",
          "MMAP (Modified Median-Adaptive Prediction)",
          "MMAP - Native 4:2:2 Mode",
          "MMAP – Native 4:2:0 Mode",
          "Block Prediction",
          "Block Prediction Hardware Implementation Guideline",
          "BP Hardware Implementation 4-stage Pipeline",
          "Midpoint Prediction (MPP)"
        ],
        "ICH": [
          "Overview",
          "Encoder ICH Workflow",
          "Pixel History",
          "ICH Updates"
        ],
        "Picture Syntax": [
          "Picture Syntax Overview",
          "Slice Multiplexing – CBR Mode",
          "Slice Multiplexing – VBR Mode",
          "Slice",
          "Substream Multiplexing",
          "Color Space Conversion",
          "Entropy Encoder"
        ]
      },
      "requirements": [
        "Basic Computer Skills",
        "A general understanding of video formats and basic video concepts can be helpful, though it is not mandatory.",
        "An interest in learning about display technologies and video compression techniques will enhance the learning experience.",
        "This course is designed for beginners, so no prior experience with VESA DSC or related technologies is necessary."
      ],
      "description": "1. Understand the Role of VESA in Display Technologies: Learners will be able to explain the significance of VESA and its role in defining standards for display technologies, including an introduction to Display Stream Compression (DSC).\n2. Basics of Display Stream Compression (DSC): Learners will understand what DSC is, why it is important, and how it is used to improve display performance and efficiency.\n3. Introduction to Video Formats: Learners will become familiar with different video formats (4:4:4, 4:2:2, 4:2:0) and how DSC supports these formats to enhance video quality and compression.\n4. Prediction and Quantization Fundamentals: Learners will gain a basic understanding of prediction and quantization processes, including an overview of MMAP (Modified Median-Adaptive Prediction) and block prediction techniques.\n5. Index Color History (ICH) Overview: Learners will learn the basic concepts of Index Color History (ICH), including the ICH workflow, pixel history, and how ICH updates contribute to efficient video encoding.\n6. Basic Picture Syntax Concepts: Learners will explore the fundamental principles of picture syntax in DSC, including the structure and purpose of slice multiplexing in CBR (Constant Bit Rate) and VBR (Variable Bit Rate) modes.\n7. Entropy Encoding Introduction: Learners will understand the basics of entropy encoding, its role in DSC, and how it helps to achieve efficient data compression.\n8. Overview of Color Space Conversion: Learners will learn the basics of color space conversion, why it is necessary, and how it is applied within the context of DSC to maintain color fidelity and compression efficiency.",
      "target_audience": [
        "Beginners in Display Technologies",
        "Students and Aspiring Engineers",
        "Tech Enthusiasts and Hobbyists",
        "Professionals Transitioning to Display Technologies",
        "Anyone Interested in Video Quality and Compression"
      ]
    },
    {
      "title": "IoT with Raspberry PI Pico W (C++)",
      "url": "https://www.udemy.com/course/iot-with-rpi-pico-w/",
      "bio": "MQTT using FreeRTOS coreMQTT-Agent Library.",
      "objectives": [
        "Build an IoT Stack on Pico W in C++",
        "Connect Pico-W to Wifi service",
        "Connect Pico-W to an MQTT Broker (port 1883)",
        "Publish messages in MQTT on a topic",
        "Subscribe to a MQTT Topic and handle incoming messages"
      ],
      "course_content": {},
      "requirements": [
        "Compile C++ code and copy binary to a Pico-W",
        "Basic electronics (Connect LED to a Pico)",
        "Good C++ Knowledge",
        "Understanding of FreeRTOS Kernel",
        "Basic Python knowledge. Used for test scripts"
      ],
      "description": "The Internet of Things (IoT) allows us to put small devices around our environment to measure and control. The Raspberry PI Pico-W is an excellent platform for developing such IoT devices, connecting over WIFI and MQTT protocol.\nIn this course, we explore how to code C++ for a Pico-W  IoT device using the FreeRTOS coreMQTT-Agent library version v1.1.0. We take the approach of building an IoT framework for all the devices we want to build. With the ability to connect, publish and subscribe to messages. To operate we also need an MQTT broker and the course talks through the use of Eclipse Mosquitto as a locally installed broker on a Raspberry PI, or using Flespi as a cloud-hosted broker.\nThe course covers:\nEstablishing WIFI connectivity in station mode to an access point or router\nBuilding TCPIP socket transport for MQTT protocol\nPublishing messages\nSubscribing and taking action on messages\nSecuring MQTT over a TLS Socket, using WoldSSL\nSimple circuits to turn on and off an external LED using a local switch connected to the Pico-W are used to test the concepts.\nThe course assumes knowledge of C++. Though each example walks through the functionality, the course will not talk about the syntax of C++. FreeRTOS Kernel is used to support concurrent tasks for managing the MQTT protocol and an understanding of FreeRTOS Kernel is assumed. I have another course on FreeRTOS Kernel for the Raspberry PI Pico to cover this.\nThe course assumes you can compile and deploy C++ code to the Pico using the Raspberry PI Pico SDK. My other course “Introduction to C Development Environment for Raspberry PICO” teaches these skills.\nTest scrips to interact with the device are written in Python. Some basic Python knowledge would be helpful.\nFull captions are provided for the course and are not auto-generated.",
      "target_audience": [
        "Embedded developers",
        "Hobby developers",
        "C++ Engineers",
        "IoT Engineers",
        "Makers"
      ]
    },
    {
      "title": "Microsoft Azure IoT For Beginners",
      "url": "https://www.udemy.com/course/microsoft-azure-iot-for-beginners/",
      "bio": "Learn the fundamentals of Azure IoT and build an IoT solution with ESP32 & Raspberry Pi 4 from scratch",
      "objectives": [
        "Learn an overview of Azure IoT",
        "Learn how to use some of the key Azure IoT services with IoT devices",
        "Develop an end-to-end Azure IoT project",
        "Gain in-depth knowledge related to Azure IoT concepts and implementation",
        "Be confident to design and deploy your own Azure IoT projects"
      ],
      "course_content": {
        "Getting started with Microsoft Azure IoT": [
          "Introduction to the course",
          "Internet of Things 101",
          "IoT and Everything as a service",
          "Azure for IoT",
          "Azure IoT Services Overview",
          "Azure IoT Case Studies",
          "Assignment 1"
        ],
        "Getting Familiar with Microsoft Azure": [
          "Cloud Computing Overview",
          "Microsoft Azure IoT Architecture",
          "Setting up your Azure Account",
          "Azure Portal Overview",
          "Cost Management in Azure",
          "Assignment 2"
        ],
        "Introduction to Azure IoT": [
          "Key Azure IoT Services Covered in the course",
          "Azure IoT Hub",
          "Azure Device Provisioning Service",
          "Azure Stream Analytics",
          "Azure Service Bus",
          "Azure Blob Storage",
          "Azure Logic Apps",
          "Azure Time Series Insights",
          "Assignment 3"
        ],
        "Getting Hands-on with Azure IoT": [
          "Azure IoT SDK Overview",
          "Installing & Configuring Azure IoT Python SDK on Raspberry Pi 4",
          "Azure Library Installation and API Overview for ESP32",
          "Provisioning and Managing an IoT device using DPS",
          "Setting up Secure Connection & Processing Telemetry Data",
          "Visualizing Telemetry Data via TSI explore",
          "Assignment 4"
        ],
        "Capstone Project: End to End Azure IoT Project": [
          "Overall Azure IoT Architecture of the Project",
          "Interfacing Components & Azure IoT Cloud Configuration",
          "Code Implementation & Explanation for ESP32",
          "Secure Connection & Data Processing",
          "Code Implementation & Explanation for Raspberry Pi 4",
          "Project Implementation Part 1 : Event Triggering and Visualization",
          "Project Implementation Part2: Event Triggering and Visualization",
          "Course Conclusion",
          "Assignment 5"
        ]
      },
      "requirements": [
        "Basic understanding of electronics and related concepts",
        "A fair idea of setting up the Raspberry Pi 4 and ESP32 boards",
        "Basic familiarity with the programming in Arduino IDE",
        "Basic understanding of Python and Embedded C"
      ],
      "description": "Hello learners!\nWelcome to MAKERDEMY's “Microsoft Azure IoT For Beginners” course.\nThis is a beginner level course that will teach you to build your own Azure IoT projects. This course will help you learn the basic concepts of Azure Cloud and give you hands-on experience in implementing some of the key Azure IoT services. This course will teach you to build your own Azure IoT projects with the powerful credit-card sized computer and a development microcontroller board. Do you wish to explore the world of Azure IoT with ESP32 and Raspberry Pi 4? Want to learn how to work with Azure Cloud platforms and implement end-to-end Azure IoT projects?\nThis course is a one stop destination for getting started with Microsoft Azure IoT. By the end of the course, you will become very confident with using Azure IoT hub service and Configuring, integrating, and connecting various other Azure cloud services for your IoT Solution. You will learn through demonstrations on getting started with various Azure IoT services and then move onto a capstone project that combines several azure services. If you complete all sections in the course and the course assignments, you are sure to gain in-depth knowledge related to Azure IoT concepts and implementation.\nThroughout the course, we have provided a curated collection of original resources. These resources include links to documents for in-depth learning, links, videos, and more. At MAKERDEMY, we have a dedicated instructor team who will promptly answer any of your course-related queries.\nSo, what are you waiting for?! Come, join me in this course. I look forward to being your instructor for this course and introduce you to the world of Azure IoT!",
      "target_audience": [
        "An engineer who wants to start working with Azure IoT services",
        "IoT enthusiasts who wish to work with IoT devices in collaboration with cloud",
        "Electronics hobbyists who look forward to exploring the world of the IoT",
        "A student who wants to build IoT projects using Microsoft Azure IoT services",
        "Anyone with basic programming experience and an interest to learn"
      ]
    },
    {
      "title": "ESP32-C3 JTAG Debug",
      "url": "https://www.udemy.com/course/esp32-c3-jtag-debug/",
      "bio": "Learning JTAG Debug Skill by using OpenOCD",
      "objectives": [
        "GDB, JTAG, OpenOCD basic knowledge",
        "Setup GDB JTAG Debug for ESP32",
        "Use GDB to debug ESP32-C3 software",
        "JTAG GDB debug skills"
      ],
      "course_content": {},
      "requirements": [
        "one ESP32-C3 board with USB Jtag interface, such as \"ESP32-C3-DevKit-RUST-1\"."
      ],
      "description": "This course focus on how to use GDB to implement the JTAG debug for ESP32-C3 firmware software through OpenOCD.\nWe will learn the JTAG debug skill for the following GDB commands:\n\n\n(1) Break command: learn how to add break point at different positions of the code, how to check the break point information,  delete break point and set the temporary break point;\n(2) Watch command: learn how to watch the value for different types of variables, such as, integer, pointer and expression;\n(3) Next, Step, Until command: Learn how to debug the code step by step;\n(4) Print command: learn how to print out data value for the integer, array, string, struct and variables in different functions and files, also included how to set data with different values by print command;\n(5) Display command: learn how the display command automatically show the variables' value;\n(6) Examine command: learn how to show variables' value according the memory address;\n(7) Ptype, whatis command: learn how to show the type of the variables;\n(8) Backtrace, where, frame command: learn how to trace the code by the stack information;\n(9) Jump command: learn how to ignore code, repeat code and run branch code by the jump comand;\n(10) Set command: learn how to set \"code\" variable value and how to set \"environment\" variable value;\n(11) Define command: learn how to create a new \"command\" by using define command;\n\n\nNOTES:\nThe course is based on one ESP32-C3 USB JTAG board, NOT one normal ESP32 board. You can get more information from lecture 4.",
      "target_audience": [
        "People who is interested in using GDB JTAG debug for ESP32-C3"
      ]
    },
    {
      "title": "Modern Communication Systems",
      "url": "https://www.udemy.com/course/modern-communication-systems/",
      "bio": "Explore Modern Communication Systems, Wireless Spectrum & Technology, Antennas Sys, Radio Networks, 5G, 6G, NFV, AI & ML",
      "objectives": [
        "Take a deep-dive into Wireless Communication",
        "Learn about Wireless Technology and Wireless Spectrum",
        "Deep-dive into 5G and what's beyond",
        "Understand the Modulation and Antenna Systems",
        "Gain insights into Cognitive Radio Networks (CRN)",
        "Learn about Indoor Radio Planning and Tunnel Radio Planning",
        "Understand the working of Distributed Antenna Systems",
        "Take a deep dive into Mobile Network Engineering",
        "Understand how GSM network works",
        "Learn about EGPRS",
        "Explore 3rd Generation Networks",
        "Learn about HSPA, 4G-LTE, LTE-A, and more"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Modern Communication Systems course by Uplatz.\n\n\nModern communication systems encompass a broad range of technologies and methodologies that facilitate the exchange of information among individuals, devices, and networks. These systems have evolved significantly over the years, driven by advancements in technology and the increasing demand for faster, more reliable, and versatile communication.\n\n\nThe key components and aspects of modern communication systems include:\nMobile Communication: Encompassing cellular networks, mobile communication involves the wireless transmission of voice and data. It includes technologies like 3G, 4G LTE, and the latest generation, 5G, which enables faster data transfer rates, lower latency, and increased device connectivity\nWireless Technologies: Beyond mobile communication, wireless technologies cover a broad spectrum, including Wi-Fi for local area networking, Bluetooth for short-range device connectivity, and various IoT (Internet of Things) protocols that enable communication among smart devices\n5G Technology: The fifth generation of mobile networks, 5G, represents a significant leap forward in terms of data speed, capacity, and connectivity. It introduces features like massive machine-type communication, ultra-reliable low-latency communication, and enhanced mobile broadband\nRadio Networks: Radio networks form the backbone of wireless communication systems. This includes the design and management of radio frequency (RF) networks, which are essential for transmitting and receiving signals wirelessly\nAntenna Systems: Antenna systems are critical components for wireless communication. They are responsible for transmitting and receiving signals efficiently. Understanding antenna design, placement, and optimization is crucial for effective communication system performance\nSignal Processing: Signal processing involves the manipulation and analysis of signals to extract information. In the context of communication systems, signal processing plays a vital role in tasks such as modulation, demodulation, error correction, and noise reduction\nData Transmission and Networking: Modern communication systems rely on sophisticated data transmission techniques and network protocols. This includes the use of packet-switched networks, protocols like TCP/IP, and various communication standards that ensure seamless and reliable data exchange\nSatellite Communication: Satellite communication systems enable long-distance and global connectivity. They are used for broadcasting, telecommunication, and internet services in remote or challenging-to-reach areas\nInternet of Things (IoT): The integration of communication technologies with everyday objects characterizes the IoT. It involves interconnected devices and systems that communicate and share data, contributing to smart homes, cities, and industries\nCloud Communication: Cloud-based communication systems leverage cloud infrastructure to provide scalable and flexible services, enabling businesses and individuals to communicate and collaborate across various platforms\nUnderstanding and mastering modern communication systems is essential for professionals in fields such as electrical engineering, computer science, telecommunications, and information technology. Courses and training programs in this domain cover a spectrum of topics to equip individuals with the skills needed to design, implement, and optimize communication systems in our interconnected world.\n\n\nModern Communication Systems - Course Curriculum\n\n\nEvolution of Mobile Communication - I\nEvolution of Mobile Communication - II\nWireless Spectrum and its Implementation in 5G - I\nWireless Spectrum and its Implementation in 5G - II\nWireless Spectrum and its Implementation in 5G - III\nWireless Technology 5G and Beyond - I\nWireless Technology 5G and Beyond - II\nPractical 2G-3G-4G - I\nPractical 2G-3G-4G - II\nPractical 2G-3G-4G - III\nPractical 2G-3G-4G - IV\nPractical 2G-3G-4G - V\nIntroduction to HSPDA\nModulation and Antenna Systems\nIntroduction to 4G-LTE - I\nIntroduction to 4G-LTE - II\nIntroduction to 4G-LTE - III\nCognitive Radio Networks (CRN) - I\nCognitive Radio Networks (CRN) - II\nCognitive Radio Networks (CRN) - III\nCognitive Radio Networks (CRN) - IV\nIndoor Radio Planning - I\nIndoor Radio Planning - II\nIndoor Radio Planning - III\nDistributed Antenna Systems - I\nDistributed Antenna Systems - II\nDistributed Antenna Systems - III\nDistributed Antenna Systems - IV\nDistributed Antenna Systems - V\nDistributed Antenna Systems - VI\nDesigning Indoor DAS solutions - I\nDesigning Indoor DAS solutions - II\nDesigning Indoor DAS Solutions - III\nDesigning Indoor DAS Solutions - IV\nDesigning Indoor DAS solutions - V\nDesigning Indoor DAS Solutions - VI\nDesigning Indoor DAS Solutions - VII\nTraffic Dimensioning - I\nTraffic Dimensioning - II\nNoise - I\nNoise - II\nNoise - III\nThe Link Budget - I\nThe Link Budget - II\nTools for Indoor Radio Planning - I\nTools for Indoor Radio Planning - II\nOptimization of Radio Resources\nTunnel Radio Planning - I\nTunnel Radio Planning - II\nTunnel Radio Planning - III\nTunnel Radio Planning - IV\nCovering Indoor Users from Outdoor Network - I\nCovering Indoor Users from Outdoor Network - II\nSmall Cell Indoors - I\nSmall Cell Indoors - II\nApplication Examples - I\nApplication Examples - II\nApplication Examples - III\nPlanning Procedure\nMobile Network Engineering - I\nMobile Network Engineering - II\nMobile Network Engineering - III\nGSM - I\nGSM - II\nGSM - III\nEGPRS\nThird Generation Network - I\nThird Generation Network - II\nThird Generation Network - III\nHSPA - I\nHSPA - II\n4G-LTE - I\n4G-LTE - II\n4G-LTE - III\n4G-LTE - IV\n4G-LTE - V\n4G-LTE - VI\nLTE-A - I\nLTE-A - II\nFrom 5G to 6G - I\nFrom 5G to 6G - II\nNetwork of the Future - I\nNetwork of the Future - II\nNetwork of the Future - III\nFuture of Wireless Communication with 6G\nAI and ML in 5G and 6G Era\n6G Wireless Communication Systems - I\n6G Wireless Communication Systems - II\n6G Architectures, Applications and Challenges - I\n6G Architectures, Applications and Challenges - II\nCybersecurity in Digital Transformation Era - I\nCybersecurity in Digital Transformation Era - II\nNetwork Function Virtualization (NFV) - I\nNetwork Function Virtualization (NFV) - II\nNetwork Function Virtualization (NFV) - III\nNetwork Function Virtualization (NFV) - IV\n\n\nEmbark on a transformative journey into the dynamic realm of Modern Communication Systems. This comprehensive course is designed to unravel the intricacies of cutting-edge technologies, exploring the evolution of mobile communication, wireless technologies, and the revolutionary 5G landscape. Delve into the architecture of radio networks, gaining insights into signal processing, antenna systems, and RF engineering. Equip yourself with the skills and knowledge needed to navigate the fast-paced world of communication systems, where connectivity is paramount and innovation knows no bounds. From the fundamentals to the latest advancements, this course is your gateway to mastering the foundations and emerging trends shaping the future of global communication.",
      "target_audience": [
        "Electronics and Telecommunications Engineers",
        "Network Engineers",
        "Beginners and newbies aspiring for a career in Modern Communication Systems",
        "Wireless Communications Engineers",
        "Signal Processing Engineers",
        "RF Engineers",
        "IoT Engineers",
        "Systems Architects",
        "Instrumentation Engineers",
        "Network Administrators",
        "Research and Development (R&D) Engineers",
        "Telecommunication Consultants",
        "Data Scientist/Analysts",
        "Project Managers"
      ]
    },
    {
      "title": "Complete Arduino Course, Electronics + 15 Projects",
      "url": "https://www.udemy.com/course/arduino-en/",
      "bio": "Learn Arduino from Scratch: Complete Course + 15 Projects",
      "objectives": [
        "Arduino Programming",
        "Electronic components",
        "Project creation",
        "Use of sensors"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge is required"
      ],
      "description": "Enough with the courses that show you sketches, and leave you with more questions than answers! With this mega complete course on Arduino from scratch, you will learn everything you need to step into the world of electronics, circuits, and Arduino.\nHow many times has it happened to you? That you search for information on how to create a project with Arduino, and hundreds of resources pop up, but none explain how or why the project works.\nOr maybe you are new to this world of electronics, and you want to know how to work with Arduino, but can't find a guide to help you learn incrementally.\nThat ends today!\nI present to you, the best Arduino course in Spanish to date. In this course, we start from scratch. And when I say zero, I really mean from zero.\nWe begin by explaining some fundamentals that are necessary to create projects, such as the operation of the pins on Arduino, operation of electronic components, and even, we break down the sketch that is created whenever we create a new file from the Arduino IDE, in order to analyze it and test what happens if lines of code are missing.\nIn addition to being a course focused on learning to create projects, we also focus on programming, since, although the goal of the course is not for you to become an expert programmer, programming is a fundamental component that will allow you to create increasingly complex projects. It's like an additional toolbox that you need to learn how to use.\nIn many of the projects, we will start by creating projects on the Tinkercad platform, so you won't have to worry about having the necessary hardware to create the projects, and you won't have to worry about burning the circuits, definitely a great option if you are just starting out.\nThroughout the course, we will create multiple projects that will turn you into a maker in every sense of the word, from simple ones to more complex ones.\nIn total, we will create more than 15 Projects with Arduino, all explained step by step.\nSome of the topics we will cover in the course are:\nProgramming basics with Arduino\nDecision statements\nDigital pins\nAnalog pins\nUsing sensors\nUsing electronic components\nArrays\nMatrices\nLEDs\nPotentiometers\nLoops\nPhotoresistors\nUsing Tinkercad to create simulations\nand a long etc.\nWhat are you waiting for to become a maker with Arduino? I'll see you in the course.",
      "target_audience": [
        "Electronics Students",
        "Electronics enthusiasts",
        "Aspiring makers",
        "Developers looking to create IoT solutions"
      ]
    },
    {
      "title": "Home Automation Using Raspberry Pi And Windows 10 IoT",
      "url": "https://www.udemy.com/course/home-automation-using-raspberry-pi-2-and-windows-10-iot-windowsiot10/",
      "bio": "Use Raspberry Pi and Windows 10 to build a home automation system that can operate home devices automatically",
      "objectives": [
        "How this Home Automation Device is structured, user interface, device connection and working principle.",
        "Managing Different Rooms",
        "Device Addressing: Address Mapping",
        "What is the difference between I²C and other communication methods",
        "Circuit Connection",
        "Controlling High power loads via Arduino",
        "Software Needed to Code Arduino and Raspberry Pi",
        "Communication Protocol",
        "Raspberry Pi and Arduino communication",
        "Windows 10 IoT User Interface",
        "Arduino Coding",
        "Visual Studio User Interface and Raspberry Pi Coding",
        "What is I²C and how it works",
        "What You Need to Get things done",
        "Tips and Tricks and Helpful Resources",
        "I2C Communication Protocol",
        "Device Address Mapping",
        "How to code I²C the right way and how to talk to multiple devices easily",
        "Code and Circuit Schematics to connect Arduino and Raspberry Pi",
        "Communication Protocol between Raspberry Pi and Arduino",
        "Tips and Tricks",
        "Advantages of I²C and Disadvantages of I²C",
        "I²C Operation",
        "Main I²C Bus Library Functions",
        "How to implement I²C in your project",
        "Why using I²C will make your life easier",
        "Known Issues"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction & Getting Started",
          "Home Automation with Raspberry Pi and Windows 10 IoT",
          "Hardware and Software Requirements"
        ],
        "Notes": [
          "I2C Previous Knowledge is not required"
        ],
        "Smart Home - Rooms Setup": [
          "Smart Home Rooms Setup",
          "Devices and Rooms addressing Mechanism"
        ],
        "Circuit Schematic": [
          "Download and Install Fritzing Software",
          "Circuit Schematic Part1",
          "Circuit Schematic Part2"
        ],
        "Wiring Smart Home appliances": [
          "How to wire home appliances with Relay Module",
          "How a Relay Module Works"
        ],
        "Software and Communication Protocol": [
          "Software and Communication Protocol",
          "Software and Communication Protocol Example"
        ],
        "Arduino Coding": [
          "Download and Install Arduino IDE",
          "Arduino Coding Part1",
          "Arduino Coding Part2",
          "Arduino Coding Part3",
          "Arduino Code"
        ],
        "Visual Studio for IoT": [
          "Download and Install Visual Studio for Coding",
          "Download and Install Windows 10 IoT Core on SD Card",
          "Windows Device Portal Walkthrough",
          "Prepare Environment for Your First Code"
        ],
        "Classes Needed for This Project": [
          "Classes Diagram"
        ],
        "User Interface Structure Explained": [
          "User Interface Structure Explained"
        ]
      },
      "requirements": [
        "Internet Connection",
        "Computer, Laptop, Mac or Chrome device",
        "A basic knowledge in C Programming language"
      ],
      "description": "Use Raspberry Pi and Windows 10 to build a home automation system that can operate home devices automatically.\nToday, technology is enhancing human life. Technology is evolving in a very fast manner. Automation was an idea and a dream but not today. By combining the latest technologies with Home Devices, Everyone can build A Fully Automated Home. With the Raspberry Pi and Windows 10 IoT, we can build a home automation system that is capable of handling and operating any of your home devices automatically.\nIn this course, an Arduino UNO will be used to control different devices and read different sensor data. Raspberry Pi will send requests for Arduino UNO to get the sensor data collected.\nEach room can have multiple controllable devices (Light, Fan, Wall Socket), PIR Sensor, temperature sensor, and LDR. We will explain how to connect everything and how to code each part in a step-by-step manner.\nWhy we are using Windows 10 IoT Core:\nBuilt for small, secure, smart devices: The smallest Windows 10 operating system still has the manageability and security expected from Windows.\nSmart: Easily bring Artificial Intelligence (AI) and Machine Learning (ML) to the edge with Windows.\nSecure: Help keep devices secure for the long term.\nFast: Quickly get IoT devices to market and maintain for the long term with out-of-the-box OS.\nWhat about Communication Protocols?\nI²C (pronounced I-squared-C): Allows communication of data between I2C devices over two wires, making it easier for anyone to exchange information without too much wiring.\nI2C Communication between Arduino and Raspberry Pi: A step-by-step guide to Master I2C Protocol and Start using it to connect your Arduino and Raspberry Pi.\nIn today's world, every electronics hobbyist works with Arduino and Raspberry Pi to do their projects. With the introduction of Windows 10 IoT Core, Microsoft is also into the embedded world. Today Internet Of Things is a buzzword, but for basic things, we need an Arduino to communicate with a Raspberry Pi. In this course, I will explain how to communicate the Arduino with the Pi using an I2C bus and Windows 10 IoT Core.\nI2C communications have become the de facto method of communicating between microcontrollers, microcomputers, and a variety of integrated circuits and sensors. It has been around since 1982 and was originally developed for use in television receivers.\nJoin this course now and start building your fully automated home using Raspberry Pi and Windows 10 IoT.\nWhat you will learn\nBuild a home automation system using Raspberry Pi and Windows 10 IoT.\nControl various home devices (lights, fans, wall sockets) automatically.\nUse Arduino UNO to read sensor data and control devices.\nConnect and code multiple controllable devices and sensors step-by-step.\nImplement I2C communication between Arduino and Raspberry Pi.\nUnderstand and use Windows 10 IoT Core for small, secure, and smart devices.\nWho is this course for\nElectronics enthusiasts interested in home automation.\nHobbyists and makers looking to expand their skills with Raspberry Pi and Windows 10 IoT.\nEngineering students and professionals wanting to learn about IoT.\nAnyone interested in building and controlling automated home systems.\nRequirements\nBasic understanding of Raspberry Pi, Arduino, and electronics.\nA Raspberry Pi board, Arduino UNO, and necessary peripherals.\nBasic programming knowledge is helpful but not required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Learning How to learn Home Automation Using Raspberry Pi And Windows 10 IoT",
        "Anyone Interested in Learning How to Control Home devices using a beautifully created User Interface by Combining the power of Raspberry Pi with Windows 10IoT",
        "Anyone Interested in Learning I2C Communication between Arduino and Raspberry Pi",
        "Anyone Interested in Learning I2C Communication in A Step by Step Manner",
        "Anyone Interested in Learning Arduino I2C Communication",
        "Anyone Interested in Learning Raspberry Pi I2C Communication",
        "Anyone interested in talking to multiple devices easily via I²C the right way",
        "Anyone Interested in Interfacing Arduino with other ICs or devices via I²C",
        "Anyone Interested in Controlling different devices using I²C Protocol",
        "Arduino Lovers",
        "Raspberry Pi Lovers"
      ]
    },
    {
      "title": "Allen Bradley PLC Training | PIDE Programming & PIDE Tuning",
      "url": "https://www.udemy.com/course/allen-bradley-plc-training-pide-programming-pide-tuning/",
      "bio": "Programming PIDE Process Loops & Simulation Trainer",
      "objectives": [
        "How to program PIDE loops & tune PIDE control loops",
        "How to trouble shooting PIDE loops"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Building Our PIDE Simulation Loop PLC Logic": [
          "Adding Our New Routine & Changing Task Rate",
          "Adding Our PIDE Instruction",
          "Pinning Our Simulation Loop in Function Block",
          "Using DeadTime & Lead Lag Instructions",
          "PIDE Equations & How They Work",
          "Adding a PIDE Trend & Our Very First Tune",
          "Understanding Dead Time & The Array Data",
          "Manual Tune In Independent Mode"
        ],
        "Auto-Tuning PIDE Loops": [
          "Auto-tune independent PIDE loops",
          "Auto-tune dependent PIDE loops"
        ],
        "Get the PIDE Trainer": [
          "How the PIDE Trainer Logics Works",
          "How to implement the PIDE Trainer",
          "Thank You"
        ]
      },
      "requirements": [
        "Willing to learn, have a laptop or desktop computer"
      ],
      "description": "Learn how a PIDE loop works in independent & dependent mode with a simple & easy trainer that you can use anytime you want to practice. We also use the first section of this course to teach you how to program a PIDE loop in function block & why it is important to have the PIDE loop in a periodic task.\n\nFrom programming a PIDE loop from scratch to building a trend & why using a trend is important for tuning in manual tune, also to see how a PIDE is responding in normal operation. This trainer has been proven to share deep knowledge with anyone who attends & is also designed to save you time by keeping the video length short & to the point.\n\nWe give you the HMI screen & the logic downloads to make learning easy.\n\nIt really doesn't get any better than this.\n\nKey things that are included:\nProgram a Function Block PIDE Loop\nSet up an Easy To Understand Trend\nManual Tune a PIDE Process Loop\nAuto-Tune a PIDE Process Loop\nDownload the Trainer for Your Own Use\nAll video content zooms in to give an easy view of the screen where it is important to see along with highlighting areas as well. We have placed easy-to-read notes in the videos for extra guidance.",
      "target_audience": [
        "Anyone looking to learn PIDE process control loops"
      ]
    },
    {
      "title": "Code Full-Stack GPS Project with Expert Guidance | 2025",
      "url": "https://www.udemy.com/course/code-your-own-gps-dashboard-step-by-step-using-esp32/",
      "bio": "Utilize the Full Power of HTML, CSS, JavaScript and C++ for Developing a Personalized ESP32 GPS Dashboard | No 3rd Party",
      "objectives": [
        "Delve into the critical role of a custom web dashboard for efficient GPS data tracking, laying the project foundation.",
        "Address integral hardware and software requirements, ensuring a well-prepared mission.",
        "Gain a profound understanding of GPS and its principles for effective module implementation.",
        "Shift focus to practical GPS module setup and testing in the Windows Environment.",
        "Explore ESP32 board integration with Arduino IDE, mastering functionality and validating performance.",
        "Introduce the OLED Display module, unraveling its inner workings for visual data representation.",
        "Integrate Firebase as a real-time database and Mapbox for map visualization to complete the core workflow.",
        "Test all hardware modules and proceed to assemble them into one circuit.",
        "Craft backend C++ code for transmitting GPS data to Firebase and displaying on the OLED for user experience.",
        "Explore frontend development, bringing the interface to life using Python, HTML, CSS, Bootstrap, and Javascript.",
        "Learn about PythonAnywhere, a Python-based web hosting provider.",
        "Deploy the complete project on the server for global browser access.",
        "Address Firebase's payment limitation by developing an App Script code for GPS data storage in Google Sheets.",
        "Witness real-time project output, observing live data acquisition, web dashboard display, and Google Sheets insertion."
      ],
      "course_content": {
        "Introduction": [
          "Project Concept",
          "Hardware and Software Requirements",
          "Document - Hardware and Software Requirements",
          "Introduction to GPS and its Working Principle"
        ],
        "Testing GPS Module": [
          "Introduction to NEO6M GPS Module",
          "Understanding the Circuit Diagram to Test GPS Module in Windows",
          "Circuit Diagram - Testing GPS Module in Windows",
          "Setting up GPS Module in Windows",
          "Testing GPS Module in Windows"
        ],
        "Setting Up and Testing ESP32 in Arduino IDE": [
          "Connecting and Verifying the USB to UART Chip in ESP32",
          "Arduino Installation",
          "Setting Up ESP32 in Arduino IDE",
          "Testing the ESP32 Board - Part 1",
          "Testing the ESP32 Board - Part 2",
          "CODE - Testing the ESP32 Board"
        ],
        "Testing OLED Display": [
          "Introduction to the OLED Display",
          "Understanding the Circuit Diagram for Testing OLED Display",
          "Circuit Diagram - Testing OLED Display",
          "Understanding the Source Code for Testing OLED Display",
          "Code - Testing OLED Display",
          "Output - Testing OLED Display"
        ],
        "Firebase and Mapbox": [
          "Introduction to Firebase",
          "Account Creation and Setup of Firebase",
          "Introduction to Mapbox",
          "Account Creation on Mapbox"
        ],
        "Backend": [
          "Understanding the Circuit Diagram for GPS and OLED Connection with ESP32",
          "Circuit Diagram - GPS and OLED Connection with ESP32",
          "Understanding the Source Code to Send Data from ESP32 to Firebase - 1",
          "Understanding the Source Code to Send Data from ESP32 to Firebase - 2",
          "Understanding the Source Code to Send Data from ESP32 to Firebase - 3",
          "Understanding the Source Code to Send Data from ESP32 to Firebase - 4",
          "Installing all the Required Libraries",
          "CODE - Send data from ESP32 to Firebase",
          "Uploading Backend Code on ESP32",
          "OUTPUT - Backend Code"
        ],
        "Frontend": [
          "Understanding Frontend - Part 1",
          "Understanding Frontend - Part 2",
          "Understanding Frontend - Part 3",
          "Understanding Frontend - Part 4",
          "Understanding Frontend - Part 5",
          "Understanding Frontend - Part 6",
          "Understanding Frontend - Part 7",
          "Understanding Frontend - Part 8",
          "Understanding Frontend - Part 9",
          "Understanding Frontend - Part 10",
          "CODE - Frontend Code"
        ],
        "Making Project Live on Server": [
          "Choosing the Right Hosting Provider for the Project",
          "PythonAnywhere Account Creation & Configuration",
          "Uploading Project Files on PythonAnywhere",
          "Limitation of Firebase Free Account",
          "Understanding the Code to Save Firebase Data to Google Sheets - 1",
          "Understanding the Code to Save Firebase Data to Google Sheets - 2",
          "Setting up the App Script Code in Google Sheets & Creating the Trigger",
          "CODE - Save Firebase Data to Google Sheets"
        ],
        "Final Project Output": [
          "The Output of the Final Project",
          "Summary"
        ],
        "Practice Quiz, Coding Exercise and Assignment": [
          "ESP32 & OLED Module",
          "C++ Programming in Arduino IDE",
          "HTML, CSS, JS, Bootstrap & Python",
          "GPS Module",
          "Write a program to determine whether a given integer is a prime number or not.",
          "Write a program to convert a binary number to decimal.",
          "Build a simple calculator that performs basic arithmetic operations.",
          "Write a C++ program to find the largest number among three numbers.",
          "Write a program in C++ to insert an element at the end of an array.",
          "Write a C++ program to check whether two characters appear equally in a given string.",
          "Create a program : Two numbers as user input, display their sum using HTML, CSS, and JavaScript.",
          "Write a Python function is_leap_year that takes a year as parameter and returns True or False.",
          "Create a Python class with setString and printString methods: set user string, print in uppercase.",
          "Build password generator: 8-16 characters, mix of letters, punctuation, and digits.",
          "Write a program to send an email using smtplib library.",
          "Write the program to calculate Body Mass Index (BMI) based on height and weight provided.",
          "Create a currency converter program using the exchange rates.",
          "ESP32 & OLED Display Program",
          "Flask Program",
          "Relay control Using ESP32"
        ]
      },
      "requirements": [
        "Basic programming knowledge is recommended for this course to ensure a smooth learning experience.",
        "Ensure that you have a laptop or desktop equipped with reliable internet connectivity."
      ],
      "description": "I would like to introduce you to a brand new online course where you can learn to create a personalized web dashboard that empowers you to monitor the real-time location of your lost vehicle or person with detailed information. Even if you want to measure the distance and direction of the lost vehicle from your current location, it will also display the same. Let me show you the demo of this innovative project.\nHow this course is completely different from all other courses?\nWhat sets this course apart from others is its distinct approach. Unlike many courses that rely on 3rd party IoT dashboards, where coding is limited to extracting data from the GPS and then sending it to the 3rd party IoT dashboard for visualization. So you learnt primarily the backend coding, the database and the frontend is handled by pre-existing IoT platforms. By following this approach the learning is almost zero.\nWhereas, our course takes a comprehensive approach to full stack development. This means you will be personally crafting the entire backend using C++, and write the code to send all the acquired data to the realtime database. Upon completing these two phases, you will start designing the frontend using HTML, CSS, JavaScript, Bootstrap and Python.\nHere are four main reasons, why you should take this course.\n1. Custom Dashboard - By building your own dashboard, you'll have complete control over its design and functionality. You can tailor it precisely to your needs, ensuring a unique and customized user experience.\n2. Unlimited Access - Unlike most IoT dashboards that offer only trial accounts with limited features, this course empowers you to overcome such limitations. Your project won't be constrained by server restrictions or data access. You'll have the freedom to track data as you please, ensuring your project remains fully accessible and functional.\n3. Full Stack Developer Experience - Through this project, you're not just learning a few coding techniques, but you're actually building a full-stack project from scratch. This valuable hands-on experience is incredibly beneficial, especially for aspiring full stack developers. The skills and knowledge you gain from this course will be directly applicable to real-world scenarios and could significantly enhance your job prospects in the field.\n4. Offering to Clients - If you're a developer aiming to provide this solution to clients, you can fully customize and tailor the project to their specific requirements. This course grants you the capability to be the master developer, offering a solution that's both powerful and versatile for a wide range of scenarios.\nI have always been a firm believer in learning by doing, and in this course, you will learn what you need to know by hands-on experience. You don’t need any special knowledge except basic computer skills to get started with this course. Every one of you comes from a different background and hence the course is crafted from basic to advanced level with minute detail in every lecture.\nTo make the learning curve easier, the course has been divided into 9 sections. Then, let us see what we are going to learn in each section.\nIn the first section, we will understand the project concept and establish a strategic approach for its development. Thereafter, you will get to know the complete list of hardware and software requirements along with a clear understanding of the specific purpose each module serves in the project. Progressing further, we immerse ourselves in a comprehensive understanding of GPS and its underlying principles.\nIn the second section, we shift our focus towards the practical setup and testing of the GPS module. We will get to know how to assemble the GPS module as per the circuit diagram, and then test the newly purchased GPS module under windows environment. By doing this test, we will be sure that our GPS module is functioning properly and we can move ahead in the project. And, in case the test fails, you can simply request a replacement of your GPS module.\nThe third section takes us to the testing of our ESP32 board, a critical component in our project architecture. In order to test this board, we will first install the Arduino IDE, which is a widely recognized code editor that serves as a launching pad for deploying programs to the board. And, then add the required board manager library to integrate our ESP32 board. Upon successful integration, we will write our own code to test the functioning of our ESP32 board. By doing this, we will be assured that our newly purchased ESP32 functions properly.\nIn the fourth section, we will be testing the last module of our project, the OLED display. Our exploration begins with a deep dive into the OLED display's mechanics and operations. Following this, we will delve into the circuit diagram, illustrating how to seamlessly connect it with ESP32. Once the assembly is over, we will program the OLED module to display the required message. By performing this test we will be assured that our OLED display module is fit for the project or not.\nUpon successfully completing all the hardware modules test, we will begin the fifth section with Firebase and Mapbox. We will first understand the role of firebase in our project, and then walkthrough the account creation and configuration of the real-time database. Upon completing this, we will progress to the next phase, focusing on Mapbox. We will explore the platform in detail and navigate through the account creation process, setting the stage for api access and configuration.\nIn the sixth section, we'll start working on the backend. First, we'll figure out how to put together all the hardware modules to design the circuit for the backend. Then, we'll write a program to get all the GPS data from the connected module and send it to the Firebase for real-time display. To make it more user-friendly, we'll also show selected GPS data on the OLED Display module.\nThe seventh section of our journey delves into the realm of frontend development, where the user interface and interactivity of the project come to life. We will begin with Python source code, understanding what it does and why it's important. After that, we will be understanding the HTML source code's interplay with CSS and Javascript. These elements play an important role in enhancing interactivity and ensuring that our web application functions seamlessly. This section equips us with valuable insights into running the web server, rendering HTML files using Flask, and employing bootstrap, CSS and Javascript to manipulate elements, ensuring a visually appealing and highly interactive web interface.\nThe eighth section of our expedition delves into the practical aspect of deploying our project on an online server. Our objective is to ensure that the project is accessible from anywhere, fostering convenience and accessibility. To achieve this, we will walkthrough the process of  choosing the best free Python based hosting account and then uploading all the frontend source code to the platform.\nAs our goal is to build a completely free web application, we're utilizing a free Firebase account for the database. But, if we need to store these real-time data permanently, an upgrade to a paid Firebase plan with a recurring fee is necessary. So, as a developer, we should always find a way to fix these types of hurdles. Hence, we will be writing our own app script code to fetch all the upcoming data from the firebase and store them into Google Sheets. This approach ensures that all valuable GPS data is meticulously organized in a tabular format, providing a robust data repository that can be harnessed for various purposes in the future.\nIn the ninth section, we'll reap the rewards of our efforts. We will see the live demonstration of our project. Here, we will witness the complete project workflow, commencing with the backend data acquisition phase, where the ESP32 board seamlessly retrieves GPS data and transmits it to Firebase for real-time display.\nOn the frontend, we observe the retrieval of all the Firebase data, which are seamlessly displayed on the web dashboard. Simultaneously, we monitor the real-time insertion of data into Google Sheets every minute. This section serves as a testament to the successful execution of the entire project, showcasing its real-time capabilities and practical functionality.\nIn the final moments of our journey, we step back to take a panoramic view of the comprehensive project we've collectively constructed. So we will walk through the summary of the entire project.\nEach video in the course will teach you new concepts and techniques which you may apply to any of your projects immediately. This course assumes just a basic knowledge of programming, and you can leave the rest to us. So if you are somebody who has never built a web based project before, you need not to worry, I will be with you every step of the way.\nDon’t let technical errors hold you back from achieving your goals. If you ever need help, simply post your question in the question and answer section and our dedicated support team will get back to you within 24 hours. They are available to assist you 6 days a week, from Monday to Saturday.\nWe will also share the complete source code with you, so that you can easily replicate the project and deploy it immediately.\nAll lectures are accompanied by English subtitles, ensuring clear and comprehensive understanding.\nAlso if you don’t like the course, don’t worry at all, you are always protected by 30 days, no questions asked, money-back guarantee.\nAlright, so at the end of the day, you have got nothing to lose, so join me in this incredible journey into the world of web development.\nTake control of your career and invest in your future. Don’t miss the opportunity to improve your skills. Enroll now and take the first step towards a better future.",
      "target_audience": [
        "This course has been specifically designed with beginners in mind, making it accessible to individuals with basic knowledge of computer science.",
        "Whether you are just starting out or have a foundational understanding of the subject, you can confidently enroll in this course.",
        "Our curriculum takes into consideration the needs of learners at various skill levels, providing clear explanations and step-by-step guidance to ensure a smooth learning experience for everyone.",
        "Don't hesitate to join, as this course is tailored to support your learning journey from the ground up.",
        "If you're eager to undertake exciting projects with your ESP32, then this project is just right for you.",
        "This course is perfect for individuals aspiring to construct a comprehensive full-stack project right from the ground up."
      ]
    },
    {
      "title": "Become SVA Ninja",
      "url": "https://www.udemy.com/course/sva-ninja/",
      "bio": "- expert level topics in SystemVerilog",
      "objectives": [
        "SVA quick recap on basics",
        "Sequences and Properties in SVA",
        "Sequence repetition operators",
        "Composition operators for SVA Sequences",
        "Detecting first_match in ranged-temporal sequences",
        "Endpoint detection in temporal sequences",
        "Advanced Property operators",
        "Local Variables in SVA properties",
        "Scheduling Semantics - the secret of SVA's success"
      ],
      "course_content": {
        "Introduction to Assertion Based Verification (ABV)": [
          "Introduction to Assertion Based Verification (ABV)"
        ],
        "Assertion Based Verification flow": [
          "ABV Flow in VLSI Design process"
        ],
        "Layers in SystemVerilog Assertions": [
          "Layers in SystemVerilog Assertions (SVA)"
        ],
        "Declaring properties in SVA": [
          "Declaring properties in SVA"
        ],
        "Understanding SVA Sequences": [
          "Understanding SVA Sequences"
        ],
        "Sequence Repetition Operators in SVA": [
          "Sequence Repetition Operators in SVA"
        ],
        "Advanced Sequence operators - composition": [
          "Advanced Sequence operators - composition"
        ],
        "first_match operator in SVA Sequences": [
          "first_match operator in SVA Sequences"
        ],
        "Using endpoints in Sequences": [
          "Using endpoints in Sequences"
        ],
        "Using Sequences beyond assertions context": [
          "Using Sequences beyond assertions context"
        ]
      },
      "requirements": [
        "Verilog",
        "Digital Design",
        "Basic SystemVerilog Assertions"
      ],
      "description": "What is SystemVerilog Assertion (SVA)?\nSVA is an integral part of IEEE-1800 SystemVerilog language, focusing on the temporal aspects of specification, modeling and verification. SVA allows sophisticated, multi-cycle assertions and functional checks to be embedded in HDL code. SVA allows simple HDL boolean expressions to be built into complex definitions of design behavior, which can be used for assertions, functional coverage, debug and formal verification.\nThis course gives you an in-depth introduction to the language. It starts with basic concepts but quickly moves on to advanced topics. Specifically we delve deep into SVA Sequences and show how complex temporal expressions can be built. We describe how to leverage on first_match operator to avoid unexpected threads leading to false alarms.\n\n\nOn the properties front we show how local variables help you model design characteristics.\n\n\nWe end this course with a detailed look at Sampling Semantics in SVA - this is unique in the industry as many courses do not cover this key concept.\n\n\nBelow is more detailed agenda.\n\n\nIntroduction to Assertions & ABV\nIntroduction to SystemVerilog\nStructure of an assertion\nSequences and Properties in SVA\nSequence repetition operators\nComposition operators for SVA Sequences\nDetecting first_match in ranged-temporal sequences\nEndpoint detection in temporal sequences\nAdvanced Property operators\nLocal Variables in SVA properties\nScheduling Semantics - the secret of SVA's success",
      "target_audience": [
        "VLSI Design Verification engineers",
        "RTL Design engineers",
        "DV leads",
        "DV managers"
      ]
    },
    {
      "title": "Unlock Wireless Programming for Arduino!",
      "url": "https://www.udemy.com/course/program-arduino-wirelessly-bluetooth-without-wire-arduino-program/",
      "bio": "Bypass the cables! Dive into the world of wireless programming for Arduino using just your laptop or mobile device",
      "objectives": [
        "Get rid of wiring when you need to reprogram your Arduino Board",
        "Program your Arduino Wirelessly",
        "Program Arduino without a Laptop/PC",
        "Program Arduino using Your Laptop/Phone without a USB Cable and send your codes over the air",
        "Move to the next level in Arduino programming"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Educational Engineering Team - Who we are?",
          "Exploring Wireless Upload Concepts for Arduino Development",
          "Note: Things Your Need to Know",
          "Summary",
          "Reading Material",
          "Exploring Course Basics"
        ],
        "Hardware and Software Requirements": [
          "Section Intro",
          "Hardware and Software Requirements",
          "Software download and installation",
          "Summary",
          "Reading Material"
        ],
        "Bluetooth Module HC05": [
          "Section Intro",
          "HC05 Bluetooth Module",
          "Technical Specifications",
          "Summary",
          "Reading Material",
          "Understanding the HC05 Bluetooth Module"
        ],
        "Software Serial vs Hardware Serial in Arduino": [
          "Section Intro",
          "Difference between Software Serial vs Hardware Serial in Arduino",
          "Quick Intro",
          "Software Serial Library",
          "Hardware Serial",
          "Summary",
          "Reading Material",
          "Analyzing Serial Communication Methods"
        ],
        "PC/Laptop: Circuit Design": [
          "Section Intro",
          "First Circuit - AT Command mode",
          "First Circuit - To Place Arduino in AT Command Mode",
          "Setup Bluetooth to enter AT Mode",
          "Second Circuit Design for Final Use Pin32 Included",
          "Soldering Pin32 to Connect to Arduino Reset",
          "Arduino Circuit Design and Bluetooth Setup",
          "Second Circuit",
          "Summary",
          "Reading Material",
          "Designing Arduino Circuits with Bluetooth"
        ],
        "Programming Arduino - PC Wireless Programming": [
          "Section Intro",
          "Code - Upload it to Arduino using USB Cable",
          "Programming Arduino For PC Wireless Programming",
          "Summary",
          "Reading Material",
          "Implementing Wireless Programming Basics"
        ],
        "AT Commands": [
          "Section Intro",
          "AT Commands Explained",
          "Required AT Commands to Get Arduino and Blutooth Ready",
          "Summary",
          "Reading Material",
          "Exploring AT Commands for Bluetooth Configuration"
        ],
        "Practical: Arduino Wireless Programming via PC": [
          "Section Intro",
          "Practical Assembly and sending Code from PC Wirelessly",
          "Wireless Programming and Practical Assembly",
          "Summary",
          "Reading Material",
          "Practical Assembly for Wireless Programming"
        ],
        "Mobile Code for Programming Arduino Wirelessly": [
          "Section Intro",
          "Written Instructions",
          "Coding Arduino for Mobile Wireless Programming",
          "Code",
          "Summary",
          "Reading Material",
          "Mobile Wireless Programming Basics",
          "Using Bluino Loader for Arduino Programming"
        ],
        "Mobile App - Arduino IDE for Mobile": [
          "Section Intro",
          "How to Program Arduino Using A Mobile Device Bluino Loader",
          "Download, Install and Use Bluino App",
          "Mobile Wireless Programming with Arduino",
          "Bluino Loader - Arduino IDE",
          "Summary",
          "Reading Material"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch"
      ],
      "description": "Transcend Traditional Limitations:\nIn the dynamic world of Arduino, we often find ourselves confined by the chains of USB cables. Break free from these limitations and embrace the future of wireless programming for Arduino, all from the convenience of your laptop or mobile device.\nWhat You'll Discover:\nThe Essence of Wireless Programming: Dive into the core principles of wirelessly programming your Arduino, eliminating the hassle of constant USB connections.\nMobile Mastery: Learn to leverage the power of your smartphone to write, tweak, and upload codes to your Arduino board effortlessly.\nLaptop-led Learning: Harness the capabilities of your laptop or PC to interact with your Arduino without a tethered connection.\nWhy This Course?\nConvenience First: Say goodbye to the constraints of wired connections and the need for physical access every time you want to update your Arduino's code.\nUniversal Access: Whether you're on your mobile or laptop, gain the flexibility to program your Arduino from anywhere.\nExpert Guidance: Navigate the nuances of wireless programming with step-by-step guidance, practical demonstrations, and hands-on activities.\nCourse Offerings:\nDetailed Video Lessons: Engaging content to guide you through the intricacies of wireless Arduino programming.\nPractical Exercises: Reinforce your learning with hands-on tasks and challenges.\nLifetime Access & Updates: Stay updated with the evolving world of Arduino with perpetual access to course content and future updates.\nExclusive Community Access: Join our student community to share ideas, seek help, and collaborate on projects.\nA Promise of Excellence:\nWe're confident in the value this course offers. However, if you find it's not for you, we extend a 30-day money-back guarantee. Our primary goal is your satisfaction and learning.\nJoin the Wireless Revolution!\nElevate your Arduino skills, embrace the convenience of wireless programming, and revolutionize the way you interact with your projects. Enroll now and embark on a journey of innovation and convenience.",
      "target_audience": [
        "Anyone Interested in Programming Arduino using Your Laptop/Phone without a USB Cable and send your codes over the air",
        "Anyone Interested in Programming your Arduino Wirelessly",
        "Anyone Interested in Programming Arduino without a Laptop/PC",
        "Electronics Geeks",
        "Arduino Geeks"
      ]
    },
    {
      "title": "Learn PIC Microcontroller with this 30 Days Challenge",
      "url": "https://www.udemy.com/course/pic-microcontroller-learn-pic-microcontroller-30-days-challenge/",
      "bio": "The challenge is easy to follow, with each day containing a task that will help you understand PIC microcontroller",
      "objectives": [
        "You will learn the basics of how a microcontroller works",
        "Learn how to Code in C program from basic to pro",
        "This course will teach you everything you need to know about programming a PIC microcontroller.",
        "Learn at your own pace",
        "Comprehensive guide that takes you from basics to advanced concepts",
        "Practice programming and circuit building exercises",
        "Understand how PIC microcontrollers work",
        "You'll be able to apply your new skills to create fun projects"
      ],
      "course_content": {
        "Introduction and Basics": [
          "Section Intro",
          "Introduction",
          "How to install Proteous Professional",
          "Fundamentals of PIC Microcontroller Applications",
          "How to Install MikroC Pro for PIC Programming",
          "Section Summary",
          "Reading Material"
        ],
        "C Programming For Microcontrollers": [
          "Section Intro",
          "Introduction",
          "Download and Install C Editor and Compiler",
          "Write and Compile C Codes in your browser",
          "Download and Install Visual Studio Code To run C programs",
          "Write Your First C Code and Compile it",
          "First Code in C",
          "First Code in C",
          "First C Code Assignment",
          "First C Code Assignment 2",
          "First C Code Assignment 3",
          "First C Code Assignment 4",
          "First Code in C Assignment 5",
          "FIRST C Code in C Assignment 6",
          "Comments in C",
          "Comments in C Quiz",
          "Comments in C Assignment 1",
          "Comments in C Assignment 2",
          "Strings and Escape characters in C",
          "Strings and Escape characters in C Quiz",
          "Strings and Escape character in C Assignment 1",
          "Strings and Escape character Assignment 2",
          "Strings and Escape in C Assignment 3",
          "Strings and Escape in C Assignment 4",
          "Strings and Escape in C Assignment 5",
          "Strings and Escape in C Assignment 6",
          "Variables in C",
          "Variables in C Code",
          "Variables in C Quiz",
          "Variable in C Assignment 1",
          "Variables in C Assignment 2",
          "Variables in C Assignment 3",
          "Variables in C Assignment 4",
          "Rules in naming variable in C",
          "Printing Variables with Printf in C",
          "Printing in variables C assignment 1",
          "Printing Variables with Printf in C Assignment 2",
          "Printing Variables with Printf in C Assignment 3",
          "Printing Variables with Printf in C Assignment 4",
          "Reading Input from User in C",
          "Read Input Code",
          "Reading Input Data Quiz",
          "Read Input from User Assignment 1",
          "Read Input from User in C Assignment 2",
          "Read Input from User in C Assignment 3",
          "Arithmetic Operators in C Code",
          "Arithmetic Operators in C",
          "Arithmetic Operators in C Quiz",
          "Arithmetic Operators in C Assignment 1",
          "Arithmetic Operators in C Assignment 2",
          "Uni Arithmetic Operators in C",
          "Uni Arithmetic Operators in C Quiz",
          "Bitwise Operators in C",
          "Bitwise Operators in C Code",
          "Bitwise Shift Operators in C",
          "Bitwise Shift Operators in C Code",
          "Bitwise Operators in C Quiz",
          "Assignment Operators",
          "Assignment Operators in C Code",
          "Assignment Operators in C Quiz",
          "Logical and Relational Operators",
          "Logical and Relational Operators in C Code",
          "Logical and Relational Quiz",
          "Logical and Relational Assignment in C",
          "Conditional Statement if in C",
          "Conditional Statement in C Code",
          "Conditional Statement in C Assignment 1",
          "Conditional Statement else if and else in C",
          "Local Variables and Global Variables",
          "General Rules Regarding if statement",
          "If Rules Code",
          "Conditional Statement in C Quiz",
          "Conditional Statement in C Assignment 1",
          "Conditional Statement in C Assignment 2",
          "Conditional Statement in C Assignment 3",
          "Conditional Statement in C Assignment 4",
          "Conditional Statement in C Assignment 5",
          "Switch Statement in C",
          "Switch Statement in C Assignment 1",
          "Switch Statement in C Assignment 2",
          "Switch Statement General Rules in C",
          "For loop in C",
          "For Loop Code",
          "Loops -For Loop Quiz",
          "Loops-For Loops Assignment",
          "While loop in C",
          "Loops -While Code",
          "Loops While Quiz",
          "Loops-while Assignment 1",
          "Do while loop in C",
          "Do While Loop Code",
          "Break and Continue in C",
          "Break and Continue Code",
          "Break and Continue Quiz",
          "Functions in C",
          "Functions in C Code",
          "Functions in C Quiz",
          "Function in C Assignment 1",
          "Void Keyword in C",
          "Void Keyword Code",
          "Void Keyword Quiz",
          "Divide c project into multiple files in C",
          "Divide C project in Multiple Files in C Code",
          "Divide C Project in Multiple Files in C Quiz",
          "How to Create a Library in C",
          "How to Create a Library in C Code",
          "How to Create a Library in C Quiz",
          "Arrays in C",
          "Arrays in C Code",
          "Arrays in C Code",
          "Arrays in C example",
          "Section Summary",
          "Reading Material"
        ],
        "Code, Run and Have more Fun": [
          "Section Intro",
          "First Project in Proteus",
          "First Project in MikroC",
          "How to deal with PIC Ports + First Code",
          "Necessary Connections",
          "Simple LED example to get things on the right track",
          "Quiz",
          "Flasher circuit PIC Microcontroller",
          "Lighting Led Follower Example",
          "Control Led using Push Button",
          "Controlling Seven Segment using BCD Counter PIC Microcontroller",
          "Controlling LCD using PIC Microcontroller",
          "Quiz",
          "Display and Move Text on LCD",
          "Stepper Motor Control",
          "Dot Matrix Control",
          "Keypad Interface and control with PIC Microcontroller",
          "Section Summary",
          "Reading Material"
        ],
        "PIC Microcontroller: The story from the beginning": [
          "Section Intro",
          "PIC Manufacture Microchip Company",
          "Quiz",
          "Programming PIC and Circuit Prototyping",
          "PIC Architecture and PIC Families",
          "Harvard Architecture vs Von Neuman Architecture",
          "PIC16F84 Microcontrollers Explained",
          "Single Word Instructions",
          "Quiz",
          "Pin Description and Oscillator Types",
          "System Reset",
          "Bitwise Operations and LED Manipulation in C Programming",
          "Section Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "C Programming and PIC Microcontroller Basics - Practice Test",
          "Section Summary",
          "Reading Material"
        ],
        "PIC Architecture II": [
          "Section Intro",
          "Ports",
          "PIC Architecture 2 Ports and Registers",
          "Status Register",
          "Option Register",
          "Banking Mechanism",
          "Quiz",
          "SFRs and GPRs",
          "Memory Organization",
          "Configuring and Controlling Ports in PIC Microcontrollers",
          "Section Summary",
          "Reading Material"
        ],
        "Analog To Digital Conversion": [
          "Section Intro",
          "ADC Module in PIC16F877A",
          "ADC Module Configuration Bits and Example",
          "Section Summary",
          "Reading Material"
        ],
        "Interrupts": [
          "Section Intro",
          "Interrupts and External Interrupt Source",
          "PortB Line Change Interrupt Source",
          "EEPROM Data Write Interrupt",
          "Interrupt Handlers and INTCON Register",
          "Quiz",
          "Option Register",
          "Programming the External Interrupt RB0 Example",
          "PortB 4 7 Status Change Interrupt",
          "RB0 and RB4-7 Interrupt Example",
          "Section Summary",
          "Reading Material"
        ],
        "Serial Communication Introduction and Basics": [
          "Section Intro",
          "Serial Communication Introduction and Basics",
          "Quiz",
          "Synchronous Serial Transmission and RS232",
          "Essential Concepts in Serial Communication",
          "PIC TO PIC And PIC TO PC Communication",
          "Serial Communication Example PIC TO PC",
          "LED Control and Shifting using PIC Microcontroller",
          "Section Summary",
          "Reading Material"
        ],
        "Timers and Counters": [
          "Section Intro",
          "Timers and Counters",
          "Timer0 Interrupt",
          "Delay Using Timer0",
          "Timer0 Interrupt Programming Delay Loops",
          "Interrupt Driven Timers",
          "Timers0 as a Counter",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ]
      },
      "requirements": [
        "You should be computer savvy",
        "This requires computer / Laptop or PC with  Internet",
        "You need to be able to read and write basic code",
        "Time and Attention to Focus for the Lessons to understand it well"
      ],
      "description": "Introduction:\nAre you frustrated with all the videos on YouTube that are either too short or simply too complex?\n\n\nThis 30-day online course is designed to help students learn the basics of programming the PIC microcontroller. The course uses a combination of text and video lessons, along with challenges and quizzes to help students retain the information. The course is ideal for anyone who wants to learn PIC Microcontrollers, or for those who are looking to expand their knowledge in this area.\n\n\nPIC microcontroller courses are challenging, but the challenge is easily followed with each day containing a task that will help you understand the microcontroller. By following these tasks, you will be able to complete the course successfully.\n\n\nIn this course, you will learn the basics of how a microcontroller works, how to use it, how it is different from other types of computers, and what data it can store.\n\n\nThe challenge: tackles the challenges and how it works in different sections with different Topics.\n\n\nSection I : this section Covers Educational Engineering and Introduction\nSection II : in this section, we will discuss C Programming For Microcontrollers\nSection III : Code, Run and Have more Fun\nSection IV: PIC Microcontroller: The story from the beginning\nSection V : PIC Architecture II\nSection VI: Analog To Digital Conversion\nSection VII: Interrupts\nSection VII: Serial Communication Introduction and Basics\nSection IX: Timers and Counters\nSection X: Practical Experiments\nSection XI: Basics of Electronic Components\n\n\nWHAT YOU WILL GET WHEN JOINING THIS COURSE\nHigh-Quality Video Tutorials on PIC Microcontroller Wiring\nStep By Step Guide on How to Make an Electronic Door Lock using PIC Microcontroller.\nPIC Microcontroller Circuit Diagrams\nCodes and Application example files\n\n\nThis course is designed to help students learn how to use the PIC microcontroller. Students will be challenged with a variety of activities and tasks throughout the month, which will help them to become proficient in using this microcontroller. You'll start with the basics, and then move on to more advanced topics.\n\n\nWhat you will learn in this course:\nYou will learn how to read and write to the PIC memory, how to work with variables, make decisions, loops and more.\nYou will learn how to program a PIC microcontroller in just 30 days.\nLearn how to program a PIC microcontroller in C language and create your own projects!\nLearn about the basics of electronics and microcontrollers.\nLearn the most popular programming language for PIC microcontrollers, Assembly language.\nLearn how to code and have fun\nLearn about Interrupts\nlearn Electronic components\nCircuit Diagrams For interfacing Electronic Lock with PIC Microcontroller.\n\n\n\n\n\n\nGet a hands-on experience with programming and using PIC microcontrollers\nThis course is designed to teach you everything you need to know about programming a PIC microcontroller.\nSign up for the 30 Days Challenge Course and start learning today!",
      "target_audience": [
        "The course is designed for students who have some experience with programming and electronics",
        "Students and professionals who are looking to expand their knowledge and skills in using the PIC",
        "this is also for beginners since there are step by step from the very basic coding",
        "This is for anyone who want's to learn PIC microcontrollers",
        "This 30 days challenge course is perfect for beginners who want to learn programming a PIC microcontroller."
      ]
    },
    {
      "title": "WhatsApp-Based Home Automation using ESP32",
      "url": "https://www.udemy.com/course/whatsapp-based-home-automation/",
      "bio": "You can use the WhatsApp app to monitor and control home automation devices from your smartphone for free using ESP32",
      "objectives": [
        "Program ESP32 to detect and send data and notification to WhatsApp",
        "Enable WhatsApp notification and direct connection with ESP32",
        "Enable Web based monitoring using ESP32 and WhatsApp Integration",
        "Create a monitoring device with simple and easy to follow steps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is ESP32 Board",
          "Download and Install Arduino",
          "Introductory Interview: ESP32-Controlled Messaging Interfaces"
        ],
        "ESP32": [
          "Download and Install Arduino ESP32 v1 Development enviroment",
          "Setup ESP32 on Arduino IDE",
          "Load Your First Code to ESP32 Board",
          "Quiz",
          "Getting Started with ESP32 Development on Arduino IDE"
        ],
        "WhatsApp Bot": [
          "Setting Up the WhatsApp Bot",
          "Configuring and Setting Up a WhatsApp Bot"
        ],
        "Coding": [
          "Coding",
          "Code Modifications & Practical Testing",
          "The Code",
          "Simulated Code Wokwi",
          "Coding, Modifying, and Practically Testing a WhatsApp Bot"
        ],
        "ESP32 for Newbies": [
          "Introduction",
          "Hardware and Software Requirements",
          "ESP 32 Pinout v1 DOIT",
          "Coding LED Blink",
          "Quiz",
          "Touch Sensor",
          "Dealing with Analog Signals",
          "PWM Signals",
          "Servo Motor Control using PWM Signal in ESP32",
          "Quiz",
          "Understanding ESP32 Pinouts, LED Control, and Sensor Integration"
        ],
        "Practice Test": [
          "WhatsApp-Based Home Automation Test"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "Course Project": [
          "Course Project",
          "System Demo: WhatsApp Command-Based Home Automation with ESP32"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A will to apply, not just watch",
        "Computer or laptop",
        "ESP32 board"
      ],
      "description": "Introduction:\nWhatsApp-Based Home Automation course helps individuals understand how to monitor, operate, and control home appliances through WhatsApp.\nHome automation is the future. Imagine being able to control your entire home from your smartphone. That future is now a reality with this new WhatsApp-Based Home Automation course. In this course, you will learn how to monitor your home's lights, temperature, security system, and more using just your WhatsApp messenger app. Whether you're a beginner or an experienced tech user, this course will show you how to set up and use WhatsApp-Based Home Automation in your own home.\nWhat is WhatsApp?\nWhatsApp is an instant messaging app that allows you to send and receive text messages, images, videos, voice clips, and more from your smartphone. It's free and works on all mobile phones. You don't need a data plan or WiFi connection, as it works over your cellular phone network.\nHow Can WhatsApp Be Used for Home Automation?\nYou can use the WhatsApp app to monitor and control home automation devices from your smartphone. This course will show you how to use easy step-by-step instructions. WhatsApp uses a secure internet connection to talk to your home automation devices and receive data from ESP32 using a free webhook.\nCourse Benefits:\nTransmit Data Packets Easily and for Free: With our easy-to-use webhook, you can quickly and easily transmit data packets using the WhatsApp app. There's no need to download any expensive or complicated software - the WhatsApp app is free to use.\nAutomatic WhatsApp Alerts: With our WhatsApp-based home automation system, you'll never have to worry about missing a critical alert again. Simply create a webhook to transmit data packets, and the free WhatsApp app will do the rest.\nWhy Should You Take This Course?\nCreate a Webhook to Transmit Data Packets: Learn how to create a webhook to transmit data packets.\nMonitor Your Home Automation Devices: Learn to monitor your home automation devices via the free WhatsApp app.\nUse Webhooks: Gain knowledge about using webhooks for home automation.\nRemote Monitoring: Watch what is happening at home while you are away and get notified if something happens.\nWhatsApp-based home automation is a system that uses the popular messaging app to monitor various devices and appliances in the home. This can include monitoring and turning lights on and off, setting thermostat temperatures, and even opening and closing doors. The advantage of using WhatsApp for home automation is that it is a very popular messaging app with a large user base, which makes it easy to find support and advice from others who have already set up similar systems.\nWhatsApp-based home automation allows users to control their home appliances using the WhatsApp messaging application. This technology can be used to control a variety of devices, including lights, door locks, security cameras, and more. WhatsApp-based home automation can be used to automate tasks such as turning off the lights when you leave the house, setting the thermostat to a comfortable temperature before you arrive home, or checking whether the door is locked before going to bed. You will also get to learn the ESP32 board even if you know nothing about it.\nCourse Outline:\nIntroduction\nSetting Up WhatsApp for Home Automation\nConfiguring ESP32\nCreating Webhooks\nIntegrating WhatsApp with ESP32\nMonitoring and Controlling Devices\nProject Demonstration\nWho Is This Course For:\nBeginners in IoT and Home Automation: Individuals new to home automation and WhatsApp integration.\nElectronics Hobbyists: Enthusiasts looking to expand their skills and create new projects.\nSmart Home Enthusiasts: Those interested in creating WhatsApp-controlled smart home devices.\nSTEM Students and Educators: Those involved in STEM education seeking practical, hands-on experience.\nRequirements:\nBasic Electronics Knowledge: A fundamental understanding of electronics is recommended.\nComputer Access: A computer with internet access.\nESP32 Board: ESP32 and other basic electronic components.\nSmartphone: A smartphone with WhatsApp installed.\nAbout the Instructor:\nEducational Engineering Team is a renowned group of skilled engineers with over 13 years of experience in teaching and practical projects. Led by Ashraf, a seasoned educator and mechatronics engineer, the team has taught over 250,000 students worldwide. Known for their clear and comprehensive teaching style, the team has created over 100 courses on Udemy. Ashraf’s mission is to explore new trends and technology and help educate the world, making complex topics easy to understand and accessible.\nTestimonials:\n\"This course made home automation with WhatsApp so simple and fun. The projects were very practical and easy to follow.\" - David K.\n\"Highly recommend this course for anyone interested in smart home technology. The instructions were clear and comprehensive.\" - Linda J.\n\"A great course for beginners and hobbyists alike. I've learned so much and can't wait to create my own WhatsApp-controlled projects.\" - Mark R.\nFAQ Section:\nWho can benefit from this course? This course is ideal for beginners, electronics enthusiasts, smart home enthusiasts, and STEM students.\nWhat are the payment options? Various payment plans are available, including one-time payments and installment options.\nIs there a refund policy? Yes, we offer a 30-day money-back guarantee if you're not satisfied with the course.\nWhat equipment do I need? You'll need a computer with internet access, an ESP32 board, and a smartphone with WhatsApp installed.\nCan I communicate with peers and instructors? Yes, the course includes forums and Q&A sections for interaction with peers and direct support from instructors.\nCall to Action: Get started with WhatsApp-Based Home Automation today! Enroll Now!!",
      "target_audience": [
        "Anyone with slight interest in making great things",
        "Anyone Interested in Making Amazing IoT Monitoring Device using ESP32",
        "Anyone Interested in not paying for a costly, monthly plan to send notifications. This course teaches you how to do it completely free."
      ]
    },
    {
      "title": "Arduino Object Oriented Programming OOP",
      "url": "https://www.udemy.com/course/arduino-object-oriented-programming/",
      "bio": "Learn how to create Arduino programs using object-oriented programming techniques",
      "objectives": [
        "Learn how to program Arduino boards using the Arduino programming language",
        "Understand and use fundamental concepts of object-oriented programming (OOP)",
        "Develop flexible and reliable code with Arduino classes and objects",
        "Learn Arduino Object Oriented Program",
        "Master advanced features of the Arduino language",
        "Gain a deep understanding of how Arduino works internally"
      ],
      "course_content": {},
      "requirements": [
        "Focus mind with a little bit of fun",
        "You don't need any technical skills to take this course",
        "Willingness to learn"
      ],
      "description": "This programming course is an introduction to Arduino Object-Oriented Programming. If you have already programmed Arduino using C++, and are ready to start writing Arduino OOP code, this is the place.\nI'll demonstrate step-by-step how to correctly rewrite some common Arduino codes using the object-oriented approach.\nAt the end of this course, you will receive the entire code so you can then try it out on your own Arduino board.\nCourse Content Includes the Following:\nWhat is Object-Oriented Programming\nWhy you should use Classes and OOP with Arduino Coding\nHow to Write a Class from Scratch\nPractical Example using Classes to Control Inputs and Outputs\nHardware and Software Requirements\nCreate Your First Class\nObjects and Their Relationship to Classes\nComplete Arduino Object-Oriented Code\nReorganize Your Arduino OOP Code\nArduino Object-Oriented: It’s Already Everywhere\nArduino Multi-tasking with FreeRTOS\nArduino Multithreading: Do More with Less!\nImprove Your Arduino Programming Skills\nArduino Power Consumption\nArduino Interrupt: Step by Step Guide with Practical Example\nThe Arduino programming language is essentially a subset of C/C++. You can construct classes, use inheritance, composition, and a variety of other OOP features.\nWhy You Should Take This Course:\nYou will learn how to create classes, use inheritance and polymorphism, and write reusable code.\nThe course is taught by an experienced Arduino instructor who has been teaching Arduino for many years.\nCreate more complex programs with ease, using methods that you understand.\nGet helpful tips and advice from experienced Arduino programmers.\nDo you want to learn more about OOP for Arduino?\nTake a look at this comprehensive Arduino OOP course. Sign up now!\n\n\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is a leading team in the Microcontroller Industry, with over 13 years of experience in teaching and practical projects. We strive to share our hands-on experience in these courses, providing step-by-step blueprints on taming both simple and complex topics in easy-to-digest bite-sized videos.\nAshraf:\nEducator, Mechatronics engineer, electronics and programming hobbyist, and Maker.\nCreator of online video courses on the EduEng YouTube Channel with over 4 million views and 20k+ subscribers.\nAuthor of four Microcontroller books.\nFounder and Chief Educational Engineer at Educational Engineering Team.\nPassionate about exploring new trends and technology, and helping educate the world.\nOur online courses have helped over 250,000 people worldwide to improve their skills and careers in the industry.\nCall to Action: Join us and start mastering Arduino Object-Oriented Programming today! Enroll now and enhance your programming skills with OOP techniques.\nFAQ:\nWhat is OOP?\nObject-Oriented Programming (OOP) is a programming paradigm based on the concept of \"objects,\" which can contain data and code.\nDo I need prior experience to take this course?\nSome prior experience with Arduino and C++ is recommended but not required.\nWhat will I learn in this course?\nYou will learn how to apply OOP principles in Arduino programming, create classes, and write reusable code.",
      "target_audience": [
        "This course is designed for Arduino users who want to learn how to program in a more object-oriented way.",
        "Arduino geeks",
        "Arduino Hobbyist",
        "Arduino beginners ot Intermediate",
        "anyone who want's to enhance their knowledge in programming",
        "anyone who wan'ts to enhance their knowledge in Arduino"
      ]
    },
    {
      "title": "Analog Electronics:- Design MOSFET Amplifiers using LTspice",
      "url": "https://www.udemy.com/course/analog-electronics-design-mosfet-amplifiers-using-ltspice/",
      "bio": "Integrated Circuits: Hands on Lab Based Course Learn All about Transistors Analog Electronics and Hardware Design - 8",
      "objectives": [
        "Concept of Channel Length Modulation (λ)",
        "Concept of Transconductance (gm)",
        "Biasing techniques for MOSFET Amplifiers",
        "AC Equivalent Model of MOSFET",
        "AC Analysis of MOSFET (Small Signal Analysis of MOSFET Amplifiers)",
        "Common Source Amplifier",
        "Common Gate Amplifier",
        "Common Drain Amplifier",
        "MOSFET Amplifier Design Considerations",
        "Thermal Considerations and Heat Dissipation",
        "MOSFET Amplifier Simulation using LTspice",
        "Troubleshooting and Practical Design Tips"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Introduction"
        ],
        "Quick Revision on Basic Concepts of MOSFETs from Course-1": [
          "Symbol & Construction of MOSFETs",
          "Characteristics of MOSFETs",
          "Drain Current Equation & Operating Region of MOSFETs",
          "Plotting Characteristics of N-MOS on LTspice",
          "Different Symbolic Representation of MOSFETs"
        ],
        "Numericals Based on Operating Region of MOSFETs": [
          "Basic Numericals-1-on N-Channel EmOS",
          "Basic Numericals-2-on P-Channel EMOS"
        ],
        "Channel Length Modulation (λ)": [
          "Concept of Channel Length Modulation",
          "Effect of Channel Length Modulation (λ) on Drain Current Equation (Id)",
          "Output Impedance of MOSFET (rd)",
          "Course Feedback"
        ],
        "Concept of Transconductance (gm)": [
          "Transconductance Definition",
          "Transconductance Derivation",
          "Activity on Transconductance",
          "Course Feedback"
        ],
        "AC Equivalent Model for P-Channel & N-Channel EMOSFETs": [
          "AC Model of N-Channel E-MOSFET",
          "AC Model of P-Channel E-MOSFET",
          "PMOS Equations for Different Operating Regions",
          "Course Feedback"
        ],
        "AC Analysis of N-Channel Enhancement MOSFET": [
          "Intrinsic AC Parameters of N-Channel-E-MOSFET",
          "AC Equivalent Model for basic Mosfet Circuit",
          "MOSFET Amplifier with Load Resistor (RL)",
          "Significance of RS in MOSFET Amplifier",
          "MOSFET Amplifier with unbypassed Rs",
          "Course Feedback"
        ],
        "MOSFET Common Source (CS) Amplifier Numerical": [
          "Understanding the Question and Given Parameters",
          "Calculating DC Parameters",
          "Verifying DC Parameters Via Simulation on LtSpice",
          "Calculating AC Parameters of MOSFET Amplifiers",
          "Verifying Voltage Gain via Simulation",
          "Verifying Input Impedance via Simulation",
          "Verifying Output Impedance via Simulation",
          "Course Feedback"
        ],
        "MOSFET Configurations": [
          "Common Source Configuration",
          "Common Gate Configuration",
          "Common Drain Configuration"
        ],
        "Common Gate Amplifier": [
          "Ac Analysis of Common Gate Amplifier"
        ]
      },
      "requirements": [
        "A foundational understanding of current electricity is recommended, or you can acquire it through my Course-1, covering current electricity and DC circuits.",
        "Proficiency in semiconductors is beneficial, or you can gain it through my Course-2, focused on semiconductor fundamentals.",
        "Thorough comprehension of diodes is advantageous, or you can acquire it through my Course-3, addressing diodes and capacitors.",
        "Comprehensive understanding of BJTs is valuable, or you can obtain it through my Course-4, exploring BJTs and their applications.",
        "In-depth knowledge of JFETs is beneficial, or you can acquire it through my Course-5, covering JFET fundamentals and applications.",
        "Thorough understanding of fundamental concepts related to MOSFETs, including N-channel and P-channel MOSFETs, their symbols and structures, operational principles, characteristics, drain current equation, and more, is recommended. Alternatively, you can enroll in my Course-9, which comprehensively covers these concepts.",
        "Practical circuit simulation using LTspice software."
      ],
      "description": "Welcome to the second course on MOSFET Amplifiers, where we delve deeper into the intricate world of AC analysis. Building upon the foundational knowledge covered in our first MOSFET course, which explored the DC analysis of MOSFETs, this course focuses exclusively on MOSFET Amplifiers.\n\n\n@ Prerequisites: This course assumes prior knowledge of MOSFET fundamentals covered in our introductory course, including N-channel and P-channel MOSFETs, their symbols, structures, operational principles, and the drain current equation. Ensure you have a solid understanding of these concepts or enroll in our first course of MOSFET for comprehensive coverage.\n\n\n@ Course Roadmap:-\nChannel Length Modulation (λ): Understand how channel length modulation affects MOSFET behavior and its implications on amplifier design.\nTransconductance (gm): Master the concept of transconductance and its crucial role in MOSFET amplifier performance.\nAC Analysis of MOSFET: Dive into small signal analysis techniques to uncover the secrets of MOSFET amplifiers' AC behavior.\nCommon Source, Gate, and Drain Amplifiers: Explore the design and operation of these fundamental MOSFET amplifier configurations.\nDesign Considerations: Learn essential considerations for designing MOSFET amplifiers, including gain, bandwidth, and stability.\nThermal Management: Understand thermal considerations and strategies for effective heat dissipation in MOSFET amplifier circuits.\nLTspice Simulation: Harness the power of LTspice for MOSFET amplifier simulation, enabling you to validate designs and explore performance characteristics.\nTroubleshooting and Design Tips: Gain practical insights and tips for troubleshooting issues and optimizing MOSFET amplifier designs.\n\n\n@ Who Should Enroll:\nElectrical engineers, students, hobbyists, and professionals seeking to deepen their understanding of MOSFET amplifiers and enhance their circuit design skills.\nJoin us on this journey to master MOSFET amplifier's AC analysis and unlock new possibilities in circuit design!",
      "target_audience": [
        "Students who want to learn FETs",
        "Students who want to understand transistors in depth",
        "Students who want to learn analog electronics in depth",
        "Students who to learn analog circuit design",
        "Advanced MOSFET Analysis and Design with Ltspice",
        "Practical Applications of MOSFET Circuits on LTspice",
        "Analog Electronics with MOSFET on LTspice",
        "Electronic Engineers",
        "Electrical Engineers",
        "Biomedical Engineers",
        "Instrumentation Engineers"
      ]
    },
    {
      "title": "SystemVerilog using Object Oriented Programming",
      "url": "https://www.udemy.com/course/systemverilog-using-object-oriented-programming/",
      "bio": "Simple course for students and engineers who wants to learn Object Oriented Programming concepts in SystemVerilog.",
      "objectives": [
        "Concept of Layered Testbench",
        "Introduced to Basic Terminologies of Object Oriented Programming",
        "Write your own Class and use it in Testbench",
        "Concepts of Static Variables, Methods and various Scoping Rules",
        "Learn how to implements concepts like inheritance in SystemVerilog",
        "Concepts of Direct Programming Interface (DPI)",
        "Interfacing between C and SystemVerilog",
        "Interfacing between C++ and SystemVerilog"
      ],
      "course_content": {},
      "requirements": [
        "It is expected that knowledge of fundamentals of verification and basic constructs of SystemVerilog are known",
        "Familiarity with C and C++ will be an added advantage",
        "Verilog programming and fundamentals of FPGA programming are supposed to be already known"
      ],
      "description": "Flexible and reusable design of a testbench is always a challenge for verification enginner. With growing demands of verification engineers in the semiconductor industry it has become necessary to have knowledge of advanced verification methodologies to design testbenches which can be reused across the diverse population of verification engineers. Thus knowledge of application of transaction level communication between various blocks of layered testbench has become essential for verification engineer. If you want to learn these concepts then you should join this course.\nThis course is introduced for learners who wants to learn how object oriented concepts are used in verification using SystemVerilog. It is assumed that learner is aware of the fundamentals of verification and basic constructs of SystemVerilog. Learners can take this course after completing the course on ‘Fundamentals of Verification and SystemVerilog’.\nIn this course, students will learn how to write a class in SystemVerilog, how to deal with objects and handles how to implement advanced concepts of OOP like inheritance etc. Learners will also be introduced to interfacing between 'C' & SystemVerilog and 'C++' & SystemVerilog. Course is being taught with various examples and learner can monitor self-progress by attempting quiz in each section.\nAll the example discussed in the course can be simulated using freely available simulator EDA Playground.",
      "target_audience": [
        "This course is for students and engineers who wants to learn basics of writing testbench using OOP concepts in short time.",
        "Verification engineers who wants to refresh concepts of OOP and SystemVerilog"
      ]
    },
    {
      "title": "Arduino Register Programming Course - (Advanced)",
      "url": "https://www.udemy.com/course/arduino-register-programming-course-advanced/",
      "bio": "Advanced Register Level Programming in Arduino instead of using Libraries",
      "objectives": [
        "Programming Arduino microcontroller in Arduino IDE",
        "You will learn how to program a Arduino Microcontroller from scratch",
        "Write your own libraries for peripherals of Arduino Microcontroller",
        "Build your own projects with the Arduino microcontroller..",
        "You will be learning all the peripherals programming from scratch no libraries used in Arduino IDE",
        "Everything you want to learn in Arduino Uno",
        "Understand analog and digital inputs and outputs",
        "Display text on a liquid crystal display using Arduino",
        "Timer Interrupt in Arduino",
        "Timer Output Compare in Arduino",
        "Timer Input Capture in Arduino",
        "Build simple circuits around the Arduino Uno, that implement simple functions.",
        "With the Arduino IDE, write, compile and upload sketches.",
        "Register Level Programming in Arduino Microcontroller - (Atmega328)",
        "Embedded C",
        "Embedded C Bit Manipulation Techniques"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge on electronics components",
        "Basic knowledge on C programming not mandatory"
      ],
      "description": "Over a 45+ lecture videos, 5.5+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of Arduino Uno Microcontroller in register level, but also learn the very basics of Arduino Microcontroller internal software structure and hardware schematics required for building your own products out of Arduino  (Atmega328) microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on Arduino Register Programming Course (Advanced).\n-> You will learn in detail about the register level programming methods of Arduino microcontroller Atmega328.\n-> You will learn all peripherals of Arduino microcontroller with atleast one interface examples for each peripherals\nThe course is structured for the need of learners to understand microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the AVR microcontroller than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "People with some experience in electronics",
        "People with an beginner knowledge of embedded systems",
        "Electronics students and hobbyist"
      ]
    },
    {
      "title": "Deep Dive into Linux PCIe Device Driver Development",
      "url": "https://www.udemy.com/course/linux-pcie-device-driver/",
      "bio": "Linux PCIe Device Driver Development using UDOO-X86 Board based on Intel Braswell N3160 Processor System on Chip",
      "objectives": [
        "Peripheral Component Interconnect Express (PCIe) Fundamentals",
        "Linux PCIe Driver Framework",
        "Linux PCIe Watchdog driver implementation",
        "Linux PCIe SMBus Driver implementation",
        "Linux PCIe Direct Memory Access Study",
        "Linux PCIe Ethernet Driver Source code walk through",
        "Linux PCIe Port Driver Source Code Walk Through"
      ],
      "course_content": {},
      "requirements": [
        "linux application development",
        "linux kernel module development"
      ],
      "description": "This course focuses on the following,\nPeripheral Component Interconnect Express (PCIe) Fundamentals\nPCIe Bus Architecture\nPCIe Bus Terminology\nPCIe Bus Topology\nPCIe Configuration Space\nPCIe Device ID, Vendor ID\nPCIe Extended Configuration Space\nPCIe Capability Structure\nPCIe Device Class definition\nLinux PCIe Sub System\nPCIe Device Representation\nSysfs / Procfs\nPCI Device ID Structure\npci_driver structure\nLinux Kernel PCI access APIs\nIntel LPC Controller\nFunctional and Register Descriptions\nACPI Base Register\nSystem Management TCO Register for Watchdog\nLinux PCIe SMBUS Driver\nLinux I2C Driver Architecture\nI2C / SMBus Bus, Adapater, Framework\nLinux Kernel I2C Adapter APIs\nI2C SMbus Data\nI2C Algorithm Structure\nManaged PCI Access APIs\nIO Port Access APIs\nLinux PCIe Audio Driver\nBrief information about Intel High Definition Audio Controller\nFundamentals of Linux Sound Sub Systems\nnew sound card creation and initialization\nsound card registeration\nNew sound device component creation\nSound HDA Linux Kernel APIs\nDirect Memory Access Implementation Walk through\nMessage Signal Interrupt Implementation Walkthrough\nLinux PCIe Message Signaled Interrupts\nMessage Signaled Interrupts (MSI) Fundamentals\nLinux Kernel Interrupt Handling APIs\nLinux Kernel Interrupt Handling Functional Flow\nLinux Kernel MSI Interrupt Handling APIs\nLinux PCIe Direct Memory Access Fundamentals\nDMA Fundamentals\nLinux Kernel DMA APIs\nLinux Kernel DMA Mapping APIs\nLinux Ethernet Driver\nPCIe Ethernet Driver Framework Fundamentals\nRealtek RTL8111 Register Descriptions\nLinux PCIe Ethernet Driver Source code walkthough\nDirect Memory Access Implementation Walk through\nMessage Signal Interrupt Implementation Walkthrough\nLinux PCIe Port Driver\nLinux PCIe Host Bridge Fundamentals\nPCIe Host Bridge Register Descriptions\nLinux PCIe Port Driver Source Code walkthrough\nDirect Memory Access Implementation Walk through\nMessage Signal Interrupt Implementation Walkthrough",
      "target_audience": [
        "Passionate to learn on PCIe",
        "Linux Kernel / Device Driver Developers"
      ]
    },
    {
      "title": "8051 Microcontroller LED Movable Display with Assembly Lang.",
      "url": "https://www.udemy.com/course/8051-microcontroller-led-movable-display-with-assembly-lang/",
      "bio": "Build and Simulate a 48x8 LED Movable Display Using 8051 Microcontroller and Assembly Language Programming from scratch.",
      "objectives": [
        "Sourcing Components & Setting Up Your 48x8 LED Matrix Display",
        "Understand the fundamentals of the 8051 microcontroller and how it drives an LED display with assembly language code",
        "Organize and save your work systematically within MIDE-8051 and Proteus environments.",
        "Learn how to select and assemble components like NOT gates, 74154 decoders, and the LED matrix display.",
        "Master circuit configurations by integrating NOT gates with decoders for smooth data flow and control.",
        "Connect the microcontroller to the matrix display and decoders, enabling precise control of LED columns and rows."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of electronics (helpful but not required)",
        "A PC with MIDE-8051 and Proteus (installation steps included in the course)",
        "Passion for learning hardware and assembly language programming!"
      ],
      "description": "Bring your hardware embedded system skills to life by creating an LED Movable Display using the powerful 8051 Microcontroller and Assembly Language programming. This hands-on course walks you through the entire process of designing, coding, and simulating a 48x8 LED matrix display that scrolls, animates, and displays customized messages.\nWhether you're an engineering student, hobbyist, or a hardware enthusiast, this course will equip you with the practical skills needed to design a real-world scrolling LED display system, write assembly language programs, and simulate your project using industry-standard tools like MIDE-8051 and Proteus.\n\n\nIntroduction to 8051 Microcontroller LED Movable Display with Assembly Language\nUnderstand the fundamentals of the 8051 microcontroller and how it drives an LED display with assembly language code.\nHow To Save and Manage Your Project Files\nOrganize and save your work systematically within MIDE-8051 and Proteus environments.\nSourcing Components & Setting Up Your 48x8 LED Matrix Display\nLearn how to select and assemble components like NOT gates, 74154 decoders, and the LED matrix display.\nConnecting NOT Gates and Cascading 74154 Decoders\nMaster circuit configurations by integrating NOT gates with decoders for smooth data flow and control.\nInterfacing 8051 Microcontroller with the Matrix Display\nConnect the microcontroller to the matrix display and decoders, enabling precise control of LED columns and rows.\nAdding Buffers & Improving Circuit Stability\nEnhance your circuit reliability by incorporating buffers for signal conditioning.\n\n\nProgramming the LED Display with Assembly Language:\nInstalling MIDE-8051 & Starting a New Project\nSet up your coding environment and organize your project files efficiently.\nProgram Initialization & Creating Subroutines\nLearn how to structure your assembly language code with modular subroutines for clarity and reuse.\nEncoding & Displaying Characters (Alphabets, Numbers, Symbols)\nCreate custom characters, store them in microcontroller memory, and display them on the LED matrix screen.\nAnimating Text and Graphics on the Display\nBring your messages to life by programming scrolling text, shifting characters, and adding animation effects.\nCreating Delays, Blinking Effects, and Repeating Programs\nControl the timing and speed of your displays with delay loops and repeat cycles.\n\n\nExciting Animations You will Add into Matrix Display Project You'll Build:\nWelcome Animation\nHello Animation\nMerry Animation\nThanks Animation\n2017 Year Display Animation\nBlinking and Scrolling Text Animations\nCustom Animations and Visual Effects for Viewers\nYou’ll learn how to make your display readable, smooth, and visually appealing to engage your audience.\n\n\nBy the end of this course, you will have fully simulated and tested your scrolling LED display project in Proteus, ready to bring your design to real hardware!\n\n\nBy the End of This Course, You Will Be Able To:\nDesign and build a 48x8 LED movable display\nProgram the 8051 microcontroller in assembly language\nDisplay scrolling texts, numbers, and custom animations\nSimulate and validate your project with Proteus software\nBring your LED display projects to life for real-world applications!\nJoin Now and start building your LED Movable Display with the 8051 Microcontroller today!",
      "target_audience": [
        "Engineering students and hobbyists interested in microcontroller-based LED display projects",
        "Embedded systems enthusiasts looking to learn assembly language programming",
        "Anyone wanting to design and simulate real-world LED matrix displays for signs, banners, or educational purposes"
      ]
    },
    {
      "title": "Phone Repair: Cell Phone Liquid Damage Repair - Motherboard",
      "url": "https://www.udemy.com/course/phone-repair-cell-phone-water-damage-repair-motherboard/",
      "bio": "Phone repairing, motherboard cell phone repair, repair mobile cell phone basics mobile phone repair, , iPhone repair, IT",
      "objectives": [
        "Cell Phone Water Damage Repair",
        "Learn cell phone repair basics;",
        "Learn Cell phone architecture;",
        "Learn how to troubleshoot and repair cell phones;"
      ],
      "course_content": {},
      "requirements": [
        "No experience needed. I will teach you everything you need to know;"
      ],
      "description": "- 12 Reasons why you should choose this course\nThe course will teach Everything about Cell Phone Water Damage Repair & Phone Motherboard parts.\nThe course is created with perfect care by a hardware engineer.\nSimple and easy-to-understand explanation with examples;\nOne-On-One Support;\nThe course is short, so you can complete it quickly and enjoy your new experiences.\nYour inquiries will be answered in a short time with a full explanation of any questions\nA certificate will be provided upon completion of the course.\nYou are going to understand Cell Phone Motherboard Parts and components.\nYou will learn how to disassemble and assemble any Cell Phone motherboard.\nYou are going to learn mobile phone architecture.\nYou're going to know how many tips and tricks about phone repair.\nThis course will transform you from a beginner to a Pro.\nTopics that we will be discussing in this course are :\nSIM Holder & battery cover removal;\nCell Phone Motherboard Parts and Components;\nCell Phone Motherboard Common Faults;\nMotherboard connectors and battery removal\nPhone daughterboard removal\nCell Phone motherboard disassembly\nHow to apply the Hot Air\nMainboard vs Daughterboard connectors\nCell phone motherboard connectors studying;\nHow to diagnose cell phone motherboards.\nYou will also learn many tips and tricks that will make you a hardware professional and give you a deep understanding of Mobile Phone motherboard repair.\nI will guide you step by step with an easy explanation of this course.\nIf you are interested in one of the points we discussed, this course is for you.\nWhat are you waiting for?\nEnroll now,\nAnd let's get started.",
      "target_audience": [
        "Anyone who want to master cell phone repairing"
      ]
    },
    {
      "title": "Mastering LoRa:The Complete Guide to Long Range Connectivity",
      "url": "https://www.udemy.com/course/lora-mastering-lora-the-complete-guide-to-long-range-connectivity/",
      "bio": "Unlock the Power of LoRa Technology for IoT",
      "objectives": [
        "Fundamentals of LoRa: Dive into the core concepts of LoRa technology and understand its role in the IoT landscape.",
        "Technical Mastery: Gain a thorough understanding of spread-spectrum modulation, chirp modulation, and the intricacies of the LoRa physical layer.",
        "Performance Optimization: Learn how to fine-tune parameters such as coding rate, bandwidth, and spreading factor for optimal performance.",
        "Practical Applications: Explore real-world applications and case studies that showcase LoRa's capabilities in different scenarios."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction to Long Range (LoRa) Technology",
          "Preparing to Build LoRa-Based Communication Systems",
          "Link-Budget",
          "Spread-Spectrum Modulation",
          "Quiz",
          "Chirp Modulation",
          "LoRa Frame",
          "LoRa Factors - Bandwidth",
          "Quiz",
          "LoRa Factors - Spreading Factor",
          "LoRa Factors - Coding Rate",
          "Who this course is for?",
          "Exploring the Fundamentals of LoRa Technology",
          "Summary",
          "Reading Material"
        ],
        "Practical Work": [
          "Section Intro",
          "Introducing Reyax RYLR998 module",
          "Quiz",
          "Datasheet of the Reyax RYLR998",
          "AT Command guide pt1",
          "AT Command guide pt2",
          "Quiz",
          "Project description and components",
          "Project Schematic",
          "Transmitter code pt1",
          "Quiz",
          "Transmitter code pt2",
          "Receiver code",
          "Project testing",
          "Configuring and Optimizing the Reyax RYLR998 LoRa Module",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Practice Test"
        ],
        "Course Project": [
          "Course Project",
          "Deploying a LoRa-Based IoT Solution"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic understanding of wireless communication principles.",
        "Familiarity with digital communication and modulation techniques is beneficial.",
        "No specific hardware is required, but a willingness to learn and engage with technical concepts is essential."
      ],
      "description": "Mastering LoRa: The Complete Guide to Long Range Connectivity is designed for professionals and enthusiasts eager to delve deep into the world of long-range communication using LoRa Technology. This comprehensive course offers a blend of theoretical knowledge and practical skills, enabling you to excel in the Internet of Things (IoT) applications. From the basics of spread-spectrum modulation techniques to hands-on projects involving the Reyax RYLR998 module, this course ensures a complete understanding of LoRa's capabilities and applications.\nWhat You Will Learn:\nUnderstanding of LoRa Technology: Grasp the fundamental concepts of long-range connectivity including chirp and spread-spectrum modulation.\nTechnical Proficiency: Learn to calculate link-budgets and understand how factors like bandwidth, spreading factor, and coding rate affect performance.\nPractical Skills: Gain hands-on experience by engaging with practical projects using the Reyax RYLR998 module, understanding its datasheet, and implementing transmitter and receiver codes.\nProblem-Solving: Develop the ability to troubleshoot and test IoT systems using LoRa technology effectively.\nCourse Features:\nInteractive Lectures: Engage with 19 structured lectures, complete with previews on key topics.\nHands-on Learning: Practical sessions that guide you through setting up and programming LoRa devices.\nExpert Instruction: Learn from instructors with extensive experience in IoT and LoRa technology.\nFlexible Learning: Access course materials anytime, anywhere, at your pace.\nWho This Course Is For:\nTechnology Enthusiasts: Individuals passionate about IoT and wireless communication technologies.\nProfessional Developers: IoT professionals looking to enhance their skills in LoRa technology.\nStudents and Educators: Those in academic fields seeking to expand their knowledge base in practical IoT applications.\nDIY Hobbyists: Makers and hobbyists interested in building long-range communication projects.\nCourse Requirements:\nBasic Electronics Knowledge: Understand basic concepts of electronics and networking.\nHardware: Access to basic IoT project components.\nSoftware Skills: Familiarity with programming, preferably in environments used for IoT.\nDetailed Course Description:\nWelcome to Mastering LoRa, where you will embark on a journey through the expansive world of IoT and long-range communication. This course begins with a solid foundation in LoRa technology fundamentals, where you'll understand how this technology makes vast connectivity a reality. From learning about chirp modulation to decoding the intricacies of a LoRa frame, each module is crafted to build your expertise progressively.\nVenture beyond theory in our second section, where practical knowledge becomes your playground. Here, you'll tackle real-world applications with the Reyax RYLR998 module, from reading and understanding its datasheet to hands-on coding for both transmitter and receiver setups. Each lecture is designed to consolidate learning and ensure you're industry-ready.\nThis course isn't just about learning; it's about applying knowledge in meaningful ways. Whether you're aiming to boost your professional career or fuel a personal project, Mastering LoRa equips you with the skills to innovate and excel.\nTestimonials:\n\"Mastering LoRa transformed the way I approach IoT projects. The balance between theory and practical application is perfect, and the projects were both challenging and incredibly rewarding!\" - Alex T., IoT Developer\n\"This course provided deep insights into LoRa technology that I could immediately apply to my work in environmental monitoring. Highly recommend for anyone looking to expand their connectivity solutions!\" - Samantha D., Environmental Scientist\nEnroll in Mastering LoRa today and start your journey towards mastering long-range connectivity in the IoT world!",
      "target_audience": [
        "Tech Enthusiasts: Whether you're a hobbyist or an aspiring professional, this course will equip you with the knowledge to explore the world of LoRa.",
        "Professional Engineers: Enhance your skillset in wireless communication and stay ahead in the field of IoT.",
        "Students and Academics: Supplement your studies with a practical and in-depth look at a leading technology driving the future of communication."
      ]
    },
    {
      "title": "PLC Programming | RSLogix 500 Basic & Advanced + BONUS",
      "url": "https://www.udemy.com/course/plc-programming-rslogix-500-basic-advanced/",
      "bio": "PLC programming from scratch training class by a controls engineer equipped with PLC systems - Allen Bradley RSLogix 500",
      "objectives": [
        "PLC Programming with RSLogix 500 software.",
        "Ethernet and Serial Comm"
      ],
      "course_content": {},
      "requirements": [
        "No."
      ],
      "description": "In this class, you will learn absolutely everything necessary to land a job as an entry level PLC technician (engineer, etc.).\nWe will cover basic topics such as what a PLC is used for, how it is able to receive and process Inputs & Outputs. We will take a much deeper dive with hands on labs and practice sessions during which I will give you specific real world scenarios to work with and give you tips and common pitfalls. These lessons are designed to strengthen your knowledge of PLCs and give you an edge during interviews.\nAt the end of each section, you will face a quiz which will allow you to test yourself on the material you have learned before moving to the next section. As some one who has administered interviews to PLC technicians, these questions are crucial in making sure that you've understood the material presented.\nWhat are the requirements for the class?\nYou don't need any hardware or software to follow the lectures, however, it is highly recommended to get some practice before going into an interview. If that's not possible, I would advise spending some time working with an emulator and browsing through data sheets and manuals which will be presented to you in the course.\nWhat can I expect from this class?\nThe main objective of this course is to get you job-ready by the time you finish the last lecture.\nYou will have a good understanding of what a PLC does, how it does it as well as what the outcomes of those actions are.\nYou will be comfortable creating basic ladder logic programs and troubleshoot complex existing ones.\nYou will be able to create simple Human Machine Interface (HMI) screens and controlling them via a PLC.\nYou will have a good understanding of manufacturing systems as a whole.\nWhat is the target audience for the class?\nElectrical Engineers looking for a crash course on PLCs.\nElectrical Technicians / Electricians looking to expand their knowledge into controls.\nSoftware Engineers who are seeking to learn about controlling hardware.\nManufacturing Operators looking to progress in their career.\nAnyone interested in how manufacturing processes are executed.\nWho this course is for:\nElectrical Engineers\nElectricians\nTechnicians\nAnyone interested in learning how an industrial process works",
      "target_audience": [
        "Electricians, PLC programmers, Electrical Technician, Controls Engineer, Electrical Engineer, IT Engineer"
      ]
    },
    {
      "title": "Projects in IoT: Learn IoT By Building Real World Projects",
      "url": "https://www.udemy.com/course/projects-in-iot-learn-iot-by-building-real-world-projects/",
      "bio": "A Complete Masterclass for Learning Practical Internet of Things by Building Projects",
      "objectives": [
        "Learn the core concepts of IoT",
        "Learn to use Raspberry Pi and Arduino in actual real world projects",
        "Learn to debug and trouble shoot hardware projects",
        "Learn the use of sensors, microcontrollers and other IoT protocols"
      ],
      "course_content": {
        "What Is IOT?": [
          "Introduction",
          "Understanding Of IoT"
        ],
        "Introduction to Arduino": [
          "Intro to Arduino",
          "Overview Of Arduino",
          "Basic programming concepts with the Arduino IDE."
        ],
        "First Arduino project: Blinking an LED": [
          "Setting up your first Arduino project: Blinking an LED."
        ],
        "Exploring Sensors and Modules": [
          "Introduction to common IoT components",
          "Role of cloud in IoT",
          "Microcontroller Options"
        ],
        "Introduction to Raspberry Pi": [
          "Introduction To Raspberry Pi",
          "What We Will Cover",
          "Raspberry Pi In Depth"
        ],
        "Setting Up Your Raspberry Pi": [
          "Raspberry Pi Setup",
          "Components And Setup",
          "First Time Interacting With Raspberry Pi",
          "SSH Enabling",
          "Recap And Next"
        ],
        "Sample Raspberry Pi project: Blinking a LED": [
          "Blinking a LED",
          "Enabling SSH",
          "Recap And Next"
        ],
        "Building A Weather Station using Raspberry Pi": [
          "Building A Weather Station"
        ],
        "Musical GiftBox": [
          "Intro To Musical Giftbox Project",
          "Planning Your Musical Giftbox",
          "Gathering all the required hardware and tools",
          "Decorating the gift box",
          "Circuit Diagram",
          "Testing And Scripting IR Sensors",
          "Testing and Scripting HM10 Sensors",
          "Final Script",
          "Presentation",
          "Final product and Conclusion"
        ],
        "Smart Home Lighting System Project": [
          "Introduction To Smart Home Lighting System",
          "Circuit Diagram And Connections",
          "Setting up web interface",
          "CODING ESP32",
          "Testing",
          "Adding Multiple Devices"
        ]
      },
      "requirements": [
        "Basic knowledge of electronics and Arduino or Raspberry Pi is sufficient to complete this course"
      ],
      "description": "Unlock the endless possibilities of the Internet of Things (IoT) with an immersive, hands-on course designed to teach you the essentials of IoT through multiple innovative projects. Whether you're a beginner or a tech enthusiast, this course will take you from understanding IoT basics to building functional, creative projects using cutting-edge tools and hardware.\nWhat You'll Learn:\n\n\nIoT Foundations:\n\nUnderstand what IoT is, its real-world applications, and how connected devices are transforming industries and daily life.\nLearn about examples of IoT devices and explore key components like sensors, actuators, communication protocols, and microcontrollers.\nDiscover how these components work together to create seamless IoT ecosystems.\nGain insights into the future of IoT and its potential impact on various industries.\nArduino Basics:\n\nLearn why Arduino is ideal for IoT projects and explore the history of Arduino and its evolution.\nUnderstand the different types of Arduino boards and their specific uses.\nSet up and program Arduino microcontrollers, connect sensors, and create interactive designs.\nRaspberry Pi Essentials:\n\nDiscover what Raspberry Pi is and explore its wide-ranging applications in IoT and beyond.\nLearn how to set up your Raspberry Pi and control GPIO pins using Python programming.\nComplete beginner-friendly projects like blinking an LED and building a simple weather station using real sensors.\nNodeMCU Mastery:\n\nMaster the versatile NodeMCU ESP8266, including its pinouts (power, digital, analog).\nExplore the Blynk console to build and manage IoT automation systems seamlessly.\nProjects You’ll Build (From Scratch):\n\n\nMusical Gift Box: Design an interactive gift box with Arduino Nano, IR sensors, and Bluetooth modules to light up and play melodies.\nSmart Home Lighting System: Automate your home with a remote-controlled lighting system using NodeMCU, relay modules, and the Blynk app.\nScreaming Jack-o’-Lantern: Assemble a spooky Halloween-themed decoration with sensors, LEDs, and sound effects.\nInteractive Photo Frame: Create a tech-savvy photo frame that responds to touch or motion with lights and sounds.\nBlinking an LED: Learn the basics of microcontroller programming by controlling an LED to blink at regular intervals using Arduino & Raspberry Pi.\nBuilding a Simple Weather Station: Create a weather station that reads data using sensors & Raspberry Pi.\nHands-On Learning:\nBuild every project from scratch, introducing and assembling each component step by step.\nWork with IoT hardware like Arduino Nano, IR Sensors, HM10 Sensors, Bluetooth Modules, NODEMCU ESP8266, relay modules, breadboards, resistors, and batteries.\nLearn coding, debugging, and troubleshooting techniques to ensure flawless project execution.\nDevelop a final working model for each project that demonstrates your creativity and technical skills.\nSkills You'll Gain:\nUnderstand the workings of sensors, actuators, microcontrollers, and communication protocols.\nLearn the fundamentals of Arduino, Raspberry Pi, and NodeMCU, including practical applications and history.\nUse tools like the Blynk console to build IoT automation projects.\nGain hands-on experience in coding, electronics, and project design, preparing you for more advanced IoT ventures.\nWhether you're starting from scratch or looking to expand your skills, this course provides everything you need to become proficient in IoT. Learn by doing and create projects that impress, inspire, and showcase your technical prowess!",
      "target_audience": [
        "Anyone who will like to learn and master Arduino, Raspberry Pi or IoT will find this course very useful"
      ]
    },
    {
      "title": "Electronics in a nutshell: non-technical, bite-sized [2020]",
      "url": "https://www.udemy.com/course/electronics-in-a-nutshell/",
      "bio": "Begginer's best friend to mastering Electronics Fundamentals through super-short 5 minute videos. Join 43,000 viewers",
      "objectives": [
        "How electronics components work, how they are used in circuits, and how to use them in your projects",
        "Common sensors used by Arduino, Raspberry Pi & other circuits",
        "Why we use electronic components the way we do",
        "Understand how the most important electronic components work",
        "Understand the different electronics terminology, units, and electronic symbols for various electronics",
        "This course is a great building block for begginers to take on more advanced electronics concepts or use this as a resource for a quick refresher on concepts"
      ],
      "course_content": {},
      "requirements": [
        "Absolutely 0 prior electronics knowledge is needed.",
        "An passion & interest in learning how electronics work and how to use them in your projects!"
      ],
      "description": "This course is the extension to my popular \"Electronics crash course\" YouTube series with over 43,000 viewers in the last 5 months.\nThis course was designed with a singular goal -- to make learning electronics fun, and approachable for everyone. Electronics are at the heart of the 21st century from robotics, automobiles, automation, communications, security etc. This course will be your best friend in helping familiarize you with the history, theory, & use-cases behind the core electronics that power our world.\n\n\nWhat makes this course so unique?\nBefore we dive into the details of this course, I want to share with you what makes this course special. When I started learning electronics, all the courses, and guides I found were overly technical, too long for my attention span, and far too boring. This course fixes all of that. Each lesson is roughly 5 minutes long, uses animations to explain complex concepts, and I use real world analogies to help you understand complex concepts. Plus this course has zero boring PowerPoints or slideshows.  We also touch on the history and fun facts about the why of each electronics that keep the lessons more interesting.\nFurthermore, each video lesson is paired with a very deep video article that dives much deeper into the concepts if you want a deeper knowledge, and each video has a quiz to make sure that you are able to understand the concepts being taught! This approach makes it incredibly easy to get a breadth of knowledge and also a depth of knowledge.\n\n\nLastly, new lessons are added each week so you can keep learning!\nDo feel free to check out sample lessons via the preview tab.",
      "target_audience": [
        "Absoulte begginers who want to learn electronics concepts in a non-technical manner with bite sized video lectures"
      ]
    },
    {
      "title": "Quick Start to PCB Designs with KiCad",
      "url": "https://www.udemy.com/course/pcb-board-designs-with-kicad/",
      "bio": "You will be able to design your own boards using the KiCad program with this course.",
      "objectives": [
        "They will be able to design their own PCB cards and learn the logic of PCB card design.",
        "KiCad",
        "Gerber",
        "2 Layer Design"
      ],
      "course_content": {
        "Beginning": [
          "KiCad Installation 5.1.4_1. [Important]",
          "User Interface Overview",
          "Main Design Interface",
          "Schematic - Left Toolbar",
          "Schematic - Top Toolbar",
          "Schematic - Right Toolbar",
          "PCB- Left Toolbar",
          "PCB - Top Toolbar",
          "PCB - Right Toolbar"
        ],
        "Turn LED On and Off With Push Button": [
          "Schematic Design",
          "PCB Design",
          "Gerber Output",
          "Gerber Check on Website"
        ],
        "Led Light Circuit with LDR": [
          "Introduction of the Circuit to be Designed",
          "Schematic LDR",
          "Assign Footprint",
          "PCB Design LDR",
          "Gerber Output"
        ],
        "Nano Shield Design": [
          "Schematic Nano",
          "PCB Nano",
          "Naming Procedures",
          "Logo Placement",
          "Gerber Output"
        ],
        "Mini Uno Board Design with ATmega328P": [
          "Introduction of the Circuit",
          "Personal Development Advice",
          "Schematic Design",
          "Footprint Assignment",
          "Component Placement",
          "PCB Connection",
          "Naming and Gerber Output",
          "Gerber View Mini Uno"
        ],
        "BONUS": [
          "How to Order Professional PCB?"
        ],
        "BONUS - ESP32 Shield Design": [
          "How to Download Ready Library?",
          "Creating a Project",
          "Adding Downloaded Libraries to KiCad",
          "Schematic Design",
          "PCB Design",
          "ESP32 3D Model Upload",
          "Gerber Output & View"
        ],
        "BONUS - Basic Nano Shield Design": [
          "Schematic - 1",
          "Schematic - 2",
          "PCB - 1",
          "PCB - 2",
          "Gerber Output & View"
        ]
      },
      "requirements": [
        "Basic knowledge of electronics is required."
      ],
      "description": "Our course starts with the installation of the program. We design our PCB boards with basic electronic circuits. With these design schemes, we can design the card in the size we want by using the KiCad program.\n\n\nThe KiCad program has been presented to us as a free program. Thanks to its easy and understandable interface, it makes designers comfortable to use.\n\n\nBy following our course, you can learn a new program and contribute to your personal development.\n\n\nIf you are tired of ready-made projects, if you want to design your own PCB board, this course is for you!\n\n\nNote: Our course has been prepared by using AI technology. KiCad is a constantly updated program. This course was shot with KiCad 5. In this course, you will be able to quickly learn prototyping without going into too much detail. The important thing is to understand the design logic. The interfaces do not change too much and you can easily adapt to new updates.\n\nAbout KiCad\nKiCad is an open source software suite for Electronic Design Automation (EDA). The programs handle Schematic Capture, and PCB Layout with Gerber output. The suite runs on Windows, Linux and macOS and is licensed under GNU GPL v3.\nMission Statement\nThe goal of the KiCad project is to provide the best possible cross platform electronics design application for professional electronics designers. Every effort is made to hide the complexity of advanced design features so that KiCad remains approachable by new and inexperienced users, but when determining the direction of the project and the priority of new features, the needs of professional users take precedence.\nProject Governance\nThe KiCad project is governed by a technical committee made up of the members of the lead development team. Most decisions are made by a consensus of the technical committee. When a consensus cannot be reached the final decision is made by the project leader.\nHistory\nKiCad was first released in 1992 by its original author, Jean-Pierre Charras. It has been in continual development since then and is now managed by the KiCad Development Team.\nThe name of KiCad comes from the first letters of a company of Jean-Pierre Charras' friend \"Ki\" being combined with \"Cad\". But it now has no meaning other than being the name of the software suite. Mentioned by Jean-Pierre in an email.\nMore KiCad history, general information, and advancements can be found in Wayne’s 2015, 2016, 2017, 2018, 2019, 2020, and 2021 FOSDEM presentations.",
      "target_audience": [
        "Engineering students , teachers and anyone who wants to design their own card."
      ]
    },
    {
      "title": "ISO 19770-1:Implement IT Asset Management (HAM) Step by Step",
      "url": "https://www.udemy.com/course/iso-19770-1implement-it-asset-management-ham-step-by-step/",
      "bio": "Practical guide to implement Hardware IT Asset Management with a user case company and templates ready to use",
      "objectives": [
        "Understand ISO 19770-1 standards: Gain knowledge of the ISO 19770-1 standard and its significance in IT Asset Management (ITAM).",
        "Develop ITAM policies: Learn how to create comprehensive ITAM policies and procedures that align with ISO 19770-1 requirements.",
        "Implement ITAM processes: Acquire the skills to effectively implement ITAM processes step by step, ensuring compliance with ISO 19770-1.",
        "Audit and certification readiness: Prepare for ISO 19770-1 audits and certification, demonstrating proficiency in ITAM practices."
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites or requirements are needed to take this course. It is designed to be beginner-friendly, and learners of all levels, including those with limited prior knowledge in IT Asset Management (ITAM), are encouraged to enroll. All necessary information and materials will be provided within the course to ensure that even beginners can successfully complete it."
      ],
      "description": "Unlock the power of effective Hardware IT Asset Management (ITAM) with our comprehensive course. Whether you are an IT professional, manager, or consultant, this practical guide equips you with the skills and knowledge needed to implement robust ITAM practices seamlessly.\nThrough real-world case studies and ready-to-use templates, you'll embark on a hands-on journey to enhance your organization's asset management strategies. We will dive deep into the intricacies of ITAM, focusing on hardware assets, and provide step-by-step guidance on implementation.\nHighlights of the course include:\nReal-Life Case Studies: Gain insights from a user case company, SolarTech Solutions, as we dissect their ITAM journey. Learn from their successes and challenges in implementing ITAM for hardware assets.\nReady-to-Use Templates: We provide you with customizable templates, checklists, and forms that streamline your ITAM processes. These tools are essential for efficient asset tracking and management.\nCompliance with ISO Standards: Understand ISO 19770-1 and how it relates to hardware ITAM. Ensure your organization complies with industry standards and regulations.\nPractical Implementation: Walk through the entire ITAM lifecycle, from defining scope and policies to asset procurement, deployment, maintenance, and disposal.\nContinuous Improvement: Discover how to monitor and adapt your ITAM system over time, ensuring it aligns with your evolving business needs.\nJoin us in this course and emerge with the expertise to transform your organization's hardware ITAM practices, reduce costs, optimize asset utilization, and enhance compliance. Enroll today to take the first step towards becoming an ITAM expert.",
      "target_audience": [
        "IT Professionals: IT managers, administrators, and technicians who want to enhance their knowledge and skills in ITAM to improve asset management practices within their organizations.",
        "Business Managers: Executives, business owners, and managers who aim to optimize IT asset utilization, reduce costs, and ensure compliance with ITAM standards such as ISO 19770-1.",
        "Compliance and Audit Professionals: Individuals involved in IT compliance, auditing, or regulatory affairs who need to understand ITAM best practices to meet industry standards and legal requirements.",
        "IT Consultants: Consultants looking to offer ITAM advisory services to businesses seeking to improve their asset management strategies.",
        "Students and Learners: Anyone interested in gaining a foundational understanding of IT Asset Management, irrespective of their current career or educational background."
      ]
    },
    {
      "title": "Android Apps for Arduino with MIT App Inventor without Code",
      "url": "https://www.udemy.com/course/android-apps-for-arduino-with-mit-app-inventor-without-code/",
      "bio": "A step-by-step course to help you build cool Android applications for Arduino, with no prior coding experience!",
      "objectives": [
        "What is AppInventor?",
        "AppInventor setup",
        "Event Driven Programming",
        "Components and properties",
        "Create an Android app that turns an LED on and off.",
        "Login Protected LED Controller",
        "Build a slider that controls the LED brightness",
        "Control the color of an RGB LED using a color picker",
        "Read the temperature with the DS18B20 temperature sensor and display the values on the app",
        "Build an Android app that controls a lamp connected to a relay",
        "Build an Android app that allows you to write messages and send them to the Arduino to be displayed on an LCD",
        "Build an Android app that allows you to Control DC Motors"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Detailed Introduction",
          "Interview: Designing User Interfaces for Arduino Projects"
        ],
        "App Inventor": [
          "App Inventor Overview",
          "An App Challenge",
          "System Requirements",
          "Introduction to App Inventor",
          "What is App Inventor",
          "AppInventor Vs Java and C",
          "Why App Inventor Works",
          "App Architecture",
          "Understanding App Inventor and Its Advantages",
          "Understanding App Inventor Basics"
        ],
        "Download and Install App Inventor on Your Device": [
          "Download and Install App Inventor on Your Device"
        ],
        "AppInventor User Interface With Example": [
          "AppInventor User Interface With Example",
          "Exploring the AppInventor User Interface"
        ],
        "Practical Connect Bluetooth Module": [
          "Practical Connect Bluetooth Module"
        ],
        "Led On Off Practical Example": [
          "Arduino Coding for Led On Off Practical Example",
          "Making an Android App for Led On Off Practical Example",
          "The Code",
          "Android App Interface",
          "Practical Testing",
          "LED On/Off with Arduino and Android App",
          "Controlling an LED with Android App"
        ],
        "Make a Log In Protected Led Control App": [
          "Make a Log In Protected Led Control App",
          "Android App Interface",
          "Adding Login Protection to Your App"
        ],
        "Slider Application to Control Led Brightness": [
          "Slider Application to Control Led Brightness",
          "The Code",
          "Android App Interface",
          "Practical Testing",
          "Controlling LED Brightness with a Slider",
          "Controlling LED Brightness with a Slider"
        ],
        "RGB Led Controller": [
          "RGB Led Controller Android Application",
          "RGB LED Arduino Coding",
          "The Code",
          "RGB LED Controller with Android App",
          "Android App Interface",
          "Circuit Schematic",
          "Create an RGB LED Controller App"
        ],
        "Sensor Readings": [
          "Sensor Readings Arduino Coding",
          "Sensor Readings Android Application",
          "The Code",
          "Displaying Sensor Readings with Arduino and Android App",
          "Android App Interface",
          "Display Sensor Readings on Android App"
        ]
      },
      "requirements": [
        "A Computer",
        "An Internet Connection"
      ],
      "description": "Android Apps for Arduino with MIT App Inventor without Code\nIf you have been thinking about turning your Arduino into a more capable device for long but have been avoiding learning programming, then you are not alone. In this course, we will show you how to build an Android app for Arduino without any prior coding.\nWelcome to this course:\nAndroid Apps for Arduino with MIT App Inventor without Coding is a practical course in which you’re going to build more than 8 Android applications to interact with the Arduino.\nWhy You Should Take This Course?\nLessons for Android apps: Learn how to create apps step-by-step.\nBuild cool Android applications for Arduino: Turn your Arduino into a versatile device.\nNo coding experience required: This course is designed for beginners.\nThis course is a step-by-step guide to help you build an Android app for your Arduino, without any prior coding experience. You'll learn how to create animated sprites and objects, add sound effects and music, control player movement, and program in simple scripts.\nYou Will Get:\nStep-by-step instructions for building the app design and logic.\nDownloadable code and schematics.\n.aia files (files that you can use with MIT App Inventor 2 software to edit the app).\n.apk files (files that you can run on your smartphone).\nWhat You Will Build?\nLED ON-OFF Controller (Bluetooth).\nLogin Protected LED ON-OFF Controller.\nLED Slider (Bluetooth).\nRGB LED Controller (Bluetooth).\nTemperature Sensing Application.\nRelay On-Off Control.\nLCD Display Text Control.\nRemote Controlled DC Motors (Robot Basics).\nBonus 1: How to Upload Your Apps to the PlayStore and Make Money by Placing Ads on Your App.\nBonus 2: How to Turn any Idea into an Android Application with Zero Experience.\nWhat you will learn\nCreate Android applications for Arduino using MIT App Inventor.\nControl Arduino devices via Bluetooth using Android apps.\nDesign and develop interactive and user-friendly Android apps.\nDeploy apps to the PlayStore and monetize them.\nWho is this course for\nBeginners with no coding experience.\nArduino enthusiasts looking to expand their projects.\nAnyone interested in learning how to build Android apps.\nHobbyists and makers wanting to control Arduino with Android devices.\nRequirements\nBasic understanding of Arduino.\nA desire to learn and create interactive applications.\nA computer and an Arduino board.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelance engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Learning How to make Android Apps for Arduino with MIT App Inventor without Code",
        "Anyone Interested in Learning How to Create an Android app that turns an LED on and off.",
        "Anyone Interested in Learning How to Make Login Protected LED Controller",
        "Anyone Interested in Learning How to Build a slider that controls the LED brightness",
        "Anyone Interested in Learning How to Control the color of an RGB LED using a color picker",
        "Anyone Interested in Learning How to Read the temperature with the DS18B20 temperature sensor and display the values on the app",
        "Anyone Interested in Learning How to Build an Android app that controls a lamp connected to a relay",
        "Anyone Interested in Learning How to Build an Android app that allows you to write messages and send them to the Arduino to be displayed on an LCD",
        "Anyone Interested in Learning How to Build an Android app that allows you to Control DC Motors"
      ]
    },
    {
      "title": "Raspberry Pi Boot Camp",
      "url": "https://www.udemy.com/course/raspberry-pi-boot-camp/",
      "bio": "Learn about Raspberry Pi, Python 3, GPIOs, Pi Camera and Image Processing.",
      "objectives": [
        "Raspberry Pi,",
        "Python 3,",
        "OpenCV,",
        "GPIOs and",
        "Object Detection."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Python 3 (Optional)": [
          "Installation",
          "PyCharm",
          "Variables -1",
          "Variables -2",
          "Variables -3 (Rules)",
          "Operators -1",
          "Operators -2",
          "Operators-3",
          "Standart Input and Output",
          "Lists",
          "Tuples",
          "Conditional Statements -1",
          "Conditional Statements -2",
          "Conditional Statements -3",
          "Loops -1",
          "Loops -2",
          "break",
          "Functions -1",
          "Functions -2",
          "Functions -3",
          "Modules -1",
          "Modules -2"
        ],
        "Installation of OS": [
          "SD Card Formatting",
          "Installation of Operating System",
          "Set Up Operating System",
          "Connecting VNC Server",
          "Installation of VSCode"
        ],
        "Circuit": [
          "BreadBoard -1",
          "BreadBoard -2"
        ],
        "GPIO (Basic)": [
          "GPIO Pins",
          "Controlling LED",
          "Example -1",
          "Button",
          "Example -2",
          "DC Motor"
        ],
        "GPIO (Intermediate)": [
          "Intro",
          "Digital Output",
          "Digital Input",
          "PWM"
        ],
        "Image Processing (OpenCV 4)": [
          "Installation of OpenCV",
          "Reading and Showing Images",
          "Color Format",
          "Resizing",
          "Example -3",
          "Saving an Image",
          "Play a Video -1",
          "Play a Video -2",
          "Raspberry Pi Camera -1",
          "Raspberry Pi Camera -2",
          "Using RPI Camera as Webcam",
          "Basic Drawing Operations -1",
          "Basic Drawing Operations -2",
          "Basic Drawing Operations -3",
          "Texting"
        ],
        "Machine Learning (Object Detection)": [
          "What is Machine Learning?",
          "About Haar Cascade",
          "Face Detection"
        ],
        "Other Courses": [
          "Other Courses"
        ]
      },
      "requirements": [
        "Work hard,",
        "Tenacity and",
        "Interest."
      ],
      "description": "Hello everyone,\nWelcome to the introduction of my Raspberry Pi Boot Camp course. Nowadays, image processing, computer vision and Python programming language are becoming very popular.  With Raspberry Pi Boot Camp course, we will take a closer look at the Raspberry Pi computer and learn in detail. We will learn about the GPIO pins on the computer and have information about digital input and output. Thus, when you finish the course, you will be able to use the GPIO pins. We will also introduce computer vision and learn about the OpenCV library. Not limited to this, we will learn to control the Raspberry Pi camera with OpenCV. Moreover, we will introduce Machine learning and learn how to detect face using Raspberry Pi computer.\n\n\nSince the course was created as a result of years of academic and technical experience, you will be able to carry out your own machine learning projects together with Jetson Nano when you finish the course.\n\n\nOh, and you also get a 30 days money-back guarantee if you’re not fully satisfied.\nSee you in the course!\nNo previous programming or electronics knowledge is required.\n\"You are never too old to set another goal or to dream a new dream.\" - C.S.Lewis\n\"Do the difficult things while they are easy and do the great things while they are small. A journey of a thousand miles begins with a single step\" - Lao Tzu\nYou get the best information that I have compiled over years of trial and error and experience!\nBest wishes,\nYılmaz ALACA",
      "target_audience": [
        "For engineering students (EEE, CE etc.),",
        "Interested in Computer Vision (OpenCV Module),",
        "Interested in Raspberry Pi Computers and",
        "Interested in Object Detection with Machine Learning."
      ]
    },
    {
      "title": "GSM Course with Arduino (SIM900A) (No Libraries)",
      "url": "https://www.udemy.com/course/gsm-course-with-arduino-sim900a-no-libraries/",
      "bio": "Using Arduino IDE for understanding and developing applications using GSM SIM900A",
      "objectives": [
        "GSM Basics",
        "Basic AT Commands of GSM Modem",
        "Everything you want to learn to build applications using SIM900A",
        "Build simple circuits around the Arduino Uno & SIM900A, that implement simple functions.",
        "Programming Arduino microcontroller in Arduino IDE",
        "You will learn how to program a Arduino Microcontroller from scratch",
        "You will learn how to test GSM SIM900A from scratch",
        "You will be learning required peripherals programming from scratch no libraries used in Arduino IDE",
        "With the Arduino IDE, write, compile and upload sketches."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge on electronics components",
        "Basic knowledge on C programming not mandatory"
      ],
      "description": "Over a 14+ lecture videos, 4+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of Arduino Microcontroller and also interfacing and testing sim900a gsm modem, And it will make you familiar and capable for writing drivers and building applications as per your requirement with similar controllers with same processor, but also learn the very basics of Arduino Microcontroller and hardware schematics along with basics of testing of sim900a for writing  peripheral drivers required for building your own products out of SIM900A and arduino microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on GSM Course with Arduino (SIM900A) (No Libraries).\nThe course is structured for the need of learners to understand microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the microcontroller than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Embedded Systems Engineer",
        "Embedded Systems Developer"
      ]
    },
    {
      "title": "Randomization and IPC in SystemVerilog",
      "url": "https://www.udemy.com/course/randomization-and-ipc-in-systemverilog/",
      "bio": "Simple course to learn advanced verification technique of Randomization and IPC in SystemVerilog.",
      "objectives": [
        "Difference between directed and random testing",
        "What is randomization and why verifiation engineer should know it",
        "How to do ramdomization in SystemVerilog",
        "How to do constrained randomization",
        "Various options available during randomization",
        "How control thread execution happens in Verilog",
        "Event communication in SystemVerilog",
        "Semaphore in SystemVerilog",
        "Mailboxes in SystemVerilog",
        "How to write Testbench using IPC"
      ],
      "course_content": {},
      "requirements": [
        "It is expected that knowledge of fundamentals of verification and basic constructs of SystemVerilog are known",
        "Familiarity with Object Oriented Programming is an added advantage",
        "Verilog programming and fundamentals of FPGA programming are supposed to be already known"
      ],
      "description": "VLSI industry requires more verification engineers and less design engineers. Roughly this ratio is around 70 to 30 percent respectively. Because todays designs are not only very complex but also challenging to verify due to technological advancements at all the levels of design. There are many techniques that are required to be known to today's verification engineers. How to design powerful and flexible test bench is always a challenge for verification engineers. SystemVerilog provides various constructs which can ease the job of verification engineer. However one should have basic knowledge about those constructs.\nThis course is introduced for learners who wants to learn advanced verification techniques of randomization and inter-process communication (IPC) in SystemVerilog. It is assumed that learner is aware of the basic constructs of SystemVerilog and object oriented programming. In this course, students will learn when to do randomization, how to do constraint randomization, what are various inter-process communication techniques etc. Various IPC techniques like events, semaphores and mailboxes will be introduced. Course is being taught with various examples and learner can monitor self-progress by attempting quiz in each section. Students can try to simulate all the examples discussed in the course in EDA Playground and verify the theoretical concepts. After learning this course, students will be able to apply randomization and IPC techniques while designing test bench.",
      "target_audience": [
        "This course is for students and engineers who wants to learn basics of randomization and IPC in short time.",
        "Verification engineers who wants to refresh concepts of randomization and IPC."
      ]
    },
    {
      "title": "Arduino Serial: Control Arduino via Serial Communication",
      "url": "https://www.udemy.com/course/arduino-serial-control-arduino-via-serial-communication/",
      "bio": "Master Serial Communication with Arduino for Seamless Data Transfer and Debugging",
      "objectives": [
        "This course will show you how to control Arduino using serial communication.",
        "You will learn how to send data from your computer to the Arduino, and control various components connected to the Arduino.",
        "You will learn how to send data from your computer to the Arduino, and receive data from the Arduino back to your computer.",
        "This course will teach you how to control your Arduino using serial communication."
      ],
      "course_content": {},
      "requirements": [
        "Arduino IDE",
        "Computer or Laptop",
        "a little experience in programming language can be an advantage",
        "has a knowledge about arduino is advantage",
        "basic guide and demos are provided so willingness to learn is a must"
      ],
      "description": "Hi there, welcome to this course! I am Ashraf Said from the Educational Engineering Team. Arduino Serial: Control Arduino via Serial Communication is your comprehensive guide to mastering serial communication with Arduino. This course is perfect for anyone looking to control Arduino projects through a serial connection, whether for sending and receiving data or for debugging purposes.\nSerial communication is straightforward and only requires two wires, making it an essential skill for any Arduino enthusiast. Throughout this course, you'll learn to use the Arduino Serial Monitor to test and implement serial communication, enhancing your ability to communicate with and control your Arduino projects effectively.\nCourse Overview:\nArduino is a popular open-source electronics prototyping platform based on easy-to-use hardware and software. With Arduino, you can read inputs such as a light on a sensor or a finger on a button and turn them into outputs like activating a motor or publishing something online. In this course, you will learn how to use serial communication to send data back and forth between your Arduino board and a computer or other devices.\nWhat You'll Learn:\nIntroduction to Serial Communication: Understand the basics of serial communication and its applications.\nSetting Up Serial Communication: Learn how to connect your Arduino board to a computer for serial communication.\nSending and Receiving Data: Master the process of sending and receiving data using the Arduino Serial Monitor.\nPractical Projects: Implement serial communication in various projects to control LEDs, sensors, and more.\nUsing the Serial Library: Explore the Serial Library to communicate with other devices and display data on an LCD screen.\nCourse Outline:\nIntroduction\nScope Series of Communication\nLet's Get Started\nProject 1\nProject 2\nProject 3\nProject 4\nProject 5\nWho Is This Course For:\nBeginners in Electronics: Individuals new to Arduino and serial communication.\nElectronics Hobbyists: Enthusiasts looking to expand their skills in controlling Arduino projects.\nSTEM Students and Educators: Those involved in STEM education seeking practical, hands-on experience.\nProfessional Developers: Developers aiming to integrate serial communication into their projects.\nRequirements:\nBasic Electronics Knowledge: A fundamental understanding of electronics is recommended.\nComputer Access: A computer with internet access.\nArduino Kit: Arduino board and basic electronic components for hands-on practice.\nAbout the Instructor:\nEducational Engineering Team is a renowned group of skilled engineers with over 13 years of experience in teaching and practical projects. Led by Ashraf, a seasoned educator and mechatronics engineer, the team has taught over 250,000 students worldwide. Known for their clear and comprehensive teaching style, the team has created over 100 courses on Udemy. Ashraf’s mission is to explore new trends and technology and help educate the world, making complex topics easy to understand and accessible.\nTestimonials:\n\"This course made serial communication with Arduino so easy to understand. The projects were very practical and helpful.\" - Kevin S.\n\"A must-take course for anyone looking to control Arduino via serial communication. The instructions were clear and concise.\" - Laura M.\n\"Highly recommend this course! It provided me with the skills I needed to debug and control my Arduino projects effectively.\" - Peter H.\nFAQ Section:\nWho can benefit from this course? This course is ideal for beginners, electronics enthusiasts, STEM students, and professional developers.\nWhat are the payment options? Various payment plans are available, including one-time payments and installment options.\nIs there a refund policy? Yes, we offer a 30-day money-back guarantee if you're not satisfied with the course.\nWhat equipment do I need? You'll need a computer with internet access and an Arduino board with basic electronic components.\nCan I communicate with peers and instructors? Yes, the course includes forums and Q&A sections for interaction with peers and direct support from instructors.\nCall to Action: Enroll Now and Master Serial Communication with Arduino!",
      "target_audience": [
        "This course is designed for anyone who wants to learn how to control Arduino using serial communication.",
        "Arduino Serial Communication course is for those who want to explore the world of Arduino and learn how to control it via serial communication.",
        "This course is designed for complete beginners who want to learn how to control Arduino using serial communication.",
        "The Arduino Serial Control course is perfect for anyone who wants to learn how to control their Arduino using serial communication."
      ]
    },
    {
      "title": "iPhone 6 Screen Repair",
      "url": "https://www.udemy.com/course/iphone-6-screen-replacement/",
      "bio": "Learn how to fix your iPhone 6 cracked screen like an expert",
      "objectives": [
        "How to repair a broken iPhone 6 screen"
      ],
      "course_content": {},
      "requirements": [
        "The willingness to learn"
      ],
      "description": "Hello and welcome!\nToday you will learn how replace the screen on an iPhone 6. I will teach you step by step and show you how to fix your iPhone 6 screen and avoid all the pitfalls that can cause permanent damage to your iPhone.\nCell phone repair is a 6 billion dollar industry, let us show you one of the most popular repairs on the market, NOW!",
      "target_audience": [
        "Anyone who wants to fix their iPhone 6 screen"
      ]
    },
    {
      "title": "Proteus Circuit Design Simulations and PCB Circuit Designs",
      "url": "https://www.udemy.com/course/proteus-circuit-design-simulations-and-pcb-circuit-designs/",
      "bio": "Master Circuit Simulations and PCB Designs in Proteus: From Basics to Advanced Projects with Step-by-Step Guidance",
      "objectives": [
        "Exploring & Understanding Proteus Environment: Get familiar with the Proteus interface, its tools, and how to navigate the workspace.",
        "How To Pick Components From Proteus: Learn how to select the right components from the Proteus library for your circuit designs.",
        "Your First Circuit Design In Proteus: Create your first simple circuit in Proteus, understanding the basics of circuit layout.",
        "LED Control With Button In Proteus: Design a circuit to control an LED with a button, a fundamental skill in electronics.",
        "How To Save Your Project In Proteus: Learn to save your work properly to ensure your designs are preserved and easily accessible",
        "Configuring NPN And PNP Transistor: Understand the configuration of NPN and PNP transistors for circuit designs.",
        "Configuring A Relay With NPN Transistor: Learn how to integrate a relay into your circuits using an NPN transistor.",
        "Configuring A Relay With PNP Transistor: Explore the use of a PNP transistor to control a relay in your designs.",
        "How To Simulate a Buzzer: Discover how to add and simulate buzzers in your circuits.",
        "How To Simulate DC Motor: Learn to simulate DC motors, essential for many mechanical and robotics applications.",
        "Wireless Circuit Connection: Delve into wireless circuit design and simulation, a critical skill in modern electronics."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of electronics is helpful but not required",
        "A PC with Proteus IDE installed (guidance provided inside the course)",
        "Curiosity and willingness to experiment and build!"
      ],
      "description": "Unlock the world of hardware embedded systems design with Proteus, the industry-standard software for circuit simulations and PCB design. Whether you’re a beginner or someone looking to sharpen your circuit design skills, this hands-on course will guide you through every step of creating and simulating circuits—and bringing them to life with PCB designs.\nIn Proteus Circuit Design Simulations and PCB Circuit Designs, you will learn how to design, simulate, and visualize electronic circuits from scratch. You’ll master basic to advanced circuit simulations and PCB design workflows that are essential for modern electronics and embedded system projects.\nIntroduction to Proteus for Circuit Designs\nGet an overview of Proteus IDE and discover why it’s one of the most popular tools for circuit design and simulation.\nUnderstanding the Proteus Environment\nFamiliarize yourself with the interface, tools, and features of the Proteus workspace.\nHow to Pick Components From Proteus IDE\nLearn how to access and select the right components from the Proteus library to build your circuits.\nYour First Circuit Design in Proteus\nDesign your very first circuit with step-by-step guidance, gaining confidence as you build.\nLED Control With Button in Proteus\nSimulate a simple LED and button project to understand input and output control in hardware.\nSaving and Managing Your Projects\nDiscover how to save and manage your projects effectively within Proteus IDE.\nConfiguring NPN and PNP Transistors\nUnderstand and configure NPN and PNP transistors in your circuit designs for real-world applications.\nRelay Control Using NPN and PNP Transistors\nLearn to interface and control relays using both NPN and PNP transistors to switch larger loads.\nSimulating Buzzers and DC Motors\nSimulate output devices like buzzers and DC motors, understanding their integration in embedded systems.\nWireless Circuit Connection\nDesign and simulate wireless communication between circuits in Proteus.\n\n\nPCB Circuit Design Module Includes:\nIntroduction to PCB Design in Proteus (ARES Module)\nTransition from circuit simulation to PCB design, learning the essentials of layout and board design.\nProteus Simulation of the Project\nValidate your circuit design through detailed simulation before moving to PCB layout.\nARES PCB Auto Placer & Manual Placement\nMaster component placement on the PCB, using the auto placer and manual methods for precision.\nCreating and Saving New Projects\nSet up and manage new PCB projects in Proteus ARES.\nChoosing and Adjusting Board Edges\nDefine the size and shape of your PCB, adjusting board edges for optimal design.\nConnecting Bottom Copper Tracks\nLay out and connect copper tracks efficiently for the bottom layer of the PCB.\nDesign Rule Manager in PCB\nUnderstand and apply design rules to ensure manufacturability and avoid errors.\nAdding Terminal Points and Board Descriptions\nCreate terminal points for inputs/outputs and add descriptive labels to your PCB layout.\n3D Visualization of PCB Designs\nView and analyze your PCB in 3D, providing a realistic representation of the final product.\nFinal Project Review\nWalk through a complete review of your project, reinforcing what you’ve learned and identifying areas for improvement.\n\n\nBy the End of This Course, You Will Be Able To:\nDesign and simulate real-life electronic circuits in Proteus\nConfigure transistors, relays, and other components\nBuild wireless circuits and simulate motors and buzzers\nCreate professional PCB layouts and 3D visualizations\nBring your embedded system projects to life with confidence!\nJoin now and start designing smart circuits and PCBs like a pro using Proteus!",
      "target_audience": [
        "Beginners and enthusiasts interested in electronics circuit simulation and PCB design",
        "Engineering students looking to sharpen their hardware design skills",
        "Hobbyists aiming to build and simulate electronics projects with confidence",
        "Anyone wanting to learn professional PCB design workflows using Proteus IDE"
      ]
    },
    {
      "title": "How to Build a Computer. A Complete Guide for Beginners.",
      "url": "https://www.udemy.com/course/how-to-build-a-computer-a-complete-guide-for-beginners/",
      "bio": "How to build a computer, step by step. All you wanted to know but were afraid to ask.",
      "objectives": [
        "The students will be able to design and build a computer, even if they had never done such thing before."
      ],
      "course_content": {},
      "requirements": [
        "- An elementery understanding how the computers work",
        "- You should be able to use a screwdriver"
      ],
      "description": "A long story short:\nThis course was designed to share a complete skillset on how to build a computer, from ground up.\nI offer you an easy to understand and time effective guidenance on how to handselect the parts of your future computer. how to mount thoose parts together.\nTopics like creating an operating system installation media and the the installation the Operating System ( Microsofts Windows 10 in this case) are part of the course as well.\n\nIn addition to that, you can expect tips and tricks how to spare time on doing maintenance.\nThe topics are covered with the latest, most up-to-date hardwares what you can get in the end of 2017.",
      "target_audience": [
        "People who are about to learn how to select the parts of their future computer build, and how to put them together.",
        "People who are about to learn how to install an operating system."
      ]
    },
    {
      "title": "Complete Programming in Renesas RL78 Series Microcontroller",
      "url": "https://www.udemy.com/course/complete-programming-in-renesas-rl78-series-microcontroller/",
      "bio": "Renesas RL78 Microcontroller programming, driver development for various devices, Interfaces, base level training",
      "objectives": [
        "Programming RL78 microcontroller in Atmel Studio IDE",
        "You will learn how to program a RL78 Microcontroller from scratch with code generator",
        "Build your own projects with the RL78 microcontroller..",
        "You will be learning all the peripherals programming from scratch no libraries used in Cube Suite + IDE",
        "The class starts from the basics of setting up a microcontroller programming and hardware environment."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge on electronics components",
        "Basic knowledge on C programming",
        "Download and Install all other software links are provided"
      ],
      "description": "Over a 30+ lecture videos, 7.7+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of RL78 Microcontroller, but also learn the very basics of RL78 Microcontroller internal structure and hardware schematics required for building your own products out of RL78 (Renesas 16Bit) microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on Complete Programming in Renesas RL78 Series Microcontroller.\nThe course is structured for the need of learners to understand microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the AVR microcontroller than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "Anyone with some experience in electronics",
        "Anyone with an beginner knowledge of embedded systems",
        "you will be able to program any RL78 microcontroller once completed this course"
      ]
    },
    {
      "title": "Bare Metal Programming in Arm Cortex-M Processor (TM4C123)",
      "url": "https://www.udemy.com/course/bare-metal-programming-in-arm-cortex-m-processor-tm4c123/",
      "bio": "Using Keil uVision IDE for understanding and developing all the peripheral drivers for TM4C123 (Arm Cortex M Processor)",
      "objectives": [
        "Programming TM4C123GH6PM microcontroller in Keil uVision IDE",
        "You will learn how to program a TM4C123 Microcontroller from scratch with datasheet approach",
        "Build your own projects with the TM4C123 microcontroller.",
        "You will be learning all the peripherals programming from scratch no libraries used in Keil uVision IDE",
        "The class starts from the basics of setting up a microcontroller programming and hardware environment.",
        "Writing peripheral driver for TM4C123GH6PM microcontroller",
        "Arm Cortex M Processor Understanding"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge on electronics components",
        "Basic knowledge on C programming",
        "Basic circuit building skills from schematics"
      ],
      "description": "Over a 45+ lecture videos, 15+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of TM4C123 Microcontroller and also Arm Cortex M processor, And it will make you familiar and capable for writing drivers and building applications as per your requirement with similar controllers with same processor, but also learn the very basics of TM4C123GH6PM Microcontroller internal structure and hardware schematics along with basics of TM4C123GH6PM for writing  peripheral drivers required for building your own products out of microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on Bare Metal Programming in Arm Cortex-M Processor (TM4C123).\nThe course is structured for the need of learners to understand microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the concepts than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "People with some experience in electronics",
        "People with an beginner knowledge of embedded systems"
      ]
    },
    {
      "title": "The Complete Arduino and Electronics Masterclass",
      "url": "https://www.udemy.com/course/arduino-and-electronics-masterclass/",
      "bio": "Learn Basics of Electronics, Sensors, and Arduino C/C++ Programming and Create Awesome projects",
      "objectives": [
        "Build projects with Arduino Uno",
        "Understand what is the Arduino Platform and Ecosystem",
        "Understand Analog and Digital Inputs, PWM, and Digital Outputs",
        "Work with Max 72xx Matrix, OLED, 5110, TFT, and WS2821b Type of displays",
        "Understand the concepts of I2C, SPI, and Serial Bus (UART and USART)",
        "Learn C Programming for Arduino (Memory, Arrays, and Strings)"
      ],
      "course_content": {},
      "requirements": [
        "A Windows, Raspberry Pi, Mac, or Linux computer",
        "An Arduino Uno, Clone, or Compatible",
        "Burning desire to excel in personal and professional life"
      ],
      "description": "This is the complete masterclass for Arduino and Electronics. We will learn basics of Electronics and explore the Arduino platform in detail. We will study the electronic buses like Serial, I2C, and SPI. We will also learn the interfacing of Arduino with various electronic hardware components.\nThis course has over 70 lectures and more than 6 hours of video. After finishing this course, you will be comfortable working with Electronics and Arduino platform. This is a practical and hands on course. If you are interested in tinkering and maker movement, you will find this course very useful. Also if you are an engineer by heart, you will be delighted to work on various projects in this course.\nFollowing is a broad list of topics we will learn in this course,\n* Basic Electronic Components\n* Working with LEDs\n* LED Displays\n* More Arduino Boards\n* Various Buses\n* LCD Interfacing\n* Arrays, Strings, Memory\n* Potentiometer and Analog Input\n* Serial Bus and Data Exchange\nDo check the course content for a detailed list of topics.\nYou will get lifetime access to over 70 lectures plus corresponding PDFs, Arduino C code files, and the circuit diagrams for the lectures!\nSo what are you waiting for? Learn Arduino and Electronics in a way that will advance your career and increase your knowledge, all in a fun and practical way!",
      "target_audience": [
        "Anyone who wants to learn",
        "Anyone interested in electronics and programming"
      ]
    },
    {
      "title": "Laptop repair course: Master Laptop Motherboard Repairing",
      "url": "https://www.udemy.com/course/laptop-repair-course-master-laptop-motherboard-repairing/",
      "bio": "Computer repair, hardware Technicians, PC Schematics, Dead motherboard repair, Integrated Circuit, Basic Electronics, IT",
      "objectives": [
        "Laptop motherboard components names and functions;",
        "Laptop motherboard power sequence ;",
        "How to troubleshoot and diagnose motherboard faults using schematics;",
        "Motherboard circuits studying;",
        "How to track voltages and signals in the motherboard;",
        "Most common faults on a failed laptop and much more."
      ],
      "course_content": {},
      "requirements": [
        "Computer Hardware Basics;"
      ],
      "description": "9 Reasons why you should choose this course\nThe course will teach you Everything about how to repair failed laptop motherboards with schematics reading besides the most common faults you can encounter on failed laptops.\nThe course is created with perfect care by a computer engineer;\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences;\nYour inquiries will be answered in a short time with a full explanation of any question;\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course;\nYou are going to learn the basics and secrets of laptop motherboard repair;\nYou will learn how to check, troubleshoot, and diagnose laptop motherboard circuits and components;\nYou are also going to learn how to track electronic signals on the motherboards using its schematics.\n\n\nThis course will transform you from a beginner to a Pro.\nTopics that we will be discussing in this course are :\nMotherboard components names and functions;\nSurface Mounted Devices components;\nLaptop motherboard power sequence;\nHow to diagnose laptop power jack;\nBattery charge circuit;\n3.3V/5V power system circuit studying;\nCPU power management circuit;\n+VCC_core and VGFX Power system and other motherboard circuits;\nHow to track laptop motherboard voltage using schematics;\nThe most common faults on failed laptops;\nHow to check laptop motherboard power jack serviceability;\nHow to check motherboard power circuit and components serviceability;\nLaptop Motherboard Chips and Integrated Circuits;\nSMD components on a laptop motherboard;\nHow to check motherboard connectors' serviceability and much more.\nYou will also learn many tips and tricks that will make you a hardware professional and have a deep understanding of how to repair laptop motherboards.\nI will guide you step by step with a straightforward explanation of this course.\nIf you are interested in one of the points we discussed before, then this course is for you.\nSo, what are you waiting for?\nEnroll now and join us.\nI'd love to see you in the class.",
      "target_audience": [
        "Students, Technicians, and Engineers who want to master laptop repairing;",
        "Everyone who wants to master motherboard repair."
      ]
    },
    {
      "title": "IoT Application Development with Matter and the Arduino Nano",
      "url": "https://www.udemy.com/course/iot-application-development-with-matter-and-the-arduino-nano/",
      "bio": "Develop Matter based IoT applications on the Arduino Nano Matter and learn the key features of the Matter protocol.",
      "objectives": [
        "Discover Matter, a new protocol for smart devices, enhancing user experience, fostering interoperability across ecosystems, backed by 140+ companies",
        "Follow hands-on practical exercises in developing Arduino based IoT applications using the Arduino IDE",
        "Learn the core elements of the Matter data model: nodes, endpoints, clusters, attributes, and commands, defining IoT device capabilities",
        "Learn how Matter devices interact within a network, enabling useful automations without intermediaries, utilizing device binding and ACLs",
        "Explore Matter Fabric & Multi-admin: Understand how devices join multiple ecosystems, authenticate, & enforce access control across different Fabrics.",
        "Understand Matter's security model: Learn how PKI, DACs, and NOCs authenticate devices, ensuring trusted communication and protecting data privacy."
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of basic Linux commands",
        "Raspberry Pi 3 or 4 with sd card",
        "Arduino Nano Matter Board",
        "Basic knowledge of C and C++ programming",
        "Basic knowledge of IP networking"
      ],
      "description": "Join our comprehensive course on Matter, the revolutionary protocol reshaping smart home technology. Explore its principles, security, and industry impact. Get practical experience of developing Matter applications for the Arduino Nano Matter.\nIn this course, you'll delve deep into Matter's significance in solving compatibility issues in smart homes.\nUnderstand how it unifies smart home ecosystems and has the potential to enhance interoperability and user experience in the IoT market.\nDiscover Matter's functionality and learn about scalability considerations.\nExplore Matter's hardware and software requirements, supported development kits, and SDKs.\nGain hands-on experience of developing Matter applications on the Arduino Nano Matter.\nFamiliarize yourself with Matter's security model, including Device Attestation Certificates (DACs) and X.509 certificates.\nUnderstand the commissioning process, from device authentication to network setup.\nExplore Matter's multi-admin concept and the role of Node Operational Certificates (NOCs) in identifying nodes across ecosystems.\nLearn about Access Control, Access Control Lists (ACLs), and permissions for Matter nodes. Gain insights into Matter's Distributed Compliance Ledger (DCL) and its role in securely publishing device information.\n\n\nWhether you're a developer, IoT enthusiast, or industry professional, this course provides a comprehensive understanding of Matter's principles, security, and practical implementation, empowering you to navigate the evolving landscape of smart home technology with confidence.",
      "target_audience": [
        "IoT Application Developers",
        "IoT Operational support",
        "IoT Solution Architects",
        "Educators"
      ]
    },
    {
      "title": "VHDL Programming and Functional Verification",
      "url": "https://www.udemy.com/course/vhdl-programming-and-functional-verification/",
      "bio": "Code and Simulate your own VHDL code like a Master",
      "objectives": [
        "VHDL Programming",
        "Functionnal Verification",
        "Basics of Computer Architecture Design"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge in Electronic Engineering"
      ],
      "description": "This course is a full VHDL course , with complete and detailled explanations of the VHDL syntax and VHDL constructs with concrete examples. We also explain the different steps in the Hardware design process, and how to get from an algorithmic Model of the desired Hardware to a fully functional VHDL coded Hardware design.The course also gives a small introduction to FPGAs for those who will be working on FPGAs.\nThe class finishes with the Functional Verification part which gives the student a complete VHDL Testbench of an example CPU ALU design. We go through each line of code in the testbench and explain it. This will give the student, the background it needs to code his own testbench for his own specific design.",
      "target_audience": [
        "Electrical Engineering Students",
        "Computer Science Students curious about Hardware Design"
      ]
    },
    {
      "title": "Introduction to RISC-V and RISC-V assembly programming",
      "url": "https://www.udemy.com/course/introduction-to-risc-v-and-risc-v-assembly-programming/",
      "bio": "Introduction to RISC-V Instructions to start with RISC-V assembly programming for embedded systems.",
      "objectives": [
        "RISC-V Instruction Set Architecuture",
        "RV32I Base Instructions",
        "Development Environment Setup",
        "Write Fibonacci Series generation & Bubble Sort in RISC-V assembly"
      ],
      "course_content": {},
      "requirements": [
        "If you are already an embedded developer or have knowledge about any processor, then this course will help you to jump start with RISC-V"
      ],
      "description": "RISC-V is a open Instruction Set Architecture and being quickly adapted across the globe. This course would be great course to starters to know about RISC-V to know what is RISC-V, RISC-V standard extensions and how RISC-V supports custom instruction on top of standard instructions.\n\n\nThis course would be of great interest for embedded developers with prior knowledge on any processor architecture and instruction set architecture willing to learn or jump start with RISC-V processor & instruction set architecture. This course provides information on all aspects to jump start with RISC-V from available boards, simulators and tools and all needful to  quickly start with RISC-V assembly programming.\n\n\nThis course discusses in detail the RV32I base instructions including Load, Store, Arithmetic and control (unconditional jump and conditional branch) transfer instructions with examples to lay a strong foundation on base RISC-V assembly instructions & then followed by implementing Fibonacci sequence and Bubble sort implementation in RISC-V assembly.  The Fibonacci sequence generation and bubble sort implementation would provide insights on the base RV32I instructions and its usage to make it easy to understand along with the introduction to assembler directives and RISC-V pseudo instructions. This would also touch on the RISC-V standards when and where its needed.\nUpdate July 1st 2024: Addition of multiplication instructions\nUpdate July 4th 2024: Addition of lecture 2 Introduction to RISC, ISA and RISC-V based on feedback comment",
      "target_audience": [
        "Anyone who wants to quickly start with RISC-V assembly programming & jump into RISC-V ecosystem.",
        "This is a beginner's course about RISC-V & RISC-V eco system."
      ]
    },
    {
      "title": "IoT with Raspberry Pi 4",
      "url": "https://www.udemy.com/course/iot-with-raspberry-pi-4/",
      "bio": "Learn the fundamentals of IoT with Raspberry Pi 4 and build IoT solutions from scratch",
      "objectives": [
        "Learn how to use your Raspberry Pi 4 in IoT projects",
        "In-depth understanding of fundamental IoT concepts",
        "Learn how to use and work with the Cayenne IoT platform",
        "Implement a no code project using the Cayenne platform",
        "Learn how to use and work with the ThingSpeak platform",
        "Implement end-to-end IoT project using MQTT API in ThingSpeak"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of electronics and related concepts",
        "A fair idea of setting up the Raspberry Pi single board computer",
        "Basic knowledge of Python programming is recommended"
      ],
      "description": "June 2022 Update:\nAdded a New Lecture With Updated Steps for Headless Installation using Raspberry Pi Imager App\nUpdated Cayenne Registration Link\nHello learners!\nWelcome to MAKERDEMY's “IoT with Raspberry Pi 4” course.\nThis is a beginner level course that will teach you to build your own IoT projects with the powerful credit-card sized computer. Do you wish to explore the world of IoT with the Raspberry Pi 4? Want to learn how to work with IoT platforms and implement end-to-end IoT projects with them?\nThis course is a one stop destination for getting started with the Internet of Things. By the end of the course, you will get a clear idea of how an IoT system works and how to use the Raspberry Pi 4 to build your own IoT projects. You will get introduced to, and work with two different IoT platforms, the Cayenne IoT platform and the ThingSpeak IoT platform. You will also learn how the MQTT API works and how to use it in your IoT systems. You will get to implement two capstone projects apart from other mini-projects. If you complete all sections in the course, and the course assignments, you will confidently be able to develop and work on implementing your own IoT solutions.\nThroughout the course, we have provided a curated collection of original resources. These resources include links to documents for in-depth learning, links, videos, and more. At MAKERDEMY, we have a dedicated instructor team who will promptly answer any of your course-related queries.\nSo, what are you waiting for?! Come, join me in this course. I look forward to being your instructor for this course and turn you into an expert in the field of IoT!",
      "target_audience": [
        "Any developer or engineer who wants to get a hands-on experience in the field of IoT with the Raspberry Pi 4",
        "IoT enthusiasts who wish to strengthen their IoT fundamentals and enhance their skills",
        "Electronics hobbyists who love tinkering with microprocessors like the Raspberry Pi 4, and work on implementing their own IoT based projects",
        "Anyone with minimal programming experience, who is interested in getting started with the world of the Internet of Things"
      ]
    },
    {
      "title": "Arduino: Interfacing Bluetooth with Arduino Step by Step",
      "url": "https://www.udemy.com/course/arduino-interfacing-bluetooth-with-arduino-step-by-step/",
      "bio": "Connecting the Physical and Digital Worlds: A Step-by-Step Guide to Interfacing Bluetooth with Arduino",
      "objectives": [
        "Building simple projects such as a wireless temperature sensor or a remote-controlled car using the skills learned in the course.",
        "Troubleshooting common issues that may arise when working with Bluetooth and Arduino",
        "Using the serial communication functions of the Arduino to interface with the Bluetooth module",
        "Writing Arduino code to control the module and send/receive data",
        "Setting up and configuring a Bluetooth module"
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with C/C++ programming languag",
        "experience with the Arduino IDE is also helpful",
        "Arduino board and a Bluetooth module",
        "A computer with the Arduino IDE installed.",
        "A USB cable to connect the Arduino board to the computer.",
        "A breadboard and jumper wires to connect the Bluetooth module to the Arduino board.",
        "A smartphone or other device with Bluetooth capabilities to use as a remote control.",
        "Basic knowledge of serial communication and protocols.",
        "Basic knowledge of working with sensors, actuators and/or other electronic components with the Arduino."
      ],
      "description": "Are you interested in learning how to interface Bluetooth with Arduino? This course is perfect for students, hobbyists, and professionals who want to build projects and applications that wirelessly connect to and control electronic devices.\nThroughout the course, you will learn how to set up and connect a Bluetooth module to an Arduino board and program the Arduino to communicate with the Bluetooth module. The course will cover different Bluetooth communication protocols, such as SPP and GATT, and how to use them with Arduino.\nWhat You Will Learn:\nSetting up and connecting a Bluetooth module to an Arduino board.\nProgramming the Arduino to communicate with the Bluetooth module.\nUnderstanding different Bluetooth communication protocols like SPP and GATT.\nBuilding various projects and applications, such as remote control, data logging, and wireless sensor networks.\nBest practices for securing Bluetooth communications and protecting against common threats.\nWhy Take This Course?\nWireless Control: Learn how to wirelessly control and communicate with your Arduino projects, useful for home automation, robotics, and IoT.\nSerial Communication and Protocols: Understand the basics of serial communication and protocols essential for communication between the Arduino and Bluetooth modules.\nHands-on Projects: Gain practical experience with examples and projects demonstrating Bluetooth control of machinery and devices like motors and LEDs.\nProgramming with Libraries: Simplify the process of writing code using Arduino libraries.\nCareer Advancement: Knowledge of Bluetooth communication is beneficial for career advancement in robotics, IoT, automation, and more.\nCost-Effective Solution: Bluetooth is a cost-effective solution for wireless communication without additional infrastructure or setup costs.\nFlexibility: Control and communicate with your projects from a distance, providing more flexibility in their use.\nBy the end of this course, you will have the knowledge and skills to build your own projects and applications using Bluetooth and Arduino, and troubleshoot common issues that may arise.\nEnroll Now: Enroll in this course to learn at your own pace, whether you are a beginner or have some experience with Arduino. Enhance your skills and start building Bluetooth-enabled Arduino projects today!\nWhat You Will Learn\nSetting up and connecting a Bluetooth module to an Arduino board.\nProgramming the Arduino to communicate with the Bluetooth module.\nUnderstanding different Bluetooth communication protocols like SPP and GATT.\nBuilding various projects and applications, such as remote control, data logging, and wireless sensor networks.\nRequirements or Prerequisites\nBasic understanding of electronics and programming concepts.\nAccess to the required components (listed in the course) for building the project.\nA computer for programming the microcontroller and uploading data online.\nWho Is This Course For\nBeginners: With no prior IoT or programming experience.\nStudents: Studying electronics, computer science, or related fields.\nHobbyists: Interested in building their own wireless communication projects.\nProfessionals: Looking to enhance their skills in IoT and Bluetooth applications.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "hobbyists",
        "students",
        "makers who want to learn how to use Bluetooth to wirelessly control and communicate with their Arduino projects.",
        "engineers",
        "professionals who are looking to add wireless capabilities to their projects, such as robotics, home automation, IoT, etc.",
        "designed for people who have a basic understanding of electronics, programming and Arduino",
        "are interested in learning how to use Bluetooth to communicate with their projects"
      ]
    },
    {
      "title": "Learn Raspberry Pi & Embedded Linux Programming",
      "url": "https://www.udemy.com/course/raspberry-pi-embedded-linux-programming/",
      "bio": "Unlock the power of Raspberry Pi and master Embedded Linux programming",
      "objectives": [
        "Setting up Raspberry Pi board.",
        "Exploring embedded systems concepts.",
        "Programming on the Linux platform.",
        "Shell scripting, Python programming, C programming.",
        "Theory + Practicals.",
        "Interface external hardware peripherals.",
        "Camera project."
      ],
      "course_content": {},
      "requirements": [
        "Programming experience in 'C'.",
        "Basic computer proficiency. Basic electronics knowledge.",
        "Self motivation to explore and learn new topics.",
        "A desktop/laptop with good internet connectivity is recommended. A 64 bit computer of atleast 4GB RAM and 10GB of HDD free space with Windows/Ubuntu/Mac OS is recommended.",
        "Raspberry Pi 4 single board computer.",
        "Hardware peripherals:  LED, Push buttons, Buzzer, HD44780 LCD display, DC motor, Servo Motor,  L293 driver board, Arduino Uno board, I2C LCD display, 5K Potentiometer, Pi Camera V1.3 module, Speaker"
      ],
      "description": "Everyone probably uses Linux, multiple times a day, without noticing. If you made a phone call, took a picture, used traffic lights, listened to the radio, watched television, all these are powered by Linux. Literally billions of people are using Linux. Linux , powers these applications. Which means it involves programming, that handles several technologies. Embedded Linux programming expertise, will fetch you a highly rewarding career. On learning this, you get to know how computers work and how electronic products around you work.\nSo,\nWhat exactly is Raspberry Pi, and why is it used in our course?\nHow do you design an embedded Linux product?\nWhat are the software tools used?\nHow do you interface hardware peripherals with an embedded Linux board?\nHow do you write an embedded Linux application in 'C' or in Python?\nWhat is a Linux shell script?\nHow to design a socket application for communication?\n\n\nThis course covers, all these topics. The course is a blend of both theory, and practicals. This is a step by step course on Raspberry Pi, and Embedded Linux Programming, with information suitable for beginners and gradually progressing to intermediate level. You will learn how to set up and configure a Raspberry Pi board, explore basic embedded systems concepts, and delve into programming on the Linux platform. By the end of the course, you will be able to develop your own embedded Linux applications and projects.",
      "target_audience": [
        "Anyone who fulfills the pre-requisites can join the program.",
        "Freshers/Beginners of engineering/diploma in EE/ECE/CSE.",
        "Students looking for certification or credits.",
        "Hobbyists.",
        "Seasoned or experienced or professional programmers wouldn't find this useful.",
        "Anyone looking for highly advanced topics like driver design, building Linux from scratch,kernel programming etc shouldn't join."
      ]
    },
    {
      "title": "Power Electronics: Learn how to Test Electrical components",
      "url": "https://www.udemy.com/course/power-electronics-learn-how-to-test-electrical-components/",
      "bio": "Electrical engineering, electronics engineering, circuit diagram analysis, Transformer, Transistors, MOSFETS, Inductors",
      "objectives": [
        "Electrical and electronics components working principle;",
        "How to test electronics and electrical components Using Multimeter;",
        "Electronics & electrical components symbols;",
        "Master the use of the Multimeter during testing;",
        "Repairing tips and tricks and much more."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Power Elelectronics": [
          "What is a Fuse and how it works",
          "What is an electronics Capacitor",
          "What is an Inductor and how it works1",
          "How to test Transistor & how It Works part 1",
          "How to test Transistor & how It Works part 2",
          "How to test MOSFET & how It Works",
          "How to test Resistor and how It Works",
          "How to test Diode and how It Works",
          "How to test Transformer and how It Works",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic Electronics & Electrical Concepts."
      ],
      "description": "**Continuous Updates**\n11 Reasons why you should choose this course\nThe course will teach you How to Test Electrical & Electronics Components step by step;\nThe course is created with perfect care by a computer engineer;\nOne-On-One Support;\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences;\nYour inquiries will be answered in a short time with a full explanation of any question;\nConstant updates.\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course;\nYou going to learn and master how to use the Multimeter during testing;\nYou going to learn how electronics components work in detail;\nYou will be able to draw and understand circuit diagrams of Transformer, Transistor, MOSFET, Inductors, Diodes etc...\nTopics that we will be discussing in this course are :\nHow to test Transformer and how It Works;\nHow to test Transistor & how It Works;\nHow to test MOSFET & how It Works\nHow to test Inductor & how It Works\nHow to test Resistor & how It Works\nHow to test Fuses & how It Works\nHow to test Capacitor & how It Works\nHow to test Diode, how It Works and much more;\nThe Switch Mode Power Supply parts & components;\nCircuit diagram analysis;\nHow to use the Multimeter in a correct way;\nElectrical and electronics components symbols analysis etc...\nYou will also acquire many skills that will make you a hardware professional and have a deep understanding of Power Electronics.\nI will guide you step by step with an easy explanation along this course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nWhat are you waiting for?\nEnroll now and join us.\nI'll love to see you in the class.",
      "target_audience": [
        "Any one how want to learn Electronics;",
        "Technicians how want to improve their skills in electronics testing;",
        "Students in electronics and electricity field."
      ]
    },
    {
      "title": "Circuit Design and Simulation: Electronic & Microcontroller",
      "url": "https://www.udemy.com/course/circuit-design-simulation-microcontroller-and-electronics-simulation/",
      "bio": "Enter the world of 3D Circuit Design and Simulation and have fun learning and teaching Electronics and Microcontroller",
      "objectives": [
        "Design and Simulate Electronic Circuits in 3D",
        "Program 3D Microcontrollers using blocks",
        "Program 3D Microcontrollers using code",
        "Simulate Different Arduino Boards"
      ],
      "course_content": {},
      "requirements": [
        "Ability to practice not just watch.",
        "Sign Up for The FREE Software/Websites used in this Course (All Free No Hidden additional Fees)",
        "Have a basic knowledge in Electronics"
      ],
      "description": "The course offers a complete 3D design and simulation experience. With the introduction of 3D circuit design and simulation, a whole new world is opened up for electronics enthusiasts looking to teach or learn from these 3D circuits. With the learning curve being much shorter for those who have not been exposed to electronic circuits before, this opens up a whole new world of exploration. Enter the world of 3D circuit design and simulation with Electronic & Microcontroller. Use high-quality graphics to create, modify and update your circuits in this rich 3D environment. Teach yourself the basics of electronics with tutorials that will guide you through theory.\nSo, if you are interested in designing circuits and understanding the simulations for them, then you are in the right place.\nIn this course, you will get the chance to explore the wonders of 3D simulation of a limitless range of circuit boards, 2D circuit design tools, and also microcontroller simulation, testing, and programming with and without coding.\nWhy you should take this course?\nA new world of Electronics and Microcontroller is waiting for you\nCreate 3D circuits in minutes instead of hours\nLearn Electronics and Microcontroller without spending thousands of dollars on equipment\nSimulate the circuit before building it\nFocus more on learning electronics rather than designing circuits, which can be tedious\nCircuit Design and Simulation: Electronic & Microcontroller course offers well-designed lessons that will teach you all about electronic circuits and microcontrollers.\nThe lessons are well taught by experienced professionals who want to share their knowledge.\nWelcome to this course.\nYou will get the chance to learn:\n3D Electronic design and simulation\nExploring different electronic elements and getting to watch them as they receive different signals.\nTest different situations and circuit conditions and explore the possibility of each element before real-life testing.\nWatch items explode when they receive excessive current, such as LEDs and resistors.\nEdit, wire, and add different electronic elements.\nLearn how to use Breadboard in real life and in Simulation environment.\nLearn how to use RGB LEDs in real life and in Simulation environment.\nSeries and Parallel Circuits with Practical Examples.\nArduino Digital/Analog Input/Output.\nArduino Serial Monitor Simulation.\n3D simulation of different electronic elements.\n3D wiring of real-life circuits inside a simulation platform.\nMeasurement of different electrical signals such as voltage, current, temperature, light, digital, and analog.\nArduino programming and Simulation without coding using Blocks.\nArduino programming with coding.\nMicrocontroller programming and Simulation without coding using Blocks.\nMicrocontroller programming with coding.\nWhat You Will Learn in This Course\nWhy it is helpful to simulate and design in 3D\nSign Up for the FREE Simulation Platform\nUser Interface Introduction\nDesign and Simulate ON/OFF Led Circuit\nDesign and Simulate ON/OFF Switches Circuits\nDesign and Simulate Microcontroller Systems\nDesign and Simulate Arduino Boards\nProgram without coding using Blocks\nDesign and Simulate Simple Led Fading Circuits\nDesign and Simulate Simple RGB Led Circuit\nDesign and Simulate Potentiometer Circuits\nThis will be a journey of a lifetime for everyone looking for a new vision in Engineering Simulation, easy-to-use and really helpful software will be introduced.\nUser Testimonials: \"This course made circuit design accessible and fun. Highly recommend it!\" - John D.\n\"A fantastic way to start learning electronics without the need for hardware. Excellent course!\" - Sarah M.\nAuthor Bio: Ashraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world. With over 250,000 students from around the world, Ashraf’s online courses have helped many to kick-start their careers in the industry.\nCall to Action: Enroll now to start your journey into 3D circuit design and simulation without the need for expensive hardware. Unleash your creativity and build amazing projects today!\nFAQ: Q: Do I need any special equipment or software to take this course? A: No, you only need a computer with internet access and the free software mentioned in the course.\nQ: How quickly can I start creating projects after taking this course? A: Results may vary, but many students see success within the first few projects by following the strategies taught in this course.\nWhat You Will Learn\nHow to program Arduino boards without coding\nHow to use simulation tools for Arduino projects\nHow to create interactive projects using buttons, switches, and dials\nHow to test Arduino codes and schematics without hardware\nWho Is This Course For\nBeginners interested in Arduino programming\nHobbyists and makers looking to learn Arduino without buying hardware\nAnyone interested in electronic design and simulation\nRequirements\nA computer with internet access\nNo prior coding experience needed\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects. They strive to provide deep, hands-on experience in their courses, offering step-by-step blueprints on various topics.\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and maker. He has been the Chief Educational Engineer at Educational Engineering Team since 2007, and his mission is to explore new trends and technology to help educate the world. His online courses have helped over 250,000 people worldwide to build successful careers.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Any Tech Geek",
        "Engineering Students",
        "School Students who want's to learn more about electronics in simple ways",
        "Teachers who are looking for ways to make learning more fun and interactive"
      ]
    },
    {
      "title": "Home Automation using Arduino, Smart Phone App and JARVIS AI",
      "url": "https://www.udemy.com/course/home-automation-using-arduino/",
      "bio": "Learn to do Home Automation using different approaches like Jarvis AI and Android Apps",
      "objectives": [
        "Learn basics of Arduino",
        "Learn to control Arduino using Python",
        "Learn to build Jarvis AI",
        "Automate various tasks",
        "Learn to build communication between PC and Arduino",
        "Learn to Bluetooth module with Arduino",
        "Learn to build Simple Apps for your Phone",
        "Do Home Automation using Jarvis AI",
        "Control Electronics using Voice Recognition from your Smart Phone",
        "Control Electronics using Switch App on your Smart Phone"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience is needed. But having a little knowledge of general programming concepts like variables, loops will be great."
      ],
      "description": "Hey There!\nGive a moment of your thought to following questions.\nWant to automate your Home?\n\n\nWant to control your Home Electronics remotely?\n\n\nWant to build Android Apps for doing your simple tasks?\n\n\nWant to build your own JARVIS AI Assistant? That can do your biding for you just like in movies.\n\n\nAre you inspired by the cool technology used in the movies?\n\n\nDo you love the AI Assistant used in spy and superhero movies?\n\n\nIf your answer to all of these questions is a big \"YESSS!\", then this course is right for you and you are in the right place.\nAfter completion of this course, you will learn:\n\n\nLearn basics of Arduino\n\n\nHow to convert your Home into a Smart Home?\n\n\nLearn Basic to Intermediate level python.\n\n\nHow to build chat-bots?\n\n\nHow to build an AI Assistant?\n\n\nHow to transform your Computer into JARVIS?\n\n\nHow to make the Computer do your work?\n\n\nHow to control your Home Electronics using JARVIS from your Computer?\n\n\nHow to build Android Apps easily without any complex programming logics?\n\n\nHow to build a Switch App to Control your Home from Smart Phone?\n\n\nHow to build a Voice Recognition App to Control your Home from Smart Phone?\n\n\n\n\nNote: If you have any questions related to the course then ask them away in the Discussion Section below.\n\n\nI believe that\n\"One must get knowledge whenever he is given the opportunity.\"\n\n\nKnowledge must be shared as It is our sacred duty.\n\n\nTill next time,\nHappy learning!",
      "target_audience": [
        "Anyone who has a little passion for Computer Science, Artificial Intelligence and Machine Learning.",
        "Anyone who wants to do project based learning for Arduino.",
        "Anyone who wants to learn more about using different components with Microcontrollers.",
        "Someone interested in Home Automation",
        "Developers working on Internet of Things Projects",
        "Python programmers who want to build home automation projects with the Arduino",
        "Beginners to electronics",
        "Electronics Hobbyists and Prototypers"
      ]
    },
    {
      "title": "An Entry-Level Course on Analog and Digital Microelectronics",
      "url": "https://www.udemy.com/course/a-crash-course-on-analog-and-digital-microelectronics/",
      "bio": "A Crash Course on Basics of CMOS Microelectronics: Design, Simulation, and Layout",
      "objectives": [
        "This course offers an insightful learning of fundamentals of analog and digital circuits in 15 sessions each around 40-45 minutes",
        "The course delivers the course material efficiently in 15 sessions each taking 40 -45 minutes",
        "The course intends to provide a bridge from academics to a job in semiconductor industry by sharing important design knowledge from analysis to layout.",
        "At the end of the course, the students will develop basic but necessary knowledge of CMOS digital and analog circuits."
      ],
      "course_content": {},
      "requirements": [
        "The requirement for this course is the knowledge of basic network/circuit theory and elementary semiconductor physics"
      ],
      "description": "With the new investments in semiconductors and chips by both the government and private sector, there will be an incredible need for design engineers who can participate in this vibrant job market. This course will address this real demand by offering an insightful understanding of the basics of analog and digital electronics. The course is comprised of sixteen sessions, each taking around 40-45 minutes. It covers the design, simulation, and layout of metal-oxide-semiconductor (MOS) transistors, basic analog amplifiers, and basic digital logic circuits in an efficient presentation setting. The course provides a step-by-step analysis and design of (1) widely used analog amplifiers including common-source, common-gate, source follower, and cascode stages as well as an analysis of gain and input/output impedances, and (2) logic circuits including CMOS inverters, NAND, NOR, and general Boolean functions as well as introduction to performance parameters such as noise margin and propagation delay. For each circuit being covered, the design tips and the layout will be provided. All the concepts will be clarified by many examples. The course is intended for junior- and senior-level students in the field of electrical and computer engineering, (2) engineers in other engineering fields who are interested in gaining knowledge of microelectronics, (3) graduate students from different engineering fields who are interested in learning about semiconductor devices and circuits.",
      "target_audience": [
        "This course is intended for junior- and senior-level undergraduate students, electrical engineers who consider pursuing a job in a growing semiconductor market, and graduate-level engineering students who are interested in a  hands-on knowledge of microelectronic circuits"
      ]
    },
    {
      "title": "The Complete Course of Synology NAS",
      "url": "https://www.udemy.com/course/synology-course/",
      "bio": "Learn how to manage & store data in a Professional way from Scratch. Become an expert in Synology NAS, from A to Z!",
      "objectives": [
        "At the end of the course, you will fully master Synology NAS, by gaining skills and knowledge to efficiently manage data, enhance security from scratch",
        "You will be able to conduct Synology NAS projects step by step, understanding all the logic and ending with advanced practical examples and complete projects",
        "You will gain a foundational understanding of Synology NAS systems",
        "You will learn how to perform the initial setup and configuration of a Synology NAS",
        "You will develop skills in file and folder management on a Synology NAS",
        "You will acquire knowledge in managing applications on a Synology NAS",
        "You will understand data protection and security practices for a Synology NAS",
        "You will learn how to set up remote access and enable collaboration features",
        "You will explore advanced features and functionalities of Synology NAS",
        "You will develop troubleshooting and support skills for maintaining a Synology NAS system",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the hands-on projects",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to Synology NAS": [
          "Course Opener",
          "Overview of Synology NAS devices",
          "Benefits and use cases of NAS",
          "Quiz",
          "Understanding the Synology DiskStation Manager (DSM) interface"
        ],
        "Initial Setup and Configuration": [
          "Unboxing and Hardware Setup",
          "NAS installation and setup",
          "Creating and managing user accounts",
          "Connecting your Synology NAS Remotely"
        ],
        "File and Folder Management": [
          "Understanding file sharing protocols (SMB, AFP, NFS)",
          "Data backup and restore options",
          "Hyper Backup"
        ],
        "Application Management": [
          "Installing and managing applications from the Synology Package Center",
          "Exploring essential applications (File Station, Photo Station, Video Station)",
          "Synology Photos",
          "Configuring multimedia streaming services",
          "Introduction to third party applications and integrations"
        ],
        "Data Protection and Security": [
          "RAID configurations and storage management",
          "Synology high availability",
          "Backup synology to another synology",
          "Synology Snapshot",
          "Synology security features"
        ],
        "Remote Access and Collaboration": [
          "Remote access methods (QuickConnect, DDNS, VPN)",
          "File synchronization and cloud services",
          "Collaboration tools (Synology Drive, Office, Calendar)",
          "Mobile Apps-android and apple"
        ],
        "Advanced NAS Features": [
          "Virtual Machine Management",
          "Surveillance Station setup and management",
          "Resource monitoring and optimization"
        ],
        "Troubleshooting and Support": [
          "Common issues",
          "Diagnostic tools and logs",
          "Synology support resources, Community forums & knowledge base",
          "Course Closure"
        ]
      },
      "requirements": [
        "Having basic notions of networks and operating system can help, but the course starts from scratch",
        "Download and install the needed environment to follow the practical sessions (if you don't know how, don't worry, it's very easy, and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become a Synology NAS professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that, System administrators, Data management professionals, small businesses... can learn Synology NAS from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working as Data management professionals, we have realized that nowadays mastering Synology NAS for efficient data storage and security is very necessary in all fields. Knowing how to use this tool can give you many job opportunities and many economic benefits, especially in the world of Data security and management.\nThe big problem has always been the complexity to perfectly understand Synology NAS requires, since its absolute mastery is not easy. In this course we try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step, detailed and hands-on examples of every concept.\nWith 6 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master Synology NAS. The course will teach you how improve data management, security, accessibility, and collaboration, while also offering a cost-effective and customizable solution for various storage needs in a practical way, from scratch, and step by step.\nWe will start with the setup of the needed work environment on your computer, regardless of your operating system and computer. Then, we'll cover a wide variety of topics, including:\nIntroduction to Synology NAS and course dynamics\nUnderstanding Synology NAS systems\nPerforming initial setup and configuration of a Synology NAS\nDevelop skills in file and folder management on a Synology NAS\nManaging applications on a Synology NAS\nData protection and security practices for a Synology NAS\nSetting up remote access and enable collaboration features\nAdvanced features and functionalities of Synology NAS\nTroubleshooting and support skills for maintaining a Synology NAS system\nMastery and application of absolutely ALL the functionalities of Synology NAS\nPractical exercises, complete projects and much more!\nIn other words, what we want is to contribute our grain of sand and teach you all those things that we would have liked to know in our beginnings and that nobody explained to us. In this way, you can learn to build and manage a wide variety of projects and make versatile and complete use of Synology NAS. And if that were not enough, you will get lifetime access to any class and we will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning Synology NAS has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used Synology NAS before",
        "System Administrators, Professionals in Data Management, Storage Admins, Remote Workers and Collaborators, Students in IT and Computer Science and small business owners who want to learn a new way to manage data and enhance security",
        "Intermediate or advanced Synology NAS users who want to improve their skills even more!"
      ]
    },
    {
      "title": "Laptop Screen & Keyboard Repair: Learn, Transform & Earn",
      "url": "https://www.udemy.com/course/laptop-screen-repair/",
      "bio": "Master laptop screen & keyboard replacement: Step-by-step repairs and resale for beginners technicians & entrepreneurs",
      "objectives": [
        "\"Learn professional laptop screen & keyboard replacement using affordable tools. Transform broken laptops into profitable opportunities with proven steps.\"",
        "\"Master quick screen diagnosis, safe disassembly, and perfect installation. Gain confidence fixing common laptop screen issues like a certified pro.\"",
        "\"Discover how to source broken laptops, maximize repair value, and sell successfully. Build a profitable side business using our tested $50 to $300 system.\"",
        "\"Develop in-demand repair skills using industry-standard techniques. Join our community of successful laptop repair technicians worldwide.\""
      ],
      "course_content": {
        "Your Laptop Flip Adventure Begins! ?": [
          "Level 1: Your Path to Repair Profits Revealed ?",
          "First Victory: The Complete Laptop Flip Guide",
          "Power-Up: Essential Tools for Your Repair Quest ?️",
          "Secret Intel: Mastering Laptop Model Detection ?"
        ],
        "Screen Repair Mastery Quest ?": [
          "Level Up: The First Boss Battle Awaits",
          "Victory Dance: Perfect Panel Power-Up ?",
          "Final Form: Complete Your Screen Quest"
        ],
        "Keyboard Revival Challenge ?": [
          "Stealth Mission: Keyboard Liberation Protocol ?️",
          "Power Restored: Perfect Typing Magic"
        ],
        "Ultimate Profit Maximization ?": [
          "Legendary Polish: The Pro Cleaning Quest",
          "Photo Master: Capture & Pro Edit for Maximum Value ?",
          "Next Quest: Power Up Your Repair Arsenal! ?"
        ]
      },
      "requirements": [
        "No technical experience needed - perfect for complete beginners!",
        "Basic tools (we'll show you what to get - under $5 total)",
        "Ability to follow step-by-step video instructions"
      ],
      "description": "Laptop Screen & Keyboard Repair: Professional Skills Guide\n\n\nMaster laptop screen repair and keyboard replacement using proven techniques. Join students worldwide learning professional repair skills with simple tools.\n\n\nCourse Overview:\n- Step-by-Step Learning: Complete laptop repair curriculum\n- Beginner-Friendly: No prior experience needed\n- Practical Skills: Real-world repair techniques\n- Business Guidance: Learn resale strategies\n\n\nWhy This Course?\n1. Hands-on Training: Real laptop screen repair demonstrations\n2. Complete Coverage: Both screen AND keyboard replacement\n3. Professional Methods: Industry-standard techniques\n4. Active Community: Learn alongside fellow students\n\n\nWhat You'll Learn:\n1. Professional Assessment\n- Screen diagnosis techniques\n- Keyboard evaluation methods\n- Cost estimation strategies\n\n\n2. Repair Skills\n- Screen replacement mastery\n- Keyboard repair techniques\n- Quality testing methods\n\n\n3. Business Knowledge\n- Used laptop evaluation\n- Market research methods\n- Resale strategies\n\n\nLearning Methods:\n- Detailed Video Tutorials\n- Real Hardware Projects\n- Interactive Challenges\n- Game-Style Progress System\n\n\nIdeal For:\n- Complete beginners in laptop repair\n- Entrepreneurs exploring tech skills\n- DIY technology enthusiasts\n- Digital nomads seeking skills\n\n\nStudent Stories:\n- *\"The screen repair tutorials were clear and practical\"* - Sarah M.\n- *\"Learned professional laptop repair from scratch\"* - Mike T.\n- *\"These skills opened new opportunities\"* - David K.\n\n\nCourse Resources:\n1. Equipment Guide\n- Essential repair tools\n- Affordable options\n- Quality recommendations\n\n\n2. Business Resources\n- Pricing strategies\n- Photography techniques\n- Marketing methods\n\n\n3. Technical Guides\n- Detailed instructions\n- Problem-solving methods\n- Safety protocols\n\n\nBenefits:\n- Full lifetime access\n- Continuous updates\n- Active Q&A community\n- 30-day guarantee\n\n\n**Start your laptop repair journey today! Join our active community of repair technicians.**\n\n\n*Enroll now for immediate access to all materials!*",
      "target_audience": [
        "A Complete Beginner Looking to Learn Laptop Repair",
        "An Aspiring Entrepreneur Seeking Income Opportunities",
        "A Young Person Building Practical Skills for Traveling",
        "A DIY Enthusiast Ready to Save Money"
      ]
    },
    {
      "title": "Computer Architecture Instruction Set Architecture Course",
      "url": "https://www.udemy.com/course/computer-architecture-instruction-set-architecture-course/",
      "bio": "Computer Architecture Instruction Set Architecture Course Instruction Set Architecture Course",
      "objectives": [
        "Computer Architecture Course",
        "Instruction Set Architecture",
        "Computer Architecture Concepts",
        "Computer Architecture Tutorial"
      ],
      "course_content": {},
      "requirements": [
        "basic knowledge of Computer",
        "basic knowledge of Internet"
      ],
      "description": "Computer Architecture & Instruction Set Architecture Course\nComputer Architecture & Instruction Set Architecture Course understanding of Computer Architecture and Instruction Set Architecture (ISA) the foundation of modern computing. You'll explore key architectural concepts, including:\nCore Architecture & Memory Systems: Understanding Uniform Memory Access (UMA), integer and floating-point processing, and memory addressing.\nInstruction Set Execution: How the CPU interprets and executes instructions, including data transfer between memory and processor cores.\nArchitectural Design & Diagrams: In-depth analysis of processor architectures with visual diagrams explaining key design principles.\nLinux Source Code & Memory Mapping: Understanding how compiled code interacts with processor architecture, including mapped address spaces and execution flow.\nOS & Hardware Interactions: How different operating systems optimize processor architectures, manage memory, and handle security features like SSL encryption.\nProcessor Components & Power Management: Detailed breakdown of CPU architecture, including logic engines, memory controllers, system buses, and GPU interactions.\nWhy Take This Course?\nBy the end of this course, you'll have a deep understanding of how processors work, how instructions are executed, and how system architecture influences performance. Whether you're an aspiring computer engineer, software developer, or IT professional, this course equips you with essential knowledge to understand\nModern Computing Systems\nModern computing systems are the backbone of today’s digital world, powering everything from smartphones to cloud data centers. These systems integrate advanced processor architectures, memory hierarchies, and high-speed communication protocols to ensure efficiency and performance. With multi-core processors, parallel computing, and AI acceleration, modern computers can handle vast amounts of data and complex computations. Cloud computing, virtualization, and cybersecurity further enhance scalability and security. Innovations in quantum computing, edge computing, and IoT continue to shape the future. Understanding these systems is essential for engineers, developers, and IT professionals looking to build and optimize cutting-edge technology solutions.",
      "target_audience": [
        "Computer Architecture",
        "Computer Architecture Learns",
        "Computer Architecture Students",
        "Computer Engineering Students",
        "Computer Science Students"
      ]
    },
    {
      "title": "REWA iPhone Chip Level Motherboard Repair Course",
      "url": "https://www.udemy.com/course/rewa-iphone-motherboard-repair-course-iphone6demo/",
      "bio": "Base on iPhone 6 Demo",
      "objectives": [
        "Why your iPhone cannot be turned on and how to fix boot issues.",
        "Why your iPhone displays abnormally and how to fix that.",
        "Why your iPhone comes with an unresponsive touchscreen and how to fix it.",
        "Why charging issues are so common and how to fix them.",
        "How can we fix camera and Wi-Fi issues.",
        "How audio signals are transmitted and how to fix related issues.",
        "How to use different types of tools and materials for motherboard repair."
      ],
      "course_content": {
        "Basic knowledge": [
          "Repair Tools",
          "The Capability Sections Of Smartphones"
        ],
        "Circuit Overview": [
          "iPhone 6 Boot Circuit",
          "iPhone 6 Backlight Circuit",
          "iPhone 6 Touch Circuit",
          "iPhone 6 Display Circuit",
          "How iPhone 6 Front Camera Working",
          "How iPhone 6 Rear Camera Working",
          "iPhone 6 WiFi Circuit",
          "The principle of iPhone 6 Audio Processing Circuit",
          "iPhone 6 Charging Circuit",
          "iPhone 6 USB Circuit",
          "iPhone 6 Headset Control Circuit",
          "How iPhone 6 Microphone And Receiver Work",
          "How iPhone 6 Loudspeaker Works"
        ],
        "Handwork Course": [
          "iPhone 6 WiFi Module Replacing",
          "Desoldering&soldering of iPhone 6 backlight IC",
          "Desoldering&soldering of RC-components",
          "iPhone 6s Power Chip Soldering & Desoldering",
          "iPhone 6 NAND Flash Chip Soldering & Desoldering"
        ],
        "Repair Cases": [
          "iPhone 6 Won't Turn On Repair",
          "iPhone 6 Won't Turn On Caused by Water Damage issue",
          "iPhone 6 No Backlight Repair",
          "iPhone 6 Plus Unresponsive Touchscreen",
          "iPhone 6 Turn On With No Display Repair",
          "iPhone 6 Camera Not Working Repair",
          "iPhone 6 WiFi Not Working issue",
          "iPhone 6 Not Charging Repair",
          "iPhone 6 Primary Microphone Not Working Repair",
          "iPhone 6 Loudspeaker Not Working Repair"
        ]
      },
      "requirements": [
        "Experience with iPhone screen/battery exchange would be helpful.",
        "Some knowledge about soldering or electronic would be helpful."
      ],
      "description": "Course Overview\nWhen repairing iPhone logic boards, we identify the issue first, find out why it occurred next, and figure out how to fix it in the end. This is a general process adopted by repair technicians around the world. Based on this commonly adopted repair process, we’ve compiled a comprehensive curriculum to guide students through practical troubleshooting methods and resources. Get trained with this structured and repeatable process and you can avoid unnecessary mistakes and complete accurate repairs.\n\n\nA. Circuit Overview Course\nUnderstand the workflow of different circuits: how each circuit works; how different circuits cooperate and what they can achieve.\nFigure out which circuit might be responsible for the issue you are dealing with.\nMaster general troubleshooting process of each circuit.\n\n\nB. Handwork Course\nLearn chip-level handwork skills of iPhone series.\nDiscover what the right tools are for successful repair work.\n\n\nC. Demo Cases Course\nLearn how to troubleshoot a real-life repair case.\nFollow the video guidance to repair step by step.\n\n\nRecommended: After learning a specific circuit, jump to the related repair case for a deeper understanding.",
      "target_audience": [
        "Everyone who is interested in iPhone repair"
      ]
    },
    {
      "title": "SD Card Interfacing with Arduino",
      "url": "https://www.udemy.com/course/sd-card-interfacing-with-arduino/",
      "bio": "You will enter SD Card World, Write Anything and save it to your SD Card without having to worry about size",
      "objectives": [
        "know how SD Card function and learn about it’s internal structure",
        "Write code for SD Card",
        "Embed code in the design",
        "Program Arduino like a champ",
        "Understand the principles of programming Arduino",
        "Connect your Arduino to SD Card and control it.",
        "Understand basic principles in electronics design.",
        "know how SD Card function and learn about its internal structure.",
        "get familiar with interfacing SD Card to Arduino.",
        "know how to store files to SD Card.",
        "know how to read and write data to SD Card.",
        "Write a C program to create files, store data, read data and manipulate data.",
        "Write a C program to open files and edit data stored on SD Card."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Planning Data Storage with SD Card and Arduino",
          "Who We Are?",
          "Course Overview and Initial Setup",
          "Summary",
          "Reading Meterial"
        ],
        "Hardware and Software Requirements": [
          "Section Intro",
          "Hardware and Software Requirements",
          "Setting Up Your Development Environment",
          "Summary",
          "Reading Meterial"
        ],
        "SD Card Module": [
          "Section intro",
          "SD Card Module",
          "Where to buy SD Card Module",
          "Pin Wiring for SD Card Module",
          "Quiz on SD Card Module Basics",
          "Preparing SD Card",
          "How to Format SD Card",
          "SD library’s commands",
          "Testing SD Card Module",
          "Quiz on Preparing and Testing the SD Card Module",
          "Working with the SD Card Module",
          "Summary",
          "Reading Meterial"
        ],
        "Circuit Wiring": [
          "Circuit Design and Wiring"
        ],
        "Code for SD Card": [
          "Code for Testing SD Card",
          "Reading and Writing to and From SD Card Module",
          "SD Library",
          "Card Info: Get info about your SD card.",
          "Datalogger: Log data from three analog sensors to an SD card.",
          "Dump File: Read a file from the SD card.",
          "Files: Create and destroy an SD card file.",
          "List Files: Print out the files in a directory on a SD card.",
          "Read Write: Read and write data to and from an SD card.",
          "Implementing and Testing Code for SD Card"
        ],
        "Downloading and Installing Software": [
          "Section Intro",
          "Download and Install Arduino Software",
          "Download and Install Circuit Design and Wiring Software",
          "Setting Up Software for Arduino and Circuit Design",
          "Summary",
          "Reading Meterial"
        ],
        "Practice Test": [
          "SD Card Module with Arduino"
        ],
        "Course Project": [
          "Course Project",
          "Arduino-Based SD Card Logger Implementation Review"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Download and Install Circuit Design Software",
        "Download and Install Arduino IDE",
        "Download The course Material in PDF and Print them if possible",
        "Students must have the knowledge of basic electronics"
      ],
      "description": "Welcome to this course.\nSD Card is a device used to store information on almost all devices.\nDo you want to Go to the next level in Storing data without a size limit?\nWe are announcing our brand-new course SD Card Interfacing with Arduino\nHD Content that will take you in an informative journey to not only master the coding of SD Card Interfacing with Arduino, but also learn the very basics of SD Card internal structure, how it works, it’s pinout, its wiring diagram, and how your code can be used to read and write data easily using Arduino.\nWhy you should take this course?\nYou will use this course to interface SD card with Arduino.\nYou will learn how to write anything on the SD card and save it without worrying about size.\nThe course walks you through the process of understanding different types of cards and how to work with each one.\nIt is meant for beginners and intermediate users, too.\n\n\nIf you take this course now, you can count on these three results in just a few hours!\nHello and welcome to this new course in which you are going to learn SD Card interfacing with Arduino.\nThis is Educational Engineering Team and in this course, you will learn what is SD Card and how you can interface it to the Arduino board.\nSD Card module and what are the pins that you need to connect in order for that SD Card module to work, we will also talk about how you can easily prepare your SD card to be interfaced with Arduino then we are going to make a quick test for our SD Card to make sure that it works correctly.\nAfter that, we are going to discuss how to write your very own code that can write files to as the card and read data from the SD card.\nThen you will code A practical example on how to read and write to the SD card.\nAt the end of this course, you will be able to start writing data to the SD card and start reading data from the SD card and manipulate this data with your very own Arduino code.\n\n\n>>> Continues Updates <<<",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "Anyone interested in Interfacing SD Card with Arduino",
        "Arduino Geeks",
        "Engineering students",
        "Technology hobbyists",
        "Computer programmers"
      ]
    },
    {
      "title": "Online Fire Alarm System Training Course on GST Brand",
      "url": "https://www.udemy.com/course/fire-alarm-training-course-on-gst-make-fire-alarm-system/",
      "bio": "Learn how to program addressable fire alarm system.",
      "objectives": [
        "How to program GST make fire alarm system ?",
        "How to program GST200 fire alarm panel ?",
        "Practical Step by Step Procedures to configure addressable fire alarm system ?",
        "Write condition and effect equation for programmed field devices"
      ],
      "course_content": {
        "Introduction to GST make Fire alarm panel and Field devices": [
          "Introduction to GST 200 panel",
          "Optional Components of GST 200 Panel",
          "Introduction to Smoke detector",
          "Introduction to Manual call point",
          "Introduction to Sounder strobe",
          "Introduction to Sounder base",
          "About GST200N Panel",
          "About GST200N Panel LED",
          "About GST200N Panel Keypad"
        ],
        "Programming of FACP and field devices": [
          "How to program address of devices via GST programming tool P-9910B ?",
          "Overview of GST def3.0 defining tool software",
          "How to add a FACP in GST3.0 def software tool ?",
          "How to learn devices from GST200N Panel ?",
          "How to configure devices in GST3.0 software tool ?",
          "How to check learned devices from GST200N Panel ?",
          "What is C&E Equation ?",
          "How to create logical equation in GST3.0 def software tool ?",
          "How to check created logical equation on GST200N Panel ?",
          "How to check fire by activating a single smoke detector ?",
          "How to create & check a logical equation with delay ?",
          "How to check fire alarm by activating a smoke detector with sounder base ?",
          "How to check fault from flow switch module ?",
          "How to create & check a logical equation for flowswitch and sounder in GST200N ?",
          "How to create & check a fuzzy logic for two detectors activation ?",
          "How to back up & restore fire alarm database ?",
          "How to export history logs from GST200N panel ?",
          "How to export device list from GST200N panel ?",
          "How to disable and enable a device in GST200N panel ?",
          "How to factory reset a GST200N fire alarm panel ?"
        ]
      },
      "requirements": [
        "No Prior Experience Required."
      ],
      "description": "Hi there! My name is Nilesh & I’m a professional fire alarm engineer active since last 13 years in fire alarm industry. I’m here to help you learn online fire alarm system efficiently and comprehensively\nAfter completing this course, students will have a solid knowledge how to program addressable GST make fire alarm system.\nThe purpose of this online fire alarm training course is to cover basics to in depth knowledge of the GST make fire alarm system.\nBelow are the topics covered in this course:\nIntroduction to GST 200 panel\nOptional Components of GST 200 Panel\nIntroduction to Smoke detector\nIntroduction to Manual call point\nIntroduction to Sounder strobe\nIntroduction to Sounder base\nAddress Programming of field devices via programming tool\nOverview of GST def3.0 definning tool software\nHow to add FACP\nHow to learn loop devices on FACP\nDefine loop devices in GST def3.0 tool software\nWhat is C and E equation\nHow to create and download C and E equation on FACP\nTest fire alarm via MCP and Smoke detector\nHow to backup & restore fire alarm database\nHow to export device list from FACP\nHow to export history logs from FACP\nHow to enable and disable devices on FACP\nAnd Many More..\nAt the end of this course, student will be confident how to program GST make fire alarm system.\n\n\nLet's see you at my course.",
      "target_audience": [
        "To any one who is interested in learning about fire alarm system."
      ]
    },
    {
      "title": "Mastering the CAN Bus from Ground Up™",
      "url": "https://www.udemy.com/course/mastering-the-can-bus-from-ground-uptm/",
      "bio": "Navigating the Intricacies of the Controller Area Network(CAN)",
      "objectives": [
        "Understand the fundamentals of CAN Bus technology and its applications in industries.",
        "Acquire the ability to design and implement advanced CAN Bus solutions for real-world problems.",
        "Develop hands-on experience with STM32 microcontroller for CAN Bus communication.",
        "Master practical skills in configuring and troubleshooting CAN Bus systems."
      ],
      "course_content": {
        "Introduction to the Controller Area Network (CAN)": [
          "Introduction(Same as Description Video)",
          "Course Requirement",
          "The Evolution of the Controller Area Network (CAN)"
        ],
        "The Controller Area Network (CAN) Architecture": [
          "Overview of the CAN Bus Architecture",
          "The CAN System Layout",
          "The CAN High and CAN Low Lines",
          "The Dominant and Recessive States",
          "Understanding the Inverted Logic of CAN",
          "Understanding Priority Arbitration in CAN",
          "The Layers of the CAN Protocol Stack",
          "The Data Link and Physical Layer"
        ],
        "The CAN Data Frame": [
          "Understanding the Identifier and RTR Bits",
          "The Identifier Extension",
          "Understanding Standard CAN and Extended CAN",
          "Exploring the other Bits in the Frame",
          "Understanding the CAN Bus Data Transmission"
        ],
        "The MCP2551 Transceiver": [
          "Overview of the MCP2551 CAN Transceiver"
        ],
        "The STM32 Basic Extended CAN Peripheral(bxCAN)": [
          "Overview of the bxCAN Peripheral",
          "More on the bxCAN",
          "The bxCAN Operating Modes",
          "Transmission and Reception Handling of bxCAN"
        ],
        "Setting Up the Development Environment": [
          "Downloading CubeIDE",
          "Installing CubeIDE",
          "Getting the Required Documentation",
          "Getting the Right Package",
          "Testing the Project Setup"
        ],
        "Developing Required Generic Drivers": [
          "Important information about this section",
          "Programming : Enabling the Floating Point Unit (FPU)",
          "Programming : Developing a UART Driver - Analyzing the Documentation",
          "Programming : Developing a UART Driver - Listing out the steps",
          "Programming : Developing a UART Driver - Implementing the Init. function",
          "Programming : Developing a UART Driver - Implementing the Write function",
          "Programming : Developing a UART Driver - Testing the Driver",
          "Programming : Developing the System Timebase - Analyzing the Documentation",
          "Programming : Developing the System Timebase - Implementing the Init. function",
          "Programming : Developing the System Timebase - The rest of the functions",
          "Programming : Developing the System Timebase - Testing the Timebase",
          "Programming : BSP : Listing the out the Required Functions",
          "Programming : Writing the LED Driver",
          "Programming : Writing the PushButton Driver",
          "Programming : Testing the Board Support Package",
          "Programming : Analyzing the Documentation",
          "Programming : Listing out the steps for developing the ADC Driver",
          "Programming : Writing the ADC Initialization function",
          "Programming : Writing the ADC Read function"
        ],
        "Developing the Bare-Metal CAN Driver": [
          "Source Code",
          "Programming: Getting the Required Documentations",
          "Programming: Analyzing the Datasheet for Information on the CAN Controllers",
          "Programming: Developing the CAN GPIO Initialization Function",
          "Programming: Developing the CAN Parameters Config. Function",
          "Proramming: Developing the CAN Start Function",
          "Programming: Declaring the TX and RX Header Information Structure",
          "Programming Developing the CAN TX Message Function",
          "Programming Developing the CAN RX Message Function",
          "Programming: Debugging the Code"
        ],
        "Configuring the CAN Filters": [
          "Understanding the Filtering Process",
          "Working with the Identifier Mask Mode",
          "Working with the Identifier List Mode",
          "Programming: Listing Out the Steps for the Filter Configuration Function",
          "Programming: Configuring the Filter Parameters(Pt.1)",
          "Programming: Configuring the Filter Parameters(Pt.2)"
        ],
        "Developing CAN Applications": [
          "Programming: Updating the Porject for the STM32F446 Microcontroller",
          "Programming: Implementing the RX Interrupt Request Handler",
          "Programming: Implementing the CAN Loopback Mode Application",
          "Programming: Implementing the CAN Normal Mode Application-Transmitter",
          "Programming: Implementing the CAN Normal Mode Application-Receiver"
        ]
      },
      "requirements": [
        "At least 2 NUCLEO-F446RE development boards",
        "At least 2 MCP2551 CAN Transceivers"
      ],
      "description": "Are you ready to stand out in the rapidly evolving field of embedded systems? \"Mastering the CAN Bus from Ground Up\" is more than just a course – it's your pathway to becoming an indispensable expert in a technology that's pivotal in modern automotive and industrial communication networks.\n\n\nWhy This Course?\nThe CAN Bus system is at the heart of efficient, reliable communication in complex machines. With the increasing demand for sophisticated automotive and industrial systems, proficiency in CAN Bus technology has become a highly sought-after skill.\nOur course is tailored to provide you with an all-encompassing knowledge, from the basic principles to advanced applications, ensuring you are industry-ready.\n\n\nWhy \"Mastering the CAN Bus from Ground Up\"?\nIn a world where technology is advancing at lightning speed, proficiency in CAN Bus is not just an asset; it's a necessity. This course is meticulously designed to transform you into a sought-after professional, ready to tackle the challenges and seize the opportunities in a variety of industries.\nGain In-Demand Skills: The CAN Bus system is pivotal in modern technology, and expertise in this field is highly sought after. This course prepares you to meet and exceed industry demands.\nHands-On Learning Experience: We believe in learning by doing. Our course offers immersive hands-on labs using the STM32 microcontroller, bridging the gap between theory and real-world application.\nLearn from the Best: Our instructors are seasoned experts, bringing their extensive knowledge and industry insights directly to you.\nFlexible Online Access: Learn at your own pace, on your own schedule, with our user-friendly online platform.",
      "target_audience": [
        "Embedded Systems Developers: Individuals aiming to specialize in CAN Bus technology for developing sophisticated control systems.",
        "Automotive Industry Professionals: Those working in automotive design and manufacturing who need to understand the communication backbone of modern vehicles.",
        "Industrial Automation Engineers: Engineers focusing on improving communication in automated and manufacturing processes."
      ]
    },
    {
      "title": "hands-on fpga project design from scratch using verilog",
      "url": "https://www.udemy.com/course/hands-on-fpga-project-design-from-scratch-using-verilog/",
      "bio": "practical system verilog fpga project design from scratch",
      "objectives": [
        "The student will use knowledge of verilog to design an actual hands-on project using verilog.",
        "The student will also learn how to translate design speicfication for actual fpga verilog project example how to allocate input / output ports",
        "The student will learn how to break down complex designs into modules and sub modules before initial designs",
        "The student will learn the initial steps required for every FPGA development, including allocating designing setting up modules and breaking down sub modules."
      ],
      "course_content": {},
      "requirements": [
        "basic syntax of verilog , system verilog or VHDL but not compulsory"
      ],
      "description": "In this course, I will guide you through designing an actual project on FPGA using system verilog. I will introduce you to the free software i use for analysis , synthesis, RTL simulation and verification.\nWe start by learning how to translate design specification which will enable you to select Input output ports. Then  you will learn how to break down the design into modules and how to further break down the modules into sub modules.\nI will be using Logism, a free software to explain the physical view of the design while we use quartus software for the actual design. Both logism and quartus are all free available software for download.\nAt the end of the course, you will get an hands-on assignment that will further strengthen your knowledge of FPGA project designs. we will also test the final design and see how they operate in real life. simulation will be carried out on both logism and quartus.\nTo make the course more interactive our design pick is a 5 - hand poker player chip, i will introduce the game design and model, and all steps and stages involved in the game before we put heads together to deliberate on the specification . Then we continue from scratch till we get a working poker player chip.",
      "target_audience": [
        "verilog , fpga, hardware developers and engineers"
      ]
    },
    {
      "title": "2017 - Computer Build a Customized PC Computer from Scratch",
      "url": "https://www.udemy.com/course/build-a-customized-pc-from-scratch-in-under-2-hour-guranteed/",
      "bio": "Learn how to build the most complex or complicated PC from gound zero. Pick and choose your own hardware that suit you",
      "objectives": [
        "build a fully customized pc from ground zero",
        "fully understand which component and what the purposes is",
        "able to keep all wire in a neat way"
      ],
      "course_content": {},
      "requirements": [
        "get ready your shopping list and toolbox"
      ],
      "description": "Have you wanted a powerful computer. Welcome to Customize PC 2015.\nDIY is the best solution. Why not just buy off the shelf package from Dell, Acer, HP or others?Off the shelf is good for people that do not need customisation.Off the shelf PC also come with a heavy price tag. And most of the time you want some of the component in Dell and other component in Acer, you can pick and match.\nDIY is your solution, first of all if you are getting similar specification with the branded PC, DIY will be must cheaper comparing apple to apple.\nDIY offer you the following benefitYou get to choose the casing you want, do you want a big or small casing, how about USB port do you want it to be at the front or at the back or even both. How about DVD Drive do you want 1 or 2 DVD drive. Having 2 DVD drive mean you can copy DVD disk easily. Most of the branded PC has only 1 DVD Drive and adding 1 more Drive mean extra money and it is much more than you buy a DVD drive at your local hardware shop or even Amazon.Choose the motherboard you wantGraphic card if you are a gamer or do you want just a normal (good) graphic card but spend the budget away for more RAM or getting a SSD harddisk\nwith DIY anything is possible, it is only your imagination\nIn this course I show you how to build and customized a PC from scratch.\nAnd if any component is faulty along the years, you will know how to replace it. No need to bring down to your hardware guy as you are the one that assemble it and you can replace it yourself",
      "target_audience": [
        "if you ever want to learn how to build a pc",
        "keen interest is a must",
        "you should not be taking if you are always worrying about messing up"
      ]
    },
    {
      "title": "Master the Art of Fun:Create Your Own Arduino Buzz Wire Game",
      "url": "https://www.udemy.com/course/arduino-buzz-wire-game-arduino/",
      "bio": "Revive a classic challenge and elevate your Arduino skills. Navigate the maze, avoid the buzz, and dive into this world",
      "objectives": [
        "Make your own Arduino Buzz Wire Game",
        "Learn Working Principle of Buzz Wire Game",
        "Interface Buzzer and Led with Arduino",
        "Interface different type of electronic elements with Arduino.",
        "Challenge your friends or show off your own Buzz Wire Game"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Arduino",
        "A Will to apply, not just watch"
      ],
      "description": "Why Buzz Wire Game?\nRemember the adrenaline rush when trying to maneuver the loop without touching the wire, setting off the buzzer? Now, recreate this nostalgic game with a modern twist using Arduino! This crash course promises a blend of fun and learning, teaching you how to use the Arduino microcontroller platform to breathe life into the classic Buzz Wire Game.\nCourse Highlights:\nFoundations First: Begin with an introduction to Arduino's hardware and software aspects, ensuring a robust understanding.\nInteractive Learning: Hands-on sessions will guide you in crafting a circuit that lights up an LED when touched, adding an element of excitement with sound effects.\nCoding Basics: Dive deep into the programming language of Arduino based on C++, enhancing your coding skills.\nWhat You’ll Achieve:\nBy the end of this enlightening journey, you’ll have a fully-functional Buzz Wire Game, ready to test the skills of your friends and family. Alongside, gain insights into electronics, electric circuits, and programming, all while having a blast!\nWhy Enroll?\nDual Benefits: Not only will you create an engaging game, but you'll also solidify your understanding of Arduino, electronics, and coding.\nFor Everyone: Whether you're new to coding or an Arduino enthusiast, this course caters to all levels.\nFun Learning: Who said learning can't be fun? Dive into the world of gaming while acquiring valuable skills.\nBonuses:\nResources Galore: Access downloadable resources complementing the course content.\nExpert Guidance: Benefit from the premium support of our experienced instructors.\nLifetime Access: Enjoy unlimited access to course updates and content.\nChallenge Accepted?\nAre you ready to embark on this electrifying journey? Dive into the world of Arduino, enhance your skills, and introduce a dash of fun into your learning.\nEnroll today and let the games begin!\nWhat You Will Learn:\nUnderstand the basics of Arduino hardware and software.\nDevelop a fully-functional Buzz Wire Game.\nLearn to create circuits that interact with sensors and LEDs.\nGain proficiency in Arduino programming with C++.\nEnhance problem-solving skills through hands-on projects.\nWho Is This Course For:\nBeginners interested in electronics and Arduino.\nHobbyists looking for fun and educational projects.\nSTEM students seeking practical Arduino applications.\nEducators looking for interactive teaching tools.\nRequirements:\nNo prior experience with Arduino is needed.\nBasic understanding of electronics is helpful but not required.\nA computer with internet access.\nArduino board and basic electronic components (detailed list provided in the course).\n\n\nAbout the Instructor:\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the microcontroller industry, with over 13 Years of Experience in teaching and practical projects. We provide in-depth, step-by-step blueprints for both simple and complex topics, enabling immediate application of learned concepts to real-world projects.\nEducational Engineering Team has been in the programming and microcontroller business since 2007, involved in numerous projects and understanding the needs of students and educators alike. We are passionate about sharing our collective knowledge, having taught over 250k-THOUSAND students and counting as of 2018.\nCurrently, we offer more than 100+ courses on Udemy.\nEducator and Author of \"Educational Engineering.\"\nAshraf is an educator, mechatronics engineer, electronics and programming hobbyist, and maker. He creates online video courses on the EduEng YouTube Channel (with more than 4 million views and 20k+ subscribers) and is the author of four microcontroller books.\nAs the Chief Educational Engineer at Educational Engineering Team, Ashraf's mission is to explore new trends and technology, helping to educate the world and make it a better place.\nEducational Engineering offers courses and bootcamps, articles, lessons, and online support for electronics hobbyists, programming enthusiasts, microcontroller aficionados, STEM students, and teachers. The team also works as freelance engineers, providing guidance and consulting for students’ graduation projects and career kick-starts.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, he has developed a simple yet comprehensive teaching style that is appreciated by students worldwide.\nAshraf’s passion for microcontrollers and programming, particularly in Arduino, PIC microcontroller, and Raspberry Pi, drives his personal development and work through Educational Engineering. His online courses have helped over 250,000 people globally build better careers in the industry.\nEducational Engineering Team Offers Courses On:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Arduino Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning How Buzz Wire Game works",
        "Anyone Interested in Learning How to Make Buzz Wire Game Using Arduino",
        "Anyone Interested in Learning New Things about Arduino"
      ]
    },
    {
      "title": "Assembly Language using ATMEL AVR Microcontroller",
      "url": "https://www.udemy.com/course/assembly-language-using-atmel-avr-microcontroller/",
      "bio": "Learn Assembly Language Programming with ATMEL AVR Microcontroller. Become Electronics Consultant - Embedded & Firmware.",
      "objectives": [
        "Define Assembly Language and it's role in programming Microcontrollers",
        "Explain the functionality of ATMEL AVR Microcontroller",
        "Write Assembly Language code using ATMEL AVR Microcontroller",
        "Acquire skills to become an Embedded Software Engineer specializing in Microcontrollers"
      ],
      "course_content": {
        "1 - Assembly Language using ATMEL AVR Microcontroller": [
          "1 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "2 - Assembly Language using ATMEL AVR Microcontroller": [
          "2 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "3 - Assembly Language using ATMEL AVR Microcontroller": [
          "3 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "4 - Assembly Language using ATMEL AVR Microcontroller": [
          "4 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "5 - Assembly Language using ATMEL AVR Microcontroller": [
          "5 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "6 - Assembly Language using ATMEL AVR Microcontroller": [
          "6 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "7 - Assembly Language using ATMEL AVR Microcontroller": [
          "7 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "8 - Assembly Language using ATMEL AVR Microcontroller": [
          "8 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "9 - Assembly Language using ATMEL AVR Microcontroller": [
          "9 - Assembly Language using ATMEL AVR Microcontroller"
        ],
        "10 - Assembly Language using ATMEL AVR Microcontroller": [
          "10 - Assembly Language using ATMEL AVR Microcontroller"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Assembly Language using ATMEL AVR Microcontroller course by Uplatz.\n\n\nThe Atmel AVR instruction set is essentially the machine language for the Atmel AVR, a modified Harvard architecture 8-bit RISC single chip microcontroller which was developed by Atmel in 1996. The AVR was one of the first microcontroller families to use on-chip flash memory for program storage. AVRs are popular in the electronics and embedded engineering industry. The number of devices used might not be as much as the ARMs or the 8051s because the architecture is just limited to the AVRs. If you go to 8051 or ARM, in most cases you can even change the manufacturer of the chip and reuse most of the code that you have already developed.\nThe AVR Enhanced RISC microcontroller supports powerful and efficient addressing modes for access to the Program memory (Flash) and Data memory (SRAM, Register file, I/O Memory, and Extended I/O Memory).\n\n\nMicrocontrollers are nothing but chips (ICs) that are found everywhere for e.g. in microwaves ovens, new appliances, automobiles, televisions, etc. These microcontrollers control and sense the surrounding electronics and environment. For example, microcontrollers can provide output to a display, motor, LEDS, etc., sensing the environment, such as tilt using an accelerometer, light, angular velocity using a MEMS (Microelectromechanical System) gyroscope, sound, encoders for movement, temperature, and button or keyboard input.\nSpecifically, the AVR Atmega32 microcontroller is considered to be a computer on a chip. The microcontroller is able to execute a set of instructions in the form of a program. One example of the use of the analog to digital conversion would be for sensing the temperature. A component that converts temperature to a level of voltage called a thermistor to one of the Port A pins and the microcontroller will convert this voltage to a number from 0 to 255. The program that is written and stored into the microcontroller can use this temperature and respond in a specific way. If you have a thermistor against a boiling pot, the microcontroller can respond and provide an output to another pin that beeps, or flashes a light.\nOther features of this and other microcontrollers, other than the actual programming is the programming space (where the program is stored in the chip), memory, or space for data and variables that the program will use, and finally, there is a clock built into the chip that counts. The counting can be in many different speeds depending on the speed of the chip and the divisor that is selected for the speed. This is starting to get complicated, so I will back up. The counting can be in seconds, milliseconds, microseconds, or whatever is determined for the program and application selected.\n\n\nAn Assembly Language is a type of low-level programming language that is intended to communicate directly with a computer’s hardware. Unlike machine language, which consists of binary and hexadecimal characters, assembly languages are designed to be readable by humans. A low-level programming language is Assembly Language. It aids in the translation of programming language into machine code. An assembler is a program that converts assembly code into machine code that can be executed on a computer. Assembly language is used to decode instructions and pass them on to machine language for processing. It is mostly determined by the system's architecture, whether it be the operating system or the computer architecture.\nLow-level programming languages such as assembly language are a necessary bridge between the underlying hardware of a computer and the higher-level programming languages - such as Python or JavaScript - in which modern software programs are written.\n\n\nWhat is AVR microcontroller used for?\nIt contain on chip central processing unit (CPU), Read only memory (ROM), Random access memory (RAM), input/output unit, interrupts controller etc. Therefore a microcontroller is used for high speed signal processing operation inside an embedded system.\nKey Features include:\nCost\nSpeed\nPeripherals\nMnemonic processor instructions or data, as well as other statements or instructions, make up Assembly Language. It is created by compiling the source code of high-level languages such as C and C++. Assembly Language aids in the program's fine-tuning. Assembly language aids programmers in producing human-readable code that is almost identical to machine code. A low-level programming language is Assembly Language. It aids in the translation of programming language into machine code. An assembler is a program that converts assembly code into machine code that can be executed on a computer. Assembly language is used to decode instructions and pass them on to machine language for processing. It is mostly determined by the system's architecture, whether it be the operating system or the computer architecture.\n\n\nThis course on Assembly Language using Atmel AVR Microcontroller will begin with an ATMEL AVR Microcontroller experimentation utilizing all simulation tools. Anyone with a basic grasp of electronics can participate in this course and begin exploring with the Assembly Language using ATMEL AVR Microcontroller. Because all of the activities are done in simulation software, there is no need to buy any additional gear and the course content can help you understand the core concepts of applying Assembly Language code to Atmel AVR microcontroller. By the end of the course, you'll have a thorough understanding of the ATMEL AVR Microcontroller development board and how to utilize assembly language on it. You will practice Assembly Language using an ATMEL AVR Microcontroller to gain a fundamental understanding of the electronic systems involved in the set-up.",
      "target_audience": [
        "Hardware/Embedded Engineers",
        "Newbies and Beginners interested in Embedded/Electronics/Hardware/Firmware Engineering",
        "Microcontroller & Microprocessor Engineers",
        "Power Electronics Engineers",
        "Electronics Consultants - Embedded & Firmware",
        "Firmware Engineers",
        "Anyone aspiring for a career in Embedded Engineering",
        "Digital IC Verification Engineers",
        "Embedded Software Engineers",
        "Firmware Developers",
        "Software Engineers (Embedded Systems Devices and Microcontrollers)"
      ]
    },
    {
      "title": "Create a Facial Recognition Door Lock With Raspberry Pi",
      "url": "https://www.udemy.com/course/raspberry-pi-facial-recognition-door-lock-raspberry-pi/",
      "bio": "Learn how to use the camera module and OpenCV to detect and recognize faces and turn this into door unlock system",
      "objectives": [
        "With this course, you'll be able to create your very own facial recognition door lock with a Raspberry Pi!",
        "You'll learn how to set up the software and hardware, and how to use the facial recognition API to identify faces.",
        "Learn how to create a facial recognition door lock with Raspberry Pi!",
        "You will also learn how to set up the facial recognition system",
        "You will learn how to create a door lock that opens when it recognizes your face",
        "You will learn how to use the Raspberry Pi, Python, and OpenCV to create a secure facial recognition door lock."
      ],
      "course_content": {
        "Create a Facial Recognition Door Lock With Raspberry Pi": [
          "Introduction",
          "Designing a Facial Recognition Door Lock with Raspberry Pi"
        ],
        "Making Everything Ready": [
          "Setting Up the Required Files and Folders",
          "Setting Up Python Editor for Coding",
          "Understanding Key Concepts",
          "Introduction for Facial Recognition System"
        ],
        "Coding the Face Shots Script OpenCV": [
          "Coding the Face Shots Script OpenCV",
          "Face Shots Code",
          "Testing the Face Shot script",
          "Concepts in Facial Recognition Systems",
          "Concepts in Facial Recognition Systems"
        ],
        "Coding Training mode": [
          "Coding Training mode",
          "Training Model Code",
          "Testing Train Model Script",
          "Hardware Setup and Configuration for the Project"
        ],
        "Testing Face Recognition": [
          "Testing Face Recognition",
          "Coding and Testing"
        ],
        "Making and Testing Door Lock using Face Recognition": [
          "Making and Testing Door Lock using Face Recognition",
          "Face Recognition Door Lock Code",
          "Implementing and Testing a Door Lock Using Facial Recognition",
          "Implementing and Testing a Door Lock Using Facial Recognition"
        ],
        "Future Improvements": [
          "Future Improvements"
        ],
        "Resources": [
          "How to Access Raspberry Pi Remotly",
          "Setting Up and Accessing the Raspberry Pi Remotely",
          "Setting Up and Accessing the Raspberry Pi Remotely"
        ],
        "Practice Test": [
          "Raspberry Pi Facial Recognition Door Lock Essentials"
        ],
        "Who we are?": [
          "Who we are?"
        ]
      },
      "requirements": [
        "willingness to learn",
        "camera"
      ],
      "description": "Introduction:\nImagine you could walk into your home and the door automatically unlocks without having to fumble for your keys. You can with a facial recognition door lock! In this course, you'll learn how to create one with a Raspberry Pi. First, you'll need to install some software and set up your Pi. Next, you'll create a script that will capture images of your face and compare them to those stored in the lock's database.\nFacial-recognition technology is a fascinating field that involves different types of technologies used for face recognition, the applications of face-recognition technology, and the issues that need to be considered when using this technology.\nWhy you should take this course:\nLearn how to set up a facial recognition door lock with Raspberry Pi.\nDiscover the capabilities of facial recognition technology.\nUnderstand how to use the camera module and OpenCV to detect and recognize faces.\nLearn about the Raspberry Pi board and its capabilities.\nDevelop a secure and reliable system using both software and hardware.\nCourse Benefits:\nLearn about facial-recognition technology and how it works.\nGain hands-on experience with Raspberry Pi and OpenCV.\nCreate a practical, real-world project that enhances home security.\nDesigned for beginners with no previous experience in programming or electronics.\nCourse Outline:\nIntroduction to Facial Recognition Technology\nSetting Up Raspberry Pi\nInstalling and Configuring Software\nUsing Camera Module for Face Detection\nCreating and Training the Facial Recognition Model\nImplementing Door Unlock System\nTesting and Troubleshooting\nSecurity Considerations and Best Practices\nSign Up Now! and enhance your home security with a facial recognition door lock.\n\n\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is a leading team in the Microcontroller Industry, with over 13 years of experience in teaching and practical projects. We strive to share our hands-on experience in these courses, providing step-by-step blueprints on taming both simple and complex topics in easy-to-digest bite-sized videos.\nAshraf:\nEducator, Mechatronics engineer, electronics and programming hobbyist, and Maker.\nCreator of online video courses on the EduEng YouTube Channel with over 4 million views and 20k+ subscribers.\nAuthor of four Microcontroller books.\nFounder and Chief Educational Engineer at Educational Engineering Team.\nPassionate about exploring new trends and technology, and helping educate the world.\nOur online courses have helped over 250,000 people worldwide to improve their skills and careers in the industry.\nCall to Action: Join us and start your journey to creating a secure facial recognition door lock today! Enroll now and enhance your home security.\nFAQ:\nWhat is this course about?\nThis course covers the essential steps and knowledge needed to create a facial recognition door lock using Raspberry Pi.\nDo I need prior experience to take this course?\nNo prior experience is needed; this course is designed for beginners.\nWhat will I learn in this course?\nYou will learn about facial recognition technology, Raspberry Pi setup, and implementing a secure door lock system.",
      "target_audience": [
        "This course is designed for people with no experience in programming or electronics",
        "Developers",
        "Hobbyist",
        "Anyone who wants to make a security to them"
      ]
    },
    {
      "title": "ESP32 + Arduino Interfacing: A Step by Step Course",
      "url": "https://www.udemy.com/course/esp32-arduino-interfacing-connect-control-arduino-esp-esp32-esp8266/",
      "bio": "A Different IoT Power and Performance, Use ESP32 microcontroller to MAKE IoT projects to unleash your creativity",
      "objectives": [
        "Learn Why you should Interface Arduino and ESP32 in your Electronic Projects",
        "Learn How to connect Arduino Boards with ESP32 and make it Web enabled",
        "Learn how to interface Arduino with ESP32 with one wire only"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Programming"
      ],
      "description": "IoT is the next big thing in technology. It's not enough to simply create one project anymore, you have to create multiple projects. ESP32 microcontrollers are the next step in IoT development because they are powerful for IoT projects and can be used with Arduino, Raspberry Pi, or any other board.\nSo, if you are into IoT (Internet of Things), you might have heard of ESP32 Board with built-in WiFi. If not, do not worry.\nThis course will teach you everything in a step-by-step manner. You will learn what is ESP32 and how the ESP32 Arduino pair can be used in your IoT Projects.\nThe ESP32 board is a nifty little device that has enabled tinkerers to connect their projects to the internet at a very reasonable cost. It is one of the easiest methods of adding WiFi functionalities to your Arduino. Just to remind you, WiFi is only one of many communication protocols. There are many other ways of wirelessly communicating with an Arduino. However, WiFi is simple, everyone understands it, and it’s accessible.\nWhy you should take this course?\nLearn the ESP32 Microcontroller and Arduino\nLearn Microcontrollers with MicroPython\nUse the ESP32 to build Internet of Things projects from scratch\nLearn how to use the ESP32 microcontroller in order to unleash your creativity\nGet a step-by-step course that will teach you the basics of interfacing ESP32 with Arduino\nLearn how to build your own IoT projects using the ESP32\nThe course is designed for beginners, so no prior knowledge of IoT or electronics is needed. These are not just projects but are also learning modules that are meant to be used as a guide for creating your own projects and learning through experimentation and exploration.\nWhy should we interface the ESP32 Board with Arduino?\nToday we communicate with each other using mobile phones, which is a wireless communication device. It helps us to communicate with our friends at any place and at any time. How about sharing data to a machine from a distance wirelessly? It is possible by using this ESP32. The crux of the matter is accessibility. The current trends in the IoT sector ask for control over the internet. And WiFi is a leading facilitator of that feature.\nArduino Interfacing with ESP32 board will help increase the number of I/O points that you can use in your project plus you will get to use the power of Arduino Libraries and Support in creating a state of the art project then connect it to the internet via ESP Board.\nAt the end of this course, you can create Innovative IoT Projects. The only thing that you need to do is THINKING, WIRING & CODING.\nUser Testimonials and Social Proof\n\"This course provided me with the skills to create IoT projects that I never thought possible. Highly recommend!\" - John D.\n\"A great step-by-step guide that made learning ESP32 and Arduino interfacing easy and fun!\" - Emma W.\nAn Author Bio Showing Off Credentials\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nA Single Powerful CTA\nEnroll now and start your journey to mastering ESP32 + Arduino Interfacing today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nLearn the ESP32 Microcontroller and Arduino\nLearn Microcontrollers with MicroPython\nUse the ESP32 to build Internet of Things projects from scratch\nGet a step-by-step course that will teach you the basics of interfacing ESP32 with Arduino\nLearn how to build your own IoT projects using the ESP32\nWho Is This Course For\nAnyone interested in IoT projects\nBeginners with no prior experience in ESP32 or Arduino\nMakers and hobbyists wanting to expand their knowledge\nStudents and professionals looking to enhance their skills in IoT\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "Anyone interested in creating a web enabled electronic Project using Arduino",
        "Anyone interested in sending data from Arduino to the Web",
        "Anyone interested in connecting his project to the internet with a low budget solution",
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Embedded Systems Geeks",
        "Arduino Geeks",
        "IoT and embedded systems Geeks",
        "Arduino Geeks"
      ]
    },
    {
      "title": "Mastering IoT Weather Stations: Build with ESP32 & IoT",
      "url": "https://www.udemy.com/course/weather-proof-your-skillsan-esp32-based-iot-weather-station/",
      "bio": "Create Your Own Weather Station Using ESP32 and IoT Technology",
      "objectives": [
        "Introduction to IoT and the ESP32 microcontroller",
        "The hardware and software requirements for building a DIY weather station",
        "How to design the circuit for interfacing different sensors with the ESP32",
        "How to program the ESP32 microcontroller using the Arduino IDE",
        "How to interface different sensors such as temperature, humidity, pressure, and wind speed sensors with the ESP32",
        "How to collect data from sensors and display real-time weather data on an OLED display",
        "How to send data to cloud services for storage and analysis",
        "How to build a web-based dashboard to display weather data using a free cloud-based IoT platform",
        "How to use MATLAB to analyze and visualize the data collected from the weather station",
        "How to demonstrate the project and showcase the data collected from the weather station."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Preliminary Interview: IoT Weather Station Design Concepts",
          "hardware_requirements",
          "software_requirements",
          "circuit_design",
          "Understanding the Fundamentals of Hardware, Software, and Circuit Design",
          "coding 1",
          "Thingspeak Setup coding 2",
          "MATLAB coding 3",
          "Fundamentals of Coding and IoT Integration",
          "Coding 4",
          "Coding 5",
          "Coding 6",
          "project demonstration",
          "Advanced Coding Techniques and IoT Project Implementation",
          "Develop and Demonstrate an IoT Project",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "IoT Weather Station Essentials Practice Test",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Summary",
          "Reading Material",
          "System Demonstration: ESP32-Based Cloud-Connected Weather Station"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic programming knowledge in C or C++",
        "A computer with internet access",
        "An ESP32 development board",
        "Various sensors such as temperature, humidity, pressure, and wind speed sensors",
        "An OLED display",
        "Breadboard and jumper wires",
        "Arduino IDE and MATLAB software installed on your computer."
      ],
      "description": "\"Mastering IoT Weather Stations\" is your gateway to the exciting world of Internet of Things (IoT) technology. In this course, you will learn how to build a DIY weather station capable of collecting and displaying real-time weather data.\nCourse Highlights:\nESP32 Essentials:\nGain expertise in using the powerful ESP32 microcontroller, a versatile IoT device that can connect to the internet and interact with various sensors.\nSensor Integration:\nLearn how to interface temperature, humidity, pressure, and wind speed sensors with the ESP32.\nCloud Connectivity:\nDiscover how to send collected data to cloud services for storage and analysis.\nWeb-Based Dashboard:\nCreate a user-friendly web-based dashboard to display real-time weather information.\nWhat You Will Learn:\nIntroduction to IoT and ESP32 microcontrollers.\nNecessary hardware and software requirements.\nCircuit design and wiring for your weather station.\nCoding for data collection and transmission.\nSetting up a cloud-based platform for data storage and analysis.\nProject demonstration showcasing your weather station in action.\nWhy Take This Course:\nThis course is your opportunity to harness the power of IoT and ESP32 technology to build a fully functional weather station from scratch. Whether you're a beginner with no prior IoT or programming experience or someone with some background looking to create a weather station, this course caters to all skill levels.\nCourse Duration: Approximately 1 hour and 17 minutes.\nEnroll Today: Join us on this exciting journey into IoT and weather station creation. Enroll now to develop valuable skills and build your own weather station capable of collecting real-time weather data.\nStudent Testimonials:\n\"I've always been fascinated by weather stations, and this course allowed me to build my own. The step-by-step instructions were incredibly helpful.\" - Mark D.\n\"As a beginner in IoT, I found this course to be a fantastic introduction. The instructor's explanations were clear, and I can now proudly display my weather station!\" - Sarah K.\nWhat You Will Learn\nIntroduction to IoT and ESP32 microcontrollers.\nNecessary hardware and software requirements.\nCircuit design and wiring for your weather station.\nCoding for data collection and transmission.\nSetting up a cloud-based platform for data storage and analysis.\nProject demonstration showcasing your weather station in action.\nRequirements or Prerequisites\nBasic understanding of electronics and programming concepts.\nAccess to the required components (listed in the course) for building the project.\nA computer for programming the microcontroller and uploading data online.\nWho Is This Course For\nBeginners: With no prior IoT or programming experience.\nStudents: Studying electronics, computer science, or related fields.\nHobbyists: Interested in building their own weather station.\nProfessionals: Looking to enhance their skills in IoT and microcontroller applications.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Beginners who are new to IoT, electronics, and programming and want to learn how to build a DIY weather station using the ESP32 microcontroller and IoT technology.",
        "Hobbyists who are interested in building IoT projects and want to add a weather station to their project portfolio.",
        "Students who are studying electronics, computer science, or related fields and want to learn how to apply their knowledge to real-world projects.",
        "Professionals who are interested in expanding their skills and knowledge in IoT and building practical projects that can be applied in their work.",
        "Anyone who is interested in weather data and wants to learn how to collect and analyze weather data using a DIY weather station."
      ]
    },
    {
      "title": "Embedded Fun with RISC-V, Part 2: Embedded Applications",
      "url": "https://www.udemy.com/course/riscv-apps/",
      "bio": "Get your hands on a RISC-V microcontroller.",
      "objectives": [
        "How to design an embedded system of your own.",
        "The steps to take when you have an embedded system in mind.",
        "Tips and tricks in several steps of the design and implementation process.",
        "How to use a RISC-V microcontroller.",
        "How a RISC-V microcontroller compares to its ARM Cortex-M courterpart."
      ],
      "course_content": {},
      "requirements": [
        "Be comfortable with digital or analog electronic circuits.",
        "Have some basic experience with schematic diagrams.",
        "Be able to create embedded applications using either a microcontroller or an FPGA."
      ],
      "description": "Learn about the RISC-V Instruction Set Architecture by creating applications in an actual RISC-V microcontroller! See many applications developed on a RISC-V embedded microcontroller board. We've chosen an inexpensive board so you may follow along if you want.\nThis course is part of a hands-on curriculum where you'll get some basic experience on the design and development of embedded applications using a RISC-V core. So far, this curriculum contains the following courses:\nPart 1: The RISCV ISA. Where you'll learn about the RISC-V Instruction Set Architecture.\nPart 2: Embedded Applications. Where you'll learn how to create basic applications using the on-chip peripherals.\nAfter learning about the RISC-V ISA, it's time to talk about Embedded Applications using the awesome GD32V Dev Board by Seeed Studio. At $6.90 a piece, this is the cheapest microcontroller board I know. However, you're certainly not required to purchase anything. If you don't intend to acquire a board, you may successfully take the course by only watching the videos and written material.\n\n\nSince the purpose of this second course is to get you acquainted with a RISC-V microcontroller, we'll cover the following topics, and more:\n\n\nThe Development Platform\nThe GD32 Board, by Seeed Studio\nSegger Embedded Studio\nThe development process\nGPIO\nAnalog I/O\nReading analog input with an ADC\nCreating analog signals with a DAC\nTimers\nInput Capture\nOutput Compare\nGenerating periodic signals\nPulse Width Modulation\nSerial Communication\nSerial Peripheral Interface\nThe I2C interface\nAsynchronous serial communication (UART)\nUniversal Serial Bus (USB)\nInterrupts\nThe RISC-V interrupt model\nInterrupt-driven development process",
      "target_audience": [
        "Hobbyists who want to get their ideas in a professional board.",
        "Engineering students who want to create professional applications.",
        "Makers who have created custom applications in a development board, and want to take this expertise to the next level."
      ]
    },
    {
      "title": "Design Thinking Behind Assembly Language",
      "url": "https://www.udemy.com/course/design-thinking-behind-assembly-language/",
      "bio": "Deep dive into understanding what Assembly really is!",
      "objectives": [
        "Understand the CPU architecture of AVR microcontrollers",
        "Explore the design thinking behind the Assembly instructions for AVR microcontrollers",
        "Get familiar with some AVR Assembly instructions",
        "Write a simple Assembly code to turn on an LED"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Outline",
          "Introduction to Assembly"
        ],
        "Processor Architecture": [
          "Microcontroller Overview",
          "Processor Block Diagram",
          "Processor Registers",
          "ATmega328P Architecture",
          "Flash Program Memory",
          "Special Registers",
          "Working Registers",
          "Program Memory",
          "RAM"
        ],
        "Design of Assembly Instructions": [
          "Overview of Simplified Scenario",
          "Building Assembly Instructions",
          "Complete Design Flow"
        ],
        "Explanation of Selected Instructions": [
          "Overview",
          "INC - Increment",
          "DEC - Decrement",
          "COM - Complement",
          "MOV - Move",
          "LDI - Load Immediate",
          "ADD - Add without Carry",
          "AND - Logical AND Operation"
        ],
        "Sample Assembly Codes": [
          "Overview",
          "Turn on an LED",
          "Blink an LED",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic understanding on general-purpose programming and electronics"
      ],
      "description": "Assembly language stands as a fundamental tool in the arsenal of hardware designers. While there are numerous resources for mastering its usage, there is a gap in resources that delve into the underlying design principles that govern Assembly language. This course bridges that gap by showing you how Assembly language interfaces with hardware architecture.\nOur journey starts with a deep dive into the positioning of Assembly language within the paradigm of programming languages. We highlight its unique advantages, notably its ability in facilitating low-level hardware manipulations.\nSubsequently, attention turns towards understanding the architecture of an AVR processor. Specifically, we will be using the architecture of the ATmega328P microcontroller as it is a simple, widely used microcontroller that appears in Arduino Uno as well. Even though we are using AVR architecture in this course, the principles you learn are readily transferable to other processor architectures.\nArmed with insights into processor architectures, we will design machine codes to execute a small set of primitive instructions, like addition, subtraction and logical AND operation. This forms the core idea of this course, explaining how Assembly language serves as an interface for hardware programming.\nFinally, we will explore some Assembly instructions specific to the ATmega328P processor, illustrating the practical application of the concepts we explored.",
      "target_audience": [
        "Beginners to embedded system design",
        "Beginners to Assembly language"
      ]
    },
    {
      "title": "Learn Basics of Delta WPL Soft PLC Programming",
      "url": "https://www.udemy.com/course/learn-basics-of-delta-wpl-soft-plc-in-15-hours/",
      "bio": "Delta PLC Programming Using WPL Soft software",
      "objectives": [
        "To understand how a Programmable Logic Controller (PLC) works",
        "Pass a technical PLC interview",
        "Understand how to program a PLC",
        "Learn Ladder Logic Programming",
        "Industrial Automation",
        "WPL Soft programming interface"
      ],
      "course_content": {},
      "requirements": [
        "Basic Electrical Hardware Understanding",
        "PLC Software (Included in the Course)"
      ],
      "description": "This is a comprehensive course for learning the basic level programing of Delta PLC in WPL Soft software. You will learn the logic designing of WPL Soft from scratch in a short period. No hardware equipment will be required to follow the course you will just have to install WPL Soft software on you PC and you can do it. Fundamental programming of WPL Soft will be covered step by step through video lectures and assignments.\nCourse Outline:\n1- Introduction to the Course\n2- Basics of Relay Logic (How Relay Works)\n3- Introduction to Delta PLC\n· PLC Communication Protocols\n· Inputs, Outputs\n· PLC Wiring\n· Sink Source\n· NPN & PNP Sensors\n4- Download and Install WPL Software\n5- Basics of WPL Software\n· Creation of New Project\n· Selection of Device\n· Software Interface\n· Device Configuration\n· Tool Box of Software\n· Programming Blocks\n· Tag Creation\n6- Software communication with Simulator/PLC\n· Simulator Setup\n· Load Program in Emulator\n· Monitor the Program Online\n· Ethernet Communication\n· Load the Program to PLC\n7- Basic Parameters\n· Normally Open Contact\n· Normally Close Contact\n· Output Coil\n· Interlocking of Motors\n8- Memories Used in WPL Software\n9- Branches and Rungs\n10- Digital and Ladder Logic\n· Basics of Digital Logic Design\n· Series AND Operation\n· Parallel OR Operation\n· Truth Tables\n· Digital Logic to Ladder Logic Conversion\n· Assignment 1\n11- Latching\n· Latch and Unlatch an Output\n· Set and Reset an Output\n12- Timers\n· On Delay Timer\no Enable of Timer\no Specifying the Duration of Time\n· Resetting a Timer\n· Off-Delay Timer\n· Retentive On-Delay Timer\n· Assignment 2\n13- Counters\n· Up Counter\no Resetting a Counter\n· Down Counter\n· Up-Down-Counters\n· Assignment 3\n14- Extended Instructions\n· Clock Cycle of PLC\n· Rising Edge\n· Falling Edge\n· Positive Edge Trigger\n· Negative Edge Trigger\n· Assignment 4\n15- Comparator operations\n· Equal (=)\n· Less Than (>)\n· Greater Than (<)\n· Less Than or Equal (>=)\n· Greater Than or Equal (<=)\n16- MOVE Command\n· Moving Operands\n· Moving Constants\n17- Arithmetic Operations\n· Addition\n· Subtraction\n· Multiplication\n· Division\n· Assignment 5\n18- Basics of HMI\n19- Assignments\n· Two Way Traffic Signals Control\n· Color Mixing Scheme\n· Chemical Processing Unit\n_______________________________________________________________________________________________________________________________________\nall about wpl soft, delta plc programming, how to create new project in wpl soft software, how to use math operations in wpl soft, how to add subroutine in wpl soft, how to use comparators in wpl soft, how to use timers in wpl soft, how to use counters in wpl soft, delta hmi programming,  how to build an hmi in wpl soft,\nelectrical plc training, freelance plc programmer, how to learn plc programming, learn plc programming, learning plc programming, plc application, plc based control system, plc class, plc classes, online plc, computer plc, controlled equipment, plc controller, training plc, course plc, full form plc, industry plc, interface plc, manufacturing plc, network plc, online courses plc, operation plc, programing course, plc programing courses, plc programing training, plc programmable logic controller, plc programmer training, plc programmers, plc programming classes, plc programming companies, plc programming course, plc programming courses, plc programming language, plc programming online course, plc programming school, plc programming service, plc systems, plc training courses, plc training courses online, plc-programs, plcs for dummies, program logic control training, program plc, program plcs, programing plcs, programmable controller application, programmable logic controller applications, programmable logic controller history, programmable logic controller training, what is a programmable logic controller, what is plc control, what is programmable logic controllers,",
      "target_audience": [
        "Anyone interested in learning how an industrial process works automatically",
        "Production, Maintenance & Electrical Technicians",
        "Electrical, Electronics, Mechatronics and Telecom Engineers"
      ]
    },
    {
      "title": "Universal Microcontroller Programming with a Next-Gen IDE",
      "url": "https://www.udemy.com/course/platformio-cross-platform-embedded-development-environment/",
      "bio": "Unlock Efficiency in Embedded Systems Development",
      "objectives": [
        "Learn how to program Arduino, Raspberry Pi, ESP, PIC and other microcontrollers using one IDE without having to switch from one app to another",
        "Learn how to save Time, Money and Efforts by using an All in one IDE that has a lot of features",
        "Learn the best practices when Dealing with new projects in embedded systems",
        "Learn to use a powerful integrated development environment helping users rapidly build, test, and debug embedded applications.",
        "Save hours of coding and debugging",
        "Learn how to program the microcontroller with this easy to use IDE and this course",
        "You'll learn how to navigate through the menus and options that are available",
        "Learn to build Cross-platform embedded apps built with a modern IDE",
        "You will learn step by step how to program a microcontroller using this IDE"
      ],
      "course_content": {},
      "requirements": [
        "You need a PC or Laptop",
        "You need to know the basic programming language",
        "Local Download (Mac / Linux / Windows)"
      ],
      "description": "Universal Microcontroller Programming with a Next-Gen IDE\nAre you tired of using multiple software for different microcontrollers? Say goodbye to the hassle, and welcome a unified solution! In this course, you'll discover a revolutionary Integrated Development Environment (IDE) that empowers you to program a wide range of microcontrollers, including Arduino, ESP, Raspberry Pi, Atmel, STM, PIC, and more, all in one place.\nWhy Enroll in this Course?\nStreamline Embedded Projects: Learn to navigate a comprehensive IDE that simplifies microcontroller programming, making your embedded team more efficient and productive.\nCutting-Edge IDE Framework: Dive into a feature-rich, cross-platform IDE that enhances productivity and fosters team collaboration.\nModern UI Toolkit: Explore a lightweight and highly customizable UI toolkit for crafting sophisticated, data-intensive, and platform-independent graphical interfaces.\nTrusted Package Registry: Utilize a robust enterprise-grade storage solution, designed for convenient package management with built-in access control.\nEmpowering Technology: Leverage modern technology to revamp core components of embedded infrastructure from the ground up.\nFor Whom is this Course?\nSemiconductor Industry Professionals: Deliver a flexible development ecosystem that enhances productivity and user experience.\nHardware Manufacturers: Support your partners, customers, and employees with developer-first tooling that accelerates product development.\nCloud Software Providers: Remove the complexities of endpoint device development, reducing barriers for IoT solutions.\nIDE Providers: Expand your customer base by entering the diverse embedded systems market.\nWhat You'll Learn:\nSetting Up the IDE: Download and configure the IDE for your first project.\nProgramming Microcontrollers: Master programming for various microcontroller boards.\nLED Example: Build and program an LED example project.\nArduino Programming: Develop Arduino projects within this versatile environment.\nNavigating the IDE: Learn to navigate menus and options available for each microcontroller.\nUnlock the potential to program microcontrollers efficiently and create reliable applications. Enroll in this all-in-one course today!\nCourse Image Description: A dynamic and visually appealing image showcasing a computer screen with the next-gen IDE open, displaying code and a diagram. The scene should also feature various microcontroller boards such as Arduino, ESP, and Raspberry Pi, arranged neatly with connecting wires and sensors. The image should convey modern technology, efficiency, and versatility.\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is a leading team in the Microcontroller Industry, with over 13 years of experience in teaching and practical projects. We strive to share our hands-on experience in these courses, providing step-by-step blueprints on taming both simple and complex topics in easy-to-digest bite-sized videos.\nAshraf:\nEducator, Mechatronics engineer, electronics and programming hobbyist, and Maker.\nCreator of online video courses on the EduEng YouTube Channel with over 4 million views and 20k+ subscribers.\nAuthor of four Microcontroller books.\nFounder and Chief Educational Engineer at Educational Engineering Team.\nPassionate about exploring new trends and technology, and helping educate the world.\nOur online courses have helped over 250,000 people worldwide to improve their skills and careers in the industry.\nCall to Action: Join us and start mastering universal microcontroller programming with a next-gen IDE today! Enroll now and revolutionize your embedded systems development process.\nFAQ:\nWhat is the next-gen IDE?\nIt is a comprehensive, cross-platform development environment designed to simplify microcontroller programming and enhance productivity.\nDo I need prior experience to take this course?\nNo prior experience with the IDE is needed; this course is designed for beginners.\nWhat will I learn in this course?\nYou will learn how to use the next-gen IDE to program various microcontrollers efficiently and effectively.",
      "target_audience": [
        "This course is perfect for anyone who wants to learn how to program their own microcontrollers and build projects on their own.",
        "Anyone who wants to learn how to program any microcontroller using IDE",
        "This is for non pro and pro who wants to develop their programming any microcontroller with all in one IDE"
      ]
    },
    {
      "title": "Lenze Plc Programming(Like Codesys) -Industrial Automation",
      "url": "https://www.udemy.com/course/lenze-plc-programming-basics-all-in-one/",
      "bio": "Learn Lenze Plc Programming from scratch and Industrial Automation & Codesys Basics within one course.",
      "objectives": [
        "Lenze Plc Programming Basics",
        "Lenze Softwares",
        "Plc Programming Languages LD,ST,FBD etc.",
        "Lenze Plcs Basics",
        "Plc Designer Software",
        "VisiwinNet Software"
      ],
      "course_content": {
        "Introduction": [
          "How to Download Softwares",
          "System Overview",
          "3200C Cpu Overview",
          "Status Leds",
          "P500 HMI Overview",
          "New Project + Simulator + Variable + Watch Table and Small Programming Example",
          "Global Variable List",
          "Data Types",
          "Go Online to Cpu + Download - Theorotical"
        ],
        "I/O Modules Theorotically - Hardware Details": [
          "Digital Inputs",
          "Digital Outputs",
          "Analog Input/Output",
          "High Speed Counter",
          "Encoder",
          "Temperature Module",
          "Communications(EtherCAT, Profibus , Profinet etc.)",
          "Serial Communication (RS232-422-485)"
        ],
        "Industrial Automation Basics - Equipments": [
          "Power Supply",
          "Relay",
          "Potentiometer",
          "LoadCell",
          "Encoder & Resolver and Difference Between Them"
        ],
        "Control Circuits Basics with EKTS Simulator": [
          "Let's Download Software !",
          "First Application - Control 3 Phase Motor with Start Button",
          "Latching - Unlatching Application of 3 Phase Motor Control",
          "TON Timer Usage in Control Circuit",
          "TOF Timer Usage in Control Circuit",
          "Application Example -- Motor 1 Run than 5 Sec Later Motor2 Run",
          "Star & Delta Connection Application"
        ],
        "FACTORY I/O Software + Control I/O": [
          "FACTORY I/O Basics and First Application",
          "Filling Tank Application - Application",
          "How to Create Our Own Scene ?"
        ],
        "Programming Basics - Ladder Diagram": [
          "Bit Logic",
          "How to Add Input/Output Module , Define I/Os and usages",
          "Rising Edge - Falling Edge",
          "Timers",
          "Counters",
          "Math + Comparison Instructions",
          "Analog Input + Move",
          "Tasks - Main Task + User Tasks",
          "Jump - Label Usage",
          "Structs",
          "Visualization",
          "Encoder"
        ],
        "Programming Basics - ST Language": [
          "IF Loop",
          "CASE Loop",
          "Timer",
          "Counter",
          "Data Conversion + Small Application"
        ],
        "Other Programming Languages (FBD,CFC..)": [
          "CFC (Continuos Function Chart)",
          "FBD (Function Block Diagram)"
        ],
        "Function Block & Function": [
          "How To Create a FB and I/Os",
          "How to Create a Function and Usage"
        ],
        "Advanced Programming": [
          "How to Add Profibus Device to Project",
          "How to Add Drive and Commissioning - Monitoring"
        ]
      },
      "requirements": [
        "This course does not require any prior knowledge."
      ],
      "description": "Dear All ;\nFirst of all , please keep following and learning always from my courses.These course created to teach powerful lenze plcs and programming of it to you effectively.\nWith this course you will learn to lenze plc programming with plc designer software.\nAlso ,  you are going to learn other lenze softwares for HMIs, Drives etc.\nFor visualization, you are going to see a visualization examples which embedded to plc designer.\nThis software is really similar to CodeSys , so while you are learning lenze plc programming , you are going to learn codesys ,too.\nIn this course, which we started from the basic and  you will be able to write code as professionally PLC programming from zero to advanced.\nAs an automation engineer, this course, where I transfer the experiences we have received from the machines, will give you great experiences.\nI will answer your questions that you do not understand at any time and will be ready to assist you in the programs and projects that you are working on it.\nAlso you are going to learn codesys basics because of lenze plc software is so similar with codesys.\nAlso you are going to learn Industrial Automation Basics.\nWith this course , you are all going to learn ;\n- Lenze plc programming basics\n- Use of Plc Designer software\n- Lenze plc command structures\n- Lenze plc programming techniques\n- Lenze HMI basics\n- Lenze Drives basics\n- Advanced programming skills\nAnd much more than these..\nLenze plc is important for me because it is a very powerful and useful plc.\nThis course is going to bring to you powerful informations about plc programming.\nNever stop following and learning from this course.\nBest regards\nMustafa",
      "target_audience": [
        "Anyone who is wants to learn PLC programming and wants to improve himself/herself in industrial automation and plcs.",
        "Anyone who interesting in with Lenze"
      ]
    },
    {
      "title": "555 Timer IC Hands-On Circuit Design & Simulation in LTSpice",
      "url": "https://www.udemy.com/course/555-timer-ic-hands-on-circuit-design-simulation-in-ltspice-analog-vlsi/",
      "bio": "Integrated Circuits (Analog Electronics): Learn, Design and Simulate Different Modes of 555 Timer IC on LtSpice Software",
      "objectives": [
        "Pin Diagram of the 555 Timer IC",
        "Block Diagram Analysis of 555 Timer IC",
        "Datasheet of 555 Timer IC",
        "Working of 555 Timer IC",
        "Monostable Mode Analysis of 555 Timer IC",
        "Numericals and Simulation of Monostable Mode in 555 Timer IC",
        "Astable Mode Analysis of 555 Timer IC",
        "Numericals and Simulation of Astable Mode in 555 Timer IC",
        "Square Wave Generation using 555 Timer IC",
        "Generating 11ms delay using 555 Timer IC"
      ],
      "course_content": {},
      "requirements": [
        "A moderate understanding of English even though the author tries to explain everything as simply as possible.",
        "A computer in order to simulate the circuits that we are going to build together.",
        "A basic understanding of mathematics.",
        "Basics of Circuit Theory (KVL, KCL, OHM's Lwa, etc)",
        "Students should have strong command on Analog Electronics (BJTS, Op-Amps, Flip-Flops) orelse you can look forward to enroll in previous courses"
      ],
      "description": "Unlock the potential of the versatile 555 Timer IC with this comprehensive course designed for enthusiasts and engineers alike. Dive deep into the inner workings, pin configuration, and core functionalities of the 555 Timer IC, a crucial component in analog electronics. Guided by LTSpice simulation software, you’ll gain hands-on experience designing, testing, and understanding circuits in both monostable and astable modes.\nIn this course, you'll start by exploring the pin diagram of the 555 Timer IC, followed by a deep dive into its block diagram. Each functional block of the 555 IC is decoded step-by-step to build a solid foundation in its internal structure. You’ll learn to read and understand datasheets to gain insight into the working principles of this iconic integrated circuit.\nMaster the operation of the 555 Timer IC in Monostable Mode, where you’ll analyze and simulate essential numericals using LTSpice to observe pulse duration and signal behavior in real time. Transitioning into Astable Mode, you'll discover the 555 Timer IC’s oscillating capabilities, essential for generating square waves in countless applications. Both modes are accompanied by practical examples, detailed numericals, and simulations to reinforce your understanding.\nCourse Highlights:\nPin Diagram of the 555 Timer IC: Dive into the pin configuration of the 555 Timer IC, understanding the purpose of each pin and how they connect to form functional circuits. By grasping these fundamentals, you'll be prepared to configure the 555 IC for various modes and applications.\nBlock Diagram Analysis: Decode the internal block diagram of the 555 Timer IC, examining each functional section like the flip-flops, comparators, and discharge transistors. Learn how each block contributes to the IC’s overall functionality in both monostable and astable modes.\nDatasheet Navigation: Gain valuable insights into reading and interpreting the datasheet of the 555 Timer IC. Understand key specifications, typical applications, and the operational characteristics that define this widely used IC in analog electronics.\nWorking of 555 Timer IC: Explore the core working principles of the 555 Timer IC, including timing cycles, oscillation generation, and pulse-width modulation. This section builds a solid understanding of how the IC operates, forming the basis for practical circuit applications.\nMonostable Mode Analysis: Learn how to configure the 555 Timer IC in monostable mode, where it acts as a single-shot pulse generator. This section includes step-by-step numericals and LTSpice simulations to illustrate pulse width calculations and signal behavior.\nAstable Mode Analysis: Master the astable mode setup of the 555 Timer IC, enabling continuous oscillation useful in creating square wave generators. Detailed numericals and LTSpice simulations help you understand oscillation frequency, duty cycle, and practical circuit uses.\nBy the end of this course, you’ll confidently design and simulate 555 Timer circuits in LTSpice, empowering you with skills applicable to real-world analog circuit design.\nEnroll now to become proficient in 555 Timer IC design and simulation with LTSpice!",
      "target_audience": [
        "Electronic Engineers",
        "Electrical Engineers",
        "Instrumentation Engineers",
        "Biomedical Engineers",
        "Integrated Circuits",
        "Anyone who wants to 555 Timer IC",
        "Anyone who wants to learn LTspice Software"
      ]
    },
    {
      "title": "PIC Microcontroller EEPROM: A Step By Step Practical Course",
      "url": "https://www.udemy.com/course/eeprom-pic-microcontroller-eeprom-program-eeprom-rom-memory-pic/",
      "bio": "You will enter Microcontroller Advance EEPROM Memory World, and together we will make YOU a Professional.",
      "objectives": [
        "Move to the next level in Programming PIC Microcontroller",
        "Make your Codes more Professional by Learning advance EEPROM Techniques",
        "Program EEPROM using Microcontroller",
        "Learn how to use different types of EEPROM in PIC"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Who We Are?",
          "Who we are",
          "Exploring Non-Volatile Memory Concepts in Embedded Systems",
          "Summary",
          "Reading Material"
        ],
        "Different Type of Memories in PIC Microcontroller": [
          "Section Intro",
          "Different Type of Memories in PIC Microcontroller",
          "Summary",
          "Reading Material"
        ],
        "Special Function Register": [
          "Section Intro",
          "EEPROM Special Function Register",
          "EECON1 and EECON2 Registers",
          "Quiz",
          "Exploring EEPROM in PIC Microcontrollers – Concepts and Applications",
          "Summary",
          "Reading Material"
        ],
        "Reading/Writing Data to/from EEPROM Memory": [
          "Section Intro",
          "Reading Data from EEPROM Memory",
          "Writing Data to EEPROM Memory",
          "Summary",
          "Reading Material"
        ],
        "EEPROM Read and Write Functions": [
          "Section Intro",
          "EEPROM Read and Write Functions",
          "Summary",
          "Reading Material"
        ],
        "Software Requirements": [
          "Section Intro",
          "Download And Install Proteus Software Free",
          "Download and Install MikroC Pro",
          "Summary",
          "Reading Material"
        ],
        "Practical Example": [
          "Section Intro",
          "Coding EEPROM Write and Read Example",
          "The Code",
          "Practical Circuit Assembly and working mechanism explained",
          "Edited Code",
          "Circuit Design",
          "Summary",
          "Reading Material"
        ],
        "Resources": [
          "EEPROM Library",
          "PIC16F877A Datasheet"
        ],
        "Practice Test": [
          "Practice Test on PIC Microcontroller Memory and EEPROM Operations"
        ],
        "Course Project": [
          "Course Project",
          "Demonstrating EEPROM Read/Write Operations with PIC Microcontrollers"
        ]
      },
      "requirements": [
        "Basic Knowledge in PIC Microcontroller"
      ],
      "description": ">>> As you know PIC Microcontroller is a Professional electronic device that is easy-to-use in both hardware and software. It has so many potentials in it, that it's really wired how people are just using it for basic stuff using traditional and basics techniques. <<<\n\n\nHave you ever wondered how data for new passwords, set values for temperature are stored inside PIC Microcontroller memory when they are entered by an operator/user, and how this data is kept even when the power is lost??\nThis course will show you how this is done, It's the magic of EEPROM\nYou will enter Microcontroller Advance EEPROM Memory World, and together we will make YOU a Professional.\n\n\nWhy you should take this course?\nLearn how to design, program, and debug Microcontrollers with an EEPROM\nLearn about Microcontroller architectures, registers, addressing modes, data transfer instructions, assembly language programming\nLearn how to design embedded systems with learning systems - learn about breadboard design for circuits\nLearn how to use debuggers to find hardware and software errors. You will enter Microcontroller Advance EEPROM Memory World, and together we will make YOU a Professional.\n\n\nWelcome to this course.\nThis course is dedicated to moving you to the next level, teaching you professional and advanced Memory handling techniques.\nBe professional, be creative and be innovative using PIC Microcontroller EEPROM to store important data.\nThis course is designed to introduce PIC Microcontroller EEPROM Advance programming techniques to get you started on building complex multi-functional projects as soon as possible.\nEEPROM make it possible to save important data in a specific memory location. An EEPROM is basically a type of memory that you can use to store data even that won't be lost even if the power is off, for sensitive, high priority data.\nUnleash Your Inner Master With this Course\nPIC Microcontroller Advanced Programming Techniques\nWhat is EEPROM?\nEEPROM in PIC\nEECON Register EEPROM Registers\nEEPROMPractical Examples\nContents and Overview This course is designed for anyone interested in learning advanced PIC Microcontroller Programming Techniques. No experience is required, and all you need is PIC Microcontroller and several low-cost components.",
      "target_audience": [
        "Anyone looking to Master EEPROM using PIC Microcontroller",
        "Anyone with a curiosity for making electronics",
        "People with no experience in electronics",
        "People with an intermediate knowledge of electronics"
      ]
    },
    {
      "title": "Raspberry Pi, Python, and Internet of Things (IoT) Project",
      "url": "https://www.udemy.com/course/raspberry-pi-python-and-internet-of-things-iot-project/",
      "bio": "Building 'Autonomous vehicles' and 'Home Monitoring', Internet of Things(IoT) projects using Raspberry Pi and Python",
      "objectives": [
        "The basic principles of installing and manipulating Raspberry Pi",
        "Understand Python programs and run Raspberry Pi",
        "Complete our autonomous driving car and home monitoring projects."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Raspberry Pi Bootcamp": [
          "What is the Raspberry Pi?",
          "Installing Linux",
          "Using Remote Terminal",
          "Glance look at Raspbian",
          "Raspberry Pi GPIO"
        ],
        "Python Bootcamp": [
          "Getting started with Python",
          "Data, data type",
          "Flow Control",
          "Functions and libraries",
          "Control GPIO"
        ],
        "Autonomous vehicles Project": [
          "introduction of autonomous driving car",
          "Configuring the circuit",
          "Distance measurement with ultrasonic sensor",
          "Controlling motors",
          "Completing the car"
        ],
        "Home Monitoring' project": [
          "Introduction of home monitoring",
          "Flask Web Server",
          "Controlling the remote car",
          "Video streaming",
          "Remote monitoring"
        ]
      },
      "requirements": [
        "NO requirement!. It is for beginners who are new to Raspberry Pi and Python."
      ],
      "description": "Building 'Autonomous vehicles' and 'Home Monitoring', Internet of Things(IoT) projects using Raspberry Pi and Python\n\n\n'Autonomous vehicle' and 'home monitoring' Internet of Things (IoT) project production using Raspberry Pi and Python\n'Autonomous vehicles that avoid obstacles by itself',\n'A home monitoring system that moves around in the house'.\nThe popularity of the Internet of Things (IoT) has increased the number of these products and services.\nRaspberry Pie is a device that makes it easy and simple to make an IoT project.\nHere you can use a good programming language called Python to complete the project we want.\n\n\nIn this Course, you will learn the basics of raspberry pie and Python\nWe will practice creating a simple but essential autonomous vehicle and a remote home monitoring project.\n\n\n'Autonomous vehicle' and 'home monitoring' Internet of Things (IoT) project production using Raspberry Pi and Python\n\n\nA self-driving car that recognizes obstacles and avoids them, and a home monitoring system that looks around the house from outside. Now, it has become a story that is not lowly around us. In particular, with the recent craze of the Internet of Things (IoT), various services that were previously unimaginable with small equipment and cost are becoming possible. The Raspberry Pi is a device that allows you to create IoT projects easily and simply. Here, we can complete the project we want by using a wonderful programming language called Python. In this lecture, you will learn the basics of Raspberry Pi and Python, and practice creating a simple but essential autonomous vehicle and remote home monitoring project. Materials and program sources used in the lectures can be obtained from the Cree Apple site, a knowledge learning center operated by instructors.",
      "target_audience": [
        "If you want to understand the basic principles of the program",
        "If you want to use Raspberry Pi",
        "If you want to learn Python programs",
        "Those who want to make practical use examples of Internet of Things(IoT)",
        "If you want to base yourself on becoming a programmer"
      ]
    },
    {
      "title": "STM32F3 Bare-Metal Peripheral Drivers Development",
      "url": "https://www.udemy.com/course/stm32f3-bare-metal-peripheral-drivers-programming/",
      "bio": "No Libraries used, Professional CMSIS Standard, ARM Cortex, ADC,UART,TIMERS, GPIO,SPI,I2C etc.",
      "objectives": [
        "Write firmware using only bare-metal embedded-c",
        "Understand the Cortex-M Architecture",
        "Write Bare-Metal ADC Drivers for the STM32F3 Microcontroller",
        "Write Bare-Metal TIMER Drivers for the STM32F3 Microcontroller",
        "Write Bare-Metal UART Drivers for the STM32F3 Microcontroller",
        "Write Bare-Metal INTERRUPT Drivers for the STM32F3 Microcontroller",
        "Write Bare-Metal GPIO Drivers for the STM32F3 Microcontroller",
        "Write Bare-Metal SPI Drivers for the STM32F3 Microcontroller",
        "Build every single line of code from scratch by writing to the microcontroller’s memory space directly.",
        "Use No third party libraries or header files",
        "Understand and write every single line of code yourself- no Copy/Paste",
        "Use the debugger effectively to analyze and resolve any bugs",
        "Develop proficiency in your embedded development skills and confidently take the next steps",
        "Define addresses for the different peripherals",
        "Analyze the chip documentation",
        "Create registers from the addresses"
      ],
      "course_content": {
        "Getting Started - Constructing Peripheral Registers from Memory Addresses": [
          "Downloading our Integrated Development Environment (IDE)",
          "Installing our Integrated Development Environment (IDE)",
          "Getting the right Documentation for Bare-Metal Development",
          "Coding : Creating Registers using Information from the Documentation Pt.1",
          "Coding : Creating Registers using Information from the Documentation Pt.2",
          "Coding : Creating Registers using Information from the Documentation Pt.3",
          "Coding : Configuring Pins using the Registers we Created",
          "Coding : Creating Registers from Structure Members"
        ],
        "General Purpose Input/Output(GPIO)": [
          "Overview of ARM Cortex-M General Purpose Input/Output Module",
          "Coding : Developing the GPIO Output Driver",
          "Coding : Developing the GPIO Input Driver",
          "Notice"
        ],
        "Universal Asynchronous Receiver-Transmitter(UART)": [
          "Overview of the UART Protocol",
          "Coding : Developing the UART Transmitter Driver",
          "Coding : Testing the UART Transmitter Driver",
          "Coding : Retargeting Printf",
          "Coding : Making the UART TX Driver more Modular",
          "Coding : Developing the UART RX Driver",
          "Coding : Testing the UART RX Driver"
        ],
        "Analog to Digital Conversion (ADC)": [
          "Introduction to Analog to Digital Conversion",
          "Understanding ADC Independents Modes",
          "Coding : Developing the ADC Driver Pt.1",
          "Coding : Developing the ADC Driver Pt.2",
          "Coding : Developing the ADC Driver Pt.3",
          "Coding : Developing the ADC Continuous Conversion Driver",
          "Coding : Simplifying the ADC Driver"
        ],
        "The System Tick (SysTick) Timer": [
          "Overview of the System Tick Timer",
          "Coding : Developing the Systick Driver"
        ],
        "General Purpose Timers": [
          "Overview of General Purpose Timers",
          "Coding : Developing the General Purpose Timer Driver"
        ],
        "Interrupts Programming": [
          "Introduction to Interrupts",
          "Coding : Developing the GPIO Interrupt Driver",
          "Coding : Testing the GPIO Interrupt Driver",
          "Coding : Developing the Systick Interrupt Driver",
          "Coding : Developing the Timer Interrupt Driver",
          "Coding : Developing the ADC Interrupt Driver"
        ],
        "Serial Peripheral Interface (SPI)": [
          "Introduction to Serial Peripheral Interface (SPI)",
          "Coding : Implementing the SPI GPIO Initialization function",
          "Coding : Configuring the SPI Parameters",
          "Coding : Implementing the SPI Receive and Transmit functions",
          "Coding : Configuring the ADXL345 Accelerometer using the SPI Driver",
          "Coding : Testing the ADXL345 Accelerometer SPI driver"
        ]
      },
      "requirements": [
        "NUCLEO-STM32F33 DEVELOPMENT BOARD",
        "No programming experience needed - I'll teach you everything you need to know."
      ],
      "description": "Are you tired of Copying and Pasting code you don't understand?\nWith a programming based approach, this course is designed to give you a solid foundation in bare-metal firmware development for  ARM-based microcontrollers . The goal of this course is to teach you how to navigate the microcontroller reference manual and datasheet to extract the right  information to professionally  build peripheral drivers and firmware. To achieve this goal, no libraries are used in this course, purely bare-metal embedded-c and register manipulations.\nStill keeping it simple, this course comes in different ARM Cortex-M development boards  so that students can put the techniques to practice using an ARM Cortex-M development board of their choice. This version of the course uses the STMicroelectronics  STM32F33-NUCLEO which has an ARM Cortex-M4 microcontroller.\n\n\nSo with that understood, let me tell you…\n\nExactly What You’re Getting\nThis is dramatically different from any course you have ever taken because it’s more of a professional hands-on “field guide” to stm32 bare metal firmware development.\nThe reason why is because there’s no fluff or filler. It immediately gets down to the actual subject, showing you exactly what to do, how to do it, and why.\nPlus, it’s easy.\nAnd you’ll immediately “get” the entire mythology I personally use to build firmware for consumer devices in my professional life.\nIt's About MORE Than Just Getting the Code to Work\nSee, this course will change your professional life forever. Here is what one student had to say about the 1st version (STM32F4) of the course :\n\n\n\"I would suggest this course for all the beginners. The concepts have been covered in the right sequence.And also the best part of this lecture series is getting to know how to explore the reference manual and datasheets.\"\nHere is what another student had to say :\n\"Extremly helpful to get to understand the uC programming deeper! For me it is much easier from now to develop code because I undertstand the base behind, so I'm more confident and more experienced to develop and debug the code. Really, this course is very useful to link the hardware knowledge with the coding skills. This fills the gap between them. Thanks for it! :)\"\nA third student :\n\"I am a professional semiconductor chipset application engineer with 30 years in global embedded product design in system applications. I can say this teacher is very straight forward by sharing his many years knowledge to the students with his true heart. Yes. I love his teaching pace and style!\"\n\n\n\n\nThe First Version (STM32F4)  is being Taken by 5000+ Students with 1000+ Reviews\nIf at least one of the following applies to you then keep reading if not then simply skip this course:\n\n\" Escape From \"\nCopying/Pasting code you don’t understand\nUsing third party libraries and header files like HAL, LL and StdPeriph\nExperiencing bugs you don’t understand\nBeing afraid of technical documentations like the reference manual and datasheet of the chip\nImposter syndrome\n\" Arrive At \"\nBuilding every single line of code from scratch by writing to the microcontroller’s memory space directly.\nUsing No third party libraries or header files\nUnderstanding and writing every single line of code yourself- no Copy/Paste\nUsing the debugger effectively to analyze and resolve any bugs\nDeveloping proficiency in your embedded development skills and confidently take the next steps\nSo like I said, there’s more than just getting each piece of code to work.\nHere’s an overview of what you’re getting...\nAnalyzing the chip documentations:\nBefore developing the firmware for any chip you have to learn how to read the documentation provided by the chip manufacturer.\n\n\nDefining Peripheral address\nAll components on the microcontroller have an address range. To write to a component or read from a component you need to locate its address range in the documentation and properly define the addresses in your code.\n\n\nCreating registers from the address:\nThe addresses in the address range of a component represent the registers of that component. To access these registers you have effectively typecast the addresses.\n\n\nUnderstanding CMSIS:\nCortex-Microcontroller Interface Standard (CMSIS)CMSIS is a standard developed by Arm for all Cortex-Microcontrollers. This is the standard used in professional firmware development\n\n\nBut it gets better because you’re also getting…\n\nDeep Lessons on Developing Peripheral Drivers\nYou will learn how to develop bare-metal drivers for the following peripherals :\nAnalog-to-Digital Converter (ADC)\nSerial Peripheral Interface (SPI)\nNested Vector Interrupt Controller (NVIC)\nGeneral Purpose Timers (TIM)\nSystem Tick Timer (SysTick)\nGeneral Purpose Input/Output (GPIO)\n\n\nSpecially Designed For People Who Hate Copy/Paste\nListen. If you don’t like “Copy/Paste” you’re not alone. I can’t stand it either. I’d literally rather have a piece of code that I wrote from scratch that doesn’t work than someone else’s working code I copied and pasted.\nAnd that’s why I’ve spent months designing and recording this course in which I show you how to locate every single register used and the meaning of every hexadecimal value written into the register.\n\n\nAlso it comes with a money back guarantee so you have nothing to loose.",
      "target_audience": [
        "If you are an absolute beginner to embedded systems, then take this course.",
        "If you are an experienced embedded developer and want to learn how to professionally develop embedded applications the STM32F33 microcontroller, then take this course."
      ]
    },
    {
      "title": "Mastering on Raspberry Pi :Best Bootcamp 2024",
      "url": "https://www.udemy.com/course/2019-raspberry-pi-full-control/",
      "bio": "Learn from A-Z about Raspberry Pi. Installation,Troubleshooting,Projects,Programming with Python , c++ etc.",
      "objectives": [
        "Learning about Raspberry Pi devices ?",
        "Installation and troubleshooting about Raspberry Pi",
        "Real project ideas using by Raspberry Pi",
        "Python Programming with Raspberry Pi",
        "How to Connect Remotely to your Raspberry Pi",
        "Learn the ins and outs of working with the Terminal and Linux commands",
        "You will Work with Terminal Commands (EASY)",
        "Raspi System Management Commands",
        "Network Commands",
        "Warrior commands",
        "C programming language with Raspi",
        "and MORE !"
      ],
      "course_content": {},
      "requirements": [
        "No previous programming or electronics knowledge required",
        "Desire to learn Raspberry Pi"
      ],
      "description": "This Raspberry Pi course will provide the information you need for  Raspberry Pi\n\n\nLearn Raspberry Pi online at your own pace. Start today and improve your skills.\n\n\nYou will understand why the Raspberry Pi is such a versatile tinkering platform by experiencing first hand how well it combines,\n\n\n\n\nYour Raspberry Pi doesn’t have a power switch. As soon as you connect it to a power outlet, it will turn on.\nPlug the power supply into a socket and connect it to your Raspberry Pi’s power port.\n\n\n\n\nopen hardware, that includes wireless and wired networking and the ability to connect sensors,\n\n\nthe powerful Linux/Debian operating system, which gives you access to high-level programming languages\n\n\nThe flexibility of open source development software which, literally, powers the cloud applications that you use every day\n\n\nNo previous programming or electronics knowledge is required.\n\n\n*You get the best information that I have compiled over 6 years of trial and error and experience!\n\n\n*I am adding new topics every month. You can get first .\n\n\nYou'll Also Get:\n\n\nLifetime Access to course updates\n\n\nFast & Friendly Support\n\n\nDon't Miss Out!\n\n\nThank you very much and have a wonderful day!\n\n\nCourse:Learn from A to Z about Raspberry Pi. You will find like these topics below;\nInstallation,\nTroubleshooting,\nProjects,\nProgramming with Python ,\nProgramming with  c++ etc.\n\n\nGET START NOW!",
      "target_audience": [
        "Anyone interested in learning about Raspberry Pi"
      ]
    },
    {
      "title": "Introduction to Microcontrollers",
      "url": "https://www.udemy.com/course/computers-before-bedtime/",
      "bio": "Nitty–gritty of microcontrollers and building embedded systems with them",
      "objectives": [
        "Demystifying the magic of computers",
        "What are microprocessors, their architecture and design",
        "How to start an embedded project",
        "How to start coding"
      ],
      "course_content": {},
      "requirements": [
        "Find computers fascinating"
      ],
      "description": "Are you ever curious about how computer systems works? Even the most experience engineers sometimes fail to answer the very basic question because the basic knowledge is sometimes lost somewhere in the midst of all the new and advanced things we learn. Also, the basics get overlooked when we are working on upper layers of coding and application building.\n\nThis course delves into the concept of computer systems in a very simple and easy way. There is no practical lab or exam, so it is a stress-free environment, which is key for good learning. We will only have lectures that cover the fundamentals of computers, starting from working of processors and moving to how one is programmed. There is no practical but there are step-by-step instructions on how you can get a microcontroller and get started with your first embedded project. The lectures try to be as contained and to the point as possible.\n\n\nIf this is something that interests you, I will be more than happy to have you in the course.\nIf you are a beginner, this course can help you understand the basics. If you are at the intermediate level, this will help you brush over the fundamentals and create a mind-map to learn advance things easily.",
      "target_audience": [
        "Students interested to know how computers work in easy, stress-free lectures"
      ]
    },
    {
      "title": "Complete AVR Microcontroller Programming Course",
      "url": "https://www.udemy.com/course/avr-microcontroller-complete-course-from-scratch-atmega16/",
      "bio": "Deep dive into 8-Bit AVR microcontroller programming by reading the datasheet",
      "objectives": [
        "Programming AVR microcontroller in Atmel Studio IDE",
        "You will learn how to program a AVR Microcontroller from scratch with datasheet approach",
        "Build your own projects with the AVR microcontroller..",
        "You will be learning all the peripherals programming from scratch no libraries used in Atmel Studio IDE",
        "The class starts from the basics of setting up a microcontroller programming and hardware environment."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to AVR Microcontroller",
          "Features of Atmega16 microcontroller"
        ],
        "Hardware and software used in this course": [
          "Hardware and software used in this course",
          "Installing Atmel Studio IDE to your PC",
          "Creating first project in Atmel Studio IDE"
        ],
        "General Purpose Input Output (GPIO) in ATmega16": [
          "Pinout and port structure of Atmega16 micrcontroller",
          "Accessing GPIO register's Part - 1",
          "Accessing GPIO register's Part - 2"
        ],
        "Interfacing LED with Atmega16 microcontroller": [
          "Interfacing LED to Atmega16 microcontroller"
        ],
        "Interfacing of 7-Segment Display with Atmega16 microcontroller": [
          "7 Segment display working principle explained",
          "Interfacing 7Segment Display with Atmega16"
        ],
        "Interfacing of 16x2 LCD with Atmega16 microcontroller": [
          "16x2 LCD working principle explained",
          "Interfacing 16x2 LCD with Atmega16 in 8 Bit mode"
        ],
        "Interfacing of Push Buttons with Atmega16 microcontroller": [
          "Push Buttons Input devices working logics explained",
          "Interfacing Pushbuttons with Atmega16"
        ],
        "Implementing External Interrupts in Atmega16 microcontroller": [
          "Interrupt operations in microcontroller explained",
          "Executing External Interrupt in Atmega16"
        ],
        "Implementing Timer Interrupt Mode in Atmega16 microcontroller": [
          "Timer Interrupt working principle explained",
          "Timer Interrupt configuration in ATmega16",
          "Timer Interrupt programming in Atmega16"
        ],
        "Implementing Timer Output Compare Mode in Atmega16 microcontroller": [
          "Timer Output Compare working principle explained",
          "Timer Output Compare configuration in Atmega16",
          "Timer Output Compare programming in Atmega16"
        ]
      },
      "requirements": [
        "Basic knowledge on electronics components",
        "Basic knowledge on C programming",
        "Download and Install Proteus Professional all other software links are provided"
      ],
      "description": "Over a 45+ lecture videos, 6.5+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of AVR Microcontroller, but also learn the very basics of AVR Microcontroller internal structure and hardware schematics required for building your own products out of AVR (Atmega16) microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on Programming on ATMEGA16 microcontroller From Scratch.\nThe course is structured for the need of learners to understand microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the AVR microcontroller than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "Anyone with some experience in electronics",
        "Anyone with an beginner knowledge of embedded systems",
        "you will be able to program any AVR microcontroller once completed this course"
      ]
    },
    {
      "title": "How to Connect LabVIEW to Data Dashboard on iOS and Android",
      "url": "https://www.udemy.com/course/labview-smart-devices-connections/",
      "bio": "Learn LabVIEW Programming & LabVIEW Software to Connect Android & ios. LabVIEW is Amazing Graphical Programming",
      "objectives": [
        "Make connection between LabVIEW and smart devices and also making applicative projects by Data Dashboard application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduce of programming LabVIEW for Data Dashboard",
          "Introduce Data Dashboard"
        ],
        "Data types in LabVIEW and Data Dashboard": [
          "Boolean data in Data Dashboard",
          "Numeric data in Data Dashboard",
          "String data in Data Dashboard",
          "Chart & Graph in Data Dashboard"
        ],
        "Projects": [
          "DC motor project",
          "Gas sensor project"
        ]
      },
      "requirements": [
        "Primary information on LabVIEW"
      ],
      "description": "Data Dashboard has a graphical approach which means you can program the way you think. It enables you to control, measure & monitor any device and sensor online from around the world. Also, Projects which developed on data dashboard can be shared or run on your ios/ Android and windows.\n\"LabVIEW & Data Dashboard on iOS and Android \" by Data Dashboard, helps you connect LabVIEW to your smart device, work with different data and make applicative projects in order to have smart houses, factories and environment.\nIn this course we have explained Data Dashboard application in detailed. So you will be able to design your program wirelessly and professionally.\nin short,this course students learn:\nHow to connect Labview to smart devices\nHow to work and launch different sensors from your smart devices\nHow to share data from both Data Dashboard and LabVIEW.\nHow to make houses, workplaces and environment smart\n\nWho is the target audience?\nStudents, researchers and engineers in the field of mechanics of electronics, robotics, mechatronics, industries, medicine, production managers and ... industrial automation Programming enthusiasts",
      "target_audience": [
        "Engineers and those who want to learn LabVIEW in advanced level and also communicating between LabVIEW and smart devices"
      ]
    },
    {
      "title": "Craft Your Own Arduino-Based Piano: A Melodic Journey!",
      "url": "https://www.udemy.com/course/arduino-piano-step-by-step-guide/",
      "bio": "Delve into the world of Arduino and create your personalized musical instrument!",
      "objectives": [
        "Explore and make interactive projects with Arduino",
        "Make your own Arduino Based Piano",
        "Learn Working Principle of Speaker and Buzzer for firing Sound",
        "Interface Switches and Sound devices with Arduino",
        "Learn the working principle of Tone Function"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Exploring Sound Generation and Input Design with Arduino",
          "Educational Engineering Team - Who we are?"
        ],
        "Software Requirements": [
          "Software Requirements",
          "Quiz"
        ],
        "Circuit Schematic using Fritzing": [
          "Section Intro",
          "Arduino Piano Schematic using Fritzing",
          "Pull Up/Down Push Buttons",
          "Piezo Buzzer",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Coding": [
          "Section Intro",
          "Arduino Piano Coding",
          "The Code",
          "Programming the Arduino Piano: Writing, Uploading, and Understanding Code",
          "Section Summary"
        ],
        "Practical Work": [
          "Practical: How to Connect and Burn the Code"
        ],
        "Code & Circuit Schematic": [
          "Section Intro",
          "Download Code Examples",
          "Download Boards Schematics",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Download and Install Software Section": [
          "Section Intro",
          "Download and Install Arduino Software",
          "Download and Install Circuit Design and Wiring Software",
          "Preparing Your System: Installing and Setting Up Arduino IDE",
          "Section Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Craft Your Own Arduino-Based Piano Practice Test"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "Course Project": [
          "Course Project",
          "Presenting an Arduino-Based Piano with Note Mapping and Sound Output"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Arduino",
        "A Will to apply, not just watch"
      ],
      "description": "Why Just Listen When You Can Create?\nExperience the joy of creating your very own Arduino-based piano. This course promises a harmonious blend of technology and music, guiding you through the intricate nuances of piecing together your instrument.\nCourse Highlights:\nHands-on Learning: We believe in 'doing' rather than just 'listening'. Dive into real-time projects that not only enhance your skills but also give a sense of accomplishment.\nDeep Dive into Arduino: Beyond just programming, understand the architecture and the myriad possibilities it offers.\nComprehensive Component Study: From buzzers to speakers, understand the role of each component in your Arduino setup.\nFlexible Learning: Pace out your learning. Whether you're on a coffee break or in a long commute, our course fits into your schedule.\nWhat's in Store?\nCreate an Arduino-based piano with customizable sounds.\nMaster the tone functions and their applications.\nUnderstand the working of buzzers and speakers.\nDive deep into the electronic components and adapters.\nWhy Choose This Course?\nLearning should be fun, and what's more enjoyable than combining tech with tunes? By the end, you'll have your self-made piano, showcasing your skills in both Arduino programming and musical creativity.\nJoin Our Growing Community:\nEnroll today and gain:\nAccess to crisp video lessons.\nEngaging practical activities.\nA trove of downloadable resources.\nLifelong course updates.\nA vibrant community of learners and experts.\nSatisfaction Guaranteed:\nYour experience matters. If you find the course not living up to your expectations, we offer a 30-day money-back guarantee. We continuously refine our content based on feedback, ensuring you get the best.\nReady to Strike a Chord with Arduino?\nEnvision, create, and play your tunes. Enroll now and embark on a melodious journey with Arduino!\nWhat You Will Learn\nBuild and customize an Arduino-based piano\nMaster tone functions and their applications\nUnderstand the working of electronic components like buzzers and speakers\nCombine technology with music for creative projects\nWho Is This Course For\nArduino enthusiasts\nMusic lovers interested in DIY projects\nBeginners in electronics and programming\nAnyone looking to combine technology with creativity\nRequirements\nBasic knowledge of Arduino\nA computer with internet access\nEnthusiasm to learn and create\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and provide guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts through in a step by step easy to understand matter using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming and in particular for the world of Arduino, PIC Microcontroller, Rasberry Pi has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Arduino Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning How Piano works",
        "Anyone Interested in Learning How to Output different Voice Tones using Arduino",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning How to make Arduino Based Piano",
        "Anyone Interested in Microcontrollers"
      ]
    },
    {
      "title": "Practical NodeMCU-ESP32 IoT Course with Applications",
      "url": "https://www.udemy.com/course/practical-iot-course-using-nodemcu-esp8266-with-applications/",
      "bio": "Sensor Interfacing to NodeMCU, HTTP, MQTT, IoT Server- ThingSpeak, AWS and Node Red on Windows and AWS..",
      "objectives": [
        "NodeMCU- ESP8266 - Sensor Interfacing and uploading data to IoT Servers",
        "Controlling devices connected to Node MCU from IoT servers and android APP",
        "Build apps on Node Red and upload data to it and control devices connected to NodeMCU",
        "Using IoT Protocols like HTTP and MQTT and Implementing on Node MCU",
        "Hardware Connections of all Sensor Modules explained with Coding in Arduino IDE"
      ],
      "course_content": {
        "Introduction to NodeMCU and Arduino IDE Installation": [
          "Introduction to NodeMCU",
          "Installation for NodeMCU in Arduino IDE"
        ],
        "Digital Sensor Interfacing to NodeMCU": [
          "LED and Switch Interfacing",
          "Digital Sensors Interfacing to NodeMCU",
          "Interfacing DHT Sensor to NodeMCU",
          "Interfacing Ultrasonic Sensor with NodeMCU"
        ],
        "Analog Sensor Interfacing to Node MCU": [
          "Interfacing Analog Sensor to Node MCU"
        ],
        "Data upload to Thingspeak Server": [
          "Introduction to IoT Protocols",
          "Introduction to Thingspeak",
          "Upload Temperature and Humidity to Thingspeak",
          "Upload Ultrasonic Sensor and Soil Moisture values to Thingspeak"
        ],
        "MQTT on NodeMCU": [
          "Introduction to MQTT Protocol",
          "Node MCU as MQTT Client - Publish and Subscribe from Node MCU",
          "Uploading DHT Sensor Data using NodeMCU"
        ],
        "Node Red and its applications": [
          "Installing Node Red on Windows",
          "Installing Node Red on Amazon AWS EC2",
          "Basic Nodes flows and HTTP node flows using Amazon AWS EC2",
          "MQTT Nodes on Node Red",
          "UI Dashboard Nodes on Node Red",
          "Uploading DHT Data to Node Red UI Application using MQTT"
        ],
        "Projects or Applications on Node MCU": [
          "Home Automation using Node MCU"
        ]
      },
      "requirements": [
        "No Requirements. Anyone can learn it",
        "The course is designed in a way that anyone without any knowledge can learn all the concepts"
      ],
      "description": "Course Highlights - Node MCU Basics and Installation on Arduino IDE, Digital and Analog Sensor Interfacing to Node MCU, Sensor data upload to Thingspeak Server, MQTT Protocol and Sensor Data upload to MQTT Broker, Node Red and creating Apps on Node Red and Data upload from Node MCU to the apps.\nThis Course can be understood by anyone without any prior knowledge on Node MCU or Embedded systems or IoT. Everything is explained from the basics including the hardware interfacing and the software coding.\nThis course starts with the basics of Node MCU, Installing Arduino IDE and libraries required for Node MCU. The Digital and Analog sensors are Interfaced to Node MCU and the working of the sensors and the required code for that is explained. Sensors like DHT and Ultrasonic sensors are also Interfaced to NodeMCU. The sensor data is uploaded onto the Thingspeak Server using HTTP GET and POST requests. MQTT Protocol is explained in detail with practical use cases and Implemented on Node MCU. Installation of PubSubClient library is shown on the Arduino IDE and then used to upload the sensor data to the MQTT Broker. Node red is taken up as the next topic and the course is ended with uploading data from NodeMCU to Node Red.\nEnd to end Applications are shown with hardware interfacing on Node MCU and coding on Arduino IDE. Applications related to data upload from DHT sensors andUltrasonic sensors are shown and Home automation application which controls the appliances connected to the relay is also shown in three different types. Controlling devices from the MQTT Box application, from Android App and from Node Red app is also shown.",
      "target_audience": [
        "Industry Professionals who want to Learn IoT Concepts on Node MCU",
        "Professionals who want to excel as IoT product designers in their careers",
        "Beginner IoT Developers who want to learn all the concepts related to IoT and apply them using Node Red",
        "Students who want to learn about Node MCU for their Projects",
        "Hobbyists who want to work on NodeMCU and create amazing projects"
      ]
    },
    {
      "title": "Learn To Create Face Recognition Door Lock With Raspberry Pi",
      "url": "https://www.udemy.com/course/learn-to-create-face-recognition-door-lock-with-rsaberry-pi/",
      "bio": "How To Create Face Recognition Door Lock Using Raspberry Pi",
      "objectives": [
        "Raspberry Pi",
        "Face Recognition Door Lock",
        "AWS",
        "Face Recognition",
        "Python"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Instructor Introduction",
          "Components Overview"
        ],
        "AWS Setup": [
          "Creating AWS Account",
          "AWS Setup"
        ],
        "Raspberry Pi": [
          "Raspberry Pi VsCode Setup",
          "Raspberry Pi Camera Setup"
        ],
        "Face Recognition Door Lock": [
          "Index Faces / Faces Dataset",
          "Face Recognition"
        ],
        "Door Lock Setup": [
          "Face Recognition LED",
          "Door Lock With Relay",
          "Push Button / Bell Press",
          "Motion Sensor Door Lock",
          "Final Code"
        ]
      },
      "requirements": [
        "No Requirements or Prerequisites"
      ],
      "description": "In this course, we have created our own Face Recognition Door Lock using Raspberry Pi and the AWS Rekognition service provided by AWS Cloud.\nThis Project works using Raspberry Pi Camera to capture the image of the person at the door if the button is pressed and after that, the image is sent to AWS Rekognition Service for recognition of the face of the person with the authorized user’s face and if the face is recognized successfully then the electronic door lock connected to Raspberry Pi is Unlocked for the authorized user to enter in the room.\nIn case the person is not recognized then the image f that person is sent to the authorized user’s email address.\n\n\nWith the use of AWS Rekognition service, the processing of the image for face recognition is faster as well as more accurate and this makes the project fast, reliable, cheap as well as highly secured as compared to other existing projects.\n\nThis development scheme using Raspberry Pi is less power consumption as it can be also powered by a power bank or 5V power supply and is flexible as the size of Raspberry Pi is compact so it can be installed in a small space.\n\n\nKeywords – Face Recognition Door Lock, Smart Door Lock, IoT, Face Recognition, Security",
      "target_audience": [
        "Enthusiast Interested In Face Recognition Door Lock",
        "Anyone Curious About Face Recognition Door Lock"
      ]
    },
    {
      "title": "Industrial Robotics KUKA",
      "url": "https://www.udemy.com/course/industrial-robotics-kuka/",
      "bio": "Operation and Programming",
      "objectives": [
        "Operate KUKA industrial robots",
        "Program KUKA industrial robots",
        "Diagnose KUKA industrial robots",
        "Learn best industry practices on Industrial Robotics"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Controller | SmartPAD | Manipulator",
          "KUKA Mechanical system in action"
        ],
        "KUKA Operation": [
          "Changing the system language",
          "KUKA User system",
          "SmartPAD overview",
          "KRL programming modes",
          "Analysing messages",
          "KUKA Operating modes",
          "Running programs",
          "The deadman switch",
          "Moving the manipulator",
          "Manual movement modes",
          "TCP and reorientation movements",
          "The Navigator"
        ],
        "KUKA Programming": [
          "Creating modules",
          "Diagnosis with chronological file",
          "Movement types and definitions",
          "Approximation/Zone/Cont - Universal definitions for 6-axis robots",
          "Selecting and editing modules",
          "PTP vs LIN movements",
          "LIN vs CIRC movements",
          "Creating and parametrizing linear movements",
          "CONT Parameter part 1",
          "CONT Parameter part 2"
        ],
        "Definitions and examples with a real robot": [
          "Controller | SmartPAD | Manipulator",
          "Identifying axis in a real robot"
        ],
        "KUKA program instructions": [
          "WAIT TIME",
          "WAIT FOR",
          "OUT",
          "PULSE OUT",
          "SYN OUT",
          "SYN PULSE",
          "Working with local variables",
          "Working with system variables",
          "Deleting a section of code",
          "Introduction to LOOPs",
          "LOOP",
          "Breaking a LOOP execution",
          "FOR LOOP",
          "WHILE LOOP",
          "Conditions: IF THEN ELSE",
          "Calling modules",
          "Comments and Stamps"
        ]
      },
      "requirements": [
        "No robot programming experience is needed for this couser."
      ],
      "description": "Course Description:\nThis hands-on training equips technicians, engineers, and automation professionals with the skills to operate, program, and troubleshoot KUKA industrial robots. Focused on real-world applications, the course blends foundational robotics theory with practical programming techniques using KUKA’s FlexPendant interface and KRL (KUKA Robot Language).\nKey Learning Objectives:\nRobot Operation: Master axis-by-axis motion control, path planning, and safe robot jogging.\nProgramming Fundamentals:\nImplement loops (FOR/WHILE), conditional logic, and look-ahead functions for optimized motion.\nConfigure approach zones, tool center points (TCP)\nUtilize Stamp Comments and structured documentation for collaborative workflows.\nAdvanced Logic:\nDesign programs with error handling, dynamic path adjustments, and I/O synchronization.\nTroubleshoot common errors (e.g., \"Approximation Not Possible\").\nBest Practices:\nOptimize cycle times with path blending and logic sequencing.\nMaintain readability using KRL conventions and version control via comment stamps.\n\n\nWho Should Attend:\nAutomation Engineers | Maintenance Technicians | Robotic Integrators\nPrerequisites: Basic PLC/mechatronics knowledge.\nTools & Environment:\nLive KUKA KR C4/KR C5 controller + FlexPendant simulations\nIndustry-standard milling/drilling end-effector setups\nOutcome:\nGraduates will confidently program, optimize, and maintain KUKA robots for tasks like material handling, milling, and assembly, while adhering to industry safety and documentation standards.\nStyle Notes:\nMirrors the conversational tone from subtitle translations (e.g., \"chill guy speaking\" vibe).\nAvoids overly technical jargon while maintaining precision.\nAligns with the user’s focus on UI synchronization (FlexPendant workflows) and readability.",
      "target_audience": [
        "Indsutry technicians, engineers, shift managers, operators"
      ]
    },
    {
      "title": "Complete STM32F4 Course Using STM32 CubeMx From Scratch",
      "url": "https://www.udemy.com/course/complete-stm32f4-course-using-stm32-cubemx-from-scratch/",
      "bio": "Using STM32 CubeMx Code generator and Keil uVision IDE for write and master all the peripheral drivers for STM32F446RE",
      "objectives": [
        "Programming STM32F446RE microcontroller in Keil uVision IDE",
        "You will learn how to program a STM32F4 Microcontroller from scratch with datasheet approach",
        "Build your own projects with the STM32F4 microcontroller.",
        "You will be learning all the peripherals programming from scratch no libraries used in Keil uVision IDE",
        "The class starts from the basics of setting up a microcontroller programming and hardware environment.",
        "Use STM32 CubeMx for generating peripheral driver for STM32F446RE microcontroller"
      ],
      "course_content": {
        "Introduction to Course": [
          "Introduction to Course"
        ],
        "Hardware & Software Used in the Course": [
          "Hardware & Software Used in the Course Part - 1",
          "Hardware & Software Used in the Course Part - 2"
        ],
        "Arm Cortex M4 Architecture Explained": [
          "RISC Architecture Explained",
          "ARM Architecture Fundamentals Explained",
          "ARM Buses and its types",
          "Introduction to ARM Cortex M Processor",
          "ARM Cortex M Architecture Explained",
          "Arm Cortex M4 Architecture Explained"
        ],
        "(GPIO) - General Purpose Input Output of STM32F4": [
          "GPIO Internal Working Explained",
          "Blinking LED in Nucleo - F446RE (STM32F446RE)"
        ],
        "7segment Display With STM32F4": [
          "7Segment Display Working Principle Explained",
          "Interfacing of 7Segment Display with STM32F446RE"
        ],
        "16x2 LCD with STM32F4": [
          "16x2 LCD display structure and working principle explained",
          "Interfacing of LCD with STM32F446RE in 8Bit Mode",
          "16x2 LCD display structure and working principle in 4Bit Mode explained",
          "Interfacing of LCD with STM32F446RE in 4Bit Mode"
        ],
        "Debugging in Keil uVision IDE": [
          "Debugging in Keil uVision IDE Explained"
        ],
        "Input Devices with STM32F4": [
          "Input Devices Working Logics Explained",
          "Interfacing Pushbutton's with Nucleo-F446RE (STM32F446RE)"
        ],
        "External Interrupt in STM32F4": [
          "External Interrupt Routine in Microcontroller Explained",
          "Implementing EXTI in Nucleo-F446RE (STM32F446RE)"
        ],
        "Timer Interrupt in STM32F4": [
          "Timer Interrupt Functionality Explained",
          "Timer Interrupt Configuration and Calculation",
          "Implementing Timer Interrupt in STM32F4",
          "Implementing Timer Interrupt in STM32F4 Part - 2"
        ]
      },
      "requirements": [
        "Basic knowledge on electronics components",
        "Basic knowledge on C programming",
        "Basic circuit building skills from schematics"
      ],
      "description": "Over a 40+ lecture videos, 9+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of STM32F4 Microcontroller, but also learn the very basics of STM32F446RE Microcontroller internal structure and hardware schematics along with basics of STM32 CubeMx Code generator for generating peripheral drivers required for building your own products out of STM32 microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on Complete STM32F4 Course Using STM32 CubeMx From Scratch.\nThe course is structured for the need of learners to understand microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the PIC microcontroller than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "People with some experience in electronics",
        "People with an beginner knowledge of embedded systems"
      ]
    },
    {
      "title": "Mastering Electronics: From Fundamentals to Design",
      "url": "https://www.udemy.com/course/mastering-analog-circuits-from-fundamentals-to-design/",
      "bio": "Analog Electronics Mastery: Fundamentals, Design, and practical circuit design Applications. USE PROMO ONLY13",
      "objectives": [
        "Understand electronic components, voltage, current, resistance, and variuos circuit analysis techniques.",
        "Gain proficiency in diodes, BJTs, and FETs.",
        "Master and Analyze amplifier fundamentals, feedback, stability and designing single-stage and multistage amplifiers.",
        "Apply op-amps for various practical applications.",
        "Build analog circuits and solve complex problems.",
        "Design and simulate analog circuits."
      ],
      "course_content": {
        "Introduction": [
          "Course Content"
        ],
        "Basic electronics knowledge": [
          "what is electricity ?",
          "Voltage, current and resistance",
          "AC wave, DC wave and the frequency"
        ],
        "Basic electronic components and their properties": [
          "Resistor",
          "Voltage divider (UPDATED LECTURE)",
          "LDR",
          "Diode",
          "Zener diode",
          "LED",
          "LED-current limitting resistor (UPDATED LECTURE)",
          "7 segment display (UPDATED LECTURE)",
          "IR LED and IR sensor",
          "Capacitor",
          "Transistor",
          "IC chips",
          "Relay",
          "Transformer"
        ],
        "Circuit analysis techniques": [
          "Circuit analysis techniques content",
          "Circuit analysis techniques"
        ],
        "Diode Operation and Applications": [
          "Basic concept of electron flow and p-n junction formation",
          "Diode definition, structure, and symbol",
          "Types of diodes: rectifier, zener, LED",
          "Diode Characteristics and Models",
          "Diode as a rectifier: half-wave and full-wave rectification",
          "Ripple factor and filter capacitor calculation",
          "Voltage regulation using Zener diodes",
          "Diode as an amplitude modulator (AM)",
          "Diode as a frequency modulator (FM)"
        ],
        "Bipolar Junction Transistors (BJTs) and Field-Effect Transistors (FETs)": [
          "Bipolar Junction Transistors (BJTs) - Basics",
          "BJT amplifier configurations (common emitter, common base, common collector)",
          "BJT biasing techniques (fixed bias, emitter bias, voltage divider bias)",
          "Introduction to Field-Effect Transistors (FETs)",
          "Field-Effect Transistors (FETs) - Structure, Operation, and Characteristics",
          "FET Biasing Techniques: Self-Bias and Voltage Divider Bias"
        ],
        "Operational amplifiers": [
          "Op amp introduction",
          "The characteristics of operational amplifier",
          "OP-AMP GAIN",
          "The Bandwidth of Operational Amplifier",
          "The Effect of Input-Offset Voltage on Output Voltage of Operational Amplifiers",
          "Feedback Equation and stability",
          "Cascade circuit of operational amplifier",
          "Some Examples on Op-Amp"
        ],
        "Op-Amp applications": [
          "Introduction to Operational Amplifier Applications",
          "Voltage Comparator",
          "Summing amplifier",
          "Summing amplifier (Digital to Analog Converter)",
          "Differential amplifier",
          "Differential amplifier (Low Pass filters Integrators)",
          "Differential amplifier (High Pass filters Differentiators)"
        ],
        "Filters": [
          "what are filters ? and there types",
          "Low-Pass Filters",
          "High-Pass Filters",
          "Band-Pass Filters",
          "Band-Stop Filters (Notch Filters)",
          "More information about filters"
        ],
        "Designing circuits using previus componenets": [
          "Using proteus 8 pro in simulating and designing the circuits",
          "Using Breadboard in connecting the circuits",
          "Using PCB in welding the circuits",
          "How PCBs work??",
          "Simple Voltage supply Circuit",
          "Triangular Wave Generator Circuit with Op Amp IC 741",
          "Over Heat Detector with Auto Cut-Off System using Op-Amp",
          "Light Sensor Switch Circuit using LDR and 741 OP-AMP"
        ]
      },
      "requirements": [
        "Simulation Software: You may require access to simulation software for hands-on circuit design and analysis, although free or trial versions will suffice.",
        "Materials (Optional): Depending on your level of commitment and interest, you might want to have access to a breadboard, resistors, capacitors, and other basic electronic components for optional practical exercises.",
        "Mathematics: A grasp of basic algebra and mathematical concepts will aid in understanding circuit analysis and calculations."
      ],
      "description": "Welcome to the \"Mastering Analog Circuits: From Fundamentals to Design\" course, where you'll embark on a journey into the fascinating realm of analog electronics. This comprehensive online course is meticulously crafted to provide you with a deep understanding of analog circuits, from the very basics to advanced design principles.\nWhat You Will Learn:\nFrom understanding the fundamental components of electronics to designing complex analog circuits, this course covers it all. You'll delve into voltage, current, and resistance, mastering Ohm's Law and its practical applications. You'll explore diodes and transistors, gaining expertise in their operation and applications. Amplifiers, feedback mechanisms, and operational amplifiers (op-amps) will no longer be mysteries as you grasp their intricacies and real-world applications.\nThrough hands-on labs and practical projects, you'll learn to build, analyze, and optimize analog circuits. You'll develop the skills to design circuits for various practical applications, from signal processing to filtering. Moreover, you'll enhance your problem-solving abilities, enabling you to troubleshoot and fine-tune your circuits.\nThis course is designed for students, electronics enthusiasts, engineers, professionals, hobbyists, and anyone with an interest in electronics. Whether you're looking to excel academically, advance your career, or simply explore the world of analog electronics, this course provides the knowledge and skills you need.\nBy the course end, you'll be equipped with a solid foundation in analog electronics and circuit design, ready to tackle real-world projects and challenges with confidence. Join us today and unlock the potential of analog electronics!",
      "target_audience": [
        "Students: Whether you're pursuing a degree in engineering, physics, or a related field, this course will provide you with valuable foundational knowledge in analog electronics and circuit design.",
        "Electronics Enthusiasts: If you're passionate about electronics as a hobby and want to deepen your understanding of analog circuits, this course will serve as an excellent resource.",
        "Engineers and Professionals: Engineers in various domains, as well as professionals looking to expand their skill set or transition into roles involving analog circuit design, will find this course beneficial.",
        "Hobbyists: If you enjoy building electronic projects or tinkering with circuits in your spare time, this course will help you take your hobby to the next level by providing a solid theoretical foundation.",
        "Aspiring Electronics Technicians: Individuals aiming to work as electronics technicians or repair professionals will gain essential knowledge and skills.",
        "Anyone Interested in Electronics: Whether you have a casual interest in electronics or are curious about how the devices you use every day work, this course offers an accessible introduction to analog electronics."
      ]
    },
    {
      "title": "ESP32 + Telegram: Get Real-time notification for FREE",
      "url": "https://www.udemy.com/course/esp32-telegram-notifications-esp8266-iot-internet-of-things/",
      "bio": "A Different IoT Power and Performance, Use ESP32 Microcontroller to MAKE IoT Projects to Unleash Your Creativity",
      "objectives": [
        "Program ESP32 to detect and send data and notification to Telegram",
        "Enable Telegram notification and direct connection with ESP32",
        "Enable Web based monitoring using ESP32",
        "Create a monitoring device with simple and easy to follow steps",
        "Libraries needed for WiFi and Telegram",
        "Schematic and Circuit Connection",
        "Get your ESP32 device up and running with instant notifications from Telegram",
        "Learn how to code the ESP32 in a step by step manner",
        "Don't worry about paying for a costly, monthly plan to send notifications. This course teaches you how to do it completely free.",
        "This course teaches you how to send text messages for free on Telegram",
        "Get notified in real-time when there are any",
        "You'll learn how to interact with the ESP32 board using Serial Communication",
        "You'll learn how to read data from sensors and make decisions based on it.",
        "Coding",
        "Practical Testing",
        "Telegram Bots"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Hardware and Software Requirements",
          "What is ESP32 Board",
          "ESP 32 Pinout v1 DOIT",
          "Download and Install Arduino ESP32 v1 Development enviroment",
          "Load Your First Code to ESP32 Board",
          "Coding LED Blink",
          "Touch Sensor",
          "Dealing with Analog Signals",
          "PWM Signals",
          "Servo Motor Control using PWM Signal in ESP32"
        ],
        "Hardware and Software Requirements": [
          "Hardware and Software Requirements",
          "Download and Install Arduino IDE",
          "Download and Install Fritzing"
        ],
        "Telegram Bot for IoT": [
          "Creating Telegram Bot for IoT"
        ],
        "Required Arduino Libraries": [
          "Installing the Required Arduino Libraries"
        ],
        "Circuit Schematic": [
          "Circuit Connection",
          "Circuit Diagram"
        ],
        "Coding": [
          "Libraries and Variables",
          "Write your Code Setup",
          "Write your Code Loop",
          "The Code"
        ],
        "Practical Testing": [
          "Practical Testing"
        ],
        "Reading Analog Sensors and Send notifications on Conditions": [
          "Send Analog Sensor on Condition to Telegram via ESP32",
          "The Code"
        ],
        "Practice Test": [
          "ESP32 and Telegram Notification System Practice Test"
        ]
      },
      "requirements": [
        "A will to apply, not just watch",
        "Computer or laptop",
        "ESP32 board"
      ],
      "description": "I made this course because I suffered from the fact that you have to pay to some online service to get your IoT-powered devices to notify you about a certain event! With the knowledge that you will gain from this course, you will be able to send unlimited messages/notifications for free directly to your mobile phone from your IoT-powered device.\nThis course shows how to send notification updates to your mobile phone through ESP32 as soon as your controller senses motion. As long as your internet is present on your phone, ESP32 information will be sent to Telegram irrespective of your location. The ESP board will be made using Arduino IDE.\nESP32 is an electronics system that is used to provide internet access, internet of things connectivity, and data logging.\nProgramming is fun if you do it right! This course will teach you how to configure your ESP32 to send notifications to your mobile on Telegram App for free.\nThings you can do with the knowledge you will gain from this course:\nGet instant event notifications to your mobile phone for free with a board that costs less than $5!\nGet notified on your mobile phone when someone opens your room door.\nGet sensor data like temperature, humidity, and others directly to your mobile phone.\nGet notified when someone moves inside your room using a motion detector sensor connected to the ESP32 board.\nWhy you should join this course:\nGet your ESP32 device up and running with instant notifications from Telegram.\nLearn how to code the ESP32 in a step-by-step manner.\nDon't worry about paying for a costly, monthly plan to send notifications. This course teaches you how to do it completely free.\nThis course teaches you how to send text messages for free on Telegram.\nGet notified in real-time when there are any updates.\nYou'll learn how to interact with the ESP32 board using Serial Communication.\nYou'll learn how to read data from sensors and make decisions based on it.\nIoT Internet of Things Crash Course: Step by step is a course specially created for Electronic Geeks & Engineers who want to take their Electronics and Microcontroller Projects to the next level, adding WiFi, Bluetooth connectivity, and more processor power while maintaining battery life.\nWelcome to this course.\nThe course lesson will explain “How to work on ESP32 Board” by using C Language and the famous Arduino IDE development environment. This course will work best for you if you have basic knowledge of Electronics and Arduino. You will learn how to interface the ESP32 Board with your Computer and Control it in no time.\nESP32 can be used in your Engineering projects, Industrial Projects, or IoT Home Automation related projects.\nWhy Learn ESP32? If you are an Engineering or Science student, you might come across projects in which you want to control or monitor via the internet. ESP32, with its Robust Design, Ultra-Low Power Consumption, High Level of Integration, and Hybrid Wi-Fi & Bluetooth Chip, is the best fit to get started in the Internet of Things World.\nIn this course we will also explore:\nDigital Output: Blinking an LED\nDigital Input: Reading a Touch Sensor\nAnalog Input: Reading a variable voltage from a potentiometer\nAnalog Output: Controlling LED brightness\nAnalog Output: Controlling a Servo Position\nReading Temperature/Humidity Data with a Digital Sensor\nConnecting to the Internet and getting local time\nReceiving data from a simple local web page, turning on/off an LED\nTransmitting data to a simple local web page\nAt the end of this course, you can create Innovative IoT Projects. The only thing that you need to do is THINKING, WIRING & CODING.\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and provide guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming and in particular for the world of Arduino, PIC Microcontroller, and Raspberry Pi has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nEnroll now and take your ESP32 skills to the next level!\nFAQ Section:\nDo I need any prior experience?\nNo prior experience is necessary. This course is designed for beginners.\nWhat materials do I need?\nYou will need an ESP32 board, a computer, and an internet connection.\nHow long do I have access to the course?\nYou will have lifetime access to the course materials.\nWhat You Will Learn\nHow to set up the ESP32 for sending notifications.\nIntegrating Telegram API with ESP32.\nTroubleshooting common issues.\nPractical applications of sending notifications with ESP32.\nWho Is This Course For\nBeginners interested in ESP32 and IoT.\nHobbyists and makers looking to expand their skills.\nEngineers and developers seeking practical knowledge on Telegram and ESP32.\nRequirements\nBasic understanding of programming.\nESP32 board and necessary peripherals.\nComputer with internet access.",
      "target_audience": [
        "Anyone with slight interest in making great things",
        "Anyone Interested in Making Amazing IoT Monitoring Device using ESP32",
        "Anyone Interested in not paying for a costly, monthly plan to send notifications. This course teaches you how to do it completely free."
      ]
    },
    {
      "title": "Arduino Multithreading: Run Multiple Tasks at Once",
      "url": "https://www.udemy.com/course/arduino-multithreading-do-more-with-less/",
      "bio": "How to \"Multithread\" an Arduino via Protothreading to execute more than one task at once without interruption",
      "objectives": [
        "Level up Your Arduino Programming Skills with Protothreading",
        "Do two (or more) things at once using Arduino",
        "Coaxing a single-core Arduino to do 3 or more things at once",
        "What is Multithreading",
        "What is Multithreading",
        "Threads Concept",
        "Advantages of Multithreading",
        "Real Multithreading vs Protothreading",
        "Why you should use Multithreading",
        "Getting Started with Protothreading",
        "Circuit Design",
        "Coding",
        "How to implement a library inside an Arduino code without importing it"
      ],
      "course_content": {},
      "requirements": [
        "An Internet Connection",
        "Basic knowledge in Programming"
      ],
      "description": "How to \"Multithread\" an Arduino via Protothreading to execute more than one task at once without interruption.\nArduino's great, but it isn't simple to handle more than one job at the same moment. If you want to do two (or more) things at different intervals simultaneously, you will need protothreading!\nThis course teaches you how to coax a single-core Arduino to do three things at once. For example:\nPulsing a signal without interruption\nIncrementing a variable every second and writing it to the exhibit without interruption\nDisplaying different messages every few seconds and writing them to the display without interruption\nWelcome to this course.\nIn this course, you'll learn Protothreading, which is a way of accomplishing what would usually be a multitasking operation (doing two or more things at once or at different intervals) on an Arduino. In other words, it's \"multithreaded\"! Since the Arduino is a single-core chip, multithreading itself is impossible. So how do we do that? The answer is Protothreading!\nA lot of information is waiting for you inside this course. Join now and start making your own.\nAdvantages of Protothreading\nReactive systems – constantly monitoring\nMore responsive to user input\nThe CPU can handle multiple inputs concurrently\nCan take advantage of parallel processing\nBetter memory management\nA thread can execute concurrently with other threads within a single process.\nEnroll now and get instant access:\nEasy-to-watch video lessons\nPractical exercises\nDownloadable resources\nPremium instructor support\nLifetime access to course updates\nAccess to our exclusive student community\n100% Money-back Guarantee If you're unsatisfied with the course, or if it just isn't for you, we have a 30-day money-back guarantee.\nMy purpose is to make sure you love this course! We're always listening to students and enhancing our courses to make them even better. If you ever have a suggestion on how to make this course better, just let me know!\nWhat are you waiting for? Join now and start learning!\nWhat you will learn\nWrite Arduino code to execute multiple tasks at once using Protothreading.\nCreate a functional system to pulse signals without interruption.\nIncrement and display variable data seamlessly.\nDisplay and update messages on the Arduino without delays.\nUnderstand the fundamentals of Protothreading and its application in Arduino projects.\nImprove your Arduino projects with responsive, multi-tasking capabilities.\nWho is this course for\nBeginners interested in learning advanced Arduino techniques.\nHobbyists and electronics enthusiasts.\nEngineering students and professionals looking to enhance their skills.\nAnyone interested in improving their Arduino projects with multitasking capabilities.\nRequirements\nBasic understanding of Arduino and electronics.\nAn Arduino board with necessary peripherals.\nBasic programming knowledge is helpful but not required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Leveling up Your Arduino Programming Skills with Protothreading",
        "Anyone Interested in Doing two (or more) things at once using Arduino",
        "Anyone Interested in Coaxing a single-core Arduino to do 3 or more things at once",
        "Anyone interested in Getting Started with Protothreading",
        "Hardware developers",
        "Electronics Geeks",
        "Anyone Interested in Learning"
      ]
    },
    {
      "title": "Learning Soldering: Electronics & Surface Mount Components",
      "url": "https://www.udemy.com/course/learning-soldering-electronics-surface-mount-components/",
      "bio": "Complete guide to how to solder through hole & surface mount components, SMD, motherboard, laptop repair, computer, PC",
      "objectives": [
        "How to solder and desolder electronics components",
        "How to use soldering station in the right way",
        "Tips and tricks about soldering operations",
        "How to adjust soldering station in order to protect components while soldering and desoldering it",
        "How to solder through hole & surface mount components"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Learn how to desolder and solder electronics & SMD components": [
          "Important tools to practice soldering",
          "Learn how to desolder & solder SMPS components",
          "Learn how to Desolder & solder power electronics components",
          "Learn how to Desolder and solder Ceramic Capacitors",
          "Learn how to Desolder and solder Resistors and Diodes",
          "Learn how to Desolder and solder polarized capacitors",
          "Learn how to Desolder and solder MOSFETs in laptop motherboard",
          "Learn how to Desolder and solder ICs part 1",
          "Learn how to Desolder and solder ICs part 2",
          "Learn how to Desolder and solder Big ICs on laptop motherboard"
        ]
      },
      "requirements": [
        "No soldering experience needed I will teach you everything you need to know"
      ],
      "description": "9 Reasons why you should choose this course\nThe course will teach you how to solder & desolder electronics & Surface Mount Components.\nThe course is created with perfect care by a computer engineer;\nThe course is not long, so you can complete it in a short time;\nYour inquiries will be answered in a short time with a full explanation of any question;\nA certificate will be provided upon completion of the course;\nYou going to learn important tools to practice soldering;\nYou going to understand everything you need to know about how to solder & desolder electronic components;\nYou going to learn how to use the hot air gun;\nI'm going to teach you many tips and tricks about soldering and much more.\nTopics that we will be discussing in this course are :\nImportant tools to practice soldering;\nHow to Desolder and solder power electronics components,\nSurface mount components technology soldering;\nLearn how to Desolder and solder Ceramic Capacitors;\nLearn how to Desolder and solder Diodes and Resistors;\nLearn how to Desolder and solder polarized capacitors;\nLearn how to Desolder and solder MOSFETs in laptop motherboard.\nLearn how to Desolder and solder ICs and much more.\nI'm going also to teach you many tips and tricks that will make you a hardware professional and have a deep understanding of motherboard repair.\nI will guide you step by step with an easy explanation of this course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nSo what are you waiting for?\nEnroll now and join us.\nI'll love to see you in the class.",
      "target_audience": [
        "Hardware Students and Technicians;",
        "Anyone Who Want to Learn How to Solder Electronic Components Like A Pro"
      ]
    },
    {
      "title": "Introduction to first order filters",
      "url": "https://www.udemy.com/course/first-order-filters/",
      "bio": "Understand, design, and simulate RC and RL, first order filter circuits.",
      "objectives": [
        "Understand the principles and behaviour of RC and RL filters",
        "Calculate cutoff frequency, phase shift, and time constant for first-order filters",
        "Build and test RC and RL filters on a breadboard",
        "Use CircuitLab and TinkerCad Circuits to simulate filter circuits",
        "Create Bode plots and phasor diagrams to analyse frequency response",
        "Use Python to calculate and visualise filter behaviour",
        "Apply filters in real-world applications like audio shaping and noise reduction",
        "Design cascaded filter circuits to sharpen frequency response",
        "Understand and apply key algebra and complex number concepts for filter analysis",
        "Gain practical experience with measurement tools like the Analog Discovery 3"
      ],
      "course_content": {},
      "requirements": [
        "A good understanding of basic electronics concepts, including Ohm’s Law, voltage division, and Kirchhoff’s Laws",
        "Familiarity with AC circuits, reactance, and impedance",
        "Basic algebra skills to rearrange equations, work with ratios, and calculate transfer functions",
        "Some experience with complex numbers and phasors",
        "A basic understanding of Python programming is helpful for following simulation scripts",
        "If you’re new to electronics, I recommend taking my Introduction to Electronics course first",
        "The course includes a primer on algebra and Python basics to help you refresh these skills as needed"
      ],
      "description": "Updated August 2025: Now with Role Play, and PDF companion!\nI have just added interactive Role Play exercises designed to help you apply what you’ve learned in realistic engineering scenarios. In a Role Play, you’ll take on the role of an engineer and engage in structured conversations with a simulated colleague to solve practical design problems. These exercises reinforce your technical understanding and build confidence in real-world decision-making.\nYou can now download the course companion PDF from Lecture 4 in the Introductory section.\nThis PDF includes content that relates to the first section of the course, along with a helpful list of terms and definitions commonly used in analog filter analysis and design.\nI recommend keeping it handy as you progress through the course.\n--\n\n\nThis course introduces the foundational concepts of RC and RL filters, empowering you to understand, design, and analyze these essential circuits. You will explore how these filters control and shape electrical signals through low-pass and high-pass configurations, and learn how to determine critical parameters such as cutoff frequency and phase shift. The course also covers real-world applications of these filters, from audio tone shaping and noise removal to sensor signal conditioning and switch debouncing.\nThe course structure combines short, focused video lectures, clear explanations, and practical activities that build your knowledge progressively. Throughout, you will engage in simulation-based exercises and breadboard experiments, applying your understanding to real-life situations. Key activities include calculating filter responses at various frequencies, visualizing behavior with Bode plots and phasors, and examining how cascading filters can improve performance.\nTo support your learning, you will use Python, CircuitLab, and the Analog Discovery 3 for simulations and practical measurements. If you do not have this hardware, you can still follow along with the demonstrations and Python exercises, using online simulators or your own measurement tools. Downloadable resources and exercises ensure you can apply what you learn immediately, gaining practical skills in designing and analysing RC and RL filters.\nWho is this course for?\nThis course is designed for electronics enthusiasts, hobbyists, and students who already have a solid foundation in basic electronics concepts, such as Ohm’s Law, voltage division, and working with simple circuits. If you have completed my Introduction to Electronics course or have equivalent experience, you are well-prepared to dive into RC and RL filters and expand your understanding of how these essential building blocks shape and control electrical signals.\nWhether you’re looking to reinforce your skills with practical, hands-on experiments or you want to explore real-world applications like audio shaping, sensor conditioning, and noise filtering, this course will guide you step by step. It is an ideal next step for learners who want to bridge the gap between theory and practice, and build confidence in analysing and designing first-order RC and RL filter circuits.\nHardware & Software\nThis course uses a combination of simulation, data analysis, and circuit design tools to support your learning and experiments.\nPython\nPython is used throughout the course for data analysis, visualisation, and calculation of filter responses. If you do not have Python installed, you can download it from the official Python website. The course includes a primer on essential Python skills, and uses the following libraries:\nNumPy for numerical calculations and managing arrays.\nMatplotlib for creating plots and visualising data\nSimulators\nThe course demonstrates filter behaviour using online circuit simulators that make it easy to build and analyse circuits:\nCircuitLab is an intuitive online simulator that allows you to create and analyse circuits, measure filter responses, and experiment with circuit designs.\nTinkercad Circuits is another accessible, web-based tool that lets you build and simulate circuits interactively. It’s ideal for beginners and can be used for exploring basic RC and RL filter behaviour.\nWaveForms (for Analog Discovery 3 users)\nIf you have the Analog Discovery 3 device, you can use the WaveForms software to generate signals, measure filter responses, and capture data. This powerful tool integrates an oscilloscope, waveform generator, spectrum analyser, and other instruments, making it ideal for hands-on experimentation.\nThe course includes detailed instructions and resources to help you set up and use these software tools, even if you are new to them. If you prefer to work with other simulation tools, you can still follow the principles and adapt the examples to your preferred environment.\nHardware\nThe practical activities in this course are designed to be accessible and flexible, using commonly available electronic components. Aside from a mini-breadboard, you will need the following:\nResistors\nA range of resistor values will be useful for constructing RC and RL filters, typically:\n1 kΩ to 100 kΩ for standard filter configurations\nAdjustable resistors (potentiometers) can be used for experiments requiring variable resistance.\nCapacitor\nCommon capacitor values include:\n100 nF to 10 µF for typical RC filter applications\nCeramic or electrolytic capacitors are both acceptable, depending on the experiment.\nInductors\nFor RL filter activities, suitable inductors typically range from:\n1 mH to 100 mH\nValues depend on the desired cutoff frequency and practical considerations in your circuits.\nBreadboard and jumper wires\nA breadboard and jumper wires will allow you to build and test your circuits without soldering.\nOscilloscope (optional)\nAn oscilloscope helps to visualise filter responses in the time domain, but if you do not have one, you can follow along with the demonstrations and simulations in the course.\nSignal generator (optional)\nA standalone signal generator can be a useful tool for testing filter performance with different input waveforms. If you do not have a signal generator, the Analog Discovery 3 or your computer’s audio output (for audio-range signals) can serve as alternatives.\nAnalog Discovery 3 (optional)\nThe Analog Discovery 3 is a powerful, all-in-one instrument that can function as a signal generator, oscilloscope, and spectrum analyser. It’s highly recommended for deeper experiments in filter response and real-world circuit behaviour.\nIf you do not have access to the optional hardware, you can still complete all simulation-based activities and follow along with demonstrations for the hands-on experiments. The course is designed to be accessible and practical, regardless of the hardware you have on hand.",
      "target_audience": [
        "Electronics enthusiasts who want to expand their understanding of filters",
        "Hobbyists interested in practical electronics projects",
        "Students looking to bridge theory and real-world filter applications",
        "Learners who have completed my Introduction to Electronics course",
        "Anyone with a good grasp of basic electronics and algebra wanting to deepen their knowledge in RC and RL filters"
      ]
    },
    {
      "title": "Advanced Computer Hardware Modifications: Colder and Faster",
      "url": "https://www.udemy.com/course/advanced-computer-building/",
      "bio": "Discover Advanced Computer Building Tactics like; CPU Liquid cooling, Storage RAID, and SLI / Crossfire Technology",
      "objectives": [
        "Install and Wire a Liquid Cooling Pump to a Processor",
        "Correctly Apply Thermal Paste to Desktop CPUs",
        "Install and Secure Dual-Slot Radiators in Computer Cases",
        "Intuitively Choose an Option for Increasing Storage Speed and Redundancy",
        "Pass Any Microsoft Test Questions Pertaining to RAID",
        "Setup a Multi-GPU Computer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Advanced Computer Modifications"
        ],
        "Liquid Cooling": [
          "How does \"Liquid Cooling\" work?",
          "Identifying and Prepping your Motherboard",
          "Configuring the Cooling Unit",
          "Installing the Radiator",
          "Securing the Pump",
          "Installing the radiator's fans",
          "Wiring the Pump"
        ],
        "RAID Utilization": [
          "What is RAID setup & What can I gain?",
          "RAID 0",
          "RAID 1",
          "RAID 5",
          "RAID 6",
          "RAID 10",
          "Hardware RAID Setup",
          "Software RAID Setup",
          "Final Notes on RAID"
        ],
        "SLI / Crossfire Technology": [
          "Intro to SLI / Crossfire and What You Need to Set it Up",
          "What you need for Setup",
          "How Multi-GPU Configurations Works to Co-Render Graphics",
          "Real-world Multi-GPU Usage",
          "Installing and Allowing your Cards to Communicate",
          "Enjoy the Increased Performance / Final Notes"
        ],
        "Wrap-up": [
          "Final Thoughts"
        ]
      },
      "requirements": [
        "You should already know the basics about computer hardware",
        "You might want more performance out of your system by choosing new part configurations"
      ],
      "description": "Colder Temps, Faster Storage Speeds, and Performance Graphics Rendering; All crucially important points in an enthusiast's computer user experience.\nLooking to upgrade your computer hardware to achieve any of the points mentioned above?\nIf yes, you've come to the right course.\nFor those of you out there who already have a little know-how about computer hardware (or have taken my course; How to Build a Computer from Scratch: Complete Blueprint), you know there's more out there that you can do to enhance your hardware's performance.\nExtreme heat might be keeping you from overclocking to that next level.\n--> I'll be going over the most effective method of CPU Cooling; Closed-loop Liquid Cooling\n\nHard drive fails might have caused you lots of headache in the past. (Or you're trying to take pre-cautionary steps against one!)\n--> Learn about the various tricky aspects about RAID setups. I'll show you how you can increase data read/write speeds AND / OR prepare your computer so that you won't loose data if a drive crashes!\nCan't play that new game on MAX settings?\n--> Learn about the workings of Multi-GPU technology (Multiple Graphics Processing Units) to massively enhance your computer's rendering capabilities.\n\nTake your computer build to the next level.",
      "target_audience": [
        "Anyone who want's faster physical storage (HDD / SSD Read / Write Speeds)",
        "Gamers who want to learn more about Mutli-GPU Technology ( SLI / Crossfire )",
        "Performance Enthusiasts who need to keep their CPU at Colder Temps",
        "Anyone looking for ideas to upgrade their custom-built computer"
      ]
    },
    {
      "title": "Computer Vision Projects with Arduino | 2 Projects",
      "url": "https://www.udemy.com/course/advanced-computer-vision-project/",
      "bio": "Control The LCD Display With Facial Expressions! (Deep Learning, OpenCV and Arduino)",
      "objectives": [
        "Serial communication between Python and Arduino,",
        "Face detection module (Landmarks),",
        "LCD application and",
        "Image Processing (OpenCV) project."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Arduino,",
        "Basic knowledge of Python,",
        "Basic knowledge of OpenCV,",
        "Basic knowledge of C/C++,"
      ],
      "description": "Hi! Welcome to the Advanced Computer Vision Project With Arduino (OpenCV) course.\nThis course provides you to control an LCD display with your facial movements. With this course, we will learn to reach our facial features with the deep learning method.\nMain topics you will learn;\nLCD Screen: With this section, you will learn how to use the LCD screen.\nDeep Learning: With this section, you will learn to draw your facial features and change the physical features of the landmarks you draw.\nComputer Vision Project (Deep Learning): With this section, you will learn to automatically print out on the LCD screen according to our facial expressions.\nWho is this course for?\nAdvanced students who want to build deep learning project with Arduino,\nAdvanced students who want to build serial communication between Python and Arduino and\nAdvanced students who want to build lcd screen applications.\n\"You are never too old to set another goal or to dream a new dream.\" - C.S.Lewis\n\"Do the difficult things while they are easy and do the great things while they are small. A journey of a thousand miles begins with a single step\" - Lao Tzu\nYou get the best information that I have compiled over years of trial and error and experience!\nBest wishes,\nYılmaz ALACA",
      "target_audience": [
        "Advanced students who want to build deep learning project with Arduino,",
        "Advanced students who want to build serial communication between Python and Arduino and",
        "Advanced students who want to build lcd screen applications."
      ]
    },
    {
      "title": "Learn to Repair & Troubleshoot Electronics Device",
      "url": "https://www.udemy.com/course/learn-to-repair-troubleshoot-electronics-n/",
      "bio": "electronics Repair & Troubleshoot",
      "objectives": [
        "Understanding how to use Digital Multimeter with safety practice.",
        "Learn how to measure AC and DC voltage, AC and DC current and resistance(using Digital multimeter)",
        "Learn how to test faulty resistor, electrical switch, fuse, transformer, capacitor and other electrical component.",
        "Resistor Colour Code Calculation",
        "Continuity Test",
        "Testing Resistor",
        "How To Perform Current Test",
        "How To Test AC/DC Voltage",
        "Testing Variable Resistor",
        "Continuity Test",
        "Testing Coil/Inductor",
        "Identifying faulty diode",
        "Testing Switches",
        "Testing Bridge Rectifier",
        "Testing Light Emitting Diode (LED)",
        "Testing Zener Diode",
        "Testing Linear Transformer",
        "Testing Capacitor",
        "Testing Transistor",
        "Testing Transformer",
        "Testing computer power supply",
        "Symptom of faulty personal computer power supply",
        "At the end there is practical troubleshooting practice"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction Learn to Repair and Troubleshooting Electronics",
          "How to use Digital Multimeter",
          "Principles of Troubleshooting",
          "Lec 5-Resistors",
          "Types of resistors",
          "Calculating the values of Color coded resistors",
          "How to Use Digital Multimeter",
          "How to Use Digital multimeter",
          "How to Use Digital multimeter",
          "Digital Multimeter range selection",
          "DC voltage Measurement and DC voltage testing",
          "Measuring AC voltage",
          "Testing Continuity",
          "Testing Resistance",
          "Testing Resistance",
          "Testing variable resistance",
          "Repair and troubleshooting electronics device",
          "Learn to repair and Troubleshoot Electronics exam",
          "Electronics Assignment One",
          "Fuse",
          "Fuse general Description",
          "Testing Fuse",
          "Testing Fuse",
          "Diode General Description",
          "Electronics Power Supply Lec.1",
          "Electronics Power Supply Lec.12"
        ],
        "Testing Inductor": [
          "Testing Inductor Module Overview",
          "Introduction to Inductor",
          "Introduction to Inductor part 2",
          "Inductor property",
          "Purpose of Inductor",
          "Troubleshooting Inductor",
          "troubleshooting inductor part 2",
          "Practical Demonstration"
        ]
      },
      "requirements": [
        "No previous electronics skill is needed. You will learn everything you need to know."
      ],
      "description": "Learn to Repair & Troubleshoot Electronics device\nIs a  course that transform everybody to electronics technician. This course can be taken by all level of trainees like beginners, hobbyist, technical college and university students, Engineers and trainees from different field  of study  can take the course without any prerequisite.  I have spent countless hours in teaching, testing and analyzing electronic components and found out the right and accurate ways to design the course. This course have worked for thousands of trainees and can work for you too.\nTo  be an electronics technician, You Don’t Even Need A Certificate, Diploma Or A Degree In electrical and Electronic Engineering; In Order To Start Troubleshooting and Repairing Electronics Equipment! It’s So Simple and Everyone Can Follow My lecture and Tips Of Troubleshooting!\nThe Good News Is ,Once You Have Completed this course and Start Practicing From The Information, I Can Guarantee everybody, You Will Be Far Better than A Degree Holder engineers! if you do have someone(expertise like me) to hold you by the hand through the whole process, you will master the course with in few days.\nAfter completing this  course everybody will be equipped with basic electronics repairing and troubleshooting knowledge and skill. What I want to give emphasis is at the end of this course, with some practical exercise you will be better than Bachelor degree graduate in troubleshooting and repairing, otherwise within one month period there is a  money back option. Ladies and Gentlemen, If you are not happy or if the course can not add any value on you, no problem I Will refund you with in one month.\nTherefore:\nIf you are interested in electronics, Never MISS this opportunity, you are on the right track, Get enrolled now and be certified.\nGet enrolled and Empower yourself!",
      "target_audience": [
        "The course is designed for everybody! Specially for those who want to repair the electronics devices this course is ideal."
      ]
    },
    {
      "title": "Arduino Solar Tracker",
      "url": "https://www.udemy.com/course/arduino-solar-tracker-track-sun-arduino-solar/",
      "bio": "Make Your Own Arduino Solar Tracker in a Step by Step Manner, learn and have fun Practicing Arduino",
      "objectives": [
        "Make your own Arduino Solar Tracker",
        "Track Sun Light then Move the Solar Panel towards it to improve it's efficiency .",
        "Learn Working Principle of Light Detectors",
        "Interface Light Detectors with Arduino",
        "Move Motors depending on the amount of Sun Light available to direct Solar Panel.",
        "Interface different type of electronic elements with Arduino."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Who We Are?",
          "Exploring Solar Tracking Concepts with Arduino",
          "Very Important Note: Review Process",
          "Quiz",
          "How it works",
          "Section Summary",
          "Reading Material"
        ],
        "Requirements": [
          "Section Intro",
          "Hardware requirements",
          "Hardware Requirements and Component Analysis",
          "Section Summary",
          "Reading Material"
        ],
        "Hardware Requirements": [
          "Section Intro",
          "What is LDR",
          "What is Servo Motor",
          "Exploring the LDR (Light Dependent Resistor) and Servo Motor for Embedded Projec",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Download and Install Wiring and Coding Software": [
          "Section Intro",
          "Software Requirements",
          "Arduino IDE",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Schematic Diagram": [
          "Section Intro",
          "Schematic Wiring Diagram",
          "Circuit Design",
          "Developing the Schematic Wiring Diagram and Circuit Design for an Arduino Projec",
          "Section Summary",
          "Reading Material"
        ],
        "Coding": [
          "Section Intro",
          "Coding Part1",
          "Coding Part2",
          "Coding Part3",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Download and Install Software Section": [
          "Section Intro",
          "Download and Install Wiring Software",
          "Download and Install Arduino IDE",
          "Section Summary",
          "Reading Material"
        ],
        "Who we are?": [
          "Section Intro",
          "Practice Test",
          "Who we are?",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Presenting a Solar Tracker Project Using Arduino",
          "Section Summary",
          "Reading Material"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Arduino",
        "A Will to apply, not just watch"
      ],
      "description": "Make Your Own Arduino Solar Tracker in a Step by Step Manner, learn and have fun Practicing Arduino\nWelcome to this course.\nThis course will teach you how to make your own Arduino Solar Tracker at home using Light Sensitive Sensors and increase the efficiency of your solar panel by up to 40%. This guide will take you in a step-by-step manner to understand each component, why we use it, what it does, and how to wire it up, starting with the basics of Arduino and ending with Light Sensitivity Sensors and Motors used to drive the Solar Panel.\nYou will learn the actual working principle of Sunlight Detection, what an LDR (Light Dependent Resistor) is, and how to interface, wire, and code it correctly to control the efficiency of your solar panel. Making your Arduino Solar Tracker system and initiating alarm actions will seem easy after taking this course.\nAfter this course, you will be able to make your own homemade Arduino Solar Tracker.\nAll connections are explained in detail, and you can choose the number of light detectors you wish to use to improve the device's accuracy.\nWhy You Should Take This Course:\nLearn and practice the fundamentals of Arduino.\nBuild a functional solar tracker using inexpensive materials.\nEasily make changes to get better performance.\nLearn how to track the sun's movement with an Arduino.\nWork with series, parallel circuits, resistors, and capacitors.\nNo prior knowledge is necessary; all concepts are explained in detail.\nGoal From This Course:\nMake your own Arduino Solar Tracker that works efficiently and effectively. Track sunlight and move the solar panel towards it to improve its efficiency.\nWhat You Will Learn in This Course:\nHow to make an Arduino Solar Tracker.\nHow to deal with light sensors using Arduino.\nHow to move motors depending on the amount of sunlight available to direct the solar panel.\nHow to interface different types of electronic elements with Arduino.\nHow Arduino can make your life easier.\nHow to program, burn a code, and wire Arduino and light detectors.\nWhat are the right tools that you need to start making amazing projects?\nUser Testimonials: \"This course provided a practical approach to building a solar tracker. I highly recommend it for anyone interested in renewable energy projects!\" - Lisa M.\n\"A great course that explains the concepts and practical steps clearly. I built my own solar tracker with ease!\" - John P.\nAuthor Bio: Ashraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world. With over 250,000 students from around the world, Ashraf’s online courses have helped many to kick-start their careers in the industry.\nCall to Action: Enroll now to master Arduino Solar Tracker and take your renewable energy projects to the next level!\nFAQ: Q: Do I need prior experience in electronics or programming to take this course? A: No, this course is designed for all levels.\nQ: Will I need to buy additional equipment? A: The course provides a list of necessary components, all of which are affordable and easily accessible.\nWhat You Will Learn\nDesign and build an Arduino Solar Tracker\nInterface light sensors with Arduino\nControl motors based on sunlight detection\nImplement series, parallel circuits, resistors, and capacitors\nWho Is This Course For\nArduino enthusiasts\nHobbyists interested in renewable energy projects\nBeginners in Arduino programming\nAnyone looking to build a solar tracker\nRequirements\nAn Arduino board and basic electronic components\nBasic understanding of using a computer\nNo prior programming or electronics experience needed\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects. They strive to provide deep, hands-on experience in their courses, offering step-by-step blueprints on various topics.\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and maker. He has been the Chief Educational Engineer at Educational Engineering Team since 2007, and his mission is to explore new trends and technology to help educate the world. His online courses have helped over 250,000 people worldwide to build successful careers.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Arduino Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning How Light Detectors works",
        "Anyone Interested in Learning How to Increase Solar Panel Efficiency using Arduino",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning How to make Arduino Solar Tracker"
      ]
    },
    {
      "title": "Master ESP32 Web Servers",
      "url": "https://www.udemy.com/course/esp32-communication-web-server/",
      "bio": "Build and Control Your Own ESP32 Web Server in Just 1 Hour",
      "objectives": [
        "What is a WebServer?",
        "How to create a web server.",
        "How to set up Your arduino IDE with ESP32 board.",
        "How to program the ESP wirelessly (OTA).",
        "How to receive data via the web.",
        "How to control outputs via the web."
      ],
      "course_content": {},
      "requirements": [
        "this needs a computer or mobile",
        "ESP32 Board",
        "Arduino IDE",
        "Fritzing App",
        "DHT11 Sensor  Module",
        "Jumper wires"
      ],
      "description": "Do you want to master ESP32 and create your own web server quickly and efficiently? Master ESP32 Web Servers is the perfect course for you! This comprehensive, hands-on course is designed to help you build a fast and reliable web server with ESP32 in less than one hour.\nCourse Overview:\nThis course will introduce you to the ESP32, a powerful and versatile Wi-Fi microcontroller. You will learn how to use its built-in Wi-Fi capabilities to build a web server that can serve HTML pages to clients on the network. The course also covers how to use the ESP32's GPIOs to control LEDs and other devices. By the end of this course, you will have a solid understanding of how to use the ESP32 in your own projects.\nWhat You'll Learn:\nIntroduction to ESP32: Understand the architecture and unique features of ESP32.\nSetting Up Your ESP32: Learn to download and install necessary software.\nBuilding Web Servers: Create standalone web servers to control outputs and receive sensor data.\nOTA Programming: Program ESP32 over-the-air using Arduino IDE.\nReal-World Applications: Develop practical projects, including controlling LEDs and measuring temperature and humidity using DHT11 sensors.\nWho Is This Course For:\nBeginners in Electronics: Individuals new to microcontrollers and web server programming.\nElectronics Hobbyists: Enthusiasts looking to expand their skills and create new projects.\nSTEM Students and Educators: Those involved in STEM education seeking practical, hands-on experience.\nProfessional Developers: Developers aiming to integrate ESP32 into their projects.\nRequirements:\nBasic Electronics Knowledge: A fundamental understanding of electronics is recommended.\nComputer Access: A computer with internet access.\nESP32 Kit: ESP32 microcontroller board for hands-on practice.\nAbout the Instructor:\nEducational Engineering Team is a renowned group of skilled engineers with over 13 years of experience in teaching and practical projects. Led by Ashraf, a seasoned educator and mechatronics engineer, the team has taught over 250,000 students worldwide. Known for their clear and comprehensive teaching style, the team has created over 100 courses on Udemy. Ashraf’s mission is to explore new trends and technology and help educate the world, making complex topics easy to understand and accessible.\nTestimonials:\n\"This course is fantastic! I built my first web server in no time and the instructions were clear and easy to follow.\" - John D.\n\"A great course for anyone looking to get started with ESP32. The hands-on projects are really helpful.\" - Emily S.\n\"Highly recommend this course! Ashraf and the team make learning ESP32 enjoyable and straightforward.\" - Mark P.\nFAQ Section:\nWho can benefit from this course? This course is ideal for beginners, electronics enthusiasts, STEM students, and professional developers.\nWhat are the payment options? Various payment plans are available, including one-time payments and installment options.\nIs there a refund policy? Yes, we offer a 30-day money-back guarantee if you're not satisfied with the course.\nWhat equipment do I need? You'll need a computer with internet access and an ESP32 microcontroller board.\nCan I communicate with peers and instructors? Yes, the course includes forums and Q&A sections for interaction with peers and direct support from instructors.\nCall to Action: Enroll Now and Master ESP32 Web Servers in Just 1 Hour!",
      "target_audience": [
        "Engineers",
        "Geeks",
        "Students"
      ]
    },
    {
      "title": "PyUVM Series Part 1 : Python Fundamentals",
      "url": "https://www.udemy.com/course/pyuvm-series-part-1-python-fundamentals/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "Fundamentals of Python",
        "Basics of Datatypes and opeartors",
        "Fundamentals fo Loops",
        "Fundamentals of List, Tuple and Dictionary",
        "Using extension in python"
      ],
      "course_content": {},
      "requirements": [
        "Fundamentals of C, Digital Electronics"
      ],
      "description": "In today's rapidly evolving landscape of Very Large Scale Integration (VLSI) engineering, proficiency in Python programming has become indispensable. This comprehensive course is meticulously crafted to empower VLSI engineers with the foundational skills necessary to navigate the complexities of modern VLSI design and verification processes. Python, renowned for its versatility and power, stands at the forefront of programming languages, offering a robust toolkit that aligns seamlessly with the unique demands of VLSI engineering.\nThe course is strategically designed to address the specific needs and challenges inherent in the VLSI domain. Participants will embark on a journey that not only introduces them to the fundamental principles of Python programming but also delves deeply into its tailored applications within VLSI design and verification. As technology continues to advance, Python has emerged as a linchpin in the VLSI engineer's toolkit, providing a flexible and efficient platform for addressing the intricate demands of Very Large Scale Integration.\nPython's ascendancy in VLSI engineering is underscored by its ability to enhance productivity, automate routine tasks, and seamlessly integrate with existing hardware description languages (HDLs) and simulation tools. As the VLSI landscape continues to demand innovation and efficiency, this course serves as a crucial bridge, empowering engineers to harness the full potential of Python in their daily workflows.",
      "target_audience": [
        "Anyone interested in exploring python for RTL Verification"
      ]
    },
    {
      "title": "Jumpstart the Raspberry Pi Pico",
      "url": "https://www.udemy.com/course/raspberry-pi-pico/",
      "bio": "A comprehensive Course to get Beginners immediately started with the new Raspberry Pi Pico (RP2040)",
      "objectives": [
        "Raspberry Pi Pico and MicroPython",
        "Programming in Windows and Linux using Thonny (a free IDE)",
        "Communication Protocols of the Raspberry Pi Pico",
        "Internal Peripheries of the Raspberry Pi Pico",
        "Introduction into Soldering",
        "How to connect the Raspberry Pi Pico to other Periphery (e.g. Arduino)"
      ],
      "course_content": {},
      "requirements": [
        "A fundamental knowledge about Python (Loops, Functions)",
        "Fundamental knowledge about breadboards and wiring"
      ],
      "description": "I tailored this course to get you jump-started for the newest family member of the Raspberry Pi family: The Raspberry Pi Pico. After a short soldering session and software installation for your Windows or Linux system, I at once dive into practical topics such as:\nTimers and Counters\nPulse Width Modulation\nInterrupts\nAnalog-to-Digital Converter (ADC)\nCommunication Protocols (SPI, I2C/TWI, UART)\nConnections to other peripheries, sensors, and actuators (Example: Arduino) to the Raspberry Pi Pico\nFirst, each topic explains what the function does and how it works. Practical examples, tips and tricks, and exercises to try out the topic by yourself follow. To maximize the take-away from the course, the exercises offer hints and tips, in case you get stuck somewhere. If nothing works, I give solutions in well-documented source code for your experiments and modifications. In addition, I show practical examples, of how to connect the periphery to the Raspberry Pi Pico, how to protect it against over-voltage, and how to use it with larger electrical components such as motors, so that you can enjoy your Raspberry Pi Pico as long as possible.\nThis course follows the motto: “Learning by Doing“ and you will need a few hardware components to complete the course successfully. I list them in the first lecture, available for free. In addition, I assume that an enrolled student has some Python programming experience and knows how to write functions, loops, and how to import modules. If you already know any other programming language, you will not face any issues and pick up Python on the fly.\nI designed this course specifically for the Raspberry Pi Pico so that it offers everything in one place. After completing this course, the successful students will have the experience to plan and carry out their own projects for the Raspberry Pi Pico and learn the fundamentals of omnipresent peripheries encountered in the domain of embedded systems.",
      "target_audience": [
        "Python Developers curious to try out the novel Raspberry Pi Pico",
        "Entrepreneurs who want to lauch a product or start-up"
      ]
    },
    {
      "title": "STM32 Practical Buck Converter Implementation and Control",
      "url": "https://www.udemy.com/course/stm32-buck-converter-control-mastery/",
      "bio": "Voltage Control, Current Control, Average Current Mode Control",
      "objectives": [
        "Understanding Closed-Loop Control Principles",
        "Firmware Development for Current Control",
        "Firmware Development for Voltage Control",
        "Firmware Development for the Implementation of Average Current Mode Control"
      ],
      "course_content": {
        "Theoretical Overview of the Buck Converter": [
          "Disclaimer",
          "Buck Converter Design",
          "Controller Design with Octave"
        ],
        "Implementation of Digital Control of the Buck Converter": [
          "Hardware Outline",
          "Firmware Peripheral Initialization with CubeMX",
          "Manual Firmware Initialization - Part 1",
          "Manual Firmware Initialization - Part 2",
          "Firmware Implementation of Voltage Control",
          "Firmware Implementation of Current Control"
        ],
        "Average Current Mode Control of the Buck Converter": [
          "Firmware Implementation of ACMC"
        ],
        "Conclusion": [
          "Thank You!"
        ]
      },
      "requirements": [
        "Participants should have a basic understanding of electronic components, circuits, and electrical concepts, including voltage, current, and power.",
        "Ideally, participants should have access to the hardware components required for practical implementation. This may include an STM32 development board, buck converter circuitry, and associated components.",
        "Enthusiasm for learning and a willingness to experiment and troubleshoot are essential, as implementing control systems may involve debugging and fine-tuning."
      ],
      "description": "This course offers a comprehensive and hands-on exploration of digital closed-loop control systems for buck converters, with a special focus on average current mode control. It is meticulously designed to cater to a wide spectrum of participants, including electrical and electronics engineers, embedded systems enthusiasts, STM32 developers, and anyone with a passionate interest in power electronics. The primary objective is to provide participants with the knowledge and practical skills necessary to design, implement, and optimize robust and efficient control systems from the ground up.\nA key emphasis of this course is on achieving precise control of output voltage and output current in buck converters. Participants will gain a deep understanding of the underlying principles and practical techniques required for maintaining the output voltage within desired specifications. Additionally, the course focuses on efficient current control, preventing overloading or underutilization of the system through well-crafted firmware and control algorithms.\nOne of the unique features that sets this course apart is its concentrated attention on average current mode control. Participants will not only grasp the theoretical foundations but will also develop hands-on expertise in implementing this advanced technique. Average current mode control is a powerful tool for reducing output voltage ripple, enhancing transient response, and fine-tuning control precision in buck converters.\nThe course's hands-on approach ensures that learners not only understand the theoretical concepts but can also put them into practice. Through practical exercises and real-world examples, participants will work with actual hardware components, STM32 microcontrollers, and buck converter circuits, gaining the practical skills needed to effectively implement digital closed-loop control systems.\nBy enrolling in this course, participants will be well-prepared to tackle complex projects, advance their careers in power electronics and control systems, and contribute to innovation in this dynamic field. Whether you are a seasoned engineer or an enthusiastic newcomer, this course provides a pathway to expertise in digital closed-loop control systems, where precise output voltage and current control are at the forefront of the learning experience.",
      "target_audience": [
        "This course is highly relevant to engineers, both students and professionals, who work in the field of electrical and electronics engineering, as it covers control systems and power electronics concepts that are essential for their work.",
        "Those interested in power electronics and switching converters who want to gain a deeper understanding of how to implement control systems in such circuits.",
        "Enthusiasts and hobbyists interested in building their own power electronics projects and exploring closed-loop control systems for personal or hobby purposes.",
        "Researchers and academics involved in power electronics, control systems, or related fields who want to gain hands-on experience and practical knowledge in digital control of buck converters."
      ]
    },
    {
      "title": "Robotics for Beginners – Learn the Basics - Part 1",
      "url": "https://www.udemy.com/course/robotics-for-beginners-learn-the-basics-part-1/",
      "bio": "Learn programming basics and techniques of Robotics from an expert!",
      "objectives": [
        "Learn project development using Arduino IDE",
        "Learn Arduino Programming",
        "How to run Buzzers, LED, and LCD Display",
        "Learn the basics of robotics, electronics, and programming"
      ],
      "course_content": {},
      "requirements": [
        "Some basic inexpensive tools and hardware components as explained in each video"
      ],
      "description": "The term ‘Robot’ is derived from the Czech word ‘ Robota’ which means ‘ forced labour’. The science of robotics only came about in the 20th century, but the first instances of mechanical device-built dates back to Egypt in 3000 B.C. Egyptian water clocks utilized human figurines to strike the hour bells. Robotics has come a long way; the expansion and advancement are radical and include machines capable of assembling other machines and even robots which could be mistaken for human beings. Robotics is the amalgamation or intersection of science, engineering and technology that deals with the design, construction, operation, and application of robots. Today robotics is a very diverse field that has applications in every field from industry, manufacturing, laboratory work, or military, even to home automation.\nTo master Robotics, you will have to learn coding and programming. Right from comprehending the knowledge of building electronic circuits to programming basics, data types, conditionals, loops, and functions to understanding the working of different components.\nSounds too complicated. But it’s really simple. People from any age group could learn this skill and become an expert. Want to learn Robotics? Join the Mittsure Robotics course now!\nMittsure offers an online learning Robotics course. Online learning is the new trend and now you can join the Mittsure family from the comfort of your home.\nNow you can also become the person who can build programming and electronic circuits from scratch and open your doors to a whole new world of Robotics to explore.\nAbout The Course\nYou don’t need any prior experience or knowledge of Robotics, as this course is designed for absolute beginners.\nRegister with us today to bring out the science whiz in you!\nThe course is divided into 30 short sessions. Though this is an online course, the course content is available in the form of videos, and this can be accessed anytime. People might lose interest after a few minutes; hence, the length of the videos is short for making learning fun.\nNot only this, but you can also register for our live classes for a peer learning experience. Ask questions and clarify your doubts in the presence of a trainer.\nSo, are you ready to build, code, and tinker with robotics and train your brain muscles to enhance your skills?\nTo become a robotics expert, visit the Mittsure Robotics course available on the website.\nRegister now on the website and start your journey to becoming a Robotics wizard!\nAbout the Trainer\nRobotics has been a passion and profession for Vishal Singh Bais, the trainer for Mittsure’s Robotics course. Vishal is a self-motivated individual who is passionate about all things robotics.",
      "target_audience": [
        "Individuals about the age of 8 and above who wish to learn Robotics.",
        "No prior experience is required. The course is for absolute beginners.",
        "Individuals who are interested in learning how Robotics works.",
        "Individuals who want to improve their logical thinking through graphical- interface coding.",
        "Individuals who want to develop analytical skills, problem-solving, and patience in trial-and-error methods."
      ]
    },
    {
      "title": "Biomedical Project: Heart Beat Monitor using 8051 Controller",
      "url": "https://www.udemy.com/course/biomedical-project-heart-beat-monitor-using-8051-controller-healthcare/",
      "bio": "Biomedical Engineering Project: Comprehensive Course on Heart Pulse Rate Monitoring System using 8051 Microcontroller",
      "objectives": [
        "Health Care Project on Simulation of Heart Beat System on PROTEUS Software",
        "Interfacing LCD to 8051 Microcontroller",
        "Using 8051 Microcontroller as a TIMER",
        "Using 8051 Microcontroller as a COUNTER",
        "Embedded System",
        "Embedded C Programming",
        "Working of Heart Beat Sensor (PPG Sensors)"
      ],
      "course_content": {},
      "requirements": [
        "Students should have a strong command of C programming.",
        "Students should have a solid understanding of the 8051 microcontroller.",
        "Students should be proficient in operating KEIL software.",
        "Students should be skilled in using PROTEUS software.",
        "Basic understanding of electronics"
      ],
      "description": "Embark on an exhilarating voyage through the intersection of biomedical engineering and cutting-edge electronics with our course, \"Heart Beat Monitoring using 8051 Controller.\" Here, we'll unveil the intricate art and science of crafting a Heart Beat Monitor, a pivotal instrument in the realm of modern healthcare. Join us as we unravel the mysteries that power this life-changing technology, and equip yourself with the skills to shape the future of healthcare.\n\n\n@ Course Roadmap:\nModule 1: Understanding the Pulse-Working of Heartbeat Sensor (PPG Sensor)\nDiscover the core principles of how a Pulse Rate sensor (PPG sensor) functions.\nDive into the science behind measuring heartbeats, and explore the role of light in this process.\nModule 2: Mastering Time - Using 8051 as a Timer\nLearn the intricacies of the 8051 microcontroller and how to harness it as a timer.\nUnderstand the precise timing required for heartbeat monitoring.\nModule 3: Displaying Vital Data - Interfacing LCD to 8051 Controller\nExplore the world of Liquid Crystal Displays (LCDs) and how to connect them to the 8051 controller.\nCreate a user-friendly interface for presenting heart rate data.\nModule 4: Coding Brilliance - C-Programming on KEIL Software\nStep into the world of C programming with KEIL Software.\nWrite and implement the code necessary for processing and displaying heart rate information.\nModule 5: Bringing It All to Life - Circuit Simulation on PROTEUS Software\nSimulate the entire project on PROTEUS Software to visualize the system in action.\nTroubleshoot and refine your circuit before moving to real-world implementation.\n\n\nBy the end of this course, you will have a deep understanding of biomedical technology, microcontroller programming, and the mechanics behind a Heart Beat Monitoring System. You will be ready to embark on your own projects and explore the limitless possibilities of electronics in the healthcare field.\nJoin us on this educational journey, and let's explore the realm of biomedical electronics together. Enroll today and take the first step towards creating innovative and life-changing projects!",
      "target_audience": [
        "Biomedical Engineers",
        "Biomedical Projects",
        "Microcontroller Learners",
        "8051 Controller projects",
        "Embedded Engineers",
        "Embedded System",
        "Embedded C",
        "Health Care IT Project",
        "Health Care",
        "Electrical Engineers",
        "Instrumentation Engineers",
        "Electronic Engineers"
      ]
    },
    {
      "title": "MicroPython Mega Course: Build IoT with Sensors and ESP8266",
      "url": "https://www.udemy.com/course/micropython-mega-course-build-iot-with-sensors-and-esp8266/",
      "bio": "Learn Micro Python , ESP8266, Home Automation, Sensors: Temperature, Humidity, Light, Actuators: Relay",
      "objectives": [
        "Program IoT devices using MicroPython (Python for Microcontrollers)",
        "Build IoT",
        "Sensor Interfacing with ESP8266: Light, Temperature and Humidity Sensing",
        "Actuator Interfacing with ESP8266",
        "Hardware (Electronics) Interfacing",
        "Use IoT Cloud to Upload Data (Collect)",
        "Use IoT Cloud to Apply Condition (Analysis)",
        "Act on IoT Data (Act)"
      ],
      "course_content": {},
      "requirements": [
        "Curious and Ready to Learn"
      ],
      "description": "Learn MicroPython from Scratch, No prior programming knowledge is required.\nIn this course, you will learn to Program ESP8266 with Micro Python Programming Language to\nAccess GPIOs (Blinking LEDs, Using Pull Up resistors, Interfacing Button)\nHandle Interrupts\nUse Inbuilt Analog to Digital Converter\nRead Temperature, Light, Humidity Sensors (LDR, LM35, DHT)\nManipulate Environment with Actuators\nUpload Data to IoT Cloud\nRead Data from IoT Cloud\nControl Devices using IoT Data\nImplement Home Automation\nThis course is designed for beginners with very little or no programming knowledge. The course will start by identifying the differences between micropython and other programming languages targetted for low computing devices such as ESP8266 or ESP32 etc. Then you will learn to install the IDE for MIcroPython, in this course we have used uPyCraft, but you can your other IDEs as well. The target device for developing Internet of Things Devices (IoT) is ESP8266 - NODEMCU. You will learn about the various features of ESP8266, its pin configuration, its hardware capabilities, and other important parameters which are required to develop IoT devices.\nThen the course will gradually gear up and you will be able to interface simple devices such as LED, Switches with ESP8266 NODEMCU. You will also learn the concept of interrupt and its importance in the field of embedded systems and IoT, you will also perform hands-on experiments on interrupts.\nNow the course will further gain its pace and you will come across analog to digital converter and you will learn to interface analog sensors such as Light-dependent Resistors (LDR), LM35 Temperature sensor, with NODEMCU and get values from these sensors.\nPulse width modulation (PWM) is a very important concept which offers many industrial applications, we will learn to generate to PWM wave with variable duty cycle and variable frequency, we will also learn to control the brightness of LED using PWM.\nThe next concept is WEBREPL where we will learn to send codes or other information to our NODEMCU wirelessly without connecting NODEMCU to your PC. This opens many application areas.\nHere we will also learn about Relays using which we will able to control AC appliances like Bulb or Fan etc. We will also explore DHT11 which is one more sensor to read the temperature, it is also used to read humidity.\nFrom here we will move towards developing IoT devices. First, you will learn to connect your device with Access Point, then you will learn about the cloud Platform \"ThingSpeak\". here you will learn to create an account on ThingSpeak, create channels to upload data, upload data using a computer browser to your thingspeak channel. Get data from the cloud to your NODEMCU device.\nNow you will develop a project Home Automation using your ESP8266 NODEMCU. In this project you will learn to send temperature data to the cloud, the cloud will check the temperature data and will send a command to other distant located devices.\n\nConclusion: This course is for beginners and it will give you a good start to your journey of Internet of Things, and in this process, you will learn a programming Language \"MicroPython\", You will learn to interface Sensors, and actuators (hardware) with your ESP8266 device.\n\nHappy Learning !!",
      "target_audience": [
        "Beginner with little or no prior knowledge of electronics & programming curious about designing IoT systems themselves"
      ]
    },
    {
      "title": "Learn Laptop repairing component level",
      "url": "https://www.udemy.com/course/learn-laptop-repairing-component-level/",
      "bio": "chip level laptop repairing including disassembling identifying components and troubleshooting",
      "objectives": [
        "Laptop repairing step by step from beginner to expert level"
      ],
      "course_content": {},
      "requirements": [
        "Any one who is technically inclined"
      ],
      "description": "This laptop repairing course is intended for the technically inclined person, beginner or experienced. It will be helpful if you have an understanding of physics and electronics, not a must. The course is designed as learning by doing and concentrate on the symptoms and problem areas of the modern laptop. I do not use confusing terms or jargon. This course is suitable for those who are interested in repairing their own laptops or wish to make it a career. The course will help you understand how a laptop fails and how to troubleshoot it and repair it. We will go through many sections which will show you what tools are required for the job, and  how to disassemble and reassemble a laptop, identify motherboard components and how to solder and de-solder a component. On the completion of this course you will be  equipped with the skills required for laptop repairing. I have taken a lot of time and effort to see that this course is comprehensive and understandable to students.",
      "target_audience": [
        "Beginner computer technician who want to learn laptop repairing"
      ]
    },
    {
      "title": "Building a Thing for the Internet of Things IoT",
      "url": "https://www.udemy.com/course/building-a-thing-for-the-internet-of-things/",
      "bio": "A hands on, step-by-step guide to bringing your idea to life, from start to Kickstarter",
      "objectives": [
        "Understand development options for building a \"Thing\"",
        "Build a representative \"Thing\"",
        "Know how to connect to a cloud service from an embedded device",
        "Know how to build with Eclipse and debug on an embedded device"
      ],
      "course_content": {},
      "requirements": [
        "Basic developer and/or engineer skills",
        "Willingness to plug in some cables and jumper wires",
        "Willingness to type a few commands on a command line",
        "Optionally, an Intel Edison, breadboard and miscellaneous components to build the \"Thing\""
      ],
      "description": "What do the Apple Watch, Nest thermostat, Amazon Echo, and the Pebble smartwatch have in common? They’re all “things” in the Internet of Things, a worldwide network of soon-to-be- 40 Billion devices communicating with each other, the cloud and our phones.\n\nThis course will lead you through the design, development and prototyping of a representative “Thing” and show you how to prepare to launch a crowd funding campaign to finance production.\nStarting with an exploration of what is the Internet of Things and what exactly a “Thing” is, students will learn the steps from idea to prototype including:\nSelecting a development platform for your hardware\nSelecting the right programming language for your requirements\nInstalling development tools and updating firmware\nBuilding a prototype device using a breadboard and Intel Edison\nWriting firmware\nConnecting to a cloud service\nBuilding an iOS companion app\nPrepare for real-world production\nUnderstand how to launch on Kickstarter\nOver 45 lectures and more than 4 hours of content\nUnderstand the options for developing a “Thing”\nUnderstand how to build a representative “Thing”\nLearn how to connect to a cloud service from a “Thing”\nLearn how to communicate between an iOS device and a “Thing”",
      "target_audience": [
        "Anyone with a curiosity about the Internet of Things",
        "A developer/engineer with an idea for a \"Thing\"",
        "People with basic programming experience",
        "People with basic electronics knowledge",
        "Experience with soldering and/or assembly language not required"
      ]
    },
    {
      "title": "PLC Programming - Get Going With PLC Ladder Logic",
      "url": "https://www.udemy.com/course/get-going-with-plc-ladder-logic/",
      "bio": "Learn To Program PLC Ladder Logic Diagram with Free Software",
      "objectives": [
        "Learn PLC programming language, Ladder Logic Diagram, on a standard platform. What you learn here applies to other types of PLCs.",
        "Teach yourself PLC Ladder Logic Diagram with software that is easily accessible.",
        "Write and test PLC ladder logic programs with basic Coil and Contact instructions and discrete Inputs and Outputs",
        "Program PLC ladder logic using Timers and Counters",
        "Learn about Analog Inputs and Outputs",
        "Includes Functions, Funtion Blocks and Program Control instructions."
      ],
      "course_content": {
        "Introduction and Getting Started": [
          "Introduction",
          "Exercise 1, Install CODESYS",
          "Exercise 2, Create a New Project",
          "Take Up Exercise 2 and Objects in the Devices View",
          "Knowledge Check for Objects in the Devices View",
          "PLC I/O Configuration and Exercise 3",
          "Addressing"
        ],
        "Basic Ladder Logic Diagram": [
          "Ladder Elements, Contacts and Coils, Exercise 4",
          "Take Up Exercise 4 and then Exercise 5 for Simulation Mode",
          "Exercises 6 and Exercise 7",
          "Take Up Exercises 6 and 7 and then Exercise 8 for Negated Contacts",
          "Exercise 9 I/O Test",
          "Set Coil and Reset Coil",
          "Exercise 10",
          "Exercise 11, Branches to the right and Declaring Variables",
          "Quick Change Commands and Knowledge Check"
        ],
        "Timers Counters and Triggers": [
          "Timers TON and TOF",
          "Exercises 12",
          "Using the Declaration Editor",
          "Exercise 13",
          "Common Timer Applications",
          "Triggers and Exercise 14",
          "The Counters",
          "Exercise 15"
        ],
        "Working With Numbers": [
          "Introduction to Working With Numbers",
          "Exercise 16",
          "Basic Math Instructions",
          "Exercise 17",
          "Basic Compare Instructions",
          "Exercise 18",
          "The MOVE Instruction, Exercise 19",
          "Exercise 20",
          "Solution for Exercise 20"
        ],
        "Analog IO and Program Control": [
          "Program Organization and Control",
          "Exercise 21",
          "Working With Analog I/O",
          "Exercise 22",
          "Converting Raw Data and Engineering Units",
          "Exercise 23",
          "The Conversion Instruction",
          "Exercise 24",
          "Importing and Exporting",
          "Exercise 25"
        ]
      },
      "requirements": [
        "Some basic understanding of PLC or programming fundamentals. (reading material is included with course resources)"
      ],
      "description": "Everything you need to learn how to program PLCs with a language called Ladder Logic Diagram. This course will show you how to install CODESYS on your computer and then teach you step by step how to start programming ladder logic. CODESYS is the chosen software for this course because it is free to download and free to use for PLC programming.\n\n\nMost of the learning happens during hand-on exercises. These exercises tend to build upon each other. One exercise will create a part of the program and another exercise adds something more. All the while, building to something bigger and bigger.\n\n\nWith that approach, you will learn the following:\nThe Basics of Ladder Logic Diagram with discrete I/O.\nProgramming with Timers, Counters and Triggers.\nWorking with Numbers, using PLCs to perform math and compare numbers.\nAnalog I/O.\nProgram Control.\nThere is a prerequisite for this course. Some understanding of PLC fundamentals is required. But don’t let that hold you back. A written version of the prerequisite course is included here in a PDF you can download.\n\n\nAlso included are written instructions to build a PLC trainer using an Arduino compatible circuit board. If you chose not to build the hardware version of the trainer there is software visualization you can import to your CODESYS project that will help with the programming exercises.",
      "target_audience": [
        "Beginner electrical techs and PLC programmers looking to build PLC programming skills. Also experienced maintenance staff looking for a refresher."
      ]
    },
    {
      "title": "Verification Series 8 : Code Coverage with Vivado 2024.1",
      "url": "https://www.udemy.com/course/verification-series-8-code-coverage-with-vivado-20241/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "Code Coverage flow in Vivado",
        "Essentials of Statement, Branch, Toggle & Condition Coverage",
        "FSM Covereage with bins & transition bins",
        "Reading Coverage reports"
      ],
      "course_content": {},
      "requirements": [
        "Fundamentals of Digital Electronics and Verilog"
      ],
      "description": "In modern digital design verification, code coverage plays a critical role in ensuring the quality and completeness of simulation-based testing. It is especially significant in safety-critical and regulated industries such as aerospace and avionics, where verification must meet strict compliance standards like DO-254. DO-254 mandates that hardware designs undergo rigorous verification processes, and code coverage is a key metric to demonstrate that all parts of the RTL have been exercised and tested. This helps identify untested portions of the design, ensuring that no functionality is left unchecked during simulation.\nThis course offers an in-depth exploration of code coverage using Vivado, with a strong emphasis on practical learning. It covers every essential aspect of the coverage workflow—from understanding the purpose and types of code coverage to generating and analyzing coverage reports in Vivado. The course clarifies the differences between code coverage, functional coverage, and assertions, helping learners understand how these elements complement each other in a comprehensive verification strategy.\nLearners will explore five main types of code coverage: Statement Coverage, which checks whether each line of code has been executed during simulation; Branch Coverage, which ensures all control flow branches have been taken; Condition Coverage, which verifies each boolean condition within decision statements; Toggle Coverage, which tracks the transitions of signals to confirm full activity; and FSM (Finite State Machine) Coverage, which ensures all states and transitions in a state machine are exercised.\nThrough step-by-step demonstrations, students will learn how to design testbenches, write RTL code, simulate with Vivado, and interpret coverage results. 80% of the course is focused on code and flow demonstrations, 12% covers the theoretical foundations, and 8% involves self-check assignments to reinforce logical reasoning and understanding.\nBy the end of this course, learners will not only understand the theory behind code coverage but also gain practical experience using Vivado to achieve coverage closure in real-world verification environments, making it ideal for professionals working under compliance-driven standards like DO-254.",
      "target_audience": [
        "This course is for anyone interested in learning about code coverage in the verification of RTL designs."
      ]
    },
    {
      "title": "Smart Phones Hardware Repair Course with a Live Demo.",
      "url": "https://www.udemy.com/course/phones-hardware-repair/",
      "bio": "Learn How to Fix all Phones like a Pro and Earn a Living from it.",
      "objectives": [
        "How to fix any bricked iPhone",
        "How to fix any bricked iPhone",
        "How to Repair Phone without PC.",
        "How to Install new LCD on any Phone"
      ],
      "course_content": {},
      "requirements": [
        "You must have Some Phone working Tools",
        "I will Teach you other things"
      ],
      "description": "Learn how to Fix Screen damage\nWill Learn how to trace bad ic and replace it.\nLearn how to Fix Battery issues\nLearn how to Fix Charging problems\nLearn how to Fix Camera malfunctions\nLearn how to Fix Audio problems\nStudent will know how to repair Button or switch failures\nStudent will know how to repair Overheating\nStudent will know how to repair Connectivity problems\nLearn how to fix Slow performance: Over time, iPhones may experience sluggishness or slow performance.\nLearn how to fix Battery drain: If your iPhone's battery drains quickly\nLearn how to fix Connectivity problems: Issues with Wi-Fi, Bluetooth, or cellular connectivity.\nLearn how to fix Touchscreen unresponsiveness: Occasionally, iPhone screens may become unresponsive or have delayed touch responses.\n\n\nHow to solve other Software issues in android phones.\nHow to fix dm verify error on android phone.\nHow to repair Unfortunately android has stopped on android phone without flashing.\nHow to repair Not Enough Memory on android phone. Etc.\nhow to use Rework Station\nHow to flash phone from different locations and sharing of files.\nHow to use USB redirector,\nHow to configure VPN Teamviewer,\nHow to transfer files from one phone to another without physical contact.",
      "target_audience": [
        "Anybody that wants to Do-It-Yourself",
        "From beginners to Pro and anybody that want to learn.",
        "Anybody that wants to fix his/her Phone.",
        "Anyone that wants to make money in fixing Phone hardware issues.",
        "If you want to be your own boss in Phone repair."
      ]
    },
    {
      "title": "TerraMaster NAS - Configure & Administer like a Storage Pro!",
      "url": "https://www.udemy.com/course/terramaster/",
      "bio": "Unleash the Full Potential of Your TerraMaster NAS",
      "objectives": [
        "Configuring the NAS for optimal performance and security.",
        "Setting up user permissions and access control for improved security",
        "Implement effective data management and backup strategies",
        "Learning and using RAID configurations",
        "Improve NAS management to ensure continuous reliability and performance"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of computer systems and networking",
        "A TerraMaster NAS ready to use, although not essential",
        "Desire to learn more about NAS technologies and best practices"
      ],
      "description": "In this training course we'll teach you how to become a proficient TerraMaster Network Attached Storage (NAS) administrator!\nFrom initial setup to advanced administration, empower yourself to harness the full potential of the TerraMaster NAS.\nThis course will guide you through every aspect of setup, management, and advanced features of the NAS. From safeguarding your data to exploring the full potential of TerraMaster, equip yourself with the expertise to harness this cutting-edge NAS technology.\nIn this course we'll cover -\nNAS Fundamentals - Understand the core concepts and unique features of TerraMaster NAS technology.\nOptimized Installation and Configuration - Learn the essentials of setting up your TerraMaster NAS for maximum performance and security.\nData Management Mastery - Implement efficient file organization, backup procedures, and explore storage expansion, learning about RAID configurations, multimedia server setup, and third-party applications..\nUser Access Controls - Establish granular user permissions and robust access control mechanisms.\nUnlocking Advanced TerraMaster Features - Delve into TerraMaster-specific features,\nTroubleshooting Techniques - Develop skills to identify and resolve common issues, ensuring continuous reliability.\nBest Practices around Maintenance - Perform essential tasks to keep your NAS system in optimal condition, running healthy and secure.\n\n\nDo I need to be an expert?\nNo, this course is designed for people who have little to lots of knoweldge about Storage, NAS and TerraMaster systems.\nBy the end of the course you'll be able to fully manage a TerraMaster NAS and take your new skills to administer it like a pro!\n\n\nWhy this course?\nThis course will be easy to understand, and give you an overview of the necessary skills you need to know.\nWe'll provide you with the foundational skills to add to your knowledge bank, while continuing to improve on your tech skills more and more!\n\n\nBecome a pro at administrating your NAS, equipped with the knowledge and skills to navigate and optimize your TerraMaster NAS!",
      "target_audience": [
        "ndividuals with a basic understanding of computer systems and networking who want to explore NAS technology.",
        "Workers seeking cost-effective and scalable storage solutions for their data.",
        "System administrators or IT personnel looking to enhance their skills in TerraMaster NAS administration."
      ]
    },
    {
      "title": "Learn Pixhawk Quadcopter from zero to hero",
      "url": "https://www.udemy.com/course/learn-pixhawk-quadcopter-from-zero-to-hero/",
      "bio": "Pixhawk Quadcopter Build, Master Flight Dynamics: Pixhawk Quadcopter Essentials ,The Ultimate Guide to Building Drones",
      "objectives": [
        "Build a Pixhawk Quadcopter: From Construction to Mission Planning",
        "Master Flight Dynamics and Soldering Techniques with Pixhawk",
        "Understand how to bind a radio receiver and transmitter.",
        "Understand flight terminology.",
        "Understand the use of GPS in drone flight.",
        "Understand the necessary drone pre-flight checks.",
        "Use the open source Mission Planner software to configure a drone.",
        "Learn how to use the Pixhawk flight controller."
      ],
      "course_content": {},
      "requirements": [
        "Windows computer Basic electronics tools (please see free list of tools in section 1) Be comfortable working with electronic components Willingness to persevere despite set-downs (like broken propellers resulting from a drone rough landing)"
      ],
      "description": "Pixhawk Quadcopter Mastery: Build, Fly, and Soar!\nUnlock the skies and become a drone wizard with our Pixhawk Quadcopter Mastery course! Whether you're a recreational enthusiast, tech hobbyist, or an aspiring drone engineer, this hands-on Udemy course is your ticket to mastering Pixhawk technology and unleashing your drone-building potential.\nWhat You'll Learn:\nHands-On Construction: Dive into the fascinating world of quadcopter building. From soldering components to assembling arms, you'll be crafting your own Pixhawk masterpiece.\nFlight Dynamics Mastery: Understand the principles and intricacies of Pixhawk flight control. Elevate your drone maneuvers and pilot skills to new heights.\nAdvanced Pixhawk Technology: Explore the cutting-edge features of Pixhawk, from firmware updates to calibration techniques, giving you the expertise to navigate the skies seamlessly.\nCommunity Support: Join a vibrant community of like-minded learners. Engage in discussions, share insights, and receive guidance directly from the course instructor.\nWho Is This Course For?\nAspiring Drone Enthusiasts: Dreaming of building your own drone? This course is your launchpad into the world of Pixhawk Quadcopters.\nTech Hobbyists: Take your hobby to new heights by mastering Pixhawk technology and creating your aerial companion.\nDIY Aficionados: If you love the satisfaction of building from scratch, Pixhawk Quadcopter construction will be your next exciting project.\nTech Professionals: Engineers and developers curious about drone technology will gain valuable insights for their projects.\nWhy Enroll?\nPractical Learning: Learn by doing, from the basics of construction to the intricacies of flight dynamics, ensuring a comprehensive understanding.\nCutting-Edge Insights: Stay ahead with the latest Pixhawk technology updates, ensuring your knowledge is always current.\nCommunity Engagement: Connect with fellow learners, share experiences, and get direct guidance from the instructor for a supportive learning environment.\nEnroll Now and Take Flight! Embark on this thrilling journey to Pixhawk Quadcopter mastery. Build, fly, and soar with confidence. Enroll now and let your drone dreams take flight!\nFeel free to modify and tailor this description to better suit your course style and unique selling points.",
      "target_audience": [
        "Aspiring Drone Enthusiasts: If you've ever dreamed of creating your own drone and exploring the skies, this course is designed for you. From beginners to hobbyists, embark on a thrilling journey into the world of Pixhawk Quadcopters."
      ]
    },
    {
      "title": "Mastering Medication Management: Arduino-Powered Reminders",
      "url": "https://www.udemy.com/course/arduino-based-smart-medicine-reminder-pill-reminder-medication-tracker/",
      "bio": "Craft a Personalized Arduino Medicine Reminder & Ensure Timely Health Care with Hands-on Learning",
      "objectives": [
        "Make your own Arduino Automatic Medicine Reminder",
        "Make a very simple and straightforward reminder using only Arduino board, A buzzer, and Led",
        "Make a more advanced model in which you will use the RTC time module, LCD and buttons in a more sophisticated design.",
        "Learn Working Principle of RTC Time Module, LCD, EEPROM, Speaker and Buzzer",
        "Interface Switches, RTC Time Module, LCD, EEPROM, Speaker and Buzzer with Arduino",
        "Learn the working principle of Arduino Automatic Medicine Reminder",
        "Display information on LCD Display and select your reminder using buttons.",
        "Set up the required software in a step by step manner.",
        "Connect your Circuit and start coding."
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch",
        "Be familiar with the Arduino Uno",
        "Be familiar with the breadboard and wiring."
      ],
      "description": "Welcome to a Revolutionary Health-Tech Experience!\nCourse Overview: Missed medications can be a thing of the past! Dive into the world of Arduino and craft a personalized medicine reminder for yourself or your loved ones. Whether you're watching over an elderly family member or simply trying to manage your health regimen, this course empowers you with technology that cares.\nWhy This Course is Essential:\nPersonal Health Meets Technology: A perfect blend of health care and Arduino technology tailored for beginners.\nComprehensive Learning: From understanding the core concepts to hands-on assembly of the medicine reminder.\nFlexible and Customizable: Adjust alarm timings, sound volume, and even the verbal reminders.\nVersatility: Guides to create both basic and advanced reminder systems.\n3D Designing Skills: Bonus access to a Fusion360 course, empowering you to craft a protective case for your device.\nAbout the Instructors: Educational Engineering Team: With over a decade of hands-on experience, we bring a treasure trove of practical knowledge. Having empowered over 250,000 students globally, we promise you an enlightening journey from idea to a tangible device.\nAshraf Said AlMadhoun: A passionate educator, Mechatronics engineer, and the driving force behind the Educational Engineering Team. With over 11 years of teaching, Ashraf's unique teaching methodology makes complex topics digestible and engaging.\nCourse Highlights:\nUnderstand the concept and functionality behind the automatic medicine reminder.\nStep-by-step guidance on setting up the required software and hardware.\nDetailed circuit design instructions and coding sessions.\nTwo project levels: Beginner-friendly model and an advanced version with an RTC time module, LCD, and more.\nSuggestions for future improvements and 3D design templates.\nEnroll Now & Harness the Power of Arduino for Personal Health Management!\nFAQs:\nWho is this course for? Anyone interested in combining health care with technology, from beginners to advanced Arduino enthusiasts.\nWhat materials do I need? Basic Arduino components, the list will be provided.\nCan I get a refund? Yes, we offer a hassle-free money-back guarantee.\nWill I get support? Absolutely! Our team is here to assist you every step of the way.\nJoin now and take a leap into the future of health-tech innovations!\nWhat You Will Learn\nUnderstand the concept and functionality behind the automatic medicine reminder.\nSet up the required software and hardware.\nDetailed circuit design instructions and coding sessions.\nCreate beginner-friendly and advanced models of the medicine reminder.\nDesign a protective case using Fusion360.\nSuggestions for future improvements and customizations.\nWho is This Course For\nAnyone interested in combining health care with technology.\nBeginners to advanced Arduino enthusiasts.\nDIY electronics hobbyists.\nStudents of technology and engineering.\nEducators looking for practical STEM projects.\nRequirements\nBasic understanding of electronics and circuitry.\nEnthusiasm for DIY projects and health technology.\nBasic Arduino components (a detailed list will be provided).\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone interested in making a very simple and straightforward reminder using only Arduino board, A buzzer, and Led",
        "Anyone interested in making a more advanced model in which you will use the RTC time module, LCD and buttons in a more sophisticated design.",
        "Anyone Interested in Learning How Arduino Automatic Medicine Reminder works",
        "Anyone Interested in Learning How to Choose different reminding time using Arduino",
        "Anyone interested in making amazing electronics Projects",
        "Anyone interested in making amazing Microcontroller Projects",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning How to make Arduino Automatic Medicine Reminder",
        "Anyone Interested in Microcontrollers",
        "Arduino Geeks",
        "Electronics Geeks"
      ]
    },
    {
      "title": "Arduino for Creators - For Creators only!",
      "url": "https://www.udemy.com/course/arduino-for-makers/",
      "bio": "Take your Arduino skills to the next level by building a remote controlled self-stabilizing robot",
      "objectives": [
        "It depends on how well you participate. If you are keen to take the course and familiarize yourself with the topics, you will really understand and be able to apply the following concepts.",
        "After the 1st section you will know what an IMU is, how to use I2C to operate it, how I2C works, what the gyroscope/accelerometer is and what their advantages/disadvantages are, what a complementary filter is and why we need it.",
        "After the 2nd section you will have built your own remote controller, which can control a self-built car with the help of inclination or via a joystick. You will learn what the NRF module is, how to talk to the NRF using the SPI data protocol, how to transfer data between two modules, how to read a joystick and much more.",
        "After the 3rd section you will know what a stepper motor is, how to drive it using a stepper motor driver, how to use register programming to drive digital inputs/outputs, how to use pull up/pull down resistors & how to design a voltage divider circuit to monitor your battery voltage.",
        "After the 4th section you will have built the self-stabilizing robot, which is controllable by the likewise self-built remote control. You will learn what 8/16-bit timers are, how to configure and use them, why we use them, what a P-/PID controller is and how to adjust its parameters.",
        "It's up to you how much you take away from the course! The more you dig into the topics we cover, the better your understanding will be after the course. :D"
      ],
      "course_content": {},
      "requirements": [
        "It is necessary that you enjoy using microcontrollers, otherwise the course has no worth for you.",
        "At some point you will have to work your way through relatively complex topics yourself.  Thereby, of course, I will support you with words and deeds! But if you are looking for a course, where the lecturer sprinkles you with \"knowledge\" that you forget the same day again, then you are wrong here! :)",
        "But you should already have some experience with the Arduino. If you know how to read a button and what analog and digital values are I think you are able to master the course. The question is whether you want to invest the time to learn new things, or not?"
      ],
      "description": "Heyyy you, are you a Creator?\nStrange question, isn't it? But let me tell you, after the course you are definitely one :)\nI'll be so bold and say a short sentence about me :D My name is Olli and I study Mechatronics and Information Technology in the now already 6th semester at the KIT in Karlsruhe, Germany.\nI personally have a lot of fun creating my own projects with Arduino. If you feel the same way then you have my blessing to buy the course! And if you don't enjoy playing around with Arduino ... well, why are you looking for an Arduino course anyway? ;D\nSo the most important thing is clarified: You want to buy the course to bring your skills to the next level and you will have fun doing so. Furthermore you already have some experience with the Arduino. You have a good understanding of the basics and know for example how to switch pins high/low, how to read digital/analog values, what the difference between digital and analog values is and you have a rough intuition on voltage, current & resistors.\nSo you're still around :D? Awesome!\nVery nice, then let me tell you why this course is just right for you:\nAnd yes, I know! That's what everyone says :D Ultimately, that's what it stated under each course \"If you can read/stand/eat, then this is exactly the right course for you...\" BUT:\nI would suggest that I just show you briefly what the course has to offer and then you decide if it excites you or not!:D Do we have a deal?\n\n\nWhat is this course about?\nThe course is designed to pick you up at your current level and take you by the hand. I'll take you by the hand, show you the Arduino land. Or something like that at least :D. On our journey we will learn so many things that I will only list a few here. So we'll look at the Inertial Measurement Unit, then use it to build our own remote controller with which you can control a car by tilting your hand. We'll talk about what libraries are, how I2C works, how we can use I2C, how to monitor the voltage of your battery, what a PID controller is, how to calculate angles from accelerometer data, and on and on....\nSo you see, the course covers a very broad spectrum. With the approx. 9 hours of video material I try to give you a red thread through the content. But it's also clear that you will have to familiarize yourself with some topics if you don't get it at the first time or want to understand something more deeply. But you are never alone. If you have any questions, I and all the other course participants will be happy to help you.\n\n\nWhat, all the other course participants?\nI thought it would be cool to build a community around the course. I have therefore created a Slack forum that you can join if you want. There you can share, discuss and learn with other participants. I've never done this before either and hope this will be a cool thing! In any case, I'm really looking forward to welcoming you!\n\n\nStructure of the course!\nAfter each video I tell you what to do next. For solving the task you have to study the new topic yourself. For example you have to read out a sensor with I2C & the Wire library, or write the implementation to control stepper motors! But rather you are allowed to do it, because you enjoy it .D. In the following video we always deal with exactly this task that I had given you. If you were able to solve the task on your own, you can look here again how I made it work and get some new ideas. If you did not get it right, then you can see how to solve it and recognize what you did wrong.\n\n\nThrough this course structure I hope that you will not only learn something in the course but also remember it in the long term!\n\n\nWhat else do you need for this course?\nIn the second video I go into detail. It's a few things, but it's definitely worth it! It's best to take a quick look before you buy the course.\n\n\nNot quite sure yet? Never mind! With Udemy's 30-day money-back guarantee, you have nothing to lose! Take a look at the course and if you don't like it you can get your money back - it's that simple :D\n\n\nI'm extremely excited to welcome you to the course and the community!\n\n\nSee you soon!\nYour Olli :)",
      "target_audience": [
        "You enjoyed your first experiences with the Arduino and now you want to expand your knowledge and skills.",
        "You want to learn how to build a tilt-based remote controller, a RC car, and a RC self-stabilizing robot",
        "You really want to learn something!"
      ]
    },
    {
      "title": "Embedded Memory Security : MPU, TAMPER, Read/Write Protect",
      "url": "https://www.udemy.com/course/embedded-memory-security-mpu-tamper-readwrite-protect/",
      "bio": "Embedded Memory Security: Protecting Your System from Tampering and Unauthorized Access",
      "objectives": [
        "Gain a deep understanding of various techniques used to secure embedded memory, such as tamper detection and data deletion.",
        "Learn how to prevent unauthorized access to their device's firmware by disabling debug features and other potential entry points for reverse engineering.",
        "Learn how to use the MPU to detect and prevent issues such as stack overflow, thereby ensuring the stability and security of your embedded device.",
        "Learn how to use Option Bytes to protect your embedded memory against unauthorized read and write access.",
        "Develop and integrate tamper detection mechanisms to detect and prevent unauthorized access to the embedded system's memory."
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know.",
        "NUCLEO-F411"
      ],
      "description": "Embedded Memory Security: Protecting Your System from Tampering and Unauthorized Access\n\nAre you looking to take your embedded systems protection to the next level? Do you want to protect your embedded memory from unauthorized access and tampering?\nIntroducing our new course on Embedded Memory Security, covering essential topics such as MPU, Tamper Detection, and Read/Write Protection using Option Bytes.\n\n\nThis course is excellent for embedded systems developers who want to protect their products from security threats. We have designed a multi-faceted curriculum that covers everything from wiping the backup registers clean to detecting stack overflow using the Memory Protection Unit (MPU). This course will teach you advanced security measures to safeguard your firmware from reverse engineering and protect your device from tampering. We will also show you how to disable debug features before launching your product, ensuring that your firmware remains secure. Whether you're working on a small IoT device or a large industrial system, this course will provide you with the tools and knowledge you need to secure your embedded memory and keep your device safe from external threats.\n\n\nThis course is designed for professionals with a basic understanding of embedded systems, and is taught by industry experts with years of experience in the field. You'll learn through a combination of video lectures, hands-on exercises, and real-world case studies, giving you a practical understanding of how to implement these techniques in your own embedded systems.\nAt the end of this course, you'll have a solid understanding of the key concepts and techniques used to secure embedded memories, and be able to implement these techniques in your own projects. You'll be equipped with the skills and knowledge to secure your embedded systems against a wide range of memory-based attacks, ensuring the safety and security of your devices and data.\nWith the flexible online format, you can study at your own pace, from anywhere in the world. Plus, we offer a 30-day money-back guarantee, so you can enroll with confidence.\n\n\nDon't let your embedded systems be vulnerable to attack.\n\n\nSign up for our Embedded Memory Security course today and take the first step towards securing your devices against malicious attacks.\nHere's a sneak peek at what you can expect to learn:\n\n\nBare-Metal MPU Driver Development:\n\n\nIn this section you will learn how to develop a bare-metal Memory Protection Unit (MPU) drivers. The MPU is a hardware unit that provides security for embedded systems by allowing the division of memory into a set of regions with specific access permissions. You will learn how to configure the MPU for your specific needs, including setting up memory regions and their access attributes. Additionally, you will learn how to write a low-level MPU driver to interface with your application code, which will enable you to protect your system from memory-based attacks.\n\n\nTamper Detection and Data Deletion:\n\n\nThis section will focus on tamper detection and data deletion using the RTC and backup domain of the microcontroller. Tamper detection is essential for preventing physical attacks on your device, such as removal of the memory chip, manipulation of data or code, or voltage-based attacks. You will learn how to implement tamper detection to detect tamper events. Data deletion is also a critical technique that helps protect against unauthorized access to sensitive data. You will learn how to design and implement an effective tamper detection scheme that will securely erase data in the event of a tamper event.\n\n\nProtecting Flash Memory using Option Bytes:\n\n\nYou will learn how to use the option bytes in the bottom part of the flash memory region to protect the entire flash memory. Option bytes are a set of bits that are programmed at the factory or during device programming and can be used to configure the device's features, such as read/write protection. You will learn how to set up option bytes to protect your flash memory from unauthorized read/write access, ensuring the integrity of your data.\n\n\nSignup, let's start securing some memory.",
      "target_audience": [
        "This course is designed for embedded systems developers and engineers who are interested in enhancing their knowledge and skills in implementing advanced security measures for protecting embedded memory.",
        "It is also suitable for anyone who is involved in the development and maintenance of IoT devices, industrial systems, and other applications that require secure memory management."
      ]
    },
    {
      "title": "Complete PIC Microcontroller course (Hi-Tech C Compiler)",
      "url": "https://www.udemy.com/course/complete-pic-microcontroller-course-hi-tech-c-compiler/",
      "bio": "Using Hitech C Compiler Deep dive into 8-Bit PIC16F microcontroller programming by reading the datasheet",
      "objectives": [
        "Programming PIC microcontroller in MPLABIDE with Hitech C Compiler",
        "You will learn how to program a PIC Microcontroller from scratch with datasheet approach",
        "Build your own projects with the PIC microcontroller.",
        "You will be learning all the peripherals programming from scratch no libraries used in MPLAB IDE",
        "The class starts from the basics of setting up a microcontroller programming and hardware environment."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course"
        ],
        "Hardware & Software used in this course": [
          "Hardware &Software used in this course",
          "Installing MPLAB IDE in PC",
          "Project Creation in MPLAB IDE (Hi-Tech C Compiler)"
        ],
        "General Purpose Input Output (GPIO) OF PIC16F877A": [
          "Port structure and pin layout of PIC16F877A",
          "GPIO register configuration for PIC16F877A"
        ],
        "LED's with PIC16F877A": [
          "Interfacing of single LED with PIC16F877A",
          "Interfacing of 8 LED's to single port of PIC16F877A"
        ],
        "7-Segment Display's with PIC16F877A": [
          "7-Segment display structure and working principle explained",
          "Interfacing of 7-Segment display with PIC16F877A"
        ],
        "16x2 LCD's with PIC16F877A": [
          "16x2 Liquid Crystal Display working principle explained",
          "Interfacing of 16x2 LCD with PIC16F877A in 8-Bit mode format",
          "16x2 Liquid Crystal Display working principle in 4-Bit mode explained"
        ],
        "PushButton's with PIC16F877A": [
          "Digital input devices working logics explained",
          "Interfacing of pushbutton with PIC16F877A"
        ],
        "4x3 Keypad's with PIC16F877A": [
          "Matrix keypad working principle explained",
          "Interfacing 4x3 matrix keypad with PIC16F877A"
        ],
        "Relay's with PIC16F877A": [
          "Interfacing Relay with PIC16F877A"
        ],
        "External Interrupt in PIC16F877A": [
          "Microcontroller Interrupt working principle explained",
          "External Interrupt programming in PIC16F877A"
        ]
      },
      "requirements": [
        "Basic knowledge on electronics components",
        "Basic knowledge on C programming",
        "Download and Install Proteus Professional all other software links are provided",
        "Basic circuit building skills from schematics"
      ],
      "description": "Over a 40+ lecture videos, 6+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of PIC Microcontroller, but also learn the very basics of PIC Microcontroller internal structure and hardware schematics required for building your own products out of PIC microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on Programming on PIC16F877A microcontroller From Scratch.\nThe course is structured for the need of learners to understand microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems. Few basic Embedded C concepts are also covered.\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the PIC microcontroller than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "People with some experience in electronics",
        "People with an beginner knowledge of embedded systems"
      ]
    },
    {
      "title": "Dive into IOT, with esp8266 ,raspberry pi ,sensors ,displays",
      "url": "https://www.udemy.com/course/dive-into-iot-with-esp8266-raspberry-pi3/",
      "bio": "Hardware and software system to capture temperature readings ,show on display, show real time dashboards in web browser",
      "objectives": [
        "Internet of things using esp8266 ,raspberry pi, sensors and displays",
        "How to setup docker on raspberry pi",
        "How to use node red with mqtt",
        "How to show sensor data in charts (Grafana)"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Introduction Hardware",
          "Introduction Software"
        ],
        "Hardware Setup": [
          "Hardware Setup D1 Mini",
          "Hardware Setup D1 Mini Shields",
          "Hardware Setup Raspberry Pi 3",
          "Hardware Setup Router"
        ],
        "Software Setup": [
          "Software Setup ESP Home",
          "Software Setup D1 Mini - DS18B20",
          "Software Setup D1 Mini - OLED Display",
          "Software Setup Raspberry Pi 3",
          "Software Setup Docker and Portainer",
          "Software Setup Docker and Mosquitto (MQTT)",
          "Software Setup Docker and NodeRed",
          "Software Setup Docker and InfluxDB",
          "Software Setup Docker and Grafana"
        ],
        "Final": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Basic electronics , some coding experience (arduino), 2 D1 mini esp8266 ,2 D1 Mini Shields (DS18b20,OLED Display,Raspberry Pi 3"
      ],
      "description": "Dive into Internet of things\nLearn how to setup the hardware and software to create your own IOT framework\nMake use 2 D1 mini's with ESP8266 .\nOne of the shields has a DS18b20 temperature sensor ,\nAnother of the shields has a OLED display ,\nHardware details , pinout of esp8266\nCreate a yaml file that  ESP home will use to create firmware for D1 mini's\nESP Home will create code that can send readings from the temperature sensor via MQTT as well as send MQTT messages to the display\nSetup a Raspberry Pi3 with Raspbian buster Lite\nCreate a number docker-compose files , that will be used to create all the  docker containers\nInstall a Docker Container on the Pi3\nCreate a docker-compose file that will setup a Mosquitto broker as a service in docker\nCreate a docker-compose file that will setup a Node Red as a service in docker\nCreate a docker-compose file that will setup a Influx DB as a service in docker\nCreate a docker-compose file that will setup a Grafana as a service in docker\nSee how to use node red to receive MQTT messages  and convert them into SQL queries to insert records into InfluxDB\nCapture all temperature readings to Influx DB\nUse Grafana to build charts and graphs",
      "target_audience": [
        "Interested in Internet of things, Design new products , solve problems"
      ]
    },
    {
      "title": "Hands on Zigbee using Raspberry Pi",
      "url": "https://www.udemy.com/course/hands-on-zigbee-using-raspberry-pi/",
      "bio": "Learn about one of the trending wireless protocols to implement innovative projects.",
      "objectives": [
        "Acquire a clear picture of what Zigbee actually is.",
        "Learn how to configure Zigbee modules for different purposes.",
        "Learn how to control zigbee devices for enabling wireless communication on different platforms..",
        "Learn how to control AC home appliances remotely using a Raspberry pi and Zigbee.",
        "Learn how to remotely control water motors using Zigbee."
      ],
      "course_content": {},
      "requirements": [
        "Basics of python programming.",
        "Basic commands of linux.",
        "Basic commands of python to manipulate the Raspberry Pi."
      ],
      "description": "This course is primarily oriented towards the concepts related to Zigbee right from the basics. It starts with explaining what exactly is Zigbee and how one can establish a Zigbee network. Details such as the different modes of operations and also the different forms in which Zigbee devices can be a part of the network are also covered.\nYou will then be taught about the requirements to establish and implement a Zigbee network. The installation and configuration parts are explained step by step covering all minute details. A Raspberry Pi is introduced into the picture after establishing a zigbee network using Windows. A communication link is established between a Raspberry Pi and Windows system. Communication with Raspberry Pi can also be done using other OS as well. How that can be made possible is explained in the course.\nYou will then learn to implement a basic Raspberry Pi project: Prototype of a traffic management system using Zigbee. Here you'll learn how the communication established earlier helps you to control the Raspberry Pi in order to control the signal lights at the junction.\nThe next step is to increase the level of project from basic to intermediate. You will learn how to control household devices using the Raspberry Pi and Zigbee. I can assure that the coding will be explained step by step and once you the learn the coding for one project, you will be able to implement many more by yourself.\nFinally, we'll summarize the entire course and suggest you a few ideas which you can try for yourself using a Raspberry Pi and zigbee devices.",
      "target_audience": [
        "This course is for anyone who wants to know about Zigbee from scratch.",
        "The course deals right from the basic concepts and focusses on making the students understand the same clearly.",
        "This is a beginner level course."
      ]
    },
    {
      "title": "Motherboard Masterclass: Parts, Components & Analysis",
      "url": "https://www.udemy.com/course/complete-motherboard-parts-components-course-for-beginners/",
      "bio": "Learn motherboard parts, components, and circuit analysis from beginner basics to advanced fault diagnosis",
      "objectives": [
        "Names of all computer motherboard parts and components;",
        "The function & working principle of all motherboard parts and components;",
        "The relationship between motherboard parts and components;",
        "Get familiar with real examples about computer Motherboard."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in Computer"
      ],
      "description": "Are you ready to master laptop and computer motherboards from the ground up? This course is designed for beginners and enthusiasts who want to understand, analyze motherboard parts and components with confidence.\nWhy take this course?\nHere are 10 strong reasons:\nLearn motherboard parts & components from A to Z.\nGain knowledge directly from a professional with years of electronics experience.\nShort, concise lessons save time while learning effectively.\nGet your questions answered quickly with detailed explanations.\nEnjoy constant updates to keep the content fresh.\nAccess one-on-one support whenever you need guidance.\nUnderstand concepts through simple and clear explanations with examples.\nEarn a certificate of completion to boost your credibility.\nBuild fault-diagnosis skills for real-world motherboard repairs.\nJoin a course crafted with care, passion, and professional expertise.\nWhat you’ll learn in this course:\nIntroduction to motherboard parts & components\nDetailed exploration of each part (capacitors, MOSFETs, ICs, etc.)\nCircuit symbols and their meanings\nThe relationship between different motherboard sections\nHow to analyze and troubleshoot circuits\nPractical techniques to find faults faster and more accurately\nBy the end of this course, you will be able to:\nIdentify and understand every motherboard component in detail\nRead and interpret symbols and schematics with confidence\nPerform professional motherboard analysis and fault diagnosis\nUnderstand the flow of signals and power across the motherboard\nBuild a strong foundation for electronics and repair careers\nIf you’re ready to unlock the secrets of laptop and computer motherboards, this course is for you.\nEnroll now, and I’ll see you inside the class.",
      "target_audience": [
        "Beginners & Intermediate in computer repair,",
        "Students who are interested in computer motherboard repair;",
        "Anyone who wants to know laptop & computer parts and components."
      ]
    },
    {
      "title": "PLC Basic Machine Vision | From Scratch",
      "url": "https://www.udemy.com/course/plc-basic-machine-vision-from-scratch/",
      "bio": "Using Python and CODESYS , Create your Own Machine Vision Engine",
      "objectives": [
        "Learn the Basics of Machine Vision",
        "Learn the Basics Object Detection and Recognition",
        "Learn how to create an Image Processing Engine",
        "Learn how to link any Modern PLC to a Machine Vision Application of your own",
        "Create a Basic Interactive HMI for your Machine Vision Application"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knolwedge in PLC Programming",
        "Basic Knolwedge in Python",
        "Windows Operating System (Not tested with MacOS)"
      ],
      "description": "Again with another course that there isn't any source on the internet will teach you about.\nPLC Basic Machine Vision  From Scratch.\nNote that There is  NO need for any license or Camera, everything will b emulated.\nEver wondered how those a production line uses cameras to classify which products are defected, and which are good to go?\n\n\nWell, Then this is the right place for you. Because I'll show you, step by step how to :\nCreate your own Machine Vision Classification and Detection Engine\nUse any PLC (in our case CODESYS Based) to exchange information with the Camera\nEstablish Camera PLC Communication\nCreate criteria to Reject or Accept a product after the camera snaps an image of it\nThe course is a lite introduction and will give you a chance to know exactly what to look for when you want to create larger Machine Vision applications.\n\n\nWe will create a Step by Step Project to teach you all the details, by getting directly to the point and learning exactly what you need to comprehend the basics of Machine Vision.\n\n\nWhy do you need this course?\nTo gain an advantage in this competitive sector!\nBare with me:\nCameras and Machine vision makes around 50% of the industrial automation sector.\nOnly handful of people in this sector are informed about how to use Machine Vision tools\nThese techniques can be applied to wide variety of production lines\nYou will enhance your knowledge arsenal by learning to integrate  many technologies together\n\n\nTo progress in this Please note that you need:\nWindows machine\nBasic knowledge in Python (Check out my Python course in my profile if you don't know where to start)\nBasic knowledge in PLC Programming",
      "target_audience": [
        "PLC Programmers",
        "Industrial Automation and Control Engineers",
        "Anyone interested in learning Machine Vision Implementation (From scratch)"
      ]
    },
    {
      "title": "STM32 Bootloader: Upgrade Firmware from Web Browser via USB",
      "url": "https://www.udemy.com/course/stm32-bootloader/",
      "bio": "Build a secure STM32 bootloader with AES encryption, CRC-32 checksums & web-based flasher using Web Serial API",
      "objectives": [
        "Develop an HTML-based firmware updater",
        "Protect firmware update files from hacking",
        "Build a custom communication protocol",
        "Add CRC-32 checksums for data integrity",
        "Perform erase, read and write operations",
        "Configure and use USB CDC on STM32F103"
      ],
      "course_content": {},
      "requirements": [
        "You need to have significant STM32 development experience using HAL with STM32CubeIDE on Windows",
        "You need basic HTML/JavaScript experience or willingness to learn independently",
        "Required Hardware: STM32 Blue Pill board with authentic STM32F103C8T6 microcontroller (no clones)",
        "STLink v2 or other debugger",
        "System Requirements: Windows 10/11 with Microsoft Edge browser"
      ],
      "description": "Note: This course currently only supports the STM32F1 series (Blue Pill boards with STM32F103C8T6).\nThis course focuses on USB-based firmware upgrades (wired connection) using Web Serial API – not internet/Wi-Fi updates.\nThis course is for developers who want to watch code being written line-by-line. I explain concepts slowly and clearly, but the screen recordings are intentionally sped up 2x to save time. If you want to code along with every example (great for learning!), you'll need to pause and rewind frequently.\nThat's it – no diagrams or deep dives into flash memory theory. We'll modify STM32 and HTML code bit by bit and immediately test how it works. The screen is always split:\n• Left side: Web browser + IDE (live coding)\n• Right side: Slides (key concepts)\nTake this course if you're into STM32 HAL and want to build a reliable, production-ready bootloader. While we focus on USB CDC and Web Serial API, the core concepts can easily adapt to UART-based bootloaders or EXE flasher utilities.\nTo simplify things, I've prepared helper functions for Web Serial API and STM32 USB-CDC (see myserial.js and usb_serial.c).\nThe course won’t explain the internals – experienced developers will quickly grasp how they work (the code is minimal)\nBeginners: Try using them as-is first, but ask me if you get stuck adapting them to your projects",
      "target_audience": [
        "STM32 developers who need to implement a production-ready custom bootloader",
        "Engineers upgrading their skills with custom protocol design"
      ]
    },
    {
      "title": "RF Circuits and Systems - RF Receiver Architectures",
      "url": "https://www.udemy.com/course/rf_receiver_architectures/",
      "bio": "Course 3",
      "objectives": [
        "This course will provide an in depth teaching of radio-frequency receiver architectures.",
        "The course covers fundamentals of radio-frequency receivers including direct-coversion, heterodyne, image-rejection, dual-downconversion architectures.",
        "The course offers practical and insightful information about RF receivers",
        "The case studies include WiFi receivers and cellular recievers."
      ],
      "course_content": {},
      "requirements": [
        "The prerequist for this course is the previous Udemy courses offered by Prof. Payam Heydari on basic concepts in RF design and fundamentals of communication theory."
      ],
      "description": "A radio-frequency transceiver comprising a receiver and a transmitter is the main system responsible for establishing communication between users of the communication system. This lecture focuses on the study and design of radio-frequency receivers. The course starts with an overview of important design specifications for both a transmitter and a receiver. Common specs such as frequency bands and channelization, data rate, type of modulation, transmitter output power and spectral mask, the transmitter EVM, receiver sensitivity, receiver input level, and receiver tolerance to blockers will be briefly discussed. The course then will provide an in-depth study of wireless receivers. Starting with bandpass representation of RF signals, the need for the quadrature downconversion to fully recover the signal is discussed. The course will then go over the concept of heterodyne architecture and investigates the problem of image in this architecture. The students will learn that a heterodyne receiver always faces a trade-off between channel selection and image rejection. Next, the widely used direct-conversion receiver architectures will be studied. The course provides a deep study of all issues in regard to the direct-conversion receiver including the local-oscillator leakage, the DC offset, even-order distortion, I/Q imbalance, and the impact of 1/f noise. Next, the image-reject architectures will be studied and a powerful graphical analysis is utilized to analyze these architectures. The course will go over the low-IF receivers and polyphase filters. Finally, the dual-quadrature downconversion receivers based on the concept of complex mixers will be studied.",
      "target_audience": [
        "This course is (1) intended for aspiring design engineers who are seeking a career in RF design; (2) graduate students; and (3) senior-level undergraduate students."
      ]
    },
    {
      "title": "Embedded Systems: From Legacy to Innovation",
      "url": "https://www.udemy.com/course/legacy-embedded-systems-and-paradigm-shift-in-embedded-systems/",
      "bio": "Embedded Systems cutting-edge transformation, System Design Flow, Legacy Embedded Systems. Become an Embedded Engineer.",
      "objectives": [
        "Learn about Legacy Embedded Systems",
        "Understand the paradigm shift happening with Embedded Systems & Engineering",
        "Gain knowledge of the overall Embedded portfolio",
        "Learn the Design Flow within Embedded Systems framework"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Embedded Systems: From Legacy to Innovation course by Uplatz.\n\n\nThe evolution of embedded platforms is a story of increasing complexity, power, and pervasiveness.\n\n\nEarly Beginnings\nThe Apollo Guidance Computer in the 1960s is often cited as an early example. These early systems were purpose-built for specific tasks.\nEarly embedded systems relied on discrete transistors and then integrated circuits (ICs).\nMicroprocessor Revolution\nThe development of microprocessors in the 1970s, like the Intel 4004, significantly impacted embedded systems, enabling more complex functionality in smaller packages.\nMicrocontrollers, which integrate a CPU, memory, and I/O peripherals on a single chip, further fueled this growth.\nSoftware Advancement\nThe rise of real-time operating systems (RTOS) allowed for more sophisticated control and management of embedded systems.\nEmbedded Linux and other operating systems have become increasingly common, providing a platform for complex applications.\nConnectivity and Intelligence\nThe growth of networking and wireless technologies has enabled embedded systems to connect and communicate, leading to the Internet of Things (IoT).\nAdvances in processing power and artificial intelligence (AI) are now allowing embedded systems to perform more intelligent tasks.\nModern Day\nToday, embedded systems are found in virtually every aspect of life, from automotive and industrial applications to consumer electronics and medical devices.\nTrends include increased focus on:\nPower efficiency.\nSecurity.\nAI at the edge.\nIn essence, embedded platforms have evolved from simple control circuits to powerful, connected, and intelligent systems that are integral to modern technology.\n\n\nEmbedded Systems Paradigm Shift\nLet us assume that you are a software/systems development lead on a complex embedded development project. There are many requirements to be met in order to satisfy the project specifications as well as an aggressive delivery timeline. The project is entering the integration phase. The functionality seems to be working well and you’re feeling pretty good about things. With the exponential growth in the complexity of embedded systems, the above scenario is becoming all too common. Consider current mobile devices such as smart phones and tablets now hitting the market that have four processor cores (and an additional GPU core) with other vendors advertising eight (heterogeneous) core devices for next-gen mobile devices.\nEmbedded systems design is constantly changing and following enterprise systems by becoming more flexible and software-defined. Traditionally, embedded systems were purpose-built using closed architectures that were unique to each device. They run a real-time operating system (RTOS) that have fixed time constraints, where predictability is key. The RTOS ensures that these systems do not fail. Alternatively, systems without real-time requirements can run customized versions of Linux, such as Wind River Linux. These automotive embedded systems, now connected to one another, need greater security countermeasures than when they were siloed. As many major recent data breaches have demonstrated, one system can provide hackers the path into another. Security of the modernized and integrated embedded systems assumes great priority now as it is directly connected to the organization's reputation and industry's compliance requirements.\nDrivers of changes in embedded systems design include improvements in hardware as well as the continuing evolution in software development methods. At the hardware level, it’s now possible to do more with a single CPU. Rather than host just one application, new multi-core systems on a chip (SoCs) can support multiple applications on a single hardware platform while still maintaining modest power and cost requirements. At the same time, advances in software development techniques point toward systems that are more software-defined and fluid than their predecessors.\nThe recent and modern automotive electronics systems have reached quite a high level of complexity today, leading to a corresponding increase in the complexity of the deployed software. This increasing complexity of embedded hardware/software increases the need for software reusability and shorter design cycle. The corresponding issues are addressed by emerging technologies in software engineering that contribute to reuse and increased flexibility while preserving interfaces and system-level integrity.\n\n\nEmbedded Systems: From Legacy to Innovation - Course Curriculum\n\n\nIntroduction to Legacy Embedded Systems\nEmbedded Systems Paradigm Shift\nEmbedded Portfolio\nEmbedded System Design Flow",
      "target_audience": [
        "Individuals aspiring for a career in Embedded systems/engineering",
        "Embedded Software Engineers",
        "Embedded Hardware Engineers",
        "Embedded Firmware Engineers",
        "Embedded Engineers",
        "Design Engineers Embedded Systems",
        "Beginners & newbies interested in learning Embedded systems engineering/hardware/software/firmware/testing",
        "Software Quality Assurance Engineers For Embedded Systems",
        "Firmware Test Engineers",
        "Hardware Engineers & Hardware Test Engineers",
        "Embedded Software Developers & Testing Specialists",
        "Embedded System Engineers",
        "Embedded Firmware Developers"
      ]
    },
    {
      "title": "MECHANICAL ENGINERRING INTERVIEW QUESTION PRACTICE TEST 2024",
      "url": "https://www.udemy.com/course/mechanical-enginerring-interview-question-practice-test-2024/",
      "bio": "MECHANICAL ENGINERRING INTERVIEW QUESTION PRACTICE TEST 2024",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the Mechanical Engineering Interview Question Practice Test 2024 course! This course is tailored to help you prepare for mechanical engineering job interviews by providing a comprehensive set of interview questions and answers. Whether you are a fresh graduate stepping into the industry or an experienced engineer seeking a career advancement, this course will guide you through a diverse range of topics essential for excelling in any mechanical engineering interview.\nCourse Objectives:\nUnderstand Fundamental Mechanical Engineering Concepts: Strengthen your knowledge of core mechanical engineering principles, including thermodynamics, fluid mechanics, material science, heat transfer, and mechanical design.\nPrepare for Technical Interviews: Get ready for technical interviews with questions on topics such as manufacturing processes, machine design, HVAC, CAD/CAM, and robotics.\nEnhance Problem-Solving Abilities: Improve your analytical and problem-solving skills with scenario-based questions that reflect real-world mechanical engineering challenges and projects.\nMaster Industry Tools and Techniques: Learn about the latest tools, techniques, and technologies used in the mechanical engineering industry, including finite element analysis (FEA), computational fluid dynamics (CFD), and CNC machining.\nStay Updated with Industry Trends: Stay informed about the latest developments and trends in mechanical engineering for 2024, such as renewable energy systems, smart manufacturing, and advancements in automation and robotics.\nCourse Features:\nComprehensive Question Bank: Access a diverse collection of 200+ multiple-choice questions covering all critical areas of mechanical engineering, from basic to advanced levels.\nDetailed Explanations: Each question comes with a detailed explanation to help you understand not just the correct answer but also the reasoning behind it.\nScenario-Based Questions: Engage with real-world scenario questions that test your ability to apply mechanical engineering concepts in practical situations.\nRegular Updates: Course content is regularly updated to reflect the latest industry standards, technologies, and best practices.\nFlexible Learning: Enjoy the flexibility of self-paced learning, allowing you to study at your convenience from any device.\nWho Should Take This Course?\nAspiring Mechanical Engineers: Individuals preparing for their first mechanical engineering roles and seeking to build a solid foundation for their careers.\nExperienced Mechanical Engineers: Professionals looking to refine their skills, stay updated with industry trends, and prepare for job interviews or promotions.\nStudents and Recent Graduates: Those preparing for campus placements, internships, or entry-level positions in mechanical engineering.\nMechanical Engineering Enthusiasts: Anyone interested in deepening their understanding of mechanical engineering concepts and preparing for technical interviews.\nBenefits of Taking This Course:\nBoost Your Interview Confidence: Gain the confidence needed to tackle any mechanical engineering interview question, from theoretical knowledge to practical applications.\nIdentify and Address Knowledge Gaps: Use practice questions to identify areas that need more study and focus your efforts where they are most needed.\nEnhance Technical Skills: Build a deeper understanding of mechanical engineering principles, tools, and practices.\nPrepare for Certifications and Advanced Roles: While focused on interview preparation, this course also serves as a foundation for mechanical engineering certifications and advanced roles.\nEnroll Today and Excel in Your Mechanical Engineering Interviews!\nBy the end of this course, you will be well-prepared to answer a wide range of mechanical engineering interview questions confidently. Whether you're aiming for a junior engineer position or a senior engineering role, this course is your comprehensive guide to mastering mechanical engineering interview questions in 2024.\nStart your journey to success today by enrolling and taking the next step in your mechanical engineering career!",
      "target_audience": [
        "MECHANICAL ENGINEERING CANDIDATES"
      ]
    },
    {
      "title": "MCEP 2720 Machine Safety with Keyence GC Safety Controller",
      "url": "https://www.udemy.com/course/mcep-2720-machine-safety-with-keyence-gc-safety-controller/",
      "bio": "Machine Safety Controller",
      "objectives": [
        "Define basic objectives of Functional Machine Safety",
        "Understand how to use the Keyence GC Configurator Software",
        "Determine basic setup features to a Functional Safety Circuit",
        "Understand common practices of Functional Machine Safety"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Windows Operating systems is required."
      ],
      "description": "This course is aimed at teaching beginning PLC programmers on how to use the Keyence GC Configurator software to meet their machine safety needs.  This course will cover everything from an introduction into machine safety principles, configuring the module and add-on modules, Input devices that are available, the functionality of these input devices, a walk through of how to program these devices to the outputs, configuring the outputs for proper functionality, configuring network communications, and lastly a brief overview of how to transfer information to the controller.  We will also cover the topic of wiring this controller to our safety devices whether it be through discrete wiring or networking into the machines main controller (PLC) to reduce any additionally wires that would be needed in a traditional hard wired safety-monitored relay.\nThis course is designed with the learner in mind, understanding that using real world applications is a must for better understanding within the learning environment.  This course will include two different real world examples for how to use this system that you can use within your own needed applications.  We will also cover the topic of why a controller like this is so valuable when configuring two-hand controls and how a system like this can help reduce large amounts of wiring.",
      "target_audience": [
        "Beginners who want to learn more about Functional Machine Safety.",
        "Beginners who want to know how to configure a Keyence GC Series Safety Controller for their Functional Machine Safety Project."
      ]
    },
    {
      "title": "Step By Step VHDL Programming for Xilinx FPGA & CPLD",
      "url": "https://www.udemy.com/course/step-by-step-vhdl-programming-for-xilinx-fpga-cpld-project/",
      "bio": "Learn VHDL Programming for Xilinx FPGA Architecture & PCB Design : Skills suitable for Electronics Engineering Students",
      "objectives": [
        "VHDL Programming Synthesis & Simulation Xilinx FPGA & CPLD Devices Xilinx ISE Design Suite & Implementation"
      ],
      "course_content": {},
      "requirements": [
        "Digitial Logic Design Concepts   Basic knowledge of any Programming Language ( Like Ex. C Programming )"
      ],
      "description": "Hello Dear Student ,\nWelcome for Learning  a Beginners Course with Basic Level Content focused on VHDL Programming as a beginner's reference , suitable for Electronics Polytechnic , Engineering & University Students & Hobbyists .\nApart from VHDL Programming content  using Xilinx ISE Webpack Software , added the Content of  PCB Design at a Very Basic Level ( Only Single Layer PCB Design ) using EasyEDA Software .\nYou may treat PCB Design Content as a complementary Content , if you are a Electronics Student .\nIf you are interested  in only VHDL Programming , you may skip / ignore the Content of PCB Design .\nAll the Content of this Course are based on Free Softwares & either On-Line Or Opensource Downloadable Softwares for Design / Programming .\n\n1. VHDL Programming using Xilinx ISE Webpack , a Free Downloadable Software ( After Creating your Account  / Registering on Xilinx Website ) .\nVHDL Programming Examples on Combinational & Sequential Digital Logic have been explained with Step by Step Approach i.e. VHDL Program , VHDL Test Bench , Synthesis & Behavioral Simulation ) . Also Programming Examples on VHDL based FSMs - Finite State Machines have been explained  .\n2. PCB Design Basics ( Only 1 - Layer PCB Design Examples ) using a OnLine & Free PCB Design Software “EasyEDA” ,( After Creating your Account / Registering on easyeda Website  .\nSingle Layer PCB Design Examples have been Explained with Schematic Design , PCB Layout Design ( Component Placement ) & Track Routing using Single Layer Design.PCB Design Examples based on Through Hole Components & SMT ( Surface Mount ) Components have been explained .\nAt the beginning , the Course Title was “ Step by Step VHDL Programming for Xilinx CPLD & FPGA ” , a Course in VHDL Programming for Beginner Level .\n\nMy approach is to continuously add & update the Content of this Course , so-that it may be helpful specifically to Electronics Polytechnic , Engineering , University Students & also to Hobbyists .\n\n\nCourse Update 2nd : ( Feb. 2021 ) : Added Content :  PCB Design Basics ( 1 Layer PCB  Design ) using EasyEDA software  .\n\nCourse Update 1st : ( Octo. 2021 ) : Added Content : FSM Examples with VHDL Programming .\n\n\nCourse Published ( In Sept. 2020 ) : Content of VHDL Programming using Xilinx ISE Webpack software .\n\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------\nInstructor has more than a 22 Years of Design / Training Experience after M.Tech. ( Master of Technology ) in Electronics Design & Technology , which includes the Experience in Electronic Circuit Design , Embedded System ,  VLSI -  VHDL & Verilog Programming for Xilinx FPGAs , CPLDs using Xilinx ISE Tool / Xilinx Vivado Tool , PSOC1 using Cypress PSOC Designer & PSOC3 /PSOC4 using Cypress PSOC Creator , Microcontroller Programming  STM32 ( 32 Bit ARM Core Based ) using STM32cubeIDE , MCS-51 (8051 ) family using Keil uVision 4 , Programming ATMega 16/32/128 using Atmel AVR Studio , Programming Microchip PIC 16/18 using MPLAB , Arduino Programming for Arduino Uno , MSP430 of Texas Instruments with Energia , Raspberry Pi  & Raspbian Linux , Python Programming with Python 3.9 ( IDLE) , Python Thonny , Python Pycharm , Anaconda Navigator - Jupyter Notebook , Spyder Python , Google Colab , Crouzet Millenium 3 for PLC Programming  & also PCB design which includes PCB Softwares such as EasyEDA  , Eagle ( Fusion 360 ) , KiCad 5.1 , Fritzing & Express PCB .\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------",
      "target_audience": [
        "Beginners , Hobbyists , Teachers & anyone who is interested to Learn to Create Digital Logic Designs , using FPGA / CPLD  .  University Students , Students from Engineering colleges & Polytechnic Institutes , who want to create the Design for their Programmable Electronics based Academic Project .  Anyone who wants to make career in FPGA , VHDL Programming .    Electronic Designers / Embedded  Engineers / Electronic Circuit Design Professionals , who are new to VHDL Programming & FPGA / CPLD Device Architectures ."
      ]
    },
    {
      "title": "Getting started with Arduino IoT cloud",
      "url": "https://www.udemy.com/course/getting-started-with-arduino-iot-cloud/",
      "bio": "Make real time IoT projects using Arduino IoT cloud platform",
      "objectives": [
        "Build real time working IoT Projects that connect to the Cloud",
        "Learn how to use the Arduino IoT Cloud Platform from the scratch",
        "Learn how to use the third party board with Arduino IoT cloud",
        "Learn to build the dashboard from the basics",
        "Use If This Then That (IFTTT) to integrate Webhooks into your IoT Applications",
        "learn to create thing in Arduino IoT cloud."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Arduino IDE",
        "Added advantage if know the Arduino C++ coding",
        "Basic knowledge of Electronics and Coding",
        "Willingness to learn"
      ],
      "description": "Description\nIn this course you will learn about the NEW Arduino IoT Cloud Platform .\nthis course specially focus more on practical projects not on theory .\nso i have designed this course in such way that we can learn IoT more easily when directly work on projects only.\nHere in this course i have tried make maximum IoT projects .\nWhat you will Learn\nIn this course, you will learn:\nA basic understanding of what is the Internet of Things\nWhat is the Arduino IoT Cloud Platform how to configure the IoT platform\nHow to setup your third party microcontrollers with Arduino IoT cloud\nHow to use the ESP32 /Esp8266 with Arduino IoT Cloud.\nLearn to build dashboards to monitor your Internet of Things (IoT) projects , peripherals and sensors\nLearn to integrate  Webhooks in your Internet of Things (IoT) Applications\nHow to use the If This Then That (IFTTT) to integrate services into your IoT Applications\nLearn how to use Arduino IoT cloud web editor.\nLearn how to make real time IoT Projects using ESP32 and different sensors.\nLearn how to interface different sensor with ESP32 and ESP8266.\n\n\n\n\nWhat projects you will build\nWe will start with basics by building simple Internet of Things (IoT) Cloud projects such as:\nHome Automation project where we will control the electrical appliances using Arduino IoT app\nGetting started with Arduino IoT cloud | Arduino IoT cloud with Esp32\nTaking Analog sensor Readings\nDetecting events from IoT devices like a button push in the Cloud.\nSoil moisture sensor with Arduino IoT cloud | IOT Smart Plant Monitoring System.\nSending sensor data to google sheet using Arduino IoT cloud | log sensor data in cloud.\nHow to send sensor data from Arduino IoT cloud to Email | webhook & IFTTT with Arduino IoT cloud.\nDS18B20 Temperature sensor with Arduino IoT Cloud | DS18B20 with Esp32 & Arduino IoT Cloud.\nIoT based Noise pollution monitoring using Arduino IoT cloud @Arduino | Sound sensor with ESP32\nYou will also learn how to build Internet of Things (IoT) dashboards with little to no code to monitor your Things and Properties from the Cloud!",
      "target_audience": [
        "Students",
        "Internet of Things (IoT)  Hobbyists",
        "Electronics Hobbyists",
        "Electrical Engineers",
        "Makers",
        "STEM teachers"
      ]
    },
    {
      "title": "RTOS with PIC Microcontroller",
      "url": "https://www.udemy.com/course/rtos-with-picmcu/",
      "bio": "A course on PIC fundamentals to RTOS implementation",
      "objectives": [
        "Basics of PIC Microcontroller: GPIO, Interrupts, Timers, ADC and Serial Communication",
        "Building RTOS Projects using FreeRTOS",
        "Building your own Hardware: Rigging up circuits and soldering",
        "Reading device datasheet to develop projects"
      ],
      "course_content": {
        "Getting to Know": [
          "About this course",
          "PIC Microcontrollers",
          "Microcontroller Overview",
          "Software Installations",
          "List of Components"
        ],
        "Hardware Design & Prototyping": [
          "Circuit Design",
          "Circuit Design- Part2",
          "Power Supply for PIC",
          "Basic Connection Requirements",
          "Bluetooth Connections",
          "LEDs for GPIO",
          "LCD Connection",
          "Flashing the PIC",
          "KiCAD PCB Files"
        ],
        "Basic Programming": [
          "Creating a Project",
          "XC32 Compiler for PIC32M",
          "General Purpose Output",
          "General Purpose Input",
          "Core Timer",
          "External Interrupts",
          "Input Change Notification",
          "LCD Interface",
          "Quiz Buzzer"
        ],
        "PIC Peripheral Interface": [
          "Timer1",
          "32-Bit Timers",
          "Watchdog Timer",
          "Input Capture",
          "Output Compare",
          "Analog-to-Digital Converter(ADC)",
          "UART for BLE",
          "MPLAB Harmony Configurator (MHC)",
          "Assignment"
        ],
        "RTOS Fundamentals": [
          "What is FreeRTOS?",
          "FreeRTOS Project in MPLABX",
          "Task Management",
          "Inter-Task Communication",
          "Idle Task & Critical Section",
          "Memory Management"
        ],
        "RTOS Advanced": [
          "Software Timer",
          "Interrupt Management",
          "BLE tasks demo",
          "Resource Management",
          "Mutexes"
        ]
      },
      "requirements": [
        "Hardware components given in the list",
        "PICKIT3 Programmer",
        "Computer with MPLABX IDE",
        "No programming experience required. You will learn everything you need to know."
      ],
      "description": "This course is mainly focused on teaching the fundamentals of PIC microcontrollers without any prior programming knowledge. You will build your own hardware by making use of the microcontrollers and other circuit components. You will learn how to write codes to perform basic tasks by referring to device datasheets. Register level coding is used throughout the course so that you will get a complete hold on the PIC microcontroller programming. You will not use a Code configurator or any peripheral libraries. Instead, you will be able to build peripheral libraries and use those in implementing various functionalities.\nIf you are a beginner who wants to become an expert in PIC microcontrollers, this is the course for you. If you are an expert who uses peripheral libraries and code configurator to build your PIC projects, and who wishes to know the register level coding, this is for you.\nApart from PIC fundamentals, the course covers RTOS concepts by making use of open-source FreeRTOS kernel. You will understand multitasking, task scheduling, and intertask communication.\nThe code you would write will run on the hardware you would build. That means you will become an expert in both hardware and firmware development. You will get in-depth hands-on experience with simple examples to understand the underlying concept.\nIf you are a student, this course will add value to your resume, to conduct your academic project works and find a career in embedded systems. If you are a professional working in the embedded field or want to find a career in embedded systems, this course will help a lot.",
      "target_audience": [
        "Beginners in electronics",
        "Engineering students",
        "DIY Enthusiasts",
        "Professionals"
      ]
    },
    {
      "title": "PIC Microcontroller: Make an Electronic Door Lock System",
      "url": "https://www.udemy.com/course/pic-microcontroller-make-an-electronic-door-lock-system/",
      "bio": "This guide will help you make an Electronic Door Lock system in a Step by Step Manner at home in no time.",
      "objectives": [
        "Make your own Electronic Security Door Lock",
        "Use Serial Communication",
        "Simulate Electronic Circuits",
        "Interface Keypad and Relay with Microcontroller",
        "Interface PIC Microcontroller with Computer to send Password"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Programming"
      ],
      "description": ">>> This guide will help you Make Electronic Door Lock using PIC Microcontroller in no Time <<<\nWhy you should take this course?\nThis course will teach you how to build an Electronic Door Lock System in a step-by-step manner.\nYou'll learn the theory behind this system and understand the basic components that are required.\nYou'll also have a huge range of resources to study from, with detailed explanations on every aspect of this process.\nThis kit includes everything you need to complete this task, including a sound sensor, pressure mat, IR sensor, as well as a remote control.\nYou will be able to apply your knowledge of electronics to make a lock system for your home.\nContinual Updates <<<\nMore Than 1700 STUDENTS!!! THANK YOU!!!\nWhat students are saying:\nBobbie Smith says, \"The presentation and explanations are excellent. Thank you.\"\nWelcome to the Make Electronic Door Lock using PIC Microcontroller course.\nThis course will help you make an electronic door lock system using tools that you already have to make your life easier and more secure. You can make this electronic door lock using a keypad or a computer via serial terminal and serial communication protocol.\nYou will get a step-by-step tutorial on what you need to do to get full control over any home, car door, or any other door that you want to add more security to.\nThis is a course on interfacing door locks, computers, LCDs, keypads, and other devices with PIC Microcontroller to achieve the ultimate goal of creating an electronic lock. It will give you the ability to make higher-level projects.\nYou will learn how to use the technology embedded in your Microcontroller to make your everyday life much safer.\nThings You Will be Introduced to in This Course:\nDoor lock (an electronic one)\nLCD (Liquid crystal display)\nKeypad 43 or 44\nPIC Microcontroller\nWires, resistors, and other basic electronic components\nBreadboard\nSoftware Used in This Course:\nMikroC Pro: For writing the C code that will be used by the PIC Microcontroller.\nProteus: For simulation purposes, used to draw the schematic and test out the code before doing the practical part.\nAt the end of this course, you will be able to program a PIC Microcontroller to control an electronic door lock and make it open or close using a number that you enter via a keypad. You will also display the entered data using an LCD Display.\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects.\nWe strive to put all our hands-on experience into these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k + Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, in particular for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nWhat you will learn\nHow to build an electronic door lock system.\nUnderstanding the theory and components behind the system.\nStep-by-step construction of the door lock system.\nHow to program PIC Microcontroller for the door lock.\nUsing MikroC Pro for coding and Proteus for simulation.\nPractical applications of electronic door locks.\nWho is this course for\nElectronics enthusiasts.\nStudents and professionals interested in security systems.\nHobbyists wanting to build their own electronic door locks.\nAnyone interested in PIC Microcontroller projects.\nRequirements\nBasic understanding of electronics.\nA computer with internet access.\nEnthusiasm to learn and build.",
      "target_audience": [
        "Anyone Interested in Microcontrollers",
        "Anyone Interested in Making Projects",
        "Anyone Interested in Learning New Topics in Programming and Microcontroller",
        "Anyone looking to build his own Security Locker"
      ]
    },
    {
      "title": "The Complete Digital Computer Engineering Circuit Simulation",
      "url": "https://www.udemy.com/course/digital-computer-logic-electronic-engineering-circuit-simulations/",
      "bio": "An Introduction to How Digital Computers and Electronics Systems Work and The Fundamental Principles Behind a System",
      "objectives": [
        "Understand and utilize virtual instrumentation to analyze digital circuits",
        "Study and apply the concepts of basic computer logic design[Or-And-Not]",
        "Study and apply the concepts of basic computer logic design[Nand-Nor]",
        "Understand and apply Boolean theorems to computer logic design",
        "Describe and utilize the Universal gates [Nand and Nor] to computer logic design",
        "Analyze Combinational Computer Logic Circuits",
        "Utilize simplification techniques to computer logic design",
        "Utilize Karnaugh Mapping Techniques to simplify digital logic designs",
        "Design computer combinational logic circuits",
        "Understand and utilize arithmetic computer logic circuits",
        "Design Computer Digital Logic Circuits with Medium Scale Integrated Circuits",
        "Design Computer Sequential Logic Circuits"
      ],
      "course_content": {},
      "requirements": [
        "Able to read and write English",
        "Basic Algebra",
        "Basic Electronics Background",
        "Basic compuer skills and internet navigation"
      ],
      "description": "This course provides a solid foundation in digital electronic systems. How the electronic devices and subsystems work in a digital computer and similar machines. The course covers combination and sequential logic circuits. Topic study will include number systems, Boolean algebra, logic families, medium-scale integration (MSI) and large-scale integration (LSI) circuits, analog-to-digital (AD) and digital-to-analog (DA) conversion, and more related topics. Upon completion, students will be able to construct, analyze, verify, and troubleshoot digital circuits using appropriate techniques and procedures and test related equipment.\nThis course also demonstrates the use of FPGA programming using HDL. Project creation of FPGA basic applications using industry-grade software used by digital system designers. This process involves a lot of components, from determining the logic behind the project to simulating before deployment to testing and seeing results before full implementation.\nHere is an example of VHDL programming: Here's your VHDL code implementing an AND gate using the requested format and labels: library ieee;\nuse ieee.std_logic_1164.all;\nuse ieee.numeric_std.all;\n\n\nentity gate is\nport (\nA: in std_logic_vector (0 to 9);\nB: in std_logic_vector (0 to 9);\nY: out std_logic_vector (0 to 9) := (others => '0');\nSEL: in std_logic_vector (3 downto 0);\nHEX_OUT: out std_logic_vector (0 to 6)\n);\nend gate;",
      "target_audience": [
        "Engineering and Computer Students",
        "Engineering and Computer Professionals",
        "Anyone desiring to Learn the Fundamentals of Computer Digital Logic"
      ]
    },
    {
      "title": "Learn PCB Design & Layout Techniques",
      "url": "https://www.udemy.com/course/pcb-design-layout-techniques/",
      "bio": "Master the Art of PCB Design: Your Complete Step by Step Guide to Schematic & Layout Techniques",
      "objectives": [
        "Learn KiCAD",
        "Multilayer design",
        "Mixed signal design",
        "Differential pairs",
        "Panelization techniques",
        "Gerber generation",
        "EMC, ESD, Protection Techniques",
        "Placement and routing techniques"
      ],
      "course_content": {
        "Module 0: Introduction": [
          "Overview",
          "FAQs"
        ],
        "Module 1: Components & Tools": [
          "Topic 1: Component Mounting Technology",
          "Through Hole Technology",
          "Surface Mount Technology",
          "Soldering Technology",
          "Quick Review",
          "Topic 2: Component Packaging",
          "Resistors, Capacitors and Inductors",
          "Diodes, Transistors and 3 Pin Regulators",
          "Integrated Circuits",
          "Panel Mount Components",
          "Connectors",
          "Miscellaneous Components",
          "Quick Review",
          "Topic 3: EDA Tools",
          "PCB Design Tools",
          "First PCB",
          "Quick Review",
          "Module 1 Assignment",
          "Module Test"
        ],
        "Module 2: PCB Design - 1": [
          "Topic 1: Schematic Design",
          "KiCAD Schematic Editor",
          "Schematic Design: Single Layer PCB",
          "SchematicDesign: Double Layer PCB",
          "Schematic Design:Four Layer PCB",
          "Quick Review",
          "Topic 2: Layout Design",
          "KiCAD Layout Editor",
          "Layout Design: Single Layer PCB",
          "Layout Design: Double Layer PCB",
          "Change Component Package",
          "Add Mounting Holes, Fiducials, Tooling Holes",
          "Modify PCB Shape or Edge",
          "Auto Route",
          "PCB Panelization",
          "Layout Design: Four Layer PCB",
          "Fabrication Output",
          "Upgrade Library",
          "Quick Review",
          "Module 2 Assignment",
          "Module Test"
        ],
        "Module 3: PCB Design - 2": [
          "Topic 1: EMC, ESD and Protection Techniques",
          "EMC",
          "Power and Ground Planes",
          "PCB Layout Techniques",
          "Mixed Signal Layout Techniques",
          "Power Supply Layout Techniques",
          "Circuit Design Techniques",
          "Cabling & Shielding Techniques",
          "Circuit Protection Techniques",
          "Quick Review",
          "Topic 2: Advanced Routing Techniques",
          "Routing Ball Grid Array Package",
          "Routing and Tuning Differential Pairs",
          "Quick Review",
          "Module 3 Assignment",
          "Module Test"
        ],
        "Module 4: Final Project": [
          "Introduction",
          "Schematic Design",
          "Layout Design"
        ],
        "Module 5: Test": [
          "Final Test"
        ],
        "Module 7: Conclusion": [
          "Summary"
        ]
      },
      "requirements": [
        "Basic knowledge in electronics. Basic computer proficiency. Self motivated.",
        "A desktop/laptop with good internet connectivity is recommended. A 64 bit computer of atleast 4GB RAM and 10GB of HDD free space with Windows/Ubuntu/Mac OS is recommended.",
        "Windows version preferred is 8.1 or 10, Ubuntu version preferred is 20.04 (LTS) or above, Mac version preferred is macOS 11 or 12",
        "KiCAD 6.0.7 is the PCB design tool version to be installed. Previous versions will also work.    Also install the latest version of expresspcb software."
      ],
      "description": "PCB Design is an interdisciplinary skill involving both mechanical and electrical domains. At one point you might be measuring the dimensions. At another instant you possibly could be calculating the impedance or current flow or temperature rise. Some consider PCB design to be an art. Designers try to express them by placing the components aesthetically.  You should be very creative and technically sound to make the PCB aesthetically pleasing as well as highly functional.\nLearn PCB Design & Layout Techniques is a comprehensive course that introduces you to the world of PCB design. Whether you are a beginner or have some experience in electronics, this course will equip you with the knowledge and skills needed to create professional printed circuit boards.\nSo,\nHow do you design a PCB?\nWhat are the tools used?\nHow do you choose the parameters for design?\nHow do you design a multi layer PCB?\nHow do you employ EMC design techniques in PCB design?\nThis course covers all these topics. The course is a blend of both theory and practicals. This is a step-by-step course on printed circuit board design. This course aims to equip you with technical knowledge on PCB design, help you build multi layer PCB and thus launch yourself to a platform from where you could explore the advanced concepts on your own. We welcome you to join our course on PCB Design & layout techniques.",
      "target_audience": [
        "Beginners of engineering/diploma in EE/ECE/CSE.",
        "Students looking for certfication or credits.",
        "Hobbyists.",
        "Seasoned or experienced or professional PCB designers wouldn't find this useful."
      ]
    },
    {
      "title": "Computer Architecture: Measures for Design & Analysis",
      "url": "https://www.udemy.com/course/computer-architecture-measures/",
      "bio": "Learn how computers including your smartphone is being optimized.",
      "objectives": [
        "Measurements essential for designing and analyzing any computer architecture.",
        "Trends in Computer Technology",
        "Trends in Computer's Power & Energy",
        "Trends in Computer Cost",
        "Quantitative principles of computer design",
        "Benchmark analysis & Benchmark Suites"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Glimpses of Performance Improvement": [
          "Performance growth in past 42 years",
          "Limitation in Growth"
        ],
        "Classes of Computer": [
          "Intro to classes of computer",
          "IoT and Embedded Computers",
          "PMDs",
          "Desktop Computers",
          "Servers",
          "WareHouse Scale Computers"
        ],
        "Classes of Parallelism": [
          "Introduction to parallel architecture",
          "Flynn's classification"
        ],
        "CA: Quantitative Definition": [
          "Quantitative Definition",
          "Instruction Set Architecture",
          "Genuine Computer Architecture"
        ],
        "Trends in Technology": [
          "Trends in Technology",
          "Performance Improvement: Bandwidth over Latency",
          "Scaling of Transistor Performance & Wires"
        ],
        "Trends in Power & Energy": [
          "Challenges",
          "Energy & Power within Microprocessor"
        ],
        "Trends in Cost": [
          "Impact of Learning Curve",
          "Cost of IC",
          "Cost v/s Price"
        ],
        "Dependability": [
          "Dependability"
        ],
        "Performance Measurement": [
          "Intro",
          "Benchmarks",
          "Reporting & Summarizing Results"
        ]
      },
      "requirements": [
        "Although there isn't any requirement to understand the content, a single course work in computer domain will be helpful.",
        "Introductory knowledge of digital logic design.",
        "Introductory knowledge of Microprocessor."
      ],
      "description": "Computer technology is making great progress everyday. From as big as a room sized computers, we have reached at the point in time where some computer can't be seen using naked eyes and can go into human body to perform surgeries without him even realizing it. We have reached at a point in time where computer no longer have a fixed physical description. Like a amoeba, computer today have no fixed size and shape. It is tied to your wrist in the form of a smart watch, and it is attached on almost everything in the form of Internet of Things devices.\nComputers came a long way to this never ending journey. Improvements in fabrication technologies and computer architecture have driven these incredible changes and thus are responsible for enhancement in performance. Performance, which equates today's smartphone to the supercomputers of just twenty years back.\nThis course describes all the challenges computer architects faced and are still facing in an attempt to make computers more power efficient and high performing than ever. Many technologies, like Internet, have came and stabilized, but computer architecture have seen and still seeing great amount of change every single months and that's the reason you are seeing hardware vendors like Qualcomm, HiSilicon, Samsung are launching new chip-sets for different classes of computers almost every new month. Hence, it becomes very important to understand the specs of each new computer, which further requires knowledge of measurements that are essential for design and analysis of computer architecture.",
      "target_audience": [
        "Anyone want to explore how today's smartphones are getting improved every year.",
        "Who is willing to understand benchmark scores.",
        "Who is willing to understand computer/smartphone specifications."
      ]
    },
    {
      "title": "VFD Basics with Real Applications Supported by PLC & HMI",
      "url": "https://www.udemy.com/course/delta-vfd-real-applications-with-plc-modbus-hmi-vfdsoft/",
      "bio": "Learn AC Drive (VFD) Basics with Real Hardware (Supported By PLC & HMI & Modbus and Softwares)",
      "objectives": [
        "Delta AC Drives",
        "Modbus Communication",
        "HMI Programming",
        "DOPSoft",
        "ISPSoft",
        "Plc Programming Basics",
        "Motor Control Basics",
        "AS200 Series Plc Basics",
        "Technical Informations About Industrial Automation",
        "Applications and Realities",
        "VFD Basics",
        "PID Control of VFD",
        "VFDSoft",
        "Schneider ATV12 VFD",
        "Schneider VFD Control Methods",
        "Schneider VFD Basics",
        "Lenze VFD",
        "Lenze 8200 Vector",
        "GDC (Global Drive Control)"
      ],
      "course_content": {},
      "requirements": [
        "You need to be  willing to learn and be patience .You need to  keep following instructions and applications carefully"
      ],
      "description": "Dear Students,\nWe prepared applications for you by using delta vfd , schneider vfd , lenze vfd with real hardware.\nYou will see how we can control a 3 phase motor.\nYou will see how the parameters of vfds affect the motor.\nWe read all the values of the vfd over Modbus communication and wrote the values to the vfd.\nWe run the vfd with the keypad on it.\nWe run the vfd with the buttons on it.\nWe run the vfd frequency with digital potentiometer or up and down keys.\nAt the same time, we checked the vfd with the external terminals.\nWe wrote a frequency value to the vfd with an external potentiometer.\nWe controlled the vfd with serial communication over PLC and wrote all frequency values over communication.\nAt the same time, we gave the forward-reverse and stop-run commands of the vfd over communication.\n\n\nWe have programmed the terminals on the vfd and made applications for you to do almost any application.\nWe did PID control with the vfd.\nWe applied different voltages to the vfd and the motor, applied dc brakes and monitored all results.\nWith the Dopsoft program, we made control the vfd via hmi.\nWhile learning dopsoft on the one hand, we showed all the values of the vfd on the screen with dopsoft on the other hand.\nAnd we wrote to the vfd from the HMI .\n\n\nWe learned about plc programming by making small applications with basic plc programming training.\n\n\nWith the VFDSoft program, we connected to the vfd and checked the vfd on the computer.\nWe backed up the vfd parameters and uploaded the backed-up parameters to the vfd.\nWe watched and recorded the vfd's information with the trend.\nWe have seen how we can easily change the parameters of the vfd with vfdsoft.\n\n\nWith schneider VFD sections, you can learn that complete parameter structure of Schneider vfds.\nAlso , in Lenze VFD section , you can learn that basics of Lenze 8200 vector vfd and also how to control it via pc or via terminals.\n\n\nShortly , what you will learn\n- Delta AC Vfds\n- Delta VFD Parameters and Applications\n- Schneider ATV Vfds\n- Schneider ATV12 VFD Applications\n- Schneider ATV12 VFD Control Methods\n- VFDSoft\n- ISPSoft\n- Basics of Plc Programming\n- AS200 Series Plc\n- DOPSoft\n- DOP 100 HMI Basics\n- Complete Modbus (RS-485) Communication\n- PID Control\n- Motor Control for Different Conditions and Applications\n- Lenze 8200 Vector VFD\n- Global Drive Control (GDC) Software\nAnd much more than these.\nYou can learn deeply how to control vfds with different brand vfds.\n\n\nIf you stuck at any point that you can ask a question directly to us.",
      "target_audience": [
        "Anyone wanting full control of delta vfds",
        "Anyone who wants to do modbus communication with Delta vfds",
        "Anyone who wants to use delta vfds in all kinds of applications",
        "Anyone who wants to improve plc programs and applications"
      ]
    },
    {
      "title": "Arduino and Design: Make Your First Robot",
      "url": "https://www.udemy.com/course/arduino-and-design-how-to-make-robot/",
      "bio": "Build a Robot with the Arduino from Scratch. Become confident with the Arduino Board and learn about Robotics",
      "objectives": [
        "Develop the mechanical design skills to start building complex parts",
        "Understand how to use the Arduino or Arduino/Genuino 101 to build great products",
        "Understand the workflow of building a complete Robotic system from scratch"
      ],
      "course_content": {},
      "requirements": [
        "A computer with Windows, Linux or OSX",
        "Basics of Mechanical Design and 3D modeling",
        "Very basic knowledge of electronic components (Resistors, LED's, Breadboard, ...)",
        "Ideally have an Arduino or Arduino/Genuino 101"
      ],
      "description": "Build a Robot by using the popular Arduino Board!\n\nThis course will teach you the process for building a robot from the idea stage to a functional robot prototype.\nUsing the popular Arduino board, you will be guided step by step with various Arduino Projects that are fun and ideal to learn the basics of programming the Arduino and building a Robot from scratch.\nThe course is for everyone whether you are a beginner or a more advanced Maker who wants to understand the complete process of building a Robotic system.\n\nYou will learn:\nThe basics of Robotics\nHow to Design your Robot step by step.\nHow to Create the 3D parts required to assemble the robot.\nThe basics of Electronics.\nThe basics of Programming the Arduino / Genuino 101 board.\nAnd much more...\nThe course will cover a broad range of topics and by the end of the course, you will have the skills to take your own projects from the idea stage to actually having the physical system in your hands working and functional.",
      "target_audience": [
        "Everyone who wants to start learning how to design complete mechatronics systems from scratch"
      ]
    },
    {
      "title": "Learn Arduino Programming",
      "url": "https://www.udemy.com/course/learn-arduino-programming/",
      "bio": "Learn C programming on the Arduino platform not just plugging wires in and copying code samples.",
      "objectives": [
        "Learn about the Arduino and how to program it",
        "Learn the C Programming language and understand how it is used for the Arduino",
        "Leanr unique approaches to using the Arduino"
      ],
      "course_content": {},
      "requirements": [
        "None"
      ],
      "description": "Lets learn programming for Arduino.\nI'm not going to teach where to plug a wire into the board to make a light come on.\nI'm going to teach you \"C\" Programming and how the Arduino works with the Arduino IDE.\nI will show you to load the platform and connect a board then show you how to program with the \"C\" Programming Language to include fundamental programming concepts needed to create an Arduino program.\nI'll show you how to \"Burn\" the program to the board and how to verify the programming is running with advanced debugging techniques other then watching an LED flash.\nI will build on programming concepts and show you more and more features before we talk about the hardware itself.\n\n\nWhen we get into the hardware I will show you how to interface to digital devices and get input and send output.\nWe will conclude this Basic class with a simple program to turn on and off a 110 volt light using a SAFE and UL approved hardware interface that the Arduino can control with 5 Volts DC.",
      "target_audience": [
        "Beginners who want to learn real programming on the Arduino not jsut plugging wires together.",
        "People who have purchases the Arduino hardware and really don't understand how to get started",
        "Professionals who want to undewstand what the Internet of Things is really about"
      ]
    },
    {
      "title": "VLSI/FPGA Design P3: Common Used Hardware Architectures",
      "url": "https://www.udemy.com/course/digital-icfpga-design-p3common-used-hardware-architectures/",
      "bio": "A Big Step Towards Complex IP Design",
      "objectives": [
        "Behavior of SRAM and usage suggestions",
        "Handshake interface and synchronous FIFO",
        "Pipeline to maximal clock frequency",
        "Arbiter",
        "Cross clock domain (CDC) and asynchronous FIFO",
        "Ping-Pong",
        "Pipeline with control (feedback)",
        "Pipeline with hazard and forward path",
        "Slide window"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of digital fundamental",
        "Basic C or C++ programing language",
        "Basic Verilog Language"
      ],
      "description": "Please contact SKY (DM or E-mail to siliconthink@126.com) for special offer of $12.99 USD.\nIn this chapter I will introduce common used hardware architectures, including:\n1: Behavior of SRAM and usage suggestions;\n2: Handshake interface and synchronous FIFO;\n3: Pipeline to maximal clock frequency;\n4: Arbiter;\n5: Cross clock domain (CDC) and asynchronous FIFO;\n6: Ping-Pong;\n7: Pipeline with control (feedback);\n8: Pipeline with hazard and forward path;\n9: Slide window;\n\n\nThese are useful architectures engineer used to deal with complex designs, such as RISC-V CPU core, AI accelerator and so on. To help you mastering them, I will assign a coding exercise after each section.\n\n\nThis is chapter 3 of whole Digital IC and FPGA design course.\nIn the whole course, I will introduce fundamentals of digital IC and FPGA design, with 12+ coding exercises and 3 course projects.\nTheory part: MOS transistor -> logic cells -> arithmetic data path -> Verilog language -> common used HW function blocks and architecture -> STA -> on-chip-bus(APB/AHB-Lite/AXI4) -> low power design -> DFT -> SOC(MCU level).\nFunction blocks and architecture: FSM, pipeline, arbiter, CDC, sync_fifo, async_fifo, ping-pong, pipeline with control, slide window, pipeline hazard and forward path, systolic.\nProject: SHA-256 algorithm with simple interface, SHA-256 with APB/AXI interface, 2D DMA controller with APB/AXI interface.\nAfter explaining of each HW architecture, I will give you a coding exercise, with reference code. Coding difficulty will begin from several lines to fifty lines, more than 100 lines, then around 200 lines. While the final big project will be 1000+ lines.\nI suppose these should be essential knowledge and skills you need master to enter this area.\nI will try my best to explain what-> how-> why and encourage you to do it better in this course.\n\n\nPlease browse to my homepage on Udemy to obtain information about each chapter of this course.",
      "target_audience": [
        "Senior undergraduate students of EE or higher",
        "IC design/verification engineers with 0~2 year experience"
      ]
    },
    {
      "title": "Voice of Arduino: Transform Text to Speech!",
      "url": "https://www.udemy.com/course/arduino-based-text-to-speech-tts-converter/",
      "bio": "Elevate your Arduino projects with voice! Dive deep into creating an Arduino-based Text-to-Speech converter",
      "objectives": [
        "You can use it to turn your text into human-sounding speech, which will make your Arduino projects much more interesting.",
        "Make your own Arduino Based Device that Sends Human Voice Output to users",
        "Learn Working Principle of Text to Speech Conversion",
        "Use different commands to initiate different voice actions on the Arduino side",
        "Learn how to use Arduino with a step by step guide on how to speak any text using human voice.",
        "This course will help you make your first step into the world of Arduino.",
        "You can use the Arduino to make your own voice activated projects.",
        "Move your Arduino Controlling to the Next level with Text to Speech"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "The people will learn about some programming languages like C++, Python, and JavaScript in order to make this system work perfectly and do what they want with it.",
        "It's fun and easy to make your own voice controlled devices!",
        "A will to Apply",
        "combine both of items and create a system that can convert text into speech.",
        "The course contains well structured content and we offer lifetime access with no monthly payment plan, so the only cost to you is the one time purchase price."
      ],
      "description": "The Power of Speech with Arduino:\nWhy limit your Arduino to LEDs and motors when it can speak? This course offers a unique opportunity to imbue your Arduino projects with the magic of speech, making them more interactive and user-centric.\nJourney Overview:\nWhat's Text-to-Speech (TTS)? Delve into the world of TTS and understand the transformative power of voice in electronics.\nThe Arduino Voice Blueprint: Uncover the mechanics of building a TTS converter using Arduino, from circuit design to coding.\nHuman Voice, No Hassles: Learn to produce clear, human-like speech from your Arduino without diving deep into complex programming.\nWhy This Course?\nAll-in-One Guide: From hardware to software, get a comprehensive understanding of creating a TTS system.\nPractical Learning: Real-world projects to test and hone your skills.\nNo Advanced Programming: Harness the power of speech without getting tangled in intricate code.\nExpert Guidance: With our easy-to-follow guide, even beginners can embark on this voice journey.\nCourse Takeaways:\nComplete know-how of setting up a TTS converter with Arduino.\nVoice-control your Arduino projects.\nBuild more interactive, user-friendly electronic projects.\nMaterials & Tools:\nHardware: Arduino board, Speaker, Amplifier Circuit, and connecting wires.\nSoftware: Arduino IDE and a free Text to Speech Library.\nUnlock a New Arduino Skillset:\nVoice has reshaped modern technology – from phones to smart homes. Now, it's time to bring that revolution to your Arduino projects. This course promises not just learning but also the thrill of hearing your Arduino speak.\nJoin Us & Make Your Arduino Speak!\nEmbark on this exhilarating journey of melding voice with electronics. With our step-by-step guidance, you'll be able to make any text come alive with human-like speech. Enroll now and amplify your Arduino skills!\nUser Testimonials: \"This course brought my Arduino projects to life with voice. It's clear, practical, and fun!\" - Sam K.\n\"A fantastic course for anyone wanting to add speech to their Arduino projects. Highly recommend!\" - Laura P.\nAuthor Bio: Ashraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world. With over 250,000 students from around the world, Ashraf’s online courses have helped many to kick-start their careers in the industry.\nCall to Action: Enroll now to give your Arduino projects a voice and take your skills to the next level!\nFAQ: Q: Do I need prior experience in electronics or programming to take this course? A: No, this course is designed for all levels.\nQ: Will I need to buy additional equipment? A: The course provides a list of necessary hardware, all of which are affordable and easily accessible.\nWhat You Will Learn\nUnderstand the basics of Text-to-Speech (TTS)\nBuild a TTS system using Arduino\nImplement voice control in your Arduino projects\nGain practical experience through hands-on projects\nWho Is This Course For\nArduino enthusiasts\nHobbyists looking to add voice to their projects\nBeginners in Arduino programming\nAnyone interested in Text-to-Speech technology\nRequirements\nAn Arduino board and basic electronic components\nBasic understanding of using a computer\nNo prior programming or electronics experience needed\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects. They strive to provide deep, hands-on experience in their courses, offering step-by-step blueprints on various topics.\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and maker. He has been the Chief Educational Engineer at Educational Engineering Team since 2007, and his mission is to explore new trends and technology to help educate the world. His online courses have helped over 250,000 people worldwide to build successful careers.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Electronics Geeks",
        "Arduino Geeks",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Learning More about Text to Speech with Arduino",
        "Anyone Interested in Learning about using Voice in Control Projects",
        "Anyone looking for a new way to make a more interactive Arduino Projects",
        "If you are a student, teacher, or engineer, Arduino is a great platform to learn electronics.",
        "This course is intended for learners who have already completed the basics of Arduino and are looking to go a step further."
      ]
    },
    {
      "title": "TinyML with Arduino Nano RP2040 Connect",
      "url": "https://www.udemy.com/course/tinyml-with-arduino-nano-rp2040-connect/",
      "bio": "Machine learning model development for tiny low power microcontroller such as Arduino nano RP2040 connect.",
      "objectives": [
        "To be able to understand hardware requirement for development of machine learning model for tiny MCUs",
        "Understanding the tinyML development framework",
        "To be able to create tinyML projects based upon hand gesture",
        "To be able to develop tinyML model with audio keyword detection",
        "To be able to create own classification model using Decision Tree classifier from Scikit-learn"
      ],
      "course_content": {},
      "requirements": [
        "Arduino nano-RP2040 connect board, USB cable, PC/Laptop, Basic knowledge about Arduino IDE, basic knowledge of machine learning, basics of embedded C/C++",
        "To develop model from scratch, you need basic idea of Python, Numpy and Pandas to understand the code. The source code is provided, if you are a beginner in Python, you can easily understand the code. It is well explained in Video."
      ],
      "description": "**Note: This course is not finalized yet. As you know, the TinyML field is constantly growing and developing. So, keeping in mind more sections with theoretical explanations with hands-on project ideas will be included in the near future.\nTiny machine learning, which targets battery-operated devices, is broadly defined as a rapidly expanding field of machine learning technologies and applications that includes hardware (dedicated integrated circuits), algorithms, and software that can perform on-device sensor data analytics at extremely low power, typically in the mW range and below. It eliminates the requirement to send data to the cloud for classification thus providing more security. Also, power-hungry processors are being replaced by a tiny MCU. Of course, there are limitations. The limitations came from limited hardware resources, clock speed, etc. Still, there are several application areas where high computation is not required and a machine learning-based solution is desirable. In that case, TinyML will come into the picture. It can be used to detect anomalies in machinery in a factory, it can predict maintenance requirements of the instruments, healthcare field, and so on. The application domain of TinyML is wide and the future is bright.\nThe primary objective of this course is to be familiar with TinyML development starting from data collection, model training, testing, and deployment. A low-cost Arduino nano RP2040 connect board having 265KB RAM and 16MB flash with in built accelerometer, Gyroscope, Microphone, temperature sensor, and wireless connectivity module (WiFi+Bluetooth) is used in this course and all example demonstrated here is tested on this board.",
      "target_audience": [
        "Beginner, interested to develop machine learning model in low cost, low power microcontroller"
      ]
    },
    {
      "title": "Using AI to Code: Your Step-by-Step Guide",
      "url": "https://www.udemy.com/course/using-ai-to-code-your-step-by-step-guide/",
      "bio": "Master AI coding assistants to generate, optimize, and debug code across multiple programming languages and tools.",
      "objectives": [
        "What is artificial intelligence (AI)",
        "What is ChatGPT",
        "How to use AI to write embedded systems code",
        "How to use AI to build embedded systems project",
        "How to use AI to fix errors in embedded systems code"
      ],
      "course_content": {},
      "requirements": [
        "This course is designed for beginners who are new to programming and AI. However, basic knowledge of programming concepts and computer science fundamentals will be helpful."
      ],
      "description": "This course provides a clear, structured approach to using AI tools like ChatGPT to code smarter, faster, and with greater confidence. You'll learn how to prompt effectively, debug efficiently, and use AI suggestions to accelerate development without losing control of your code.\nWhether you’re a beginner learning programming or an experienced developer exploring AI-powered productivity, this guide gives you the practical skills to turn AI into your daily coding assistant.\nWhat You Will Learn\nUnderstand AI-Assisted Coding Tools\nLearn how large language models like ChatGPT interpret code-related prompts and deliver helpful results.\nWrite Effective Prompts for Code Generation\nDiscover how to get exactly the code you need—functions, scripts, classes, or full apps.\nDebug and Optimize Code with AI Help\nUse AI to find bugs, suggest improvements, and clean up syntax or logic issues.\nWork Across Multiple Languages\nUse ChatGPT for Python, JavaScript, C/C++, HTML/CSS, Arduino, and more.\nCreate Real Projects with AI\nBuild complete applications by breaking projects into AI-friendly steps and managing code flow.\nAvoid Pitfalls and Misuse\nUnderstand where AI-generated code might fail and how to correct or validate it effectively.\nby enrolling in this course, you will gain a strong foundation in using AI to code, which can help you stay ahead of the curve in the job market and enhance your career opportunities.\nDon't wait any longer, enroll today and take the first step toward becoming an expert in using AI to code!\nWho This Course Is For\nBeginners looking to boost confidence and productivity while learning to code\nIntermediate developers wanting faster prototyping and problem-solving\nMakers and tech hobbyists using AI for hardware-related programming\nTeachers and students integrating AI into learning or assignments\nProfessionals seeking to automate repetitive coding tasks\nRequirements\nBasic understanding of at least one programming language\nNo AI or ChatGPT experience required\nAccess to ChatGPT (free or Plus version)\nOptional: IDEs or coding platforms (VS Code, Arduino IDE, etc.)\nCourse Outcomes\nGain practical skills to use AI as a real coding assistant\nReduce debugging time and improve code quality\nWrite more efficient code across different environments\nBuild real-world applications faster with AI collaboration\nReceive a Certificate of Completion\nInstructor Bio\nThe Educational Engineering Team is a group of expert developers and educators who blend software, embedded systems, and AI. With over 250,000 students globally, they deliver hands-on, practical training designed to help you build real skills using modern technologies like ChatGPT for coding.\nFAQ\nQ: Do I need to know AI to use this course?\nA: No. You’ll learn how to interact with AI tools from scratch, including prompt strategies.\nQ: Will this course teach me a specific language?\nA: The course includes Python, JavaScript, Arduino/C++, and more to show AI usage across different stacks.\nQ: Is this course useful for professionals?\nA: Yes. AI can significantly improve prototyping and code review workflows.\nQ: Will I receive a certificate?\nA: Yes. A Certificate of Completion is issued at the end of the course.\nCall to Action\nUnlock the full potential of coding with AI assistance. Learn to code smarter—not harder—with real techniques that save time and increase output.\nEnroll Now – Start Using AI to Supercharge Your Coding",
      "target_audience": [
        "Engineers",
        "Geeks",
        "students",
        "Developers"
      ]
    },
    {
      "title": "Mastering Arduino Data Streaming to Excel",
      "url": "https://www.udemy.com/course/arduino-mastering-arduino-data-streaming-to-excel-csv/",
      "bio": "Send Live Sensor Data from Arduino to Excel: Visualize, Analyze, and Automate Your Projects with Real-Time Dashboards",
      "objectives": [
        "Set up and configure Arduino boards for seamless data streaming into Excel.",
        "Install and utilize the Data Streamer plug-in in Excel for real-time data visualization.",
        "Write and debug Arduino code to enable efficient data transfer to Excel.",
        "Simulate Arduino projects in Tinkercad and integrate custom libraries for enhanced functionality."
      ],
      "course_content": {
        "Introduction": [
          "Course Promo",
          "Introduction",
          "Streaming Arduino Data to Excel"
        ],
        "Arduino IDE": [
          "How to Download and Install Arduino IDE"
        ],
        "Data Streamer Excel Plug In": [
          "Data Streamer Excel Plug In",
          "What is the purpose of the Data Streamer Excel Plug-In in Arduino projects?",
          "Arduino Code",
          "Which function in Arduino code is essential?"
        ],
        "TinkerCAD": [
          "Using Built In Library",
          "Using Built-In Library",
          "Arduino Code",
          "How to add any Arduino Library to Tinkercad for Simulation",
          "Code for TinkerCad",
          "TinkerCad"
        ],
        "Arduino Data Streaming Simulation with Tinkercad": [
          "Arduino Data Streaming Simulation with Tinkercad"
        ],
        "Practice Test": [
          "Practice Test"
        ],
        "Congratulations and Course Recap: Your Arduino Data Mastery Journey": [
          "Recap — Building Data-Driven Arduino Projects with Confidence"
        ],
        "Who We Are?": [
          "Who We Are?",
          "Real-Time Data Streaming from Arduino to Excel"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic understanding of Arduino and programming concepts.",
        "Access to a computer with Arduino IDE and Microsoft Excel installed.",
        "An Arduino board and related components for hands-on projects.",
        "Willingness to engage in practical, hands-on learning through experimentation."
      ],
      "description": "Bring Your Arduino Projects to Life with Live Data and Interactive Excel Dashboards\nLearn how to stream real-time data from your Arduino board into Microsoft Excel to visualize, monitor, and analyze sensor readings — all without third-party platforms or expensive cloud services.\nIn Mastering Arduino Data Streaming to Excel, you’ll build a complete, professional data pipeline using just your Arduino, the Excel Data Streamer add-in, and your creativity. This course is ideal for anyone interested in real-time analytics, DIY IoT systems, or building data-driven projects that go beyond blinking LEDs.\nWhy This Course?\nProject-Based Approach: Learn by doing — you’ll build real working systems that send sensor data into Excel charts and dashboards.\nNo Prior Experience Required: Perfect for Arduino beginners and Excel users looking to explore IoT and automation.\nReal-Time Results: Watch your Arduino send live readings to your Excel workbook and immediately graph or act on the data.\nBoost Your Resume: Understand both hardware programming and spreadsheet-based data analysis — two critical, in-demand skills.\nWhat You Will Learn\nHow to install and configure the Excel Data Streamer add-in\nSet up serial communication between Arduino and Excel\nStream real-time sensor data (temperature, light, motion, etc.)\nBuild and customize Excel dashboards with live charts\nSimulate Arduino behavior in Tinkercad and stream virtual data\nOptimize code for fast and accurate data transmission\nUse structured data output to enable advanced Excel analysis\nTroubleshoot connection issues between hardware and software\nProjects You’ll Build\nA live temperature logger with Excel charting\nA motion-detection tracker using PIR sensor and conditional formatting\nA virtual Arduino simulation streamed into Excel via Tinkercad\nCustom Excel dashboard layouts for multiple sensor inputs\nSensor threshold-based triggers and alerts using formulas\nStop relying on guesswork or static data. Learn how to make your Arduino systems interactive, intelligent, and data-driven — using tools you already have access to.\nWho This Course is For\nArduino hobbyists who want to explore real-time data integration\nStudents and educators building interactive science or engineering experiments\nIoT and automation enthusiasts who want an affordable data platform\nProfessionals in hardware development, data visualization, or prototyping\nCourse Requirements\nBasic familiarity with Arduino programming (helpful, not required)\nArduino Uno or similar board\nMicrosoft Excel (with Data Streamer add-in)\nUSB cable, jumper wires, and basic components like temperature or light sensors\nTinkercad (free) for simulation walkthroughs\nBonus Content\nDownloadable dashboard templates\nFull source code for each project\nTroubleshooting and performance tips\nReal-world use case scenarios\nLifetime access to all future updates\nWhat Students Are Saying\n“Finally a course that connects Arduino with tools I already know! The live Excel dashboard was a game-changer for my classroom.” – Sarah M.\n“Everything worked the first time. Clear instructions and practical examples — I already used this to build a live soil moisture monitor for my garden.” – Daniel P.\nEnroll Now and Stream Your First Arduino Project into Excel Today",
      "target_audience": [
        "Arduino enthusiasts and hobbyists eager to integrate real-time data streaming into their projects.",
        "Students and educators looking to incorporate live data analysis into their curriculum or studies.",
        "Engineers and developers aiming to use Excel for data visualization in Arduino-driven projects.",
        "Professionals working on IoT projects that require seamless hardware-software integration."
      ]
    },
    {
      "title": "Harness the Power of ESP32—No Code Required!",
      "url": "https://www.udemy.com/course/esp32-programming-without-coding/",
      "bio": "Discover an Intuitive Approach to ESP32—Program Effortlessly in a Professional Environment Without Writing a Single Line",
      "objectives": [
        "How to download and install the required software",
        "The user interface and the components that you need to use to program ESP32 without coding.",
        "How to send output signals to different ESP32 pins.",
        "How to read digital input and control output.",
        "How to read analog input and display the incoming data using a live serial monitor or a graph simulator.",
        "How to program different components including LCD and different modules without coding or using libraries",
        "How to Turn a Project idea into a Practical ESP32 Based device without writing a single line of code"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch"
      ],
      "description": "Welcome to a game-changing course that empowers you to command the ESP32 Board without diving deep into the coding syntax. If you've ever found the thought of programming daunting or time-consuming, this course is your pathway to freedom.\nKey Highlights:\nNo Code, No Problem: This course brings the promise of \"drag-and-drop\" to ESP32 programming. Say goodbye to long hours of code debugging and embrace swift, efficient project execution.\nUnlimited Potential: Whether you aim to control lights, motors, or receive input from a myriad of sensors, the ESP32 board is your ultimate toolkit. This course ensures you utilize its vast potential to the fullest.\nPractical Applications: Dive into real-world projects such as the \"Obstacle Avoiding Robot\". Experience firsthand the simplicity and effectiveness of codeless programming for ESP32.\nWhy Enroll in this Course?\nAbsolute Freedom: Delve deep into ESP32 functionalities without ever typing out code. This is where convenience meets capability.\nSave Time: Shave off hours from project execution by bypassing coding. Focus purely on your invention and design objectives.\nBroad Compatibility: Besides ESP32, explore programming for other boards like ESP8266, Raspberry Pi, Arduino boards, and more.\nCourse Contents:\nIntroductory Guide to No-Code ESP32 Programming.\nExploring Modules: Bluetooth, SPI, I2C, Graphical LCD, and More.\nPrototyping with Drag-and-Drop—How It Works.\nDelving into Practical Examples: Design, Connect, and Execute without Code.\nBonus: Dive into a Comprehensive List of Boards you can Program without Coding.\nTakeaway for You:\nBy the end of our journey, you'll not just be familiar with ESP32 programming, but also a champion of efficient, no-code project execution. Equip yourself with a skillset that sets you apart.\nAre You Ready to Revolutionize Your Approach to ESP32?\nGear up for a transformative learning experience. Enroll today and spearhead the no-code revolution!\nUser Testimonials and Social Proof: \"This course is a must for anyone interested in ESP32 but intimidated by coding. It made everything so accessible!\" - Emma L.\n\"A fantastic resource for beginners and experienced users alike. The no-code approach is a game-changer.\" - John T.\nAn Author Bio: Ashraf, the founder of Educational Engineering Team, is a seasoned educator, Mechatronics engineer, electronics and programming hobbyist, and maker. With over 13 years of experience in teaching and practical projects, Ashraf's courses have helped over 250,000 people improve their skills and build successful careers.\nA Single Powerful CTA: Enroll now to start harnessing the power of ESP32 without writing any code!\nFAQ Section: Q: Do I need any prior experience to take this course? A: No prior experience is necessary. This course is suitable for beginners and experienced individuals alike.\nQ: How quickly can I start creating ESP32 projects? A: You can start creating projects immediately after completing the relevant sections of the course.\nQ: Is there a money-back guarantee? A: Yes, Udemy offers a 30-day money-back guarantee if you're not satisfied with the course.\nWhat You Will Learn\nTechniques to program ESP32 without coding\nHow to use drag-and-drop interfaces to control ESP32\nMethods to integrate sensors, motors, and lights with ESP32\nStep-by-step guidance on practical projects like an \"Obstacle Avoiding Robot\"\nUnderstanding and using diverse modules such as Bluetooth, SPI, I2C, and graphical LCDs\nWho is This Course For\nAbsolute beginners looking to explore ESP32\nExperienced users wanting to simplify their projects\nEducators and parents introducing youngsters to programming\nHobbyists interested in creating electronics projects without coding\nAnyone curious about the no-code revolution in electronics\nRequirements\nBasic computer skills\nInternet access\nNo prior coding or electronics experience needed\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Programming ESP32 Without coding",
        "Anyone Interested in Teaching ESP32 for Kids and Old people without  the hassle of coding",
        "Anyone Interested in Learning A New Way to Program ESP32",
        "Anyone Interested in Turn Ideas into Projects quickly",
        "Anyone Interested in saving Time, Effort and Money while Programming ESP32",
        "Anyone Interested in Learning New Things about ESP32",
        "Anyone Interested in Making Projects"
      ]
    },
    {
      "title": "Embedded Systems Programming for Beginners",
      "url": "https://www.udemy.com/course/embedded-systems-programming-for-beginners/",
      "bio": "A short course for those interested in writing firmware for microcontrollers",
      "objectives": [
        "At the end of this course, students will be able to write simple programs using Microchip Assembly Language",
        "Students will be able to read and use a microcontroller datasheet and a development board schematic",
        "Students will be able to configure and use some of the most common peripherals such as ADCs, Timers and PWMs",
        "Students will be able to effectively use the Microchip MPLABX Intergrated development environment",
        "Students will be able to identify and analyze micro controller components such as RAM, ALU, data buss and GPIOs",
        "Students will be able to use the binary and hexadecimal based numbering systems in their programs",
        "Students will learn about Logic Functions and gates",
        "Students will be able to write functions",
        "Students will be able to use interrupts"
      ],
      "course_content": {},
      "requirements": [
        "Students should own a PC with and internet connection",
        "A desire to learn embedded systems",
        "Should be comfortable with common tasks such as downloading programs, using email, searching the internet",
        "Students will need to purchase the Microchip Curiosity HPC board DM164136.  They will also need a micro-B USB cable."
      ],
      "description": "A programming course with hands on experience for those interested in entering the exciting field of Embedded Systems Programming.  You will learn about microcontroller architecture and how to program them using Microchip Assembly.  The format is 50% lecture followed by 50% coding.  We'll learn about the following:\ninterrupts\nVariables\ndatasheets\nschematics\nPWM\nADC\nTimers\nMemory\nBinary and Hexadecimal\nBoolean logic\nALU\nGPIOs\nLEDs\nSwitches\nPotentiometers\nClocks\nAssembly language Instructions\nSimulation\nDebugging\nMicrocontroller Architecture\nAnd much more.  This course is intended for those with little or no experience with coding or hardware knowledge.  Whether you are a DIY type, student, inventor or professional looking to learn a new skill, this course is for you.",
      "target_audience": [
        "Someone with little or no prior knowledge or experience with micro controllers or programming",
        "Those who have a desire to seek employment in the embedded systems field",
        "Current students who seek a more practical and hands on experience",
        "Potential inventors who are interested in product creation",
        "Robotics students or those who are interested in robotics",
        "My students want to get started in a new career.  They may be currently in a class but feel they need a little more help to get them along.  They may have heard about Embedded Systems from a friend or family member but don't know exactly how to get started."
      ]
    },
    {
      "title": "Arduino-Sensor Interfacing",
      "url": "https://www.udemy.com/course/arduino-sensor-interfacing-pna/",
      "bio": "Arduino Programming",
      "objectives": [
        "Understand the Arduino Programming.",
        "Understand the use of different sensors.",
        "Interfacing different sensors with the Arduino",
        "Application development using Arduino and Sensors."
      ],
      "course_content": {
        "Arduino and Sensor Interfacing": [
          "Introduction and LED - Arduino Programming using Tinkercad",
          "Temperature Sensor TMP36 & Arduino",
          "PIR Sensor and Arduino in Tinkercad",
          "Ultrasonic Distance Sensor & Arduino using Tinkercad",
          "Soil Moisture Sensor & Arduino using Tinkercad",
          "Gas Sensor and Arduino using Tinkercad",
          "Force Sensor & Arduino using Tinkercad",
          "Piezo Buzzer & Arduino using Tinkercad",
          "Tilt Sensor & Arduino using Tinkercad"
        ]
      },
      "requirements": [
        "C or Embedded Programming"
      ],
      "description": "Arduino is an open source electronics platform used to create interactive electronic objects. It can be programmed to sense and control physical devices such as motors, lights, and even robots. Arduino can also be used to interface with sensors for capturing data from the environment and turning it into useful information. For example, a temperature sensor can be connected to an Arduino board and programmed to measure temperature, and then display it on a computer or other device. Arduino is an ideal platform for prototyping and experimenting with new ideas, and can be used to build a variety of projects for both home and industrial use.\nSensors are devices that detect and measure a physical property and transfer the resulting data to an electronic device. Common sensor types include temperature, pressure, light, sound, and motion sensors. When connected to an Arduino, sensors can be programmed to capture data from the environment and turn it into useful information. For example, an infrared sensor can be used to detect motion and trigger an event, a temperature sensor can be used to monitor temperature and display it on a screen, and a light sensor can be used to measure light intensity and dim lights in a room accordingly.\nTo connect a sensor to Arduino, it is necessary to know the type of sensor, the type of connection, and the type of signal the sensor produces. Once the sensor is connected, the Arduino software needs to be programmed to read the sensor data, process it, and then output the result in a useful format. This can be done using the Arduino programming language, which makes it easy to create complex programs that interact with sensors and other electronics. In this course, we will study how to virtually interface LED, PIR Sensor, Temperature Sensor, Force Sensor, Gas Sensor, Piezo Buzzer, Soil Moisture Sensor, Tilt Sensor and Ultrasonic Distance Sensor with the Arduino Board using the Tinkercad platform.",
      "target_audience": [
        "Beginners of IOT Application Developers"
      ]
    },
    {
      "title": "Electronic components basics for beginners",
      "url": "https://www.udemy.com/course/learn-electronic-components-names-symbols-functions/",
      "bio": "Computer repair & Basic Electronics, Laptop repair course, electronic components, Power electronics, Hardware Technician",
      "objectives": [
        "Electronics component's names, symbols, and functions.",
        "Electronics basics.",
        "How to identify all electronics components simply.",
        "Understanding complex electronic components working principle."
      ],
      "course_content": {},
      "requirements": [
        "No experience is needed you will learn everything you need to know"
      ],
      "description": "17 Reasons why you should choose this course.\nThe course will teach Everything about electronic components: names, symbols, and functions.\nThe course is created with perfect care by a computer and electronics engineer;\nThe course is not long so that you can complete it in a short time;\nYour inquiries will be answered in a short time with a full explanation of any question,\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course.\nWe are going to study resistors' basics;\nYou are also going to learn the diodes, capacitors, inductor basics, and working principles\nYou will learn all about transistors, MOSFETs, and Schottky diodes;\nYou will also learn optocouplers/optoisolators' functions and circuit diagrams;\nWe are going to study the Bridge Rectifiers;\nYou are going to learn the TRIAC basics;\nWe are going to study the relays, the voltage regulators, the fuses, the transformers, and the potentiometer.\nwe also going to see the Zener diodes, network resistors, crystal oscillator, TVS diodes, and motors.\nYou are going to know the surface mount devices SMD and the Through Hole Technology THT components basics;\nYou are going to learn many tips, secrets, and tricks about testing components and much more;\nThis course will transform you from a beginner to a Pro.\nYou will also learn many tips and tricks that will make you a hardware professional and give you a deep understanding of how to test electronic components.\nI will guide you step by step with an easy explanation along the course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nWhat are you waiting for?\nEnroll now and join us.\nI'd love to see you in the class.",
      "target_audience": [
        "Everyone who need to learn electronics components names, symbols and working principles"
      ]
    },
    {
      "title": "FPGA Drive SPI TFT LCD",
      "url": "https://www.udemy.com/course/fpga-drive-spi-tft-lcd/",
      "bio": "Init LCD, Display RGB Color and Display Picture",
      "objectives": [
        "How does FPGA drive one SPI TFT LCD"
      ],
      "course_content": {
        "FPGA Drive SPI TFT LCD": [
          "System Target",
          "System Analysis",
          "LCD RST Module 01-- Analysis",
          "LCD RST Module 02 -- Coding",
          "LCD RST Module 03 -- Simulation",
          "SPI Driver Module 01 -- Analysis",
          "SPI Driver Module 02 -- Coding",
          "SPI Driver Module 03 -- Simulation",
          "LCD Driver Module 01 -- Interface and Variables",
          "LCD Driver Module 02 -- lcd_rst_task",
          "LCD Driver Module 03 -- lcd_init_task",
          "LCD Driver Module 04 -- lcd_disp_rgb_task",
          "LCD Driver Module 05 -- lcd_disp_pic_task",
          "LCD Driver Module 06 -- Bmp2Hex Tool",
          "LCD Top Module",
          "Target Test"
        ]
      },
      "requirements": [
        "Verilog basic knowledge",
        "FPGA basic knowledge"
      ],
      "description": "This course will focus on how FPGA drive one SPI TFT LCD. It includes:\n(1) SPI protocol analysis;\n(2) SPI protocol code in verilog;\n(3) SPI protocol simulation in Modelsim;\n(4) FPGA drive SPI TFT LCD system analysis and coding;\n(5) SPI TFT LCD driver analysis;\n(6) BMP large data generate and storage for FPGA;\n(7) FPGA task application;",
      "target_audience": [
        "People who are interested in FPGA"
      ]
    },
    {
      "title": "Arduino Battery Level Monitor",
      "url": "https://www.udemy.com/course/arduino-battery-level-monitor/",
      "bio": "Keep an eye on your battery charge level with this Arduino-based battery level monitor + Learn How to consume Less Power",
      "objectives": [
        "Why You should monitor your Battery Level",
        "Hardware and Software Requirements",
        "What is a LED Bar",
        "LCD Display Working Principle",
        "ADC Module and how to deal with it",
        "How Does Arduino Measures the Battery Level",
        "Schematic",
        "Coding",
        "Measuring High Voltage Levels using Arduino",
        "Low power Arduino libraries",
        "Deep sleep mode.",
        "Slowing down Arduino clock speed.",
        "Replace or neglect power-consuming components in your Arduino board",
        "Lower the voltage supply on your Arduino.",
        "Make your Arduino board that consumes away much less power than the one that you will buy.",
        "Reduce Arduino power consumption using external timers.",
        "More Tips and Tricks to reduce power consumption and you can choose from them.",
        "Reduce power using an external timer circuit and how this timer can reduce power consumption.",
        "Solar-powered battery charger circuit for your Arduino board",
        "Sensor-based power friendly external circuit."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Hardware and Software Requirements",
          "Assessing Your Approach to Power Monitoring in Embedded Projects",
          "Section Summary",
          "Reading Material"
        ],
        "Things You Should Know": [
          "Section Intro",
          "LED Bar",
          "Quiz",
          "How does Arduino Measures the Battery Level",
          "LCD Display",
          "Analog to Digital Converter",
          "Essential Concepts for Arduino Projects: LED Bars, Battery Monitoring, LCDs, and",
          "Section Summary",
          "Reading Material"
        ],
        "Circuit Schematic": [
          "Section Intro",
          "Circuit Schematic",
          "Designing and Interpreting Circuit Schematics",
          "Section Summary",
          "Reading Material"
        ],
        "Coding": [
          "Section Intro",
          "Coding the Monitor Part 1",
          "Coding the Monitor Part 2",
          "Quiz",
          "Coding the Monitor Part 3",
          "The Code",
          "Section Summary",
          "Reading Material"
        ],
        "Practical Work": [
          "Section Intro",
          "Hardware Components",
          "Practical Assembly",
          "Practical Testing Led Bar",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Measuring High Voltage Levels": [
          "Section Intro",
          "Measuring High Voltage Levels",
          "Safe Measurement of High Voltage Levels Using Voltage Dividers and Arduino",
          "Section Summary",
          "Reading Material"
        ],
        "Reducing Your Arduino Battery Consumption for Battery Operated Projects": [
          "Section Intro",
          "Introduction",
          "Lower Voltage Supply",
          "Replace or Remove Power Consuming Components",
          "Arduino Interrupt Wake Up Mode",
          "Quiz",
          "Arduino Timed Wake Up Mode",
          "Reduce Power Consumption using External Timer",
          "Deep Sleep Mode",
          "Solar Powered Arduino",
          "Quiz",
          "Sensor Based Board Control",
          "Other Power Reduction Options",
          "Lowering Arduino Clock Speed",
          "Power Optimization Techniques for Battery-Operated Arduino Projects",
          "Section Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Practice Test on Arduino Project Components, Coding, and Power Management",
          "Section Summary",
          "Reading Material"
        ],
        "Who we are?": [
          "Section Intro",
          "Who we are?",
          "Section Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Presenting a Battery Monitoring System Using Arduino",
          "Section Summary",
          "Reading Material"
        ]
      },
      "requirements": [
        "A laptop or Computer",
        "Internet Connection",
        "Hardware Requirements if you want to implement this in real life"
      ],
      "description": "Taking the Arduino Battery Level Monitor course will teach you everything about the features of this amazing device. It will give you great skills in the field of electronics, and it's a great way to understand how these devices work and how they can be used. In addition, it will help you get ahead in the competitive world of electronics.\nYou can create your own projects based on what you learn with the Arduino Battery Level Monitor. With an understanding of Arduino Battery Levels Monitor, you'll be able to make better decisions about purchasing electronic devices.\nWhy Monitor Your Battery Level?\nMonitor your battery's charge level with this Arduino-based battery monitor.\nKeep an eye on the battery charge level and plan ahead to know when it might be time to recharge.\nLearn how to conserve power and save battery life.\nStay in control of your device's performance with this Arduino-based battery monitor.\nKnow how much time is left before you'll need to plug in for a recharge, without having to guess.\nMonitor the charge on any type of cell phone or electronics from anywhere in the world, from a web browser.\nPower up your project! Extend the life of your cellphone's battery with this Arduino-powered Battery Monitor.\nKeep an eye on your battery's charge level with this Arduino-based battery level monitor. This course will teach you how to build an Arduino-based voltage indicator. The indicator shows the status of the battery by lighting LEDs on a LED bar graph, depending on the battery voltage reading. If you don't have a LED bar graph available, you can always use normal LEDs like we will in this course.\nWe will also show you how to display the reading on an LCD display that is 16*2, and we will explain everything about it in this course.\nWhy Would You Want to Know Your Battery Level?\nHave you experienced building a battery-operated project? Then suddenly it won't work because it needs to be charged. We all know that batteries come with a certain voltage limit; exceeding or completely losing the battery voltage can lead to a lot of frustration. It can also lead to component damage or data loss. Wouldn't it be nice to be able to monitor the battery's level so you can decide whether it needs to be charged or replaced?\nThat's what this course is about and what this course will do for you.\nWhat You Will Learn in This Course:\nWhy you should monitor your battery level.\nHardware and software requirements to make this happen.\nWhat is ADC, how to use it, and how to interface it with your microcontroller.\nLCD display working principle and the science behind it, along with some coding tips.\nAnalog to digital converter module and how to deal with it using Arduino.\nHow Arduino measures the battery level in detail.\nDrawing our circuit schematic.\nSimulation for the circuit before connecting it in real life.\nWriting the code line by line so that you know exactly what's happening inside Arduino.\nMeasuring high voltage levels using Arduino and some tips and tricks for this device.\nAdvanced Tips and Tricks to Reduce Power Consumption:\nIn-depth knowledge on Arduino power requirements and power consumption.\nLow power Arduino libraries.\nDeep sleep mode.\nSlowing down Arduino clock speed.\nReplacing or neglecting power-consuming components in your Arduino board.\nLowering the voltage supply on your Arduino.\nMaking your Arduino board consume much less power than the one you will buy.\nReducing Arduino power consumption using external timers.\nSolar-powered battery charger circuit for your Arduino board.\nSensor-based power-friendly external circuit.\nAdditional Course Benefits:\nGain information not only about reducing Arduino power consumption but also about the Arduino board structure.\nLearn with real-world examples and practice.\nExtend the battery life of your projects with efficient power management techniques.\nI'm sure that you will enjoy this course content. It has a lot of useful information. By the end of this course, you will know a lot about Arduino, its internal structure, and how you can reduce power consumption.\nWhat you will learn\nMonitor battery charge levels with Arduino.\nBuild an Arduino-based voltage indicator.\nDisplay battery levels on LED bar graphs and LCDs.\nUnderstand ADC and its interfacing with microcontrollers.\nReduce Arduino power consumption with various techniques.\nDesign circuits to control and reduce power usage.\nImplement solar-powered battery chargers for Arduino projects.\nWho is this course for\nElectronics enthusiasts interested in battery monitoring.\nHobbyists and makers looking to expand their Arduino projects.\nEngineering students and professionals aiming to enhance their skills.\nAnyone interested in learning power management techniques for Arduino.\nRequirements\nBasic understanding of Arduino and electronics.\nAn Arduino board with necessary peripherals.\nBasic programming knowledge is helpful but not required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Learning How to make Battery Level Monitor using Arduino",
        "Anyone Interested in Learning how reduce Arduino Power Consumption",
        "Arduino Geeks",
        "Anyone Interested in Learning New Topics",
        "Electronic Geeks, Hobbiest & Art Students",
        "Anyone Interested in Microcontrollers",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in controlling Arduino Power Consumption",
        "Anyone Interested in Learning Why Arduino Consume so much power",
        "Anyone Interested in make Arduino Battery Powered Project",
        "Anyone Interested in learning different ways to reduce Arduino Power Consumption",
        "Anyone Interested in Making his own low power Arduino Board at Home",
        "Anyone with slight interest in making great things"
      ]
    },
    {
      "title": "Smart Home Automation with Arduino",
      "url": "https://www.udemy.com/course/arduino-smart-home-automation-with-arduino/",
      "bio": "Design, Build, and Control Smart Home Systems Using Arduino Projects and Real-World Applications",
      "objectives": [
        "Arduino Basics: Understand the fundamentals of Arduino hardware and software to jumpstart your home automation projects.",
        "Module Integration: Learn to integrate various modules such as LED, sensors (PIR, LDR), RFID, and more to create responsive smart home systems.",
        "Coding for Automation: Write and debug Arduino code that controls and automates your home environment.",
        "Project Development: Develop and implement end-to-end smart home projects, including lights control, security enhancements, and environmental monitoring.",
        "Troubleshooting and Testing: Acquire skills to troubleshoot, test, and optimize your smart home setups to ensure they are efficient and reliable."
      ],
      "course_content": {},
      "requirements": [
        "Arduino Starter Kit: A basic kit that includes an Arduino board and various components like sensors, LEDs, and cables.",
        "Basic Technical Skills: Familiarity with basic electronics and using a computer. Prior programming experience is helpful but not necessary as the course covers the basics of Arduino programming.",
        "Software Installation: Ability to install software on a computer, as you will need the Arduino IDE to program your board."
      ],
      "description": "Transform your living space into a smart, responsive environment with Smart Home Automation with Arduino. Whether you are a homeowner aiming to enhance comfort and efficiency, a tech enthusiast eager to dive into IoT, or a student preparing for the future of technology, this course offers a complete guide to building your own smart home solutions from scratch.\nStarting from the fundamentals, you will quickly progress to creating advanced systems using Arduino and a range of sensors, devices, and security modules. Through step-by-step lessons and hands-on projects, you will learn how to automate lighting, control devices remotely, monitor environmental conditions, and secure your home using RFID and motion detection.\nEvery module is structured to help you move from theory to practice, reinforcing your knowledge through real-world applications. By the end of the course, you will have the confidence to design and implement customized automation solutions, tailored to your unique needs.\nIf you are serious about mastering smart home technology and creating powerful, scalable automation systems, this course will equip you with the practical skills and knowledge you need.\nEnroll now and start building a smarter, safer, and more efficient home.\n\n\nWhat You Will Learn\nSet up the Arduino environment for smart home development\nIntegrate and program various types of sensors, including LDR, PIR, and DHT-11\nControl home appliances such as lights, fans, and motors using Arduino\nDevelop security systems with RFID technology and motion detection\nImplement environmental monitoring systems to automate climate control\nBuild hands-free systems using voice recognition modules\nTroubleshoot, optimize, and test your smart home projects for maximum reliability\nBonus Content\nDownloadable code libraries and templates for faster project building\nComplete circuit diagrams for every smart home project\nAccess to a private community of smart home builders\nWhy This Course Stands Out\nReal Projects: Learn by building functional systems you can actually use.\nStructured Learning: Clear explanations, progressive complexity, and focus on key principles.\nComplete System Integration: Covering not just individual sensors, but full interconnected smart systems.\nUp-to-Date Techniques: Including voice control and IoT-ready designs.\nWho This Course is For\nHomeowners interested in building custom smart home features\nElectronics hobbyists and makers passionate about automation\nStudents and educators looking for practical IoT and automation skills\nDevelopers and engineers exploring embedded systems and real-world IoT applications\nRequirements\nArduino Starter Kit including sensors and basic modules\nBasic understanding of electronics and programming concepts (helpful but not mandatory)\nA computer with Arduino IDE installed\nEnthusiasm and a willingness to build, experiment, and innovate\nTestimonials:\n\"This course helped me automate my home lighting and security. It was exciting to see my ideas come to life through the projects!\" – Alex D.\n\"The clear explanations and real-world applications made learning so much more relevant. I now have automated features all around my house thanks to this course!\" – Sara L.\nElevate your home’s intelligence and your technical skillset with \"Smart Home Automation with Arduino.\" From basic setups to intricate systems, transform your living space into a modern, efficient, and secure environment.\nJoin us today and start building your own smart home solutions with Arduino!",
      "target_audience": [
        "DIY Enthusiasts: Individuals looking to enhance their home with automation technologies.",
        "Technology Students: College or university students studying electronics, computer science, or engineering who require practical experience with IoT and automation technologies.",
        "Hobbyists in Electronics: Anyone with an interest in building electronic projects and learning more about how they can automate everyday tasks and appliances at home.",
        "Professionals in Technology: Engineers and tech professionals seeking to broaden their expertise in hardware programming and smart home solutions."
      ]
    },
    {
      "title": "Arduino Based Fire Alarm System",
      "url": "https://www.udemy.com/course/arduino-based-fire-alarm-system/",
      "bio": "Learn how to build a fire alarm system that uses Arduino. Discover the different components you need to create a functio",
      "objectives": [
        "This course will teach you how to create an Arduino-based fire alarm system.",
        "You will learn how to use sensors to detect heat and smoke, and how to use an Arduino to control a relay that will activate a siren or other alarm system.",
        "This course will provide an introduction to the Arduino platform and how it can be used to create a fire alarm system.",
        "You will learn how to program the Arduino to detect fire and sound an alarm, as well as how to interface with other components such as sensors and actuators."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Designing Sensor-Based Fire Detection with Arduino",
          "Who we are?",
          "Interface with Arduino intro",
          "Explanation",
          "Circuit Building",
          "Understanding Arduino Interface and Circuit Design",
          "Materials Needed",
          "Circuit connection and diagram",
          "Download Arduino Software IDE",
          "Preparing Materials, Building Circuits, and Setting Up Arduino IDE",
          "Programming and Testing",
          "Understanding Fire Alarm System Components and Setup",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Arduino Based Fire Alarm System Test"
        ],
        "Course Project": [
          "Course Project",
          "System Presentation: Arduino Fire Alarm Prototype with Alert Logic"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Arduino boards",
        "Wire",
        "Sensor",
        "Arduino Uno (any Arduino board can be used) Flame sensor module",
        "LED. Buzzer",
        "Resistor",
        "Jumper wires"
      ],
      "description": "Introduction:\nThis Arduino-based fire alarm system course provides an introduction to the design and implementation of a fire alarm system using Arduino boards. Students will learn about the different components of a fire alarm system, how to program an Arduino to interface with these components, and how to test and debug a fire alarm system.\nThe Arduino-Based Fire Alarm System course is a hands-on learning experience that teaches students and Arduino enthusiasts how to create a fire alarm system using an Arduino. The course covers topics such as fire alarm theory, Arduino programming, and circuit design. Students will have the opportunity to put their knowledge into practice by building a working fire alarm system.\nWhat You Will Learn in This Course:\nThis course will teach you how to create a fire alarm system using Arduino.\nYou will learn how to connect and use various sensors to detect fire, and how to create an alarm system that will notify you when there is a fire.\nYou will also learn how to program Arduino to respond to sensor input and activate the alarm system.\nLearn Arduino Basics\nYou will learn how to use a variety of sensors to detect fire and then use an Arduino to control a relay that will activate a siren or other alarm.\nThis Arduino-Based Fire Alarm System course provides students with the skills and knowledge necessary to design, build, and program their own fire alarm system using an Arduino microcontroller. Students will learn about the different types of fire alarms, how they work, and how to program an Arduino to detect and respond to fire hazards. They will also learn about circuit design, breadboarding, and soldering, as well as basic coding and programming concepts.\nCourse Benefits:\nArduino-Based Fire Alarm System: Build your own fire alarm system with Arduino. This system is easy to build and can be used in a variety of settings.\nDon't Be a Fire Hazard: Build your own Arduino-based fire alarm system and be confident that you won't be the cause of the next house fire. With this tutorial, you will learn how to build a fire alarm system from scratch using an Arduino microcontroller. The comprehensive step-by-step instructions will guide you through the entire process, from putting together the hardware to programming the software.\nEnroll in the Arduino-Based Fire Alarm System Course Today!\nWhat You Will Learn:\nBasics of Arduino programming\nUsing sensors to detect fire\nInterfacing sensors with Arduino\nCreating a functional alarm system\nCircuit design and breadboarding\nBasic soldering techniques\nTesting and debugging the fire alarm system\nWho Is This Course For:\nBeginners in Arduino and electronics\nIndividuals interested in building a fire alarm system\nHobbyists and enthusiasts looking to expand their knowledge\nRequirements:\nBasic computer skills\nNo prior knowledge of Arduino or electronics required\nAccess to Arduino and basic electronic components\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact, step-by-step blueprint on how to tackle simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of “Educational Engineering”\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k + Subscribers) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelance engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "This Arduino Based Fire Alarm System course is designed for students with at least some basic experience with Arduino programming. In this course",
        "This Arduino based fire alarm system course is designed for students with some programming experience,",
        "The course will cover the basics of Arduino programming, and how to use it to create a fire alarm system that can detect and report fires."
      ]
    },
    {
      "title": "Data Storage (NAS, SAN, Cloud Storage) Concepts & Backup",
      "url": "https://www.udemy.com/course/data-storage-nas-san-cloud-storage-concepts/",
      "bio": "Storage systems architecture and features & Backup Fundamentals",
      "objectives": [
        "Introduction to Data Storage (DAS, NAS, SAN, Cloud Storage)",
        "Cloud storage concepts and benefits",
        "Cloud Deployment Models",
        "Storage concepts such as RAID, Components and Features",
        "Introduction to Backup Fundamentals and Methods of Backup"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Storage Concepts",
          "Types of Storage and Terminologies",
          "RAID Concepts",
          "Backup Fundamentals",
          "Storage Protocols"
        ],
        "Quiz / Knowledge Check": [
          "Quiz"
        ]
      },
      "requirements": [
        "Student should have 2+ IT experience and basic Network or system administration knowledge."
      ],
      "description": "In this course is divided into four lessons as below.\n\n\nLesson 1 - Storage\n1. Introduction to Data Storage\n2. Importance of Digital Data\n3. Factors Driving Digital Transformation\n4. Introduction to Cloud Computing\n5. Benefits of Cloud Computing\n6. Deployment Models\n\n\nLesson 2 - Storage Terminologies\n1. Types of Storage\n2. Direct Attached Storage (DAS)\n3. Network Attached Storage (NAS)\n4. Storage Area Network (SAN)\n5. Storage Virtualization / HyperConverged\n\n\nLesson 3 - Storage System\n1. Storage Array Components\n2. What is a RAID\n3. How it Works\n4. Types of RAID\n5. Pros & Cons\n\n\nLesson 4 - Backup Methods\n1. Introduction to Backup\n2. Granularity of Backup\n3. Full Backup\n4. Incremental Backup\n5. Cumulative or Differential Backup\n6. Synthetic Backup\n7. Mirror Backup\n8. Comparison of Backup Methods\n\n\nThis course will help you to learn the fundamentals concepts of Information Storage and Management related to Storage Systems and Backup technologies.\n\n\nIt gives a detailed overview of storage and backup terminologies, protocols and component information to help in getting started your career as Storage Administrator or as a Backup Administrator.\n\n\nThe course will be useful to anyone that is planning to start a career or have a fundamental understanding of Data storage and the new concepts in cloud storage.",
      "target_audience": [
        "Beginners in Storage and Backup technologies",
        "Looking to learn the fundamentals of Storage and Backup"
      ]
    },
    {
      "title": "Embedded Ethernet Programming with HAL",
      "url": "https://www.udemy.com/course/embedded-ethernet-programming-with-hal/",
      "bio": "Build Embedded Ethernet Firmware : HTTP, SSI, CGI etc",
      "objectives": [
        "Understand the Fundamentals of Networking.",
        "Understand the Fundamentals of the Light Weight IP (LwIP) Stack.",
        "Write Drivers for the STM32F7 Ethernet Peripheral using HAL APIs.",
        "Write Embedded Ethernet Applications for Hosting Webpages",
        "Write Embedded Ethernet Applications for Controlling Hardware through Webpages.",
        "Write Embedded Ethernet Applications for Sending Sensor Data to Webpages."
      ],
      "course_content": {},
      "requirements": [
        "STM32F767ZI Nucleo Board"
      ],
      "description": "Welcome to Embedded Ethernet Programming with HAL Training.\n\n\nThis course is the intermediate level course of a 3 course learning path teaching you how to write drivers for the ethernet peripheral as well as write embedded ethernet firmware for different networking protocols such as http, dhcp etc.\nThe goal of this course is to teach you how to build real world embedded ethernet applications.\n\n\nWhat make this course different from the beginner course ?\n\n\nIn this course we write all the ethernet drivers ourselves using the the STM32 HAL APIs. Unlike the beginner course, in this course we also implement the ethernet interface files linking our ethernet module to the LwIP library ourselves.\nThe STM32 Hardware Abstraction Layer (HAL) provides a simple, generic multi-instance set of APIs (application programming interfaces) to interact with the upper layers like the user application, libraries and stacks.\nIn this intermediate course we also implement more examples of embedded ethernet applications.\n\n\nSo with that understood, let me tell you…\n\n\nExactly What You’re Getting\nThis intermediate course can be divided into 4 major sections.\n\n\nFirst Section\nIn the first section we give a short introduction to networking and then explore the ethernet capabilities of the STM32F7 microcontroller.\nSecond Section\nIn this section we write drivers for all the peripherals we will be using in the course. We write drivers for the ADC, UART, RCC and GPIO.\n\n\nThird Section\nIn the third section we write all the drivers required to fully configure the ethernet module. We will implement a driver for configuring the ethernet gpio pins to operate in RMII mode, we will implement a driver for transmitting packets, another one for receiving packets etc.\nIt is in this section that we decide on the ethernet parameters such the speed, the duplex, whether to use auto-negotiation or not etc. After configuring the ethernet module we conclude this section by implementing a function that interfaces our ethernet module to the Light Weight IP (LwIP) library. LwIP is a small independent open-source implementation of the TCP/IP protocol stack designed for embedded systems.\n\n\nLast Section\nThe final section begins by giving an introduction to Light Weight IP (LwIP) and then goes on to build embedded ethernet applications. Here are some the applications we shall build:\nProgramming : Checking if the cable is connected\nProgramming : Getting an IP address from DHCP\nProgramming : Hosting Webpages with httpd\nProgramming : Displaying Realtime Data on Webpages with SSI\nProgramming : Working with Multiple SSI Tags\nProgramming : Controlling Hardware from WebServers using CGI\nProgramming : Injecting HTML code into a Webpage using SSI and CGI",
      "target_audience": [
        "If you are an embedded developer and want to learn how to develop embedded ethernet applications then take this course."
      ]
    },
    {
      "title": "Introduction to Computer Systems",
      "url": "https://www.udemy.com/course/introduction-to-computer-systems/",
      "bio": "Computer Organisation & Logic and Binary Fundamentals",
      "objectives": [
        "Explain the role of the CPU",
        "Describe the components of the CPU",
        "Provide an introduction to assembly language",
        "Explain the factors that affect CPU performance",
        "Examine the Physics of Overclocking the CPU"
      ],
      "course_content": {
        "Introduction to Computer Systems": [
          "Introduction to Computer Systems",
          "Introduction to Electronics and Physics",
          "Introduction to the CPU and Its Components"
        ],
        "Computer Architecture": [
          "Von Neumann Architecture",
          "Harvard and Other Architectures",
          "Assembly Language and the CPU"
        ],
        "Factors Affecting CPU Performance": [
          "Factors Affecting CPU Performance",
          "Physics of Overclocking the CPU"
        ],
        "Logic": [
          "Introduction to Combinational Logic Systems",
          "The Makings of Logic Gates",
          "Logic Gates and Semiconductors",
          "Sequential Logic Systems"
        ],
        "Binary": [
          "Introduction to Number Systems",
          "Binary, Denary and Hexadecimal Conversions",
          "Binary Addition",
          "Negative Numbers in Binary",
          "Decimal Numbers in Binary",
          "Binary and Sound",
          "Binary and Images",
          "Binary and Text"
        ],
        "Devices and Storage": [
          "Input and Output Devices",
          "Forms of Storage"
        ],
        "Assessment": [
          "Introduction to Computer Systems Assessment"
        ]
      },
      "requirements": [
        "No knowledge of the CPU required",
        "A computer with stable Internet connection"
      ],
      "description": "This is a basic course on Introduction to Computer Systems. This course is meant for GCSE, iGCSE, A Level and International Baccalaureate (IB) Computer Science students, BTEC students, Engineering Students of Electrical, Electronics, Communication, Computer Science and IT, BSC Students, Diploma Students (Polytechnic), BCA students, MCA students, MTech Students, MS Students and also anyone with an interest in Computing or are looking to explore Computing. This course is not only beneficial for students to earn credits as a part of their course curriculum but also score well in competitive exams. This course will go through the different aspects of the workings of a computer system. The course also introduces links between Computer Science, Physics and Electronics. Areas covered include the CPU and its inner workings, the different computer architectures (von Neumann, Harvard), CPU performance factors, the physics of overclocking the CPU and programming in assembly language. Within assembly language, the LMC architecture will be covered along with its association with the von Neumann architecture. The course has been designed so that the novice will be able to slowly gain a good understanding as to what is involved in the course content and be able to ace their exams and assignments.",
      "target_audience": [
        "Beginners interested in Computer Science theory"
      ]
    },
    {
      "title": "Laptop repairing: Motherboard crash course for beginners",
      "url": "https://www.udemy.com/course/laptop-repairing-motherboard-crash-course-for-beginners/",
      "bio": "Laptop repair course, computer hardware, Integrated Circuits, Hardware Technician, PC Motherboard, IT, Basic Electronics",
      "objectives": [
        "All about Laptop Motherboard;",
        "Understanding Laptop Motherboard Architecture;",
        "Laptop Motherboard Chips and ICs;",
        "Understanding Laptop Motherboard Components symbols and working principle;",
        "Integrated Circuits Pin Configuration;",
        "Motherboard Circuits, Such as 3V/5V Circuit and CPU Circuit etc..",
        "Circuit Diagram Analysis;",
        "How to use the Multimeter to test motherboard Components and much more."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Laptop Motherboard studying": [
          "Laptop Motherboard studying part 1 CPU chip",
          "Laptop Motherboard studying part 2 Chipsets",
          "Laptop Motherboard studying part 3 RAM",
          "Laptop Motherboard studying: MOSFETs & ICs",
          "Laptop Motherboard Components Studying part 1",
          "Laptop Motherboard Components Studying part 2",
          "Laptop Motherboard Components Studying part 3",
          "ICs & MOSFET Circuit Diagram Studying",
          "MB 3V5V Circuit Studying",
          "CPU Circuit Studying",
          "Other Laptop Motherboard Components Studying",
          "Random Access Memory RAM Studying"
        ]
      },
      "requirements": [
        "Desire to learn"
      ],
      "description": "**Continuous Updates**\n13 Reason why you should choose this course\nThe course will teach you Everything you need to know and learn about laptop motherboards;\nThe course is created with perfect care by a computer engineer;\nOne-On-One Support;\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences;\nYour inquiries will be answered in a short time with a full explanation of any question;\nConstant updates.\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course;\nYou going to understand laptop motherboard architecture;\nYou will learn motherboard circuits and how 3V/5V and VCC_Core are generated;\nHow to test Integrated Circuits and be able to identify their inputs and outputs;\nYou going to learn and master how to use the Multimeter during testing;\nThis course will transform you from a beginner to a Pro.\nTopics that we will be discussing in this course are :\nLaptop Motherboard Architecture;\nLaptop Motherboard Chips and Integrated Circuits;\nHow to test MOSFET & how It Works\nComponents symbols and working principle;\nICs Pin Configuration;\nHow to test Fuses & how It Works\nHow to test Capacitor & how It Works\nHow to test Diode, how It Works and much more;\n3V/5V Circuit and CPU Circuit etc..\nCircuit diagram analysis;\nHow to use the Multimeter in a correct way;\nMaster Circuit Diagram Analysis;\nYou will also acquire many skills that will make you a hardware professional and have a deep understanding of Laptop Hardware\nI will guide you step by step with an easy explanation along this course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nWhat are you waiting for?\nEnroll now and join us.\nI'll love to see you in the class.",
      "target_audience": [
        "Students in Computer Hardware and electronics.",
        "Technicians and New Engineers how want to improve their skills in Computer Hardware and electronics.",
        "Any one how want to learn Laptop Hardware"
      ]
    },
    {
      "title": "Advanced Arduino and Python Programming: Interface Apps",
      "url": "https://www.udemy.com/course/advanced-arduino-and-python-programming-interface-apps/",
      "bio": "Learn to Develop Interfaces for Arduino and Embedded Systems!",
      "objectives": [
        "Creation of Interfaces,",
        "Using varios sensors and components with Arduino,",
        "Controlling port of computers,",
        "Serial communication between Python and Arduino and",
        "Data transfer to interfaces,"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Python?",
          "Requirement Modules",
          "Installation of Python",
          "Installation of VSCode",
          "What is Arduino?",
          "Installation of Arduino IDE",
          "Installation Libraries to Arduino"
        ],
        "Serial Communication -1": [
          "Installation of Module",
          "Serial Port Definitions",
          "Method to Send Data",
          "Extra -1 (Serial Port)"
        ],
        "Project 1: Controlling LED Using Python": [
          "Python Codes",
          "Circuit Diagram",
          "Arduino Codes",
          "Result of Project 1"
        ],
        "Project 2: Getting Datas from Arduino to Python": [
          "Python Codes",
          "Arduino Codes",
          "Result of Project 2"
        ],
        "Project 3: Getting Datas of Sensor from Arduino to Python": [
          "Python Codes",
          "Circuit Diagram",
          "Arduino Codes",
          "Result of Project 3"
        ],
        "Creation of Interface": [
          "Installation of Module",
          "Creating a Interface Window",
          "Shapes -1 (Line)",
          "Shapes -2 (Circle and Rectangle)",
          "Example (Shapes)",
          "Changing Background Color of Window",
          "Adding Logo or Icon Images to the Interface",
          "Adding Background Image to the Interface",
          "Printing Text (Reaching Default Fonts)",
          "Printing Text -1 (Default Fonts)",
          "Printing Text -2 (External Fonts)"
        ],
        "Project 4: Creating an Interface to Display Arduino Data": [
          "Python Codes -1 (Definitons)",
          "Python Codes -2 (Interface Loop)",
          "Arduino Codes",
          "Result of Project 4"
        ],
        "Project 5: Creating a Button": [
          "Mouse Operations",
          "Python Codes -1"
        ],
        "Extra": [
          "Keyboard Controls",
          "Background Music"
        ],
        "Advanced Project 6: Relay Control Interface": [
          "Introduction: Advanced Project 6",
          "Circuit Diagram",
          "Python Codes -1 (Definitions)",
          "Python Codes -2 (Interface Loop)",
          "Arduino Codes",
          "Result of Project 6"
        ]
      },
      "requirements": [
        "Work hard,",
        "Tenacity and",
        "Interest."
      ],
      "description": "Hello,\nWith the \"Advanced Arduino and Python Programming: Interface Apps\" course, we will learn how to develop our own interfaces, how to control the port of our computer, how to communicate embedded systems and Arduino with the interfaces we have created. The course content was created step by step, without boring the student. First, we will learn our basic information, and then we will communicate the Arduino and Python programming language. Afterwards, we will control the components connected to the Arduino together with the Python programming language and display the sensor data in the Python programming language. Moreover, we will create our own interfaces and control the components connected to the Arduino board with the interfaces we have created. In addition, we will create both Arduino codes and Python codes of 2 different advanced projects together in the course. Let's learn about the projects.\nAdvanced Project 1: Relay Control Interface\nDescription\nTogether with you, we will learn to connect a relay to the Arduino board and develop a project where we can turn our relay on and off with the interface we have created. Thus, we will learn to assign various tasks to the button in the interface we have created.\nAdvanced Project 2: Sensor Information Interface\nExplanation\nTogether with you, we will learn the use of DHT-11 and Rain sensors and display the data on these sensors in the interface we have created. We will instantly display the temperature, humidity and rain data in the sensor on our interface.\n\n\nWelcome to our way of developing ourselves and writing code on the technologies of the future.\n\n\n\"Continuity in work conquers all difficulties.\" -Anthony Trollope\n\n\nLearn by coding!\n\n\nRegards,\nYılmaz ALACA",
      "target_audience": [
        "Those who want to develop gui with Python,",
        "Those who want to develop interface with Python,",
        "Those who want to learn serial communication between Python and Arduino,",
        "Those who want to control Arduino with Python,",
        "Those who want to control port of computers,",
        "Those who want to transfer data to interfaces and",
        "Engineering students (CE, IE, EEE and etc.)"
      ]
    },
    {
      "title": "Unlock Advanced EEPROM Memory Techniques in PIC Micro",
      "url": "https://www.udemy.com/course/arduino-eeprom-a-step-by-step-practical-course/",
      "bio": "You will enter the Microcontroller Advanced EEPROM Memory World, and together we will make YOU a Professional PIC Progra",
      "objectives": [
        "How to download and install the required software for coding and for circuit simulation of the Arduino board.",
        "What is an EEPROM",
        "How to interface the built-in EEPROM with different coding techniques",
        "Supported Arduino boards so that you can have one or make sure that the one you have supported or not.",
        "How to use an external EEPROM and we will talk about a specific EEPROM IC that we are going to use.",
        "EEPROM Practical Examples",
        "Move to the next level in Programming Arduino",
        "Make your Codes more Professional by Learning advance EEPROM Techniques",
        "Program EEPROM using Arduino",
        "Learn how to use different types of EEPROM in Arduino",
        "Arduino Advanced Programming Techniques",
        "Internal and External EEPROM in Arduino",
        "Coding example and practical implementation."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "EEPROM Management in Embedded Systems",
          "Educational Engineering Team - Who we are?",
          "Summary",
          "Reading Material"
        ],
        "Hardware and Software Requirements": [
          "Section Intro",
          "Hardware and Software Requirements",
          "Quiz",
          "Download and Install Arduino IDE",
          "Download and Install Fritzing Software",
          "Hardware and Software Requirements for Arduino Projects",
          "Summary",
          "Reading Material"
        ],
        "Supported Boards": [
          "Section Intro",
          "Supported Boards",
          "Quiz",
          "Summary",
          "Reading Material"
        ],
        "EEPROM Functions": [
          "Section Intro",
          "EEPROM Write",
          "EEPROM Read",
          "Test Write and Read Functions",
          "Quiz",
          "Clearing EEPROM Memory",
          "Writing and Reading EEPROM Data",
          "Summary",
          "Reading Material"
        ],
        "Practical Example": [
          "Section Intro",
          "Clearing EEPROM",
          "Read, Write and Print",
          "Practical Example - Test Read Write and Print",
          "Working with EEPROM in Microcontrollers",
          "Creating a Persistent Counter with EEPROM",
          "Summary",
          "Reading Material"
        ],
        "External EEPROM Interfacing": [
          "Section Intro",
          "External EEPROM IC Interfacing",
          "Circuit Schematic",
          "Summary",
          "Reading Material"
        ],
        "Coding External EEPROM": [
          "Section Intro",
          "External EEPROM Coding Process R",
          "Finishing the Code",
          "The Code",
          "Implementing External EEPROM Functions",
          "Summary",
          "Reading Material"
        ],
        "Coding External EEPROM: Another Approach": [
          "Section Intro",
          "External EEPROM Another Coding Approach",
          "Explaining the Functions",
          "The Code",
          "Loop Code Example",
          "Summary",
          "Reading Material"
        ],
        "Resources": [
          "Section Intro",
          "I2c Device Address Scanner",
          "Summary",
          "Reading Material"
        ],
        "Who we are?": [
          "Who we are?"
        ]
      },
      "requirements": [
        "Basic Knowledge in Arduino"
      ],
      "description": "Wish your Arduino projects had a permanent memory? Delve deep into the revolutionary EEPROM world and make data loss concerns a thing of the past.\nWhy Enroll in This Course?\nEEPROM Mastery: Go beyond basic programming. Learn to utilize the onboard Arduino EEPROM, ensuring your data remains safe even after power loss.\nUniversal Compatibility: Whether you have an Uno, Mega 2560, Leonardo, or any other board, EEPROM techniques are universally applicable.\nPractical Implementation: It's not just theory. Engage in hands-on coding, practical examples, and real-time simulation for a thorough grasp of concepts.\nCourse Highlights\nEEPROM Essentials: Discover the nitty-gritty of EEPROM - from its basics, its significance, to its versatile applications.\nBuilt-in vs. External: Dive into the differences and unique advantages of using onboard EEPROM and external EEPROM ICs.\nStep-by-Step Coding: Gain mastery over EEPROM-related coding, from simple storage tasks to complex data manipulation techniques.\nHardware Integration: Understand how to seamlessly integrate EEPROM ICs with various Arduino boards, maximizing storage and efficiency.\nExclusive Features of This Course\nEngaging Video Content: Over 2 hours of detailed video lectures breaking down complex topics into easily digestible chunks.\nInteractive Activities: Reinforce your learning with hands-on coding challenges and practical activities.\nResourceful Downloads: Access a plethora of downloadable resources to support and supplement your learning.\nDedicated Instructor Support: Our team is here for you. Get your questions answered and receive timely support throughout your learning journey.\nLifetime Updates & Access: The tech world evolves. Stay up-to-date with unlimited access to course content updates.\nYour Investment is Risk-Free!\nYour satisfaction is our topmost priority. If the course doesn't resonate with you, claim your money back within 30 days. No questions asked!\nNext Step:\nEmbark on a transformative journey in EEPROM memory with Arduino. Equip yourself with a specialized skill set that sets you apart in the Arduino programming world.\nReady to elevate your Arduino projects?\nHit \"Enroll Now\" and step into the EEPROM universe!\n\n\nEducational Engineering Team\nAbout the Instructor:\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts through in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone looking to Master EEPROM using Arduino",
        "Anyone looking to learn How to download and install the required software for coding and for circuit simulation of the Arduino board.",
        "Anyone looking to learn How to use an external EEPROM",
        "Anyone looking to know Supported Arduino boards to interface Arduino board that does not have EPROM to an external EEPROM",
        "Anyone with a curiosity for making electronics",
        "People with no experience in electronics",
        "People with an intermediate knowledge of electronics",
        "Anyone looking to learn How to interface the built-in EEPROM"
      ]
    },
    {
      "title": "Create IoT Smart Garden with ESP32 and Blynk",
      "url": "https://www.udemy.com/course/create-iot-smart-garden-with-esp32-and-blynk/",
      "bio": "A Different IoT Power and Performance, Use ESP32 microcontroller to MAKE IoT Smart Garden and unleash your creativity",
      "objectives": [
        "Learn Why you should Interface Arduino and ESP32 in your Electronic Projects",
        "Learn How to connect Arduino Boards with ESP32 and make it Web enabled",
        "Learn how to interface Arduino with ESP32 with one wire only"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch",
        "Be familiar with the Arduino Uno",
        "Be familiar with the breadboard and wiring."
      ],
      "description": "A Different IoT Power and Performance, Use ESP32 microcontroller to MAKE IoT Smart Garden and unleash your creativity\nGardening is a very enjoyable hobby. But, because of most people's busy lifestyles, plants in our gardens might not always get the attention they deserve. But today this will end. What if you can remotely monitor your garden and give your plants the care they need?\nThere is a way! In this course, we are going to create an IoT-based smart gardening system using the Blynk App.\nIt's really hard to control ESP Board via mobile; creating a mobile application that can connect to an online server to send and receive commands to the ESP Board is a daunting task that requires mobile app development experience and takes a lot of time, effort, and in some cases, money.\nBut what if you can create a mobile interface using drag-and-drop features with zero programming experience to control and monitor any of the ESP Board pins?\nWhy you should take this course?\nLearn how to create a wireless IoT smart garden with ESP32 and Blynk\nESP32 is a low-cost, low-power microcontroller that can be used as the basis for any IoT project\nThe course is the perfect introduction to the ESP32 and Blynk and will inspire you to build your own IoT projects\nIn this course, you will learn how to create an interactive mobile app interface in less than 5 minutes and connect it to your ESP Board via a free web server that will allow you to directly control your board and get a live reading from sensors and buttons, plus sending control data to LEDs, actuators, pumps, and motors.\nWe will use the knowledge you will gain from this course to create an IoT Smart Garden that has temperature, humidity, water level, and soil moisture sensors, and display sensors reading live on your mobile app. You will also use a button inside the app to control a pump to water your garden from anywhere in the world!\nIn this course, you will create a plant environment monitoring system that monitors soil moisture level, air temperature, humidity, and water level. Then, depending on the conditions, the system allows users to deliver what is needed remotely through a mobile app.\nWhat You Will Learn In This Course\nHow to create an IoT garden using ESP and Blynk\nThe working principle behind this\nHow to connect the hardware components\nWhat is Blynk and how to use it to control your project smartly\nHow to code your ESP to read and send sensor data via web interface\nSystem operation\nHow to use the same methodology to make any device smart!\nAt the end of this course, you can create innovative IoT projects controlled by a mobile app with almost no programming experience required. The only thing that you need to do is THINKING, WIRING & CODING.\nWhat You Will Learn\nHow to create an IoT garden using ESP32 and Blynk\nConnecting and configuring hardware components\nUsing Blynk to control your project smartly\nCoding ESP32 to read and send sensor data via web interface\nSystem operation and real-time monitoring\nCreating smart devices using the same methodology\nWho is This Course For\nIoT enthusiasts looking to expand their skills\nDIY electronics hobbyists\nStudents of technology and engineering\nEducators looking for practical STEM projects\nAnyone interested in smart gardening and IoT\nRequirements\nBasic understanding of electronics and circuitry\nEnthusiasm for DIY projects and learning new technology\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve their skills and build great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Electronics Geeks",
        "Arduino Geeks",
        "Anyone interested in making amazing electronics Projects",
        "Anyone interested in making amazing Microcontroller Projects",
        "Anyone interested in creating a web enabled electronic Project using Arduino",
        "Anyone interested in sending data from Arduino to the Web",
        "Anyone interested in connecting his project to the internet with a low budget solution"
      ]
    },
    {
      "title": "Learn Schneider Plc Programming with TM221 - (Mini Course)",
      "url": "https://www.udemy.com/course/learn-schneider-plc-programming-with-tm221/",
      "bio": "Learn Schneider Plc Programming Basics with TM221 CPU & Get Programming Skills for Schneider Plcs from Scratch",
      "objectives": [
        "Machine Expert Basic Software",
        "Plc Programming Basics",
        "Schneider M221 CPU Hardware",
        "Schneider M221 CPU Programming",
        "Industrial Automation Project Basics - How To..",
        "Plc Programmming Techniques and Logic Behind it"
      ],
      "course_content": {
        "Introduction": [
          "Download Software",
          "Hardware Introduction - M221 Controller",
          "How to Create a New Project and Some Tricks",
          "How to Go Online Plc and How to Upload & Download",
          "Configuration",
          "First Program and Simulation"
        ],
        "Programming Section - Instructions": [
          "Bit Logic Basics",
          "Timers",
          "TP Timer",
          "Basic Application - Let's Write Sequentially 3 AC Motor Program",
          "Counters",
          "Memory Bits & Words",
          "System Bits & Words",
          "Move Instruction",
          "Math Instruction",
          "Comparisons",
          "How to Create a New Function Block",
          "Open & Short Blocks Usage",
          "ABS Instruction Usage",
          "INC & DEC Instruction Usage",
          "INT_TO_REAL Instruction Usage",
          "REAL_TO_INT Instruction Usage",
          "Float Numbers Math Instructions",
          "MEAN Instruction Usage",
          "TRUNC Instruction Usage"
        ],
        "Basic Hardware Applications": [
          "How to Use Digital Inpuıts - Let's Connect NO Button",
          "How to Read Analog Input - Let's Use and Read AI0 on CPU",
          "How to Activate Digital Output - Let's Activate Relay and Then Contactor !",
          "Let's Activate Output after a Set Time - Basic Application",
          "Let's Activate Output According to Analog Input"
        ]
      },
      "requirements": [
        "This course does not require any prior knowledge."
      ],
      "description": "Dear Students ,\nThis course created by us for who wants learn schneider plc programming or interest to these plcs.\nBefore start to record this course , we knew that schneider products are too much and it is not possible to teach each product on this platform.\nAccording to our experiences and also knowledge , we prepared this course for you.\nThere is no doubt about learning from us.\nInto this course that you are going to learn ,\n\n\n- Hardware structure of Schneider Plcs\n- Machine Expert Basic Software\n- Plc Programming Basics\n- Necessary Plc Instructions for Startup\n- Basic but Helpful Application Examples\n- How to write plc programs for real machines etc.\n\n\nAnd much more than content is published in this course. Course's name is Mini but you are going to learn a lot of details in to this course.\nAfter this course , you are going to be ready for programming for schneider plcs.\nThis course divided to parts and these parts are going to extend day by day according to your feedbacks and questions.\n\n\nIn Schneider Plcs Family , before machine controllers and TM series , we have also Twido series and also Unity softwares etc.\nWe are going to wait your feedbacks than we can update this course with another old Cpus or newest cpus tutorials.\nAlso HMI & Drive programming basics can be add to this course day by day.\n\n\nBut our main goal is that teach and show to you TM221 series Cpus programming basics in the beginning.\n\n\nLet's start to learn always from us and be ready to programming anytime.\n\n\nHave a good work !\nBest Regards\nMustafa",
      "target_audience": [
        "Anyone who wants to learn plc programming",
        "Anyone who wants to learn schneider plc programming",
        "Anyone who wants to proceed industrial automation sector and become a plc programmer",
        "Anyone who get an experience about schneider"
      ]
    },
    {
      "title": "Arduino Programming and Circuit Designs using Proteus IDE.",
      "url": "https://www.udemy.com/course/arduino-programming-and-circuit-designs-using-proteus-ide/",
      "bio": "From Simulations to Mastering Proteus Circuit Design and Arduino Microcontroller Programming for Absolute Beginners",
      "objectives": [
        "Setting up and navigating the Arduino environment.",
        "Writing and understanding Arduino code structure.",
        "Using operators, decision-making statements, and loops in Arduino programming.",
        "Controlling Arduino pins for digital and analog operations.",
        "Simulating and debugging Arduino projects using Proteus IDE."
      ],
      "course_content": {
        "Setting Up Arduino Environment": [
          "How To Download Arduino Sketch",
          "Download And Installation Of Arduino Library",
          "How To Save Our Arduino Project",
          "How To Locate hex File Of Our Arduino Project",
          "Your First Arduino Project"
        ],
        "Basics of Arduino Programming": [
          "Basic Structure",
          "How To Write Functions",
          "Curly Braces",
          "Semicolons",
          "Comments",
          "Variables",
          "Variable Declaration",
          "Variable Scope",
          "Data Types",
          "Arrays"
        ],
        "Operators in Arduino Programming": [
          "Arithmetic Operator",
          "Comparison Operator",
          "Logical Operator",
          "Constants"
        ],
        "Decision Making Statement in Arduino Programming": [
          "If Statement",
          "If Else Statement",
          "Else If Statement",
          "Switch Case"
        ],
        "Loop Systems in Arduino Programming": [
          "For Loop",
          "While Loop",
          "Do while Loop"
        ],
        "Programming the PINs of Arduino": [
          "PinMode Of Arduino",
          "DigitalWrite And DigitalRead",
          "AnalogWrite And AnalogRead",
          "Delay In Arduino Program",
          "Minimum And Maximum",
          "Arduino Serial Port"
        ],
        "Arduino Project Simulations with Proteus IDE": [
          "LED And Push Button In Arduino",
          "Seven Segment Display With Arduino",
          "Reading Analog Input In Arduino",
          "Arduino PWM With LED",
          "LCD Interface With Arduino",
          "Digital Fahrenheit Thermometer With Arduino",
          "Digital Celsius Thermometer With Arduino",
          "Serial Transmission In Arduino",
          "Serial Receiver In Arduino",
          "Servo Motor Control With PWM",
          "Servo Motor Control With Potentiometer",
          "Congratulations! Keep Learning..."
        ]
      },
      "requirements": [
        "Basic understanding of electronics.",
        "A PC with Windows OS for software installation.",
        "Enthusiasm to learn Arduino programming and circuit design."
      ],
      "description": "Unlock the full potential of Arduino programming and circuit design with our comprehensive course, \"Arduino Programming and Circuit Designs using Proteus IDE.\" This course is tailored for beginners and enthusiasts who are eager to learn the fundamentals of Arduino programming and how to simulate and design circuits using the Proteus IDE. Whether you’re stepping into the world of microcontrollers for the first time or looking to sharpen your skills, this course offers a structured and practical approach to mastering Arduino.\nSetting Up Arduino Environment\nStart your journey by setting up the perfect Arduino development environment. Learn how to download Arduino sketches, install the necessary libraries, and save your projects efficiently. You'll also discover how to locate the hex file of your Arduino project, which is crucial for simulations and debugging. Finally, you'll dive into your first Arduino project, setting the stage for all the exciting developments ahead.\nTopics Covered:\nHow To Download Arduino Sketch\nDownload And Installation Of Arduino Library\nHow To Save Our Arduino Project\nHow To Locate Hex File Of Our Arduino Project\nYour First Arduino Project\nBasics of Arduino Programming\nWith your environment set up, it’s time to delve into the basics of Arduino programming. This section covers the essential building blocks of writing code in Arduino. You’ll explore the basic structure of an Arduino program, how to write functions, and the importance of curly braces, semicolons, and comments. Understanding variables, their declaration, scope, and data types will give you the confidence to manage data within your projects. You’ll also learn about arrays, which allow you to handle multiple data points efficiently.\nTopics Covered:\nBasic Structure\nHow To Write Functions\nCurly Braces\nSemicolons\nComments\nVariables\nVariable Declaration\nVariable Scope\nData Types\nArrays\nOperators in Arduino Programming\nOperators are the backbone of decision-making and calculations in programming. In this section, you’ll learn how to use arithmetic operators for calculations, comparison operators for decision-making, logical operators for complex conditions, and constants for fixed values. Mastering these operators will enable you to create more dynamic and responsive Arduino programs.\nTopics Covered:\nArithmetic Operator\nComparison Operator\nLogical Operator\nConstants\nDecision Making Statement in Arduino Programming\nDecision-making statements allow your Arduino to react to different conditions in real-time. This section will guide you through the use of if, if else, and else if statements, enabling your programs to make decisions based on variable conditions. You’ll also learn how to use the switch case statement for handling multiple conditions efficiently, making your code cleaner and more organized.\nTopics Covered:\nIf Statement\nIf Else Statement\nElse If Statement\nSwitch Case\nLoop Systems in Arduino Programming\nLoops are essential for running repetitive tasks in programming. In this section, you’ll explore the for, while, and do while loops, which allow your Arduino to execute code repeatedly based on specific conditions. Understanding these loops is key to managing tasks such as monitoring sensor data or controlling devices over time.\nTopics Covered:\nFor Loop\nWhile Loop\nDo While Loop\nProgramming the PINs of Arduino\nThe pins on your Arduino board are your gateway to the physical world. Learn how to control these pins using pinMode, digitalWrite, and digitalRead functions. You’ll also explore analog control with analogWrite and analogRead, and understand how to manage timing in your programs with the delay function. Additionally, you’ll learn how to use the min and max functions to set boundaries within your code.\nTopics Covered:\nPinMode Of Arduino\nDigitalWrite And DigitalRead\nAnalogWrite And AnalogRead\nDelay In Arduino Program\nMinimum And Maximum\nArduino Project Simulations with Proteus IDE\nPut your knowledge to the test by simulating and designing real-world Arduino projects using Proteus IDE. You’ll start with simple tasks like controlling LEDs and push buttons, and gradually move on to more complex simulations such as seven-segment displays, reading analog inputs, PWM control with LEDs, and interfacing with LCDs. The course culminates with advanced projects like digital thermometers, serial communication, and servo motor control, providing you with a thorough understanding of Arduino’s capabilities.\nProjects Covered:\nLED And Push Button In Arduino\nSeven Segment Display With Arduino\nReading Analog Input In Arduino\nArduino PWM With LED\nLCD Interface With Arduino\nDigital Fahrenheit Thermometer With Arduino\nDigital Celsius Thermometer With Arduino\nSerial Transmission In Arduino\nSerial Receiver In Arduino\nServo Motor Control With PWM\nServo Motor Control With Potentiometer\nBenefits of This Course:\nDevelop a strong foundation in Arduino programming and circuit design.\nGain hands-on experience with Proteus IDE for simulating and designing Arduino projects.\nLearn to create and debug real-world projects, from simple LED control to complex temperature monitoring systems.\nEnhance your problem-solving skills through practical coding and simulation exercises.\nBuild a portfolio of Arduino projects that demonstrate your proficiency.\nReal-World Applications:\nHome automation and control systems.\nInteractive electronic devices and prototypes.\nIoT (Internet of Things) applications.\nEducational tools for teaching electronics and programming.\nRobotics and sensor-based systems.",
      "target_audience": [
        "Beginners interested in learning Arduino and circuit design.",
        "Electronics hobbyists looking to enhance their programming skills.",
        "Engineering students working on projects and simulations.",
        "Professionals seeking to expand their knowledge of embedded systems."
      ]
    },
    {
      "title": "FPGA Timings P1:Static Timing Analysis(STA) with Vivado 2024",
      "url": "https://www.udemy.com/course/fpga-timings-p1-sta-foundations-with-vivado-2024/",
      "bio": "Static Timing Analysis from Scratch",
      "objectives": [
        "Role of Static Timing Analysis (STA) in FPGA design",
        "Interpreting WNS, WHS, and WPWS in Vivado timing reports",
        "Deriving setup and hold slack for reg2reg, reg2pin, and pin2reg paths",
        "Writing XDC constraints for synchronous, asynchronous, differential, and virtual clocks",
        "Defining I/O constraints for interfacing peripherals and extracting delays from specifications"
      ],
      "course_content": {
        "Introduction": [
          "Overview of Design Verification",
          "Physical Constraints",
          "Timing Constraints",
          "Routing Vs Gate Delays",
          "Need for STA",
          "Demo"
        ],
        "Getting Started with Clocks": [
          "Most Crucial timing paths for STA",
          "Why timing constraints are required ?",
          "Deviations in Clock P1",
          "Deviations in Clock P2",
          "create_clock P1",
          "create_clock P2",
          "Generating Clock constraints with GUI",
          "Code"
        ],
        "Types of Clock": [
          "Different types of Clock : Derived Async, Derived Sync, Virtual and Differential",
          "Derived Async Clock & Differential Clock",
          "Generated Clock P1",
          "Generated Clock P2",
          "Generated Clock P3",
          "Code",
          "Generated Clock P4",
          "report_clocks",
          "Generated Clock P5",
          "Code"
        ],
        "Setup and Hold Times": [
          "What we need to know before proceeding timing paths in STA",
          "Operation of Single JK Latch P1",
          "Operation of Single JK Latch P2",
          "Setup and Hold Time",
          "Predictable Vs Non-Predicatable Output",
          "How Setup and Hold Violation looks in Timing report P1",
          "How Setup and Hold Violation looks in Timing report P2",
          "Code"
        ],
        "Analysis of reg2reg path": [
          "Launch edge & Latch edge",
          "Data Arrival Time P1",
          "Data Arrival Time P2",
          "Why we consider max delay for clock to reach source reg in Data Arrival time",
          "Data Required Time",
          "Why we consider min delay for clock in Data Required time",
          "Setup Slack Time",
          "Why Reg2Reg Paths Are Sufficient for Static Timing Analysis ?"
        ],
        "Setup Slack Analysis : reg2reg": [
          "Clock delay correction with CPR",
          "Clock Uncertainity Correction",
          "report_timing_summary P1",
          "report_timing_summary P2 : WNS",
          "report_timing_summary P3 : WHS",
          "report_timing_summary P4 : WPWS P1",
          "report_timing_summary P5 : Slack",
          "Source Clock Delay",
          "Data Path Delay P1",
          "Data Path Delay P2",
          "Destination Clock Path",
          "Clock Path Skew",
          "Setup Slack P1",
          "Setup Slack P2",
          "Code"
        ],
        "Jitter & Clock Uncertainty": [
          "Understanding Clock Jitter",
          "set_input_jitter",
          "Contribution of Jitter to Slack",
          "System Jitter",
          "Input Jitter",
          "User Uncertainty"
        ],
        "Hold Slack : reg2reg": [
          "Hold Slack Analysis P1",
          "Hold Slack Analysis P2",
          "Hold Slack Analysis P3",
          "Hold Slack Analysis P4",
          "Code"
        ],
        "reg2pin paths": [
          "Understanding reg2pin and pin2reg",
          "Focus of pin2reg",
          "Focus of reg2pin",
          "Good to Know",
          "Setup Analysis in reg2pin P1",
          "Setup Analysis in reg2pin P2",
          "Setup Analysis in reg2pin P3",
          "Setup Analysis in reg2pin P4",
          "Setup Analysis in reg2pin P5",
          "Hold Analysis in reg2pin P1",
          "Hold Analysis in reg2pin P2",
          "Code"
        ],
        "pin2reg paths": [
          "Setup Analysis in pin2reg P1",
          "Setup Analysis in pin2reg P2",
          "Setup Analysis in pin2reg P3",
          "Setup Analysis in pin2reg P4",
          "Setup Analysis in pin2reg P5",
          "Ways to compute setup analysis in reg2pin",
          "Hold Analysis P1",
          "Hold Analysis P2",
          "Ways to compute Hold analysis in reg2pin",
          "Code"
        ]
      },
      "requirements": [
        "Fundamentals of Digital Electronics,Verilog and Xilinx Vivado Design Suite flow"
      ],
      "description": "Static Timing Analysis (STA) is essential for design engineers to verify that a digital circuit functions correctly at the target operating frequency by ensuring that all timing paths meet setup and hold constraints under given process, voltage, and temperature (PVT) conditions. Without STA, a design may exhibit unpredictable behavior, setup violations may cause incorrect data capture, and hold violations can lead to data corruption, making it critical to analyze timing margins before fabrication or deployment.\nThis course provides a detailed understanding of timing reports in Xilinx Vivado, focusing on Worst Negative Slack (WNS), Worst Hold Slack (WHS), and Worst Pulse Width Slack (WPWS) and their impact on design correctness. It covers the derivation of setup and hold slack formulas for different timing paths, including register-to-register (reg2reg), register-to-pin (reg2pin), and pin-to-register (pin2reg), ensuring engineers can compute and interpret timing slack accurately.\nThe course also explores writing constraints in XDC files to define derived synchronous, derived asynchronous, differential, and virtual clocks, along with techniques to specify input and output delays for peripheral interfaces based on external device specifications. Engineers will learn to extract timing parameters from reports and compute setup and hold slack by considering latch and launch edges, clock uncertainty, clock path skew, data path delay, source clock delay, and destination clock delay.\nBy the end of this course, participants will gain the expertise to analyze and resolve timing violations, interpret Vivado timing reports effectively, and apply constraints to achieve timing closure, ensuring robust and reliable FPGA design execution.",
      "target_audience": [
        "Anyone preparing for Front end RTL Design role."
      ]
    },
    {
      "title": "Digital Electronics for Beginners:- Mastering with PROTEUS",
      "url": "https://www.udemy.com/course/digital-electronics-for-beginners-g/",
      "bio": "Learn Digital Electronics & Circuit Simulation on Proteus Software Recommended for ECE, Robotic & Biomedical Engineers",
      "objectives": [
        "Basic working of BJT and Diodes",
        "Difference between Analog and Digital Electronics",
        "What is Logic Gates and different types of logic gates",
        "Universal Logic Gates & Exclusive Logic Gates",
        "Minimization of Logic gates",
        "Numerical based on Minimization of Logical Expression",
        "Number Systems",
        "Concept of Bits, Bytes & Nibbles",
        "Conversion In Number System",
        "Addition & Subtraction of Binary Numbers",
        "Data Representation",
        "Understanding SOP & POS Form"
      ],
      "course_content": {
        "Introduction": [
          "Course Preview",
          "Introduction",
          "Definitions",
          "Difference Between Analog and Digital Electronics",
          "Understanding The Concept of Logic '0' & Logic '1'"
        ],
        "Quick Revision of Analog Electronics": [
          "Understanding Working of Diodes",
          "Understanding Working of BJTs"
        ],
        "Basic Logic Gates": [
          "Introduction to Logic Gates",
          "Understanding the Operation and Designing of NOT gate on Proteus Software",
          "Implementing NOT Gate on the Thinkercad Software",
          "Understanding the Operation and Designing of AND gate on Proteus Software",
          "Implementing AND Gate on the Thinkercad Software",
          "Understanding the Operation and Designing of OR Gate on Proteus Software",
          "Implementing OR Gate on the Thinkercad Software",
          "Course Feedback"
        ],
        "Universal Logic Gates": [
          "NAND Gate as NOT Gate",
          "NAND Gate as AND Gate",
          "NAND Gate as OR Gate",
          "NAND Gate as NOR Gate",
          "NAND Gate as Ex-OR Gate",
          "NAND Gate as Ex-NOR Gate",
          "NOR Gate as NOT Gate",
          "NOR Gate as AND Gate",
          "NOR Gate as OR Gate",
          "NOR Gate as NAND Gate",
          "NOR Gate as Ex-NOR Gate",
          "NOR Gate as Ex-OR Gate",
          "Course Feedback"
        ],
        "Exclusive Logic Gates": [
          "Understanding the Operation and Designing of Ex-OR Gate",
          "Designing BUFFER & NOT Gate with Ex-OR Gate",
          "Simulating Ex-OR Gate on the Thinkercad Software",
          "Understanding the Operation and Designing BUFFER & NOT Gate using Ex-NOR Gate",
          "Understanding the Conversion of Ex-OR to Ex-NOR Gate and Vice Versa"
        ],
        "Minimization of Logical Expression": [
          "Introduction",
          "NOT Operation",
          "AND Operation",
          "OR Operation",
          "Numerical based on minimization of basic logical operation",
          "Distribution Theorem",
          "Numerical based on Distribution Theorem",
          "Consensus Theorem",
          "Numerical based on Consensus Theorem",
          "De-Morgan's Theorem",
          "Course Feedback"
        ],
        "Numerical based on Minimization of Logical Expression": [
          "Numerical - 1",
          "Numerical - 2",
          "Numerical - 3",
          "Numerical - 4"
        ],
        "Numericals based on Logic Gates": [
          "Numerical - 1",
          "Numerical - 2",
          "Numerical - 3",
          "Numerical - 4"
        ],
        "Mini-Project": [
          "Water Pump Controlling System"
        ]
      },
      "requirements": [
        "Basic Idea about concepts of current electricity or you can enroll in my first course",
        "Semiconductors or you can enroll in my second course",
        "In depth knowledge of components like diodes, capacitors and BJT or you can enroll in my third and fourth course"
      ],
      "description": "Welcome to our comprehensive course on Digital Electronics! Perfect for students pursuing IT, Computer Science, Electrical, Electronics, Instrumentation, Biomedical, and Robotic Engineering, this course is designed to solidify your understanding of fundamental concepts.\nBefore diving in, it's beneficial to have a grasp of basic electricity principles, semiconductor functionality, and a thorough understanding of diodes and transistors, especially BJTs. If you're new to these concepts, consider enrolling in our previous courses where we delve into these topics extensively.\nIn this course, we focus on building a strong foundation in digital electronics through the following key areas:\n1) Basic Logic Gates\n2) Universal Logic Gates\n3) Exclusive Logic Gates\n4) Minimization of Logical Expression\n5) Numerical based on Minimization of Logical Expression\n6) Numericals based on Logic Gates\n7) Universal Logic Gates\n8) Mini-Project\n9) Number System\n10) Concept of Bits, Bytes & Nibbles\n11) Conversion In Number System\n12) Addition & Subtraction of BInary Numbers\n13) Data Representation\n14) Understanding SOP & POS Form\n\n\nWhile these topics may seem straightforward, our course offers unique insights and techniques that go beyond the basics. Expect in-depth exploration, practical implementation, and hands-on experience using Proteus and TinkerCAD software platforms.\nBy the end of the course, you'll achieve:\nA Quick Revision of Analog Electronics: Reinforcing your knowledge of diodes and BJTs.\nComprehensive Understanding of Logic Gate Design: Mastering the intricacies of logic gates.\nPractical Implementation: Applying learned concepts on Proteus and TinkerCAD.\nEfficient Logical Expression Minimization: Simplifying expressions with ease.\nMastery of Number Systems: Grasping the nuances of different systems.\nJoin us and embark on a journey towards mastery in digital electronics. Whether you're a beginner or seeking to deepen your understanding, this course is your gateway to unlocking the complexities of digital circuits and systems.",
      "target_audience": [
        "Anyone who wants to learn basic concepts of digital electroics",
        "Recommended for those who want to start learning arduino",
        "Electrical Engineers",
        "Electronic Engineers",
        "Biomedical Engineers",
        "Instrumentation Engineers"
      ]
    },
    {
      "title": "Learn STM32F103C8T6 microcontroller in C with Keil uVision",
      "url": "https://www.udemy.com/course/stm32f103c8t6-microcontroller/",
      "bio": "STM32 microcrocontroller",
      "objectives": [
        "STM32F103C8T6 microcontroller"
      ],
      "course_content": {
        "Introduction": [
          "The things that you need in this course",
          "Microprocessor vs Microcontroller"
        ],
        "Keil uVision IDE setup": [
          "Keil uVision IDE setup"
        ],
        "Debugging methods and tools": [
          "Use Keil uVision for debugging",
          "Use STM Studio for debugging"
        ],
        "General Purpose Input Output": [
          "Input mode: Schmitt trigger",
          "Input mode: Pull up, Pull down, Floating mode",
          "Output mode: Open drain configuration",
          "Output mode: Push pull configuration",
          "LED blinking",
          "On board LED High & Low inverted explanation"
        ],
        "USART": [
          "UART frame structure explanation",
          "Baud Rate Explanation",
          "Parity Control Explanation",
          "Transmitting and receiving data using UART in Keil"
        ],
        "ADC": [
          "Single Channel Continuous Conversion"
        ],
        "General Purpose Timer": [
          "Timer Interrupt"
        ]
      },
      "requirements": [
        "Basic C programming and  microcontroller knowledge"
      ],
      "description": "Steps by steps in learning STM32. No time wasting and straight to the point. Understanding everything about STM32F103C8T6 microcontroller, memory architecture, CRC calculation, Power Control, Backup registers, Low power mode, RCC clock, GPIO, Interrupt and events, ADC and DAC, DMA, Timer, Real time clock, Watchdog timer, Flexible static memory controller, SDIO, USB, CAN, SPI, I2C, USART and Ethernet",
      "target_audience": [
        "Beginner in microcontroller"
      ]
    },
    {
      "title": "Mitsubishi PLC Programming from Scratch - GX Developer",
      "url": "https://www.udemy.com/course/mitsubishi-plc-in-2hours/",
      "bio": "PLC Programming of Mitsubishi using LIVE Examples.",
      "objectives": [
        "Understand how a Programmable Logic Controller (PLC) works",
        "Pass a technical PLC interview",
        "Understand how to program a PLC",
        "Learn Ladder Logic Programming",
        "Industrial Automation",
        "GX Developer"
      ],
      "course_content": {},
      "requirements": [
        "Basic Electrical Hardware Understanding",
        "PLC Software (Included in the Course)"
      ],
      "description": "This is a comprehensive course for learning the basic level programing of Mitsubishi PLC in GX Developer software. You will learn the logic designing of GX Developer from scratch in a short period. No hardware equipment will be required to follow the course you will just have to install GX Developer software on you PC and you can do it. Fundamental programming of GX Developer will be covered step by step including the video lectures, solved examples and assignments.\nCourse Outline\n1. PLC Wiring\n2. PLC Wiring\nInputs, Outputs\nPower Supply\nSink Source\nEthernet Communication\nNPN & PNP Sensors\n3. Download and Install GX Developer Software\n4. How to Use GX Developer Software\nHow to Launch Software\nHow to Create a New Program\nNormally Open Contacts\nNormally Close Contacts\nOutput Coil\nPositive Pulse/Rising Edge Operand\nNegative Pulse/Falling Edge Operand\nHow to Download the Program into PLC\nHow to Read a Program from PLC\n5. Latching\nHow to Latch an Output Using a Memory Bit\nHow to Latch an Output Using Set and Reset Commands\n6. Interlocking of Motors\n7. Internal Memory or Relay and Latched Internal Memory\n8. Timers\nOn Delay Timer\n• Enable of Timer\n• Specifying the Duration of Time\n• Resetting a Timer\nOff-Delay Timer\nRetentive On-Delay Timer\nAssignment 1\n9. Counters\nUp Counter\n• Resetting a Counter\nDown Counter\nUp-Down-Counters\nAssignment 2\n10. Registers\nHow to Initialize Registers\nHow to Write Values in Registers\nHow to Move the Values of Registers\nHow to Use Register with Timers and Counters\n11. Arithmetic Operations\nAddition\nSubtraction\nMultiplication\nDivision\nAssignment 3\n12. Compare Command\nEqual (=)\nLess Than (>)\nGreater Than (<)\n13. Examples Using AND, OR Gates\n14. Assignments\nTwo Way Traffic Signal Control\nColor Mixing Scheme\n\n\n_______________________________________________________________________________________________________________________________________\n\n\nall about mitsubishi,\nall about GX developer,\nmitsubishi porgramming,\ngx developer programmming,\nlearn mitsubishi programming in short time,\nlearn gx developer programming in short time,\nhow to use timers in gx developer,\nhow to use counters in gx developer,\nmath operators in gx developer,\ncomparator commands in gx developer,\nhow to use register in gx developer,\nhow to use retentive registers in gx developer,\nhow to use compare command in gx developer,\nlogic for interlocking in gx developer,\nhow to use latching in gx developer,\nhow to use set and reset command in gx developer,\nplc wiring of mitsubishi,\nelectrical plc training, freelance plc programmer, how to learn plc programming, learn plc programming, learning plc programming, plc application, plc based control system, plc class, plc classes, online plc, computer plc, controlled equipment, plc controller, training plc, course plc, full form plc, industry plc, interface plc, manufacturing plc, network plc, online courses plc, operation plc, programing course, plc programing courses, plc programing training, plc programmable logic controller, plc programmer training, plc programmers, plc programming classes, plc programming companies, plc programming course, plc programming courses, plc programming language, plc programming online course, plc programming school, plc programming service, plc systems, plc training courses, plc training courses online, plc-programs, plcs for dummies, program logic control training, program plc, program plcs, programing plcs, programmable controller application, programmable logic controller applications, programmable logic controller history, programmable logic controller training, what is a programmable logic controller, what is plc control, what is programmable logic controllers,",
      "target_audience": [
        "Anyone interested in learning how an industrial process works",
        "Electrical Engineers",
        "Production, Maintenance & Electrical Technicians"
      ]
    },
    {
      "title": "Raspberry Pi powered smart mirror",
      "url": "https://www.udemy.com/course/raspberry-pi-powered-smart-mirror/",
      "bio": "Learn how to build, design, and customize your very own Raspberry Pi powered smart mirror!",
      "objectives": [
        "Setup their very own Raspberry Pi powered smart mirror",
        "Write basic HTML and CSS code for a smart mirror web page hosted on an Apache 2 HTTP server",
        "Write JavaScript code to create a digital clock element for aforementioned web page",
        "Write PHP code to read and display RSS feeds",
        "Setup Chromium browser on the Raspberry Pi to autostart on boot"
      ],
      "course_content": {},
      "requirements": [
        "You should know how to setup and work on a Raspberry Pi",
        "You should understand basic Linux commands and utilities",
        "Rudimentary knowledge of HTML and CSS is necessary to understand the project and to develop the project further",
        "Elementary knowledge of JavaScript and PHP code is also necessary if you wish to understand and develop/modify the project",
        "While this course does not teach or include any woodwork involved in completing the mirror, carpentry skills can be of use in crafting your mirror frame/cabinet"
      ],
      "description": "This course is meant as a active learning/DIY project to learn the basics of scripting languages, while working on something fun.\nThis course will focus upon teaching you to setup and build your own smart mirror display\n. This involves creating and coding a custom web page and hosting it on a Raspberry Pi using the Apache HTTP server application.\nTo learn how to build your own magic mirror, we will first focus on writing a base HTML script for the website, and adding basic elements - a\nclock, a periodically updating news feed, and a periodically updating\nweather feed, to it. Once this is done, we will create a cascading style sheet (CSS) doc and customize our web page to give us the required display for a smart mirror.\nThis course involves the use of basic concepts from multiple programming languages. We will be using\nJavaScript\nto program the clock display. We will also be using\nPHP\nfor the two\nRSS feeds\n- news and weather. Finally, we will put all this together in our\nHTML script\nand edit the presentation of our HTML document using a\nCSS\nfile to make the display visible through a partially mirrored surface.",
      "target_audience": [
        "This course is meant for anyone interested in setting up their own Raspberry Pi powered smart mirror",
        "This course is also meant for programmers with a very basic working knowledge of HTML, CSS, JavaScript, or PHP, to learn the basics of the smart mirror and then customize/improve it as a learning experience"
      ]
    },
    {
      "title": "Learn Arduino Programming with Applications - All In One",
      "url": "https://www.udemy.com/course/learn-arduino-programming-with-applications-all-in-one/",
      "bio": "Learn Arduino From Basic to Advance with Basic Electronic Components & Visual Studio (C# Programming) and Applications",
      "objectives": [
        "Electronic Basics",
        "Programming",
        "Arduino Software",
        "Electronic Components",
        "Arduino Applications",
        "Basic Electronic Formulas and Informations",
        "Arduino Hardware",
        "Serial Communication",
        "Visual Studio & C# Basics",
        "Proteus"
      ],
      "course_content": {},
      "requirements": [
        "This course does not require any prior knowledge."
      ],
      "description": "Dear Students,\nThis course has been created for those who are interested in arduino, who are starting from scratch or continue to learn.\nIn this course, we will break the memorization and move away from the classical program blocks. We will improvise ourselves and check the hardware ourselves.\nAnd from time to time we will find solutions to problems together.\nYou will learn Arduino learning based on logic and algorithms, not rote learning.\nWith this course, you will learn and apply;\n- Arduino hardware\n- Arduino software\n- Arduino programming\n- Use of basic electronics and components\n- Applications with real hardware\n- Arduino programming techniques\n- Visual Studio interface\n- C # programming basics\n- Arduino and C # Serial communication\n- I2C Communication usage\n- Using Arduino libraries\nAnd some more.\nAs the Derstagram academy family, this course, which is our 5th course, has been prepared with care.\nBasically, although it is easy to start programming arduino and work with real hardware, it is also very difficult.\nWe carefully avoided showing you standard electrical circuits or standard programs.\nHere, we have been professional while doing many components and applications and have solved the problems in different ways in training.\nA program can be written in many different ways, and the program algorithm works differently for everyone.\nAs an automation and software engineer, I created a course that will benefit you by taking advantage of my experience while taking this course.\nIn this course, after each training, you can download the codes we created in that training for free on google drive.\nThus, after each training, you can try and examine the training files and improve yourself by making changes on them.\nYou can also test yourself with quiz sections and test your knowledge.\nIn the applications section, you can see how real hardware works and get an idea.\nWith Arduino, which basically uses the C language, you will have entered the embedded software at some point, thanks to the programming and algorithm logic you will learn in this course.\nI would like you to know from the very beginning that our main goal is to teach you Arduino and basic electronics.\nThe expressions I made on the board in the basic electronics section are based entirely on our experiences from the field.\nAnd there are many important details, words that you will learn in each training.\nIn this course, you will learn the Visual Studio interface in advanced level and you will be able to communicate between arduino and c # program.\nYou will be able to control the arduino with the windows forms we write on Visual Studio practically.\nAt the end of this course,\n- You will be a professional arduino programmer\n- You will learn about electronics and electronic equipment\n- You will be able to create the circuits you want yourself\n- You will be able to work with real hardware\n- You will be able to measure, understand and control real hardware\n- You will be able to control the arduino with your own C # software.\n\n\nAnd above all, as the instructor of this course, you can ask questions and get support from us at every point you get stuck.\nDo not stop following this course and keep learning continuously.\nRemember, knowledge is power.",
      "target_audience": [
        "Anyone who wants to learn electronic components and theirs usage for applications.",
        "Anyone who wants to learn arduino from scracth to expert level",
        "Anyone who interested in with Electronics."
      ]
    },
    {
      "title": "Practical FPGA project design [UART]",
      "url": "https://www.udemy.com/course/practical-fpga-project-design-uart/",
      "bio": "Design of UART[Universal Asynchronous Receiver Transmitter], on FPGA using VHDL",
      "objectives": [
        "Simulate FPGA design using logism.",
        "design UART receiver on FPGA with vhdl code, and simulate on logism",
        "design UART transmitter on FPGA with vhdl code, and simulate on logism",
        "Learn how to simulate and design fpga circuits in logism",
        "design UART transceiver on FPGA with vhdl code, and simulate on logism"
      ],
      "course_content": {},
      "requirements": [
        "No external hardware needed. We would simulate the FPGA design in logism. Basic knowlegde of vhdl and how to use logism may be reuired."
      ],
      "description": "This is a practical course, that will teach you how to design your first project on FPGA [UART - universal asynchronous transmitter and receiver.]\n\n\nIt explains how the vdhl code was designed. and will teach you how it was simulated , and how to trace the signals for debugging using Logism.\nThe course is divided into three sections: the receiver, the baud generator and transmitter.\nThis a 12 video course. each module teaching about a particular part of the design.\na lot of visuals, arrows, pictures were used to make the tutorials easy to understand.\nkindly use the logism circuit file while watching the tutorial for easy understanding.\nif my english is too fast please use the subtitle files attached.\nYou will design a uart transmitter and receiver . You will be able to design a transceiver by the end of the course. You will get the VHDL scripts and the logism circuit. subsequent courses will teach other serial communication protocols spi, i2c , encryption algorithm includng aes, sha256, RSA, ECDSA. Basic knowledge of vdhl is required.\n\n\nView upcoming projects at projectfpga.\n\n\nWhile on the course please download the attached files, and check links for downloads. they include logism circuit files, vhdl script. etc.\n\n\nNo hardware is required just your pc.\n\n\nIt was kept brief and straight to the point.",
      "target_audience": [
        "Students with basic knowledge of VHDL, looking for a project to design"
      ]
    },
    {
      "title": "Build An Experimental Projects In IoT Using Python And Java",
      "url": "https://www.udemy.com/course/build-an-experimental-projects-in-iot-using-python-and-java/",
      "bio": "Creating The Projects In Internet Of Things With Raspberry pi and Different IoT Cloud+Full Home Automation System",
      "objectives": [
        "Internet Of Things Definitions And Application Domains",
        "Interacting With Raspberry pi And Different Electronics Components",
        "Interactiong With ThingSpeak IOT Cloud",
        "Interactiong With Adafruit-io IOT Cloud",
        "Developing And Programming Using Python And Java",
        "Home Automation Based On MQTT Protocol",
        "Developing GUI Using Swing",
        "Interacting With Databases",
        "Data Security Algorithm"
      ],
      "course_content": {},
      "requirements": [
        "Basic computer Programming skills",
        "A Raspberry Pi Board",
        "A willingness To Learn And To Be Patient"
      ],
      "description": "I'm a motivated person and i really like to motivate the others by sharing my favorite quotes \"A Little More Persistence , A Little More Effort And What Seemed Hopeless Failure May Turn To Glorious Success\"\nThe internet of things will change everything including ourselves, The internet has an impact on communication , science , government and humanity ,The Internet of Things is a new technology of the internet accessing ,By the internet of things objects recognize themselves and obtain intelligence behavior by making or enabling related decisions thinks to the fact that they communicate information about themselves.\nfor that i created this course for all levels to get a general overview about this concepts and the latest technologies used in this domain basing on raspberry pi and programming using python and java in addition to interact with different electronics components\nin this course will be cover every things that has a relation with any software engineering developer (programming , developing ,databases, data security ...)\nthe Topics which will be see in this course are :\nIoT Basics\nIoT definitions and application domains\nIoT communication technologies\nElectronics Components\nSet up the raspberry pi and OS installing\nInteracting with Raspberry Pi Board and some electronics components(led, servo motor, LM35, Arduino,serial port) using python\nThingSpeak Cloud\ncreating a channel and fields\nthingspeak http request\ninteracting with other widgets\nFetching data from thingspeak\ntrigger actions (sending email , ThingTweet,ThingHttp)\nAdafruit-IO Cloud\nInteracting with adafruit feeds\nSending data into adafruit-io\nFetching data from adafruit-io cloud\nInteracting with different blocks(toggle button ,map, number pad)\nMQTT Protocol\nSending and receiving data using mqtt protocol\nHome automation based on mqtt protocol\nDeveloping a python code to control the home automation\nTrigger an actions(into other feed or into IFTTT)\nGraphical Desktop Application Home Automation\nDeveloping GUI Using Java swing\nInteracting With socket network\nSending Data over TCP/IP\nStoring Data sensors in database\nUsing ngrok tools\nSecurity In IoT\nDeveloping an algorithm to encrypt and decrypt the data\nI put all my capacities and my experience in this course, i think it covers the most thing and techniques needed in this field and to go forward in your IOT projects, so take a step to enroll the course and to get a new things in your career, there is always a 30 day money back guarantee so you’re safe about investing your money into this course.",
      "target_audience": [
        "Any One Interested By Raspberry Pi And Programming",
        "Any One Want To Dive In IOT",
        "Any Software Engineering Developer"
      ]
    },
    {
      "title": "The complete computer hardware class \"Full Course\"",
      "url": "https://www.udemy.com/course/the-complete-computer-hardware-class-full-course/",
      "bio": "The complete computer hardware class \"Full Course\"",
      "objectives": [
        "You'll embark on a journey through the fundamental principles and advanced concepts of computer hardware",
        "You'll gain the skills and expertise necessary to build, troubleshoot",
        "Someone looking to build their own PC, this course is designed to provide you with the essential knowledge needed to confidently navigate the intricacies of co",
        "No prior technical experience is required – just a curious mind and a desire to learn!"
      ],
      "course_content": {},
      "requirements": [
        "No prior technical experience is required – just a curious mind and a desire to learn!"
      ],
      "description": "Welcome to \"The Complete Computer Hardware Class - Full Course,\" a comprehensive journey into the fascinating world of computer hardware. This course is designed for both beginners with no prior technical knowledge and intermediate learners seeking to deepen their understanding of computer components and systems. From the fundamental principles to advanced concepts, this course covers everything you need to know about computer hardware.\nCourse Overview: In this full-length course, we will embark on an exploration of computer hardware, delving into the intricate mechanisms that power modern computing devices. Through a combination of engaging lectures, hands-on activities, and practical demonstrations, you will develop a solid foundation in computer hardware and gain the skills necessary to assemble, troubleshoot, and upgrade computer systems.\nCourse Highlights:\nIntroduction to Computer Hardware:\nCentral Processing Unit (CPU):\nMotherboards and Memory:\nStorage Devices:\nFiles System\nWhat is System32 and what is System64bits?\nMedia Types\nCloud computing and concepts\nWhat is virtualization how to create one?\nData center and Server room tools and cabling.\nUnderstanding Number Systems: Binary, Decimal, and Hexadecimal\nThis course is continually upgrading ...\nBy the end of \"The Complete Computer Hardware Class - Full Course,\" you will have gained a comprehensive understanding of computer hardware, enabling you to confidently navigate the world of technology, make informed purchasing decisions, and troubleshoot hardware-related issues. Whether you're pursuing a career in IT, curious about how computers work, or simply aiming to enhance your technical knowledge, this course is your gateway to mastering the intricate universe of computer hardware.",
      "target_audience": [
        "Aspiring IT Professionals: If you're looking to pursue a career in the field of Information Technology, this course will provide you with a strong foundation in computer hardware, a critical aspect of IT support and system administration roles.  Computer Enthusiasts: If you're passionate about technology and want to deepen your understanding of how computers work, this course will satisfy your curiosity and equip you with practical skills for tinkering and experimenting.  Students and Beginners: If you're new to the world of computers and want to understand the basics of hardware components, their functions, and how they work together, this course offers a gentle introduction.  DIY PC Builders: For those interested in building their own computers, this course will guide you through the process, from selecting components to assembling and troubleshooting.  Professionals Seeking Knowledge Expansion: Even if you have a background in IT or technology, this course can help you refresh and expand your knowledge of computer hardware, ensuring you're up-to-date with the latest trends and advancements.  Small Business Owners: If you run a small business and want to make informed decisions about computer purchases, upgrades, and maintenance, this course will empower you with the knowledge needed to optimize your systems.  Gamers and Content Creators: If you're into gaming or content creation, understanding computer hardware can greatly impact your experience and performance. This course will help you choose the right components to meet your specific needs.  Curious Learners: If you're simply curious about the inner workings of technology and want to demystify the world of computer hardware, this course provides an accessible and engaging learning experience.  No prior technical knowledge is required, making this course suitable for beginners. The content is structured to gradually introduce more advanced concepts, ensuring that learners of all backgrounds can follow along and build a strong foundation in computer hardware. Whether you're looking to enter the tech industry, enhance your skills, or gain insights into the technology you use daily, \"The Complete Computer Hardware Masterclass\" is designed to meet your learning objectives."
      ]
    },
    {
      "title": "Raspberry Pi based SCADA System",
      "url": "https://www.udemy.com/course/raspberry-pi-scada-system-interface-raspberrypi/",
      "bio": "Learn SCADA hands-on by developing your own interfaces for different systems and control Your Raspberry Pi Based Device.",
      "objectives": [
        "Build Raspberry Pi based SCADA system",
        "Use IoT Web Platforms and Implement Them in Your SCADA System",
        "Connect Arduino to Raspberry Pi as a middle man to interface different devices",
        "Create SCADA interfaces using various technologies allowing operators to interact with a live, running system.",
        "Use the provided Raspberry Pi program as the basis for your interfaces.",
        "Create a fully-functional graphical interfaces to monitor Raspberry Pi",
        "Create a fully-functional graphical interfaces to interact with Raspberry Pi",
        "Create a fully-functional graphical interfaces to log data from sensors using Raspberry Pi",
        "Build a fully functional Raspberry Pi Program",
        "Understand the Working principle of Relays and how they interact with Contacts",
        "Differentiate between Raspberry Pi and PLC",
        "Learn different methods for programming Raspberry Pi",
        "Read Sensors using Raspberry Pi and visualize the readings using SCADA Systems"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction"
        ],
        "Introduction to SCADA": [
          "Introduction to SCADA",
          "Introductory Interview: Building SCADA Systems with Raspberry Pi",
          "Functions and Alarms",
          "Introduction to SCADA Systems",
          "Exploring SCADA Systems"
        ],
        "Hardware and Software Requirements": [
          "Hardware and Software Requirements"
        ],
        "Download and Install Software": [
          "Download and Install Arduino IDE",
          "Download and Install Arduino IDE",
          "Arduino Board",
          "Setting Up Arduino IDE and Understanding the Arduino Board",
          "Setting Up Arduino IDE for SCADA"
        ],
        "Circuit Connection": [
          "Circuit Connection",
          "Designing and Building SCADA Circuits"
        ],
        "Coding": [
          "Coding First Board",
          "Testing First Board",
          "Coding and Testing Your First Arduino Board",
          "Writing and Testing SCADA Code"
        ],
        "Important Concepts": [
          "Important Concepts"
        ],
        "Python Script Coding for Raspberry Pi": [
          "Raspberry Pi Python Coding",
          "Python Script Coding for Raspberry Pi",
          "Python Programming for SCADA"
        ],
        "SCADA Web Interface": [
          "Create SCADA Web Interface",
          "SCADA Web Interface Creation"
        ],
        "Raspberry Pi Setup": [
          "Download and Install Raspian OS on Your Raspberry Pi Board 2021.tscproj",
          "Enable SSH and Update Raspian",
          "Quiz",
          "Designing a SCADA Web Interface"
        ]
      },
      "requirements": [
        "All software required for this course will be provided Free with Installation instruction in video lectures",
        "A Computer / Laptop"
      ],
      "description": "Welcome to this course.\nLearn SCADA hands-on by developing your own interfaces for different systems and control Your Raspberry Pi Based Device.\nIn this course, you are going to learn about SCADA by creating visual interfaces that you can utilize to watch the automated procedures, demonstrate operating parameters, and indeed acquire data from a system that's formerly operated and working.\nWe're simplifying one of the most habituated solutions in the world of visualization. As such, we'll be working considerably with that technology.\nWe will similarly be working hands-on with SCADA, and by the end of this course, you'll be qualified to make a completely functional monitor, control, and data accession system employing Raspberry Pi.\nSo get prepared to start designing and creating your very first SCADA interface effortlessly and effectively, with 24/7 support. I am sure that you'll enjoy this course content. See you inside.\nWhat you will learn\nWrite Raspberry Pi code as the ground for your interfaces.\nProduce a completely functional graphical interface to watch Raspberry Pi.\nMake a completely functional Raspberry Pi Code to read detectors and control outputs based on SCADA Interface.\nUse different kinds of Graphical Elements for controlling different kinds of devices.\nUnderstand the working principle of communication between SCADA networks and Raspberry Pi.\nProduce SCADA interfaces using varied technologies allowing operators to interact with a living, running system.\nLearn different approaches for programming Raspberry Pi.\nWho is this course for\nBeginners interested in learning SCADA systems.\nHobbyists and electronics enthusiasts.\nEngineering students and professionals looking to expand their skill set.\nAnyone interested in Raspberry Pi and SCADA integration.\nRequirements\nBasic understanding of Raspberry Pi and electronics.\nA Raspberry Pi board with necessary peripherals.\nBasic programming knowledge is helpful but not required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone who want's to learn how to Control Raspberry Pi using a visualized Interface",
        "Anyone who want's to control a device remotely or using a visual interface",
        "Any Tech Geek who want's to know Raspberry Pi, SCADA and How to take full advantage of SCADA System design.",
        "For those lacking the requisite knowledge to make the most of this course, my first course \"Raspberry Pi Programming covers things you'll need.",
        "This course requires students to already know the basics of Raspberry Pi programming"
      ]
    },
    {
      "title": "Arduino Car Projects",
      "url": "https://www.udemy.com/course/arduino-car-projects/",
      "bio": "Use your Arduino Uno and programs to control a car fitted with motors and sensors.",
      "objectives": [
        "How to use an Arduino Uno to controll two DC motors.",
        "How to control an Arduino car with a wired joystick.",
        "How to control an Arduino car without wires: use your smartphone with Wifi.",
        "How to control an Arduino car without wires: use your smartphone with Bluetooth BLE..",
        "How to control an Arduino car without wires: use an infrared receiver and remote.",
        "How to use a distance sensor to prevent accidents.",
        "How to use a line sensor to implement autonomous steering.",
        "How to use a buzzer to create aubible signals.",
        "How to use separate power supplies for the Arduino and the motors.",
        "Two ways to control the speed of a DC motors."
      ],
      "course_content": {
        "Introduction": [
          "01-10 What is this course about?",
          "01-20 Hardware and kit overview",
          "01-40 How to make the most out of this course"
        ],
        "Getting to know the hardware": [
          "02-10 Car chassis",
          "02-20 Microcontroller",
          "02-30 The joystick",
          "02-40 Motors and motor drivers",
          "02-50 The infrared sensor",
          "02-60 The HC-SR04 ultrasonic sensor",
          "02-70 The Bluetooth BLE AC-BT-V4 module",
          "02-80 ESP-01S WiFi module – Configuration wiring",
          "02-81 ESP-01S WiFi module – Configuration AT commands",
          "02-82 ESP-01S WiFi module – Create Blynk account and project",
          "02-83 ESP-01S WiFi module – Simple LED control with Blynk"
        ],
        "Assembly – Core Hardware": [
          "03-10 Assemble the car kit – preparation",
          "03-11 Assemble the car kit",
          "03-20 Wire the motors",
          "03-30 Battery and power"
        ],
        "Project 1: Simple wired control": [
          "04-10 Project introduction – objectives",
          "04-20 Quick joystick demonstration",
          "04-30 Wiring and cabling",
          "04-40 Arduino motor control sketch",
          "04-50 Testing"
        ],
        "Project 2: Remote control with infrared": [
          "05-10 Project introduction – objectives",
          "05-20 Wiring",
          "05-30 IR remote control and sensor testing",
          "05-40 Arduino motor IR control sketch",
          "05-50 Testing"
        ],
        "Project 3: Remote control with Bluetooth BLE mobile app": [
          "06-10 Project introduction and objectives",
          "06-20 Bluetooth BLE wiring",
          "06-30 ArduinoBlue app control UI",
          "06-40 Arduino motor control sketch",
          "06-50 Testing"
        ],
        "Project 4: Remote control with WiFi and mobile phone via Blynk": [
          "07-10 Project introduction and objectives",
          "07-20 ESP01S module wiring",
          "07-30 Verify WiFi connectivity to Blynk",
          "07-40 Setup RC Car Blynk project",
          "07-50 Setup Blynk mobile dashboard",
          "07-60 Arduino motor control sketch",
          "07-70 Testing"
        ],
        "Improvements": [
          "8-10 Speed control with the joystick",
          "8-20 Ultrasonic anti-crash system",
          "8-30 Make the car beep with the buzzer",
          "8-40 Fix not-straight drive",
          "8-50 Motor start-stop button",
          "8-60 Independent power source for the motors",
          "8-70 Use the EN pins for speed control"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Basic Arduino programming and wiring."
      ],
      "description": "Arduino Car Projects is ideal for new Arduino Makers and graduates of Arduino Step by Step Getting Started.\nUse your Arduino Uno and programs to control a car with motors and sensors.\nUse a joystick, an infrared controller, and a smartphone to drive your Arduino car.\nThis course is an opportunity to apply your new Arduino knowledge in a series of small projects with a common theme: the Arduino Car.\nLearn how to combine various hardware components to create an Arduino car with many fun features. Control your car with a joystick or with your phone. Learn how to wire motors and decode signals from an infrared controller (and much more).\nThis course teaches essential Arduino and programming skills through a series of fun mini-projects of increasing complexity.\nEach mini-project allows you to explore interesting hardware and programming topics.\nFor example, you will explore vehicle safety using an ultrasonic distance sensor in one project.\nIn another project, you will learn how to control the Arduino car with your smartphone.\nYou will learn how to program motors, take input from sensors to implement automation features, and explore various options to control your car.\nIn this course, you will learn software skills, such as:\nHow to program car functions with the infrared remote control.\nHow to use Bluetooth Low Energy, your smartphone, and the ArduinoBlue library to control the Arduino car.\nHow to use the ESP01S wifi module, the Blink cloud platform, and your smartphone to control the Arduino car and its peripherals.\nHow to compensate for tiny differences between the motors that affect the driving qualities of the car.\nHow to use the distance sensor to prevent a crash.\nTwo different ways to control the speed of the DC motors.\nIn this course, you will learn to use an Arduino Uno along with various peripherals, such as:\nOne or two DC motors with the help of a motor controller module.\nAn analog joystick.\nAn infrared sensor that can receive encoded commands from an infrared remote control.\nAn ultrasonic distance sensor.\nA buzzer.\nAnd two radio frequency communications modules:\nA Bluetooth BLE module for near-field connectivity.\nAn ESP01S Wifi module for Internet connectivity.\n\nYou will also learn how to power your Arduino motor project with one or two batteries to separate the Arduino and motor sub-circuits.\n\n\nWhat hardware will you need?\nThis course requires an Arduino Uno or compatible board, a car chassis, motors, sensors, wires and other components.\nThis hardware is not included in this course; you must source it separately.\nYou can purchase these items as part of a kit sold by Sunfounder or individually from your preferred retailer.\nYou can find a complete listing of the hardware you will need for this course in the course hardware lecture (free to watch before you purchase this course).",
      "target_audience": [
        "Learners who have just completed Arduino Step by Step Getting Started or equivelant course, or have beginner-level Arduino skills."
      ]
    },
    {
      "title": "LabVIEW meets ESP8266 ESP01 Unlock the Future of IoT Connect",
      "url": "https://www.udemy.com/course/labview-tcp-ip-communication-with-esp8266-esp-01-tcp-ip/",
      "bio": "Mastering Communication with ESP8266 ESP-01 through LabVIEW's TCP/IP Interface – Your Competitive Edge in the IoT Revolu",
      "objectives": [
        "ESP8266 ESP-01 Overview",
        "ESP8266 ESP-01 Pinout",
        "ESP8266 ESP-01 Schematic",
        "ESP8266 ESP-01 Programming via Arduino",
        "ESP8266 ESP-01 Programming via USB Arduino Code",
        "Coding ESP8266 ESP-01",
        "LabVIEW Front Panel",
        "LabVIEW Block Diagram",
        "Creating the LabVIEW VI",
        "Practical Testing between LabVIEW and ESP via TCP/IP"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Introductory Interview: Bridging LabVIEW with IoT Devices",
          "Summary",
          "Reading Material"
        ],
        "Download and Install Software Requirements": [
          "Section Intro",
          "Download and Install Arduino IDE",
          "Download and Install Fritzing Software",
          "Download and Install LabVIEW",
          "Downloading and Installing Software Requirements",
          "Setting Up Your Development Environment",
          "Summary",
          "Reading Material"
        ],
        "ESP8266 ESP-01": [
          "Section Intro",
          "ESP01 Overview",
          "Different ESP Versions",
          "Understanding ESP-01 Capabilities",
          "Summary",
          "Reading Material"
        ],
        "ESP8266 - ESP01": [
          "Section Intro",
          "ESP01 Schematic",
          "ESP8266 - ESP01 Connection Explained",
          "Understanding ESP01 and ESP8266",
          "Building an ESP-01 Circuit",
          "Summary",
          "Reading Material"
        ],
        "Programming ESP-01 with Arduino UNO": [
          "Section Intro",
          "Programming ESP-01 with Arduino UNO",
          "Practical: Programming ESP-01 with Arduino UNO",
          "Programming ESP-01 with Arduino UNO",
          "Uploading Code to ESP-01 Using Arduino UNO",
          "Summary",
          "Reading Material"
        ],
        "Programming ESP-01 with USB to TTL Programmer": [
          "Section Intro",
          "Programming ESP-01 with USB to TTL Programmer",
          "Practical: Programming ESP-01 with USB to TTL Programmer",
          "Using USB to TTL Programmer for ESP-01",
          "Summary",
          "Reading Material"
        ],
        "Coding ESP-01": [
          "Section Intro",
          "Coding ESP-01",
          "The Code",
          "Programming and Coding ESP-01",
          "Summary",
          "Reading Material"
        ],
        "Upload Code to ESP8266 ESP-01 Board": [
          "Section Intro",
          "Upload code to ESP-01 via Arduino UNO",
          "Upload code to ESP-01 via FTDI",
          "Summary",
          "Reading Material"
        ],
        "LabVIEW": [
          "Section Intro",
          "LabVIEW TCP/IP Communication Interface",
          "Uploading Code to ESP-01 and LabVIEW Communication",
          "Setting Up LabVIEW TCP/IP Communication",
          "Summary",
          "Reading Material"
        ],
        "Final Practical Result": [
          "Final Practical Result"
        ]
      },
      "requirements": [
        "A laptop or Computer",
        "Internet Connection",
        "Hardware Requirements if you want to implement this in real life"
      ],
      "description": "LIMITED TIME OFFER: Enroll now and receive exclusive access to our live Q&A sessions with the Educational Engineering Team, and a downloadable IoT Starter Kit guide!\nWelcome to a transformative journey, where the power of LabVIEW synergizes with the capabilities of ESP8266 ESP-01. In an era where every device communicates, this course ensures you're at the forefront, armed with unparalleled knowledge and skills.\nWhy This Course?\nFuture of IoT: With billions of devices coming online, the IoT revolution is here. Be part of it.\nIntegrated Approach: Understand the marriage between ESP8266, the game-changer WiFi module, and LabVIEW, the visual programming dynamo.\nTurn Knowledge into Career: The demand for IoT specialists is skyrocketing. Stand out with hands-on expertise.\nCourse Highlights:\nESP8266 ESP-01 Deep Dive: Beyond the basics – understand the core of this board's potential.\nSeamless Connections: Decode ESP8266 ESP-01 connections, and become the go-to expert.\nCoding Evolved: No more fear of codes – make ESP-01 dance to your tunes.\nLabVIEW Unleashed: From novice to ninja, transform your LabVIEW skills.\nReal-world Applications: Dive into practical scenarios that mirror today's industry needs.\nWho Should Enroll? If you envision a future where every device, big or small, communicates seamlessly, and you're at the helm controlling it – this course is your golden ticket.\nEducational Engineering Team\nPioneers in demystifying complex electronics and programming, now bringing you an unmatched learning experience in IoT.\nJoin now and start your journey towards mastering IoT with LabVIEW and ESP8266 ESP-01.\nWhat you will learn\nDeep understanding of ESP8266 ESP-01 capabilities.\nMastering communication protocols using LabVIEW's TCP/IP interface.\nCreating seamless connections with ESP8266 ESP-01.\nDeveloping practical IoT applications.\nEnhancing LabVIEW skills from beginner to advanced levels.\nReal-world applications of IoT technology.\nWho is this course for\nIoT enthusiasts looking to advance their skills.\nHobbyists and electronics enthusiasts.\nEngineering students and professionals aiming to excel in IoT.\nAnyone interested in integrating LabVIEW with ESP8266 ESP-01.\nRequirements\nBasic understanding of electronics and microcontrollers.\nA LabVIEW installation and ESP8266 ESP-01 module.\nBasic programming knowledge is helpful but not required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Learning LabVIEW TCP/IP Communication with ESP8266 ESP-01 TCP/IP"
      ]
    },
    {
      "title": "Master Cutting-Edge Innovations in Sustainable Energy",
      "url": "https://www.udemy.com/course/master-cutting-edge-innovations-in-sustainable-energy/",
      "bio": "Stay ahead in the energy revolution with advanced solar, wind, hydro, and AI-driven energy solutions!",
      "objectives": [
        "Understand Renewable Energy Technologies – Explore advancements in solar, wind, hydro, and geothermal energy and their role in sustainability.",
        "Analyze AI and Smart Grids – Learn how artificial intelligence and smart grid technology optimize energy efficiency and distribution.",
        "Evaluate Energy Storage Solutions – Understand battery technologies, hydrogen storage, and their importance in stabilizing renewable energy.",
        "Assess Policy and Market Trends – Examine government incentives, global policies, and emerging trends in renewable energy adoption.",
        "Compare Renewable and Non-Renewable Sources – Identify the benefits, limitations, and economic impacts of different energy sources.",
        "Examine Future Energy Innovations – Explore cutting-edge developments such as space-based solar power, artificial photosynthesis, and decentralized energy sys",
        "Apply Renewable Energy Concepts – Develop insights into practical applications, including grid integration and decentralized power solutions."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction to Renewable Energy": [
          "Section Intro",
          "Introduction to Renewable Energy",
          "Section Summary",
          "Reading Material"
        ],
        "Advancements in Solar Energy": [
          "Section Intro",
          "Advancements in Solar Energy",
          "Section Summary",
          "Reading Material"
        ],
        "Wind Energy: Harnessing the Power of Nature": [
          "Section Intro",
          "Wind Energy: Harnessing the Power of Nature",
          "Section Summary",
          "Reading Material"
        ],
        "Hydro Energy: The Power of Water": [
          "Section Intro",
          "Hydro Energy: The Power of Water",
          "Section Summary",
          "Reading Material"
        ],
        "Geothermal Energy: Unlocking the Earth's Heat": [
          "Section Intro",
          "Geothermal Energy: Unlocking the Earth's Heat",
          "Section Summary",
          "Reading Material"
        ],
        "Smart Grids and Al in Energy Management": [
          "Section Intro",
          "Smart Grids and Al in Energy Management",
          "Section Summary",
          "Reading Material"
        ],
        "Energy Storage Technologies and Future Trends": [
          "Section Intro",
          "Energy Storage Technologies and Future Trends",
          "Section Summary",
          "Reading Material"
        ],
        "Policy, Economics, and Global Trends in Renewable Energy": [
          "Section Intro",
          "Policy, Economics, and Global Trends in Renewable Energy",
          "Section Summary",
          "Reading Material"
        ],
        "Future Innovations and Disruptive Technologies": [
          "Section Intro",
          "Future Innovations and Disruptive Technologies",
          "Section Summary",
          "Reading Material"
        ]
      },
      "requirements": [
        "This course is designed for learners of all levels, and no prior experience in renewable energy or engineering is required. However, having a basic understanding of science and technology can be helpful.",
        "Recommended (But Not Required): Interest in sustainability, energy systems, or environmental science Basic knowledge of physics and electricity concepts (helpful but not necessary) Familiarity with technological innovations (AI, smart grids, etc.) is a plus",
        "This course is structured to be beginner-friendly while also providing in-depth insights for those looking to advance their knowledge in renewable energy. All concepts will be explained in a clear and accessible way!"
      ],
      "description": "The future of energy is renewable, efficient, and intelligent. This course dives deep into state-of-the-art renewable energy technologies that are reshaping the global landscape. From next-generation solar panels and offshore wind farms to AI-powered smart grids and futuristic energy storage solutions, you'll explore groundbreaking advancements that will define the next decade of energy innovation.\n\n\nWhat Makes This Course Unique?\nCutting-edge insights into solar, wind, hydro, geothermal, and energy storage breakthroughs.\nAI-driven smart grids and automation in energy management explained.\nReal-world applications with case studies from leading companies and innovators.\nGlobal policy trends and economic impacts of renewable energy.\nFuture innovations and disruptive technologies transforming the industry.\n\n\nJoin a global movement toward a sustainable future! Whether you're an engineer, researcher, policymaker, or sustainability enthusiast, this course provides you with the knowledge and skills to make an impact.\n\n\nEnroll now and become a leader in the renewable energy revolution!\n\n\nWhat You Will Learn\nThe latest advancements in solar, wind, hydro, and geothermal energy\nHow AI and smart grids are optimizing energy management\nCutting-edge energy storage solutions and battery technologies\nThe economics, policies, and global trends shaping the renewable energy market\nFuture disruptive technologies and innovations in sustainable energy\n\n\nWho Is This Course For?\nEngineers & Technologists – Stay ahead in the energy sector.\nSustainability Professionals – Understand the future of clean energy.\nStudents & Researchers – Explore advanced energy innovations.\nBusiness & Policy Leaders – Make informed decisions in the renewable market.\nEntrepreneurs & Investors – Discover opportunities in sustainable energy.\nRequirements\nBasic understanding of renewable energy concepts (helpful but not required)\nInterest in technology, sustainability, and future innovations\nNo prior experience in engineering or AI is necessary\n\n\nJoin thousands of learners worldwide—enroll today and power the future of energy!",
      "target_audience": [
        "This course is designed for anyone interested in renewable energy technologies and sustainability, whether you are a beginner or an industry professional looking to expand your knowledge.  Ideal Learners: Students & Enthusiasts – Anyone eager to learn about clean energy and future innovations. Engineers & Technicians – Professionals in electrical, mechanical, or environmental engineering seeking expertise in renewable energy. Business & Policy Makers – Individuals involved in energy policy, sustainability strategies, or business investments in clean technology. Educators & Researchers – Teachers, trainers, and researchers exploring advancements in energy science. Entrepreneurs & Innovators – Those interested in launching green energy startups or working on sustainable solutions. This course provides a comprehensive yet accessible approach to understanding modern energy solutions, making it perfect for learners at all levels!"
      ]
    },
    {
      "title": "Self Driving Car with Jetson Nano : Lane Tracking , OpenCV",
      "url": "https://www.udemy.com/course/self-driving-car-with-jetson-nano-lane-tracking-opencv/",
      "bio": "Build Your Own Self Driving Car with NVIDIA Jetson Nano Board Step by Step | Python | Lane Tracking | Autonomous Car",
      "objectives": [
        "Self Driving,",
        "Lane Tracking,",
        "I2C Communication,",
        "Contours,",
        "Edge Detection,",
        "GPIO,",
        "L298n and PCA9685"
      ],
      "course_content": {
        "Introduction": [
          "Self Driving Car with Jetson Nano : Lane Tracking , OpenCV",
          "Course Materials for Lane",
          "Course Materials for Car"
        ],
        "Installation": [
          "Introduction",
          "Formatting SD Card",
          "Image File",
          "Adding Wi-Fi and SD Card",
          "Adding Cooler Fan",
          "First Boot",
          "Remote Control -1",
          "Remote Control -2",
          "VSCode IDE on NVIDIA Jetson Nano",
          "Virtual Display",
          "Installation of Python",
          "Adding OpenCV Library"
        ],
        "Python 3": [
          "Introduction",
          "Variables",
          "Article (Variables)",
          "Exercise -1 (Variables)",
          "Variables",
          "Operators -1",
          "Exercise -2",
          "Operators",
          "Operators -2",
          "Exercise -3",
          "Standart INPUT and OUTPUT Functions",
          "Exercise -4",
          "Exercise -5",
          "Type Conversions (Article)",
          "Conditional Statements",
          "Exercise -6",
          "Conditional Statements and Type Conversion",
          "Tuple and List",
          "Loops",
          "Exercise -7",
          "break and continue",
          "Functions",
          "Exercise -8",
          "Loops and Functions",
          "Modules -1",
          "Modules -2",
          "Exercise -9",
          "Exercise -10"
        ],
        "OpenCV": [
          "Reading and Showing an Image",
          "Resizing",
          "Changing Color Format",
          "Color Formats",
          "Basic Drawing Operations -1",
          "Basic Drawing Operations -2",
          "Basic Drawing Operations -3",
          "Texting",
          "Special Font Types",
          "Usage of CSI Camera"
        ],
        "DC Motor Driver": [
          "Introduction",
          "l298n Board",
          "PCA9685 Board",
          "Circuit Scheme -1",
          "Circuit Scheme -2",
          "PWM",
          "Extra",
          "Speed Control -1",
          "Speed Control -2",
          "Speed Control -3",
          "Speed Control -4 (Final)"
        ],
        "Assembly": [
          "Circuit Scheme",
          "Assembling -1",
          "Assembling -2",
          "Pay Attention!"
        ],
        "Project Topics (Intermediate)": [
          "Edge Detection Algorithm (Slide)",
          "Edge Detection Algorithm (Coding)",
          "Article: Contours",
          "Finding Contours (Slide) -1",
          "Drawing Contours (Slide) -2",
          "Contours (Coding)",
          "Article: Thresholding",
          "Thresholding (Slide)",
          "Thresholding (Coding)",
          "Adding",
          "What is ROI?",
          "About ROI",
          "Polygons -1",
          "Polygons -2"
        ],
        "Project: Self Driving Car": [
          "Building a Lane",
          "Definition of Modules",
          "Definition of I2C and Motors",
          "Definition of Webcam Prop and Roi",
          "Definition of Main Loop -1",
          "Definition of Main Loop -2",
          "Final"
        ]
      },
      "requirements": [
        "Work hard,",
        "Tenacity and",
        "Interest."
      ],
      "description": "Welcome to the course on developing an autonomous vehicle using Jetson Nano! This course will guide you step-by-step on how to build your own self-driving car using Jetson Nano. Starting from the basics, you will acquire the necessary hardware and software knowledge, and then reinforce these skills through practical projects.\nCourse Content:\nIntroduction to Jetson Nano setup and key features\nOverview and installation of essential hardware components (Webcam, L298n motor driver, PCA9685 PWM driver)\nImage processing techniques with Python and OpenCV\nDeveloping contour-based lane detection algorithms\nLane tracking and vehicle control\nMaterials Used:\nWebcam: For capturing image data\nL298n: For driving motors\nPCA9685: For generating PWM signals\nJetson Nano: For performing AI and image processing tasks\nCourse Objectives:\nLearn how to effectively use the Jetson Nano platform\nDevelop lane detection algorithms using image processing techniques\nCorrectly connect and program hardware components\nAchieve autonomous vehicle control through lane tracking\nBy the end of this course, you will have the skills to develop your own autonomous vehicle and advance your knowledge in this exciting field. Whether you are pursuing it as a hobby or aiming for a professional career, this course will provide you with a solid foundation.\nJoin us and take a step into the future of technology!\n\n\nNo previous programming or electronics knowledge is required.\n\"You are never too old to set another goal or to dream a new dream.\" - C.S.Lewis\n\"Do the difficult things while they are easy and do the great things while they are small. A journey of a thousand miles begins with a single step\" - Lao Tzu\nYou get the best information that I have compiled over years of trial and error and experience!\nBest wishes,\nYılmaz ALACA",
      "target_audience": [
        "For engineering students (EEE, CE etc.),",
        "Interested in Machine Learning(ML),",
        "Interested in Computer Vision (OpenCV Module) and",
        "Interested in AI PC (Jetson Nano).",
        "Interested in Self Driving."
      ]
    },
    {
      "title": "FPGA (Field-Programmable Gate Array) Design & Implementation",
      "url": "https://www.udemy.com/course/fpga-design-and-implementation/",
      "bio": "Become FPGA Design Engineer. Learn FPGA Design Engineering, Design Flows & Tools, FPGA DSP Circuits, Protoflex, PLI etc.",
      "objectives": [
        "Gain end-to-end knowledge of FPGA design engineering & implementation",
        "Acquire skills to become FPGA Design & Implementation Engineer",
        "Learn FPGA Design flows & design tools",
        "Understand and implement FPGA Design using Verilog",
        "Learn FPGA Testing",
        "Simulate and implement SOPC Design",
        "Learn how to read data from Peripherals",
        "Learn FPGA implementation of DSP Circuits",
        "Define Wordcount using MapReduce for FPGA",
        "Describe Protoflex and Reconfigurable Hardware",
        "Understand challenges in using FPAA FPGA in Mixed Signal Technology",
        "Get knowledge of Mentor Graphics Tools & Guidelines",
        "Define & execute Spartan FPGA and Memristive FPGA",
        "Perform Image processing using FPGA"
      ],
      "course_content": {
        "Introduction to FPGA (Field Programmable Gate Arrays)": [
          "Introduction to FPGA (Field Programmable Gate Arrays)"
        ],
        "FPGA Testing": [
          "FPGA Testing"
        ],
        "FPGA Design Flows & Design Tools": [
          "FPGA Design Flows & Design Tools"
        ],
        "FPGA Design using Verilog": [
          "Introduction to FPGA Design using Verilog",
          "Verilog overview",
          "Data Types",
          "Procedural Assignments",
          "VHDL Design using Verilog",
          "Visual Verification of Designs",
          "Finite State Machines - part 1",
          "Finite State Machines - part 2",
          "Design Examples",
          "Test Benches",
          "SystemVerilog for Synthesis",
          "Packages & Interfaces"
        ],
        "Simulate and Implement SOPC Design": [
          "Simulate and Implement SOPC Design"
        ],
        "Reading Data from Peripherals": [
          "Reading Data from Peripherals"
        ],
        "UART SDRAM Python": [
          "UART SDRAM Python"
        ],
        "Script execution in Quartus and ModelSim NIOS": [
          "Script execution in Quartus and ModelSim NIOS"
        ],
        "Image Processing using FPGA": [
          "Image Processing using FPGA"
        ],
        "Challenges in using FPAA FPGA in Mixed Signal Technology": [
          "Challenges in using FPAA FPGA in Mixed Signal Technology"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the FPGA Design & Implementation course by Uplatz.\n\n\nFPGA stands for Field Programmable Gate Array. FPGA is essentially an integrated circuit that can be programmed by a user for a specific use after it has been manufactured. The modern day FPGAs contain adaptive logic modules (ALMs) and logic elements (LEs) connected via programmable interconnects. These blocks create a physical array of logic gates that can be customized to perform specific computing tasks. This makes them very different from other types of microcontrollers or Central Processing Units (CPUs), whose configuration is set and sealed by a manufacturer and cannot be modified.\nFPGA programming has become a buzzword these days due to it offering considerable benefits over the traditional ICs. FPGA allows you to offload resource hungry-tasks to hardware and thus cause a significant increase in performance. FPGAs can be programmed and reprogrammed according to the dynamic needs.\n\n\nFPGAs (Field Programmable Gate Arrays) are integrated circuits that are commonly available off-the-shelf. They're called 'field programmable' because they allow customers to alter the hardware after it's been manufactured to satisfy particular use case needs. This enables for in-place feature updates and bug fixes, which is particularly important for remote deployments. FPGAs include customizable logic blocks (CLBs) and programmable interconnects that enable the designer to link and configure the blocks to accomplish a wide range of tasks, from basic logic gates to complicated functions. On a single FPGA chip, whole SoC architectures with various processes may be implemented.\nFPGAs are very adaptable. After the board has been developed, they enable engineers to test any number of variables. New configuration files are transferred onto the device when modifications are necessary, allowing new capability to be accessed. OEMs may supply systems earlier in the design phase because of this flexibility. Developers create prototypes on FPGA to gradually improve the design before it is taped out. FPGAs are often employed in commercial applications where parallel processing is required and the requirements are dynamic, such as telecommunications and aircraft.\n\n\nThe FPGA evolved from older devices such as programmable read-only memory (PROMs) and programmable logic devices (PLDs) (PLDs). These devices could be programmed in the factory or in the field, but they utilised fuse technology (thus the term \"burning a PROM\") and couldn't be modified after they were programmed. FPGAs, on the other hand, store their configuration data in a reprogrammable media like static RAM (SRAM) or flash memory. Intel, Xilinx, Lattice Semiconductor, Microchip Technology, and Microsemi are among the FPGA manufacturers.\n\n\nThe goal of this FPGA Design & Implementation course is to gain knowledge about Field Programmable Gate Arrays (FPGAs) in order to create prototypes or products for a number of applications. Although FPGA design is a complicated subject, we will explain it in such a way that the fundamental ideas may be readily mastered with a little effort, while simultaneously offering a challenge for the more experienced designer. Field Programmable Gate Arrays (FPGA) and Complex Programmable Logic Devices (CPLD) will be examined for their complexity, capabilities, and trends (CPLD). The abilities of conception, design, implementation, and debugging will be honed. You'll learn about embedded IP and processor cores, as well as the advantages and disadvantages of implementing vs purchasing IP. The newest software and FPGA development tools, as well as hardware platforms are demonstrated in this FPGA course to assist establish a wide understanding of the capabilities of different Programmable SoC solutions. The delegates will learn the fundamentals of digital systems design utilizing FPGAs in this course.\n\n\nFPGA Design & Implementation - Course Syllabus\n\n\nIntroduction to FPGA (Field Programmable Gate Arrays)\nFPGA Testing\nFPGA Design Flows & Design Tools\nFPGA Design using Verilog - Introduction\nFPGA Design using Verilog - Verilog overview\nFPGA Design using Verilog - Data Types\nFPGA Design using Verilog - Procedural Assignments\nFPGA Design using Verilog - VHDL Design using Verilog\nFPGA Design using Verilog - Visual Verification of Designs\nFPGA Design using Verilog - Finite State Machines - part 1\nFPGA Design using Verilog - Finite State Machines - part 2\nFPGA Design using Verilog - Design Examples\nFPGA Design using Verilog - Test Benches\nFPGA Design using Verilog - SystemVerilog for Synthesis\nFPGA Design using Verilog - Packages & Interfaces\nSimulate and implement SOPC Design\nReading Data from Peripherals\nUART SDRAM Python\nScript execution in Quartus and ModelSim NIOS\nImage Processing using FPGA\nChallenges in using FPAA FPGA in Mixed Signal Technology\nProtoflex\nReconfigurable Hardware\nWordcount using MapReduce for FPGA\nFPGA implementation of DSP Circuits\nReversible Logic Circuits\nFPGA implementation of Divider in Finite Field\nPrinciples of PLI\nSpartan FPGA implementation\nProgrammable Chips and Boards\nMemristive FPGA\nMentor Graphics Tools & Guidelines\n\n\nFPGA Functional Design\nThe process of turning an original system concept into an actual FPGA implementation that accomplishes the needed tasks is known as functional design. The basic concept for the design cycle must specify how the design will be partitioned among various FPGAs if necessary. The process of functional design starts with the formation of a description of a system’s sections (building blocks) in the most natural way feasible for the component in question. The simplest description methodology for fundamental structures built from primitive Actel, such as Multi-bit registers and multiplexors, is schematic capture using Design Architect (DA). For blocks containing random programming, such as decoders or ALUs, the easiest explanation is typically a hand-generated synthesizable VHDL model. Although automated HDL generators such as Renoir may be used to construct the natural graph description of a VHDL model, the simplest description is also a Synthesizable VHDL model for Finite State Machines (FSMs), such as controllers. After the building blocks have been first described, they should be separately simulated to check that they are properly functioning. This is done using the model-simulator, schematic Quicksim or VHDL model ModelSim.",
      "target_audience": [
        "FPGA Implementation Engineers",
        "FPGA Design Engineers",
        "FPGA Engineers",
        "FPGA Algorithm Engineers",
        "Newbies & Beginners aspiring for a career in FPGA Design Engineering",
        "FPGA Design Consultants",
        "Anyone interested in Embedded Engineering & FPGA Design",
        "FPGA Crypto Validation Engineers",
        "FPGA Design Application Engineers",
        "FPGA/ASIC Engineers",
        "Electronics & Instrumentation Engineers",
        "Electronics Design Engineers - Medical Devices FPGA",
        "Electronics Engineers VHDL FPGA",
        "Digital Design Engineers"
      ]
    },
    {
      "title": "VLSI/FPGA Design P1: CMOS Gates & Arithmetic Datapath",
      "url": "https://www.udemy.com/course/digital-icfpga-design-p1-cmos-gates-arithmetic-datapath/",
      "bio": "Design skyscrapers from bricks",
      "objectives": [
        "Basic theory of CMOS Gates",
        "Use CMOS transistor to build any Logic Gates",
        "Factors affect cell delay(PVT)",
        "Behavior of Latch and DFF",
        "Deep understanding for Setup/Hold time",
        "Architecture of adder(ripple, carry-select, carry look ahead, tree adders)",
        "Using architecture ideal of adders to optimize your design",
        "Arithmetic operation on real number and any mathematic function",
        "Technic support through Q&A system of Udemy"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of digital fundamental",
        "Basic C or C++ programing language"
      ],
      "description": "Please contact SKY (DM or E-mail to siliconthink@126.com) for special offer of $12.99 USD.\nThis chapter is foundation of design SOC and FPGA, that's bricks of skyscrapers. Contents in chapter 1:\n1: Behavior and characteristics of CMOS gate: switch model, transition time, delay time, PVT corner.\n2: Using CMOS gate to build basic logic function gates: NAND, NOR, XOR, mUX.\n3: Build arithmetic datapth using basic logic gates: adder, subtractor, multiplier and divider. Learning the HW architecture ideas behind them, and use them to optimize your design.\n\n\nOnce enrolled, you can get technic support through the Q&A system of Udemy.\nLet’s cooperate and success.\n\n\nNote:\nThis is chapter 1 of the whole Digital IC and FPGA design course.\nIn the whole course, I will introduce fundamentals of digital IC and FPGA design, with 12+ coding exercises and 3 course projects.\nTheory part: MOS transistor -> logic cells -> arithmetic data path -> Verilog language -> common used HW function blocks and architecture -> STA -> on-chip-bus(APB/AHB-Lite/AXI4) -> low power design -> DFT -> SOC(MCU level).\nFunction blocks and architecture: FSM, pipeline, arbiter, CDC, sync_fifo, async_fifo, ping-pong, pipeline with control, slide window, pipeline hazard and forward path, systolic.\nProject: SHA-256 algorithm with simple interface, SHA-256 with APB/AXI interface, 2D DMA controller with APB/AXI interface.\nAfter explaining of each HW architecture, I will give you a coding exercise, with reference code. Coding difficulty will begin from several lines to fifty lines, more than 100 lines, then around 200 lines. While the final big project will be 1000+ lines.\nI suppose these should be essential knowledge and skills you need master to enter this area.\nI will try my best to explain what-> how-> why and encourage you to do it better in this course.\nPlease browse to my homepage on Udemy to obtain information about each chapter of this course.",
      "target_audience": [
        "Senior undergraduate students of EE or higher",
        "IC design/verification engineers with 0~2 years’ experience"
      ]
    },
    {
      "title": "Choose the Right Arduino Board",
      "url": "https://www.udemy.com/course/choose-right-arduino-board/",
      "bio": "This course is designed to help you choose the right Arduino Board for your needs",
      "objectives": [
        "Learn how to choose the best Arduino board for your project",
        "The Arduino Board course helps you choose the right Arduino board for your project",
        "The course is designed for beginners who want to learn about Arduino boards",
        "Get a comprehensive understanding of Arduino boards",
        "Know how to use different Arduino boards",
        "Have a clear understanding of Arduino specifications"
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Selecting the Right Arduino for Different Use Cases",
          "Summary",
          "Reading Material"
        ],
        "What is Arduino?": [
          "Section Intro",
          "What is Arduino?",
          "Why you should Get yourself an Arduino Board",
          "Quiz",
          "Arduino Components",
          "Arduino Selection",
          "Understanding and Implementing Arduino-Based Weight Measurement Systems",
          "Summary",
          "Reading Material"
        ],
        "who we are": [
          "Section Intro",
          "who we are?",
          "Summary",
          "Reading Material"
        ],
        "Arduino Vs Raspberry Pi Vs Other boards": [
          "Section Intro",
          "What is Arduino Raspberry Pi and PIC Microcontroller",
          "Quiz",
          "Quick summary of the main differences",
          "Hardware Power and Connectivity",
          "Hardware IO Pins Storage and USB",
          "Software comparison",
          "Expanding Onward Capabilities",
          "How to decide",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Choose the Right Arduino Board Test",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Summary",
          "Reading Material",
          "System Planning Session: Board Selection Justification for 3 Projects"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Arduino Boards",
        "Arduino IDE software",
        "computer/ laptop"
      ],
      "description": "Introduction:\nArduino is a versatile open-source microcontroller that you can use to create interactive projects. There are many Arduino boards available, but which one should you choose for your project? This decision can be difficult because there are a lot of different features and options available.\nThis course will help you choose the right Arduino board for your project. We will cover the different types of Arduino boards, the features they have, and what to consider when choosing one.\nArduino boards are a great way to prototype electronic projects. But, so many Arduino boards are available which makes it hard for most people to choose the right one for their project.\nWhat is Arduino?\nArduino is an open-source computer hardware and software prototyping platform based on flexible, easy-to-use hardware and software. Arduino boards are available in various types, including microcontroller boards, processors, development boards, shields, and more. The best Arduino board for your project depends on the specific needs of your project.\nCourse Benefits:\nLearn to choose the best Arduino board for your project.\nFind out about the different Arduino boards and their features.\nUnderstand the differences between the Arduino boards.\nThe course covers the basics of each Arduino Board so you can make an informed decision.\nYou will also have a better understanding of what each Board can do.\nGet to know Arduino features and components and why it’s so popular.\nExpert review and comparison of various Arduino boards.\nComparing manufacturer brands and reviewing off-brand Arduino boards.\nComparing Arduino with ESP boards.\nDiscussing Arduino's advantages & disadvantages.\nWhat You Will Learn:\nWhat is Arduino?\nWhy You Should Buy Arduino?\nArduino Components\nArduino Selection Tips\nWhich Arduino to Choose\nOff-Brand Arduino\nArduino and IoT Boards\nIf you are new to Arduino, this course will guide and help you choose the right board for your project.\nArduino is a popular platform for makers of all ages and skill levels.\nGet started with Arduino today! ENROLL NOW!\nWhat You Will Learn:\nUnderstanding what Arduino is and its origin.\nLearning about various Arduino features and components.\nExpert reviews and comparisons of different Arduino boards.\nTips on choosing the right Arduino board for your project.\nWho This Course is For:\nBeginners to Arduino looking to choose the right board.\nHobbyists and makers of all skill levels.\nStudents and professionals wanting to learn about different Arduino boards.\nAnyone interested in starting with Arduino for their projects.\nRequirements:\nNo prior experience with Arduino is necessary.\nBasic understanding of electronics is helpful but not required.\n\n\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is a leading team in the Microcontroller Industry, with over 13 years of experience in teaching and practical projects. We strive to share our hands-on experience in these courses, providing step-by-step blueprints on taming both simple and complex topics in easy-to-digest bite-sized videos.\nAshraf:\nEducator, Mechatronics engineer, electronics and programming hobbyist, and Maker.\nCreator of online video courses on the EduEng YouTube Channel with over 4 million views and 20k+ subscribers.\nAuthor of four Microcontroller books.\nFounder and Chief Educational Engineer at Educational Engineering Team.\nPassionate about exploring new trends and technology, and helping educate the world.\nOur online courses have helped over 250,000 people worldwide to improve their skills and careers in the industry.\nCall to Action: Join us and start your Arduino journey today! Enroll now and learn to choose the right Arduino board for your projects.\nFAQ:\nWhat is Arduino?\nArduino is an open-source electronics platform based on easy-to-use hardware and software.\nDo I need prior experience to take this course?\nNo prior experience is needed; this course is designed for beginners.\nWhat will I learn in this course?\nYou will learn about different Arduino boards, their features, and how to choose the right one for your project.",
      "target_audience": [
        "This is for all arduino beginners",
        "Anyone who is arduino hobbyist",
        "Anyone who love exploring different Arduino boards possibilities."
      ]
    },
    {
      "title": "Master Motion Detection with PIC Microcontroller: Secure It",
      "url": "https://www.udemy.com/course/pic-microcontroller-pir-motion-detector/",
      "bio": "Dive Deep into the World of Motion Detection: Interface, Code, and Guard Every Corner with PIC Microcontroller!",
      "objectives": [
        "know how Motion Detectors function and learn about it’s internal structure",
        "Write code for Motion Detector",
        "Embed code in the design",
        "Display A Message on LCD Display once a motion is detected",
        "Fire alarm and light bulb once a motion is detected",
        "Program PIC Microcontroller like a champ",
        "Understand the principles of programming motion detectors",
        "Connect your PIC Microcontroller to Motion Detector and control it.",
        "Understand basic principles in electronics design.",
        "Interface Motion Detector with PIC Microcontroller and have full control of how your system functions",
        "Get familiar with Motion Detectors.",
        "Get Familiar with Coding and Interfacing Motion Detectors.",
        "Get Familiar with New Programming Techniques that will help you get the most out of Your System",
        "Interface and Connect Motion Detector to PIC.",
        "Send Output Signal to alarm, buzzer, and LCD once the Motion is Detected.",
        "Write a C program to Interface Motion Detector with PIC Microcontroller.",
        "Understand the Working Principle behind the Method Used in this Course"
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Exploring Motion Detection Concepts with Microcontrollers",
          "Very Important Note: Review Process",
          "Hardware and Software Components",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Required Software": [
          "Section Intro",
          "Software Requirements",
          "Understanding Hardware and Software Components in Microcontroller Systems",
          "Section Summary",
          "Reading Material"
        ],
        "How It Works & Common Applications": [
          "Section Intro",
          "How It Works & Common Applications",
          "Section Summary",
          "Reading Material"
        ],
        "Circuit Design": [
          "Section Intro",
          "Circuit Design",
          "Section Summary",
          "Reading Material"
        ],
        "Coding": [
          "Section Intro",
          "Coding",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Download and Install Software Section": [
          "Section Intro",
          "Download and Install MikroC Pro",
          "Download and Install Proteus",
          "Setting Up Proteus and MikroC Pro for Microcontroller Projects",
          "Section Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Master Motion Detection with PIC Microcontroller – Practice Test",
          "Section Summary",
          "Reading Material"
        ],
        "Who we are?": [
          "Section Intro",
          "Who We Are?",
          "Section Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Section Summary",
          "Reading Material",
          "Presenting a Motion Detection Security System Using PIC Microcontroller"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Download and Install Proteus Professional",
        "Download and Install MikroC Pro!",
        "Download The course Material in PDF and Print them if possible",
        "Students must have the knowledge of basic electronics"
      ],
      "description": "Guardian of Your Space!\nImagine a world where doors open with your mere presence, or a security system that alerts you at the slightest breach. This isn't science fiction – it's the power of motion detectors! Dive into the intricate art and science behind these devices and learn to shape them to your will using the PIC Microcontroller.\nYour Journey:\nDeciphering Motion Detectors: Understand the underlying mechanics of motion detectors and their real-world applications.\nHands-On Interfacing: Seamlessly connect motion detectors with the PIC Microcontroller, ensuring a responsive and efficient system.\nCoding Mastery: Learn to write effective codes that allow your system to respond aptly to detected motion.\nEnd-to-End Learning: From understanding the theoretical basis to implementing practical applications – this course has it all.\nWhy Choose This Course?\nProtection & Security: Harness the power of motion detection to protect homes, offices, or any space you hold dear.\nExpert Guidance: With the Educational Engineering Team, every concept is clarified, every query addressed.\nFor All Skill Levels: Whether you're a beginner in electronics or a seasoned expert, there's something for everyone.\nCourse Highlights:\nComprehensive and clear video tutorials.\nPractical activities to reinforce learning.\nAccess to an exclusive student community and robust instructor support.\nLifetime access to course updates.\nTestimonials:\n“This course is a revelation! From understanding motion detection to actual implementation, every step was detailed and clear.” - Michael K.\n“Thanks to this course, I now have a custom motion detector system at my home! Kudos to the team.” - Linda G.\nAssurances:\nYour trust in this course comes with guarantees. We offer a hassle-free money-back guarantee if you're not satisfied. So, there's zero risk and infinite learning to gain.\nTake Action Now!\nSpaces are limited, and knowledge is vast. Enroll today, and unlock the power of motion detection with the PIC Microcontroller!\nWhat You Will Learn:\nUnderstanding the mechanics of motion detectors.\nInterfacing motion detectors with the PIC Microcontroller.\nWriting effective code for motion detection systems.\nImplementing practical applications for security and automation.\nWho is This Course For:\nBeginners and enthusiasts in electronics and microcontroller programming.\nEngineers and technicians looking to enhance their security systems.\nAnyone interested in home automation and security technology.\nRequirements:\nBasic understanding of electronics.\nFamiliarity with PIC Microcontroller programming.\nWillingness to learn and apply new skills.\n\n\nAbout the Instructor:\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading entity in the Microcontroller industry with over 13 Years of Experience in teaching and practical projects. We provide in-depth, step-by-step blueprints on taming complex topics in easy and digestible bite-sized videos.\nHaving been in the Programming and Microcontroller business since 2007, we've catered to students' and educators' needs, teaching over 250k-THOUSAND students and counting through our 100+ courses on Udemy.\nAshraf Said AlMadhoun is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He is the Chief Educational Engineer at Educational Engineering Team, a company founded to explore new trends and technologies and to educate the world.\nOur online courses have helped over 250,000 people globally to excel and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "Anyone interested in Interfacing Motion Detector  with PIC Microcontroller",
        "Engineering students",
        "Technology hobbyists",
        "Computer programmers",
        "Microcontroller Geeks"
      ]
    },
    {
      "title": "Exploring Embedded Systems with MBED and CMSIS",
      "url": "https://www.udemy.com/course/mbed-and-cmsis/",
      "bio": "Harnessing the Power of MBED and CMSIS for Efficient Embedded Systems Development",
      "objectives": [
        "Acquire proficiency in utilizing the Peripheral Access Layer (PAL) to interface with peripheral devices.",
        "Develop practical skills through hands-on exercises and projects using MBED, CMSIS, PAL, and MAL.",
        "Gain experience in troubleshooting and debugging techniques for embedded systems.",
        "Understand the importance of code reusability and portability in embedded system development.",
        "Apply acquired knowledge to build robust and efficient embedded systems."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Introduction to Embedded Systems with MBED and CMSIS",
          "Features",
          "CMSIS",
          "Basics of MBED and CMSIS for Embedded Systems",
          "PAL and MAL",
          "Examples",
          "Conclusion",
          "Understanding Abstraction Layers and Practical Applications in MBED and CMSIS",
          "Exploring MBED and CMSIS Basics",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Exploring Embedded Systems with MBED and CMSIS Test",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Applying MBED and CMSIS in Embedded Projects",
          "Summary",
          "Reading Material"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Understanding of basic electronics and microcontroller architecture",
        "Familiarity with C/C++ programming language",
        "Basic knowledge of programming concepts"
      ],
      "description": "Unleash the Potential of Embedded Systems: Mastering MBED, CMSIS, and Real-World Applications\nWelcome to \"Unleash the Potential of Embedded Systems: Mastering MBED, CMSIS, and Real-World Applications.\" This comprehensive course takes you on a captivating journey through the world of embedded systems, focusing on the powerful frameworks of MBED and CMSIS.\nIn the Introduction module, you'll gain a solid foundation as we explore the significance and potential of embedded systems. Discover how these systems impact our daily lives and set the stage for the exciting lessons that follow.\nDive deep into the Features module, where you'll uncover the extensive capabilities of MBED and CMSIS. Explore how these frameworks seamlessly integrate with hardware peripherals and enable efficient code development, giving you the tools to create robust and innovative embedded systems.\nIn the CMSIS module, we delve into the Cortex Microcontroller Software Interface Standard (CMSIS) and its pivotal role in developing cutting-edge embedded systems. Learn how to leverage CMSIS to streamline your development process, optimize system performance, and unlock the full potential of your projects.\nDiscover the power of Platform Abstraction Layers (PAL) and Microcontroller Abstraction Layers (MAL) in the PAL and MAL module. These layers provide efficient hardware abstraction, allowing for seamless integration across various microcontroller platforms and maximizing code reuse for accelerated development.\nThe Examples module brings theory into practice as we guide you through hands-on exercises showcasing real-world applications of MBED and CMSIS. Gain practical experience in implementing embedded systems solutions and witness the power of these frameworks in action.\nConclude your journey with the Conclusion module, where we recap the key insights and takeaways from the course. Solidify your understanding of MBED, CMSIS, and their significant impact on the development of powerful and efficient embedded systems.\nEnroll now in \"Unleash the Potential of Embedded Systems\" and embark on a transformative learning experience. Gain the skills, knowledge, and confidence to create cutting-edge embedded systems using MBED, CMSIS, and real-world applications. Your journey to mastering embedded systems starts here.\nWhat You Will Learn\nFundamentals of embedded systems\nCapabilities and integration of MBED and CMSIS\nStreamlining development with CMSIS\nUsing Platform Abstraction Layers (PAL) and Microcontroller Abstraction Layers (MAL)\nReal-world applications and hands-on exercises with MBED and CMSIS\nOptimizing system performance and code reuse\nWho Is This Course For\nAspiring embedded systems engineers\nElectronics and hardware enthusiasts\nStudents and professionals interested in MBED and CMSIS\nAnyone looking to enhance their skills in embedded systems development\nRequirements\nBasic understanding of electronics and programming\nInterest in embedded systems and hardware development\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "Students Students and Engineering Professionalsand Engineering Professionals",
        "Embedded Systems Enthusiasts",
        "Hobbyists and DIY Enthusiasts",
        "Software Developers Transitioning to Embedded Systems",
        "Professionals Upgrading Their Skills"
      ]
    },
    {
      "title": "RTL Finite State Machines in System Verilog",
      "url": "https://www.udemy.com/course/rtl-finite-state-machines-in-system-verilog/",
      "bio": "Finite State Machines are a fundamental building block in digital hardware designs.",
      "objectives": [
        "Learn the design pattern for Register Transfer Level (RTL) descriptions of Finite State Machines in Digital Hardware",
        "Hands on simulation of RTL Finite State Machine with a self checking test bench",
        "Synthesis of RTL Finite State Machines",
        "Optimization of RTL Finite State Machine to reduce Latency"
      ],
      "course_content": {
        "Welcome to the course !": [
          "Introduction",
          "How to use this course",
          "Learning Tips (Optional)",
          "FSMs in Digital Logic"
        ],
        "Course Setup": [
          "Read This",
          "Code Access"
        ],
        "RTL FSM Design Pattern": [
          "RTL FSM Design Pattern"
        ],
        "RTL FSM Example": [
          "RTL GCD",
          "State Definitions",
          "Transition Arcs",
          "RTL Simulation - 1",
          "RTL Simulation - 2",
          "Synthesis"
        ],
        "RTL FSM - Fewer States": [
          "Measure Latency - 1",
          "Measure Latency - 2",
          "Fewer States",
          "Synthesis"
        ],
        "Extra: Explicit One Hot Encoding": [
          "One-Hot Encoding",
          "GCD:One Hot Encoded",
          "Simulation",
          "Synthesis",
          "Gatesim"
        ],
        "Wrap Up": [
          "Wrap Up"
        ],
        "Docker Setup (Optional)": [
          "Recommended Setup Using Docker",
          "Docker Windows Install (Optional)",
          "Download Docker Image",
          "Download Docker Image",
          "Run Docker with GUI (Windows)",
          "Run Docker with GUI (Windows)",
          "Run Docker with GUI (Mac OS)",
          "Run Docker with GUI (Linux - Ubuntu)",
          "Test Install",
          "Troubleshooting"
        ],
        "EDA Playground Setup (Optional)": [
          "Simulation Only Setup",
          "EDA Playground Hints (Optional)"
        ]
      },
      "requirements": [
        "Background in Digital Hardware Design (Electrical or Computer Engineering)",
        "Exposure to an HDL (Verilog or VHDL) would be helpful",
        "Taken course RTL Fundamentals in System Verilog (Recommended)"
      ],
      "description": "This hands-on course on writing RTL (Register Transfer Level) for Finite State Machines (FSM) in System Verilog provides a structured approach to mastering FSM design for digital logic applications. The course builds on RTL fundamentals and is designed for those with a background in Digital Logic Design or Computer/Electrical Engineering at an intermediate level.\nThe course begins by introducing FSMs as a computational model for sequential processes, where a system transitions between finite states based on inputs and predefined rules. FSMs are used in both hardware and software to control processes such as communication protocols, power management, and error handling.\nA core focus is on the \"RTL FSM Design Pattern,\" which offers a structured method for describing FSMs in RTL. It includes key steps like defining state encoding, assigning next states using always_ff, and managing state transitions in always_comb. One practical application covered is the implementation of the Greatest Common Divisor (GCD) using the FSM pattern, with detailed discussions on simulation, synthesis, and optimization to minimize states.\nThe course also emphasizes the efficiency of FSM design, introducing techniques such as one-hot encoding, which simplifies logic and reduces power consumption. However, the trade-offs between one-hot and binary encoding are discussed based on state count and application needs.\nThe course is supplemented with hands-on examples and simulations, leveraging platforms like a custom built docker image for simulation + synthesis or edaplayground dot com for practical experience.",
      "target_audience": [
        "Hardware Engineers (EE, CE or CS) who want to enter the Chip Design field",
        "Practicing FPGA and ASIC engineers who want to build on their existing skills"
      ]
    },
    {
      "title": "Surveillance camera with Raspberry PI",
      "url": "https://www.udemy.com/course/surveillance-camera-with-raspberry-pi/",
      "bio": "security camera for remote access (mobile, tablet or PC), with a lot of known solved issues (Raspberry PI specific)",
      "objectives": [
        "Make a surveillance camera for home or offices",
        "Manage Raspberry PI",
        "Install basic softwares and set it for Raspberry PI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Requirements and install": [
          "Hardware components",
          "Software"
        ],
        "Introduction with Raspberry PI": [
          "Beginnings on your PC",
          "Beginnings on your Raspberry PI"
        ],
        "Installation instructions": [
          "Install motion and its requirements",
          "Important motion settings and the first test"
        ],
        "Remote access": [
          "PC/Laptop - Windows 7/8",
          "Mobile - Android",
          "Mobile - Windows Phone"
        ],
        "More ideas": [
          "More ideas"
        ],
        "Known issues": [
          "Issues at the beginnings",
          "Inside the Raspberry PI (after SSH login)",
          "Problems with the motion",
          "Remote access and Wi-fi issues"
        ]
      },
      "requirements": [
        "Ideal for electrical technician and engineers (student level also)",
        "Hobbyists",
        "There is no need programmer skill",
        "You will need some stuff, but I will show exactly what they are"
      ],
      "description": "Step-by-step guide how to build a surveillance camera with Raspberry PI (the hardwares cost ca. $100). I will tell you how to make a stable remote access and how to use with PC or with mobile devices.\nYou can learn Raspberry PI basics also.\nI collected the known issues those have solutions. And I will add a new ones if the participants send me their detailed problem description.",
      "target_audience": [
        "Who likes IoT devices",
        "Who wants to build a surveillance (security) camera for home or offices"
      ]
    },
    {
      "title": "Fundamental Questions on Electrical Cables",
      "url": "https://www.udemy.com/course/fundamental-question-on-electrical-cables/",
      "bio": "Multiple Choice Questions (MCQ) on Electrical Cables",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Dear Learners,\nAre you preparing for an interview at an electrical cable company? Don’t be stressed; take our electrical cable practice test and prepare yourself for your interview.\nIn the Electrical Cables-based Multiple Choice Questions quiz, there will be a series of practice tests where you can test your basic knowledge of electrical cables.\nWho should practice these electrical cable-based questions?\nThese questions will help you with self-study and self-assessment.\nThese practice tests help you check your knowledge.\nHere, you can track your progress and understand which areas need improvement.\nThese practice tests are mobile-compatible, so you can easily access them anytime with your smartphone.\nHere, the active Q&A board gives you the opportunity to directly interact with the instructor.\nLifetime access to the practice test with all the updates for the Electrical Cables Question\nGenerally, you need to refer to a variety of books and websites in order to cover the ocean of topics in electrical cables. To make it easy for you guys, I have collected a few electrical cable-based questions from different topics. When you solve these questions, your confidence will definitely increase.\n\n\n100% MONEY-BACK GUARANTEE\nThis course has a 30-day money-back guarantee. Without any delay, the applicants participate in the electrical cable-based practice test and understand the various questions and answers.\nBest of luck for the exam!",
      "target_audience": [
        "Learner will develop a strong confidence on topic \"Electrical Cables\""
      ]
    },
    {
      "title": "HMI Design | Building your own 3D HMI Visuals",
      "url": "https://www.udemy.com/course/hmi-design-building-your-own-3d-hmi-visuals/",
      "bio": "Build Your Own Basic General Purpose Machine Visuals for Any PLC with this Mini Course",
      "objectives": [
        "Use 3D Machine Models in Real HMI",
        "Create 3D Background HMI Scenes",
        "Learn Basic HMI Animation Tricks",
        "Use Free Tools to manipulate 3D Models and 3D Scenes"
      ],
      "course_content": {
        "Introduction": [
          "Downloading Software",
          "Getting 3D Models",
          "Fusion 360",
          "Motor Model And Capture",
          "Basic HMI",
          "Simulation Mode",
          "State Images",
          "Animation Logic",
          "3D Background Scene",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic PLC Programming Knowledge ( Ladder Logic)",
        "Windows Machine Exclusively"
      ],
      "description": "-Ever had trouble finding a suitable Machine Symbol or image for your HMI Design due to the limited HMI Library?\nNow you can add any image you want, in any perspective or orientation!\n\n\n-Ever wondered how those cool 3D HMI Background are created?\nThis is the only course on the internet that will tell you step by step, how to do it!\n\n\nThis course is specifically designed for any HMI Designer, as you will gain access to unlimited Machine symbols and representation for free, with full flexibility. Meaning that, you will manipulate the machine CAD Design to your need.\n\n\nNo more colored rectangles and Triangles to represent your machine operation.\n\n\nThe cool thing is, this works for any HMI, as long as the  HMI software accepts images! (That is almost 99% of the HMI software out there).\n\n\nNote that this is a mini-course , that has two main purposes:\nBe able to use 3D CAD design for any machine\nBe able to create 3D Scenes with control panel\nBasic Animation design\nWhat is NOT in this course?\nDesigning Rotatable 3D Scene\nDesigning Full HMI projects\n\n\nMost importantly, let me know if you have any questions!\nI hope to see you all there.",
      "target_audience": [
        "PLC Programmers",
        "SCADA/HMI Designers",
        "Industrial UI Designers",
        "Anyone interested in Industrial Automation and Robotics"
      ]
    },
    {
      "title": "Semiconductor Fundamentals: Diodes, Transistors, and Op-Amps",
      "url": "https://www.udemy.com/course/introduction-to-semiconductors/",
      "bio": "Semiconductor Essentials: A practical guide to understanding core semiconductor components in modern electronic circuits",
      "objectives": [
        "Core Semiconductor Components",
        "Understand the function and behavior of diodes, transistors, and operational amplifiers (op-amps).",
        "Learn how these components fit into modern electronic circuit design.",
        "How to control current direction in a circuit using diodes.",
        "Understand how transistors act as electronic switches and amplifiers.",
        "Apply theoretical knowledge to build real-world electronic circuits."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting started"
        ],
        "Diodes": [
          "Semiconductor materials",
          "What is a diode",
          "Diode characteristics"
        ],
        "Diode Applications": [
          "Rectify a signal",
          "Detect the signal peak",
          "Protect against large signals",
          "Protect against reverse current",
          "Protect against flyback voltage",
          "Exercise",
          "Solution"
        ],
        "Special Purpose Diodes": [
          "Light emitting diodes",
          "Photodiodes",
          "Zener diodes"
        ],
        "Bipolar Junction Transistors": [
          "What is a transistor?",
          "NPN bipolar junction transistors",
          "PNP bipolar junction transistors",
          "BJT characteristics"
        ]
      },
      "requirements": [
        "Basic Understanding of Electronics"
      ],
      "description": "Strengthen your foundation in electronic circuit design by learning how to work with essential semiconductor components. This comprehensive course walks you through the practical use of three fundamental building blocks in electronics: diodes, transistors, and operational amplifiers (op-amps).\nWe begin with diodes, small but powerful components that allow current to flow in only one direction. You'll learn how diodes are used to protect circuits from reverse currents, voltage spikes, and flyback voltage—common challenges in many electronic systems. Through hands-on examples, you'll understand how to use diodes effectively in your own circuit designs.\nNext, we move on to transistors, which are critical for controlling current flow and enabling amplification and switching in circuits. You'll explore both BJTs (Bipolar Junction Transistors) and MOSFETs (Metal-Oxide-Semiconductor Field-Effect Transistors), learning how each type works and how to apply them in different scenarios.\nThe course concludes with an in-depth look at operational amplifiers, versatile components used in everything from audio systems to sensors. You'll see how op-amps can be configured to amplify and filter signals, compare voltages, supply dual power outputs, and more.\nWhether you're a student, hobbyist, or engineer looking to refresh your skills, this course provides a solid, practical understanding of semiconductor components to enhance your electronics projects.",
      "target_audience": [
        "Makers, hobbyists, or tinkerers looking to build smarter and more reliable electronic projects.",
        "STEM students or self-learners who want to grasp the real-world function of semiconductor components.",
        "Anyone interested in electronics"
      ]
    },
    {
      "title": "Circuit Design, Analysis and Spice modeling using Multisim",
      "url": "https://www.udemy.com/course/circuit-design-analysis-and-spice-modeling-using-multisim/",
      "bio": "Learn how to operate the most important software for electronics circuit's applications.",
      "objectives": [
        "Students will gain comprehensive understanding of Multisim for circuit design, its simulation and analysis.",
        "By the end of this coursework, students will be able to design their own circuit in Multisim.",
        "Students will be more interested in analysing the circuit in Multisim over pen and paper."
      ],
      "course_content": {},
      "requirements": [
        "Student would need NI Multisim. In order to download it, student should refer to the link provided in this course work. Once installation is complete students will be able to follow this coursework bit by bit.",
        "Students should be beginner in electronics to understand the basics. This course is for all level of students."
      ],
      "description": "This coursework is on Multisim. In this coursework students will get opportunities to simulate, design and analyse the analog and digital electronic circuits along with Spice Modeling.\nSome of the circuits includes Slew Rate calculation circuit, RC Circuit, Voltage Regulator, Half wave rectifier, NOR Gate using CMOS, AND Gate etc.\nIn this coursework all the relevant materials related to Multisim has been included. Students will gain a comprehensive knowledge once they finish this coursework.\nThis coursework is two hours fifteen minutes long. So a serious engagement with this course will hardly take a day to have a firm grip on Multisim.\nThis course has been structured in the following ways :\n1. Circuit design of Analog and Digital Circuits.\n2. Circuit analysis .\n3. Brief description of each circuit and its operational methodology.\n4. Spice modeling .\nRight from beginners to those who are interested in quick refresh of Multisim should take this course. This coursework has everything that a beginner wish i.e. circuit design, analysis, description of the circuit and spice modeling. For those who wish a quick refresher for them this coursework has been made as short as possible.\nSo, this coursework should be taken by all those who has a strong desire to understand electronics in details.",
      "target_audience": [
        "This coursework is meant for newbies who are not familiar with Multisim and/or students looking for a quick refresher on Multisim.",
        "This coursework has videos on Analog, Digital circuit and Spice modeling which will give deep understanding to students on the electronic circuits.",
        "Prime goal is to make students understand the very basics of Multisim so it is for High School students, undergraduate/graduate students and professionals working in firms."
      ]
    },
    {
      "title": "Delta PLC- Basic Course with ISPsoft",
      "url": "https://www.udemy.com/course/ladder-diagram-with-delta-plc-basic-course-with-ispsoft/",
      "bio": "Learn the basics today at your own pace!",
      "objectives": [
        "Learn how to use the ISPsoft to program Delta PLCs",
        "Learn ladder diagram",
        "Practice real life industrial applications with simulations",
        "Know the most important tools to program a PLC"
      ],
      "course_content": {
        "Introduction": [
          "Instructor Presentation",
          "Brief Delta History",
          "Course expectations",
          "Free software/firmware",
          "Downloading and installing the softwares",
          "Manuals and important files",
          "Data types",
          "Commgr",
          "Hardware Connection"
        ],
        "Knowing the ISPsoft": [
          "ISPsoft introduction",
          "Device Table/ Device monitor/M registers/ D registers",
          "POU Ladder Diagram",
          "Local and Global Variables",
          "HW config",
          "NC, NO contacts/ Set, Reset",
          "Example 1 /Exercise 1",
          "Explanation of Exercise 1"
        ],
        "Basic Programming": [
          "Counters",
          "Timers",
          "Example 2/Exercise 2",
          "Explanation of Exercise 2",
          "Comparison Instructions",
          "Movement of data of D registers",
          "Example 3",
          "Arithmetic operations with integers",
          "Arithmetic operations with floating numbers",
          "Scaling of Analog signals",
          "Example and Exercise 4",
          "Explanation of Exercise 4",
          "Special SM memories",
          "Differences between DVP and AS series"
        ],
        "final assigment": [
          "Final assigment"
        ],
        "Closure": [
          "Closure"
        ]
      },
      "requirements": [
        "No programming experience needed",
        "You will learn from scratch everything needed for this course",
        "No PLC or hardware equipment needed. Only your computer to test the programs"
      ],
      "description": "Learn the most important things to start using your Delta PLC and become an expert.\n\n\nTaught by an instructor with more than 7 years of experience with Delta and with more than 30 courses taught; and trained more than 100 people. With certifications from Delta Mexico directly and taking courses at the facilities in Taiwan.\n\n\nStart this adventure with the PLCs of one of the brands with the best cost benefit. With free software and simple programming.\n\n\nIn this course you will understand the basic concepts of how to use ISPsoft to program the AS series PLC. The same would work if you wanted to use the DVP series PLCs.\n\n\nIt is useful for anyone who wants to learn, there are practical and visual examples.\n\n\nThe Delta brand is seen more and more in the industry, because machines arrive from China, or end customers are asking system integrators for more machines with this technology.\n\n\nIn addition to the fact that in Mexico the stock of these PLCs is not being affected as much as those of other brands, since the problem of the semiconductors has meant that there is not enough stock of the other PLCs. Delta has enough to cover the needs of the market.\n\n\nAutomation is very important in order to make life in the industry easier, since people are not robots and can make mistakes, and have better quality and repeatability in your projects.",
      "target_audience": [
        "Any Engineer or person who wants to know how to program Delta PLCs"
      ]
    },
    {
      "title": "Digital System Design with VHDL & Verilog and FPGA Design",
      "url": "https://www.udemy.com/course/digital-system-design-with-vhdl-and-verilog/",
      "bio": "Model & simulate structure of digital systems with VHDL & Verilog. RTL Systems, FPGA Design Flows & Tools, FPGA Testing.",
      "objectives": [
        "Learn fundamental concepts of Digital Design, Design for Testability, Fault Simulation",
        "Understand VHDL and Verilog Programming constructs and their applications",
        "Define State Machines, State Reduction & Assignment, RTL Design",
        "Learn & apply SystemVerilog",
        "Gain experience on Test Benches",
        "Understand FPGA, ASIC/FPGA Testing, FPGA Design Flows & Tools"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "Uplatz provides this extensive course on Digital System Design with VHDL & Verilog and FPGA Design.\n\n\nThe Verilog Hardware Description Language (Verilog HDL) is a language that is used to describe the behavior & structure of electronic circuits, most commonly digital circuits. Verilog HDL is defined by IEEE standards. The common variants include Verilog 1995, Verilog 2001, and the recent SystemVerilog 2005. Verilog HDL is used for designing hardware and for creating test entities to verify the behavior of a piece of hardware. Verilog is facilitated through a variety of EDA tools, including synthesis tools such as various simulation tools, and formal verification tools. Digital Systems Design using Verilog combines logic design concepts, Verilog as a hardware design language, and FPGA implementation to assist the electronics and computer engineering students in mastering the process of developing and testing novel hardware configurations. Verilog, a hardware description language, may be used to incorporate massive and complex digital circuits into hardware (HDL).\nVery High-Speed Integrated Circuit Hardware Description Language (VHDL) is a description language used to describe hardware. It is utilized in electronic design automation to express mixed-signal and digital systems, such as ICs (integrated circuits) and FPGA (field-programmable gate arrays). We can also use VHDL as a general-purpose parallel programming language.\nIn essence, both Verilog and VHDL are the Hardware Description Languages (HDL) that help to describe digital electronic systems. The main difference between Verilog and VHDL is that Verilog is based on C language while VHDL is based on Ada and Pascal languages.\nTo be effective, a designer who wants to understand these HDL languages  must first get familiar with their structure, practice the same in real-world applications, and combine them. Nerds will be able to complete all of these jobs using Design Through Verilog HDL, while seasoned experts will have access to a full resource on this dynamic technology. The VLSI sector creates silicon chips for a variety of applications, including automotive, consumer electronics, medical, IoT, and artificial intelligence. To make the aforesaid gadgets functional, each silicon will contain millions or billions of transistors building complicated logic circuits. The industry's overall development will be aided by increased demand for chips connected to the fast-rising usage of AI.\n\n\nThis Digital System Design with VHDL & Verilog and FPGA Design course covers the creation and implementation of FPGA-based digital systems utilizing the two most prominent hardware description languages, Verilog and VHDL. This course of Digital System & Circuit Design with VHDL & Verilog provides a solid foundation in FPGA concepts, methods, and applications, as well as an introduction of more difficult issues. Real-world examples, ready-to-run code, and low-cost start-to-finish demonstrations are used to highlight key ideas.\nThe course covers the fundamental tools for designing digital circuits as well as processes for a wide range of digital applications. Digital System Design with VHDL & Verilog is a course that is designed to teach students how to create and successfully simulate their Verilog/VHDL design. We will also be implementing these designs on a Xilinx BASYS 3 or BASYS 2 FPGA development board so that the students can see their designs actually running. This course teaches the delegates from scratch how to turn their digital logic design into VHDL designs that can be simulated in ModelSim or ISim and then implemented on an FPGA development board. With this VHDL & Verilog course, the students will be able to understand the syntax and use of specific VHDL & Verilog HDL terminologies. The course starts with the basic concepts of Design for Testability, Fault Simulation, and then proceeds with understanding of State Machines. This Electronics & Digital Systems design course covers in-depth the structure, syntax, and usage of both Verilog HDL and VHDL, along with explanation of System Verilog concepts. You will also understand the Test Benches, FPGA ASICs, FPGA Testing as well as FPGA Design Flows & Design Tools.\nThis course will help you become an electronics/digital circuits engineer.\n\n\nCourse Objectives\n\n\nLearn concepts of Design for Testability, Fault Detection & Simulation\nUnderstand the Verilog Language principles\nDesign digital systems as part of a wider system design framework\nExamine the construction and functioning of semiconductor memory, which are commonly utilized in application-specific digital systems.\nGrasp Digital IC Design Concepts\nLearn VHDL & Verilog and their application in designing & simulating the behavior of digital systems & circuits\nUnderstand how VHDL/Verilog is used to design various digital ICs\nPerform timing verification, boundary scan, etc.\nDefine State Machines, RTL Design\nLearn FPGA Testing, FPGA Design Flows & Tools\n\n\nDigital System Design with VHDL & Verilog and FPGA Design - Course Syllabus\n\n\nDesign for Testability\nFault Simulation\nTest Vector Generation and IDDQ\nTiming Verification\nBoundary Scan\nVHDL\nSequential Design\nState Machines\nState Reduction & Assignment\nState Machine Design & Analysis\nRTL Systems & RTL Design\nVerilog\nSystem Verilog\nTest Benches\nIntroduction to FPGA\nFPGA Testing\nFPGA Design Flows & Design Tools",
      "target_audience": [
        "ASIC Design Engineers",
        "Electronics/Embedded Engineers",
        "Anyone aspiring for a career in Electronics / Digital Circuits / RTL / ASIC",
        "Digital Design Engineers - RTL, ASIC, VHDL, Verilog, SystemVerilog",
        "RTL Design Engineers",
        "Beginners & newbies interested in Electronics / Digital Systems Design",
        "VHDL & Verilog - Designer Programmers",
        "Senior Design Verification Engineers",
        "Digital Design Verification / Test Engineers",
        "FPGA/ASIC Design Engineers",
        "Firmware Engineers - VHDL FPGA",
        "FPGA Hardware Design Engineers",
        "FPGA Verification Engineers",
        "Physical Design Engineers"
      ]
    },
    {
      "title": "Introduction to BeagleBone Black Wireless",
      "url": "https://www.udemy.com/course/introduction-to-beaglebone-black-wireless/",
      "bio": "Learn about to Build your own Real time ECG monitor with a BeagleBoneBlack Wireless board.",
      "objectives": [
        "Wire up your BeagleBoneBlack Wireless to create a fully functional computer, running on Debian operating system",
        "Get up to speed with simple Linux commands and the Python programming language",
        "Write Python code to control the BeagleBoneBlack Wireless hardware",
        "Build your own Real time ECG monitor with a BeagleBoneBlack Wireless board using Beebotte"
      ],
      "course_content": {
        "Introduction": [
          "What will you learn from this course?",
          "Introduction to BeagleBoneBlack Wireless",
          "BeagleBoard’s latest development board",
          "BeagleBone Black Wireless Compatibility"
        ],
        "Getting Started with BeagleBoneBlack Wireless": [
          "Getting started with BeagleBoneBlack Wireless",
          "First scenario: Tethered to a PC",
          "Second scenario: Standalone with Display/Keyboard/Mouse",
          "Accessories links",
          "Update board with the latest software",
          "Plug in your Beagle via USB"
        ],
        "Beagle Board component locations": [
          "Beagle Board component locations",
          "BeagleBoneBoard Wireless Expansion Connectors",
          "Serial Header"
        ],
        "WiFi Setup": [
          "Connect a BeagleBoneBlack Wireless to the Internet using Putty",
          "How to setup BeagleBone Black for Mac OS ?",
          "BeagleBone Black Wireless Wi-Fi Setup"
        ],
        "Understanding the Pinout on the BeagleBoneBlack Wireless": [
          "Understanding the Pinout on the BeagleBoneBlack Wireless",
          "Beaglebone Black Wireless Pinout"
        ],
        "Running Python on BeagleBoneBlack": [
          "Running Python on BeagleBoneBlack Wireless"
        ],
        "Blinking LEDs from GPIO Pins": [
          "Blinking LEDs from GPIO Pins_Part I",
          "Blinking LEDs from GPIO Pins_Part II",
          "Circuit_Diagram_ Blinking LEDs from GPIO Pins",
          "Source Code_Blinking LEDs from GPIO Pins"
        ],
        "Control PWM Signals and Create a Dimmable LED Circuit with PWM in Python": [
          "Control PWM Signals and Create a Dimmable LED Circuit with PWM in Python",
          "Circuit_Diagram_ Control PWM Signals and Create a Dimmable LED Circuit with PWM",
          "Source Code_Control PWM Signals and Create a Dimmable LED",
          "Python Programming 1"
        ],
        "Read Button State from Python": [
          "Read Button State from Python",
          "Circuit_Diagram_Read Button State from Python",
          "Source Code_Read Button State from Python"
        ],
        "Reading Analog Inputs from Python": [
          "Reading Analog Inputs from Python",
          "Circuit_Diagram_Reading Analog Inputs from Python",
          "Source Code_Reading Analog Inputs from Python"
        ]
      },
      "requirements": [
        "BeagleBoneBlack Wireless",
        "A basic understanding of electricity and electronics",
        "Essential tools: a mini breadboard, jumper wires, a multimeter, a soldering iron and solder, wire cutter",
        "A hands-on projects-based approach with step by step instructions will be used to teach about the BeagleBoneBlack Wireless and Python programming",
        "All theory will be explained so you understand all aspects of a project and how/why it works",
        "Line-By-Line Code Reviews so you will understand exactly how the software and hardware play together in a project",
        "LEDs, Push Buttons, Potentiometer",
        "1 x - BeagleBone Black Wireless, 1 x ECG Module (AD8232), 3 x ECG Electrodes Pad, ECG Electrode Sensor Cable Connector"
      ],
      "description": "Hello, learners! Greetings from Makerdemy. In this course, you will learn how to program to Build your own Real time ECG monitor with a BeagleBone Black Wireless board using ECG AD8232 Sensor and beebotte IoT plaform.\n\nIn this course is for anyone who is interested in exploring the newly released BeagleBoneBlack Wireless. This course is for anyone who is interested in learning about fundamentals of BeagleBone Black. This course is ideal for those who are interested in exploring the possibilities of BeagleBone. The course does not require any prior knowledge of BeagleBone and Python Programming language.\nI will teach you to hook up the Beagle with a keyboard and monitor and use it as a fully functional desktop. I will also teach you how to configure the BeagleBoneBlack board, and you can use it wirelessly. You will learn how to interact with the hardware and build complete BeagleBoneBlack projects using Python programming language.\nThe course consists series of lessons will show you how to get up and running on the Beaglebone Black Wireless. An advantage of the Beaglebone Black over the Raspberry Pi is that it has Analog input capability, which the Pi does not. The Beaglebone has a much smaller and less active user community, so it is harder to find examples and information for this platform. So, I will put together a series of lessons that will show you how to use this board in your projects. Our basic approach will be to do programs and control the GPIO pins using Python.\nThe course split into six projects:\nProject 1:\nIn this project, we will teach you how to blink LED from the GPIO pins using Python.\nProject 2:\nIn this project, we teach you how to make the connection to control the brightness of LED using the PWM command in Python.\nProject 3:\nThis project will explain to you how to read the state of push buttons using Python. We will be using an external pull down resistor, and will be using digital reads.\nProject 4:\nIn this project will learn how to read analog values using the Analog In pins on the Beaglebone Black Wireless.\nProject 5:\nIn this project, we will teach you how to precisely control the position of a servo using PWM in Python.\nProject 6:\nIn this project, we will teach you to basics for getting your AD8232 Heart Rate Monitor up and running.\nI will also cover real-time medical project in this course; I will go over the basics for getting your (AD8232) Heart Rate Monitor up and running. Then, I’ll show you how to hook it up to BeagleBone Black Wireless and to create a real-time visualization of ECG data Using Beebotte IoT platform.\nI will teach you how to step into the world of Internet of Things and remotely visualize the data on the web. You will also learn how to integrate web application API with BeagleBoneBlack Wireless and remotely save the Real-time ECG data on the web server.\nIf you are a technology enthusiast and want to learn the cutting-edge technology, then this is the right course for you.\nI will guide you step by step how to go about building this project. I will also share the source code with you so that you can replicate the project by yourself.\nAt the end of the course, you'll be fully familiarized with BeagleBone Black Wireless and ready to build your own application micro-controller projects. I look forward to you joining this course. It provides the complete source code of the real time project.\nLet’s dive in to learn the concept one by one.\nWhat are you waiting for? Enroll now!",
      "target_audience": [
        "This is an introductory course meant for those who are interested in exploring the BeagleBoneBlack Wireless. While a knowledge of Linux operating system and Python programming language will be helpful, it is not required to follow this course. The basics of Linux and Python will be taught as a part of this course.",
        "Anyone interested in learning about programming to interface with a curiosity for making electronics and microcontrollers",
        "Students over 10 years of age, or younger with with adult supervision. Young students should be supervised at all times when using a soldering iron",
        "Entrepreneurs who need to prototype electronics projects or ideas",
        "Engineering Students - Electronics, Electrical & Computer Science",
        "Electronic Geeks, Hobbiest & Art Students",
        "High School Science Students"
      ]
    },
    {
      "title": "Computer Motherboard repairing tips and tricks course",
      "url": "https://www.udemy.com/course/motherboard-integrated-circuits-ics-troubleshooting-secrets/",
      "bio": "Learn how to test & check any IC using right test points, Laptop repair course, PC/computer hardware, Electronics, IT",
      "objectives": [
        "Understand test points working principle;",
        "Learn how to troubleshoot and identify Motherboard failures;",
        "Master the use of test points in troubleshooting;",
        "Understand electronics and computer motherboard architecture;",
        "Master the use of electronic paths;",
        "Be able to track electronic signals in the motherboard;",
        "Be able to track, troubleshoot, isolate, locate and fix any hardware issue."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Integrated Circuits Extensions Overview"
        ],
        "Integrated Circuits Testing Mastering": [
          "Integrated Circuits testing overview",
          "Integrated Circuits testing overview part 2",
          "Electronics Paths & Tracking electronics signals",
          "Integrated Circuits pins and extentions",
          "Integrated Circuits analysis part 1",
          "Integrated Circuits analysis part 2",
          "Integrated Circuits analysis part 3",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge on electronics"
      ],
      "description": "**Continuous Updates**\n14 Reasons why you should choose this course:\nThe course will teach you The Motherboard Integrated Circuits Troubleshooting Secrets.\nThe course is created with perfect care by a computer engineer;\nOne-On-One Support;\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences;\nYour inquiries will be answered in a short time with a full explanation of any question;\nConstant updates.\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course;\nYou going to learn how to analyze any electronics schematics based on this course;\nYou will be able to track electronic signals in the motherboard;\nYou will Understand test points working principle;\nYou going to master  the use of electronic paths;\nYou going to learn how to track, troubleshoot, isolate, locate and fix any hardware issue.\nThe course will teach you how to read schematics step by step in an easy way;\nYou will learn in this Course:\nIntegrated Circuits testing overview;\nIntegrated Circuits pins and extensions;\nIntegrated Circuits analysis;\nUnderstanding Basic Electrical Circuit Diagram;\nElectronics Paths & Tracking electronics signals;\nHow to Troubleshoot Failures using Schematics;\nHow to analyze electronics schemes and much more.\nI will guide you step by step with an easy explanation along this course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nWhat are you waiting for?\nGo ahead and join us.\nI'll love to see you in the class.",
      "target_audience": [
        "Computer and electronics technicians;",
        "Hardware experts who wants to improve their knowledge.",
        "Any one who want to undestand computer and electronics repairing"
      ]
    },
    {
      "title": "Arduino Interrupt: Step by Step Guide with Practical Example",
      "url": "https://www.udemy.com/course/arduino-interrupt-step-by-step-guide-with-practical-example/",
      "bio": "You will enter Arduino Advanced Interrupt World, and together we'll help you become knowledgeable.",
      "objectives": [
        "TYPES OF INTERRUPTS .",
        "INTERRUPTS IN ARDIUNO.",
        "USING INTERRUPTS IN ARDIUNO.",
        "ARDUINO INTERRUPT PROGRAMMING",
        "ARDUINO INTERRUPT DEMONSTRATION",
        "Move to the next level in Programming PIC Microcontroller",
        "Make your Codes more Professional by Learning advance Interrupt Techniques",
        "Program Interrupt using Microcontroller",
        "Learn how to use different types of Interrupts in PIC18f and PIC16f",
        "Arduino Advanced Programming Techniques",
        "What is interrupt?",
        "Software and Hardware Interrupts",
        "Interrupt Practical Examples"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Who We Are?",
          "Exploring Event-Driven Programming in Arduino Projects",
          "Summary",
          "Reading Material"
        ],
        "Hardware and Software Requirements": [
          "Section Intro",
          "Software Requirements",
          "Quiz",
          "Summary",
          "Reading Material"
        ],
        "Interrupts": [
          "Section Intro",
          "What is an Interrupt with Example",
          "More about Interrupts",
          "Types of Interrupts",
          "Exploring the Concept of Interrupts in Embedded Systems",
          "Summary",
          "Reading Meterial"
        ],
        "Arduino Interrupts": [
          "Section Intro",
          "Arduino Interrupts",
          "Using Interrupts in Arduino",
          "Arduino Interrupt Pins Layout",
          "Quiz",
          "Summary",
          "Reading Meterial"
        ],
        "Interrupt Practical Example": [
          "Section Intro",
          "Simple Circuit Design",
          "Circuit Design",
          "Coding",
          "The Code",
          "Demonstrating Interrupts in a Real-world Application",
          "Simulating Arduino Interrupt",
          "Summary",
          "Reading Material"
        ],
        "Interrupt Practical Example with LCD": [
          "Section Intro",
          "Adding LCD to Our Circuit",
          "Circuit Design",
          "Coding Interrupt with LCD",
          "Quiz",
          "The Code",
          "Simulating Arduino Interrupt with LCD",
          "Summary",
          "Reading Material"
        ],
        "Download and Install Software Section": [
          "Download and Install Arduino Software",
          "Download and Install Proteus Software",
          "TinkerCad Online Simulation",
          "Setting Up Your Development Environment"
        ],
        "Practice Test": [
          "Practice Test on Arduino Interrupts and Circuit Design"
        ],
        "Course Project": [
          "Course Project",
          "Presenting an Arduino Project Using Hardware Interrupts"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A Will to Apply not just Watch",
        "A Computer or Laptop",
        "Basic Experience in Arduino"
      ],
      "description": "Interrupts is a mechanism by which an I/O or instruction can suspend the conventional execution of the processor and gets itself serviced by assigning the interrupt a higher priority.\n\n\nYou will Learn differing types of Arduino Interrupts, and the way to use software and hardware interrupts.\nAs you already Arduino is a Professional device that's easy-to-use in both hardware and software. it has numerous potentials in it, that it's really wired how people are just using it for basic stuff using traditional and basics techniques.\n\n\nWhy you should take this course?\nLearn how to use interrupts in Arduino\nLearn how to write an interrupt service routine (ISR)\nLearn about the different types of interrupts that are available\nSee the errors that can happen when using interrupts\nLearn how to handle such errors gracefully\nBecome knowledgeable in advanced interrupts\n\n\nWelcome to this new course.\nThis course is devoted to moving you to succeeding level, teaching you professional and advanced Interrupt techniques which will assist you to build complex systems with less code and even less effort.\nBe professional, be creative, and be innovative using Arduino Interrupt.\nThis course is meant to introduce Arduino Interrupt hardware and Advance programming techniques to urge you to start on complex multi-functional projects as soon as possible.\nInterrupts make it possible to make applications that will answer an external stimulus in real-time. An interrupt is essentially an occasion that needs the microcontroller to prevent normal program execution then to leap to execute a program code associated with the event causing the interrupt\nContents and Overview This course is meant for anyone curious about learning advanced Arduino Programming Techniques. No experience is required, and everything you need is Arduino.",
      "target_audience": [
        "Arduino Geeks",
        "Microcontroller Geeks",
        "Anyone looking to Master Interrupt using Arduino",
        "Anyone with a curiosity for making electronics",
        "People with no experience in electronics",
        "People with an intermediate knowledge of electronics"
      ]
    },
    {
      "title": "Web-Based Embedded System Simulator",
      "url": "https://www.udemy.com/course/arduino-simulate-web-based-embedded-system-simulator/",
      "bio": "Web-based embedded system simulator helps you design and debug your systems before they hit the market.",
      "objectives": [
        "you will learn about Arduino IDE",
        "Learn about Micropython",
        "Learn about Raspberry Pi Paco",
        "Learn about Arduino Nano",
        "Learn about ESP32",
        "Learn about Arduino Mega",
        "Learn about Wokwi Docs Simulate IoT Projects in Your Browser",
        "Learn about Arduino Libraries examples",
        "Learn how to create embedded systems of any complexity!",
        "This course will teach you how to develop embedded systems using C programming language.",
        "Learn all the basics about electronics, embedded systems and microcontrollers."
      ],
      "course_content": {},
      "requirements": [
        "Arduino IDE",
        "Internet connection",
        "Laptop or PC",
        "Sensosrs"
      ],
      "description": "An introduction to the design and analysis of web-based embedded systems is provided in this course. Students will gain knowledge of the many parts of a web-based embedded system and investigate how these systems can be utilized to increase efficiency, dependability, and safety. Real-time operating systems, networked systems, and sensor networks will all be covered in the course.\nWeb-based embedded system simulator helps you design and debug your systems before they hit the market, the first-ever free simulator to simulate Arduino, ESP, Raspberry Pi, and other boards.\nAn online electronics simulator. It may be used to emulate the Arduino, ESP32, and a variety of other well-known boards, components, and sensors.\nThis course provides a web-based embedded system simulator that allows students to experience working with an embedded system. The simulator is used to provide a virtual environment for the students to develop and test their embedded systems.\nThis course provides an introduction to the design and implementation of embedded systems using a web-based simulator. The course covers the basics of embedded systems, including processor architecture, operating systems, and programming. Students will work on a series of projects that will allow them to apply the concepts learned in the course.\nFollowing Are a Few Brief Examples of Items You Can Create:\nArduino Uno \"Hello World\"\nBlink an LED on ESP32\nMonitor the weather on ATtiny85\nControl 32 Servos with Arduino Mega\nAnimate an LED Matrix with FastLED\n7 Segment Counter with MicroPython on ESP32\nCourse Unique Features:\nWiFi Simulation: Connect your simulated project to the internet. You can use MQTT, HTTP, NTP, and many other network protocols.\nVirtual Logic Analyzer: Capture digital signals in your simulation (e.g., UART, I2C, SPI) and analyze them on your computer.\nAdvanced Debugging with GDB: Powerful Arduino and Raspberry Pi Pico debugger for advanced users.\nSD Card Simulation: Store and retrieve files and directories from your code. Club members can also upload binary files (such as images).\nIn this course, you may discover how to join and know the benefits of this platform. This includes guides:\nDiagram Editor\nKeyboard Shortcuts\nDebugging\nSerial Monitor\nLogic Analyzer\nLibraries\nMicroPython\nCircuitPython\nESP32 Simulator\nESP32 WiFi\nTranslating\nVotePowers\nWhy This Platform?\nStart Right Now: No waiting for components or downloading large software. Your browser has everything you need to start coding your next IoT project in seconds.\nMistakes Are Okay: You can't destroy the virtual hardware. Trust us, we tried. So don't worry about frying your precious components. And unlike real hardware, you can always undo it.\nEasy to Get Help and Feedback: Sharing a link to your project is all you need.\nGain Confidence in Your Code: Separate hardware and software issues.\nUnlimited Hardware: No need to scavenge parts from old projects. Use as many parts as you need, without worrying about project price and stock.\nMaker-Friendly Community: A place for you to share your projects, ask for help, and get inspiration.\nWhy Should You Take This Course?\nYou will learn about Arduino IDE\nLearn about Arduino Mega\nLearn about ESP32\nLearn about Arduino Nano\nLearn about Raspberry Pi Pico\nLearn about MicroPython ESP32\nLearn about the example Arduino Libraries\nA web-based embedded system simulator course allows students to learn about embedded systems by using a web-based simulator. This type, of course, can be very useful for students who are interested in learning about embedded systems but who may not have access to a physical simulator.\nSo What Are You Waiting For? ENROLL NOW!\nWhat You Will Learn:\nBasics of embedded systems\nProcessor architecture\nOperating systems\nProgramming for embedded systems\nDesign and test embedded systems using a web-based simulator\nReal-time operating systems\nNetworked systems\nSensor networks\nWho Is This Course For:\nBeginners in embedded systems\nIndividuals interested in learning about web-based embedded systems\nHobbyists and enthusiasts looking to expand their knowledge\nRequirements:\nBasic computer skills\nNo prior knowledge of embedded systems required\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact, step-by-step blueprint on how to tackle simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of “Educational Engineering”\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k + Subscribers) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelance engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "this is for Arduino Enthusiast",
        "this is for Arduino Hobbyist",
        "this is can be also for begginers in Arduino or Embedded System .",
        "this is for Anyone who wants to explore and add knowledge about Arduino's"
      ]
    },
    {
      "title": "8086 Microprocessor | System Bus & Memory | Bharat Acharya",
      "url": "https://www.udemy.com/course/8086-basics-system-bus-memory-bharat-acharya/",
      "bio": "Address Bus, Data Bus, Control Bus, ALU and Memory",
      "objectives": [
        "Engineering Students",
        "GATE and other entrance exam aspirants",
        "Placement interview prepration",
        "Embedded System Developers"
      ],
      "course_content": {},
      "requirements": [
        "A will to learn, that's all!"
      ],
      "description": "8086 is a 16-bit microprocessor.\nIt is one of the most widely learnt microprocessors in the world.\nIn this course you will get the beginner's clarification about the following aspects\n\n\n1) Address bus of 8086\nYou will understand how the 20 bit address bus leads to 1 MB of memory\n\n\n2) Data bus of 8086\nYou will understand how the 16 bit data bus makes 8086 much faster than 8085\n\n\n3) ALU of 8086\nYou will understand how the 16 bit ALU classifies 8086 as a 16 bit microprocessor\n\n\n4) Control Signals M/IO#, RD# and WR#\nYou will understand how these signals decide the machine cycles to be performed\n\n\n5) Memory accessed by 8086\nYou will understand memory addresses and the little endian rule to store data\n\n\nAll lectures are taught by Bharat Acharya\nThe PDF provided along with the course contains full description of the topics.\nFor any further doubts you are adduced to mail the tutor Bharat Acharya at the following email ID or on my given contact information. Will be happy to assist.\n\n\n----------\nMy other courses on UDEMY...\nBasic Course: Introduction to microprocessors\n8051 Introduction: Introduction to 8051 Microcontroller\n8051 Architecture: Detailed study of 8051 Architecture\n8085 Multiple Choice Qs: Nearly 100 solved multiple choice questions and answers for exam preparation",
      "target_audience": [
        "Engineering Students"
      ]
    },
    {
      "title": "How to disassemble, clean, upgrade & build laptop computer",
      "url": "https://www.udemy.com/course/how-to-disassemble-clean-upgrade-build-laptop-computer/",
      "bio": "Computer repairing, hardware upgrade, build computer, build your own pc, computer building, pc building, build computer",
      "objectives": [
        "How to disassemble and assemble laptops;",
        "How to professionally clean laptops and their motherboards,",
        "Learn laptop motherboard parts and components,",
        "How to upgrade the laptop motherboard for better performance",
        "Learn how to maintain your laptop in good state;",
        "Learn how to add thermal compound to the CPU, GMCH and graphic card;",
        "Learn many tips and tricks about laptop repairing."
      ],
      "course_content": {},
      "requirements": [
        "No experience needed, I will teach everything step by step."
      ],
      "description": "9 Reasons why you should choose this course\nThe course will teach you How to disassemble, clean, upgrade & build laptop computers step by step.\nThe course is created with perfect care by a computer engineer;\nThe course is not long so you can complete it in a short time;\nYour inquiries will be answered in a short time with a full explanation of any question;\nA certificate will be provided upon completion of the course;\nYou are going to understand everything you need to know about how to maintain your laptop;\nYou are going to learn how to disassemble any laptop whatever its type,\nYou are going to learn how to upgrade your laptop motherboard for better performance;\nI'm going to teach you how to assemble and build laptop computers step by step and much more.\nTopics that we will be discussing in this course are :\nHow to disassemble, clean, upgrade, and build laptop computer;\nHow to assemble DUO 2 CORE laptop step by step;\nHow to assemble an I7 laptop step by step;\nHow to upgrade the CPU or the Processor for the laptop;\nHow to upgrade the RAM for the laptop;\nHow to upgrade the storage for the laptop;\nHow to upgrade the BIOS for the laptop and much more.\nI'm also going to teach you many tips and tricks that will make you a hardware professional with a deep understanding of motherboard repair.\nI will guide you step by step with an easy explanation of this course.\nIf you are interested in one of the points we discussed before, this course is for you.\nSo what are you waiting for?\nEnroll now and join us.\nI'd love to see you in the class.",
      "target_audience": [
        "Hardware students and technicians;",
        "Anyone who want to learn how to maintain and repair their own laptop."
      ]
    },
    {
      "title": "iPhone 7 Motherboard Repair Course",
      "url": "https://www.udemy.com/course/iphone-7-motherboard-repair-course/",
      "bio": "iPhone 7 Motherboard Repair Course (Circuit Working Process And Troubleshooting Process Learning)",
      "objectives": [
        "You'll know the iPhone 7 motherboard components distributions and functions",
        "You'll know exactly how each function circuit (display, touch, charging, Wi-Fi, etc.) works",
        "You'll have an idea about the issue troubleshooting process",
        "You'll have a better understanding about how to use the bitmap and schematic"
      ],
      "course_content": {
        "iPhone 7 Boot Circuit": [
          "iPhone 7 Boot Circuit",
          "iPhone 7 Boot Circuit Diagnosis and Maintenance"
        ],
        "iPhone 7 Display/Backlight And Touch Circuit": [
          "iPhone 7 Display Circuit",
          "iPhone 7 Backlight Circuit",
          "iPhone 7 Touch Circuit"
        ],
        "iPhone 7 Touch ID and Home Button Circuit": [
          "iPhone 7 Touch ID & Home Button Circuit"
        ],
        "iPhone 7 Camera And Flash Circuit": [
          "iPhone 7 Front Camera Circuit",
          "iPhone 7 Rear Camera Circuit",
          "iPhone 7 LED Flash Circuit"
        ],
        "iPhone 7 USB and Charging Circuit": [
          "iPhone 7 USB Circuit",
          "iPhone 7 Charging Circuit"
        ],
        "iPhone 7 Audio And Vibrator Relevant Circuits": [
          "iPhone 7 Microphone Circuit",
          "iPhone 7 earpiece Speaker Circuit",
          "iPhone 7 Bottom Loudspeaker Circuit",
          "iPhone 7 Vibrator Circuit"
        ],
        "iPhone Wi-Fi and Bluetooth Circuit": [
          "iPhone 7 Wi-Fi Circuit",
          "iPhone 7 Bluetooth Circuit"
        ],
        "iPhone 7 NFC/SIM/Baseband Circuit": [
          "iPhone 7 NFC Circuit",
          "iPhone 7 SIM Circuit",
          "iPhone 7 Baseband Circuit"
        ]
      },
      "requirements": [
        "No repair experience required, and it's better to install the bitmap software like XZW, Refox, etc. in advance"
      ],
      "description": "In this course, you'll learn the working principle and troubleshooting process of the below circuits\nBoot Circuit\nDisplay Circuit\nBacklight Circuit\nTouch Circuit\nFront Camera Circuit\nRear Camera Circuit\nLED Flash Circuit\nWi-Fi Circuit\nBluetooth Circuit\nUSB Circuit\nCharging Circuit\nMicrophone Circuit\nSpeaker Circuit\nVibrator Circuit\nNFC Circuit\nSIM Circuit\nBaseband Circuit\n\n\nThe learning process\nFirst, for the chip level repair, we need to know the distribution of the components on the motherboard. It's just like a doctor should get familiar with the structure of the human body first, then the doctor can treat the disease.\n\n\nThen we'll learn the function of each chip and how the relevant circuit works. For example, for the display circuit, we should know the screen is connect with the motherboard via the display connector. Then after checking the schematic, find out the display connector and track each pin-related rail, we'll have an overview of the related chips, so it will be easy to know where is the power comes from and how the signals are transmitted.\n\n\nAfter we know the working principle, then it would be easy to do the troubleshooting. Just follow the principles of \"from the outside to inside\", \"from the accessories to the chip\", \"check cosmetic first, then measure diode value, check voltage...\"\n\n\nLast but not the least, after finding out the faulty component, remove or replace the faulty component with a new one.\n\n\nThe learning purpose\nThe course is based on the schematic of the iPhone 7.\nDuring the learning process, you'll need to follow the course and check the bitmap and schematic for hundred times.\nWhen completing the whole course, you'll get familiar with the bitmap, schematic, and block diagram... which would be very helpful to form the repair logic and the ability to research and self-learning. So that in the future, you will be able to repair even the newly released models.",
      "target_audience": [
        "Repair technicians and enthusiast"
      ]
    },
    {
      "title": "Microcontroller Embedded C Programming: Absolute Beginners",
      "url": "https://www.udemy.com/course/microcontroller-embedded-c-programming-absolute-beginners/",
      "bio": "Microcontroller Embedded C Programming: Absolute Beginners Certification Course",
      "objectives": [
        "Microcontroller Basics : Understanding the fundamental components and architecture of microcontrollers",
        "C Programming Fundamentals: Grasping the basics of C programming, including variables, data types, control flow, and functions.",
        "Peripheral Interaction: Configuring and utilizing GPIO pins for input and output operations.",
        "Interrupts and Timers: Understanding the importance of interrupts in real-time systems.",
        "Project-Based Learning: Applying theoretical knowledge to hands-on projects."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Programming embedded systems in C": [
          "Programming embedded systems in C",
          "Which processor should you use",
          "Which programming language should you use",
          "Which operating system should you use",
          "How do you develop embedded software"
        ],
        "Introducing the 8051 microcontroller family": [
          "Introducing the 8051 microcontroller family",
          "The external interface of the Standard 8051",
          "Clock frequency and performance",
          "Memory Issues",
          "8-bit family & 16-bit address space",
          "Interrupts",
          "Power consumption"
        ],
        "Hello Embedded World": [
          "Hello Embedded World",
          "Dissecting the program",
          "Creating and using a bit variable"
        ],
        "Reading switches": [
          "Reading switches",
          "Example Reading and writing bits (generic version)",
          "Example Reading switch inputs (basic code)"
        ],
        "Adding structure to your code": [
          "Adding structure to your code",
          "Object-oriented programming with C",
          "The Project Header (Main.H)",
          "The Port Header (Port.H)"
        ],
        "Meeting real-time constraints": [
          "Meeting real-time constraints",
          "Hardware delays using Timer 0 & 1",
          "The THx and TLx registers",
          "Why not use Timer 2",
          "Creating hardware timeouts"
        ],
        "Creating an embedded operating system": [
          "Creating an embedded operating system",
          "The basis of a simple embedded OS",
          "Introducing sEOS",
          "Using Timer 0 or Timer 1",
          "Alternative system architectures",
          "Stopping tasks",
          "Important design considerations when using sEOS"
        ],
        "Multi-state systems and function sequences": [
          "Multi-state systems and function sequences",
          "Example Traffic light sequencing",
          "Implementing a Multi-State (InputTimed) system"
        ],
        "Using the serial interface": [
          "Using the serial interface",
          "Asynchronous data transmission and baud rates",
          "Using the on-chip UART for RS-232 communications",
          "Memory Requirements"
        ]
      },
      "requirements": [
        "Access to Smart Phone / Computer",
        "Good Internet Speed (Wifi/3G/4G)",
        "Good Quality Earphones / Speakers"
      ],
      "description": "An embedded system is an application that contains at least one programmable computer (typically in the form of a microcontroller, a microprocessor or digital signal processor chip) and which is used by individuals who are, in the main, unaware that the system is computer-based. Use of embedded processors in passenger cars, mobile phones, medical equipment, aerospace systems and defence systems is widespread, and even everyday domestic appliances such as dishwashers, televisions, washing machines and video recorders now include at least one such device.\nThis course provides a ‘hardware-free’ introduction to embedded software for students who:\n● Already know how to write software for ‘desktop’ computer systems.\n● Are familiar with a C-based language (Java, C++ or C).\n● Want to learn how C is used in practical embedded systems.\nChapter 1 Programming embedded systems in C\nIntroduction\nWhat is an embedded system?\nWhich processor should you use?\nWhich programming language should you use?\nWhich operating system should you use?\nHow do you develop embedded software?\nConclusions\nChapter 2 Introducing the 8051 microcontroller family\nIntroduction\nWhat’s in a name?\nThe external interface of the Standard 8051\nReset requirements\nClock frequency and performance\nMemory issues\nI/O pins\nTimers\nInterrupts\nSerial interface\nPower consumption\nConclusions\nChapter 3 Hello Embedded World\nIntroduction\nInstalling the Keil software and loading the project\nConfiguring the simulator\nBuilding the target\nRunning the simulation\nDissecting the program\nAside: Building the hardware\nConclusions\nChapter 4 Reading switches\nIntroduction\nBasic techniques for reading from port pins\nExample: Reading and writing bytes\nExample: Reading and writing bits (simple version)\nExample: Reading and writing bits (generic version)\nThe need for pull-up resistors\nDealing with switch bounce\nExample: Reading switch inputs (basic code)\nExample: Counting goats\nConclusions\nChapter 5 Adding structure to your code\nIntroduction\nObject-oriented programming with C\nThe Project Header (MAIN.H)\nThe Port Header (PORT.H)\nExample: Restructuring the ‘Hello Embedded World’ example\nExample: Restructuring the goat-counting example\nFurther examples\nConclusions\nChapter 6 Meeting real-time constraints\nIntroduction\nCreating ‘hardware delays’ using Timer 0 and Timer 1\nExample: Generating a precise 50 ms delay\nExample: Creating a portable hardware delay\nWhy not use Timer 2?\nThe need for ‘timeout’ mechanisms\nCreating loop timeouts\nExample: Testing loop timeouts\nExample: A more reliable switch interface\nCreating hardware timeouts\nExample: Testing a hardware timeout\nConclusions\nChapter 7 Creating an embedded operating system\nIntroduction\nThe basis of a simple embedded OS\nIntroducing sEOS\nUsing Timer 0 or Timer 1\nIs this approach portable?\nAlternative system architectures\nImportant design considerations when using sEOS\nExample: Milk pasteurization\nConclusions\nChapter 8 Multi-state systems and function sequences\nIntroduction\nImplementing a Multi-State (Timed) system\nExample: Traffic light sequencing\nExample: Animatronic dinosaur\nImplementing a Multi-State (Input/Timed) system\nExample: Controller for a washing machine\nConclusions\nChapter 9 Using the serial interface\nIntroduction\nWhat is RS-232?\nDoes RS-232 still matter?\nThe basic RS-232 protocol\nAsynchronous data transmission and baud rates\nFlow control\nThe software architecture\nUsing the on-chip UART for RS-232 communications\nMemory requirements\nExample: Displaying elapsed time on a PC\nThe Serial-Menu architecture\nExample: Data acquisition\nExample: Remote-control robot\nConclusions\nChapter 10 Case study: Intruder alarm system\nIntroduction\nThe software architecture\nKey software components used in this example\nRunning the program\nThe software\nConclusions\nChapter 11 Where do we go from here\nIntroduction\nHave we achieved our aims?\nSuggestions for further study\nPatterns for Time-Triggered Embedded Systems\nEmbedded Operating Systems\nConclusions",
      "target_audience": [
        "Want to learn how C is used in practical embedded systems"
      ]
    },
    {
      "title": "Build your own ArmBot step by step using Raspberry Pi Zero",
      "url": "https://www.udemy.com/course/build-your-own-armbot-step-by-step-using-raspberry-pi-zero/",
      "bio": "Learn from the ground up to build your ArmBot and control it wirelessly",
      "objectives": [
        "Build your own ArmBot from the ground up",
        "Develop your technical skills through Python programming"
      ],
      "course_content": {
        "Introduction": [
          "What will you learn from this course",
          "Project concept and involved terminology",
          "Circuit diagram - Adding live and neutral wires (breadboard based)"
        ],
        "Testing L293D with single and dual motors": [
          "Controlling single motor using breadboard and L293D IC",
          "Circuit diagram - Controlling single motor (breadboard based)",
          "Source code - Controlling single motor using breadboard",
          "Circuit diagram - Controlling dual motors (breadboard based)",
          "Source code - Controlling the second motor",
          "Basic"
        ],
        "Degrees of freedom & ArmBot design": [
          "Understanding fabricated IC on PCB and degrees of freedom",
          "Hardware requirements",
          "Document - List of hardware requirements",
          "Hardware design & assembly",
          "Circuit diagram - Controlling all the four base motors of the bot",
          "Circuit diagram - Arm control",
          "Programming I"
        ],
        "Programming the base of the ArmBot": [
          "Understanding the code - Capturing the user input",
          "Understanding the code - Passing user defined input to control various motors",
          "Source code - Controlling the bot",
          "Real time demo - Controlling the Bot",
          "Programming II"
        ],
        "Programming the arm of the bot": [
          "Graphical User Interface using Tkinter",
          "Understanding the Code - GUI using Tkinter",
          "Understanding the code - slide-bar design",
          "Source code - Controlling the arm",
          "Source code - Additional servo motors",
          "Real time demo - Controlling the arm of the bot",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of mechanical engineering",
        "Familiar with Raspberry Pi and Python programming",
        "Basic knowledge of IoT is required for remote computing"
      ],
      "description": "This course is for anyone who is interested in building an amazingly cool and wirelessly controlled ArmBot.\nThe course requires basic knowledge of Mechanical Engineering, Electronics and Python programming. If you are new to Raspberry Pi, I would recommend you to enroll in my previous course “Introduction to Raspberry Pi,” which is also available on Udemy.\nIn this course, I will walk you through the steps of creating an ArmBot from the ground up. You will learn how a tiny device like the Raspberry Pi Zero can be used to build a fully functional robot which can be controlled wirelessly.\nI will also introduce you to the concept of H-bridge and how to reverse the polarity using the program. The L293D is a wonderful IC which can be programmed to control two distinct DC motors in different directions.\nYou will learn how a simple servo motor can be used to design a complex robotic arm in the simplest way. I will also teach you the concept of degrees of freedom and how to implement this in the current project.\nI have taken utmost care to explain robotics with minute details. By the end of this course, you will have the skills and confidence to build your own robot and program as per your requirement.\nSo what are you waiting for? Come, let’s make all this possible. I look forward to you joining this course.",
      "target_audience": [
        "The course is for advance learners who want to acquire the skills at the intersection of Mechanical Engineering,  Electronics and Programming",
        "Anyone who wants to explore the field of Robotics"
      ]
    },
    {
      "title": "Step-By-Step Guide on KingView SCADA (PLC-SCADA-7)",
      "url": "https://www.udemy.com/course/step-by-step-guide-on-kingview-scada/",
      "bio": "Practical Course with Examples",
      "objectives": [
        "You will be enriched with the latest technical knowledge related with the industrial automation.",
        "Students can establish their career in various manufacturing industries like Oil and Gas, Water/Waste Water Treatment, food & Beverages, Power Plants, Manufacturing Process, Chemicals and Pharmaceutical Industries, Power Generation, Automotive, Fabricated Metals, Packaging Process, Metals and Mining’s Aerospace, etc."
      ],
      "course_content": {
        "Overview of SCADA": [
          "Introduction of SCADA",
          "Why SCADA required? and Fundamental Principle of SCADA",
          "Features and Function of modern SCADA System"
        ],
        "Overview of Kingview SCADA": [
          "Introduction of Kingview SCADA Software",
          "How to make a new project in kingview Software?",
          "How to make a new picture in Kingview Software?"
        ],
        "Function of InTouch SCADA Software": [
          "How to work with Objects and Toolbar?",
          "What is Tag ?",
          "Different Types of Tag.",
          "How to create “Tag Name”?",
          "How to use SCADA Library “WIZARD”?",
          "How to use Break Cell/Symbol and Make cell/Symbol ?",
          "Working with Discrete Tag and Switches",
          "Working with Analog Tag and Slider"
        ],
        "Animation Links in SCADA System": [
          "Introduction of Animation Links",
          "Attributes Property",
          "Location and Size (Fill Property)",
          "Fill Property (Problem – 1)",
          "Fill property (Solution of Problem – 1)",
          "Location and Size (Zoom Property)",
          "Location and Size (Movement Properties)",
          "Movement Property (Horizontal)",
          "Movement Property (Vertical)",
          "Movement Property (Diagonal)",
          "Location and Size (Rotation Property)",
          "Rotation Property (Example)",
          "User Input(Discrete)",
          "User Input(Analog)",
          "User Input(String)",
          "Slider Property",
          "Special (Visibility or Hide Property)",
          "Special (Blink Property)",
          "Value Display (Discrete, Analog, String)"
        ],
        "Script writing": [
          "Introduction of Various Script types",
          "Introduction of Application and Picture Script",
          "How to write Application and Picture Script? Part - 1",
          "How to write Application and Picture Script? Part - 2",
          "Application and picture Script (“On Show” in software)",
          "Application and picture Script (“While Running” with Example)",
          "Examples of Script-1 (More Than One Output)",
          "Examples of Script-2 (OR Gate)",
          "Examples of Script-3 (EX-OR Gate)",
          "Example of Script-4 (Making a Clock by Script)",
          "Introduction to Data Change Script",
          "Creation of Timer Using Data Change Script",
          "Example of Data Change Script-1",
          "Example of Data Change Script-2",
          "Condition Script",
          "Hotkey script",
          "Relating Digital Tag with an Analog Tag by using Script",
          "Problem - 1 (6 – Light are one by one ON by one Switch)",
          "How to write Script of Problem – 1?",
          "Solution of Problem – 1 in Software",
          "Problem – 2 (Automatic Tank Filling)",
          "How to write Script of Problem – 2?",
          "Solution of Problem – 2 in Software"
        ],
        "Trends in SCADA System": [
          "Introduction of Trend",
          "Real Time Trends"
        ],
        "Alarm System": [
          "Introduction of Alarm System",
          "Analog Alarm (Over limit)",
          "Analog alarm (Deviation)",
          "Analog alarm (Rate of Change)",
          "Discrete value Alarm"
        ],
        "Recipe Management": [
          "Introduction of Recipe Manager",
          "Implementation of Recipe Manager"
        ],
        "SCADA Security": [
          "How to Encryption of Project?"
        ]
      },
      "requirements": [
        "Students are supposed to be familiar with Desktop/Laptop.",
        "No other prerequisites for this course, Because instructor will teach everything from scratch."
      ],
      "description": "Supervisory control and data acquisition (SCADA) is a control system architecture that uses computers, networked data communications and graphical user interfaces for high-level process supervisory management, but uses other peripheral devices such as programmable logic controllers and discrete PID controllers to interface to the process plant or machinery. The operator interfaces which enable monitoring and the issuing of process commands, such as controller setpoint changes, are handled through the SCADA computer system. However, the real-time control logic or controller calculations are performed by networked modules which connect to the field sensors and actuators.\nWe use the SCADA Technology to do so that the Industry Process can monitor and control the industrial process and we can Easy to continuous monitoring on process of the parameters of voltage, current, Pressure and flow etc. and Easy to online real-time control for closed loop and open loop processes, Automatic tasks of switching of transmission lines, Circuit Barkers etc. and Transmission and receiving of large amounts of data from field to control centres, which makes our works easy. The use of SCADA Technology increases production in the industry and energy is also saved.\nThis course will teach you step by step How to make a SCADA design & SCADA System to any industrial process Monitor and Control.",
      "target_audience": [
        "Students who are pursuing or having Masters/ Bachelor’s Degree /Diploma in EC/EE/EEE/EI Branches.",
        "Working Professionals are also invited to join this course to enhance their knowledge in Industrial Automation.",
        "Maintenance Engineers",
        "Application Engineers",
        "PLC Programmers"
      ]
    },
    {
      "title": "Home Security System using Raspberry Pi compute module 3",
      "url": "https://www.udemy.com/course/home-security-system-using-raspberry-pi-compute-module-3/",
      "bio": "Build your own home security system from the ground up",
      "objectives": [
        "Build their own home security system to safeguard their houses",
        "Detailed knowledge about all set of security sensors and used"
      ],
      "course_content": {
        "Introduction": [
          "What will you learn from the course",
          "Introduction to Home Security System",
          "Hardware Requirements",
          "List of Hardware Requirements",
          "Basic"
        ],
        "Programming the LCD displays": [
          "Changes in circuit diagram of 20x4 LCD",
          "Understanding the circuit assembly of 20x4 LCD",
          "Image of the circuit diagram of 20x4 LCD",
          "Understanding the code of 20 cross 4 LCD",
          "Real time demonstration",
          "Source Code of 20x4 LCD",
          "Changes in circuit diagram of 16x2 Grey LCD",
          "Understanding the circuit assembly of 16x2 LCD - Grey",
          "Image of the circuit diagram of 16x2 LCD - Grey",
          "Understanding the code of 16x2 LCD - Grey",
          "Real time demonstration 16x2 LCD - Grey",
          "Source code of 16x2 LCD - Grey",
          "Connecting 16x2 LCD - Green to remaining pins",
          "Image of the circuit diagram of 16x2 LCD - Green",
          "Source code of 16x2 LCD - Green",
          "Hardware"
        ],
        "Programming the sensors and output device": [
          "Understanding the connection of sensors and the output devices",
          "Circuit diagram for connecting sensors & the output devices",
          "Source code explanation",
          "Real time demonstration",
          "Home security complete source code",
          "Servo motor source code",
          "Programming"
        ],
        "Programming the 4x4 matrix keypad": [
          "Understanding the 4x4 matrix keypad",
          "Circuit diagram of 4x4 matrix keypad",
          "Understanding the source code",
          "Real time demonstration",
          "Source code of 4x4 matrix keypad",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of working with Raspberry Pi",
        "Familiar with Python programming and Linux commands"
      ],
      "description": "This course is for anyone who is interested in exploring the physical computing capabilities of the newly released Raspberry Pi compute module 3. The course requires basic knowledge of Linux commands and Python programming. If you are new to compute module, I would recommend you to enroll in my previous course “Raspberry Pi compute module 3 - From Novice to Professional,” which is also available on Udemy.\nIn this course, I will guide you how to harness the power of compute Module 3 and use most of its GPIO pins to interact with a different set of sensors. We will be using around 45 GPIO pins which is much more compared to 26 GPIO pins of Raspberry Pi 3.\nI will introduce you to a different set of LCD screen which can be programmed as per our requirements to display sensor readings upon intrusion.\nI will also teach you how to build a complete home security system to safeguard your property and valuable assets. Home security systems are a must in every home regardless of its size, location, and value, among other factors. Keep in mind that burglars, thieves, and trespassers will not be too choosy about their targets, as long as these homes can be broken into via a window, a vent or a door. Even a simple three-layer alarm system can deter trespassers from violating the privacy of your home and putting your family’s life in danger.\nSo what are you waiting for? Come, let’s make all this possible. I look forward to you joining this course.",
      "target_audience": [
        "Anyone who wants to explore Raspberry Pi compute module 3",
        "If the idea is to come out with a large project and go beyond 26 pins of Raspberry Pi 3 and connect more number of sensors",
        "Anyone who wants to implement security system with all types of sensors",
        "Anyone who wants to understand functionality and programming of different types of LCDs"
      ]
    },
    {
      "title": "PIC Microcontrollers Timer and Watchdog Timer",
      "url": "https://www.udemy.com/course/pic-microcontrollers-timer0-watchdog-timer-advance-picmicrocontroller/",
      "bio": "Move to the next level in PIC Microcontroller Programming using Register Manipulation to control Time in your Projects",
      "objectives": [
        "What are Timers",
        "What is Timer0",
        "What is the difference between Timer0, Timer1 and Timer2",
        "How to Interrupt the PIC when the timer overflows",
        "How to deal with timer register",
        "How to implement Delay using Timers instead of Delay Function",
        "Why you shouldn't use the Delay Function and how it affects your PIC Microcontroller based project",
        "What is a Watchdog Timer",
        "How watchdog Timer can help save your life! and why it's used in very critical real-time projects?",
        "How to deal with Watchdog Timer",
        "Why Timers are an essential Peripheral",
        "Practical Application Examples",
        "How to use the Time and Timer Registers in PIC Microcontrollers.",
        "how to use these features to control time in your projects.",
        "How to configure the timer and watchdog timer on the PIC16F that you are using.",
        "How to use the timer and watchdog timer in your projects."
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in PIC Microcontroller",
        "A Will to apply, not just watch"
      ],
      "description": "Welcome to this course.\nThis course will teach you how to deal with PIC Microcontroller Timers and Watchdog Timer Programming using Register Manipulation to control Time in your Projects instead of the newbie delay function.\nWe often use the famous delay function when we need to add a delay in our application, but do you really know what calling the delay function does to your app in the background?\nMost seasoned programmers avoid using the delay function for a number of reasons that we will go over in this course. We will also describe in a methodical manner how to read the Microchip PIC microcontroller datasheet to obtain the clock information that we want.\nWatchdog timers are an incredibly helpful tool to implement in your real-time sensitive apps. You probably heard about its existence, but do you know why it's well worth implementing it into your PIC Microcontroller projects?\nThis course will discuss the functions and uses of the timer and watchdog timer. Followers of this course will learn about these features and their specific purposes in designing a project. The course will also provide guidance on how to use them.\nWhat you'll learn in this course:\nWhat are Timers\nWhat is Timer0\nWhat is the difference between Timer0, Timer1, and Timer2\nHow to Interrupt the PIC when the timer overflows\nHow to deal with timer register\nHow to implement Delay using Timers instead of Delay Function\nWhy you shouldn't use the Delay Function and how it affects your PIC Microcontroller based project\nWhat is a Watchdog Timer\nHow Watchdog Timer can help save your life! and why it's used in very critical real-time projects?\nHow to deal with Watchdog Timer\nWhy Timers are an essential Peripheral\nPractical Application Examples\nWhy you should take this course?\nYou will learn how to use the Watchdog Timer and the Timer/Counter 0 Interrupts to create a timer that can be used for many different types of applications. You can control Time in your projects using PIC Microcontrollers. Save time in your projects by using this Free PIC Microcontroller Programming Tool to control Time in your Projects.\nAfter taking this course, I can assure you that you will treat everything related to Timers and Delays in PIC Microcontroller in a totally different way.\nUser Testimonials and Social Proof\n\"This course was a game-changer for my projects. It provided practical insights into timers and watchdog timers that I hadn't found elsewhere.\" - Alex M.\n\"The detailed explanations and practical examples made this course invaluable for anyone working with PIC Microcontrollers.\" - Sophia L.\nAn Author Bio Showing Off Credentials\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nA Single Powerful CTA\nEnroll now and start mastering PIC Microcontroller Timers and Watchdog Timers today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nWhat are Timers and their importance\nHow to configure Timer0, Timer1, and Timer2\nImplementing delays using timers\nUnderstanding and using Watchdog Timer\nPractical applications and examples\nWho Is This Course For\nAnyone interested in learning about PIC Microcontrollers\nBeginners with no prior experience in microcontroller programming\nEngineers and hobbyists wanting to enhance their skills\nStudents and professionals looking to improve their knowledge\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "PIC Microcontroller  Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning New Things about PIC Microcontroller",
        "Anyone Interested in Learning PIC Microcontroller Timer Registers and how to use them",
        "The course is designed for people who are new to the use of the timer and watchdog timer in their projects.",
        "t is also for people who intend to make their own custom devices."
      ]
    },
    {
      "title": "Raspberry Pi Robotics",
      "url": "https://www.udemy.com/course/raspberry-pi-robotics/",
      "bio": "Learn how to program L239D IC and ride the robot in different directions.",
      "objectives": [
        "Learn how to connect L239D integrated circuit to the GPIO pins of Raspberry Pi.",
        "Get to know how to use the concept of dual H bridge and run the motor in different directions.",
        "Learn how to capture keyboard key stroke using Python programming.",
        "Learn to Code using Python programming and control the robot wirelessly."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Python programming.",
        "Basic knowledge of handling Raspberry Pi."
      ],
      "description": "After creating a successful intermediate course on IoT, We are back with another stunning course that will take your intermediate coding skills to the advance level. Raspberry Pi Robotics is ideal for those who are inquisitive in exploring the possibilities of IoT using Raspberry Pi 2. The course assumes basic knowledge of computer hardware and software. However, knowledge of Python programming will help you in getting up to speed.\nYou will learn how to connect L239D Integrated circuit to the GPIO pins of Raspberry Pi and control the DC bo motor. You will code the integrated circuit to rotate the motor in different directions and accept the user keyboard input to run the robot in user defined space. Implementation of IoT through Python programming will make the device remotely accessible. If you are a technology enthusiast and want to learn the cutting edge technology then this is the right course for you.\nThe course provides the complete source code of the real time project.\nThe entire course can be completed over a fortnight, including the hardware assembly and coding in Python programming.\nBy the end of this course, you will have fundamental knowledge about building a basic robot using Raspberry Pi 2 and control it remotely.\nWhat are you waiting for? Enroll now!",
      "target_audience": [
        "This is an advance course on Raspberry Pi 2 meant for those who want to explore the possibilities of robotics using the mini kit."
      ]
    },
    {
      "title": "Chiplevel Laptop Display Repair Course: Fix No Screen Issues",
      "url": "https://www.udemy.com/course/chiplevel-laptop-no-screen-display-repair-full-course/",
      "bio": "Chip level Motherboard Repair With Schematic: No Display, No Backlight Black Screen Solutions for MacBook & Window",
      "objectives": [
        "In this course you will learn how to diagnose laptops that turn on without display on the screen like a pro, weather flashing capslock lights or beeping sounds",
        "You will learn how to fix laptops that turn on without display dues to fault or corrupt Bios",
        "You will learn how to troubleshoot and repair fault Onboard RAM in Windows and MacBook laptops",
        "You will learn how to use basic and advanced tools like multimeters, soldering station, soldering iron, power supply and many other tools effectively",
        "You will learn the tricks used to fix motherboards easily using old motherboard components",
        "You will learn how to repair all computer brands following step by step guide in this course recorded on real client computers and apply them in your situations"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to Diagnose & Repair Laptop RAM Display Issues",
          "How to Diagnose & Repair Backlight, OnBoard RAM and Graphics Display Issues",
          "How to Diagnose & Repair Bios Firmware and CMOS Battery Display Issues",
          "How to Diagnose & Repair Screen VDD Voltage and Fault Component Display Issues",
          "How to Diagnose & Repair Fault Screen and Screen Cable Display Issues in Laptop",
          "How to Diagnose & Repair Fault Screen Sleep Sensor Display Issues in Laptops",
          "Tips and Tricks to guide you when Diagnosing No Display Laptop Issues",
          "How to Interpret Blinking Lights Codes no Display Laptops"
        ],
        "How to Diagnose and Fix Laptops that Turn on with No Screen Backlight": [
          "How to Diagnose and Fix Laptops that turn on but don't have screen light",
          "How to Dissamsemble Laptop Touch Screens without Breaking",
          "How Does a Screen Backlight Circuit Work and How to Repair it",
          "How to Unsolder and Replace Screen Fault Fuse",
          "How to Assemble Back Laptop Touch Screen Professionally after Repair"
        ],
        "How to Diagnose and Repair Display Issues in MacBook Due to Fault Backlight Chip": [
          "How to Diagnose and Fix Black Screen Issues in MacBooks Part 1",
          "Symptoms that can Help you Easily Identify the Problem Part 2",
          "How to Safely Disassemble MacBook Motherboards Part 3",
          "How to Use Visual Observation Method to Identify Fault Components Part 4",
          "Introduction to How Backlight ICs Work",
          "How Backlight Chips are Designed in MacBook vs Windows Laptop Motherboard Part 5",
          "How to Identify Backlight ICs in Different Motherboard Part 6",
          "How to use Schematics Diagrams to Identify Backlight Chips on Motherboard Part 7",
          "How Backlight Chips Work Practically Part 8",
          "How to Diagnose Fault Backlight ICs Part 9",
          "Where to get Backlight Replacement ICs Part 10",
          "How to Replace Backlight Chips on the Motherboard Part 11",
          "Testing the Motherboard after Replacing the Chip Part 12",
          "Final Words and Assembling the Laptop Back Part 13"
        ],
        "How To Diagnose and Repair Laptops that dont Display Due to Fault OnBoard RAM": [
          "Intoduction to Diagnosig and Repairing no Display Issue Due to Fault OnBoard RAM",
          "How to Disassemble MacBook Pro 2015 Model A1502",
          "Checking the Voltages of a Fault OnBoard RAM Motherboard Part 3",
          "Introduction to How to Dissable Laptop OnBoard RAM",
          "How to Repair Fault OnBoard RAM Using Second Method Part 4",
          "Methods of Dissabling Laptop OnBoard RAM",
          "How to Dissable OnBoard RAM Using Hardware Method Part 1",
          "How to Physically Dissable OnBoard RAM Using Hardware Method Part 2",
          "How to Locate OnBoard RAM Configuration Table in Different Schematics Diagrams",
          "Intro How to Dissable OnBoard RAM Using Software Method",
          "How to Identify Bios Chips on the Motherboard",
          "How to Dissable OnBoard RAM Chips from Bios Bin File Using Desktop Tool"
        ],
        "How To Diagnose and Fix Missing Screen VVD Voltage in Laptops": [
          "Part 1. How to fix display issues in laptop motherboards",
          "Part 2. How to troubleshoot 3.3VDD Screen power chip",
          "Part 3. How to unsolder and replace fault 3.3VDD Screen Power IC",
          "LCD Screen VDD and other Voltages to Check on the Screen Connector"
        ],
        "How to Diagnose and Repair Laptops that dont Display due to Fault Bios": [
          "Symptoms of a Corrupt Laptop Bios",
          "Which Programmer to Use and How to Identify Bios IC",
          "How to UnSolder Bios Chips off the Motherboard",
          "How to Use Bios Adapter and Programmer to Read Bios BackUp Files",
          "How to Use Motherboard and Model Number to get Replacement Bios File",
          "How to Programme Bios Chip and Solder it Back on the Motherboard"
        ],
        "How to Diagnose and Fix No Display Due to Fault Graphics Card": [
          "How to Fix How to Repair Laptops that dont Display Due to Fault Graphics Card",
          "How to Fix Fault AMD Radeon Graphics Using Second Method",
          "How to Dissable OnBoard Graphics Card"
        ]
      },
      "requirements": [
        "Basic understanding of schematics digrams is an advantage although not a must",
        "Basic understanding of electronics fundamentals will help in undestanding advanced concepts",
        "Introduction section covers beginner lessons and advanced lectures are covered in the following sections"
      ],
      "description": "Master Chiplevel Laptop Repair: No Display & Black Screen Fixes for MacBook & Windows\nLaptop turns on but nothing shows up on the screen, whether due to no display, no backlight, or black screen these are among the most common and challenging motherboard issues. This course provides a detailed, hands-on approach to diagnosing and repairing these faults at the chiplevel using schematics and real-world troubleshooting techniques.\nWhat You’ll Learn:\n1. Diagnosing No Display Issues\nRAM-related display problems and how to fix them\nBacklight, onboard RAM, and graphics card display troubleshooting\nBIOS firmware corruption and CMOS battery failure diagnostics\nFaulty screen cables, connectors, and display voltage issues\n2. Fixing Laptops That Power On With No Backlight\nUnderstanding how backlight circuits work\nReplacing faulty backlight ICs and fuses\nDisassembling and assembling laptop touch screens professionally\n3. MacBook-Specific Black Screen Repairs\nIdentifying and replacing faulty backlight chips\nUsing schematics to locate components\nPractical motherboard diagnostics and IC replacement\n4. Repairing Onboard RAM Display Issues\nDiagnosing and reflowing faulty onboard RAM\nUnderstanding software and hardware-based RAM disable methods\nWorking with BIOS bin files to configure RAM settings\n5. Fixing Missing Screen Voltage (VDD) Issues\nTroubleshooting 3.3VDD power chips\nReplacing faulty screen voltage ICs\n6. Repairing No Display Issues Due to BIOS Failure\nIdentifying symptoms of a corrupt BIOS\nUsing a programmer to extract, modify, and reflash BIOS files\nSoldering and replacing BIOS ICs\n7. Diagnosing & Repairing Graphics Card Issues\nFixing laptops with faulty discrete graphics cards\nReflowing and disabling onboard graphics as a repair method\nWho This Course Is For:\nLaptop repair technicians who want to advance their skills\nEngineers and IT students interested in motherboard-level repair\nTech hobbyist interested in understanding how computers work\nAnyone looking to fix no display, no backlight, or black screen issues professionally\n\n\nThis course is designed to be practical and to the point, focusing on real-world troubleshooting techniques that will help you solve these issues effectively.\nEnroll now and start mastering laptop motherboard repairs today!",
      "target_audience": [
        "This course is for laptop repair technicians who want to advance their motherboard repair skills",
        "Phone repair technicians who want to include laptop repair services to their clients",
        "IT and Computer science students who would like to understand how computers work on a chiplevel",
        "Software Engineers and developers who want to understand how hardware components work on advanced level",
        "Electrical and Electronic Engineers & students interested to learn how motherboards work in details",
        "Anyone interested in fixing computers and their display problems"
      ]
    },
    {
      "title": "Basic Codesys PLC programming in Structured Text",
      "url": "https://www.udemy.com/course/basic-codesys-plc-programming-in-structured-text/",
      "bio": "Learn Codesys basics in 2 hours",
      "objectives": [
        "Basic PLC programing in Codesys",
        "Structured Text programming in Codesys for PLC",
        "Visualization creation for industrial automation projects",
        "IF, CASE, FOR, WHILE statements for PLC"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Codesys software installation",
          "Get support on our Discord chat",
          "What is Codesys and ST programming language"
        ],
        "First program and visualisation": [
          "Intro to first program in Codesys",
          "First ST program",
          "Codesys basic quiz",
          "Simple visualization in Codesys",
          "Homework assignment - OR logic gate and modify visu"
        ],
        "Variables in Codesys for PLC": [
          "Intro to variables section",
          "Memory units, variable and constant definition",
          "BOOL variable declaration in Codesys",
          "Integer variables - introduction",
          "Integer variables - exceeding the range",
          "Notation in number system",
          "Real variables",
          "Arrays",
          "Structured type",
          "Enumeration type",
          "Local and global variables",
          "Variables - Knowledge Quiz",
          "Variables Homework"
        ],
        "Operators in Codesys and Structured Text": [
          "Intro to operators",
          "Assignment operator",
          "Arithmetic operators",
          "Comparison operators",
          "Operator Priorities (1:46)",
          "Operators quiz",
          "Operators - homework assignment"
        ],
        "Flow control in Codesys and Structured Text": [
          "Flow control intro",
          "IF statement",
          "IF, ELSIF, ELSE statement",
          "CASE…OF statement",
          "FOR loop",
          "Quiz - IF, CASE, and FOR instructions"
        ],
        "Summary": [
          "Summary of the course"
        ]
      },
      "requirements": [
        "No PLC  programming experience needed. You will learn everything you need to know"
      ],
      "description": "The \"Basic PLC Structured Text Programming in CODESYS\" course by ControlByte is an online training program designed to teach participants how to program PLCs using the Structured Text (ST) language within the CODESYS environment. This course comprises practical video lessons, about 2 hours of content, and caters to both beginners and intermediate programmers.\nBenefits of Enrolling in This Course:\nAccess to practical video lessons.\nOpportunity to test your programs using a free PLC simulator.\nSupport from instructors via Discord chat.\nAssignments for hands-on practice.\nAcquisition of skills that are in demand in the European and wordlwide job market.\nCourse Curriculum Highlights:\nProgram Flow Control:\nConditional statements: IF…ELSIF…ELSE.\nLoops: FOR…DO, WHILE…DO, and REPEAT…UNTIL.\nSelection statements: CASE…OF.\nPractical exercises and direct interaction with the instructor.\nPump Station Project:\nDeveloping a control algorithm for a pump station.\nCreating function blocks for manual and automatic modes.\nSimulating processes using a PLC simulator.\nDesigning a web-based visualization.\nUtilizing arrays and data structures.\nImplementing FOR and WHILE loops.\nApplying IF…ELSE and CASE…OF instructions.\nVisualization in CODESYS:\nIncorporating basic elements such as lights, buttons, and actuators.\nManaging alarms and animations.\nAccess to downloadable visualization templates.\nDisplaying web visualizations in a browser.\nUploading visualizations to HMI panels.\n\n\nAdditional Information:\nTo complete the course, the free CODESYS simulator is sufficient. The course provides guidance on configuring physical PLCs. By joining this course, you gain a skill highly valued by employers, receive lifetime access to the content, and can test your code using the free PLC simulator. No additional hardware is required—only your laptop. The course has been validated by hundreds of students who have followed this learning path.\nFor a visual introduction to Structured Text programming in CODESYS, you might find the following tutorial helpful:\nCODESYS tutorial on Structured Text (ST) PLC programming",
      "target_audience": [
        "Beginner PLC developers curious about programming in Codesys and Structured text"
      ]
    },
    {
      "title": "Comprehensive Course in Automated Industrial Control",
      "url": "https://www.udemy.com/course/automation-industrial-control/",
      "bio": "Learn from scratch until professionalism - Classic Industrial Control and Programmable Logic Control",
      "objectives": [
        "The concept of electrical control and its types",
        "Electrical circuits and control elements",
        "Working principle of classical industrial control",
        "Electrical symbols used and methods for drawing circuits",
        "Components of classic industrial control circuits",
        "Loads and electric motors",
        "Circuits of industrial classic control for operating electrical machines",
        "Connecting and operating control circuit for 1 phase motor",
        "Connecting and operating control circuit for 3 phase motor",
        "Connecting and operating control circuit for 3 phase motor in two different rotation directions",
        "Connecting and operating control circuit for 3 phase motor in two different rotation directions to move an object over a specified distance",
        "Connecting and operating control circuit for 3 phase motor by Star Delta method",
        "Connecting and operating control circuit for 3 phase motor in two different rotation directions by Star Delta method",
        "Connecting and operating control circuit for",
        "Connecting and operating control circuit for automatic transfer between two electrical sources ( grid - generator)",
        "Programmable logic control working principle ( PLC )",
        "Programmable logic control components",
        "Features, types and specifications of programmable logic controllers"
      ],
      "course_content": {},
      "requirements": [
        "White board or notebook for drawing electrical symbols and circuits",
        "Download a program for drawing electrical circuits ( Circuit Shop )",
        "Practical laboratory for assembling, connecting and operating control panels"
      ],
      "description": "The comprehensive course for the most important industrial control operating systems from scratch to professionalism with a comprehensive number of training lectures.\nIn this course, you will learn in detail the concept of electrical control, electrical control elements, symbols, reading diagrams, the principle of traditional industrial control work (classic control), in addition to the components of classic industrial control, and I will explain in detail scientifically and practically the principle of their work, installation and operation including power circuits and control circuits, which perform a specific task or several tasks, and which are important to install in the operation of factories, companies, and commercial establishments, where we show them to you with sound, image, and movement, as if you were in a practical laboratory.\nIn this course, I will introduce you to the concept of PLC programmed logic control, the working principle of manufactured devices, their components, and methods of programming them to operate circuits in factories and production lines.\nThe course targets all those interested in the field of electricity and automatic control systems, including engineers, technicians, workers and others. I attend all the videos and I am ready to answer all your questions and inquiries.\nIndustrial control includes electrical installations, but is currently moving towards automated installations. This requires a wide range of technical skills, including wiring and cable piping, tools, devices, and control posts. The specialist in this field must be able to design circuits, program PLCs, adjust transmission system parameters, and set up interactive interfaces.",
      "target_audience": [
        "People who are interested in automated control systems and factory operating systems.",
        "Specialists, Engineers and Electrical workers."
      ]
    },
    {
      "title": "Introduction to Electronics Manufacturing Process",
      "url": "https://www.udemy.com/course/introduction-to-electronics-manufacturing-process/",
      "bio": "Master the core processes in electronics manufacturing: SMT, PCB assembly, quality control, and logistics.",
      "objectives": [
        "Introduction to Electronics Manufacturing",
        "Component Sourcing and Procurement",
        "Understanding the supply chain in electronics manufacturing",
        "Surface Mount Technology (SMT) Process",
        "Through-Hole Technology (THT) Process",
        "Quality control techniques in SMT: Inspection and testing",
        "Automated testing systems and techniques",
        "Types of testing in electronics manufacturing: Functional, visual, in-circuit, and environmental testing",
        "Final assembly considerations: Mechanical enclosures, labeling, and instructions",
        "How to minimize defects and rework during production",
        "Understanding environmental regulations in electronics manufacturing",
        "The impact of automation and Industry 4.0 on manufacturing processes"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Market growth of Electronics manufacturing Industry",
          "Industries That Uses SMT Technology"
        ],
        "Electronics Components Introduction": [
          "SMD Components Introduction",
          "How to Select Right Electronics Components",
          "How to Procure Electronics Components"
        ],
        "Incoming Material - Receipt /Inspection /Storage": [
          "Incoming Material Receipt - Electronics Manufacturing",
          "Incoming Material Storage Management"
        ],
        "Production Planning and scheduling -Electronics Manufacturing": [
          "Production Planning -Electronics Manufacturing",
          "Production Scheduling -Electronics Manufacturing"
        ],
        "SMT -Surface Mount Technology Assembly Process": [
          "What is SMT?",
          "What is Solder Paste?",
          "SMT Process -Solder Paste Screen Printing",
          "SMT Process -Solder Paste Inspection (SPI)",
          "SMT Process -Component Mounting Pick and Place",
          "SMT Process - Reflow Soldering",
          "SMT Process - AOI Inspection"
        ],
        "THT -Through Hole Assembly Process": [
          "THT Assembly Process -Step by step",
          "THT -Manual Soldering Process"
        ],
        "Electronics Manufacturing -PCBA Conformal Coating Process": [
          "PCBA Conformal Coating Process"
        ],
        "Electronics Manufacturing -In process Quality Control": [
          "IPQC Process",
          "Electronics Manufacturing-In process Quality Checkpoints",
          "Electronics Manufacturing - IPQC -Non conformance",
          "Electronics Manufacturing- Soldering defects as per IPC-A-610 standard"
        ],
        "Electronics Manufacturing - Functional Testing /Environmental Testing": [
          "Electronics Manufacturing -Functional Testing (FCT)",
          "Electronics Manufacturing - Environmental Testing"
        ],
        "Electronics Manufacturing -Box Build /System Integration": [
          "What is Box Build /System Integration?"
        ]
      },
      "requirements": [
        "Basic Elelctronics"
      ],
      "description": "Are you curious about how electronic devices are actually built? Do you want to understand what happens inside a factory that assembles smartphones, medical devices, or industrial controllers?\n\n\nCourse Objective\nTo provide a comprehensive understanding of the end-to-end electronics manufacturing process, including surface mount and through-hole technologies, component sourcing, quality systems, and testing procedures used in modern production lines.\n\n\nWelcome to the Electronics Manufacturing Process course – a complete, beginner-friendly guide to the step-by-step journey of turning electronic components into finished products.\nWith 15+ years of industry experience, your instructor brings real-world insights from the electronics manufacturing floor. Whether you’re a fresh engineering graduate, a technician, or someone transitioning into electronics production, this course will equip you with the essential knowledge to understand and work in a modern electronics manufacturing environment.\nIntroduction to Electronics Manufacturing\n\nOverview of SMT (Surface Mount Technology)\nTHT (Through-Hole Technology) and Wave Soldering\nPCB Assembly Line Workflow\nComponent Handling, Storage & ESD Safety\nSolder Paste Printing and Reflow Soldering\nAutomated Optical Inspection (AOI), X-Ray, and ICT\nFunctional Testing and Quality Assurance\nFinal Assembly, Packaging & Dispatch\nUnderstanding Production Planning & BOM\nQuality Standards: IPC, ISO, and Industry Best Practices\n\n\nCareer Opportunities After This Course\nCompleting this course opens doors to a wide range of entry-level and mid-level roles in the electronics and semiconductor manufacturing industry. Whether you're a fresher or a working professional, the knowledge you gain can help you land a job or grow in your current role.",
      "target_audience": [
        "Basics Understanding and interest in Electronics manufacturing Industry",
        "Beginner Choosing Electronics manufacturing career"
      ]
    },
    {
      "title": "Getting Started with Raspberry Pi and LabVIEW",
      "url": "https://www.udemy.com/course/raspberry-pi-labview-getting-started-link-raspberry-pi-labview/",
      "bio": "You will learn how to connect Raspberry Pi and LabVIEW, the software and hardware part and why it's useful",
      "objectives": [
        "Link LabVIEW with Raspberry Pi",
        "Download and Install the Required Software",
        "Fully Control Your Raspberry Pi using LabVIEW",
        "Make your own LabVIEW Interface to Interact with Raspberry Pi",
        "Connect to Raspberry Pi Remotely without a display",
        "Install NI-VISA Library",
        "Install LabVIEW MakerHub LINX",
        "Setting Up the RPI",
        "Installing LabVIEW on the RPI",
        "Run an Example",
        "Adding New VIs"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Hardware and Software Requirements",
          "Integrating Raspberry Pi with LabVIEW",
          "Overview of Raspberry Pi and LabVIEW",
          "Summary",
          "Reading Material"
        ],
        "Download and Install Required Software": [
          "Section Intro",
          "Very Important Note: To Avoid Implementation Errors",
          "Before You Download Anything",
          "Download and Install LabVIEW",
          "Download and Install VISA and LINX",
          "Download and Install Operating System on Raspberry Pi",
          "Downloading and Installing Required Software",
          "Setting Up the Software Environment",
          "Summary",
          "Reading Material"
        ],
        "Raspberry Pi Hardware and Software Setup": [
          "Section Intro",
          "Raspberry Pi Hardware and Software Setup",
          "Setting Up Your Raspberry Pi",
          "Summary",
          "Reading Material"
        ],
        "Connect to Raspberry Pi": [
          "Section Intro",
          "Connect to Raspberry Pi Using Putty",
          "Connect to Raspberry Pi Using VNC",
          "Establishing Remote Connections to Raspberry Pi",
          "Summary",
          "Reading Material"
        ],
        "LabVIEW LINX Examples": [
          "Section Intro",
          "How to Get LabVIEW LINX Examples to Test the Environment",
          "Testing the LabVIEW LINX Environment",
          "Summary",
          "Reading Material"
        ],
        "Raspberry Pi Led Control Practical Example": [
          "Section Intro",
          "First Raspberry Pi Led Control Practical Example LabVIEW",
          "Practical Led Control Example",
          "Create Your Own VI to Control Raspberry Pi",
          "Raspberry Pi LED Control with LabVIEW",
          "Controlling an LED with Raspberry Pi and LabVIEW",
          "Summary",
          "Reading Material"
        ],
        "Digital Read and Write Example": [
          "Section Intro",
          "Create Digital Read and Write Example",
          "Reading and Writing Digital Signals with Raspberry Pi",
          "Summary",
          "Reading Material"
        ],
        "Resources": [
          "Installing Raspian operating system images",
          "Install Raspberry Pi OS using Raspberry Pi Imager",
          "NI-VISA"
        ],
        "LabVIEW Step by Step": [
          "Section Intro",
          "LabVIEW Step by Step Introduction",
          "What is LabVIEW",
          "Compare LabVIEW with traditional Tools",
          "LabVIEW Fundamentals Flow of data",
          "LabVIEW Basics and Data Flow",
          "LabVIEW Environment",
          "LabVIEW Environment - Continue",
          "Common Data Types",
          "LabVIEW Key Features",
          "LabVIEW Environment, Data Types, and Key Features",
          "Run LabVIEW",
          "Express VIs VIs and Functions",
          "Tools Palette and Status Toolbar",
          "First Example Creating VI",
          "Running LabVIEW, Express VIs, and Creating Your First VI",
          "Help Options",
          "Exercise 1 Convert C to F",
          "Debugging Techniques",
          "Sub VI",
          "Help Options, Debugging, and SubVIs in LabVIEW",
          "For Loop and While Loop",
          "Charts",
          "Arrays",
          "Loops, Charts, and Arrays in LabVIEW",
          "Building Your First LabVIEW VI",
          "Summary",
          "Reading Material"
        ],
        "Raspberry Pi Step By Step Beginner Guide": [
          "Section Intro",
          "Introduction and What you will get when you join",
          "Quick Intro To Raspberry Pi World",
          "10 Uses for Raspberry Pi Board",
          "Different Versions of Raspberry Pi",
          "Introduction to Raspberry Pi",
          "Raspberry Pi Components",
          "OS Versions Available for Raspberry Pi",
          "Arduino Vs Raspberry Pi Vs BeagleBone",
          "Course Material Works with any high tech board!",
          "Raspberry Pi Components, OS Versions, and Comparisons",
          "What do you need to Run The Raspberry Pi",
          "Getting OS and Running Raspberry Pi",
          "Setting Up Raspberry Pi for the First Time",
          "Simulating Raspberry Pi",
          "Setting Up and Running Raspberry Pi",
          "A tour inside Raspberry Pi Operating System",
          "Raspberry Pi Command Line",
          "Updating Software Packages",
          "Control Raspberry Pi from another Device using SSH",
          "Navigating Raspberry Pi OS and Remote Access",
          "Control Raspberry Pi from another Device using VNC Server",
          "Assign A fix IP Address for Raspberry Pi Board",
          "Connecting Raspberry Pi to another computer using Network Cable",
          "Programming GPIO with Python",
          "Advanced Raspberry Pi Connectivity and GPIO Programming",
          "Python and Your First Code",
          "Installing the Control Library",
          "Example 1 Blinking Led",
          "Example Two Reading Input Values From A Switch",
          "Python Basics and GPIO Control on Raspberry Pi",
          "Example Three Running the Led Using LDR",
          "Example Four PIR Motion Detector",
          "BCM Numbering instead of Numbering by Order",
          "Adafruit Protection Box and Connection Cable",
          "Advanced GPIO Projects and Hardware Management",
          "Exploring Raspberry Pi Capabilities",
          "Summary",
          "Reading Material"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch",
        "Basic experience in LabVIEW",
        "Basic experience in Raspberry Pi"
      ],
      "description": ">>>In this Course, you will learn how to connect Raspberry Pi and LabVIEW, the software and hardware part and why it's useful <<<\nWelcome to this course.\nThis Course will show you in a step-by-step manner how to connect the Raspberry Pi 2 Model B (RPI 2), Raspberry Pi 3 Model B (RPI 3), or Raspberry Pi 4 Model B (RPI 4) to LabVIEW using LabVIEW LINX. LINX is used to interact with common embedded platforms like Arduino, Raspberry Pi, Beaglebone Black, and others.\nLabVIEW is a graphical programming syntax that makes it simple to visualize, create, and code engineering systems. With the Raspberry Pi, you can deploy your LabVIEW VIs to the board and run with a computer to visualize your data or run headlessly. You can also set your VI to run on startup so that each time you power on the RPI, it will run your VI without a computer!\nYou will know what hardware and software configurations need to be done to make this interfacing work smoothly.\nWhy you should take this course?\nThis course will teach you how to connect Raspberry Pi and LabVIEW.\nRaspberry Pi is a small, low-cost computer that can be used for many tasks - it's easier to use than Arduino.\nYou'll learn the software and hardware of connecting Raspberry Pi with LabVIEW.\nIt's useful because of the wide range of applications it has.\nAfter this course, you will be able to make your own interfacing, and the choice is yours to use in any application that comes to mind since all connections and configurations are explained in detail.\nWhat you'll learn\nLink LabVIEW with Raspberry Pi.\nDownload and install the required software.\nFully control your Raspberry Pi using LabVIEW.\nMake your own LabVIEW interface to interact with Raspberry Pi.\nConnect to Raspberry Pi remotely without a display.\nInstall NI-VISA Library.\nInstall LabVIEW MakerHub LINX.\nSetting up the Raspberry Pi.\nInstalling LabVIEW on the Raspberry Pi.\nRun an example.\nAdding new VIs.\nMore practical examples and resources.\nBonuses:\nBonus 1: LabVIEW Step by Step.\nBonus 2: Raspberry Pi Step By Step for Beginners.\nWhat you will learn\nLink LabVIEW with Raspberry Pi.\nDownload and install the required software.\nFully control your Raspberry Pi using LabVIEW.\nMake your own LabVIEW interface to interact with Raspberry Pi.\nConnect to Raspberry Pi remotely without a display.\nInstall NI-VISA Library.\nInstall LabVIEW MakerHub LINX.\nSet up the Raspberry Pi.\nInstall LabVIEW on the Raspberry Pi.\nRun an example.\nAdd new VIs.\nAccess more practical examples and resources.\nWho is this course for\nBeginners interested in Raspberry Pi and LabVIEW.\nHobbyists and makers.\nEngineering students and professionals.\nAnyone looking to learn about connecting Raspberry Pi with LabVIEW.\nRequirements\nBasic understanding of electronics.\nA Raspberry Pi board.\nNo prior experience with LabVIEW or Raspberry Pi required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelance engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Electronics Geeks",
        "LabVIEW Geeks",
        "Raspberry Pi Geeks",
        "Anyone Interested in Learning New Things about LabVIEW",
        "Anyone Interested in Learning New Things about Raspberry Pi",
        "Anyone Interested in Learning How to Control Raspberry Pi using LabVIEW"
      ]
    },
    {
      "title": "Arduino Basics: For Absolute Beginners 2025",
      "url": "https://www.udemy.com/course/arduino-basics-for-absolute-beginners/",
      "bio": "The Beginners Guide to Better Understanding of Arduino Development Systems",
      "objectives": [
        "You will Learn the Basics of Arduino Step by Step",
        "You will learn How to Program Arduino Board",
        "You will Learn How to Build Arduino Projects from Scratch",
        "You will Learn the Foundation of Electronics for Arduino Environment",
        "You will Learn How to Read Schematic Diagrams for Arduino Projects"
      ],
      "course_content": {
        "Introduction": [
          "To Whom is This Course For?",
          "How this Course will Benefit You?",
          "How to Maximize Learning in this Course",
          "Can I Start without the Electronics Parts?",
          "What are the Preparation Needed for Actual Projects"
        ],
        "Getting Started with Arduino Uno R3": [
          "Three Major Keys in Learning Arduino Systems Faster",
          "Why Learn Arduino?",
          "What is an Arduino Board?",
          "Arduino Uno R3 Parts and Specification",
          "The Arduino Uno R3 Actual Board"
        ],
        "Getting Started with the Basic Electronics for Arduino": [
          "What Powers Electronics Devices?",
          "The Difference Between Electricity and Electronics",
          "How Things Work in Electrical System and Electronics",
          "Introducing the Arduino Simulators",
          "Basic LED Circuit",
          "Simulating the Basic LED Circuit",
          "The Actual Components for the Basic LED Circuit",
          "Building Our LED Circuit",
          "What is Short Circuit",
          "Simulating Basic LED with Switch",
          "LED Circuit with a Switch Actual"
        ],
        "Setting Up Your Arduino Environment": [
          "Downloading and Installing the Latest Arduino IDE",
          "The Arduino IDE User Interface",
          "The Arduino Uno LED Blink",
          "Saving and Uploading Files via Arduino IDE"
        ],
        "Let's Begin Building Our Projects": [
          "Project 1 - Arduino Controlled LED Circuit",
          "Project 1a - Arduino Controlled LED Circuit Actual",
          "Project 2 - Arduino Controlled LED with Switch",
          "Project 2a - Code Explanation",
          "Project 3 - Arduino Controlled LED with Potentiometer",
          "Project 4 - Arduino Controlled Buzzer",
          "Project 5 - Arduino Controlled Buzzer with LED Function",
          "Project 6 - Arduino Controlled Traffic Light",
          "Project 7 - Arduino Controlled Traffic Light with Counter",
          "Project 8 - Arduino Controlled Ultrasonic Alarm",
          "Project 9 - LCD 16x2 I2C Welcome Message Screen",
          "Project 10 - Arduino Controlled Temperature and Humidity Monitoring",
          "Project 11 - Automatic Temperature Fan Control"
        ],
        "Arduino Development Panel Board": [
          "Arduino Panel Board Part - 1",
          "Arduino Panel Board Part - 2",
          "Arduino Panel Board Part -3",
          "Arduino Panel Board Part - 4",
          "Arduino Panel Board Part - 5"
        ],
        "More Projects": [
          "Project 12 Automatic Light Sensor with Relay",
          "Project 12 Additional Instructions",
          "Project 13 Control a Servo using Buttons"
        ],
        "Incoming Projects and Lessons": [
          "Expect More Projects",
          "What to do Next"
        ]
      },
      "requirements": [
        "No prior knowledge required",
        "Internet Connection",
        "Arduino Board, Electronic Parts and Tools (Optional)"
      ],
      "description": "Welcome to the \"Arduino Basics: For Absolute Beginners\" course!\n\n\nThis course will take you to the very foundation of Arduino development boards: electronics and programming. That's why in this course, we will not just talk about the Arduino board itself but we will also discuss the basics of electronics and programming.\n\n\nIn this course, we will combine these major elements as the key to understanding the Arduino development environment.\n\n\nWhat You'll Learn:\n\n\nThe basics of electronics for Arduino environment\nThe basics of the Arduino development board\nThe basics of the C++ programming language for embedded systems\nHands-on projects to learn by experience\n\n\nBy learning these elements combined, you will gain a deeper understanding of how the Arduino board works.\n\n\nTo maximize your learning experience, I have made these adjustments so you can learn better and faster:\n\n\nBasic English to minimize confusion with terminologies and jargon\nEvery terminology will be explained\nThe code will be explained together with the simulators\nDoing the actual projects is highly advised\nThe teaching and coaching method is straightforward\nThe instructor will not read scripts to better explain what is going on\nThe sequence of discussions will be step-by-step\n\n\nParts and Tools You Will Need for This Course:\n\n\nA computer for writing programs (desktop or laptop)\nAn internet connection for online simulators\nAn Arduino Uno R3 Board\nAn electronics parts list which you can download in this course\nA digital multimeter for testing (optional)\n\n\nIf you don't have these parts and tools at the moment, don't worry; we will use online simulators to get you started.\n\n\nWith this being stated, and if you are ready to start your journey into the world of automation and robotics, then let's begin.\n\n\nYou can check out the previews of the video lessons in this course to get a heads-up on what to expect.\n\n\nMore projects will be added to this course later, so you will have more practice to do.\n\n\nLet's get started!",
      "target_audience": [
        "Beginner with no Knowledge in Arduino and Electronics",
        "Course Refresher for People with Prior Knowledge",
        "For Electronics and Robotics Enthusiasts",
        "For Students who likes to Learn Arduino Development Systems",
        "For Aspiring Computer Engineers and Electronics Engineers"
      ]
    },
    {
      "title": "VLSI, PLC, Microcontrollers, and Assembly Language",
      "url": "https://www.udemy.com/course/cmos-vlsi-plc-microcontroller-assembly-language/",
      "bio": "Get overview of CMOS, VLSI, SCADA technologies. Learn PLC programming, Microcontrollers, Assembly Language fundamentals.",
      "objectives": [
        "Learn basic concepts of CMOS and VLSI technologies",
        "Understand what are Programmable Logic Controllers (PLC) and get started with PLC programming",
        "Take a deep-dive into SCADA",
        "Learn programming in Assembly Language - syntax, procedures, conditional processing, macros, etc.",
        "Get an overview of High Level Language and 16-bit & 32-bit DOS/Windows programming",
        "Understand Microcontrollers and get extensive coverage on MSP430 Microcontroller, AVR Microcontroller",
        "Gain basic knowledge of Computer Systems",
        "Practice Assembly Language using ATMEL AVR Microcontroller"
      ],
      "course_content": {
        "CMOS Technology": [
          "CMOS Technology"
        ],
        "VLSI Introduction": [
          "VLSI Introduction"
        ],
        "Basics of PLC": [
          "Basics of PLC"
        ],
        "PLC Programming": [
          "PLC Programming"
        ],
        "Ladder Diagram": [
          "Ladder Diagram"
        ],
        "SCADA": [
          "SCADA"
        ],
        "Assembly Language for Intel based Computers": [
          "Assembly Language for Intel based Computers"
        ],
        "Assembly Language Fundamentals": [
          "Assembly Language Fundamentals"
        ],
        "Procedures": [
          "Procedures"
        ],
        "Conditional Processing": [
          "Conditional Processing"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "Uplatz presents this extensive course on VLSI, PLC, Microcontrollers, and Assembly Language.\n\n\nVLSI (Very Large Scale Integration) refers to an integrated circuit (IC) or technology that has several devices on a single chip. The definition of 'how many' is difficult to answer, since as technology advances, numerical definitions become increasingly meaningless. Also it differs by industry: a VLSI analogue part is not the same as a VLSI digital logic or VLSI memory part. The technique of integrating or embedding hundreds of thousands of transistors on a single silicon semiconductor microchip is known as very large-scale integration (VLSI). When advanced level computer processor microchips were being developed in the late 1970s, VLSI technology was envisioned. VLSI is a successor to large-scale integration (LSI), medium-scale integration (MSI) and small-scale integration (SSI) technologies.\n\n\nPLC stands for Programmable Logic Controller, and it is also known as programmable controller. It is a sort of firmware device (device ready to take basic software instructions) that is extensively used in commercial and industrial control applications. The sorts of jobs that PLCs execute, as well as the hardware and software that they require to perform these tasks, might differ from those performed by office computers. A PLC is an industrial solid-state computer that monitors inputs and outputs, and makes logic-based decisions for automated processes or machines. A PLC is typically designed for the control of manufacturing processes or robotic devices where reliability control, simple programming and fault diagnosis is necessary. They were originally built to replace electromechanical relay systems in industrial automation.\n\n\nA Microcontroller is nothing but a compact integrated circuit designed to govern a specific operation in an embedded system. A typical microcontroller includes a processor, memory and input/output (I/O) peripherals on a single chip. Sometimes referred to as an embedded controller or microcontroller unit (MCU), microcontrollers are found in vehicles, robots, office machines, medical devices, mobile radio transceivers, vending machines and home appliances, among other devices. Micro-controllers are essentially simple miniature personal computers (PCs) designed to control small features of a larger component, without a complex front-end operating system (OS). A microcontroller (sometimes called an MCU or Microcontroller Unit) is a single Integrated Circuit (IC) that is typically used for a specific application and designed to implement certain tasks. Products and devices that must be automatically controlled in certain situations, like appliances, power tools, automobile engine control systems, and computers are great examples, but microcontrollers reach much further than just these applications. Essentially, a microcontroller gathers input, processes this information, and outputs a certain action based on the information gathered. Microcontrollers usually operate at lower speeds, around the 1MHz to 200 MHz range, and need to be designed to consume less power because they are embedded inside other devices that can have greater power consumptions in other areas.\n\n\nAssembly Language can be defined as a low-level programming language. Essentially Assembly Language equates to machine code but is more readable. It can be directly translated into machine code, but it uses mnemonics to represent the instructions to make it easier to understand. In order to convert assembly language into machine code it needs to be translated using an assembler. This converts each statement into the specific machine code needed for the hardware on which it is being run. There is a one-to-one relationship between an assembly language instruction and its machine code equivalent. Each CPU has its own version of machine code and assembly language. Assembly Language consists mostly of symbolic equivalents of a particular computer’s machine language. Computers produced by different manufacturers have different machine languages and require different assemblers and assembly languages. Some assembly languages can be used to convert the code that programmers write (source code) into machine language (readable by the computer) and have functions to facilitate programming (e.g., by combining a sequence of several instructions into one entity). Programming in assembly languages requires extensive knowledge of computer architecture.\n\n\nThis course covers the fundamentals of CMOS and VLSI technologies, then moving on to the basics of Microcontrollers and industrial-use PLCs (Programmable Logic Controllers). This training describes in detail the functioning of MSP430 Microcontroller. The course covers Assembly Language from scratch, the basic concepts, structure, syntax and instruction sets of the Assembly Languages, along with 16-bit MS DOS and 32-bit Windows programming.\n\n\nVLSI, PLC, Microcontrollers, and Assembly Language - Course Syllabus\n\n\nCMOS Technology\nVLSI Introduction\nBasics of Programmable Logic Controller (PLC)\nPLC Programming\nLadder Diagram\nSupervisory Control and Data Acquisition (SCADA)\nAssembly Language for Intel based Computers\nAssembly Language Fundamentals\nProcedures\nConditional Processing\nInteger Arithmetic\nAdvanced Procedures, Strings, Arrays\nStructures and Macros\n32-bit Windows Programming\nHigh Level Language Interface and 16-bit MS DOS Programming\nDisk Usage\nIntroduction to Microcontrollers\nMSP430 Microcontroller\nAVR Microcontroller\nComputer Systems\nAssembly Language using ATMEL AVR Microcontroller\n\n\nA career path in the field of Programmable Logic Controllers (PLC) and Microcontrollers involves working with these embedded systems to design, program, and manage automated control systems for various industries.\nHere's an outline of the typical career progression:\nEducation:\nBachelor's Degree: Start with a bachelor's degree in electrical engineering, electronics engineering, computer engineering, or a related field. Your coursework will cover foundational topics in electronics, control systems, programming, and digital logic.\nEntry-Level Positions:\nJunior PLC/Microcontroller Engineer/Intern: Begin your career as an intern or junior engineer, assisting in programming, testing, and troubleshooting PLCs and microcontrollers in industrial or automation projects.\nSkill Development:\nHands-on Experience: Gain practical experience by working on projects involving PLCs, microcontrollers, and automation systems. This could include designing control algorithms, writing code, and configuring hardware.\nMid-Level Positions:\nPLC/Microcontroller Engineer: After a few years of experience, you'll move into mid-level roles where you'll take on more responsibility. This could involve designing and implementing control strategies, collaborating with cross-functional teams, and overseeing projects.\nSpecialization:\nAutomation Engineer, Control Systems Engineer: As you gain expertise, consider specializing in a specific domain, such as industrial automation, robotics, process control, or embedded systems. This could lead to roles that involve designing complex control systems for specific industries.\nSenior-Level Positions:\nSenior PLC/Microcontroller Engineer, Team Lead: With significant experience, you'll progress to senior positions. You might lead teams, guide technical decisions, and be responsible for the overall design and performance of automation systems.\nAdvanced Roles:\nPLC/Microcontroller Architect, Systems Engineer: As your career advances, you might transition to roles that involve system architecture, overseeing the integration of various components, and making high-level decisions about technology choices.\nResearch and Innovation (Optional):\nResearch Scientist, Technology Innovator: If you're interested in pushing the boundaries of PLC and microcontroller technology, you might move into research-focused roles where you explore novel applications and develop new techniques.\nConsulting or Entrepreneurship (Optional):\nConsultant, Startup Founder: With a wealth of experience, you might choose to become a consultant, helping companies optimize their control systems. Alternatively, you could start your own company to develop and provide innovative solutions in the field.\nThroughout your career, staying up-to-date with the latest advancements in PLCs, microcontrollers, and automation technology will be crucial. This includes learning about new programming languages, communication protocols, hardware platforms, and industry standards. Networking within the industry, attending relevant conferences, and participating in online communities can also contribute to your professional growth as a PLC and microcontroller engineer.",
      "target_audience": [
        "Microcontroller based Embedded Systems Developers",
        "Beginners & newbies interested in a career in VLSI & Microcontrollers",
        "Embedded Software Engineers (Microcontrollers)",
        "Anyone aspiring for a career in Digital Systems Design & Implementation",
        "Principal Software Engineers",
        "Senior Systems Engineers",
        "FPGA/ASIC Design Engineers",
        "Engineering Managers (VLSI)",
        "VLSI Design Team Leaders",
        "Software Programmers",
        "Microcontroller & PLCs Programmers",
        "Electronics Engineers",
        "Digital Systems Designers",
        "CMOS & VLSI Specialists",
        "Microprocessor & Microcontroller Engineers",
        "Lead Systems Engineers"
      ]
    },
    {
      "title": "How To Troubleshoot & Repair Failed Laptop, Practical Course",
      "url": "https://www.udemy.com/course/practical-course-laptop-wont-turn-on-failure-repair/",
      "bio": "Learn the process of repairing laptops, dead laptop, hardware, motherboard repair, computer motherboard repair course,",
      "objectives": [
        "The process on how to repair any failed motherboard;",
        "How to repair laptop no power no light failure",
        "How to track signals and voltages in the motherboard",
        "How to desolder failed components using Hot air;",
        "How to use the multimeter."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview"
        ],
        "Laptop repairing process, Asus PC": [
          "Power adapter and Battery diagnosis",
          "Laptop disassemble",
          "Power jack cable serviceability checking",
          "Motherboard circuits and parts understanding part 1",
          "Motherboard circuits and parts understanding part 2",
          "Motherboard power circuit troubleshooting",
          "Learn how to desolder failed component using hot air",
          "Laptop Assembly"
        ],
        "Laptop repairing process, Packard bell PC": [
          "2nd Laptop repairing process part 1",
          "2nd Laptop repairing process part 2"
        ]
      },
      "requirements": [
        "Hardware basics"
      ],
      "description": "8 Reasons why you should choose this course\nThe course will teach you the process of How To Troubleshoot & repair failed laptops.\nThe course is created with perfect care by a computer engineer;\nThe course is not long, so you can complete it in a short time;\nYour inquiries will be answered in a short time with a full explanation of any question;\nA certificate will be provided upon completion of the course;\nYou are going to understand everything you need to know about how to repair failed laptops\nYou going to learn the process of troubleshooting;\nYou going to learn how to track main voltages in the motherboard and much more;\nTopics that we will be discussing in this course are :\nPower adapter and Battery diagnosis;\nPower jack cable serviceability checking;\nMotherboard circuits and parts understanding;\nMotherboard power circuit troubleshooting;\nTracking voltages and signals in the motherboard;\nLearn how to  desolder failed components using hot air;\nHow to use the multimeter and much more.\nI'm also going to teach you many tips and tricks that will make you a hardware professional and have a deep understanding of motherboard repair.\nI will guide you step by step with an easy explanation of this course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nSo what are you waiting for?\nEnroll now and join us.\nI'd love to see you in the class.",
      "target_audience": [
        "Hardware technicians",
        "Everyone who want to learn how to track and repair failed laptops"
      ]
    },
    {
      "title": "Laptop Repair 101: Mastering Laptop Motherboard Diagnostics",
      "url": "https://www.udemy.com/course/laptop-repair-101-mastering-laptop-motherboard-diagnostics/",
      "bio": "Master laptop motherboard repair by diagnosing voltage, circuits, CPU, RAM, and more in this comprehensive course, IT",
      "objectives": [
        "Master Laptop Motherboard Testing Points: Learn essential testing points on a motherboard, including how to diagnose and measure voltages on components",
        "Quick Short-Circuit Detection Process: Understand how to quickly detect short circuits on laptop motherboards, saving time and ensuring effective repairs",
        "Motherboard Diagnosis Workflow: Learn a systematic approach for diagnosing laptop motherboard issues, from initial assessment to full repair",
        "Understanding All Critical Motherboard Voltages: Gain expertise in measuring and interpreting voltages like VCC core, CPU, and RAM circuits"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of electronics and laptop hardware components",
        "A digital multimeter and basic troubleshooting tools for hands-on practice"
      ],
      "description": "28 Reasons why you should choose this course:\nThe course will teach you everything about diagnosing laptop motherboard issues, including voltage, circuits, CPU, and RAM testing.\nCreated with expert care by a computer and electronics engineer.\nThe course is concise and can be completed in a short amount of time.\nYour inquiries will be answered promptly, with full explanations.\nSimple and easy-to-understand explanations with practical examples.\nA certificate will be provided upon completion of the course.\nLearn to test motherboard voltage and diagnose power issues.\nUnderstand how to troubleshoot and repair motherboard circuits.\nYou will learn how to diagnose CPU circuits, ensuring proper function.\nGain expertise in diagnosing and testing RAM circuits on laptop motherboards.\nYou will be guided through the step-by-step process of laptop motherboard repair.\nLearn to identify and repair common laptop motherboard faults quickly.\nMaster advanced diagnostic tools and techniques for motherboard repair.\nYou will learn how to test MOSFET transistors on a motherboard.\nLearn to troubleshoot power regulators and voltage distribution on motherboards.\nUnderstand how to check motherboard signals using multimeters and oscilloscopes.\nDiscover the secrets behind analyzing faulty motherboard components.\nYou will learn to diagnose and repair common issues with laptop motherboard power rails.\nLearn the importance of continuity checks in motherboard diagnostics.\nThe course covers both theoretical knowledge and hands-on techniques.\nYou will learn how to trace circuit paths for troubleshooting.\nMaster voltage and current testing to ensure the proper operation of the motherboard.\nThe course will cover both traditional and modern laptop motherboard technologies.\nYou will learn to identify and fix short circuits on the motherboard.\nYou’ll gain practical skills to repair any laptop motherboard fault with confidence.\nMain Topics covered in this course:\nHow to test motherboard voltage, CPU, and RAM circuits.\nStep-by-step troubleshooting and repair techniques for laptop motherboards.\nMotherboard test points.\nUnderstanding and diagnosing common motherboard failures and their solutions.\nA guide to diagnosing motherboard voltage issues and faulty circuits.\nPractical demonstrations of a laptop motherboard.\nThis course will transform you from a beginner to a Pro at laptop motherboard diagnostics and repairs.\nIf you’re interested in mastering laptop motherboard repair and diagnostics, this course is what you need.\nWhat are you waiting for?\nEnroll now and join us.\nI'd love to see you in the class.",
      "target_audience": [
        "Beginners looking to learn laptop motherboard diagnostics and repair",
        "Aspiring technicians who want to master the skills required for laptop repair",
        "Electronics enthusiasts wanting to deepen their knowledge of motherboard circuits and troubleshooting",
        "Professionals seeking to enhance their laptop repair expertise, including diagnosing complex issues like short circuits and power failures",
        "Anyone interested in gaining hands-on experience with laptop motherboard testing and repair"
      ]
    },
    {
      "title": "Laptop Repairing: Learn How to Track Signals & Voltage",
      "url": "https://www.udemy.com/course/laptop-repairing-learn-how-to-track-signals-voltage/",
      "bio": "Computer repair, Basic Electronics, Laptop repair course, hardware Technicians, motherboard repair, schematics, PC, IT",
      "objectives": [
        "Learn how to track electronic signals in laptop motherboard step by step;",
        "How to troubleshoot motherboard without schematics;",
        "Tips and Tricks on how to track motherboard signals;",
        "Motherboard buses;"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview"
        ],
        "Motherboard Signals and Voltage Tracking": [
          "Buses and motherboard conductors",
          "Learn how to track signals part 1",
          "Learn how to track signals part 2",
          "Learn how to track motherboard signals part 3",
          "Learn how to track motherboard signals part 4"
        ]
      },
      "requirements": [
        "Motherboard Repairing Basics;"
      ],
      "description": "Constant updates.\n13 Reasons why you should choose this course\nThe course will teach you Everything about how to Track Signals & Voltage in detail.\nThe course is created with perfect care by a computer engineer;\nOne-On-One Support;\nThe course is not long, so you can complete it in a short time, and then enjoy your new experiences;\nYour inquiries will be answered in a short time with a full explanation of any question;\nConstant updates.\nSimple and easy-to-understand explanation with examples;\nA certificate will be provided upon completion of the course;\nYou going to understand how to follow and track signals in a laptop motherboard;\nYou will learn how to troubleshoot motherboard failures;\nYo going to learn how to draw schematics;\nThis course will transform you from a beginner to a Pro.\nTopics that we will be discussing in this course are :\nMotherboard Signals and Voltage Tracking;\nBuses and motherboard conductors;\nLaptop Motherboard Test Point;\nTypes of motherboard buses;\nThe understanding connection between motherboard components.\nYou are going also to learn many tips, tricks, and technics that will make you a professional and have a deep understanding of how to Track Signals & Voltage.\nI will guide you step by step with an easy explanation of this course.\nIf you are interested in one of the points we talked about before, then this course is for you.\nWhat are you waiting for?\nEnroll now.\nAnd let's get started.",
      "target_audience": [
        "Anyone who want to master motherboard repairing;"
      ]
    },
    {
      "title": "VFD Drives, Frequency Inverters, Complete PLC Course Drives",
      "url": "https://www.udemy.com/course/vfd-drives-frequency-inverters-complete-plc-course-drives/",
      "bio": "Configure any brand of VFD drives, PowerFlex 525 programming drives with the Allen Bradley PLC or Rockwell Course 2024.",
      "objectives": [
        "How induction motors work",
        "Drive operation",
        "Specialty VFD drives applications within the industry",
        "Parameter search regardless of brand",
        "Control and power wiring of frequency inverters",
        "Drive control types",
        "Perform correct auto-tuning",
        "VFD essential devices",
        "Perform communication with Allen Bradley PLC",
        "Use of CCW software",
        "Simulator exercises",
        "Actual field recommendations with drives"
      ],
      "course_content": {
        "Aditional resources": [
          "Resources"
        ],
        "Introduction to Drives": [
          "Importance of Drives in Industry",
          "Applications of Induction Motors in Industry",
          "Induction Motor Operation",
          "Motor Plate Data",
          "Delta and Star Induction Motor Connection Types",
          "Delta and Star Type Connection in Real Life",
          "General Formulas in the Induction Motor Environment",
          "Drive Operation"
        ],
        "Danfoss Parameters and Emulator": [
          "Getting to know the Display",
          "Parameter Group and Motor Board Data Entry in Danfoss Drive Part 1",
          "Parameter Group and Motor Board Data Entry in Danfoss Drive Part 2",
          "Entering Motor Nameplate Data in Drive Yaskawa Emulator",
          "Method for Entering Yaskawa Board Data Part 1",
          "Method for Entering Yaskawa Board Data Part 2"
        ],
        "Speed References": [
          "Speed References",
          "Selecting Speed Reference, External Potentiometer Connection, Drive Yaskawa PT1",
          "Selecting Speed Reference, External Potentiometer Connection, Drive Yaskawa PT2",
          "Selecting Speed Reference in Danfoss Drive"
        ],
        "Startup Commands": [
          "Yaskawa Start Command",
          "Danfoss Drive Startup Command"
        ],
        "Two-wire and three-wire connection": [
          "Selecting 2 and 3 Wires"
        ],
        "Assignment of Digital Inputs and Outputs": [
          "Assigning Digital Inputs on Drives Part 1",
          "Assigning Digital Inputs on Drives Part 2",
          "Assigning Digital Outputs on Drives"
        ],
        "Methodology Summary in 5 Steps": [
          "The 5 Essential Steps to Configure Any Drive"
        ],
        "Additional Parameters for Drives Configuration (NOT MANDATORY)": [
          "Acceleration and Deceleration Times",
          "Acceleration and Deceleration, Practical Part",
          "Types or Methods of Stopping on Ramp to Stop and Coast to Stop Drives"
        ],
        "Safety and its Importance in Drives. Emergency Stop Connection": [
          "Emergency Stop, Connection and Configuration"
        ]
      },
      "requirements": [
        "No previous knowledge is required for this course"
      ],
      "description": "This course, updated to 2024, takes you by the hand to this great specialty within industrial automation. If your interest is to be one of the best engineers in the field of industrial automation, definitely the knowledge of industrial drives should be part of your day to day.\n\n\nVariable Frequency Drives 2024 Course & Complete PLC Course Drives\n\n\nThis 2024 course on VFD drives, variable frequency drives, variable speed drives or inverters, guarantees that you will learn how to configure drives of any brand with the 5-step methodology.\n\n\nThe best way to learn is through practice, therefore, 2 drive simulators are included when you purchase this course, so you can perform your desired configurations:\n\n\n-Drive of Danfoss brand.\n-Yaskawa brand drive.\n\n\nWe will teach in a fluid way the different applications and operation of induction motors, how a frequency inverter works, wiring of the drives, what are the really important parameters required when configuring them, how to perform the different types of tuning within a drive, the type of control SVC, V / Hz, DTC.\n\n\nWith what I have learned in the classes, I will perform practically, together with you, the configuration and wiring of 4 different brands of drives:\n\n\n-Delta (Taiwanese brand).\n-Yaskawa (Japanese brand).\n-HNC (Chinese brand).\n-PowerFlex 525 (US brand).\n\n\nAlso, we will review advanced parameters and unique concepts based entirely on field experience; topics that you will really need when practicing this amazing specialty.\n\n\nFinally, I will teach how to communicate Allen Bradley brand drives with our Logix generation PLC, in other words we will use the advantages of communication to utilize the CCW and Studio 5000 software.",
      "target_audience": [
        "Automation, Robotics, Mechatronics and Electrical Engineers."
      ]
    },
    {
      "title": "Debug Your Arduino Programs while Coding",
      "url": "https://www.udemy.com/course/debug-arduino-programs-codes-while-coding-programming-arduino/",
      "bio": "Learn how to Debug Your Arduino Code and fix code errors while developing your project without adding additional codes",
      "objectives": [
        "Debug your Arduino programs",
        "Monitoring GPIO Pins",
        "Inspecting Your Program Flow",
        "Print Variable Values and check them",
        "Change Variable Values"
      ],
      "course_content": {},
      "requirements": [
        "Download Arduino IDE (Explained in the course)",
        "Download Visual Studio (Explained in the course)"
      ],
      "description": "Learn how to Debug Your Arduino Code and fix code errors while developing your project without adding additional codes.\nAre you tired from using Serial.print to debug your code and test whether a certain block works or not!?\nDo you want an easy way to debug your Arduino Code without having to add extra lines of code each time?\nDo you miss the breakpoints features that allow debugging with one click?\nAre you looking for a way to tell if your code works or not, or if a variable reaches a certain value or not!?\n\n\nWhy you should take this course?\nLearn how to Debug Your Arduino Code and fix code errors while developing your project without adding additional codes\nThis course is the perfect solution for developers who are having difficulty debugging their projects.\nYou'll learn about the basic components of a debugger, including variables, breakpoints, stepping through the code line by line, reviewing stack traces, inputting new values for variables, and more\nLearn how to solve undefined issues with the debugger\nThen This Course is for You\nIn this course, you will learn how to debug your code easily and effectively.\n\nWhy you should learn how to debug your Arduino program:\nIt's easier to find and fix errors as you write your code\nNo need for an extra line of Serial.print each time you want to know what's happening\nSave time by graphically viewing Arduino Pins status.\nLess effort by adding conditional debugging and viewing variables value inside memory and even have the ability to change the variable value during execution to test out different scenarios.\n\n\nWhat you will learn in this course:\nHow to debug the Arduino code\nHow to view variables value in memory and view Arduino Pins graphically\nHow to use breakpoints and conditional debugging\nGoal From This Course:\n- Learn how to debug Arduino Codes\nRequired Materials\nArduino.\nArduino IDE  (FREE)",
      "target_audience": [
        "Arduino Geeks",
        "Embedded System Developers"
      ]
    },
    {
      "title": "Embedded Systems. STM32 Interrupt-Driven NEC decoder",
      "url": "https://www.udemy.com/course/embedded-systems-stm32-interrupt-driven-nec-decoder/",
      "bio": "STM32, Embedded C, ARM Cortex-M4, GPIO, EXTI, Timers, RCC, NVIC, Makefile, STM32F4Discovery, NEC protocol, Interrupts",
      "objectives": [
        "Embedded Systems",
        "STM32 MCU",
        "NEC protocol",
        "Timers/Counters",
        "GPIO",
        "External Interrupts",
        "Nested Vectrored Interrupt Controller",
        "Reset and Clock Control Unit",
        "IR remote control decoding",
        "Timing intervals measurement",
        "ARM Cortex-M",
        "Bare-Metal"
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with embedded C programming language",
        "Understanding of electrical schematics"
      ],
      "description": "Hello and welcome to the STM32 Interrupt-Driven NEC Decoder embedded systems course.\nWith mixed hardware and programming-based approach, I have created this course to show the practical application of the embedded systems and explain the basics of the STM32 microcontrollers at the same time.\nThis course provides an overview of the NEC protocol and a practical example of how an infrared remote control can control the LEDs on the STM32F4Discovery board. The course explains the necessary system configuration steps to enable the specific system peripherals and select their operation modes. The GPIO, an external interrupt and a timer compare mode are described in detail. These peripherals are the essential part of the NEC protocol decoder, which is the core part of the course.\nThe beginning of the course contains an explanation of how to install the GNU ARM toolchain for code compilation and the ST-LINK programmer for flashing the STM32F4Discovery board. There is a brief overview of the Discovery board as well.\nBy the end of the course, you will become familiar with the STM32 GPIO, the reset and clock control unit, external interrupts, timers and the NVIC. The important peripheral registers and their bits will be considered as well.\nThe NEC decoding firmware will be tested on the STM32F4Discovery board to prove that everything works as expected.",
      "target_audience": [
        "Anyone who is interested in embedded systems",
        "Students",
        "Hobbyists",
        "Engineers",
        "Programmers"
      ]
    },
    {
      "title": "Arduino Meets LabVIEW",
      "url": "https://www.udemy.com/course/arduino-labview-control-microcontroller-lab-view-arduino-interface/",
      "bio": "Virtualize your Arduino on PC Screen using LabVIEW",
      "objectives": [
        "Design Arduino Circuits",
        "Learn Arduino Programming & Interfacing",
        "Program Arduino using C Language",
        "Design LabVIEW Interface",
        "Program Using LabVIEW",
        "Connect LabVIEW with Arduino",
        "Learn serial communication basics in LabVIEW",
        "Learn serial communication basics in Arduino"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Digital Electronics"
      ],
      "description": ">>> LabVIEW meets Arduino: Step by step guide is a course specially created for Electronic Geeks & Engineers who want to move with Arduino Programming to the next level.\n\n\nWelcome to this new course.\nThe course lessons will explain “How to deal with Arduino and LabVIEW” by using C Language and LabVIEW Environment. This course will work best for you if your basic knowledge of Electronics. you'll find out how to interface the Arduino with LabVIEW.\nArduino is utilized in your Engineering projects, Industrial Projects, or Home Automation related projects.\n\n\nWhy you should take this course?\nThe course provides an easy to follow introduction to the Arduino electronics prototyping platform\nThe student will learn how to use LabVIEW to control the Arduino board by sending signals over a USB cable\nLearn to program with LabVIEW, Arduino, and Python\nLearners can take this course even if they have no background in electronics or programming. This course is designed for beginners by teaching them step by step how to work with Arduino, LabVIEW, and circuits\nThis course is taught through videos that are interactive and fun!\n\n\nWhy Learn Arduino?\nIf you an Engineering or Science student you would possibly encounter projects during which you would like Physical interaction along with your computing system & to display the operations on PC Screen\nArduino is one among the cost-effective tools which you'll create or purchase & starts programming to interact with physical elements together with your logic & create results the way you would like.\nAnd using LabVIEW, you'll display various process parameters like Motor Speed, LED ON/OFF Feedback, Temperature Signal, you'll also create unlimited Buttons, Switches & Message Box to manage the Arduino\nAfter watching this course, you'll create Innovative Projects. the only thing that you simply got to do is THINKING, WIRING & CODING.",
      "target_audience": [
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Arduino Geeks"
      ]
    },
    {
      "title": "How you can ACE Digital Electronics, and become a GURU !",
      "url": "https://www.udemy.com/course/master-digital-logic-gates/",
      "bio": "Ace components like AND, OR, & NOT GATES on your way to being an Engineer or Master Hobbyist: People in Great $ Demand.",
      "objectives": [
        "Create Digital Circuits right on the screen, masterfully.",
        "Become awesome using the Free Circuit Software",
        "Build circuits that demo these Gates right on your computer.",
        "Run the Circuit Simulator, become skilled at Circuit Testing.",
        "Transcribe a Truth Table from right off the circuit you JUST BUILT !"
      ],
      "course_content": {
        "Introduction to the Course Content": [
          "Introduction to the Course Content"
        ],
        "Introduction to Digital Logic Gates": [
          "Download and Install Critical (Free) Software"
        ],
        "An Important Software Nuance to be Aware of": [
          "A Mouse Mode to be aware of"
        ],
        "The Logic Gates": [
          "The AND Gate with Circuit Construction",
          "The AND Gate Truth Table",
          "The OR Gate with Circuit Construction",
          "The OR Gate Truth Table",
          "The NOT Gate with Circuit Construction",
          "The NOT Gate Truth Table",
          "The NAND Gate with Circuit Construction",
          "The NAND Gate Truth Table",
          "The NOR Gate with Circuit Construction",
          "The NOR Gate Truth Table",
          "The XOR Gate with Circuit Construction",
          "The XOR Gate Truth Table"
        ],
        "Summation": [
          "Course Summary"
        ]
      },
      "requirements": [
        "You need a pc, with windows software on it.",
        "You need internet access, as you will download a specific freeware program and install it.",
        "You also need to know that I will help you."
      ],
      "description": "This course is about helping you to make money by becoming skilled in Electronics. This course won't cover everything but\nthis is where you start Digital Electronics.\nThe Electronics field is begging for people who can understand its theory and implement it in hard circuitry that gets jobs done. Electronics knowledge is critical to being the independent self-sufficient person you want to and need to be.\nThis course is about creating, and running Electronics, specifically Digital Logic Gates in CIRCUITS THAT YOU WILL CREATE using excellent electronic-circuit freeware.\nYou gotta have a PC with Windows software to follow me, and an Internet connection, no more.\nThe course will last over an hour, about 71 minutes, and demands involvement on your part. \"Demands\" is the critical word.\nYou will watch me build simple electronic circuits using sophisticated components like the AND, OR, NOT, NAND, NOR and XOR Gates.\nYou will see me do it step by step and you will closely follow along on your PC and software. That way you will be able to do it yourself, because that is what a Guru does. Gurus can do it themselves easily.\nYou will then learn about and transcribe Truth Tables from right off the circuits that you yourself created while watching me. When you can do all this yourself blindfolded, You own Guru status in this realm. My job is to maximize your understanding of this material and minimize the time it takes for you to reach that Guru status level.\nSo, let me ask you: Do you want to further your career and:\nBecome more independent ?\nMake electronics that perform meaningful practical tasks ?\nSell them ?\nMake oodles of money doing so ?\nBecome a Guru in Electronics ?\nThen this is where you begin.\nSo begin now, procrastination is poison. Sign up, and I'll see you in the course !",
      "target_audience": [
        "If you know nothing, TAKE THIS COURSE !!!",
        "Want to be a Master Hobbyist?  TAKE THIS COURSE !",
        "Starting out in Engineering School ? TAKE THIS COURSE !",
        "Just Curious ?  TAKE THIS COURSE !",
        "You know batteries have power ?  Good Enough. TAKE THIS COURSE !",
        "You didn't know batteries have power ? Now you do. TAKE THIS COURSE !",
        "You are afraid of Electronics ? TAKE THIS COURSE !",
        "You have 10 Gazillion Questions ? I have 20 Gazillion answers. TAKE THIS COURSE !",
        "You only have basic PC skills ? Thats all you need.  TAKE THIS COURSE.",
        "If you have some previous Digital Electronics experience but are a bit frustrated by confusing jargon, then TAKE THIS COURSE.",
        "If you like a carefully structured course whose instructor has infinite patience, then TAKE THIS COURSE."
      ]
    },
    {
      "title": "NODE MCU:ESP 8266 - Micro Python Network Programming and IOT",
      "url": "https://www.udemy.com/course/node-mcuesp-8266-micro-python-network-programming-and-iot/",
      "bio": "With micropython and ESP8266 / ESP 32 - Learn Network protocols - HTTP REST API, MQTT, network socket programming & IOT",
      "objectives": [
        "Widely used IOT protocols such as HTTP - REST API, MQTT, Network socket programming",
        "Learn to flush (load) and use micropython in NODE MCU-8266",
        "Use of IDE like Esplorer and uPYcraft",
        "Working on data transfer to cloud.",
        "Analog to digital converter interfacing with NODE MCU.",
        "An overview comparison with the ESP32 board"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview"
        ],
        "Internet of things Overview": [
          "IOT Building block",
          "Sensors and Actuators",
          "IOT Board - NODE MCU 8266",
          "What is IP address?"
        ],
        "NODE MCU :ESP8266 - Micro python and Esplorer IDE": [
          "Micropython and Esplorer IDE",
          "Getting micropython on NODE MCU ESP8266 board",
          "Connecting to NODE MCU 8266 to WIFI"
        ],
        "NODE MCU: ESP8226 - Using REST - API and interfacing to cloud": [
          "REST API - GET using micropython and Node MCU Presentation",
          "REST API - GET using micropython and Node MCU Demonstration",
          "REST API - Sensor data POST using micropython to thinkspeak cloud",
          "REST API - Sensor data POST using micropython to thinkspeak cloud Demonstration"
        ],
        "NODE MCU:ESP8266 12E- MQTT Protocol": [
          "What is MQTT?",
          "MQTT - micropython code overview",
          "MQTT-cloud demonstration of LED switch ON/OFF",
          "Quiz 1"
        ],
        "Micropython Network-Socket Programming": [
          "Network Socket Programming Overview",
          "Software tools used : uPyCraft and Hercules",
          "NODE MCU - TCP server and client socket programming overview",
          "NODE MCU - TCP server and client socket programming demonstration",
          "NODE MCU - TCP client and server socket program review and demonstration",
          "NODE MCU -UDP server and client program review and demonstration",
          "NODE MCU - UDP client and server socket programming review and demonstration"
        ],
        "An Overview comparison with ESP 32 development board.": [
          "An Overview comparison with ESP 32 development board.",
          "Quiz 2"
        ],
        "Bonus": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge in programming and particularly on Python",
        "Interest in Internet of things"
      ],
      "description": "In recent times, micropython is becoming increasing popular in resource constrained  IOT devices such as NODE MCU ESP 8266 / ESP 32 etc.,due to its flexibility, light weight and syntax similar to python programming language.\nIOT is niche technology areas and it is predicted for exponential growth in the next few years. Apart from IOT devices (eg - Node MCU, Raspberry pi etc)&  sensors, the right programming langauges, communication protocols also plays a cticial role.\nThe course extensively uses micropython programming. Further more, not just IOT devices, the machine - to - machines communication uses wide range of protocols such as REST API, MQTT and more important socket network programming. This course cover all these protocols through presentation and  demonstration through Open source cloud applications, tools.\nThe course coverage is as follows :\nGetting micropython installed / flashed on to NODE MCU 8266/32.\nThe IDE used communication of NODE MCU 8266 such as Esplorer and uPyCraft.\nREST API and communication with cloud through IOT - NODE MCU 8266/32.\nMQTT (Message Queuing Telemetry Transport) protocol\nSocket programming\nTCP\nUDP\nAn overview about ESP 32. ESP 32 is recent advanced version when compared to NODE MCU-ESP8266. ESP 32 is with better processor and higher processing capacity - RAM.\nEnroll in this course to easily understand, acquire knowledge towards career progression.\n\n\nHappy learning!!",
      "target_audience": [
        "Any one interested in learning about NODE MCU 8266, IOT and about micropython",
        "Students of Computer science, Electronics"
      ]
    },
    {
      "title": "IoT Internet of Things Bundle",
      "url": "https://www.udemy.com/course/iot-internet-of-things-bundle-esp-esp32-board-iot-arduino/",
      "bio": "A Different IoT Power and Performance, Use ESP32 microcontroller to MAKE IoT projects to unleash your creativity",
      "objectives": [
        "Learn about the ESP32 and what makes it an excellent choice for Arduino Makers.",
        "Learn about the ESP32 and why you must start using it",
        "Learn how to replace Arduino with ESP32 without coding effort",
        "Program ESP32 Effectively",
        "Become confident in using the ESP32 in your projects.",
        "Learn about the features ESP32 development kit",
        "Create A Simple ESP32 Web Server In Arduino IDE",
        "ESP32 Operating Modes",
        "Station (STA) Mode",
        "Soft Access Point (AP) Mode",
        "Wiring – Connecting Devices to ESP32",
        "Concept Behind Controlling Things From ESP32 Web Server",
        "ESP32 as HTTP Server using WiFi Access Point (AP) mode",
        "Accessing the Web Server in AP mode",
        "ESP32 as HTTP Server using WiFi Station (STA) mode",
        "Accessing the Web Server in STA mode",
        "Learn about the variants of the ESP32 module.",
        "Learn about the differences and similarities between the ESP32 and the Arduino",
        "Learn how to use the ESP32 advanced capabilities",
        "Learn how to use the ESP32 to connect any project to the Internet and display or exchange data",
        "Use the ESP32 to enable your project to communicate with Bluetooth devices",
        "Read Sensor data using ESP32 Board",
        "Send Email alert when sensor reading goes above a certain value",
        "Create A Simple ESP32 HTTP Request In Arduino IDE",
        "Get a FREE Hosting server and domain name",
        "Create PHP script to insert data into MySQL",
        "Display data on a web page",
        "MySQL database to store readings",
        "Get Sensors Reading",
        "Program ESP32 Effectively",
        "Create a fully functional Project in no Time"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction"
        ],
        "IoT Internet of Things": [
          "Section Intro",
          "Hardware and Software Requirements",
          "What is ESP32",
          "Exploring IoT Systems and Connected Device Thinking",
          "ESP32 Features and Specifications",
          "Important Note: Review System",
          "ESP Board Overview",
          "ESP 32 Pinout v1 DOIT",
          "IoT and ESP32 Basics",
          "Exploring ESP32 Hardware and Pinout",
          "Summary",
          "Reading Material"
        ],
        "Get the Development Environment Ready": [
          "Section Intro",
          "Download and Install Arduino IDE",
          "ESP8266 Download and Install Arduino ESP and USB Driver",
          "ESP32 v1: Download and Install Arduino Development environment",
          "Setting Up the Development Environment",
          "USB Driver for ESP32",
          "JSON Links to ESP32 Library for Arduino IDE",
          "Load Your First Code to ESP32 Board",
          "Setting Up the Arduino IDE for ESP32 Development",
          "Summary",
          "Reading Material"
        ],
        "Code Examples": [
          "Section Intro",
          "Blinking a LED",
          "Hello World! Blinking a LED",
          "Control Built In Touch Sensor with LED",
          "The Touch Sensor",
          "Quiz",
          "Dealing with Analog Signals",
          "Analog Input",
          "Dealing with PWM Control",
          "PWM",
          "Working with LEDs, Sensors, and PWM on ESP32",
          "Blinking an LED with ESP32",
          "Summary",
          "Reading Material"
        ],
        "Other Code Examples you can try out": [
          "Section Intro",
          "Simple Servo Motor Control Code",
          "Advance Servo Control using Potentiometer",
          "Connecting to Internet",
          "Simple WiFi Server",
          "Quiz",
          "DHT 22 - Reading Temperature and Humidity",
          "Sending and Receiving Data From a Local Web Page",
          "Controlling a Servo Motor with ESP32"
        ],
        "ESP32 Email Alert Based on Sensors Reading": [
          "Section Intro",
          "What is SMTP Server",
          "Install ESP32 Mail Library for Arduino",
          "Create a New Email Account to be used as Sender",
          "Email Alerts with ESP32",
          "SMTP Server Settings",
          "Coding the ESP32 Email Alert Project",
          "Coding the ESP32 Email Alert Project Part2",
          "Configuring SMTP and Coding ESP32 Email Alerts",
          "The Code",
          "Practical Testing",
          "Sensor Alert via Email",
          "The Code",
          "Creating Email Alerts Using ESP32",
          "Summary",
          "Reading Material"
        ],
        "ESP32 Web Server": [
          "Section Intro",
          "What is a Web Server",
          "ESP32 Operating Modes",
          "Circuit Design",
          "Introduction to ESP32 Web Servers",
          "Understanding how esp32 work as a server",
          "Coding WiFi and Webserver settings",
          "Coding HTTP Requests and Server Start",
          "Coding Client Methods",
          "Coding and Understanding ESP32 as a Web Server",
          "The Code",
          "Writing HTML Code for Webpages",
          "Practical",
          "Building a Web Server with ESP32",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "IoT and ESP32 Essentials"
        ],
        "ESP32 + Databases to Control Anything Anywhere": [
          "Hosting Your Website",
          "Creating SQL table",
          "SQL Query Code",
          "PHP Script to Insert Data in Database",
          "Post Data PHP Code",
          "PHP Script to Display Readings",
          "Display Data PHP Code",
          "Coding ESP Part1",
          "Coding ESP Part2",
          "The Code",
          "Practical Live Demonstration",
          "Add Actual Sensors and display Reading on Webpage",
          "Demonstrating a Complete IoT System from Sensor to Dashboard"
        ],
        "Who we are?": [
          "Who We Are?"
        ]
      },
      "requirements": [
        "Basic Knowledge of Programming"
      ],
      "description": "This is a complete bundle to get you started in IoT.\nIoT Internet of Things Crash Course: Step by step is a course specially created for Electronic Geeks & Engineers who want to take their Electronics and Microcontroller Projects to the next level, adding WiFi, Bluetooth connectivity, and more processor power while maintaining battery life.\nESP32 Email Alert Based on Sensors Reading: Send Emails using ESP32 and Arduino IDE coding easily and effectively and unleash the power of coding and ESP32 Hardware.\nESP32 Web Server: Step by Step Course to create your very own standalone web server with ESP32 that controls output and displays data.\nESP32 + Databases to Control Anything Anywhere: Step by Step Course to help you create your first internet-connected electronics projects using the ESP32 WiFi breakout board.\nThe course lessons will explain “How to work on ESP32 Board” by using C Language and the famous Arduino IDE development environment. This course will work best for you if you have basic knowledge of Electronics and Arduino. You will learn how to interface the ESP32 Board with your Computer and control it in no time.\nESP32 can be used in your Engineering projects, Industrial Projects, or IoT Home Automation related projects.\nWhy you should take this course?\nLearn how to get started building IoT projects from scratch.\nGain a solid understanding of the Internet of Things and the role it plays in our world today.\nLearn how to design, use, and program ESP32 - a new type of IoT controller.\nUnderstand how to build IoT applications that can run on a variety of different devices.\nLearn about WiFi, Bluetooth, LoRaWAN, and other technologies that power IoT devices.\nWhy Learn ESP32?\nIf you are an Engineering or Science student, you might come across projects in which you want to control or monitor via the internet. ESP32, with its robust design, ultra-low power consumption, high level of integration, and hybrid Wi-Fi & Bluetooth chip, is the best fit to get started in the Internet of Things world.\nWe will explore:\nDigital Output: Blinking a LED\nDigital Input: Reading a Touch Sensor\nAnalog Input: Reading a variable voltage from a potentiometer\nAnalog Output: Controlling a LED brightness\nAnalog Output: Controlling a Servo Position\nReading Temperature/Humidity Data with a Digital sensor\nConnecting to the Internet and getting local time\nReceiving data from a simple local web page, turning on/off a LED\nTransmitting data to a simple local web page\nAt the end of this course, you can create innovative IoT projects. The only thing that you need to do is THINKING, WIRING & CODING.\nESP32 Email Alert Based on Sensors Reading\nThe course lesson will explain “ESP32 Email Alert Based on Sensors Reading” by using Arduino IDE coding and Arduino Environment. This course will work best for you if you have basic knowledge of Electronics and Arduino. You will learn how to interface the ESP32 with your computer and control it using Arduino IDE to read sensor data and send emails accordingly.\nYou’ll learn how to:\nSet up electronic circuits\nSet up the communication protocol on ESP32\nWrite basic applications for ESP32 in Arduino to control basic functions\nAdvanced control sensors and email automation using ESP32\nHow to integrate ESP32 sensors and switches\nESP32 Web Server\nThe course lesson will explain “How to create a webserver” by using Arduino IDE Programming Environment. This course will work best for you if you have basic knowledge of Electronics and Arduino. You could connect sensors to an Arduino and control everything using a simple webpage that you will create in this course.\nYou’ll learn how to:\nCreate a simple ESP32 Web Server in Arduino IDE\nUnderstand ESP32 operating modes: Station (STA) Mode and Soft Access Point (AP) Mode\nConnect devices to ESP32\nControl things from an ESP32 Web Server\nESP32 + Databases to Control Anything Anywhere\nThe course lesson will explain “How to control stuff from all around the world” by using Arduino IDE Programming Environment. This course will work best for you if you have basic knowledge of Electronics and Arduino. You could connect sensors to an Arduino and send the values to a database on the internet.\nYou’ll learn how to:\nCreate a simple ESP32 HTTP Request in Arduino IDE\nGet a free hosting server and domain name\nCreate a PHP script to insert data into MySQL\nDisplay data on a web page\nCreate a MySQL database to store readings\nGet sensors reading\nAt the end of this course, you can create innovative projects. The only thing that you need to do is THINKING, WIRING & CODING.\nUser Testimonials and Social Proof\n\"This bundle is a comprehensive guide to IoT projects. The hands-on approach and clear instructions made learning easy and fun!\" - Emily R.\n\"A fantastic course for anyone interested in IoT. The projects were practical and insightful!\" - David S.\nAn Author Bio Showing Off Credentials\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nA Single Powerful CTA\nEnroll now and start your journey to mastering IoT projects today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nHow to get started building IoT projects from scratch\nHow to design, use, and program ESP32\nUnderstanding WiFi, Bluetooth, LoRaWAN, and other technologies\nBuilding IoT applications that run on different devices\nWho Is This Course For\nAnyone interested in IoT projects\nBeginners with no prior experience in IoT\nMakers and hobbyists wanting to expand their knowledge\nStudents and professionals looking to enhance their skills in IoT\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Embedded Systems Geeks",
        "Arduino Geeks",
        "IoT and embedded systems Geeks",
        "Anyone interested in connecting his project to the internet with a low budget solution"
      ]
    },
    {
      "title": "ESP32 By Example",
      "url": "https://www.udemy.com/course/esp32-by-example/",
      "bio": "An all-inclusive course to learn Arduino development with the ESP32.",
      "objectives": [
        "Learn just enough microcontroller basics, starting with the well-regarded family of ESP32 microcontrollers, that you understand how to read Arduino programs for",
        "Starting with simple examples, be able to create your own programs that leverage the built-in wireless capabilities of the ESP32, including WiFi and Bluetooth.",
        "Learn how to create your own basic hardware platform from simple parts that can become something as powerful as a drone controller.",
        "Programming ESP32 microprocessors using Arduino IDE version 2.2.1 or newer, including handling different varieties of ESP32.",
        "Constructing and using breadboards for project development, with a focus on integrating various components like LEDs, push-button switches, and mini OLED displa",
        "Implementing sensor-based operations using a Multi-Processor Unit (MPU) with a gyroscope and accelerometer.",
        "Integrating ESP32's WiFi and Bluetooth capabilities with external devices, demonstrated through a project involving a video game system controller."
      ],
      "course_content": {
        "Introduction": [
          "What this course is about",
          "Needed Software",
          "Needed Hardware and UsefulTools",
          "How to acquire EEK components",
          "Course Resources and Links"
        ],
        "Setting Up Arduino IDE for EEK": [
          "Set Up and Verify ESP32 board support",
          "Run Blink and WiFi scan examples Mac and PC"
        ],
        "ESP32 Boards Compatible with EEK": [
          "Introduction",
          "AdaFruit Huzzah and DevKit Clone",
          "Arduino Nano ESP32",
          "AdaFruit Feather S3",
          "ESP32 Dev board",
          "Drone Simulator Preview"
        ],
        "Assembling EEK Main Board": [
          "Placing EEK board components",
          "EEK Assembly Overview",
          "Assembly Guided Videos",
          "Trim and Install LEDs",
          "Trim and install resistors",
          "Install MPU 6050 and OLED",
          "Install switches",
          "Wire and install ESP32 boards - Part A",
          "Wire and install ESP32 boards - Part B",
          "Wire and install ESP32 boards - Part C",
          "Assembly Test Arduino Sketches",
          "PCB Versions of EEK"
        ],
        "EEK Basics": [
          "Introduction",
          "EEK LEDs - Basic blink",
          "EEK LEDs - ESP32 GPIOs and Pin Number Variations",
          "Adapting sketch to support different ESP32 models",
          "Mini-Project: Blink all EEK LEDs sequentially",
          "Intro to OLED Displays with I2C",
          "LED Status OLED example",
          "Mini-Project: Serial Monitor Echo",
          "EEK and Buttons: Simple Examples",
          "EasyButton Library Exploration: Why a library?",
          "Mini-Project: Button control of EEK LEDs and Display",
          "EEK and PWM",
          "Mini-Project: button actuation of PWM effects",
          "Intro to MPU6050: Simple example",
          "MPU6050 Library Candidates",
          "Mini-Project: Gesture Tester",
          "EEK Basics Capstone Mini-Project"
        ],
        "EEK and WiFi": [
          "Introduction to ESP32 Basic WiFi",
          "WiFi Examples: Scanner and NTP examples",
          "EEK Web Server Example",
          "Wifi-Manager with EEK",
          "Mini-Project: NTP, WiFi-Manager and OLED",
          "Mini-Project: EEK UDP Server"
        ],
        "EEK and Bluetooth": [
          "EEK Bluetooth Introduction",
          "Bluepad32 Library and Board Support",
          "Bluepad OLED Joystick Support",
          "Bluepad D-Pad PWM Support",
          "Mini-Project: EEK Video Gamepad interaction"
        ]
      },
      "requirements": [
        "You have a modest programming background and can read software code. Any kind of secondary school or college intro course is sufficient, or you may have taken one of the many online programming introductions. Detailed Arduino programming knowledge is NOT required, but some basic Arduino awareness can be helpful.",
        "You are willing to learn basic microcontroller features and use cases, for example, using the ESP32 as a baseline. You can overcome any initial unfamiliarity with microprocessor elements and not need to dig deeply into basic electronics principles before learning from the many examples in the course."
      ],
      "description": "I designed this course to guide you through Arduino development, focusing on the ESP32 microprocessor family and using the Arduino IDE version 2.2.1 or newer. This course is ideal for learners eager to build real applications with kit hardware, regardless of their prior experience with the Arduino IDE or standard Arduino hardware.\nESP32 Microprocessors in Focus\nIn this course, I centre our learning on the ESP32 microprocessor, selecting at least 5 varieties that are compatible with our examples and mini-projects. If you already own an ESP32 development board, I'll show you how to make it work with our course content, although some customization might be necessary due to differences in pin numbering.\nLearning Methodology and Content\nI adopt an examples-based learning approach, starting with simple Arduino code and advancing to more complex examples. I cover breadboard construction and provide lessons on using LEDs, push-button switches, mini OLED displays, and an MPU with a gyroscope and accelerometer. We'll conclude the first part of the course with a project that integrates ESP32 WiFi and Bluetooth capabilities with a video game system controller.\nKit Options\nI offer the option to purchase an all-inclusive, affordable hardware kit for this course, but it's not mandatory if you already have the necessary components. The kit options range from a basic version with a less-capable ESP32 to a more advanced kit featuring the Adafruit ESP32 Feather Huzzah and a LiPo battery, allowing your projects to operate wirelessly. I also provide PCB versions for a more stable assembly experience for those with soldering skills.\nWho is this course for?\nThis course is for anyone who wants to explore the world of cyber-physical systems where the worlds of software and physical system control meet.\nIf you have seen a drone in flight and are curious about how the drone receives and executes commands, this course is for you. In part 2 of the course, the hardware of part 1 is used to control a drone and/or a drone simulator.\nIf the world of Arduino programming is one you want to learn but don't want to start at an over-simplified beginning, this course is for you.\nIf hands-on exploration of simple electronic circuits using LEDs, switches, and displays is something you want to try, this course is for you.\nIf you have used video game controllers (gamepads) and would like to explore how they work and how you can make them interact with your own hardware, this course is also for you.",
      "target_audience": [
        "Beginners in Arduino development seeking to learn through practical examples.",
        "Hobbyists and makers interested in expanding their skills to include ESP32 microprocessors.",
        "Individuals with a basic understanding of Arduino looking to delve into more advanced projects involving WiFi, Bluetooth, and sensor integration.",
        "Educators and trainers looking for comprehensive material to teach ESP32 and Arduino development.",
        "DIY enthusiasts aiming to build and customize their own electronic projects with ESP32.",
        "Students in electronics, computer science, or related fields looking for hands-on experience with microprocessors.",
        "Professionals in electronics or IoT fields seeking to update their skills with the latest Arduino IDE and ESP32 development practices."
      ]
    },
    {
      "title": "VLSI/FPGA Design P4: STA && DC Synthesis",
      "url": "https://www.udemy.com/course/digital-icfpga-design-p4-sta-dc-synthesis/",
      "bio": "Static Timing Analysis and DC Synthesis",
      "objectives": [
        "Principle of STA",
        "Basics of stander cell library",
        "Characters of clock in STA",
        "Setup/hold timing analysis for same clock",
        "Common used timing constraints",
        "Timing analysis for same clock domain (synchronous path)",
        "Timing analysis for different clock domain (asynchronous path)",
        "Synthesis example using Design Compiler (including whole TCL script)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction of Static Timing Analysis"
        ],
        "Principle of STA": [
          "Why need Static Timing Analysis",
          "Timing and DRC Check Types",
          "Cell Library and Delay Calculate",
          "Go Through lib File of Skywater 0.13um Cell Library"
        ],
        "Timing Analysis for Path Driven by Same Clock": [
          "Charactors and Define of Clock in STA",
          "Terminology for STA",
          "Setup&&Hold Calculation for Timing Path of Same Clock"
        ],
        "Timing Analysis for Synchronous Path Driven by Different Clocks": [
          "Find Clock Edge for Timing Path Driven by Different Clocks",
          "Timing of Sync Path Driven by Different Clocks"
        ],
        "Common Used STA Constraint Commands": [
          "create_clock and create_generated_clock",
          "set_clock_groups",
          "set_false_path",
          "set_input_delay",
          "set_output_delay and Timing Cal. Example",
          "set_multicyc_path",
          "set_max_delay and set_min_delay",
          "set_input_transiton and set_load",
          "Summary of Common Used STA Constraints"
        ],
        "DC Synthesis": [
          "DC Synthesis Flow, Fanout and Wire Delay Estimation",
          "Most Important DC Commands",
          "Go Through Complete DC Synthesis TCL Script",
          "Read and Understand the DC Synthesis Script",
          "Can cell library of FF/TT PVT corner be used as target_library in DC synthesis?",
          "Pipeline to Fix Setup Violation",
          "Quiz of This Chapter"
        ],
        "Free FPGA Synthesis Tool and Usage Example": [
          "Free FPGA Synthesis Tool and Usage Example"
        ],
        "Advanced Topics": [
          "Timing Constraint for Asynchronous Path",
          "Concept of On-Chip-Variation (OCV)",
          "Can single PVT corner analysis model be used in synthesis?"
        ],
        "Summary": [
          "Summary",
          "Read papers on STA",
          "Promotion: VLSI/FPGA Design Resume Project: 2D DMA Controller with APB+AXI Inf."
        ]
      },
      "requirements": [
        "Basic knowledge of digital fundamental"
      ],
      "description": "Please contact SKY (DM or E-mail to siliconthink@126.com) for special offer of $12.99 USD.\nIn this chapter I will introduce how to do static timing analysis for digital circuit. And give you're a synthesis example using Design Compiler from Synopsys. Detailed contents:\n1: Principle of STA;\n2: Basics of stander cell library;\n3: Characters of clock in STA;\n4: Setup/hold timing analysis for same clock;\n5: Common used timing constraints;\n6: Timing analysis for same clock domain (synchronous path);\n7: Timing analysis for different clock domain (asynchronous path);\n8: Concept of OCV;\n9: Synthesis example using Design Compiler from Synopsys (including whole TCL script);\n\n\nThis is chapter 4 of whole Digital IC and FPGA design course.\nIn the whole course, I will introduce fundamentals of digital IC and FPGA design, with 12+ coding exercises and 3 course projects.\nTheory part: MOS transistor -> logic cells -> arithmetic data path -> Verilog language -> common used HW function blocks and architecture -> STA -> on-chip-bus(APB/AHB-Lite/AXI4) -> low power design -> DFT -> SOC(MCU level).\nFunction blocks and architecture: FSM, pipeline, arbiter, CDC, sync_fifo, async_fifo, ping-pong, pipeline with control, slide window, pipeline hazard and forward path, systolic.\nProject: SHA-256 algorithm with simple interface, SHA-256 with APB/AXI interface, 2D DMA controller with APB/AXI interface.\nAfter explaining of each HW architecture, I will give you a coding exercise, with reference code. Coding difficulty will begin from several lines to fifty lines, more than 100 lines, then around 200 lines. While the final big project will be 1000+ lines.\nI suppose these should be essential knowledge and skills you need master to enter this area.\nI will try my best to explain what-> how-> why and encourage you to do it better in this course.\n\n\nPlease browse to my homepage on Udemy to obtain information about each chapter of this course.",
      "target_audience": [
        "Senior undergraduate students of EE or higher",
        "IC design/verification engineers with 0~2 year experience"
      ]
    },
    {
      "title": "Internet Of Things (IoT) - Demystified using 3 IOT devices",
      "url": "https://www.udemy.com/course/internet-of-things-iot-demystified/",
      "bio": "Become IOT expert with Arduino, NODE MCU ESP 8266/ESP 32 & Raspberry Pi - using sensors, micro-python and cloud platform",
      "objectives": [
        "Quickly learn about Arduino Uno, NODE MCU 8266 and Raspberry PI along with critical protocols and its communication to cloud",
        "Understand how micropython firmware are deployed or embedded on to IOT devices like NODEMCU ESP 8266 / ESP 32",
        "Understand commonly used IOT protocols such as REST API, MQTT through IOT based demonstration.",
        "Get an understanding about the latest IOT protocol LoRaWAN and its application",
        "Learn by doing a voice based smart building IOT application using open source application (Adafruit -MQTT,IFTTT) and mobile app (Google assistant)",
        "Single course - Get hands on with multiple : IOT Devices, protocols and cloud applications",
        "Analog sensor and digital sensor Interfacing with IOT device - Demonstration",
        "IOT Board comparison - Node MCU ESP 8266 Vs ESP 32 || Raspberry Pi 3 model B Vs Raspberry Pi 4"
      ],
      "course_content": {
        "Internet of things - Introduction and its components": [
          "Course Overview",
          "Introduction",
          "IOT - Building Blocks",
          "Sensors and Actuators",
          "IOT Devices",
          "IOT boards comparison chart",
          "Check your knowledge - Quiz 1"
        ],
        "Arduino Uno": [
          "Getting started with Arduino - blink program",
          "Getting started with Arduino - blink program - Contd",
          "Check your knowledge - Quiz2"
        ],
        "Simulated Case study - Humidity Control using Arduino Uno": [
          "Case study overview",
          "Hardware details and associated circuit connection",
          "Arduino software library install and Sketch (program)",
          "Solution Demonstration"
        ],
        "NODE MCU :ESP8266-12E - Micropython and Esplorer IDE": [
          "Micropython and Esplorer IDE",
          "Flushing the ESP8266 board with micropython",
          "Connecting to NODE MCU 8266 to WIFI"
        ],
        "NODE MCU - ESP8266 12E- Interfacing with Cloud": [
          "REST API - GET using micropython and Node MCU",
          "REST API-GET: Demonstration - Using NODE MCU, micropython, Openweathermap",
          "REST API- POST using NODE MCU, Sensor and micropython",
          "REST API - POST: Demonstration using NODE MCU, Sensor output and micropython",
          "What is MQTT?",
          "MQTT - micropython code",
          "MQTT demonstration for switching light ON/OFF"
        ],
        "New - ESP 32 board comparison overview with ESP3266": [
          "An Overview comparison with ESP 32 development board",
          "Check your knowledge - Quiz 3"
        ],
        "Voice based - IOT for smart building application": [
          "Voice based IOT Application overview step",
          "Arduino IDE Setup for NODE MCU programming and communication",
          "Adafruit MQTT setup",
          "IFTTT Setup - Interface between Google assistance and Adafruit MQTT feed",
          "Program, Test - Adafruit MQTT and IOT Device communication",
          "Setting up Google assistant in Android phone",
          "Voice based IOT solution demonstration"
        ],
        "Rasberry PI": [
          "Rpi introduction and installing the Raspberry OS - Options- Rpi imager vs Manual",
          "Raspberry OS installation through Raspberry Imager tool - New & easy way!",
          "Headless - Computer and Rpi3 configuration to connect through SSH via Ethernet",
          "Headless - Rpi configuration for wifi connect",
          "Headless - connecting Rpi3 remotely without Ethernet cable via SSH, IP address",
          "Rpi 3 - Testing the GPIO pins through Scripts"
        ],
        "Raspberry PI 3 interfacing to sensor and communication to cloud": [
          "Raspberry pi3 interfacing with Sensor DHT11",
          "Raspberry pi3 python library install and reading sensor feed",
          "'Plug and play ' type cloud platform overview for integration to IOT devices",
          "'Plug and play' cloud platform for integration to IOT device - actuator (LED)",
          "Plug and play platform - Custom widget (DHT11-Sensor) integration through Python",
          "Check your knowledge - Quiz 4"
        ],
        "New - Raspeberry Pi 4 Vs Raspberry Pi3 Mobel B Comparison": [
          "New - Raspeberry Pi 4 Vs Raspberry Pi3 Mobel B Comparison"
        ]
      },
      "requirements": [
        "Basic electronics and some programming experience particularly in python is desirable.",
        "Hardware : IOT boards - Arduino UNO, NODEMCU ESP 8266, Raspberry PI3 - This would be based on the activity you wish to build or practice",
        "Hardware: Other Components - Few resistors, potentiometer (5K~10K OHM), breadboard, LEDs, DHT 11 sensor"
      ],
      "description": "Become an expert in IoT in shortest possible time. This is an ultimate bundled course with multiple features and would truly stand out in the crowd.\nFew of the unique features of the course are:\nAll in One:\nThis course has explanation and live demonstration on the most widely used IOT boards, namely.\nArduino  Uno.\nNode MCU - ESP 8266 / ESP32 - Understand and use micro python, the latest programming languages in IOT\nRaspberry pi 3- Model B.\n\n\nMicro python are  increasingly getting adopted these days in tiny micro controller IoT devices. Towards this, the course provide complete explanation right from flashing /installing micro-python in a micro controller IoT device - namely ESP Node MCU - 8266 up to its integration to cloud.\n\n\nAdded to this, has simple and easy to understand demonstration on REST API and MQTT protocols which are widely used in resource constrained IOT devices such as ESP NODE MCU - 8266, Raspberry pi etc.\n\n\nFor better understanding on cloud integration data analytics with IoT, wide range of open source platform as a service cloud(PaaS)  have been used:\nOpenweathermap\nCloudmqtt\nThinkspeak\ngoogle assistant with  IFTTT , Adafruit IO dashboard\nMydevices\nVoice based IOT - smart building application using NODE MCU 8266 . This is demonstrated using open source application and mobile app - google assistant.\n\n\nFinally, all the code units (micropython ,python & Arduino IDE) used in the course are available in the resources for download.\nOnce you have gone through the course, you would have a expert level understanding of not only IOT devices but also the some of the critical protocols used in IoT and its integration to cloud platform. More importantly, all this is explained through the widely used IoT language of Python.\n\n\nGood luck on being early adopter of IOT and on your journey of exploring the next generation technology revolution!\n\n\nHappy learning!!!.",
      "target_audience": [
        "Any one interested and learn about different IOT devices, its associated protocols and its communication with cloud world",
        "Engineering students who are interested in Internet of things , taking up up projects in Internet of things and career in IoT."
      ]
    },
    {
      "title": "Wireless Control Mastery: DTMF & PIC Microcontroller",
      "url": "https://www.udemy.com/course/pic-dtmf-picmicrocontroller-control-anything-anywhere/",
      "bio": "Wirelessly control devices using DTMF tones and PIC microcontrollers—build real-world remote systems with confidence.",
      "objectives": [
        "Learn how to make your own PIC Wireless long distance Controller via DTMF Decoding without the Internet, WiFi or Bluetooth",
        "Learn about DTMF Decoder and how they are useful to your electronic Projects",
        "Learn how to give PIC Microcontroller Super-Powers without extra modules",
        "Learn How to program PIC Microcontroller using MikroC Software",
        "Learn How to make your own DTMF Decoder",
        "Learn How to use interface DTMF Decoder with PIC Microcontroller.",
        "Learn How to make your own DTMF Decoder PCB Board using Eagle Free Circuit Design Software",
        "Learn How to Simulate Your Circuit using Proteus Professional Software",
        "Learn How to Make a 3D Case for your Project Board to Protect them from Environmental Conditions using Fusion 360"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Introductory Interview: Designing Wireless Control with DTMF and PIC Microcontrollers",
          "Who We Are?",
          "Course Overview and Project Goals"
        ],
        "Hardware and Software Requirements": [
          "Hardware and Software Requirements"
        ],
        "Concept Behind This Project": [
          "Concept Behind This Project",
          "DTMF and Wireless Control – Project Concept"
        ],
        "DTMF": [
          "What is DTMF",
          "Basic Layout and Function Explained",
          "DTMF Decoder",
          "Understanding DTMF and Its Functionality",
          "DTMF Decoder Circuit Explained",
          "Building and Understanding DTMF Decoders"
        ],
        "Headphone Jack": [
          "Headphone Jack Explained in Details",
          "Understanding Headphone Jack Pinouts"
        ],
        "Project Creation": [
          "DTMF Circuit Schematic",
          "Circuit Design for PIC Microcontroller",
          "C Coding and Simulation for DTMF Project",
          "DTMF Circuit Design and Microcontroller Integration",
          "Building the Full DTMF Circuit for PIC Microcontroller"
        ],
        "PCB Design": [
          "Make DTMF Decoder Module PCB",
          "Designing a PCB for DTMF Decoder Module"
        ],
        "Practical": [
          "DTMF Decoder Practical Example"
        ],
        "Fusion 360 Designing a 3D Printed Enclosure for Arduino Uno": [
          "Design the outer frame in 2d",
          "Extrude and Split the body in half",
          "Create standing points for the case",
          "Designing and Modeling Enclosures for Electronic Circuits",
          "Using Time Machine to Fix errors and add fillet",
          "Upper body holes and Chamfering process",
          "Importing Arduino UNO 3D Model",
          "Refining and Finalizing Enclosure Designs in Fusion 360",
          "Creating Joints and fixing issues",
          "Surface Cut out",
          "Adding Pins cut out and some art work",
          "Enclosure Assembly, Cutouts, and Final Touches in Fusion 360",
          "3D Animation",
          "Create a sketch for Arduino Mega",
          "Creating the 3D Body for Arduino Mega",
          "3D Animation and Arduino Mega Enclosure Design",
          "Add Arduino Mega 3D Model",
          "Finishing the Board"
        ],
        "Download and Install Software Section": [
          "Download and Install MikroC Software",
          "Download and Install Proteus Software",
          "Download and Install Eagle Software",
          "Software Installation for Circuit Design and Simulation",
          "Run Fusion 360 for the First time"
        ]
      },
      "requirements": [
        "Basic Knowledge of Programming"
      ],
      "description": "Want to control devices from your phone without Wi-Fi, apps, or complex setup?\nThis course unlocks a classic yet powerful wireless control method using DTMF (Dual Tone Multi-Frequency) signals—like the tones from your phone keypad. You’ll learn how to decode these signals and trigger devices through a PIC microcontroller, creating reliable, offline control systems perfect for security, automation, and rural projects.\nIf you want to build phone-controlled devices with minimal hardware and high reliability, this course is your key.\nWhy DTMF + PIC?\nNo Internet required—just a phone signal or call\nWorks remotely and reliably, even in low-signal areas\nEasy to integrate with relays, motors, alarms, and automation systems\nIdeal for use in remote gates, irrigation systems, and security devices\nThis course shows you how to:\nConnect a DTMF decoder to a PIC microcontroller\nDetect and decode keypress tones from any phone\nUse embedded C to process and act on DTMF input\nBuild a working wireless device controller using phone input\nWhat You’ll Learn\nHow DTMF works and how it’s used for control systems\nConnecting and configuring a DTMF decoder (MT8870)\nWriting embedded C to process tone inputs on a PIC microcontroller\nMapping tone inputs to specific actions (e.g., turning on LEDs, motors, alarms)\nBuilding a complete phone-controlled relay or device switcher\nDebugging DTMF communication and signal handling\nExpanding the design for more channels or feedback\nProjects You’ll Build\nA phone-controlled electrical relay system\nA secure remote switch that responds only to specific DTMF codes\nA multi-output control board triggered via keypress sequences\nA simple remote automation prototype for irrigation or gate systems\nJoin now and master DTMF-based wireless control using the reliability of PIC microcontrollers.\nWho This Course Is For\nIntermediate learners with basic microcontroller and C experience\nStudents building wireless control or automation projects\nDIY electronics makers seeking no-internet control options\nEngineers working on remote-area or low-cost systems\nAnyone curious about old-school yet effective control tech\nRequirements\nBasic knowledge of PIC microcontrollers and embedded C\nPIC development board (e.g., PIC16F877A)\nMT8870 DTMF decoder module\nPhone (landline or mobile with keypad tones), SIM module (optional)\nRelays, LEDs, resistors, jumper wires, breadboard\nInstructor Bio\nThe Educational Engineering Team, with over 250,000 students trained, specializes in embedded control systems that solve real-world problems. Their expertise in microcontroller-based communication and automation makes this DTMF course a standout for anyone looking to master wireless control—without relying on Wi-Fi or apps.\nFAQ\nQ: What phone do I need?\nA: Any phone with a keypad that produces tone-based sound (DTMF) works—landline or mobile.\nQ: Is this like Bluetooth or Wi-Fi control?\nA: No—it’s audio-based wireless control using sound signals from phone calls, with no internet needed.\nQ: Do I need a SIM module or GSM setup?\nA: Optional—you can test with a direct audio line or expand with GSM for full remote control.\nQ: Will I get a certificate?\nA: Yes—a Certificate of Completion is awarded at the end of the course.\nQ: Can this be used in rural or offline areas?\nA: Absolutely! That’s one of the biggest strengths of DTMF control systems.\nJoin Now – Build Reliable Wireless Control with DTMF & PIC",
      "target_audience": [
        "Anyone interested in making his own PIC Microcontroller Wireless long distance Controller via DTMF Decoding without the Internet,WiFi or Bluetooth",
        "Anyone interested in Controlling sensors, devices or projects from a distance without WiFi, Bluetooth or RF Modules",
        "Anyone looking for an easier to program PIC Microcontroller for Long distance Control",
        "Anyone looking to Save time in the development phase of your project",
        "Anyone looking for an easy way to change or update something in his PIC Microcontroller based device/project.",
        "Anyone looking for long distance control without the need for extra Bluetooth, WiFi, RF, or any other module.",
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Embedded Systems Geeks",
        "PIC Microcontroller Geeks",
        "IoT and embedded systems Geeks",
        "Home Automation Geeks"
      ]
    },
    {
      "title": "Embedded C Programming Course from Zero to Hero",
      "url": "https://www.udemy.com/course/embedded-c-programming-course-from-zero-to-hero/",
      "bio": "Course on Embedded C programming using STM32 & TM4C123 Microcontroller.",
      "objectives": [
        "C Programming Concepts with practical examples in embedded systems",
        "Arm Cortex - M Architecture",
        "STM32F4 Microcontroller Architecture",
        "TM4C123 Microcontroller Architecture",
        "Building your CMSIS Header and Source files from scratch for arm cortex m",
        "Basic techniques for mastering embedded systems in c",
        "Detailed knowledge on writing your own drivers for any arm cortex m based microcontroller from scratch",
        "Refer the curriculum below for detailed course topics over 64 lectures"
      ],
      "course_content": {},
      "requirements": [
        "Nothing I will teach you everything from scratch",
        "Hardware testing is preferred but I will teach you simulation also which you can manage w/o hardware"
      ],
      "description": "Over a 64+ lecture videos, 15+ Hours of Full HD Content that will take you in an interactive learning to not only master the coding of C Programming from basics each and every concepts but also TM4C123 & STM32F446 Microcontroller based out of  Arm Cortex M processor, And it will make you familiar and capable for writing drivers and building applications as per your requirement with similar controllers with same  ARM Cortex M processor, but also learn the very basics of TM4C123GH6PM & STM32F446RE Microcontroller internal structure and hardware schematics along with basics of TM4C123GH6PM & STM32F446RE for writing  peripheral drivers required for building your own products out of microcontroller, how it really works, it’s parts and how your code is working inside the CPU of a Microcontroller.\nHi, welcome you all to this course on Embedded C Programming Course from Zero to Hero (STM32F4 & TM4C123).\nThe course is structured for the need of learners to understand C programming concepts and microcontrollers from scratch till you master your skills. This course is the outcome of the experience I gained after training many of graduate students and working professionals in person, and with my expertise in the field of embedded systems..\nSM Training Academy invites you all to enroll in this course and explore the world of embedded systems with step by step guidance by own expert trainers to excel in their career. There is no better way to master and understand the concepts than joining this course. Whatever you want to learn is available in this course and also we will be updating the course with new lectures in a periodical manner. So join the course and enjoy learning.",
      "target_audience": [
        "Electronics hobbyist",
        "Everyone who is passionate on embedded system",
        "Electronics students",
        "Working professionals who needs to expand their knowledge"
      ]
    },
    {
      "title": "SIEMENS TIA PORTAL Advanced Level, Factory IO PLC Course Pt2",
      "url": "https://www.udemy.com/course/siemens-tia-portal-advanced-level-factory-io-plc-course-pt2/",
      "bio": "Advanced PLC programming course with TIA Portal Siemens software, unlike any other course you have taken.",
      "objectives": [
        "Learn to program PLCs in a simple way with logical thinking to solve problems in the field.",
        "Advanced Sequences and Instructions from scratch with TIA PORTAL",
        "Usage and programming in Factory IO",
        "Learning and communicating the 4 programming languages focused on SIEMENS",
        "Elaborate complex programs with real industrial exercises carried out in the field.",
        "Learn industrial automation concepts, with a focus on SIEMENS",
        "Analog Signals",
        "In-depth knowledge of PID"
      ],
      "course_content": {},
      "requirements": [
        "Logical sense",
        "Knowledge and Passion for Industrial Programming",
        "Laptop/PC capable of running TIA PORTAL-Factory IO software"
      ],
      "description": "IMPORTANT: This is the second part of the complete TIA Portal course with more than 35 hours in total. It is for intermediate and advanced levels. If you want to know TIA Portal and Siemens from basic level and from 0, we recommend you to purchase the first part of this course. Thank you.\n\n\nAt last the Siemens course is here.\nThanks to all of you for the great support I have received over the years.\nMy way of thanking you, is to continue providing courses with the best quality, explained through experience and with situations that will really live in the professional field of automation.\n\n\nWhy is this course so different from any other course you have taken before?\nIt is the first course in the world where differences and similarities between the Allen Bradley and Siemens programming environment are explained.\nNowadays, the more knowledge we have, the better, therefore, having more than 30 k students around the world, and with knowledge mostly from Allen Bradley, we implemented this new way of teaching so that they do not have complexity when programming between one brand and another.\n\n\nIs the course practical?\nThanks to the simulators that will be provided in this course, you can practice and simulate real exercises from your computer.\n\n\nCourse syllabus:\nADVANCED SECTION PART 1.\n1 Analog Signals, Going Deeper into Theory\n2 Analog Inputs in TIA Portal and Studio 5000\n3 Analog Outputs\n4 Analog Tank Filling Practice\n5 Date and Time, Reading and Writing\n6 OK Not OK Instructions\n7 MOVE instruction\n8 Purchase Factory IO License\n9 Configuring Factory IO with TIA Portal\n10 Factory IO Scene 2 Resolution\n11 Resolution of Scene 3 in Factory IO\n12 Troubleshooting Scene 4 in Factory IO\n13 Resolution of Scene 5 in Factory IO\n14 Complement of Scene 5 in Factory IO, Safety Reset and Pause Buttons\n15 Scene 5 Resolved Example\n16 Introduction to PID Control\n17 Practical Tank Filling with PID Control\n18 Graphing Variables with TRACES Tool\n\n\nADVANCED SECTION PART 2.\n1 Configuring Siemens Web Server\n2 Creating Our First Project in Siemens Web Server\n3 Reading and Writing Variables on the Web Server\n4 Advanced Siemens Web Server Templates\n5 Remote Web Server Connection on Mobile or Tablet. Final Details\n6 PLC's Communication, PUT Instruction 7 PLC's Communication, GET Instruction\n8 PLC's Communication, Tsend Treceive Instruction\n\n\nSECTION,\n1 Creating New HMI Project, Color and Visibility Animation",
      "target_audience": [
        "Recent graduates in control and automation engineering, mechatronics engineering, robotics engineering, etc.",
        "Junior programmers who are starting their career and wish to increase their knowledge exponentially.",
        "Technicians/Engineers who practice Industrial Programming in any line of business.",
        "Students who have already completed the first course of TIA PORTAL BASIC"
      ]
    },
    {
      "title": "ArcGIS PRO: Mapping and Spatial analysis",
      "url": "https://www.udemy.com/course/arcgis-pro-mapping-and-spatial-analysis/",
      "bio": "From basic to Expert",
      "objectives": [
        "Georeference and digitize a map",
        "Import an Excel XYZ file and view the sampling map",
        "Do a geospatial analysis and create a topographic map",
        "Create a raster image, manipulate it and create a 3D map",
        "Create 5 different types of thematic maps",
        "Make a complete map layout"
      ],
      "course_content": {},
      "requirements": [
        "Have installed the ArcGIS pro software",
        "Have a pc",
        "Have internet connection"
      ],
      "description": "ArcGIS pro is one of the best Mapping & GIS software. It can help you create any type of map and manipulate geospatial data.\n\n\nIt is simple, powerful and has an intuitive graphic interface to make your projects more satisfying.\n\n\nMastering it allows you to stand out from your competitors and boost up to your CV. It's indicating to your employer that you are update on technology.\n\n\nMastering Mapping & GIS with ArcGIS pro is one the best way you can guarantee your success. And this for the following reasons:\n\n\nWhatever the field of activity, the use of the creation of maps is essential to represent the objects, manage, analyze and interpret the phenomena studied.\nCartographers are essential and called upon to work in various fields.\nBeing an expert Cartographer pays off in cash! a GIS engineer earns €43,646/year\nEarn a living as a micro-entrepreneur by creating a GIS firm or by offering its services on dedicated platforms (Fiveer, Upwork, 5euro, etc.)\nWhy should you chose our training?\nThis is a practical training, made to traine you step by step for you to gain the skill in GIS & Mapping with ArcGIS PRO\nI have used all my experience of GIS instructor and Geo-Infopreneur to create for you the course that will be so ease and so understable\nWe provide you all the ressources that you need for you to practice this course",
      "target_audience": [
        "Geologist",
        "Mining engineer",
        "Gis",
        "Geomatician",
        "Interested"
      ]
    },
    {
      "title": "Build Attendance System using RaspberryPi, Parse & Kotlin",
      "url": "https://www.udemy.com/course/build-attendance-system-using-raspberrypi-parse-and-android-kotlin/",
      "bio": "Track attendance in real time through an IOT hybrid system using Android Kotlin, Parse server, Rpi & Push Notifications",
      "objectives": [
        "Discover Raspberry Pi technology",
        "Control LCD Display using Raspberry Pi",
        "Control 4x4 Keypad using Raspberry Pi",
        "Control RFID RC522 chip using Raspberry Pi",
        "Learn how to use Parse Platform (Parse Server)",
        "Learn how to use back4app web service to host Parse App",
        "Send and receive push notifications",
        "Manage Parse App backend using the REST API",
        "Learn Android development using Kotlin",
        "Manage Parse App backend using the Android client API",
        "Build Attendance Tracking System from scratch and step by step"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Initiation to Raspberry Pi": [
          "Install the Raspbian Operating System inside a micro SD-Card",
          "Start Raspberry Pi as regular computer (stand alone mode)",
          "Download and install the ssh client “Putty” in windows",
          "Activate SSH access in a fresh Raspbian operating system",
          "How to get the IP address of a Raspberry Pi device connected to the network?",
          "Access Raspberry Pi Desktop using VNC"
        ],
        "Control 20x4 I2C LCD Display using Raspberry Pi": [
          "Activate I2C interface in Raspberry Pi",
          "How to connect I2C LCD display to Raspberry Pi?",
          "Install the LCD controller",
          "Control the LCD display from external scripts using named pipes",
          "How to automatically start the LCD controller after rebooting Raspberry Pi?",
          "How to schedule periodic tasks using \"cron\"?",
          "Activity: Print date & time in the LCD display",
          "Activity solution"
        ],
        "Control 4x4 Keypad using Raspberry Pi": [
          "Connect 4x4 Keypad to Raspberry Pi",
          "Install and use 4x4 keypad controller",
          "Activity: Write text to LCD Display from the Keypad controller",
          "Activity solution"
        ],
        "Control RFID RC-522 chip using Raspberry Pi": [
          "Connect RFID RC522 chip to Raspberry Pi",
          "Activate the SPI interface in Raspberry Pi",
          "Install the SPI Python library",
          "Clone the RFID controller",
          "How to write data to RFID tag?",
          "How to read data from RFID tag?",
          "How to use the RFID controller from a different directory?"
        ],
        "Persist Data to the cloud using Parse Platform": [
          "Introduction to the Parse Platform",
          "Introduction to Back4app service",
          "Manage data using the dashboard (create, update & delete classes & data objects)",
          "Save new data in the Parse backend (using Python)",
          "How to query data? (using Python)",
          "Update existing data (using Python)",
          "Delete existing data (using python)",
          "Activity: Add a salary for an employee using his Social Security Number (SSN)",
          "Activity solution"
        ],
        "Setting up the Android development environment": [
          "Introduction",
          "Installation of Android Studio (Windows)",
          "Installation of Android Studio (Ubuntu)",
          "Installation of Genymotion emulator (Windows)",
          "Installation of Genymotion emulator (Ubuntu)",
          "Create, & run Genymotion virtual device",
          "Android World"
        ],
        "Initiation to Android Development using Kotlin": [
          "Create your first Android application “Hello World”",
          "Deploy an android application on Genymotion virtual device",
          "Deploy an android application on a real Android device",
          "TextViews, EditTexts, Buttons in Android using Kotlin",
          "Intents in Android using Kotlin",
          "ListView in Android using Kotlin",
          "RecyclerView in Android using Kotlin",
          "DatePicker in Android using Kotlin",
          "Take picture from camera in Android using Kotlin",
          "Pick picture from gallery in Android using Kotlin",
          "Android development"
        ],
        "Access Parse Server data from Android application": [
          "How to prepare an Android App to interact with Parse Server",
          "How to Retrieve Parse server data from Android",
          "How to apply query constraints?",
          "How to retrieve files?",
          "How to handle pointers ( Part 1 )",
          "How to handle pointers ( Part 2 )",
          "How to save objects in Parse from Android?",
          "Activity: Display the employees data retrieved from the cloud in a RecyclerView",
          "Activity solution"
        ],
        "Push notifications": [
          "How to implement Android push notification in Parse? ( Part 1 )",
          "How to implement Android push notification in Parse? ( Part 2 )",
          "How to use channels to send notifications?",
          "Subscribe / unsubscribe to push channels"
        ]
      },
      "requirements": [
        "Basics of Programming"
      ],
      "description": "In this course, we will guide you step by step to build your own real time attendance tracking system using Raspberry Pi, Android, Kotlin and Parse server.\nWe will start by introducing the used technologies to build the real time attendance tracking system.\nWe will teach you how to use Raspberry Pi to control I/O devices like LCD display, 4x4 Keypad and RFID Chip.\nWe will teach you as well, how to create android applications using Kotlin, and we will see together how to use basic concepts in Android, like TextViews, Buttons, EditTexts, RecyclerView, Date picker, Camera, Gallery, etc.\nYou will learn also, in this course, how to use Parse server to create a cloud backend for your applications, and you will be able at the end of this course, to manage your stored data in Parse, using either the Raspberry Pi through the REST API and Python, or using Android Kotlin through the Parse client API.\nAlso, you will learn how to implement push notifications in your Application, and how to send notifications from the Raspberry Pi using the REST API.\nFinally, the capstone project consists of building a real time attendance tracking system using the learned features, this project will be composed of three sides, the first one will be the Raspberry Pi based device which will be used by the employees to mark their attendance using the RFID tags, and the second side will be the Kotlin based Android Application which will be used by the admin to track the attendance of his employees in real time.\nThese two sides will connect together using Parse backend App.",
      "target_audience": [
        "Beginners",
        "IT Students",
        "Developers",
        "Any curious learner who want to start an IOT carreer"
      ]
    },
    {
      "title": "Prototyping & 3D printer",
      "url": "https://www.udemy.com/course/prototyping-3d-printer/",
      "bio": "Robotics: Learn by building, Course 4",
      "objectives": [
        "Prototyping inventions that do not yet exist with a focus on robotics",
        "Taking a product concept from your head to development",
        "Designing robots and robotic systems",
        "how to scratch build a device, robot or product"
      ],
      "course_content": {},
      "requirements": [
        "You will need to be well versed in electronics, digital electronics, arduino and robotic drives such as stepper motors or servos."
      ],
      "description": "New for October 2024\nThis module will fuse together everything you learned in the first three courses in the Robotics: Learn by building series. You will learn the fine art of prototyping, which is construction of original machinery from scratch. You'll then use it all to build your first robot, a 3D printer. 3D printers really are robots, and with a 3D printer you can then literally print custom designed parts for your robot designs. The 3D printer design we will focus on will also double as a 3D scanner. You will learn various 3D scanning and modeling techniques such as photogrammetry.\nIan will show a variety of both tools, techniques and best practices, including tips and tricks from his own decades of experience in prototyping and modeling. You'll see first hand how to use tools you may already have to work in ways you probably never thought of, to make complex parts. You'll also learn different mold making techniques and special tools you've probably never seen before, or show good and safe ways to use these tools.\nYou can choose to purchase the 3D printer parts kit, or the cheater kit of the laser cut birch plates and provide your own aluminum extrusions, bolts, hot head, etc... Or you can scratch design and build your own 3D printer from new parts or scavenged parts. Because you are the one designing and building your 3D printer, there are fewer limits to what you can do with it. It can have a huge printing bed compared to commercial 3D printers that would normally cost thousands of dollars, or you can retrofit it with a laser cutter to custom cut your own parts, or retrofit it with a milling head to cut your own custom metal parts. All these systems incorporate the same principles of the computer controlled gantry, effectively a robot.\n\n\nPlease note this is a new course and it will take months to add all the lessons in. Here is some of what you will learn:\nWhat is prototyping?\nFirst secret of prototyping: *redacted* (it's a secret - you'll have to take the lesson)\nBe P.R.O.F.E.S.S.I.O.N.A.L.\nSome Terminologies\nPro tip #1: Printable patterns & CAD\nCase study: Mechanically animated museum display\nMaking the plates for your 3D printer\n-simply machining of even metals to apply CAD to prototyping your parts\nRobot design (and 3D printer design)\nDesigning electronic control boards for 3D printers and robots\nEffective use of common power tools\nMold making techniques\nHow 3D printers work\n3D printer assembly\n3D scanning techniques\nDesigning your 3D printer to double as a 3D scanner\nComputer Aided Design of robots and electromechanical devices\n3D modeling basics and designing your robots in CAD\nThe various stages of assembly, calibration and testing of your 3D printer\nUsing your 3D printer\nMaking caterpillar tracks for your robots\nPlastic working\nFiberglass working\nMetal working\nPlastic forming for our submarine robot case study",
      "target_audience": [
        "If you want to build your own robots and a 3D printer (which is a type of robot) or bring your inventions to reality."
      ]
    },
    {
      "title": "Arduino Social Distance Detector",
      "url": "https://www.udemy.com/course/arduino-social-distance-detector/",
      "bio": "This course will take you in a step by step guide on how to make your own Arduino Social Distance Detector",
      "objectives": [
        "Learn how to turn Arduino into a Social Distance reminder",
        "Maintain recommended social distance that you can adjust.",
        "Buzz an alarm when you are less than 6 feet away from any humans. A bright LED glows when the alarm beeps.",
        "Use the HC-SR04 Ultrasonic Sensor to measure distance and therefore object distance",
        "Build your own Arduino Social Distance Detector",
        "Know the working principle of Distance Sensor and how to use it",
        "Code Arduino in C and Java Coding",
        "Interface distance sensor with Arduino and Program it easily",
        "Detect the distance of objects around you by using the Arduino and HC-SR04",
        "Make a toy robot"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch",
        "Be familiar with the Arduino Uno",
        "Be familiar with the breadboard and wiring.",
        "You need to have a soldering iron and   soldering   rods.",
        "Students who are interested in creating a sensor-based Arduino project, whether it's a proximity sensor, a temperature sensor, or something else, will benefit from this course.",
        "Students will need a working knowledge of the Arduino and breadboard."
      ],
      "description": "Welcome to this course.\nIn today's fast-paced world, it's easy for people to get caught up in their own lives and forget to take care of themselves. This new Arduino Social Distance Detector course is designed to help students recognize the importance of self-care and how it can be accomplished on a daily basis.\nThis course will take you in a step-by-step guide on how to make your own Arduino Social Distance Detector.\nSocial distancing is the new way of life globally. Make your social distance detector at home and maintain social distancing while you are out and around people. A simple, cost-effective device with a step-by-step explanation on how to make it.\nThis device will turn on a sound alarm when you are less than 6 feet away from people around you. A bright LED glows when the alarm beeps, and you can add a buzzer to make sure that people will hear the alarm sound when they are close to you and this will remind them to keep a distance. This could be a lifesaver device if used wisely.\nIntroduction:\nThe Arduino Social Distance Detector is an upcoming course that will teach students to read proximity sensors in distances up to 10cm. With the availability of cheap proximity sensors, this project can be constructed for less than $30. The course includes tutorials on how to create a simple circuit consisting of the sensor, an Arduino board, and a breadboard. The final product in this course is the Arduino Social Distance Detector.\nExpectations:\nAn Arduino Social Distance Detector is a device that collects data related to objects (people) in the surrounding environment using distance sensors that cover a wide area.\nThe aim is to make a portable Social Distance Detector that helps protect lives.\nFeatures it should have:\nDetect different objects\nMeasure distance\nWire sensors and other electronic components to the Arduino UNO board\nStart testing the code yourself, with every piece of code well explained\nA lot of information is waiting for you inside this course. Join now and start making your own.\nYou will get to know how to wire each of these elements, how it works, and why we are using it inside this project. In no time, you will find yourself making your own Arduino Social Distance Detector that detects different objects (people around you) and the distance between you and each object.\nSTEPS:\nArduino and Python\nUnderstanding the environment around you\nData Processing\nFinal thoughts\nObjectives:\nUpon completion of the Arduino Social Distance Detector course, students will be able to:\nRecognize that self-care is important.\nRecognize that self-care can be accomplished on a daily basis.\nRecognize that self-care can be accomplished in a variety of ways, such as eating well, exercising, and staying connected to family and friends.\nHow does Arduino detect social distance?\nThe HC-SR04 is an ultrasonic sensor that you wire into your Arduino. You use this sensor to measure the distance of the objects around you.\nWhy you should take this course?\nLearn how to make your own Arduino Social Distance Detector.\nUnderstand the importance of social distancing.\nGain hands-on experience with Arduino and sensors.\nCreate a practical device that can help in maintaining social distance.\nUser Testimonials and Social Proof\n\"This course provided a practical solution to maintaining social distance. The step-by-step guidance was clear and easy to follow.\" - Emily R.\n\"A great project to work on during these times. It was informative and fun to build!\" - David S.\nAn Author Bio Showing Off Credentials\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nA Single Powerful CTA\nEnroll now and start your journey to mastering Arduino Social Distance Detector today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nHow to make your own Arduino Social Distance Detector\nHow to wire sensors and electronic components to the Arduino UNO board\nHow to code and test the Arduino Social Distance Detector\nUnderstanding the importance of social distancing\nWho Is This Course For\nAnyone interested in creating practical Arduino projects\nBeginners with no prior experience in Arduino\nMakers and hobbyists wanting to expand their knowledge\nStudents and professionals looking to enhance their skills\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "Electronics Geeks",
        "Arduino Geeks",
        "Anyone interested in making amazing electronics Projects",
        "Anyone interested in making amazing Microcontroller Projects",
        "Anyone who has or wants to create a low-cost home-automation device."
      ]
    },
    {
      "title": "VIVADO course regular FIFO vs AXI FIFO",
      "url": "https://www.udemy.com/course/vivado-regular-fifo-vs-axi-fifo/",
      "bio": "Learn what FIFO is and how to use FIFO IP Cores of Vivado Xilinx FPGA tool",
      "objectives": [
        "Fundamentals of a FIFO",
        "Differences between regular FIFO to AXI FIFO",
        "Main uses for FIFOs",
        "How to read and write a regular FIFO VS AXI FIFO",
        "How to simulate the FIFOs",
        "About FIFOs with 2 different clocks for read and write and when should we use it"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "FIFO - all about them": [
          "FIFO - what is it and why do we need it?",
          "FIFOs in VIVADO - explained",
          "Read and Write Regular FIFO - connecting the regular FIFO to my files",
          "Read and Write Regular FIFO - running simulation",
          "Read and Write AXI FIFO - connecting the AXI FIFO IP to my files",
          "Write AXI FIFO - running simulation",
          "Read AXI FIFO - running simulation"
        ],
        "Extra": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of VIVADO is required",
        "Basic knowledge of VHDL is required"
      ],
      "description": "In this VIVADO FIFO course you will learn what FIFO is and how to use it with VIVADO Xilinx FPGA tool.\nThis VIVADO FIFO course was created for students who wants to know more about FIFOs.\nBeside Xilinx VIVADO tool, this VIVADO FIFO course will help you getting the fundamentals about FIFOs.\nI will show you how to implement VIVADO built in FIFO IP cores and how to use them.\nI will introduce you to 2 of the most commons FIFO, Regular FIFO and AXI FIFO.\nWe will go through their settings and I will explain you about both of them.\nYou will learn how to read and write to the FIFOs and how to simulate it.\nI will explain you and show you what is the difference between FIFO with one clock for read/write to FIFO with 2 different clocks, one for read and one for write...\nFar more I will explain why and where do we use a FIFO with 2 different clocks\nIn the end of this VIVADO FIFO course you will be able to use FIFOs without any problem in any tool you want.\nThis VIVADO FIFO course is for anyone who wants to learn more about FIFOs and is mostly great for beginners who doesn't have any background with FIFOs.\n\n\n\n\nThis VIVADO FIFO course coming with 30 days refund guarantee",
      "target_audience": [
        "Anyone who wants to get familiar with FIFOs uses and implementations",
        "Anyone who wants to know how transfer data between components with different clocks from each other",
        "Anyone who wants to know more about VIVADO FIFOs options"
      ]
    },
    {
      "title": "PyUVM Series Part 3 : Python OOPS fundamentals",
      "url": "https://www.udemy.com/course/pyuvm-series-part-3-python-oops-fundamentals/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "Fundamentals of Classes",
        "Class Methods",
        "Inter-process communication",
        "Randomization",
        "Building verification environment in Python"
      ],
      "course_content": {
        "Fundamentals of Classes part 1": [
          "Fundamentals of Class",
          "Creating class p1",
          "Code",
          "Creating class p2",
          "Code",
          "Creating Class p3",
          "Code",
          "Understanding self p1",
          "Understanding self p2",
          "Code",
          "Double Underscore Methods",
          "Code",
          "User defined methods in Class",
          "Code",
          "Deleting Class",
          "Code",
          "A11",
          "A12",
          "A13",
          "A14"
        ],
        "Fundamentals of Classes part 2": [
          "Inheritance P1",
          "Code",
          "Inheritance P2",
          "Code",
          "Shallow and Deep Copy",
          "Shallow Copy",
          "Deep Copy",
          "Code",
          "A21",
          "A22"
        ],
        "Interprocess Communication (IPC)": [
          "IPC with functions",
          "Code",
          "IPC with classes",
          "Code",
          "Configurable delays",
          "Code",
          "Default behavior of Queue",
          "Code",
          "Queue with user defined size",
          "Code",
          "Event within task for single transaction P1",
          "Event within task for single transaction P2",
          "Code",
          "Event within task for multiple transaction",
          "Code",
          "Event with Mulitple classes",
          "Code",
          "A31",
          "A32"
        ],
        "Randomization": [
          "Adding random variables",
          "Code",
          "Using randomize_with",
          "Code",
          "Adding Constraints : Standalone",
          "Code",
          "Adding Constraints : Combined",
          "Code",
          "Adding Constraints : Overwriting Constraint",
          "Code",
          "Adding Constraints : Solving Order",
          "Code",
          "Adding Constraints : Dependent Constraint",
          "Code",
          "Adding Constraints : User defined weighted distribution",
          "Code"
        ],
        "Building Verification Environment": [
          "Understanding Verification environment P1",
          "Understanding Verification environment P2",
          "Understanding Verification environment P3",
          "Understanding Verification environment P4",
          "Understanding Verification environment P5",
          "Adding Transaction, Generator and Driver P1",
          "Adding Transaction, Generator and Driver P2",
          "Adding Transaction, Generator and Driver P3",
          "Code",
          "Adding Monitor and Scoreboard P1",
          "Adding Monitor and Scoreboard P2",
          "Code"
        ],
        "Project : 4-bit Synchronus Adder": [
          "Design",
          "TB Part 1",
          "TB Part 2",
          "TB Part 3",
          "Code"
        ]
      },
      "requirements": [
        "Fundamentals of Digital Electronics and Verilog",
        "Completion of Python for VLSI Engineer P1, and P2 Course  or Basics of Python & COCOTB"
      ],
      "description": "This comprehensive course is designed to empower software engineers, developers, and verification engineers with advanced Python programming skills for effective Object-Oriented Programming (OOP) and hardware verification tasks. Participants will delve into the fundamentals of Python and explore advanced concepts, including classes, inheritance, copy mechanisms, randomization, inter-process communication with queues, and task synchronization with events. The course will also provide hands-on experience in building a verification environment, encompassing generators, drivers, monitors, and scoreboards for robust Design Under Test (DUT) verification.\nKey Topics Covered:\nObject-Oriented Programming (OOP) in Python:\nUnderstanding classes and objects\nEncapsulation, inheritance, and polymorphism\nMethod overriding and operator overloading\nCopy Mechanisms:\nShallow and deep copy in Python\nBest practices for efficient copying\nCopying complex data structures\nRandomization Techniques:\nUtilizing the 'random' module for pseudo-random number generation\nRandomizing data for diverse test scenarios\nSeed management for reproducibility\nInter-Process Communication:\nIntroduction to Python multiprocessing\nCommunication using queues\nSynchronization and data exchange between processes\nTask Synchronization:\nImplementation of event-driven synchronization\nCoordinating tasks with events\nAvoiding race conditions and deadlocks\nVerification Environment:\nDesigning a verification environment for a Design Under Test (DUT)\nDeveloping generators for stimulus creation\nBuilding robust drivers for interfacing with the DUT\nMonitoring and analyzing DUT behavior with monitors\nScoreboarding techniques for result verification\nHands-On Projects:\nParticipants will engage in practical exercises and projects throughout the course, applying the learned concepts to real-world scenarios. This will include creating a complete verification environment for a sample DUT, incorporating OOP principles, copy mechanisms, randomization, and inter-process communication.\nBy the end of this course, participants will possess advanced Python skills, enabling them to design and implement efficient and scalable verification environments for hardware designs, while incorporating best practices in OOP and software development. This course is ideal for professionals working in fields such as hardware verification who want to enhance their Python proficiency for building Class based Verification environment in Python.",
      "target_audience": [
        "If you're excited about Python and DUT verification with Python, this is the place for you."
      ]
    },
    {
      "title": "Learn Xilinx System Generator from Scratch",
      "url": "https://www.udemy.com/course/learn-xilinx-system-generator-from-scratch/",
      "bio": "This course will teach you the basics of Xilinx System Generator tool and implement the models on Simulink.",
      "objectives": [
        "This course will help you learn how to use Xilinx System Generator using Simulink.",
        "Fundamentals of XSG",
        "Basic XSG models",
        "Image processing techniques"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Installation of MATLAB",
          "Installation of Vivado"
        ],
        "Fundamentals of XSG": [
          "Sampling",
          "Precision Arithmetic",
          "Xilinx Blockset",
          "System Generator Block",
          "Constant & Gateway blocks",
          "Demonstration of SineWave"
        ],
        "Implementing Basic models": [
          "Arithmetic operations",
          "Logical operations"
        ],
        "Image Processing": [
          "Introduction",
          "Image Negative",
          "Image Thresholding",
          "Image Enhancement"
        ],
        "Project1: Image Encryption using chaotic maps": [
          "Introduction",
          "Logistic Map",
          "Lozi Map",
          "Tent Map",
          "XOR Map",
          "Cascade Map & Conclusion"
        ]
      },
      "requirements": [
        "Basics of MATLAB and Simulink",
        "Theoretical background from Electronics and Communication Engg.",
        "But no worries! I will teach you everything required in the course."
      ],
      "description": "This course will teach you \"What is XSG and How to implement Simulink models using the tool\".\nXilinx System Generator is an FPGA programming tool developed by Xilinx. It is specifically focused on Xilinx FPGAs, enabling the developers to work in Simulink environment and to generate parameterized cores particularly optimized for Xilinx FPGAs. It acts like an interface between Simulink and FPGA environments. Since the modern technology depends on FPGA platform, simpler techniques are implemented to design complicated architectures.\nAs an initial process, a model is developed in Simulink using XSG tool. The XSG environment in Simulink is that of processed inside FPGA. After the model is developed, code is generated by the tool. This creates netlist and IP cores which can be opened in Vivado. The code can be simulated and synthesized and dumped into FPGA kit. Commercial FPGA kits available are Spartan 3E, ZNYQ, Cyclone etc.\nThis course assumes that viewers has no prior knowledge and everything will be taught from scratch. In this you will learn the fundamentals of XSG tool and how to develop models in Simulink. I recommend you to have a basic knowledge on Digital Signal Processing. In this course you will learn:\nFundamentals of XSG\nImplementation of some basic models using XSG and Simulink.\nImplementation of complex models like Image processing techniques and so on.",
      "target_audience": [
        "Electronic and Communication Engg. students",
        "FPGA enthusiasts"
      ]
    },
    {
      "title": "Introduction to Internet of Things :Connect the world.",
      "url": "https://www.udemy.com/course/elexa-introduction-to-internet-of-things-connect-the-world/",
      "bio": "Introduction to Internet of Things (IoT): Unlocking the Power of Connected Devices",
      "objectives": [
        "What is IoT?",
        "Why IoT Matters",
        "How Does IoT Work?",
        "Applications of IoT",
        "Benefits of IoT",
        "Challenges and Considerations for IOT"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to IOT",
          "What is IoT?",
          "Why IoT Matters",
          "How Does IoT Work?",
          "IoT Architecture"
        ],
        "Benefits,Challenges and Considerations": [
          "Benefits of IoT",
          "Challenges and Considerations",
          "Conclusion",
          "Assignment1"
        ]
      },
      "requirements": [
        "You should be interested in internet of things, digital transformation and strategy. There is no specific knowledge or tools required as a prerequisite."
      ],
      "description": "Welcome to \"Introduction to Internet of Things (IoT): Unlocking the Power of Connected Devices\"! This comprehensive course is designed for beginners and professionals alike who are eager to explore the fascinating world of IoT. Whether you're a tech enthusiast, an industry professional, or a student looking to expand your knowledge, this course will provide you with a solid foundation in IoT concepts, applications, and technologies.\nWhat You'll Learn:\nFoundations of IoT: Understand the core principles of IoT, including its definition, history, and key concepts such as interconnectivity, data collection, and automation.\nIoT Ecosystem: Dive into the components of IoT, including sensors, actuators, embedded systems, edge devices, gateways, and cloud infrastructure.\nApplication Areas: Explore the diverse applications of IoT across various industries such as smart homes, healthcare, industrial automation, agriculture, and smart cities.\nCharacteristics of IoT: Learn about the essential characteristics of IoT systems, including connectivity, interoperability, scalability, security, and real-time processing.\nIoT Architecture: Gain insights into the IoT stack, including perception, network, middleware, application, and business layers.\nEnabling Technologies: Discover the technologies driving IoT innovation, such as wireless communication protocols, cloud computing, edge computing, big data analytics, machine learning, blockchain, and artificial intelligence.\nChallenges and Solutions: Understand the challenges in IoT, including security and privacy, interoperability, scalability, data management, and regulatory compliance, and explore potential solutions.",
      "target_audience": [
        "Makers, crafters, and students who are interested in Internet of things",
        "Children over the age of 12"
      ]
    },
    {
      "title": "DSP FOR STM32F4 MICROCONTROLLERS",
      "url": "https://www.udemy.com/course/stm32f4-dsp/",
      "bio": "STM32F4 CMSIS DSP implementations and proof of concept tasks",
      "objectives": [
        "Implementing IIR and FIR filters using CMSIS DSP library on STM32F4 microcontrollers",
        "Develop programs using Octave in order to generate input signals, calculate filter coefficients, plot signals in time and frequency domain, etc",
        "Develop a STM32CubeMonitor aplication to connect application variables to spreadsheets, supporting in several proof of concept tasks",
        "Implement a realtime filter application using microcontroller ADC, DAC and DMA peripherals"
      ],
      "course_content": {
        "Training Lectures": [
          "INITIAL CONSIDERATIONS",
          "BASE PROJECT",
          "FIR FILTER - FLOATING",
          "FIR FILTER - FIXED",
          "IIR FILTER - FLOATING",
          "IIR FILTER - FIXED",
          "IIR FILTER – REAL TIME ADC APPLICATION"
        ]
      },
      "requirements": [
        "STM32F407 Development board + ST-Link Programmer"
      ],
      "description": "This course intend to explore filter implementations and proof of concept task, so, we'll not introduce filter theory in the next video lessons.\n\n\nFocusing in CMSIS DSP library we gonna implement IIR and FIR Filters, exploring Floating and Fixed point formats.\n\n\nSTM32CubeIDE is an integraded development tool you can develop different programs for STM32 microcontrollers\nits advanced C or C++ development platform with bunch of peripheral configuration, code generation, compilation\nand also debbuging features for all STM32 microcontrollers and microprocessors.\n\n\nWe'll also explore the STM32 CubeMonitor, witch is primarely a monitoring tool for STM32 microcontrollers running\nembedded firmware. You can set and watch application variables at runtime for example.\nThe STM32CubeMonitor can be deeply customized by the user, as it relies on web technologies and more specifically\non the Node-Red. In this course, for example, we gonna create a interface to extract data from a user generated\nspreadsheet, copy its content to runtime input variable, process this content, generate output content and store\nthe values in a output generated spreadsheet. This is all done inside the CubeMonitor interface.\n\n\nOther important software resourses in order to generate filter coefficients and analyze graphically it's response\nis the GNU Octave\n\n\nGNU Octave is a powerful mathematics-oriented syntax with built-in 2D/3D plotting and visualization tools\nits free and compatible with many Matlab scripts.\n\n\nWe gonna also use Excel and Notepad++ in order to manipulate our .csv Spreadsheets.\n\n\nIn the hardware side, we gonna use STM32F407ZGT6 Development board. We also need a ST-Link programmer if we\nnot choose the STM32F4Discovery development board, as this board comes with a ST-Link/V2 embedded debug tool.\n\n\nFor real time ADC application, as the video lesson 7, it's necessary aditional components as a Osciloscope in order\nto analyse input and output signal in time domain. A signal generator, in order to generate the input signal.\nAnd some Dupont Jumpers in order to connect those signals in the proper microcontroller pins.",
      "target_audience": [
        "Programmers",
        "Engineers",
        "Technicians",
        "Electronic hobbyists"
      ]
    },
    {
      "title": "Mastering Arduino Multitasking with FreeRTOS",
      "url": "https://www.udemy.com/course/freertos-arduino-multi-tasking-with-freertos/",
      "bio": "Effortlessly Run Multiple Tasks on Your Arduino Board with FreeRTOS for Peak Performance and Creativity",
      "objectives": [
        "Learn how to use FreeRTOS and Arduino for multitasking",
        "Gain a better understanding of how FreeRTOS works and how to use it in your own projects",
        "Get started with real-world applications such as data logging, image processing, and more",
        "Get access to downloadable project files and code samples",
        "Attention: Learn how to use FreeRTOS and Arduino to create multitasking applications Interest: Learn how to use FreeRTOS and Arduino to create multitasking app"
      ],
      "course_content": {},
      "requirements": [
        "basic arduino knowledge",
        "willingness to learn",
        "no programming experience"
      ],
      "description": "Unleash Your Arduino's Full Potential with FreeRTOS Multitasking Course!\nAre you ready to supercharge your Arduino projects? Dive into the world of FreeRTOS multitasking and unlock the true potential of your microcontroller. Welcome to a course that takes you from a curious learner to a confident multitasking maestro!\nExplore the Power of FreeRTOS FreeRTOS isn't just an operating system; it's your gateway to creating smarter, more efficient, and lightning-fast applications. With FreeRTOS, your microcontroller can handle multiple tasks simultaneously, revolutionizing the way you approach Arduino programming.\nWhy Choose Our FreeRTOS Course?\nStructured for Success: Our well-organized curriculum is tailored for beginners. Step-by-step, we'll guide you through the intricate world of FreeRTOS, ensuring you grasp every concept.\nHands-On Projects: Theory is great, but practical application is where the magic happens. Our course includes exciting projects that solidify your knowledge and leave you with impressive portfolio pieces.\nFrom Basics to Mastery: Whether you're new to multitasking or an experienced developer, our course covers it all. Start with the fundamentals and progress to advanced techniques that set you apart.\nTradeoff Enlightenment: Multitasking vs. polling vs. interrupts? Don't worry, we've got you covered. Gain insights into the pros and cons of each approach, empowering you to make informed decisions.\nWhat's Inside Our Course:\nIntroduction to FreeRTOS: Understand the heart of FreeRTOS and why it's a game-changer for microcontrollers.\nTask Creation: Master the art of creating tasks and coordinating their execution with finesse.\nConcurrent Programming: Learn how to orchestrate multiple functions harmoniously, elevating your Arduino to a multitasking marvel.\nReal-World Projects: Put theory into practice with engaging projects that showcase your newfound skills.\nDeep Dive into Concepts: Grasp multitasking concepts and their implementation in FreeRTOS, opening doors to innovative designs.\nComponents and Supplies:\nYour favorite Arduino board (Yes, even the UNO!)\nAn adventurous spirit ready to conquer FreeRTOS\nJoin Us Today! Don't let your Arduino settle for less. Upgrade your skills, boost your projects, and add FreeRTOS multitasking to your arsenal. Enroll now and open the door to limitless possibilities.\nSign Up Now: Your Arduino's exciting multitasking adventure starts here!\nWhat You Will Learn\nFundamentals of FreeRTOS and multitasking\nTask creation and management\nTechniques for concurrent programming\nReal-world applications of FreeRTOS\nPros and cons of different multitasking approaches\nWho Is This Course For\nArduino enthusiasts and hobbyists\nEngineers and developers\nAnyone interested in learning multitasking with FreeRTOS\nRequirements\nBasic knowledge of Arduino programming\nA willingness to learn and apply new skills\n\n\nAbout the Instructor Educational Engineering Team\nA team of skilled engineers sharing knowledge with the world. Educational Engineering Team is a leading team in the microcontroller industry, with over 13 years of experience in teaching and doing practical projects. We strive to put all our hands-on experience into these courses, providing a step-by-step blueprint on how to tame simple and complex topics in easy and digestible bite-sized videos.\nAshraf Ashraf is an educator, mechatronics engineer, electronics and programming hobbyist, and maker. He creates online video courses on the EduEng YouTube Channel, which has more than 4 million views and 20k+ subscribers. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology, helping educate the world and make it a better place. His online courses have helped over 250,000 people from around the world to improve their skills and careers in the industry.",
      "target_audience": [
        "for delelopers",
        "anyone who is an arduino biggener",
        "LEarners",
        "Developers",
        "Arduino geeks"
      ]
    },
    {
      "title": "PLC Programming: Learn PLC Programming with TIA Portal",
      "url": "https://www.udemy.com/course/plc-programming-with-tia-portal/",
      "bio": "Learn PLC Programming from Scratch with Siemens TIA Portal",
      "objectives": [
        "Be able to define a PLC, explain what it does, and identify the components that make up a PLC.",
        "Can be able to select the hardware components of the PLC System like Digital and Analog I/O Modules.",
        "Can be able to download the PLC program and run in PLCSIM.",
        "Would learn to use Bit Logic instructions on each rung and can make ladder logic on their own.",
        "Can be able to make PLC Programs using Ladder Logic with Timers and Counters instructions.",
        "You can make a PLC program using Ladder logic language to solve the complex equation using Math Instructions like ADD, SUB, MUL, DIV, CALCULATE, ROUND, etc.",
        "Can pass a technical PLC Interview.",
        "Know the tips to become a very good PLC Programmer."
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Introduction to PLC": [
          "What is PLC?",
          "History of PLC",
          "PLC System Components",
          "PLC versus Relay Controls",
          "PLC Sizes and their Applications",
          "Advantages of PLC",
          "Section Quiz: Quiz on Introduction to the PLC"
        ],
        "Understand Memory System of PLC": [
          "Memory Types",
          "PLC Load Memory",
          "PLC Working Memory",
          "PLC System Memory",
          "PLC Retentive Memory"
        ],
        "Types of Electrical Signal": [
          "Types of Electrical Signals"
        ],
        "Digital I/O Modules": [
          "Why Digital I/O Modules are required?",
          "Inside Digital Input modules",
          "Inside Digital Output Modules",
          "Discrete Field Devices Example",
          "Section Quiz: Quiz on Digital I/O Modules"
        ],
        "Analog I/O Modules": [
          "Why Analog I/O Modules are required?",
          "Analog Field Devices Examples"
        ],
        "PLC Instructions Sets": [
          "Understanding Normally Open and Normally Close concept of PLC",
          "AND OR EXOR Instruction",
          "Example of AND OR EXOR Instruction in Siemens TIA Portal",
          "Quiz: Quiz on AND OR and EXOR",
          "SET RESET Instruction",
          "Example of SET RESET Instruction in Siemens TIA Portal",
          "SET RESET and RESET SET Flip-Flops",
          "Example of SET RESET and RESET SET Flip-Flop in TIA Portal",
          "NOT Instruction",
          "Example of NOT Instruction in Siemens TIA Portal",
          "EDGE Detection Instruction",
          "Example of Positive and Negative EDGE Instructions in TIA Portal",
          "Pulse Timer Instruction",
          "Example of Pulse Timer Instruction in TIA Portal",
          "ON Delay (TON) Timer Instruction",
          "Example of ON Delay Timer in TIA Portal",
          "OFF Delay (TOFF) Timer Instruction",
          "Example of OFF Delay Timer in Siemens TIA Portal",
          "Retentive Type ON-Delay Timer (TONR)",
          "Counter UP Instruction",
          "Example of Counter UP Instruction in TIA Portal",
          "Counter DOWN Instruction",
          "Example of Counter Down in Siemens TIA Portal",
          "UP and DOWN Counter Instruction",
          "Example of UP and DOWN Counter in TIA Portal",
          "Understanding Comparison Instruction Using TIA Portal",
          "Jump Instruction",
          "Example of Jump Instruction in TIA Portal",
          "Understand ADD MUL SUB DIV Instruction using TIA Portal",
          "Calculate Instruction",
          "Example of Calculate Instruction in TIA Portal",
          "Round Instruction",
          "Example of Round Instruction in TIA Portal",
          "NORM_X and SCALE X Instruction",
          "Example of NORM X and SCALE X Instruction in Siemens TIA Portal"
        ]
      },
      "requirements": [
        "Basic of Electricity.",
        "Basic of Electronics."
      ],
      "description": "This course is designed for individuals who have little or no prior knowledge of PLC programming. It provides a comprehensive introduction to PLCs and teaches the fundamental concepts of PLC programming using ladder language.\nIn this course, you will learn the basic components of a PLC system, how to read and interpret ladder logic diagrams, and how to write ladder logic programs for controlling industrial processes. You will also learn how to use various programming instructions such as timers, counters, and data manipulation instructions.\nThe course will cover the following topics:\nIntroduction to PLCs.\nBasic components of a PLC system.\nReading and interpreting ladder logic diagrams.\nWriting ladder logic programs.\nInput and output modules.\nTimers and counters programming.\nData manipulation instructions.\nSimulation and testing of PLC programs.\nUploading and downloading programs to PLCs.\nMemory Concept of the PLCs.\nThroughout the course, you will work on practical examples and projects to reinforce your learning.\nBy the end of this course, you will have a strong foundation in PLC programming and be able to write and troubleshoot simple ladder logic programs for industrial processes. This course is ideal for anyone who wants to start a career in industrial automation or upgrade their skills in PLC programming.",
      "target_audience": [
        "Automation Engineers",
        "Instrumentation and Control Engineers",
        "Electrical Engineers",
        "Maintenance Technicians",
        "Engineering Students",
        "Mechatronics Engineers"
      ]
    },
    {
      "title": "Analog Circuit Crash Course for VLSI Interview and GATE exam",
      "url": "https://www.udemy.com/course/vlsi-circuit-concepts-interview-guide-for-everyone/",
      "bio": "A Crash Course for VLSI Interview & Exams -This Course will cover most important concepts on Opamp, Diode and Capacitor",
      "objectives": [
        "VLSI Circuit Concepts frequently used in Industry",
        "VLSI Interview Questions - Emphasis on fundamentals",
        "Solving VLSI Interview & Exam Questions",
        "Summary of Op-amp, Diode & Capacitor Concepts for VLSI Interview & Exams",
        "Op-amp: Importance of Negative Feedback & Loop Dynamics",
        "Op-amp: Open Loop, Closed Loop, Gain, Saturation, Offset, Bandwidth",
        "Op-amp: Relationship between Open Loop Gain and Closed Loop Gain",
        "Diode : Regular Diode - Forward Bias & Reverse Bias",
        "Diode : Zener Diode - Forward Bias & Reverse Bias",
        "Diode Behavior in Various Circuit Condition",
        "Diode: Clipper, Clamper, Half Wave & Full Wave Rectifier",
        "Capacitor: Basic Principle, Series Capacitor, Parallel Capacitor",
        "Capacitor Behavior: Initial State, Steady State",
        "Capacitor: Charge Sharing Principle",
        "Uncharged capacitor vs Pre-charged capacitor",
        "Capacitor RC behavior"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisite. Basic Knowledge of Circuits will suffice",
        "Passion to work in VLSI domain!"
      ],
      "description": "This Course is perfect for VLSI learners. It's a combo course which will prepare you for both, VLSI interview and Competitive Exams such as GATE/PSU as well as for College exams. All the video lectures are prepared by VLSI Industry experts so that students get exposure to industry perspective for basic VLSI concepts.\nIn this course, we have covered both basics and advanced concepts of Op-amp, Diode and Capacitor. These concepts are very frequently used in VLSI design. Hence understanding of these concepts are necessary for a successful career in VLSI Industry.\nThis course will cover all important concepts of Op amp, Diode and Capacitor which will help you to prepare for both VLSI interview and Competitive Exams. It's self-paced online VLSI course where every concept has been explained with examples. This course will make you interview ready for VLSI industry.\nIn this course, every problem solving example has been selected carefully so that you can solve similar problems in VLSI interview and Competitive Exams such as GATE/PSU.\nTopics covered in this course are following:-\nOpamp:- Basic property, Open loop and Close loop - Gain and Bandwidth, Inverting and Non-inverting configuration, Saturation, Input Offset, Closed Loop Negative Feedback\nCapacitor:- Basic Property, Series and Parallel capacitor, Initial and Steady state, Initial Charge in Capacitor, Charge conservation, RC response, Ripple reduction\nDiode:- Regular and Zenner Diode, Diode modelling, Clipper, Clamper, Half wave and Full wave rectifier\nAll the best for your journey in VLSI industry!!",
      "target_audience": [
        "Electronics Engineering",
        "Electrical Engineering",
        "VLSI professionals",
        "VLSI students",
        "Gate, PSU, Government Exam",
        "ECE Students",
        "Hardware Engineers",
        "Semiconductor professionals"
      ]
    },
    {
      "title": "Electronics Practice Test",
      "url": "https://www.udemy.com/course/electronics-practice-test/",
      "bio": "The best way to learn about electronics",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "What is an electronic practice test and what can it do for you?\nAre you looking for a way to improve your electronics skills? If so, the Electronics Practice Test course from The Great Courses is a great option. This course offers lectures and self-tests that will help you learn about basic electronics concepts. After completing the course, you'll be able to understand how electronic devices work and apply this knowledge in practical situations. So why not give the Electronics Practice Test course a try today?\nThe course gives you an introduction to electronic devices, components, and circuits. You'll learn about different types of electronic components, how they work, and how to use them.\nWhat is the best way to learn? The best way to learn is by doing. This course offers multiple self-tests, quizzes, and exercises that let you practice what you've learned. You'll also get answers to your questions from The Great Courses team.\nA practice test is a tool used by students to assess their knowledge of a subject. It is a timed exam that will help you evaluate your knowledge of a subject. The more questions you answer correctly, the higher score you will get on the practice test. Why should I take a practice test? Taking a practice test can help you improve your skills and prepare for the real thing.\nWhen we talk of competence in this context, we're talking about both clinical and technical abilities. Remember that electronic practice is its own therapeutic environment, requiring you to have the necessary knowledge, skills, and judgment to deliver safe and effective care to clients remotely.\nThis course is for you if you have a talent for problem-solving and a passion for all things technological. The field of electronics is wide and diverse. Basic electricity, AC and DC circuits, and basic electrical equations and theory are covered in this course. Discrete electrical components, as well as linear and logic integrated circuits, will be covered by the author. Circuit prototyping is discussed, as well as printed circuit board construction methods and PCB software. If you're new to electronics, this course will offer you an excellent foundation and whet your thirst for more.\nWhat will you learn in this course?\nLearn about Block Diagrams.\nUnderstanding circuits by breaking them down into sections (or blocks) which perform particular functions.\nLearn about Circuit Symbols.\nLearn the circuit symbols.\nLearn about Series and Parallel Circuits. Voltage and Current.\nLearn about Meters.\nLearn about how resistance works.\nLearn where the Power and Energy come from.\nOscilloscopes.\nTransducers.\nLearn about Ohm's Law.\nLearn the most important concepts in electronics in a few days.\nLearn the basics of electronics in easy steps.\nThe electronic practice test course is designed to help you pass your certification exams on the first try. Sign up for our electronic practice test course today!\n\n\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is a leading team in the Microcontroller Industry, with over 13 years of experience in teaching and practical projects. We strive to share our hands-on experience in these courses, providing step-by-step blueprints on taming both simple and complex topics in easy-to-digest bite-sized videos.\nAshraf:\nEducator, Mechatronics engineer, electronics and programming hobbyist, and Maker.\nCreator of online video courses on the EduEng YouTube Channel with over 4 million views and 20k+ subscribers.\nAuthor of four Microcontroller books.\nFounder and Chief Educational Engineer at Educational Engineering Team.\nPassionate about exploring new trends and technology, and helping educate the world.\nOur online courses have helped over 250,000 people worldwide to improve their skills and careers in the industry.\nCall to Action: Join us and start mastering electronics today! Enroll now and enhance your skills with our comprehensive practice tests.\nFAQ:\nWhat is an electronic practice test?\nAn electronic practice test is a tool used by students to assess their knowledge of electronics through timed exams.\nDo I need prior experience to take this course?\nNo prior experience is needed; this course is designed for beginners.\nWhat will I learn in this course?\nYou will learn about basic electronics concepts, components, and circuits, and how to apply this knowledge in practical situations.",
      "target_audience": [
        "this is for beginners in electronic",
        "this is for anyone who want's to test their knowledge about electronics",
        "candidates for certain electronic jobs",
        "anyone who is in the field of electronic engineering"
      ]
    },
    {
      "title": "Ship It! Hardware Product Development for Beginners",
      "url": "https://www.udemy.com/course/ship-it-hardware-product-development-for-beginners/",
      "bio": "From just an idea to out the door",
      "objectives": [
        "You will become empowered to turn an idea in your head into a real product",
        "You will gain the courage to say \"No\" to previously-beloved not-so-good ideas and therefore make room in your life for better ones",
        "You will quickly learn what you need to get started, enabling you to beat others with a similar idea to market",
        "You will learn from an instructor with over a decade of engineering experience and with a heart to teach",
        "You will have access to ask me and your fellow comrades questions directly through the online forum",
        "You will get all the \"tribal knowledge\" you need to succeed all in one convenient location",
        "Lastly, but most importantly, you will gain the confidence you will need to pull this off. Yes, you can do this too!"
      ],
      "course_content": {
        "Welcome and Introduction": [
          "Thanks for signing up for this Course! Getting started",
          "Introduction",
          "Introduce Yourself!"
        ],
        "What makes a good product idea?": [
          "What makes a good idea",
          "Competition, market timing, and one bad product idea",
          "Business plans and models",
          "Potential barriers to entry",
          "Choosing between several good ideas",
          "Test your knowledge: What makes a good product idea?"
        ],
        "Protecting your idea": [
          "What is a patent",
          "The Provisional patent",
          "The Non-Provisional patent",
          "Writing your claims",
          "First steps, the prior art search",
          "When should you patent",
          "My soapbox on patents",
          "Alternatives to patents",
          "Test your knowledge: Protecting your idea"
        ],
        "Market research and customer development": [
          "The Lean Startup",
          "Build-Measure-Learn and the MVP",
          "The Wizard of Oz MVP",
          "The Landing Page MVP",
          "Additional points",
          "The Pivot",
          "Hardware is Hard, Problem 1 with Lean",
          "Hardware is Hard, Problem 2 with Lean",
          "Applying Lean to Hardware",
          "Test your knowledge: Lean and Hardware"
        ],
        "The Hardware Design Process": [
          "The Stage-Gate manufacturing process",
          "Phase 0 - The proof-of-concept prototype",
          "Phase 1 - Design",
          "Phase 1 - Engineering Development (spec, components)",
          "Phase 1 - Engineering Development (enclosure)",
          "Phase 1 - Engineering Development (Injection-molding, rapid prototyping, PCB)",
          "Phase 1 - Engineering Development (Firmware, Engineering Prototype)",
          "Phase 2 - Engineering Verification Test",
          "Manufacturing - Design Validation Test",
          "Manufacturing - Process Verification Test",
          "Manufacturing - Mass Production and Conclusion",
          "Test your knowledge: The Hardware Design Process"
        ],
        "Appendix": [
          "Financials",
          "Offshoring",
          "Test your knowledge: Financials"
        ],
        "Additional Resources and Course Survey": [
          "Resources"
        ]
      },
      "requirements": [
        "You will need an open mind, and a willingness to learn",
        "If you have an idea for a product already, great! But you don't need one to get a lot out of the class.",
        "Lastly, a desire to get off the couch and EXECUTE your own idea!"
      ],
      "description": "With the advent of the Maker Movement and the boon of easier fundraising from Kickstarter and other crowdfunding platforms today, it seems like everybody and their grandmother are bringing an electronic product to market. Maybe you too have a desire to design, create, and sell an electronic product. But many first-time entrepreneurs don't know where to begin.\n\nThey wonder...\nWhat makes a good product idea in the first place?\nHow do I know people will buy it?\nWhere do I begin?\nAnd how do I get from my pile of breadboard parts and Arduino shields to something I can sell?\n\n\nWell, as the saying goes, success is 90% preparation and only 10% perspiration. Just like how writing a single line of code is one of the last steps in a successful software product, we'll see that designing the electronics is one of the last steps when it comes to creating hardware. I'll show you how to get your hardware project out the door faster by following this simple process first.\nI have learned this material over a decade of practice, and by reading through textbooks, manuals, documents, tutorials, etc. I've taken all of this information and, for the first time ever, put it all together for you in one place and in a concise approach meant for beginners.\nThis course is the first of a holistic series about designing electronic hardware. Later courses will cover schematic and PCB design, PCB automated testing, advanced coverage of Design for Manufacture (DFM) and Design for Assembly (DFA), marketing, and more. But you are going to want to start here! Many entrepreneurs who skip this step and rush to the \"fun stuff\" of playing with circuits and firmware live to regret it, by creating a 100% polished product that nobody wants.\n\nAnd I'm so sure that you're going to learn a ton from this content that this course is backed by a no risk, 30-day, money back guarantee. No questions asked, no hard feelings. You have nothing to lose!\n\nSo let's get started already!",
      "target_audience": [
        "Makers, Entrepreneurs, Tech Startups, Kickstarter founders, Hobbyists, Inventors, Dreamers, Big-Idea People, Weekend Warriors, Moonlighting Professionals, Garage or dormroom startups",
        "Anyone with the means and desire to bring an electronic hardware product to market!"
      ]
    },
    {
      "title": "FPGA Project: CNN Accelerator for Digit Recognition",
      "url": "https://www.udemy.com/course/fpga-project-cnn-accelerator-for-digit-recognition/",
      "bio": "From fundamental to the full deployment of a CNN Accelerator on Zynq FPGA",
      "objectives": [
        "Understand the fundamentals of CNN",
        "Understand the Python model of CNN",
        "Understand the RTL design of CNN Accelerator",
        "Integrate the CNN Accelerator with an ARM processor on a Zynq FPGA",
        "Develop a web-based GUI to interact with the CNN accelerator"
      ],
      "course_content": {
        "Convolutional Neural Network": [
          "Introduction to Convolutional Neural Network",
          "Source Code",
          "CNN Architecture for MNIST Digit",
          "CNN Model for MNIST Digit"
        ],
        "RTL Design of CNN Accelerator": [
          "The RTL Module of Convolution Buffer",
          "The RTL Module of Convolution Calculation",
          "The RTL Module of Max Pooling and ReLU",
          "The RTL Module of Fully Connected",
          "CNN Layers Integration"
        ],
        "SoC Integration of CNN Accelerator": [
          "The RTL Module of AXI Stream Wrapper",
          "Block Design of ZYNQ System",
          "Functional and Performance Testing"
        ],
        "Development of Embedded Web": [
          "Backend and Frontend Development",
          "What comes next?"
        ]
      },
      "requirements": [
        "Fundamental knowledge of FPGA, Verilog HDL, and computer architecture",
        "Proficiency in Zynq FPGA and Vivado development",
        "Proficiency in Python programming and Linux command-line operations"
      ],
      "description": "Do you want to learn AI acceleration on FPGA?\nThis project-based online course offers practical insights into designing AI accelerators, specifically a CNN algorithm for handwritten digit classification. The focus of the course is on the system design level on how to integrate a CNN module (written in Verilog RTL) with the application processor running Linux. The final result of this project is a web application for taking a handwritten digit and then sending this data to be processed with the CNN accelerator on the FPGA. On average, a speedup factor of 12x is achieved by using this accelerator compared to the CPU.\nNote:\nThis course is not intended for absolute beginners in FPGA development. A basic understanding of FPGA design using Zynq and the PYNQ framework is expected before enrolling, as these fundamentals will not be covered. Familiarity with Verilog and Python is also required.\nVivado 2022.1 and the Xilinx Kria KV260 board are used in this course, but the concepts are not limited to these tools or platforms. You can follow along using other versions of Vivado or different FPGA boards as well.\n\n\nWhat is CNN?\nA Convolutional Neural Network (CNN) is a type of deep learning model particularly well-suited for processing data with a grid-like structure, such as images. It works by automatically learning spatial hierarchies of features through layers that perform convolutions—mathematical operations that extract features like edges, textures, and shapes from the input data. These layers are typically followed by pooling layers, which reduce the spatial dimensions to make computation more efficient and prevent overfitting. The final layers are usually fully connected and perform classification or regression based on the learned features. CNNs are widely used in computer vision tasks like image recognition, object detection, and facial recognition due to their ability to capture spatial patterns effectively.\nWhat is CNN accelerator?\nCNNs require acceleration on FPGAs because they involve intensive computations, especially during convolution operations, which can be slow and power-hungry on general-purpose processors. FPGAs offer parallel processing, customizable architecture, and lower latency, making them ideal for speeding up CNN tasks while maintaining energy efficiency. This is particularly valuable for real-time applications like autonomous driving or edge devices where performance and power constraints are critical.\nWhy use Zynq FPGA?\nThe Zynq FPGA, developed by Xilinx, is well-suited for CNN acceleration due to its combination of programmable logic (FPGA fabric) and integrated ARM processors on a single chip. This hybrid architecture allows for high-performance parallel processing of CNN layers in the FPGA fabric while handling control and pre/post-processing tasks on the ARM cores. With its flexibility, low latency, and energy efficiency, Zynq enables efficient implementation of custom CNN accelerators, making it ideal for embedded and real-time applications like robotics, autonomous vehicles, and smart cameras.\n\n\nStart learning today—enroll now!\nAll the source code is available within this course. After finishing the course, you will receive a certified certificate of completion. A complete Udemy 30-day money-back guarantee if you are not satisfied with this course, allowing you to study with no risk. See you within the course!",
      "target_audience": [
        "University students developing AI acceleration projects on FPGA",
        "FPGA engineers seeking hands-on experience with AI acceleration",
        "Anyone interested in learning and building FPGA-based systems"
      ]
    },
    {
      "title": "Mastering Arduino Programming with Python",
      "url": "https://www.udemy.com/course/arduino-programming-using-python/",
      "bio": "Develop robust systems by connecting Python applications to Arduino—write, control, and automate with full desktop integ",
      "objectives": [
        "You will learn the Arduino programming language using Python.",
        "Arduino Programming lesson using Python, how you will learn.",
        "Learn to Control a LED",
        "Learn ESP32",
        "Arduino coding using Python you'll know."
      ],
      "course_content": {},
      "requirements": [
        "fritzing App",
        "Willingness to learn",
        "Knowledge with Arduino",
        "Python Programming"
      ],
      "description": "This course gives you the tools to create hybrid hardware-software systems using Python and Arduino. Learn to send commands from Python to control hardware components, and receive live data from sensors back to your desktop. Build reliable serial interfaces, automate physical processes, and create Python-powered monitoring tools.\nWhat You Will Learn\nEstablish Serial Communication\nSet up and manage two-way data exchange between Arduino and Python using the pySerial library.\nControl Arduino Hardware from Python\nTrigger actions like LEDs, motors, or relays through Python scripts via serial commands.\nReceive and Process Sensor Data\nCapture live sensor input from Arduino and use Python to log, analyze, or act on it.\nDesign Custom Communication Protocols\nBuild your own serial message formats to structure commands and responses between devices.\nDevelop Automation Scripts in Python\nCreate logic-based Python applications that monitor Arduino status and react in real time.\nReal Projects You’ll Build\nPython-driven relay and LED controller\nArduino sensor reader with Python-based dashboard\nTemperature logger with timestamped data export\nEvent-trigger system where Python scripts control physical outputs\nWho Should Enroll\nArduino learners wanting to expand into Python integration\nPython developers building interactive hardware interfaces\nTechnologists working on PC-connected sensors and automation\nSTEM students developing custom tools for labs, experiments, or automation\nCourse Requirements\nArduino Uno or compatible board\nBasic experience with Python scripting\nArduino IDE installed\nUSB cable, simple components (LEDs, sensors, push buttons)\nComputer (Windows, macOS, or Linux)\nWhat You’ll Gain\nAbility to build hybrid Arduino/Python control systems\nKnowledge of serial protocol structure and data exchange\nDesktop-level control over physical hardware\nModular coding habits for scalable project development\nFinal certificate of achievement for your records\nInstructor Bio\nThe Educational Engineering Team, with over a decade of microcontroller instruction and real-world project experience, specializes in hands-on embedded training. Under Ashraf’s leadership, the team has educated more than 250,000 learners, helping them build industry-relevant systems by merging coding and electronics with precision.\nCall to Action\nIntegrate Python and Arduino Like a Pro\nSkip the theory-heavy tutorials. This course delivers practical results. You’ll walk away with a working system that bridges your software knowledge with real-world hardware. If you’re serious about controlling devices from your PC using Python, this is the exact blueprint you need.\nStart Learning – Build Python-Controlled Hardware Today",
      "target_audience": [
        "This is for Engineers",
        "this is open for beginners and Intermediate on python",
        "this is for Arduino Geeks",
        "This is for Programmers inthussiast"
      ]
    },
    {
      "title": "Digital Meter Rule using Arduino",
      "url": "https://www.udemy.com/course/arduino-digital-meter-rule-using-arduino/",
      "bio": "Learn how to use a digital meter to measure voltage, current, and resistance",
      "objectives": [
        "will allows you to integrate digital and analog components in your projects.",
        "The basics of programming an Arduino",
        "How to download and install the software that allows you to control the Arduino.",
        "learn how they work together.",
        "You will learn about voltage, current, and resistance",
        "Understand Arduino and how to use it to control electrical current"
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "Designing a Digital Measurement System",
          "materials needed",
          "Theoretical Explanation",
          "Circuit Design",
          "Fundamentals of Arduino Project Setup",
          "Coding Explanation",
          "Coding explanation 2",
          "LCD Code Expalantion",
          "Coding and LCD Integration for Arduino Projects",
          "Circuit Demonstration Explanation",
          "Planning and Designing a Digital Meter Rule",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Digital Meter Rule using Arduino Test",
          "Summary",
          "Reading Material"
        ],
        "Who we are?": [
          "Section Intro",
          "Who we are?",
          "Summary",
          "Reading Material"
        ],
        "Course Project": [
          "Section Intro",
          "Course Project",
          "Summary",
          "Reading Material",
          "Gauge ability to plan a simple yet accurate digital measurement system"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "program a basic Arduino.",
        "Computer Desk",
        "Arduino boards"
      ],
      "description": "Introduction:\nArduino and the digital meter: How do they work together?\nThe Arduino digital meter rule allows you to read and understand the voltage, current, and amperage drawn from a circuit. This project is based on the electronic principles covered in the Arduino course.\nProgramming the Arduino: What do you need to know?\nArduino is the electronic component that connects the sensors to a computer. Arduino is a microcontroller that runs on the 5 volts of an external power source. The analog meter: What are its features?\nThe Arduino digital meter rule allows you to read and understand the voltage, current, and amperage drawn from a circuit. This project is based on the electronic principles covered in the Arduino course.\nWhat You Will Learn in This Course:\nLearn how to use Digital Meter Rule using Arduino.\nLearn how you can use an Arduino to make a digital meter rule.\nLearn how to build your own digital meter rule using Arduino.\nGain an edge over your competition by learning how to create a digital meter rule using Arduino, the most popular microcontroller.\nYou’ll learn the basics of electronics and programming, as well as how to create your own device.\nCourse Benefits:\nDigital Meter Mastery: With this course, you'll learn everything there is to know about digital meters. You'll be able to measure voltage, current, and resistance with ease. This course is perfect for anyone who wants to learn more about electronics and how to use a digital meter.\nBecome an Arduino Expert: By enrolling in this course, you'll learn how to use a digital meter to measure voltage, current, and resistance. This will give you the skills you need to become an expert at using Arduino. Plus, you'll be able to apply these skills to build your own circuits and projects.\nThis course will cover the basics of using Arduino to control a digital meter. Students will learn how to read and write data to a digital meter, as well as how to control its behavior using Arduino code. The course will also cover some basic electrical concepts, such as voltage and current, so that students can better understand how their Arduino code affects the meter.\nEnroll in Digital Meter Rule using the Arduino course today! Learn how to create a digital meter rule using Arduino, the most popular microcontroller.\nWhat You Will Learn:\nBasics of using a digital meter\nProgramming Arduino to interface with digital meters\nMeasuring voltage, current, and resistance\nBuilding and testing your own digital meter rule\nWho Is This Course For:\nBeginners in electronics and programming\nIndividuals interested in learning Arduino\nHobbyists and enthusiasts looking to expand their knowledge\nRequirements:\nBasic computer skills\nNo prior knowledge of Arduino or electronics required\nAccess to Arduino and basic electronic components\n\n\nAbout the Instructor Info\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact, step-by-step blueprint on how to tackle simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy.\nEducator and Author of “Educational Engineering”\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k + Subscribers) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThe team also works as freelance engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "This course is intended for Arduino enthusiasts who want to use their new found knowledge in a creative way.",
        "arduino hobbyist",
        "anyone who wants to know about digital meter using Arduino",
        "anyone who wants to know variety of Arduino Experiments or Projects",
        "This course is designed for people who want to learn how to use Arduino to control a digital meter",
        "The course is designed for people who have some experience with Arduino, but no knowledge of meters is required",
        "Course is designed for beginners who want to learn more about Arduino and electronics"
      ]
    },
    {
      "title": "AI-Driven PCB Design: Mastering Generative AI Techniques",
      "url": "https://www.udemy.com/course/design-pcbs-faster-with-generative-ai/",
      "bio": "Transform Your PCB Design Skills with Advanced AI Technology",
      "objectives": [
        "Understand the fundamental concepts and principles of Generative AI.",
        "Gain practical, hands-on experience using state-of-the-art Generative AI tools.",
        "Discover strategies to enhance design efficiency through the application of Generative AI.",
        "Explore the adaptability of AI tools in tailoring PCB designs to unique constraints and project specifications.",
        "Explore techniques for optimal component placement and routing.",
        "Analyze real-world case studies showcasing successful implementations of Generative AI in PCB design."
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introducing Flux AI- Navigating Web Browser in PCB",
          "Planning Session – Exploring AI Approaches for PCB Design Automation",
          "Flux AI- Creating a Project",
          "Schematic Creation",
          "Introduction to Flux AI and Schematic Creation",
          "Navigating PCB Workspace",
          "Component Placement",
          "PCB Layout",
          "Exporting to Fabrication Files",
          "Advanced PCB Design Using Flux AI",
          "Creating and Managing PCB Designs with Flux AI",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "AI-Driven PCB Design: Mastering Generative AI Techniques Test"
        ],
        "Course Project": [
          "Section intro",
          "Course Project",
          "Project Demonstration – Implementing AI-Driven PCB Design Workflows",
          "Summary",
          "Reading Material"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Programming Basics (Optional)"
      ],
      "description": "Welcome to a New Era of PCB Designing!\nDive into the dynamic world of Printed Circuit Board (PCB) design, supercharged with the latest advancements in Generative AI. Our course, \"Revolutionize PCB Design with Generative AI,\" is specially crafted for engineers, tech enthusiasts, and innovators who aspire to stay at the forefront of electronic design technology.\nWhy Generative AI in PCB Design?\nInnovative Approach: Leverage AI to enhance accuracy, efficiency, and creativity in PCB design.\nTime-Efficiency: Speed up the design process, from schematics to fabrication.\nCompetitive Edge: Stay ahead in the rapidly evolving field of electronics with cutting-edge skills.\nTransform Your Skills: Course Highlights\nIntroduction to Flux AI: Start your journey with an introduction to Flux AI and learn how to navigate its web browser interface in PCB design.\nProject Creation with Flux AI: Get hands-on experience in creating and managing projects using Flux AI.\nSchematic Creation: Master the art of converting electronic concepts into practical schematics.\nPCB Workspace Navigation: Become proficient in navigating and utilizing the PCB workspace to its full potential.\nComponent Placement: Learn the intricacies of effective component placement for optimal circuit functionality.\nPCB Layout Techniques: Gain expertise in laying out PCBs efficiently, ensuring both aesthetic appeal and functional integrity.\nExporting to Fabrication Files: Learn how to seamlessly export your designs to fabrication files, preparing them for real-world application.\nYour Pathway to Becoming a PCB Design Expert:\nExpert Instructors: Learn from seasoned professionals with real-world experience in AI-driven PCB design.\nInteractive Learning: Engage with interactive modules and real-time design simulations.\nFlexible Learning Schedule: Access course materials anytime, anywhere, at your convenience.\nCommunity & Networking: Join a community of like-minded individuals and industry experts.\nCertification: Receive a certificate of completion to bolster your professional profile.\nWho is This Course For?\nElectrical and Electronics Engineers seeking to enhance their design skills.\nTech Hobbyists interested in the latest trends in electronic design.\nStudents and Academics looking to expand their knowledge in cutting-edge technology.\nExclusive Enrollment Offer! Sign up now to avail of early bird discounts and access to additional resources.\nEmbark on Your Journey to Master AI-Enhanced PCB Design\nEnroll in \"Revolutionize PCB Design with Generative AI\" today and be part of the innovation wave in electronics!\nEnroll Now - Be a PCB Design Innovator!\nFAQ Section:\nWhat background knowledge do I need for this course? No prior experience with Generative AI or PCB design is required. The course covers fundamental concepts and gradually builds up to advanced topics.\nIs there a time limit for completing the course? You can complete the course at your own pace. There are no time constraints, allowing you to learn comfortably according to your schedule.\nWill I receive a certificate upon completion? Yes, upon completing the course, you will receive a certificate of completion to showcase your newfound skills.\nInstructor: Educational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.\nWhat You Will Learn\nBasics of data management and decentralized technology\nSymmetric-Key and Asymmetric-Key cryptography\nImportance of hashing in data integrity\nComponents of blockchain architecture\nRole of Merkle Trees in blockchain\nConsensus mechanisms in decentralized networks\nWho Is This Course For\nBlockchain enthusiasts\nIT professionals\nCryptography students\nData management specialists\nAnyone interested in decentralized technologies\nRequirements\nBasic understanding of computer science\nInterest in learning about blockchain and cryptography",
      "target_audience": [
        "Electronics Engineers",
        "PCB Designers",
        "Students in Electronics or Electrical Engineering",
        "Technology Enthusiasts",
        "Innovators and Entrepreneur",
        "Collaborative Design Teams"
      ]
    },
    {
      "title": "PIC Microcontroller: Garage Door System Ultrasonic Sensor",
      "url": "https://www.udemy.com/course/pic-microcontroller-ultrasonic-sensor-garage-door-system-/",
      "bio": "This course will give you a chance to Make a Garage Door System System using Simple Tools to make your car parking easy",
      "objectives": [
        "Make your own Garage Door System Ultrasonic Sensor using PIC Microcontroller",
        "Know what type of component needed to make this project work and the aspects used to decide this.",
        "Learn Working Principle of Ultrasonic Sensor",
        "Interface Ultrasonic Sensor with PIC Microcontroller",
        "Interface LCD with PIC Microcontroller",
        "Use Electronic Circuit Simulator Software",
        "Connect Motors and Relays with Microcontroller"
      ],
      "course_content": {},
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Programming",
        "A Will to apply, not just watch"
      ],
      "description": "This guide will help you make a Garage Door System using an Ultrasonic Sensor in a step-by-step manner at home in no time.\nThis course will give you a chance to make a Garage Door System using tools that you are already familiar with to make your life easier and safer. You'll build this Garage Door System using Ultrasonic sensors.\nWelcome to this new course where you'll learn how to make a garage door system.\nYou will get a step-by-step tutorial on what needs to be done to achieve full control over any door that you want to add more security to and make your life easier.\nThis course covers interfacing Garage Door lock, LCD, Ultrasonic Sensor, and other devices with a PIC Microcontroller to achieve the ultimate goal of making a functional Garage Door System. It will give you the ability to create higher-level projects.\nYou will learn how to use the technology embedded in your Microcontroller to make your daily life much safer.\nWho We Are?\nWe are an Educational Engineering Team, a leading team in the microcontroller industry with more than 10 years of experience in teaching and practical projects. We have a team of skilled engineers delivering high-quality engineering content, including courses, articles, lessons, and online support for engineering students from all around the world.\nWe also work as freelance engineers, helping many students with their graduation projects and offering courses on various engineering topics.\n>>> Continues Updates <<<\n4.7 Star | More than 2200 STUDENTS!!! THANK YOU!!!\nWhat students are saying:\nNl Gh says, \"Full of information and explained well. Good job!\"\nEnroll today and get instant access:\nEasy-to-watch video lessons\nPractical activities\nDownloadable resources\nPremium instructor support\nLifetime access to course updates\nAccess to our exclusive student community\n100% Money-back Guarantee\nIf you are unsatisfied with the course, or if it just isn't for you, we have a 30-day money-back guarantee.\nMy goal is to make sure you love this course! We are always listening to students and improving our courses to make them even better. If you ever have a suggestion on how to make this course better, just let me know!\nWhat are you waiting for?\nJoin us now on this journey. Click Enroll Now and learn something new today!\nWhat You Will Learn:\nHow to create a Garage Door System using a PIC Microcontroller and Ultrasonic Sensor.\nStep-by-step guidance on interfacing various components such as locks, LCDs, and sensors.\nPractical implementation to enhance home security and convenience.\nTechniques to control and automate doors using microcontrollers.\nWho is This Course For:\nBeginners in microcontroller programming.\nHobbyists and DIY enthusiasts.\nEngineers and technicians looking to expand their skills.\nAnyone interested in home automation and security systems.\nRequirements:\nBasic understanding of electronics and microcontrollers.\nFamiliarity with PIC Microcontroller programming.\nWillingness to learn and apply new skills.\n\n\nAbout the Instructor:\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading entity in the Microcontroller industry with over 13 Years of Experience in teaching and practical projects. We provide in-depth, step-by-step blueprints on taming complex topics in easy and digestible bite-sized videos.\nHaving been in the Programming and Microcontroller business since 2007, we've catered to students' and educators' needs, teaching over 250k-THOUSAND students and counting through our 100+ courses on Udemy.\nAshraf Said AlMadhoun is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He is the Chief Educational Engineer at Educational Engineering Team, a company founded to explore new trends and technologies and to educate the world.\nOur online courses have helped over 250,000 people globally to excel and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone Interested in Learning New Things about PIC Microcontroller",
        "Anyone Interested in Learning How to make Garage Door System Ultrasonic Sensor using PIC Microcontroller",
        "Anyone Interested in Making Projects",
        "Anyone Interested in Learning New Topics in Programming and Microcontroller",
        "Anyone Interested in Learning how Ultrasonic Sensor Works"
      ]
    },
    {
      "title": "Electrical Circuit Crash Course for VLSI interview and GATE",
      "url": "https://www.udemy.com/course/electrical-circuit-crash-course-for-vlsi-interview-and-gate/",
      "bio": "A Foundation Course on Electrical Circuit Analysis (Network Theory) for Electronics and Electrical Engineering Students",
      "objectives": [
        "Active and Passive Elements",
        "Kirchhoff's Current Law",
        "Kirchhoff's Voltage Law",
        "Superposition Theorem",
        "Norton’s Theorem",
        "Thevenin’s Theorem",
        "Maximum Power Transfer Theorem",
        "Passive Sign Convention",
        "Voltage Division Rule",
        "Current Division Rule",
        "The Nodal Analysis",
        "The Mesh Analysis",
        "Properties of Resistors, Inductors and Capacitors",
        "Electric Charge, Voltage, Current",
        "Power, Energy",
        "Independent & Dependent Sources",
        "Reciprocity Theorem",
        "Millman’s Theorem",
        "Tellegen’s Theorem"
      ],
      "course_content": {
        "Electrical Basics": [
          "Electrical Basics",
          "Ohm's Law, Sources & Elements",
          "Resistor & Inductor",
          "Capacitor",
          "KCL-Kirchhoff's Current Law",
          "KVL - Kirchhoff's Voltage Law",
          "Passive Sign Convention",
          "Series Connection & Voltage Division Rule",
          "Parallel Connection & Current Division Rule",
          "Star Delta and Source Transformation (ST)",
          "Numerical on Star-Delta, ST and Sources",
          "Balanced Bridge: Concept and Examples",
          "Nodal Analysis",
          "Mesh Analysis",
          "Numerical on Super Node and Mesh Analysis",
          "Numerical on Nodal Analysis -I",
          "Numerical on Nodal Analysis -II",
          "Numerical on Network Solving Techniques-I",
          "Numerical on Network Solving Techniques-II",
          "Superposition Theorem",
          "Numerical on Superposition Theorem",
          "Thevenin and Norton Theorem & solved Examples",
          "Maximum Power Transfer Theorem",
          "Numerical on Maximum Power Transfer Theorem",
          "Tellengen's Theorem",
          "Millman's Theorem",
          "Quiz",
          "Next Step"
        ]
      },
      "requirements": [
        "No prerequisite is required",
        "Passion to work in Electronics / Electrical / VLSI domain"
      ],
      "description": "This Course is MUST for Electrical, Electronics and Instrumentation engineers who aspire to start their career in VLSI industry or in Electrical public / private sector companies . It teaches fundamental concepts of Electrical circuits such as charge, voltage and current and basic network solving techniques and Network Theorems which are foundations of Electrical, Electronics and Instrumentation Engineering. This course will help you to prepare for Competitive Exams such as GATE / PSU as well as for College exams. All the video lectures are prepared by Electrical Industry experts so that students get exposure to industry perspective as well.\nThese concepts In this course will provide good understanding of Electrical circuit behavior. Hence understanding of these concepts are necessary for all Electrical, Electronics and Instrumentation Engineers. It's self-paced online Basic Electrical Circuit Analysis course where every concept has been explained with examples. This course will make you ready to plunge into other Subjects of Electrical, Electronics and Instrumentation domains.\nThis course will cover all important concepts of the Kirchhoff’s Laws, behavior of R-L-C (Resistor, Inductor, Capacitor) elements, Classification of two terminal elements ( active / passive,  unilateral / bilateral ), classification of sources, nodal analysis and mesh analysis, Superposition principle, Thevenin’s & Norton’s Theorem, Maximum power transfer and Reciprocity principles.\nIn this course, every problem solving example has been selected carefully so that you can solve similar problems in interviews and Competitive Exams such as GATE/PSU.",
      "target_audience": [
        "Electronics Engineering",
        "Electrical Engineering",
        "VLSI professionals",
        "VLSI students",
        "Gate, PSU, Government Exam",
        "EE Students",
        "Hardware Engineers",
        "Semiconductor professionals"
      ]
    },
    {
      "title": "FPGA Timings P2: Clock Domain Crossing(CDC) with Vivado 2024",
      "url": "https://www.udemy.com/course/fpga-timings-p2-clock-domain-crossingcdc-with-vivado-2024/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "Metastability physics and its impact on clock-domain crossings.",
        "Distinction between Static Timing Analysis and CDC verification in Vivado 2024.",
        "Generation and interpretation of Vivado report_clock_interaction and report_cdc outputs.",
        "Design and insertion of two- and three-stage synchronizers with correct ASYNC_REG usage.",
        "Decision-tree methods for safe single-bit transfers, pulses, and reset crossings.",
        "Techniques for coherent multi-bit transfers using Gray counters and XPM_CDC primitives.",
        "Calculation and optimization of Mean Time Between Failure (MTBF) for reliable designs."
      ],
      "course_content": {
        "Getting Started with Vivado CDC": [
          "What is CDC ?",
          "STA vs CDC",
          "Understanding Metastability P1",
          "Understanding Metastability P2",
          "Effects of Metastability",
          "Revisiting Metastability",
          "Demonstration P1",
          "Demonstration P2",
          "Design Code",
          "Constraints",
          "Sync vs Async domains",
          "Clock Interaction report P1",
          "Clock Interaction report P2",
          "Why STA (Static Timing Analysis) is performed only on synchronous clock domains",
          "Clock Interaction report P3",
          "False Violations",
          "Understanding Setup & hold times P1",
          "Understanding Setup & hold times P2",
          "Clock Interaction report P4",
          "Use of Clock interaction report P1",
          "Use of Clock interaction report P2",
          "Usage of report_clock_interaction",
          "report_cdc P1",
          "Usage of report cdc",
          "Safe & Unsafe terminology",
          "Understanding report_cdc P1",
          "Understanding report_cdc P2",
          "Understanding report_cdc P3",
          "Understanding report_cdc info P1",
          "Understanding report_cdc info P2",
          "Understanding report_cdc info P3",
          "Understanding report_cdc info P4",
          "Usage of report_cdc",
          "Interview Prep"
        ],
        "Synchronizer": [
          "Why combinational output should not be used as input to synchronizer P1",
          "Why combinational output should not be used as input to synchronizer P2",
          "Why combinational output should not be used as input to synchronizer P3",
          "Design Code",
          "Constraints",
          "Revisiting bad circuit",
          "Synchronizer",
          "Adding Synchronizer to design P1",
          "Adding Synchronizer to design P2",
          "Design Code",
          "Constraints",
          "Usage of ASYNC_REG attributes P1",
          "Usage of ASYNC_REG attributes P2",
          "Design Code",
          "Constraints",
          "Recommended Practices for CDC Flops P1 : Low Fanout",
          "Recommended Practices for CDC Flops P2 : Minimize delay",
          "CDC flow P1",
          "CDC flow P2",
          "Using Primitives in CDC flow P1",
          "Using Primitives in CDC flow P2",
          "Using Primitives in CDC flow P3",
          "Design Code",
          "Constraints",
          "Interview Prep"
        ],
        "Single bit CDC": [
          "ways to build Synchronizer P1",
          "ways to build Synchronizer P2",
          "Single Bit Decision Tree",
          "Async Reset P1",
          "Async Reset P2",
          "Async Reset P3",
          "Code",
          "Sync Reset P1",
          "Sync Reset P2",
          "Sync Reset P3",
          "Code",
          "Understanding xpm_cdc_single",
          "xpm_cdc_single used case P1",
          "xpm_cdc_single used case P2",
          "Code",
          "Understanding xpm_cdc_pulse P1",
          "Understanding xpm_cdc_pulse P2",
          "Understanding xpm_cdc_pulse P3",
          "Understanding xpm_cdc_pulse P4",
          "Understanding xpm_cdc_pulse P5",
          "Code",
          "Self Check Exercise 1",
          "Self Check Exercise 2",
          "Self Check Exercise 3",
          "Self Check Exercise 4",
          "Interview Prep"
        ],
        "Multibit CDC": [
          "Why single bit CDC cannot be used for Multibits",
          "Multi-bit Decision Tree P1",
          "Multi-bit Decision Tree P2",
          "Understanding XPM_CDC_ARRAY_SINGLE P1",
          "Understanding XPM_CDC_ARRAY_SINGLE P2",
          "Understanding XPM_CDC_ARRAY_SINGLE P3",
          "Code",
          "Data Incoherency",
          "Advantages of Gray over binary counters",
          "Binary vs Gray Counters",
          "Counter Crossing Manual Approach P1",
          "Counter Crossing Manual Approach P2",
          "Counter Crossing Manual Approach P3",
          "Counter Crossing Manual Approach P4",
          "Counter Crossing Manual Approach P5",
          "Counter Crossing Manual Approach P6",
          "Counter Crossing Manual Approach P7",
          "Code",
          "Understanding XPM_CDC_GRAY P1",
          "Understanding XPM_CDC_GRAY P2",
          "Simple example of primitive P1",
          "Simple example of primitive P2",
          "Simple example of primitive P3",
          "Code",
          "Using CDC GRAY primitives in FIFO P1",
          "Using CDC GRAY primitives in FIFO P2",
          "Using CDC GRAY primitives in FIFO P3",
          "Code",
          "Used Case P1",
          "Used Case P2",
          "Code",
          "Self Checking exercise",
          "Understanding xpm_fifo_async P1",
          "Understanding xpm_fifo_async P2",
          "Understanding xpm_fifo_async P3",
          "Self Checking exercise",
          "Self Checking exercise",
          "Understanding XPM_CDC_HANDSHAKE P1",
          "Understanding XPM_CDC_HANDSHAKE P2",
          "Understanding XPM_CDC_HANDSHAKE P3",
          "Understanding XPM_CDC_HANDSHAKE P4",
          "Understanding XPM_CDC_HANDSHAKE P5",
          "Self Checking exercise",
          "Interview Prep"
        ],
        "MTBF": [
          "Understanding MTBF & Improving strategies P1",
          "Understanding MTBF & Improving strategies P2",
          "Understanding MTBF & Improving strategies P3",
          "Interview Prep"
        ]
      },
      "requirements": [
        "Fundamentals of Digital Electronics, Verilog, STA."
      ],
      "description": "This course teaches FPGA engineers how to recognize, analyze, and close clock-domain crossings in Vivado 2024. It begins by contrasting CDC analysis with conventional static timing analysis and by explaining the physics and practical consequences of metastability. Students learn why static timing checks cover only synchronous domains, how metastability propagates, and how to read Vivado’s clock-interaction reports that flag potential false or true violations. The curriculum then moves to hands-on design work, where participants write and debug RTL that purposefully contains unsafe crossings, observe real metastability through simulations, and systematically repair the design. The class introduces two- and three-stage synchronizers, shows why combinational outputs cannot feed them directly, and explains the correct use of the ASYNC_REG attribute, fanout limits, and delay minimization. Single-bit transfers are handled with a decision-tree method that covers level and pulse crossings as well as asynchronous and synchronous resets. Multi-bit transfers follow, demonstrating why a single-bit synchronizer is inadequate, how to maintain data coherency with Gray counters or Xilinx XPM_CDC_ARRAY_SINGLE primitives, and how to build reliable dual-clock FIFOs using XPM_CDC_GRAY. Throughout the course, students generate and interpret Vivado report_clock_interaction and report_cdc output, apply safe and unsafe terminology, and practice waiver management and sign-off procedures. Practical labs culminate in an automated CDC analysis flow that mates TCL scripts with design checkpoints for repeatable closure. Finally, the class quantifies mean time between failure, shows how to push MTBF beyond product life by adjusting synchronizer depth and clock frequency, and equips engineers to defend their CDC strategy during design reviews. By the end, attendees can identify every crossing in a design, select the proper synchronizer or primitive, verify that all paths are safe, and deliver hardware that meets reliability targets on first silicon or bitstream release.",
      "target_audience": [
        "Anyone preparing for Front end RTL Design role."
      ]
    },
    {
      "title": "Speech recognition based home automation",
      "url": "https://www.udemy.com/course/speech-recognition-based-home-automation/",
      "bio": "Learn and explore the concepts of speech recognition and control to get started on your DIY smart home.",
      "objectives": [
        "Learn basic concepts of speech recognition, the Jasper voice-control platform, and Snowboy hotword detction.",
        "Learn how to integrate Snowboy's offline hotword detection with Jasper's voice platform.",
        "Learn to connect appliances to the Raspberry Pi using relay modules.",
        "Program Jasper voice-controlled modules to control lights, fans, and a servo motor.",
        "Apply the above to setup a custom/personalized automation system."
      ],
      "course_content": {
        "Introduction to speech recognition based home automation": [
          "What you will learn from the course",
          "Speech recognition-based home automation",
          "Hardware and software",
          "Quiz - 1"
        ],
        "Software installation": [
          "Getting started",
          "Setting up Audio devices for the latest version of Raspbian Jessie",
          "Configuring Jasper and setting up wit.ai",
          "Setting up Jasper using Google Speech API as STT engine",
          "Step by step procedure for installing Jasper with Wit.ai STT and espeak TTS",
          "Using Snowboy for keyword detection",
          "Generating pmdl file for snowboy from raspberry pi, using the snowboy API",
          "Modified Jasper files - Snowboy integration",
          "Quiz - 2"
        ],
        "Programming the Jasper platform": [
          "Developing your standard module",
          "Circuit diagram - Light and fan control",
          "Creating the home automation module",
          "Source code - Light.py",
          "Real time demonstration - Light and fan control",
          "Light and Fan control using Snowboy"
        ],
        "Servo motor control": [
          "Circuit diagram - Motor control",
          "Servo motor control - Jasper module",
          "Source code - Motor.py",
          "Real time demonstration - Motor control",
          "Controlling Servomotor using Snowboy",
          "Quiz - 3",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of Linux - basic navigation, and ALSA configuration.",
        "Python programming knowledge - the regular expression operations module and file handling I/O",
        "Basic working knowledge of household appliances (fans, lights etc.) and circuitry."
      ],
      "description": "This course will focus on teaching you how to set up your very own speech recognition-based home automation system to control basic home functions and appliances automatically and remotely using speech commands. Furthermore, we will teach you how to control a servo motor using speech control to move the motor through a required angle.\nTo learn how to automate your home, the best place to start is with your personal needs. So, in this course, we will focus on basic control of lighting and ventilation inside a home. This will give you a solid base to build upon by teaching you the basics required for simple speech-controlled automation and enable you to automate almost any appliance in your house – limited only by your creativity and knowledge.\nOnce we have grasped basic lighting control, we will move on to controlling a servo motor using PWM output from the Raspberry Pi GPIO pin. We will also use python file I/O to store the motor’s position.\nThis home automation course will involve teaching you how to control and automate lighting and ventilation appliances, with the potential for expansion of the system to control a variety of services and functions – from home appliances to monitoring and security systems. The system used for home automation will involve using Raspberry Pi 3 and writing python codes as modules for Jasper, which is an open-source platform for developing always-on speech controlled applications.\nThis course aims to help you attain control of household activities, and appliances via futuristic speech recognition. Using Speech-to-text and text-to-speech engines, it is possible to communicate effectively and efficiently with Jasper to carry out simple commands or tasks like activating, and deactivating relay switches to control home appliances without the need for physical exertion.\nThis course will also teach you how to modify the open source Jasper platform to use Snowboy hotword detection engine for offline speech recognition for keyword detection while using wit ai online speech recognition for command word detection. We do this as a precaution to safeguard the privacy of the user while retaining Jasper’s always listening feature.",
      "target_audience": [
        "This course is meant for anyone with an interest in speech recognition and home automation.",
        "This course requires basic knowledge of the Raspberry Pi, Python programming, and Linux.",
        "This course is meant for intermediate-level programmers looking to create a personalized speech-control system."
      ]
    },
    {
      "title": "ESP32: Arduino + FreeRTOS (in VSCode/PlatformIO)",
      "url": "https://www.udemy.com/course/esp32-arduino-freertos-in-vscodeplatformio/",
      "bio": "Arduino multithreading/multicore programming for ESP32",
      "objectives": [
        "You will learn how to use VSCode and PlatformIO in ESP32 arduino projects",
        "You will learn how to combine arduino and FreeRTOS in your ESP32 project",
        "You will be able to create multithreaded ESP32 applications",
        "Learn thread synchronization (mutexes, semaphores, queues, event flags)",
        "Critical sections and hardware interrupts",
        "Arduino milticore"
      ],
      "course_content": {
        "Введение": [
          "Introduction: installing VSCode and PlatformIO, launching an example project"
        ],
        "Multithreading with Arduino": [
          "Simple multithreading program",
          "Priorities of tasks",
          "Mutexes",
          "Spinlock, critical section, multicore",
          "Semaphores and Queues",
          "Event flags",
          "Hardware interrupts"
        ]
      },
      "requirements": [
        "Arduino and C/C++"
      ],
      "description": "In this course I will tell about multithreaded arduino programming for ESP32. After completing it, you will learn how to combine the powerful functionality of arduino libraries with multithreaded programming for FreeRTOS.\nIn the first introductory lecture, I will introduce you to VSCode, which is well suited for developing arduino programs. We will install it and the PlatformIO extension, which allows to compile and debug programs for arduino. Next, we will download a simple arduino-wifiscan project provided by PlatformIO, and use its example to learn how to work with projects in VSCode. Next, we will transfer this project to the original Arduino IDE and run it. After that, we will open the sample project in the Arduino IDE and import it from VSCode.\nIn the next lecture, we will figure out how the arduino program for ESP32 works and find the main file for it. Next, we will write a simple multithreaded program with three threads.\nIn the third lecture, we will study in detail the work of this program and use examples to understand what the priorities of tasks affect.\nIn the next, fourth lecture, we will begin to study ways to synchronize between tasks and change a previously written program to synchronize two threads using a mutex.\nIn the fifth lecture, we will run one of the tasks on another processor core and use its example to get acquainted with critical sections and find out what spinlock is.\nIn the sixth lecture, I will show you how to synchronize tasks using semaphores. We will get acquainted with binary and counting semaphores. Than in this lecture we will study queues.\nIn the seventh lecture I will talk about flags and events.\nIn the eighth lecture, I will tell you how synchronization is performed between hardware interrupts and tasks. We will add an interrupt from the timer to the previously written program and use its example to consider the use of flags from the interrupt. Different processor cores will be used.\nNext, several more examples of multi-threaded programming of ESP32 with arduino will be considered.",
      "target_audience": [
        "Aspiring developers of programs for ESP32"
      ]
    },
    {
      "title": "Siemens PLC Troubleshooting using Software",
      "url": "https://www.udemy.com/course/siemens-plc-troubleshooting-using-software/",
      "bio": "Learn Siemens PLC Troubleshooting using Software.",
      "objectives": [
        "How to troubleshoot Siemens PLC signal Related Issue."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course"
        ],
        "PLC setup For troubleshooting.": [
          "PLC Configuration",
          "Setup Basic and Sample Program",
          "Communication Setup Between Factory IO and Real Hardware PLC"
        ],
        "PLC analyzer PRO": [
          "05 Introduction to PLC analyzer Pro",
          "06 Cmmunication between PLC analyzer and Siemens PLC",
          "07 Adjustment of signal in PLC analyzer pro",
          "08 Adding Symbol File Direct From Project",
          "09 Time Function Of PLC analyzer Pro",
          "10 Find Bit pattern In PLC analyzer Pro",
          "11 Find Edge of Signal in PLC analyzer PRO",
          "12 Trigger and Find Trigger in PLC analyzer PRO",
          "13 Scaling of Analog Signal in PLC analyzer Pro",
          "14 Find Register Value in PLC analyzer Pro",
          "15 Statistic Calculation in PLC analyzer PRO",
          "16 Export of SIgnal in PLC analyzer PRO"
        ],
        "WinPLC analyzer": [
          "17 Introduction to WinPLC analyzer",
          "18 Communication Between PLC and WinPLC analyzer",
          "19 GOTO function in PLC analyzer PRO",
          "20 Show Test Point in WinPLC analyzer",
          "Drum Synchronization Troubleshooting"
        ],
        "PLC troubleshooting in TIA portal": [
          "21 Introduction to TIA portal Troubleshooting",
          "21 High Limit Exceeded of Analog Signal",
          "23 Power Supply Missing Diagnostic in TIA Portal",
          "24 Diagnostic Error Interrupt OB82",
          "25 Hardware Interrupt OB40",
          "26 Truoubleshooting problem using Traces in TIA portal"
        ]
      },
      "requirements": [
        "Basic knowledge of PLC"
      ],
      "description": "Hello Friends,\nHere I bring one new and Important course For You.\nWe all know among us not Everyone is working as PLC programmer. Most of us are working as troubleshooting and Maintenance Technician.\nWe have to face daily new problem in the field and sometime we lost so much time to find an issue like wire cut, voltage drop ,short circuit, signal missing etc. So We need always one tool which can make our work easy.\nAs my personal experience tool like PLC analyzer Pro , WinPLC analyzer , and TIA portal can make your work too easy in the Field of maintenance.\nIn this i have covered most of topic about troubleshooting  PLC related issue.\nThanks",
      "target_audience": [
        "Technician,Student and Professional."
      ]
    },
    {
      "title": "Learn to make interactive work with Arduino",
      "url": "https://www.udemy.com/course/intro-to-arduino-electronics-maker-hobbiest-marketer-engineer/",
      "bio": "Capture peoples attention effectively using interactive electronics. Learn to make your own custom interactive installs",
      "objectives": [
        "Understand what Arduino is about, by doing!",
        "Quickly understand the building blocks to make your own projects",
        "Create an interactive proximity warning device, useful for parking your car and learning core concepts in a project based approach"
      ],
      "course_content": {
        "Introduction": [
          "What can the Arduino do"
        ],
        "Lay of the Land": [
          "Arduino anatomy",
          "Identify the parts of the Arduino",
          "Shopping List"
        ],
        "Installing the Software": [
          "Connecting it to a Computer",
          "Install on Windows",
          "Install on Mac"
        ],
        "Code Introduction": [
          "My first upload",
          "Intro to Code - Flashing a LED"
        ],
        "Electronics": [
          "Breadboards and Jumper Wires, a practical intro",
          "Components to diagrams",
          "Inputs, Outputs, Analog and Digital"
        ],
        "Controlling an Output (Actuators)": [
          "Create sound with a buzzer",
          "Coloured Lighting!"
        ],
        "Reading inputs (Sensors)": [
          "Intro to inputs with a button example",
          "Ultrasonic sensors and the Serial Monitor"
        ],
        "Your Project - Bringing it together": [
          "Break down a project",
          "Build it back up"
        ],
        "Conclusion": [
          "Fin"
        ],
        "Further": [
          "Reading Resistors"
        ]
      },
      "requirements": [
        "Know computer basics",
        "Download Arduino software, we will go through this in the course",
        "Purchase an Arduino board, we will also go though selection in the course",
        "No need for an Arduino if you want to just follow along"
      ],
      "description": "I take you from woe to go! Get started with electronics and making interactive media quickly. In this course I show you how to get up and running on the Arduino platform so you can make your own projects to interact with the world.\nColourful lights? TICK!\nPotential robot overlords? BETTER BELIEVE IT!\nAutomate garden watering? IF THE OVERLORDS SAY SO!\nLearn the basics and move up the ladder quickly exploring the exciting and useful world of electronics with this course. You will learn the components and how to break down components so you can be self sufficient.\nThis course is for people that are interested in interactive media and people that want to learn the basis for electronics. We quickly move onto projects allowing you to put the skills you have learnt to the test.\nRemember, I am always here to help you though your project and answer questions along the way!\nSo lets get started!\n-John",
      "target_audience": [
        "This course is for beginners who want a soft introduction to Arduino, what it can do, and to get up to speed quickly while creating cool projects.",
        "Artists who are interested in adding interactivity to their work",
        "Programmers that want to connect their code to the real world using sensors such as ultrasonic distance measurement and light indicators as a start.",
        "NOT for seasoned professionals, more advanced topics are covered in another course"
      ]
    },
    {
      "title": "Vision with openFrameworks",
      "url": "https://www.udemy.com/course/vision-with-of/",
      "bio": "Add vision to your Pi",
      "objectives": [
        "work with the best toolkit in C++ i.e openframeworks",
        "perform image processing",
        "work with video I/O",
        "create mind blowing computer vision applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Hardware Requirements"
        ],
        "Getting Started": [
          "Install oF on Windows",
          "Install oF on OSX",
          "Install oF on Linux",
          "Setup SD card for raspberry pi",
          "Install oF on the raspberry Pi",
          "Install openFrameworks 0.8.4 on debian wheezy installed on your raspberry pi",
          "Hello World!",
          "RESOURCE: Code Repository"
        ],
        "oF Internals": [
          "Contents of your oF installation",
          "Anatomy of your oF project",
          "Makefiles and config.make",
          "Addons",
          "Coding Exercise"
        ],
        "Important Functions": [
          "Program Execution",
          "Utility Functions"
        ],
        "User Interaction": [
          "Modes of User Interaction",
          "Example GUI",
          "GUI code explanation",
          "Coding Exercise"
        ],
        "Image Processing": [
          "Image Data Types",
          "Image Processing",
          "Histogram Equalization"
        ],
        "Video Processing": [
          "Video Player",
          "Video Player Example",
          "Video Grabber",
          "Video Grabber Example",
          "Interfacing Raspberry Pi Camera Module"
        ],
        "Computer Vision": [
          "Blobs and Conotours",
          "Object Detection: Template Matching",
          "Object Detection: Color Tracking",
          "Object Tracking: Haar Finder",
          "Background Separation",
          "Motion Analysis"
        ]
      },
      "requirements": [
        "This is an intermediate level course so students should have a basic understanding of object oriented programming. A little understanding of Linux will be helpful, however it is not a must.",
        "You will require a raspberry pi B+ board",
        "You will also require a webcam or a raspberry pi camera"
      ],
      "description": "Vision with openFrameworks,\nopenFrameworks is an open source C++ toolkit that assists the creative process by bringing together opensource libraries for graphics, audio/video analysis, image manipulation, computer vision and 3D modeling.\nThis course aims to teach anyone how to get started with oF and build really awesome applications. Vision with openframeworks is for anyone who wants his applications to see and interact with the real world like living beings. You will learn to create applications for major operating systems and additionally we will be working with the raspberry pi and its camera module, so that you can create mini devices equipped with computer vision and be a real entrepreneur.\nWe will start off with the\nbasics of the toolkit i.e openframeworks,\nyou will work with user interfaces,\nvideo input/output,\nbasics of image processing down to rgb and hsv channels and histograms.\nThe prime focus of this course will be on computer vision applications such as\ncontour detection\ncolor tracking\nobject detection\nface tracking\nmotion analysis\nand many more things.\nThere will be detailed projects for each and every module and in addition to that we will work with real products to improve your hands on skills.\nThe ideal student for this course is a programmer who wants to add vision to his applications or an entrepreneur who wants to create a new product or a startup. If you have the basic programming skills and the thirst to learn please join in.\nFeel free to check out the course contents and free previews, looking forward to seeing you inside.",
      "target_audience": [
        "Anyone who wants to learn the most comprehensive toolkit for programming in C++",
        "Anyone who wants to work with images, video, graphics, networking and computer vision",
        "Anyone who wants to add vision to his applications",
        "Anyone who wants to be a real entrepreneur and create futuristic products"
      ]
    },
    {
      "title": "No Nonsense ITIL Hardware Asset Management Set up",
      "url": "https://www.udemy.com/course/no-nonsense-hardware-asset-management-set-up/",
      "bio": "Setting up from day 0 a brand new ITIL CMDB/Asset database",
      "objectives": [
        "The fundamentals of starting a hardware asset management function",
        "How to communicate and discover what's needed to understand the business needs",
        "Where you start when starting to search for assets",
        "How to manage internal and external auditing"
      ],
      "course_content": {
        "Quick guide to starting up a Hardware asset database": [
          "Introduction",
          "Rule 1: Understand the need",
          "Rule 2: Telling them your job",
          "Rule 3: Setting expectations",
          "Rule 4: Get it all written down",
          "Starting the hunt and auditing",
          "Summary"
        ]
      },
      "requirements": [
        "This is for beginners/intermediator level asset management to understand basics of starting Hardware Asset Management functions in an existing business"
      ],
      "description": "You have been asked to set up a brand new shiny asset management function within a company that has been trading for years. How do you set up the service whilst ensuring you meet the business need? How do you ensure that you as a service are protecting yourself from being expected to have a 100% accurate CMDB?\n\n\nThis no nonsense course will give you a no-nonsense guide on how to do exactly that:\n\n\n1. what actions will you need to take before you even start tracking\n2. how you get your function known and working together with other teams\n3. Basics of writing policy and process documentation for hardware asset management\n4. How to kick off the hunt of finding assets\n5. Why auditing is ok and should not be scary and how you own it\n6. A breakdown of new courses that will be coming in the very near future.\n\n\nThe objective of the course is to allow the user to know the first things they need to do in an existing workplace that is introducing asset management as a new function, and how you have to create manual processes to achieve the first basic steps on getting a functional central source of data created.",
      "target_audience": [
        "Hardware asset managers, SACM analysts, business analysts"
      ]
    },
    {
      "title": "Laptop Motherboard components with schematic analysis course",
      "url": "https://www.udemy.com/course/laptop-motherboard-components-with-schematic-analysis-course/",
      "bio": "Pc circuits for beginners|Chip level repairing|Computer hardware technician|PCB designing|Electronics|Basic Troubleshoot",
      "objectives": [
        "Definition of any component on the motherboard;",
        "Function of any component on the motherboard;",
        "Working principle of the motherboard;",
        "All laptop motherboard components;",
        "Components symbols",
        "Types of mosfets, diodes, capacitors, and resistors;",
        "Difference between chips and integrated circuits;",
        "How to Read and understand any laptop schematic;",
        "Motherboard issues;",
        "How to identify and locate the malfunction on the motherboard."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you will learn in this course"
        ],
        "Motherboard Chips and Integrated circuits.": [
          "CPU",
          "GMCH",
          "ICH",
          "RAM",
          "SIO IC",
          "Bios IC",
          "Charge IC",
          "System power 3V & 5V IC",
          "CPU IC",
          "RAM IC",
          "System power 1.8V & 1.5V IC",
          "Clock Generator",
          "Audio IC",
          "RJ45 IC",
          "Mosfet/Transistor"
        ],
        "Motherboard components": [
          "Coil",
          "Capacitor",
          "Diode",
          "Resistor",
          "Crystal oscillator",
          "CMOS battery",
          "CPU fan"
        ],
        "Congratulation!": [
          "Congratulation!"
        ]
      },
      "requirements": [
        "Basic knowledge of computer hardware.",
        "Basic knowledge of electronics."
      ],
      "description": "The laptop Motherboard components with schematic analysis course are intended for those interested in computers and electronics.\n· Continuous updates\nTopics that we will be discussed in this course are :\nCPU ( Central Processing Unit );\nGMCH ( Northbridge );\nICH ( Southbridge );\nRAM;\nSIO IC;\nBIOS IC;\nCharge IC;\nSystem Power 3V/5V IC;\nCPU Power IC;\nRAM Power IC;\nSystem Power 1,8V/1,5V IC;\nClock Generator IC;\nAudio IC;\nRJ45 IC;\nMosfet / Transistor;\nCoils;\nPolarized Capacitor;\nPF Capacitor;\nAll types of Diodes;\nAll types of Resistors;\nQuartz Crystal Oscillator;\nCmos Battery;\nCPU FAN.\nWe will see all these components with their real schematics and pinouts.\n\n\nupon completion of this course, you will:\nBe professional in computer and laptop schematics reading.\nGo deeper into the understanding of a computer's functioning.\nKnow the measurement points on the motherboard.\nKnow the meanings of the symbols used in the motherboard.\nGo deeper into analyzing the motherboard circuit.\nBuilt a high capability in finding motherboard faults.\nGo deeper into understanding the relationship between motherboard parts.\n\n\nTo say the truth, this course is for those who want to be professional in computer scheme analysis and motherboard repair.\n\n\nIf you are interested in one of the points we talked about before, then this course is for you.\n\n\nAfter completing and understanding this course, you will be able to understand any computer motherboard issue, regardless of its model or type.\n\n\nEnroll Now in this course, and Join the caravan of motherboard maintenance and circuit diagram analysis experts.",
      "target_audience": [
        "Students who are interested in hardware, electronics, and schematics.",
        "Computer and electronic technicians.",
        "Anyone how wants to understand or repair computer motherboards."
      ]
    },
    {
      "title": "Embedded Systems Cellular Firmware Development(GSM)",
      "url": "https://www.udemy.com/course/embedded-systems-cellular-firmware-developmentgsm/",
      "bio": "Communicate with your embedded devices using cellular technology : Phone Call, SMS, M2M etc.",
      "objectives": [
        "Understand the Fundamentals of Cellular Technology",
        "Develop a Complete Library for using Cellular chips with STM32 microcontrollers",
        "Develop First-In-First-Out (FIFO) Data Structure for Managing Communication Data",
        "Develop Bare-Metal Firmware for Controlling Hardware Modules by SMS",
        "Develop Bare-Metal Firmware for Controlling Hardware Modules by Phone Call",
        "Develop Bare-Metal Firmware for automatically sending SMS or making Phone Call by Hardware Trigger",
        "Develop Bare-Metal Firmware for automatically sending Sensor data when an RTC alarm occurs",
        "Develop Bare-Metal Firmware for sending Sensor data periodically by RTC",
        "Develop a Bare-Metal Realtime Clock (RTC) driver"
      ],
      "course_content": {
        "Getting Started": [
          "Downloading CubeIDE",
          "Installing CubeIDE",
          "Getting the best out of this training",
          "Getting the required Documentation",
          "Setting Up the first project"
        ],
        "Introduction to Cellular Technology": [
          "Comparing Wireless Solutions",
          "An Overview of Cellular Technology",
          "Understanding Duplex Transmission and Multiple Access",
          "Analog and Digital Cellular Technology",
          "The Evolution of Cellular Technology",
          "Understanding the GSM Architecture"
        ],
        "Developing the Debug UART Driver": [
          "Programming : Developing the Debug UART Driver (Part I)",
          "Programming : Developing the Debug UART Driver (Part II)",
          "Programming : Developing the Debug UART Driver (Part III)",
          "Programming : Developing the Debug UART Driver (Part IV)",
          "Source Code Download"
        ],
        "Developing the A6 UART Driver": [
          "Programming : Developing the A6 Chip UART Driver"
        ],
        "Developing a Timebase for the System": [
          "Programming : Developing a System Tick (SysTick) Timer Driver"
        ],
        "Developing a First-In-First-Out (FIFO) Data Structure for Managing Data": [
          "Introduction to FIFOs",
          "Programming : Developing the FIFO Data Structure for Communication",
          "Programming : Testing the FIFO"
        ],
        "Developing the A6 GSM Chip Library": [
          "Programming : Copying Data from FIFO to UART",
          "Programming : Finding responses in the RX Data Stream",
          "Programming : Implementing an Interrupt Callback to process RX Data Stream",
          "Programming : Initializing the A6 GSM Chip",
          "Programming : Running some common commands"
        ],
        "Developing A6 GSM Embedded Applications": [
          "Programming : Sending SMS Messages",
          "Programming : Making a Phone Call",
          "Programming : Dropping a Phone Call",
          "Programming : Receiving SMS messages",
          "Programming : Raw SMS messages in the RX Stream"
        ],
        "Developing Some Hardware Modules for Building Real World Examples": [
          "Programming : Developing the LED Module",
          "Programming : Developing the Push Button Module",
          "Programming : Developing the ADC Initialization function",
          "Programming : Developing the ADC Read function",
          "Overview of the Real Time Clock (RTC)",
          "Programming : Developing the RTC Initialization function",
          "Programming : Developing the RTC Alarm Initialization function (Part I)",
          "Programming : Developing the RTC Alarm Initialization function (Part II)",
          "Programming : Developing the RTC Alarm Initialization function (Part III)",
          "Programming : Developing the RTC Alarm Initialization function (Part IV)",
          "Programming : Testing the RTC"
        ],
        "Developing Some Real World Applications": [
          "Programming : Controlling Hardware from SMS",
          "Programming : Controlling Hardware from a Phone Call",
          "Programming : Sending SMS by Hardware Trigger",
          "Programming : Sending Sensor Data as SMS Triggered by RTC Alarm",
          "Programming : Sending Sensor Data as SMS Periodically with RTC"
        ]
      },
      "requirements": [
        "NUCLEO-STM32F411 DEVELOPMENT BOARD",
        "A6 GSM/GPRS Module"
      ],
      "description": "Welcome to the Embedded Systems Cellular Firmware Development(GSM) course\nThis course teaches you how to develop drivers and libraries for adding cellular functionality to your embedded device.\nThis course uses the STM32 microcontroller and the A6 GSM/GPRS chip. The A6 is a low-cost quad band GSM/GPRS chip equipped with  850/900/1800/1900MHz worldwide communication band.  If you do not understand what a band means, do not worry, by the end of this course you will understand this and much more.\nThe drivers developed in this course will work on almost all cellular chips out there, this is because most of them use the UART for communication.\nThe course can be divided into three parts. The first part is theoretical. In this part we shall learn about some cellular technology concepts and the fundamentals of the GSM architecture.\nIn the next part of the course we shall develop bare-metal drivers for interfacing the A6 chip to the STM32 microcontroller.\nAfter developing our drivers for connecting the A6 chip to the STM32 microcontroller we shall then go ahead and develop efficient data structures for managing communication data between the A6 chip and the STM32 microcontroller.\n\n\nIn the final part we shall combine the drivers and data structures developed in the previous parts to develop a library for connecting to the cellular network. We shall then go ahead to develop some real world applications.\nSome Highlights :\nIf you want to understand the concept of a SIM card see section 2\nIf you want to know the difference between 1G, 2G, 3G, 4G, 5G see section 2\nIf you want to know the difference between GSM, LTE, WCDMA, see section 2\nIf you want to control hardware modules by SMS see section 10\nIf you want to control hardware modules by Phone Call see section 10\nIf you want to automatically send SMS or make a Phone Call by hardware trigger see section 10\nIf you want to develop a bare-metal realtime clock(RTC) driver see section 9\nIf you want to send sensor data by SMS triggered by an RTC alarm see section 10\nIf you want to send sensor data as SMS periodically with RTC see section 10\n\n\nPlease take a look at the full course curriculum.\n\n\nREMEMBER : I have no doubt you will love this course. Also it comes with a  FULL money back guarantee for 30 days!  So put simply, you really have nothing to loose and everything to gain.\nSign up and let's start transmitting some packets.",
      "target_audience": [
        "If you are an embedded developer and want to learn how to add cellular functionality to your embedded device then take this course."
      ]
    },
    {
      "title": "ESP32 Email Alert Based on Sensors Reading",
      "url": "https://www.udemy.com/course/esp32-email-alert-based-temperature-ios-esp-internet/",
      "bio": "Send Emails using ESP32 to get instant alerts including sensor reading and alarms per specific condition that you choose",
      "objectives": [
        "Program ESP32 Effectively",
        "Create a fully functional Project in no Time",
        "Read Sensor data using ESP32 Board",
        "Send Email alert when sensor reading goes above a certain value"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Sensor-Based Email Alerts with ESP32"
        ],
        "Important Note: Review System": [
          "Important Note: Review System"
        ],
        "Download and Install Software Section": [
          "Download and Install Arduino Pro IDE",
          "Quiz",
          "Download and Install Arduino ESP and USB Driver",
          "Download and Install Arduino ESP32 v1 Development environment",
          "Load Your First Code to ESP32 Board",
          "Quiz"
        ],
        "SMTP Server": [
          "What is SMTP Server",
          "Introduction to SMTP Servers and Their Role in Communication"
        ],
        "Mail Library": [
          "Install ESP32 Mail Library for Arduino",
          "Create a New Email Account to be used as Sender",
          "SMTP Server Settings",
          "Setting Up Email Communication with ESP32 Using the Mail Library"
        ],
        "Coding": [
          "Coding the ESP32 Email Alert Project",
          "Coding the ESP32 Email Alert Project Part2",
          "Developing an Email Alert System Using ESP32",
          "Quiz"
        ],
        "Practical Testing": [
          "Practical Testing"
        ],
        "Sensor Alert via Email": [
          "Sensor Alert via Email",
          "Coding and Testing an ESP32-Based Sensor Alert System with Email Functionality"
        ],
        "Extra": [
          "ESP 32 Pinout v1 DOIT",
          "Quiz"
        ],
        "Practice Test": [
          "ESP32 Email Alert – Practice Test"
        ]
      },
      "requirements": [
        "Basic Knowledge of Programming"
      ],
      "description": "ESP32 Email Alert Based on Sensors Reading: Send Emails using ESP32 to get instant alerts including sensor reading and alarms per specific condition that you choose. <<<\nWelcome to this course.\nThe course lesson will explain “ESP32 Email Alert Based on Sensors Reading” by using Arduino IDE coding and Arduino Environment. This course will work best for you if you have basic knowledge of Electronics and Arduino. You will learn how to interface the ESP32 with your computer and control it using Arduino IDE to read sensor data and send alerts via emails accordingly.\nESP32 can be used in your Engineering projects, Industrial Projects, or Home Automation related projects.\nWhy You Should Take This Course\nYou will learn how to send emails with sensor readings and alarms per specific conditions that you choose.\nIt's possible to connect LEDs to the ESP32 for visual alerts.\nYou can integrate an existing system or build your own IoT system based on this course.\nYou can use it for fire alarm, smoke alarm, door/window sensor, motion detection, etc.\nThe ESP32 is much more capable than similar chips available in the market at half the price.\nWhy Learn ESP32?\nIf you are an Engineering or Science student, you might come across projects in which you want physical interaction with your computer system & to display the operations on a PC screen.\nESP32 is one of the cost-effective tools which you can create or purchase and start programming to interact with physical elements with your logic and create results the way you want.\nUsing Arduino IDE, you can fully control the ESP32 board and the various process parameters like motor speed, LED ON/OFF feedback, and temperature signal.\nYou’ll Learn How To:\nSet up electronic circuits\nSet up the communication protocol on ESP32\nWrite basic applications for ESP32 in Arduino to control basic functions\nAdvanced control sensors and email automation using ESP32\nIntegrate ESP32 sensors and switches\nAt the end of this course, you can create innovative projects. The only thing that you need to do is THINKING, WIRING & CODING.\nUser Testimonials and Social Proof\n\"This course made setting up email alerts with ESP32 straightforward and effective. Highly recommended!\" - Emily R.\n\"The detailed explanations and practical examples helped me implement ESP32 in my home automation projects effortlessly.\" - David S.\nAn Author Bio Showing Off Credentials\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nA Single Powerful CTA\nEnroll now and start your journey to mastering ESP32 email alerts today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nSetting up electronic circuits\nCommunication protocol on ESP32\nWriting basic applications for ESP32 in Arduino\nAdvanced control sensors and email automation\nIntegrating ESP32 sensors and switches\nWho Is This Course For\nAnyone interested in creating practical ESP32 projects\nBeginners with no prior experience in Arduino\nMakers and hobbyists wanting to expand their knowledge\nStudents and professionals looking to enhance their skills\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Embedded Systems Geeks",
        "Arduino Geeks",
        "Anyone interested in connecting his project to the internet with a low budget solution",
        "ESP32 Geeks"
      ]
    },
    {
      "title": "ESP32 Web Server: Create Your Own Standalone Server",
      "url": "https://www.udemy.com/course/python-scoial-distance-detector-covid19/",
      "bio": "Learn to control devices and display data using ESP32 as your personal web server in this comprehensive, step-by-step co",
      "objectives": [
        "Program ESP32 Effectively",
        "Create a fully functional Web Server in no Time",
        "Learn about the ESP32 and what makes it an excellent choice for Arduino Makers.",
        "Create A Simple ESP32 Web Server In Arduino IDE",
        "Learn about ESP32 Operating Modes",
        "Learn the difference between Station (STA) Mode and Soft Access Point (AP) Mode",
        "Use ESP32 as HTTP Server using WiFi Access Point (AP) mode",
        "Learn to Access the Web Server in AP mode"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Hardware and Software Requirements",
          "Discussing Embedded Web Interface Concepts with ESP32",
          "Understanding Hardware and Software Requirements"
        ],
        "Getting Coding Environment Ready": [
          "Download and Install Arduino ESP and USB Driver",
          "Download and Install Arduino ESP32 v1 Development environment",
          "Load Your First Code to ESP32 Board",
          "Setting Up and Using ESP32 with Arduino",
          "Setting Up the ESP32 Development Environment"
        ],
        "Important Note: Review System": [
          "Important Note: Review System"
        ],
        "Web Server": [
          "What is a Web Server",
          "Understanding Web Servers"
        ],
        "ESP32 Operating Modes": [
          "ESP32 Operating Modes",
          "Exploring ESP32 Operating Modes"
        ],
        "Circuit Design": [
          "Circuit Design",
          "Designing Circuits for ESP32"
        ],
        "How it Works": [
          "Understanding how esp32 work as a server",
          "ESP32 as a Web Server"
        ],
        "Coding": [
          "Coding WiFi and Webserver settings",
          "Coding HTTP Requests and Server Start",
          "Coding Client Methods",
          "ESP32 Web Server Coding Fundamentals",
          "The Code",
          "Coding Web Server Settings"
        ],
        "HTML Code for Webpages": [
          "Writing HTML Code for Webpages",
          "Writing HTML Code for Webpages"
        ],
        "Practical": [
          "Practical",
          "Building and Testing the ESP32 Web Server"
        ]
      },
      "requirements": [
        "Basic Knowledge of Programming",
        "Be familiar with the Arduino Uno",
        "Be familiar with writing and editing sketches for the Arduino Uno",
        "Be familiar with the breadboard and wiring."
      ],
      "description": "Welcome to \"ESP32 Web Server: Create Your Own Standalone Server\" – a detailed guide designed for enthusiasts and professionals alike to master the art of building and managing a web server using the ESP32 microcontroller. This course is perfect for those who wish to merge the practical world of electronics with the dynamic world of web programming.\nCourse Overview:\nIn this course, you will learn how to set up a web server with ESP32 that can control various devices such as motors, LEDs, and relays, and display data through a simple web interface accessible on any device within a local network. Our lessons are crafted to transform you from a beginner to a skilled individual capable of creating a mobile-responsive server without any additional hardware.\nWhy Should You Enroll?\nHands-on Learning: Build a functional ESP32 web server using Arduino IDE.\nComprehensive Coverage: From basic connections to advanced server modes.\nAccessibility: Designed for learners with basic electronics knowledge, but beginners are welcome too!\nFlexibility: Learn at your own pace and apply skills to create innovative projects.\nWhat Will You Learn?\nInitialization: Setting up the ESP32 in Arduino IDE.\nOperating Modes: Explore both Station (STA) and Soft Access Point (AP) modes.\nHardware Connections: Detailed guidance on wiring and connecting devices.\nServer Setup: Learn to control outputs using ESP32 in AP and STA mode.\nProgramming: Deep dives into code structures and their functionalities.\nProject Implementation: Practical applications and real-world project development.\nWho Is This Course For?\nTech Enthusiasts: If you are fascinated by microcontrollers and IoT, this course will enhance your skills.\nDevelopers and Engineers: Professionals seeking to integrate IoT solutions into their projects.\nEducators and Students: Anyone in academia looking to broaden their practical knowledge in web programming and electronics.\nCourse Requirements:\nBasic Knowledge: Familiarity with electronics and the Arduino programming environment.\nHardware: ESP32 module, connecting wires, and basic electronic components like sensors and LEDs.\nSoftware: Arduino IDE installed on your computer.\nTestimonials:\n\"This course gave me the insights I needed to finally launch my own IoT projects. The lessons were clear, and the hands-on approach was incredibly effective.\" - Jamie L.\n\"I appreciated the depth of content and the practical applications. It's great for both learning and reference.\" - Alex D.\nEnroll now to start your journey into the world of IoT and create your own ESP32 web server to manage and control devices seamlessly.\nEmbark on this learning adventure to harness the power of the ESP32 and make your innovative ideas come to life!\nUser Testimonials and Social Proof\n\"This course gave me the insights I needed to finally launch my own IoT projects. The lessons were clear, and the hands-on approach was incredibly effective.\" - Jamie L.\n\"I appreciated the depth of content and the practical applications. It's great for both learning and reference.\" - Alex D.\nAn Author Bio Showing Off Credentials\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, and in particular for the world of Arduino, PIC Microcontroller, Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nA Single Powerful CTA\nEnroll now and start your journey to mastering ESP32 web server development today!\nFAQ Section\nQ: Do I need any prior knowledge to take this course?\nA: No prior knowledge or skills are required. This course is designed for complete beginners.\nQ: How long will it take to see results?\nA: Results can vary, but many students start seeing results within the first few weeks of applying the strategies taught in the course.\nQ: Is there a money-back guarantee?\nA: Yes, Udemy offers a 30-day money-back guarantee if you are not satisfied with the course.\nWhat You Will Learn\nSetting up the ESP32 in Arduino IDE\nExploring Station (STA) and Soft Access Point (AP) modes\nWiring and connecting devices to ESP32\nControlling outputs using ESP32 in AP and STA modes\nDeep dives into code structures and their functionalities\nPractical applications and real-world project development\nWho Is This Course For\nTech enthusiasts interested in microcontrollers and IoT\nDevelopers and engineers seeking to integrate IoT solutions into their projects\nEducators and students looking to broaden their practical knowledge in web programming and electronics\nRequirements\nA computer with internet access\nBasic understanding of the internet and web browsing\nWillingness to learn and implement the strategies taught",
      "target_audience": [
        "ESP Geeks",
        "Anyone interested in creating an ESP Web Server",
        "Anyone interested in adding more advance control to his project via Web",
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Embedded Systems Geeks",
        "Arduino Geeks",
        "Anyone interested in connecting his project to the internet with a low budget solution"
      ]
    },
    {
      "title": "Revive the Art of Morse Code with Arduino!",
      "url": "https://www.udemy.com/course/arduino-morse-code-generator-morsecodearduino-mors-code-arduino/",
      "bio": "Delve deep into the world of Morse Code. Discover how to craft your own Arduino-powered Morse Code Generator",
      "objectives": [
        "Make your own Arduino Morse Code Generator",
        "Learn Working Principle of Morse Code",
        "Interface Buzzer and Speakers with Arduino",
        "Interface different type of electronic elements with Arduino.",
        "Send Morse Code Signals to your friends or show off your own Morse Code device",
        "Morse Code is a well-known way of communication, Learn how to Implement it using Arduino and Start sending SOS Signals",
        "Build a Morse Code Generator with Arduino and start sending SOS signals.",
        "Learn how to send Morse Code messages with an Arduino",
        "Learn Morse Code from beginning to end",
        "Get fluent in Morse Code in just a few hours"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Exploring Morse Code Transmission with Microcontrollers",
          "What is Morse Code",
          "Quiz",
          "Summary",
          "Reading Material",
          "Understanding Morse Code and Its Applications"
        ],
        "Hardware and Software Requirements": [
          "Section Intro",
          "What are the required Components",
          "Software Requirements",
          "Quiz",
          "Summary",
          "Reading Material",
          "Components Required for Building an Arduino Morse Code"
        ],
        "Circuit Design": [
          "Section Intro",
          "Simple Circuit Diagram",
          "Circuit Design",
          "Arduino Speaker Circuit",
          "Quiz",
          "Summary",
          "Reading Material",
          "Circuit Design for Arduino Morse Code Generator"
        ],
        "Coding": [
          "Section Intro",
          "Getting Things Ready",
          "Create Morse Code Main Method",
          "Quiz",
          "Finishing Up",
          "Code",
          "Summary",
          "Quiz",
          "Reading Material"
        ],
        "Download and Install Software Section": [
          "Download and Install Arduino Software",
          "Download and Install Circuit Design and Wiring Software",
          "Downloading and Installing Arduino Software"
        ],
        "Practice Test": [
          "Practice Test on Morse Code with Arduino: Components, Circuit Design, and Coding"
        ],
        "Who we are?": [
          "Who We Are?"
        ],
        "Course Project": [
          "Course Project",
          "Presenting a Morse Code Simulator Using Arduino"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "Basic experience in Arduino",
        "A Will to apply, not just watch",
        "Improve your productivity at work by learning a new skill on the side",
        "Practical work with the computer to create projects"
      ],
      "description": "The Timeless Morse Code Meets Modern Arduino:\nMorse Code, a classic communication method, meets the modern-day marvel, Arduino. Dive into this course to craft a Morse Code Generator that translates text into the iconic dots and dashes and brings your words to life!\nJourney Overview:\nMorse Code: A Brief History: Explore the origins, significance, and applications of Morse Code, from wartime transmissions to SOS signals.\nArduino & Morse Code Unison: Discover how the Arduino board can breathe life into Morse Code, transforming text into rhythmic beeps.\nCrafting the Generator: Step-by-step guidance on building the Morse Code Generator, from circuit assembly to programming.\nWhy Choose This Course?\nComprehensive Understanding: Learn the ins and outs of Morse Code, its applications, and its synergy with Arduino.\nPractical Learning: Actualize your knowledge through hands-on projects, constructing your Morse Code Generator.\nNo Advanced Programming: Simplified approach ensures you master Morse Code without intricate coding.\nCourse Takeaways:\nMaster the Morse Code language, translating text into its iconic rhythm.\nHarness the power of Arduino to craft your Morse Code Generator.\nCommunicate in a unique, timeless manner, sending messages or even SOS signals.\nMaterials & Tools:\nHardware: Arduino board, Speaker, and connecting wires.\nSoftware: Arduino IDE and Morse Code Libraries.\nEmbrace a Unique Skillset:\nIn a world of digital communication, stand out with your ability to communicate through Morse Code. Whether it's for a DIY project, an SOS signal, or just for fun, Morse Code is a skill that marries the past and present.\nJoin the Morse Code Revolution!\nUnleash your creativity, embrace history, and become a part of the Morse Code community. With our expert guidance, you'll be beeping and pausing like a pro in no time. Enroll today and embark on this electrifying journey!\nUser Testimonials: \"This course brought Morse Code to life for me. The hands-on approach with Arduino made it so much fun!\" - Kevin L.\n\"I never thought I could learn Morse Code so easily. The Arduino project was the icing on the cake!\" - Emma P.\nAuthor Bio: Ashraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. As a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world. With over 250,000 students from around the world, Ashraf’s online courses have helped many to kick-start their careers in the industry.\nCall to Action: Enroll now to revive the art of Morse Code with Arduino and stand out with this unique skill!\nFAQ: Q: Do I need prior experience in electronics or programming to take this course? A: No, this course is designed for all levels.\nQ: Will I need to buy additional equipment? A: The course provides a list of necessary hardware, all of which are affordable and easily accessible.\nWhat You Will Learn\nUnderstand the history and fundamentals of Morse Code\nDevelop an Arduino-powered Morse Code Generator\nTranslate text into Morse Code beeps and signals\nApply practical knowledge through hands-on projects\nWho Is This Course For\nElectronics enthusiasts\nHobbyists interested in Morse Code and Arduino\nBeginners looking for a unique project\nAnyone interested in learning about Morse Code\nRequirements\nAn Arduino board, speaker, and connecting wires\nBasic understanding of using a computer\nNo prior programming or electronics experience needed\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects. They strive to provide deep, hands-on experience in their courses, offering step-by-step blueprints on various topics.\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and maker. He has been the Chief Educational Engineer at Educational Engineering Team since 2007, and his mission is to explore new trends and technology to help educate the world. His online courses have helped over 250,000 people worldwide to build successful careers.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Arduino Geeks",
        "Electronics Geeks",
        "Anyone Interested in Learning How Morse Codes works",
        "Anyone Interested in Learning How to Make Morse Code Generator Using Arduino",
        "Anyone Interested in Learning New Things about Arduino",
        "For hobbyists perosns",
        "Professionals alike"
      ]
    },
    {
      "title": "Getting Started with Azure IoT Central",
      "url": "https://www.udemy.com/course/getting-started-with-azure-iot-central/",
      "bio": "Learn about Azure IoT Central from scratch and get started in your IoT journey.",
      "objectives": [
        "Understand the core concepts of Azure IoT Central, beyond the ones you normally use",
        "Build cutting edge Azure IoT Central Apps within minutes",
        "Interfacing Real IoT Devices with Azure IoT Central",
        "Understand the Azure IoT Central architectural pattern",
        "Use powerful features of Azure IoT Central",
        "Be up-to-date on the latest updates to this ever-changing platform"
      ],
      "course_content": {
        "Introduction to course": [
          "Introduction to course",
          "What is Azure IoT Central ?",
          "Azure IoT Central Basics",
          "Comparing with Azure IoT Solution Accerlator",
          "Introduction to course"
        ],
        "Understanding IoT Central Features": [
          "The Contoso Application Overview",
          "Dashboard",
          "Device Explorer",
          "Understanding IoT Central Features 1",
          "Device Sets",
          "Analytics",
          "Jobs",
          "Understanding IoT Central Features 2",
          "Device Templates",
          "Data Export",
          "Administration",
          "Features Quiz"
        ],
        "Architecture Overview": [
          "Understanding the Architecture",
          "Key components of Azure IoT Central",
          "Architecture Overview",
          "Architecture Overview Quiz"
        ],
        "IoT Central Labs": [
          "Create an application",
          "Administer your application",
          "IoT Central Labs 1",
          "Set up the device template",
          "Manage your devices",
          "Version device template",
          "IoT Central Labs 2",
          "Create telemetry rule",
          "Create an event rule",
          "IoT Central Labs 3",
          "Use device sets",
          "Create custom analytics",
          "Create Jobs",
          "Prepare and upload images",
          "IoT Central Labs 4",
          "Quiz on IoT Central Labs"
        ],
        "Connecting Physical Devices Labs": [
          "Physical Hardware Setup",
          "Installing Raspbian onto SD Card",
          "Headless Raspberry Pi",
          "Connecting Physical Devices Labs 1",
          "Setting up the physical device in Azure IoT Central",
          "Running the SDK",
          "Connecting Physical Devices Labs 2",
          "Summary & Wrap Up",
          "Azure IoT Central Practise Test"
        ]
      },
      "requirements": [
        "Basic familiarity of Internet of Things (IoT)",
        "Excitement to learn and build IoT solutions in this ever growing field"
      ],
      "description": "You’ve just stumbled upon the only course you'll ever need for getting started with Azure IoT Central.\n\n\nDo you want to get started building cutting edge IoT apps but don't have cloud or IoT expertise?\nWhether you want to :\n- learn to create your own IoT apps quickly.\n- build the Azure IoT Central skills.\n- or just explore the fun of IoT and cloud.\n..this is the course you need to do all of this, and more.\nThis course is designed to give you the skills you need to design full featured Azure IoT Central application. By the end of the course, you will understand Azure IoT Central extremely well and be able to connect IoT devices to cloud with ease and simplicity.\n\n\nWhy would you choose to learn Azure IoT Central?\nAs the Internet of Things (IoT) market continues to grow, so does the IoT job market demand for highly skilled engineers and other technical professionals that can develop and support the billions of devices.\n\n\nAzure IoT Central address the every growing IoT market and is a fully managed global IoT SaaS (software-as-a-service) solution which makes it easy to connect, monitor and manage your IoT assets at scale.\n\n\nWill this course give me core Azure IoT Central skills?\nYes it will. Getting skills on Azure IoT Central would help you to move onto other more advanced technologies like underlying Azure IoT platform.\n\n\nWhy should you take this course?\nAs of now, this is the only course available online which helps you learn about Azure IoT Central from beginning.\nThis course does not require any coding and takes you from absolute beginner core concepts and feature walk through, like showing you the overall UI. Along with this, the course covers everything you need to learn for setting your physical hardware along with demonstration of tools required to get the IoT device running up.\n\n\nHere’s just some of what you’ll learn :\nIntroduction to Azure IoT Central, covering the core features of Azure IoT Central and  comparison with other Azure IoT Solution.\nUnderstand the Azure IoT Central features by complete walk-through of the User Interface and functionalities.\nArchitecture of Azure IoT Central and the various components used.\nCreating Powerful IoT Apps from scratch using the features such as Rule Engine, Analytics, Device Template Versioning.\nSetting up the physical hardware in headless mode and interfacing to Azure IoT Central for high volume telemetry ingestion.\nDon't worry if none of that made sense. I go into great detail explaining each and every core concept, term, and buzzwords you need to create your own IoT App. This truly is Azure IoT Central course for complete beginners.\n\n\nHow will I be able to apply my knowledge learnt in this course?\nThis course is full of opportunities to apply your knowledge:\nThere are multiple hands-on lectures.\nThere are quizzes at the end of every section.\nThere's a practice exam at the end of the course.\nThere are assignments in every section.\n\n\nIs this updated course ?\nInternet of Things is advancing at a rapid rate. New, more powerful capabilities are getting added to IoT devices and Cloud solutions. This means that Azure IoT Central updates are released frequently, therefore, it’s crucial to stay on top with the latest knowledge.\n\nDue to this, this course is always added with new update content. Buy this course, and you would be having lifetime access to it and any future updates.\nHow will I get my questions answered ?\nYou would get full support, as your questions would be answered 7 days a week. This would allow you to progress with the course smoothly.\nReady to get started with Azure IoT Central ?\nTake a free preview of this course to make sure that this course is for you and then enroll now using \"Add to cart\" button to get started on your Azure IoT Central journey.",
      "target_audience": [
        "Beginning developers curios to learn Azure IoT Central",
        "Technical people who want to quickly build Enterprise Grade IoT Apps"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/vlsi-design-engineering-beginner-to-intermediate-journey/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Be a Expert in computer Hardware and Software Maintenance",
      "url": "https://www.udemy.com/course/master-your-computer-hardware/",
      "bio": "Everything you know to become a Computer hardware and software repair Technician.",
      "objectives": [
        "Desktop Computer basics",
        "Computer Ports",
        "Desktop computer repair guide",
        "Desktop smps",
        "Windows 7 and 10 installation"
      ],
      "course_content": {
        "Desktop Computer": [
          "Chipset Motherboard",
          "PCH Motherboard",
          "Practical - Inside a Desktop Cabinet",
          "Practical - Components of motherboard",
          "Practical - Removing and fixing CPU cooler Fan",
          "System Memory",
          "Practical - ATX SMPS and ATX Power Connectors",
          "Practical - Power Switch Headers",
          "Practical - Switch on without power switch",
          "Practical- power on connectors -2",
          "Central Processing Unit [CPU]",
          "CPU Packages",
          "Practical - Installing CPU",
          "Practical - Installing CPU and Fan",
          "BIOS Chip [Basic input output System]",
          "Practical - Installing M.2 NVme SSD",
          "CMOS and RTC section",
          "Booting Process",
          "USB Port",
          "PCI Port",
          "Hard Disk and SSD",
          "M.2 SSD",
          "SATA Port",
          "Practical - BIOS Programming",
          "Practical - Installing Graphics card in PCIe Slot",
          "Practical - Installing Secondary Harddisk"
        ],
        "Desktop Computer Repair Guide": [
          "Repair Guide"
        ],
        "Making bootable USB drive and general settings": [
          "Making bootable USB drive with Rufus Software",
          "Making Multibootable USB Drive",
          "BIOS Settings",
          "Legacy and UEFI BIOS",
          "Boot Menu"
        ],
        "Windows OS installation and configuration": [
          "Understanding Softwares",
          "Installing windows 7",
          "windows 7 configuration",
          "windows 10 installation",
          "windows 10 configuration",
          "Requirement for installing Windows 11",
          "Bonus - How to speed up the computers"
        ]
      },
      "requirements": [
        "no previous experaince required."
      ],
      "description": "There are lots of computer system around us. All the jobs are depended on computer. Whether laptop or desktop computer, basic knowledge is essentials. If we have a required knowledge of any computer systems, we can find the fault very easily and can rectify it very quickly. We don’t need to pay for the technician to fix the issue. Without spending a cash penny you can repair the system very easily. This course will provide you with the knowledge of Desktop computer hardware . Computer motherboard block diagrams are detailed. System memory, primary memory and secondary memory covered, Switch Mode Power Supply {SMPS}, Motherboard details are available. You will learn how computer motherboard works and the peripherals are connected .SMPS power supply and its pin outs are briefed. All connectors and headers are covered. Front panel connectors and power switch details can be learned. Repair your own computer with confident and those need extra knowledge about the desktop computer systems can enrol in this course.\nBy having knowledge about computer hardware one can Start your own repair shop or can repair your own computers. Students having additional knowledge of computer hardware , can perform well in thier academical level and can earn lots of respect from the school mates and the teachers.",
      "target_audience": [
        "those who need knowledge about computer hardware and its Functions"
      ]
    },
    {
      "title": "SystemVerilog Assertions (SVA) with Xilinx Vivado 2020.1",
      "url": "https://www.udemy.com/course/systemverilog-assertions-sva-with-xilinx-vivado-20201/",
      "bio": "Step by Step Guide from Scratch",
      "objectives": [
        "Usage of SystemVerilog Assertions in Xilinx Vivado Design Suite 2020",
        "Insights of System Verilog Assertions according to LRM 1800 2017",
        "Insights of Boolean, Sequence and Property Operators",
        "Power of the Concurrent and Immediate assertions",
        "Insights of System Tasks and Sampled Edge functions",
        "Usage of the Local Variables in Concurrent assertions",
        "Application of Immediate assertions to digital systems",
        "Application of Concurrent assertions to digital systems",
        "Application of the assertion in FSM",
        "Usage of the assertion in SystemVerilog TB"
      ],
      "course_content": {
        "Getting Started with IDE": [
          "Course Framework",
          "Agenda",
          "How to use IDE",
          "Code",
          "Power of SVA P1",
          "Code",
          "Power of SVA P2",
          "Code",
          "Power of SVA P3",
          "Code",
          "Power of SVA p4",
          "Code",
          "Behavior of the Assertion statements in Synthesis",
          "Code",
          "Trying to add ports inside assertion statements",
          "Code",
          "Understanding Assignments and Quiz",
          "Quiz 1"
        ],
        "Introduction": [
          "Agenda",
          "Getting Started with Assertion",
          "Difficulties with regions and Simulation glictches",
          "Removing Simulation Glitches and addition of the Deferred Immediate Assertion",
          "Rise of Final Deferred Immediate Assertion",
          "Overview",
          "Abstracting events and Regions",
          "How we identify type of assertion",
          "Fundamentals of SImple Immediate Assertion",
          "Demonstration",
          "Code",
          "Deferred Immediate Assertion : Not Supported",
          "UG900 Sanpshot",
          "Fundamentals of Concurrent Assertion",
          "Demonstration",
          "Code",
          "Disabling Checker",
          "Code",
          "Collectively disabling Multiple assertions: $asserton and $assertoff",
          "Code",
          "Typical application : $asserton and $assertoff",
          "Code",
          "Meaning of Assert / Deassert for different type of signal",
          "A21",
          "A22",
          "P2"
        ],
        "Getting Started with Concurrent Assertion": [
          "Agenda",
          "Layers in Concurrent Assertions",
          "Tricks to handle Operator",
          "Demonstration",
          "Different Clock edges",
          "Code",
          "Default Clocking",
          "Code",
          "A31",
          "A32",
          "P3"
        ],
        "Operators": [
          "Agenda",
          "Fundamentals of Implication Operator",
          "Demonstration : Overlapping Implication Operator",
          "Code",
          "Demonstration : Non-Overlapping Implication Operator",
          "Code",
          "Vacuous Success",
          "Thread with Level and Edge of the signal",
          "Thread with Level and Edge of the signal P2",
          "A41",
          "A42",
          "A43",
          "A44",
          "A45",
          "Quiz"
        ],
        "System Tasks Part 1": [
          "Agenda",
          "Single Vs Multiple Threads",
          "Code",
          "Use of $sampled",
          "Code",
          "Using $rose in SIngle bit and Multi-bit signal",
          "Format of $rose",
          "Code",
          "Using $fell in SIngle bit and Multi-bit signal",
          "Format of $fell",
          "Code",
          "Getting Started with $past",
          "Format of $past",
          "Demonstration",
          "Code",
          "Summary",
          "$past with single clock tick",
          "Used Cases",
          "Demonstration of few used cases",
          "Code",
          "A51",
          "A52",
          "A53",
          "A54",
          "A55",
          "Quiz"
        ],
        "Concurrent Assertion with the TIming Operators": [
          "Agenda",
          "Getting Started with the Delay Operator ##",
          "Demonstration : Fixed delay",
          "Code",
          "Variable Delay",
          "Code",
          "Unbounded Delay",
          "Code",
          "Getting Started with Repetition Operator",
          "Demonstration : Consectuive Repetition Operator",
          "Code",
          "Consectuive Repetition Operator with Range",
          "Code",
          "Non-Consecutive Repetition Operator",
          "Code",
          "Restricting Repetition Count",
          "Code",
          "Non-Consecutive Repetition Operator with range",
          "Code",
          "Takeaway",
          "GOTO vs Non-Consecutive Repetition",
          "Demonstration",
          "Code",
          "GOTO vs Non-Consecutive Repetition Insights P1",
          "GOTO vs Non-Consecutive Repetition Insights P2",
          "Code",
          "Used Cases",
          "A61",
          "A62",
          "A63",
          "A64",
          "A65",
          "A66",
          "Quiz"
        ],
        "Working with Multiple Sequences": [
          "Agenda",
          "Fundamentals of Boolean Operators",
          "AND Operator",
          "Code",
          "NOT operator",
          "Code",
          "Used Case I",
          "Code",
          "Handling scenario which require strong qualifier Method 1",
          "Code",
          "Handling scenario which require strong qualifier Method 2",
          "Code",
          "Used Case II",
          "Summary on Success and Failure with operator types",
          "Fundamentals of throughout, within, intersect P1",
          "Fundamentals of throughout, within, intersect P2",
          "Success and Failure of throughout",
          "Usage of throughout operator",
          "Code",
          "Fundamentals of within",
          "Success and failures of within operator",
          "usage of Within operator",
          "Code",
          "Fundamentals of Intersect Operator",
          "Usage of the Intersect Operator",
          "Code",
          "Used Case",
          "Demonstration I",
          "Code",
          "Demonstration II",
          "Code",
          "Demonstration III",
          "Code",
          "A71",
          "A72",
          "A73",
          "A74",
          "A75"
        ],
        "System Tasks Part 2": [
          "Agenda",
          "$onehot and $onehot0",
          "Demo",
          "Code",
          "Detecting One cold encoding",
          "Demonstration",
          "Code",
          "Interesting use of $onehot0",
          "Code",
          "$isunknown",
          "Code",
          "$countones",
          "Code",
          "Alternatives for $countbits()",
          "$changed and $stable",
          "Code",
          "Evaluation with Single Clock tick",
          "Used Cases",
          "Code",
          "Summary"
        ],
        "Alternatives to Unsupported Useful LTL Properties": [
          "Understanding s_eventually",
          "Implementation in VIvado P1",
          "Code",
          "Implementation in Vivado P2",
          "Code",
          "Understanding Until",
          "Implementation of the s_until",
          "Code",
          "Implementation of the s_unitl_with",
          "Code"
        ],
        "Local Variables": [
          "Getting Started",
          "Usage of LV p1",
          "Code",
          "LV and Unbounded Sequence",
          "Code",
          "LV with Synchronus adder",
          "Code",
          "Handling Variable delay",
          "Code"
        ]
      },
      "requirements": [
        "Fundamental understanding of Verilog"
      ],
      "description": "Welcome to Nowadays, Incorporating the Assertions in the Verification of the design is common to verify RTL behavior against the design specification. Independent of the Hardware Verification Language( HVL ) viz. Verilog, SystemVerilog, UVM used for performing verification of the RTL, the addition of the assertions inside the Verification code helps to quickly trace bugs. The primary advantage of using SV assertion over Verilog-based behavior check is a simplistic implementation of the complex sequence that can consume a good amount of time and effort in Verilog-based codes. SystemVerilog assertion has a limited set of operators so learning them is not difficult but choosing a specific operator to meet design specifications comes with years of experience. In this course,  We will go through series of examples to build a foundation on choosing a correct assertion strategy to verify the RTL Behavior. The assertion comes in three flavors viz. Immediate Assertion, Deferred Immediate assertion, Final deferred immediate assertion, and Concurrent Assertion. An assertion is a code responsible for verifying the behavior of the design. Full Verification of the design essentially includes verification in  Temporal as well as non-temporal domains. SV Immediate and Deferred assertions allow us to verify the functionality of the design in the Non-Temporal region and Concurrent assertion allows us to verify the design in the Temporal region.\nWelcome to the Fascinating World of SV assertions. The course will discuss the Fundamentals of SV assertion constructs that Vivado natively supports and alternative ways of implementing constructs that Vivado doesn't support yet.",
      "target_audience": [
        "Anyone Interested in pursuing career in VLSI or RTL Verification domain"
      ]
    },
    {
      "title": "Programming Arduino with LabVIEW (Practical projects)",
      "url": "https://www.udemy.com/course/arduino-with-labview/",
      "bio": "Controlling any devices through Arduino board and an excellent graphical user interface on your PC or laptop",
      "objectives": [
        "The basics of Arduino programming",
        "Simple introduction to the Arduino c programming",
        "Several projects using Arduino C",
        "LabVIEW installation steps",
        "LabVIEW programming basics (loops ... math operations ... logic operation ... data converters ... extra)",
        "LabVIEW GUI basics (Leds - Switches and buttons - All Controls and indicators like sensor indicators)",
        "Wiring all projects step by step with HD videos"
      ],
      "course_content": {
        "Installing the required software": [
          "Introduction to the course",
          "Downloading the required softwares",
          "Installing the required software",
          "Preparing the Arduino board to be programmed by the labview"
        ],
        "Arduino programming introduction": [
          "Introduction to arduino",
          "The Hardware required for the first project",
          "Explaining the Arduino IDE",
          "The main structure of Arduino C sketch",
          "Important instructions for programming the Arduino Boards",
          "The first Project Blinking Led",
          "The Hardware of the first project",
          "The simulation of the first project using Proteus",
          "Why we need Variable declaration ?",
          "Traffic Project",
          "Controlling a led by a switch",
          "Controlling the brightness of a led by PWM",
          "Fading a led using potentiometer and the PWM",
          "Controlling the speed of dc motor using potentiometer"
        ],
        "Labview basics ( important )": [
          "Introduction the labview program",
          "Important reference for the labview",
          "The first labview project",
          "Important",
          "Design voltage divider circuit and calculator"
        ],
        "Arduino Control using The labview": [
          "Uploading the firmware of the two libraries",
          "The first Project: control a led by a switch on the labview ( Important )",
          "Control many leds By switches in labview",
          "Labview for blinking a led using the arduino",
          "The Blinking led Using While loop",
          "Traffic Control project ( Labview and Arduino )",
          "Traffic Control Project with Some more features",
          "Reading the digital pins ( project )"
        ],
        "Labview And Arduino with Analog Read and Write": [
          "Fading a led and controlling the dc motor speed by PWM",
          "LED and dc motor control by the for loop",
          "Reading the analog values and control the dc motor and a led"
        ],
        "Using linx library to control the Arduino board by labview": [
          "Controlling a led by a switch using linx library"
        ]
      },
      "requirements": [
        "No information required just bring the tools required for the course"
      ],
      "description": "Arduino is an open-source computer hardware used to develop interactive objects, taking inputs from a variety of switches or sensors, and controlling a variety of lights, motors, and other physical outputs.\nArduino projects can be stand-alone, or they can communicate with software running on your computer\nLabVIEW: is a highly productive development environment for creating Graphical interfaces for applications that interact with real-world data or signals in fields such as science and engineering.\nLabVIEW itself is a software development environment that contains numerous components, several of which are required for any type of test, measurement, or control application.\nHardware Support\nSupport for thousands of hardware devices, including:\nScientific instruments\nData acquisition devices\nSensors\nCameras\nMotors and actuators\n\n\nUsing LabVIEW , we can design a GUI interface that display all indicators and controls that we need in our project like LED's, Switches,  Temperature indicators and any others",
      "target_audience": [
        "All students"
      ]
    },
    {
      "title": "Arduino Advanced: Build GUI/HMI on LCD",
      "url": "https://www.udemy.com/course/lcd-master/",
      "bio": "Master advance techniques for building LCD applications on arduino by creating a user interface for your big projects",
      "objectives": [
        "be able to control the large projects with new advance ways",
        "be able to monitor the projects on LCD more professional",
        "be able to build amazing GUIs on simple LCD",
        "learning basics of using LCD on arduino",
        "learning new methods and ideas in programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started with LCD": [
          "Connecting LCD to Arduino",
          "LCD Library",
          "Simple LCD coding hack"
        ],
        "Building GUI on LCD": [
          "Introduction to GUIs",
          "GUI building process",
          "GUI building code",
          "GUI on LCD code",
          "GUI example code",
          "GUI application example",
          "GUI with monitor",
          "Better code arrangment"
        ]
      },
      "requirements": [
        "You should have some basic experience in arduino programming",
        "Its better to have basic knowledge about using the LCD with arduino",
        "You should have some programming methods experience, this course will push them further!",
        "Hardware: Arduino Uno + LCD",
        "Hardware: some basic circuits elements (resistors,LEDs, breadboard, wires, potentiometer)"
      ],
      "description": "Maybe You Are an Arduino Programmer who's working a kind of big project that have a lot of details, options, user interactions, and report a lot of information.\nMaybe You Are a Student working on Arduino-based project, or You Are a Paid Developer who's asked to deliver a project on arduino, and You need to deliver the work on some Professional Looking system.\nOr Maybe You Are seeking to learn a New and advanced techniques for programming and Hardware Implementation.\nThis course provides some advanced solutions and methods for controlling project, based on building simple UI (User Interfaces) on a normal LCD, which can be driven by simple methods of control and devices as simple as push button or as complicated as different automatic control methods.\nThe methods provided here should improve your programming strategies and thinking, and you should be able to build bigger projects easier! And there are some bonus methods and information in the lectures that can help you writing better and more advanced codes.\nTo Be Noted! The techniques provided here a pure programming techniques that can be easily applied to any other micro-controller you are working with, just take the concept, and apply it to any the other MCU language! To insure this Easily Possible, I provide deep explanations on the Theory itself, then I applied it on arduino while it's one of the best Hardware programming and prototyping platform available now a days. plus! If you faced any problems applying this technique to another language (other than pure assembly for sure haha), I Promise I'll do my best to help you applying it to that platform.\nHope you enjoy this course and find it useful, this is my first course here so please help me with your notes and ratings so I can build better courses for you in the future .",
      "target_audience": [
        "engineering students",
        "any one who interested in embedded systems and arduino",
        "Anyone who wants to want use LCD more profisional"
      ]
    },
    {
      "title": "Design a CPU 2",
      "url": "https://www.udemy.com/course/design-a-cpu-2/",
      "bio": "Computer Architecture Organisation and Design",
      "objectives": [
        "Mico-Coded Control Unit Design",
        "Addressing Modes",
        "Assembler in Python",
        "CPU Mertrics",
        "Labels and Declarations",
        "Port Mapped Input Output",
        "Memory Mapped Input Output",
        "The Stack",
        "Subroutines",
        "High Level Language Constructs in Assembly Language",
        "16 Bit Machine with 90 Instructions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "The CPU",
          "Assembler / Debugger",
          "Load and Run"
        ],
        "Add Subtract Multiply Divide": [
          "Count to Three",
          "Add Subtract",
          "Multiply Divide",
          "CPU and Algorithm Metrics"
        ],
        "Assembler and Compiler": [
          "Assembler Labels and Declarations",
          "Compile and Assemble"
        ],
        "Update Design": [
          "Roadmap for Next 10 Videos",
          "New Reset Method"
        ],
        "Port Mapped I/O": [
          "Input Output Instruction",
          "Input Device",
          "Output Device",
          "New Completed Input Output"
        ],
        "Port to Logisim Evolution": [
          "Port to Logisim Evolution"
        ],
        "16 Bit Machine": [
          "16 Bit Machine"
        ],
        "Memory Mapped I/O": [
          "Memory Mapped IO Theory",
          "Memory Mapped IO Circuits"
        ],
        "Micro-Coded Control Unit": [
          "Hardwired v Micro-Coded Control Unit",
          "Transition to Micro-Coded Control Unit",
          "Micro-Coded Control Unit Explained",
          "Mixed Micro-Coded and Hard Wired Control Unit",
          "Mapping Instructions to ROM",
          "Compression ROM"
        ],
        "The Stack": [
          "New Design Overview",
          "Stack 1 Theory",
          "Stack 2 Implemetation",
          "Stack 3 Instructions"
        ]
      },
      "requirements": [
        "Completed first course Design a CPU"
      ],
      "description": "In this course we take what we learned from the first course and expand on the simple 8 bit design and create a 16 bit machine with a maximum of 64 instructions with each instruction having access to 4 different addressing modes. We cover port mapped i/o and memory mapped i/o. We start using a new faster more stable version of Logisim.\nThe hard wired control unit is replaced with a mixed hardwired and microcoded control unit. We increase the number of general purpose registers from 4 to 6 and add in a temporary register, index register , stack pointer register and floating point unit register.\nWe design a new assembler in python to help us write the assembly language code with our new larger instruction set.\nFinally we add on a keyboard a character display and a graphics display.\nThe 64 Kbyte address space is split into a ROM that contains the start of an operating system and commonly used subroutines and a RAM that contains the program code and data.\nIf you want to know how to build a fully functioning 16 bit machine and design some cool assembly language programs then this is the course you need to take.\nDon't just read about theory and imaginary machines , build an actual machine that works. It's the best way of learning Computer Architecture Design and Organisation.",
      "target_audience": [
        "This course is aimed at people who want to learn Computer Architecture Organisation and Design by building their very own Computer as opposed to learning from imaginary machines."
      ]
    },
    {
      "title": "Learn Arduino in this 30 Days Challenge: From Zero to Hero",
      "url": "https://www.udemy.com/course/learn-arduino-in-this-30-days-challenge/",
      "bio": "Master Arduino with a Step-by-Step Practical Approach. Begin from scratch and end up creating real-world projects.",
      "objectives": [
        "Start to programming Arduino",
        "Discover things that will help you to excel in Arduino programming",
        "Simulate Arduino Boards UNO, Mega, nano and others in Windows Environment",
        "Write codes and test them without having an Arduino Board",
        "Choose the right board that fulfills your needs",
        "What is the main difference between each of the boards and why one is better than the other",
        "Make your own Arduino Board",
        "Bootload Your Arduino",
        "Know what is the actual brain of an Arduino",
        "Link Arduino with Raspberry Pi",
        "Protect Your Raspberry Pi using Arduino as Interface between Raspberry and heavy devices",
        "Make your own Web Controlled System using Arduino",
        "Learn Working Principle of Ethernet Shield and web control",
        "Interface Ethernet Shield with Arduino",
        "Control Arduino from Your own Mobile Phone",
        "Make a Home Automation System using Bluetooth",
        "Build your own Radar Using UltraSonic",
        "Build your own Weather Station",
        "Know Temperature and Humidity Sensor",
        "Make your own Automatic Irrigation System with Arduino",
        "Learn Working Principle of Irrigation systems and Soil Moisture Sensors",
        "Interface Soil Moisture Sensors with Arduino",
        "Interface Real Time Clock Module with Arduino",
        "Learn Working Principle of Wireless Power Transmission"
      ],
      "course_content": {
        "Arduino in this 30 Days Challenge": [
          "Introduction",
          "Embarking on the 30 Days Arduino Challenge",
          "Quiz on lecture 1"
        ],
        "Before you start!": [
          "Very Important Notes",
          "Note"
        ],
        "Day 0: C Programming!": [
          "Introduction",
          "Who we are?",
          "Download and Install C Editor and Compiler",
          "Write and Compile C Codes in your browser",
          "Download and Install Visual Studio Code To run C programs",
          "Write Your First C Code and Compile it",
          "First Code in C",
          "First code in C Quiz",
          "First Code in C Quiz",
          "Happy Hollidays",
          "Exercise with codes",
          "Block of F",
          "Your Basic Information",
          "Comments in C",
          "Comments in C Quiz",
          "Comment in C Quiz",
          "Comment in C special Character",
          "Single Line Comments in C",
          "Strings and Escape Character in C",
          "Strings and Escape Character in C",
          "Strings Output",
          "Strings Character in C",
          "Length of string in C",
          "String to an unsigned Long term Integer",
          "Escape Sequence",
          "Variables",
          "variables code",
          "Variables in C Quiz",
          "Variable Output",
          "Variables in C declaration and Expression",
          "Variables in C Absolute Value of Integers",
          "Variables int Total",
          "Printing Variable in C",
          "Printing in C your name",
          "Print Variable Code",
          "Printing in C Print Your Information",
          "Printing Variable Address",
          "Printing Variables In C Good Day Everyone",
          "Rules in Naming Variables",
          "Reading input from user in C",
          "Reading Input Code",
          "Input Statement",
          "Input Statement: Hours and Minutes Exercise",
          "Sum product and Sum Squares",
          "Reading Input Quiz",
          "Arithmetic Operators in C",
          "Arithmetic Operators in C code",
          "Arithmetic C operator",
          "Arithmetic Aditional",
          "Uni Arithmetic operators in C",
          "Uni Operators in C",
          "operators in C Quiz",
          "Bitwise Operators in C",
          "Bitwise Operator Code",
          "Bitwise Operator in C Quiz",
          "Bitwise Operator Quiz 2",
          "Bitwise Shift Operators in C",
          "Bitwise Shift Operator Code",
          "Assignment Operators in C",
          "Assignmnet Operators",
          "Assignment Operators Code",
          "Assignment Operators Homework",
          "Logical and Relational Operator Quiz",
          "Conditional Statement if in C",
          "Conditional Statement in C Homework",
          "Conditional Statement",
          "Conditional Statement else if and else in C",
          "Conditional Else if",
          "find maximum between three numbers using else if",
          "Conditional Statement Equal or Not",
          "Conditional Statement casting Vote",
          "Conditional Statement Largest of three numbers",
          "General Rules regarding if statement",
          "If Rules code",
          "Switch Statement",
          "Switch Statement General Rules in C",
          "Switch Statement Quiz",
          "Switch Assignment",
          "Switch Statement Assignmnet 2",
          "For Loop in C",
          "For Loop Quiz",
          "For Loop Assignmnet",
          "While Loop in C",
          "Loops While",
          "Loops While Assignment",
          "Do while loop in C",
          "Break and continue in C",
          "Break and Continue Code",
          "Break and continue Quiz",
          "Functions in C",
          "Function Code",
          "Function in C Quiz",
          "Function in C Assignmnet",
          "Void keyword in c",
          "Void Keyword in C Code",
          "Void Keyword Quiz",
          "Local variable and global variable",
          "Local Variables and Global Variables CODE",
          "Divide C Project into multiple Files",
          "Divide C project into multiple Files in C Code",
          "How to create a library in C",
          "Array in C",
          "Arrays Code",
          "Arrays in C Quiz",
          "Arrays in C example",
          "Array Example in c Code"
        ],
        "Day 1 and 2 : Simulate Arduino Boards and Test Your Code": [
          "Downloading and Installing Proteus Software",
          "Quiz on Lecture 52",
          "Installing Arduino Library For Proteus",
          "Adding Arduino Library to Proteus",
          "Downloading and Installing Arduino Coding Software"
        ],
        "Day 1 and 2 Start Testing": [
          "Your First Code in Arduino Coding Software",
          "Quiz on Lecture 56",
          "Editing the code and Getting the Hex File",
          "Load the hex file and Run the Simulation"
        ],
        "Day 1 and 2 Things you need to know": [
          "What is Arduino?",
          "The Hole in Board",
          "How to do it",
          "The Breadboard",
          "How does Arduino Thinks?",
          "Putting together your first circuit",
          "cut and paste coding",
          "Circuit Diagram"
        ],
        "Day 1 and 2 Practical Work": [
          "Input Buttons",
          "Analog Input: potentiometer",
          "Analog Input : IR Sensor",
          "Free Arduino Resources Websites for Codes and Schematics"
        ],
        "Day 3 and 4 Arduino vs PIC microcontrollers vs Raspberry Pi": [
          "What is Arduino Raspberry Pi and PIC Microcontroller",
          "Quick summary of the main differences",
          "Hardware: Power and Connectivity",
          "Hardware: IO Pins Storage and USB",
          "Software Comparison",
          "Expanding Onward Capabilities",
          "How to decide Which one"
        ],
        "Day 5 and 6 Make Your Own Arduino Board at Home": [
          "Basic Parts Requirements",
          "Wire up a power supply",
          "ATMEGA Introduction",
          "ATMEGA connection",
          "Arduino Ready",
          "Boot loading your chips optional",
          "Finish up and burn the bootloader"
        ],
        "Day 7 and 8 Connect and Interface Raspberry Pi with Arduino": [
          "Raspberry Pi Connections",
          "Raspberry Codes",
          "Raspberry Pi Configuration and Code",
          "Raspberry Pi Circuit Diagram",
          "Arduino Code",
          "Arduino Configuration",
          "Editing Your Code with the Right USB Port Number",
          "Completing Python Setup",
          "Final Step The End Of This Section",
          "Last but not least"
        ]
      },
      "requirements": [
        "You must be familiar with Internet browsing",
        "You must have the Will to apply not just watch"
      ],
      "description": "Arduino is revolutionizing the world of electronics, robotics, and cybersecurity. This single-board micro-controller allows anyone to bring their ideas from concept to prototype without prior knowledge in electronics or coding. This course offers a structured challenge: Master Arduino in just 30 days.\nWhy choose this course?\nStructured Learning: Step-by-step practical approach.\nHands-on Experience: Engage in real-world projects.\nFrom Basics to Advanced: Covering fundamental principles to advanced techniques.\nQuality Content: Avoid the usual distractions and unnecessary information found in many online courses.\nCourse Highlights:\nSimulate Arduino Boards: Begin without any hardware.\nArduino vs Other Tools: Learn how Arduino stands out.\nDIY Arduino Board: Create your very own Arduino at home.\nIntegrate with Raspberry Pi: Merge the capabilities of Raspberry Pi and Arduino.\nArduino Web and Bluetooth Control: Dive deep into remote controlling techniques.\nSpecialized Projects: Radar, motion detectors, weather stations, irrigation systems, alarm clocks, wireless power, and an RGB LED lamp with Bluetooth control.\nInstructor Background: The instructor is an experienced hardware developer with a rich background in Arduino development. Having taught programming since 2010, he brings both expertise and clarity to his teaching methods.\n\n\n\n\nA course that will challenge you to finish the learning journey in 30 Days and become a professional Arduino Programmer.\n\n\nFor some, making things is second nature. However, for the more introverted among us, this motivation to make can be difficult to come by. Arduino makes it easy to get started with simple tools like an Arduino starter kit. As the computer revolutionized the world of electronics, robotics, and cyber security, it is no surprise that Arduino boards are quickly becoming an integral part of the maker world. This single-board micro-controller has made it possible for any person to take their ideas from concept to prototype without knowing anything about electronics or coding. The possibilities only seem to be limited by your imagination.\nSo, ARE YOU READY? To learn the basics of Arduino programming quickly with this Challenge! Teach you how to create Arduino sketches for real-world projects. Outlines the hardware that's needed, and shows you how to use it. Provides lessons for wiring your circuits, coding your sketches, and more. Shows you how to write your own library.\n\n\nArduino Programming Courses online contains lots of unnecessary information that will surely distract beginners and make them feel odd when they first come to the Arduino World. but this is not the case with this challenge.\n\n\nWhy you should take this course?\nYou will learn Arduino in a Step By Step Manner\nIt will challenge you to finish the learning journey in 30 Days and become a professional Arduino Programmer\nYou will be able to do practical Projects\nLearn skills like basic engineering, programming, electronics, and IoT\nIt is an online course with videos and downloadable information\nYou will develop an understanding of the fundamental principles behind Arduino\nWhat you will learn by day!\nDay 1 +2 Simulate Arduino Boards and Test Your Code +Start Testing\nDay 3+4 Arduino vs PIC microcontrollers vs Raspberry Pi\nDay 5+6 Make Your Own Arduino Board at Home\nDay 7+8 Connect and Interface Raspberry Pi with Arduino\nDay 9+10 Arduino Web Control: Step By Step Guide\nDay 11+12 Arduino Bluetooth\nDay 13+14 Arduino Radar\nDay 15+16 Arduino + Processing Code Version\nDay 17+18 Practical Assembly\nDay 19+20 Arduino Motion Detector: Step By Step Guide\nDay 21 +22 Arduino Weather Station\nDay 23 +24 Automatic Irrigation System with Arduino\nDay 25 +26 Arduino Alarm Clock Using a Real-Time Clock and LCD Screen\nDay 27 +28 Arduino Wireless Power Transmission\nDay 29 +30 Arduino Multicolor RGB LED Lamp Controlled Using Bluetooth\nIntroduction:\nThe instructor is a very high experienced hardware developer who has a strong background in Arduino development and made this course to help newcomers to the Arduino world.\nHe has also been teaching programming since 2010 and has mastered art delivery.\nThis course is designed to introduce the Arduino hardware and programming environment to get you started on building projects as soon as possible.\nThe Arduino is an open-source electronics platform based on easy-to-use hardware and software. Sensing the environment by receiving inputs from many sensors the Arduino affects its surroundings by controlling lights, motors, and a number of other accessories. It's intended for anyone making interactive hardware projects.\nA Platform for Creating any project that comes to your mind.\nNo experience is required, and all you need is an Arduino\nThis course is designed for anyone interested in Arduino with zero background knowledge to become Pro.\n\n\nStart working with different Arduino boards without buying them and start unleashing the power of code in Simulation\n\nThe Arduino is an open-source electronics platform based on easy-to-use hardware and software. Sensing the environment by receiving inputs from many sensors, Arduino affects its surroundings by controlling lights, motors, and a number of other accessories. It's intended for anyone making interactive hardware projects.\nIn this course, you will learn how to Simulate different Arduino Boards in A Professional Simulation Environment which will help you unleash your full coding potential without buying any of the Arduino boards.\nThis course will help you test your codes and schematics for Arduino without the risk of burning your board because of bad connections or wrong codes.\nContents and Overview This course is designed for anyone interested in learning electronic design. No experience is required, and all you need is a computer.\nBoards that can be Simulated: Arduino Uno, Mega, Nano, zero, and others\nYou will no longer wonder what board should you start with, or what board should you learn or use, this is your way in\n\nWhen it comes to choosing a single-board computer or Controller, PIC Microcontroller, Arduino, and Raspberry Pi are the big names that you’ll be considering. But which one should you choose? What is the Arduino best used for? What are the drawbacks of using a Raspberry Pi? Why use PIC Microcontroller? And how do you decide between the three options? It can be a tough decision, so we’ll break it down here for you.\nFor the purposes of this course, I’ll be discussing PIC Microcontroller PIC164550, Arduino Uno R3, and the Raspberry Pi 2 Model B. There are many versions of THESE boards, and there are plenty of alternatives to the PIC Microcontroller, The Pi, and the Arduino that provide different specs and capabilities, but these Three are the mainstays of each line at the moment.\nWhile both the Arduino and the Raspberry Pi are very versatile little machines, they both have specific things that they’re good at.\nThis guild will help you know Arduino internal components and how to make your own board at home step by step\n\nThis Challenge shows you how to build an Arduino compatible breadboard with an Atmel AVR microcontroller, it will take you in a step by step manner to know what each component inside the Arduino board is, what it does and how to wire it up\nYou will know what is the actual brain in the Arduino board and what you can do with it and how to interface it with your own PC and send codes freely, you will no longer burn a code to a board that you know nothing about its hardware.\nAfter this course, you will be able to make your own board on a breadboard or PCB the choice is yours to make since all connections are explained in detail.\nIn this course, you will learn how to connect Raspberry Pi and Arduino the software and hardware part and why it's useful\n\nThis Challenge shows you how to connect Arduino Board with Raspberry Pi, it will take you in a step-by-step manner to know why this is helpful and how it can make your life away much easier and save you lots of money.\nYou will know what is the actual hardware and software configurations needs to be done to make this interfacing work smoothly, you will no longer see your raspberry Pi damaged or burned by excessive voltage or power source failure, your raspberry Pi will work like a mini-computer away from the hardware connection that could damage it.\nAfter this course, you will be able to make your own interfacing and the choice is yours to use in any application that comes in mind since all connections and configurations are explained in detail.\nMake your own Arduino Web Control and start Controlling any device that you imagine using  A Simple Webpage and Arduino\n\nThis course will teach you how to use a Web Page to Control anything using Arduino, This Guide will take you in a step by step manner to know what each component inside this circuit is, what it does and how to wire it up, starting with the Ethernet shield and ending with resistors.\nYou will know what is the actual working principle of the Ethernet shield and how to interface and configure it correctly so that you can access your Arduino Powered device from anywhere with an internet connection, and control any device with simple clicks on a webpage.\nAfter this course, you will be able to make your own web-controlled device and the choice is yours to use it in any application that comes in your mind and can make your life easier since all connections are explained in detail.\nWe are going to control LEDs from a web page using an Arduino Ethernet module. The Ethernet module will create a server using the router and we will set a web page for this server.\nWe will use the HTML commands to print the data and to make the buttons on the web page.\nWhen the button on the web page is pressed, we will get some data on the serial monitor. We will save this data in the string and will use this data to turn the LEDs ON or OFF.\nGoal From This Course:\n- Connect Arduino Ethernet Shield to Arduino Board with all necessary Components and make it Internet Based.\nWhat you will learn in this Course\n- How to Connect Ethernet Module to Arduino.\n- How to Detect Online Actions Using Arduino.\n- How Internet Control Actually Works.\n- How to interface different types of electronic elements with Arduino.\n- How Arduino Can make your life easier.\n- How Program, burn a code, and wire Arduino and Ethernet Module.\n- What are the right tools that you need to start making amazing projects.\n- Why using Online control with Arduino is better than traditional Control Methods.\n\n\nControl Your World and Surrounding using Your Own smartphone in this Step by Step Guide that Will Make Your Life Easier\n\nThis course will help you Control Your World using Tools that you already have which is Your Own smartphone to Make Your Life Easier, You can make any electronics device easily controlled by bringing it alive using Bluetooth Technology that you have in your phone.\nYou will get step-by-step lessons on what needs to be done to get full control over any home appliance, project, car or any device that comes to mind using Bluetooth.\nThis is a course on interfacing Bluetooth modules with Arduino. It will give you the ability to make higher-level Projects like Home automation using smartphones, Smartphone controlled robots,s and much more.\nYou will know how to use the technology embedded in your phone to make your everyday life away much easier.\nCreate your Own Radar using Arduino and get a Green Map Showing Objects on your own Screen in no time\n\nThis course will take you in a step-by-step guide on how to make your own Radar using Arduino Board.\nYou will get to know how to wire each of these elements, how it works, and why we are using it inside this Project, in no time you will find yourself making your own Radar that shows the different objects and the distance between you and each object.\nA Radar station is a device that collects data related to objects in the surrounding environment using Ultrasonic sensors and a Servo motor to cover a wider area.\nThe aim is to make a portable Radar Device\nFeatures it should have\nDistance\nAngle\nA map that shows different objects\nYou will wire sensors and motor to Arduino UNO board and start testing the code yourself, every piece of code is well explained so that you can easily know what each segment does.\nA lot of information is waiting for you inside this course, join now and start making your own.\nMake your own Arduino Motion Detector and start Catching Intruders, Control devices, and lots more Cool Application\n\nThis course will show you how to build an Arduino Motion Detector Device that will Fire an Alarm once an Intruder is detected in a range of 6 to 7 meters, it will take you in a step by step manner to know what each component inside the device circuit is, and what it does and how to wire it up\nYou will know what is the actual working principle of Motion detectors that you see in banks and indoor opening and closing mechanisms and what you can do with it and how to interface it with your own Arduino and make it execute and action using simple codes freely, you will no longer need to buy a motion detector or customize it since you can make the device yourself.\nAfter this course, you will be able to make your own Motion detector and the choice is yours to use it in any application that comes to your mind and can make your life easier since all connections are explained in detail.\nGoal From This Course:\n- Connect a Motion Detector Sensor to Arduino Board with all necessary Components and make it work.\nRequired Materials\nHardware:\nArduino or an Arduino clone board (freeduino), or you can make your own custom Arduino board.\nPIR Motion Sensor.\nA piezo buzzer or an 8-ohm speaker.\n9V Battery and connector.\nConnecting wires.\nSoftware:\nArduino IDE\nCreate your own weather station using Arduino and get Temperature, Humidity, and Time at your own home in no time\nThis course will take you in a step-by-step guide on how to make your own weather station that can get Temperature, Humidity, Time, and Date using an LCD Crystal display and Arduino Board.\nYou will get to know how to wire each of these elements, how it works, and why we are using it inside this weather station, in no time you will find yourself making your own station.\nA weather station is a device that collects data related to the weather and environment using many different sensors\nSensors like\nWind\nHumidity\nRain\nTemperature\nPressure\nAltitude\nThe aim is to make a portable weather station\nFeatures it should have\nTemperature\nHumidity\nTime and Date\nYou will wire sensors and LCD display to Arduino UNO board and start testing the code yourself, every piece of code is well explained so that you can easily know what each does.\nA lot of information is waiting for you inside this course, join now and start making your own.\n\n\nMake your own Automatic Irrigation System and stop wasting time on checking your Soil manually and Start Automating Life\n\nThis course will teach you how to Make an Automatic Irrigation System with Arduino, This Guide will take you in a step by step manner to know what each component inside the system is, what it does and how to wire it up, starting with the Soil Moisture Sensor, Nokia 5110 LCD Screen and ending with resistors.\nYou will know what is the actual working principle of the Soil Moisture Sensor and how to interface and configure it correctly so that you can get accurate data with this Arduino Powered device and automate the Irrigation system.\nAfter this course you will be able to make your own  Automatic Irrigation System device and the choice is yours to use it or sell it or start a business, or do anything that comes to your mind, this will make your life easier since all connections are explained in details.\nGoal From This Course:\nConnect Arduino Ethernet Shield to Arduino Board with all necessary Components and make it Internet Based.\nWhat you will learn in this Course\nHow to connect Nokia 5110 LCD to Arduino.\nHow to connect FC-28 Soil Moisture Sensor to Arduino.\nHow to Detect Land condition Using Arduino.\nHow Irrigation Process Actually Works.\nHow to interface different type of electronic elements with Arduino.\nHow Arduino Can make your life Is Is easier.\nHow Program, burn a code, and wire Arduino and Soil Moisture Sensor.\nWhat are the right tools that you need to start making amazing projects?\nWhy control with Arduino is better than traditional Control Methods.\n\n\nMake your own Arduino Alarm Clock and set the Alarming time and interact with Time and Date efficiently and effectively\n\nThis course will teach you how to Make your own Arduino Alarm Clock and set the Alarming time and interact with Time and Date Variables efficiently and effectively, This Guide will take you in a step by step manner to know what each component inside this circuit is, and what it does and how to wire it up, starting with the RTC DS3231 Time and Date Module and ending with resistors.\nYou will know what is the actual working principle of the RTC Module and how to interface and configure it correctly so that you can make your Arduino Powered alarm system, and view time and date in addition to initiating alarm action.\nAfter this course, you will be able to make your own Arduino Alarm Clock Using a Real-Time Clock and LCD Screen and the choice is yours to use it and apply it with any application that comes to your mind and can make your life easier since all connections are explained in details.\nWe are going to set the desired alarm time inside the code using an Arduino. The RTC Module will take care of the time and date values.\nGoal From This Course:\n- Make your own Arduino Alarm Clock and set the Alarming time and interact with Time and Date efficiently and effectively.\nWhat you will learn in this Course\n- How to Real-Time Clock and LCD Screen to Arduino.\n- How to Deal with Time and Date variables Using Arduino.\n- How to set an AlAarm Action depending on the data that you take from RTC.\n- How to interface different type of electronic elements with Arduino.\n- How Arduino Can make your life easier.\n- How Program, burn a code, and wire Arduino and RTC Module.\n- What are the right tools that you need to start making amazing projects.\n\n\nMake your own Arduino Wireless Power Transmission Project and Learn the Principles behind Wireless Power\n\nThis course will teach you how to make your own Arduino Wireless Power Transmission Project and light electronic components and devices with wireless power efficiently and effectively, This Guide will take you in a step by step manner to know what each component inside the wireless power transmission circuit is, and what it does and how to wire it up, starting with the winding coils and ending with things as simple as a resistor.\nYou will know what is the actual working principle of Wireless Power Transmission and how to use, interface and configure Arduino correctly so that you can make your own Arduino Wireless Power Transmission device.\nAfter this course, you will be able to make your own wireless power transmission device and the choice is yours to use it and apply it with any application that comes to your mind and I assure you that this can make your life easier since all connections are explained in details.\nGoal From This Course:\n- Make your own Arduino Wireless Power Transmission Project and Learn the Principles behind Wireless Power\nWhat you will learn in this Course\n- How to Connect Arduino with other electronic components in to turn it into a wireless power transmitter.\n- How to interface different type of electronic elements with Arduino.\n- How Arduino Can make your life easier.\n- How to Program, burn a code, and wire Arduino and Coils.\n- What are the right tools that you need to start making amazing projects.\n\n\nArduino Multicolor RGB LED Lamp Controlled Using Bluetooth\n\nIn this Course, You will learn How to Interface Arduino With a Mobile App via Bluetooth and Control RGB Multicolor LEDs\n\nIn this Course you will be introduced to Mobile Apps, Bluetooth Control, RGB LEDs, and how to interface all of these Items to get an amazing output that you can show to your friends and brag about it, this will really help you add something cool to your collection of projects that you already made, or even to your office.\nIn this Course, You will learn How to Interface Arduino With a Mobile App via Bluetooth and Control RGB Multicolor Leds\nArduino Programming Courses online contains lots of unnecessary information that will surely distract beginners and make them feel odd when they first come to the Arduino World.\nThe instructor is a very high experienced hardware developer who has a strong background in Arduino development, and made this course to help newcomers to the Arduino world.\nAt first glance, RGB (Red, Green, Blue) LEDs look just like regular LEDs, however, inside the usual LED package, there are actually three LEDs, one red, one green, and yes, one blue. By controlling the brightness of each of the individual LEDs you can mix pretty much any color you want.\nWe mix colors just like you would mix audio with a 'mixing board' or paint on a palette - by adjusting the brightness of each of the three LEDs.\nGet ready to see Colors that you have never seen below.\nNo experience is required, and all you need is an Arduino and a few simple electronic components\nThis course is designed for anyone interested in Arduino with zero background knowledge.",
      "target_audience": [
        "Anyone with slight interest in making great things",
        "Anyone looking to learn Arduino but don't want to buy the boards",
        "Hardware developers",
        "Anyone starting their journey in Microcontrollers",
        "Anyone Interested in Learning New Things about Arduino",
        "Anyone Interested in Knowing how Arduino board actually works",
        "Anyone Interested in Knowing what each component inside Arduino Board does",
        "Anyone Interested in Learning How to protect Raspberry Pi using Arduino",
        "Anyone Interested in Learning Arduino Web Control"
      ]
    },
    {
      "title": "Industrial Automation and Electrical Board Basics with Plcs",
      "url": "https://www.udemy.com/course/industrial-automation-and-electrical-board-basics-with-plcs/",
      "bio": "Learn Industrial Automation Basics and be able to Create Control Circuits for Your Powerful Machines with Plcs",
      "objectives": [
        "Industrial Automation Basics",
        "Industrial Automation Components",
        "Electronic Basics",
        "Asynchronous Motor Basics",
        "Plc - Programmable Logic Controller Basics",
        "Pneumatic Basics",
        "Control Circuits Basics",
        "GMT Plc Programming",
        "Logic+ Plc Programming",
        "FluidSim Software",
        "EKTS Software",
        "Schneider ATV12 VFD Basics",
        "VFD Basics",
        "Modbus Communication Basics"
      ],
      "course_content": {
        "Electronic Basics": [
          "Open - Closed Circuit and Short Circuit",
          "Voltage - Current - Resistor - Power - Ohm Law",
          "Resistor Connections and Important of Resistor",
          "Analog Signal vs Digital Signal",
          "Number Systems",
          "AC vs DC",
          "Open Loop & Closed Loop",
          "Number Systems - Introduction",
          "Number Systems - Binary Numbers",
          "Convert Decimal to Binary",
          "Number Systems - Octal",
          "Number Systems - Hex",
          "Resistance of Conductor - How to Find ?"
        ],
        "Industrial Equipment": [
          "Circuit Breaker and Button Basics",
          "Contactor Basics",
          "Motor Protection Switches Basics",
          "Power Supply Basics",
          "Limit Switches",
          "Inductive Sensor Basics",
          "Sensor Connections Basics Pnp - Npn",
          "Serial and Parallel Sensor Connections",
          "Capacitive Sensors",
          "Ultrasonic Sensors",
          "Cyclinder Sensors(Reed Contacts)",
          "Optic Sensors + Laser Sensors",
          "Relays",
          "Thermostat",
          "Signal Lamps",
          "Hardware Selection According to Asynchronous Motor",
          "Encoder vs Resolver"
        ],
        "Asynchronous Motors": [
          "Synchronous Speed and Slip",
          "Star and Delta Connection",
          "Monofaze Asynchronous Motor - Asynchronous Motor with Auxiliary Winding",
          "Download Software - EKTS",
          "Direct Driving",
          "Driving with Button and Contactor",
          "Latching & Unlatching Circuit of Motor",
          "Control Motor with Time Relay",
          "Star and Delta Connection and Running",
          "Small Motor Application"
        ],
        "Questions and Answers": [
          "Question -1",
          "Answer -1",
          "Question -2",
          "Answer -2",
          "Question -3",
          "Answer -3",
          "Question -4",
          "Answer -4",
          "Question -5",
          "Answer -5",
          "Question -6",
          "Answer -6",
          "Question -7",
          "Answer -7",
          "Question -8",
          "Answer -8",
          "Question -9",
          "Answer -9",
          "Question - 10",
          "Answer -10"
        ],
        "Electrical Board Basics to Advanced": [
          "Electrical Board Basics - 1",
          "Electrical Board Basics - 2",
          "Electrical Board Basics - 3",
          "Electrical Board Basics - 4",
          "Electrical Board Basics - 5",
          "Electrical Board Basics - 6",
          "Electrical Board Basics - 7",
          "Electrical Board Basics - 8",
          "Electrical Board Basics - 9",
          "Electrical Board Basics - 10",
          "Electrical Board Basics - 11",
          "Electrical Board Basics - 12",
          "Application Example -1",
          "Application Example -2",
          "Application Example -3",
          "Application Example -4",
          "Application Example -5",
          "Application Example -6",
          "Example From Real Machine"
        ],
        "Pneumatic": [
          "FluidSim Software Download",
          "FluidSim Software - Simülation - First Application",
          "Valve FW-BW Controlled with Button",
          "Festo Pneumatic Applications Download"
        ],
        "PLC Basics and Logic+ Software": [
          "What is Plc ?",
          "Download Logic+ Software",
          "First Simulation Application with Logic+ - Contacts and Coil",
          "Counter Example",
          "SR-RS Example"
        ],
        "GMT Plc Programming and Software": [
          "Download GMT Software",
          "Plc Logic Instructions",
          "Math Instructions",
          "Comparison Instructions",
          "Timer Instructions",
          "Counters"
        ],
        "Schneider ATV Series VFD Basics": [
          "Introduction to ATV12 VFD",
          "Technical Information about ATV12",
          "Control VFD with Button and Potentiometer and Small Application Test",
          "Disactivate OPF2 Error for Test VFD without Motor",
          "2-Wire and 3-Wire Connection of VFD",
          "Maximum and Minimum Frequency Adaptation of VFD",
          "How to Adapt Acceleration and Deceleration Time of VFD",
          "Analog Input Adaptation via Parameter",
          "Relay Output Usage of VFD",
          "Modbus(RS-485) Comm. Parameters Adaptation",
          "PLC - ATV12 Modbus Communication Example",
          "Download Files",
          "SOMove Software"
        ]
      },
      "requirements": [
        "This course does not require any prior knowledge."
      ],
      "description": "Dear Students ;\nYou are going to learn Industrial Automation Basics with this course.\nAs Derstagram Akademi , we decided to create this powerful and helpful course in udemy after 6 course.\nYou are going to learn electronic basics in the beginning.So you are going to understand what are basics of components and how to  control circuit algorithms.\nThen you are going to learn industrial automation components and theirs usages.\nAnd also you are going to learn pneumatic basics at the end of course.\nWith plc section you are going to learn plc basics also.\nPlc - Programmable Logic Controller and it's control basics are really important for all of us.\nAnd at the end of course,  you are going to be able create powerful control algorithms and circuits for plcs.\nIf you want to create an electrical boxes powerfully and efficiently, you need to know which material that you need to use and also how to cabling these materials.\nAlso , you need to know how to give a power to them.\nYou can write a plc logic but you need to know that how this plc program controlling hardwares for machines.\nYou need to create a programs for equippments that you are using.\nSo, this course created for your needs in the automation field.\nAnd this course created by us who preparing and finishing automation projects each time.\nI mean , you can learn whole professional techniques from us with this course.\nAt the end of this course , you are going to get this talents ;\n- Industrial Automation Basics\n- Industrial Automation Components\n- Electronic Basics\n- Asynchronous Motors\n- Plc Control Circuit Basics\n- Pneumatic Basics\n- Control Circuit Basics\n- GMT Plc Programming Basics\n- Logic+ Plc Programming Basics\n- EKTS Software\n- Electrical Boards\n- FluidSim Software\nAnd a little bit more ..\n\n\nYou need to keep following us and also you need to learn always from us.\nBr\nMustafa",
      "target_audience": [
        "Anyone who wants to learn industrial automation basics",
        "Anyone who wants to do a carier automation engineering or industrial automation",
        "Anyone who wants to create own electrical box and own plc programs",
        "Anyone who wants to create own control circuits and control electronic hardwares",
        "Anyone who wants to control machines",
        "Anyone who wants to do complete automation projects."
      ]
    },
    {
      "title": "Raspberry Pi compute module 3 - From Novice to Professional",
      "url": "https://www.udemy.com/course/raspberry-pi-compute-module-3-from-novice-to-professional/",
      "bio": "Get up and running with compute module 3 and learn step by step to build a real-time vehicle monitoring system",
      "objectives": [
        "Install the different version of the Raspbian operating system in the Raspberry Pi compute module 3",
        "Use the Raspberry Pi Compute Module 3 as a full-fledged computer",
        "Assign static IP address in the newer version of the Raspbian OS",
        "Exchange files remotely using Filezilla",
        "Remotely access the terminal and the graphical user interface",
        "Fetch the GPS raw data from the GPS module and parse as per your requirement",
        "Visualize the real-time movement of the vehicle by streaming the data to an online dashboard",
        "Learn how to implement IoT and harness the power of Raspberry Pi compute module 3"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Linux commands and Python programming",
        "Raspberry Pi compute module 3 Development kit"
      ],
      "description": "In this course, I will help you to explore Raspberry Pi compute module 3 in detail. You will learn how compute module 3 is superior to all the different versions of Raspberry Pi.\nThe course requires basic knowledge of Linux commands and Python programming. If you are new to Raspberry Pi, I would recommend you to enroll in my previous course “Introduction to Raspberry Pi,” which is also available on Udemy.\nIn this course, I will guide you on how to connect your keyboard and monitor with Compute Module 3 and use it as a full-fledged computer. Once you are up and running with Compute Module 3, you will also learn how to remotely control the compute module 3 and exchange files wirelessly via internet.\nThe Raspberry Pi Foundation released a long-awaited version of their Raspberry Pi Compute Module 3. The great news is that you get 4GB storage, 1GB memory and the same processor as the Raspberry Pi 3 for $30. This means that it now becomes a real solution for anybody wanting to build the industrial and IoT-based project.\n\nCompared to Raspberry Pi 3, the compute module has more GPIO pins for interfacing different set of sensors. The default IO board of compute module comes with four ports which can connect dual camera and display.\nIn the remote vehicle monitoring project, you will learn how compute module 3 is actually implemented in real time and displays the data with high precision and accuracy. You will also see how the graphics rendering is different in compute module 3 and the Raspberry Pi 3 respectively.\nThe entire project will be discussed step by step along with real-time demonstration of the output.\nI will also share the source code so that you can replicate the project on your own.\nIf you face any technical issue during the development process, please post your query in the udemy discussion forum or write directly to me at satyajeet@makerdemy.com.\nI will get back to you within one business day.",
      "target_audience": [
        "Anyone who wants to explore Raspberry Pi compute module 3 as a full-fledged Linux based computer",
        "Hobbyist or developers who wants to build real-time IoT based project",
        "Anyone who wants to build vehicle monitoring system and implement in real time",
        "Anyone who wants precise output without lag"
      ]
    },
    {
      "title": "8051 Based Line Follower Robot: Simulate on Proteus Software",
      "url": "https://www.udemy.com/course/8051-controller-based-line-follower-robot-simulate-on-proteus-software/",
      "bio": "Robotics and Embedded System Project: Master Line Follower Robot Simulation with 8051 Microcontroller on KEIL & Proteus",
      "objectives": [
        "8051 Microcontroller",
        "Woring of IR Sensors",
        "Simulation on Proteus software",
        "Programming on KEIL Software",
        "Understand the working of L293D IC",
        "Embedded C - programming for robot functioning",
        "Circuit making of line follower robot"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Block Diagram of the Project"
        ],
        "IR Sensors": [
          "Understand the working of IR Sensors",
          "Course Feedback"
        ],
        "Understand the Logic to Move the Robot": [
          "How to Move Robot in Right Direction ?",
          "How to Move Robot in Left Direction ?"
        ],
        "Understand the Working of L293D IC": [
          "Significance of L293D IC",
          "Pin Diagram of L293D IC",
          "Simulation of L293D IC on PROTEUS Software",
          "Course Feedback"
        ],
        "Circuit Diagram": [
          "Understand the Block Diagram & get Over View of Circuit Diagram",
          "Circuit Designing on Proteus Software"
        ],
        "Embedded C-program on KEIL Software": [
          "Header file and Input Output pins",
          "Function Declaration in C",
          "Main Function",
          "Expanding the Declared Functions",
          "Course Feedback"
        ],
        "Bonus Lecture": [
          "Our other courses on udemy"
        ]
      },
      "requirements": [
        "Students should have a strong command of C programming.",
        "Students should have a solid understanding of the 8051 microcontroller.",
        "Students should be proficient in operating KEIL software.",
        "Students should be skilled in using PROTEUS software.",
        "Basic understanding of electronics"
      ],
      "description": "Welcome to our advanced course on simulating a Line Follower Robot with an 8051 Controller using Proteus. In this course, we'll dive straight into the heart of the project, assuming you already have a strong command of the KEIL software, C programming, 8051 microcontroller, and Proteus simulation tools. Our goal is to guide you through the practical implementation of this fascinating project, step by step.\n\n\n@ Course Outline:\n1. Block Diagram (Module 1)\nExplore the high-level architecture of the Line Follower Robot project.\nUnderstand the key components and their interactions.\n2. Working of IR Sensors (Module 2)\nDelve into the operation principles of Infrared (IR) sensors.\nLearn how IR sensors detect and respond to line variations.\n3. Understanding the Working of the Project (Module 3)\nGain insight into the overall functionality of the Line Follower Robot.\nFollow the flow of data and control within the system.\n4. Understanding the Pin Diagram of L293D IC and Its Working (Module 4)\nExplore the L293D motor driver IC.\nComprehend its pinout and role in motor control.\n5. Understanding C Program on KEIL and Logic of the Project (Module 5)\nAnalyze the C program that controls the Line Follower Robot.\nBreak down the code logic to understand how it guides the robot.\n6. Simulation of the Entire Circuit on Proteus Software (Module 6)\nBring your knowledge together and simulate the complete project in Proteus.\nValidate the functionality of your Line Follower Robot in a virtual environment.\n\n\n@ Why Choose This Course:\nMaster robotics with expert guidance, one step at a time.\nDive into hands-on projects that supercharge your skills.\nJoin a vibrant community of passionate learners and pros.\nForge a rock-solid foundation in robotics and automation.\nAmplify your problem-solving and programming prowess.\nElevate your engineering and robotics portfolio with a valuable asset.\n\n\nBy the end of this course, you will have successfully simulated a Line Follower Robot project using Proteus, further enhancing your practical skills in robotics and embedded systems. We'll build upon your existing knowledge to give you hands-on experience in developing and testing complex projects. Let's get started on this exciting journey towards mastering robotics simulations!",
      "target_audience": [
        "Those who want to learn 8051 projects",
        "Those who want to learn Embedded projects",
        "Those who want to learn Embedded C",
        "Students and Hobbyists interested in robotics and automation.",
        "Anyone curious about the intersection of technology and creativity.",
        "Engineers and programmers looking to expand their skillset.",
        "Educators seeking to enhance their robotics curriculum.",
        "Electronic Engineers",
        "Electrical Engineers",
        "Instrumentation Engineers",
        "Biomedical Engineers"
      ]
    },
    {
      "title": "Wireless Wonders: Mastering ESP32 OTA (Over the Air) Updates",
      "url": "https://www.udemy.com/course/esp32-ota-update-on-the-air-program-esp32-over-air-wirelessly/",
      "bio": "Unlock the Future of Firmware: Streamline Your IoT Projects with Over-the-Air Techniques.",
      "objectives": [
        "Learn about the benefits of using OTA updates for ESP32 such as updating your ESP32 firmware/code wirelessly from far away.",
        "Learn how to edit your previous ESP32 projects to support OTA technique",
        "Save time and money with this easy to use ESP32 OTA Update(On-the-Air) course",
        "It can help you understand the full process of how to create the ESP32 firmware with the Arduino IDE",
        "Learn how to configure a wireless access point and many more.",
        "Learn how to get rid of the hassles of updating ESP32 firmware, improve your efficiency and productivity.",
        "Update firmware easily with ESP32 OTA Update(On-the-Air) course",
        "Over the air firmware update with ESP32 is a simple and effective way to update your IoT projects firmware."
      ],
      "course_content": {},
      "requirements": [
        "A Computer",
        "Download the provided software which is free and included",
        "ESP32 Board"
      ],
      "description": "Master ESP32 Over-The-Air (OTA) Updates: The Ultimate Guide\nDive into the Future of ESP32 Programming!\nHave you ever felt the frustration of updating your ESP32 firmware using those tedious cables? Or the dread of having to access hard-to-reach IoT devices just for a quick update?\nIntroducing the Ultimate ESP32 OTA Update Course!\nWhy should you embark on this journey with us?\nRevolutionize Your Firmware Updates: Update your ESP32 firmware wirelessly, anytime, anywhere.\nSeamless Integration: Transform your existing ESP32 projects to support the game-changing OTA technique.\nSave Precious Time & Money: No more cables, no more hassle. Enjoy a streamlined update process.\nDeep Dive into ESP32: From setting up your Arduino IDE to crafting your very own web server, we've got you covered.\nBoost Productivity: Say goodbye to manual, local updates. Automate and elevate your updating process.\nExpert Knowledge: Harness the power of OTA, a crucial skill for the modern IoT developer.\nCourse Highlights:\nWireless Freedom: Learn the ins and outs of OTA, enabling you to update your IoT projects without ever touching a wire.\nIn-depth Tutorials: Understand the intricate process of creating ESP32 firmware with the renowned Arduino IDE.\nReal-world Applications: Configure a wireless access point, build a web server, and more - essential skills for any IoT enthusiast.\nExclusive Insights: Discover the benefits of OTA, and how it can revolutionize your IoT projects.\nBonus: Enroll now and get our exclusive ESP32 Crash Course absolutely FREE! Dive deeper into the world of ESP32 and enhance your expertise.\nYour Takeaway: Master the art of OTA updates, drastically improve your efficiency, and free yourself from the constraints of wired firmware updates.\nWho is this course for?\nIoT developers looking to upgrade their firmware updating process.\nESP32 enthusiasts aiming to harness the power of wireless updates.\nAnyone keen on optimizing their microcontroller-based projects.\nElevate Your ESP32 Projects with OTA!\nDon't get left behind in the world of wired updates. Upgrade your skills, enhance your projects, and step into the future of IoT development.\nEnroll Now & Master the Magic of Wireless Firmware Updates!\nCourse Features:\nStep-by-step video lessons\nPractical demonstrations and examples\nTips for creating and deploying OTA updates\nInteractive exercises and quizzes\nOngoing support and engagement through discussion forums\nBonus resources and downloadable guides\nWho Is This Course For:\nIoT developers and enthusiasts\nEmbedded systems engineers\nMakers and hobbyists\nRequirements:\nBasic understanding of ESP32 and Arduino IDE\nA willingness to learn and apply new techniques\n\n\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is dedicated to providing high-quality education in the field of electronics and engineering. With a wealth of experience and a passion for teaching, the team ensures that complex concepts are broken down into easy-to-understand lessons, making learning accessible and enjoyable for everyone.",
      "target_audience": [
        "Anyone who wants to learn How to program and update ESP board via OTA",
        "Anyone who wants to learn about the benefits of using OTA updates for ESP32 such as updating your ESP32 firmware/code wirelessly from far away.",
        "Anyone who wants to Learn how to edit your previous ESP32 projects to support OTA technique",
        "Anyone who wants to Improve your efficiency and productivity, save time and effort by learning how to update ESP32 firmware easily.",
        "Anyone who wants to Learn how to update firmware on ESP32 with this easy to use ESP32 OTA Update(On-the-Air) course",
        "Anyone who wants to Update your IoT project firmware easily, no more wires or complicated procedures."
      ]
    },
    {
      "title": "Home Automation using a Vera and ZWave",
      "url": "https://www.udemy.com/course/home-automation-using-a-vera-and-zwave/",
      "bio": "Learn how to make your house Smart! Then teach it to do the stuff that you shouldn't have to.",
      "objectives": [
        "By the end of this course, you will know how to make your house smart",
        "You will learn which devices are best for you",
        "You will learn how to setup many types of devices",
        "You will learn how to use devices automatically",
        "You will learn how to get devices to talk to each other"
      ],
      "course_content": {
        "Introduction": [
          "1.1 - Introduction"
        ],
        "Getting Started": [
          "2.1 - Introduction",
          "2.2 - What is Z-Wave",
          "2.3 - Hardware used (and why)",
          "2.4 - Home Construction Considerations"
        ],
        "Setting up your Vera": [
          "3.1 - Introduction",
          "3.2 - Vera 3 Overview",
          "3.3 - Vera Lite Overview",
          "3.4 - First Time Setup",
          "3.5 - Setting up Localizations",
          "3.6 - Setting up Notifications",
          "3.7 - Adding Additional Users",
          "3.8 - Overview of the Simple Interface",
          "3.9 - Overview of the Advanced Interface"
        ],
        "Adding/Setup of Devices": [
          "4.1 - Introduction",
          "4.2 - Vera 3 Inclusion/Exclusion Mode",
          "4.3 - Vera Lite Inclusion/Exclusion Mode",
          "4.4 - Excluding a Device",
          "4.5 - Adding a Light Switch/Dimmer",
          "4.6 - Adding a Plugin On/Off Module",
          "4.7 - Adding a Motion/Combi Sensor",
          "4.8 - Adding a Thermostat",
          "4.9 - IR Distribution Setup",
          "4.10 - IR Distribution Adding a Device - File Overview (Part 1)",
          "4.11 - IR Distribution Adding a Device - Service File (Part 2)",
          "4.12 - IR Distribution Adding a Device - Implementation File (Part 3)",
          "4.13 - IR Distribution Adding a Device - Device File (Part 4)",
          "4.14 - IR Distribution Adding a Device - Adding to the Vera (Part 5)",
          "4.15 - Setting up the Somfy Blinds Bridge"
        ],
        "Creating Scenes": [
          "5.1 - Introduction",
          "5.2 - General Scene Overview",
          "5.3 - LUUP Introduction"
        ],
        "Making your House Smart": [
          "6.1 - Introduction",
          "6.2 - Linking Lights Together",
          "6.3 - Turn on a light when motion is detected (Direct Control)",
          "6.4 - Turn on a light when motion is detected (Trigger)",
          "6.5 - Motion Detection Notification",
          "6.6 - Advanced Scheduled Scenes",
          "6.7 - Using Virtual Switches",
          "6.8 - Scene Delays",
          "6.9 - Perform action only between a certain time",
          "6.10 - Trigger actions only when the light level is low",
          "6.11 - Trigger actions only when it gets too hot",
          "6.12 - Notify me when my device's batteries are low",
          "6.13 - Using a Geo-Fence"
        ],
        "Mobile Applications": [
          "7.1 - Introduction",
          "7.2 - iPhone Application",
          "7.3 - Android Application",
          "7.4 - iPad Application"
        ],
        "Troubleshooting": [
          "8.1 - Introduction",
          "8.2 - Re-Configure Devices",
          "8.3 - Getting your Root Password",
          "8.4 - Looking at the Luup log",
          "8.5 - Writing Variables to the Log",
          "8.6 - Z-Wave Network Repair"
        ]
      },
      "requirements": [
        "No Prerequisite knowledge required",
        "A home automation controller (Vera) is required if you intend to follow along with the step by step videos",
        "Z-wave devices of your choice"
      ],
      "description": "Advancements to Home automation have made it affordable and easy enough that everyone can do it!\nIn this course you will learn how to make your house smart. When someone thinks of a smart home they usually just think of being able to control it via their mobile device. While you will learn that, this course takes home automation to the next level. This course will show you how to actually make your house smart. Your house will learn how to use inputs such as temperature, movement, weather, scheduling, geo-fencing, and so much more to control Lights, HVAC, Blinds, TVs, almost anything.\nThis course provides step-by-step instructions from basic setup to advanced examples. It includes theoretical information and step-by-step videos for setting up and using devices. There are also step-by-step videos for using automation, triggers, and program logic to perform actions. Code examples are provided and explained anywhere code is used. No coding experience necessary.\nYou will learn how to:\nSetup a Vera Lite of Vera3\nHow to add and use devices\nHow to use Scenes\nHow to use Triggers\nHow to use LUUP code\nHow to use Mobile Applications\nHow to Troubleshoot issues.\nYou will also learn how to add and use:\nZ-Wave Devices\nIR Devices\nIP Devices\nLight/Dimmer Switches\nOn/Off Swithces\nMotion Sensors\nHeat Sensors\nLight Sensors\nHumidity Sensors\nThermostats\nIR Devices (TV, Stereo, Portable Air Conditioner, etc)\nMotorized Blinds",
      "target_audience": [
        "Someone who is looking to learn how to automate their house themselves",
        "No Prior Experience Necessary",
        "Beginners: You will learn all the basics needed to get started and leverage that to learn more advanced automation and concepts.",
        "Experts: You will learn about features that you didn't know existed and have real world examples of new ways you can automate your house."
      ]
    },
    {
      "title": "Microcontroller Interfacing with Different Elements",
      "url": "https://www.udemy.com/course/microcontroller-interfacing-sensors-lcd-switch-led-picmicrocontroller/",
      "bio": "This is a Step By Step Guide to Interfacing Different electronic Elements with Microcontrollers",
      "objectives": [
        "Interface Different electronic Elements with Microcontrollers",
        "Write a Code to Make Your Microcontroller recognize different electronic Elements and interact with it",
        "Control different electronic Elements",
        "Embed code in the design",
        "Interface Leds with Your Microcontroller",
        "Interface Switches with Your Microcontroller",
        "Interface buttons with Your Microcontroller",
        "Interface 7 Segments with Your Microcontroller",
        "Interface LCD Liquid crystal display",
        "Interface Pizeo Sound Speaker with Your Microcontroller",
        "Interface Sounder with Your Microcontroller",
        "Interface Relay with Your Microcontroller",
        "Interface Transistor with Your Microcontroller",
        "Interface Darlington Transistors with Your Microcontroller"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Exploring Hardware Interfacing Strategies with Microcontrollers",
          "Section Summary",
          "Reading Material"
        ],
        "Software Installation": [
          "Section Intro",
          "Note",
          "Section Summary",
          "Reading Material"
        ],
        "Light Emitting Diode (LED) Interfacing": [
          "Section Intro",
          "Interfacing a Light Emitting Diode (LED)",
          "Quiz",
          "LED Interfacing Explained with Example",
          "LED Interfacing Practical",
          "Practical LED Interfacing and Control with Arduino",
          "Section Summary",
          "Reading Material"
        ],
        "Switch Interfacing": [
          "Section Intro",
          "Switch Interfacing",
          "Practical Switch Interfacing and Control with Arduino",
          "Section Summary",
          "Reading Material"
        ],
        "LDR Interfacing": [
          "Section Intro",
          "LDR Interfacing",
          "Quiz",
          "Section Summary",
          "Reading Material"
        ],
        "Pizeo Sound Tone Interfacing": [
          "Section Intro",
          "Pizeo Sound Tone Interfacing",
          "Practical Sound Generation with Piezo Sounder and Arduino",
          "Section Summary",
          "Reading Material"
        ],
        "LCD Display Interfacing": [
          "Section Intro",
          "LCD Display Interfacing",
          "What is LCD Display",
          "What is MikroC Pro and How to Download and Install it",
          "What is PICSimlab Alternative Simulation Software",
          "Quiz",
          "LCD Library and Routines",
          "LCD Initialization",
          "LCD Output to Display Text on LCD",
          "Quiz",
          "LCD Character Output Routine",
          "LCD Commands and how to deal with them",
          "How to Use PICSimLab Simulation Boards with MikroC",
          "LCD Simulation",
          "Quiz",
          "LCD Shift Text",
          "Practical LCD Display Interfacing and Control with Arduino",
          "Section Summary",
          "Reading Material"
        ],
        "7 Segment Display Interfacing": [
          "Section Intro",
          "7 Segment Display Interfacing",
          "7 Segment Display Interfacing Practical Lesson with Coding",
          "Interfacing and Controlling a 7-Segment Display with Arduino",
          "Section Summary",
          "Reading Material"
        ],
        "Interfacing a Transistor": [
          "Section Intro",
          "Interfacing a Transistor",
          "Practical Transistor Interfacing for Switch and Control Applications",
          "Section Summary",
          "Reading Material"
        ],
        "Darlington Driver IC Interfacing": [
          "Section Intro",
          "Darlington Driver IC Interfacing",
          "Practical Control of High-Power Loads Using a Darlington Driver IC",
          "Section Summary",
          "Reading Material"
        ]
      },
      "requirements": [
        "A computer to run the software",
        "A basic knowledge in Programming in any language",
        "Download and Install Proteus Professional (FREE & Explained inside the Course)",
        "Download and Install MikroC Pro (FREE & Explained inside the Course)",
        "Download The course Material in PDF and Print them if possible",
        "Students must have the knowledge of basic electronics"
      ],
      "description": "Everything you wanted to know about interfacing different elements with microcontrollers but were too afraid to ask, or asked without getting answers!\nThis is a Step By Step Guide to interfacing different electronic elements with different microcontrollers including LEDs, switches and buttons, 7-segment displays, LCD liquid crystal displays, piezo sound speakers, sounders, relays, transistors, and Darlington transistors.\nThis bundle consists of more than 40 lectures with over 3 hours of HD video content and supplementary material, covering every aspect of electronic elements interfacing. You'll learn how each element works, the concept behind interfacing each element, and how to simulate and connect everything in real life. By the end of this course, you'll be a professional in interfacing different electronic elements with various microcontrollers (PIC Microcontroller, Arduino, Raspberry Pi, and other types).\nWhy You Should Take This Course:\nMore than 3 Hours of Full HD Content\nMore than 3 Quizzes\n15 Articles\n10 Downloadable Resources\nSupporting Material and Example Codes\nStep-by-step Explanation of Connection Diagrams and Coding Stages\nCertificate of Completion\nElements Covered in This Course:\nLEDs\nSwitches and buttons\n7-segment displays\nLCD liquid crystal displays\nPiezo sound speakers\nSounders\nRelays\nTransistors\nDarlington transistors\nThis course works for any type of microcontrollers, including:\nArduino\nPIC Microcontroller\nRaspberry Pi\nAny other type\nDon't miss this comprehensive guide to mastering microcontroller interfacing. Enroll today and elevate your electronics projects to the next level!\nWhat You Will Learn\nInterface various electronic elements with different microcontrollers\nUnderstand the concepts behind each interfacing method\nSimulate and connect elements in real-life projects\nGain confidence in using microcontrollers in your electronics projects\nWho Is This Course For\nElectronics hobbyists\nEngineering students\nMakers and DIY enthusiasts\nAnyone interested in microcontrollers and electronics\nRequirements\nBasic knowledge of electronics\nA computer with internet access\nWillingness to learn and practice\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k + Subscriber) and author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and provide guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts through in a step by step easy to understand matter using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming and in particular for the world of Arduino, PIC Microcontroller, Rasberry Pi has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers Courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Microcontrollers Geeks",
        "Arduino Geeks",
        "Raspberry Pi Geeks",
        "PIC Microcontroller Geeks",
        "Engineering students",
        "Anyone Interested in Different electronic Elements with Microcontrollers",
        "Anyone Interested in Controlling Different electronic Elements with Microcontrollers",
        "PIC Microcontroller Lovers",
        "Technology hobbyists",
        "Computer programmers"
      ]
    },
    {
      "title": "Mastering Arduino: Boost Reliability and Efficiency",
      "url": "https://www.udemy.com/course/arduino-improve-arduino-programs-reliability/",
      "bio": "Unlock the Secrets of Arduino's Watchdog Timer for Reliable Programming",
      "objectives": [
        "You will learn how to make your Arduino programs more reliable",
        "Learn how to use the watchdog timer in Arduino System",
        "Learn how to monitor the progress of the program",
        "Learn the ways to improve reliability",
        "You'll learn how to use the Arduino system's watchdog timer.",
        "You will learn how to make your Arduino programs more reliable by using the watchdog timer.",
        "You will learn how to access registers in Arduino",
        "You will learn how to do hardware reset to gain control over a program malfunction",
        "You will learn what is the best IDE for programming Arduino"
      ],
      "course_content": {
        "Introduction": [
          "Section Intro",
          "Introduction",
          "What you will learn in this Course",
          "Designing Reliable and Efficient Arduino Systems",
          "Things that affects Arduino Reliability",
          "Introduction to Arduino and Factors Affecting Reliability",
          "Factors Influencing Arduino Reliability",
          "Summary",
          "Reading Material"
        ],
        "Watchdog Timer": [
          "Section Intro",
          "What is a Watchdog Timer",
          "Watchdog Timer Library in Arduino",
          "Wake Up Arduino from Sleep",
          "Understanding and Using Watchdog Timers in Arduino",
          "WDT Code",
          "WDT Library",
          "Implementing a Watchdog Timer in Arduino",
          "Summary",
          "Reading Material"
        ],
        "Program Reliability": [
          "Section Intro",
          "What can cause a program to stop working.",
          "Control of Microcontroller Data",
          "Monitoring the progress of the program",
          "Identifying Issues and Monitoring Arduino Programs",
          "Enhancing Program Reliability in Arduino",
          "Summary",
          "Reading Material"
        ],
        "Programming Skills": [
          "Section Intro",
          "AVR Architecture in Datasheet",
          "Introduction to Registers",
          "Why using Register Level Programming",
          "AVR Architecture and Register-Level Programming",
          "Types of Memory",
          "Input Output Ports Overview",
          "Register Summary",
          "Memory Types and I/O Port Registers in AVR",
          "Exploring AVR Architecture and Register Programming",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Section Intro",
          "Mastering Arduino: Reliability and Efficiency Practice Test",
          "Summary",
          "Reading Metarial"
        ],
        "Who we are?": [
          "Who we are?"
        ],
        "IDE": [
          "What is this Platform",
          "PlatformIO Cross-platform Embedded Development Environment",
          "Programming Arduino with Visual Studio Code and PlatformIO",
          "Library Management and IDE Features"
        ],
        "Course Project": [
          "Course Project",
          "Reliable and Efficient Arduino-Based Application"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "This requires Arduino IDE",
        "This requires Arduino Uno"
      ],
      "description": "Mastering Arduino: Boost Reliability and Efficiency\nDo you struggle with unreliable Arduino programs? Wish you had a solution to enhance reliability and efficiency? Look no further! In this course, we delve deep into the world of Arduino to show you how to create rock-solid programs and harness the power of Arduino's watchdog timer for ultimate reliability.\nTestimonials:\n\"Before this course, I constantly battled Arduino program errors. Thanks to the techniques taught here, my projects run flawlessly now.\" - John D.\n\"The Arduino watchdog timer was a mystery to me, but this course demystified it. My programming skills have leveled up!\" - Sarah L.\n\"As an Arduino enthusiast, I struggled with reliability issues. This course provided the answers I needed to overcome those challenges.\" - Michael R.\nCourse Highlights:\nReliability Redefined: Arduino is notorious for occasional hiccups. We address these issues head-on and provide solutions to ensure your programs run smoothly.\nMaster the Watchdog Timer: Learn to harness the full potential of Arduino's watchdog timer—a powerful tool for keeping your programs on track.\nTroubleshooting Techniques: Discover expert tips and techniques for identifying and resolving common Arduino program errors.\nHardware Control: Gain the skills to perform hardware resets, taking control in case of program malfunctions.\nOptimal IDE: Find out which Integrated Development Environment (IDE) suits your Arduino projects best, optimizing your programming experience.\nReliability Challenges: Arduino can be unpredictable due to its programming language. We tackle these challenges and help you create dependable programs.\nTime Savings: Troubleshooting errors can be time-consuming. Our course provides you with efficient techniques to save valuable time.\nIDE Confusion: Not sure which IDE to use for your projects? We guide you through selecting the ideal one for your needs.\nWho Should Enroll:\nArduino Enthusiasts\nElectronics Hobbyists\nEngineers and Makers\nStudents in STEM Fields\nWhat You'll Learn:\nUtilize Arduino's watchdog timer effectively\nMonitor program execution for enhanced reliability\nTroubleshoot and resolve common Arduino program errors\nPerform hardware resets to regain control in case of malfunctions\nChoose the best IDE for your Arduino projects\nReady to elevate your Arduino skills and conquer reliability issues? Enroll now to become a master Arduino programmer!\n\n\nAbout the Instructor: Educational Engineering Team\nThe Educational Engineering Team is a leading team in the Microcontroller Industry, with over 13 years of experience in teaching and practical projects. We strive to share our hands-on experience in these courses, providing step-by-step blueprints on taming both simple and complex topics in easy-to-digest bite-sized videos.\nAshraf:\nEducator, Mechatronics engineer, electronics and programming hobbyist, and Maker.\nCreator of online video courses on the EduEng YouTube Channel with over 4 million views and 20k+ subscribers.\nAuthor of four Microcontroller books.\nFounder and Chief Educational Engineer at Educational Engineering Team.\nPassionate about exploring new trends and technology, and helping educate the world.\nOur online courses have helped over 250,000 people worldwide to improve their skills and careers in the industry.\nCall to Action: Join us and start mastering Arduino reliability and efficiency today! Enroll now and take your projects to the next level.\nFAQ:\nWhat is Arduino's watchdog timer?\nArduino's watchdog timer is a feature that helps ensure your programs run reliably by monitoring their execution and resetting the system if it becomes unresponsive.\nDo I need prior experience to take this course?\nNo prior experience with Arduino's watchdog timer is needed; this course is designed for beginners.\nWhat will I learn in this course?\nYou will learn how to use Arduino's watchdog timer to enhance the reliability and efficiency of your projects, troubleshoot common errors, and optimize your programming environment.\nNow, I'll create the cours",
      "target_audience": [
        "This course is designed for anyone who wants to learn Arduino and program it reliably",
        "It is also useful for anyone who wants to modify or develop an Arduino project",
        "This course is for all ages, from teens to seniors, who want to learn the basics of Arduino programming",
        "It's also great for hobbyists, makers and engineers who want to learn how to program and troubleshoot their Arduino board."
      ]
    },
    {
      "title": "Allen Bradley Micro Logix PLC Programming Basics",
      "url": "https://www.udemy.com/course/learn-basics-of-allen-bradley-micro-logix-plc-in-15-hours/",
      "bio": "Allen Bradley PLC programming in Micro Logix Software",
      "objectives": [
        "To understand how a Programmable Logic Controller (PLC) works",
        "Pass a technical PLC interview",
        "Understand how to program a PLC",
        "Learn Ladder Logic Programming",
        "Industrial Automation",
        "Micro Logix programming interface"
      ],
      "course_content": {
        "Introduction to Course": [
          "Introduction to Course"
        ],
        "Introduction of Relay Logic": [
          "Introduction of Relay Logic"
        ],
        "Introduction to Allen Bradley Micro Logix PLC": [
          "Introduction to Allen Bradley Micro Logix PLC"
        ],
        "Download and Install the Micro Logix Software": [
          "Download and Install the Micro Logix Software"
        ],
        "Basics of RS Logix 500 Software and Communication with PLC or Simulator": [
          "How to use RS Logix 500 Software Part 1",
          "How to use RS Logix 500 Software Part 2"
        ],
        "Basic Parameters": [
          "Basic Parameters",
          "Assignment 1"
        ],
        "General Internal Memories": [
          "General Internal Memories"
        ],
        "Latching": [
          "Latching with Output",
          "Latching with Latch and Unlatch Command"
        ],
        "Timers": [
          "Timers",
          "Timers Example",
          "Assignment 2"
        ],
        "Counters": [
          "Counters",
          "Assignment 3"
        ]
      },
      "requirements": [
        "Basic Electrical Hardware Understanding",
        "PLC Software (Included in the Course)"
      ],
      "description": "This is a comprehensive course for learning the basic level programing of Allen Bradley PLC in Micro Logix software. You will learn the logic designing of Micro Logix from scratch in a short period. No hardware equipment will be required to follow the course you will just have to install Micro Logix software on you PC and you can do it. Fundamental programming of Micro Logix will be covered step by step including the video lectures, assignments.\nCouse Outline:\n1- Introduction of Relay Logic\n2- Introduction of Relay Logic\n3- Introduction to Allen Bradley Micro Logix\n• PLC Block Diagram\n• PLC Inputs and Outputs\n• Working Principle of PLC\n• PLC Communication Protocols\n• PLC Wiring\n• Sink/Source\n• NPN & PNP Sensors\n4- Download and Install Micro Logix 500 Software\n5- Basics of Micro Logix 500 Software and Communication with PLC\n• PLC Specification\n• Software Interface\n• How to Create Tags\n• Making First Program on Simulator\n• Setting up Communication\n• How to Monitor the Program Online\n• How to Load Program in Simulator\n• How to Build Ethernet Connection with PLC and Load Program\n6- Basic Parameters\n• Normally Open Contact\n• Normally Close Contact\n• Output Coil\n• Series-AND Logic\n• Parallel-OR Logic\n• Parallel-NAND Logic\n• Series-NOR Logic\n• Assignment_1\n7- General Internal Memories\n8- Latching\n• Latching with Output\n• Latching using Latch and Unlatch Command\n9- Timers\n• On Delay Timer\n• Enable of Timer\n• Specifying the Duration of Time\n• Resetting a Timer\n• Off-Delay Timer\n• Retentive On-Delay Timer\n• Assignment_2\n10- Counters\n• Up Counter\n• Resetting a Counter\n• Down Counter\n• Up-Down-Counters\n• Assignment_3\n11- Arithmetic Operations and MOVE Command\n• Addition\n• Subtraction\n• Multiplication\n• Division\n• Moving Operands\n• Moving Constants\n• Assignment_4\n12- Comparator operations\n• Equal (=)\n• Less Than (>)\n• Greater Than (<)\n• Designing of Complex Systems using Ladder Logic\n13-Designing of Complex System Using Ladder Logic\n• Assignment (Chemical Processing Unit)\n\n\n_______________________________________________________________________________________________________________________________________\n\n\nall about micro logix,\nmicro logix programming,\nbasics of micro logix software,\nhow to use timers in micro logix,\nhow to use counters in micro logix,\nhow to use move command in micro logix,\nhow to use comparators in in micro logix,\nhow to use math operators in micro logix,\nhow to define tags in micro logix,\nwhat is interlocking,\nwhat is ladder logic,\nallen bradley hmi,\nwhat is a pulse timer in micro logix,\nlearn micro logix in short time,\nallen bradley plc wiring,\nhow to define registers in micro logix,\nnormally open and normally close contacts in micro logix,\nhow to use output coil in in micro logix,\npositive pulse and negative pulse operands in in micro logix,\nrising edge and falling edge operands in in micro logix,\narithmatic operators in micro logix,\nhow to do latching in micro logix,\nhow to use set and reset command in micro logix,\nelectrical plc training, freelance plc programmer, how to learn plc programming, learn plc programming, learning plc programming, plc application, plc based control system, plc class, plc classes, online plc, computer plc, controlled equipment, plc controller, training plc, course plc, full form plc, industry plc, interface plc, manufacturing plc, network plc, online courses plc, operation plc, programing course, plc programing courses, plc programing training, plc programmable logic controller, plc programmer training, plc programmers, plc programming classes, plc programming companies, plc programming course, plc programming courses, plc programming language, plc programming online course, plc programming school, plc programming service, plc systems, plc training courses, plc training courses online, plc-programs, plcs for dummies, program logic control training, program plc, program plcs, programing plcs, programmable controller application, programmable logic controller applications, programmable logic controller history, programmable logic controller training, what is a programmable logic controller, what is plc control, what is programmable logic controllers,",
      "target_audience": [
        "Anyone interested in learning how an industrial process works automatically",
        "Electrical, Electronics, Mechatronics and Telecom Engineers",
        "Production, Maintenance & Electrical Technicians"
      ]
    },
    {
      "title": "Raspberry Pi: Build AI Voice Assistant Powered by ChatGPT",
      "url": "https://www.udemy.com/course/raspberry-pi-build-ai-voice-assistant-powered-by-chatgpt/",
      "bio": "Build an AI-powered voice assistant with Raspberry Pi 5, ChatGPT, smart home automation, and Telegram bot integration",
      "objectives": [
        "Set up a Raspberry Pi as a functional AI-powered voice assistant",
        "Use the ChatGPT API to process voice inputs and generate responses",
        "Control smart devices using voice commands and Tuya API",
        "Automate assistant startup on Raspberry Pi using systemd",
        "Integrate a Telegram bot for remote control of your assistant",
        "Gain the knowledge and tools to expand your assistant’s capabilities"
      ],
      "course_content": {},
      "requirements": [
        "Basic familiarity with Python programming and using the command line",
        "A Raspberry Pi 5 (or a similar model) with necessary peripherals (microSD card, power supply, etc.)",
        "A microphone and speakers for voice input and output",
        "Access to OpenAI and Tuya developer platform accounts for integrating ChatGPT and Tuya",
        "Access to a Telegram account for integrating the assistant with a Telegram bot",
        "No advanced skills are required – this course is beginner-friendly and guides you step by step"
      ],
      "description": "Unlock the Power of Raspberry Pi 5: Build Your Own AI Voice Assistant\nUnlock the full potential of Raspberry Pi 5 and dive into the future of AI and smart home automation! In this hands-on course, you’ll learn how to create a fully functional voice assistant powered by ChatGPT, one of the most advanced AI technologies today.\nWhat You’ll Learn\nSet up your Raspberry Pi from scratch – Get familiar with the Raspberry Pi setup process and the necessary software tools.\nIntegrate smart devices – Learn how to control devices like plugs and switches using your voice assistant.\nUse speakers for communication – Enable your assistant to communicate with you through speakers.\nExplore IoT and smart home automation – Understand essential IoT components and how to use platforms like Tuya for automation.\nAPIs for Your Projects\nI’ll introduce you to the world of APIs:\nOpenAI API – Learn how to use the OpenAI API for ChatGPT integration.\nTuya API – Control smart devices remotely through the Tuya API.\nLearn how you can leverage these APIs to enhance your own projects.\nTelegram Bot Integration\nAs an extra perk, I’ll show you how to integrate your assistant with Telegram by creating a Telegram bot. With this feature, you’ll be able to control your smart home remotely from your phone, expanding your assistant’s functionality and enabling you to manage your devices from anywhere.\nDevelop Essential Skills\nThroughout the course, you’ll:\nApply your basic Python skills in a real-world project.\nGain experience in hardware integration.\nMaster automation techniques.\nWhether you're a beginner, maker, or tech enthusiast, this course is designed to equip you with everything you need to create and customize your own AI-powered assistant.\nA Living Project\nThis course is a living project! I continuously update lessons based on your feedback and the latest advancements in technology to keep the content cutting-edge. Have a feature request? Drop it in the Q&A – your ideas directly shape future updates!\nWhat You'll Achieve\nBy the end of the course, you’ll have:\nBuilt your own voice-controlled AI assistant that interacts with your smart home.\nGained the skills to create advanced automation projects with Raspberry Pi.\nNo prior experience is needed – you’ll be ready to explore and innovate in the world of AI-driven automation with Raspberry Pi!",
      "target_audience": [
        "IoT Enthusiasts: Anyone interested in creating smart home or IoT projects using Raspberry Pi",
        "Beginners in AI and Voice Assistants: Those curious about building their first AI-powered voice assistant with minimal prior experience",
        "Beginner Python Developers: Programmers looking to apply their Python skills to real-world automation and AI integration",
        "Hobbyists and Makers: People passionate about DIY projects and exploring cutting-edge technologies like ChatGPT",
        "Tech Educators and Students: Teachers or learners seeking a practical, hands-on project to deepen their understanding of IoT and AI"
      ]
    },
    {
      "title": "VHDL Programing for beginners",
      "url": "https://www.udemy.com/course/vhdl-programing-for-beginners/",
      "bio": "Digital Design using VHDL",
      "objectives": [
        "1. Learners will be able to understand the basic concepts of HDL",
        "2. Learners will be able to2. describe digital circuits with the help of HDL",
        "3. Learners will be able to demonstrate the functionality of digital circuits using Xilinx Tool",
        "4. Learners will be able toModel delays in digital circuits"
      ],
      "course_content": {
        "Introduction- VHDL Programing": [
          "Introduction",
          "VHDL Basics",
          "VHDL Design Modules, VHDL Data Objects, Data Types, VHDL Operators",
          "VHDL Modeling Styles, Signal Assignment Statements, Process Statement",
          "VHDL Modeling Styles, Signal Assignment Statements, Process Statement",
          "Introduction to Xilinx ISE Tool"
        ],
        "VHDL STATEMENTS": [
          "VHDL Sequential Statements and Assert Statement",
          "VHDL Sequential Statements and Assert Statement",
          "VHDL Examples on Assert, Report and Severity statements"
        ]
      },
      "requirements": [
        "fundamental knowledge of digital circuits"
      ],
      "description": "In the course \"VHDL Programming for beginners \" concepts of Hardware Description Language is covered. It includes the lectures on VHDL design units, VHDL operators, Attributes, Data Types, Data Objects, and Modeling styles. This course will help students to gain thorough knowledge of Process, case, if else, when else, with select statements, Component declaration, Component Instantiation, Test bench, Package body, Package declaration, VHDL delay models, and waveform generation codes. Modeling of Digital applications using concurrent and sequential VHDL statements is taught.\nDesign flow of Front end tool Xilinx 14 version is introduced, where students will be able to understand how to create a VHDL project, file, how to write a VHDL code, simulation of the design and they will be able to observe RTL schematic for the device for which code is written. Step by step execution of the VHDL code is taught through the lectures. Demonstration of various combinational and sequential digital circuits are shown using Xilinx tool.. After the completion of this course students will be able to understand the concepts of VHDL language and will be able to design and simulate digital applications with the help of front end Tool. Practical exposure of VHDL programing is the fundamental need of VLSI based industries. Prerequisite for this course is  the understanding of digital circuits.",
      "target_audience": [
        "11th, 12th, engineering, science students"
      ]
    },
    {
      "title": "Arduino Motion Mastery: Craft Your Own Intruder Alert!",
      "url": "https://www.udemy.com/course/arduino-motion-detector-step-by-step-guide/",
      "bio": "Step-by-Step Guide to Building a Motion Detector: Secure Your Space with Arduino Expertise.",
      "objectives": [
        "Make your own Motion Detector Device",
        "Get to know different applications where this motion detector can be used",
        "Code Arduino to read data from digital sensors",
        "Learn Working Principle of Motion Detectors",
        "Interface Motion Detector with Arduino",
        "Connect your circuit to test out everything"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Section Intro",
          "Introduction",
          "Exploring Motion-Activated Security Concepts with Arduino",
          "Educational Engineering Team - Who we are?",
          "Very Important Note: Review Process",
          "Quiz",
          "Software and Hardware Requirements",
          "Summary",
          "Reading Material"
        ],
        "Software Requirements": [
          "Section Intro",
          "Software Requirements",
          "Understanding and Gathering Components for Arduino Motion Detector",
          "Summary",
          "Reading Material"
        ],
        "How Does It Work": [
          "Section Intro",
          "How Does It Work",
          "Quiz",
          "Summary",
          "Reading Material"
        ],
        "Circuit Diagram": [
          "Section Intro",
          "Arduino Circuit Diagram",
          "Circuit Diagram",
          "Assembling and Connecting the Arduino Motion Detector Circuit",
          "Summary",
          "Reading Material"
        ],
        "Code": [
          "Section Intro",
          "Motion Detector Arduino Code",
          "Code Explained in Details",
          "Quiz",
          "Summary",
          "Reading Material"
        ],
        "Download and Install Software Section": [
          "Section Intro",
          "Download and Install Arduino Software",
          "Download and Install Circuit Design and Wiring Software",
          "Setting Up the Arduino IDE for Motion Detector Programming",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Motion Detection with Arduino Practice Test"
        ],
        "Who we are?": [
          "who we are?"
        ],
        "Course Project": [
          "Course Project",
          "Demonstrating a Motion-Based Intruder Alert System with Arduino"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic experience in Electronics",
        "A Will to apply, not just watch"
      ],
      "description": "Unleash the Power of Arduino!\nEver wondered how motion detectors in banks or indoor mechanisms work? Dive into the world of Arduino and construct your own motion-sensing device from scratch! Not only will this course unveil the underlying principles, but it'll also equip you with the skills to customize and craft your own motion detector tailored to your needs.\nWhat's Inside:\nSimplified Learning: Understand the components, their functionalities, and the magic they create when wired together.\nPractical Application: Build a motion detector that alerts you of intruders within a 6-7 meter range.\nHands-On Experience: From connecting a PIR Motion Sensor to deploying a piezo buzzer, dive deep into the intricacies of hardware setup.\nFor Everyone: Whether you're a beginner curious about electronics or an expert looking to expand your knowledge, this course caters to all levels.\nWhy Choose This Course?\nHolistic Learning: Dive into the Arduino IDE environment, manipulate sensors, deploy codes, and master techniques like pulse width modulation.\nDo It Yourself: Empower yourself to craft devices that can up the security game of your home or office.\nResources Galore: With video lessons, practical activities, and a plethora of downloadable resources, learning has never been this comprehensive.\nInstructor Spotlight – Ashraf Said AlMadhoun:\nGuided by a mission to simplify complex concepts, Ashraf brings his vast experience to the fore. As a founder of the Educational Engineering Team, he's dedicated to sharing his expertise and has already empowered countless students around the globe.\nJoin The Motion Revolution:\nGet ready to transform your idea into a tangible device. With lifetime course updates and a thriving student community, there's no better place to jumpstart your Arduino journey. So, why wait? Dive in, enroll, and let's start detecting!\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a leading team in the Microcontroller Industry, with over 13 Years of Experience in teaching and doing practical projects.\nWe strive to put all our hands-on experience into these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ courses on Udemy.\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million Views, 20k + Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, in particular for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World\nWhat you will learn\nHow to connect and configure a PIR Motion Sensor.\nHow to build a motion detector with Arduino.\nHow to deploy a piezo buzzer for alerts.\nThe principles behind motion detection technology.\nHow to program and customize your motion detector.\nMastering the Arduino IDE for sensor manipulation.\nWho is this course for\nHome automation enthusiasts.\nDIY electronics hobbyists.\nSecurity system developers.\nStudents and professionals interested in Arduino projects.\nAnyone interested in learning about motion detection and Arduino.\nRequirements\nBasic knowledge of electronics.\nA computer with internet access.\nAn Arduino board and components as listed in the course.\nEnthusiasm to learn and build.",
      "target_audience": [
        "Electronics Geeks",
        "Arduino Geeks",
        "Anyone Interested in Learning New Things about Arduino"
      ]
    },
    {
      "title": "Sensors and Sensor Fundamentals",
      "url": "https://www.udemy.com/course/sensors-sensor-fundamentals/",
      "bio": "Exploring Technology and its Relationship with the Environment",
      "objectives": [
        "Participants will learn about the different types of sensors.",
        "Participants will comprehend how sensors can be used within design to help with sustainable design.",
        "Participants will understand the basic way sensors work in order to properly use them in design."
      ],
      "course_content": {
        "Start with Lecture 1": [
          "Introduction to Sensors",
          "History of Sensor",
          "ICT Technology",
          "How Will Sensors Continue to Evolve?",
          "Sensing Environmental Challenges",
          "Types of Sensors",
          "Environmental Monitoring with Sensors",
          "Future Directions for Environmental Monitoring"
        ]
      },
      "requirements": [
        "You should be able to use a PC at beginner level.",
        "An interest in technology would be an advantage.",
        "An appreciation for nature and landscape architecture will also be an advantage."
      ],
      "description": "A sensor is an electronic component or subsystem utilized for detecting modifications or events within its environment. A computer processor is one good example of sensor technology, also touch-sensitive elevator buttons known as tactile sensor. This innovation made a huge impact in the world of information and technology and almost every field or industry is using it for productivity and progress.\nThis course will talk about sensors and their fundamentals. Technology is not just for the design process, but is becoming an integrative part of Landscape Architecture Design. Sensors represent a tremendous opportunity to augment sustainable design and behavior for environmental monitoring. They can be used for a wide variety of sustainable design uses. This webinar discuses the basics of sensors, how they work, types of sensors, and how they can be used in design.",
      "target_audience": [
        "Individuals with passion for technology.",
        "Professionals who want to gain knowledge about the latest trends in technology."
      ]
    },
    {
      "title": "Arduino Based Solar Tracker",
      "url": "https://www.udemy.com/course/arduino-based-solar-tracker/",
      "bio": "Build an automatic dual-axis solar tracking system using Arduino sensors and servo motors to maximize solar energy captu",
      "objectives": [
        "The basic concept of solar tracking and its importance in harnessing maximum solar energy will be discussed.",
        "students will learn the basic requirements on course",
        "Students will learn about the software needed for the project and how it works with the circuit and code.",
        "Students will learn how to write code for the project using the Arduino programming language. They will learn about coding concepts such as functions, variables",
        "Students will learn how to put all the concepts and skills they have learned into practice by assembling and programming the solar tracker.",
        "They will also learn how to test and troubleshoot the project, as well as discuss potential applications and future improvements."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of electronics: Students should have a basic understanding of electronic components and circuits, such as resistors, capacitors, and transistors.",
        "Basic knowledge of programming: Students should have a basic understanding of programming concepts, such as variables, loops, and functions. Familiarity with the C programming language is helpful, but not required.",
        "Familiarity with the Arduino platform: Students should have a basic understanding of the Arduino platform and its development environment.",
        "helpful if students have a background in engineering or technology, as these skills will be useful when working on the project",
        "However, these prerequisites are not strictly required, and students with an interest in electronics, programming, and renewable energy should be able to follow the course and complete the project."
      ],
      "description": "This course guides you through building a fully functional Arduino-powered solar tracker. Using light sensors and servo motors, you’ll create a system that detects sunlight direction and automatically adjusts the solar panel’s position for maximum efficiency.\nWhether you’re working on a renewable energy project, a school assignment, or just want to develop your skills in sensor-based automation, this course delivers the complete process—from hardware setup to final working system.\nWhy Should You Take This Course?\nHands-on Experience: The course provides students with hands-on experience in building a solar tracker from scratch, allowing them to apply the concepts and theories they learn in a practical setting.\nUnderstanding of Renewable Energy: By building a solar tracker, students will gain a deeper understanding of the principles of renewable energy and how it can be harnessed for practical applications.\nDevelopment of Technical Skills: The course will help students develop a range of technical skills, including circuit design, coding, and troubleshooting, which are valuable in many areas of engineering and technology.\nExposure to New Technologies: Students will be exposed to cutting-edge technologies, including the Arduino platform and solar tracking systems, and will learn how they can be used to solve real-world problems.\nCareer Opportunities: Upon completion of the course, students will have a portfolio of projects that demonstrate their skills and experience in electronics, programming, and renewable energy, which can help them to pursue careers in these fields.\nWhat You Will Learn\nUnderstand the Principles of Solar Tracking\nLearn how light direction impacts energy efficiency and why tracking systems matter.\nInterface LDR Sensors with Arduino\nSet up and calibrate light-dependent resistors (LDRs) to detect sunlight intensity.\nControl Servo Motors Based on Sensor Input\nProgram Arduino to adjust panel orientation using dual-axis movement.\nImplement Conditional Logic in Embedded C\nCreate decision-making code that moves the panel precisely toward the strongest light source.\nAssemble the Full Tracking Mechanism\nCombine sensors, servos, and panel mounts to create a complete working model.\nTest, Troubleshoot, and Optimize\nFine-tune tracking accuracy and explore ways to adapt your design for different conditions.\nWho This Course Is For\nStudents building academic projects on renewable energy\nMakers and electronics hobbyists interested in automation\nAnyone learning Arduino and sensor integration\nDIY solar enthusiasts seeking energy-efficient designs\nRequirements\nBasic knowledge of Arduino and electronics\nArduino Uno (or compatible board)\nLDR sensors, resistors, servo motors (2), solar panel (for demonstration)\nBreadboard, jumper wires, and a stable mounting platform\nStudent Reviews\n“Built it for my capstone project—easy to follow and worked as expected!” — Tariq H.\n“I always wanted to work on solar automation. This was a great way to learn sensors and servo control.” — Julia P.\n“One of the most complete Arduino tracking projects. Clear code, practical design.” — Elijah R.\nBuild Smarter Renewable Systems\nUsing simple components and real code, you’ll build a working solar tracker that mimics professional systems. This isn’t just a circuit—it’s an energy optimization tool powered by your code and logic.\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.\nCall to Action\nStart designing smarter, self-adjusting systems powered by clean energy principles.\nEnroll now and build your Arduino solar tracker step-by-step.\nEnroll Now – Master Arduino-Based Solar Automation",
      "target_audience": [
        "Hobbyists and makers: This course can be a good fit for those who enjoy DIY projects and learning about new technologies.",
        "Engineering and technology students: Students studying engineering or technology can benefit from learning about solar trackers and how to build one using the Arduino platform.",
        "Renewable energy professionals: This course can be valuable for professionals in the renewable energy industry who want to learn about solar trackers and how to integrate them into their projects.",
        "Anyone interested in learning: The course is also suitable for anyone who is interested in learning about electronics, programming, and renewable energy, regardless of their background or experience level."
      ]
    },
    {
      "title": "Master the Future of Microcontrollers with STM32 ARM Course",
      "url": "https://www.udemy.com/course/stm32-introduction-to-stm32-stm-electronics/",
      "bio": "32-bit Microcontrollers are rolling the world, Now is the time to start moving from 8-bit low speed to the giant ARM",
      "objectives": [
        "Things you must know about Embedded Systems, STM32 and ARM",
        "Program STM32 Effectively",
        "ARM Architecture",
        "Create a fully functional Project in no Time",
        "STMicroelectronics and the STM32 platform",
        "The World of STM32",
        "STM32 Key Features",
        "STM32 Applications",
        "Provide an overview of STM32 MCU family.",
        "The NUCLEO-L476RG Development",
        "STM32 Development Board",
        "ARM Cortex M-4 Architecture",
        "ARM Cortex M-4 Memory Maps",
        "Development Board",
        "Cortex Overview",
        "CMSIS",
        "Low Power Operation",
        "Safety Features",
        "The Flash Module",
        "Application Examples",
        "Practical Walk through showing the famous STM32 Development Board",
        "Download and Install STM32CubeMX Development Environment",
        "Download and Install Arduino and Configure it for STM32 Microcontroller",
        "How to Write you first code",
        "Boot loader and how to upload it to STM32 Board",
        "Uploading your first code to STM32 Board",
        "Blink an LED",
        "Code Structure explained",
        "Advance coding examples"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Programming"
      ],
      "description": "Master the Future of Microcontrollers with STM32 ARM-Based Course!\nDive into the 32-bit Era: The Future is Now!\nRemember when 8-bit microcontrollers were all the rage? Times have changed! The world is quickly transitioning to the power and prowess of 32-bit microcontrollers, and the STM32 ARM-based microcontroller is leading the charge.\nWhy Choose Our STM32 ARM-Based Course?\nStep into the ARM Universe: If you've ever programmed a microcontroller, you know the basics. But the ARM architecture? It's the next frontier. This course introduces you to the intricacies of ARM, its operating system environment, and its unique syntax.\nAll-In-One Learning: From the basics of getting started to diving deep into STM32 naming, pinouts, registers, and the nuances of C programming, our course is divided into eleven comprehensive parts to ensure a holistic learning experience.\nPractical Insights: Unlike courses that focus only on theory, we offer hands-on application examples and a detailed walkthrough of the STM32 development board. Plus, you'll get to code the STM32 via CubeMx!\nPowerful Features of STM32: Experience the might of the STM32, boasting an ARM Cortex-M3 CPU, FPU, up to 256 Kbytes of operational memory, top-tier analog performance, and a plethora of peripherals.\nWhy Is STM32 The Future?\nUnparalleled Versatility: STM32 microcontrollers come in a myriad of boards and packages, ensuring that there's always a perfect fit for your project.\nProject Adaptability: Whether you're aiming for a basic project or gearing up for an advanced venture, STM32 can handle it all with finesse.\nPerformance Meets Power: The STM32 isn't just about powerful features; it's about harnessing them to execute projects with unmatched efficiency.\nTake The Leap with STM32\nThe shift from 8-bit to 32-bit microcontrollers isn't just a trend—it's the future. By mastering the STM32, you're not just learning a new skill; you're becoming a pioneer in the next big wave of microcontroller innovation.\nSign up for our STM32 ARM-Based Course today and be at the forefront of the 32-bit revolution!\nLimited Seats Available! Enroll Now and Secure Your Spot in the Future of Microcontroller Programming!\nEnroll Now\nWhat you will learn\nUnderstand the ARM architecture and its operating system environment.\nDive deep into STM32 naming, pinouts, and registers.\nMaster the nuances of C programming for STM32.\nGain hands-on experience with STM32 development board and CubeMx.\nExplore the powerful features of STM32, including ARM Cortex-M3 CPU and FPU.\nLearn to harness STM32's versatility for various projects.\nAdapt STM32 for both basic and advanced projects with efficiency.\nWho is this course for\nIntermediate programmers looking to transition to 32-bit microcontrollers.\nHobbyists and electronics enthusiasts.\nEngineering students and professionals aiming to advance their skills.\nAnyone interested in mastering STM32 ARM-based microcontrollers.\nRequirements\nBasic understanding of microcontrollers and programming.\nAn STM32 development board.\nBasic knowledge of C programming is helpful but not required.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in the Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge, we go into the depth of the topic and give you the exact step-by-step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years, we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology and help educate the world and make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and providing guidance and consulting for many students over the years to help them kick-start their careers.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative teaching style that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to improve and make great careers in the industry.\nEducational Engineering Team offers Courses on:\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Anyone looking to improve his embedded systems skills be moving from 8-bit Microcontrollers to 32-bit Microcontrollers",
        "Anyone looking to learn ARM and RISC Based Microcontrollers",
        "STM32 Geeks",
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Embedded Systems Geeks",
        "Anyone interested in learning ARM architecture with a low budget STM32 solution"
      ]
    },
    {
      "title": "IoT in practice: MQTT",
      "url": "https://www.udemy.com/course/internet-of-things-mqtt/",
      "bio": "Mosquitto broker , Amazon Web Services IoT core, ESP32, Raspberry Pi",
      "objectives": [
        "You will learn what mqtt is and how it works.",
        "You will be able to install and configure the mosquito mqtt broker on Windows PC and Raspberry Pi.",
        "We will write a program for ESP32 that works with mosquito broker.",
        "You will learn how to work with Amazon Web Services IoT core, most popular mqtt cloud service.",
        "We will modify the previously written program for ESP32 so that your devices can work with AWS IoT core.",
        "We will write the pub/sub client for Windows and Raspberry Pi",
        "You will learn how to generate your TLS certificate and use it in your programs"
      ],
      "course_content": {
        "Введение": [
          "Introduction to MQTT"
        ],
        "Mosquitto broker": [
          "Installation and testing of mosquitto broker on Windows",
          "Writing ESP32 arduino program to connect it with mosquitto broker",
          "Adding pub/sub topics and authentification to the ESP32 programm",
          "Installation the mosquitto broker on Linux Raspberry Pi",
          "Mosquitto API: writing mosquitto client for Windows",
          "Mosquitto API: mosquitto client for Linux Raspberry Pi",
          "Mosquitto TLS: generating the certificate and keys",
          "Mosquitto TLS: attaching the certificate and keys to client PC and EPS32 program"
        ],
        "Amazon Web Services IoT core": [
          "AWS IoT core: creating thing, policy and certificate.",
          "Connecting ESP32 devices to AWS IoT core"
        ]
      },
      "requirements": [
        "C/C++ (beginner)",
        "Arduino (beginner)"
      ],
      "description": "In this course, I will look at the main points that allow your devices to exchange messages with each other over the MQTT protocol.\nFirst, I will tell you about the MQTT protocol itself and the basic principles of its operation, I will explain what MQTT broker is. Then we will download and install the most popular MQTT mosquito broker for Windows and learn how to configure it. First we will do it on your machine, and then through the local network. Next, we will write a program for ESP32 that allows you to communicate with mosquitto broker, connect it via WiFi and test how the program works with mosquito broker. After that, we will install the mosquitto under linux on Raspberry Pi and connect ESP32 to it. We will also write a client that works through mosquito API, which you can embed into your programs.\nAnd then we will learn how to work with the most popular cloud service for the Internet of Things Amazon Web Services IoT core. You will learn how to connect your devices to it and create a certificate and a policy for them. Next, we will modify our program for ESP32 so that it can work with the Amazon Web Services IoT Core. Then I'll show you how you can use one certificate and policy for multiple devices.",
      "target_audience": [
        "This course could be suitable for electronics engineers or amateurs interested in the Internet of Things."
      ]
    },
    {
      "title": "Master UART Design on FPGA: From Basics to Advanced Developm",
      "url": "https://www.udemy.com/course/fpga-uart-implementation-communication-protocol-series-vol1/",
      "bio": "Write a UART in VHDL for FPGA: Master Communication Protocols (Part 1)",
      "objectives": [
        "UART protocol fundamentals",
        "Learn how UART protocol works",
        "How to write UART Transceiver in VHDL language",
        "Learn to design a UART Receiver and Transmitter from ZERO"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "UART communication overview": [
          "What is UART",
          "UART and its physical layer",
          "How does UART data packet looks like",
          "How to sample the UART data packet",
          "Our UART structure design"
        ],
        "UART in VHDL": [
          "UART Transmitter",
          "UART Receiver"
        ],
        "Simulations": [
          "Receiver simulation",
          "Transmitter simulation"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Familiar what FPGA is",
        "Basic knowledge of VHDL language"
      ],
      "description": "Master UART Design on FPGA with VHDL – Communication Protocols Part 1\nThis course, taught by a professional electronic engineer specializing in FPGA development, is the first in a series dedicated to communication protocols. Whether you're new to FPGAs or an experienced developer, this course offers practical insights into designing and implementing UART (Universal Asynchronous Receiver-Transmitter) using VHDL.\nStarting with the basics, you'll learn what UART is, how it works, and its role in serial communication systems. We'll explore the UART protocol and dive into the RS232 physical layer, offering a strong theoretical foundation. No prior knowledge of communication protocols is required—I’ll guide you through every step.\nYou’ll also discover how to overcome challenges like sampling slow external signals with a fast FPGA clock. I’ll teach you step-by-step how to design a UART, including transmitter and receiver functionality, and we’ll simulate the complete system together.\nBy the end of the course, you’ll have created your own working UART in VHDL and gained a deeper understanding of serial communication protocols.\nThis course is designed for all levels and is taught by an experienced electronic and computer engineer with extensive knowledge of FPGA platforms across the industry. Start your journey into FPGA-based communication design today!",
      "target_audience": [
        "Anyone with VHDL knowledge and wants to know how to write UART Transceiver"
      ]
    },
    {
      "title": "STM32 bare metal guide for future embedded projects (part 2)",
      "url": "https://www.udemy.com/course/stm32-bare-metal-guide-for-future-embedded-projects-part-2/",
      "bio": "Learn programming of embedded devices using STM32F407VG in Embedded C without libraries only registers",
      "objectives": [
        "Universal Asynchronous Receiver-Transmitter (UART)",
        "Serial Peripheral Interface (SPI)",
        "Reading schematics of sensors (accelerometer ADXL345)",
        "Inter-Integrated Circuit (I2C)",
        "Analogue-to-Digital Converter (ADC)",
        "Digital-To-Analogue Converter (DAC)"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of C programming",
        "Basic electronics (not essential)"
      ],
      "description": "*Before enrolling, carefully read the description*\n\n\nThis is the second part of the embedded course, which was created mostly for students, but also for people wishing to start their career on this path to gain general knowledge of embedded systems.\n\n\n\n\n\nWhen starting with embedded systems, from my experience and the experience of others, the problem is that there are many unclarities when it comes to reading the documentation and schematics, and later on combining it with programming at the beginning of their studies or research.\n\n\nThis course was made exactly to bridge those gaps and give them insight how simple it is to achieve many functionalities, all by going step-by-step through the reference manual, schematics and programming the device. During the course, all the concepts will be graphically explained. I think that visual learning is the best way of learning.\n\n\nBecause this field is such that just by talking you can't reach lot, so you must show some results, at the end of every important step, an experiment will be conducted to show the proof. This can also help students or employee beginners with their projects. The device that was used in this course is the STM32F407VG discovery board.\n\n\nThe only libraries and instructions that are used in this course, are the ones that can be used on any other C compiler. Everything else is self-made. The course content is kept minimalistic.\n\n\nDuring the course you'll learn about:\n- Universal Asynchronous Receiver-Transmitter (UART)\n- Serial Peripheral Interface (SPI)\n- Inter-Integrated Circuit (I2C)\n- Analogue-to-Digital Converter (ADC)\n- Digital-to-Analogue Converter (DAC)\n\n\nI'm open to feedback on:\n- what was explained well?\n- what wasn't?\n- where to put more emphasis on?\n- is something missing?\n- what would you like to see but was not covered? (it can also be something unrelated to the given topics)\n\n\nThe feedback is optional, it's supposed to be less about me, but more about others.\nThose who decide to share their opinion, I would ask for constructive feedback, because that way I can consider it and make new courses better and more understandable for future viewers.\n\nFor the first 30-days I'm open to answering all questions regarding the course",
      "target_audience": [
        "Students and beginners to embedded systems"
      ]
    },
    {
      "title": "Visualizing Sensors Data",
      "url": "https://www.udemy.com/course/visualizing-sensors-data/",
      "bio": "Unlocking Insights and Patterns through Data Visualization Techniques",
      "objectives": [
        "learn how to collect and visualize data generated by sensors.",
        "gain insights and patterns from the collected data to inform decision-making processes.",
        "apply the skills and knowledge gained in this course to various fields, such as environmental monitoring, healthcare, manufacturing, and agriculture.",
        "develop valuable skills that are highly relevant in today's job market.",
        "understand the basics of circuit design and how to interface sensors with microcontrollers.",
        "learn how to use popular data visualization tools like Matplotlib, Seaborn, and Plotly to create interactive visualizations."
      ],
      "course_content": {},
      "requirements": [
        "basic programming skills",
        "understanding of electronics",
        "Familiarity with data visualization tools"
      ],
      "description": "Welcome to the \"Visualizing Sensors Data\" Course!\nDo you want to learn how to effectively visualize and analyze data from sensors, specifically temperature and humidity data? This course is designed to provide you with the knowledge and skills to collect, process, and visualize sensor data using a microcontroller and an ESP32 for online monitoring.\nProject Requirements:\nBasic understanding of electronics and programming concepts.\nAccess to the required components (listed below) for building the project.\nA computer for programming the microcontroller and uploading data online.\nFamiliarity with Arduino IDE for programming the ESP32 microcontroller.\nComponents:\nTemperature and humidity sensor (such as DHT11 or DHT22)\nESP32 microcontroller\nBreadboard or PCB for circuit assembly\nJumper wires for connecting components\nUSB cable for programming and powering the microcontroller\nInternet connection for uploading data online\nCircuit Diagram: We will provide you with a detailed circuit diagram that shows how to connect the temperature and humidity sensor to the ESP32 microcontroller using a breadboard or a PCB. You will learn how to properly wire the components to ensure accurate data readings and reliable performance.\nProject Explanation: Our course will guide you through the process of building a system that collects temperature and humidity data from the sensor, processes it using the ESP32 microcontroller, and uploads the data to a personal website for online monitoring. You will learn how to program the microcontroller to read sensor data, process it, and communicate with the internet using Wi-Fi.\nFurthermore, you will learn how to visualize the collected sensor data using popular data visualization libraries such as Chart.js or Plotly. You will gain hands-on experience in coding, circuit assembly, and troubleshooting. You will also learn about best practices for data visualization, including choosing appropriate chart types, customizing visualizations, and interpreting data patterns.\nBy the end of this course, you will have a solid understanding of how to collect, process, and visualize sensor data, and you will be able to create interactive and informative visualizations that help you gain insights from your sensor data. You will also have the skills and knowledge to apply the concepts learned in this course to other IoT projects or data visualization tasks.\nEnroll in this course now and unlock the power of visualizing sensor data to make informed decisions and gain insights from your environmental measurements!\nWhat You Will Learn\nLearn how to collect and visualize data generated by sensors.\nGain insights and patterns from the collected data to inform decision-making processes.\nApply the skills and knowledge gained in this course to various fields, such as environmental monitoring, healthcare, manufacturing, and agriculture.\nDevelop valuable skills that are highly relevant in today's job market.\nUnderstand the basics of circuit design and how to interface sensors with microcontrollers.\nLearn how to use popular data visualization tools like Matplotlib, Seaborn, and Plotly to create interactive visualizations.\nRequirements or Prerequisites\nBasic programming skills\nUnderstanding of electronics\nFamiliarity with data visualization tools\nWho Is This Course For\nStudents: This course can be useful for students studying various fields, such as engineering, computer science, environmental science, data science, or any other field where data visualization and analysis are necessary.\nProfessionals: Professionals working in fields like IoT, electronics, data analysis, or environmental monitoring can benefit from learning how to collect and analyze data generated by sensors.\nHobbyists: Individuals interested in experimenting with sensors and data visualization techniques as a hobby can find this course useful for gaining the necessary knowledge and skills.\nEntrepreneurs: Entrepreneurs working on IoT-related products or projects can benefit from this course's practical knowledge on working with sensors and data visualization.\nResearchers: Researchers working in various fields where data collection and visualization are critical, such as healthcare, can benefit from this course's practical knowledge.\n\n\nAbout the Instructor\nEducational Engineering Team\nTeam of Skilled Engineers Sharing Knowledge with the World\nThe Educational Engineering Team is a leading force in the Microcontroller Industry, boasting over 13 years of experience in teaching and practical projects. Their courses provide hands-on, real-world knowledge, enabling immediate application in projects and daily life. Led by Ashraf, an educator and Mechatronics engineer, the team is passionate about sharing their collective expertise. With over 250,000 students taught worldwide, Educational Engineering offers comprehensive courses, articles, and online support in various STEM fields. Ashraf's dedication to simplifying complex concepts through engaging content has garnered praise from students globally, making Educational Engineering a trusted resource for aspiring engineers and hobbyists alike.",
      "target_audience": [
        "This course can be useful for students studying various fields, such as engineering, computer science, environmental science, data science, or any other field where data visualization and analysis are necessary.",
        "Professionals working in fields like IoT, electronics, data analysis, or environmental monitoring can benefit from learning how to collect and analyze data generated by sensors.",
        "Individuals interested in experimenting with sensors and data visualization techniques as a hobby can find this course useful for gaining the necessary knowledge and skills.",
        "Entrepreneurs working on IoT-related products or projects can benefit from this course's practical knowledge on working with sensors and data visualization.",
        "Researchers working in various fields where data collection and visualization are critical, such as healthcare, can benefit from this course's practical knowledge."
      ]
    },
    {
      "title": "Master the Power of Arduino & Python: Motion Detector",
      "url": "https://www.udemy.com/course/arduino-python-email-sending-motion-detector-python/",
      "bio": "Learn how to build a real-time motion detection system using Arduino and Python— complete with data logging",
      "objectives": [
        "Design Arduino Circuits",
        "Program Arduino using Python Language",
        "Connect Python with Arduino",
        "Learn serial communication basics in Python",
        "Learn serial communication basics in Arduino",
        "Fully Control Arduino using Python",
        "Set up electronic circuits",
        "Set up the Communication protocol on Arduino",
        "Write basic applications for Arduino in Python to control basics functions",
        "Advanced Control of analog and digital inputs and outputs",
        "Set up electronic circuits",
        "Set up the Communication protocol on Arduino",
        "Write basic applications for Arduino in Python to control basics functions",
        "Advanced Control sensors and email automation using Python coding",
        "How to Integrate Arduino sensors and switches"
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Introduction",
          "Who We Are?",
          "Discussing Cross-Platform Motion Detection Concepts",
          "Quiz"
        ],
        "Hardware and Software Requirements": [
          "Hardware Components",
          "Understanding Hardware Components for Motion Detection"
        ],
        "Circuit Design": [
          "Circuit Design"
        ],
        "Arduino Coding": [
          "Arduino Coding Part1",
          "Arduino Coding Part2",
          "Quiz"
        ],
        "Python": [
          "Download and Install Python and Pyserial",
          "Python Coding",
          "Developing Python Scripts for Email Notifications"
        ],
        "Practical": [
          "Practical Application and Testing the app"
        ],
        "Recommended Python Editor": [
          "Download and Install Python Code editor",
          "Quiz"
        ],
        "Practice Test": [
          "Arduino & Python: Motion Detector"
        ],
        "Course Project": [
          "Course Project",
          "Explaining a Motion Detector Project Using Arduino and Python"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic Knowledge of Digital Electronics"
      ],
      "description": "Want to build a smart system that reacts to movement in real-time?\nThis course is your hands-on guide to creating a motion detector system that blends the hardware power of Arduino with the software flexibility of Python. You'll learn to detect motion with sensors, log activity to your computer, and even trigger alerts—all using simple, yet scalable code.\nWhether you’re into home security, automation, or want a powerful Arduino-Python integration project for your portfolio, this course delivers the skills and tools to make it happen.\nWhy Arduino + Python?\nArduino gives you reliable, low-level hardware interaction. Python lets you process data, log events, and build interactive interfaces. Combining both gives you full-stack control—hardware to desktop.\nThis course teaches:\nHow to use a PIR motion sensor with Arduino\nHow to send motion data from Arduino to Python\nHow to log data and trigger real-time alerts on your PC\nWhat You Will Learn\nSetting up and wiring a PIR motion sensor with Arduino\nWriting Arduino code to detect and report motion events\nEstablishing serial communication between Arduino and Python\nCreating a Python script to read data from Arduino\nLogging events with timestamps and custom messages\nBuilding a simple notification or alert system in Python\nCustomizing the detection range and sensitivity (hardware & software)\nReal-world use: security system, presence monitor, automation trigger\nWhat You’ll Build\nA fully functional Arduino-powered motion detector\nA Python-based desktop dashboard that receives live data\nA real-time alert system for motion detection\nA motion activity log with timestamps saved to a local file\nWho This Course Is For\nBeginners wanting a practical, fun, and useful Arduino + Python project\nEngineering and computer science students\nDIYers and tech enthusiasts building smart home systems\nAnyone curious about hardware-software integration\nTestimonials:\n“The perfect blend of electronics and software. I actually use this for motion alerts in my workshop!” — Carlos V.\n“This made Arduino-Python communication so easy. Loved the logging system!” — Mira D.\nBonus Content:\nAdvanced Troubleshooting Guide: Tackle common issues that arise during the setup.\nIntegration with Other Devices: Learn how to connect your motion detector with other smart devices at home.\nReady to Dive In?\nThis isn't just another course; it's a gateway to a world where hardware meets software, creating wonders. Enroll now and embark on a technological journey that's both fun and enlightening.\nRequirements\nBasic familiarity with Arduino and Python\nArduino Uno (or similar), PIR sensor, USB cable\nA computer with Python and the pyserial library installed\nNo prior experience with serial communication needed—we cover it step by step\nInstructor Bio\nThe Educational Engineering Team, led by veteran instructor Ashraf, is known for bridging hardware and software learning. With 250,000+ students trained, they specialize in making microcontroller projects accessible and impactful. This course reflects their deep knowledge of embedded electronics and cross-platform coding, designed to help you build real systems, not just theory.\nFAQ\nQ: Can I use other sensors besides PIR?\nA: Yes—you’ll learn the framework to adapt it for ultrasonic or IR sensors too.\nQ: Do I need advanced Python skills?\nA: Not at all—basic scripting is enough, and we walk you through every step.\nQ: Will I get a certificate?\nA: Yes, a Certificate of Completion is awarded when you finish the course.\nQ: Can this be used for a school project?\nA: Absolutely—it's perfect for academic or portfolio projects.\nQ: Does this course work on Windows, macOS, or Linux?\nA: Yes—the code runs cross-platform with a standard Python setup.\nJoin Now – Build Your Motion Detector with Arduino & Python Today",
      "target_audience": [
        "Engineering Students - Electronics, Electrical & Computer Science",
        "High School Science Students",
        "Electronic Geeks, Hobbiest & Art Students",
        "Arduino Geeks"
      ]
    },
    {
      "title": "SD Card Interfacing with PIC Microcontroller",
      "url": "https://www.udemy.com/course/pic-microcontroller-sd-card-interfacing-pic-microcontroller-sd-card/",
      "bio": "You will enter SD Card World, Write Anything and save it to your SD Card without having to worry about size",
      "objectives": [
        "know how SD Card function and learn about it’s internal structure",
        "Write code for SD Card",
        "Embed code in the design",
        "Program PIC Microcontroller like a champ",
        "Understand the principles of programming PIC Microcontroller",
        "Connect your PIC Microcontroller to SD Card and control it.",
        "Understand basic principles in electronics design.",
        "know how the SD Card function and learn about its internal structure.",
        "get familiar with interfacing SD Card to PIC Microcontroller.",
        "know how to store files to SD Card.",
        "know how to read and write data to SD Card.",
        "Write a C program to create files, store data, read data and manipulate data.",
        "Write a C program to open files and edit data stored on SD Card."
      ],
      "course_content": {
        "Introduction & Getting Started": [
          "Section Intro",
          "Introduction",
          "Planning Data Logging with SD Card and PIC",
          "Who We Are?",
          "Summary",
          "Reading Material"
        ],
        "Memory Card": [
          "Section Intro",
          "What is Memory Card",
          "Quiz",
          "Different Memory Cards types and sizes",
          "Technical Properties of Memory Cards",
          "SD Card Pin Configuration",
          "Quiz",
          "SD Card Wiring Explained",
          "SD Card Power Consumption",
          "Understanding Memory Cards and SD Card Interfacing",
          "Summary",
          "Reading Material"
        ],
        "Hardware and Software Requirements": [
          "Section Intro",
          "Hardware and Software Requirements",
          "Summary",
          "Reading Material"
        ],
        "SD Card MikroC Library": [
          "Section Intro",
          "Introduction to SD Card MikroC Library",
          "SD Library Functions Explained",
          "Quiz",
          "Summary",
          "Reading Material"
        ],
        "Circuit Design": [
          "Section Intro",
          "Circuit Design and Wiring",
          "Circuit Schematic",
          "Summary",
          "Reading Material"
        ],
        "Coding": [
          "Section Intro",
          "Coding",
          "Library and Functions",
          "Writing and Managing Files on SD Cards",
          "Summary",
          "Reading Material"
        ],
        "Downloading and Installing Software": [
          "Section Intro",
          "Download and Install Proteus Software",
          "Download and Install MikroC Software",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Memory Cards and SD Card Integration with MikroC"
        ],
        "Course Project": [
          "Course Project",
          "PIC-Based SD Card Data Logger Review"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Download and Install Circuit Design Software",
        "Download and Install C PIC Programming Software",
        "Download The course Material in PDF and Print them if possible",
        "Students must have the knowledge of basic electronics"
      ],
      "description": "Welcome to this course.\nSD Card is a device used to store information on almost all devices.\nDo you want to Go to the next level in Storing data without a size limit?\nWe are announcing our brand-new course SD Card Interfacing with PIC Microcontroller\nHD Content that will take you in an informative journey to not only master the coding of SD Card Interfacing with PIC Microcontroller but also learn the very basics of SD Card internal structure, how it works, it’s pinout, its wiring diagram, and how your code can be used to read and write data easily using PIC Microcontroller.\nWhy you should take this course?\nThis course teaches you how to use a SD card by interfacing it with a PIC microcontroller\nYou will enter SD Card World, Write Anything and save it to your SD Card without having to worry about size\nVideos included in the course will teach you how to write a program using a PIC microcontroller and interfacing it with an SD card\nYou will learn about the basics of electronics, programming, and digital logic circuits\n\n\nHello and welcome to this new course in which we are going to talk about SD Card interfacing with PIC microcontroller.\nThis is Ashraf from Educational Engineering Team and in this course, we will first talk about memory cards, the technical capabilities of memory cards, and different types available and how to tell the difference between each of them.\nWhat is the best one that you can use for interfacing with PIC microcontroller.\nWe will also talk about the card pin configuration. And we will talk about each pin. What it does and how you can connect it.\nWe will take on the MikroC Pro library for PIC multimedia card interfacing using the MikroC development environment, an environment that uses C language for programming PIC microcontroller they provide a library that we can easily use to interface SD card with PIC microcontroller.\nSo in no time, you will be able to write and read data to and from any SD Card.\nWe will also talk about the external dependency of a Micro-SD card library and we will explain each function how to use it, what it does and where to place it in your code.\nWe will explain the functions and the libraries required for making this happen and then we will take a practical example. in addition to how to interface our PIC  microcontroller with the card and why.\nThen we will code or write a MikroC code to read data and write data to SD card and create some files.\nSo at the end of this course, you will be able to easily connect any SD card to the microcontroller and start using it for storing data.\n\n\nIf you take this course now, you can count on these three results in just a few hours!\n\n\n>>> Continues Updates <<<",
      "target_audience": [
        "Anyone with a curiosity for making electronics",
        "Anyone interested in Interfacing SD Card with PIC Microcontroller",
        "PIC Microcontroller Geeks",
        "Engineering students",
        "Technology hobbyists",
        "Computer programmers"
      ]
    },
    {
      "title": "RTL Fundamentals in System Verilog",
      "url": "https://www.udemy.com/course/rtl-fundamentals-in-system-verilog/",
      "bio": "Foundational Course that prepares you for RTL Designs of increasing complexity",
      "objectives": [
        "Have a clear understanding of the Register Transfer Level (RTL) abstraction for Digital Hardware Designs",
        "Learn the Synthesizable subset and Rules for describing RTL in System Verilog",
        "Hands on simulation and synthesis of parameterized RTL example for Combinational Logic",
        "Hands on simulation and synthesis of parameterized RTL example for Sequential Logic",
        "Structured RTL Design practices to converge on functional code quickly"
      ],
      "course_content": {},
      "requirements": [
        "Background in Digital Hardware Design (Electrical or Computer Engineering)",
        "Exposure to an HDL (Verilog or VHDL) would be helpful"
      ],
      "description": "Learn the foundations of RTL design using SystemVerilog in a bootcamp-style course. Code, Simulate and Synthesize RTL in your own sandbox environment. Short to the point videos (~3 minutes max) help you absorb the course content easily.\nDon't settle for training that barely scratches the surface, offering only a shallow understanding of syntax and basic examples. Our courses are designed to dive deep into the world of RTL (Register Transfer Level) design, providing you with a thorough understanding of its origins and core principles. We focus on teaching you how to write well-structured, efficient RTL code, avoiding the pitfalls of endless, tedious iterations. Our curriculum is built around well-known design patterns and non-trivial examples that closely resemble real-world challenges, ensuring that what you learn is directly applicable in the industry.\nEach course is carefully crafted to build upon the previous one, gradually increasing your confidence and capability to create industry-strength RTL designs with minimal errors. We don’t just teach you the syntax—we bring it to life through practical, hands-on examples. You'll be guided step-by-step in setting up your own local sandbox environment, where you can simulate and synthesize your code, moving beyond the limitations of proprietary tools.\nMoreover, every piece of RTL code you write will be accompanied by a test bench to verify functionality. We take it even further by teaching you how to check the synthesized netlist using gate-level simulation. This comprehensive, hands-on approach is what truly sets our courses apart from anything else available on the market.",
      "target_audience": [
        "Hardware Engineers (EE, CE or CS) who want to enter the Chip Design field",
        "Practicing FPGA and ASIC engineers who want to build on their existing skills"
      ]
    }
  ]
}