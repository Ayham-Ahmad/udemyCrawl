{
  "courses": [
    {
      "title": "Azure Serverless - Hands on Learning!",
      "url": "https://www.udemy.com/course/azure-serverless-hands-on-learning/",
      "bio": "Build secure serverless applications with Azure Function, Cosmos DB, API Management, Azure ADB2C and Azure Blob Storage",
      "objectives": [
        "Develop and deploy a serverless end-to-end web application on Azure from scratch",
        "Design and implement serverless architecture to solve real world use cases",
        "Learn about Azure's core serverless services offering",
        "Master Azure Functions, API Management Service, CosmosDB, Azure Blob Storage and Azure ADB2C from the ground up for serverless deployment",
        "Store and retrieve data with Cosmos DB",
        "Run code on-demand in the cloud with Azure Functions",
        "Build, secure and publish your REST APIs without managing any servers using Azure API Management Service",
        "Add user authentication and authorization to serverless applications using Azure ADB2C",
        "Host SPA (React JS) without managing any servers",
        "Learn serverless best practices"
      ],
      "course_content": {},
      "requirements": [
        "Very basic understanding of the Microsoft Azure would be advantageous",
        "A free or paid subscription to Microsoft Azure",
        "Excitement to learn Microsoft's constantly growing cloud platform!!!"
      ],
      "description": "Serverless computing is the future of Cloud Computing and Serverless is the tool that you need to grow your career!!!\nLearn Azure serverless services with this hands-on, project-based course and truly internalize some highly valuable skills in the world of technology. We will build a serverless web application from start to deployment on the web using Azure services - and with no standalone services or server instances at all! Azure will add more server power when your application needs it, and will take care of scaling back down when you don't. And you only pay for what you use.\n\n\nBuilding a serverless app using Azure services is a great introduction to the core services Azure offers. As you build the application, you'll learn and use the following Azure services:\nAzure Functions - Run code on demand that scales automatically.\nAPI Management - Create and publish secure APIs\nCosmos DB - For storing and retrieving data at scale.\nAzure ADB2C - For managing users, account creation, and logins securely.\nAzure Blob Storage - Host Single Page Applications (React JS) by enabling static website hosting.\n\n\nSection Outline:\nSection 1 – Getting Started: We will get understanding of the course objectives, basics of cloud, Azure & Serverless and how the course is structured\nSection 2 - Azure Serverless Services and Sample Use Cases: We will look at various serverless services offered by azure and a few real world serverless architecture use cases\nSection 3 - Course Project Overview: We will understand the course project architecture, look at the final course project demo and download the project code\nSection 4 - Storing Data in Cosmos DB: We will introduce Cosmos DB which is Azure's multi-model database offering and create database for our course project\nSection 5 - Compute with Azure Functions: We will learn and create event driven serverless functions in Azure.\nSection 6 - Creating API using API Management: We will create and publish secure API for the course project. This is the base for you to start implementing a complicated API!\nSection 7 - Hosting Serverless UI on Azure Blob Storage: We will use Azure Blob storage container to host our static website in serverless manner and understand security policies to enable it.\nSection 8 - Securing Serverless Applications: We will implement user authentication (sign up/sign in) for our course project using Azure ADB2C service.\nSection 9 - Wrap Up: We will look at pointers to continue your learning adventures of Azure and other cloud technologies.\n\n\nThis Course Also Comes With:\nLifetime Access to All Future Updates\nLinks to interesting articles, and lots of good code to base your next template onto\nA 30 Day \"No Questions Asked\" Money Back Guarantee!\n\n\nAlthough this course isn't targeting any specific Azure certification exam, you'll leave it with a great foundation of Azure knowledge that will begin to prepare you for them.\nServerless is the way of future and you can get started today and become an expert. Let's have some fun and build some awesome stuff in cloud together!",
      "target_audience": [
        "Anyone who wants to learn about highly scalable and cost-efficient serverless applications",
        "Developers who want to learn hands on about Azure's serverless services",
        "Solutions architect who want to understand how serverless apps are architected, built and deployed using the best practices on Azure",
        "Every developer or architect who have worked on other cloud platforms, but want to explore Azure's offerings in serverless"
      ]
    },
    {
      "title": "Spring 6 & Spring Boot 3 for Beginners (Includes 7 Projects)",
      "url": "https://www.udemy.com/course/learn-spring-boot/",
      "bio": "Spring Core 6, Spring Boot 3, Spring Security 6, REST API, Spring MVC, WebFlux, Hibernate, React JS, Thymeleaf, Docker",
      "objectives": [
        "Build 7 Projects using Spring Boot, Spring Security, Spring MVC, Spring Reactive Programming, JPA/Hibernate, React JS, JavaScript, Thymeleaf, MySQL database",
        "Spring Framework Core Features - Spring IOC Container, Java-based configuration, Annotation-based configuration, Dependency Injection, etc",
        "You will learn fundamentals of Spring Framework from zero, no previous experience required",
        "Learn Spring Boot fundamentals and features - Spring Boot Internals, Auto Configuration, Spring Initializr and Starter Projects",
        "Learn REST API Fundamentals - REST API, Resource, Sub-resource, URI, HTTP methods, HTTP status codes",
        "Learn REST API Fundamentals - How to Design REST APIs",
        "Learn REST API Fundamentals - Best Practices",
        "Learn REST API Differences - GET vs POST, POST vs PUT, PUT vs PATCH, REST vs SOAP, and REST vs GraphQL",
        "Learn building Spring Boot REST APIs",
        "Learn Spring Data JPA fundamentals",
        "Build User Management Project using Spring Boot, Spring Data JPA, and MySQL database",
        "Learn using DTO Pattern, Mapping Libraries",
        "Learn Exception Handling, Validation, Spring Boot Actuator, Transaction Management in Spring Boot App",
        "Build Todo Management Project using Spring Boot 3, Spring Data JPA, IntelliJ IDEA, Maven and MySQL Database",
        "Secure REST APIs using Spring Security 6, Spring Boot 3 and MySQL Database",
        "Build Reactive CRUD REST APIs using Spring WebFlux and Reactive MongoDB",
        "Learn how to write Integration Tests for Reactive CRUD REST APIs",
        "Learn Spring MVC Concepts",
        "Learn Thymeleaf Fundamentals (Thymeleaf Crash Course)",
        "Learn to build a REAL-TIME web application (Student Management System) using Spring MVC, Spring boot, Spring Data JPA, Thymeleaf and MySQL database.",
        "Learn How to Create Spring Data JPA Repositories for JPA Entities",
        "Build Registration and Login System Web Application using Spring MVC, Spring boot, Spring Data JPA, Thymeleaf and MySQL database.",
        "Dockering Spring Boot Application Step by Step",
        "Dockering Spring Boot MySQL CRUD Application Step by Step",
        "Dockering Spring Boot MySQL CRUD Application Step by Step using Docker Compose",
        "25+ Spring and Spring Boot Annotations for Interviews",
        "Building Simple Banking Application",
        "Learn Full-Stack Web App development using Spring Boot and React JS (Employee Management System project)",
        "Learn Java Functional Programming (Lambda, Functional Interfaces, Method References, Optional, Default and Static methods in Interface)"
      ],
      "course_content": {},
      "requirements": [
        "Java",
        "No Spring framework experience is needed, I will teach you all the Spring framework core features",
        "No Spring Boot experience is needed, I will teach you everything about Spring boot and build the projects",
        "No Docker experience is needed, I will teach you how to docker Spring Boot Applications from the scratch",
        "It's great if you are little bit familiar using IntelliJ IDEA",
        "No Thymeleaf experience is needed, I will teach you Thymeleaf fundamentals to build Spring MVC web applications"
      ],
      "description": "Disclaimer:\n\"This course requires you to download Docker Desktop from the official Docker website. If you are a Udemy Business user, please check with your employer before downloading software.\"\n\n\nIn this course, you will learn Spring Framework Core 6, Spring Boot 3, REST API, Spring MVC, WebFlux, Spring Security, Spring Data JPA, Docker, React JS, Thymeleaf, IntelliJ IDEA, Maven, Full-Stack Web App and Building 7 Projects.\n\n\nNo Spring framework experience is needed. I will teach you all the Spring framework core features so that you will understand Spring Boot in depth and how it works behind the scenes.\n\n\nNew advanced learning sections added:\n- Learn Full-Stack Web App development using Spring Boot and React JS (Employee Management System project)\n- Learn Reactive programming in Java using Spring Webflux.\n- Learn functional programming in Java\n\n\nWhat will you learn?\n- Learn Spring IOC Container with Examples\n- Learn Java-based configuration with Examples\n- Learn Annotation-based configuration with Examples\n- Learn Spring core annotations with Examples\n- Learn Dependency Injection\n- Learn Constructor, Setter, and Field Dependency Injection\n- Learn Spring bean scopes, life cycle, and annotations\n- Build REST APIs using Spring Boot\n- Learn Spring Data JPA fundamentals\n- Build User Management Project using Spring boot, Spring Data JPA, and MySQL database.\n- Using DTO (Data Transfer Object) Pattern\n- Using Mapping Libraries to Map Entity to DTO and Vice Versa\n- Exception Handling in Spring Boot Application\n- Validation in Spring Boot Application\n- Spring Boot Actuator (Production-Ready Feature)\n- Transaction Management with Spring Boot and Spring Data JPA\n- Build Real-Time Search REST API\n- Build Reactive CRUD REST APIs using Spring WebFlux and Reactive MongoDB\n- Integration Tests for Reactive CRUD REST APIs\n- Learn Spring MVC Concepts\n- Learn Thymeleaf Fundamentals (Thymeleaf Crash Course)\n- Learn to build a real-time web application (Student Management System) using Spring MVC, Spring Boot, Spring Data JPA, Thymeleaf, and a MySQL database.\n- Learn Form and Bean Validations using Hibernate Validator\n- Learn how to use Bootstrap CSS 5 Framework for styling web pages.\n- Learn how to connect Spring boot application with MySQL database\n- Learn how to use three-layer architecture - controller, service, and repository/DAO layers.\n- Learn how to Create JPA entities\n- Learn how to create Spring Data JPA repositories for JPA Entities\n- Learn how to secure Web applications using Spring Security\n- Learn how to use Spring Security's Authentication and Authorization\n- Learn how to implement Registration, Login, and Logout features\n- Building a simple Banking Application\n- Dockering Spring Boot Application Step-by-Step\n- Dockering Spring Boot MySQL CRUD Application Step by Step\n- Dockering Spring Boot MySQL CRUD Application Step by Step using Docker Compose\n- Learn Full-Stack Web App development using Spring Boot and React JS (Employee Management System project) // new sections\n- 25+ Spring and Spring Annotations for Interviews\n- Learn functional programming in Java // new sections added\n\n\nWhat is Spring Boot?\nSpring Boot is an extension of the Spring framework that eliminates the boilerplate configurations required to set up a Spring application.\nSpring Boot is an opinionated framework that helps developers build Spring-based applications quickly and easily. Its main goal is to quickly create Spring-based applications without requiring developers to write the same boilerplate configuration repeatedly.\n\n\nWhat is Spring MVC?\nSpring MVC is a popular module in Spring Framework. It is used to develop web applications and RESTful web services.\nSpring MVC is a web framework because it provides all the required components to develop a web application.\nThe Spring MVC framework provides a Model-View-Controller (MVC) architecture and ready components for developing flexible and loosely coupled web applications.\n\n\nWhat is Thymeleaf?\nThymeleaf is a modern server-side Java template engine for web and standalone environments. It can process HTML, XML, JavaScript, CSS, and even plain text.\nThe main goal of Thymeleaf is to provide an elegant and highly-maintainable way of creating templates.\nIt's commonly used to generate HTML views for web applications.\nThymeleaf is a very popular choice for building UI, so we will use it to build the view layer in the Spring MVC web application (Blog App).\n\n\nWhat is React JS?\nReact is an open-source JavaScript library for building user interfaces.\nReact is a project created and maintained by Facebook.\nReact has more than 100 thousand stars on GitHub and a huge community behind it.\nReact has become increasingly popular among developers and is also one of the most sought-after skill sets by companies right now.\nReact has a component-based architecture. This lets you break down your application into small encapsulated parts, which can then be composed to make a more complex UI.\nReact will make it painless for you to create complex UIs by abstracting away the difficult parts.\nReact will handle efficiently updating and rendering just the right components in your application when your data changes.\nDOM updates, which is one of the more expensive operations, are handled gracefully in React.\n\n\nTechnologies and Tools Used:\n- Java 17\n- Spring Boot 3\n- Spring Framework 6\n- Spring MVC 6\n- React Js 18+\n- JavaScript\n- Thymeleaf\n- Bootstrap CSS 5 Framework\n- Spring Security 6\n- Spring Data JPA\n- Hibernate Framework 6\n- Spring WebFlux\n- MySQL Database\n- Maven\n- IntelliJ IDEA\n- Docker\n\n\nSome Amazing Reviews from the Students for this Course:\n\n\n\"Highly recommend this course!! The best course have ever seen on Spring and Spring Boot. Tutor is re-iterating same concepts multiple times which provides more clarity on the concept. Clean explanation both on interview point of view and learning point of view. Thought to take in28minutes course, but fortunately i availed this course and no regrets!! Concepts were clear so that i didnt have to refer external sources for deeper understanding. saved lot of my time and effort. Wondering why this is not opted by many students!!! Great Job Sir...Keep up the good work.\"\n\n\n\" You are the best tutor in my life till now, and you give so much brightness for students life.\"\n\n\n\" I strongly recommend this course for beginners. I thoroughly enjoyed this course. Good support by the trainer for doubt resolving.\"\n\n\n\" If you are new to programming you must buy Ramesh's courses because he explains and repeats everything in the learning process and he uses not outdated technologies as others. This is really amazing for learning. I know what I'm talking about, I bought all the top Spring courses, I can compare it. A big plus of Ramesh cources is, if you have any questions, Ramesh himself will answer them very quickly. Don't hesitate.\"\n\n\n\"I have like 4-5 courses in spring / spring boot. I think, this one is best one to start with. Because others I cant understand much, get tired of them, cant go so deep trying to understand what is going on. But this Course, goes step by step, you understand concepts., you practise them. And there is no gaps that you have to figure yourself. I think very beginner friendly! I suggest everyone\"\n\n\n\"Excellent Explanation and great knowledge instructor. one of the best course on udemy.\"\n\n\n\"Beginner Friendly Course, Instructor Knows What's He Teaching Very Well.\"\n\n\n\"A perfect course to gain lots of knowledge and hands-on experience on spring framework & It's deep and detailed (+ beginners friendly). Thoroughly enjoyed the course and looking forward to the next course.\"\n\n\n\"Just started the course, the spring core concepts spring ioc container and dependency injection is nicely explained with examples. Amazing course and recommended for beginners and professionals.\"\n\n\n\"Great course as usual from Ramesh, Springs 6 is the lastest version and this course has a lot of great information.\"\n\n\n\"Excellent course for both beginners and expert java developers who never used Spring. Strongly recommended!\"\n\n\n\"Great work sir, This is really good course. Each and Every module of this course is helpful. If anyone at beginner level or know little bit about spring and spring boot, I would say you should definitely purchase this course.\"",
      "target_audience": [
        "This course is beginners who want to learn and master Spring Framework 6 and Spring Boot 3 from the scratch."
      ]
    },
    {
      "title": "Redux Saga with React: Fast-track Redux Saga intro course",
      "url": "https://www.udemy.com/course/redux-saga/",
      "bio": "Redux Saga intro course - QUICKEST way to understand Sagas. Get started with Redux Saga in React + Redux saga projects.",
      "objectives": [
        "Increase your value as a React developer.",
        "Understand key concepts behind Redux Saga and begin working with it within your own projects.",
        "Learn how Redux Saga fits into a front-end single page application.",
        "Learn the basics of Redux Saga to call an API and update your Redux State."
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of React, Redux, and npm"
      ],
      "description": "** Course Updates **\nRedux Saga Cheat Sheet - a new Redux Saga Cheat Sheet with example use cases has been included as part of the course so you know what keywords or saga effects to use, and when to use them.\nError handling within redux sagas.\n\n\nDo you want to greatly improve your ability and increase your value as a React or front end web developer?\nRedux Saga is the perfect framework for this, and this fast-track redux saga course will help you achieve that!\nPlease note: that while this course contains lectures on writing redux actions / reducers and React components, these lectures are there for the sole purpose of seeing the thought process behind implementing Redux Saga in a real-world app. The lectures that cover coding Redux actions / reducers and React components offer minimal guidance as it's assumed you already have basic knowledge of these frameworks. This is a course on Redux Saga and not on Redux or React.\n\n\nRedux saga is a library that aims to make application side effects, like data fetching / calling an API, easier to manage, more efficient to execute, and better at handling failures.\n\n\nRedux saga is an impressively clean way to separate logic to call API endpoints and update your redux state based on redux actions. The redux saga library's sagas are implemented as Generator functions that yield objects to the redux-saga middleware. The yielded objects are a kind of instruction to be interpreted by the middleware. When a Promise is yielded to the middleware, the middleware will suspend the Saga until the Promise completes. Once the Promise is resolved, the middleware will resume the Saga, executing code until the next yield.\n\n\nThe control that redux saga brings is way beyond any other libraries, such as redux thunk. You have full control of how redux sagas are called, when they're called, and the type of work they do, as well as how they influence the redux store.\nIn this fast-track introductory course, you will learn:\nHow redux saga fits in to a front end single page application, using React and Redux.\nWhat redux sagas are.\nHow to query an API with redux saga - and deal with the response.\nHow to set up a redux saga to listen for dispatched redux actions and the various ways to set up redux saga to listen for dispatched actions.\nActually dispatch redux actions from a redux saga and update your redux application state.\nLearn key redux saga concepts and patterns such as take, takeEvery, takeLatest, fork, put, call as well as blocking and non-blocking calls.\nLearn some ES6 syntax and learn about Generator functions in Javascript.\nYou might've used redux-thunk before to handle your data fetching - after taking this course I'm confident you'll switch to using Redux Saga for your future projects!\n\n\nWhat other students are saying about this course:\n5/5 stars - \"i found the course to be great.. I'm building an application at work which was using Redux-thunk and using what Tom has taught in the course I have remove Redux-Thunk in favour of Redux-Saga and clean up a lot of code. Another reason i like this course as it was only about Redux-Saga. I didn't have watch 5hrs of React & Redux just to get to the part about Redux-Sagas. It was only an afternoon watching and following along and now I feel that I understand Redux-Saga enough to actually use it in a application and know what I'm doing Thanks Tom\" - Stefen Hasselberg\n\n\n5/5 stars - \"This course is exactly what I needed. I hadn't used redux saga before and recently inherited a project that uses it and found it difficult to understand what was going on. This course has helped me a lot in understanding the basics of redux saga - the lecture on javascript generators and the cheat sheet is super helpful - especially the examples in the cheat sheet of when to use certain effects. Overall a great introduction to redux saga. Thanks Tom!\" - Carol Emma\n\n\n5/5 stars - \"So far, very clear and concise explanations with a nice initial overview of the redux-saga process. Look forward to the rest of this course.\" - Douglas Hanson\n\n\n5/5 stars - \"Great starting point for learning redux-saga from scratch. Haven't finished yet, but so far I'm convinced I'll be using saga for future projects. I'm now almost at the end of this abbreviated course, and I'd recommend for everyone who uses Redux by far. It's very well done.\" - Steve Bailey",
      "target_audience": [
        "React developers who want to increase their value and fast-track their way to learning more advanced front-end patterns using Redux Sagas."
      ]
    },
    {
      "title": "Laravel 8 PHP Framework A - Z Build Professional Ecommerce",
      "url": "https://www.udemy.com/course/laravel-framework-build-professional-ecommerce/",
      "bio": "In This Course, You Will Learn Laravel 8 Fundamentals and Build Two Different Ecommerce with lots of Advance Features",
      "objectives": [
        "Capable With Laravel 9",
        "Create Complete Project with Laravel 6",
        "Updated with Laravel 8",
        "Multiple Language Option",
        "Order Tracking System",
        "Stock Management System",
        "User Role Management",
        "Laravel Socialite",
        "Product Return Order",
        "Product Apply Coupon",
        "Facebook Comment System",
        "Product Search Option",
        "Product Discount Price",
        "Buy and Get One Product",
        "Online Payment Getway System",
        "Product Mailing System",
        "Product Reports System",
        "Product Wishlist",
        "JWT & Laravel Passport",
        "Site Contact Page Form",
        "Site Setting Option",
        "Site SEO",
        "Product Add to Cart",
        "Multiple CRUD Function",
        "Image Upload System",
        "Adding Professional Theme for Backend",
        "Adding Professional Theme for Frontend",
        "Laravel 8 Multi Auth with Jetstream Fortify",
        "Laravel 8 A-Z Basic Fandamentals"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - What You Will Build",
          "Welcome to the Course",
          "What is MVC and Its Benefits",
          "Where You Get All Files and Source Code",
          "Excise File for Download",
          "Why Laravel Frameworks",
          "Laravel Features",
          "Course and Development Prerequisite"
        ],
        "Laravel 9 Basic Foundation with Complete Website (Updated)": [
          "Introduction What We will Create",
          "Downloadable Resource for this Section.",
          "Essential Environment Setup",
          "Laravel 9 Installation",
          "Discuss on Laravel Folder Structure",
          "What is MVC and Its Benefits",
          "What is Route",
          "Laravel Routes",
          "Laravel Blade Syntax",
          "How to Make Controller And Get Url Request Part 1",
          "How to Make Controller And Get Url Request Part 2",
          "Middleware"
        ],
        "Laravel 9 Breeze Authentication Setup": [
          "Laravel 9 Breeze Authentication install",
          "Discuss on Laravel Breeze File Structure",
          "Forgot Password & Password Reset",
          "Email Verify in Laravel",
          "Changing our Logo Component",
          "Logging in with Username"
        ],
        "Admin Panel Setup With Custom Theme": [
          "Project All Themes",
          "Admin Panel Setup Part 1",
          "Admin Panel Setup Part 2",
          "Admin Panel Setup Part 3",
          "Admin Logout Option",
          "Customize Register Page",
          "Customize Login Page",
          "Customize Forget Password Page",
          "Admin Profile & Image Update Part 1",
          "Admin Profile & Image Update Part 2",
          "Admin Profile & Image Update Part 3",
          "Admin Profile & Image Update Part 4",
          "Admin Profile & Image Update Part 5",
          "Adding Toster In For View Message",
          "Display Toster Message in Login and Logout",
          "Admin Profile Change Password Part 1",
          "Admin Profile Change Password Part 2",
          "Take a Backup"
        ],
        "Frontend Template Setup": [
          "Frontend Template Setup Part 1",
          "Frontend Template Setup Part 2"
        ],
        "Backend Home Page Slider Setup": [
          "Backend Home Page Slider Option Part 1",
          "Backend Home Page Slider Option Part 2",
          "Install Image intervention Package",
          "Backend Home Page Slider Option Part 3",
          "Frontend Home Page Slider"
        ],
        "Backend About Page Setup": [
          "Backend About Page Setup Part 1",
          "Backend About Page Setup Part 2",
          "Frontend About Page Show Data Part 1",
          "Frontend About Page Show Data Part 2"
        ],
        "Multi Image Setup": [
          "Backend Add Multi Image in About Page Part 1",
          "Backend Add Multi Image in About Page Part 2",
          "Backend Add Multi Image in About Page Part 3",
          "Backend Add Multi Image in About Page Part 4",
          "Backend Add Multi Image in About Page Part 5",
          "Frontend Show Multi Image"
        ],
        "Project Portfolio Setup": [
          "Backend Portfolio Page Setup Part 1",
          "Backend Portfolio Page Setup Part 2",
          "Backend Portfolio Page Setup Part 3",
          "Backend Portfolio Page Setup Part 4",
          "Backend Portfolio Page Setup Part 5",
          "Frontend Portfolio Show Setup Part 1",
          "Frontend Portfolio Show Setup Part 2"
        ],
        "Project Blog Page Setup": [
          "Backend Blog Category Setup Part 1",
          "Backend Blog Category Setup Part 2",
          "Backend Blog Category Setup Part 3",
          "Backend Blog Page Setup Part 1",
          "Backend Blog Page Setup Part 2",
          "Backend Blog Page Setup Part 3",
          "Backend Blog Page Setup Part 4",
          "Backend Blog Page Setup Part 5",
          "Backend Blog Page Setup Part 6",
          "Backend Blog Page Setup Part 7",
          "Frontend Blog Show Setup Part 1",
          "Frontend Blog Show Setup Part 2",
          "Frontend Blog Show Setup Part 3",
          "Frontend Blog Show Setup Part 4",
          "Frontend Blog Show Setup Part 5"
        ]
      },
      "requirements": [
        "You have to know basic PHP",
        "OOP (Basic)",
        "Basic HTML, CSS, Bootstrap",
        "Local Server : Xampp/Wampp/Vertrigo/Mamp",
        "Text Editor/IDE: Sublime Text, Visual Studio Code, Netbeans, PHPStrom, Atom etc"
      ],
      "description": "Capable With Laravel 9\nThis course is now updated with Laravel 8.\nBuild Two Different eCommerce Project.\nOne of the Best Laravel 8 Framework Course on Udemy.\nLaravel is an open-source PHP framework, which is robust and easy to understand. It follows a model-view-controller design pattern. Laravel reuses the existing components of different frameworks which helps in creating a web application. The web application thus designed is more structured and pragmatic.\n\n\nWhy We Should Learn Laravel ?\nLaravel is a first development life cycle and less code functionality\nit's easy to learn\nmaking web applications faster\nconfiguration error and exception handling\nautomation testing work.\nURL Routing Configuration is very high in Laravel.\nScheduling tasks configuration and management\nIt has a huge community\nUnlimited resource.\nMost importantly it's very easy to get a job if you have Laravel skills.\nWhat is your benefit ?\nAs i told you this complete project course which beings you to Beginner to Advance level by creating complete most advanced Ecommerce Project. You will able to understand how to complete one project, how to handle project bugs, Core structures of MVC. This complete project will help you to get a job with this new skill. You will be able to start work for your client. Add this project in your profolio and university assignment And most importantly you will get my support with in 24 hours. If you have any issues just let me know about this i will be in your touch.\n\n\nWhat is the Best Part of this Course?\nCreate Complete Ecommerce Project with Laravel 6\nGet a Deep Understanding of Laravel 6\nLaravel User Authorization\nMultiple Language\nOrder Tracking\nStock Management\nUser Role Management\nSocialite\nReturn Order\nApple Coupon\nFacebook Comment\nProduct Search\nChange Password Option\nProduct Discount Price\nOnline Payment Getway System\nMailing System\nReports System\nProduct Wishlist\nJWT & Laravel Passport\nContact Page Form\nSite Setting\nSite SEO\nProduct Add to Cart\nand much more functions ..\nCOURSE UPDATED Version One : Laravel 8. [04 Nov 2020]\nCOURSE UPDATED Version Two : Laravel 8. [13 May 2021]\nThere have Two new Section is added\nLaravel 8 A-Z Basic Fandamentals with Complete Dynamic Web Project\nLaravel 8 Multi Auth with Jetstream Fortify and Livewire.\n\n\nThis course you will not just learn you actually doing it. Learn and apply this on live project with me.\nSound Great right?\n---------------------------------------------------------------------------------------------------------------------\nClick the \"Enroll Now\" button at the top right now!\n\nI am excited to see you in the course!\nSincerely,\neasy Learning",
      "target_audience": [
        "People looking for web programming jobs should take this course",
        "Students who want to take their PHP skills to another level should take this course",
        "This course is for beginners to advanced laravel developers who want to increase their skills",
        "University Project Assignment",
        "Who want to become Laravel Developer."
      ]
    },
    {
      "title": "Web Design Accessibility Certificate",
      "url": "https://www.udemy.com/course/web-accessibility/",
      "bio": "Master the fundamentals of inclusive design (including WCAG, ARIA, screen readers and lots more)",
      "objectives": [
        "Build accessible and inclusive websites",
        "Best practice and WCAG standards",
        "Understand a range of disabilities",
        "Using the WAI-ARIA specification"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Quick start guide",
          "How to use this course"
        ],
        "Tools": [
          "Introduction to tools",
          "Lighthouse",
          "VoiceOver",
          "JAWS",
          "Microsoft Narrator",
          "WAVE",
          "W3C Validator",
          "WCAG"
        ],
        "Disabilities": [
          "Introduction to disabilities",
          "Sight",
          "Hearing",
          "Motor",
          "Cognitive",
          "Test your knowledge"
        ],
        "Inclusive design": [
          "Introduction to design",
          "Semantic HTML",
          "Text",
          "Links",
          "Colour",
          "Colour contrast examples",
          "Images",
          "Audio & Video",
          "Forms",
          "ARIA",
          "Test your knowledge"
        ],
        "Testing project": [
          "Introduction to project",
          "Instructions and workbook",
          "Screen reader testing",
          "WAVE testing",
          "Code validation",
          "Suggested answers"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Knowledge of HTML is recommended"
      ],
      "description": "Do you build websites? If you are a designer, developer, programmer, engineer or web enthusiast, this is the course for you.\nBuild more inclusive websites and make the world a better place\nImprove your conversation rates\nAdd a valuable skill to your CV\nWe'll learn:\nAll about a range of disabilities including sight, hearing, motor and cognitive\nTools that can help us, and even do some of the work for us\nInclusive design principles\nWCAG compliance\nHow to use the ARIA specification\nBy the end of the course, you will have mastered the fundamentals of accessible and inclusive design.\nThis course is accredited by the International Association of Therapists and taught by Chris Worfolk, psychologist, software consultant and accessibility mentor who has worked with many international brands to make their websites more inclusive.\nIf that sounds exciting, hit the \"buy now\" button to get started immediately. I can't wait to see you inside the course!",
      "target_audience": [
        "Web designers and developers"
      ]
    },
    {
      "title": "PHP with Laravel for beginners - Become a Master in Laravel",
      "url": "https://www.udemy.com/course/php-with-laravel-for-beginners-become-a-master-in-laravel/",
      "bio": "Learn to master Laravel to make advanced applications like the real CMS app we build on this course",
      "objectives": [
        "Learn to build applications using laravel",
        "To install Laravel using Windows and MAC",
        "You will learn how use Laravel",
        "You will learn how to use routes",
        "You will learn how to create and use Controllers and what they are",
        "You will learn how to create Views an what they are",
        "You will learn to use the templating engine Blade",
        "How to connect and use Databases",
        "How to create migrations and what they are",
        "You will learn about Laravel ORM (Object Relational Mapper) and Raw SQL queries. Database stuff :)",
        "How to use Laravel Tinker - Command line program to play around with Laravel without persisting data",
        "Database: Eloquent One to One - CRUD",
        "Database: Eloquent One to Many - CRUD",
        "Database: Eloquent Many to Many - CRUD",
        "Database: Eloquent Polymorphic - CRUD",
        "Form Validation",
        "You will learn to download third party libraries to add to Laravel",
        "You will learn to upload files",
        "You will learn about Middleware and security",
        "You will learn about sesssions",
        "You will learn about sending emails",
        "You will learn Github or version control",
        "You will learn how to install a WYSIWYG editor",
        "To install a commenting system / Disqus",
        "You will learn to create a BULK functionality that you can use the CRUD on it",
        "You will learn to deploy Laravel on share hosting accounts, like godaddy",
        "And lots of more cool things"
      ],
      "course_content": {
        "The first steps": [
          "Meet your professor Edwin",
          "Introduction to laravel and MVC",
          "Reference files"
        ],
        "Windows - Local Environment Setup": [
          "New - Tools",
          "New - Using MySQL",
          "New- Installing Node.js",
          "New - Installing Laravel",
          "Installing a Specific Version of Laravel"
        ],
        "MAC- Local Environment Setup": [
          "NEW - PHP Upgrade",
          "New - Installing and Using MySQL on MAC OS X",
          "New - Installing Node.js",
          "New - Tools and Installing Laravel",
          "New - Using Valet in your Laravel projects - OPTIONAL",
          "Installing a Specific Version of Laravel"
        ],
        "Laravel Fundamentals - Routes": [
          "New UPDATE - Serving our App",
          "New UPDATE - Please Watch",
          "New - Laravel Structure Overview",
          "Route Introduction",
          "Routes part 1",
          "Routes part 2",
          "Naming Routes"
        ],
        "Laravel Fundamentals - Controllers": [
          "Intro to chapter with Edwin",
          "Creating Controllers",
          "Laravel 8 - IMPORTANT UPDATE",
          "Routing Controllers",
          "Passing data",
          "Resources and Controllers"
        ],
        "Laravel Fundamentals - Views": [
          "Intro to chapter with Edwin",
          "Creating views and custom method",
          "Passing data to views"
        ],
        "Laravel Fundamentals - Laravel Blade templating engine": [
          "Intro to chapter with Edwin",
          "Master layout setup",
          "Some more blade features"
        ],
        "Laravel Fundamentals - Database - Laravel Migrations": [
          "Intro to chapter with Edwin",
          "Environment configurations",
          "New - Windows OS - Migrations",
          "New - MAC OS - Migrations",
          "Creating migrations and dropping them",
          "Adding columns to existing tables using migrations",
          "Some more migration commands"
        ],
        "Laravel Fundamentals - Raw SQL Queries": [
          "Section Intro with Edwin Diaz",
          "Inserting data",
          "Reading Data",
          "Updating Data",
          "Deleting Data"
        ],
        "Laravel Fundamentals - Database - Eloquent / ORM": [
          "Section Intro with Edwin Diaz",
          "Reading Data",
          "Reading / Finding with Constraints",
          "More ways to retrieve data",
          "Inserting / Saving Data",
          "Creating data and configuring mass assignment",
          "Updating with Eloquent",
          "Deleting Data",
          "Soft Deleting / Trashing",
          "Retrieving deleted / trashed records",
          "Restoring deleted / trashed records",
          "Deleting a record permanently"
        ]
      },
      "requirements": [
        "Basic OOP PHP"
      ],
      "description": "Right now on Laravel 7.10 but of course as new versions come out, I will keep updating the course.\n\n\nOver 30,000 students in this course and over 600,000 students here at Udemy.\nBest Rated, Best Selling, Biggest and just baddest course on Laravel around :)\nOh, it's also the best course for complete beginners and of course regular beginners :)\nLaravel has become one of the most popular if not the most popular PHP framework. Employers are asking for this skill for all web programming jobs and in this course we have put together all of them, to give you the best chance of landing that job; or taking it to the next level.\nWhy is Laravel so popular? Because once you learn it, creating complex applications are easy to do, because thousands of other people have created code we can plug (packages) into our Laravel application to make it even better.\nThere are many reasons why Laravel is on the top when it comes to PHP frameworks but we are not here to talk about that, right?\nYou are here because you want to learn Laravel, and find out what course to take, right? Alright, let's list what this course has to offer so that you can make your decision?\nBenefits of taking this course (I promise to be  brief)\n1. Top PHP instructor (with other successful PHP courses with great reviews)\n\n2. Top support groups\n\n3. An amazing project that we will be building and taking to Github\n\n4. Lots of cybernetic coffee to keep you awake.....\n\n5. Did I mention I was not boring and you will not fall asleep?\n\n\n\nOk, Let's break each of these down, shall we?\n\nTop Instructor.....\nI don't like boasting but my other PHP courses can speak for me :)\nTop support groups\nI make sure everybody helps in the class and we also have Facebook support groups if needed.\nThe Amazing project / real-life application...\nOn this project, you will learn everything you need for creating awesome applications the easy way with Laravel, and new features will be implemented all the time, just the curriculum and look at the updates section.\nFull Source Code is available at Github\n\nOh yeah, we take this to Github (An app repository online) and even show you how, so you will learn that too.\n----------------------------------------\nPracticality.......................\nLots of practical skill with some theory so you get more experience that its essential for becoming a Professional Laravel Developer.\nThis course will take your game a new level. Imagine being able to create the next Facebook or Twitter, or even getting the developer job you dream of? What about just a programming job? You can achieve all that if you study with us and really focus. We will help you along the way.\nHere are some my lovely students (Not to show off of course) :)\nREVIEWS  ------------------------------->\nRating: 5.0 out of 5\n*****\nUnderstood MVC in one sentence after so many years! Great job Edwin. A great deal of effort has been put by Edwin to create the content in two parts, first for understanding the basic components (eloquent relationships, views, controller etc) and then actually using it in a project. And he loves teaching. We love learning from him!\n---------------------------------------------------------\n\nRating: 5.0 out of 5\nGreat Course! Everything was explained well and if you will have any questions they will give you good answers, or you will find the answers in Q&A.\n---------------------------------------------------------\n\nRating: 5.0 out of 5\n\nI would recommend this course to Laravel beginners like me, it covers a lot and the idea of learning on short-manageable videos + learning from errors that follow is a home run best approach! I am satisfied with course and especially with teacher Edwin who is extreme motivator.......\nRating: 5.0 out of 5\nI loved the course!! Learned a lot and actually applied it, I'm very happy. 10-stars!!!\n---------------------------------------------------------\nGet it? Not every course its perfect we do get the best reviews for a good reason, of course you can't please everybody but we try.\n\n\nAre you ready to to create the next Facebook or Twitter? ................\n\nLets start with the fundamentals\nDownloading Laravel\nInstalling it with composer\nLets also use Laravel Homestead\nWe learn about Routes, Controllers, views, models, migrations, template engines, middleware and more\nLets learn the CRUD, create, read, update and deleting data :)\nWait, lets also learn the CRUD with all the ELOQUENT relationships,\nLets learn so database stuff :)\n\n\nOne To One\nOne To Many\nOne To Many (Inverse)\nMany To Many\nHas Many Through\nPolymorphic Relations\nMany To Many Polymorphic Relations\nQuerying Relations\nRelationship Methods Vs. Dynamic Properties\nQuerying Relationship Existence\nQuerying Relationship Absence\nCounting Related Models\nInserting & Updating Related Models\nThe save Method\nThe create Method\nBelongs To Relationships\nMany To Many Relationships\nLet me break down some things from the projects but not all, cause my hands are a little tired :)\nAuthentication system\n\nMulti-users with roles, Admins, subscribers and whatever you want :)\n\nUser profiles\n\nUploading photos, multi pictures\n\nMultiple input selections\n\nUser, CRUD\n\nPos CRUD\n\nCategory CRUD\n\nPhoto CRUD\n\nPretty URL's\n\nCommenting system, reply system with tree\n\nDisqus commenting system\n\nSessions, and flash messages\n\nEmail Sending\n\nEMAIL testing\n\nRestrictions\n\nDeployment\nLots more, too many to list\nOh did I mention we keep updating the course with new versions?\n\n\nDid I also mention this LARAVEL course is the best-rated course, the best selling and the biggest of its kind here in Udemy?\nLet's start this and let's create big things :)",
      "target_audience": [
        "People looking for web programming jobs should take this course",
        "People looking to learn everything about laravel should take this course",
        "Students who want to take their PHP skills to another level should take this course"
      ]
    },
    {
      "title": "Projects in Laravel: Learn Laravel Building 10 Projects",
      "url": "https://www.udemy.com/course/projects-in-laravel-learn-laravel-building-10-projects/",
      "bio": "A complete course to master latest Laravel 5.4 web framework",
      "objectives": [
        "Learn core concepts of Laravel PHP framework",
        "Learn to build real world Laravel web apps",
        "Learn real world web programming concepts"
      ],
      "course_content": {
        "Introduction & Basic Laravel Website": [
          "What is Laravel",
          "Environment Setup",
          "Install Laravel",
          "Website Preview",
          "Routes, Views and Layouts",
          "Compiling Assets",
          "Contact Form",
          "Controllers and Validation",
          "Model, Database and Migration",
          "Pulling Data from DB",
          "Quiz 1"
        ],
        "To do List": [
          "Introduction",
          "Index Page",
          "Show Page and Includes",
          "Saving Todos",
          "Edit and Update Todos",
          "Delete Todos",
          "Quiz 2"
        ],
        "Business Listings": [
          "Introduction",
          "Authentication",
          "Dashboard User Listings",
          "Create Listings",
          "Edit Listings",
          "Delete Listings",
          "Public Listing Pages and Access Control",
          "Quiz 3"
        ],
        "Photo Gallery": [
          "Introduction",
          "Controllers, Models and Database",
          "Form and Views",
          "Cover Image Upload",
          "Display Albums",
          "Photo Upload",
          "Album Photo Listings",
          "Photo Page and Delete",
          "Quiz 4"
        ],
        "REST API": [
          "Introduction",
          "Handle GET Requests",
          "POST Request and Insert",
          "Handle Update and Delete Requests",
          "Quiz 5"
        ],
        "Request Manager": [
          "Introduction",
          "Guzzle and GET Requests",
          "Insert Items",
          "Edit Items",
          "Delete Items",
          "Quiz 6"
        ],
        "OctoberCMS": [
          "Project Preview",
          "Installing OctoberCMS",
          "Working in the Backend",
          "Custom Theme Layout",
          "Inner Pages and Blog",
          "Create a Custom Component",
          "Quiz 7"
        ],
        "Message System": [
          "Project Preview",
          "Authentication and Inbox",
          "Send and Sent Messages",
          "Reply Messages and Read Confirmation",
          "Delete and Deleted Messages",
          "Quiz 8"
        ],
        "Contact Manager": [
          "Project Preview",
          "Contact Model Setup",
          "Backend API Routes",
          "Creating a vue.js Component",
          "Creating the Form",
          "Create and Fetch Contacts",
          "List, Update and Delete Contacts",
          "Quiz 9"
        ],
        "Backpack Admin": [
          "Project Preview",
          "Backpack Base Package Setup",
          "Log Manager and Page Manager",
          "Creating CRUDs",
          "Customizing CRUD",
          "Quiz 10"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML, JavaScript and PHP is required to complete this course"
      ],
      "description": "Don’t get stuck learning the old way! Get your hands on the latest Laravel technology with our\nProject Course!\nTechnology is constantly becoming better, changing each second of every minute, so you need a course that can help you learn a technology fast. A simple method that will help you become not only proficient in the fundamentals, but also help you learn how to practically apply these fundamentals in the real world. Well, that’s exactly what we are offering with our Laravel Project Course.\nLaravel is THE most popular PHP framework that is currently used on the market. Owing to its simplicity, ease of use, simplified syntax and loads of other features, PHP continues to dominate the market for PHP frameworks. So, if you want to build some pretty neat and dynamic apps and websites, well then Laravel is probably the framework you are looking for.\nOur Projects in Laravel course can help you out there. Designed with experts from all around the industry, this course has been created to help bridge the gap between theory and practical application. You will not only learn the fundamentals of Laravel in this course, but you will also learn how to actually put them into application.\nThat’s not all! In addition to Laravel, our course also includes teaming up Laravel with some other state-of-the-art technologies such as PostgreSQL, Laravel Mix, Bootstrap, OctoberCMS and so much more. So, you will not only be learning Laravel, but also other amazing technologies that work flawlessly with Laravel to build some epic websites and apps.\nSo, what do you get when you sign up for this course? Fundamentals, a detailed introduction of Laravel, how to install and configure Laravel, how to integrate Laravel with other technologies, and 10 amazing projects that are royalty-free!\nHere are the 10 different projects that you will learn in this course:\nBasic Website – In this project, you will learn how to install Laravel, set up the controller, views, migrations, compile your assets with Laravel Mix and build a basic website.\nTodo List – A simple Todo list will help you understand how to integrate CRUD (create, read, update, delete) functionality in Laravel.\nBusiness Listing – In this application, you will learn how to create authentication, add business listings and delete them.\nPhoto Gallery – Here you will learn how to create albums and update photos into that album.\nREST API – In this you will learn how accept requests to certain routes, update the database, and using items with a name and a body. We will also build a front-end using JavaScript so that we can make requests to the API.\nOctoberCMS Website – A website built with the October Content Management Systems that is built on Laravel.\nMyTweetz Twitter App – An app integrated with the Twitter API, which will allow you to not only compose tweets, but also publish them.\nMarxManager Bookmark Manager – A bookmark manager using the PostgreSQL as our database.\nVue.js Contact Manager – In this project, you will learn how to build a front-end using Vue.js as a component to work with our contacts in the backend.\nBackpack Website With Admin Area – This project will familiarize you with Backpack, a collection of different packages to create different features in You Admin Panel.\nSo, let’s get this party started! Enroll Now and start building some amazing Laravel projects.",
      "target_audience": [
        "Anyone who wants to learn professional Laravel development will find this course extremely useful"
      ]
    },
    {
      "title": "Node, SQL, & PostgreSQL - Mastering Backend Web Development",
      "url": "https://www.udemy.com/course/node-postgresql/",
      "bio": "Boost your Node, Express, SQL, PostgreSQL and Backend Development Skills! NodeJS, Databases, Express, JS, ES6, + more!",
      "objectives": [
        "Build full Node and PostgreSQL applications.",
        "Discuss the backend Web Development with fellow software engineers.",
        "Apply various web requests to their custom backend applications.",
        "Use and build Node middleware, for error handling as well as parsing incoming data.",
        "Use advanced es6 concepts to write more concise code.",
        "Extend Node applications with third-party libraries.",
        "Have an understanding of the Node event loop."
      ],
      "course_content": {
        "Introduction": [
          "What to Expect from the Course",
          "Tools You'll Need",
          "Optional: Installing Node",
          "Optional: Installing a Code Editor",
          "Windows: Installing the Windows Subsystem for Linux and Visual Studio Code",
          "Accompanying Repository for the Course"
        ],
        "Node Essentials": [
          "What is Node.js?",
          "NPM, Modules, and a Node Program",
          "First HTTP Server",
          "Optional: HTTP and Web Requests",
          "ES6 in Node",
          "JSON, Nodemon, and more Advanced Functionality",
          "Optional: the Event Loop",
          "Section Summary | Node Essentials"
        ],
        "Node and Express | Fortunes API": [
          "Express",
          "Setting Up the Fortunes API",
          "JSON for Fortunes",
          "First Express Endpoint",
          "Optional: Startup with an Executable",
          "Get a Random Fortune or One by ID",
          "Fortunes Post Method",
          "Clean the Fortunes Post Method and Use Postman",
          "Update Fortunes with Put",
          "Delete Fortunes",
          "Fortunes API | Section Summary"
        ],
        "SQL, Databases, and PostgreSQL": [
          "SQL, the Relational Model, and PostgreSQL",
          "PSQL Installation",
          "Creating Tables and Insertion",
          "Creating SQL Scripts",
          "Selecting Table Data",
          "Relational Tables",
          "Joining Tables",
          "SQL, Databases, and PostgreSQL | Section Summary"
        ],
        "Node and PostgreSQL App | Monsters API": [
          "Setting up the Monsters API",
          "Node SQL Configure Script",
          "Optional: Configure with Password",
          "Configure the Postgres Pool",
          "Monsters GET Request with Express",
          "Error Handling in Express with Middleware",
          "Monsters Get by ID and Express Routes",
          "Monsters Post Method",
          "Monsters Put Method",
          "Monsters Delete Method",
          "The Habitats Route",
          "Relations and more Advanced Queries",
          "Monsters API | Section Summary"
        ],
        "Conclusion": [
          "Final Remarks and Bonus Content"
        ]
      },
      "requirements": [
        "Some JavaScript experience would be helpful."
      ],
      "description": "Become an in demand software engineer by taking this course on Node, SQL, PostgreSQL, and backend web development. As one of the most popular web development stacks today, learning Node, SQL, and PostgreSQL is a must. Knowing these languages and frameworks will open doors and jobs for you.\nIn this project-based course, you’ll learn how to build Node, SQL, and PostgreSQL applications by building three full projects. You’ll discover some techniques widely used in the industry today. And you’ll find out how to use notable libraries like Express and Pg.\nYou will skyrocket to the top of the talent pool because you can build backend web applications. The backend is the heart of services and products. So knowing how to write the backend is the other highly crucial skill looked for by top software companies like Google, Facebook, Microsoft, and more.\nIn this course, you’ll get familiar with Node by building an application from the start. First, you’ll learn how to use the native Node modules to build a server.\nSecond, you’ll build a more in-depth application with Node and Express to learn how to a build an api with a complete set of http request methods.\nNext, you’ll dive into SQL and PostgreSQL to build a solid foundation around these tools. After, you’ll build an api that combines all the previous concepts with Node and PostgreSQL so that you understand how to create Node apps that work with advanced databases.\nIf you’ve already gone through the the quick JavaScript and web development tutorials online, then this course will take you to the next level.\nReady to step up your coding game? Excited to boost your skills? Then what you are waiting for? Let’s get started coding!",
      "target_audience": [
        "Anyone who wants to learn how to create Node and PostgreSQL applications.",
        "Someone with experience in JavaScript.",
        "A developer who wants to refine their backend skills."
      ]
    },
    {
      "title": "The Complete Full-Stack Web Development Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-web-development-bootcamp/",
      "bio": "Become a Full-Stack Web Developer with just ONE course. HTML, CSS, Javascript, Node, React, PostgreSQL, Web3 and DApps",
      "objectives": [
        "Build 16 web development projects for your portfolio, ready to apply for junior developer jobs.",
        "Learn the latest technologies, including Javascript, React, Node and even Web3 development.",
        "After the course you will be able to build ANY website you want.",
        "Build fully-fledged websites and web apps for your startup or business.",
        "Work as a freelance web developer.",
        "Master frontend development with React",
        "Master backend development with Node",
        "Learn professional developer best practices."
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "A computer with access to the internet",
        "No paid software required",
        "I'll walk you through, step-by-step how to get all the software installed and set up"
      ],
      "description": "Welcome to the Complete Web Development Bootcamp, the only course you need to learn to code and become a full-stack web developer. With 150,000+ ratings and a 4.8 average, my Web Development course is one of the HIGHEST RATED courses in the history of Udemy!\nAt 62+ hours, this Web Development course is without a doubt the most comprehensive web development course available online. Even if you have zero programming experience, this course will take you from beginner to mastery. Here's why:\nThe course is taught by the lead instructor at the App Brewery, London's leading in-person programming bootcamp.\nThe course has been updated to be 2024 ready and you'll be learning the latest tools and technologies used at large companies such as Apple, Google and Netflix.\nThis course doesn't cut any corners, there are beautiful animated explanation videos and tens of real-world projects which you will get to build.\nThe curriculum was developed over a period of four years, with comprehensive student testing and feedback.\nWe've taught over a million students how to code and many have gone on to change their lives by becoming professional developers or starting their own tech startup.\nYou'll save yourself over 12,000 USD by enrolling, but still get access to the same teaching materials and learn from the same instructor and curriculum as our in-person programming bootcamp.\nThe course is constantly updated with new content, with new projects and modules determined by students - that's you!\n\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a web developer.\nThe course includes over 62 hours of HD video tutorials and builds your programming knowledge while making real-world websites and web apps.\n\n\nThroughout this comprehensive course, we cover a massive amount of tools and technologies, including:\nFront-End Web Development\nHTML 5\nCSS 3\nFlexbox\nGrid\nBootstrap 5\nJavascript ES6\nDOM Manipulation\njQuery\nBash Command Line\nGit, GitHub and Version Control\nBackend Web Development\nNode.js\nNPM\nExpress.js\nEJS\nREST\nAPIs\nDatabases\nSQL\nPostgreSQL\nAuthentication\nReact.js\nReact Hooks\nWeb Design\nDeployment with GitHub Pages\nWeb3 Development on the Internet Computer\nBlockchain technology\nToken contract development\nNFT minting, buying and selling logic\nBy the end of this course, you will be fluently programming and be ready to make any website you can dream of.\nYou'll also build a portfolio of over 32+ websites that you can show off to any potential employer.\nSign up today, and look forward to:\nAnimated Video Lectures\nCode Challenges and Coding Exercises\nBeautiful Real-World Projects\nQuizzes & Practice Tests\nDownloadable Programming Resources and Cheatsheets\nOur best selling 12 Rules to Learn to Code eBook\n12,000 USD+ worth of web development bootcamp course materials and course curriculum\n\n\nDon't just take my word for it, check out what existing students have to say about the course:\n\"Angela is just incredible, awesome and just fantastic in this course. I've never had such an instructor; detailed in every aspect of the course, gives precise explanations, gives you the anxiety to learn etc. She's got that ability to make fun while explaining things for better understanding. I really love this course.\" - Ekeu MonkamUlrich\n\"Angela is very thorough without ever being boring. I've taken MANY online courses in my life including my Bachelors and Masters degrees. She is by far the best instructor I've ever had. This course is packed with thousands of dollars worth of great instruction, and paced well enough for anyone to pick coding up and run with it- Thank you!\" - J Carlucci\n\"Love the way Angela explains things. Easy to follow and full of logic. I can say she must have spent a lot of energy creating this great course. Thank you and I recommend it to all who's interested in coding!\" - Yiqing Zheng\n\"So far (on my third day) this course has taught me more than I was able to learn in multiple other programming courses. This course is clearly outlined and builds upon itself gradually in an easy to understand way.\" - Normal Ramsey\n\"This course will take you from beginner to intermediate level for real. If you don't know how to put together the pieces of web development this is what you're looking for. Angela explains in an amazing way by creating projects all the way during this course, explaining the concepts in real practice. Thank you very much, Angela. I will always consider you my mentor. Look forward to taking more courses with you.\" - Moises Dionisio Cruz\n\"An amazing course, perfect for absolute beginners at the start of their coding journey! Angela is an amazing tutor and can explain in the most simple and comprehensible way even complex coding notions. Learning web development cannot get any more fun!\" - Zoe Moyssoglou\n\"It's a different approach to teaching Web Development. I like that you are given everything possible to succeed from the onset.\" - Ronick Thomas\nThe tutor is simply AMAZING, by far the best tutor I have ever had. I would give her 10 stars out of 5. She is not just punching the code and talking to herself, but she is actually explaining things. She keeps on giving really useful hints and she will give you a great load of other references. I always knew what I was doing and why I was doing it. All the extra challenges have just made me remember and understand things better. - Peter Dlugos\n\n\n\n\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's highest-rated web development course.",
      "target_audience": [
        "If you want to learn to code through building fun and useful projects, then take this course.",
        "If you want to start your own startup by building your own websites and web apps.",
        "If you are a seasoned programmer, then take this course to to get up to speed quickly with the latest frameworks and NodeJS",
        "If you want to take ONE COURSE and learn everything you need to know about web development, take this course"
      ]
    },
    {
      "title": "Build a Blockchain & Cryptocurrency | Full-Stack Edition",
      "url": "https://www.udemy.com/course/build-blockchain-full-stack/",
      "bio": "Updated for 2025: full-stack blockchain+crypto course! A backend + frontend with Node.js, Express, React, & more!",
      "objectives": [
        "Updated for 2024: Learn how to build a blockchain and cryptocurrency from scratch from an engineer with 5+ years of industry experience.",
        "Build a complete blockchain-powered cryptocurrency from scratch.",
        "Understand and fluently converse on the core software engineering concepts behind blockchain and cryptocurrencies.",
        "Create unique blockchain-centric solutions to real work problems and business applications.",
        "Build proof-of-work based systems.",
        "Create backend Node JS servers, with an express API and full testing suite.",
        "Build server-to-server systems with real-time networking capabilities.",
        "Build frontend web applications, particularly with React JS.",
        "Deploy full-stack projects for wide use by the public.",
        "Employ software best practices and coding conventions to write clean, scalable code."
      ],
      "course_content": {
        "Introduction and Getting Started": [
          "Why this course? (Course Promo)",
          "The Blockchain and Cryptocurrencies - What, Why, and How",
          "Code the Blockchain in 10 minutes | Lightning Version",
          "[Required] Course Repository, Software Installation, Tips and Tricks",
          "[Optional] Mega JavaScript and Node.js Overview"
        ],
        "Blocks | The Blockchain Backend": [
          "Section Overview: Blocks | The Blockchain Backend",
          "Commits for this Section",
          "Set Up the Blockchain Application",
          "Create the Block Class",
          "Create the Block Class | TDD Style",
          "The Genesis Block | Tests",
          "The Genesis Block | Code",
          "Mine Blocks",
          "Crypto Hash and SHA-256",
          "Hash in MineBlock",
          "Recap: Blocks | The Blockchain Backend"
        ],
        "The Chain | the Blockchain Backend": [
          "Section Overview: The Chain | the Blockchain Backend",
          "Commits for this Section",
          "The Blockchain Class",
          "Chain Validation and Replacement Overview | Free Preview",
          "Chain Validation | Tests",
          "Chain Validation | Code",
          "Chain Replacement",
          "Stub Console Output in Tests",
          "Recap: The Chain and Proof of Work | the Blockchain Backend"
        ],
        "Proof of Work | The Blockchain Backend": [
          "Section Overview: Proof of Work | The Blockchain Backend",
          "Commits for this Section",
          "Proof of Work and the 51% Attack",
          "Difficulty and the Nonce Value | Tests",
          "Difficulty and the Nonce Value | Code",
          "Dynamic Difficulty and the Mine Rate",
          "Adjust the Difficulty in MineBlock",
          "Improve the Proof of Work System | Average Work Script",
          "Improve the Proof of Work System | Binary hashes",
          "Prevent Difficulty Jumps",
          "Recap: Proof of Work | the Blockchain Backend"
        ],
        "API and Network | The Blockchain Backend": [
          "Section Overview: API and Network | The Blockchain Backend",
          "Commits for this Section",
          "Blockchain API and Network Overview",
          "Setup Express API",
          "Post Request to Mine a Block",
          "Real-Time Messaging Network through Pub/Sub | Overview",
          "Pub/Sub Options: Redis or PubNub",
          "Install Redis",
          "Redis Publisher/Subscriber Class",
          "Install PubNub",
          "PubNub: a Non-Redis Pub/Sub Alternative",
          "Broadcast Chain",
          "Start Peers and Broadcast Chain on API Mine",
          "Sync Chain on Connect",
          "Avoid Redundant Interactions",
          "Recap: API and Network | the Blockchain Backend"
        ],
        "Wallets, Keys, and Transactions | The Cryptocurrency Backend": [
          "Section Overview: Wallets, Keys, and Transactions | The Cryptocurrency Backend",
          "Commits for this Section",
          "Wallets, Keys, and Transactions Overview",
          "Code Organization",
          "Create and Test Wallet Class",
          "Key Pair and Public Key Addresses",
          "Sign Data and Verifying Signatures",
          "Transaction Objects and the OutputMap | Tests",
          "Transaction Objects and the OutputMap | Code",
          "Transaction Inputs",
          "Cohesive Utility",
          "Validate Transaction",
          "Wallet Create Transaction",
          "Update Transactions with Multiple Outputs",
          "Improve the CryptoHash",
          "Transaction Update Edge Cases",
          "Recap: Wallets, Keys, and Transactions | The Cryptocurrency Backend"
        ],
        "Transaction Pool | The Blockchain and Cryptocurrency Backend": [
          "Section Overview: Transaction Pool | The Blockchain and Cryptocurrency Backend",
          "Commits for This Section",
          "Transaction Pool Overview",
          "Create the Transaction Pool and Set Transactions",
          "API Transactions and Main Transaction Pool",
          "Handle Invalid Transactions",
          "Transaction Updates in the API",
          "Get Transaction Pool Map",
          "Broadcast Transaction",
          "Pubnub Set Transaction Edge Case",
          "Sync Transaction Pool Map on Connect",
          "Recap: Transaction Pool | the Blockchain Backend"
        ],
        "Mine Transactions | The Blockchain and Cryptocurrency Backend": [
          "Section Overview: Mine Transactions | The Blockchain and Cryptocurrency Backend",
          "Commits for This Section",
          "Mine Transactions Overview",
          "Transaction Miner Class",
          "Grab Valid Transactions",
          "Reward Transaction",
          "Clear Blockchain Transactions",
          "Mine Transactions Endpoint",
          "Clear Recorded Transactions on Successful Replace",
          "Blockchain Balance Overview",
          "Calculate the Wallet Balance",
          "Calculate the Balance before each Transaction",
          "Wallet Balance From Recent Transaction",
          "Wallet-Info Request",
          "Validate Transaction Blocks Overview",
          "Valid Transaction Data | Tests",
          "Valid Transaction Data | Code",
          "Validate Input Balances",
          "Prevent Duplicate Transactions in Block",
          "Validate Transaction Chain",
          "Recap: Mine Transactions | The Blockchain and Cryptocurrency Backend"
        ],
        "The Blockchain and Cryptocurrency Backend | Review": [
          "The Blockchain and Cryptocurrency Backend | Review"
        ],
        "The Frontend Blockchain": [
          "Section Overview: The Frontend Blockchain",
          "Commits for This Section",
          "The Frontend Blockchain Overview",
          "Optional: React.js Overview",
          "Serve a Frontend Page",
          "Add JavaScript to the Frontend",
          "Correct Version of parcel-bundler",
          "Build React into the Frontend",
          "Frontend Development Workflow",
          "App Component",
          "Fix to Upcoming Lecture: Fetch and Display Wallet-Info",
          "Fetch and Display Wallet-Info",
          "Visualize the Blocks",
          "Seed the Backend with Data",
          "Fonts link for upcoming lecture: Stylize the Application",
          "Stylize the Application",
          "Make a Block Component with Props",
          "Recap: The Frontend Blockchain"
        ]
      },
      "requirements": [
        "Experience with the command line and the essentials of an operating system.",
        "Knowledge in at least one programming language.",
        "Familiarity with how web development works."
      ],
      "description": "This course has been updated! Since this course's launch, students and even fellow udemy instructors have highlighted many of this course's strong aspects in various reviews:\n\"highly recommendable course for blockchain beginners. you can experience every aspect of blockchain mechanism with hands-on coding projects.\"\n\"As a fellow instructor at Udemy, this course has given me something to live up to. Just incredible. HIGHLY HIGHLY RECOMMEND.\"\n\"I am a beginner in programming. But I found David to be a prolific teacher. I cannot believe he is releasing this quality material for such an affordable price. Dude thank you so much! You are the best teacher I’ve ever had! Although JavaScript isn’t easy you are helping give us solid material quickly. I hate waiting ten years to hear something spicy & interesting when wanting to tackle a huge concept!\"\n\"The instructor has put a lot of effort to explain every operation in very detail. This course is very helpful for me to understand how react works in web browser. Thank you.\"\n\"Perfect! This course is a must-have for a junior developer.\"\nAnd more...\nIn the updated course, you'll find:\n* A new commit-by-lecture repository to help you troubleshoot/debug every step of the way.\n* Updates to fix common bugs that have been pointed out by students throughout this course's lifetime, particularly in the frontend and deployment sections.\n\n\nOriginal description:\nWhite walkers stalking you in the night? Death eaters knocking down your door?\n\n\nWell, sounds like you’re looking to build a blockchain and cryptocurrency! Having your own blockchain and cryptocurrency is the number one way to get rid of threats both magical and technical!\nOk, maybe the magic part was a tiny bit exaggerated. But the technical part, not so much! The blockchain has become a magic bullet in the software world throughout the past few years. It’s proven that it has the power to revolutionize economic systems and so much more. It seems to have the power to save us all.\nBut the blockchain wave has only begun! There is so much untapped potential in the field for high-paying employment, and new exciting companies.\nBut it all starts with building a blockchain and cryptocurrency? How are you going to do that? Take this course!\n\n\nWhy this course specifically?\nThis course will teach you how to build your own blockchain and cryptocurrency from scratch. You’ll have your own full-on backend, test suite, frontend and deployment process.\nIt’s no denying that blockchain based systems have taken the tech and financial worlds by storm.\nWhen this course was initially released, a single bitcoin was worth $3000. Today a single bitcoin is worth $120,000.\nBeyond cryptocurrencies, the potential use cases for the blockchain are truly endless. And yet the blockchain industry is still so young. So many startups waiting to, well, start up!\nSo it’s time to create your own unique blockchain project. Take this course to gain the foundation to do so. Other courses may teach how the blockchain works, its main concepts, or how to invest in a cryptocurrency. But this is the best resource for you to learn how to make a blockchain from scratch, and apply your own unique ideas on top of that.\n\n\nIn this course, you will:\nBuild a full on blockchain and cryptocurrency backend. Create and code blockchain objects. Implement the core logic to power the blockchain. Learn the essential concepts behind the powerful ideas of blockchain technology.\nWrite a full test suite and code in a test-driven manner. You will also have the chance to make your implementation truly unique. If your own code covers the test cases, your blockchain will be both unique and functional.\nCreate a frontend application. Your project will have a web app that will allow people from all over the world to use your blockchain and cryptocurrency. If you’re a fan of React, you’ll love the frontend part of this course.\nFinally, you will deploy the project in a public environment. A lot of coding courses will take you as far as the local application. But only a select few take you to the next level. This is one of those courses. You will take publish your project. And anyone in the world will be able to use it, as long as they know your project’s url.\nOn top of building a full backend, testing suite, a frontend web app, and deploying the project, there are many other aspects of the course to look forward to:\nA deep conceptual understanding backed by practical experience. You will see the big picture of core blockchain and cryptocurrency concepts. And those big picture concepts will be reinforced directly by building related features in code. You will find a balance of theory and practical experience in the course.\nYou will learn work with many technologies. Node.js, JavaScript, Express, APIs, Publish/Subscribe, React.js - all these technologies will be incorporated in the full-stack project. Don’t worry if you’re a beginner to any. Each keyword/concept will be explained - even the fundamental JavaScript. That being said, this course is best for intermediate students - anyone who knows at least one programming language already!\nSoftware Best Practices. You will follow all the modern best practices of full-stack development. Learn the conventions of Node.js and React, and how to properly structure code and projects. As a practicing software engineer, I’ve applied the same level of care to the project course code as I would to code that I ship every day in my full-time job.\n\n\n***\n\n\nQuestion(s) you may have:\nWhat is the difference between this course and your original course on building a blockchain and cryptocurrency?\nThis is a remastered version of that original course. The original course does not have a frontend nor a deployment process. So many students were looking for these aspects from that first course. Well, you’ll find that here!\nPlus, the refactored test-driven backend will give you the opportunity to truly create your own version of the project. The first course went with the code and core logic first. Then the tests came after. This approach does not give as much immediate freedom to implement the functions and logic in your own unique way.\nAlso, a lot of the blockchain logic has been improved, with additional methods and concepts! This version of the project is definitely more secure, more thorough, and more complete.\n\n\nCan this course help me find employment?\nTaking this course will turn you into both a software engineer, and a specialized blockchain engineer. This position is a new one in the software industry. And the demand is high. But the supply is low. So open a ton of doors by becoming an in-demand engineer with a fully deployed blockchain and cryptocurrency on your resume!\n\n\n***\nUltimately, this course is a learning experience like no other. It’s an opportunity to become a pioneer in such a young and promising field!\nSo, are you going to let this golden chance pass you by? Heck no! Join the course, and let’s get starting coding a full-on blockchain and cryptocurrency!",
      "target_audience": [
        "This course is suited for someone who has experience in at least one programming language. This course moves through coding essentials at a quick pace. Your experience in one other language will definitely help.",
        "Perfect for anyone who already knows a bit of JavaScript. This course is 95% JavaScript based, so any JS experience will be extremely useful.",
        "This course is not suited for complete beginners to programming. You will find that the course moves too quickly if you’ve never coded before. However, a persistent student may be able to learn coding in this course, if that student is willing to be patient with a lot of supplemental reading and research."
      ]
    },
    {
      "title": "Learn to build an e-commerce store with .Net, React & Redux",
      "url": "https://www.udemy.com/course/learn-to-build-an-e-commerce-store-with-dotnet-react-redux/",
      "bio": "How to build a real world application using some of the most popular and in demand frameworks, React and .Net",
      "objectives": [
        "Using .Net for the back end code",
        "Using React for the client app or front-end",
        "Using Redux for client side state management",
        "Using the Material UI styling framework for React",
        "Using the TypeScript language",
        "Using the C# language",
        "Using Entity Framework",
        "Using ASPNETCore Identity for authentication"
      ],
      "course_content": {},
      "requirements": [
        "Some programming experience required, but there is some pre-work you can do to get to the stage you need to be if never coded before"
      ],
      "description": "***The course has been refreshed in February 2023 to use .Net 7, React 18 and React Router 6***\nDo you want to learn how to build a real world application using .Net, React and Redux?   In this course we start from nothing and build a proof of concept E-Commerce store using these frameworks/libraries.\nIn this course we build a complete application from start to finish and every line of code is demonstrated and explained.\nHere are some of the things you will learn about in this course:\nSetting up the developer environment\nCreating a .Net WebAPI application using the dotnet CLI\nCreating a client side front-end React single page application for the stores user interface\nUsing Entity Framework to write code that queries and updates the database\nUsing ASP.NET Identity for login and registration\nUsing React Router to navigate between routes on the client\nUsing Automapper.\nBuilding a great looking UI using Material Design\nMaking reusable form components using React hook form\nPaging, Sorting, Searching and Filtering\nCreating orders from the shopping basket\nAccepting payments via Stripe using the new EU standards for 3D secure\nPublishing the application to Heroku\nMany more things as well\nTools you need for this course\nIn this course all the lessons are demonstrated using Visual Studio Code, a free cross platform code editor.   You can of course use any IDE you like and any Operating system you like... as long as it's Windows, Linux or Mac.\nIs this course for you?\nThis course is very practical, about 90%+ of the lessons will involve you coding along with me on this project.  If you are the type of person who gets the most out of learning by doing, then this course is definitely for you.\nImportant: This course is aimed at beginners but there is an expectation you have written some code before - it is not suitable for those who have never coded before.\nOn this course we will build an example E-commerce store, completely from scratch using the DotNet CLI tool and the Create-React-App tool to help us get started.  All you will need to get started is a computer with your favourite operating system, and a passion for learning how to build an application using .Net and React.",
      "target_audience": [
        "Beginner developers who would like to learn about .Net and React to build a real world project."
      ]
    },
    {
      "title": "The Complete React Js & Redux Course - Build Modern Web Apps",
      "url": "https://www.udemy.com/course/the-complete-react-js-redux-course-build-modern-web-apps/",
      "bio": "Go from Beginner to React Js Expert by building an Instagram Like Web App with React 16, React Router, Redux & Firebase!",
      "objectives": [
        "Learn the modern way of building web applications",
        "Master React's Compositional Model",
        "Build an Instagram-like Web App from the ground up!",
        "Build Interactive Web Pages with self-contained Components",
        "Manage your Application's Data with Redux",
        "Get web development jobs on freelancer sites"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Discover More Valuable Content"
        ],
        "Getting Started": [
          "Code Editor",
          "Node.js"
        ],
        "ES6 Crash Course (Optional)": [
          "Overview",
          "How to run your code for this section",
          "ES6 - let (Optional)",
          "ES6 - let vs const (Optional)",
          "ES6 - Arrow Functions (Optional)",
          "ES6 - Template Strings (Optional)",
          "Prototype Methods (Optional)",
          "ES6 - Classes (Optional)",
          "Spread Operator (Optional)"
        ],
        "React Intro": [
          "Overview",
          "Create-react-app",
          "Create-react-app (Permissions Error)",
          "Elements",
          "JSX",
          "Components",
          "Refactor"
        ],
        "React - State Management": [
          "Overview",
          "App Setup (Resources)",
          "App Setup",
          "Component Architecture",
          "Functional Components",
          "State Management",
          "Updating State",
          "Prop-Types",
          "Lifecycle Methods",
          "Lifecycle Methods List"
        ],
        "React-Router": [
          "Overview",
          "Component State Navigation (Resources)",
          "Component State Navigation",
          "Browser-Router",
          "Link",
          "Route",
          "UI Setup (Resources)",
          "Font-names (error)",
          "UI Setup",
          "Adding Photos",
          "Wrapping up",
          "Key Prop - Index, or not?",
          "Source Code"
        ],
        "Redux": [
          "Overview",
          "Theory",
          "Redux Store",
          "Reducer",
          "Connected Component",
          "Actions",
          "Updating State",
          "Actions (2) - Adding Posts",
          "History Prop Inconsistency",
          "Redux Dev Tool",
          "Source Code"
        ],
        "Redux (2) - Comments": [
          "CSS for next Video",
          "UI Setup",
          "Adding Comments",
          "Selectively Loading Comments",
          "Comment Count",
          "Source Code"
        ],
        "Firebase & Redux": [
          "Overview",
          "Firebase Setup",
          "Updating Database",
          "Fetching Posts",
          "Removing Posts",
          "Saving Comments",
          "Loading Comments",
          "Source Code",
          "Multi-location updates"
        ],
        "Wrapping up": [
          "Debugging",
          "Final Source Code",
          "Bonus"
        ]
      },
      "requirements": [
        "No web development experience required. This course is designed to take students with no programming/web development experience to accomplished React developers."
      ],
      "description": "React has rapidly become one of the most powerful tools for building Web Applications. Top sites using React include Facebook, Twitter, Netflix, Airbnb, and more!\nThis course is perfect for entrepreneurs or startups looking to bring their ideas to life and React developers command some of the highest salaries in the development world.\nMaster React and Redux in this fun and exciting course with top instructor Rayan Slim. With over 15,000 students, Rayan is a highly rated and experienced instructor who has followed my \"learn by doing\" style to create this amazing course.\nYou'll go from beginner to extremely high-level and your instructor will complete each task with you step by step on screen.\n\nBy the end of the course, you will have built a sophisticated Photowall Web Application with React, Redux and CSS. This powerful application will impress even the most senior developers and ensure you have hands on skills in React and Redux that you can bring to any project or company.\nThis course will show you how to:\nBuild a sophisticated Photowall Web Application with React, Redux and CSS\nUse Redux to manage your data, make it more predictable and easier to debug.\nConnect your application to Firebase, a powerful database.\nUse React Router to navigate through your application\nCreate Class Components\nUse JSX to build your User Interface\nUse Props to pass Data\nCompartmentalize your web page into Components\nUpdate Component State to ensure responsive and interactive applications.\nNo experience required. This course is designed to take students with no programming/web development experience to accomplished React developers.\nThis course also comes with all the source code and friendly support in the Q&A area.",
      "target_audience": [
        "Web Developers",
        "Front-End Developers"
      ]
    },
    {
      "title": "Build Incredible Chatbots",
      "url": "https://www.udemy.com/course/build-incredible-chatbots/",
      "bio": "Learn to build and deploy chatbots for Facebook Messenger, WhatsApp, Slack and Skype using Wit & DialogFlow!",
      "objectives": [
        "Understand and learn about conversational interfaces and agents",
        "Build conversational agents or chatbots using JavaScript & NodeJS",
        "Understand the role of Natural Language Processing and AI",
        "Build a Chatbot with zero coding with Chatfuel",
        "Build chatbots with using Motion ai",
        "Build and use your own interface to Facebook Messenger",
        "Use Wit.AI for building chatbots",
        "Build chatbots using DialogFlow",
        "Understanding intents and entities",
        "Understand and use Regular Expressions (RegEx) for building basic chatbots",
        "Deploying a bot on the Facebook Messenger Platform",
        "Deploying a bot on Skype",
        "Deploying a bot on Slack",
        "Build Bots for WhatsApp",
        "Deploy chatbot apps on cloud platforms such as Heroku",
        "Build and Deploy serverless webhooks on AWS Lambda"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course!",
          "What are Chatbots?",
          "Anatomy of a Chatbot"
        ],
        "BotBee - Your very first chatbot sprint!": [
          "Introduction to Project BotBee!",
          "Training the AI",
          "Summary"
        ],
        "Building a Rule Based Weather Bot": [
          "Introduction",
          "The Interactive Terminal",
          "Understanding Regular Expressions",
          "Understanding Regular Expressions - Examples",
          "The Pattern Dictionary",
          "The Matcher Function",
          "Meet your chatbot - Hello Vanilla!",
          "Capturing Entities",
          "Current Weather : Pattern and Capture",
          "The Weather API",
          "WeatherStack API Updates (December 2019)",
          "Current Weather - The Parser",
          "The getPrefix function",
          "Weather Forecast - Pattern and Capture",
          "Weather Forecast - The Parser",
          "Summary"
        ],
        "Vanilla Weather Bot Meets Facebook Messenger!": [
          "Introduction to the Facebook Messenger Platform",
          "Goals",
          "Setting up an Express Server",
          "Creating a Facebook app",
          "Managing Tokens",
          "FBeamer | Introduction",
          "Registering the webhook",
          "Verifying and Validating Payload",
          "We have incoming!",
          "Handling Text Messages",
          "Sending Text Messages",
          "Send API URL Update (December, 2019)",
          "Sending Images",
          "Vanilla Meets Facebook",
          "Deploying to Heroku",
          "Submitting for Approval"
        ],
        "MovieMate - Introducing Wit.ai": [
          "Introduction to MovieMate",
          "Facebook App Setup",
          "Downloading the starter kit",
          "Important Note",
          "Introduction to Wit.ai",
          "Wit.ai | Intent & Training",
          "Wit.ai | Training | Who directed it?",
          "Wit.ai | Training | When was it released?",
          "Built-in NLP and Wit.ai",
          "Extracting entities",
          "Introduction to the Movie DB API",
          "The getMovie function",
          "The getDirector function",
          "Creating a response | Movie Info",
          "Creating a response | Who directed it?",
          "Deploying on Heroku",
          "Adding Test Users",
          "Summary"
        ],
        "Building MoneyBot for Skype, FB and Slack using API.AI (Dialogflow)": [
          "Important Note",
          "Introduction to MoneyBot",
          "Introduction to API.AI",
          "Basic Intents",
          "The Currency Convertor Intent",
          "Fulfillment - 1",
          "Fulfillment - 2",
          "Updated : Dialogflow Fulfillment API v2.0 & CurrencyConverter API",
          "Using Context",
          "Resetting Context",
          "Integration : Skype",
          "Integration : Facebook Messenger",
          "Integration : Slack",
          "Summary"
        ],
        "Building Bots for WhatsApp": [
          "Introduction",
          "Creating an agent on DialogFlow",
          "The WhatsApp Sandbox",
          "Twilio & DialogFlow - The Integration",
          "Default Intents",
          "Setting up a service account & Google Drive API",
          "Google Sheets and Permissions",
          "AWS Setup",
          "The Serverless Framework CLI",
          "Securely storing secrets",
          "Setting up our webhook",
          "IAM policy for accessing secrets",
          "Accessing secrets in the webhook",
          "Google Sheets - A higher order function",
          "The Get-Openings intent",
          "Handling the Get-Openings intent",
          "Testing our setup",
          "The Apply intent",
          "Handling the Apply intent",
          "The Status intent",
          "Handling the Status intent",
          "Deploying the webhook on AWS Lambda",
          "Summary"
        ],
        "Bonus": [
          "BONUS : Join my inner circle of friends!"
        ]
      },
      "requirements": [
        "You should be familiar with JavaScript (ES6 and above)",
        "You should be familiar with NodeJS",
        "You should be able to use the terminal/command line on Windows / MacOS / Linux",
        "You should be familiar with APIs",
        "You should be familiar with Messenger apps such as Facebook Messenger, WeChat, Slack, WhatsApp etc.",
        "You should be familiar with databases",
        "An active Facebook account and preferrably a Skype and Slack account"
      ],
      "description": "Welcome to the most comprehensive and complete chatbot developer course. Learn concepts, tools and techniques that you will need to build fully functional chatbots for business and enterprise.\nIn this course, we will go from zero to pro as we build multiple chatbots using a variety of techniques and platforms including Chatfuel, Wit and DialogFlow for a multitude of channels such as Facebook Messenger, WhatsApp, Slack and Skype. We will explore chatbot platforms that do not require you to write code, and all the way to a code intensive chatbot that can be built for specialised scenarios.\nWe will learn about the brain behind a chatbot, as we go from simple pattern recognition to natural language processing and AI.\nThis course features an ever evolving project based curricula that will see new sections, case studies and examples being added on a regular basis. This is critical because this technology space is growing by leaps & bounds and consequently this course aims to keep up with the pace. All of this comes with personalised help, hand holding and support.\nAnd even before reaching the end of the course, you will be able to build and deploy chatbots and offer this brand new way of reaching out to the world, to your customers and business.\nA Chatbot can help people shop, order food, entertain, provide help, advice, information, support and more, through a simple chat interface. Imagine chatting with a friend on Facebook Messenger. No learning curve needed, no apps to install.\nAlmost all industries, ranging from entertainment, medicine, hospitality, performing arts, banking, aviation and more are already eyeing the chatbot space to enhance customer engagement for business and marketing. And it is no wonder that Google, Facebook and Microsoft are leading the pack with dedicated divisions and projects being incubated at the moment.\nThe bottom line is - we're at a stage in the evolution of chatbots where mobile apps were back in 2007 when Apple announced the first iPhone.\nGrab the opportunity today.\nJoin me, as we understand, design and build incredible chatbots for Facebook Messenger, Skype, Slack and WhatsApp!",
      "target_audience": [
        "Web developers interested in building exciting conversational interfaces and agents",
        "Mobile developers who're keen on integrating conversational agents in their apps",
        "Business managers with a flair for coding in JavaScript & NodeJS",
        "Professionals who want to be at the cutting edge of technology",
        "You should not take this course if you're not a coder",
        "You should not take this course if you're not familiar with JavaScript and NodeJS"
      ]
    },
    {
      "title": "The Complete NFT Web Development Course - Zero To Expert",
      "url": "https://www.udemy.com/course/the-complete-nft-web-developer-course-zero-to-professional/",
      "bio": "Learn how to build an NFT Marketplace - Solidity And React - Truffle + Web3 for NFTs (Non-Fungible-Tokens) - Blockchain",
      "objectives": [
        "Code along and develop an impressive NFT Marketplace Example from scratch for your portfolio",
        "Learn how to develop professional Web Applications and NFTs with modern Tools & Libraries Including React, Truffle, Mocha, Web3, Bootstrap and much more",
        "Get interview-ready by understanding how Solidity and the EVM (Ethereum Virtual Machine) really works under the hood",
        "Object-oriented programming: constructor functions, contract and classes, interfaces, abstract contracts (virtual and override), inheritance, and hash tables",
        "Professional Blockchain techniques working with the Ethereum network and Web3 for debugging, deployment, and compiling with Remix IDE Ethereum.",
        "How to write code with templated models (Interface contracts) and clearly document your thought process",
        "Build Multiple Applications from Scratch including gain from tons of examples, exercises, and assignments.",
        "Interact with an online community of thousands of developers and practice team and communication oriented professional soft skills"
      ],
      "course_content": {
        "What Is An NFT (A Cultural Introduction)": [
          "Overview - Getting Started With NFTs",
          "What Is An NFT As An Artform & Collectible",
          "What Are Some Examples of NFTs (Non Fungible Tokens)",
          "Technically Defining What Is An NFT",
          "The Internet Of Assets (The World in Web3)",
          "Join Our Online School (Developers & Mentors)",
          "Exercise: Meet The Community"
        ],
        "The Ethereum Virtual Machine - EVM - (NFT Technology Under The Hood)": [
          "What Is A Virtual Machine (Basic Introduction)",
          "What Are Smart Contracts - Ethereum & Solidity",
          "Optional - Advanced - Introduction to Opcodes for the EVM",
          "How Contract Storage Works With Ethereum Smart Contracts",
          "Optional - Advanced - Opcodes Allow The EVM To Compute Almost Anything",
          "Review - What Is The EVM"
        ],
        "What Is an NFT Marketplace (Introduction)": [
          "What Is An NFT Marketplace (Formal Definition)",
          "Introduction To Our KryptoBirdz Marketplace Concept",
          "What Is OpenSea (Introduction)",
          "What is an NFT Collections & Collectibles (KryptoBirdz Example)",
          "Minting & Trading NFTs (KryptoBirdz Example)",
          "Exercise - Practice With A NFT Marketplace",
          "What is Algorithmically Generated NFT Art",
          "Review on NFTs & Next Steps"
        ],
        "What is the ERC721 NFT Standard": [
          "Overview - The Standardizaion of NFT Smart Contracts",
          "NFT & Gaming Introduction (CryptoKitties Example)",
          "What Real Problems Do Non Fungible Tokens Actually Solve (Besides Cool Games)",
          "Formally defining what is an ERC721 Token",
          "ERC721 By Example (BalanceOf Function)",
          "EIP - The Ethereum Improvement Proposal",
          "Review - What is the ERC721 Token Contract",
          "Exercise - Meet a Web3 Community and Ask A Question"
        ],
        "Optional - Crash Course Solidity (Programming For Complete Beginners) Part I": [
          "Overview - Getting Started With Programming",
          "IMPORTANT NOTE",
          "How To Code Along In These Sections - Remix Ethereum IDE Introduction",
          "Quick Note On The Upcoming Crash Course Section",
          "What Is Solidity (As A Coding Language)",
          "Pragma Solidity (How To Select Compiler Versions)",
          "Creating Smart Contracts In Solidity",
          "What are Variables & Datatypes in Solidity",
          "Deploying Your Very First Smart Contract Token",
          "Visibility keywords in Solidity",
          "Exercise - Solidity Visibility Challenge",
          "Solution - Solidity Visibility Challenge"
        ],
        "Optional - Crash Course Solidity (Programming For Complete Beginners) Part II": [
          "Important Note",
          "What is a Constructor in Solidity",
          "What is Mapping in Solidity",
          "Exericse - Write A Mapping",
          "Solution - Write A Mapping",
          "What Are Events in Solidity",
          "The Mint Token Function Signature",
          "Conditional Logic & Error Handling in Solidity",
          "Updating Token Balances & the += Operator",
          "Exercise - Write A Send Token Function",
          "Solution - Write A Send Token Function",
          "Deploy Your First Mintable Token Contract"
        ],
        "Optional - Extra Solidity Practice For Beginners & Glossary": [
          "Overview - How To Go Through This Optional Coding Section",
          "IMPORTANT NOTE",
          "General Introduction To Variables & Types",
          "Introduction To Booleans, Integers, & Strings",
          "Writing Solidity Variables",
          "Exercise write Variables",
          "Solution - Write Variables",
          "Introduction To Decision Making - If Statements in Solidity",
          "How To Write If Statements in Solidity",
          "Solution - Write An Airdrop If Statement In Solidity",
          "Arrays in Solidity - Pop Push & Length Methods",
          "Arrays in Solidity - Delete",
          "Exercise - Maintain a Compact Array",
          "Solution - Maintain a Compact Array",
          "What Are Abstract Contracts in Solidity"
        ],
        "How To Set up A Development Environment For NFTs": [
          "Overview - Setting Up The NFT Development Environment",
          "What Is MetaMask",
          "What Is A Terminal",
          "What Is A Terminal Part II",
          "What Is Node.js Part I",
          "What Is Node.js Part II",
          "What Is NPM Basics",
          "How To Install Ganache",
          "How To Use Ganache",
          "Connecting MetaMask To Ganache",
          "How To Work With Truffle",
          "Git Clone The Starter Project (+ Introduction To Github)",
          "Download Your First Text Editor (VSC)",
          "Getting Started with Visual Studio Code (Customizations & Workflow)"
        ],
        "Set Up NFT Project Configuration & Architecture": [
          "Overview - Configuring The NFT Environment Setup",
          "IMPORTANT NOTE",
          "What Is The Package.json File",
          "What is JSON (Examples)",
          "NFT Project Dependency Overview",
          "Package.json vs Package-lock-json",
          "The Index.js FIle",
          "The Index.html File",
          "Adding Projects Folders & Architecture Setup",
          "Installing The NFT Project Dependancies",
          "Initialize Truffle Configurations (Truffle Init)",
          "Truffle Configurations & Customizations",
          "The Migrations Truffle Smart Contract Overview",
          "Write The Upgrade Smart Contract Migration Function"
        ],
        "Building NFT Smart Contracts - First Steps": [
          "Overview - Deploying Your NFT Smart Contract",
          "NFT Smart Contract KryptoBirdz Shell Creation",
          "Organize The NFT Image Files",
          "Truffle Deployment Javascript File",
          "First Truffle Local Compile",
          "Deploy Your First Smart Contract On Ganache",
          "Truffle Console (Javascript - Syncronous and Asyncronous)",
          "Truffle Console (Async Await & Fetching Blockchain Data)"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know inside. *Basic Solidity & Web Development is a plus!"
      ],
      "description": "The Complete NFT Web Development Course - Zero To Expert\nLearn how to build an NFT Marketplace - Solidity And React - Truffle + Web3 for  NFTs (Non-Fungible-Tokens) - Blockchain\nBecome a Complete NFT Web Developer by learning the best in demand skills taught by renown engineer and full stack developer Clarian North. Join in early on an exciting technology implementing global changes to multiple industries and businesses.\nThis course is designed with the latest NFT tools including the Solidity Compiler, Truffle, and Web3 Patterns in 2022 as well as teaches the very latest Web Development techniques and version of React with both hooks and class components!\n---\nJoin a live online school and community of mentors and developers for supportive NFT discussions, debugging, hackathons and more! Level up with a curriculum by an instructor who has worked and consulted in the tech and entertainment industry for top brands and SF valley from Solana to NEAR and independent projects which have gone viral all over the world.\nThis course is also flexible and you can move through sections at different paces depending on your entry skill level: The “beginner” path (full course for total NFT beginners into programming and web development) and the “experienced path” (condensed version for those enrolled with prior web development and programming experience) - you are free to choose the path which serves your goals and time requirements the most! :-)\n---\nNFTs are changing the way the world does business as part of the most disruptive technology (blockchain) since the very early days of the internet and you can build and learn how to use them in order to shape the future of modern digital art, gaming, and web applications.\nThis course teaches you how to build an NFT Marketplace in-depth, from total scratch as well as some of the most modern and best employable tools out there for Web Development. We code along step by step by diving into all the key industry standard fundamentals, discover an impressive sum of techniques and examples as well as expose you to advanced concepts and the best practices and proper conventions along the way.\nYou will be provided with clear and deep dives into theory, project case studies and many examples, including tons of assignments and exercises and build an impressive Web Application Portfolio of Projects for interviews that most other online resources right now are seriously lacking - We put the most hours in to get the most out of it  :)\nThis is the most complete NFT and Web Development focused course on Udemy. It's an all-in-one topic by topic focused approach that will take you from the very fundamentals of Smart Contracts and programming, all the way to building an impressive and functional final project fully compliant with industry standards.\nWelcome to “The Complete NFT Web Development Course!”\nThis course will teach you NFT coding and Web Development in a clear project driven way, adhering to employable skill expectation and the best practices you need. You will learn all the key fundamentals as well as advanced concepts and related topics to turn you into a Web Developer that can build NFT oriented Websites as well as non related Blockchain Applications.\nThis is a long course because we deep dive into everything you need to know and learn to build an NFT marketplace with smart contracts for minting and transferring tokens and so much more!\nNo matter if you know nothing about NFTs or if you already got some basic Web Developer knowledge (not required - the flexibility on how to navigate through the course is included inside), you will get tons of useful NFT and Smart Contract information and knowledge out of this course!\nOur goal with this course is to teach you the working skills you need to build your own NFT Marketplace like OpenSea, get a job in the blockchain space, or innovate the world at your own choosing with your new found powers. With these skills you can apply for both Web Development (Front End) & Blockchain (Smart Contract) jobs, use it in your own projects or simply enhance your portfolio as a developer - whatever your goal is: This course will take you there!\nThe world is shifting more and more towards learning and working at home. This is an opportunity for you to start learning the most in demand skills, showcase those NFT development skills, and gain the experiences you need to develop your passion into something real.\n--------\nThis is the definitive NFT Web Developer course. After completing the final project, you will have extensively gone through the following tools and technologies:\n\n\nWhat's in this course?\n• Introductions to the key NFT tools you need including: Solidity, Javascript, React, Truffle & Web3\n• All the core basics: How Smart Contracts work (ERC165 ERC20 and erC721) and how to implement with the best practices.\n• Web Development under the hood: JSON & API Calls, The EVM - Ethereum Virtual Machine & Ethereum Provider,\n• Working with events and state to build scalable applications\n• Gain a deep knowledge of how NFTs work under the hood from Enumerating, Metadata, Minting, Transferring and more.\n• Building Website & Application Fundamentals: HTML, CSS, Javascript including Bootstrap Styling & Material Design\n• React Hooks & Class Components!\n• Reading Documents and Implementing Libraries like Web3\n• How to debug Applications for NFT Blockchain Interaction and API Calls.\n• Styling Applications with “Bootstrap Components\" and \"CSS Modules\"\n• Writing Smart Contracts and Building Interfaces of The ERC 721 Standard (NFTs)\n• Sending Http requests & handling transitional States + Responses\n• Handling forms and state updates\n• Migrating and Updating NFT Smart Contracts with Truffle\n• Learn Solidity Fundamentals and Advanced Smart Contract Creation Techniques\n• An in-depth understanding of Truffle Console\n• Developing a Local Environment for building an NFT Marketplace\n• Implementing Authentication\n• Complete Suite Unit Testing With Mocha\n• Learning Modern JavaScript and promises including Async-Await & Axios\n• Building Advanced CSS including Animations\n• Build a landing page and a Weather Application thousands of cities and an NFT Marketplace all from scratch!!\n• And so much more - scroll through our full curriculum to see the full breakdown of lessons and projects!\nThis course is a focused employable bootcamp into building Web Development for NFTs and beyond!\nAnd in case if you are wondering if you need any experience to get started -\nYou do not need any web development or programming knowledge to get started!\nThis course requires zero prior knowledge to get started! Some basic web development skills including Javascript along with Solidity would definitely move you through the course at a much faster pace than others, however, this course includes introductory sections (they are purely optional) so that we all move through the key lessons together regardless of our skill level!\nPlease see the full curriculum, the free preview videos and whenever you’re ready...\nLooking forward to seeing you in the lessons!",
      "target_audience": [
        "Take this course if want to learn how to build an NFT Marketplace from scratch with modern Web Development Technology",
        "Take this course if you already know Solidity and are looking for a course to clearly go over advanced topics. This course includes expert topics!",
        "Take this course if you want to get started with programming: Solidity & Javascript are awesome and very interesting first languages!",
        "Take this course if are interested in working on a blockchain project in the future and entering the industry",
        "Take this course if you want to develop impressive portfolio projects that you can breakdown for employable prospects with a clear and powerful understanding"
      ]
    },
    {
      "title": "Build a Backend REST API with Python & Django - Advanced",
      "url": "https://www.udemy.com/course/django-python-advanced/",
      "bio": "Create an advanced REST API with Python, Django REST Framework and Docker using Test Driven Development (TDD)",
      "objectives": [
        "Setting up a local development server with Docker",
        "Writing a Python project using Test Driven Development",
        "Building a REST API with advanced features such as uploading and viewing images",
        "Creating a backend that can be used a base for your future projects or MVP",
        "Hands on experience applying best practice principles such as PEP-8 and unit tests",
        "Configure Travis-CI to automate code checks"
      ],
      "course_content": {
        "Introduction": [
          "Technical requirements",
          "API details & Upgrades",
          "Course structure",
          "Getting help"
        ],
        "App Design": [
          "App overview",
          "Technologies",
          "Django project structure"
        ],
        "Test Driven Development": [
          "What is Test Driven Development?",
          "Test Driven Development Quiz"
        ],
        "System Setup": [
          "What to install",
          "Setup confirmation [Follow Along]"
        ],
        "Project Setup": [
          "New project overview",
          "Create GitHub project [Follow Along]",
          "Docker and Django",
          "Define Python requirements [Follow Along]",
          "Create project Dockerfile [Follow Along]",
          "Create Docker Compose configuration [Follow Along]",
          "Linting and Tests",
          "Configure flake8 [Follow Along]",
          "Create Django project [Follow Along]",
          "Run project with Docker Compose [Follow Along]",
          "Project setup overview",
          "Quiz: Docker and Docker Compose"
        ],
        "Configure GitHub Actions": [
          "What is GitHub Actions",
          "Configuring GitHub Actions",
          "Create GitHub Actions config [Follow Along]",
          "UPDATE: Docker Compose and Ubuntu Runner",
          "Test GitHub Actions [Follow Along]",
          "Quiz: GitHub Actions configuration"
        ],
        "Test Driven Development with Django": [
          "Testing in Django",
          "Write a test [Follow Along]",
          "Write a test using TDD [Follow Along]",
          "Mocking",
          "Testing web requests",
          "Common testing problems",
          "Quiz: TDD with Django"
        ],
        "Configure Database": [
          "Database architecture overview",
          "Add database service [Follow Along]",
          "Database configuration with Django",
          "Install PostgreSQL database adaptor [Follow Along]",
          "Configure database in Django [Follow Along]",
          "Fixing database race condition",
          "Create core app [Follow Along]",
          "Write tests for wait_for_db command [Follow Along]",
          "Add wait_for_db command [Follow Along]",
          "Database migrations",
          "Update Docker Compose and CI/CD [Follow Along]",
          "Summary"
        ],
        "Create User Model": [
          "The Django user model",
          "Design custom user model",
          "Add user model tests [Follow Along]",
          "Implement user model [Follow Along]",
          "Normalize email addresses [Follow Along]",
          "Require email input [Follow Along]",
          "Add superuser support [Follow Along]",
          "Test user model [Follow Along]",
          "Summary of Create User Model"
        ],
        "Setup Django Admin": [
          "Django admin overview",
          "Write tests for listing users [Follow Along]",
          "Make Django admin list users [Follow Along]",
          "Support modifying users [Follow Along]",
          "Support creating users [Follow Along]"
        ]
      },
      "requirements": [
        "Basic knowledge of programming and building simple applications",
        "Familiar with Django",
        "Comfortable using command line tools (Terminal/Command Prompt)",
        "macOS, Linux or Windows machine capable of running Docker (This excludes Windows 10 Home)",
        "Positive attitude and willingness to learn!"
      ],
      "description": "**NOTE: This course requires you to download Docker Desktop from Docker's website. If you are a Udemy Business user, please check with your employer before downloading software.**\n\n\nWelcome to the advanced course on how to Build a Backend REST API using Python, Django (3.2), Django REST Framework (3.12), Docker, GitHub Actions, Postgres and Test Driven Development!\nWhether you’re a freelance programmer, tech entrepreneur, or just starting out building backends - this course will help lay the foundation of your knowledge base and give you the tools to advance your skills with some of the most in-demand programming languages today.\nAPIs are the unsung heroes behind the technologies that we all love and use religiously.\nOne of the most critical components for any tech-based business is an API. So knowing how to create an API from start to finish is a vital skill to have as a developer. You cannot build a successful app without a backend REST API!\nIn this course I’ll show you how to build an advanced API that handles creating and updating user profiles, changing passwords, creating objects, uploading images, filtering and searching objects, and more.\nThe best way to learn anything is to do it. So the practical application of the course -- the project that you’ll build along side me -- is an API. A recipe API, to be specific.\nYou will learn how to build an advanced recipe API that allows you to upload and store some of your favourite recipes from photos and the web.\nYou’ll learn how to create objects i.e. recipes with titles, price points, cooking times, ingredients and tags like “comfort food”, “vegan” or “dessert”. Think of it as a virtual recipe box.\nBy the end of this course you will have built a fully functioning REST API that can handle:\nUser authentication\nCreating objects\nFiltering and sorting objects\nUploading and viewing images\nYou’ll also learn, in detail how to:\nSetup a project with Docker and Docker-Compose\nConfigure GitHub Actions to automatically run linting and unit tests\nWrite unit tests using the Django Test Framework\nApply best practice principles including Test Driven Development\nHandle uploading media files with Django\nCustomize the Django admin\nConfigure a Postgres database\nThis course has one singular focus: To teach you how to create an advanced API from start to finish using best practice principles and Test Driven Development.\nThis course is NOT FOR YOU:\nIf you’re looking for a course to build an API, a front end, and deployment\nIf you’re looking to build 10 different apps in one course\nIf you want to learn lots of different technologies and approaches to app development in general\nThis is a hands-on course, with a bit of theory and lots of opportunities to test your knowledge.\nThe content is challenging but rewarding. Ready for it? Let’s dive in!\n\n**PLEASE NOTE: You cannot run Docker on Windows 10 Home edition. This is because Windows 10 Pro or Enterprise is required in order to use Hyper-V which Docker uses for virtualization. To take this course you have two options. These are covered in Lecture 6, which is free to preview before purchasing the course.",
      "target_audience": [
        "Intermediate programmers who already have some understanding of Python and want to skill up",
        "Developers proficient in other languages but looking to add Python to their toolkit"
      ]
    },
    {
      "title": "ASP .Net MVC Quick Start",
      "url": "https://www.udemy.com/course/aspnet-mvc-quick-start/",
      "bio": "Build your own public-facing CRUD (Create, Read, Update, Delete) website w/MVC and Entity Framework in a weekend.",
      "objectives": [
        "Understand the major pieces of the Microsoft ASP .Net Framework",
        "Have a public-facing website with authorization, authentication, and real-world value to enhance your resume/electronic portfolio",
        "Understand how to use the code-first approach to generating a database using Entity Framework",
        "Discuss the differences between Models, Views, and Controllers",
        "Have the tools to setup and host a basic CRUD Web Application online",
        "Have a basic understanding of working with Git and GitHub",
        "Ability to deploy an application to an Azure App Service with CI/CD from GitHub actions",
        "Understand how to evaluate database calls and implement caching to aid with efficiency",
        "Ability to work with Bootstrap and update your UI, including utilization of bootstrap modals and the bootstrap grid",
        "Can implement Datatables .js in your project and quickly get a robust client-side grid",
        "Understand how to utilize unit and integration testing with XUnit projects, Shouldly, Moq, and in-memory databases"
      ],
      "course_content": {
        "Unit 1: Welcome and Overview": [
          "The Story and Purpose of this course",
          "Introduction, Welcome, and Overview",
          "The evolution of this course and thoughts on the latest release",
          "Course Repository and Resources"
        ],
        "Unit 2: Getting Started: Setting up my Developer Machine": [
          "Install Visual Studio Code",
          "Install Visual Studio 2022",
          "Add Some Extensions for Visual Studio 2022",
          "Install SQL Server Developer Edition",
          "Installing SQL Server Management Studio",
          "Verifying installation of SQL Server Data Tools",
          "Install GIT on your Windows machine [Linux and Mac likely have GIT already]",
          "Get the tools installed on your machine"
        ],
        "Unit 3: Creating the Contact Manager Project": [
          "Creating an MVC Project in .Net 6",
          "Ensure NuGet Packages are up to date",
          "Review, run, apply initial migration, change the connection string",
          "Create and Run the initial Migration",
          "Create a new MVC Project"
        ],
        "Unit 4: Source Control": [
          "Add a Local .gitignore file",
          "Creating the Local GIT Repository and Setting the Remote to GitHub",
          "Get a GitHub Account",
          "Create a new repository at GitHub",
          "Blow away your code and get it back",
          "Create a Local repository, Get a GitHub account, and push your code."
        ],
        "Unit 5: Creating the Models (the \"M\" in MVC)": [
          "Discuss Utilizing the Default Models Folder",
          "Create a \"Models\" Project For Reusability of your Models",
          "Create the States Model",
          "Create the Contact Model Part 1 - Constants and Properties",
          "Create the Contacts Model Part 2 - Annotations",
          "Commit changes and push to the Remote Repository"
        ],
        "Unit 6: Leveraging a new Database Project for Model creation": [
          "Create a New Database Project",
          "Add References to Contact And State and Create a migration",
          "Update the Database and Review the Tables",
          "Rollback and Remove the Migration",
          "Add a Seed for States, then add the migration and apply it",
          "Commit and Push changes to the Remote repository"
        ],
        "Unit 7: Creating the Controllers and Scaffolding Views (the \"C\" and \"V\" of MVC)": [
          "Create the States Controller and Scaffold Views",
          "Getting the DB Context Injected as a Service to the Contact Web Project",
          "Create the Contacts Controller and scaffold Views",
          "Fix the invalid state for Contacts Model on Create/Edit",
          "Create and Edit Contacts, fix some small code issues",
          "Rework Contacts Controller to get state data in one place",
          "Commit Changes and Push to Remote"
        ],
        "Unit 8: Use a feature branch developer flow to Implement Caching For States Data": [
          "Create a feature branch",
          "Update States Controller To Cache States Data",
          "Update States Controller to Invalidate Cache on CRUD Operations",
          "Update Contacts Controller to pull States data from Cache first, then fall back",
          "Update Contacts controller to fix issues with disconnected data for states on Cr",
          "Update Contacts controller to fix issues with disconnected data for states on Cr"
        ],
        "Unit 9: Utilizing Services and Repositories and Adding Unit and Integration Test": [
          "Use a Feature Branch and Create the Repositories Project",
          "Create the Services Project",
          "Create and Move operations for the States to the States Repository",
          "Create operations in the States Service and call to the service from the States",
          "Inject Services into the Program",
          "Add Unit Tests for States Service",
          "Finishing Up the Unit Testing for the States Service",
          "Add Integration Tests for the States Repository",
          "Continued Integration Testing for the States Repository",
          "Finalizing States Integration Testing",
          "Move Operations for Contacts to the Repository and Add Integration Tests",
          "Create Contacts Service Unit Tests and Replace Calls in the Controller",
          "Smoke Test and Push to remote, I have a conflict to resolve first",
          "Force push a history reset to main, then merge the PR"
        ],
        "Unit 10: Implement Authorization": [
          "Lock down the controllers by authentication and authorization",
          "Add Authorization by Role to the states controller",
          "Create User Roles Service to ensure users and roles for admin user",
          "Wire up EnsureUsersAndRoles on Home Controller, Verify Admin access on states",
          "Demonstration: Contacts bleed across users/URLs are hackable",
          "Update Solution To Leverage the User Id In the Contacts Hierarchy",
          "Finish updates for Integration and Service Tests to Ensure Contact User Mapping",
          "Lock down contacts to specific users in the Controller",
          "Update the UI to hide the UserId from all contacts views - part 1 of 2",
          "Update the UI to hide the UserId from all contacts views - part 2 of 2",
          "Push changes and close some issues"
        ]
      },
      "requirements": [
        "You should at least be a little familiar with Web Programming in HTML, javascript, and CSS",
        "We will go through installing the tools you need",
        "We will cover everything you need to understand and be able to build and deploy a public-facing website to enhance your resume/e-portfolio"
      ],
      "description": "This course is a very quick workshop to take you through the basic actions that will be required for you to create an awesome, real-world CRUD web application in just a few hours (you could do it over a weekend very easily) using ASP .Net MVC, the Entity Framework (code-first development approach), and the built-in scaffolding capabilities of ASP .Net MVC.  In the end, you'll have your own public-facing website to enhance your resume and show off your skills in your own e-portfolio for job interviews and applications!\nMVC = Model, View, Controller, and is a well-known and established design pattern.  Microsoft has made it extremely easy and convenient to create your web solutions using this pattern.  In Microsoft's MVC framework, we find that convention is favored over configuration, so as long as we follow a few simple guidelines, the system will do a lot of the work for us.\nWe'll also be taking a quick look at how we can use the Entity Framework to easily model and create a database for us.  By using the code-first approach, we'll simply create our models and then look at writing a DBContext to store the models.  We'll also look at some of the more critical operations, such as building relationships and seeding our data.\nAfter we've learned about the different aspects of our application, we'll quickly create a couple of controllers and use ASP .Net MVC's built-in view and scaffolding generators to easily build our CRUD operations against our database.   While working on controllers we'll also look at Authentication, Authorization, and a couple of other quick security concerns.\nTo make the solution more robust, we'll learn about using repository and service layers to separate concerns, while also keeping our models and data in their own projects.  We'll also implement integration and unit testing around these layers using XUnit, Shouldly, Moq, and in-memory databases.\nAfter creating the backend portion of the site, we'll put DataTables.js on our Index view so that we can easily show the data, as well as provide built-in JavaScript tools that will filter and sort the data for us.  This will make your application \"pop\" when people look at it because it will be fast and easy to sort through the data and filter for results.\nOther things we will learn throughout the course involve the use of GIT for source control, pushing our repository to GitHub, and utilizing CI/CD through GitHub Actions to automatically deploy your solution to Azure.  With Azure being free now, you can easily utilize the robust platform solutions available at Azure without spending any money.  You'll gain experience setting up an Azure app service, configuring the connection string to connect to your Azure SQL server and database, and you'll learn about utilizing Azure Application Insights to  monitor your application, including writing your own custom events and exception handling.\nBy the end of the course, you'll be familiar with the major working parts of creating an ASP .Net MVC CRUD application and publishing to a public-facing website with a fairly nice and responsive UI.  You'll have working knowledge of Models, Views, and Controllers, as well as how they interact to create a functional web application.  You'll also be exposed to the Entity Framework and Code First Migrations with use of a SQL Server backend.  The best part is that although this sounds pretty daunting, it's actually quite easy with a majority of the work done for us by convention and tools.",
      "target_audience": [
        "Anyone who wants to have a public-facing full-stack website that shows your skills for your resume/e-portfolio",
        "Developers making the switch from .Net Web Forms to MVC",
        "Web Developers switching from Java, Ruby, PHP, or another framework to .Net",
        "New ASP .Net MVC Developers",
        "New Web Developers looking to build robust full-stack solutions",
        "Any developer that wants to round out your full-stack web development skills"
      ]
    },
    {
      "title": "jQuery for Absolute Beginners : From Beginning to Advanced",
      "url": "https://www.udemy.com/course/learn-jquery-from-beginning-to-advanced/",
      "bio": "Learn jQuery : Client Side Web Development using jQuery through Step by Step Learning, JavaScript Library jQuery",
      "objectives": [
        "Will become Master in client side web development",
        "Will become expert in jQuery",
        "Will earn working experience on jQuery"
      ],
      "course_content": {
        "jQuery Intro": [
          "What is jQuery and What you will learn?",
          "Downloading jQuery"
        ],
        "jQuery Basics": [
          "Adding jQuery in your site",
          "A first look at jQuery code",
          "Selectors and filters",
          "Replacing contents",
          "Handling Events",
          "Hover Effects and Hide/Show Events: Part 1",
          "Hover Effects and Hide/Show Events: Part 2",
          "Fading",
          "Slide",
          "Toggle",
          "Animate",
          "Selectors",
          "Filters"
        ],
        "jQuery Advanced": [
          "Advanced Selectors",
          "Creating content",
          "Creating content: Part 2",
          "Inserting Content",
          "Modifying Content",
          "Modifying CSS",
          "Final Thoughts"
        ],
        "Bonus Lecture: HTML5 Basics": [
          "Introduction to HTML",
          "HTML4 vs. HTML5",
          "Making your first HTML page",
          "Tools to create HTML files",
          "Base HTML Tags",
          "Paragraph Tags",
          "Break Tags",
          "Header Tags",
          "Bold and Italic Tags",
          "Ordered and Unordered Lists"
        ]
      },
      "requirements": [
        "Prior experience on HTML and CSS required."
      ],
      "description": "Our students review about this course --\n\"Best course to get started with jQuery, Thankyou :) \" -- Vipinraj KT\n\"It is easy to understand for beginners in JQuery. Simple and clear explanation.\" -- Irina Zakharova\n\"taking everything into the details and steps by steps, I love the course so far\" -- Maher Mahbouby\n\"Loved this course. I had zero knowledge on jQuery and now I just love it!\" -- Sachin Satish Pai\n\"I loved this course, it will definitely help me complete my second year of my FdSc Computing course. Thank you\" -- Daryl Sturman\n\"That is really good course not just for learning new, but also reviewing jquery.\" -- Mirnaghi Aghazada\n\n\njQuery is a cross-platform JavaScript library designed to simplify the client-side scripting of HTML. It is free, open-source software using the permissive MIT License. Web analysis indicates that it is the most widely deployed JavaScript library by a large margin.\n\nMastering jQuery will boost up your career especially in web development. This course is designed you to master yourself in jQuery through step by step process.\nCourse Contents\n\njQuery Intro\nWhat is jQuery and what you will learn?\nDownloading jQuery\njQuery Basics\n\nA first look at jQuery code\nSelectors and Filters\nReplacing contents\nHandling events\nHide/Show events\nFading\nSlide\nToggle\nAnimate\nSelectors\nFilters\njQuery Advanced\n\nAdvanced Selectors\nCreating Content\nCreating Content: Part 2\nInserting content\nModifying content\nModifying CSS\nFinal thoughts\n\n\nBonus Lecture: HTML5 Basics\nIntroduction to HTML\nHTML4 vs. HTML5\nMaking your first HTML page\nTools to create HTML files\nBase HTML Tags\nParagraph Tags\nBreak Tags\nHeader Tags\nBold and Italic Tags\nOrdered and unordered Lists",
      "target_audience": [
        "Who wanna expert in client side web development",
        "Who wanna expert in jQuery"
      ]
    },
    {
      "title": "Webpack 2: The Complete Developer's Guide",
      "url": "https://www.udemy.com/course/webpack-2-the-complete-developers-guide/",
      "bio": "Master Webpack 2 as you deploy web apps supported by Babel, code splitting, and ES2015 Modules.",
      "objectives": [
        "Understand the purpose of Webpack in a modern web app",
        "Build custom boilerplate projects to serve ES2015 Javascript",
        "Deploy Webpack-based projects to AWS, Heroku, and more",
        "Enhance the performance of web apps by leveraging Webpack's ecosystem of plugins",
        "Enhance code organization through the use of ES2015 JS Modules"
      ],
      "course_content": {
        "How to Use This Course": [
          "Start Here!",
          "Course Resources",
          "Join Our Community!"
        ],
        "What Does Webpack Do?": [
          "Why Do We Use Build Tools?",
          "Javascript Modules",
          "The Purpose of Webpack",
          "Test Your Understanding",
          "Webpack in Action",
          "Javascript Module Syntax",
          "Linking Files with CommonJS",
          "Webpack Installation and Configuration",
          "More on Webpack Configuration",
          "Running Webpack",
          "The Bundle.js File",
          "Running the App"
        ],
        "Handling Project Assets": [
          "Introduction to Loaders",
          "Babel Setup for ES2015",
          "Babel Configuration",
          "Refactor to ES2015 Modules",
          "Handling CSS with Webpack",
          "The Style and CSS Loaders",
          "Loaders are Tricky!",
          "The Extract Text Plugin",
          "Handling Images with Webpack",
          "Automatic Image Compression",
          "Public Paths"
        ],
        "Building for Performance with Webpack": [
          "Introduction to Code Splitting",
          "Codesplitting in Practice",
          "On Demand Code Loading",
          "System Import Calls"
        ],
        "Applying Webpack to a Real Project": [
          "A Real World Project",
          "Setting Up Babel",
          "Minimum Webpack Config",
          "Vendor Asset Caching",
          "More on Vendor Caching",
          "Refactoring for Vendor Splitting",
          "Effect of Code Splitting",
          "Troubleshooting Vendor Bundles",
          "Chunk Hashing for Cache Busting",
          "Cache Busting Wrapup",
          "Cleaning Project Files"
        ],
        "Webpack Dev Server": [
          "Introduction to Webpack Dev Server",
          "Gotchas with Webpack Dev Server"
        ],
        "React-Specific Topics": [
          "React Router with Codesplitting",
          "Plain Routes with React Router Codesplitting"
        ],
        "Webpack-Based Deployment for Static Sites": [
          "Deployment Options",
          "Getting Production Ready",
          "Deployment with Surge (Easiest!)",
          "Deployment with Github Pages",
          "Deployment with AWS S3"
        ],
        "Webpack-Based Deployment for Dynamic Sites": [
          "Deployment of Servers",
          "Node and Webpack Integration",
          "Webpack Middleware in Development",
          "Webpack Middleware in Production",
          "Deployment to Heroku",
          "Deployment to AWS",
          "More on AWS Deployment"
        ],
        "Extras": [
          "Bonus!"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript",
        "A Mac or PC"
      ],
      "description": "Webpack is the premier build tool for React and Angular 2 applications.\nDeployment?  Covered.  Performance optimizations? We got it.  Custom boilerplate creation?  Its here!\n\nWebpack is notorious for being tricky to configure correctly.  In this course you'll master each major feature of Webpack and learn how to optimize it for your own app.  Webpack has a wealth of fancy features, but each requires in depth knowledge of how they work.  This course is the most comprehensive Webpack course you'll find online, and the only full course on the popular version 2 edition of Webpack.\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build Webpack-based projects.\n\nTired of downloading boilerplates packages with no idea how to change them?\nReact and Angular 2 have seen standalone boilerplate packages flourish, but they come with dense configuration setups that make them challenging to change.  With the experience you gain in this course you'll be able to customize your projects to suit your particular needs.\n\nSo much content!\n\nLearn the difference between ES2015 and CommonJS module systems\nLoad ES2015 code with Webpack's Babel Loader\nUse Webpack to automatically resize and compress images for optimal load times\nImplement code splitting to dramatically decrease load times\nLearn to tweak your React project to work perfectly with Webpack\nMaster versioning of your application to reduce the amount of code your users download\nDeploy your application to AWS, Heroku, Github Pages, or Surge\n\n\nWebpack can be confusing to learn, but after taking this course you'll understand that it is a tool that requires just a bit of concentration to master.  Once you hear my explanations of Webpack, you'll come to realize that each concept is straightforward, and only requires the smallest touch of patience to comprehend.  No filler here, just laser focus on the most important aspects of Webpack.\nI always build courses I would want to take, and this is no exception.  Every topic is explained in great detail with accompanying diagrams and examples.  You'll learn the back story of each feature and learn where to apply them to solve real world problems.",
      "target_audience": [
        "Any engineer with basic knowledge of Javascript"
      ]
    },
    {
      "title": "Nodejs Express - unit testing/integration tests with Jest",
      "url": "https://www.udemy.com/course/nodejs-unit-testing-and-integration-testing-with-express-and-jest/",
      "bio": "Learn to build a full CRUD REST API with Nodejs using TDD in Jest in JavaScript, with unit testing and integration test",
      "objectives": [
        "Learn how to make unit tests",
        "Learn how to make integration tests",
        "Learn how to create a Express REST API from scratch",
        "Learn how to build a Express REST API with test-driven development",
        "Learn how to mock Mongoose models in Nodejs with Jest",
        "Learn how to use Jest with TDD to build a REST API",
        "Learn how to use MongoDB with Mongoose together with Jest tests",
        "Learn how to write tests for error handling"
      ],
      "course_content": {
        "Hello world Express And Jest in less than 10 minutes!": [
          "Initialising project",
          "Hello World Express REST API in less than 5 mins!",
          "CRUD Methods we are going to build the TDD-way in REST",
          "Short intro to Jest + How to install Jest in our project"
        ],
        "Our first unit test with Jest": [
          "Our first test with Jest and Express REST API",
          "Making our first test with Jest + Express REST API pass!",
          "Make Jest run automatically on file changes"
        ],
        "Our first unit tests for HTTP POST /todos": [
          "Defining a data model for our Todo items with Mongoose",
          "Using jest.fn to mock our Mongoose model functions",
          "Making our test with Jest mock model pass",
          "How to configure Jest test environment",
          "How to mock Request and Response objects in Express API",
          "Writing test with mock Request object and making it pass!",
          "Using beforeEach in Jest tests",
          "Testing if response code is 201 and response is sent",
          "Test if response is sending back JSON body"
        ],
        "First integration test on HTTP POST /todos": [
          "Creating our first integration test with Supertest and Jest",
          "How to make our Express app ready for integration testing",
          "Creating our Express Router",
          "How to debug tests in Jest",
          "Setting up Express JSON request body middleware",
          "Fix for address already in use error",
          "Making our controller function use async/await",
          "Setting up our MongoDB database in the cloud!",
          "Creating a MongoDB database user",
          "Connect to MongoDB database with Mongoose",
          "Modify our unit tests to use async/await",
          "Creating a server.js for running our Express REST API manually",
          "Manual Testing with Postman"
        ],
        "How to write error handling unit tests + integration tests": [
          "Oops! We're missing error handling!",
          "Unit tests for error handling",
          "Making our error handling unit test PASS",
          "Creating a integration test for error handling",
          "Manual test for error handling",
          "Making a test for errors returning JSON body",
          "Create middleware to parse errors in JSON",
          "Making all of our tests pass and final manual test!"
        ],
        "HTTP GET on /todos route": [
          "Intro + first test exercise",
          "Making first test for getTodos pass",
          "Test if TodoModel.find is called",
          "Test if response is being sent back correctly",
          "Test for error handling",
          "Integration test for GET /todos",
          "Manual test with Postman"
        ],
        "HTTP GET on /todos/:todoId": [
          "Intro + Getting first test done",
          "Creating mock function TodoModel.findById and test for calls",
          "Exercise! Make test for response and make test pass!",
          "Solution to response testing with getById()",
          "Error handling unit test",
          "If TodoModel could not be found in database",
          "Integration test for GET /todos/:todoId",
          "404 Integration test + final manual tests"
        ],
        "HTTP PUT /todos - the TDD way": [
          "Intro to PUT method and first test",
          "Test if TodoModel.findByIdAndUpdate is called",
          "Test if PUT response is sent back",
          "Test HTTP PUT error handling",
          "HTTP PUT 404 test",
          "HTTP PUT Integration test"
        ],
        "HTTP DELETE": [
          "Using Jest.mock instead of multiple Jest.fn + Intro to final challenge!",
          "Unit tests for HTTP Delete method",
          "Integration test for HTTP Delete Method + manual test + you are awesome!!",
          "BONUS - coupons for other courses"
        ]
      },
      "requirements": [
        "Basic JavaScript ES6",
        "Some familiarity with Nodejs Express is a plus"
      ],
      "description": "Learn how to write a full CRUD REST API with Nodejs, Express and Jest using the test-driven development method!\nTDD is becoming more and more of standard, and for good reasons!\nWith TDD, you can feel more safe and secure that any changes you make are not breaking existing functionality in your applications. Manual tests cannot be sustainable in large applications, or even medium applications. Plus, they're incredibly tedious.\nWithout TDD... well, you know the story. You try to add functionality while trying to touch the existing code as little as possible, because you don't want to break things unintentionally..\nWith TDD you won't be scared to make big refactors in your code to clean up messy code, you will know quickly if you've broken any existing functionality!\nI'll show you step-by-step how to create a REST API with Express with unit tests and integration tests using the Jest test framework. There's going to be lots of opportunities for you to work on your own and do some exercises as well for optimal learning!\nIf you have any questions or suggestions to the course, feel free to message me anytime, I love interacting with my students!",
      "target_audience": [
        "Students somewhat familiar with Nodejs who wants to learn how to make production-ready software with TDD"
      ]
    },
    {
      "title": "Learn and Understand NodeJS (V8, Express, MERN/PERN & more)",
      "url": "https://www.udemy.com/course/understand-nodejs/",
      "bio": "NEWLY UPDATED!: V8, Express, MongoDB, MERN (React), PERN (PostgreSQL), new projects, backend, full stack and more.",
      "objectives": [
        "Dive under-the-hood of how Node.js works to fully understand it",
        "Structure a Node application in modules (CommonJS and ECMAScript modules)",
        "Build a Web Server in Node and understand how it really works",
        "Connect to a SQL (PostgreSQL) or MongoDB database in Node",
        "Understand how the MERN and PERN stacks work",
        "Understand and use the Event Emitter",
        "Understand Buffers, Streams, and Pipes",
        "Use npm and manage node packages",
        "Build a web application and API more easily using Express",
        "Be the coder that explains Node.js to everyone else because you understand it better than anyone else"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction and the Goal of this Course",
          "Big Words and NodeJS",
          "Watching this Course in High Definition",
          "Conceptual Aside: The Command Line Interface",
          "Command Line References",
          "A Note on Updates to this Course"
        ],
        "V8: The Javascript Engine": [
          "Conceptual Aside: Processors, Machine Language, and C++",
          "JavaScript Aside: JavaScript Engines and The ECMAScript Specification",
          "V8 Under the Hood",
          "Adding Features to JavaScript"
        ],
        "The Node Core": [
          "Conceptual Aside: Servers and Clients",
          "What Does JavaScript Need to Manage a Server?",
          "The C++ Core",
          "The JavaScript Core",
          "Downloading Lecture Source Code",
          "Let's Install and Run Some JavaScript in Node",
          "LTS vs Current",
          "An Important Note on Versioning"
        ],
        "Modules, Exports, and Require": [
          "Conceptual Aside: Modules",
          "JavaScript Aside: First-Class Functions and Function Expressions",
          "Let's Build a Module",
          "JavaScript Aside: Objects and Object Literals",
          "JavaScript Aside: Prototypal Inheritance and Function Constructors",
          "JavaScript Aside: By Reference and By Value",
          "JavaScript Aside: Immediately Invoked Function Expressions (IIFEs)",
          "How Do Node Modules Really Work?: module.exports and require",
          "JavaScript Aside: JSON",
          "More on require",
          "Module Patterns",
          "exports vs module.exports",
          "Requiring Native (Core) Modules",
          "ECMAScript Modules (ESM)",
          "package.json",
          "ESM and CJS",
          "Web Server Checklist"
        ],
        "Events and the Event Emitter": [
          "Conceptual Aside: Events",
          "JavaScript Aside: Object Properties, First Class Functions, and Arrays",
          "The Node Event Emitter - Part 1",
          "The Node Event Emitter - Part 2",
          "JavaScript Aside: Object.create and Prototypes",
          "Inheriting From the Event Emitter",
          "Node Versioning Note",
          "JavaScript Aside: Node, ES6, and Template Literals (Node version <= 12)",
          "JavaScript Aside: .call and .apply",
          "Inheriting From the Event Emitter - Part 2",
          "JavaScript Aside: ES6 Classes",
          "Inheriting From the Event Emitter - Part 3"
        ],
        "Asynchronous Code, libuv, The Event Loop, Streams, Files, and more…": [
          "JavaScript Aside: Javascript is Synchronous",
          "Conceptual Aside: Callbacks",
          "libuv, The Event Loop, and Non-Blocking Asynchronous Execution",
          "Conceptual Aside: Streams and Buffers",
          "Conceptual Aside: Binary Data, Character Sets, and Encodings",
          "Buffers",
          "ES6 Typed Arrays",
          "JavaScript Aside: Callbacks",
          "Files and fs",
          "Streams",
          "Conceptual Aside: Pipes",
          "Pipes",
          "JavaScript Aside: Promises",
          "Node and Promises",
          "Files and Promises",
          "Streams and Promises",
          "Pipeline and Promises",
          "Web Server Checklist"
        ],
        "HTTP and being a Web Server": [
          "Conceptual Aside: TCP/IP",
          "Conceptual Aside: Addresses and Ports",
          "Conceptual Aside: HTTP",
          "http_parser",
          "llhttp",
          "Let's Build a Web Server in Node",
          "Outputting HTML and Templates",
          "Streams and Performance",
          "Conceptual Aside: APIs and Endpoints",
          "Outputting JSON",
          "Routing",
          "Routing (ESM)",
          "Web Server Checklist"
        ],
        "NPM: the Node Package Manager": [
          "Conceptual Aside: Packages and Package Managers",
          "Conceptual Aside: Semantic Versioning (semver)",
          "npm and the npm registry: Other People's Code",
          "init, nodemon, and package.json",
          "npm Global Installation",
          "init, nodemon, and package.json - Part 2",
          "node --watch",
          "Using Other People's Code"
        ],
        "Express": [
          "Installing Express and Making it Easier to Build a Web Server",
          "Routes",
          "Static Files and Middleware",
          "Templates and Template Engines",
          "Querystring and Post Parameters",
          "express and body-parser",
          "RESTful APIs and JSON",
          "Structuring an App"
        ],
        "Javascript, JSON, and Databases": [
          "Conceptual Aside: Relational Databases and SQL",
          "Node and MySQL",
          "Conceptual Aside: NoSQL and Documents",
          "MongoDB",
          "Web Server Checklist"
        ]
      },
      "requirements": [
        "Basic Javascript knowledge (variables, loops, and basic functions)",
        "Basic HTML knowledge",
        "A text editor"
      ],
      "description": "Over the past decade this course, newly updated, has become a standard for thousands and thousands of developers learning Node.js, backend web development, and full stack development.\nDive deep into Node.js under-the-hood mechanics and transform from code copier, or asking AI and LLMs to write code you don't understand, to a backend web development architecture expert. Discover why companies pay top salaries to developers who truly understand Node.js internals and asynchronous programming models.\nNewly Updated 2025: New comprehensive modules on async/await patterns, ECMAScript modules implementation, and completely rebuilt MERN/PERN stack projects with MongoDB, PostgreSQL, and React!\n\n\nWhy This Course?\nMost Node.js courses teach you to follow patterns without explaining the underlying mechanisms. This approach leaves you stranded when debugging complex issues or optimizing performance. By understanding Node.js at its core—how the V8 engine processes JavaScript, how the event loop handles asynchronous operations, and how backend web development principles apply—you'll solve problems other developers can't even identify.\nWhat makes this course unique is its focus on both practical application and theoretical foundation. You'll build real-world Express.js applications while learning how each component functions behind the scenes, giving you the confidence to tackle any backend challenge and excel in full-stack development environments.\nWhat You'll Build\nA custom HTTP server from scratch without frameworks\nRESTful APIs with Express.js implementing authentication and data validation\nFile processing application using Streams and Buffers for memory efficiency\nComplete MERN stack application with React frontend and MongoDB\nFull PERN stack project featuring PostgreSQL database integration\nCourse Content at a Glance\nThe curriculum progresses from core concepts to complete applications, ensuring mastery at each level:\nNode.js Fundamentals: V8 engine, event loop, and memory management\nModule Systems: CommonJS vs ECMAScript modules and dependency management\nAsynchronous Patterns: Callbacks, promises, async/await, and event emitters\nWeb Servers: HTTP module, routing, middleware concepts and Express.js\nDatabase Integration: MongoDB and PostgreSQL connectivity patterns\nFull-Stack Development: MERN and PERN architecture implementation\nWho Should Enroll\nThis course is perfect for intermediate JavaScript developers who want to specialize in backend or become true full-stack developers. You should be comfortable with JavaScript fundamentals and ES6 features, but no prior Node.js experience is required—we'll build that expertise from the ground up, focusing on deep understanding rather than simple implementation.\nAbout Me\nWith over 25 years as a full-stack developer and 10 years of teaching Node.js on Udemy, I've helped hundreds of thousands of students master backend development concepts. Students in my courses have not just gotten jobs, but become senior developers, started companies, and even become teachers themselves.\nEnroll now to stop copying Node.js code and start truly understanding how backend web development works at its core!",
      "target_audience": [
        "Those looking to build a career as a NodeJS developer",
        "Those desiring to become full-stack developers",
        "Those who don't have server technology experience but wish to gain this skill",
        "Those who want to only have to write both client and server code in one language: Javascript",
        "Those who want to grasp Express, MERN, and PERN stacks"
      ]
    },
    {
      "title": "Angular (Full App) with Angular Material, Angularfire & NgRx",
      "url": "https://www.udemy.com/course/angular-full-app-with-angular-material-angularfire-ngrx/",
      "bio": "Use Angular, Angular Material, Angularfire (+ Firebase with Firestore) and NgRx to build a real Angular App",
      "objectives": [
        "Build amazing Angular apps with modern tools like Material, NgRx and Angularfire",
        "Build real-time apps that not only work great but also look awesome!"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome & Introduction",
          "What's Inside the Course?",
          "Join our Online Learning Community",
          "How To Get The Most Out Of This Course",
          "Planning the App",
          "MUST READ: Angular & Angular Material Versions"
        ],
        "A Brief Angular Refresher (OPTIONAL)": [
          "Module Introduction",
          "What is Angular?",
          "Project Setup with the Angular CLI",
          "How an Angular App Starts and Works",
          "Adding Components",
          "Template Syntax",
          "Using Directives like ngFor and ngIf",
          "Custom Property & Event Binding",
          "Forms",
          "Understanding Services & Dependency Injection",
          "Angular Routing",
          "Where to Dive Deeper",
          "Useful Resources & Links"
        ],
        "Angular Material": [
          "Module Introduction",
          "Understanding Angular Material Components",
          "Adding Angular Material to a Project",
          "Stay Up To Date!",
          "Our First Angular Material Component - The Button",
          "Why Do We Have To Import Everything Separately?",
          "Creating the Course App Structure",
          "Working on The Signup Form",
          "Flexbox - A Quick Refresher",
          "Controlling the Layout with @angular/flex-layout",
          "Adding & Configuring the Submit Button",
          "Implementing Hints and Validation Errors (on Forms)",
          "Adding a Datepicker",
          "Restricting Pickable Dates",
          "Adding a Checkbox",
          "Finishing the Form with Style",
          "Time to Practice - Angular Material",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Diving Deeper into Angular Material": [
          "Module Introduction",
          "Adding Navigation & a Sidenav",
          "Working on the Sidenav and Toolbar",
          "Styling the Sidenav",
          "Making the Page Responsive",
          "Adding Navigation Items",
          "Splitting the Navigation Into Components",
          "Working on the Welcome Screen",
          "Adding a Tabs Component",
          "Adding some \"Cards\"",
          "Adding a Dropdown Menu",
          "Adding a Spinner to the Training Screen",
          "Adding a Nice Exercise Timer",
          "Adding a Cancel Dialog Screen",
          "Passing Data to the Dialog",
          "Adding \"Exit\" and \"Continue\" Options",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Working with Data and Angular Material": [
          "Module Introduction",
          "Important: RxJS 6",
          "IMPORTANT: Install rxjs-compat",
          "Code without rxjs-compat",
          "Implementing Authentication",
          "Time to Practice - Angular Material & Data",
          "Routing & Authentication",
          "Route Protection",
          "Preparing the Exercise Data",
          "Injecting & Using the Training Service",
          "Setting an Active Exercise",
          "Controlling the Active Exercise",
          "Adding a Form to the Training Component",
          "Handling the Active Training via a Service",
          "RxJS 6 Update",
          "Handling \"Complete\" and \"Cancel\" Events",
          "Adding the Angular Material Data Table",
          "Adding Sorting to the Data Table",
          "Adding Filtering to the Data Table",
          "Data Table Filtering++",
          "Adding Pagination to the Data Table",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Using Angularfire & Firebase": [
          "Module Introduction",
          "What is Firebase?",
          "Getting Started with Firebase",
          "What is Angularfire?",
          "RxJS Observables Refresher",
          "Diving into Firebase",
          "Listening to Value Changes (of Firestore)",
          "Operators & RxJS 6",
          "Listening to Snapshot Changes (of Firestore, incl. Metadata)",
          "Restructuring the Code",
          "How Firebase Manages Subscriptions",
          "Storing Completed Exercises on Firestore",
          "Connecting the Data Table to Firestore",
          "Working with Documents",
          "Adding Real Authentication (Sign Up)",
          "Adding User Login",
          "Understanding Authentication in SPAs",
          "Configuring Firestore Security Rules",
          "Managing Firestore Subscriptions",
          "Reorganizing the Code",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Optimizing the App": [
          "Module Introduction",
          "Style Improvements & Error Handling",
          "Adding a Spinner",
          "Time to Practice - Optimizations",
          "Adding a Re-Usable Snackbar (Notification)",
          "Improving Error Handling",
          "Splitting the App Into Modules",
          "Time to Practice - Modules",
          "Optimizing Subscriptions",
          "Creating a SharedModule",
          "Splitting Up Routes",
          "Loading a Module Lazily",
          "Moving the Auth Guard",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Using NgRx for State Management": [
          "Module Introduction",
          "What is Redux - An Overview",
          "NgRx Core Concepts - A First Example",
          "Working with Multiple Reducers & Actions",
          "Dispatching Actions & Selecting State Slices",
          "Time to Practice - NgRx",
          "What's Up with the RxJS Import Syntax?",
          "Adding an Auth Reducer (and Actions)",
          "Adding Auth Subscriptions",
          "Adding the Training Reducer and Actions with Payloads",
          "Lazy Loaded State",
          "Dispatching Training Actions",
          "Selecting Training State",
          "Selecting Single Values Correctly",
          "Connecting the Data Table",
          "Cleaning the Project Up",
          "Adding a small Bugfix",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Deploying the App": [
          "Introduction & Preparation",
          "Deploying the App to Firebase Hosting",
          "Useful Resources & Links"
        ],
        "BONUS: Angular Material Themes": [
          "Module Introduction",
          "Understanding Angular Material Themes",
          "Adding the Theme with Angular 6",
          "Customising an Angular Material Theme",
          "Useful Resources & Links"
        ]
      },
      "requirements": [
        "You should bring basic Angular knowledge or the willingness to learn it along the way. A brief introduction/ refresher module is provided in this course.",
        "Basic HTML, JS and CSS knowledge is required",
        "NO Material Design knowledge is required"
      ],
      "description": "Angular is an amazing frontend JavaScript & TypeScript framework with which you can build powerful web applications.\nThere are many courses that dive deeply into Angular but sometimes you just want to build an entire app and see how it all works in practice. And you want to use all these great third-party packages that can add a lot of awesome functionalities to your Angular app!\nThis course covers exactly that!\nWe'll build an entire, realistic app which looks absolutely beautiful, uses Google's Material Design and is extremely fast! Thanks to Firebase and Angularfire, we'll add real-time database functionalities and see our updates almost before we make them!\nBehind the scenes, NgRx will be used - a Redux-inspired state management solution that can greatly enhance your Angular app.\nWhat are you waiting for, this is what you'll get in detail:\nA brief refresher on Angular, just in case you forgot how it works (or never learned it)\nA detailed introduction into Angular Material, its docs and its usage\nA realistic app that uses many Angular Material components\nExamples for components like Datepickers, Sidenavs or the Material Data Table (incl. sorting, filtering and live updating!)\nA real-time database connection powered by Firebase (using Firestore) and Angularfire\nA better understanding of RxJS observables\nState-of-the-art state management with the help of NgRx\nAnd so much more!\nThis course is for you if you want to practice Angular, want to see it in action or want to learn it with the help of a 100% practical project!\nPlease note that this course was recorded with an older version of Angular & Angular Material. The code shown in the videos might not always work with the latest versions of these packages. The general concepts & solution steps still apply, of course.",
      "target_audience": [
        "Students who want to dive deeper into Angular and who want to build a real app with it",
        "Students who want to practice Angular",
        "Students who want a practical guide towards building Angular apps",
        "Students interested in using Firebase, NgRx and/ or Angular Material"
      ]
    },
    {
      "title": "Complete Vue Developer Bootcamp (Pinia, Vitest)",
      "url": "https://www.udemy.com/course/complete-vue-js-developer-zero-to-mastery-vuex/",
      "bio": "Ultimate guide to Vue 3 Development. Build large scale applications and deploy to production. Go from Zero to Mastery!",
      "objectives": [
        "Build enterprise level Vue applications and deploy to production",
        "File Uploads, Testing, PWAs, Internationalization, Authentication with Vue 3",
        "Learn to build reactive, performant, large scale applications like a senior developer",
        "Learn the latest features with Vue 3 including Composition API, Pinia, Vue Router + more",
        "Learn to build beautiful applications using TailwindCSS, Sass, CSS Animations and Transitions",
        "Master the latest ecosystem of a Vue Developer from scratch",
        "Become the top 10% VueJS Developer",
        "Use Pinia (the new replacement for Vuex) for state management in your applications",
        "Learn to compare tradeoffs when it comes to performance and scalability",
        "Set up authentication and user accounts",
        "Use Firebase to build full stack applications",
        "Learn to lead Vue projects by making good architecture decisions and helping others on your team",
        "Master Vue Design Patterns",
        "Routing with Vue Router",
        "Converting apps to Progressive Web Apps",
        "Testing your application with Vitest, snapshot testing, and even E2E testing!",
        "Using the latest ES6/ES7/ES8/ES9/ES10/ES11 JavaScript to write clean code",
        "Learn why Vue is outgrowing React and Angular in developer popularity!"
      ],
      "course_content": {
        "Introduction": [
          "Course Outline",
          "Join Our Online Classroom!",
          "Exercise: Meet Your Classmates and Instructor",
          "Vue vs React vs Angular",
          "Composition vs. Options API",
          "Complete Course Resources + Code",
          "Optional: Vue Documentary",
          "ZTM Resources",
          "Monthly Coding Challenges, Free Resources and Guides"
        ],
        "Vue Fundamentals": [
          "Getting Started",
          "Vue Dev Tools",
          "Working with Data",
          "Multiple Vue Instances",
          "Accessing the Instance Data",
          "Methods",
          "Directives",
          "Two-way data binding",
          "Binding Attributes",
          "Outputting Raw HTML",
          "Listening to Events",
          "Passing on Data with Events",
          "Event Modifiers",
          "Keyboard Events and Modifiers",
          "v-model Modifiers",
          "Computed Properties",
          "Watchers",
          "Binding Classes",
          "Binding Styles",
          "Conditional Rendering",
          "The v-show Directive",
          "List Rendering",
          "Understanding the role of the key attribute",
          "Web Developer Monthly",
          "Endorsements On LinkedIN"
        ],
        "Project 1: Perspective Playground": [
          "Creating a Perspective Playground",
          "Copying to the Clipboard",
          "Extra Exercise: Copy Button"
        ],
        "Vue: Beyond the Fundamentals": [
          "Mounting the Vue Instance",
          "Understanding Lifecycle Hooks",
          "Using Lifecycle Hooks",
          "Virtual DOM",
          "Understanding Reactivity with Proxies",
          "The Vue Compiler",
          "Introduction to Components"
        ],
        "Vue Developer Environment": [
          "Overview",
          "Optional Videos In Appendix",
          "Introduction to Vite",
          "Exploring Vite",
          "Understanding SASS",
          "PostCSS",
          "Installing ESLint",
          "Configuring ESLint",
          "Webpack",
          "Conclusion"
        ],
        "Advanced Vue Components": [
          "Scaffolding a Vue Project",
          "Sidebar: Understanding Servers",
          "Reviewing the Files",
          "Creating Components",
          "Child Components",
          "Component Styles",
          "Using SASS in Components",
          "Communicating Between Components",
          "Props",
          "The Limitations of Props",
          "Emitting Events",
          "Validating Props",
          "Callback Functions",
          "Inserting content with slots",
          "Named Slots"
        ],
        "Transitions & Animations": [
          "Dynamic Components",
          "Animating with CSS Transitions",
          "Fine-tuning Transitions",
          "Animating with CSS Animations",
          "Animating with JavaScript",
          "JavaScript Zoom Animation",
          "CSS and JavaScript Transitions",
          "Animating a List",
          "Fixing the Animation",
          "Transition CSS Class Names"
        ],
        "Project 2: Vue Quiz App": [
          "Setting up the Quiz Application",
          "Rendering the Questions",
          "Moving between Questions",
          "Finishing Touches",
          "Exercise: Imposter Syndrome"
        ],
        "Master Project: Introduction to Pinia": [
          "The Next Step",
          "Creating a New Project",
          "Reviewing the Files",
          "Formatting with ESLint and Prettier",
          "Adding the Template",
          "What is Tailwind?",
          "Installing Tailwind",
          "Practicing with Tailwind",
          "Loading Assets",
          "Understanding State",
          "Reviewing the Pinia Configuration",
          "Splitting the Template into Components",
          "Disabling Vue’s Rules",
          "Working with State",
          "Alternative Mapping Functions",
          "Understanding Getters",
          "Using Getters",
          "Closing the Modal",
          "Aliases",
          "Adding Tabs"
        ],
        "Master Project: Form Validation": [
          "Setting up Form Validation",
          "Registering a Plugin",
          "Validation Components",
          "Defining Rules",
          "Applying Rules",
          "Additional Rules",
          "Validating Emails",
          "Validating Numbers",
          "Validating Passwords",
          "Dropdown and Checkbox Fields",
          "Validating the Form",
          "Sidebar: Slot Properties",
          "Rendering Multiple Error Messages",
          "Default Values",
          "Custom Error Messages",
          "Validation Triggers",
          "Showing Alerts",
          "Setting up the Login Form"
        ]
      },
      "requirements": [
        "Basic HTML, CSS and JavaScript knowledge",
        "You do not need any experience with Vue or any other JS framework!"
      ],
      "description": "Just updated with all new Vue 3 features! Join a live online community of over 900,000+ developers and a course taught by industry experts that have actually worked both in Silicon Valley and Toronto with Vue.js.\n\nUsing the latest version of Vue, this course is focused on efficiency. Never spend time on confusing, out of date, incomplete tutorials anymore. Graduates of Andrei’s courses are now working at Google, Tesla, Amazon, Apple, IBM, JP Morgan, Facebook, + other top tech companies.\nWe guarantee you this is the most comprehensive online resource on Vue. This project based course will introduce you to all of the modern toolchain of a Vue JS developer. Along the way, we will build a massive Music Player application similar to Spotify using Vue, Pinia, Vue Router, Composition API, Firebase, Vitest, Sass + more. This is going to be a full stack app, using Firebase.\n\n\nAll code is going to be provided step by step and even if you don’t like to code along, you will get access to the the full master project code so anyone signed up for the course will have their own project to put on their portfolio right away.\n\n\nThe curriculum is going to be very hands on as we walk you from start to finish of releasing a professional Vue project all the way into production. We will start from the very beginning by teaching you Vue basics and then going into advanced topics so you can make good decisions on architecture and tools on any of your future VueJS projects. You're going to love Vue if you are new to front end frameworks or even if you come from a React or Angular background!\n\n\nHere is what the course will cover:\n\n\n\n1. FUNDAMENTALS - In this section, we will learn about the fundamentals of Vue, such as computed properties, methods, and watchers. With just the fundamentals, we'll be able to manipulate the document with events, binding, and conditional rendering. We'll also learn how to debug an application with the official Vue Developer Tools.\n\n\n\n\n2. PROJECT: PERSPECTIVE PLAYGROUND - In this section, we'll build our first project by creating a CSS perspective playground. This will give us an opportunity to reinforce a lot of the fundamental concepts we learned in the previous section by developing a tool for visualizing how CSS properties can manipulate the perspective of an element.\n\n\n\n\n3. BEYOND THE FUNDAMENTALS - In this section, we'll dive into the inner workings of the Vue framework. How do JavaScript frameworks add reactivity? How does Vue compile templates into virtual DOM objects? This will give us insight into how Vue is able to deliver a framework for modern applications. We'll also talk about lifecycle hooks and components.\n\n\n\n\n4. LEARNING ABOUT THE TOOLS - In this section, we'll take a step back from Vue to talk about some tools for developing applications. Throughout your career, you'll need to deal with the tooling that helps us develop applications (i.e., Vite, Sass, PostCSS, ESLint). We'll talk about how these tools are configured and why they're necessary.\n\n\n\n\n5. ADVANCED COMPONENTS - In this section, we'll scaffold a Vue project with Vite. The goal of Vue is to make the development experience as smooth and painless as possible. Vue can help us with scaffolding a project, configuring tools, and running a server. This alleviates a lot of the more tedious tasks of web development. We'll be able to jump straight into components to see how we can architect an application with components by using props, emitting events, slots, and dynamically rendering content.\n\n\n\n\n6. TRANSITIONS & ANIMATIONS - In this section, we'll learn how to add some pizzaz to an app by adding transitions and animations. Animations can breathe life into any application. They can also improve user experience by giving feedback to the user about their actions. We'll discuss how animations can be achieved with CSS and JavaScript. Both are supported in Vue. We'll even talk about the latest Web Animations API.\n\n\n\n\n7. PROJECT: QUIZ APP - In this section, we're going to take everything we've learned thus far to develop a quiz application. Quizzes are a great way to engage users in almost any industry.\n\n\n\n\n8. MASTER PROJECT: INTRODUCTION TO PINIA - In this section, we'll start working on the master project for this course, which is a music application! Upload, manage and listen to music without interruption. We'll use TailwindCSS to help us with designing a beautiful modern application. It's the new kid on the block that's being embraced by the front-end dev community. Afterward, we'll learn about state management by using the official state library called PINIA (replaces Vuex in newer codebases).\n\n\n\n\n9. MASTER PROJECT: FORM VALIDATION - In this section, we will perform form validation to prevent invalid data from being submitted. Accidents happen. It's our job to make sure to check for mistakes. We'll learn how to enforce rules for various scenarios.\n\n\n\n\n10. MASTER PROJECT: AUTHENTICATION - In this section, we'll begin authentication and registration. Users will be able to login immediately after registering for an account. We'll be using Firebase as a backend solution for managing and verifying users.\n\n\n\n\n11. MASTER PROJECT: ROUTING - In this section, we're going to handle routing with the Vue Router library. Underneath, the router library is using the history API to handle navigation. It allows us to switch between pages without refreshing the assets. We'll look at how we can use this library to help us guard routes, add meta fields, and customize the appearance of our site based on the current route.\n\n\n\n\n12. MASTER PROJECT: UPLOADING FILES - In this section, we're going to start uploading files to Firebase. It's vital we validate files with Firebase. We don't want users to accidentally download a malicious file when listening to music. We'll cover how to enforce validation with Firebase rules. After doing so, we'll store additional information in a database. We'll even cover how to implement a fallback solution in case drag n drop is not available.\n\n\n\n\n13. MASTER PROJECT: PLAYING MUSIC - In this section, we're going to start making the audio player functional. We'll implement basic features such as playing/pausing, scrubbing and displaying the current duration. We'll make the rest of the site functional by allowing users to submit comments, browse music, and sort data.\n\n\n\n\n14. MASTER PROJECT: DIRECTIVES - In this section, we'll briefly learn about writing custom directives. Directives are attributes that can extend an element with additional properties and methods. We'll cover the basics and look at advanced concepts such as modifiers and arguments.\n\n\n\n\n15. MASTER PROJECT: INTERNATIONALIZATION - In this section, we'll add internationalization to a project for translating a project across multiple languages. There are different ways to translate a message. Some messages need formatting or pluralization. We can also translate numbers (i.e., currencies). We'll look at how to switch between languages with a few lines of code.\n\n\n\n\n16. MASTER PROJECT: PWA - The web has shifted to a mobile-first approach. In this section, we'll add PWA (Progressive Web App) features to make our app mobile-friendly by using Workbox to cache files and persist data with Firebase.\n\n\n\n\n17. MASTER PROJECT: OPTIMIZATIONS - In this section, we'll make some final optimizations before shipping our app to production. There are various techniques and tools we'll look at to help us fine-tune our app. We can use Vite to chunk files and auto-register components. We'll add some features for helping the user understand the app is processing a request for a friendly user experience.\n\n\n\n\n18. MASTER PROJECT: DEPLOYMENT - In this section, we'll deploy our app to Vercel with a single command! Quick and easy.\n\n\n\n\n19. MASTER PROJECT: TESTING - In this section, we'll discuss how to test a project with Vitest. Unit testing allows us to test a feature in isolation. It's the most common type of test you'll write. There are a few problems with testing that can be resolved with mocking. By mocking code, we'll be able to isolate features and test them. Afterward, we'll move on to snapshot testing and E2E testing to bring everything together.\n\n\n\n\n20. COMPOSITION API - In this section, we'll discuss the latest feature introduced in Vue called the composition API. It's a different way of building components. While Vue provides a simple API for writing components, there are some shortcomings. The composition API resolves these issues. We'll talk about why you would want to use the composition API and understand why it was introduced.\n\n\nThis course is not about making you just code along without understanding the principles so that when you are done with the course, you don’t know what to do other than watch another tutorial. No! This course will push you and challenge you to go from an absolute beginner in Vue to someone that is in the top 10% of Vue developers.\n\nWe guarantee you this is the most comprehensive online course on Vue JS! Have a look at the course outline video to see all the topics we are going to cover, all the projects we’re going to build, and all the techniques you’re going to learn to become a top Vue developer!\n\nSee you inside!\n\n\n\nTaught By:\n\nAndrei Neagoie is the instructor of the highest rated Development courses on Udemy as well as one of the fastest growing. His graduates have moved on to work for some of the biggest tech companies around the world like Apple, Google, Amazon, JP Morgan, IBM, UNIQLO etc... He has been working as a senior software developer in Silicon Valley and Toronto for many years, and is now taking all that he has learned, to teach programming skills and to help you discover the amazing career opportunities that being a developer allows in life.\nHaving been a self taught programmer, he understands that there is an overwhelming number of online courses, tutorials and books that are overly verbose and inadequate at teaching proper skills. Most people feel paralyzed and don't know where to start when learning a complex subject matter, or even worse, most people don't have $20,000 to spend on a coding bootcamp. Programming skills should be affordable and open to all. An education material should teach real life skills that are current and they should not waste a student's valuable time.   Having learned important lessons from working for Fortune 500 companies, tech startups, to even founding his own business, he is now dedicating 100% of his time to teaching others valuable software development skills in order to take control of their life and work in an exciting industry with infinite possibilities.\nAndrei promises you that there are no other courses out there as comprehensive and as well explained. He believes that in order to learn anything of value, you need to start with the foundation and develop the roots of the tree. Only from there will you be able to learn concepts and specific skills(leaves) that connect to the foundation. Learning becomes exponential when structured in this way.\nTaking his experience in educational psychology and coding, Andrei's courses will take you on an understanding of complex subjects that you never thought would be possible.\nSee you inside the courses!\n\n\n\nLuis Ramirez Jr is a software engineer with a decade of experience in web application development. He has spent his career architecting reliable, battle-tested, secure, scalable, and performant solutions. As an engineer, it's always a priority to develop applications that provide a fluid user experience.\n\n\nMost courses will teach you the \"how,\" but never the \"why.\" Luis believes that understanding core and critical programming concepts will make you a competitive engineer in today's market. He's here to assist you in this journey by demystifying low-level concepts that other instructors may gloss over.\n\n\nStudents will walk away with the knowledge to overcome any task thrown at them with critical thinking skills and being able to effectively communicate with teammates.",
      "target_audience": [
        "Students who are interested in going beyond a normal \"beginner\" tutorial",
        "Programmers who want to learn the most in demand skill of a web developer",
        "Developers that want to be in the top 10% of Vue Developers",
        "Students who want to gain experience working on a scalable large application",
        "Bootcamp or online tutorial graduates that want to go beyond the basics"
      ]
    },
    {
      "title": "CSS, Bootstrap, JavaScript And PHP Stack Complete Course",
      "url": "https://www.udemy.com/course/css-bootstrap-javascript-and-php-stack-complete-course/",
      "bio": "CSS, Bootstrap And JavaScript And PHP Complete Frontend and Backend Course",
      "objectives": [
        "Introduction to Frontend and Backend technologies",
        "Introduction to CSS, Bootstrap And JavaScript concepts, PHP Programming Language",
        "Practically Getting Started With CSS Styles, CSS 2D Transform, CSS 3D Transform",
        "Bootstrap Crash course with bootstrap concepts",
        "Bootstrap Grid system,Forms, Badges And Alerts",
        "Getting Started With Javascript Variables,Values and Data Types, Operators and Operands",
        "Write JavaScript scripts and Gain knowledge in regard to general javaScript programming concepts",
        "PHP Section Introduction to PHP, Various Operator types , PHP Arrays, PHP Conditional statements",
        "Getting Started with PHP Function Statements And PHP Decision Making PHP 7 concepts PHP CSPRNG And PHP Scalar Declaration"
      ],
      "course_content": {
        "Introduction": [
          "CSS IN HTML",
          "CSS Introduction",
          "CSS Basic Syntax",
          "CSS Fonts",
          "CSS Text",
          "CSS Links",
          "CSS Layers",
          "CSS Lists",
          "CSS Animation",
          "CSS 2D Transform",
          "CSS 3D Transform",
          "CSS Colors Introduction",
          "CSS Colors 2",
          "CSS Cursors",
          "CSS Padding",
          "CSS Positioning",
          "CSS Dimensions",
          "CSS Rounded Corners",
          "CSS Visibility",
          "CSS Scrollbars",
          "CSS Selectors",
          "CSS Background",
          "CSS Gradient",
          "CSS Images",
          "CSS Borders"
        ],
        "BootStrap Course": [
          "Bootstrap Environment Setup",
          "Bootstrap Forms",
          "Bootstrap Badges",
          "Bootstrap Alerts",
          "Bootstrap Breadcrumb",
          "Bootstrap Button Groups",
          "Bootstrap Buttons",
          "Bootstrap List Groups",
          "Bootstrap Labels",
          "Bootstrap Grid System"
        ],
        "Section 3- JavaScript Complete Course": [
          "JavaScript Introduction",
          "JavaScript Array",
          "JavaScript Variables",
          "JavaScript Conditional Statement Introduction",
          "JavaScript If Else Statement.",
          "JavaScript Iteration Statements",
          "JavaScript for Loop",
          "JavaScript While Loop",
          "JavaScript Do..while loop",
          "JavaScript Loop Control Statements",
          "JavaScript Switch Statement",
          "JavaScript Operators",
          "JavaScript Logical Operators",
          "JavaScript Comparison Operators",
          "JavaScript Functions",
          "JavaScript Events",
          "JavaScript Error Handling",
          "JavaScript Cookies",
          "JavaScript Animation",
          "JavaScript Objects",
          "JavaScript Page Redirect."
        ],
        "PHP Complete Course": [
          "PHP Basic Syntax",
          "PHP Web Concepts.",
          "PHP Console Input And Output",
          "PHP Arithmetic Operators",
          "PHP Comparison Operators",
          "PHP Assignment Operators",
          "PHP Conditional Operator",
          "PHP Function Statements",
          "PHP Break Statement.",
          "PHP Continue Statement",
          "PHP Decision Making",
          "PHP While Loop",
          "PHP For Loop",
          "PHP MySql API",
          "PHP MySqli API.",
          "PHP Inheritance.",
          "PHP Class And Object",
          "PHP Anonymous Class",
          "PHP Cookies",
          "PHP File Input And Output",
          "PHP Error Handling",
          "PHP Exception Handling",
          "PHP GET And POST Method",
          "PHP CSPRNG",
          "PHP Scalar Type Declaration",
          "PHP Null Coalescing Operator",
          "PHP Spaceship Operator",
          "PHP Polymorphism",
          "PHP Sessions"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge",
        "Basic HTML Knowledge"
      ],
      "description": "Learn CSS and Bootstrap and Javascript and PHP Programming all in one complete course\nsection 1- CSS course with basics and advanced concepts of CSS\never wonder how the latest website designs are made? Cascading Style Sheets (CSS) are the main coding files used to layout a website and its design. CSS 3 is the latest in styling standards, and it brings several new properties and declarations you can use to make your website design more easily created. CSS is currently the only standard in website design that plugs directly into your HTML, even the latest HTML 5 standards. With CSS 3 and HTML 5, you can create the latest interactive pages for your website viewers.\nthis course shows you how to create CSS classes from a beginner's level. It starts off with basic HTML declarations, properties, values, and how to include a CSS style sheet with your HTML code. For those of you who are new to CSS and HTML, we show you step-by-step how to create a CSS file and include it in your HTML code, even if you use a cloud server for your hosting.\nwe show you how to position your elements, layout your elements relative to your documents, and style your HTML using predefined CSS values. We introduce you to the common CSS styling that you'll need when you start off designing your pages. If you want to get to know CSS and website design, this course is meant for you, and it can be used by anyone who hasn't even seen one line of CSS code yet. We focus on the latest CSS 3 and HTML 5 standards, so you get the latest when coding your website pages instead of focusing on older code.\nthere are no prerequisites. Anyone Can join this course. It is recommended though that individuals have some basic computer programming knowledge.\n\n\nCourse Topics\n\n\nIntroduction to CSS\ninclusion Of CSS In HTML\nCSS syntax\nCSS styling Text\nCSS page backgrounds\nCSS 2D transform\nCSS 3D transform\nCSS animation\nand more....\n\n\n\n\nSection 2- Learn bootstrap in a crash course\n\n\nbootstrap grid system\nbootstrap alerts\nbootstrap badges\nbootstrap forms\nbootstrap breadcrumb\nbootstrap  labels\nand more...\n\n\nSection 3- learn javascript programming language\nThe course is created with thorough, extensive, but easy-to-follow content that you’ll easily understand and absorb.\nThe course starts with the basics, including JavaScript fundamentals, programming, and user interaction.\n\n\nthe curriculum is going to be very hands-on as we walk you from start to finish to become a professional Javascript developer. We will start from the very beginning by teaching you Javascript basics and programming fundamentals, and then execute into real-life practice and be ready for the real world.\n\n\nwhile Javascript is complicated for beginners to learn, it is widely used in many web development areas.\nthis course gets you started with an introduction to JavaScript. It assumes that you're new to the language, so it gets you started with basic functionality such as creating functions, creating variables, and calling these lines of code from your standard HTML pages. It talks about events and triggers for custom event handling. It talks about pattern matching, searching for text within a page, flow control, and the document object model (DOM). We start off with the basics and move on to more complex functionality such as arrays and objects. We then discuss how to script common elements with JavaScript such as forms and tables. At the very end, we discuss major libraries such as Ajax, which allows you to make asynchronous calls to server-side scripts without reloading the web page in the server.\nMaster the fundamentals of writing Javascript scripts\nLearn core Javascript scripting elements such as variables and Objects\nDiscover how to work with lists and sequence data\nWrite Javascript functions to facilitate code reuse\nUse Javascript to read and write files\nMake their code robust by handling errors and exceptions properly\nSearch text using regular expressions\nThe topics covered in this course are:\n* javascript course contents:\nJavascript introduction\nJavascript array\nJavascript variables\nJavascript functions\nJavascript objects\nJavascript control statements\nJavascript cookies\nJavascript loop statements\nJavascript data structures\nJavascript error handling\nJavascript regular expressions\n\n\n\nsection 4- learn PHP programming language\nThis section will learn the basic structure of a web application and how a web browser interacts with a web server. You'll be introduced to the request/response cycle, including GET/POST/Redirect. You'll also gain an introductory understanding of Hypertext Markup Language (HTML), as well as the basic syntax and data structures of the PHP language, variables, logic, iteration, arrays, error handling, and superglobal variables, among other elements.\n\n\nThe topics covered in this PHP course are:\n\n\nPHP various operator types\nPHP arrays\nPHP conditional statements\nPHP loops\nPHP function statements\nPHP decision making\nPHP file Input and Output\nPHP web concepts\nPHP MySql API\nPHP CSPRNG\nPHP scalar declaration\nand more..",
      "target_audience": [
        "Beginner Full Stack Developers",
        "Beginner Web Developer"
      ]
    },
    {
      "title": "Progressive Web Apps (PWA) - The Complete Guide",
      "url": "https://www.udemy.com/course/progressive-web-app-pwa-the-complete-guide/",
      "bio": "Build a Progressive Web App (PWA) that feels like an iOS & Android App, using Device Camera, Push Notifications and more",
      "objectives": [
        "Build web apps that look and feel like native mobile apps for iOS and Android",
        "Use service workers to build web apps that work without internet connection (offline-first)",
        "Leverage device features like the camera and geolocation in your web apps",
        "Use web push notifications to increase user engagement with your web apps"
      ],
      "course_content": {
        "Getting Started": [
          "About this Course",
          "What are Progressive Web Apps?",
          "Join our Online Learning Community",
          "PWAs vs Native Mobile Apps",
          "Node.js Download",
          "A Demo PWA & What We'll Build in this Course",
          "Our First Progressive Web App",
          "PWA Core Building Blocks",
          "Comparing PWAs and SPAs",
          "What is \"Progressive Enhancement\"?",
          "Course Outline",
          "Course Project Setup",
          "How to get the Most out of this Course"
        ],
        "Understanding the App Manifest": [
          "Module Introduction",
          "Using an App Manifest to Make your App Installable",
          "Adding the Manifest",
          "Understanding App Manifest Properties",
          "Adding Properties to the App Manifest",
          "PWAs and Browser Support",
          "Using the Chrome Developer Tools",
          "Simulating the Web App on an Emulator",
          "Preparing the Emulated Device for ALL PWA Features",
          "Installing the Web App - Prerequisites",
          "Understanding manifest.json",
          "Adding Properties for Safari",
          "Adding Properties for the Internet Explorer",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "The Service Workers": [
          "Module Introduction",
          "Why Service Workers Are Amazing!",
          "Understanding Service Worker Events",
          "The Service Worker Lifecycle",
          "Service Worker Browser Support",
          "Registering a Service Worker",
          "Reacting to Incoming Events (in SW)",
          "Updating & Activating Service Workers",
          "Non-Lifecycle Events",
          "The App Install Banner & Chrome 68+",
          "Getting that \"App Install Banner\"",
          "Connecting Chrome Developer Tools to a Real/ Emulated Device",
          "Testing the App on Real Device (and Installing the App!)",
          "Deferring the App Install Banner",
          "Wrap Up",
          "Service Worker FAQ",
          "Useful Resources & Links"
        ],
        "Promise and Fetch": [
          "Module Introduction",
          "Async Code in JavaScript",
          "Promises - Basics",
          "Rejecting Promises",
          "Where we Use Promises in our Project",
          "Fetch - Basics",
          "Sending Post Requests via Fetch",
          "Fetch and CORS",
          "Comparing Fetch and Ajax",
          "Adding Polyfills (for Legacy Browser Support)",
          "Fetch & Service Workers",
          "Time to Practice - Promises & Fetch API",
          "[OPTIONAL] Assignment Solution",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Service Workers - Caching": [
          "Module Introduction",
          "Why Caching?",
          "Understanding the Cache API",
          "Browser Support",
          "Adjusting the Course Project",
          "Identifying (Pre-)Cacheable Items",
          "Static Caching/ Precaching",
          "Retrieving Items from the Cache",
          "Adding & Retrieving Multiple Files (to/ from Cache)",
          "Cache Multiple Files with addAll",
          "Dynamic Caching - The Basics",
          "Implementing Dynamic Caching",
          "Handling Errors",
          "Adding Cache Versioning",
          "Different Cache Versions & Cleanup",
          "Optimizing Cache Management",
          "Time to Practice: Service Workers & Caching",
          "[OPTIONAL] Assignment Solution",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Service Workers - Advanced Caching": [
          "Module Introduction",
          "Module Preparation: Adding a Button",
          "Offering \"Cache on Demand\"",
          "Providing an Offline Fallback Page",
          "Strategy: Cache with Network Fallback",
          "Strategy: Cache Only",
          "Strategy: Network Only",
          "Strategy: Network with Cache Fallback",
          "Strategy: Cache then Network",
          "Cache then Network & Dynamic Caching",
          "Cache then Network with Offline Support",
          "Cache Strategies & \"Routing\"",
          "Applying Cache Only",
          "Time to Practice - Advanced Caching",
          "[OPTIONAL] Assignment Solution",
          "A Better Way Of Parsing Static Cache URLs",
          "Making Route Matching More Precise",
          "A Better Way Of Serving Fallback Files",
          "Post Request and Cache API",
          "Cleaning/ Trimming the Cache",
          "Getting Rid of a Service Worker",
          "Preparing the Project for the Next Steps",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "IndexedDB and Dynamic Data": [
          "Module Introduction",
          "Understanding the Basics",
          "Changed Firebase Console Layout",
          "Setting Up Firebase",
          "Connecting Frontend to Backend",
          "Dynamic Caching vs. Caching Dynamic Content",
          "Introducing IndexedDB",
          "IndexedDB Browser Support",
          "Adding the IDB File",
          "Storing Fetched Posts in IndexedDB",
          "Using IndexedDB in the Service Worker",
          "Reading Data from IDB",
          "Clearing IDB & Handling Server-Client Mismatch",
          "Implementing the Clear Database Method",
          "Deleting Single Items from the Database",
          "IndexedDB and Caching Strategies",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Creating a Responsive User Interface (UI)": [
          "Module Introduction",
          "Responsive Design in this Course",
          "Understanding Responsive Design in our Project",
          "CSS and Media Queries",
          "Want to see more of your Images?",
          "Using Images in a Responsive Way",
          "Adding Animations",
          "The Viewport & Scaling",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Background Sync": [
          "Module Introduction",
          "How does Background Sync Work?",
          "Adding the Basic Setup to our Project",
          "Registering a Synchronization Task",
          "Storing our Post in IndexedDB",
          "Adding a Fallback",
          "Syncing Data in the Service Worker",
          "Understanding Periodic Sync",
          "MUST READ: Firebase Cloud Functions & Billing",
          "Adding Server Side Code",
          "Fixing Errors",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Web Push Notifications": [
          "Module Introduction",
          "Why we need Web Push Notifications",
          "How Push & Notifications Work",
          "Displaying Notifications - Some Theory First",
          "Browser Support",
          "Requesting Permissions",
          "Displaying Notifications",
          "Notifications from Within the Service Worker",
          "Understanding Notifications' Options",
          "Advanced Options",
          "Adding Actions to Notifications",
          "Reacting to Notification Interaction - Clicks",
          "Reacting to Notification Interaction - Closing",
          "From Notifications to Push Messages",
          "Creating a Push Subscription",
          "Storing Subscriptions",
          "Connecting Server & Client (PWA)",
          "Sending Push Messages from the Server",
          "Listening to Push Messages",
          "Displaying Push Notifications on a Real Device",
          "Opening a Page upon User Interaction",
          "Improving our Code",
          "Wrap Up",
          "Useful Resources & Links"
        ]
      },
      "requirements": [
        "Basic HTML, CSS and JavaScript knowledge is required",
        "NO experience with JavaScript frameworks is required"
      ],
      "description": "Progressive Web Apps (PWAs) bring mobile-app-like experiences to your users without requiring them to install an app from the app store/ play store.\nYou still create a web application (HTML, CSS, JavaScript) but this course will teach you how to add features such as camera access, service workers for offline support, push notifications and more. This combines the best of both worlds: You deliver fast, engaging and reliable experiences whilst still having the reach and accessibility of a web page.\n\"Progressive Web App\" simply is a term summarizing all the features allowing you to deliver mobile-like experiences. The topic is highly trending and it also is a topic which is here to stay! Not only is it strongly promoted by Google, it's also quickly being adopted by big companies like Twitter or the Washington Post.\nHaving the skills to build and optimize these kind of web apps is already an important and highly demanded skill for modern web developers, a trend which is only going to accelerate! Therefore, learning how to build PWAs will give you a competitive edge!\nIn detail, this course will cover everything you need to build amazing PWAs - leading to a score of 100 (out of 100) in Google's PWA auditing tool \"Lighthouse\":\nDetailed explanation about what a PWA exactly is\nHow to use an app manifest to make your web app installable on device homescreens\nUsing service workers to offer offline support by caching assets\nAdvanced service worker usage and caching strategies\nA refresher on Promises and the Fetch API as both concepts are heavily used in PWAs\nHow to improve user engagement by adding push notifications\nA way to synchronize data in the background, even if connection is lost\nHow to access native device features like the camera or geolocation\nUsing Workbox to make service worker management easier\nExplanations on how to turn your next SPA project into a PWA\nAnd more\nAll these things are of course put into practice by building a course project. To ensure that you can apply the knowledge to ANY of your projects, the course project doesn't assume any JavaScript framework but focuses on the core features mentioned above!\nSo this course has a lot to offer, how do you tell if it's for you though?\nIt definitely is the right choice if\nyou already are a web developer (no matter if experienced or still new to the business) and want to prepare for the future\nyou enjoy working with HTML, CSS and JavaScript and want to leverage the full power the web and browser technologies have to offer\nyou want to deliver the best possible experiences to your users, using technologies like web push notifications or offline support\nWhat do you need to know to get the most out of the course?\nYou need to know at least the basics of HTML, CSS and JavaScript\nNo advanced knowledge of these technologies required though\nYou DON'T need to know any JavaScript framework like Angular or React - PWAs work with ANY JavaScript app, even if you don't use a framework at all (actually, that's what we'll build in the course!)\nI'd be very happy to welcome you on board of this course and start this journey together with you!\nMax",
      "target_audience": [
        "Students who want to build web apps that look and behave like native mobile apps",
        "Students who want to build offline-ready web apps (yes, that works!)",
        "Anyone who wants to build web apps that offer access to the device camera, geolocation, push notifications and provide offline support",
        "Students who want to leverage latest browser features whilst still supporting older browsers"
      ]
    },
    {
      "title": "The Nuxt 3 Bootcamp - The Complete Developer Guide",
      "url": "https://www.udemy.com/course/the-nuxt-3-bootcamp-the-complete-developer-guide/",
      "bio": "Build complex & engaging Vue apps with Nuxt3. Nuxt3 provides universal rendering, file based router, and other features",
      "objectives": [
        "Understanding the additional features that Nuxt provides on top of Vue, like universal rendering, auto importation, and file based routing",
        "Utilizing Nuxt to build production ready application with based development practices",
        "Leveraging the many Nuxt 3 composables like useFetch, useAsyncData, useState or useMeta",
        "Implementing routing with a file based approach"
      ],
      "course_content": {
        "Building The UI Elements": [
          "What We Will Be Building",
          "Your Two Options",
          "Creating a Nuxt App",
          "Adding Tailwind CSS",
          "Building the NavBar",
          "Building the Home Hero",
          "Building the Search Bar",
          "Building the Side Bar",
          "Building the Car Card",
          "Building the Car Details Page"
        ],
        "File Based Routing & Navigation": [
          "Intro to File Based Routing",
          "Auto Importing Components",
          "Dynamic and Optional Paths",
          "Filling the Page With Components",
          "Unique Dynamic Paths",
          "The NuxtLink Component",
          "Adding Programmatic Navigation",
          "Implementing Nested Pages",
          "Change Titles With useHead"
        ],
        "Defining Page Layouts": [
          "Defining a Default Layout",
          "Defining a Custom Layout",
          "Storing Common Functionality in Composables"
        ],
        "Handling Client and Server Errors": [
          "Adding a Page Not Found Page",
          "The useError Composable",
          "Dynamically Rendering the Car Cards",
          "Dynamically Rendering the Car Details Page",
          "Throwing a Custom Server Error",
          "How Nuxt Renders Content",
          "Updating the Location",
          "Throwing a Client Side Error",
          "NuxtErrorBoundary to Handle Client Side Errors"
        ],
        "Improving Functionality With Utilities": [
          "Optimizing Images with NuxtImg",
          "The useState Composable",
          "Adding the Vueuse Module",
          "Forcing Client Side Rendering"
        ],
        "Revisiting the Skipped Functionality": [
          "Adding the Car Make Filter",
          "Adding the Car Price Filter"
        ],
        "Authentication and Middleware": [
          "Our New Feature",
          "[OPTIONAL] - Assembling the Pages",
          "Creating a Supabase Account",
          "Connecting Supabase to Our Nuxt App",
          "Enabling Google Authentication",
          "Implementing Google OAuth",
          "Conditionally Rendering UI Based on Auth Status",
          "Implementing the Logout Functionality",
          "Protecting Routes With Inline Route Middleware",
          "Named Middleware For DRY Code",
          "Global Middleware for DRYER Code"
        ],
        "Server Endpoints and HTTP Requests": [
          "Intro to Server Endpoints",
          "Creating a Server Endpoint",
          "Extracting the Path Parameters",
          "Extracting the Query Parameters",
          "Fetching the Data From the Client",
          "A Hacky Way of Refetching Data",
          "Adding a Not Found Message for Better UI",
          "Adding the Fetch Car Endpoint",
          "Another Fetch Composable",
          "Fixing an Issue With Error Handling"
        ],
        "Utilizing Postgres for Data Transactions": [
          "A Small SQL Crash Course",
          "Installing an ORM",
          "Programmatically Creating Our Tables",
          "A Perfect Endpoint",
          "HTTP Verbs",
          "Fetching Data From the Database",
          "Deleting Data From the Database",
          "Adding the Other Two Endpoints",
          "Complex Filters",
          "Our Last Endpoint",
          "Making a POST Request From the Client",
          "Making a GET Request From the Client",
          "Making a DELETE Request From the Client",
          "Fixing the GET Endpoints",
          "A POST Message Endpoint",
          "A GET Message Endpoint"
        ],
        "Image Storage and Retrieval": [
          "Storing Images in a Bucket",
          "Retrieving the Image URL"
        ]
      },
      "requirements": [
        "Basics of Vue 3",
        "Basics of JavaScript"
      ],
      "description": "This is the most comprehensive Nuxt 3 course on the market. You will learn many of Nuxt's incredible features all while build six real world projects. With each new project we will dive deep into more and more advanced Nuxt 3 concepts. By the end of the course you can proudly label yourself as a Nuxt expert!\n\n\nWhat you'll learn\nIn the introduction, you will learn exactly what Nuxt is and problems it solves. You will learn about client-side rendering and compare it with universal rendering.\nIn the first project, we will refresh your Vue 3 knowledge by building an app with the composition API. We will also learn about TypeScript and how Nuxt handles components.\nIn the second project, we will dive deeper into the Nuxt ecosystem. We will learn about file-based routing, layouts, and defining page metadata.\nIn the third project, we will learn all about how we can globally manage state with composables.\nIn project number four, we will learn how to make HTTP requests by using useFetch and useAsyncData.\nIn the fifth project, we will leverage the powers of Nuxt to build our very own REST API and utilizing it in the client.\nLastly, in the sixth project, we will integrate our app with Supabase to leverage it's authentication and SQL database services.",
      "target_audience": [
        "Anyone that wants to ease the Vue development process by harnessing the powers of NuxtJS",
        "Anyone that wants to build universal rendered web application"
      ]
    },
    {
      "title": "React Styled Components Course (V5)",
      "url": "https://www.udemy.com/course/styled-components-tutorial-and-project-course/",
      "bio": "Step by Step Learn Styled-Components",
      "objectives": [
        "Using Styled-Components in React Applications"
      ],
      "course_content": {
        "Introduction": [
          "What Are Styled-Components",
          "Course Requirements",
          "VS Code Setup",
          "Low Quality Video Fix",
          "Course Review"
        ],
        "Styled Components Tutorial": [
          "Source Code",
          "Create New Project",
          "Install Styled Components",
          "Inline Styles and Global CSS",
          "Major Flaws",
          "First Styled Component",
          "Setup in Detail",
          "Button Component",
          "Separate Files",
          "Simple Props",
          "Other Props Options",
          "Extend Styled Component",
          "Extend React Components",
          "More Complex Component",
          "Alternative Syntax",
          "Global Classes",
          "CSS Variables",
          "Utils Approach",
          "Custom Border Example",
          "Card - Setup",
          "Card - Style Container",
          "Card - Nesting",
          "Card - Media Queries, Hover and Pseudo Elements",
          "Global Styles",
          "Theming",
          "Animations",
          "'AS' Prop",
          "Important Update!",
          "Macro and 'CSS' Prop",
          "CSS Helper Function",
          "Form Setup",
          "ATTRS - Button Example",
          "Submit Button Styles",
          "ATTRS - Input Example",
          "More Complex Props - List Example",
          "More Complex Props - Products Example"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "Basic Knowledge of React"
      ],
      "description": "What's up everybody this is John from Coding Addict and welcome to my Styled Components course.\nAs styled components co -creator Max Stoiber says:\n“The basic idea of styled components is to enforce best practices by removing the mapping between styles and components.”\nStyled Components are part of CSS inJS movement where we can create components that possess their own encapsulated styles. No longer we need to create component decide on a selector and then rush to app css or any other stylesheet to write separate styles for that particular component. What makes Styled Components so cool is their awesome tagged template syntax that allows to create normal react components by only defining styles. With zero configuration styled-components support css modularity, variables in css, nesting in css, extending components styles and many more. Styled Components also allows us to  write plain CSS in your components without worrying about class name collisions\nStyled-components is a CSS-in-JS styling framework that uses tagged template literals in JavaScript and the power of CSS to provide a platform that allows you to write actual CSS to style React components.\nStyled components are easy-to-make React components that you write with the styled-components library, where you can style your components with plain CSS inside your JavaScript code.",
      "target_audience": [
        "Everyone who wants to learn Styled-Components"
      ]
    },
    {
      "title": "Beginner API development in Node, Express, ES6, & MongoDB",
      "url": "https://www.udemy.com/course/api-development/",
      "bio": "REST API backend development. Build Node API and restful express API",
      "objectives": [
        "Build APIs that iOS apps & Android apps can talk to",
        "Deploy APIs in Node to live servers",
        "Deploy live MongoDB instances on servers that the APIs can talk to",
        "Write code in ES6 for API development or for general programming"
      ],
      "course_content": {
        "API Course Intro": [
          "Intro to API Course",
          "What is a REST API"
        ],
        "Setup for Node, MongoDB, Postman, and other API tools": [
          "API Tooling Intro for Node API",
          "Installing Atom - Code editor for API development",
          "Installing Nodejs & node version manager",
          "Installing MongoDB - noSQL database",
          "Installing Postman - Client to test node API",
          "Installing Node js packages with NPM",
          "Quiz"
        ],
        "Hello API": [
          "Hello World API Example Code Along in Node",
          "Quiz"
        ],
        "JavaScript Basics": [
          "Intro - Why Javascript for node API development",
          "ECMAScript Standards and ES6",
          "ES6 Variables",
          "ES6 Strings",
          "ES6 Operators",
          "ES6 Conditionals and Loops",
          "ES6 Functions",
          "ES6 JavaScript Objects",
          "ES6 Arrays",
          "ES6 Array Helpers",
          "ES6 'this' and 'bind'",
          "ES6 'Call'",
          "ES6 'import' and 'require'",
          "Exercise",
          "Quiz"
        ],
        "Creating our REST API": [
          "Node REST API Section Intro",
          "Setting up our Node Project Skeleton",
          "Setting up MongoDB for Node API",
          "Adding Data (POST requests in Node)",
          "Retrieving Data (GET requests in Node)",
          "Updating Data (PUT requests in Node)",
          "Deleting Data (DELETE requests in Node)",
          "Adding features to our Node API and refactoring",
          "Exercise",
          "Quiz"
        ],
        "Authentication and Security": [
          "Setting up our User Model for Authentication in Node",
          "Authentication Middleware and Securing Resources in Node",
          "Exercise",
          "Quiz"
        ],
        "Deploying Our Node API To A Live Server": [
          "Node deployment: Intro",
          "Node deployment: Spinning up a Digital Ocean droplet for our Node API",
          "Node deployment: Digital Ocean droplet part 2",
          "Node deployment: Digital Ocean droplet part 3"
        ],
        "Creating an iOS app to make use of our Node REST API": [
          "Building an iOS client Intro",
          "API Adjustments",
          "Data Models",
          "DataService",
          "AuthService",
          "Main ViewController",
          "LogIn ViewController",
          "AddFoodTruck ViewController",
          "Details ViewController",
          "Reviews ViewController",
          "AddReview ViewController",
          "Exercise - Extending our iOS API Client"
        ],
        "Creating an Android app to make use of our Node REST API": [
          "Intro to Section",
          "API Adjustments",
          "Set up the Data Model",
          "Create the Recycler View",
          "Create FoodTruck detail view",
          "FoodTruck detail view Part 2",
          "Retrieve FoodTruck reviews",
          "Create the reviews Recycler View",
          "Create the Login Screen",
          "User registration",
          "User login",
          "Add FoodTruck review",
          "Add new FoodTruck"
        ]
      },
      "requirements": [
        "No coding experience required, though basics programming skills will help build restful APIs",
        "Must have a Mac or a PC to create REST API in Node"
      ],
      "description": "Beginner API development in Node, Express, ES6, & MongoDB\nAre you a mobile app developer that needs a backend API & database?\nDo you have an mobile product idea?\nDo you want to create your own startup?\nOr do you want to become a backend developer?\nThis is THE course for you.\nWe have taught over 50,000 students how to code and so many of them have the same question, \"How can I build a server for my mobile apps?\"\nWhat you will learn:\nNode\nExpress\nMongoDB\nES6 & Javascript\nAPI development\nCRUD & REST\nHow to get an iOS app to talk to your API\nHow to get an Android app to talk to your API\nTooling & automation\nProfessional coding tips & practices\nAnd so much more....\nThis course is for ANYONE - but we specifically designed it to take mobile developers to the next level by helping them build their own APIs for their apps!",
      "target_audience": [
        "Anyone who wants to learn Node, Express, MongoDB, Javascript/ES6 or wants to build APIs",
        "Mobile app developers who want to build a back-end server",
        "Anyone who wants to learn REST API development",
        "Web app developers who need a back-end API for their app using Node",
        "Anyone who wants to create a SAAS product or mobile startup that needs an API"
      ]
    },
    {
      "title": ".NET 8 Microservices: DDD, CQRS, Vertical/Clean Architecture",
      "url": "https://www.udemy.com/course/microservices-architecture-and-implementation-on-dotnet/",
      "bio": "Develop Microservices on .NET 8 used ASP.NET Web API, Docker, RabbitMQ, MassTransit, gRPC, Yarp Gateway, Redis,SqlServer",
      "objectives": [
        "ASPNET Core 8 Web API Development of Microservices",
        "ASPNET Minimal APIs and latest features of .Net8 and C# 12",
        "Vertical Slice Architecture implementation with Feature folders",
        "CQRS implementation using MediatR library",
        "CQRS Validation Pipeline Behaviours with MediatR and FluentValidation",
        "Marten library for .NET Transactional Document DB on PostgreSQL",
        "Carter Library for Minimal API endpoint definition",
        "Using Redis as a Distributed Cache over Basketdb",
        "Implements Proxy, Decorator and Cache-aside Design Patterns",
        "Build a Highly Performant inter-service gRPC Communication with Basket Microservice",
        "Consume Discount Grpc Service for inter-service sync communication to calculate product final price",
        "Publish BasketCheckout Queue with using MassTransit and RabbitMQ",
        "PostgreSQL database connection and containerization",
        "Implementing DDD, CQRS, and Clean Architecture with using Best Practices",
        "Tactical Domain-Driven Design: Entities, Value Objects, Aggregates, Agg. Roots",
        "Developing CQRS with using MediatR, FluentValidation and Mapster packages",
        "Using Entity Framework Core ORM and auto migrate to SqlServer when application startup",
        "Entity Framework Core Code-First Approach, Migrations, DDD Entity Configurations in Clean Architecture implementation",
        "Async Microservices Communication with RabbitMQ Message-Broker Service",
        "Using RabbitMQ Publish/Subscribe Topic Exchange Model",
        "Consuming RabbitMQ BasketCheckout event queue with using MassTransit-RabbitMQ Configuration",
        "Using MassTransit for abstraction over RabbitMQ Message-Broker system",
        "API Gateways with Yarp Reverse Proxy applying Gateway Routing Pattern",
        "Yarp Reverse Proxy Configuration; Route, Cluster, Path, Transform, Destinations",
        "Rate Limiting with FixedWindowLimiter on Yarp Reverse Proxy Configuration",
        "ASPNET Core Web Application with Bootstrap 4 and Razor template",
        "Consume YarpApiGateway APIs using Refit Library with Generated HttpClientFactory",
        "Cross-cutting concerns Logging, global Exception Handling and Health Checks",
        "Dockerfile and docker-compose file for running Multi-container Docker environment"
      ],
      "course_content": {},
      "requirements": [
        "C# knowledge (generics, async/await, anonymous methods, action, predicate)",
        "Aspnet basics knowledge",
        "Docker basics knowledge"
      ],
      "description": "This course comes from a live github aspnetrun microservices repository which verified from community with 3000+ stars and 1600+ forks.\nYou will learn how to build Microservices on .Net platforms which used Asp.Net Web API, Docker, RabbitMQ, MassTransit, Grpc, Yarp API Gateway, PostgreSQL, Redis, SQLite, SqlServer, Marten, Entity Framework Core, CQRS, MediatR, DDD, Vertical and Clean Architecture implementation using latest codes and best practices of .NET 8 on cloud-native environments.\nYou will develop e-commerce modules over Product, Basket, Discount and Ordering microservices with NoSQL (PostgreSQL DocumentDB, Redis) and Relational databases (SQLite, Sql Server) with communicating over RabbitMQ Event Driven Communication and using Yarp API Gateway. You can find Microservices Architecture and Step by Step Implementation on .NET which step by step developing this course with extensive explanations and details.\nAlong with this you’ll develop following microservices and items:\nCatalog microservice which includes;\nASP.NET Core Minimal APIs and latest features of .NET 8 and C# 12\nVertical Slice Architecture implementation with Feature folders\nCQRS implementation using MediatR library\nCQRS Validation Pipeline Behaviours with MediatR and FluentValidation\nMarten library for .NET Transactional Document DB on PostgreSQL\nCarter library for Minimal API endpoint definition\nCross-cutting concerns Logging, global Exception Handling and Health Checks\nDockerfile and docker-compose file for running Multi-container in Docker environment\nBasket microservice which includes;\nASP.NET 8 Web API application, Following REST API principles, CRUD operations\nRedis as a Distributed Cache over basketdb\nImplements Proxy, Decorator and Cache-aside Design Patterns\nConsume Discount gRPC Service for inter-service sync communication to calculate product final price\nPublish BasketCheckout Queue with using MassTransit and RabbitMQ\nDiscount microservice which includes;\nASP.NET gRPC Server application\nBuild a Highly Performant inter-service gRPC Communication with Basket Microservice\nExposing gRPC Services with creating Protobuf messages\nEntity Framework Core ORM - SQLite Data Provider and Migrations\nSQLite database connection and containerization\nMicroservices Communication\nSync inter-service gRPC Communication\nAsync Microservices Communication with RabbitMQ Message-Broker Service\nUsing RabbitMQ Publish/Subscribe Topic Exchange Model\nUsing MassTransit for abstraction over RabbitMQ Message-Broker system\nPublishing BasketCheckout event queue from Basket microservices and Subscribing this event from Ordering microservices\nCreate RabbitMQ EventBus.Messages library and add references Microservices\nOrdering Microservice\nImplementing DDD, CQRS, and Clean Architecture with using Best Practices\nDeveloping CQRS with using MediatR, FluentValidation and Mapster packages\nUse Domain Events & Integration Events\nEntity Framework Core Code-First Approach, Migrations, DDD Entity Configurations\nConsuming RabbitMQ BasketCheckout event queue with using MassTransit-RabbitMQ Configuration\nSqlServer database connection and containerization\nUsing Entity Framework Core ORM and auto migrate to SqlServer when application startup\nYarp API Gateway Microservice\nImplement API Gateways with Yarp Reverse Proxy applying Gateway Routing Pattern\nYarp Reverse Proxy Configuration; Route, Cluster, Path, Transform, Destinations\nRate Limiting with FixedWindowLimiter on Yarp Reverse Proxy Configuration\nSample microservices/containers to reroute through the API Gateways\nWebUI ShoppingApp Microservice\nASP.NET Core Web Application with Bootstrap 4 and Razor template\nConsume YarpApiGateway APIs using Refit Library with Generated HttpClientFactory\nASPNET Core Razor Tools — View Components, partial Views, Tag Helpers, Model Bindings and Validations, Razor Sections etc.\nDocker Compose establishment with all microservices on docker;\nContainerization of microservices\nOrchestrating of microservices and backing services (databases, distributed caches, message brokers..)\nOverride Environment variables\nOn top of all these, you'll learn how to write quality code, not just how to build microservices. In this course you will see the demonstrating a layered application architecture with DDD best practices. Implements NLayer Hexagonal architecture (Core, Application, Infrastructure and Presentation Layers) and Domain Driven Design (Entities, Repositories, Domain/Application Services, DTO's...) and aimed to be a Clean Architecture, with applying SOLID principles in order to use for a project template. Also implements best practices like loosely-coupled, dependency-inverted architecture and using design patterns such as Dependency Injection, logging, validation, exception handling and so on.\n\n\nIs this course for you?\nThis course is very practical, about 95%+ of the lessons will involve you coding along with me on this project. If you are the type of person who gets the most out of learning by doing, then this course is definitely for you.\nTools you need for this course\nIn this course all the lessons are demonstrated using Visual Studio as a code editor. You can of course use any code editor you like and any Operating system you like as long as it's Windows or Mac. Also using Docker Desktop in order to use different database providers.",
      "target_audience": [
        "Beginner of AspNet Core developers who interested in APIs and Microservices",
        "C# developers interested in learning how to build Microservices on .Net",
        "Senior Developers who want to engage with Microservices on .Net"
      ]
    },
    {
      "title": "Complete Web Development : 22 Courses in 1",
      "url": "https://www.udemy.com/course/the-complete-web-development-course/",
      "bio": "Full-Stack Web Development Masterclass: From Zero to Full Web Developer Roadmap: Learn to Build Real World Websites",
      "objectives": [
        "In depth working knowledge in HTML, CSS, Javascript, XML, JSON, Git and more.",
        "Basic & Advanced Operations using PHP, practical projects with PHP",
        "In depth working experience on Basic & Advanced MySQL",
        "In depth knowledge & working experience on MongoDB",
        "Real life experience with Python & MySQL database programming",
        "Master in Wordpress Blogging, Earn with Wordpress Blogging",
        "In depth working knowledge as Web Developer",
        "Practical projects on MongoDB with PHP",
        "Practical working with Wordpress"
      ],
      "course_content": {
        "HTML Basics": [
          "HTML Basics",
          "Quiz # 1",
          "HTML4 vs. HTML5",
          "Making your first HTML page",
          "Quiz # 2",
          "Tools to create HTML files",
          "Base HTML Tags",
          "Quiz # 3",
          "Paragraph Tags",
          "Break Tag",
          "Header Tags",
          "Bold and Italic Tags"
        ],
        "HTML Advanced": [
          "Ordered and Unordered Lists",
          "Image Tags",
          "Difference between Absolute Link & Relative Liink",
          "Hyperlinking to an external page",
          "Hyperlinking to an email address",
          "Hyperlinking to a file in your site",
          "Playing and Controlling Audio",
          "Playing and Controllig Video",
          "Embedding a Video",
          "What is a Table - Pros and Cons",
          "Table properties",
          "Adding an iFrame",
          "What is possible with a form with only HTML knowledge",
          "Defining the form",
          "Text fields and Text areas",
          "Radio Buttons and Check Boxes",
          "Data Input and Buttons",
          "Proper file structure",
          "Code commenting",
          "Meta Tags"
        ],
        "CSS Basics": [
          "About the class - what you will need",
          "What is CSS and why we need it?",
          "What's new in CSS3",
          "CSS Selectors, Propterties and Attributes",
          "ID Selectors",
          "Class selectors",
          "Element Selectors",
          "All Selectors"
        ],
        "CSS Advanced": [
          "Internal Style Sheets",
          "External Style Sheets",
          "Inline Styles",
          "The Box Model",
          "Adding Color",
          "Working with fonts",
          "Background Images",
          "Background Images: Part 2",
          "Styling links",
          "Styling ID Tags",
          "Float and Clear",
          "Block and Inline Elements",
          "Positioning",
          "Building the Framework",
          "Setting the styles",
          "Adding the elements",
          "CSS 6-4"
        ],
        "PHP Basics": [
          "Web Development Intro",
          "Web Development Installation",
          "PHP Basic"
        ],
        "PHP Advanced": [
          "PHP Advanced # Part 1",
          "PHP Advanced # Part 2",
          "PHP Advanced # Part 3",
          "PHP Advanced # Part 4",
          "PHP Advanced # Part 5"
        ],
        "Mastering Git": [
          "Git: Part 1",
          "Git: Part 2"
        ],
        "Mastering JavaScript": [
          "JavaScript Basic",
          "JavaScript Advanced: Part 1",
          "JavaScript Advanced: Part 2",
          "JavaScript Advanced: Part 3",
          "JavaScript Advanced: Part 4"
        ],
        "Mastering JSON": [
          "JSON: Part 1",
          "JSON: Part 2"
        ],
        "Mastering XML": [
          "XML: Part 1",
          "XML: Part 2"
        ]
      },
      "requirements": [
        "No prior technical knowledge required"
      ],
      "description": "Our Valuable Students provides Reviews on this Course ->\n\"Very insightful information that other courses do not necessarily go over\" -- Andrew Austin\n\"Good quality of teaching. It's very useful where a lot of courses at one place. Very good explanation on each and every installation process and exercises shown. Thanks! to Udemy and Creative Online School\" -- Pramod Ganta\n\"Great ! Short videos but good understanding\" -- Ashiouzzaman Real\n\"The instructor is very clear-spoken and explains things very elegantly.  Very easy to follow and understand what is going on.\" -- Sharla Field\n\"The course and it's delivery were of high standards.\" - Jude Augustine\n\"Very good course for the beginers\" -- Shubam Roy\n\"Yes Very Good match\" -- Pubudu Vithanage\n\"The course thus far has been very informative and the instructor is easy to understand.\" -- Frank Martinez\n\n\nWeb development is an amazing career path now a days. By completion of this course, you will master yourself in several languages, along with platforms and databases. This course gives you basic and advanced understanding of  HTML, CSS, PHP, MySQL, MongoDB, Python, JavaScript, XML, JSON, Apache, Wordpress, SQLite and more.\nMastering these areas are one of the fastest ways to improve your career. Hope this course will be used as a helping hand for your prospective career. Please dig on free preview videos for more information.",
      "target_audience": [
        "Who wanna expert in web development",
        "Who wanna build career in web development"
      ]
    },
    {
      "title": "Remix.js - The Practical Guide",
      "url": "https://www.udemy.com/course/remix-course/",
      "bio": "Learn how to build feature-rich & highly reactive fullstack React applications with Remix.",
      "objectives": [
        "Build fullstack React websites and apps with Remix",
        "Implement dynamic and nested pages",
        "Construct nested layouts with optimized data fetching",
        "Handle form submissions without client-side JavaScript logic",
        "Implement user authentication via session cookies"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course!",
          "What Is Remix? And Why Would You Use Remix?",
          "Remix vs NextJS",
          "About The Course",
          "How To Get The Most Out Of This Course",
          "Attachments & Discord Community"
        ],
        "Remix Essentials - Core Concepts": [
          "Module Introduction",
          "MUST READ: Creating a Remix v1 Project",
          "Creating a Remix Project",
          "Adjusting the Created Projects",
          "Analyzing the Created Project",
          "Solving Issues with Starting the Development Server",
          "Getting Started with File-based Routing",
          "Adding Links & Building a SPA (Single-Page Application)",
          "Onwards to a Better Project",
          "Styling Pages & Understanding the Root Route",
          "Surfacing Component Styles",
          "Styling Active Links via NavLink",
          "How Form Submissions Work",
          "Server-side Form Handling via action()",
          "Adding Backend Code & Redirecting",
          "Fetching Page Data via loader()",
          "Returning & Using Fetched Data",
          "From <form> to <Form>",
          "Providing User Feedback via useNavigation",
          "Validating Input & Returning Data in action()",
          "Error Handling via ErrorBoundary",
          "Handling Error Responses via CatchBoundary",
          "Adding Dynamic Routes & Dot-delimited Routes",
          "Fetching Data for Dynamic Routes",
          "Another CatchBoundary Example",
          "Setting Page Metadata",
          "Summary"
        ],
        "Routing & Layouts - Deep Dive": [
          "Module Introduction",
          "What We'll Build - A Demo",
          "Project Planning & Creation",
          "Creating Project Routes - A Refresher",
          "Nested Paths - An Alternative Approach",
          "Layout Routes",
          "Adding Components & Styling",
          "Using Custom Fonts",
          "Working on More Routes",
          "Marketing Pages & Static Images",
          "Leveraging Layouts",
          "Rendering a Modal Page (Overlay Page)",
          "Adding Links",
          "Paths: Absolute vs Relative",
          "Navigating Programmatically",
          "Adding NavLinks",
          "Introducing Pathless Layout Routes",
          "Doing More with Pathless Layout Routes",
          "Introducing Resource Routes",
          "Understanding Splat Routes",
          "Working with URL Search Parameters (Query Parameters)",
          "Adding More Expense-related Links",
          "An Alternative Way Of Setting Up Routes",
          "Module Summary"
        ],
        "Data Fetching & Mutations - Deep Dive": [
          "Module Introduction",
          "Project & Database (MongoDB) Setup",
          "Adding Prisma (A Package For Querying the Database)",
          "Adding an Expense Data Model",
          "Preparing the Code for Form Submissions",
          "Adding a Server-side \"addExpense\" Function",
          "Adding Expenses to the Database (via action())",
          "Adding Server-side Validation",
          "Submitting Forms Programmatically",
          "Adding Visual Submission Feedback",
          "Fetching Expenses (via loader())",
          "Loaders - A Closer Look",
          "Loading a Single Expense (via Dynamic Route Parameters)",
          "How Nested Loaders Are Executed",
          "Using Parent Loader Data via useMatches()",
          "Updating Data",
          "Deleting Data",
          "One Action - Multiple Forms",
          "Programmatic \"Behind-the-Scenes\" Submission via useFetcher()",
          "Extracting Search Parameters",
          "Adding Visual Feedback to the Authentication Form",
          "Adding a Shared Root Document",
          "Adding Default Error Handling Logic",
          "Handling Errors Without ErrorBoundary or CatchBoundary",
          "Managing Errors Inside Components",
          "Practice Time - Challenge",
          "Practice Time - Solution",
          "Updating the expenses/raw Route",
          "Module Summary"
        ],
        "Adding User Authentication": [
          "Module Introduction",
          "Project Setup",
          "How Does User Authentication Work?",
          "Preparing the Database",
          "Adding Server-side Credentials Validation",
          "Check for Existing Users & Emails",
          "User Signup & Password Hashing",
          "Getting Started with User Login",
          "Sessions & Cookies - Preparation",
          "Creating Session Cookies",
          "Extracting Session Data & Rendering Conditional User Interfaces",
          "Adding Logout",
          "Protecting Routes",
          "More Route Protection",
          "Connecting Expenses & Users",
          "Module Summary"
        ],
        "Optimizing & Deploying Remix Applications": [
          "Module Introduction",
          "Adding Metadata To Routes",
          "Why You Might Need Custom Page Response Headers",
          "Setting Page Response Headers",
          "Working with Nested Headers",
          "Using Action & Loader Headers",
          "Disabling JavaScript For Some Pages",
          "A Brief Look at the Remix Config File",
          "Deployment Options",
          "Deploying a Remix Website - An Example (Netlify)"
        ],
        "Course Roundup": [
          "Course Roundup",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic React knowledge is required",
        "NO prior Remix knowledge is required",
        "NO advanced React knowledge is required"
      ],
      "description": "Remix is a strongly growing React framework that (vastly!) simplifies the process of building feature-rich, interactive fullstack React applications and websites.\nWith Remix, backend and frontend code work together seamlessly, and, as a developer, you don't have to worry about managing multiple, separated projects or codebases. Instead, you implement your backend logic next to your frontend code and let Remix handle the rest.\nIn this course, you will learn how to build fullstack React.js applications and websites with Remix from the ground up. All key Remix concepts are covered in-depth and taught step-by-step, slowly building up on each other. By the end of this course you will therefore be able to build your own Remix fullstack websites!\nAs part of this course, you will build two major demo projects, including an \"Expenses Management Website\" where users can sign up, manage their expenses and view expense analytics. As part of this project, you will learn how to perform CRUD (Create, Read, Update, Delete) operations with Remix and how to connect your React app to a database.\nThe following concepts are covered in great detail in this course:\nWhat Remix is & how it works\nRemix vs NextJS\nAdding routes and pages\nWorking with nested routes\nManaging (potentially nested) layouts\nCombining pages with non-page components\nStyling pages and components\nFetching data (also for nested pages)\nSubmitting data - via forms & programmatically\nHandling data submissions on the backend\nStoring data in databases & fetching data from databases\nValidating user input\nAuthenticating users (signup & login)\nManaging sessions via cookies\nOptimizing Remix applications\nDeploying Remix applications\nAnd much more!",
      "target_audience": [
        "React developers who want to build fullstack applications with React"
      ]
    },
    {
      "title": "RESTful API with Laravel: Build a Real API with Laravel",
      "url": "https://www.udemy.com/course/restful-api-with-laravel-php-homestead-passport-hateoas/",
      "bio": "Build a RESTful API for a market system using Laravel and dominate the most challenging features of APIs with Laravel",
      "objectives": [
        "Create your own projects with Laravel (not only RESTful APIs)",
        "Make the most of your work tools (Sublime Text 3, Git, Github, Composer, PHP artisan and Laravel)",
        "Generate and maintain the structure of the database in an automated way with Laravel and the PHP Artisan console",
        "Use PHP Artisan effectively and be much more efficient",
        "Create and configure your own local development environment",
        "Properly configure your development environment for all your projects",
        "Hone the main HTTP methods/verbs for HTTP and RESTful APIs",
        "Use free professional tools to improve your productivity"
      ],
      "course_content": {
        "Introduction": [
          "About the Instructor and the Course",
          "Taking Advantage of the Course and Contents",
          "How to Ask Questions"
        ],
        "Downloading and Installing the Tools to Develop the RESTful API with Laravel": [
          "Downloading and Installing PHP with XAMPP",
          "Downloading and Installing Composer",
          "Downloading and Installing Virtual Box",
          "Downloading and Installing Vagrant",
          "Downloading and Installing Sublime Text 3",
          "Downloading and Installing Github Shell",
          "Downloading and Installing Node and NPM",
          "Downloading and Installing Postman to Test the Laravel RESTful API"
        ],
        "Creating and Setting the Initial Structure of Laravel for the RESTful API": [
          "Obtaining Laravel Using Composer",
          "Adding Laravel Homestead as a Dependency for The Laravel Project",
          "Laravel 6 and higher additional step",
          "Notes About Laravel Vite",
          "Preparing and Configuring Laravel Homestead",
          "Adding the Virtual Domain on The System",
          "Using Vagrant to Manage the Laravel Homestead Virtual Machine",
          "Exercise Find out how to go out from the Virtual Machine",
          "Keep The Laravel Project Updated",
          "Get sure you understand some important details"
        ],
        "Configuring and Using Sublime Text 3 to Develop the RESTful API with Laravel": [
          "Installing the Package Control",
          "Creating and Using Projects",
          "Installing and Using SublimeCodeIntel to Resolve Laravel and RESTful API classes",
          "Installing and Using SideBarEnhancement",
          "Installing and Using SublimeLinter for PHP",
          "Installing and Using PHPCompanion to Auto-import Laravel Definitions"
        ],
        "Understanding the Case Study for the RESTful API": [
          "Understanding the RESTful API Resources (Models) and its Relationships",
          "Understanding the Main End-Points for the RESTful API"
        ],
        "Discovering and Configuring the Laravel Structure for the RESTful API": [
          "Discovering the Laravel Structure",
          "Discovering the Laravel PHP Artisan Commands",
          "Configuring the Laravel Environment Variables",
          "Understanding the Laravel Routes System for RESTful APIs"
        ],
        "Creating the Initial Laravel Components for the RESTful API": [
          "How to Solve Common Errors During the Development of the RESTful API",
          "Creating Initial Laravel Structures for The Models and Its Migrations",
          "Creating an Initial Laravel Structure for The Controllers",
          "Creating Some End-Point for the RESTful API Using Laravel Resource Routes"
        ],
        "Implementing the RESTful API Models and its Relationships using Laravel Eloquent": [
          "Implementing The Properties for Category",
          "Implementing The Properties for Product",
          "Implementing The Properties for Transaction",
          "Implementing The Properties for User",
          "Implementing The Relationships Between Models"
        ],
        "Creating the Database Structure Using Migrations from Laravel": [
          "Solving a Common Issue with the Laravel Migrations",
          "Implementing The Migration for Users",
          "Implementing The Migration for Categories",
          "Implementing The Migration for Products",
          "Implementing The Migration for Transactions",
          "Creating the Migration for The Pivot Table"
        ],
        "Creating the Laravel Factories for Database Seeding": [
          "Creating The Laravel Factory for User",
          "Creating The Factory for Category",
          "Creating The Factory for Product",
          "Creating The Factory for Transaction",
          "Using The Factories from The DatabaseSeeder of Laravel",
          "Executing The Migrations and Seeder using Artisan from Laravel"
        ]
      },
      "requirements": [
        "Very recommended a fundamental domain of Object Oriented Programming",
        "Fundamental knowledge about PHP (classes, functions, methods, traits, inheritance)"
      ],
      "description": "So you need to build a RESTful API for a project, but you do not know even where to start? Do not worry I will guide you through the whole process to build a genuine RESTful API using Laravel.\nJoin the more than 5.000 students already taking this course, building their RESTful APIs using Laravel, and enjoying every single class!\nNote: You can take, and in fact it is recommended, to follow the course using the most recent version of Laravel. Additionally, the course includes extensive sections about how to upgrade your project to different versions of Laravel, in case you decide to use any previous version.\nBuild your RESTful API with Laravel, using a complete marketplace as the case of use. With Laravel, creating every component will be a breeze. You will have a project with users, sellers, buyers, transactions, products, and categories. Explore all types of relationships, one to many, many to many and much much more using Eloquent the Laravel ORM.\n\n\n\n\nThe full guide for creating a real RESTful API with Laravel. You can follow the course using the latest Laravel version (it is recommended).\nYou will not find a Laravel course like this. This course explains everything you need to develop a RESTful API using the Laravel framework.\nAt the end of the course, you will have a RESTful API with Laravel, for a market system, where users can purchase and sell different products with different categories and transactions. Inclusive, the same user can be both a seller and a buyer (you will take advantage of inheritance for this).\n\n¡Do Not wait anymore! Become a master in the development of genuinely RESTful APIs with Laravel. Join the course now and see you in class\nRemember: The course has been constantly updated to use the latest versions of Laravel. So feel free to use the version you like (especially the latest version of Laravel).\n\n\n\nIn this course, you learn how to develop a realistic,  fully implemented, and professional RESTful API with Laravel.\n\nLaravel is the most popular PHP framework, with more than 20 million downloads along with lots of enterprise and personal projects worldwide. Additionally, it includes fantastic features to implement a RESTful API easily. Laravel is RESTful friendly.\n\n\nWhat is a RESTful API?\nA Web API is like a web service that works entirely with HTTP. A RESTful API must follow the REST (REpresentational State Transfer) practices, allowing to orientate the design to the resources, provide standard responses based on the different HTTP status codes, and the corresponding according to Hypermedia Links in responses (HATEOAS).\n\n\nWhy Laravel?\nBecause Laravel is a framework made by programmers for programmers, expressive, simple, intuitive, and powerful. Laravel provides useful features for web projects including RESTful APIs.\nEach new Laravel version includes many changes that make this framework even better, simple, programmer-friendly, and at the same time much more powerful. In fact, the latest versions of Laravel included a lot of new features to help to develop RESTful APIs in the right way.\nDuring this course, you will master the complete structure of Laravel, along with the new features included in the latest version of Laravel to develop an actual RESTful API.\nYou will learn this about the development of a RESTful API with Laravel:\nUsing the Laravel PHP artisan for code and components generation\nUsage and creation of middleware on Laravel\nThe Laravel Resource routes and controllers (ideal for RESTful APIs)\nFully supported JSON format responses for a JSON RESTful API\nValidation of requests directly from the Laravel Controllers\nHandling all types of exceptions and errors from Laravel handler\nComplex operations involving up to three resources/models for a specific operation\nUsage of Laravel dependency injection and model binding\nGeneration of the database structure using Laravel migrations\nAutomatic insertion of fake data into the database through \"faker,\" using Laravel factories, and seeders\nLaravel Sessions and access_token authentication for the RESTful API. Yes, Both!\nUsing Laravel Passport to protect the RESTful API with OAuth2\nPagination of results using Laravel collections\nUsing URL parameters to execute actions (the RESTful approach)\nSorting results based on URL parameters with a RESTful approach\nFiltering results using URL parameters\nCaching responses using Laravel Cache System\nLimitation of requests using the Laravel middleware\nImplementing HATEOAS on Laravel (a pure RESTful API must use HATEOAS)\nUsing PHP Fractal for transforming responses\nUsage of CORS on the API responses to allow JavaScript-based clients and web browsers.\nUse the Laravel Policies and Gates to handle the user's authorization layer.\nMuch more!!\n\n\nYou can take a look at the full list of contents below. You will finish with a complete RESTful API and understanding a lot of Laravel skills.\nYou will create an actual RESTful API from scratch and step by step using Laravel. Follow the REST architecture and build appropriate URLs to identify actions and resources using the Laravel best features and learn Laravel in the way.\nTake full advantage of tools like Sublime Text 3, Git, power shell, Laravel, Composer, PHP artisan, and be more productive for agile development.\nNote: In few classes of the course I use Windows (only for the first classes), but I included specific directions in the case you use Linux or Mac and all the tools used are cross-platform, so you will no have any problem.\nYou will have lifetime access to the current classes and the classes that I will regularly add (take a look at the last section to see what is coming).\n\nAt the end of this course, you will be able to develop your pure RESTful API with Laravel in an efficient way with the best practices, taking advantage of the facilities provided by Laravel for the proper implementation of your projects and your RESTfulAPI.\nDo not wait any longer. Join the course and see you in classes.",
      "target_audience": [
        "This course is for all web development and PHP lovers",
        "This course is for all those who need to develop their own API completely RESTful",
        "If you want to build your own fully functional and step-by-step RESTful API",
        "If you need to keep your skills up to date and be competitive",
        "If you want to do a complete development of your projects and your RESTful API with Laravel"
      ]
    },
    {
      "title": "PHP OOP: Object Oriented Programming for beginners + Project",
      "url": "https://www.udemy.com/course/oop-php-object-oriented-programing-with-project-1-course/",
      "bio": "PHP OOP: Learn Object Oriented PHP by Building a Real World Application Making You a PHP Developer from Zero to Hero",
      "objectives": [
        "Introduction to PHP OOP: Understanding the basics of Object-Oriented Programming and its principles.",
        "Setting Up a PHP Development Environment: Installing PHP, setting up a local server, and configuring your environment for PHP development.",
        "Classes and Objects: Learning how to create and use classes and objects in PHP.",
        "Inheritance: Understanding how to extend classes and reuse code using inheritance.",
        "Encapsulation: Implementing encapsulation to protect data and control how it’s accessed and modified.",
        "Polymorphism: Learning how to use polymorphism to create flexible and reusable code.",
        "Constructors and Destructors: Understanding the role of constructors and destructors in object lifecycle management.",
        "Access Modifiers: Exploring public, private, and protected access levels in PHP OOP.",
        "Static Methods and Properties: Learning how to use static methods and properties for global access without instantiating a class.",
        "Design Patterns: Introduction to common design patterns like Singleton, Factory, and MVC in PHP OOP.",
        "Working with Databases: Using PHP OOP to interact with databases, including CRUD operations and using PDO for secure database connections.",
        "Building a Simple MVC Framework: Learning the fundamentals of MVC architecture by creating a simple framework from scratch.",
        "Developing a Real-Life PHP OOP Project: Applying what you’ve learned by building a practical, real-world application.",
        "Working with Composer: Managing project dependencies and autoloading classes using Composer.",
        "Deploying PHP Applications: Understanding how to deploy PHP applications to a live server, including setting up a database and setting up environment"
      ],
      "course_content": {
        "Getting Started": [
          "Section Overview",
          "Edwin from the future",
          "Udemy Video Walk Through",
          "Editors I recommend",
          "Web Development Software Installation (XAMPP)",
          "Course Exercises - Reference Files",
          "Displaying errors in PHP",
          "The BIG picture how things work - WATCH - 2023"
        ],
        "NEW - OOP Fundamentals": [
          "Section Overview",
          "Classes",
          "Methods",
          "Instantiating a Class",
          "Defining properties",
          "Class Inheritance",
          "Access Control Modifiers",
          "Static Modifier",
          "Getters and Setters"
        ],
        "OOP Project - Building a Photo Gallery System": [
          "Overview of this project",
          "Project Directories & Assets",
          "Editing and Modifying Files",
          "Gallery System Links",
          "Creating Pages",
          "Creating Database and User Table"
        ],
        "Database Class": [
          "Section Overview",
          "Setting Up the Database Connection",
          "Initializing all Includes in one file",
          "Init file inclusion reminder (Edwin from the future)",
          "Creating the Database Class",
          "Future Update for database class",
          "Automatic DB Connection Setup",
          "The Query Method",
          "Database Class Helper Methods",
          "Testing Query Method",
          "Improving our Connection to be more OOP"
        ],
        "The User Class": [
          "Section Overview",
          "Creating our User Class",
          "Testing our find_all method",
          "Static Method Usage and Challenge",
          "Creating a Find user id method and Solution",
          "Create This Query Method",
          "Assigning Array Values to Object Properties",
          "Auto Instantiation Method",
          "Testing the Instantiation Method",
          "Short Way Auto Instantiation",
          "Creating The Attribute Finder Method",
          "Adding our Instantiation Method",
          "Using our Instantiation Method to find all users",
          "Using our Instantiation Method to find 1 User",
          "Undeclared Object Backup Function",
          "Updating the Autoload Function (Edwin from the future)",
          "So what is going on?"
        ],
        "The Session Class": [
          "Section Overview",
          "Starting Sessions",
          "The Checking login Method",
          "The Login Method",
          "The Logout Method",
          "Controlling Access to Admin",
          "Creating The Login Page",
          "Creating the Verify Method Part 1",
          "Creating the Verify Method part 2",
          "Duplicate return = Important watch the whole lecture - Edwin from the future",
          "Login page position - (Edwin from the future)",
          "Login Form Creation / Download",
          "Creating our Login out Feature",
          "Creating message method",
          "Outputting Feedback for User"
        ],
        "Files Basics": [
          "Section Overview",
          "Understanding File Permissions",
          "Magic Constants"
        ],
        "Uploading Files": [
          "Section Overview",
          "Configuring PHP for File Uploads",
          "Sending Files",
          "Analyzing Uploaded File Structure",
          "File Error Code Explained",
          "Moving Uploaded Files"
        ],
        "CRUD: Create Method": [
          "Section Overview",
          "Create Method Query Part1",
          "Create Method Query Part 2",
          "Inserting Last ID Method (Challenge)",
          "Testing our Method (Solution)"
        ],
        "CRUD: Update Method": [
          "Update Method Query",
          "Testing our Update Method"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML/CSS",
        "Familiarity with Basic PHP",
        "Understanding of Basic Programming Concepts",
        "Access to a Computer with a Text Editor",
        "Ability to Install Software",
        "Willingness to Learn",
        "Internet Access",
        "Time Commitment",
        "Curiosity and Creativity"
      ],
      "description": "Master PHP OOP with Hands-On Real-Life Projects: Propel Your Career with Edwin Diaz’s PHP OOP Course\nIf you’re looking to elevate your PHP skills and break into the world of Object-Oriented Programming (OOP), Edwin Diaz’s PHP OOP course is designed just for you. Whether you’re a beginner eager to gain practical experience or someone who has grasped the basics of PHP but needs that extra push to reach the next level, this course is your gateway to success. With real-life projects, on-demand OOP skills, and a commitment to student support, this course offers everything you need to become proficient in PHP OOP.\n\n\nWhy PHP OOP Is Essential\nObject-Oriented Programming is no longer optional in today’s web development landscape—it’s a necessity. Mastering PHP OOP is crucial for anyone looking to build robust, scalable, and maintainable applications. This course is structured to ensure that you not only understand the theory behind OOP but also apply it through practical projects that mirror real-world scenarios.\n\n\nWhat You’ll Gain from Edwin Diaz’s PHP OOP Course\n\n\n1. Real-Life Projects for Practical Experience\nThe course is packed with hands-on, real-life PHP OOP projects that provide you with the practical experience needed to excel. You won’t just learn the concepts; you’ll implement them in projects that simulate real-world applications. This is where you truly grasp how PHP OOP works in a professional environment.\n2. On-Demand OOP Skills\nOOP skills are in high demand, and this course equips you with the knowledge and expertise that employers are looking for. By the end of the course, you’ll be proficient in PHP OOP, ready to tackle complex projects and advance your career.\n3. Updated PHP Code and Techniques\nThe tech world evolves quickly, and so does this course. Edwin Diaz ensures that all the content is up-to-date with the latest PHP standards and best practices. You’ll learn the newest PHP OOP techniques, ensuring that your skills are current and relevant.\n4. Easy-to-Follow Lectures\nUnderstanding complex concepts can be challenging, but Edwin’s teaching style makes learning PHP OOP accessible to everyone. The lectures are designed to be clear, concise, and easy to follow, ensuring that you can grasp even the most challenging topics.\n5. Instructor Support and Engagement\nOne of the standout features of this course is the level of support you’ll receive. Edwin Diaz is not just an instructor; he’s a mentor who cares deeply about your education. He is committed to providing prompt, comprehensive support to all his students, ensuring that no question goes unanswered.\n\n\nWhy Choose This Course?\n\n\nYou Need Real-World Experience: If you’ve taken other courses but still feel unprepared for real-world applications, this course bridges that gap. It’s designed to give you the hands-on experience that other courses lack.\nYou Want an Engaged Instructor: Edwin Diaz is known for his responsive and supportive teaching style. If you value an instructor who is available to help you every step of the way, this course is for you.\nYou Want Updated Content: Technology changes rapidly, and this course is continually updated to reflect the latest PHP OOP practices. You’ll be learning from the most current and relevant content available.\n\n\nHow This Course Can Transform Your Career\n\n\nFreelancing Opportunities\nLearning PHP OOP opens up a world of freelancing opportunities. With the skills you gain from this course, you’ll be equipped to take on high-paying freelance projects. The potential earnings are significant—many skilled PHP developers earn well above the average salary by freelancing.\nHigh-Paying Job Prospects\nPHP is one of the most widely-used web programming languages globally, powering major websites like Google, Apple, Facebook, Yahoo, and Wikipedia. With PHP OOP skills, you’ll be well-positioned to secure a high-paying job as a developer. Starting salaries in the U.S. for PHP developers range from $60,000 to $150,000 annually, and with experience, these numbers can increase significantly.\nAdvanced Project Creation\nThis course doesn’t just teach you the basics—it takes you through advanced project creation, giving you the skills to build complex, dynamic web applications. You’ll learn how to create scalable and efficient code, a critical skill for any successful developer.\n\n\nWhy Edwin Diaz’s Courses Stands Out\n\n\nReal-Life Projects: Engage in projects that reflect actual industry scenarios, giving you the confidence to tackle professional challenges.\nContinuous Updates: The course content is regularly updated, ensuring you’re learning the most up-to-date techniques and best practices.\nFull Instructor Support: Edwin Diaz provides prompt and comprehensive support, guiding you through each stage of your learning journey.\nNo Boring Lectures: The content is designed to be engaging and informative, keeping you interested and motivated throughout the course.\nMoney-Back Guarantee: With a 100% money-back guarantee within 30 days, you have nothing to lose and everything to gain. If for any reason you’re not satisfied with the course, you can get a full refund—no questions asked.\n\n\nTake the First Step Toward Your Dream Career\nPHP has enabled Edwin Diaz to build a successful career, giving him the freedom and flexibility to teach others. Now, he’s offering you the same opportunity to succeed. By mastering PHP OOP through this course, you can create the life you’ve always dreamed of—whether that means freelancing, securing a top-paying job, or building your own web applications.\nDon’t miss out on this chance to transform your career with Edwin Diaz’s PHP OOP course. With comprehensive, up-to-date content, real-life projects, and full support from an experienced instructor, this course offers everything you need to become a professional PHP developer. Enroll today and start your journey toward mastering PHP OOP and unlocking new career opportunities.",
      "target_audience": [
        "Beginners in PHP and Web Development",
        "Self-Taught Developers Looking to Formalize Their Knowledge",
        "Web Developers Seeking to Upgrade Their Skills",
        "Freelance Developers",
        "Back-End Developers Transitioning to PHP",
        "Aspiring Full-Stack Developers",
        "Professionals Looking to Build a Portfolio",
        "Tech Enthusiasts and Hobbyists",
        "Educators and Trainers"
      ]
    },
    {
      "title": "REST WCF Service in ASP.NET",
      "url": "https://www.udemy.com/course/rest-wcf-service-in-aspnet/",
      "bio": "Learn how to build a RESTful WCF Service in an ASP.NET web application and call its methods with JQuery.",
      "objectives": [
        "Build a RESTful WCF Service from the ground up",
        "Set up the Web.config and all necessary attributes and references",
        "Make GET & POST HTTP Requests with JQuery & AJAX",
        "Use and serialize custom classes with the WCF Service"
      ],
      "course_content": {
        "The REST WCF Service": [
          "Introduction",
          "Building the WCF Service",
          "A simple GET HTTP Request with JQuery",
          "A POST HTTP Request with JQuery",
          "Using custom classes with your WCF Service"
        ]
      },
      "requirements": [
        "Visual Studio 2015 Community Edition (free!)",
        "Other versions of Visual Studio also work, but might be slightly different",
        "You should have a little experience in building web applications in ASP.NET",
        "You should have a little experience in C#"
      ],
      "description": "In this course you will learn how to build a RESTful WCF Service in an ASP.NET web application. You will use Visual Studio 2015 Community Edition, which is completely free. Whether you are new to WCF services or already have built a SOAP service and need to convert it to a REST service doesn't matter, you will build your new service from the ground up. What you already should have is a little experience in C#. Having some knowledge in JQuery and building web applications in general might help, but is not a must.\nBy the end of this course, you will be able to build the REST WCF Service by yourself, make GET & POST HTTP Requests with JQuery & AJAX and use your own custom classes with your new web service.\nAll source codes are available for download, of course.",
      "target_audience": [
        "This course is for students who have no experience in building a REST WCF Service or already have built a SOAP WCF Service and need to convert it"
      ]
    },
    {
      "title": "Angular Styling & Animations (for Angular 2+)",
      "url": "https://www.udemy.com/course/angular-styling-animations-for-angular-2-and-angular-4/",
      "bio": "For Angular 2+: Learn how to use dynamic Styles and powerful Animations to create beautiful Angular Apps",
      "objectives": [
        "At the end of the course, students will be able to use the many features Angular offers to dynamically style and animate Angular apps",
        "Students will be able to style their Angular components, elements in these components and change that styling dynamically",
        "Students will be able to add complex animations, for example to animate the appearance of elements, lists or upon route changes"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Join our Online Learning Community",
          "Understanding the Prerequisites",
          "Important: Creating a Project with the Angular CLI",
          "Creating a Project (Course Setup)",
          "Our First Project",
          "The Structure of This Course",
          "How to get the Most out of this Course"
        ],
        "Styling Angular Apps Dynamically": [
          "Module Introduction",
          "Adding Application-wide Styles",
          "Let's Practice Application-wide Styles",
          "Adding CSS Frameworks or External Styles to Your App",
          "How to Add Global Styles in a CLI Project",
          "How to use NPM to install CSS Frameworks",
          "Understanding Component-scoped Styles",
          "Using Component-Scoped Styles",
          "Using Inline Styles in Components",
          "Using <style> Tags in Component Templates",
          "The Theory Behind Angular's View Encapsulation",
          "How Angular Emulates the Shadow DOM",
          "Changing the View Encapsulation Behavior",
          "Using the Native Shadow DOM",
          "How to Turn Off View Encapsulation",
          "Special CSS Selectors: :host",
          "Using the Function Form of :host",
          "Styling Components by Using their Selector",
          "Special CSS Selectors: :host-context",
          "Special CSS Selectors: /deep/",
          "Understanding ngClass Syntax",
          "Using ngClass to Add CSS Classes Dynamically",
          "Understanding ngStyle Syntax",
          "Using ngStyle to Dynamically Adjust CSS Styles",
          "ngStyle: camelCase vs 'real-name'",
          "Using the Angular Renderer to Adjust CSS Styles",
          "Project: Introduction to the Course Project",
          "Project: Adding Bootstrap Styling (CSS Framework)",
          "Project: Planning the Next Steps",
          "Project: Adding Margin (Component-scoped)",
          "Project: Styling Items in A List",
          "Project: Dynamically Mark Items",
          "Project: Challenge - Style Status Changes",
          "Project: Let's Style Status Labels",
          "Project: Styling Inactive Items & Finishing Touches"
        ],
        "Moving Things with CSS Animations": [
          "Module Introduction",
          "Understanding the CSS Transition Property",
          "Using the Transition Property to Add Transitions",
          "More About the CSS Transition Property & Timing Functions",
          "Configuring Multiple Transitions",
          "Understanding the CSS Animation Property",
          "More About the CSS Animation Property",
          "Using the Animation Property to Add Animations",
          "Project: Your Challenge!",
          "Project: Implementing an Animated Loading Bar",
          "Project: Transitioning Border Colors",
          "Project: Animating the Selection (\"marked\") of List Items",
          "Transitions vs Animations vs Angular Animations"
        ],
        "Diving into the Angular Animation Package": [
          "Want to use Angular 2 instead of Angular 4?",
          "Module Introduction",
          "How Animations work in Angular",
          "Browser Support & Polyfills",
          "Unlocking Animations with the Right Module",
          "Getting Started with Triggers and States",
          "Which Properties are Animatable?",
          "Assigning Triggers to Elements in the Template",
          "Switching Trigger States Dynamically",
          "Adding Transitions between States",
          "Using Multiple Transitions",
          "Build more Complex Triggers with More States",
          "Configuring Elegant Transitions When Using Many States",
          "Understand the Re-Usability of Triggers",
          "Using Multiple Triggers",
          "Creating Multi-Step Transitions",
          "Multi-Step Transitions and Temporary Styles",
          "A Bug in Angular 4 Animations",
          "Styling States and Animations Correctly",
          "CSS Animations vs Angular Animations",
          "Outsourcing Animations",
          "Project: Your Challenge!",
          "Project: Setting Up Animations",
          "Project: Adding Triggers and States",
          "Project: Adding Transitions",
          "Project: Using Multi-Step Transitions",
          "Project: Cleaning Up Some CSS",
          "Project: Using Temporary Styles in Transitions"
        ],
        "Becoming an Angular Animations Pro": [
          "Module Introduction",
          "Animations We Can't Create As Of Now",
          "Using the \"void\" State in Transitions",
          "Using the \"*\" Wildcard State in Transitions",
          "Using Dynamic Dimensionial Properties",
          "Animating Lists",
          "Using Animation Groups for Parallel Animations",
          "Understanding Timing Functions (ease-in etc)",
          "Control Everything with Animation Keyframes",
          "Multi-Step Transitions vs Animation Groups vs Keyframes",
          "Reacting to Animation Events",
          "A First Summary",
          "Project: Next Steps & Your Challenge",
          "Project: Adding a Basic List Animation",
          "Project: Creating a Better List Animation with Keyframes",
          "Project: Creating a Staggered List",
          "Project: Sliding Things Around",
          "Project: Sliding List Items Around",
          "Project: Synchronizing Animations",
          "Project: Animating a Button depending on Form Validity",
          "How to Animate Routing",
          "Project: Creating a Basic Route Animation (Fade-in-out)",
          "Project: Getting Fancy: A Slide-down Route Animation",
          "Project Wrap Up"
        ],
        "New Animation Features with Angular 4.2": [
          "Module Introduction",
          "Using the new query() Method",
          "More on query()",
          "Special Selectors for query()",
          "All Special Selectors & Full query() Docs",
          "query() Options",
          "Combining query() Selectors",
          "Adding Query to the Course Project",
          "Fixing a Small Bug with query() and the Course Project",
          "Easy Staggering Animations with stagger()",
          "Creating Re-Usable Animations",
          "Creating and Running Animations Programmatically",
          "Improved Route Animations",
          "An Issue with Route Animations",
          "Wrap Up"
        ],
        "Course Roundup & Bonus": [
          "Course Roundup",
          "Bonus: More Content!"
        ]
      },
      "requirements": [
        "Basic Angular (2 or 4) knowledge is required",
        "Basic CSS knowledge is required",
        "Basic CSS Transitions & Animations knowledge is a plus",
        "No Angular Animations knowledge is required"
      ],
      "description": "You finished the business logic of your web page and you're done, right? No! Adding fitting styles and animations to a web page significantly improves the user experience!\nIt's more than a little bonus - animations and styles help the user understand the flow of your page, pass on feedback to the user and overall improve the usability of your page.\nThis course teaches you which tools Angular gives you to dynamically style and animate your web page. This is not a CSS basics course - this course will really dive into the rich toolset Angular ships with, allowing you to build a reactive, user-friendly web application.\nJust think about your favorite web apps: How many of these look ugly, seem to be styled randomly (and statically) and use no animations? Probably not that many - time to join the club of developers creating awesome user experiences!\nThis is what you'll learn!\nHow Angular helps you with styling and animating your web page\nWhat \"dynamic\" styling and animating means\nHow  you may either style the whole web app or individual components you built\nWhich tools Angular offers you to adjust styles at runtime\nHow you can use vanilla CSS to build nice transitions and animations\nAll about Angular's Animation package: Building, configuring and using triggers, states, styles, transitions and more!\nAdvanced Animation features like Animation groups, keyframes or callbacks\nHow to animate the appearance and removal of elements/ components\nHow to animate lists\nHow to animate routing\nAnd more!\nThis is what the course offers - but is this course for you?\nThis course is for you if:\nYou got (basic) Angular and CSS knowledge and feel like you need to learn more about adding/ using styles and animations in your Angular apps\nYou're learning Angular right now and you want to continue learning with more beautiful apps\nYou even already know the basics about styling and animating Angular apps but you feel like there still is some mystery regarding the styling/ animation of components\nI'd be very happy to welcome you in this course!",
      "target_audience": [
        "This course is for everyone interested in enhancing the user experience by adding nice styles and animations with the help of Angular",
        "Students who are interested in dynamically styling or animating Angular apps should find this course very helpful"
      ]
    },
    {
      "title": "Become a Certified Web Developer: HTML, CSS and JavaScript",
      "url": "https://www.udemy.com/course/become-a-certified-web-developer/",
      "bio": "Learn: HTML | CSS | JavaScript | Web programming | Web development | Front-end | Responsive | JQuery",
      "objectives": [
        "Prepare for Industry Certification Exam",
        "Earn Certification that is Proof of your Competence",
        "Hours and Hours of Video Instruction",
        "Dozens of Code Examples to Download and Study",
        "Over 25 Engaging Lab Exercises",
        "All Lab Solutions",
        "Instructor Available by Email or on the Forums",
        "All Free Tools",
        "Comprehensive Coverage of HTML and CSS",
        "Client Side Programming with Javascript",
        "Server Side Development with PHP",
        "Learn Database Development with mySQL"
      ],
      "course_content": {},
      "requirements": [
        "There are no skill prerequisites for this course although it's helpful if you are familiar with operating your computer and using the internet.",
        "You can take this course using a Mac, PC or LInux machine.",
        "It is recommended that you download the free Komodo text editor."
      ],
      "description": "Completely Updated for 2023/2024 with 40 NEW lectures coding activities and projects!\nLearn What It Takes to Code Dynamic, Professional Websites and Web Apps From The Comfort of Your Own Home\nDo you ever browse the internet wondering how your favorite websites were built? Facebook, Twitter, Amazon—they were all created by people who at one point in time didn’t know anything about coding. How did they obtain this knowledge?\nIn this comprehensive course, I’m going to show you everything you need to know so that you can follow in these people’s footsteps.\nYou’re going to learn how to code AND you’re going to become a certified professional from a recognized international trainer. And best of all, you’re going to have fun doing it.\nYou Don’t Have to Be a Genius or a Mathematical Wizard.\nSo many people believe that you must have a special ‘gift’ to create professional-quality, dynamic websites/web apps. I’m here to tell you once and for all that this is false. All you need to have is the desire to learn and the ability to follow instructions—that’s it!\nOur course starts teaching basic coding principles and develops your coding skills in a variety of languages from beginner through to advanced. Here it is, once and for all, a complete guide that will take you from novice to web developer.\nSkip Hours of Frustration and Thousands of Wasted Dollars and Become 100% Certified\nThe internet has changed the rules of doing business. More and more companies are migrating online while many new, never before seen businesses are created every day thanks to the power of this phenomenon. You know what that means? Higher demand for people just like you!\nBut the problem for these businesses is that while demand is high, supply is short.\nPlease don’t let a lack of knowledge stop you from having the career of your dreams, not when the knowledge you need is right here and is extremely affordable.\nDon’t worry, you won’t need to buy any additional courses, it’s all here. No need to spend four years and over $15,000 per year in college tuition either—it really is all here. From HTML to CSS then to Javascript and finally PHP, you will learn how to Become a Certified Web Developer.\nIt Doesn’t Matter Where You’re Starting From...You Can Do It!\nMaybe:\n● You’re planning on studying coding at college and want to build a rock-solid foundation so that you have a huge head start before your course begins?\n● You’re dissatisfied with your current job and want to learn exactly what it takes to become a fully qualified web developer?\n● You’re currently working in IT but want to expand your skill base so that you’re 100% up to date with the latest developments in web technology?\n● You want to develop mobile apps or websites on the side to create some additional income while retaining your current job?\nLearn Skills That Will Benefit You for The Rest of Your Life\n- Imagine being able to create a web app that is downloaded by millions of paying customers—or a website that’s visited by people from all seven continents.\n- Imagine the limitless opportunities that having these programming skills will give you.\n- Imagine working in a field that challenges you and allows you to express yourself freely every day.\n- Imagine being paid extremely well for developing products and services that can help change people’s lives.\nStop imagining and take action! It’s time to start your journey. Your future is waiting for you...\n\n\nFour Certifications in One\nThe unique Certified Web Development Professional credential will provide proof that you have mastered the fundamental skills needed by new web developers. You'll have a full understanding of HTML5, the language used to structure web sites and many mobile applications that you use every day. From there, you'll move on to Javascript-- the language of interaction on the web. The use of Javascript is growing at a lightning pace and it's been called \"the most important language to learn today,\" by multiple experts.\nEach language carries its own individual Specialist Designation for which you earn a certificate, the privilege of using the specialist credential badge, and a personal online transcript page that shows your designations, certification, and accomplishments.\n\n\nPrepare for Valuable Industry Certifications\nThis course is specially designed to prepare you for the  Web Development Professional Certification from LearnToProgram, Inc. This certification will allow you to prove that you have achieved competencies in HTML, CSS, and JavaScript-- everything you need to create basic web applications. New for 2023:  No exams are required to earn your certifications.  Complete and submit all the lab activities for the course program and you'll earn your new certifications!\n\n\nCertified Web Developers will receive:\nA printable certificate indicating the new certification that you can present to employers or prospects\nA letter explaining the certification and its value to a prospective employer. The letter will state exactly what mastery the certification represents\nAuthorization to use the LearnToProgram Certified Web Developer Badge on your website and marketing materials\nAutomatic linkage to your LinkedIn account to display your certification",
      "target_audience": [
        "Web Designers who Want to Learn To Code",
        "Traditional Programmers who Want to Learn Web Development",
        "People who Want to Develop Mobile Web Sites",
        "Students who want Practical Development Skills",
        "Web Masters who Need to Improve Development Skills",
        "Volunteers who Manage a Site for a Church or Non Profit",
        "Teachers who Want to Introduce Web Development to Their Classes",
        "Those Considering a Career in Web Development"
      ]
    },
    {
      "title": "How to Create A Website: An HTML Tutorial and CSS Tutorial",
      "url": "https://www.udemy.com/course/html-tutorial/",
      "bio": "Learn How To Make Websites - HTML - CSS - Flexbox - Transitions - Animations - SVGs - The Box Model - CSS Specificity",
      "objectives": [
        "Build beautiful webpages using today's best practices",
        "Understand the importance of performance and build performant websites",
        "Acquire an outstanding foundation in the fundamentals of web programming",
        "Taught by a professor with 20 years of experience teaching individuals of all abilities",
        "Achieve mastery in the understanding and application of HTML & CSS",
        "Apply cutting-edge techniques such as Flexbox and SVGs"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisite knowledge is required to take this course. This course starts at the very beginning and will teach you everything you need to know to be an outstanding web developer."
      ],
      "description": "You can learn to build websites quickly and easily if it is taught correctly.\nThis course will show you how to build websites. It will give you a solid foundation in building websites.\nBy the end of this course, you will have strong skills in creating websites with HTML & CSS. As with any craft, the fundamentals are essential. If you have a strong foundation in the fundamentals, you will be poised to grow and develop professionally as a craftsperson who knows their craft.\nMy name is Todd McLeod and I began creating websites in 1997. I began teaching how to create websites in 2001. I am tenured faculty in California and I have taught individuals of all ability levels how to create websites.\nAfter completing this course, you will have mastered the fundamentals of creating websites with HTML & CSS. Here are the highlights of what you will receive in this class:\n32 hours of on-demand video\nExtensive hands-on exercises\nSolutions to the hands-on exercises\nAccess to all of the code used in the course\n74 exclusive resources which you can download\n286 page book on the fundamentals of HTML and CSS\nLifetime access to everything in this course\n100% money-back satisfaction guarantee\nA certificate of completion\nHere are the highlights of what you will learn in this course:\nLearn the art of building websites\nUnderstand what it takes to succeed\nDiscover Google's Teapot, how to change the news, and how to play the Dinosaur video game\nGain insight into the history of the Internet and the World Wide Web\nLearn about the best documentation for building websites\nUnderstand how the World Wide Web works\nDiscover new ways to use your web browser\nAcquire the ability to highlight webpages\nLearn all about developer tools\nGain the ability to use an IDE (integrated development environment)\nAcquire the ability to use git and github for version control\nLearn how to code in HTML and CSS\nGain a solid foundation in HTML and CSS\nAcquire the ability to use emmet\nUnderstand relative and absolute URLs\nLearn about CSS rule-sets and CSS selectors\nLearn how to link CSS documents to HTML documents\nLearn all about the layout of webpages including the box-model and flexbox\nGain the ability to work with older layout modalities such as position and float\nMaster the nuances of CSS specificity\nGain the ability to correctly structure HTML documents\nAcquire mastery over media-queries\nLearn the \"above the fold\" design pattern\nMaster using SVG's to optimize your images and make your sites more performant\nAcquire the ability to work with advanced techniques such as transitions and animations\nIf you want to learn how to create websites, the first place to begin is with the fundamentals of HTML & CSS. The first place to begin is with this course. This class is guaranteed to teach you how to build websites. Once enrolled, you will have access to this Excel course for the rest of your life.\nDescribed as “fun” and “amazing” and “life changing,” Todd McLeod’s website course will forever transform your life. Try this course for yourself and see how quickly and easily you too can learn to build websites.",
      "target_audience": [
        "This is a first semester university level course.",
        "This course is ideal for beginners wanting to learn how to build websites.",
        "This course is perfect for experienced developers wanting a thorough introduction to current best-practices.",
        "This course is perfect for experienced developers wanting to fill in gaps in their knowledge."
      ]
    },
    {
      "title": "Create an eCommerce Website Using Laravel (PHP & MySQL)",
      "url": "https://www.udemy.com/course/online-store-e-commerce-website-in-php-mysql-from-scratch/",
      "bio": "Learn to Create an E-COMMERCE website with Laravel Framework in PHP & MySQL for beginners with Admin Panel",
      "objectives": [
        "Creating an advanced eCommerce system in PHP & MySQL using Laravel Framework",
        "Create your own eCommerce website from scratch in 8 hours",
        "Creating an online store with Admin Panel in PHP & MySQL with Laravel",
        "Step by step eCommerce website from scratch for intermediate and advanced users",
        "Setup stripe payment gateway in the eCommerce website in PHP & MySQL",
        "Building shopping cart, payment processing and orders management in Laravel",
        "Design and develop a full-stack Laravel eCommerce store."
      ],
      "course_content": {},
      "requirements": [
        "Understanding the basics of PHP and OOP will be required",
        "Understanding the basics of HTML & CSS"
      ],
      "description": "We are going to create a live running eCommerc website using the latest Laravel framework in PHP and MySQL. You can learn to create professional, secure and fast eCommerce store using PHP and MySQL after completing this course.\nWhat We Will Cover in This Course?\nWhether you are a beginner or an advanced PHP developer, we have covered the basics such as the installation of Laravel and setting it up for the development environment. This course will help you create your first eCommerce store using PHP and MySQL. Laravel is the most used and advanced PHP framework that's used by most developers these days for creating high-quality websites.\nWhat You Will Learn?\nSetting up an environment for creating an eCommerce website\nCreating the front page of the eCommerce store\nCreating the Cart system for customers\nCreating the admin panel to update the site\nAdding products and displaying them on the website\nOrdering products and storing orders\nDisplaying orders and details\nIntegrating the Paypal payment system\nIntegrating Stripe payment gateway\nFinishing the eCommerce site\nWhy You Should Join This course?\nWe are developers and we create courses that will help you learn quickly and easily. We try to give you practical and real-world knowledge about web development and PHP. In this 10 hours course, we are going to take you on a journey that's all about creating an eCommerce website from scratch including the front end and the back end.\nInstructor's Lifetime Support\nIf you didn't understand something while learning from this course then don't worry at all. The instructors are available to answer your questions and help you out with solving your coding problems. We will never leave you stuck.\nMoney Back Guarantee\nNo worries. If you don't like our course and you are not satisfied then Udemy has a 30 day money-back guarantee. So what more are you waiting for? Join the course today and enjoy learning about eCommerce websites.",
      "target_audience": [
        "Those looking to create an eCommerce website in Laravel or PHP",
        "Students who are looking for final year project in PHP & MySQL using Laravel Framework",
        "Those looking for real-world  Laravel project",
        "Those looking to learn laravel"
      ]
    },
    {
      "title": "HTML and CSS for Beginners - Build a Website & Launch ONLINE",
      "url": "https://www.udemy.com/course/html-and-css-for-beginners-crash-course-learn-fast-easy/",
      "bio": "HTML and CSS for Beginners course will give your all the knowledge you need to master HTML and CSS easily and quickly.",
      "objectives": [
        "You will Learn HTML",
        "You will learn CSS",
        "You will get a certification after the course that you can print",
        "You will get the skills you need to make websites"
      ],
      "course_content": {
        "First Step and Introduction": [
          "Some Tips to get you started",
          "What is HTML?",
          "Course Exercise and Video Quality",
          "Editor I recommend links",
          "Installing and Using Editor",
          "Quiz 1"
        ],
        "Page Structure": [
          "First HTML Code",
          "Exploring the document",
          "Headings",
          "Comments, White Space and line breaks",
          "Popular HTML tags",
          "Creating Images",
          "Creating Links",
          "Clickable Images",
          "Tables",
          "Forms",
          "Lists",
          "The Rest of the HTML tags",
          "Quiz 2",
          "Create an HTML paragraph element with some text inside",
          "Create the biggest heading"
        ],
        "CSS": [
          "Inline Style",
          "Internal Style",
          "External Style",
          "Selectors",
          "Id's and Classes",
          "Linking Javascript",
          "Common Styling Properties"
        ],
        "Extra Lectures - More CSS Examples - Enjoy :)": [
          "Inserting Pictures and Styling",
          "Inserting Pictures Via CSS",
          "Hover Effect"
        ],
        "EXTRA Section - Lets build a website!": [
          "Intro",
          "Structure",
          "Menu",
          "Main Divs",
          "Footer and more",
          "Styling Container, body and header",
          "Styling menu",
          "Styling main div",
          "Styling footer part 1",
          "Styling footer part 2",
          "Home page image",
          "About Page"
        ],
        "Messaging Form / Contact form with some PHP": [
          "Form HTML markup",
          "Styling form part 1",
          "Styling form part 2",
          "Styling form part 3"
        ],
        "New - Lets take our website ONLINE": [
          "Intro and what we need!",
          "Hosting Login",
          "Removing WP and adding our site",
          "Installing SSL Certificates for our site",
          "Setting up email sending",
          "Improving / protecting against attacks",
          "Uploading our website",
          "Editing files on hosting",
          "Showing images on live website",
          "Forcing HTTPS on all pages"
        ],
        "New - Creating a Modern website": [
          "Intro",
          "Creating out index part 1 - header",
          "Creating out index page - header and reset",
          "Navigation html and css part 1 - links",
          "Navigation html and css part 2 - hover links",
          "Hero",
          "About",
          "Footer",
          "Services page",
          "Contact page",
          "Contact page - form - part 1",
          "Contact page - form - part 2",
          "Contact page - form - part 3 - button hover",
          "Contact page - Javascript date",
          "Contact page - Javascript in all pages",
          "Working on collapsible menu part 1 - css media query",
          "Working on collapsible menu part 2 - JS show / hide",
          "Refactoring our JS code a little"
        ],
        "NEW - New Website HTML and CSS Frameworks": [
          "Intro",
          "Framework install",
          "Navigation",
          "Grid part 1",
          "Grid part 2",
          "Services section",
          "Footer and JS",
          "Contact part 1",
          "Contact part 2",
          "Final adjustments"
        ]
      },
      "requirements": [
        "Web Browser"
      ],
      "description": "Certification after course completion\nAlways adding new lectures\nHave you ever wanted to learn HTML and CSS but thought it was too hard or did not have time or money?\n\nThis step-by-step HTML and CSS course will help you learn coding fast and with an instructor that really cares about his students.\nLearning to code will help you make more money in your job, or even find a better job, or better yet, get a nice job as a web developer.\nHTML and CSS are the foundations you need to get into any programming language.\n\n\nEverything new is hard but programming doesn't have to be. Learning HTML and CSS is the first stepping stone you need to start programming . This course was created with a dummy approach, meaning even people with difficulty learning technology will learn. I also guaranteed that even small kids can learn its material. You will feel like you are beside me when taking the lecture, we will be buddies until the end of this course and even after. After this course, you will have a good understanding of HTML and CSS and will be able to start your journey into the beautiful world of programming.\nWhat are you waiting for? Every minute you let by is money and opportunities that are passing you by. Don't put it off anymore and get the knowledge your need to succeed today.\n\n\nEnroll today and begin your Adventure into becoming a code ninja with your Sensei Instructor Edwin Diaz.",
      "target_audience": [
        "Total beginners",
        "Any person wishing to learn coding",
        "Any person that want to edit their website",
        "Any person looking for a second income online",
        "Any Student looking for quick way to learn HTML & CSS should take this course"
      ]
    },
    {
      "title": "Implement High Fidelity Designs with Material-UI and ReactJS",
      "url": "https://www.udemy.com/course/implement-high-fidelity-designs-with-material-ui-and-reactjs/",
      "bio": "Bridge the gap between Design & Development! Break down detailed designs and bring them to life with Material-UI/React.",
      "objectives": [
        "Create beautifully designed production applications from scratch with Material-UI",
        "Build applications that look perfect on every screen with Material-UI's responsive design system",
        "Refine UX/UI design intuition and see concepts in action",
        "Search Engine Optimization in React JS",
        "Migrate from create-react-app to Next JS",
        "Use serverless functions with Firebase",
        "Export and efficiently integrate animations with react-lottie",
        "Collect data and track events with Google Analytics in React JS",
        "Ensure cross-browser support with your styles in Material-UI",
        "Deploy production Material-UI/React JS applications"
      ],
      "course_content": {},
      "requirements": [
        "Be comfortable with React JS -- this is an intermediate level course!",
        "Mac or Windows Computer"
      ],
      "description": "Welcome to the #1 documentation recommended paid resource for learning Material-UI!\nAcross 35 hours and more than 200 lectures, I will teach you absolutely everything there is to know about building finely designed applications using hands-down the most useful tool I've learned since React itself -- Material-UI!\n\n\nTake your web development skills to a whole new level and separate yourself from the average React developer by gaining the confidence to build professionally designed applications!\nAfter learning React, I think many developers run into a common problem -- what are the best practices for actually building your own project!? You may have an idea in your head for a really cool application or website but feel like you wouldn't know exactly how to go about creating it with React. Are you supposed to build every little component and piece of functionality from scratch? Definitely not! Learn to let Material-UI do the heavy lifting for you with its comprehensive customizable component library with integrated styling, theming, grid, and responsive design systems.\nMost of the courses you take while learning React are focused on teaching you the core concepts and fundamental syntax/structures necessary to understand and build React applications. This is usually done by building either a handful of small projects, each focused around a certain concept or by building a large project and incorporating each concept as you go. Learning like this is great, and absolutely essential to understanding the subject.\nHowever, I have noticed that due to the focus on the underlying concepts and functionality, most of the designs and layouts aren't particularly interesting! None of the designs are bad by any means -- and that isn't the focus of pure React courses so this isn't a problem -- but they aren't usually something you would give to a paying client, so that does leave a bit of a gap when you begin working on your own. That's precisely why I made this course!\n\n\nWe're going to build two complete projects from scratch based on just design files -- including my own actual production website!\nI'm going to walk you through the learning process that I went through when I built my first production application -- all the way from starting the project with a blank screen to deploying a fully responsive website. What I really try to emphasize is the way to think about structuring layouts in Material-UI. We'll first go over screenshots of the design we're about to build and visually breakdown the grid setup necessary to achieve each look, along with the corresponding code snippets! Then we actually hop into the code editor to put it into action.\nWe'll also be going over the documentation for each Material-UI component before we use it in our project so you'll be familiar with all the different capabilities, not just the features we use! Each component is extremely flexible and one of my goals for this course was giving you enough familiarity with the entire current ecosystem to be ready to understand any future updates.\nA key part of building production applications is making sure that your styles and functionality don't just work on your system, but are flexible and responsive to any environment. That's why I drill responsive design practices so you'll understand not only the concepts to keep in mind but how to actually implement them with Material-UI and get perfect styles on the biggest, smallest, and every screen in between. This will hopefully become second nature and we'll all enjoy more optimized user-experiences across the web.\n\n\nWe will also be covering extra topics like SEO in React, switching our project over to Next.js and the benefits from doing so, hooking up Google Analytics to start making data-driven decisions, integrating animations from After Effects, and so much more!\n\n\nThe Course Content Includes:\nSetting up a new project with create-react-app, React Router, and Material-UI\nGuided explanations of the documentation for almost every Material-UI component followed by implementing them in our project\nDifferent image optimization strategies\nCreating a theme for your application by mastering Material-UI's centralized styling system\nLearning how to use responsive design to ensure your applications look perfect on any screen size and orientation!\nUsing the Material-UI grid system to align complex layouts perfectly\nExporting animations from Adobe After Effects and efficiently importing them into a React application with react-lottie\nLeveraging serverless functionality with Google Firebase Cloud Functions\nSending emails through Node.js\nMaking network requests in React while displaying feedback like loading spinners with Material-UI\nSearch Engine Optimization (SEO) in React applications\nMigrating a project from create-react-app to Next.js and why\nCross-browser testing and support\nDeploying a Next.js project and adding a custom domain name -- for two different hosting platforms\nIncorporate Google Analytics to collect data about who is interacting with your application and what they're doing\nBuild custom organizational functionality to control data displayed in tables including search, filtering, delete, and undo\n\n\nAlong with lifetime access to over 35 HOURS of content, you'll also find easy access to support through active Q/A.\nYou've got nothing to lose -- this course comes with a 30-day money-back guarantee in case you aren't completely satisfied!\nTackle the challenge, blur the line between design and development, and learn to create the projects you've envisioned.",
      "target_audience": [
        "React developers looking to bridge the gap between design and development.",
        "React developers who feel like they know React but still have more to learn before building a polished website.",
        "React developers who have great designs but have struggled on perfectly implementing them in practice.",
        "React developers who want to be able to build any website design that's handed to them.",
        "React developers who want to master responsive design",
        "React developers looking for a better understanding of UX/UI design principles",
        "React developers looking for an easier, faster way to get up and running with clean, consistently designed applications"
      ]
    },
    {
      "title": "ASP.NET Core - SOLID and Clean Architecture",
      "url": "https://www.udemy.com/course/aspnet-core-solid-and-clean-architecture-net-5-and-up/",
      "bio": "Create a SOLID and testable ASP.NET Core Application using CQRS, Mediator Pattern and clean architecture.",
      "objectives": [
        "Implement SOLID Principles",
        "ASP .NET Core Blazor and API Development",
        "Advanced Tools - MediatR, Automapper, Fluent API and Validation",
        "Custom Exceptions and Global Error Handling",
        "Custom .NET Core Middleware",
        "Using NSwag and NSwag Studio",
        "Use Swagger for API Documentation",
        "Implement CQRS Pattern",
        "Use Identity and JWT To Secure Application API",
        "Build API Client Secure Application",
        "Moq and Shouldly Frameworks",
        "Unit Testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "IMPORTANT - .NET 8/9 Version"
        ],
        "Preliminary Concepts": [
          "Review of S.O.L.I.D Principles",
          "Single Responsibility Principle",
          "DRY Principle",
          "Dependency Inversion",
          "Understanding Clean Architecture",
          "What We Will Be Building"
        ],
        "Setup Clean Architecture Solution": [
          "Development Environment",
          "Get Latest Visual Studio",
          "Install Visual Studio 2026 (Insiders Edition)",
          "Setting Up Solution",
          "Overview of Solution Parts"
        ],
        "Setting up the Application Core": [
          "Section Overview",
          "Create the Domain Project",
          "Create Application Core Project",
          "Understanding CQRS, Mediator and Automapper",
          "IMPORTANT: Automapper now easier to use!",
          "Add Automapper and MediatR",
          "*IMPORTANT* - Fix MediatR Registration Error",
          "Setup Features Folder Structure (Vertical Slice Architecture)",
          "Creating CQRS Query Request and Handler - Part 1",
          "Creating CQRS Query Request and Handler - Part 2",
          "Creating CQRS Command Request and Handler - Part 1",
          "Creating CQRS Command Request and Handler - Part 2",
          "Adding Custom Exceptions",
          "Adding FluentValidation",
          "*IMPORTANT* - Validation Rule Correction",
          "Section Review",
          "Section Source Code"
        ],
        "Setting up Infrastructure Projects": [
          "Section Overview",
          "Create the Persistence Project",
          "Add Entity Framework and Database Context",
          "Add Repository Implementations",
          "EF Core - No Tracking",
          "Completing Repositories",
          "Create Infrastructure Project",
          "Add Third-Party Email Service",
          "Add Logging and Wrapper",
          "Section Review",
          "Section Source Code"
        ],
        "Creating the API project": [
          "Section Overview",
          "Create API Project",
          "Configuring the API Project",
          "Scaffolding Database",
          "Implementing Controller with MediatR - Part 1",
          "Implementing Controller with MediatR - Part 2",
          "Complete Leave Allocation Feature",
          "Complete Leave Request Feature - Part 1",
          "Global Error Handling",
          "Section Review",
          "Section Source Code"
        ],
        "Unit and Integration Testing": [
          "Section Overview",
          "Creating Application Unit Project",
          "Unit Testing the Application Code - Setup Mocks",
          "Unit Testing the Application Code - Testing Handlers",
          "Integration Testing - Entity Framework",
          "Section Review",
          "Section Source Code"
        ],
        "Adding the UI": [
          "Section Overview",
          "Creating UI Project - Blazor WebAssembly",
          "Using NSwag and NSwagStudio to Consume API",
          "Configure App for API",
          "Setup Leave Type Management Service",
          "Setup Leave Type Management UI"
        ],
        "Securing API and UI": [
          "Add Security using Identity",
          "IMPORTANT - Identity Core Package Change",
          "Add Json Web Token (JWT) Authentication to API",
          "Add Authentication Services to Blazor",
          "Add UI Changes for Security",
          "Section Review",
          "Section Source Code"
        ],
        "Complete Application Features": [
          "Setup Leave Allocation Management",
          "Setup Leave Request Management - Part 1 - Employee Request",
          "Setup Leave Request Management - Part 2 - Admin View",
          "Setup Leave Request Management - Part 3 - Approval",
          "Setup Leave Request Management - Part 3 - Cancel Request",
          "Section Review",
          "Section Source Code"
        ]
      },
      "requirements": [
        "At least three months of C# Development",
        "A Computer",
        "Internet",
        "A Willingness to Learn"
      ],
      "description": "Overview\nCreating a modular, testable, and maintainable application in .NET Core requires a solid foundation. Setting up an application architecture requires foresight and much consideration, as early decisions will impact how easily the application is extended and maintained.\nIn the long run, though, applications need to be maintained and, in this case, extended. Between its design and the way the code was written, neither is possible, so the application needs to be redesigned and future-proofed.\nWhy SOLID Architecture?\nWhen we talk about SOLID architecture, what we refer to isn’t a straightforward task. Decisions made early in the process can have a large impact later on, and maintainability and testability play an important role. Adopting these practices can also contribute to avoiding code smells, refactoring code, and facilitating more efficient agile development.\nSOLID stands for:\nS - Single-Responsibility Principle\nO - Open-closed Principle\nL - Liskov Substitution Principle\nI - Interface Segregation Principle\nD - Dependency Inversion Principle\nIn this course, you explore foundational architectural principles which help with the creation of maintainable code. You will discover how to set up a real-world application architecture with ASP.NET Core. Then, you’ll learn how to plug in different, common blocks such as email and authentication and have a foundation to plug-in other third-party services as needed.\nEverything in this course is .NET 6 / .NET 7 compatible.\nWhen you finish this course, you’ll have the skills and knowledge to create a testable and maintainable ASP.NET Core application to architect real-world enterprise .NET Core apps.\nN.B. - The project in this course is based on the deliverables in Complete ASP.NET Core and Entity Framework Development. While it is not mandatory to do this course, much of the existing code will be reused from this course's content.\nBuild A Strong Foundation in .NET Clean Architecture:\nLearn Clean or Onion Architecture and Best Practices\nLearn Command Query Responsibility Segregation (CQRS)\nImplement Mediatr Pattern\nAdd Email Service using SendGrid\nEfficient Exception Handling and Routing\nImplementing Unit Testing\nMoq and Shouldy\nGlobal Error Handling with Custom Middleware and Exceptions\nAdding Validation Using Fluent Validation\nBuild a .NET Core API and Blazor UI Application\nImplement JWT(JSON Web Token)  Authentication\nContent and Overview\nTo take this course, you must have some knowledge of .NET Core development and C#.\nThis is a huge course. Over 10 hours of premium content, but smartly broken up to highlight related activities based on each module in the application being built. We will also look at troubleshooting and debugging errors as we go along; implementing best practices; writing efficient logic, and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course, and you will be challenged to be the best you can be.\nWe don't do things the perfect way the first time; that is different from the reality of writing code. We make mistakes and point them out and fix them around them. By doing this, we develop proficiency in using debugging tools and techniques. By the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, including some files to make it easier for you to replicate the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nClicking the Take This Course button could be the best step you could take towards quickly increasing your income and marketability! Also, remember that if you don't think the course is worth what you spent, you have a full 30 days to get a no questions asked refund!\n\n\nIt's time to take action!\nSee you in the course!",
      "target_audience": [
        "Late Beginner to Intermediate Programmers"
      ]
    },
    {
      "title": "Build REST API with Spring Boot & Spring Data JPA",
      "url": "https://www.udemy.com/course/rest-api-with-java-spring-boot-spring-data-jpa-jparepository-swagger/",
      "bio": "Learn REST API with Java, Spring Framework & JPA Using JSON. Spring AOP, Lombok, Swagger, Logging, JPQL, MySQL, Heroku",
      "objectives": [
        "You will learn To Develop REST APIs With Spring Boot and Spring Data JPA",
        "You will learn Spring Boot and Spring Data JPA in Details",
        "You will learn to use Project Lombok",
        "You will learn to develop HTTP GET, POST, PUT and DELETE REST APIs",
        "You will learn JPA by performing CRUD Operations.",
        "You will learn to write AND, OR, IN Queries Using JPA",
        "You will learn to achieve Pagination and Sorting With JPA",
        "You will learn to write Java Persistence Query Language (JPQL)",
        "You will learn to handle Relationships Between Tables Using JPA.",
        "Spring Boot Deployment To Heroku (Cloud Platform)"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction To REST API": [
          "What is REST API ?",
          "Why REST API Over SOAP ?",
          "HTTP Methods in REST",
          "Overview Of JSON",
          "Knowledge Brush Up"
        ],
        "Setting Up Environment": [
          "JDK, Maven and STS Installation",
          "Postman (REST Client) Installation"
        ],
        "Getting Started With Spring Boot": [
          "What is Spring Boot ?",
          "Creating First Spring Boot App",
          "Controller and Service Layer",
          "Simple GET API With Spring Boot",
          "@Value Annotation To Read Property",
          "GET API With Json Response",
          "Runnable JAR Of Spring Boot App",
          "Change Port For Spring Boot Application",
          "Knowledge Brush Up"
        ],
        "JSON With Jackson Library": [
          "@JsonIgnore Usage",
          "@JsonProperty Usage"
        ],
        "Project Lombok With Spring Boot": [
          "What is Lombok and Why We Need Lombok ?",
          "Lombok Installation",
          "Getters and Setters With Lombok",
          "Constructors With Lombok",
          "Knowledge Brush Up"
        ],
        "Spring Data JPA With Spring Boot": [
          "Introduction To JPA",
          "Setting Up MySQL Database",
          "Spring Boot-MySQL Connection With JPA",
          "Creating First Entity In JPA",
          "Creating First Repository Using @Repository Annotation",
          "Get All Records Using JPA",
          "GET API With JPA"
        ],
        "REST APIs With Spring Data JPA": [
          "Http POST API",
          "POST API In Action",
          "Course Update",
          "Validating Input Data",
          "PUT API Part-1",
          "PUT API Part-2",
          "Http DELTE API With @RequestParam",
          "Path Variable - @PathVariable",
          "Knowledge Brush Up"
        ],
        "More With Spring Data JPA": [
          "Introduction To More Queries With JPA",
          "Get Records By Column Using JPA",
          "Checking SQL queries Generated by JPA",
          "AND Query Using JPA",
          "OR Query Using JPA",
          "IN Query Using JPA",
          "What Is Pagination ?",
          "Pagination Using JPA",
          "Sorting Using JPA",
          "@Transient Annotation",
          "Like Query Using JPA",
          "Starts with Query Using JPA",
          "Ends with Query with JPA"
        ],
        "Java Persistence Query Language (JPQL)": [
          "Writing JPQL With @Query Annotation",
          "Select Query With JPQL",
          "Update Query With JPQL",
          "Delete Query With JPQL"
        ]
      },
      "requirements": [
        "Need to have basic knowledge of Java Programming Language & Apache Maven",
        "Need to have basic knowledge of Spring Framework"
      ],
      "description": "***** Some Reviews From Students *****\nIt was good. I am happy.\nOur instructor teaches us very well. He shows us how we can test our APIs with Postman. He also attached the source code to the lessons so we can test some interesting features and need not type in the entire code. He explains the connections between controller, services and repository very well.\nHas been easy to follow, I like his added tips on methodology, makes me feel back in a class at in school; He even has my professors accent!\nThis course is to the point. It really helped me to get familiar with the framework.\n\n\nIn this course you are going to learn to Build RESTful APIs With Spring Boot and Spring Data JPA.\nNow a days Spring framework is widely used among Java Developers and specifically Spring Boot is in high demand.\nIn this course you will learn what is REST API and difference between REST API and SOAP. You will learn to build REST APIs with http methods - GET, POST, PUT and DELETE. We will use JSON ( JavaScript Object Notation ) as data format in REST APIs.\n\n\nSpring Data JPA ( Java Persistence API ) is very much popular to handle your database. Using JPA we can avoid writing native SQL queries so we can say that using JPA we can write database independent queries. JPA provides method proxy using which we can write queries very quickly. In this course you will learn to use Spring Data JPA in Spring Boot using JPA Repository. Using JPA you will learn to perform CRUD ( Create, Read, Update, Delete ) operations with MySQL Database.\n\n\nYou will learn how to write Select Query, AND Query, OR Query, In Query, Like Query, Starts with Query, Ends with Query Using Spring Data JPA. You will also learn to achieve pagination and sorting using Spring Data JPA. Behind the scene JPA will create native SQL queries for us and you will learn how to check those SQL Queries generated by JPA. You will learn when to use @Transient annotation provided by Spring Data JPA.\n\n\nYou will learn Java Persistence Query Language (JPQL). Using JPQL you can write database independent queries. In this course you will learn to write -\nJPQL Select Query\nJPQL Update Query\nJPQL Delete Query\nYou will learn how to handle your database tables' relationship with JPA. You will learn different relationships -\nOneToOne\nOneToMany\nManyToOne\n\n\nDocumentation of your REST APIs is very important for your consumers. In this course you will learn to document your APIs with OpenAPI Specification (Swagger UI).\n\n\nLogging is very important in your application to debug and troubleshoot the issue. In this course you will learn logging with Spring Boot and slf4j.\n\n\nOne of the key features that Spring Framework provides is Spring AOP ( Aspect Oriented Programming ). In this course you will learn real time implementation for Spring AOP in Spring Boot. You will learn different advices -\nBefore Advice\nAfter Advice\nAfterReturning Advice\nAround Advice\n\n\nProject lombok is used to avoid boiler plate code in your Java Application. In this course you learn how to use project lombok with Spring Boot Application and you will learn -\nHow to have getter methods for Java Class using @Getter Annotation.\nHow to have setter methods for Java Class using @Setter Annotation.\nHow to have constructor for Java Class using @NoArgsConstructor and @AllArgsConstructor Annotations.\nSpring Boot Scheduler - Cron Job If you want to run task periodically then you can use Scheduler with Spring Boot. For this cron expression is used for this purpose.\n\n\nSpring Boot Deployment to Heroku (Cloud Platform) Heroku is cloud platform where you can deploy your Spring Boot Application. In this course you will learn to deploy your Spring Boot App along with MySQL Database. Heroku is owned by Salesforce which is well known company for cloud services.",
      "target_audience": [
        "Any Java Developer wants to develop REST APIs with Spring Boot and Spring Data JPA"
      ]
    },
    {
      "title": "The Ultimate Beginner's Guide to Django 1.11",
      "url": "https://www.udemy.com/course/the-ultimate-beginners-guide-to-django-python-web-dev-website/",
      "bio": "Learn how to make and publish websites with Django and Python. We'll make three complete apps and publish one online.",
      "objectives": [
        "Create Django websites that work with a database.",
        "Publish a website on the internet.",
        "Understand Django basics. Function and Class Based Views, URL routing, Models, Gunicorn and much more!"
      ],
      "course_content": {
        "Welcome!": [
          "Introduction"
        ],
        "Python Refresher": [
          "Intro",
          "Installing Python",
          "Variables, Strings, Ints, and Print",
          "Your Turn! Challenge - Variables, Strings, Ints and Print Exercise",
          "If Statements and Comments",
          "Your Turn! Challenge - If Statements and Comments Exercise",
          "Functions",
          "Your Turn! Challenge - Functions Exercise",
          "Lists",
          "Your Turn! Challenge - Lists Exercise",
          "Loops",
          "Your Turn! Challenge - Loops Exercise",
          "Dictionaries",
          "Your Turn! Challenge - Dictionaries Exercise",
          "Classes",
          "Your Turn! Challenge - Classes Exercise",
          "Outro"
        ],
        "Site #1 - Pig Latin Translator": [
          "Intro",
          "Installing Django",
          "Creating a Project",
          "Project Tour",
          "URLs",
          "HTML and Django",
          "Forms",
          "Sending Data",
          "Pig Latin Translation",
          "View Dictionary",
          "Your Turn! Challenge - About Page",
          "Your Turn! Solution - About Page",
          "Outro",
          "PigLatin Source Code",
          "Django Cheat Sheet"
        ],
        "Site #2 - Personal Blog": [
          "Intro",
          "Sketch",
          "Virtualenv",
          "Apps - What They Are and Creating Our First",
          "App Views",
          "Models",
          "Admin",
          "Displaying Posts",
          "Model Methods",
          "Working with Images",
          "RegEx",
          "Post Details",
          "Bootstrap and Design",
          "Adding a NavBar",
          "Home Page Design",
          "Static Images",
          "Cleanup",
          "DISQUS - Adding Comments",
          "Your Turn! Challenge - Sitepages Apps",
          "Your Turn! Solutions - Sitepages Apps",
          "Outro",
          "Blog Source Code"
        ],
        "Publishing a Website on a VPS (Virtual Private Server)": [
          "Intro",
          "Vultr",
          "Security on Your Server",
          "Pip and Virtualenv",
          "Uploading Our Code",
          "Runserver",
          "Gunicorn",
          "Nginx",
          "Outro"
        ],
        "Site #3 - Reddit Clone": [
          "Intro",
          "Sketch",
          "Project Setup",
          "Sign Up View",
          "POST vs. GET",
          "Creating Users",
          "Username Uniqueness",
          "Login View",
          "URL Include",
          "Posts App",
          "Next Redirect",
          "Creating the Post Model",
          "Saving a Post Object",
          "Homepage URL",
          "Homepage View",
          "Voting",
          "Extending Templates",
          "Checking If the User is Logged In",
          "Logout",
          "Buttons and Polish",
          "Homepage Cleanup",
          "Your Turn! Challenge - Post by User",
          "Your Turn! Solution - Post by User",
          "Outro",
          "Source Code for Reddit Clone"
        ],
        "Bonus": [
          "Thanks!"
        ]
      },
      "requirements": [
        "Some background in any programming language. Python, Swift, Ruby, Java, JavaScript, C, anything really :)"
      ],
      "description": "Welcome to The Ultimate Beginner's Guide to Django. If you're brand new to Django, or have gotten lost in online tutorials, this is the course for you. I'll take you from being an absolute beginner to actually creating three complete Django websites. We'll also cover how to publish your sites.\nThis course starts with a Python Refresher. Django is a web framework written in Python. If you're new to Python, or just a bit rusty, this section will get you up to speed as quickly as possible. You don't need to be a Python expert to make Django website, but a base knowledge is needed. In the Python Refresher I'll teach you a new concept, show you some examples, then present you with a coding challenge to make sure you've understood that concept.\nThe three websites we'll make are as follows:\nPig Latin Translator - A simple two-page website that turns any text into Pig Latin! Creating this website will teach you the fundamentals of Django.\nYour Personal Blog - Don't use WordPress or Tumblr to share your thoughts; make your own blog! This website will teach you how to work with a database and data models. We'll also cover how to work with both static and user uploaded images!\nReddit Clone - This is the most advanced and complicated website we'll make in the course. With a big focus on creating user accounts and authentication, this website will teach you the more advanced topics that this course covers.\nAlso included in the course is a section showing you how to deploy your blog to a server and publish it for the world to see! I'll then take you step by step through working with a Ubuntu Linux server that will run your Django code 24/7.\nWhat are the key topics covered in this course?\nURL Dispatching\nFunction and Class Based Views (FBV v. CBV)\nHow to start a new project\nHow to create apps within a project and why they're important\nRunning your project in a virtual environment using Virtualenv\nPublishing your site on a VPS (Virtual Private Server) running Ubuntu Linux\nWorking with templates\nDebugging\nGunicorn\nHandling GET and POST requests\nWorking with a Database and Models\nAdmin Interface\nStatic and user uploaded images\nAuthentication and User accounts\nFeel free to take a free preview of this course to see if it's a good fit for you. Remember, you have a 30-day money-back guarantee with this course, so if for any reason you don't like it, you can get a full refund. There's no reason not to sign up!\nThanks for checking out The Ultimate Beginner's Guide to Django. See you on the inside!",
      "target_audience": [
        "This course is for people wanting to learn the basics of Django."
      ]
    },
    {
      "title": "FastAPI - The Complete Course 2025 (Beginner + Advanced)",
      "url": "https://www.udemy.com/course/fastapi-the-complete-course/",
      "bio": "Dive in and learn FastAPI from scratch! Learn FastAPI, RESTful APIs using Python, SQLAlchemy, OAuth, JWT and way more!",
      "objectives": [
        "Develop REAL-TIME RESTful APIs & Full Stack Applications using FastAPI",
        "Learn to Deploy your FastAPI applications so the whole world can use YOUR app!",
        "Learn KEY FastAPI features: Modern Authentication, Password Hashing with BCrypt, Authorization, JSON Web Tokens (JWT)",
        "You will TYPE IN EVERY LINE of code with me in the videos. I EXPLAIN every line of code to help you learn!",
        "Establish Table Relationships and Deploy Production Ready Databases",
        "Develop & Deploy professional-grade REST APIs and a Full Stack application with expert instruction",
        "I am a RESPONSIVE INSTRUCTOR ... post your questions and I will RESPOND in 24 hours.",
        "You can DOWNLOAD all source code. Perfect for offline LEARNING and REVIEW."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Content",
          "How To Get The Most Out Of This Course",
          "Items to help you get started",
          "Download Slides",
          "Download Source Code"
        ],
        "Python Installation & Refresher": [
          "Introduction to section",
          "Python Installation Overview",
          "Python Setup (Windows)",
          "Python Setup (Mac)",
          "Python Integrated Development Environment Overview",
          "Setup Integrated Development Environment",
          "Download Python Refresher Source Code",
          "Variables in Python",
          "Create your own Python Variables",
          "Comments",
          "Assignment",
          "Assignment Solution",
          "String formatting in Python",
          "Getting User Input",
          "String Assignment",
          "String Assignment Solution (Together)",
          "Lists in Python",
          "Sets and Tuples",
          "Lists Assignment",
          "Lists Assignment Solution",
          "Booleans and Operators",
          "If Else Statements",
          "If Else Assignment",
          "If Else Assignment Solution",
          "Loops in Python",
          "Loops Assignment",
          "Loops Assignment Solution",
          "Dictionaries in Python",
          "Dictionaries Assignment",
          "Dictionaries Assignment Solution",
          "Functions in Python",
          "Functions Assignment",
          "Functions Assignment Solution",
          "Imports in Python",
          "Object Oriented Programming Overview",
          "What will we be Creating?",
          "Object Oriented Programming in Python",
          "Abstraction in Python Overview",
          "Abstraction in Python",
          "Constructors in Python Overview",
          "Constructors in Python",
          "Encapsulation in Python Overview",
          "Encapsulation in Python",
          "Inheritance in Python Overview",
          "Self vs Super",
          "How we will Implement Inheritance",
          "Inheritance in Python",
          "Polymorphism in Python Overview",
          "How we will Implement Polymorphism",
          "Polymorphism in Python",
          "Time to Battle Overview",
          "Time to battle",
          "Composition Overview",
          "Hero Battle Overview",
          "Composition and Hero Battle"
        ],
        "FastAPI Overview": [
          "FastAPI Overview"
        ],
        "FastAPI Setup & Installation": [
          "Virtual Environments Overview",
          "FastAPI and Virtual Environment Installation (Windows)",
          "FastAPI and Virtual Environment Installation (Mac)",
          "Let's check your understanding"
        ],
        "Project 1 - FastAPI Request Method Logic": [
          "Books Project Introduction",
          "Download Source Code",
          "GET Request Method Overview",
          "Create FastAPI Endpoint",
          "FastAPI Project: Enhance Get Request",
          "FastAPI Project: Path Parameters Overview",
          "FastAPI Project: Path Parameters",
          "FastAPI Project: Query Parameters Overview",
          "FastAPI Project: Query Parameters",
          "FastAPI Project: Post Request Overview",
          "FastAPI Project: Post Request",
          "FastAPI Project: Put Request Overview",
          "FastAPI Project: Put Request",
          "FastAPI Project: Delete Request Overview",
          "FastAPI Project: Delete Request",
          "FastAPI Assignment",
          "FastAPI Assignment Solution",
          "Let's check your understanding"
        ],
        "Project 2 - Move Fast with FastAPI": [
          "Books 2 Project Overview",
          "Pydantic v1 vs Pydantic v2",
          "FastAPI Project: Setup Books 2 Project",
          "FastAPI Project: Post Request before Validation",
          "FastAPI Project: Pydantics and Data Validation Overview",
          "FastAPI Project: Pydantic Book Request Validation",
          "FastAPI Project: Fields - Data Validation",
          "FastAPI Project: Pydantic Configurations",
          "Let's check your understanding",
          "FastAPI Project: Fetch Book",
          "FastAPI Project: Fetch Books by Rating",
          "FastAPI Project: Update Book with Put Request",
          "FastAPI Project: Delete Book with Delete Request",
          "Assignment Problem",
          "FastAPI Project: Assignment Solution",
          "FastAPI Project: Data Validation Path Parameters",
          "FastAPI Project: Data Validation Query Parameters",
          "FastAPI Project: Status Codes Overview",
          "FastAPI Project: HTTP Exceptions",
          "FastAPI Project: Explicit Status Code Responses",
          "Let's check your understanding"
        ],
        "Project 3: Complete RESTful APIs": [
          "Project 3: Overview",
          "Pydantic v1 vs Pydantic v2"
        ],
        "Setup Database": [
          "FastAPI Project: SQL Database Introduction",
          "FastAPI Project: Database Connection with ORM SQLAlchemy",
          "FastAPI Project: Database Tables (Models)",
          "FastAPI Project: Main (Create Database Connection for API)",
          "FastAPI Project: Installation of SQLite3 Terminal (Windows)",
          "FastAPI Project: Installation of SQLite3 Terminal (Mac)",
          "FastAPI Project: SQL Queries Introduction",
          "FastAPI Project: SQLite3 Setting Up Todos"
        ],
        "API Request Methods": [
          "FastAPI Project: Get All Todos from Database",
          "FastAPI Project: Get Todo by ID",
          "FastAPI Project: Post Request (Todo Project)",
          "FastAPI Project: Put Request (Todo Project)",
          "FastAPI Project: Delete Request (Todo Project)",
          "Let's check your understanding"
        ],
        "Authentication & Authorization": [
          "FastAPI Project: Starting Authentication & Authorization",
          "FastAPI Project: Routers Scale Authentication File",
          "FastAPI Project: Router Scale Todos File",
          "FastAPI Project: One to Many Relationship",
          "FastAPI Project: Foreign Keys",
          "FastAPI Project: Users Table Creation",
          "FastAPI Project: Create First User",
          "FastAPI Project: Hash User's Password",
          "FastAPI Project: Save User to Database",
          "FastAPI Project: Authenticate a User",
          "JSON Web Token (JWT) Overview",
          "FastAPI Project: Encode a JSON Web Token (JWT)",
          "FastAPI Project: Decode a JSON Web Token (JWT)",
          "FastAPI Project: Authentication Enhancements"
        ]
      },
      "requirements": [
        "Basic python knowledge. No FastAPI knowledge required."
      ],
      "description": "Welcome to the #1 BEST SELLING FASTAPI course on Udemy!\nLearn how to BUILD and DEPLOY FastAPI applications from scratch! Including RESTful APIs and Full Stack applications!\n---\nFastAPI and Python are two of the hottest technologies in the market for building high performing APIs.\nBy the end of this course, you will have built production ready RESTful APIs, a production ready Full Stack application, full authentication/ authorization, setup production ready databases, and deployed your FastAPI application so the world can use YOUR app.\n---\nUnderstanding and knowing how to build APIs with FastAPI and Python can improve the job you have, get you a new job or even create multiple contract roles! These skills are are needed everywhere, and some of the highest paying job postings are asking for Python developers with FastAPI experience.\nIn this complete FastAPI course I will quickly get you up to speed, by walking you through the FastAPI framework from the beginning to the end! Whether you are interested in expanding your current craft, want to change careers or simply wanting to learn a very popular topic, then this course is for you! You will be using modern technologies including: PyCharm, Python, FastAPI, bcrypt password hashing, and  JSON Web Tokens (JWT)\nWhy is FastAPI the fastest growing Python web development framework in the market?\nTo make it simple, FastAPI covers all aspects of APIs. FastAPI comes with a lot out of the box, and is one of the fastest and highest performing web frameworks available. This makes web development rapid, while making use of one of the most popular programming languages in the world, Python.\nThis course is designed with beginners in mind! This means no matter what kind of background you come from, you will be able to learn one of the hottest frameworks in the market. All you need is some basic python knowledge, and you will be off creating APIs from scratch protected behind JSON Web Tokens (JWT)\n---\nIn this course, you will get (not only):\n- All source code is available for download\n- Responsive Instructor: All questions answered within 24 hours\n- Professional video and audio recordings (check the free previews)\n- High quality closed-captions / subtitles available for English (new!)\n---\nContent and Overview:\nInstall & Setup Python, IDE & FastAPI\nOverview of FastAPI Projects\nInstallation of a virtual environment for your FastAPI project\nCreate the HTTP Request Methods (GET, POST, PUT, DELETE)\nData Validation\nHTTP Response Status Codes\nWorking with dynamic data and models\nSave dynamic data to Database\nHandling user input & forms\nAdvanced features like Registration, Authentication (bcrypt) & Authorization (JWT)\nDatabase relationships (CASCADE, etc)\nSetup production database (MySQL)\nRouting\nTesting (Unit & Integration) pytest library\nFull Stack Development\nDeploy your application so the world can use it\nAnd more!\nCourse videos are regularly updated to keep up with the newest updates and information. The codingwithroby community is very active, so always know that if you have a question you will receive an answer within 24 hours!\n---\nSee what other students are saying about my courses!\n\"I have been looking for a good API and Web Services course and this has by far exceeded my expectations. Thank you for creating an information, easy to follow course.\"\n\"The instructor makes the concept easy to understand and learn.\"\n\"Eric is a great instructor and broke down everything about Django to get me started with building my first web application. I highly recommend this course. I have learned more than I was expecting and easier than I thought!\"\n\"The course taught me the basics needed to be able to program using python. All the things taught here are very helpful to me and I used them regularly.\"\n\"Clear, crisp and covered a wide array of topics on python. Thanks Eric for the course.\"\n\"Eric has done a great job explaining core concepts and how they relate with Django and Python.\"\n---\n\n\nNo Risk – Money-Back Guarantee\nFinally, there is no risk. Once you purchase the course, if for some reason you are not happy with the course, Udemy offers a 30-day money back guarantee.\nSo you have nothing to lose, sign up for this course and learn how to build APIs using FastAPI and Python!\nIt is time to level up your career and become a Python API developer!\n\n\nTarget Audience\nBasic Python knowledge\nNo experience required for FastAPI. I will teach you FastAPI from the beginning.",
      "target_audience": [
        "Beginner Python developers curious about FastAPI",
        "Python developers wanting to develop high performing APIs",
        "Web developers that want to get into backend APIs using Python",
        "Anyone that is curious about how APIs are developed using FastAPI"
      ]
    },
    {
      "title": "Practical Web Design & Development: 7 Courses in 1",
      "url": "https://www.udemy.com/course/learn-web-design-html-css-adobe-photoshop/",
      "bio": "Master Practical Web Design & Development with Photoshop, HTML5, CSS3, Bootstrap, UI/UX, Responsive Design & More",
      "objectives": [
        "Will be able to design web page using Photoshop",
        "Will be able to design & dev web page using HTML5",
        "Will be able to design web page using CSS3",
        "Will be able to create responsive web design",
        "Will be able to create Mobile Friendly Web Design",
        "Will be able to create stunning pages using Bootstrap"
      ],
      "course_content": {
        "Practical Web Design using Photoshop": [
          "Introduction to web design using Photoshop",
          "Setting up Artboards",
          "Setting the Stage",
          "Wireframing",
          "Wireframing UI/UX for Mobile",
          "Exporting Wireframes",
          "Designing for Desktops",
          "Designing for Mobile",
          "Preparing for Slicing",
          "Getting started with slicing",
          "Modifying Slices",
          "Final words"
        ],
        "Practical HTML5 Basics": [
          "Introduction to HTML",
          "HTML4 vs. HTML5",
          "Making your first HTML page",
          "Tools to create HTML files",
          "Base HTML Tags",
          "Paragraph Tags",
          "Break Tags",
          "Header Tags",
          "Bold and Italic Tags",
          "Ordered and unordered Lists",
          "Image Tags"
        ],
        "Practical HTML5 Advanced": [
          "Difference between Absolute Links and Relative Links",
          "Hyperlinking to an external page",
          "Hyperlinking to an email address",
          "Hyperlinking to a file in your site",
          "Playing and controlling audio",
          "Playing and controlling video",
          "Embedding a video",
          "What is a Table - Pros and Cons",
          "Table properties",
          "Adding an iFrame",
          "Adding an iFrame: Part 2",
          "What is possible with a form using HTML knowledge",
          "Defining the form",
          "Text fields and text areas",
          "Radio buttons and check buttons",
          "Data input and buttons",
          "Proper file structure",
          "Code commenting",
          "Meta Tags"
        ],
        "Practical CSS3 Basics": [
          "About the class - what you will need",
          "What is CSS? Why we need it?",
          "What's new in CSS3",
          "CSS Selectors, properties and attributes",
          "ID Selectors",
          "Class Selectors",
          "Element Selectors",
          "All Selectors",
          "Inline style sheets",
          "External style sheets",
          "Inline styles"
        ],
        "Practical CSS3 Advanced": [
          "The Box Model",
          "Adding Color",
          "Working with fonts",
          "Background images",
          "Background Images: Part 2",
          "Styling links",
          "Styling ID Tags",
          "Float and clear",
          "Block and inline elements",
          "Positioning"
        ],
        "Web Design Basics": [
          "9 Rules of better web design",
          "Color Theory for Web Designers"
        ],
        "Practical Bootstrap": [
          "Why Bootstrap?",
          "Download Bootstrap",
          "Adding Bootstrap in your site",
          "Creating the navigation",
          "Creating the navigation: Part 2",
          "Creating the navigation: Part 3",
          "Creating containers",
          "Styling images",
          "Creating the footer",
          "Adding styled buttons"
        ],
        "Practical Bootstrap Advanced": [
          "Adding Google Maps",
          "Styling a Contact Form"
        ]
      },
      "requirements": [
        "No prior knowledge required"
      ],
      "description": "Our students say about this course ...\n\"... I must say that until now, this is the only course that speaks and about  Photoshop. Other courses are speaking  (except HTML, CSS) about  Bootstrap or about Javascript. I think it worth to see this course.\" -- Elias Katsan\n\"The instructor is very informative and shows obstacles students may run into while designing a website.\" -- Emeka Nwadiogbu\n\"Great course! I learnt a little but more of programming. Thanks!\" -- David Laso Martín\n\"It was a great course for me. I learn many thing from this course. Thanks\" -- JR Jul-Haque Rahman\n\"This course is cover all the things to create a website using photoshop.\" -- Viraj Shah\nBy completing this course, you will become a master in  Web Design Technologies like Practical web design using Photoshop, HTML5, CSS3, Adobe Photoshop, and more. This course gives you hands-on and practical experience on detailed HTML5,  CSS3, Adobe Photoshop, and more.\nContents of this tutorial #\nPractical web design using Photoshop\nIntroduction to web design using Photoshop\nSetting Artboards\nSetting the stage\nWireframing\nWireframing UI/UX for Mobile\nExporting Wireframes\nDesigning for Desktops\nPreparing for Slicing\nFinal words\nInteractive HTML5: Basics\nIntroduction to HTML\nHTML4 vs. HTML5\nMaking your first HTML page\nTools to create HTML files\nBase HTML Tags\nParagraph Tags\nBreak Tags\nHeader Tags\nBold and Italic Tags\nOrdered and unordered Lists\nInteractive HTML5: Advanced\nDifference between Absolute Links and Relative Links\nHyperlinking to an external page\nHyperlinking to an email address\nHyperlinking to a file in your site\nPlaying and controlling audio\nPlaying and controlling video\nEmbedding a video\nWhats is a Table - Pros and Cons\nTable properties\nAdding an iFrame\nAdding an iFrame: Part 2\nWhat is possible with a form using on HTML knowledge\nDefining the form\nText fields and text areas\nRadio buttons and check buttons\nData input and buttons\nProper file structure\nCode commenting\nMeta tags\n\n\nInteractive CSS3: Basics\nWhat is CSS? Why we need it?\nWhat's new in CSS3\nCSS Selectors, properties and attributes\nID Selectors\nClass Selectors\nElement Selectors\nAll Selectors\nInline style sheets\nExternal Style sheets\nInteractive CSS3: Advanced\nThe Box model\nAdding Color\nWorking with fonts\nBackground images\nStyling ID tags\nFloat and Clear\nBlock and inline elements\nPositioning\nAdding the elements\nInteractive Bootstrap: Basic\nWhy Bootstrap?\nDownloading Bootstrap\nAdding Bootstrap in your site\nCreating navigation: Part 1\nCreating navigation: Part 2\nCreating navigation: Part 3\nStyling images\nCreating the footer\nAdding styled buttons\nAdding Google Maps\n\n\nLearning HTML5, CSS3, and Adobe Photoshop is one of the fastest ways to improve your career, especially on web design and development.\nWe hope this course will be used as a helping hand for your prospective career. Please dig on free preview videos for more information.",
      "target_audience": [
        "Who wanna learn web design",
        "Who wanna learn HTML5 and CSS3",
        "Who wanna learn Adobe Photoshop",
        "Who wanna learn practical UI/UX Design",
        "Who wanna learn Mobile UI/UX Design",
        "We wanna learn practical UI/UX Design using Photoshop"
      ]
    },
    {
      "title": "Learn HTML in 85 Minutes by Creating Web Pages from Scratch",
      "url": "https://www.udemy.com/course/practical-html/",
      "bio": "Master HTML Quickly | Create Functional Web Pages from Scratch with Step-by-Step Guidance",
      "objectives": [
        "You will be confident on how web pages work together",
        "You will understand how things are being used in HTML",
        "You will realize that you need about 20% HTML knowledge to create 80% of your website pages",
        "You can better understand whether you should continue learning more in web development or not"
      ],
      "course_content": {
        "Before You Start this Course": [
          "What Will You Learn?"
        ],
        "Practical HTML Crash Course": [
          "Install and Setup Basic Tools",
          "HTML Quick Start with a Simple Page",
          "Create a Blueprint Template",
          "Create Website Pages",
          "Create Blog Page",
          "Create Gallery Page",
          "Create Data Report Page",
          "Create Resources Page",
          "Create Application Form",
          "Create Contact Form + Enhance Application Form",
          "Add Google Map on Your Contact Page",
          "Test Your Knowledge :)",
          "Download Source Files (Static HTML Website)"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A Computer with Microsoft Windows",
        "A Text File Editor",
        "A Web Browser"
      ],
      "description": "Dive into the world of web development and learn practical HTML in just 85 minutes. This crash course is designed to equip you with the essential skills needed to create your own web pages from scratch—no prior experience required!\nWhat You’ll Learn:\nHands-on HTML Coding: Start coding immediately as you build web pages from the ground up, gaining real-world experience.\nStep-by-Step Video Lessons: Follow easy-to-understand video tutorials that guide you through each stage of the process.\nMaster HTML Fundamentals: Learn the core concepts of HTML, including syntax, tags, and attributes, to structure your content effectively.\nEnhance Your Web Pages: Incorporate links, images, and videos to make your web pages more dynamic and engaging.\nWhy Enroll in This Course?\nEmpower Your Projects: Whether you're a marketer, designer, writer, consultant, entrepreneur, or hobbyist, learning HTML will open new doors and streamline your work.\nBuild the Web’s Foundation: HTML is the backbone of every website. Gain a solid understanding of web page creation and functionality to support your future web development endeavors.\nFocus on Essentials: Skip the fluff and dive straight into the essential skills you need to create functional web pages quickly and efficiently.\nGain Independence: Develop the confidence to create and manage your own web pages, bypassing the need for theoretical textbooks.\nWhat Students Are Saying:\n\"Thanks for giving me the basic structure of HTML! It cleared my doubts regarding HTML.\" - Muthamizh\n\"The tutor simplified the process, making it easier for me to learn. Thank you.\" - Ipnx\n\"This course is just awesome for beginners. I definitely recommend taking it first.\" - Jegadeeswara\n\"I love every section of the tutorial, thank you.\" - Adejumo\n\"Zeeshan Sir explained all the basic and necessary elements, tags, and their uses in a great way.\" - Harshit\nReady to Start?\nEnroll today and unleash your creativity by mastering the essentials of HTML in just 85 minutes!",
      "target_audience": [
        "This course is for beginners - no prior experience is required",
        "This course is for students who want to learn practical HTML",
        "This course is for entrepreneurs & hobbyists",
        "This course is for those looking jump in web development career"
      ]
    },
    {
      "title": "The Ultimate React Course 2025: React, Next.js, Redux & More",
      "url": "https://www.udemy.com/course/the-ultimate-react-course/",
      "bio": "Master modern React from beginner to advanced! Next.js, Context API, React Query, Redux, Tailwind, advanced patterns",
      "objectives": [
        "Become an advanced, confident, and modern React developer from scratch",
        "Build 10+ beautiful projects, including two HUGE professional real-world apps",
        "Become job-ready by working with libraries and tools used in professional projects",
        "Join my other 1,900,000+ happy students on this journey",
        "Think like a senior React engineer with advanced design patterns",
        "Next..js \"App\" router with cutting-edge React Server Components + Server Actions",
        "State management: thinking about state, where to place, local vs. global, UI vs. remote",
        "Build reusable, composable, and versatile components",
        "Master the confusing but important useEffect hook once and for all",
        "Build many custom hooks, reusable in your future projects",
        "Build single-page applications with React Router (including v6.4+ with data loading)",
        "Performance optimization with memo, useMemo, useCallback, and code splitting",
        "Advanced React features: useReducer, Context API, cloneElement, portals, etc.",
        "Advanced state management with Redux, Redux Toolkit, Thunks, React Query",
        "Build real-world app features: authentication, data sorting, filtering and pagination, dark mode, charts, etc.",
        "Understand how React actually works behind the scenes: virtual DOM, reconciliation, fiber tree, key prop, etc.",
        "Style your apps with Tailwind CSS, CSS Modules, Styled Components (CSS-in-JS)",
        "Practice your skills with many challenges, exercises, and practice projects"
      ],
      "course_content": {
        "Welcome, Welcome, Welcome!": [
          "Course Roadmap and Projects",
          "Building Our First React App!",
          "Watch Before You Start!",
          "Read Before You Start!",
          "Downloading Course Material"
        ],
        "PART 1: REACT FUNDAMENTALS [4 PROJECTS]": [
          "Introduction to Part 1",
          "Useful Resources for Part 1"
        ],
        "A First Look at React": [
          "Section Overview",
          "Why Do Front-End Frameworks Exist?",
          "React vs. Vanilla JavaScript",
          "What is React?",
          "Setting Up Our Development Environment",
          "Pure React",
          "A Quick Look at React's Official Documentation",
          "Setting Up a New React Project: The Options",
          "Setting Up a Project With Create-React-App"
        ],
        "[Optional] Review of Essential JavaScript for React": [
          "Section Overview",
          "Destructuring Objects and Arrays",
          "Rest/Spread Operator",
          "Template Literals",
          "Ternaries Instead of if/else Statements",
          "Arrow Functions",
          "Short-Circuiting And Logical Operators: &&, ||, ??",
          "Optional Chaining",
          "The Array map Method",
          "The Array filter Method",
          "The Array reduce Method",
          "The Array sort Method",
          "Working With Immutable Arrays",
          "Asynchronous JavaScript: Promises",
          "Asynchronous JavaScript: Async/Await"
        ],
        "Working With Components, Props, and JSX": [
          "Section Overview",
          "Rendering the Root Component and Strict Mode",
          "Before We Start Coding: Debugging",
          "Components as Building Blocks",
          "Creating And Reusing a Component",
          "What is JSX?",
          "Creating More Components",
          "JavaScript Logic in Components",
          "Separation of Concerns",
          "Styling React Applications",
          "Passing and Receiving Props",
          "Props, Immutability, and One-Way Data Flow",
          "CHALLENGE #1: Profile Card (v1)",
          "The Rules of JSX",
          "Rendering Lists",
          "Conditional Rendering With &&",
          "Conditional Rendering With Ternaries",
          "Conditional Rendering With Multiple Returns",
          "Extracting JSX Into a New Component",
          "Destructuring Props",
          "React Fragments",
          "Setting Classes and Text Conditionally",
          "Section Summary",
          "CHALLENGE #2: Profile Card (v2)"
        ],
        "State, Events, and Forms: Interactive Components": [
          "Section Overview",
          "Let's Build a Steps Component",
          "Handling Events the React Way",
          "What is State in React?",
          "Creating a State Variable With useState",
          "Don't Set State Manually!",
          "The Mechanics of State",
          "Adding Another Piece of State",
          "React Developer Tools",
          "Updating State Based on Current State",
          "More Thoughts About State + State Guidelines",
          "A Vanilla JavaScript Implementation",
          "CHALLENGE #1: Date Counter (v1)",
          "Starting a New Project: The \"Far Away\" Travel List",
          "Building the Layout",
          "Rendering the Items List",
          "Building a Form and Handling Submissions",
          "Controlled Elements",
          "State vs. Props",
          "EXERCISE #1: Flashcards",
          "CHALLENGE #2: Date Counter (v2)"
        ],
        "Thinking In React: State Management": [
          "Section Overview",
          "What is \"Thinking in React\"?",
          "Fundamentals of State Management",
          "Thinking About State and Lifting State Up",
          "Reviewing \"Lifting Up State\"",
          "Deleting an Item: More Child-to-Parent Communication!",
          "Updating an Item: Complex Immutable Data Operation",
          "Derived State",
          "Calculating Statistics as Derived State",
          "Sorting Items",
          "Clearing the List",
          "Moving Components Into Separate Files",
          "EXERCISE #1: Accordion Component (v1)",
          "The \"children\" Prop: Making a Reusable Button",
          "More Reusability With the \"children\" Prop",
          "EXERCISE #2: Accordion Component (v2)",
          "CHALLENGE #1: Tip Calculator"
        ],
        "[Optional] Practice Project: Eat-'N-Split": [
          "Section Overview",
          "Project Setup",
          "Building the Static App: List of Friends",
          "Building the Static App: Forms",
          "Displaying the New Friend Form",
          "Adding a New Friend",
          "Selecting a Friend",
          "Creating Controlled Elements",
          "Splitting a Bill"
        ],
        "PART 2: INTERMEDIATE REACT [2 PROJECTS]": [
          "Introduction to Part 2",
          "Useful Resources for Part 2"
        ],
        "Thinking in React: Components, Composition, and Reusability": [
          "Section Overview",
          "Setting Up the \"usePopcorn\" Project",
          "How to Split a UI Into Components",
          "Splitting Components in Practice",
          "Component Categories",
          "Prop Drilling",
          "Component Composition",
          "Fixing Prop Drilling With Composition (And Building a Layout)",
          "Using Composition to Make a Reusable Box",
          "Passing Elements as Props (Alternative to children)",
          "Building a Reusable Star Rating Component",
          "Creating the Stars",
          "Handling Hover Events",
          "Props as a Component API",
          "Improving Reusability With Props",
          "PropTypes",
          "CHALLENGE #1: Text Expander Component"
        ]
      },
      "requirements": [
        "NO React experience necessary! I take you from beginner to expert!",
        "Basic understanding of JavaScript is required (this course contains a quick JavaScript review section)",
        "Any computer and OS will work — Windows, macOS or Linux"
      ],
      "description": "** Just launched 16 BONUS hours of Next.js content in May 2024!\n** Take this course after taking my #1 bestselling JavaScript course (900,000+ students)\n\n\nIn 2024, React is still the #1 skill to learn if you want to become a successful front-end developer!\nBut it can be hard. There are so many moving parts, so many different libraries, so many tutorials out there.\nThat's why you came here... And you came to the right place! This is THE ultimate React course for 2024 and beyond.\nA practice-heavy approach to master React by building polished apps, backed up by diagrams, theory, and looks under the hood of React.\nThe all-in-one package that takes you from zero to truly understanding React and building modern, powerful, and professional web applications.\nReal projects. Real explanations. Real React.\n\n\n[01] Why is this the right React course for you?\nThis is the most epic React (+ Next.js) course on Udemy, and it's fundamentally different from all the other ones.\nHere's why:\nContains the biggest and most professional project, where we implement many common app features (see promo video!)\nSuper detailed explanations of all important concepts with carefully crafted and animated diagrams\nA huge focus on \"how to think in React\" and modern best practices\nA long section that explores how React actually works behind the scenes will give you the confidence to use React effectively on your own\nAdvanced design patterns like compound components will make you think like a senior React engineer\nMany sections (16 hours!) on Next.js with the modern \"app\" router (with React Server Components and Server Actions)\nAnd these are just the highlights! Check out the full list below (+ the promo video and curriculum).\nAlso, make no mistake: \"React course\" actually means \"Front-end development with React and modern libraries course\".\nThat's right, besides the React library itself, you will learn and master them all: React Router, Redux, Redux Toolkit, React Query, React Hook Form, Styled Components, Tailwind CSS, Next.js, and more.\nThis is how we plan, build, and deploy professional projects! We even use industry-standard tools such as Supabase (fully-fledged back-end), GitHub, Netlify, and Vercel.\nAs you expect, this course is 100% project-based. So throughout the course, you'll start building your portfolio of 10+ beautiful and high-quality React apps, where each one will showcase a few of the new skills you will be learning.\nBy the end of the course, you will have all the knowledge and confidence that you need to ace your job interviews and become the professional React developer that companies are looking for.\n\n\n[02] Why am I the right React teacher for you?\nMy name is Jonas, I'm an experienced web developer and designer, and one of Udemy's top instructors. I've been teaching web development courses since 2015 to over 1,900,000 developers, so I know exactly how students learn and what is needed to master any subject.\nWith this in mind, I designed the ideal curriculum for this course: a unique blend of real-world projects, deep explanations, and theory lectures, to turn you into a confident React and Next.js developer in just a couple of weeks.\n\n\nReady to become a confident and independent React + Next.js developer, highly capable of building your own apps? Then don't wait any longer, and start your React journey today!\n\n\n[03] Still not sure? Here are all the nerdy details of what we'll cover:\nReact fundamentals [why we even need React, components, JSX, props, events, forms, state, props vs. state]\nHow to think about state [where to place state, guidelines, lifting state up, local vs. global state, UI vs. remote state]\nHow to think about components [how to split components, props as API, how to build reusable and composable components, the children prop]\nDeep dive into effects and useEffect [data fetching, lifecycle vs. synchronization, when to use effects, effects vs. event handlers]\nDeep dive into hooks [rules of hooks, how hooks work, useRef, building super-reusable custom hooks]\nPerformance optimization [wasted renders, memoization with memo, useMemo, and useCallback, optimizing Context API, code splitting + Suspense]\nAdvanced state management [useReducer hook, the Context API, Redux, Redux Toolkit, Thunks, React Query]\nBuilding Single-Page Applications (SPA) [Vite, routing with React Router, URL parameters and query strings for state management, data loaders and actions (v6.4+)]\nBuilding real-world features found in many apps [authentication and authorization, data sorting, filtering and pagination, dark mode, dashboard with charts, etc.]\nCreating your own back-end with a DB and API using Supabase [gain the power to build full-stack apps on your own!]\nHow to style React apps [Tailwind CSS, CSS Modules, and Styled Components]\nAdvanced React patterns used by senior developers [render props, higher-order components, compound components (to build a modal, a context menu, and more)]\nHow React works behind the scenes [rendering, virtual DOM, reconciliation, fiber tree, key prop, events, state batching, etc.]\nNext.js with the \"app\" router, React Server Components, and Server Actions [server-side rendering, static vs. dynamic rendering, state management between server and client, data loading strategies, streaming, caching, image and font optimization, authentication with NextAuth, modern React hooks (useFormState and useOptimistic)]\n\n\n[04] By signing up today, you'll also get:\nUp-to-date HD-quality videos, that are easy to search and reference (great for Udemy Business learners)\nDownloadable slides PDF for 70+ theory videos (not boring, I promise!)\nProfessional English captions (not auto-generated)\nDownloadable assets and starter and final code for each project\nFree and fast support in the course Q&A\n10+ challenges and exercises to practice your skills (solutions included)",
      "target_audience": [
        "You just finished learning JavaScript and are looking for your next step!",
        "You want to truly master React development, including common libraries needed to build real-world apps: React Router, Redux, React Query, Next..js, and many others",
        "You have been learning React, but 1) still don't understand React, or 2) still don't feel confident to build professional React apps",
        "You have been building React apps, but are still missing the advanced stuff: useReducer, performance optimization, how React actually works, advanced design patterns, etc."
      ]
    },
    {
      "title": "The complete React 19 course, incl. Next JS & Express",
      "url": "https://www.udemy.com/course/the-complete-react-fullstack-course/",
      "bio": "Take you coding to the next level with React, Redux, Next JS, Node js, Express and MongoDB",
      "objectives": [
        "You will learn the whole React WebApp building process, from your pc to the server.",
        "Work with nosql databases ( Firebase, MongoDB and Moongoose)",
        "How to deploy applications to services like Firebase and Heroku.",
        "Learn how Redux work and apply it on a real life application.",
        "Learn what NODE js is and How it works and create your own server,",
        "Learn the basics of Webpack"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "IDE",
          "GitHub Resources",
          "Installing Node JS"
        ],
        "React Basics": [
          "Creating a React App",
          "Project Structure",
          "From the ground up",
          "JSX Behind the scenes",
          "Planning your App",
          "Connecting components",
          "Single Expressions",
          "Adding styles",
          "Events",
          "Reusable code",
          "Component state",
          "Prev State",
          "Complex State",
          "Header state",
          "Props",
          "Props to news item",
          "React children",
          "Inline stylings",
          "Child to Parent",
          "Finishing the Basics app"
        ],
        "React Hooks": [
          "introduction",
          "UseEffect",
          "Cleanup Effect",
          "UseRef",
          "Refs as props",
          "React context part 1",
          "React context part 2",
          "React context part 3"
        ],
        "Practice Project One - Who pays the bill ?": [
          "Introduction",
          "Creating a context",
          "Stage display",
          "Creating the form input",
          "Add and Show players",
          "Validation",
          "Removing players",
          "Showing toasts",
          "Finishing the App"
        ],
        "React Router": [
          "Introduction",
          "The router process",
          "Creating routes",
          "Linking",
          "A better header",
          "Dynamic Params",
          "NavLink and router types",
          "Redirections",
          "404 routes",
          "Nested routes"
        ],
        "React transitions": [
          "Transition Basics",
          "Transition Basics part 2",
          "CSS transitions",
          "Transitions Group"
        ],
        "React Forms": [
          "Introduction",
          "Formic basics",
          "Validations",
          "Using a validation schema",
          "The Formik hook",
          "Formik components",
          "Custom components"
        ],
        "React complex state": [
          "Introduction",
          "Creating a store",
          "Creating a Slice",
          "Accessing store",
          "Dispatching actions",
          "Extra Reducers part 1",
          "Extra Reducers part 2",
          "Reject and Fulfill",
          "Promise form dispatch",
          "Creating a context",
          "The useReducer hook"
        ],
        "Practice Project Two - Daily News": [
          "introduction",
          "Creating routes",
          "Redux config",
          "Header and Layout",
          "Json server",
          "Fetching home posts",
          "Load more posts",
          "Masonry cards",
          "Article route and moment",
          "Article view",
          "Cleaning post by ID",
          "Contact form",
          "Contact validation",
          "Submit contact",
          "Newsletter form",
          "Finishing the app"
        ],
        "Next JS Basics": [
          "Introduction",
          "Creating a Next JS App",
          "How Routes work",
          "Static Routes",
          "Nested Routes",
          "Dynamic Routes",
          "Params and Searchparams",
          "Catch-All routes",
          "Layouts",
          "Linking and Navigation",
          "Standard components",
          "Styles and Modules",
          "Parallel Routes",
          "Route Groups"
        ]
      },
      "requirements": [
        "Knowing a little bit of HTML, CSS and Javascript, everything else you will learn it as we go."
      ],
      "description": "Do you want to learn the whole process of building your App ?. This is the course for you.\nWe will start from the very beginning, from \"I don't even know how use it..and why would I“ to actually understanding how React works and make it communicate with other technologies like Next JS & Node JS.\n\nYou will learn all the logic and practice behind React in different modules, and as we advance through the course we will be increasing the difficulty.\nSince I believe that the best way to fully learn is by coding, after each important section we will put everything in practice with some course projects, and after you have a strong base of React we will journey into Next JS,  Servers and Databases, Redux and deploying  apps to production.\n\n\nTo sum everything up, you will learn in this course:\nThe very basics of React. How to install and the logic behind it.\nOnce you know the basics of React we will journey into the confusing stuff.\nAfter you have a strong base of React we will create a full practice project.\nEverybody is using Redux, so we will learn how to use redux with our React Apps.\nWe will Deep dive into Next JS until we create and deploy a practice app.\nSince our app will need a database, you will learn how to use MongoDB and mongoose.\nApply security, authentication, restricting routes, hashing passwords and JWT’s.\n\n\nWhat about the instructor experience ?\nWell I've been around for 15 years now, built lots of applications for small projects and big companies like Citi, Fox, Disney and a lot more.\nToday I work as developer for a major company developing applications in React or Angular mostly, but I like to teach in my spare time.\nHow about the target audience?\nThis course is for almost everyone, a little bit of JavaScript is required. We will use ES6 but you can learn as we go.\nIf you want to take your coding to the next level, this is the course for you.",
      "target_audience": [
        "From beginners in javascript to intermediate."
      ]
    },
    {
      "title": "Complete Web Design: HTML, CSS, JavaScript, Vue, React, Git",
      "url": "https://www.udemy.com/course/get-started-with-html-css-the-frontend-developer-bootcamp/",
      "bio": "Complete Web Developer Bootcamp 10 in 1: HTML, CSS, JavaScript, jQuery, TypeScript, Vue, React, Firebase, Git and Github",
      "objectives": [
        "10 in 1: All Technologies Needed to Master Front End Web Development",
        "Build Complete Websites from the Ground Up",
        "Master the Most Recent Web Development Technologies & Best Practices",
        "Build Complex Web Apps with User Authentication & Realtime Databases",
        "HTML5 & CSS3 Zero to Advanced",
        "Responsive Design with CSS Media Queries",
        "Working with Figma Web Design Prototypes",
        "Publishing Your Website On Hosting Services",
        "FTP, Hosting & Domains In-Depth",
        "JAVASCRIPT Zero to Advanced",
        "jQUERY Essentials",
        "TYPESCRIPT For Beginners",
        "Front End Web Development Frameworks",
        "REACT JS Zero to Advanced",
        "React Router & Redux Toolkit",
        "React JS with TypeScript",
        "VUE JS Zero to Advanced",
        "Vue JS Options x Composition API",
        "Vue Router",
        "Vue JS State Management with Pinia",
        "GIT Beginner Course",
        "GITHUB Basics"
      ],
      "course_content": {},
      "requirements": [
        "No previous knowledge in programming is required, we'll teach you everything from the beginning",
        "No paid software required"
      ],
      "description": "Course Overview\nIn this comprehensive Web Developer Bootcamp, you will learn all the fundamental skills required to build websites from the ground up and become an experienced Front-End Web Developer.\nNo previous knowledge is needed, as the course is designed to take you from an absolute beginner to a proficient web developer in a short time.\nCourse Content\nThis exclusive course covers the most important languages and technologies in Front-End Web Development:\nHTML & CSS\nHTML5 & CSS3\nSemantic elements\nComplete Guide to Colors and Fonts in CSS\nFlexbox\nResponsive design and CSS media queries\nWorking with Figma design prototypes\nFTP, Domain, and Hosting\nJavaScript\nJavaScript from Zero to Advanced\nData Types in-depth\nFunctions, loops, and conditionals\nJavaScript best practices\nImage galleries and product filters in JavaScript\nHTTP requests with the Fetch method\nWorking with external APIs\njQuery Essentials\njQuery Syntax\nHandling forms\nCSS Manipulation\nEvent Handling\nAnimations & Effects\nTypeScript\nTypeScript Basics\nData Types\nInterfaces\nUnion Types, and more\nReact JS\nReact JS from Zero to Advanced\nReact Router\nRedux / Redux Toolkit\nReact JS + TypeScript\nVue JS\nVue JS from Zero to Advanced\nOptions API & Composition API\nState Management with Pinia\nMulti-page apps with Vue Router\nVue Dev Tools\nVue CLI and Vite\nGit\nGit from Zero to Advanced\nBest practices in version control\nGit on the command line, VS Code source control, and GUI applications\nComplete Guide to Branches\nGitHub and other remote servers\nGitHub Desktop App\n\n\nHands-on Learning Method\nUsing our step-by-step, hands-on method with real-life projects, challenges, and exercises, you will learn to build beautiful web pages in an engaging and intuitive way.\n\n\nCourse Features (2nd Edition)\n350+ lessons\n40 hours of video content\n12 real-life projects\nComplete course material for download\nAdditionally, the 1st edition of the course is also included, providing you with the legacy learning resources, including jQuery.\n\n\nLaunch Your Web Development Career\nWhether you aim to start a career in the tech industry as a web developer, become a freelance web designer, or simply want to learn how to build websites, this course will fast-track your journey.\nBy mastering HTML, CSS, JavaScript, jQuery, React, TypeScript, Vue JS, and Git, you will acquire essential skills that form the building blocks of the web. Regardless of the path you choose, this course provides high-quality content and a great learning experience to help you achieve your goals.\nJoin over 28,000 students worldwide in this highly-rated course. Enroll now and start building amazing websites and web applications!",
      "target_audience": [
        "Aspiring Web Developers: Individuals who are looking to start a career in web development and want a comprehensive learning path from beginner to advanced levels",
        "Students and Coding Enthusiasts: Students or hobbyists eager to begin their journey into coding and web development, seeking structured courses to build a solid foundation in modern web technologies.",
        "Freelancers and Entrepreneurs: Freelance web developers and entrepreneurs aiming to enhance their skills to build, manage, and sell custom websites and web applications, leveraging advanced tools and techniques.",
        "Tech Professionals Upgrading Skills: Experienced professionals in the tech industry who want to update their skill set with the latest web development technologies, frameworks, and best practices to stay competitive in the job market.",
        "Web developers who want to master Vue JS & React to build modern web applications"
      ]
    },
    {
      "title": "Mastering AWS CloudFormation Templates Using JSON",
      "url": "https://www.udemy.com/course/mastering-aws-cloudformation-templates-using-json/",
      "bio": "Master the techniques of developing Cloud Formation templates using JSON, With advanced Concepts And Examples",
      "objectives": [
        "Will learn and master the techniques to develop CloudFormation templates using and JSON",
        "Setup networking (VPC, Private and Public Subnets)",
        "Configure auto scaling groups",
        "Reusing resources - stacks/cross stack examples",
        "Configuring Route53",
        "Deploying Lambda Functions",
        "Bootstrapping using Userdata scripts",
        "Creating resources conditionally"
      ],
      "course_content": {
        "CloudFormation Introduction": [
          "Course Objective",
          "Introduction to CloudFormation And Infrastructure As Code",
          "Introduction To JSON Notation",
          "Installing Atom and Adding CloudFormation Packages on Mac OS"
        ],
        "Managing VPC , Subnets, Parameters And Intrinsic Functions": [
          "CloudFormation Anatomy And Provisioning VPC",
          "CloudFormation Parameters In detailed",
          "Adding Parameters to CloudFormation Templates",
          "CloudFormation Intrinsic Functions",
          "Adding Couple Of Subnets"
        ],
        "Managing InternetGateway, Route table": [
          "Add Internet Gateway and Attach to VPC",
          "Create Route Table and Add a Route to Internet Gateway",
          "Associate Subnets to Route Table"
        ],
        "Security Groups, EC2 Instances, Bootstrapping Using UserData And cfn-init": [
          "CloudFormation Security Groups",
          "Launch EC2 Instances",
          "Adding EC2 Userdata",
          "Working With cfn-Init",
          "CloudFormation Mappings And Fn::FindInMap"
        ],
        "Managing Load Balancer": [
          "Add Load Balancer",
          "Add EC2 Instances to ELB"
        ],
        "Configuring Route53": [
          "Configure Route53 For Elastic Load Balancer"
        ],
        "Managing Auto Scaling Groups": [
          "Intro to AutoScaling And Setting up Launch Configuration",
          "Configure Autoscaling Group With Launch Configuration and Integrate With ELB"
        ],
        "CloudFormation Outputs And Cross Stack Access": [
          "CloudFormation Outputs",
          "CloudFormation Implementing Cross Stack Access"
        ],
        "CloudFormation - Conditions": [
          "Creating AWS Resources Conditionally"
        ],
        "Managing - AWS Lambda Functions": [
          "Step-1 Create IAM Role For Lambda Function",
          "Step-2 Create Python Function, Zip And Upload to S3",
          "Step-3 Deploy Lambda Function"
        ]
      },
      "requirements": [
        "Decent knowledge of AWS service like VPC, Subnets ELB etc"
      ],
      "description": "AWS CloudFormation provides a common language for you to describe and provision all the infrastructure resources in your cloud environment. Cloud Formation allows you to use a simple text file to model and provision, in an automated and secure manner, all the resources needed for your applications across all regions and accounts.\nThis course is designed to understand and master the techniques of writing CloudFormation templates using JSON,\nThis course emphasizes the usage of all cloud-formation features like.\nResources\nParameters\nMappings\nConditions\nMetaData\nAnd Many More\nThis course Includes details examples over various advanced concepts using.\nVPC\nSubnets\nRoute 53\nInternet Gateways\nRoute Tables\nSecurity Groups\nEC2 Instances\nUseddata Scripts\nCloud Init\nAutoscaling Groups\nLaunch Configurations\nElastic Load balancer (ELB)\nAnd More....",
      "target_audience": [
        "Guys having basic understanding of AWS common services and willing to become zero to hero in writing Cloud Formation Templates"
      ]
    },
    {
      "title": "Webpack 5: The Complete Guide For Beginners",
      "url": "https://www.udemy.com/course/webpack-from-beginner-to-advanced/",
      "bio": "Learn Webpack 5 from the very basics to advanced! Use Webpack with JS, CSS, NPM, Module Federation and Micro Frontends.",
      "objectives": [
        "Quickly get started, without long introductions and rambling.",
        "Create fully functional, production ready Webpack 5 config from scratch.",
        "Get a solid understanding how Webpack really works and when to use it.",
        "Optimize your Webpack production builds to be small and fast.",
        "Optimize your development experience by enabling Hot Module Replacement, better Error Handling, etc.",
        "Deep dive into Webpack 5 Asset Modules, Loaders and Plugins.",
        "Use latest cutting edge JavaScript features with Webpack 5, Babel 7, and NPM.",
        "Structure your code better with ES Modules and Webpack Code Splitting.",
        "Be able to understand and improve existing Webpack configurations.",
        "Integrate Webpack 5 with NodeJS and Express framework.",
        "Use Webpack for Single Page Applications as well as Multiple Page Applications.",
        "Get a solid foundation for learning advanced Webpack features.",
        "Master the new Module Federation feature introduced in Webpack 5."
      ],
      "course_content": {},
      "requirements": [
        "Basics of JavaScript",
        "Basics of HTML"
      ],
      "description": "My main goal is to help you understand and master Webpack, particularly its latest version Webpack 5! This course was specifically designed for those who want to learn Webpack from scratch, and for those who are already working with Webpack, but don't fully understand how it works.\nIn this course we will build fully functional, production ready Webpack configuration from scratch. We will start from the very simple things and then gradually move towards more advanced topics. Each lesson builds on top of the previous ones, so it is easy to follow.\nAfter this course you will definitely be able to use Webpack in your projects. You will be able to create your own Webpack configurations and improve existing ones. We will also cover using NPM and Babel in this course in order to use the latest JavaScript technologies. If you worked on a project with Webpack, but never touched the configuration, after this course you will be able to touch it, and even improve it :)\nI am constantly updating this course, so you can always be sure that it is up-to-date and covers the latest features of Webpack.\nIf you have any questions regarding Webpack, feel free to post them in the Q&A section. Many people have already found answers to their questions there, and I will do my best to help you with your questions as well.\nMost React and Angular boilerplates come with Webpack included, and most people are afraid to touch its default configuration. I strongly believe that you should not be scared of it. You should master it!\nP. S. Made in Ukraine",
      "target_audience": [
        "All developers with basic JavaScript knowledge"
      ]
    },
    {
      "title": "AWS & Typescript Masterclass - CDK, Serverless, React",
      "url": "https://www.udemy.com/course/aws-typescript-cdk-serverless-react/",
      "bio": "Code with AWS and Typescript by creating serverless projects with CDK, CloudFormation, Cognito, Lambda and Amplify!",
      "objectives": [
        "Write infrastructure as code with AWS Cloud development Kit - CDK",
        "Handle multiple CloudFormation stacks with CDK to reduce blast radius",
        "Basic usage of CDK with constructs, outputs and parameters",
        "Build CI/CD pipelines with AWS CodePipeline for CDK",
        "Serverless APIs with Lambda, ApiGateway, DynamoDB, S3",
        "Intermediate CDK topics like intrinsic functions, aspects, cross stack references",
        "CDK code testing: declarative tests, matchers, captors and snapshots",
        "Multiple tenant apps with AWS Cognito and Amplify",
        "Handle L1, L2, L3 CDK constructs",
        "Basics and advanced topics of Typescript",
        "Build a UI with React and Typescript",
        "AWS IAM and CloudWatch",
        "Make AWS SDK calls from anywhere",
        "CDK best practices"
      ],
      "course_content": {},
      "requirements": [
        "AWS account and AWS basics",
        "Basic to medium programming level",
        "Time and patience"
      ],
      "description": "AWS and Typescript are 2 of the most demanded technologies in today's IT market. AWS Cloud Development Kit - CDK brings a great new development experience.\nNow you can use your preferred programming language for your business logic, cloud infrastructure, but also for the UI, with React.\nNow you can build serverless applications much easier!\n\n\nThis AWS & Typescript Masterclass course is what you need to build your apps like a pro, learning from an programming active instructor!\nWhat you can expect from this course:\nIn depth coverage of AWS Cloud Development Kit - CDK\nSetup\nCDK constructs\nCDK versions\nDeploying and managing CDK apps\nBest practices with CDK\nInfrastructure as code with AWS Cloud Formation\nConsole view\nCloud Formation Deployment stages\nResources management\nCloud Formation Outputs\nCloud Formation Parameters\nBuild highly scalable and cost efficient apps with the serverless architecture\nServerless computing services\nAWS Lambda:\nWrite, test, bundle, deploy, configure\nUse the best practices\nGo deep into advanced techniques with Lambda and CDK\nUse Typescript and the NodeJS as environment for Lambda\nAWS DynamoDB:\nBasics and console access\nDynamoDB queries\nDynamoDB sdk (TypeScript) calls from AWS Lambda\nCDK generic constructs with DynamoDB, ApiGateway and Lambda\nAWS Cognito:\nUser pools\nIdentity pools\nConsole access\nIAM role management inside Cognito\nCognito groups for fine grained access control\nAWS S3 for file storage\nBuild a monitoring stack with CDK  - CloudWatch alarm, SNS topic and Web-hook lambda - Slack channel\nAWS CloudWatch X-RAY\nCDK testing with Jest:\nDeclarative tests\nCDK test matchers\ncaptors\nCI/CD with CodePipeline:\nCDK stages, test and deployment to production\nAnother important point of this course is the Typescript programming language. It is fast, flexible, powerful and easy to learn.\nTypescript takes the flexibility of JavaScript and the programming principles of C# and delivers a great coding experience.\nThis course uses Typescript for:\nCloud infrastructure with AWS CDK\nBusiness logic with AWS Lambda\nWeb application UI with React\nWe finally can write all our app in one language, no more JSON, or YAML, or strange scripts, just Typescript, your favorite language!\n\n\nWhy this course stands out from other Udemy courses:\nBeyond the basics - after finish, you can directly use this knowledge into production code\nPractical knowledge - presentations are kept to a minimum, we focus on what is really important\nLogical and flexible structure - take the course at your own pace\nFast paced, concise, most typing cut out - focus on explanations - respect for your time\nCode changes in each lecture on Git with code diffs\nBig font, dark background, fullHD content, this way it is readable even on a small screen or even tablet.\nLifetime access\nCertificate of completion to present to your current or prospective employer\nQ&A active instructor\nInstructor:\nMy name is Alex Horea, I'm an active senior web and Cloud developer and I want to pass you the knowledge I wish I had when I was a beginner. I strongly believe that practice is the best way to learn, and in this course we will be practicing TypeScript in 4 ways:\nAs cloud infrastructure with CDK\nBusiness logic with AWS Lambda\nUI with React\nCloud helper topics like monitoring, testing and CI/CD, with CDK\nGo beyond the theory and learn from an active instructor, aligned with today's programming demands!",
      "target_audience": [
        "Anyone who wants to learm AWS of TypeScript in a dynamic, fun and professional way",
        "Developers who want to transition their apps to Typescript",
        "Developers who want to write infrastructure as code with CDK"
      ]
    },
    {
      "title": "Learn Spring Boot 3 in 100 Steps - No 1 Java Framework",
      "url": "https://www.udemy.com/course/spring-boot-tutorial-for-beginners/",
      "bio": "Java Spring Boot Framework in 100 steps - Build a REST API and a Web application with Java, JPA, SpringBoot and Maven",
      "objectives": [
        "Learn Spring Boot 3 - LATEST version of Spring Boot Framework",
        "Build Web Application and REST API with Spring Boot",
        "Learn MAGIC of Spring Boot - Auto Configuration, Spring Initializr and Starter Projects",
        "Connect to a Database using JPA/Hibernate and Spring Boot",
        "You will learn to write great Unit and Integration tests using Spring Boot Starter Test",
        "Spring Boot STARTER Projects - Spring Boot Web, Spring Boot Test, Spring Boot Data JPA, Spring Boot Data REST",
        "You will understand how to make BEST USE of Spring Boot Actuator and Spring Boot Developer Tools",
        "You will learn how to externalise application configuration using Spring Boot Profiles and Dynamic Configuration",
        "You will understand and use the embedded servlet container options provided by Spring Boot - Tomcat, Jetty and Undertow",
        "You will understand the basics of developing a Web Application - POST, GET, HTTP, MVC Pattern",
        "You will understand the basics of styling your web page using Bootstrap framework"
      ],
      "course_content": {},
      "requirements": [
        "You should have working experience with Java and Annotations",
        "We will help you install Eclipse and get up and running with Maven and Tomcat",
        "This course requires you to download Docker Desktop. An alternative to Docker Desktop is Podman Desktop. If you are a Udemy Business user, please check with your employer before downloading software."
      ],
      "description": "Spring Boot is the No 1 Java Framework for Building Microservices and REST API.\nDo you want to Learn the Magic of Spring Boot - Auto Configuration, Spring Initializr and Starter Projects?\nDo you want to build an Awesome Web Application connecting to a Database with JPA/Hibernate using SpringBoot?\nDo you want to build a Basic REST API using Spring Boot?\nLook No Further!\n\nNOTE: This course requires you to download Docker Desktop. An alternative to Docker Desktop is Podman Desktop. If you are a Udemy Business user, please check with your employer before downloading software.\n\n\nWHAT OUR LEARNERS ARE SAYING:\n5 STARS - This course was perfect not only for beginners but for experienced engineers such as myself trying to get up to speed on spring boot quickly. Thank you so much for the great material! Looking forward to taking another course from udemy and in28minutes!\n5 STARS - One of the best Spring Boot course!\n5 STARS - I found this course to be very thorough. Good balance of theory and hands-on coding. Every important aspect of Spring Boot is demonstrated by way of useful, almost production grade coding exercises, unit and integration testing. This course has everything you would require to get up and running as spring boot developer. I liked this course and recommend highly to anyone interested in learning about Spring Boot.\n5 STARS - This is the one of the best spring boot courses I have enrolled. Ranga Karan explains each and every bit and shows practically. I would recommend to anyone who wants to learn spring boot\n5 STARS - Great instructor!!\n5 STARS - I'm a beginner to Spring Boot framework, and I find this tutorial absolutely awesome! The instructor's lecture is crystal clear! Thanks for providing this tutorial!!!\n\n\nCOURSE OVERVIEW:\nSpring Boot has a lot of magic going for it. Developing REST Services with Spring Boot is cool and fun. Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can “just run”. Most Spring Boot applications need very little Spring configuration.\nThis course is now updated with new sections. Updated with Spring Boot 2 and Spring 5.\nIn this course, you will learn the features of Spring Boot and Spring Boot Starter Projects with hands-on step by step approach developing:\nBasic Todo Management Java Application using Spring Boot with Login and Logout functionalities\nBasic REST Service to manage Survey Questionnaire\nYou will get introduced to REST Services, Spring Security (Authentication and Authorization), Maven (dependencies management), Eclipse (IDE) and Tomcat Embedded Web Server. We will help you set up each one of these.\nYou will learn about Spring Boot step by step - in more than 100 steps. This course would be a perfect first step as an introduction to Spring Boot.\nYou will learn about\nBasics of Spring Boot\nBasics of Auto Configuration and Spring Boot Magic\nSpring Boot Starter Projects\nSpring Initializr\nBasic REST Services using Spring Boot Starter Web\nREST Service Content Negotiation with JSON and XML\nEmbedded servlet containers : Tomcat, Jetty and Undertow\nWriting Unit and Integration tests using Spring Boot Starter Test\nProfiles and Dynamic Configuration with Spring Boot\nSpring Boot Data JPA\nSpring Boot Actuator\nSpring Security\nSpring Boot Developer Tools\nHere is a quick overview of different sections of the course:\nIntroduction to the Power of Spring Boot in 10 Steps\nDevelop a Todo Management Web Application with Spring Boot in 25 Steps\nIntroduction to Unit Testing with JUnit in 5 Steps\nIntroduction to Mocking with Mockito in 5 Steps\nAdvanced Features of Spring Boot in 28 Steps - We learn these developing a simple API for managing survey questionnaire.\nIntroduction to JPA in 10 Steps\n\n\nCOURSE HIGHLIGHTS:\nWeb Application with Spring Boot\n\n\nStep 01 - Creating Spring Boot Web Application with Spring Initializr\nStep 02 - Quick overview of Spring Boot Project\nStep 03 - First Spring MVC Controller, @ResponseBody, @Controller\nStep 04 - Enhancing Spring MVC Controller to provide HTML response\nStep 05 - Redirect to a JSP using Spring Boot - Controller, @ResponseBody and View Resolver\nStep 06 - Exercise - Creating LoginController and login view\nStep 07 - Quick Overview - How does web work - Request and Response\nStep 08 - Capturing QueryParams using RequestParam and First Look at Model\nStep 09 - Quick Overview - Importance of Logging with Spring Boot\nStep 10 - Understanding DispatcherServlet, Model 1, Model 2 and Front Controller\nStep 11 - Creating a Login Form\nStep 12 - Displaying Login Credentials in a JSP using Model\nStep 13 - Add hard-coded validation of userid and password\nStep 14 - Getting started with Todo Features - Creating Todo and TodoService\nStep 15 - Creating first version of List Todos Page\nStep 16 - Understanding Session vs Model vs Request - @SessionAttributes\nStep 17 - Adding JSTL to Spring Boot Project and Showing Todos in a Table\nStep 18 - Adding Bootstrap CSS framework to Spring Boot Project using webjars\nStep 19 - Formatting JSP pages with Bootstrap CSS framework\nStep 20 - Lets Add a New Todo - Create a new View\nStep 21 - Enhancing TodoService to add the todo\nStep 22 - Adding Validations using Spring Boot Starter Validation\nStep 23 - Using Command Beans to implement New Todo Page Validations\nStep 24 - Implementing Delete Todo Feature - New View\nStep 25 - Implementing Update Todo - 1 - Show Update Todo Page\nStep 26 - Implementing Update Todo - 1 - Save changes to Todo\nStep 27 - Adding Target Date Field to Todo Page\nStep 28 - Adding a Navigation Bar and Implementing JSP Fragments\nStep 29 - Preparing for Spring Security\nStep 30 - Setting up Spring Security with Spring Boot Starter Security\nStep 31 - Configuring Spring Security with Custom User and Password Encoder\nStep 32 - Refactoring and Removing Hardcoding of User Id\nStep 33 - Setting up a New User for Todo Application\nStep 34 - Adding Spring Boot Starter Data JPA and Getting H2 database ready\nStep 35 - Configuring Spring Security to Get H2-console Working\nStep 36 - Making Todo an Entity and Population Todo Data into H2\nStep 37 - Creating TodoRepository and Connecting List Todos page from H2 database\nStep 38 - Connecting All Todo App Features to H2 Database\nStep 39 - OPTIONAL - Overview of Connecting Todo App to MySQL database\nStep 40 - OPTIONAL - Installing Docker\nStep 41 - OPTIONAL - Connecting Todo App to MySQL database\n\nSpring Boot Deep Dive With a Small API\n\n\nStep 01 - Quick Introduction to REST - Understand Resource and Actions\nStep 02 - Creating Spring Boot Project for REST with Maven and Eclipse\nStep 03 - Creating your first Spring Boot Resource - Hello World\nStep 04 - Creating a Second Spring Boot Resource Method - Hello World Bean\nStep 05 - Exploring Path Params and Path Variables with Spring Boot\nStep 06 - Getting Ready for Survey Questionnaire REST API\nStep 07 - Creating First Survey Spring Boot REST API - GET all surveys\nStep 08 - Creating Second Survey Spring Boot REST API Method - GET a survey\nStep 09 - Exploring REST API Best Practices - Request Methods and Response Status\nStep 10 - Exercise - Creating Survey Question related Spring Boot REST API Methods\nStep 11 - Creating Spring Boot REST API to create Survey Question - POST\nStep 12 - Improving POST Method - Status CREATED and Location Header\nStep 13 - Implementing Spring Boot REST API Method to DELETE a Question\nStep 14 - Implementing Spring Boot REST Method to Update a Question - PUT\nStep 15 - Setting up Spring Boot Data JPA with H2 Database and User Entity\nStep 16 - Exploring Spring Boot Data JPA using Command Line Runner\nStep 17 - Creating User REST API with Spring Boot Starter Rest\nStep 18 - Writing Your First Spring Boot Integration Test\nStep 19 - Writing Asserts for JSON in Spring Boot Tests - JsonAssert\nStep 20 - Improving JUnit Asserts for Spring Boot Integration Test\nStep 21 - Writing Spring Boot Integration Test for GET method returning List\nStep 22 - Writing Spring Boot Integration Test for POST method creating a Question\nStep 23 - Understanding JUnit Best Practice - Have ZERO Side Effects\nStep 24 - Writing Your First Spring Boot Mock MVC Unit Test\nStep 25 - Improving Asserts for Spring Boot Mock MVC Unit Test\nStep 26 - Writing Spring Boot Mock MVC Unit Test for POST Method\nStep 27 - Getting Started with Spring Boot Starter Security\nStep 28 - Configuring Spring Security for Spring Boot REST API\nStep 29 - Fixing Spring Boot Unit and Integration Tests",
      "target_audience": [
        "You would like to understand the magic of Spring Boot",
        "You are looking forward to develop you first RESTful API with Spring Boot",
        "You are looking forward to develop you first Web Application with Spring MVC and Spring Boot",
        "You are a experienced developer new to Spring Boot and want to discover what the hype is about"
      ]
    },
    {
      "title": ".NET 7 Web API & Entity Framework Jumpstart",
      "url": "https://www.udemy.com/course/net-core-31-web-api-entity-framework-core-jumpstart/",
      "bio": "Build the back-end of a .NET 7 web application with a Web API, Entity Framework 7 & SQL Server in no time!",
      "objectives": [
        "Build a complete .NET 7 back-end with Web API, Entity Framework Core, SQL Server",
        "Implement Token Authentication with JSON Web Tokens & Roles",
        "Utilize all three types of relationships in your database: one-to-one, one-to-many, many-to-many",
        "Use the HTTP request methods GET, POST, PUT & DELETE",
        "Implement best practices like a proper structure for your Web API, Dependency Injection, asynchronous calls with async/await and Data-Transfer-Objects (DTOs)",
        "Use LINQ to filter, sort, map, select and access your entities.",
        "Seed data with code-first migrations programmatically"
      ],
      "course_content": {
        "Introduction - .NET 7": [
          "Introduction",
          "Tools (Visual Studio Code & .NET SDK)",
          "Create a new Web API",
          "First API Call",
          "Git Repository & .gitignore File",
          "GitHub Repository"
        ],
        "Web API - .NET 7": [
          "Introduction",
          "The Model-View-Controller (MVC) Pattern",
          "New Models",
          "New Controller & GET a New Character",
          "First Steps with Attribute Routing",
          "Routing with Parameters",
          "HTTP Request Methods Explained",
          "Add a New Character with POST",
          "Best Practice: Web API Structure",
          "Character Service",
          "Fix the “Possible ArgumentNullException”",
          "Asynchronous Calls",
          "Proper Service Response with Generics",
          "Data-Transfer-Objects (DTOs)",
          "AutoMapper",
          "Modify a Character with PUT",
          "Modify a Character with AutoMapper",
          "Delete a Character",
          "Summary"
        ],
        "Entity Framework - .NET 7": [
          "Introduction",
          "Object-Relational-Mapping & Code-First Migration Explained",
          "Installing Entity Framework 7",
          "Installing SQL Server Express (with Management Studio)",
          "Implementing the DataContext",
          "ConnectionString & Adding the DbContext",
          "First Migration",
          "GET Implementations",
          "POST Implementations",
          "PUT Implementations",
          "DELETE Implementations",
          "Summary"
        ],
        "Authentication - .NET 7": [
          "Introduction",
          "The User Model",
          "First Relationship",
          "Authentication Theory",
          "Authentication Repository Theory",
          "Authentication Repository Implementation",
          "User Registration",
          "“User already exists.”",
          "Authentication Controller",
          "User Login",
          "Token Authentication with JSON Web Tokens",
          "JSON Web Tokens (JWT) implementations",
          "Authentication Middleware & Authorize Attribute",
          "Testing Secured Methods with Swagger",
          "Reading Claims & Receiving the User’s RPG Characters",
          "Summary"
        ],
        "Advanced Relationships with Entity Framework - .NET 7": [
          "Introduction",
          "Proper User-Character Relationship - Get All Characters",
          "Proper User-Character Relationship - Add Character",
          "Proper User-Character Relationship - Delete & Get Single Character",
          "Include Entities with Entity Framework",
          "One-To-One Relationship with Weapons",
          "Add Weapons to RPG Characters",
          "Many-To-Many Relationship with Skills",
          "Data Seeding - Add Skills to the Database",
          "Add Skills to RPG Characters",
          "Summary"
        ],
        "Let The Games Begin (More Than Just CRUD) - .NET 7": [
          "Introduction",
          "Prepare to Fight!",
          "Attack with Weapons",
          "Attack with Skills",
          "Start a Fight",
          "Highscore: Sort & Filter Entities",
          "Summary"
        ],
        "Introduction - .NET 6": [
          "Introduction",
          "Tools (Visual Studio Code & .NET SDK)",
          "Create a new Web API",
          "First API Call",
          "Git Repository & .gitignore File",
          "GitHub Repository"
        ],
        "Web API - .NET 6": [
          "Introduction",
          "The Model-View-Controller (MVC) Pattern",
          "New Models",
          "New Controller & GET a New Character",
          "First Steps with Attribute Routing",
          "Routing with Parameters",
          "HTTP Methods Explained",
          "Add a New Character with POST",
          "Best Practice: Web API Structure",
          "Character Service",
          "Asynchronous Calls",
          "Proper Service Response with Generics",
          "Data-Transfer-Objects (DTOs)",
          "AutoMapper",
          "Modify a Character with PUT",
          "Modify a Character with Automapper",
          "Delete a Character",
          "Summary"
        ],
        "Entity Framework Core - .NET 6": [
          "Introduction",
          "Object-Relational-Mapping & Code-First Migration Explained",
          "Installing Entity Framework Core",
          "Installing SQL Server Express (with Management Studio)",
          "Implementing the DataContext",
          "ConnectionString & Adding the DbContext",
          "First Migration",
          "GET Implementations",
          "POST Implementations",
          "PUT Implementations",
          "DELETE Implementations",
          "Summary"
        ],
        "Authentication - .NET 6": [
          "Introduction",
          "The User Model",
          "First Relationship",
          "Authentication Theory",
          "Authentication Repository",
          "User Registration",
          "“User already exists.”",
          "Authentication Controller",
          "User Login",
          "Token Authentication with JSON Web Tokens",
          "JSON Web Tokens (JWT) implementations",
          "Authentication Middleware & Authorize Attribute",
          "Testing Secured Methods with Swagger",
          "Reading Claims & Receiving the User’s RPG Characters",
          "Summary"
        ]
      },
      "requirements": [
        "You should have basic knowledge of C#."
      ],
      "description": "The .NET framework is getting better and better and more important in the web development world nowadays.\nAlmost every request I get for new web development projects is asking for knowledge in .NET, including Web API and Entity Framework.\nSo, knowing the fundamentals of back-end web development with .NET can be highly beneficial to your career. And that’s where this course comes in.\nIn a short period of time, you will learn how to set up a Web API, make restful calls to this Web API and also save data persistently with Entity Framework, Code-First Migration, a SQL Server database, and all three types of relationships in this database.\nWe will get right to the point, you will see every single step of writing the necessary code and by the end of this course, you will have what it takes to say ‘yes’ to all the .NET project requests from any recruiter.\nThe only tool you need in the beginning is Visual Studio Code which is available for free.\nWe will use Visual Studio Code for our implementations and make calls to the Web API with the help of Swagger UI - an interface that lets you consume the API out-of-the-box, thanks to the latest version of the .NET framework.\nLater, we will also utilize SQL Server Express and the SQL Server Management Studio to manage our database. These are also available for free.\nThe back-end application we’re going to build is a small text-based role-playing game where different users can register (we’re going to use JSON web tokens for authentication) and create their own characters like a mage or a knight, add some skills and a weapon, and also let the characters fight against each other to see who is the best of them all.\n\n\nWhat You Will Learn\nIntroduction\nCreate your first Web API call in less than 10 minutes\nInitialize a Git repository for your source control\nWeb API\nThe Model-View-Controller (MVC) pattern\nCreate models and controllers\nAttribute routing (with parameters)\nThe HTTP request methods GET, POST, PUT & DELETE\nBest practices for your Web API like a ServiceResponse class and Data-Transfer-Objects (DTOs)\nMap your models with AutoMapper\nEntity Framework Core\nObject-Relational-Mapping\nCode-First Migration\nSQL Server Express\nHow to use a DataContext and a proper ConnectionString\nAll previous HTTP requests with Entity Framework Core to save your data in a SQL Server database\nData Seeding: Insert data with a migration programmatically\nAuthentication\nToken Authentication with JSON Web Tokens\nClaims\nSecure controllers with the Authorize attribute\nAdd roles to the users\nAdvanced Relationships with Entity Framework Core\nOne-to-one relationships\nOne-to-many relationships\nMany-to-many relationships\nInclude entities with Entity Framework Core\nGet the proper relations between entities\nMore Than Just CRUD\nStart automatic fights\nFilter and order RPG characters by their highscore\n\n\nThis course has been completely re-recorded with .NET 7.\nThe lectures with the older versions of the .NET (Core) Framework - .NET 6, 5 & .NET Core 3.1 - are still available for reference.\n\n\nYour Instructor\nMy name is Patrick and I will be your instructor for this course. I’m a web developer for over a decade now, I have worked for big corporations and small teams, as an employee and a contractor and I just love to see the way Microsoft is going with .NET and how important it gets day by day.\nTo this date, I was able to run ten courses on web development here on Udemy about ASP.NET, Blazor, single-page applications, Angular, and DevOps, with a total of over 75.000 unique students and more than 10.000 reviews.\nIf you have any questions, feel free to connect.\n\n\nAnd if you still have any doubts, you have a 30-day money-back guarantee, no questions asked.\nSo, I hope you’re ready for your new skills and your new projects! ;)\nI’m looking forward to seeing you in the course!\n\n\nCourse image: practicuum/Shutterstock",
      "target_audience": [
        "Students who want to build professional .NET 7 web development skills."
      ]
    },
    {
      "title": "Learn WordPress in a Unique Way - A Strange Approach",
      "url": "https://www.udemy.com/course/learn-wordpress-using-wordpress-to-make-6-figures-online/",
      "bio": "Learn WordPress so interestingly that you don't realize you are learning - Learning the WordPress abcs",
      "objectives": [
        "Learn WordPress from Scratch with Modern Drop Servicing Business Model",
        "Create Stunning, Fully Customizable Websites with proper SEO (Search Engine Optimization)",
        "Use WordPress Themes, Plugins, Widgets, Menus, Elementor and many other features Like a Pro",
        "Set Up & Manage Your Website Security, Backups, Indexing to search engines, Best Web Hosting etc",
        "Build a Full Website in Minutes with WordPress - No need of learning Coding"
      ],
      "course_content": {
        "Learning WordPress - Easier and More Flexible Than Wix": [
          "WordPress Introduction",
          "Understand WordPress",
          "Taking Shared Web Hosting from Bluehost starting at 1.99",
          "Web Hosting for my students only",
          "WordPress Important Initial settings",
          "Creating Free Professional Business Email",
          "Learn All About WordPress Themes",
          "Learn all about wordpress Plugins",
          "Learn all about wordpress Widgets",
          "Learn all about WordPress Pages",
          "Learn all about Posts In WordPress",
          "Learn all about Categories and Tags In WordPress",
          "Learn to Create Menus in WordPress",
          "Security of WordPress website",
          "Backing Up your wordpress Website",
          "Indexing WordPress Website to Google Search Console",
          "WordPress Installation on Local Computer for Practicing purposes"
        ],
        "Forget Shopify dropshipping learn easy Dropservicing with WordPress": [
          "WordPress Drop Servicing Introduction",
          "Dropservice website that we will be creating and how will it work",
          "Taking Domain name and Web Hosting",
          "Free Domanin Free SSL Free Business Email and best webhosting",
          "Creating Professional Business Email for your website",
          "General Introduction to Dashboard",
          "Right Niche Selection for your Drop Servicing WordPress website",
          "Sourcing and dealing with Freelancers",
          "Basic settings of Dashboard for drop servicing site",
          "Installing Theme for our drop servicing site",
          "Installing plugins for drop servicing site",
          "Installing woo-commerce on drop service site",
          "WordPress General Woo-commerce settings for dropservice site",
          "Enabling and configuring taxation on drop service site",
          "Configuring PayPal Payment method in woocommerce wordpress",
          "Updated PayPal Payment Gateway",
          "Resources for PayPal Gateway configuration",
          "Setting up Debit/Credit Card Payment Gateway on woo-commerce",
          "Update in Debit/Credit Card Payment Lecture",
          "Other Payment Gateways",
          "Creating Package on Drop Service site-High profit margin compare to dropshipping",
          "Creating the landing page of your website",
          "Designing the first section of our site landing page",
          "Creating the sample work images gallery on our landing page",
          "Creating the Call To Action Button on our website",
          "Designing the Call To Action Button on our site",
          "Customizing the first section of our site for Phones & Tablets Devices",
          "Creating heading & description in the 2nd section of our landing page",
          "Creating Column in the 2nd section or our site landing page",
          "Designing the 1st column of our site landing page",
          "Creating 2nd & 3rd column in the site landing page",
          "Customizing 2nd section of our site landing page for Phones and Tablets",
          "Creating 3rd section in landing page of site",
          "Creating the steps in 3rd section of landing page of site",
          "Creating CTA and customzing the 3rd section of the site for devices",
          "Creating the Pricing Section on the landing page of our website",
          "Designing the Pricing section on the landing page of our site",
          "Creating the Buy Now Button on our site - A Must-Learn for wix Users",
          "Customizing Pricing Section of our site landing page for Devices",
          "Linking CTA Button on our site landing page to the Pricing Section",
          "Creating Description for sample images on our site landing page",
          "Creating Menu on our Drop Servicing site",
          "Styling & Designing the Menu for our Drop Service site.",
          "Creating the Contact Us Page on our site",
          "Customizing our Drop Servicing site",
          "Creating Coupon Codes on Woo-commerce site",
          "Creating the Questionnaire Page for Drop Service site",
          "Code for Questionnaire page",
          "Placing a Live Order to Test full procedure of our drop service site",
          "Creating the Affiliate Program system on our site - what wix does not provide",
          "Creating the affiliate Menu In our Drop servicing site",
          "FAQ Page Template",
          "WordPress - Configuring the Affiliate system on our site",
          "Configuring the affiliate system User Interface",
          "Customizing the Affiliate messages notification",
          "Affiliate Payment settings on our drop service site",
          "Live affiliate signup and sale track test on our drop service website",
          "Final words very important for dropservicing",
          "Bonus"
        ],
        "WordPress SEO \"Search Engine Optimization\" - Beyond Shopify Dropshipping": [
          "WordPress SEO \"Search Engine Optimization\" Introduction",
          "Installing SEO plugin - Going Beyond Shopify Dropshipping",
          "Basic settings of SEO Plugin",
          "Learn more about Yoast seo plugin",
          "Submitting site in Google Webmaster tool",
          "Introduction to Keywords In search engine optimization SEO",
          "Finding the best keywords for SEO with Google tool",
          "Learn about Keyword Density in SEO",
          "Learn about Keyword Proximity",
          "Learn about keyword prominence and keyword stuffing",
          "SEO Optimized titles and descriptions",
          "SEO Optimized URLs and Images",
          "SEO Optimized Content",
          "Changing Font Size for better seo",
          "Learn concept of No Follow Links in SEO",
          "Learn Concept of Backlinks very important in SEO",
          "Learn how to create a Backlink",
          "Easy and powerful tool for creating backlinks in SEO",
          "Technique for defeating competitors with backlinks in SEO",
          "Creating and submitting sitemaps to Google Webmaster tool in SEO",
          "quickly indexing products pages or post in google search enginge with webmaster",
          "Removing a webpage from Google Index"
        ]
      },
      "requirements": [
        "No skills are experience required, you will learn everything in this WordPress course"
      ],
      "description": "Master WordPress from Scratch — Your Complete Beginner to Advanced Guide\nUnlock the power of WordPress and take full control of your online presence with this all-in-one course designed for beginners and aspiring professionals. Whether you want to build your own website, create a blog, start a business, or offer freelance services, this WordPress course is the perfect starting point — and it will take you all the way to advanced levels.\nIn today’s digital world, learning WordPress is one of the smartest skills you can gain. It powers over 40% of all websites worldwide, making it the most popular content management system (CMS) on the planet. In this course, we go from WordPress ABCs to complex, professional-level implementations — making sure no essential skill is left behind.\nWhat You'll Learn:\nWhat is WordPress and why it's so powerful\nHow to install and configure WordPress on any hosting platform\nUnderstanding the WordPress dashboard, settings, and key components\nCreating pages, posts, and menus the right way\nDesigning beautiful, responsive websites using WordPress themes\nInstalling and using essential WordPress plugins\nWorking with page builders like Elementor for drag-and-drop design\nCustomizing your website with widgets, headers, and footers\nSecuring your WordPress site from hackers and malware\nSEO best practices specifically for WordPress\nSpeed optimization for better performance\nBackup and restore techniques for WordPress websites\nE-commerce basics with WordPress and WooCommerce\nReal-world projects: build a business website, blog, and portfolio\nWho This Course is For:\nTotal beginners who want to understand WordPress step by step\nEntrepreneurs and business owners who want to create their own website\nFreelancers and digital marketers looking to offer WordPress services\nBloggers and content creators who want more control over their sites\nStudents and learners preparing for a career in web development\nWhy Learn WordPress?\nLearning WordPress opens doors. It allows you to:\nBuild professional websites without coding\nSave thousands of dollars on developer costs\nLaunch your online business or personal brand\nFreelance and earn income building WordPress websites for clients\nImprove your career as a marketer, developer, or virtual assistant\nUnlike many platforms, WordPress gives you freedom and flexibility — it’s open-source, widely supported, and extremely customizable.\nWhy This Course?\nThis isn’t just another course that teaches you how to click buttons. You’ll understand the “why” behind every action in WordPress, empowering you to solve real-world problems confidently. You’ll learn through demonstrations, practice projects, and instructor support — all explained in a way that’s easy to follow and never overwhelming.\nThis is WordPress in a nutshell, but it’s also WordPress in depth.\nNo Experience Needed!\nYou don’t need any prior experience with websites or coding. This course was made for complete beginners. If you can use a computer, you can master WordPress through this course.\nYou’ll go from:\nZero to knowing exactly how WordPress works\nConfused about themes to confidently choosing and customizing them\nUncertain about plugins to using the best tools for speed, SEO, and security\nWhat Will You Be Able to Do by the End?\nLaunch a complete WordPress website for yourself or a client\nOffer WordPress development as a freelance service\nStart a blog or content website and monetize it\nBuild a portfolio, landing page, or business website\nSecure and optimize your WordPress site for long-term success\nBonuses Inside:\nFree resources for choosing themes and plugins\nOngoing tips for SEO, performance, and marketing your WordPress site\nExclusive community access for feedback and questions\nEnroll Now\nThis is your opportunity to learn WordPress in the easiest, most complete way possible — and turn your skills into something real. Whether your goal is to create a personal blog, start a business website, or enter the world of freelancing, WordPress is the key. And this course will hand it to you.\nStart now — and let WordPress unlock your digital future.",
      "target_audience": [
        "WordPress Learners",
        "Web Developers, Website Designers, Bloggers, Ecommerce with Wordpress",
        "SEO Enthusiasts – Search Engine Optimization SEO Learners",
        "WordPress"
      ]
    },
    {
      "title": "Rest Api's in Asp.Net Core and C# 2024 Edition",
      "url": "https://www.udemy.com/course/rest-apis-in-aspnet-core/",
      "bio": "Build REST Api's with Asp.Net Core , Entity Framework Core and C#",
      "objectives": [
        "At the end of this you'll be able to create REST Api's In Dot Net Core and Easily apply those core concepts of Restful Api's in some other Programming Language",
        "You'll be able to Create Restful api's with Entity Framework Core via Code First Approach",
        "You can make Asynchronous Calls in Rest Api's",
        "You'll be able to learn the Rest Api's File Uploading with Azure Blob Storage",
        "You can learn the Content Negotiation , HTTP Status Codes & Error Handling",
        "You can learn all the core concepts of Web Api's like Paging , Searching , Validations etc",
        "You'll be able to learn all the Advanced Concepts of Web Api's like Api Documentation, Deployment , Migrations & Data Seeding",
        "You'll learn how to make a complete Real World Api's from scratch",
        "You'll be able to Deploy your Rest Api to Microsoft Azure Cloud",
        "You'll learn how to add the Custom Domain and Implement SSL Certificate",
        "You'll learn how to integrate the PostgreSQL inside the .Net Core Rest Api's",
        "You'll also learn how to deploy your Rest Api's to IIS"
      ],
      "course_content": {},
      "requirements": [
        "The student's must have a laptop / PC and familiar with the Asp Dot Net and Entity Framework.",
        "The student must have a knowledge of C# programming language.",
        "Microsoft Azure Account for deploying Rest Api's to Azure."
      ],
      "description": "Are you tired of boring the outdated and incomplete courses , then let's dive in to the world of Rest Api's. I'm Asfend Microsoft Most Valuable Professional (MVP) and in this course I'll explain what basically the Rest Api is and how you can create the Rest Api's in ASP.NET Core and C#.\nThe main focus of this course is on the Restful Web Api via ASP.NET Core and C#. So if you're familiar with C# , ASP.NET Core and Entity Framework Core Or if you want to create the Restful Api's with .Net Core then this is the right course for you.\nIn this course we'll start our work from the scratch so if you've no prior knowledge of Rest Api's then don't worry we'll cover everything from absolute beginning. The only thing you need to know is C# programming language.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nHow to Setup the Development Environment For Building Rest Api's\nCreate Restful Api's via Entity Framework Code First Approach\nCreate Api Documentation\nImplement Status Codes\nHow to add the Routing & Custom Methods\nAdding Migrations in Rest Api's\nData Seeding in Rest Api's\nAdding Content Negotiation\nImplement Validation in Rest Api's\nImplement Pagination in Rest Api's\nRest Api's File Uploading with Azure Blob Storage\nCreate SQL Database on Microsoft Azure\nDeploy Web Api on Microsoft Azure\nCreate A Real World Music Api From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Api's in .Net Core happily)\nA valuable Skill at Your Fingertips  Learning the Rest Api 's put a powerful and attractive look in your Resume .Both C# and ASP.NET are open source, easy to learn and has an excellent Microsoft support.\nJobs in Rest Api's are plentiful, and being able to learn the Web Api 's with a professional way will give you a strong background to more easily pick up other challenging platforms and create the Rest Api's for other platforms.\nContent and Overview  Suitable for C# programmers, Asp.Net Developers , Software engineers or Backend Developers. Through this course , you’ll create a  Restful Api's and establish a strong understanding of the concept behind Restful Api's.\nWhat am I going to get from this course?\nLearn Rest Api's from a Microsoft (MVP), Xamarin MVP from your own desk.\nCreate Restful Api in ASP.NET Core 5.0 with me.\nSuitable for intermediate & advanced programmers, C# Asp.Net developers and ideal for users who learn faster when shown.\nVisual training method, with Hands on Lab Practice  and coding.\nBreaks even the most complex scenarios down into simplistic steps.\nAlso you'll be able to learn all the Advanced concepts of Rest Api's like Validations, Paging , Api Documentation , Deployment , Blob Storage etc.\nAfter this course you can also apply those Rest Api's concepts in some other programming language.",
      "target_audience": [
        "Everyone who has some basic knowledge of Asp , Entity Framework and C# and willing to start career in Rest Api's and back end development .",
        "Some prior programming experience in C# and Object Oriented will also help to pick the concepts easily."
      ]
    },
    {
      "title": "HTML - Introduction to HTML Web Development",
      "url": "https://www.udemy.com/course/intro-to-html-web-development/",
      "bio": "Learn HTML and Master the Building Blocks of HTML Web Development",
      "objectives": [
        "Build HTML Pages from Start to Finish",
        "Learn What HTML Tags are and How to Use Them",
        "Learn How to Customize HTML Elements Using Attributes",
        "Build Search Engine Friendly HTML Pages (SEO)",
        "Master Common HTML Tags Used In Web Development",
        "Complete Course Exercises and Quizzes to Build Confidence"
      ],
      "course_content": {
        "Quick Introduction - HTML": [
          "Welcome to Introduction to HTML Web Development",
          "Downloadable Course Resources"
        ],
        "Getting Setup - HTML": [
          "Pick Your HTML Editor",
          "Setting Up a Folder Structure",
          "Launching NotePad (Windows Machine)",
          "MAC USERS - Launching MAC TextEdit (DOWNLOAD)",
          "HTML Web Development Resources (Download)"
        ],
        "Basics of HTML Elements": [
          "Viewing HTML Tags Page Source",
          "Breaking Down an HTML Tag",
          "Common HTML Tags",
          "Adding Tag Attributes to HTML Tags",
          "HTML Tags Resource (Download)",
          "QUIZ #1 - HTML Tags and Attributes"
        ],
        "Basics of Creating an HTML Page": [
          "Setting Up a Basic HTML Page",
          "Using the HTML TITLE Tag",
          "BONUS - HTML - Browser FAVICON",
          "Adding Text to the HTML BODY Tag",
          "Inserting HTML Comments",
          "QUIZ #2 - Creating a Basic HTML Page",
          "Exercise #1 - Creating a Basic HTML Page",
          "Exercise #2 - Share Your Progress in the QA Section (SNIPPING TOOL)"
        ],
        "Working with HTML PARAGRAPH and HEADING Tags": [
          "Adding HTML Paragraphs",
          "Creating Line Breaks with the BREAK Tag",
          "BONUS - CSS - Adding Style to a Paragraph",
          "Working with HTML HEADING Tags",
          "HEADING Tag Good Practices",
          "QUIZ #4 - HTML Paragraph and Heading Tags",
          "Exercise #3 - Using HTML Paragraph and Heading Tags"
        ],
        "Working with HTML <img> tag to Insert Images": [
          "Inserting Images with the HTML <IMG> Tag",
          "HTML IMAGE Tag ALT Attribute",
          "HTML IMAGE tag Width and Height Attributes",
          "BONUS - CSS - Image Formatting",
          "HTML Image References in another Folder",
          "QUIZ #5 - HTML <IMG> Tag",
          "Exercise #4 - Working with Images"
        ],
        "Working with HTML Ordered and Unordered Lists": [
          "Creating an Unordered HTML List",
          "HTML Unordered List Sub-bullets",
          "Creating Ordered HTML List",
          "BONUS - CSS - Formatting HTML Lists",
          "QUIZ #6 - HTML Lists",
          "Exercise #5 - Adding Lists to an HTML Page"
        ],
        "Adding HTML Links": [
          "Text Based Links with the HTML <a> Tag",
          "Turn an Image into a Link",
          "Target a New Browser Tab using the TARGET Attribute of the <a> tag",
          "Creating Email Links",
          "Creating Phone Number Links",
          "HTML Anchor Links using the ID Attribute (Bookmarks)",
          "BONUS - CSS - Formatting HTML Links",
          "BONUS - HTML Colors (Download)",
          "BONUS - JavaScript - Execute JavaScript on Link Click",
          "QUIZ #7 - HTML Links"
        ],
        "Creating HTML Tables": [
          "Basics of HTML Tables",
          "HTML Table Examples",
          "Creating a Basic HTML Table",
          "BONUS - CSS- Adding Borders to HTML Tables",
          "HTML Table with Multiple Columns and Rows",
          "HTML Table Headers",
          "HTML Table -- TD Attribute - Colspan",
          "BONUS - CSS - Additional Table Formatting",
          "Quiz #8 - HTML Tables",
          "Exercise #7 - Creating HTML Tables"
        ],
        "Creating and Working with HTML Forms": [
          "Introduction to HTML Forms",
          "Introduction to the HTML FORM tag",
          "Creating HTML Input Text Controls",
          "Creating HTML Form Labels",
          "Exercise #8 - Adding Text Controls to the HTML Form",
          "Working with HTML TEXTAREA tags",
          "Creating HTML Input Radio Controls",
          "Input Radio Attributes",
          "Adding an HTML Form Button to Submit Form Data",
          "Adding a Horizontal Rule with the HR tag",
          "Using HTML Form EMAIL Input Type",
          "HTML Input Tag Types",
          "Quiz #9 - HTML Forms"
        ]
      },
      "requirements": [
        "No Prior HTML Knowledge Needed",
        "Access to a Computer (Windows, MAC)",
        "No Need to Buy Additional Software to Learn HTML"
      ],
      "description": "Your Journey Starts Now\nYou've made an excellent choice. The road to web development, among other disciplines, begins with HTML. HTML, or Hyper Text Markup Language, is a building block to developing effective web pages. Before the additional layers of web development are implemented (CSS, JavaScript, etc.) HTML informs the web browser of the structure of the page and content to display to the visitors of the page.\nWhy HTML\nWithout HTML, the web browsers such as Chrome, IE, FireFox and Safari, wouldn't know what to do and how to present your content to the viewer. Search Engines, like Google, rely on HTML to index a page in their search results. By using HTML properly you will not only inform the search engines of the importance of your content but you also inform the browser and the viewers of your page.\nGet the Most from this Course\nAs you participate in this introductory HTML Web Development course you will master the HTML building blocks needed to create webpages. You will be introduced to some of the most important concepts of working with HTML, such as;\nHTML Tags\nHTML Tag Attributes\nNesting HTML Tags\nThe Importance of HTML Header Tags\nCreating and Using HTML List Tags\nWorking with Images\nAdd HTML links to a Page\nBuilding HTML Tables to Organize Data\nTake Advantage of Semantic HTML Tags Improving Page Layout\nand more....\nThis course is broken into multiple sections. Each section focuses on an HTML building block. And, each subsequent section builds upon the previous topic. In each section you will find step by step video lectures, section exercises where you can practice the concepts you'll be learning and quizzes to help you build your knowledge and confidence while working with HTML\nEnroll Now\nJoin me in this course and start your journey mastering HTML Web Development. As you go through the course, feel free to reach out with any questions you may have through the QA section found within.\nSee you in the course!",
      "target_audience": [
        "Anyone that wants to learn HTML Web Development",
        "Anyone that wants to learn the how to create and/or edit websites",
        "Anyone looking to build a solid foundation with HTML Web Development"
      ]
    },
    {
      "title": "Full Stack: React and Java Spring Boot - The Developer Guide",
      "url": "https://www.udemy.com/course/full-stack-react-and-java-spring-boot-the-developer-guide/",
      "bio": "Build a Full Stack App - React and Java Spring Boot, Stripe Credit Card Payments, Spring Security, JWT, Spring Data JPA",
      "objectives": [
        "Develop a Full Stack web application with React front-end and Spring Boot back-end",
        "Learn how to build React front-end applications .... all from the beginning. We assume no prior knowledge of React.",
        "Develop a Spring Boot back-end using REST APIs and MySQL database",
        "Develop a professional web application with React frontend and Spring Boot backend integration",
        "Apply security with JWT, OAuth2, OIDC and HTTPS/SSL/TLS",
        "Process credit card payments with the Stripe API for eCommerce",
        "Develop your code using modern development tools such as IntelliJ, VS Code, Maven and npm",
        "I am a RESPONSIVE INSTRUCTOR ... post your questions and I will RESPOND in 24 hours.",
        "Join an ACTIVE COMMUNITY of 16,000+ students that are already enrolled in this course! Over 1,800+ Reviews!",
        "You can DOWNLOAD all source code and PDFs. Perfect for offline LEARNING and REVIEW."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How To Take This Course and How To Get Help",
          "Download the Source Code and PDF Files"
        ],
        "React Overview": [
          "React Overview"
        ],
        "Set Up Development Tools": [
          "Set Up Development Tools"
        ],
        "React Crash Course - Fundamentals and Project": [
          "Getting Started with React",
          "Exploring the React Project",
          "Creating a New React Project",
          "Behind the Scenes of An React Project - Overview",
          "Behind the Scenes of An React Project - Demo",
          "Creating React Project Template",
          "Adding CSS to React Project Overview",
          "Add CSS to our React Project",
          "Creating a New React Component",
          "Writing React Component Reusability",
          "Passing Data To React Components Dynamically",
          "Create a Second React Component",
          "Rendering React Lists Dynamically",
          "React onClick Listeners",
          "Handling Data using React State",
          "Creating React Form Inputs",
          "Adding User Input to React Form",
          "Passing React Functions through props",
          "Understanding React Keys",
          "Delete Item using React Functionality",
          "React Conditional Rendering"
        ],
        "TypeScript Crash Course - Fundamentals": [
          "TypeScript Overview",
          "Creating our first TypeScript application",
          "Defining Variables - Overview",
          "Defining Variables - Write Some Code",
          "Creating Loops and Arrays - Overview",
          "Creating Loops and Arrays - Write Some Code - Part 1",
          "Creating Loops and Arrays - Write Some Code - Part 2"
        ],
        "TypeScript Crash Course - Creating Classes": [
          "Creating Classes - Overview",
          "Creating Classes - Write Some Code",
          "Defining Accessors - Overview",
          "Defining Accessors - Write Some Code",
          "Configuring Compiler Options with tsconfig.json",
          "Parameter Properties",
          "TypeScript Modules: Import and Export"
        ],
        "TypeScript Crash Course - Inheritance and Interfaces": [
          "Inheritance - Overview",
          "Inheritance - Creating the Superclass and Subclass",
          "Inheritance - Pulling it all together in a Main App",
          "Inheritance - Developing a second Subclass",
          "Inheritance - Adding Shapes to an Array",
          "Abstract Classes - Overview",
          "Abstract Classes - Write Some Code",
          "Interfaces - Overview",
          "Interfaces - Write Some Code"
        ],
        "React and TypeScript Integration": [
          "React and TypeScript Overview",
          "React and TypeScript - Part 1",
          "React and TypeScript - Part 2",
          "React and TypeScript - Part 3",
          "React and TypeScript - Part 4"
        ],
        "Bootstrap CSS Overview [Optional]": [
          "Bootstrap Overview",
          "Setup CSS Tutorial Environment",
          "Bootstrap Containers",
          "Bootstrap Buttons",
          "Bootstrap Dropdowns",
          "Bootstrap Cards",
          "Bootstrap Alerts",
          "Bootstrap Spinners",
          "Bootstrap Progress Bar",
          "Bootstrap Collapse",
          "Bootstrap Accordions",
          "Bootstrap Navigation Bar",
          "Bootstrap Rows and Columns",
          "Bootstrap Rows and Columns Nested",
          "Bootstrap Tables",
          "Bootstrap Forms",
          "Bootstrap Modals",
          "Bootstrap Hide and Show Screen Size"
        ],
        "Full Stack Application Overview -- Do Not Skip": [
          "Full Stack Application Overview",
          "Do Not Skip: Resources"
        ]
      },
      "requirements": [
        "Java Developers with Spring Boot experience",
        "No experience required for React. I will teach you React from the beginning.",
        "Basic understanding of HTML/CSS"
      ],
      "description": "Learn how to build a Full Stack web application with React and Java Spring Boot.\nReact and Spring Boot are two of the hottest technologies for developing Full Stack applications.\nKnowing how to build Full Stack applications with React and Java Spring Boot can get you a job or improve the one you have. These are hot skills and companies are desperately looking for developers. Some of the highest paying job posting are for Full Stack developers with React and Spring Boot experience.\nThis course will help you quickly get up to speed with React and Java Spring Boot. I will demystify the technology and help you understand the essential concepts to build a Full Stack application with React and Java Spring Boot.\nYou will also use modern development tools such as IntelliJ, Visual Studio Code, Maven and npm. All of the projects are based on Maven and npm, so you are free to use any tool that you want.\nDuring the course you will build a full stack web application. You will develop all of the code step by step, so you feel confident developing your own web applications after completing this course!\nThe course also shows you how to add security to your application. We will use JWT, OAuth2, and OpenID Connect. You will add login/logout features, protect access to sensitive data while handling user roles.\n---\nIn this course, you will get:\n- All source code is available for download\n- Responsive Instructors: All questions answered within 24 hours\n- PDFs of all lectures are available for download\n- Professional video and audio recordings (check the free previews)\n---\n\n\nCompared to other Full Stack courses\nThis course is up to date and covers the latest versions of React and Spring Boot.\nBeware of other Udemy Full Stack courses. Most of them are outdated and use old versions of React and Spring Boot. Don’t waste your time or money on learning outdated technology.\nTake my course where I show you how to develop a real-time full stack application with React and Spring Boot. You can type the code along with me in the videos, which is the best way to learn.\nI am a very responsive instructor and I am available to answer your questions and help you work through any problems.\nFinally, all source code is provided with the course along with setup instructions.\n\n\nStudent Reviews Prove This Course's Worth\nThose who have reviewed my courses have pointed out that the instruction is clear and easy to follow, as well as thorough and highly informative.\nMany students had also taken other Full Stack courses in the past, only to find that my courses were their favorite. They enjoyed the structure of the content and the high quality audio/video.\n\n\nThis is the best tutorial I've seen so far for Spring/Hibernate, each step is well explained and the tutorial videos are made to a high standard. I highly recommend this course! - Rob\n\n\nHats off to you Chad, the best Spring fundamentals course I have done on Udemy thus far. You never disappoint. - Morebodi\n\n\nBy far the greatest asset this course has is how responsive Eric is to questions. This is how CBT training should be, and it was well worth the money and time. I was able to complete everything in the course and I now have an app! - Gabriel\n\n\nOMG This course is amazing!!! So many awesome things to say. Apart from the course itself, I was also blown away at how quickly Eric responded to questions/issues and how promptly he was able to troubleshoot my code : ) - Paige\n\n\nQuality Material\nYou will receive a quality course, with solid technical material and excellent audio and video production. I am a best-selling instructor on Udemy. Here's a list of my top courses.\nSpring and Hibernate for Beginners\nSpring Boot Unit Testing with JUnit, Mockito and MockMvc\nFull Stack: Angular and Java Spring Boot\nDeploy Java Spring Apps Online to Amazon Cloud (AWS)\nJavaServer Faces (JSF) for Beginners\nThese courses have received rave 5 star reviews and over 560,000 students have taken the courses. Also, these courses are the most popular courses in their respective categories.\nI also have an active YouTube channel where I post regular videos. In the past year, I’ve created over 800 video tutorials (public and private). My YouTube channel has over 6 million views and 38k subscribers. So I understand what works and what doesn’t work for creating video tutorials.\n\n\nNo Risk – Udemy Refund\nFinally, there is no risk. You can preview 25% of the course for free. Once you purchase the course, if for some reason you are not happy with the course, Udemy offers a 30-day refund (based on Udemy's Refund Policy).\nSo you have nothing to lose, sign up for this course and learn how to build Full Stack web application with React and Java Spring Boot from scratch!\nIt is time to level up your career and become a Full Stack developer with React and Java Spring Boot.\n\n\nTarget Audience\nJava Developers with Spring Boot experience\nNo experience required for React. I will teach you React from the beginning.",
      "target_audience": [
        "The course is appropriate for all Spring Boot developers."
      ]
    },
    {
      "title": "Test-Driven Development with Angular [2025 updated]",
      "url": "https://www.udemy.com/course/test-driven-development-with-angular/",
      "bio": "Learn the basic and advanced test-driven development techniques by building an Angular application.",
      "objectives": [
        "Basics of test-driven development with Angular",
        "Angular unit testing tips and tricks",
        "Mocking services in angular unit testing"
      ],
      "course_content": {
        "Getting started": [
          "Course Introduction",
          "Generate the app and components"
        ],
        "Application header": [
          "Building application header"
        ],
        "Home list": [
          "Home List Section introduction",
          "Adding home list",
          "Adding home info",
          "Adding and mocking the service",
          "Hooking up the service to the API",
          "Styling home list",
          "Section recap"
        ],
        "Home booking": [
          "Home Booking Section Introduction",
          "How to follow along",
          "Adding \"Book\" button in the home list",
          "Scaffolding a dialog using Material Design",
          "Creating and passing the first test",
          "Implementing price and check in/out dates",
          "Calculating total price",
          "Submitting booking request",
          "Closing dialog and showing notification",
          "Adding date pickers and styling",
          "Fixing the bug with invalid dates",
          "Section recap"
        ]
      },
      "requirements": [
        "Beginner Angular knowledge",
        "Beginner Angular unit test knowledge"
      ],
      "description": "This course is designed to teach you the fundamentals of test-driven development (TDD) while guiding you through the creation of a basic Angular web application. By the end of this course, you will not only have a solid understanding of TDD principles but also the confidence to apply them in demanding, test-heavy environments, such as corporate web application development.\n\n\nThe course is structured around hands-on development of an application with several simple features. For each feature, you will follow the core TDD cycle: write a test that initially fails, add the code necessary to make the test pass, and then refactor the code to ensure it meets established standards. This iterative process will solidify your understanding of TDD and equip you with practical experience in building complete features from scratch.\n\n\nThis course is particularly beneficial for developers who are keen to adopt TDD and leverage its advantages in streamlining the development process and improving code quality, but often find themselves struggling with the initial step of writing the first failing test. By enrolling in this course, you will overcome this hurdle and be able to write your first test within minutes.\n\n\nDon't miss out on this opportunity to master TDD and revolutionize your approach to software development. Sign up today and start your journey towards becoming a more efficient and confident developer.",
      "target_audience": [
        "Angular developers who want to try test-driven development but don't know how"
      ]
    },
    {
      "title": "Web Development - Complete Fast Track Course",
      "url": "https://www.udemy.com/course/web-development-fast-track/",
      "bio": "Become a full-stack web developer in a month. Master HTML, CSS, Javascript, JQuery, PHP, MySQL and more!",
      "objectives": [
        "Design websites from scratch!",
        "Master six fundamental web development languages!",
        "Work as a full-stack web developer!",
        "Use CSS, images, fundamental design concepts and UX psychology to create professional quality websites.",
        "Build your portfolio of websites!",
        "And lots more..."
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "How the web and websites work"
        ],
        "Full Stack development overview": [
          "Simple full stack website walkthrough",
          "Client side basics",
          "Setting up your computer",
          "The concept of HTTP requests",
          "Server side basics"
        ],
        "HTML in Detail": [
          "Basic elements",
          "Attributes",
          "Inline CSS and Comments",
          "Formatting",
          "Images",
          "Tables",
          "Lists",
          "Links",
          "Block and Inline elements",
          "iFrames",
          "Entities and symbols",
          "Form elements",
          "Input types"
        ],
        "CSS in Detail": [
          "CSS syntax",
          "Colors",
          "Backgrounds",
          "The Box Model",
          "Padding",
          "Text Formatting",
          "Fonts",
          "Display",
          "Position relative and absolute",
          "Position fixed",
          "Position sticky",
          "Overflow",
          "Float basic",
          "Float layout",
          "Centering",
          "Selectors and pseudo-classes",
          "Pseudo-elements",
          "Dropdowns",
          "Styling buttons",
          "Media Queries",
          "Flexbox",
          "Flexbox image grid"
        ],
        "Javascript in detail": [
          "What javascript can do",
          "Intro to computing side of javascript",
          "JS objects",
          "JS strings",
          "JS arrays",
          "JS booleans and conditions",
          "JS for and while loops",
          "JQuery trasversing",
          "JQuery events",
          "JQuery effects",
          "JQuery DOM",
          "JQuery AJAX intro",
          "JQuery AJAX image preview"
        ],
        "PHP in detail": [
          "PHP intro",
          "PHP data types",
          "PHP strings and RegExp",
          "PHP operators",
          "PHP if else switch",
          "PHP while for foreach",
          "PHP functions",
          "PHP arrays",
          "PHP arrays advanced",
          "PHP superglobals",
          "PHP forms",
          "PHP date and time",
          "PHP file upload",
          "PHP cookies",
          "PHP sessions",
          "PHP mysqli",
          "PHP login profile part 1",
          "PHP login profile part 2"
        ]
      },
      "requirements": [
        "A computer with internet access.",
        "The desire to learn!"
      ],
      "description": "Hello! Do you want to create websites? Do you have a great idea for an application that could help thousands of people but don't yet know how to turn it into a real thing? Do you want to get employed as a full-stack web developer at a top tech company?\nIf yes then you're in the right place and I am excited to be sharing this wonderful world with you!\nSo welcome to the last course you'll ever need to master web development, specifically aimed at creative people who are looking to translate their skills into useful practical applications.\nGiven the number of resources to learn web development online I have always been disappointed by the lack of a complete and comprehensive guide to web development for bright learners like yourself to get started with.\nWith this course I want to offer a curricular balance which I truly would have loved to have when I was learning.\nI will do this by teaching you both:\nThe full foundation of web development, understanding how websites and the web work and getting to know the elements that go into making a full stack application.\nThe ins and outs of all the foundation technologies of web development: HTML, CSS, Javascript, JQuery, PHP, MySQL. Going in-depth and giving you great amount of detail to assure complete mastery of each by the end.\nYou see, other courses I have seen are either:\nToo complex and full of details of one-off scenarios without having established a solid understanding of the basics.\nToo simple and not providing sufficient information to get you started building websites.\nUnder my instruction, by the end of this course you will be a fully fledged web developer who will be both:\nApt with the process of creating a full stack website from start to finish.\nMaking the content\nStyling\nMaking it interactive\nMaking it dynamic\nEquipped with extensive knowledge about each specific technology, allowing you to build complex sites from scratch.\nBasically, just by taking this fast track course you will immediately be able to:\nMake your own sites from scratch.\nBecome a tech entrepreneur by making your own apps.\nHave a position to impact the internet.\nGet employed as a professional web developer (salary ranging from $50000 pa for a junior developer to more than $120000 for senior dev).\nWork as a freelance web developer (typical rate ranging from $30 per hour for a beginner to upwards of $150 per hour for a more experienced developer ).\nCall yourself a professional web developer!\nSo enroll now and let's start making things happen!",
      "target_audience": [
        "Creative people looking to gain knowledge on how to build professional websites.",
        "The course will start from the very basics so people can start out at any level."
      ]
    },
    {
      "title": "LangChain Crash Course: Build OpenAI LLM powered Apps",
      "url": "https://www.udemy.com/course/langchainllm/",
      "bio": "Fast track to building OpenAI LLM powered Apps using Python",
      "objectives": [
        "Learn key LangChain features like connecting to OpenAI LLMs, Prompt Templates, Chains, Document Loaders, Agents, Memory",
        "Learn how to build a Medium Article Generator and a Question & Answer Document Chatbot",
        "Build practical hands-on project without all the fluff",
        "Learn LangChain even if you are a beginner in a weekend"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming experience will be useful"
      ],
      "description": "In this short course, we take you on a fun, hands-on and pragmatic journey to learn how to build LLM powered apps using LangChain. You'll start building your first Generative AI app within minutes. Every section is recorded in a bite-sized manner and straight to the point as I don’t want to waste your time (and most certainly mine) on the content you don't need.\nIn this course, we will cover:\nWhat is LangChain\nHow does LangChain Work\nInstallation, Setup and Our First LangChain App\nBuilding a Medium Article Generator App\nConnecting to OpenAI LLM\nPrompt Templates\nSimple Chains\nSequential Chains\nAgents\nChat with a Document\nAdding Memory (Chat History)\nOutputting the Chat History\nUploading Custom Documents\nLoading Different Document Types (eg PDF, txt, docs)\nChat with Youtube and more...\nThe goal of this course is to teach you LangChain development in a manageable way without overwhelming you. We focus only on the essentials and cover the material in a hands-on practice manner for you to code along.\n\nWorking Through This Course\nThis course is purposely broken down into short sections where the development process of each section will center on different essential topics. The course a practical hands on approach to learning through practice. You learn best when you code along with the examples.",
      "target_audience": [
        "Developers who want to learn how to use LangChain and LLMs to create generative AI applications."
      ]
    },
    {
      "title": "Learn Bootstrap - For Beginners",
      "url": "https://www.udemy.com/course/learn-bootstrap-for-beginners/",
      "bio": "Learn to create mobile-responsive web pages using Bootstrap",
      "objectives": [
        "Bootstrap Page Structure",
        "Bootstrap Grid System",
        "Bootstrap Layouts",
        "Bootstrap Typography",
        "Styling Images",
        "Bootstrap Tables, Buttons, Badges, & Progress Bars",
        "Bootstrap Pagination",
        "Bootstrap Panels",
        "Bootstrap Menus & Navigation Bars",
        "Bootstrap Carousel & Modals",
        "Bootstrap Scrollspy",
        "Bootstrap Themes"
      ],
      "course_content": {
        "The Bootstrap Framework": [
          "Introduction to Bootstrap",
          "Embedding Bootstrap",
          "Bootstrap Basic Page Structure",
          "Bootstrap Grid System",
          "Bootstrap Three Column Layouts",
          "Bootstrap Typography",
          "Bootstrap Tables",
          "Bootstrap Styling Images",
          "Bootstrap Jumbotron",
          "Bootstrap Wells",
          "Bootstrap Alerts",
          "Bootstrap Buttons",
          "Bootstrap Button Groups",
          "Bootstrap Justified Button Groups",
          "Bootstrap Glyphicons",
          "Bootstrap Badges and Labels",
          "Bootstrap Progress Bars",
          "Bootstrap Pagination",
          "Bootstrap Pager Pagination",
          "Bootstrap List Groups",
          "Bootstrap Panels",
          "Bootstrap Dropdown Menus",
          "Bootstrap Collapsibles",
          "Bootstrap Collapse Panel",
          "Bootstrap Collapse List Group",
          "Bootstrap Accordian",
          "Bootstrap Tab Menus",
          "Bootstrap Pill Menus",
          "Bootstrap Dynamic Tabs and Pills",
          "Bootstrap Navigation Bar",
          "Bootstrap Collapsible Navigation Bar",
          "Bootstrap Forms - Vertical and Inline",
          "Bootstrap Inputs",
          "Bootstrap Form Control States",
          "Bootstrap Input Sizing",
          "Bootstrap Carousel",
          "Bootstrap Modal",
          "Bootstrap Tooltip",
          "Bootstrap Popover",
          "Bootstrap Scrollspy",
          "Bootstrap Project - Themes Intro",
          "Bootstrap Project - File Overview",
          "Bootstrap Project - Script Overview",
          "Bootstrap Project - Script Overview Cont."
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Course: Learn Bootstrap - For Beginners\nLearn to create mobile-responsive web pages using Bootstrap\nStudents learn to create the front-end component of mobile-responsive web applications, using the Bootstrap framework.\nThe techniques explored in this course will ensure your web applications adhere to strict development standards to avoid cross-browser and cross-device compatibility issues.\nThe course starts with the fundamental concepts, including embedding Bootstrap into web pages. We then explore the Bootstrap Grid system and popular mobile responsive web layouts.\nStudents will gain a solid understanding of almost every Bootstrap component available, from typography, carousels, panels, drop-down menus, and collapsible nav-bars to forms, popovers, modals and tool tips.\nWe provide several hands-on exercises to ensure students effectively grasp course material.\nWhat you'll learn - Overview:\nBootstrap Page Structure\nBootstrap Grid System\nBootstrap Layouts\nBootstrap Typography\nStyling Images\nBootstrap Tables, Buttons, Badges, & Progress Bars\nBootstrap Pagination\nBootstrap Panels\nBootstrap Menus & Navigation Bars\nBootstrap Carousel & Modals\nBootstrap Scrollspy\nBootstrap Themes\nKey Concepts:\nIntro to Bootstrap\nEmbedding Bootstrap\nBootstrap Page Structure\nBootstrap Grid System\nBootstrap Three Column Layouts\nBootstrap Typography\nBootstrap Tables\nBootstrap Styling Images\nBootstrap Jumbotron\nBootstrap Wells\nBootstrap Alerts\nBootstrap Buttons\nBootstrap Button Groups\nBootstrap Justified Button Groups\nBootstrap Glyphicons\nBootstrap Badges and Labels\nBootstrap Progress Bars\nBootstrap Pagination\nBootstrap Pager Pagination\nBootstrap List Groups\nBootstrap Panels\nBootstrap Dropdown Menus\nBootstrap Collapsibles\nBootstrap Collapse Panel\nBootstrap Collapse List Group\nBootstrap Accordian\nBootstrap Tab Menus\nBootstrap Pill Menus\nBootstrap Dynamic Tabs and Pills\nBootstrap Navigation Bar\nBootstrap Collapsible Navigation Bar\nBootstrap Forms - Vertical and Inline\nBootstrap Inputs\nBootstrap Form Control States\nBootstrap Input Sizing\nBootstrap Carousel\nBootstrap Modal\nBootstrap Tooltip\nBootstrap Popover\nBootstrap Scrollspy\nBootstrap Project - Themes Intro\nBootstrap Project - File Overview\nBootstrap Project - Script Overview\nBootstrap Project - Script Overview Cont.",
      "target_audience": [
        "Beginner Web Developers who want to Learn Bootstrap"
      ]
    },
    {
      "title": "2025 PHP for Beginners: every line used is fully explained",
      "url": "https://www.udemy.com/course/learn-php-via-examples-and-mini-tasks/",
      "bio": "PHP for Beginners: Learn to Code in PHP. Every line of code explained in detail. A true PHP for Beginners Course 2025",
      "objectives": [
        "a true PHP for Beginners course with step-by-step lessons",
        "learn how to code using PHP from a national award-winning teacher",
        "you will be taken from absolute PHP beginner to confident coder with every step clearly explained",
        "create dozens of useful PHP scripts",
        "create a basic hit counter via sessions",
        "create a bad word filter",
        "create a 'How many days until Christmas' script",
        "create and use HTML forms and process the data using PHP",
        "create, read, update and delete sessions and cookies",
        "access to regularly updated content including lesson notes, downloadable code, HD quality video tutorials, and quizzes",
        "25 PHP coding challenges (more added regularly) with full video solutions and downloadable PHP code",
        "access real world coding challenges and examples including full video solutions and downloadable code",
        "manipulate words and sentences (strings) using string functions",
        "use mathematical operators to solve practical problems e.g. calculate the area of a circle if the user inputs the radius or diameter",
        "use loops to simplify processes",
        "use conditional statements to test properties and action processes based on the result",
        "create and use simple arrays and solve problems involving array functions",
        "use associative arrays and manipulate them using array functions",
        "use PHP internal functions and create your own",
        "use the date() function to perform calculations based on date",
        "a tutor who responds quickly to questions and who regularly updates the course",
        "30 day money back guarantee!",
        "...and much more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Lesson 1: Preparing your development environment"
        ],
        "PHP Basics": [
          "Hello, World!",
          "How to use the correct syntax in PHP",
          "What are PHP Variables?",
          "How to assign values to a variable in PHP",
          "What PHP data types are available?",
          "How to add comments to PHP code",
          "Echo and Print - how to view PHP output",
          "Variables in PHP"
        ],
        "Basic Operators": [
          "How to use concatenation",
          "How to add and subtract numbers in PHP",
          "How to multiply and divide numbers in PHP",
          "How to use the PHP modulus operator",
          "How to find a power of a number using PHP",
          "Challenge 1: Back to school - TASK",
          "Challenge 1: Back to school - SOLUTION",
          "Challenge 1: Back to school - CODE",
          "More concatenation",
          "Challenge: What's in a name",
          "Challenge Solution: What's in a name",
          "Challenge 2: What's in a name? CODE"
        ],
        "IF Statements": [
          "Logical and comparison operators",
          "How to use a basic IF statement in PHP",
          "How to use an IF ELSE statement in PHP",
          "How to use an ELSEIF statement in PHP",
          "More logical and comparison operators",
          "Progress Quiz"
        ],
        "Basic Loops": [
          "Counting: Incrementing and Decrementing",
          "How to use a FOR loop in PHP",
          "How to use WHILE loops in PHP",
          "Challenge: Multiples",
          "Challenge 3: Multiples - TASK",
          "Challenge 3: Multiples - SOLUTION",
          "Challenge 3: Multiples - CODE",
          "Challenge: Fizz Buzz",
          "Challenge 4: Let's play Fizz Buzz: TASK",
          "Challenge 4: Let's play Fizz Buzz: SOLUTION",
          "Challenge 4: Let's play Fizz Buzz: CODE",
          "Loops"
        ],
        "PHP Internal (in-built) Functions": [
          "How to use the PHP online reference manual",
          "How to generate a random number in PHP",
          "Challenge: Odds or Evens - TASK",
          "Challenge: Odds and Evens - VIDEO",
          "Challenge: Odds and Evens - SOLUTION",
          "Challenge: Odds and Evens - CODE",
          "Challenge 6: Who ate all the pi? - TASK",
          "Challenge: Who are all the pi? - VIDEO",
          "Challenge 6: Who ate all the pi? - SOLUTION",
          "Challenge 6: Who ate all the pi? - CODE",
          "How to use the date function in PHP",
          "Challenge 7: Carpe Diem - TASK",
          "Challenge: Carpe Diem - VIDEO",
          "Challenge 7: Carpe Diem - SOLUTION",
          "Challenge 7: Carpe Diem - CODE",
          "Time functions",
          "Challenge 8: Santa Claus is coming to town - TASK",
          "Challenge: Santa Claus is Coming to Town",
          "Challenge 8: Santa Claus is coming to town - SOLUTION",
          "Challenge 8: Santa Claus is coming to town - CODE"
        ],
        "How to create a form in HTML and send data to a PHP script": [
          "How to create a basic HTML page structure",
          "How to create a basic HTML form",
          "How to use form data in PHP",
          "Challenge 9: Temperature conversion - TASK",
          "Challenge: Temperature Conversion - VIDEO",
          "Challenge 9: Temperature conversion - SOLUTION",
          "Challenge 9: Temperature conversion: CODE",
          "Progress Quiz"
        ],
        "More Internal Functions: Working with strings": [
          "How to find the length of a word or sentence in PHP",
          "Challenge 10: How long is a piece of string? - TASK",
          "Challenge: How long is a piece of string - VIDEO",
          "Challenge 10: How long is a piece of string? - SOLUTION",
          "Challenge 10: How long is a piece of string? - CODE",
          "How to count the number of words in a string in PHP",
          "How to replace characters in a string",
          "How to randomise a string in PHP",
          "Challenge 11: Mission impossible - TASK",
          "Challenge: Mission Impossible - VIDEO",
          "Challenge 11: Mission Impossible - SOLUTION",
          "Challenge 11: Mission Impossible - CODE",
          "Double versus single quotes in PHP",
          "How to escape strings in PHP",
          "Challenge 12: The Great Escape - TASK",
          "Challenge: The Great Escape - VIDEO",
          "Challenge 12: The Great Escape - SOLUTION",
          "Challenge 12: The Great Escape - CODE"
        ],
        "How to create and use basic ARRAYS and array functions": [
          "What is an array in PHP?",
          "How to loop through an array in PHP",
          "How to split a string and place into an array in PHP",
          "Challenge 13: ISBN checker - TASK",
          "Challenge: ISBN Checker - VIDEO",
          "Challenge 13: ISBN checker - SOLUTION",
          "Challenge 13: ISBN checker - CODE",
          "Challenge 14: Mind your language! - TASK",
          "Challenge: Mind Your Language - VIDEO",
          "Challenge 14: Mind your language! - SOLUTION",
          "Challenge 14: Mind your language! - CODE",
          "How to sort data in an array in PHP",
          "How to explode and implode strings",
          "How to add elements to an existing array in PHP",
          "Challenge 15: Around the world in 80 days - TASK",
          "Challenge: Around the World in 80 Days - VIDEO",
          "Challenge 15: Around the world in 80 days - SOLUTION",
          "Challenge 15: Around the world in 80 days - CODE",
          "Removing elements from the beginning/end of an array",
          "How to use array_slice() to split an array in PHP",
          "Challenge 16: It's getting hot in here - TASK",
          "Challenge: It's getting hot in here - VIDEO",
          "Challenge 16: It's getting hot in here - SOLUTION",
          "Challenge 16: It's getting hot in here - CODE",
          "How to select a random element from an array",
          "Challenge 17: Pick a card, any card - TASK",
          "Challenge: Pick a card, any card - VIDEO",
          "Challenge 17: Pick a card, any card - SOLUTION",
          "Challenge 17: Pick a card, any card - CODE",
          "Challenge 18: Let's go shopping - TASK",
          "Challenge: Let's go shopping - VIDEO",
          "Challenge 18: Let's go shopping - SOLUTION",
          "Challenge 18: Let's go shopping - CODE"
        ],
        "Associative Arrays in PHP": [
          "How to understand the structure of an associative array",
          "How to loop through an associative array and output the elements",
          "Challenge 19: Capital cities of the world - TASK",
          "Challenge: Capital cities of the world - VIDEO",
          "Challenge 19: Capital cities of the world - SOLUTION",
          "Challenge 19: Capital cities of the world - CODE"
        ]
      },
      "requirements": [
        "Have access to a computer with internet connection and browser",
        "Some HTML and CSS knowledge would be beneficial but the tutor will explain everything as he goes",
        "If you wish to use the downloadable code snippets then you should know how to open a zip file.",
        "A functioning PHP development environment of your choice. E.g. Visual Studio Code with MAMP/XAMMP."
      ],
      "description": "REGULARLY UPDATED PHP FOR BEGINNERS COURSE\nFREE access to the first 4 sections of the course.  I strongly encourage you to watch the first 4 sections before you join.\nEvery line of code used is explained\nFull support with all questions answered promptly\n7 hours of video content\nStudents consistently say how much they LOVE this course due to its unique delivery method and challenges which enable you to use your new skills immediately. Join over 8000 other students who have successfully learnt to code in PHP by enrolling in this course.\n\nSTUDENT SUCCESS STORY:  From a grade D to A-\n\"Hello and thank you, Professor Patrick! I want to Thank you for all your support and help. I received an 'A-' for the course I was taking [at university]. Some people would say that was not good. But they have no idea how much I was struggling. And with your course and help my grade came up from a 'D' to the given grade [A-]. I'm still going using your course to keep my mind skilled in the information. Which I think is best so I will not forget how to perform and execute the information properly. Professor Patrick I truly cannot thank you enough!\"  Adrienne Stiger\n\n\nThis PHP for beginners course introduces you to PHP through carefully crafted examples and fully worked tasks. Learning by doing is what this course is all about. You will experience real world examples of PHP code use.\n\nHave you seen other courses that use complex terms or that jump steps and leave you thinking \"why did that just happen\"? You won't find that with this course because every line of code is explained and is very easy to follow.\nThis course has been designed with the coding beginner in mind or those who may have picked up bad habits and wish to refresh their coding skills.\nOn hand to help and guide you is a renowned national award-winning teacher who has taught 1000s of students over a career of over 25 years.\nHighlights of this course include:\nFull code from every example and mini task shared with you online\nCarefully crafted challenges and full solutions with FULL explanations of every line\nDemonstration of a shared coding environment\nDozens of real world examples with more added on a regular basis\nA tutor who cares about his students\nRegular updates and new challenges\nEvery line of code is explained in full detail to ensure that you can progress from absolute beginner to competent coder very quickly.\nI am so confident that you will enjoy the course that I have provided FREE access to the first 4 sections. If you like my style then and want to continue to learn then JOIN NOW and follow the remainder of the course.\nSTUDENT REVIEW: \" Amazing\"\nSTUDENT REVIEW: \"I’ve enrolled in many courses here on Udemy and to be honest I’ve abandoned most of them because they are like entertainment to me. I classify them as entertainment because knowledge without action is entertainment. This course is outstandingly different, since as you learn you’re challenged to act on that knowledge. I’m now a better programmer as a result of taking this course, previously I used to struggle with transferring my real world logic to computer code. I’m in no way saying that I’m an expert now but my thought process has been adjusted due to Mr. Morrow’s effective teaching method.\"\nSTUDENT REVIEW: \"This was my first intro to php (in preparation for the php section of my coding bootcamp class I'm currently enrolled in), and the instructor explained everything really well. The pace was just right (for me). I already purchased his php part 2 course, so I can't wait to get into that! Excellent course, content, and instructor!\"\nSTUDENT REVIEW: \"Enjoyed this course and learned quite a bit, having the challenges to do, made me use my brain. Excellent instruction. Thank you Patrick. Now time to move onto your next course on PHP and MySQL.\"\nSTUDENT REVIEW: \"Excellent beginner course, with practical and realistic tasks. Very efficient\"\nSTUDENT REVIEW: \"Now that I completed the course, I must say this is one of the best online courses that I participated in.The material is represented systematically, step by step and really every line of code is explained. The good practices are encouraged and as a content the really qualitative ground basic knowledge is taught. What really impressed me is that every example seems thoughtfully prepared in advance, no meaningless examples can be found, like in some other courses. The author encourages self development and the tasks are carefully prepared, to confirm the knowledge taught and to develop thinking and skills. I am really impressed!\"\n\n\nThe above are just a few of many 1000s of positive reviews.  I encourage you to follow the first 4 sections of this course FREE of charge to see if it matches your needs and preferred learning style.  If it does then join the full course and follow the remainder of the course with full support.\n\n\nTHE DEVELOPMENT ENVIRONMENT\nIMPORTANT: Please read carefully\nYou are free to use ANY development environment including the one that you are already using (if any). In this course, I show you how to download and install Visual Studio Code and MAMP (both of which are FREE and available for Mac and Windows).\nIf you are unsure about which code editor option is best for you then I encourage you to contact me and I will be happy to discuss the options with you.\nYou can also follow this course using your own preferred code editor.\nOnce again, using Visual Studio Code with MAMP is OPTIONAL. You can use ANY suitable development environment of your choosing.\n\n\nMY PROMISES TO YOU\nAs a registered teacher (yes, I teach in a real classroom every day), I strongly believe it is my job to ensure you feel totally supported when taking my classes. I therefore promise the following:\nto respect you as a student and individual with your own learning needs\nto be courteous and polite in our interactions\nto answer your questions about the course content promptly\nto fix any issues you may encounter with the lessons\nto respond promptly to feedback\nI really do look forward to welcoming you to this course. I am confident you will enjoy the approach of learning what each line of code actually means.\nJoin the course today.",
      "target_audience": [
        "No PHP coding experience is required - this is a true PHP for Beginners course",
        "Complete beginners to PHP are welcome and encouraged to enrol",
        "Anyone interested in learning PHP at a basic to intermediate level",
        "If you are looking to learn complex Object Oriented Programming (OOP) then this course is NOT for you"
      ]
    },
    {
      "title": "Working with Microservices in Go (Golang)",
      "url": "https://www.udemy.com/course/working-with-microservices-in-go/",
      "bio": "Build highly available, scalable, resilient distributed applications using Go",
      "objectives": [
        "Learn what Microservices are and when to use them",
        "How to develop loosely coupled, single purpose applications which work together as a distributed application",
        "How to communicate between services using JSON, Remote Procedure Calls, and gRPC",
        "How to push events to microservices using the Advanced Message Queuing Protocol (AMQP) using RabbitMQ",
        "How to deploy your distributed application to Docker Swarm",
        "How to deploy your your distributed application to a Kubernetes Cluster"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About me",
          "Installing Go",
          "Installing Visual Studio Code",
          "Installing Make",
          "Installing Docker",
          "Asking for help",
          "Mistakes. We all make them."
        ],
        "Building a simple front end and one Microservice": [
          "What we'll cover in this section",
          "Setting up the front end",
          "Reviewing the front end code",
          "Our first service: the Broker",
          "Building a docker image for the Broker service",
          "Adding a button and JavaScript to the front end",
          "Creating some helper functions to deal with JSON and such",
          "Simplifying things with a Makefile (Mac & Linux)",
          "Simplifying things with a Makefile (Windows)"
        ],
        "Building an Authentication Service": [
          "What we'll cover in this section",
          "Setting up a stub Authentication service",
          "Creating and connecting to Postgres from the Authentication service",
          "A note about PostgreSQL",
          "Updating our docker-compose.yml for Postgres and the Authentication service",
          "Populating the Postgres database",
          "Adding a route and handler to accept JSON",
          "Update the Broker for a standard JSON format, and conect to our Auth service",
          "Updating the front end to authenticate thorough the Broker and trying things out"
        ],
        "Building a Logger Service": [
          "What we'll cover in this section",
          "Getting started with the Logger service",
          "Setting up the Logger data models",
          "Finishing up the Logger data models",
          "Setting up routes, handlers, helpers, and a web server in our logger-service",
          "Adding MongoDB to our docker-compose.yml file",
          "Add the logger-service to docker-compose.yml and the Makefile",
          "Adding a route and handler on the Broker to communicate with the logger service",
          "Update the front end to post to the logger, via the broker",
          "Add basic logging to the Authentication service",
          "Trying things out"
        ],
        "Building a Mail Service": [
          "What we'll cover in this section",
          "Adding Mailhog to our docker-compose.yml",
          "Setting up a stub Mail microservice",
          "Building the logic to send email",
          "Building the routes, handlers, and email templates",
          "Challenge: Adding the Mail service to docker-compose.yml and the Makefile",
          "Solution to challenge",
          "Modifying the Broker service to handle mail",
          "Updating the front end to send mail",
          "A note about mail and security"
        ],
        "Building a Listener service: AMQP with RabbitMQ": [
          "What we'll cover in this section",
          "Creating a stub Listener service",
          "Adding RabbitMQ to our docker-compose.yml",
          "Connecting to RabbitMQ",
          "Writing functions to interact with RabbitMQ",
          "Adding a logEvent function to our Listener microservice",
          "Updating main.go to start the Listener function",
          "Change the RabbitMQ server URL to the Docker address",
          "Creating a Docker image and updating the Makefile",
          "Updating the broker to interact with RabbitMQ",
          "Writing logic to Emit events to RabbitMQ",
          "Adding a new function in the Broker to log items via RabbitMQ",
          "Trying things out"
        ],
        "Communicating between services using Remote Procedure Calls (RPC)": [
          "What we'll cover in this section",
          "Setting up an RPC server in the Logger microservice",
          "Listening for RPC calls in the Logger microservice",
          "Calling the Logger from the Broker using RPC",
          "Trying things out"
        ],
        "Speeding things up (potentially) with gRPC": [
          "What we'll cover in this section",
          "Installing the necessary tools for gRPC",
          "Defining a Protocol for gRPC: the .proto file",
          "Generating the gRPC code from the command line",
          "Getting started with the gRPC server",
          "Listening for gRPC connections in the Logger microservice",
          "Writing the client code",
          "Updating the front end code",
          "Trying things out"
        ],
        "Deploying our Distributed App using Docker Swarm": [
          "What we'll cover in this section",
          "Building images for our microservices",
          "Creating a Docker swarm deployment file",
          "Initializing and starting Docker Swarm",
          "Starting the front end and hitting our swarm",
          "Scaling services",
          "Updating services",
          "Stopping Docker swarm",
          "Updating the Broker service, and creating a Dockerfile for the front end",
          "Solution to the Challenge",
          "Adding the Front end to our swarm.yml deployment file",
          "Adding Caddy to the mix as a Proxy to our front end and the broker",
          "Modifying our hosts file to add a \"backend\" entry and bringing up our swarm",
          "Challenge: correcting the URL to the broker service in the front end",
          "Solution to challenge",
          "Updating Postgres to 14.2 - why monitoring is important!",
          "Spinning up two new servers on Linode",
          "Setting up a non-root account and putting a firewall in place.",
          "Installing Docker on the servers",
          "Setting the hostname for our server",
          "Adding DNS entries for our servers",
          "Adding a DNS entry for the Broker service",
          "Initializing a manager, and adding a worker",
          "Updating our swarm.yml and Caddy dockerfile for production",
          "Trying things out, and correcting some mistakes",
          "Populating the remote database using an SSH tunnel",
          "Enabling SSL certificates on the Caddy microservice"
        ],
        "Deploying our Distributed App to Kubernetes": [
          "What we'll cover in this section",
          "Installing minikube",
          "Installing kubectl",
          "Initializing a cluster",
          "Bringing up the k8s dashboard",
          "Creating a deployment file for Mongo",
          "Creating a deployment file for RabbitMQ",
          "Creating a deployment file for the Broker service",
          "When things go wrong...",
          "Creating a deployment file for MailHog",
          "Creating a deployment file for the Mail microservice",
          "Creating a deployment file for the Logger service",
          "Creating a deployment file for the Listener service",
          "Running Postgres on the host machine, so we can connect to it from k8s",
          "Creating a deployment file for the Authentication service",
          "Trying things out by adding a LoadBalancer service",
          "Creating a deployment file for the Front End microservice",
          "Adding an nginx Ingress to our cluster",
          "Trying out our Ingress",
          "Scaling services",
          "Updating services",
          "Deploying to cloud services"
        ]
      },
      "requirements": [
        "A basic understanding of the Go programming language",
        "A Macintosh, Windows, or Linux computer with a connection to the internet"
      ],
      "description": "For a long time, web applications were usually a single application that handled everything—in other words, a monolithic application. This monolith handled user authentication, logging, sending email, and everything else. While this is still a popular (and useful) approach, today, many larger scale applications tend to break things up into microservices. Today, most large organizations are focused on building web applications using this approach, and with good reason.\nMicroservices, also known as the microservice architecture, are an architectural style which structures an application as a loosely coupled collection of smaller applications. The microservice architecture allows for the rapid and reliable delivery of large, complex applications. Some of the most common features for a microservice are:\n\nit is maintainable and testable;\nit is loosely coupled with other parts of the application;\nit  can deployed by itself;\nit is organized around business capabilities;\nit is often owned by a small team.\nIn this course, we'll develop a number of small, self-contained, loosely coupled microservices that will will communicate with one another and a simple front-end application with a REST API, with RPC, over gRPC, and by sending and consuming messages using AMQP, the Advanced Message Queuing Protocol. The microservices we build will include the following functionality:\n\nA Front End service, that just displays web pages;\nAn Authentication service, with a Postgres database;\nA Logging service, with a MongoDB database;\nA Listener service, which receives messages from RabbitMQ and acts upon them;\nA Broker service, which is an optional single point of entry into the microservice cluster;\nA Mail service, which takes a JSON payload, converts into a formatted email, and send it out.\nAll of these services will be written in Go, commonly referred to as Golang, a language which is particularly well suited to building distributed web applications.\n\nWe'll also learn how to deploy our distributed application to a Docker Swarm and Kubernetes, and how to scale up and down, as necessary, and to update individual microservices with little or no downtime.\nPlease note that this course requires you to download Docker Desktop from Docker. If you are a Udemy Business user, please check with your employer before downloading software.",
      "target_audience": [
        "Go developers who have worked with monolithic applications and who want to learn how to work with Microservices"
      ]
    },
    {
      "title": "Beginner Full Stack Web Development: HTML, CSS, React & Node",
      "url": "https://www.udemy.com/course/ultimate-web/",
      "bio": "Learn web development with HTML, CSS, Bootstrap 4, ES6 React and Node",
      "objectives": [
        "Build websites with HTML & CSS",
        "Build backend servers & APIs with Node and Express",
        "Work with NoSQL databases like MongoDB",
        "Build full-stack web apps with Facebook's React Framework",
        "Build mobile-friendly websites with Bootstrap 4 & CSS"
      ],
      "course_content": {
        "Intro to Web Development": [
          "Intro to Web Development",
          "Join Our Free Student Group",
          "What is web development?",
          "Where should I start as a beginner?",
          "HTML: Building Your First Website",
          "What you can do as a web developer",
          "Frontend vs Backend development",
          "Installing an IDE"
        ],
        "Getting Started With HTML": [
          "Intro to HTML, HEAD, BODY, and HEADER",
          "HTML: Lists, Paragraphs, and Text Styling",
          "HTML: Displaying Data With Tables",
          "HTML: Images & Forms"
        ],
        "Introduction to CSS": [
          "What is CSS?",
          "How to use Inline, Internal and External CSS",
          "CSS: Element, ID & Class Selectors",
          "CSS: Colors",
          "CSS: Backgrounds & Borders",
          "Quiz - CSS Basics",
          "Using browser inspector tools",
          "CSS: Combinators",
          "CSS: Grouping",
          "CSS: Specificity",
          "Specificity Domination"
        ],
        "Intermediate CSS": [
          "CSS: Text Styling & Formatting",
          "CSS: Google Fonts",
          "CSS: Images",
          "CSS: Padding & Margin",
          "CSS: Rows & Columns",
          "Quiz: Intermediate CSS"
        ],
        "Advanced CSS: Building and styling website": [
          "CSS: Intro to building your first Website!",
          "CSS: Building the Navbar",
          "CSS: Making the Navbar Mobile Responsive - Part 1",
          "CSS: Making the Navbar Mobile Responsive - Part 2",
          "CSS: Creating the Form Group",
          "CSS: Working with iframes",
          "CSS: Working with images and box shadows",
          "CSS: Working with text and image spacing",
          "CSS: Building the footer"
        ],
        "Computers & Code": [
          "How Computers Work",
          "Understanding Binary",
          "How code works",
          "Heap vs Stack",
          "Understanding hexadecimal",
          "Variables & storage capacity",
          "Quiz: Computers & Code"
        ],
        "Learning to Code With Javascript": [
          "Time to Javascript",
          "Javascript Reference",
          "Javascript: Comments & How to Link Scripts",
          "Javascript: Variables & Strings",
          "Javascript: Numbers",
          "Javascript: Comparison Operators",
          "Javascript: Logical Operators",
          "Javascript: Arrays",
          "Javascript: Loops",
          "Javascript: Functions",
          "Javascript: Objects",
          "Javascript: Bind",
          "Percentage Calculator - Setting Up the Form",
          "Percentage Calculator - Grabbing Elements With Javascript",
          "Percentage Calculator - Using Event Listeners",
          "Percentage Calculator - Algorithm & Prevent Default"
        ],
        "Version Control With Git": [
          "How Version Control Works",
          "macOS Terminal Basics",
          "Git Basics",
          "Setting up Github on macOS",
          "Github vs Bitbucket",
          "Local & Remote Repositories",
          "Working Through Git Merge Conflicts"
        ],
        "Introduction to Bootstrap 4": [
          "What is Bootstrap 4?",
          "Downloading Bootstrap 4",
          "Bootstrap 4: Project Setup",
          "Bootstrap 4: Overview of Bootstraps Components",
          "Bootstrap 4: Understanding Bootstraps Classes",
          "Bootstrap 4: Using the Grid System"
        ],
        "Bootstrap 4: Creating a Login Portal": [
          "Bootstrap 4 Cards: Creating the Sign-in Portal Box",
          "Bootstrap 4 Forms: Adding the input fields",
          "Bootstrap 4 Buttons: Adding the Sign In button and Labels",
          "Bootstrap 4 Grids - Finishing Mobile Compatibility"
        ]
      },
      "requirements": [
        "You should have a PC or Mac and know how to turn it on!",
        "Have an Internet connection"
      ],
      "description": "Welcome to the Ultimate Web Developer Bootcamp. This is your one-stop-shop to learn front-end AND back-end development.\nWe'll take you from absolute beginner to competent full-stack web developer in a matter of weeks.\nWHO SHOULD TAKE THIS COURSE?\nAnyone who is curious about programming\nEntrepreneurs\nThose looking for a career change\nSerious coders & hobbyists\nStudents & teenagers\nAnyone who wants to learn web development\nWHAT YOU WILL LEARN\nHTML5\nCSS3\nJavascript\nBootstrap 4\nDOM Manipulation\nNPM\nNode\nMongoDB\nREST\nExpress\nES6\nReact\n\n\nDevslopes has taught over 100,000 students how to code. Using our exciting, hands-on teaching style you are sure to master the principles AND have fun at the same time.\nWe also have a free chat community with over 50,000 students where you can interact and get help from others.\nSee you on the inside!\n- Mark Price",
      "target_audience": [
        "This course is for beginners - no prior experience is required",
        "This course is for entrepreneurs & hobbyists",
        "This course is for those looking for a career change",
        "This course is for anyone who wants to learn front-end and backend development",
        "This course is for students"
      ]
    },
    {
      "title": "50 Projects In 50 Days - HTML, CSS & JavaScript",
      "url": "https://www.udemy.com/course/50-projects-50-days/",
      "bio": "Sharpen your skills by building 50+ quick, unique and fun mini projects",
      "objectives": [
        "Project based teaching to sharpen your HTML, CSS & JavaScript skills",
        "Perfect for beginners looking for things to build unique projects in a short timeframe",
        "Modern styling with flexbox, CSS animations, custom properties, etc",
        "DOM manipulation, events, array methods, HTTP requests & more"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "My Environment & Setup",
          "Project Starter Boilerplate",
          "Course Projects Code & Demos"
        ],
        "Day 1 - Expanding Cards": [
          "Project Intro",
          "Initial Cards",
          "Expanding Effect"
        ],
        "Day 2 - Progress Steps": [
          "Project Intro",
          "Creating The Steps",
          "Step Functionality"
        ],
        "Day 3 - Rotating Navigation": [
          "Project Intro",
          "Content & Circle Styling",
          "Rotate & Slide Effect"
        ],
        "Day 4 - Hidden Search Widget": [
          "Project Intro",
          "Hidden Search Widget"
        ],
        "Day 5 - Blurry Loading": [
          "Project Intro",
          "Background Image & Loading Text",
          "Load Blur Effect"
        ],
        "Day 6 - Scroll Animation": [
          "Project Intro",
          "Scroll Animation"
        ],
        "Day 7 - Split Landing Page": [
          "Project Intro",
          "Split Landing Page HTML & CSS",
          "Adding The Hover Effect"
        ],
        "Day 8 - Form Wave Animation": [
          "Project Intro",
          "Styling The Form",
          "Adding The Wave Effect"
        ],
        "Day 9 - Sound Board": [
          "Project Intro",
          "Sound Board Project"
        ]
      },
      "requirements": [
        "A very basic understanding of HTML, CSS & JavaScript"
      ],
      "description": "This is a purely project-based course. It is geared toward beginners, but intermediate developers can also enjoy creating new things. This course includes 50+ mini projects in HTML, CSS & JavaScript that relate to the DOM (Document Object Model). Here is a list of what we will create in this course:\n\n\nExpanding Cards\nProgress Steps\nRotating Navigation Animation\nHidden Search Widget\nBlurry Loading\nScroll Animation\nSplit Landing Page\nForm Wave\nSound Board\nDad Jokes\nEvent Keycodes\nFaq Collapse\nRandom Choice Picker\nAnimated Navigation\nIncrementing Counter\nDrink Water\nMovie App\nBackground Slider\nTheme Clock\nButton Ripple Effect\nDrag N Drop\nDrawing App\nKinetic Loader\nContent Placeholder\nSticky Navbar\nDouble Vertical Slider\nToast Notification\nGithub Profiles\nDouble Click Heart\nAuto Text Effect\nPassword Generator\nGood Cheap Fast\nNotes App\nAnimated Countdown\nImage Carousel\nHoverboard\nPokedex\nMobile Tab Navigation\nPassword Strength Background\n3d Background Boxes\nVerify Account UI\nLive User Filter\nFeedback UI Design\nCustom Range Slider\nNetflix Mobile Navigation\nQuiz App\nTestimonial Box Switcher\nRandom Image Feed\nTodo List\nInsect Catch Game\nSimple Timer (Bonus Day 1)\n\n\nMany people jump into a frontend framework too early. Learning vanilla JavaScript and understanding how the document object model works are essential before moving to a framework. This course teaches you this by creating real-world projects of all types.\n\n\nYou will also learn more about HTML5 and CSS including semantic tags in your markup, basic CSS properties such as colors, alignment, flexbox, and shadows as well as creating responsive layouts with CSS media queries, CSS custom properties, animations/transitions, and more.\n\n\n50 projects may seem like a lot, but we were able to make them small enough to where you can complete a project in just a few hours. Of course, this depends on your skill level.",
      "target_audience": [
        "Beginner and intermediate web developers that want to build fun, unique projects with HTML, CSS & JavaScript"
      ]
    },
    {
      "title": "Complete WordPress Theme & Plugin Development Course",
      "url": "https://www.udemy.com/course/wordpress-theme-and-plugin-development-course/",
      "bio": "Everything you need to become a hirable WordPress Developer building custom themes and plugins",
      "objectives": [
        "PHP for WordPress - The Loop, Conditionals, Hooks and More!",
        "How to Work with Child and Starter Themes Like Pro",
        "The Ins and Outs of the Template Hierarchy - Always Know What File to Customize",
        "How To Enqueue and Work with JavaScript and CSS in Themes",
        "The Complete List of Template Tags To Use When Customizing and Extending Themes",
        "A Deep Understanding of How to Use Action and Filter Hooks to Programmatically Control WordPress",
        "A Solid Starter Template For Building Your Own WordPress Plugins",
        "Common Practices and Techniques for Building Custom WordPress Plugins"
      ],
      "course_content": {
        "Getting Ready for WordPress Development": [
          "Course Introduction",
          "Downloading and Using the Course Example Files",
          "Setting Up WordPress Locally",
          "Setting Up Locally",
          "DesktopServer from ServerPress",
          "Local from Flywheel",
          "Editing WordPress Files Locally",
          "Setting Up Locally",
          "Introduction to Staging",
          "Pulling from Production to Staging to Local",
          "Pushing from Local to Staging to Production"
        ],
        "PHP for WordPress": [
          "PHP for WordPress Introduction",
          "What is PHP?",
          "What is PHP?",
          "Writing Some Basic PHP",
          "PHP Programming Basics",
          "PRACTICE - PHP Basics",
          "WordPress PHP Coding Standards",
          "Different Types of PHP Files in WordPress",
          "The Loop",
          "What is the Loop?",
          "PRACTICE - The Loop",
          "Template Tags",
          "PRACTICE - Template Tags",
          "WordPress Conditionals",
          "PRACTICE - Conditional Tags",
          "WordPress Hooks",
          "Intro to Hooks Quiz",
          "PRACTICE - WordPress Hooks",
          "PHP for WordPress Review"
        ],
        "Child Themes and Starter Themes": [
          "Chlid Themes v Starter Themes",
          "Child and Starter Theme Quiz",
          "Child Theme Basics",
          "DEMO - Child Theme",
          "PRACTICE - Child Themes",
          "Starter Theme Basics",
          "DEMO - Underscore Starter Theme",
          "PRACTICE - Starter Themes",
          "Child and Starter Themes Review",
          "Child and Starter Theme Quiz"
        ],
        "The Template Hierarchy": [
          "An Introduction to the Template Hierarchy",
          "Setting up the Theme Content and Files",
          "Working with the style.css file",
          "Working with the functions.php file",
          "Working with the index.php template",
          "Working with Headers in WordPress",
          "Working with Footers in WordPress",
          "Adding Menus and body_class",
          "Adding Markup to a Theme - Part 1",
          "Adding Markup to a Theme - Part 2",
          "Adding Markup to a Theme - Part 3",
          "Working with Sidebars in WordPress",
          "Adding Widget Areas in WordPress",
          "Working with the Loop",
          "Creating Content Includes",
          "Working with the singular.php template",
          "Working with the single.php template",
          "Adding a single-post.php template",
          "Working with the comments.php template",
          "Working with Post Formats in WordPress",
          "The home.php for the Blog Homepage",
          "Working with archive.php and Archives in WordPress",
          "Working with the author.php template",
          "Working with author-id.php and author-nicename.php templates",
          "Working with Category Archive Templates",
          "Working with Date Archive Templates",
          "Working with Media Attachment Templates",
          "Mime Type Templates Further Explained",
          "Working with Page Templates",
          "Working with the front-page.php Template",
          "Working with Custom Templates",
          "Adding a 404.php template",
          "Working with Search Templates",
          "Working with Custom Post Type Archives",
          "Working with Custom Post Type Single Pages - Part 1",
          "Working with Custom Post Type Single Pages - Part 2",
          "Working with Custom Taxonomy Archives - Part 1",
          "Working with Custom Taxonomy Archives - Part 2",
          "Working with Multiple CSS Files",
          "Including JavaScript in Your Themes",
          "Working with JavaScript Dependencies (like jQuery)",
          "Template Hierarchy Review"
        ],
        "Template Tags": [
          "An Introduction to Template Tags",
          "General Template Tags - Introduction",
          "General Tags - Include Tags",
          "General Tags - Login Tags",
          "General Tags - bloginfo",
          "General Tags - Archive Tags - Part 1",
          "General Tags - Archive Tags - Part 2",
          "General Tags - Calendar Tags",
          "General Tags - Misc Tags",
          "PRACTICE - General Template Tags - Part 1",
          "PRACTICE - General Template Tags - Part 2",
          "Navigation Tags",
          "Navigation Tags - CSS Classes",
          "Navigation Tags - Walker Class",
          "PRACTICE - Navigation Tags - Part 1",
          "PRACTICE - Navigation Tags - Part 2",
          "Post Tags",
          "Post Tags - Class Tags",
          "Post Tags - Common Tags - Part 1",
          "Post Tags - Common Tags - Part 2",
          "Post Tags - Date Tags",
          "Post Tags - Attachment Tags",
          "Post Tags - Misc Tags",
          "Post Tags - get_ Tags",
          "PRACTICE - Post Tags - Part 1",
          "PRACTICE - Post Tags - Part 2",
          "Thumbnail Tags",
          "PRACTICE - Thumbnail Tags - Part 1",
          "PRACTICE - Thumbnail Tags - Part 2",
          "Link Tags",
          "PRACTICE - Link Tags - Part 1",
          "PRACTICE - Link Tags - Part 2",
          "Introduction to Comment Tags",
          "Common Comment Tags",
          "PRACTICE - Comment Tags - Part 1",
          "PRACTICE - Comment Tags - Part 2",
          "Author Tags",
          "PRACTICE - Author Tags - Part 1",
          "PRACTICE - Author Tags - Part 2",
          "Conditional Tags",
          "Sanitization, Escaping & Localization",
          "DEMO - Sanitization Tags",
          "DEMO - Escaping Tags",
          "DEMO - Localization Tags",
          "A Review of Template Tags"
        ],
        "Action and Filter Hooks in WordPress": [
          "An Introduction to Hooks in WordPress",
          "do_action add_action remove_action",
          "Action Hooks in WordPress Core",
          "The WordPress Action Runtime Lifecycle",
          "Exploring Action Hooks with wp_actions and wp_filter",
          "Exploring Action Hooks with R Debug",
          "Exploring Action Hooks with Debug Bar Plugins",
          "Exploring Action Hooks with Simply Show Hooks Plugin",
          "Exploring Action Hook DEMOs",
          "DEMO - WordPress Action Hook - do_action",
          "DEMO - WordPress Action Hook - enqueue_scripts",
          "DEMO - WordPress Action Hook - widget_init",
          "DEMO - WordPress Action Hook - loop_end()",
          "DEMO - WordPress Action Hook - template_redirect()",
          "DEMO - WordPress Action Hook - save_post()",
          "PRACTICE - WordPress Action Hooks - Part 1",
          "PRACTICE - WordPress Action Hooks - Part 2",
          "Filter Hooks in WordPress",
          "apply_filters(), add_filter(), remove_filter()",
          "apply_filter() in WordPress Core",
          "Exploring Filter Hooks with $wp_filter",
          "Exploring Filter Hooks with R Debug",
          "Exploring Filter Hooks with Debug Bar Plugin",
          "Exploring Filter Hooks with Simply Show Hooks Plugin",
          "Exploring Filter Hook DEMOs",
          "DEMO - WordPress Filter Hook - apply_filters",
          "DEMO - WordPress Filter Hook - the_title",
          "DEMO - WordPress Filter Hook - the_content",
          "DEMO - WordPress Filter Hook - excerpt_more",
          "DEMO - WordPress Filter Hook - body_class",
          "DEMO - WordPress Filter Hook - manage_posts_columns",
          "PRACTICE - WordPress Filter Hooks - Part 1",
          "PRACTICE - WordPress Filter Hooks - Part 2",
          "Hooks in WordPress Review"
        ],
        "Plugin Development": [
          "Introduction to Plugin Development",
          "Setting Up the Files",
          "Plugin Header",
          "Settings Pages",
          "Settings Sub Pages",
          "Link to Settings",
          "Plugin File Paths",
          "Enqueuing CSS",
          "Enqueuing JS",
          "Enqueuing Conditionally",
          "PRACTICE - Setup - Part 1",
          "PRACTICE - Setup - Part 2",
          "The Options API",
          "Saving Array Options",
          "PRACTICE Options - Part 1",
          "PRACTICE Options - Part 2",
          "Settings API",
          "Settings Sections",
          "Settings Fields",
          "More Settings Fields",
          "Adding Fields to Existing Sections",
          "An Introduction to Plugins Review"
        ]
      },
      "requirements": [
        "Basic HTML - Know how to build a simple HTML page and work with HTML forms.",
        "Basic CSS - Know how to responsively style HTML pages with CSS.",
        "Know how to work with Posts, Pages and Custom Content in the WordPress admin area"
      ],
      "description": "WordPress is the leading Content Management System on the market, powering a large percentage of the Web.  The need for WordPress Developers who can build and customize themes and plugins is ever growing.  Learn from one of the most recognized educators in the WordPress world, Zac Gordon, who has taught thousands of people now employed as WordPress Developers.\n\nIf you want to learn everything from customizing existing themes, building custom themes or starting to build plugins, this course is for you.  You will learn in depth how WordPress works under the hood, from template files and tags to hooks and internal APIs.  If you are looking to build bigger and more custom projects with WordPress or just get a good job with a great company building WordPress projects, then this course is for you.  Make sure though you can already build and style a basic web page with HTML and CSS as we assume you already know this and focus more on learning PHP.\nWhen you learn the skills this course contains you will feel incredibly empowered to build almost anything you can imagine with WordPress.  You should also feel confident working professionally in the field as a WordPress Developer.  You will have built a theme and plugin along with the course as well as a theme and plugin of your own.  Follow in the path of thousands of others of Zac's students who learned WordPress Development and went on to do great work in the field.",
      "target_audience": [
        "Anyone who wants to learn how to build WordPress Themes",
        "Anyone who wants to learn how to build WordPress Plugins",
        "Anyone with basic HTML and CSS skills who wants to start customizing WordPress Themes",
        "Developers who want to learn WordPress Development in more depth",
        "Anyone looking to get a job or career in WordPress Development"
      ]
    },
    {
      "title": "Laravel 12 & Vue 3 fullstack Mastery: Build 2 portfolio apps",
      "url": "https://www.udemy.com/course/laravel-vuejs-fullstack-web-development/",
      "bio": "From zero to job-ready: build two stunning full-stack single page applications that will get you hired",
      "objectives": [
        "Build and test a scalable RESTful API using Laravel 12 from scratch",
        "Create a modern Single Page Application (SPA) using Vue 3, Vue Router, Pinia & Bootstrap 5",
        "Implement authentication, authorization, and form validation for your API",
        "Use Postman and PHPUnit to test your backend like a pro",
        "Structure a fullstack app with clear separation of frontend and backend",
        "Build a complete monolith SPA using Laravel 12 + Inertia.js — no API needed!",
        "Style your app with Tailwind CSS for a clean and responsive UI",
        "Learn how Inertia bridges Laravel and Vue for seamless page transitions",
        "Master the differences between API-first vs Monolith SPA architecture",
        "Deploy both your backend API and frontend app to a production VPS",
        "Understand best practices for real-world Laravel + Vue projects",
        "Gain confidence to build and launch apps that are portfolio-ready and client-worthy"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course"
        ],
        "Setting up our Laravel Development Environment": [
          "Section Introduction (DON'T SKIP unless you have dev environment setup)",
          "Setting up Local Development on Windows - Installing XAMPP",
          "Setting up Local Development on Windows - Install Composer & Laravel Installer",
          "Setting up Local Development on MacOs (v12+) - Installing Herd",
          "Setting up Local Development on Mac - Install Homebrew, PHP, MySQL and Composer",
          "Setting up Local Development on Mac - Installing Valet",
          "Alternative Local Development Environment - Installing Laravel Sail",
          "Other Tools to install",
          "REST Client Tools to install",
          "My Visual Studio Code Editor extensions & settings"
        ],
        "PART 1: Build and Deploy API with Laravel 12, SPA with Vue 3, Vue router & Pinia": [
          "Introduction to Part 1"
        ],
        "Build RESTful API with Laravel 12 and PHPUnit": [
          "What Is an API and How Laravel handles It",
          "Setting Up Your Laravel Project for API Development",
          "Creating Models, Migrations, and Factories",
          "Understanding HTTP Methods and Status Codes",
          "API Versioning in Laravel",
          "Creating the First API Endpoint (GET All Resources)",
          "Formatting API Responses with Laravel API Resource",
          "Writing Automated Tests for GET Endpoint using PHPUnit",
          "Testing GET Endpoint with Postman",
          "Validating and Storing New Data",
          "Updating a Resource (PUT/PATCH Endpoint)",
          "Deleting a Resource (DELETE Endpoint)",
          "Writing Automated Tests for POST, PUT, and DELETE Endpoints with PHPUnit",
          "Testing POST, PUT, and DELETE Endpoints with Postman",
          "Wrap Up: What We’ve Built"
        ],
        "Sanctum for API Token Authentication": [
          "Introduction to Sanctum",
          "Setting up Sanctum for API token Authentication",
          "Creating login endpoint with Token response",
          "Testing the login endpoint with PHPUnit and Postman",
          "Creating register endpoint",
          "Testing the register endpoint with PHPUnit and Postman",
          "Adding logout endpoint",
          "Testing the logout endpoint with PHPUnit and Postman",
          "Automated and manual testing the protected route"
        ],
        "Sanctum for Single Page Application (SPA) Authentication": [
          "SPA Authentication Introduction",
          "Setting up Sanctum for SPA Authentication",
          "SPA Authentication - Signing users in",
          "SPA Authentication - Registering users",
          "SPA Authentication - Signing users out",
          "Protecting routes",
          "Linking tasks to users and testing with PHPUnit"
        ],
        "Authorization": [
          "Introduction to Authorization",
          "Defining authorization logic",
          "Authorizing Actions Using Policies",
          "Automated Testing: Authorization with PHPUnit",
          "Manual testing with Postman",
          "Wrap up"
        ],
        "Getting started with Vue 3 (optional)": [
          "Setup Vue 3 project",
          "Single File Component",
          "Directives and Attribute bindings",
          "Handling events",
          "Two way bindings with v-model",
          "Working with methods",
          "Style and Class bindings",
          "Computed Properties",
          "Watchers",
          "Styling the Tags Input component",
          "Component Communication with Props",
          "Component Communication with emitting events"
        ],
        "Vue 3 Composition API Fundamental (optional)": [
          "Composition API Introduction",
          "Composition API Setup",
          "Creating reactive reference with the ref function",
          "Creating reactive object with the reactive function",
          "Creating reactive reference from reactive object",
          "Computed properties",
          "Working with watch and watchEffect",
          "Working with props",
          "Emitting events",
          "Lifecycle hooks",
          "Composable functions",
          "Using Composition API script setup"
        ],
        "Consuming REST API in our Vue.js 3 Application": [
          "Creating new Vue.js 3 project",
          "Setting up Axios for HTTP call",
          "Displaying data in Vue js components",
          "Using computed properties for displaying completed and uncompleted tasks",
          "Toggling the completed tasks",
          "Adding new component to insert data",
          "Creating an Inline editing feature",
          "Adding new feature in our Vue js app to update data",
          "Populating input element when editing data",
          "Adding new feature to mark the task as completed",
          "Adding new feature to remove tasks"
        ]
      },
      "requirements": [
        "You should have a basic understanding of HTML, PHP, OOP, CSS & Javascript",
        "A Mac, Windows, or Linux computer"
      ],
      "description": "[Course updated in August 2025]\nUnlock Your Career as a Full-Stack Developer: The Ultimate Laravel 12 & Vue 3 Bootcamp\nThis is your fast track to becoming a professional developer. Forget confusing theories and outdated practices. In this hands-on course, you’ll build three stunning, job-ready web applications from scratch using the most powerful stack today: Laravel, Vue, and Inertia.\nWhat You'll Achieve:\nBuild Your Portfolio: Create two complete projects that you can confidently showcase to employers and clients.\nMaster Two Architectures: Learn both the modern API-based approach and the efficient Monolith SPA style. This makes you versatile and valuable in any team.\nGo Beyond the Code: Don't just build. Learn to test, debug, and deploy your apps to a real server, giving you the skills needed for a real-world developer role.\nBoost Your Confidence: Gain practical experience with essential tools like Vue 3, Pinia, Tailwind CSS, and PHPUnit, turning you from a beginner into a skilled pro.\nProjects You Will Build:\nA Complete API-Based App: Master building a separate backend with Laravel that handles data, authentication, and validation, then connect it to a dynamic Vue 3 frontend.\nA Seamless Monolith Apps: Discover the magic of Inertia.js to create fast, single-page applications without the complexity of a separate API. You'll build a project to solidify your skills.\nThis Course Is For You If:\nYou're a beginner who wants to land your first developer job. You're ready to stop watching tutorials and start building real-world applications.",
      "target_audience": [
        "Anyone who wants to learn how to combine Laravel with Vue js and other web technologies to build full stack web application",
        "This course is meant for students already familiar with the basics of Laravel and wants to level up their development skills by building real life project"
      ]
    },
    {
      "title": "Complete PHP Course With Bootstrap3 CMS System & Admin Panel",
      "url": "https://www.udemy.com/course/complete-php-course/",
      "bio": "In this complete course students will learn how to use PHP with Bootstrap3 as well as A CMS System and Admin Panel",
      "objectives": [
        "You will be able to create beautiful Dynamic websites using HTML5, Bootstrap and PHP",
        "You will be able to Create web Applications Like Admin Panel, Management softwares etc...",
        "You will be able to Create thier Own CMS System with thier own Restriction, Style and theme. Other CMS Systems? No need."
      ],
      "course_content": {
        "PHP Basics": [
          "Introduction - Course Benefits and All You Get From Enrolling In This Course!",
          "Installing Xampp On Local Machine",
          "Where to Save Files",
          "PHP basic Syntax",
          "String Data Type",
          "Integer Data Type And Getting Different Data Types",
          "Variables",
          "Concatination",
          "Arithematic Operators",
          "Assignment Operators",
          "Increment/Decrement Operators",
          "Logic Behind Conditional Statements and Comparison Operators",
          "Comparison Operators",
          "More On Comparison Operators",
          "Logical Operators",
          "If Else",
          "Nested If Else",
          "Nested If Else Advanced",
          "If else if then else",
          "Switch Statement",
          "While Loop",
          "Do While Loop",
          "For Loop",
          "Creating a Simple Function",
          "Function With Argument",
          "Return Statement",
          "Globe Scope",
          "Static Scope",
          "Substr & Strpos Functions",
          "More String Functions",
          "String Functions Special for HTML",
          "Logic Behind Array",
          "Array Construct",
          "Array Identifier",
          "Associative Array",
          "MultiDimentional Array",
          "Printing Array Using For Loop",
          "Foreach Loop for Printing Complete Array",
          "Printing Associative Arrays with their keys using Foreach Loop",
          "Using Foreach Loop for Printing Multidimentional Arrays",
          "Print_r Function",
          "Array Functions",
          "Array Functions Advanced",
          "Mathematical Array Functions & multidimentional Array Function",
          "$_SERVER Super GLOBAL Array",
          "$_GLOBALS Super Global Array",
          "Logic Behind Get and Post Method",
          "Creating and Getting the GET Variable",
          "Include and Require"
        ],
        "Working with HTML and PHP": [
          "Creating a Simple HTML Form",
          "Receiving HTML Form",
          "Post Method",
          "Isset Function",
          "Getting Requests on the Same Page",
          "Passing Data With Some String Functions",
          "Validating the Complete Form",
          "Validating the Complete Form 2",
          "Adding Some Advance Form Elements"
        ],
        "Working with MySQL Database using PHP": [
          "PHPmyadmin",
          "Creating a Database and Table",
          "Inserting Data In MySQL",
          "Creating MySQL Username",
          "Retrieving Data From DataBase",
          "Getting Data in an Organized Way"
        ],
        "HTML, PHP, MySQL & Bootstrap": [
          "Downloading and Applying Bootstrap in HTML5",
          "Creating the New Form with BootStrap and HTML5",
          "Validating our Form Using HTML5 required attribute",
          "Submitting the Form",
          "Submitting the Form 2",
          "Creating the Detail page",
          "Programming the Detail Page",
          "Deleting a Row",
          "Adding Bootstrap to Buttons",
          "Getting MySQL data in HTML Form NEW",
          "Getting Value for Select tag from Database",
          "Creating Countires List table and geting it in the PHP file",
          "Adding countries table to Other pages",
          "Creating Header and Navbar with Bootstrap",
          "Creating Post Area With Using Some HTML5 and Bootstrap techniques",
          "Creating a Form In Aside Area Using Some bootstrap techniques",
          "Creating Latest Post and Aside Area Using Some Bootstrap Techniques",
          "Creating the Search bar",
          "Creating Footer",
          "Separating Home and Post Page",
          "Creating database and Table for the CMS System",
          "Connecting and Retrieving Data From the Database",
          "Getting posts on the post page and using the GET variable",
          "Creating and Programming the Menu Page",
          "Changing the Active Class by the Help of Database",
          "Programming the Side Posts Area",
          "Separating Header",
          "Programming the Contact us page and Creating Table",
          "Separating Sidebar",
          "Separating Footer",
          "Editing Sidebar",
          "Creating Search Page",
          "Showing Searched Text",
          "Creating Contact Us Form",
          "Creating Registration Page",
          "Programming the Registration Page",
          "Validating Password and Fixing Some Bugs"
        ],
        "The Admin Panel": [
          "Intro to the CMS System with Admin Panel. Based on PHP and Bootstrap",
          "Creating Header For Admin Panel",
          "Creating Side Nav for Admin Panel",
          "Creating Collapsible Menu",
          "Creating the Top Block",
          "Creating and Renaming Multiple Top Blocks",
          "Adding Latest Post Area to the Dashboard",
          "Adding, Comments Area, Users Area and Profile Area to the Dashboard",
          "Creating New Post Page",
          "Adding TinyMCE Text Editor in our Form",
          "Creating New Category Page",
          "Creating View Post Page",
          "Creating View Category Page",
          "Creating view Comments Page",
          "Creating View Profile Page",
          "Completing The View Profile Page",
          "Creating Login Page and Activating it",
          "Completing the Login Panel",
          "Secure Admin Dashboard with Login",
          "Creating Logout Page and Learning How Login and Logout actually works",
          "Securing ALL Admin Pages with Login and Password",
          "Creating Admin and Subscribers role",
          "Programming the Profile Page",
          "Programming the New Post Page",
          "Getting Post Data in PHP and Creating Image Uploader",
          "Completing the New Post Insertion Program",
          "Modifying retrieving Query from Index page to getting specific data",
          "Adding Pagination",
          "Retrieving data Post List Page",
          "Joining Tables",
          "Changing Post Status",
          "Programming the View and Delete Button From Post list Page",
          "Creating Edit page",
          "Creating New Category Page",
          "Retrieving and deleting categories",
          "Edit Category",
          "Modifying Category Name into Id from many pages",
          "Programming the Dashboard",
          "Completing the Dashboard Programming",
          "Code Exercise of CMS System with Admin Panel",
          "Course Summary and Conclusion - Thank You For Taking Our Course!",
          "Course Bonus Lecture! A Special Bonus For You For Finishing This Course!",
          "Getting MySQL data in HTML Form"
        ]
      },
      "requirements": [
        "Some Basic Knowledge of HTML is required",
        "A Simple Notepad. We'll use Notepad++",
        "An Openness To Learn A New Skill"
      ],
      "description": "Welcome To The Complete PHP Course With Booststrap3 CMS System Admin Panel\n\n\nStudent Success Testimonials\n\n\n7 days ago\nExcellent course deserves more than 5 stars for the effort these 2 instructors have taken to deliver a polished excellent course Actually coding a blog from scratch in php without using wordpress by manually programming in html css php bootstrap Real life project Responsible instructors they add new lectures when students suggest good ideas Thank you so much Joe and Shahzaib Bryce S Dyra\n9 days ago\nThis course meets all that I was looking for Very comprehensive and useful for anyone looking for PHP development Bootstrap and more I highly recommend this course to anyone beginner or more advanced students Great for all A big thank you to both instructors for creating this course for all of us\nWatch the promo video to see How You Can Begin Using PHP With Booststrap3 CMS System Admin Panel\nThis Course is MASSIVE You receive over 20 hours of video content 125 lectures\nJoin Over 950,000 Students Who Have Enrolled In My Udemy Courses This Year\n7,500 Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results\nThen this course is for you Click Take This Course Now For Instant LifeTime Access\nThis Course is for Everyone Newbies Beginners and Professionals This Course will provide you the Basic Understanding of the PHP to the Advance Techniques to Create beautiful Applications After watching this complete course You will find how easy is to make a Complete Personal CMS System with an Advanced Admin Panel Using Bootstrap 3\nWith the right mindset understanding and application of the teachings in this course you will instantly begin to move towards Using PHP With Booststrap3 CMS System Admin Panel\nWhen I learn something new I add it to the course at no additional cost to you This is a course that will continue to add more and more to every aspect of your life\nIn addition to the Udemy 30day money back guarantee you have my personal guarantee that you will love what you learn in this course\nWhat I cant do in this Course\nI cant guarantee your success this course does take work on your part But You Can Do It\nI am also not responsible for your actions You are responsible for 100 of the decisions and actions you make while using this course\nThis course will not remain this price forever Its time to take action\nClick the take this course button at the top right now\nevery hour you delay is costing you money\nSee you in the course\nSincerely\nJoe Parys Shahzaib Kamal",
      "target_audience": [
        "Who want to Learn PHP from Basics and want to become a Professional",
        "Who want to Create thier own Management System for thier Website.",
        "Who want to Create Web Applications",
        "Who want to Create Dynamic Websites with some Easy Ways",
        "Who want to Use Bootstrap on PHP Projects."
      ]
    },
    {
      "title": "HTML&CSS Tutorial and Projects Course (Flexbox&Grid)",
      "url": "https://www.udemy.com/course/in-depth-html-css-course-build-responsive-websites/",
      "bio": "Web Development for absolute beginners.Learn HTML5 and CSS3 from scratch by building 20+ amazing real world projects.",
      "objectives": [
        "Learn HTML5 from scratch.",
        "Learn CSS3 from scratch.",
        "Create responsive real world projects from scratch.",
        "Learn CSS Grid and Flexbox Layout Modules.",
        "Learn where to get free images, custom fonts.",
        "Learn how to work with font-awesome icons",
        "Learn where to get custom color palettes."
      ],
      "course_content": {
        "Course Intro": [
          "Course Structure",
          "Video Blur Fix",
          "Course Review",
          "Discord Channel"
        ],
        "HTML Tutorial": [
          "HTML Intro",
          "Google Chrome and Visual Studio Code",
          "Download Google Chrome",
          "Download Visual Studio Code",
          "Visual Studio Code Overview",
          "Create A Project",
          "First Webpage",
          "Basic HTML Document Structure",
          "Implement HTML Document Structure",
          "Live Server Extension Setup",
          "Extra Settings and Emmet",
          "Heading Elements",
          "Video Resources",
          "Paragraph Element",
          "White Space Collapsing",
          "Lorem Ipsum",
          "Image Basics",
          "Multiple Images",
          "External Images",
          "Nice Images",
          "Width and Height",
          "Crop Images",
          "Comments and Line Breaks",
          "External Links",
          "Internal Links",
          "Links - Within a Page",
          "Image Links - Empty Links",
          "Sup and Sub Elements",
          "STRONG and EM Elements",
          "Special Characters",
          "Unordered Lists",
          "Ordered Lists",
          "Nested Lists",
          "Table Element",
          "Forms - Input Elements and Submit Elements",
          "Forms - Textarea, Radio,Checkboxes, Select",
          "Install Prettier Code Formatter",
          "Keyboard Shortcuts",
          "Head Element - External Resources"
        ],
        "HTML Coffee Project": [
          "Intro",
          "Setup",
          "Project Assets",
          "Download Images",
          "Logo, Heading, and Navbar",
          "Home Page",
          "About",
          "Numbers",
          "Contact",
          "Complete Project"
        ],
        "CSS Tutorial": [
          "CSS Intro",
          "Workspace Setup",
          "Text Editor Setup",
          "Video Resources",
          "Inline CSS",
          "Internal CSS",
          "External CSS",
          "Power Struggle",
          "Basic CSS Syntax",
          "Element Selectors",
          "Grouping Selectors",
          "ID Selectors",
          "Class Selectors",
          "ID and Class Selector Summary",
          "DIV and SPAN Elements",
          "Inheritance in CSS",
          "Inheritance - More Info",
          "Last Rule, Specificity and Universal Selector",
          "Combine Selectors - Descendant Selector"
        ],
        "All Projects Intro": [
          "All Projects Intro",
          "Complete Project"
        ],
        "Fundamentals Project": [
          "First Project Intro",
          "Steps",
          "Complete Project",
          "Projects Folder"
        ],
        "CSS Colors": [
          "Colors Intro",
          "Color and Background-color Properties",
          "Color Names",
          "RGB",
          "RGBA",
          "HEX Values",
          "VS-Code Color Options",
          "External Resources"
        ],
        "Colors Project": [
          "Intro",
          "Steps",
          "Complete Project"
        ],
        "CSS Units": [
          "Units Intro",
          "Pixels, Font-Size, Width, Height",
          "Percent Units",
          "Em Units",
          "Rem Units",
          "Vh and Vw",
          "Default Browser Styles and Chrome DevTools",
          "Calc Function",
          "Min-height, Max-height"
        ],
        "Units Project": [
          "Intro",
          "Steps",
          "Complete Project"
        ]
      },
      "requirements": [
        "No programming/coding experience as we will start from absolute scratch",
        "Any computer - Mac, PC.",
        "Any Text Editor. We will download Brackets Text Editor but will be able follow along with any text editor.",
        "Any Web Browser. Chrome,Firefox.(Chrome is requirement only if wants to use Brackets Live Preview).",
        "All required software is free!!!!"
      ],
      "description": "If you want to start your career in Web Development, HTML and CSS are essential skills to have because they are foundational languages of the web.\nHTML stands for Hyper Text Markup Language. In short HTML is a markup language that is used developing web pages.\nCSS stands for Cascading Style Sheets. In short CSS is a language responsible for layout and styling of the web pages.\nIn this course we will cover both languages from the scratch and by the end of the course become HTML and CSS ninjas by building Responsive Real World Projects.\nWhy you should take this course?\nReason Number ONE - You Will Understand the Web Better.\nKnowing the HTML and CSS and how they are used to create web pages is essential for web developer as they are building blocks of every web page.\nReason Number TWO - You Will be able to Create Websites.\nOnce you will know HTML and CSS you will be able to create a personal,unique web page for yourself.\nReason Number THREE - Start a Web Career.\nFor anybody who wants to pursue a career in Web Development knowledge of HTML and CSS is required.\nReason Number FOUR - You Will Progress to Another Programming Languages with Greater Ease.\nOnce you know the fundamentals of HTML and CSS you will be able to pick up languages like Javascript with greater ease.\nReason Number FIVE - We Will Learn HTML and CSS from Scratch and Will Use it to Build Responsive Real Life Projects.\n\nNot only we will learn the theory of HTML and CSS step by step. We also will apply our knowledge by building Real Life Projects.",
      "target_audience": [
        "Anyone who wants to learn Web Development from scratch."
      ]
    },
    {
      "title": "React & Django Full Stack: web app, backend API, mobile apps",
      "url": "https://www.udemy.com/course/react-django-full-stack/",
      "bio": "React v.18 single page web app, Django REST API with Python, React Native cross platform mobile apps for Android and iOS",
      "objectives": [
        "Making a Single page app with React",
        "Creating RESTfull API with Django",
        "Mobile apps on both Android and iOS"
      ],
      "course_content": {
        "Introduction": [
          "Project requirements",
          "Technology overview",
          "IDE",
          "Debugging"
        ],
        "Django Introduction": [
          "Introduction",
          "Python Installation",
          "Virtual environment",
          "Creating Project",
          "PyCharm IDE",
          "Files overview and new app",
          "Migrations",
          "User and admin",
          "Field options",
          "Field types",
          "Urls",
          "Class Views",
          "Model objects methods",
          "Templates",
          "Dynamic templates",
          "Admin customisation",
          "REST",
          "Serializers",
          "Postman & HTTP methods",
          "Token",
          "Permissions",
          "One to one",
          "One to many",
          "Many to many"
        ],
        "Django API project": [
          "Starting API project",
          "URLs",
          "Models",
          "Serializers",
          "Testing API",
          "Custom method",
          "Request Data",
          "Update and Create",
          "Ratings",
          "Token Auth",
          "Register User",
          "Restrictions",
          "Django v5 Update"
        ],
        "React Introduction": [
          "Introduction",
          "Create App",
          "Files overview",
          "Components",
          "Props",
          "Events",
          "State",
          "Life Cycle methods",
          "Conditional display",
          "Loops and keys",
          "Router",
          "Context",
          "Styling",
          "Hooks - state",
          "Hooks - effects"
        ],
        "React project": [
          "Creating react app",
          "Layout",
          "List component",
          "Fetching data",
          "CORS",
          "Movie clicked",
          "Displaying details",
          "Font Icons",
          "Displaying rating",
          "User rating",
          "Styling app",
          "Rate movie",
          "Update movie",
          "Edit component",
          "Layout tweaks",
          "Form",
          "API Service",
          "Updating list",
          "New records",
          "Display new movie",
          "Delete records",
          "Clean services",
          "Routing",
          "Login user",
          "Context",
          "Cookies",
          "Dynamic token",
          "Register users",
          "Styling",
          "Logout",
          "Custom hook",
          "Own hook in component"
        ],
        "React Native Introduction": [
          "Framework overview",
          "Expo",
          "Running your app",
          "Files overview",
          "Components, props and state",
          "Styling",
          "Flex",
          "User inputs",
          "Lists",
          "Images",
          "Platform specific code",
          "Icon and splash screen",
          "Navigation",
          "Build",
          "Eject"
        ],
        "React Native project": [
          "Initialising project",
          "Getting data from Django",
          "Styling list",
          "Enable Navigation",
          "Passing params",
          "Icons for rating",
          "Top bar",
          "Edit component",
          "Forms",
          "PUT method",
          "Fetch from localhost",
          "Rate UI",
          "Rate request",
          "POST new record",
          "Delete record",
          "Login UI",
          "AsyncStorage",
          "Token",
          "Register"
        ],
        "Deploy Apps": [
          "API deployment",
          "Setting up server",
          "Firebase account",
          "Deploy React App"
        ],
        "Finish": [
          "Summary"
        ]
      },
      "requirements": [
        "basic knowledge of Javascript",
        "basic knowledge of python"
      ],
      "description": "Welcome to this full-stack course. This course is mainly based on Django, React, and React Native, but we will cover much more than just these frameworks. We will build full applications, including backend restful API, front-end web apps, and mobile apps on both Android and iOS.\nWe will discover how to create user authentication (register and log in users), create a full CRUD (create, read, update, and delete), and create our own endpoints. I will show how to communicate between the API and the web app. We will also discover how to style the application and restrict certain parts to authenticated users only. All that is done with very popular frameworks. We will use JavaScript and Python, and basic knowledge is required.\nThis course consists of two sections: an introduction to the framework, where I explain everything from scratch, and a hands-on section to build a ready application. After finishing this course, you will have both knowledge and experience building a full-stack application using Django, React, and React Native.\nAlso, I will show you how to deploy back-end API and front-end web apps on the production server absolutely for free. You don’t need to spend any money to put your full application live online.",
      "target_audience": [
        "beginner developers who wants to learn Django, React and React Native"
      ]
    },
    {
      "title": "Learn OAuth 2.0 - Get started as an API Security Expert",
      "url": "https://www.udemy.com/course/learn-oauth-2/",
      "bio": "Imagine what could happen to YOUR career if you knew API Security| Udmy for Business approved| 17000 satisfied students",
      "objectives": [
        "Use OAuth to access Google, Paypal, LinkedIn and Facebook APIs",
        "Use OAuth in Mobile Apps (client-side).",
        "Use OAuth to protect your APIs and Cloud Solutions",
        "Apply OAuth Best Practices.",
        "Choose the correct OAuth Flow flow for your use-case.",
        "Know the OAuth Terminology: Actors, Endpoints, Tokens.",
        "Use OAuth in Cloud Solutions (client-side)."
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Introduction: Preview of the Course",
          "Introduction: What is covered in this course?",
          "Introduction: Practice Part"
        ],
        "OAuth Big Picture": [
          "Example: OAuth for Third Party Access",
          "Example: The Password Antipattern",
          "Example: The Solution provided by OAuth 2.0",
          "The Password Anti-Pattern",
          "OAuth 2.0 Solution",
          "OAuth Basics",
          "References to more Information on OAuth 2.0"
        ],
        "OAuth Components": [
          "Section Overview: OAuth Terminology",
          "Overview of OAuth Actors",
          "OAuth Actors in Detail",
          "OAuth Endpoints",
          "The Subway Ticket and the Token",
          "OAuth Components",
          "Overview of OAuth Tokens and Credentials"
        ],
        "OAuth Flows: Interactions between the OAuth Components": [
          "Example: Interaction of OAuth Components in an OAuth Flow",
          "Overview of OAuth Flows",
          "OAuth Flows"
        ],
        "Authorization Code Flow": [
          "Usage Scenario and Features of this Flow",
          "Authorization Code Flow: Authorization Endpoint",
          "Authorization Code Flow: Token Endpoint and Resource Access"
        ],
        "Authorization Code Flow: Refresh Tokens": [
          "Usage Scenario and Features of the Refresh Flow",
          "Authorization Code Flow: Refreshing Tokens"
        ],
        "Implicit Flow": [
          "Usage Scenarios and Features of the Implicit Flow"
        ],
        "Client Credentials Flow": [
          "Usage Scenarios and Features of the Client Credentials Flow"
        ],
        "Resource Owner Password Credentials Flow": [
          "Usage Scenarios and Features of the Resource Owner Password Credentials Flow"
        ],
        "Proof Key for Code Exchange (PKCE)": [
          "What is Proof Key for Code Exchange (PKCE)",
          "How the attack works - Part 1",
          "How the attack works - Part 2",
          "How PKCE prevents the attack"
        ]
      },
      "requirements": [
        "You should be familiar with basic web service and API development",
        "If you would like to use OAuth in a Mobile App, you should know how to develop for the respective platform. Mobile App Development is not covered in this course."
      ],
      "description": "Recent Updates\n2023-02-06 More than 17420 satisfied students\n2023-01-07 NEW Added 4 new videos on Proof Key for Code Exchange (PKCE)\n2023-01-06 More than 17240 satisfied students\n2023-01-06 Answered students' questions in the Q&A\n2022-12-30 More than 17200 satisfied students\n2022-12-29 Answered 4 questions from my students in the Q&A\n2022-12-20 Answered 19 questions from my students in the Q&A\n\nThis course is for you...\n...if you want to improve your market value as a Software Engineer and Security Expert. Imagine what could happen to your professional career if you could add API Security and OAuth skills to your CV!\nAPI Security experts and engineers who understand OAuth are in HIGH DEMAND, as companies expand their digital business. Plenty of opportunities are waiting for anyone who has the right skills.\nDo you want to write best-selling iPhone and Android apps?\nThe most popular mobile apps integrate with popular social APIs of Google, LinkedIn, Facebook, Paypal, and many more. If this is a well-known fact, why do app developers not just do it?\nMany app developers are afraid of complicated OAuth integrations. Security is in fact the biggest hurdle for most mobile app developers.\nWith the knowledge gained in this course, you can use the secret of the best app developers out there and finally integrate your app with social APIs.\nDo you want to start out on your own, as an entrepreneur, consultant, or freelancer?\nKnowing API Security and OAuth allows you to realize the big vision of your company in the field of mobile apps, cloud apps, and web APIs, such as Google, Paypal, and LinkedIn.\nDo you want to build exciting solutions with next-generation technology?\nWhether you are a web developer, mobile developer, or API developer, architect, or embedded developer for the Internet of Things, today you need to know OAuth to build state-of-the-art solutions.\nWhat does this course offer?\nThis course offers an introduction to API Security with OAuth 2.0. In 3 hours you will gain an overview of the capabilities of OAuth. You will learn the core concepts of OAuth. You will get to know all 4 OAuth flows that are used in cloud solutions and mobile apps.\nIf you have tried to read the official OAuth specification, you may get the impression that OAuth is complex. This course explains OAuth in simple terms. The four OAuth flows are visualized graphically using sequence diagrams. The diagrams are then animated so you get to know the interactions step by step and see the big picture of the various OAuth interactions. This high-level overview is complemented with a rich set of example requests and responses and an explanation of the technical details.\nWho should take this course?\nDo you believe OAuth is complicated? OAuth may seem complex with flows and redirects going back and forth. This course will give you clarity by introducing the seemingly complicated material by many illustrations. These illustrations clearly show all the involved interaction parties and the messages they exchange.\nDo you want to learn the OAuth concepts efficiently? This course uses many animated diagrams and sequence diagrams. A good diagram says more than 1000 words.\nDo you want to use OAuth in your mobile app? If you want to access resources that are protected by OAuth, you need to get a token first, before you can access the resource. For this, you need to understand the OAuth flows and the dependencies between the steps of the flows.\nDo you want to use OAuth to protect your APIs? OAuth is perfectly suited to protect your APIs. You can learn which OAuth endpoints need to be provided and which checks need to be made within the protected APIs.",
      "target_audience": [
        "This course is for beginners in API Security and OAuth.",
        "This course is not for you, if you already know the four basic OAuth flows and how they are used."
      ]
    },
    {
      "title": "Software Architecture: REST API Design - The Complete Guide",
      "url": "https://www.udemy.com/course/rest-api-design-the-complete-guide/",
      "bio": "Become a better Software Architect by designing professional, easy to use and attractive REST API",
      "objectives": [
        "Best Practices of professional REST API",
        "Correct use of HTTP Verbs, URL structure and response codes",
        "Using world-leading documentation engine to document your REST API",
        "Integrating Authentication & Authorization capabilities into REST API",
        "Performance techniques to speed up the response from the REST API",
        "Using Postman to test your REST API"
      ],
      "course_content": {
        "Welcome": [
          "Course Introduction",
          "Join The Software Architects Community",
          "Who Is This Course For?",
          "What We Will Talk About in This Course",
          "An Update for Udemy Students"
        ],
        "API Basics": [
          "Skip This Section If...",
          "What Is an API?",
          "API Types",
          "Importance of API",
          "Why Do You Need a Well Designed API?"
        ],
        "Web APIs": [
          "Skip This Section If...",
          "Web APIs",
          "SOAP",
          "REST",
          "GraphQL",
          "gRPC"
        ],
        "REST Basics": [
          "What is REST?",
          "Structure of REST API Request",
          "Structure of REST API Response"
        ],
        "Introduction to Beeceptor": [
          "What is Beeceptor?",
          "Using Beeceptor"
        ],
        "Introduction to Postman": [
          "What is Postman?",
          "Downloading Postman",
          "Using Postman"
        ],
        "HTTP Verbs": [
          "Introduction to HTTP Verbs",
          "The GET Verb",
          "The POST Verb",
          "The PUT Verb",
          "The DELETE Verb",
          "Additional Verbs",
          "Summary",
          "Test Your Knowledge: HTTP Verbs"
        ],
        "URL Structure": [
          "Introduction to URL Structure",
          "Domain Name",
          "The API Word",
          "Version",
          "Entity",
          "ID Parameter",
          "Sub Entities",
          "Query Parameters",
          "Plural vs Singular",
          "Summary",
          "Test Your Knowledge: URL Structure"
        ],
        "Response Codes": [
          "What Are Response Codes?",
          "Response Code Groups",
          "2XX",
          "4XX",
          "5XX",
          "Additional Codes",
          "Summary",
          "Test Your Knowledge: Response Codes"
        ],
        "REST API Documentation": [
          "Introduction to Documentation",
          "Introduction to OpenAPI",
          "OpenAPI Demo",
          "Overview of the Swagger Format",
          "Implementing OpenAPI"
        ]
      },
      "requirements": [
        "Understand the basic concepts of HTTP (URL, Verbs, Request, Response)",
        "Understand short code snippets (No coding experience required!)"
      ],
      "description": "Every Software Architect is going to design REST API these days.\nREST API is the de-facto standard of the Web API world, and all the major websites are having it - Twitter, Amazon, Facebook, Google and lots and lots more.\nIf you're designing a web app - the developers using it will expect it to have a REST API.\nBut, how can you make your REST API stand out? How can you convince the API users to actually use the API, and not just take a quick look at it and go away?\nIn today's world, where everyone expose REST API, it's not easy to attract developers. And if no developer will come - usage and monetization will be a problem.\nThe key to make your API stand out is to design a well thought-of API, one that is:\n1. Easy to use\n2. Easy to understand\n3. Consistent\n4. Performant\n5. Just Works\n\n\nA good Software Architect must be able to design such an API. In fact, designing the API is one of the most important tasks of the Software Architect.\nIn this comprehensive course, you'll get all the knowledge required for designing great, professional, REST API, using the techniques used by all industry-leading APIs.\nHere are some of the topics discussed in this course:\n- What is API, and what is Web API\n- The inner structure of REST Request and Response\n- Tools that can help you simulate REST API calls, such as Postman and Beeceptor\n- The special role of HTTP Verbs\n- How a REST API URL should look like\n- What are Response Codes and why do they matter\n- How to give your API a professional looking documentation\n- How to add authentication and authorization to your API\n- Performance techniques to improve your API responsiveness\n- Monitoring  and its importance\n- And lots more...\n\n\nBut that's not all...\nAt the end of this course, you'll be able to download the REST API Checklist, a comprehensive checklist that will guide you through the process of creating the most professional and attractive REST API. This checklist is your go-to-guide whenever you'll design REST API, and as a Software Architect - you'll design a lot of REST API...\n\n\nThis course takes you from the absolute basics of API to the most advanced topics, known only to few. Completing this course will give you all the knowledge required for building professional REST API, and, as a bonus, will put you in a great position when looking for your next job.\nNo other course covers this topic in such a comprehensive and thorough way. I've put all my 20+ years of experience with hundreds of clients in this course, and I'm sure you will greatly benefit of it.\n\n\n------------------------------------------------------------\nWhat do my students have to say about my courses?\n------------------------------------------------------------\n\"well done - The course was very practical\" - Sam\n\"Good explanation on the topics covered, \"Soft Skills\" section is a great addition of topics\" - Sergio\n\"[The course] given me the confidence to go out to the market and advertise myself as such [an Architect]\" - Mathew\n\"Life Changing\" - Arivazhagan\nAnd lots more...\n\n\n------------------------------------------------------------\nWho is this course for?\n------------------------------------------------------------\nAny person who is involved in web development, even system analyst, can profit from this course.\nThat includes:\n- Junior developers\n- Senior developers\n- Architects\n- Anyone else involved in web development\nIf you're not sure if this course is for you - drop me a note!\n\n\n------------------------------------------------------------\nWhat are the prerequisites for this course?\n------------------------------------------------------------\nIn this course we'll use tools simulating REST API server and client (Beeceptor and Postman), so no actual coding is required.\nStudents are expected, however, to be able to understand simple coding snippet (there are a few), and to know how the internet is working (HTTP protocol, Request / Response model, and so on).\n------------------------------------------------------------\nAbout Me\n------------------------------------------------------------\nI've been in the software industry for more than 20 years, and a Software Architect for more than 17 years, working with a variety of clients - Fortune 100 enterprises, start-ups, govt. entities, defense, telco, banking, and lots more.\nI'm an avid speaker and trainer, having trained thousands of students in various courses.\nI love what I do, and my greatest passion (well, besides my family...) is designing modern, practical, and reliable systems for my clients, using the best possible API.",
      "target_audience": [
        "Junior developers who would like to learn about API design",
        "Senior developers who need to solidify their API design knowledge",
        "Team Leaders working on complex systems",
        "Software Architects tasked with designing API-oriented system",
        "Anyone involved with Web Development"
      ]
    },
    {
      "title": "Build Data Visualizations with D3.js & Firebase",
      "url": "https://www.udemy.com/course/build-data-uis-with-d3-firebase/",
      "bio": "Learn how to use D3 (v5) & Firebase (Firestore) to create dynamic SVG data visualizations. Bar charts, pie charts...",
      "objectives": [
        "Learn D3 JS & Firebase (Firestore) from the ground up",
        "Create data-driven visualizations (graphs, charts, diagrams) with D3 JS",
        "Store (and retrieve) data in a real-time database called Firestore (from Firebase)",
        "Updata data visualizations in real-time with Firestore",
        "Create 3 projects with D3 and Firebase (Firestore)"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Examples of D3.js on the Web",
          "Text Editor & Packages",
          "Course Files",
          "Extra Resources"
        ],
        "SVG and D3 Basics": [
          "What are SVG's?",
          "Simple SVG Shapes",
          "SVG Paths",
          "Setting up D3.js",
          "Selecting Elements",
          "Appending Elements",
          "Method Chaining & Attributes",
          "Text SVG's",
          "Groups",
          "Section Summary"
        ],
        "Using Data with D3": [
          "Joining Data to an Element",
          "Using Arrow Functions",
          "Joining Data to Multiple Elements",
          "The Enter Selection",
          "External Data ( JSON )"
        ],
        "Scales & Bar Charts": [
          "Why We Need Linear Scales",
          "Creating a Linear Scale",
          "Band Scales",
          "Min, Max & Extent",
          "Creating a Bar Chart ( Groups & Margins )",
          "Creating a Bar Chart ( Axes )",
          "Inverting Scales",
          "Tick Formatting"
        ],
        "Firestore Database": [
          "What is a Firestore Database?",
          "Creating a Firestore Database",
          "Setting up the Firebase Config",
          "Getting Data from Firestore"
        ],
        "The D3 Update Pattern": [
          "Updating Visualizations",
          "Enter & Exit Groups",
          "The Update Pattern at a Glance",
          "Creating an Update Function",
          "D3 Interval Function",
          "The Exit Selection",
          "Firestore Realtime Data Updates",
          "Updating Our Data"
        ],
        "D3 Transitions": [
          "D3 Transitions Introduction",
          "Enter Transitions",
          "Update Transitions",
          "Merge and Refactor",
          "Tweens and Interpolation"
        ],
        "Project One - Donut Chart (Budget Planner)": [
          "Introduction & Setup",
          "HTML Template & Matetrialize",
          "Firestore Setup",
          "Adding Data to Firestore",
          "Pie Charts & Arcs",
          "Setting up a Pie Chart",
          "Arc Path Generator",
          "Realtime Data Setup",
          "Drawing the Enter Selection",
          "Ordinal Scales",
          "Project Challenge",
          "Project Solution",
          "Arc Enter Tween",
          "Arc Exit Tween",
          "Arc Update Tween",
          "Legends"
        ],
        "User Interaction & Events": [
          "Interactive D3 Visuals",
          "Event Listeners",
          "Mouseover Events",
          "Named Transitions (bug fix)",
          "Click Events",
          "Tooltips"
        ],
        "Project Two - Fitness Tracker (Line Graphs)": [
          "Project Preview & Setup",
          "HTML Template Setup",
          "Adding DOM Events",
          "Adding Data to Firestore",
          "Realtime Data Setup",
          "Graph Setup & Margins",
          "Time Scales & Axes Groups",
          "Domains & Axes",
          "Formatting Times & Axes",
          "Enter & Exit Selections",
          "Adding Dummy Data",
          "Filtering Data",
          "Line Path Generator",
          "Data Point Hover Effect",
          "Project Challenge (SVG Lines)",
          "Challenge Solution",
          "Project Summary"
        ]
      },
      "requirements": [
        "A basic to moderate level of JavaScript",
        "A basic to moderate level of HTML",
        "A basic to moderate level of CSS"
      ],
      "description": "Learn how to create great-looking data visualizations with D3.js\nD3.js is a powerful JavaScript library used to create data visualizations easily. In this course I'll teach you how to harness the power of D3 to create a variety of different data-driven visualizations such as bar charts, pie charts, line graphs,  bubble packs and tree diagrams.\nWe'll learn about D3 select, changing SVG attributes & styles, scales, axes, transitions, hierarchial data and much more...\nUse Firebase Firestore to update your D3.js diagrams in real-time\nI'll also teach you how to use Firestore (from Google Firebase) - a real-time NoSQL database in which we can store our data. We'll use this to power our D3.js visualizations in real-time (without updating the browser) and to make them interactive, fun & dynamic.\nWe'll also be creating 3 projects to put our D3 & Firebase skills to the test - first of all a money planner called Ninja Wonga, then a fitness tracker called The Dojo and finally a company employee tree diagram called Ninja Corp.\n...Why all the ninjas?\nI'm also known as the Net Ninja on YouTube, with over 200,000 subscribers and nearly 1000 free development tutorials. Feel free to check out my teaching style there before you a buy my course :).",
      "target_audience": [
        "Developers wanting to build data-driven UI diagrams with JavaScript",
        "Developers wanting to learn d3 and firebase",
        "Developers wanting to learn about data visualization",
        "Developers wanting to create SVG diagrams with d3",
        "Developers wanting to use firebase to drive their d3 diagrams"
      ]
    },
    {
      "title": "100 Days Of Code - 2025 Web Development Bootcamp",
      "url": "https://www.udemy.com/course/100-days-of-code-web-development-bootcamp/",
      "bio": "Learn web development from A to Z in 100 days (or at your own pace) - from \"basic\" to \"advanced\", it's all included!",
      "objectives": [
        "How the web works and how to get started as a web developer",
        "Learn web development in 100 days (optional - you can also pick a different pace)",
        "Build websites, web apps and web services (and understand what these \"things\" are)",
        "Build frontend user interfaces with HTML, CSS & JavaScript",
        "Build backend processes with NodeJS, Express & SQL + NoSQL databases",
        "Add advanced features like user authentication, file upload or database queries to websites"
      ],
      "course_content": {},
      "requirements": [
        "NO prior web development or programming knowledge is required! We'll start from scratch!",
        "You only need a computer or Mac to get started!"
      ],
      "description": "Join the most comprehensive web development bootcamp on Udemy!\nThis course teaches you web development and turns you into a web developer in 100 days - or allow you to refresh key essentials and expand your existing knowledge!\nBecoming a web developer is a great choice because web development opens up many career paths and web development skills are required in pretty much every business that exists today - and of course this demand will increase in the future!\nIt's not just about websites - it's also about \"behind the scenes\" services used by mobile apps like Uber or AirBnB. It's about rich web apps like Google Docs as well as browser games. And of course also about regular websites like Facebook, online blogs, online shops like Amazon and much, much more!\nHence it's no wonder, that web developers are in high demand! And, besides great job perspectives, as a web developer, you can of course also easily build your own digital business!\nThis Course Is For You!\nThis course will teach you web development from the ground up and thanks to the \"100 Days Of Code Challenge\" which is incorporated into this course (though it's optional to commit to it!), you can become a web developer in 100 days with help of this course!\nNo prior web development knowledge is required at all to get started with this course. We will explore all important basics, all fundamentals and all key concepts together, step by step.\nBut this course is also for advanced students who already do have web development knowledge! It's a deep-dive course and hence you will be able to expand your existing knowledge by diving deeper into key fundamentals like HTML, CSS or NodeJS and also by exploring advanced concepts like handling payments, building REST APIs or website security.\nSince it's a huge course, the course is built in a modular way. This means, that you can take it step by step, lecture by lecture but you can also jump right into the course sections that are most interesting to you. Of course, we recommend the \"step-by-step\" approach for beginners - simply because all the lectures and sections build up on each other. But as a more experienced developer, you can of course skip basics that aren't interesting to you!\nThe 100 Days Of Code Challenge\nWe built this course with the \"100 Days Of Code Challenge\" in mind - a challenge (not invented by us) that aims to keep you motivated to code for at least 1 hour per day for 100 days.\nSince this is a huge course (with around 80 hours of content!) it can be very overwhelming. And we know that many students never finish a course.\nThat's a pitty, because this course is packed with content, exercises, quizzes, assignments and demo projects! We build a browser-game, a blog, a travel website, an online shop and much, much more.\nTherefore, we provide clear guidance on how you can take this course from A to Z within 100 days by spending 1 to 2 hours per day watching videos and learning. As part of the course, you get access to a companion website that provides a clear structure and you also find annotations right in the course curriculum.\nOf course taking this \"100 Days\" challenge is totally optional though! You can take the course at your own pace as well and skip any content you're not interested in!\nTry It Risk-Free\nThis course comes with a 30 day money-back guarantee. If you find out that it's not for you, you can get your money back, no questions asked!\nWhat You Will Learn\nThis is a huge course, packed with content and it's the web development bootcamp we would have loved to have when we learned web development.\nHere's a summary of the key concepts we'll explore as part of this course:\nHow the web works\nCore technologies: HTML, CSS & JavaScript\nUnderstand how HTML documents are structured and how HTML elements are used correctly\nLearn core CSS concepts like the box model, flexbox, positioning, units and much more\nExplore advanced CSS concepts like building responsive websites, layouts, custom CSS properties, CSS grid & more\nLearn browser-side JavaScript from the ground up\nUnderstand what the \"DOM\" is and how you can manipulate it via JavaScript\nExplore browser / user events and how to handle them with JavaScript\nBuild tons of projects (e.g. a Tic-Tac-Toe browser game) to practice and fully understand all these technologies\nDive into backend development with NodeJS & ExpressJS\nLearn what NodeJS is and how it works\nBuild basic backend-driven websites with advanced concepts like dynamic routing or dynamic templates\nLearn how to work with databases - SQL & NoSQL (and what that is)\nPractice how to use SQL / NoSQL with NodeJS & Express\nDive into advanced concepts like authentication, website security, coding patterns, file uploads, user input validation and so much more!\nAgain: Build plenty of projects (e.g. a complete online shop, from the ground up!) to practice all advanced concepts as well\nLearn how to use third-party packages and services (e.g. Stripe for payments) in your websites\nMove on to more specialized, advanced concepts like building REST APIs\nExplore frontend JavaScript frameworks like Vue.js to build even more powerful web user interfaces\nAnd so much more - simply check out the full curriculum to get a complete list!\nWe'd love to start this journey with you, so let's get started!\nMax & Manuel",
      "target_audience": [
        "Beginner & advanced web development students",
        "Students who have absolutely no web development experience and want to become web developers",
        "Experienced web developers who need a comprehensive reference or want to dive into more advanced topics as well as refresh the basics",
        "All students that are interested in exploring the many course examples and exercises"
      ]
    },
    {
      "title": "Python Django Dev To Deployment",
      "url": "https://www.udemy.com/course/python-django-dev-to-deployment/",
      "bio": "Learn Python and build & deploy a real estate application using the Django framework & PostgreSQL",
      "objectives": [
        "Learn Python and it's core fundamental syntax",
        "Build a real estate application using the Django framework & Postgres",
        "Learn about apps, templates, models & migrations, admin customization & more",
        "Build virtual environments and deploy using Gunicorn and Nginx"
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome To The Course",
          "A Look At The Project",
          "What Is Django",
          "Resource Links"
        ],
        "Getting Setup": [
          "Python 3 Mac Install",
          "Python 3 Windows Install",
          "VSCode & Python Sandbox Setup"
        ],
        "Python Language Fundamentals (Optional)": [
          "Variables & Data Types",
          "Strings & Formatting",
          "Lists",
          "Tuples & Sets",
          "Dictionaries",
          "Functions",
          "Conditionals",
          "Loops",
          "Modules",
          "Classes",
          "Files",
          "Working With JSON"
        ],
        "Project Specs & Getting Started": [
          "Project Resources & Requirements",
          "A Look At The Bootstrap Theme",
          "Virtual Environment Setup",
          "Django Install & Project Setup",
          "Exploring The Initial Files & Running The Server"
        ],
        "Apps, URLs & Templates": [
          "Creating The Pages App",
          "Pages Templates & Base Layout",
          "Static Files & Paths",
          "Bootstrap Layout Markup",
          "Index, About & Linking",
          "Listings URLs & Template"
        ],
        "Models, Migrations & Admin": [
          "Install Postgres & PgAdmin",
          "Django Postgres Setup & Migrate",
          "Planning Our Schemas",
          "Create Listing Model",
          "Realtor Model & Run MIgrations",
          "Create Superuser & Register Models With Admin",
          "Media Folder & Adding Data",
          "Admin Logo & CSS",
          "Customize Admin Display Data"
        ],
        "View Methods, Display & Search": [
          "Pull Data From Listings Model",
          "Display Listings In Template",
          "Pagination, Order & Filter",
          "Home & About Page Dynamic Content",
          "Single Listing Page",
          "Search Form Choices",
          "Search Form Filtering",
          "Preserving Form Input"
        ],
        "Accounts & Authentication": [
          "Accounts App & URLs",
          "Register & Login Templates",
          "Message Alerts",
          "User Registration",
          "User Login",
          "Logout & Navbar Auth Links",
          "Dynamic Page Titles"
        ],
        "Contact Inquiries": [
          "Contacts App & Model",
          "Contacts Admin Customization",
          "Contact Form Prep",
          "Contact Form Submission",
          "Inquiry Check & Send Email",
          "Dashboard Functionality"
        ],
        "Django Deployment": [
          "Pushing To Github",
          "Droplet Setup & SSH Keys",
          "Server Security",
          "Software & Database Setup",
          "Virtual Env & File Pull",
          "Local Settings File",
          "Server Migrations & Data",
          "Gunicorn Setup & Config",
          "Nginx Setup",
          "Adding A Domain"
        ]
      },
      "requirements": [
        "Basic web development (HTML, Basic Programming fundamentals)"
      ],
      "description": "This is a very practical course where we take a list of requirements from a fictional company to build a real estate application using Django. We will take a basic html/css Bootstrap 4 theme and turn it into a real working application with an admin area to manage resources including property listings, realtors and contact inquiries. We also have a section on learning basic Python syntax\n\n\nWhat You Will Learn:\nBasic Python (lists, dictionaries, functions, conditionals, etc)\nSetup Virtual Environments\nInstall & configure Django\nCreate Django \"apps\"\nPostgres Setup (local and remote)\nSchema planning, models & migration\nAdmin customization\nBootstrap integration\nFull search functionality\nUser Authentication\nDeploy to Digital Ocean with Gunicorn & Nginx",
      "target_audience": [
        "Beginner Python developers that want to build a practical, real world project using the Django framework"
      ]
    },
    {
      "title": "The Bootstrap 4 Bootcamp",
      "url": "https://www.udemy.com/course/bootstrap-4-bootcamp/",
      "bio": "Learn to build beautiful responsive websites with the latest Bootstrap version (4.1.3), Flexbox, HTML5, and CSS3!",
      "objectives": [
        "Learn to create beautiful, responsive websites quickly and painlessly",
        "Use the latest in HTML5, CSS3, and Flexbox alongside Bootstrap 4",
        "Master every single Bootstrap component",
        "Use the Bootstrap 4 Grid system to create complex, fluid layouts",
        "Compile your own SASS to customize Bootstrap",
        "Dig into the crazy Bootstrap source files",
        "Learn the ins and outs of the new Bootstrap 4 utility classes"
      ],
      "course_content": {
        "Introduction": [
          "Course Welcome and Introduction",
          "Join The Community!",
          "Intro To Bootstrap",
          "Do Bootstrap Sites All Look The Same?!",
          "Comparing Bootstrap 3 and 4"
        ],
        "Environment Setup": [
          "Intro to My Editor: VSCode",
          "Using Emmet",
          "Quick Emmet Quiz (Optional)",
          "The Live Server Extension",
          "Optional: My Theme and Colors"
        ],
        "Getting Started With Bootstrap 4": [
          "GET THE CODE FOR THIS COURSE!",
          "The Bootstrap 4 Documentation",
          "Including Bootstrap 4",
          "Your First Exercise: Intro",
          "Your First Exercise: Solution"
        ],
        "Bootstrap 4 Basics": [
          "Colors",
          "Buttons",
          "Colors and Buttons Quiz",
          "Typography",
          "Jumbotrons",
          "Exercise Intro",
          "Exercise Solution"
        ],
        "Super Useful Utilities": [
          "Bootstrap 4 Breakpoints",
          "The Display Utility",
          "Borders and Shadows",
          "Margin and Padding",
          "Exercise Intro",
          "Exercise Solution"
        ],
        "Forms": [
          "Form Controls",
          "Checkboxes/Form Checks",
          "Custom Inputs",
          "Input Groups and Icons",
          "Inline Forms",
          "Exercise Intro",
          "Exercise Solution"
        ],
        "Navbars and Flexbox!": [
          "The Nav Component",
          "Flexbox and Navs",
          "OPTIONAL Flexbox Review",
          "Navbars",
          "More About Navbars",
          "Even More About Navbars",
          "Exercise Intro",
          "Exercise Solution"
        ],
        "The Magical Grid System": [
          "Intro To The Grid",
          "The Responsive Grid",
          "Grid Alignment",
          "Offsets and Nesting",
          "Forms And The Grid",
          "Exercise Intro",
          "Exercise Solution"
        ],
        "Cards and List Groups": [
          "List Groups",
          "Cards Basics",
          "Cards With Images",
          "Cards Layout"
        ],
        "Other Components": [
          "Badges",
          "Breadcrumbs",
          "Button Groups",
          "Pagination",
          "Progress Bars"
        ]
      },
      "requirements": [
        "You need to be familiar with the basics of HTML and some CSS. No expertise needed.",
        "You don't need any experience with Bootstrap 3 (or any other version)"
      ],
      "description": "Bootstrap is currently the single most used library on all of Github, beating out other tools like React and Angular! It's immensely popular, and with good reason: it makes creating responsive websites a breeze.\nThis course will take you from a complete beginner to a Bootstrap 4 expert in a matter of hours!  Or, if you already know Bootstrap 3, this course will serve a complete guide to all the new changes and improvements in Bootstrap 4. By the time we're done, you'll master every single component, the powerful grid system, and the brand-new utility classes. By then end of the course we'll be building complete, responsive websites that looks great on all devices. We'll learn to write and compile SASS to customize our own version of Bootstrap. In addition, since Bootstrap 4 is now built on top of Flexbox, we spend a lot of time learning the ins and outs of Flexbox along the way!\nWhat makes this course special\nMost Bootstrap courses follow a similar pattern: \"Watch me code.  Watch me do x.  Watch me do y\". There's never a chance for you to actually practice what you're watching.  This course is different.  Every section contains at least one exercise, activity, or quiz to get you practicing ASAP. Sometimes I show you mockups and you to re-create the layout on your own.  Other times, I give you deliberately broken code and ask you to fix it.  All the activities are based on my experience teaching bootstrap in classroom and are designed to keep you engaged and learning :)\nI've put a ton of work into making this course the best Bootstrap course out there.  Watch a preview video or sign up and see why Bootstrap is currently the most popular front-end library around.  It makes developing good-looking websites incredibly easy (and kind of fun!).",
      "target_audience": [
        "Anyone who wants to master Bootstrap 4 to build responsive and beautiful websites quickly",
        "Anyone who knows Bootstrap 3 and is looking to upgrade their knowledge to Bootstrap 4"
      ]
    },
    {
      "title": "Git & GitHub - The Practical Guide",
      "url": "https://www.udemy.com/course/git-github-practical-guide/",
      "bio": "Learn Git & GitHub and master working with commits, branches, the stash, cherry picking, rebasing, pull requests & more!",
      "objectives": [
        "Learn all you need to work with Git, including all about repositories, commits, branches & more",
        "Understand how Git works behind the scenes and understand local & remote as well as local-tracking & remote-tracking branches",
        "Dive into advanced Git features like merging, rebasing, the stash and learn how to manage merge conflicts",
        "Bring Git's power to the cloud with GitHub",
        "Learn how to collaborate in projects via Git & GitHub in teams & organizations",
        "Learn how to contribute to open-source projects via forks & pull requests",
        "Efficiently manage projects with Git & GitHub"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to this Course!",
          "What is Git?",
          "What is GitHub?",
          "Join Our Learning Community!",
          "Course Content",
          "How to Get the Most out of this Course!",
          "Course Slides",
          "Course Setup"
        ],
        "Optional: Mac Terminal & Windows Command Prompt Introduction": [
          "Module Introduction",
          "The Command Line - What & Why?",
          "Comparing the Mac & Windows Command Line",
          "Please Read! Windows & Mac Users",
          "Mac Terminal - The Basics",
          "Accessing Folders",
          "Absolute vs Relative Paths",
          "Creating & Deleting Files",
          "Introducing Flags and Removing Data",
          "Copying & Moving Files & Folders",
          "Mac Terminal - Core Commands Overview",
          "Windows Command Prompt - The Basics",
          "Absolute vs Relative Paths",
          "Creating & Deleting Files & Folders",
          "Copying & Moving Files",
          "Windows Command Prompt - Core Commands Overview",
          "Useful Resources & Links"
        ],
        "Version Management with Git - The Basics": [
          "Module Introduction",
          "Theory - How Git Works",
          "Theory: Working Directory vs Repository",
          "Theory - Understanding Branches",
          "Please Read! Windows & Mac Users",
          "Installing Git on Windows",
          "Installing Git on MacOS",
          "Installing Visual Studio Code",
          "Initializing the Repository & Creating the First Commit (\"git init\" & \"git commi",
          "Please Read: Exiting the Log",
          "Diving Deeper Into Commits with \"git log\"",
          "Understanding & Creating Branches",
          "Merging Branches - The Basics",
          "Understanding the HEAD",
          "The \"detached HEAD\"",
          "Branches & \"git switch\" (Git 2.23)",
          "Deleting Data - An Overview",
          "Deleting Working Directory Files",
          "Undoing Unstaged Changes",
          "Undoing Staged Changes",
          "Deleting Commits with \"git reset\"",
          "Deleting Branches",
          "Committing \"detached HEAD\" Changes",
          "Understanding .gitignore",
          "Wrap Up & Basic Commands Overview",
          "Assignment - Practicing the Git Basics",
          "Useful Resources & Links"
        ],
        "Diving Deeper Into Git": [
          "Module Introduction",
          "Understanding the Stash (\"git stash\")",
          "Bringing Lost Data Back with \"git reflog\"",
          "Combining Branches - What & Why?",
          "Understanding Merge Types",
          "Applying the Fast-Forward Merge",
          "The Recursive Merge (Non-Fast-Forward)",
          "Rebasing - Theory",
          "Applying \"git rebase\"",
          "Handling Merge Conflicts",
          "Merge vs Rebase vs Cherry Pick",
          "Undestanding \"git cherry-pick\"",
          "Working with Tags (\"git tag\")",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "From Local to Remote - Understanding GitHub": [
          "Module Introduction",
          "What is GitHub?",
          "From Local to Remote Repository - Theory",
          "Creating a GitHub Account & Introducing GitHub",
          "Creating a Remote Repository",
          "Connecting Local & Remote Repositories",
          "Understanding the Personal Access Token",
          "MacOS Users Only: Please Read",
          "Pushing a Second Commit",
          "From Local to Remote - Understanding the Workflow",
          "Remote Tracking Branches in Practice",
          "Understanding Local Tracking Branches",
          "Creating Local Tracking Branches",
          "Remote & Tracking Branches - Command Overview",
          "Cloning a Remote Repository",
          "Understanding the Upstream",
          "Deleting Remote Branches & Public Commits",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "GitHub Deep Dive - Collaboration & Contribution": [
          "Module Introduction",
          "The 4 GitHub Usecases",
          "Understanding GitHub Account Types",
          "Changing the Repository Type from Public to Private",
          "Pushing Commits to a Public Repository",
          "How GitHub Manages Account Security",
          "Understanding & Adding a Collaborator to a Private User Account",
          "Collaborating in Private Repositories",
          "Comparing Owner & Collaborator Rights",
          "Limiting Interactions",
          "Introducing Organizations",
          "Creating an Organization",
          "Exploring Member Repository Permissions",
          "Adding Outside Collaborators",
          "Adding Organization Members",
          "Failing to Manage Access for Individual Repositories",
          "Introducing Teams",
          "Managing Team Repository Access Efficiently",
          "Understanding Forks & Pull Requests",
          "Forking a Repository",
          "Pull Requests in Practice",
          "Opening & Closing Issues",
          "Working with GitHub Projects",
          "Creating a README File in a Repository",
          "Presenting Yourself as Developer on GitHub",
          "About GitHub Stars",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Real Project Example: Git & GitHub Applied": [
          "Module Introduction",
          "Preparing the Project",
          "Project Setup",
          "Creating our First Commit Locally",
          "Changing the ReactJS Project Code",
          "Pushing the Code to the Owner's Remote Repository",
          "Cloning the Project & Changing the Code",
          "Pushing the Commit & Why it Fails",
          "Adding a Collaborator",
          "Creating the Personal Access Token & Pushing Successfully",
          "Merging the Owner Branches",
          "Fixing Merge Conflicts",
          "Accessing Code via Forks",
          "Contributing to the Project by Improving the Code",
          "Creating the Pull Request",
          "Accepting the Pull Request",
          "Useful Resources & Links"
        ],
        "Course Roundup": [
          "Course Roundup"
        ]
      },
      "requirements": [
        "NO prior Git or GitHub or web development knowledge is required",
        "An email address is required to create a (free) GitHub account",
        "The course can be attended on Mac & Windows computers"
      ],
      "description": "No matter if you're just getting started with (web) development, if you're applying for a developer job or if you just need to refresh your knowledge - version control is a core skill you need to succeed as a developer!\nGit (a version control system) and Github (a cloud provider for Git managed projects) form an outstanding combination to provide the best possible experience to create and maintain a clearly structured project history!\nThis course guides everyone (no prior knowledge is required!) through the core steps to use these tools in your daily projects with ease.\nWhat is Version Control?\nSaving & accessing data and tracking changes is what version control is all about. No matter if you're working on a private or a professional development project, code evolves, changes and continuously gets improved. A clean version management structure is therefore key to successfully manage the progress of your projects.\nWhat is Git?\nGit is a 100% free version management tool, specifically created for and used by developers all over the world to manage project code history locally on their machines (Windows, macOS, Linux/Unix).\nWhat is GitHub?\nGitHub is an online service, it is also free for many use cases (an account is all you need) and brings Git's local \"file-tracking\" strengths to the cloud. Storing project code online, updating code, accessing other team members' code or collaborating on large scale projects inside your organization - all possible with the help of GitHub!\nWhy Should I Know these Tools?\nVersion control is key to manage projects efficiently so not knowing Git and GitHub makes your daily developer life a lot more complicated. The same apply if you're currently looking for a new job in the industry, version control is required in any developer projects these days, so not knowing Git & GitHub puts you behind your competition!\nAlthough Git and GitHub are user friendly, both come with their own logic and \"language\". Getting started can therefore be a bit cumbersome and this is where this course comes into play!\nWhat do I Learn in this Course?\nThis course starts at the very basics, no prior Git or GitHub knowledge is required! You'll learn how to use Git and how to write Git commands in the Mac Terminal or the Windows Command Prompt (optional refreshers on both are also part of the course).\nStarting with the first initialization of a so-called Git repository, we'll build up your knowledge step-by-step and understand the what & why behind concepts like branches, commits, the staging area, merging & rebasing, cloning, pushing & pulling branches and a lot more!\nWhat's Inside this Course?\nAn optional Command Line Crash Course for both Windows & MacOS users\nGit Download & Installation\nGit Theory - Working Directory, Staging Area (Index) and Repository explained\nCreating Git Repositories\nWorking with Commits\nUnderstanding Branches\nUnderstanding the HEAD and the detached HEAD\nNewly Introduced Git Commands with Git Version 2.23\nDeleting Data (Staged & Unstaged, Commits & Branches)\nIgnoring Files\nThe Stash\nMerging, Rebasing and Cherry Picking\nBringing Back Deleted Data with the Reflog\nConnecting Local Git Repositories to Remote GitHub Repositories\nGit Push & Pull (+ Fetch)\nLocal, Remote Tracking & Remote Branches\nGitHub Collaborators & Contributors\nForks & Pull Requests\nGitHub Issues\nGithub Projects\nand so much more!\nAll covered, explained and applied in easy to understand examples in the course!\n-\nIn this course we'll find answers to questions like:\n\"How can I delete my last commit?\"\n\"What is the Stash?\"\n\"What is the difference between a merge and a rebase (and what is cherry-picking actually)?\"\n\"How to bring back a deleted commit?\"\n\"What is the difference between a local tracking branch and a remote tracking branch?\"\n-\nWhat are you waiting for, jump and board and let's GIT started :)",
      "target_audience": [
        "Anybody who wants to learn what version management is & how it can help to organize your code and projects efficiently",
        "(Web) developers who want to learn new skills to increase their efficiency",
        "Anybody who wants to master Git & GitHub for private or professional projects"
      ]
    },
    {
      "title": "Kids Coding - Introduction to HTML, CSS and JavaScript!",
      "url": "https://www.udemy.com/course/kids-coding-introduction-to-html-css-and-javascript/",
      "bio": "Your kid could be the next Zuckerberg!",
      "objectives": [
        "Learn the basics of computer programming",
        "Learn HTML",
        "Learn CSS",
        "Learn JavaScript",
        "By the end of the course, students will know the basics of a valuable life long skill"
      ],
      "course_content": {},
      "requirements": [
        "An internet connection",
        "An up to date web browser",
        "A word processor like notepad"
      ],
      "description": "Please note that this course is only to be purchased by parents. Not Children.\nReading for parents\nDo your kids spend too much time on the computer, phone or tablet? Don't you wish they could do something more productive? Why not get them to learn a life long valuable skill that will lead them into a career that pays 2 times the national average?\nProgramming is the new math. The average computer programmer makes 78k a year and there will always be a need for programmers. The only problem is that all of the educational courses are not tailored towards the learning styles of children. Most of the documentation is geared towards people over 18.\nThis course shows kids how to code by adapting the material to their learning styles. There are animated lectures, informative screencasts and tests. The first portion of the course introduces a lot of data and terminology quickly. You'll jump right in. No second is wasted in this action-packed, captivating course.\n\"SO FUN!!\"\nMore and more people are learning to code, so do you want your kids to not have the same opportunities as others? This course offers your kids a competitive advantage.\nEmployers look for technical skills and applicants that can code are more attractive to hire. Even if the job isn't technical it always helps to have that technical knowledge to communicate with the technical team. Personally, I like to hire people with programming skills. If they are artists, video editors, or social media marketers, I generally prefer to hire people with programming experience.\nAbout me, the instructor\nMy name is John Bura and I have run the software company Mammoth Interactive. We have had a ton of sales on our software which includes XBOX 360, iPad and iPhone games. On top of this I have been teaching people full time since I was 17. With the combination of teaching experience and real world experience, I have a truly unique experience that you can't find anywhere else. The knowledge I give out is from first hand knowledge of the industry and years of teaching experience.\n\"This is a great course for beginner programmers. This doesn't have to be for just kids, but for adults too.\"\nThank you for considering to purchase my course. Even if you choose to not buy it I wish you and your family a happy road to success.",
      "target_audience": [
        "Ages 6 and up",
        "Everybody is welcome to attend if they like child oriented products"
      ]
    },
    {
      "title": "Learn JavaScript - For Beginners",
      "url": "https://www.udemy.com/course/learn-javascript-for-beginners-v/",
      "bio": "Learn how to Code Web Pages using JavaScript",
      "objectives": [
        "Document Object Model (DOM)",
        "JavaScript Variables & Constants",
        "JavaScript Arithmetic Operators",
        "JavaScript Operator Precedence",
        "JavaScript Data Types",
        "JavaScript Objects",
        "JavaScript Special Characters",
        "JavaScript Functions",
        "JavaScript Arrays",
        "JavaScript Sorting & Slicing Arrays",
        "JavaScript Booleans, Loops, For-In, For, Do-While, While Loops",
        "JavaScript Functions",
        "JavaScript Events"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Course: Learn JavaScript - For Beginners\nLearn how to Code Web Pages using JavaScript\nStudents learn to add dynamic, interactivity to web pages using JavaScript.\nWe start with exploring the fundamental concepts, including JavaScript placement and output functions. We then transition to working with arithmetic operators, math functions, arrays, sorting, conditional statements and loops. Students also learn to work with events and functions.\nThe course includes several hands-on exercises to help students master this essential scripting language.\nWhat you'll learn - Overview:\nDocument Object Model (DOM)\nJavaScript Variables & Constants\nJavaScript Arithmetic Operators\nJavaScript Operator Precedence\nJavaScript Data Types\nJavaScript Objects\nJavaScript Special Characters\nJavaScript Functions\nJavaScript Arrays\nJavaScript Sorting & Slicing Arrays\nJavaScript Booleans, Loops, For-In, For, Do-While, While Loops\nJavaScript Functions\nJavaScript Events\nKey Concepts:\nDocument Object Model (DOM)\nJavaScript Introduction\nJS Placement\nExternal JavaScript\nJavaScript Output\nJavaScript InnerHTML\nJavaScript Commenting\nJavaScript Constants\nJavaScript Variables Introduction\nJavaScript Assignment Operator\nJavaScript Arithmetic Operations\nJavaScript Arithmetic Operations Continued\nJavaScript Operator Precedence\nJavaScript Data Types\nJavaScript Objects\nJavaScript Object Output\nJavaScript Strings\nJavaScript String Length\nJavaScript Special Characters\nJavaScript Random Numbers\nJavaScript Min and Max Function\nJavaScript Math Round Function\nJavaScript Arrays\nJavaScript Array Attributes\nJavaScript Arrays - Pop - Push - Shift - Unshift\nJavaScript Changing and Deleting Elements\nJavaScript Splicing an Array\nJavaScript Sorting an Array\nJavaScript Joining Arrays\nJavaScript Conditional Statements\nJavaScript Comparisons\nJavaScript Booleans\nJavaScript For Loops\nJavaScript For-In Loop\nJavaScript While Loops\nJavaScript Do-While Loop\nJavaScript Break and Continue\nJavaScript Functions\nJavaScript Events\nJavaScript Project 1 - BG Color Changer\nJavaScript Project 2 - Photo Gallery\nJavaScript Project 2 - Completion\nYour Instructor:\nYouAccel is a leading provider in online training, offering courses across numerous industries from IT and Development to Business, Marketing, Design, and Productivity.\nThe courses can be taken at one's own pace and are offered at several levels including beginner, intermediate and advanced. Online courses are also compatible with any mobile device for the ultimate in convenience.",
      "target_audience": [
        "Beginner Web Developers who want to Learn JavaScript"
      ]
    },
    {
      "title": "Svelte.js - The Complete Guide (incl. Sapper.js)",
      "url": "https://www.udemy.com/course/sveltejs-the-complete-guide/",
      "bio": "Build high-performance web applications with SvelteJS - a lightweight JavaScript compiler",
      "objectives": [
        "SvelteJS from scratch, with zero knowledge assumed",
        "All the theory and practical applications of Svelte",
        "Core concepts and advanced techniques to build Svelte applications"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Why Svelte?",
          "What is Svelte?",
          "Join our Online Learning Community",
          "Setting Up a First App & The Course Project",
          "Writing Some Svelte Code",
          "Course Outline",
          "How To Get The Most Out Of The Course",
          "Course Resources"
        ],
        "Base Syntax & Core Features": [
          "Module Introduction",
          "Using Curly Braces & Understanding the Core Syntax",
          "Reactive Variables",
          "More Reactivity",
          "Binding to Element Properties",
          "Two-Way Binding Shortcut",
          "Using Multiple Components",
          "Components & Communication via Props",
          "Diving Deeper into Bindings",
          "Using Self-Extending Properties",
          "Outputting HTML Content",
          "A XSS Example",
          "Setting Dynamic CSS Classes",
          "Time to Practice: The Basics",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Working with Conditionals & Loops": [
          "Module Introduction",
          "Using \"if\" Statements in HTML",
          "if, else & else-if",
          "Outputting Lists with \"each\"",
          "\"each\", \"else\" & Extracting the Index",
          "Lists & Keys",
          "Time to Practice: Conditionals & Loops",
          "A Closer Look at List Keys",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "A Closer Look at Reactivity": [
          "Module Introduction",
          "Updating Arrays & Objects Immutably",
          "Understanding Event Modifiers",
          "Using Inline Functions",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Course Project - First Steps": [
          "Module Introduction",
          "Project Setup & A First Component",
          "Different Ways of Mounting Components",
          "How to Embed Widgets",
          "Adding Data",
          "Adding a New Component (MeetupItem)",
          "Working with Different Component Types",
          "Passing Data Into Components",
          "Adding a \"MeetupGrid\" Component",
          "Adding New Meetups via a Form",
          "Creating a \"TextInput\" Component",
          "Adding a Custom \"Button\" Component",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Diving Deeper Into Components": [
          "Module Introduction",
          "Understanding the Different Component Types",
          "Component Communication Overview",
          "Event Forwarding",
          "Emitting Custom Events",
          "How to Extract Event Data",
          "Using Spread Props & Default Props",
          "Working with Slots",
          "Named & Default Slots",
          "Example: Opening & Closing a Modal",
          "Using Slot Props",
          "The Component Lifecycle - Theory",
          "Creation & Update Lifecycle Hooks in Action",
          "Using \"tick()\"",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Course Project - Components Deep Dive": [
          "Module Introduction",
          "Adding Default Props",
          "Communication via Custom Events",
          "Utilizing Slots",
          "Creating an \"EditMeetup\" Component",
          "Communicating Between Components",
          "Time for More Slots!",
          "Adding a Re-Usable \"Modal\" Component",
          "Finishing the \"Modal\" Component",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Working with Bindings & Forms": [
          "Module Introduction",
          "Two-Way Binding Refresher",
          "Understanding Custom Component Bindings",
          "Relying on Automatic Number Conversion",
          "Binding Checkboxes & Radio Buttons",
          "Binding <select> Dropdowns",
          "Binding to Element References",
          "Binding to Component References",
          "Validating Forms & Inputs",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Course Project - Bindings & Forms": [
          "Module Introduction",
          "Exploring Different Validation Solutions",
          "Adding Validation & Error Output to the \"TextInput\" Component",
          "Adding Some Validation Logic",
          "Finishing \"TextInput\" Validation",
          "Validating the Overall Form",
          "Improvements & Wrap Up",
          "Useful Resources & Links"
        ],
        "Managing State & Data with Stores": [
          "Module Introduction",
          "What's the Problem?",
          "Creating a Writable Store & Subscribing",
          "Updating Store Data",
          "Stores and Stateful & Presentational Components",
          "Managing Store Subscriptions",
          "Using Autosubscriptions",
          "A Second Store!",
          "Subscribing for a Short Period",
          "Understanding Readable Stores",
          "Unlimited Power with Custom Stores",
          "Wrap Up",
          "Derived Store & Store Bindings",
          "Useful Resources & Links"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge is required",
        "NO prior knowledge about SvelteJS or any other JavaScript framework or library is required"
      ],
      "description": "Svelte.js is a modern JavaScript compiler that allows you to write easy-to-understand JavaScript code which is then compiled to highly efficient code that runs in the browser.\nYou'll write your frontend application using normal JavaScript, following specific rules laid out by Svelte (which are of course taught in this course). As a result, the Svelte compiler will produce a small and highly optimized JavaScript bundle which can be deployed.\nIn this course, you learn all about Svelte, how it works, its core features and how to run your final app on a real server!\nSvelte.js is a tool for building highly reactive, modern user interfaces for the web - and it's a great alternative to JavaScript frameworks and libraries like React.js, Angular or Vue.\nWhat will you learn?\nWhat is Svelte and why would you use it?\nAll the core features and base syntax\nHow to render conditional and list content\nHow to write reactive and fast web applications\nAll about components, how to pass data around and how to create re-usable building blocks\nHow to efficiently manage data in your application via Svelte stores\nHow to reach out to a backend server and send + fetch data\nHow to pre-render your app on a server and improve SEO\nIs this course for you?\nSvelte is a popular alternative to React.js, Angular and Vue and learning it will benefit any frontend web developer.\nYou don't need to know these frameworks to learn Svelte though - but if you do know them, you'll learn about an interesting alternative which might allow you to build your web projects with less code (and get an even faster app along the way!).\nYou need NO advanced JavaScript knowledge, basic knowledge will do.\nIf you're interested in building modern, reactive user interfaces that load quickly and run fast, SvelteJS is a tool you shouldn't overlook!\nWhat's in the course?\nLearn Svelte from scratch - zero knowledge assumed!\nTheory and practice modules\nA complete course project (the \"meetup planner\")\nAssignments and tasks\nAll source code is attached to lectures and modules\n30 day trial phase - get your money back with no questions asked if you're not happy!\nWho's teaching you?\nMy name is Maximilian Schwarzmüller and I'm teaching a broad variety of web & mobile development topics here on Udemy. I immediately loved Svelte when I learned about it since it fills an important gap between vanilla JavaScript and frameworks like Angular, React or Vue.\nIt can be used to replace these frameworks or to enhance apps built with them - and I simply love lightweight apps and clean syntax rules.",
      "target_audience": [
        "Beginner and advanced JavaScript students who are interested in writing high-performance frontend applications",
        "Students who already know modern JavaScript frameworks and want to learn about a lightweight, production-ready alternative"
      ]
    },
    {
      "title": "Build ASP.NET Core Web API - Scratch To Finish (.NET8 API)",
      "url": "https://www.udemy.com/course/build-rest-apis-with-aspnet-core-web-api-entity-framework/",
      "bio": "Use C# and Build an ASP.NET Core Web API with Entity Framework Core, SQL Server, Authentication, Authorization | .NET8",
      "objectives": [
        "Learn, Understand and Create ASPNET Core Web API From Scratch using .NET8",
        "Building scalable REST APIs from scratch using ASPNET CORE and C#",
        "Learn and Apply Entity Framework Core to perform CRUD operations on a SQL Server database",
        "Use Entity Framework Core in a code first approach",
        "Understand and Apply the Repository Pattern in ASPNET Core Web API",
        "Use Domain Driven Design (DDD) approach to create domain first models and project",
        "Understand RESTful Principles and Apply them in ASPNET Core Web API",
        "Understand Best practices and Clean Coding Techniques, Know Shortcuts and Tips and Tricks",
        "Add Validations In ASPNET CORE Web API",
        "Use popular third-party libraries such as AUTOMAPPER",
        "Understand and Use Interfaces, Inheritance, Dependency Injection etc",
        "Understand and Implement Authentication and Role based Authorization to Authenticate and Authorize the ASPNET Core Database",
        "Create JWT tokens to Authenticate API",
        "Test ASPNET Core Web API using Swagger and Postman",
        "Use ASPNET Core Identity in ASPNET Core Web API to Authenticate and add Role based Authorization",
        "Learn Filtering, Sorting and Pagination in ASPNET Core Web API"
      ],
      "course_content": {
        "Introduction to building ASP.NET Core Web APIs using .NET6": [
          "Introduction to building ASP.NET Core Web APIs using .NET8",
          "Prerequisites",
          "Setting up development environment",
          "Download and Install Visual Studio 2022",
          "Install .NET SDK and .NET Runtime",
          "Install SQL Server Management Studio",
          "Getting help",
          "Complete Source Code & GITHUB Repository Link",
          "[OLD Content] Complete Source Code and GITHUB Repository"
        ],
        "Create New ASP.NET Core Web API & Domain Models": [
          "Introduction",
          "Create New ASPNET Core Web API",
          "Understand ASP.NET Core Web API and File Structure",
          "Understand REST and HTTP Verbs",
          "Routing In ASP.NET Core Web API",
          "Running and Calling ASP.NET Core Web API",
          "Understanding Our Domain (Domain Driven Development)",
          "Create Domain Models",
          "Adding Entity Framework Core Packages",
          "Creating the DBContext Class",
          "Adding ConnectionString To The Database In Appsettings.Json",
          "Understanding Dependency Injection & Injecting DbContext Into Our Application",
          "Run EF Core Migrations",
          "Quiz For Section 2"
        ],
        "Create New Controller - Regions Controller and CRUD Operations / Action Methods": [
          "Introduction",
          "Create New Controller (Regions Controller)",
          "Get All Regions Action Method",
          "Get Region By Id Action Method",
          "DTOs and Domain Models",
          "Change Methods To Use DTOs",
          "Create Region Action Method",
          "Update Region Action Method",
          "Delete Region Action Method"
        ],
        "Asynchronous Programming, Repository Pattern and Automapper": [
          "Introduction",
          "Asynchronous Programming and Implement Async Await In our Methods",
          "Repository Pattern and Benefits",
          "Implement Repository Pattern In ASP.NET Core Web APIs",
          "Add Other Methods To Repository",
          "Automapper Introduction",
          "Implement Automapper"
        ],
        "Functionality For Walks - Create, Read, Update, Delete For Walks": [
          "Introduction",
          "Seeding Data Using Entity Framework Core",
          "Creating Walks Controller and Create New Walk Action Method",
          "Get All Walks Action Method",
          "Navigation Properties In Entity Framework Core",
          "Get Walk By Id Action Method",
          "Update Walk Action Method",
          "Delete Walk Action Method"
        ],
        "Validations in ASP.NET Core Web API": [
          "Introduction To Model Validations",
          "Adding Model Validations To Endpoints",
          "Custom Validate Model Attribute"
        ],
        "Filtering, Sorting, Pagination in ASP.NET Core Web API": [
          "Introduction",
          "Seeding Data in SQL Server",
          "Filtering",
          "Sorting",
          "Pagination"
        ],
        "Securing our ASP.NET Core API - Authentication and Authorization - JWT Tokens": [
          "Introduction",
          "Authentication Flow",
          "Setting Up Authentication - Install Nuget Packages",
          "Testing Authentication Without JWT Token",
          "Setting Up Identity DbContext",
          "Seeding Roles",
          "Run EF Core Migrations To Create Identity Database",
          "Setting Up Identity",
          "Create Auth Controller and Register Action Method",
          "Create Login Action Method",
          "Create JWT Token in ASP.NET Core Web API",
          "Inject TokenRepository and Create Token",
          "Facing 401 Unauthorized?",
          "Role Based Authorization",
          "Add Authorization To Swagger"
        ],
        "Image Upload In ASP.NET Core Web API": [
          "Introduction",
          "Create Domain Model For Image Upload",
          "DbContext changes and Migrations For Image Upload",
          "New Controller and Action Method for Image Upload",
          "Image Upload Repository Implementaion",
          "Serving Static Files Through ASPNET Core Web API"
        ],
        "Advanced Functionality in ASP.NET Core Web APIs": [
          "Introduction To Logging",
          "Add Logging to Console in ASP.NET Core Web API",
          "Add Logging to Text File In ASP.NET Core Web APIs",
          "Global Exception Handling In ASP.NET Core Web APIs"
        ]
      },
      "requirements": [
        "Hello world experience in ASPNET Core",
        "Beginner knowledge about APIs and their use",
        "3-6 months experience working with ASPNET Core and C#"
      ],
      "description": "THIS COURSE HAS BEEN UPDATED TO THE LATEST VERSION [.NET8]\nThe course is compatible with both versions - .NET7 & .NET8\n\n\n\n\nThis is a complete guide to creating ASP.NET Core Web API  using  .NET8, Entity Framework Core (EF Core), and SQL Server database.\nWith over 11000 student enrolments and more than 2000 5-star reviews, this course has helped students from all backgrounds to learn and implement ASP.NET core Web API.\nThis course is for all skill levels and best suits beginners and intermediate developers who have gained knowledge in C# and ASP.NET Web MVC and want to use their skills to learn ASP.NET Core and specifically ASP.NET Core Web API.\n\n\nIn this ASP.NET Core WEB API course, we will use .NET8 and create a REST WEB API.\nDuring this course, you will gain so much experience creating ASP.NET Core APIs and endpoints and by the end, I am confident that you will gain enough practical knowledge to create your own ASP.NET Web APIs.\nWe will create a very engaging Web API in which we will create the regions and walks of New Zealand and we will create an ASP.NET Core Web API so that clients of this API can consume this data.\nWe will start with learning what are the principles of REST and understand the files that ASP.NET Core creates as part of a new project.\nThen we will create and understand our domain and domain models.\nThen we will go ahead and install Entity Framework Core and using EF Core migrations we will create our SQL Server Database.\nWe will then create controllers for our API and test them using Swagger UI.\nWe will also understand and implement the concepts of Domain and Data models and use clean coding techniques to build our ASP.NET CORE Web API.\nWe will use a famous third-party library called Automapper to map objects inside our API.\nWith all of this, we will go on and create CRUD operations for our Web API. We will perform Create, Read, Update, and Delete operations on our API using the Repository Pattern in ASP.NET Core API.\nThen we will understand and implement Authentication and Authorization in ASP.NET CORE Web APIS using JWT tokens and see how we can generate JWT tokens using our API (Server) so that we can Authenticate and Authorize the clients of our application.\nWe will learn more advanced level stuff by implementing Filtering, Sorting, and Pagination in our ASP.NET Core Web API.\nWe will use Postman and Swagger to test our Authentication and Authorization.\nWe will also use ASP.NET Core Identity in our API where we Register users and assign roles to them.\n\n\nIn this course ASP.NET Core Web API course, you will learn and implement:\nUnderstand REST APIs by creating a Web API using ASP.NET Core and .NET 7\nUnderstand REST Principles\nUnderstand Dependency Injection and Benefits\nCreating New ASP.NET Core Web API Project\nUnderstand .NET8 WEB API Project In .NET 8 and C#\nLearn And Install Entity Framework Core (EF Core) In ASP.NET Core Web API Project\nLearn Entity Framework Core Migrations\nUnderstand the difference between Domain models and DTOs\nUnderstand Domain Models and Repository Pattern\nUse Swagger To Test ASPNET Core WEB API project\nLearn How To Map Models To One Another Using Automapper\nLearn Asynchronous Programming (Async Await)\nValidate ASP.NET Core WEB API\nSecure your ASP.NET Core Web API using Microsoft Identity by adding Authentication and Role-Based Authorization to your REST API.\nAdd JWT Authentication to ASP.NET Core Web API by creating JWT Tokens for API Clients.\nUnderstand and Add Authentication and Authorization To ASP.NET Core API and Create Read and Write Users To Test this Via Postman\nIncorporate ASP.NET JWT Authentication Into SwaggerUI\nAdd advanced functionality like Filtering, Sorting, and Pagination to your ASP.NET Core Web API.\n\n\n\n\nKnow me more\nI am Sameer, a professional software developer with over 15 years of industry experience. I love to educate myself and others and that's why I started with my YouTube channel where I have a loving audience. I create content for software developers like you so that I can share my knowledge.\n\n\nStatistics\nOver 27000 students on Udemy\nOver 4000  Reviews on Udemy\nOver 2.4 Million Views on YouTube\n\n\nSome of the reviews\nHands down the best way to learn this technology stack. Sameer did a good job here and I hope he will be blessing us with more interesting Angular projects in the future! Maybe a sample e-commerce or Hotel Booking app :)\nAlthough I didn't have any prior experience with C# OR .Net Core MVC, I was still able to grasp a lot from this course, all thanks to the instructor!\nA very detailed and extensive course! clear voice and great detail to topics.\nand 1000s of more reviews on my courses.\n\n\n\nMoney Back Guarantee\nI Guarantee you that after finishing this course, you will be confident enough to create REST APIs in ASP.NET Core and .NET8 on your own.\nYou will feel confident at work or when creating your projects.\nIf you want to create functional, generic, clean, and usable websites using ASP.NET, then this is the course for you.\nIf still, you are unable to get benefit from this course (we will be sad to see you go!), there is a \"30-day money back guaranteed by Udemy\".\n\n\n\n\nWhy do you need this course?\nBy buying this course, you will make a fantastic choice as this course will help you gain the confidence you need to create ASP.NET Core Web APIs\nI assure you that by the end of this course, you will have the confidence to create scalable ASP.NET Core Web APIs from scratch.",
      "target_audience": [
        "Beginner to Intermediate Developer with some knowledge in ASPNET Core and C#"
      ]
    },
    {
      "title": "Nuxt.js 2 - Vue.js on Steroids",
      "url": "https://www.udemy.com/course/nuxtjs-vuejs-on-steroids/",
      "bio": "Build highly engaging Vue JS apps with Nuxt.js. Nuxt adds easy server-side-rendering and a folder-based config approach.",
      "objectives": [
        "Build server-side-rendered single-page-applications (SPAs)",
        "Build normal, optimized SPAs with minimal effort",
        "Generate a static webpage from Vuejs code"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome & Introduction",
          "What is Nuxt.js?",
          "Join our Online Learning Community",
          "Understanding Server Side Rendering",
          "Nuxt vs \"Normal\" Server Side Rendering",
          "Creating New Nuxt Projects & Nuxt 2",
          "Creating our First Nuxt App",
          "Understanding the Folder Structure",
          "What can we Build with Nuxt?",
          "What's Inside This Course?",
          "How To Get The Most Out Of This Course",
          "Where to Find the Source Code"
        ],
        "Pages, Routing & Views": [
          "Module Introduction",
          "From Folders to Routes",
          "Creating a Route with a Dynamic Path",
          "Adding Links & Navigating Around",
          "Time to Practice - Pages & Routing",
          "Validating Parameters",
          "Creating Nested Routes",
          "Layouts, Pages & Components - Theory",
          "Adding a New Layout",
          "Adding a Default Error Page",
          "Working with \"Normal\" Components",
          "Styling Nuxt Apps",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Project - Pages, Routing & Views": [
          "Module Introduction",
          "Creating the Main \"Sections\" (Pages)",
          "Adding External Fonts",
          "Creating the Landing Page",
          "Splitting the Page into Components",
          "Adding Static Assets - The Background Image",
          "Adding the Header Component",
          "Vue Router vs. Nuxt Router",
          "Working on the Post Page",
          "Creating an Admin Section",
          "Preparing the Backend",
          "Improving the App",
          "Adding a Separate Layout to the Admin Area",
          "Useful Resources & Links"
        ],
        "Handling Data": [
          "Module Introduction",
          "Adding Dynamic Data",
          "Preparing Data on the Server-Side (through Nuxt)",
          "Time to Practice - Server-Side Data",
          "asyncData on Client & Server",
          "A Closer Look at the Context Object",
          "Adding Async Data to a Single Post",
          "Handling Errors with a Callback",
          "Using Promises in asyncData",
          "Important: Restart the dev server in next lecture!",
          "Adding the Vuex Store",
          "Vuex, fetch() and nuxtServerInit()",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Connecting our App to the Backend": [
          "Module Introduction",
          "Executing Code on the Server",
          "Adding Firebase as a Backend",
          "Using Firebase to Store Data",
          "Fetching Data from the Backend",
          "Initializing our Store",
          "Fetching all Posts",
          "Time to Practice - Fetching Data",
          "Editing Posts",
          "Synchronizing Vuex and the Backend",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Nuxt - Config, Plugins & Modules": [
          "Module Introduction",
          "The Nuxt Config File",
          "The Loading Property",
          "Working with Environment Variables",
          "Manipulating Routing Settings",
          "Animating Page Transitions",
          "Adding Plugins",
          "Registering a Date Filter",
          "Understanding Modules",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Middleware & Authentication": [
          "Module Introduction",
          "What is Middleware?",
          "Adding User Signup",
          "Adding User Login",
          "Storing the Token",
          "Using the Token for Authentication",
          "Implementing a Middleware",
          "Invalidating the Token",
          "Persisting the Token Across Page Refreshes",
          "Implementing Cookies",
          "Fixing the Logout Timer",
          "Adding the Logout Functionality",
          "A Quick Bugfix",
          "Useful Resources & Links"
        ],
        "The Server Side": [
          "Module Introduction",
          "Adding Server Side Middleware",
          "Testing the Middleware",
          "Starting a Project with a Server Side Template",
          "Useful Resources & Links"
        ],
        "Building a Nuxt App": [
          "Module Introduction",
          "Universal vs SPA vs Static",
          "Building our App as a Universal App",
          "Deploying a Universal App",
          "Building our App as a SPA",
          "Fetching Data in the SPA",
          "Building our App as a Static Website",
          "Improving the Generate Process",
          "Limiting the Amount of http Requests",
          "Adjusting the Store",
          "Deploying SPAs and Static Webpages",
          "Useful Resources & Links"
        ],
        "Round Up": [
          "Course Roundup",
          "Bonus: More Content!"
        ]
      },
      "requirements": [
        "Vuejs knowledge is required, though you don't need to be an expert at all",
        "That's actually all, you'll learn the rest in the course :)"
      ],
      "description": "Vue.js is an amazing JavaScript framework which you can use to build highly engaging user interfaces and single page applications. You can join my bestselling course on Vue.js, here on Udemy, if you want to learn more about this awesome framework!\nNuxt.js takes Vue-js to the next level!\nIt's a library for Vue.js (kind of a \"framework for a framework\") and it adds two major things to Vue.js:\nServer-side-rendering of your Vue app out of the box\nEasy Vue app configuration via folders and files\nYou'll of course learn all the details in this course but the most important takeaway is that Nuxt.js makes the creation of better, more optimized and more capable Vue apps much easier - and all of that whilst adding pretty much no overhead.\nIn this course, I'll teach you how to create Nuxt/ Vue apps from scratch! We'll build an entire course project and dive into the core features Nuxt.js offers.\nBy the end of the course, you'll have a complete Vue app, built with Nuxt.js, which can be rendered on the server (or as a static website!) and which is highly optimized.\nThe course will teach you:\nWhat Nuxt.js exactly is and how it's connected to Vue.js\nHow you use Nuxt.js to build better Vue apps\nEverything you need to know about the \"configure via folders & files\" approach taken by Nuxt\nDifferent build possibilities like SSR apps, SPAs or a static webpage\nHow you build an entire project, including authentication, via Nuxt.js\nAnd way more!\nWho am I?\nMy name is Maximilian Schwarzmüller and I'm the instructor of the 5* rated, bestselling Vue.js course here on Udemy. I worked with Vue since it's beta, the same is true for Nuxt.js.\nI absolutely love these two frameworks and I can't wait to dive into them together with you!",
      "target_audience": [
        "Anyone who wants to build engaging, (optionally) server-side-rendered Vue JS apps",
        "Anyone who wants to work with Vuejs and follow a minimal-configuration approach",
        "Anyone who wants to create static websites with Vuejs (Nuxt as a static page generator!)"
      ]
    },
    {
      "title": "Accelerated JavaScript Training",
      "url": "https://www.udemy.com/course/javascript-bootcamp-2016/",
      "bio": "Take a deep dive into JavaScript, a Must-Know Language in Web Development, with a Hands-on, Example-driven Approach",
      "objectives": [
        "Use JavaScript to write modern, reactive Websites",
        "Understand how JavaScript works and how to use its many advantages",
        "Dive into JavaScript Libraries like jQuery or Frameworks like Angular 2 or React"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Join our Online Learning Community",
          "How to Execute JavaScript (Where does JS run?)",
          "JavaScript Versions (ES5 vs ES6)",
          "Course Format"
        ],
        "Language Basics": [
          "Introduction",
          "Using JavaScript - Inline HTML",
          "Using JavaScript - HTML Import",
          "Variables - Basics",
          "Variables - null, undefined and NaN",
          "Variables - Objects",
          "Strict Mode",
          "Dynamic Typing",
          "Hoisting",
          "Functions - Creating and Calling Them",
          "Functions - Arguments & Returning Data",
          "Control Structures - If Statement",
          "Control Structures - If Statement Advanced",
          "Control Structures - Switch",
          "Control Structures - Switch & Break",
          "Control Structures - For Loop",
          "Control Structures - Nested Loops",
          "Control Structures - Controlling Loops with break & continue",
          "Control Structures - For Loop Variations",
          "Control Structures - Looping through Arrays",
          "Control Structures - While Loop",
          "Operators - Addition",
          "Operators - Subtraction",
          "Operators - Multiplication & Floating Point Problems",
          "Operators - Division & Modulus",
          "Operators - Comparing Values",
          "Operators - Important Rules",
          "Operators - Boolean",
          "Operators - Ternary Operator",
          "Operators - Precedence",
          "Wrap Up",
          "Module Resources"
        ],
        "Types & Scope": [
          "Primitive vs Reference Types",
          "Primitive vs Reference Types - Exercise",
          "Global vs Local Scope",
          "Global vs Local Scope - Exercise",
          "Module Resources"
        ],
        "Arrays": [
          "Introduction",
          "Basics & Managing Elements",
          "The forEach() Method",
          "Working with Elements: Push, Pop, Unshift and Shift",
          "Working with Parts of an Array: IndexOf, Splice and Slice",
          "Filtering, Mapping and Reversing Array Elements",
          "The Difference between Concat and Join",
          "Reducing Arrays",
          "Wrap Up",
          "Module Resources"
        ],
        "Objects": [
          "Object Basics & Literal Notation",
          "Properties & \"this\"",
          "Alternative Way of Creating Objects: Using the Object Constructor",
          "Objects are Reference Types (Refresher)",
          "Object.create()",
          "Prototypes Introduction",
          "Prototypes in Action",
          "Prototypes Summary",
          "Constructor Functions",
          "Constructor Functions & Arguments",
          "Object Creation & Prototypes Summary",
          "The \"this\" Keyword and why it might behave strangely",
          "Handling \"this\" with bind(), call() & apply()",
          "Creating Properties with defineProperty()",
          "Important built-in Methods and Properties",
          "Wrap Up",
          "Module Resources"
        ],
        "Errors & Debugging": [
          "Debugging with the Browser Developer Tools",
          "Logging Data to the Console",
          "Handling Errors with try and catch",
          "Module Resources"
        ],
        "Functions": [
          "Introduction",
          "Closures",
          "Immediately Invoked Function Executions (IIFEs)",
          "Built-in Methods & Properties",
          "Module Resources"
        ],
        "Built-in Objects & Functions": [
          "Introduction",
          "Timers & Intervals",
          "Transforming Formats & Values",
          "String Functions",
          "The Math Object",
          "The Date Object",
          "Regular Expressions",
          "Module Resources"
        ],
        "Working with the Window and Document Object Model (DOM)": [
          "Introduction",
          "The Window Object",
          "The Location Object",
          "The Document Object and How to Interact with It",
          "Traversing the DOM",
          "Selecting Elements",
          "Selecting Elements with the Query Selector",
          "Selecting Elements - Exercises",
          "Creating and Inserting Elements",
          "Deleting Elements",
          "Elements and Nodes",
          "DOM Interaction Summary",
          "Dialogs",
          "DOM Properties & Methods",
          "Module Resources"
        ],
        "Events": [
          "Introduction",
          "The Event Object",
          "Event Handlers",
          "Event Listeners",
          "Event Behavior",
          "Event Object Properties",
          "Changing Propagation Order",
          "Module Resources"
        ]
      },
      "requirements": [
        "Nothing but a basic understanding about how web pages work (HTML, CSS)"
      ],
      "description": "Learn one of the most important Languages in Web Development - from scratch in a fast-paced fashion!\nJavaScript is one of the most important parts of every modern, reactive, user-friendly Web Pages or Applications. Despite that fact, you might yourself know many tutorials which leave you with a lot of open questions or are good, but also a couple of years old!\nHands-on, Example-driven Course\nJoin this course to receive a hands-on, example-driven JavaScript Bootcamp, which will guide you through the amazing language of JavaScript. Beginning at the very basics, we will walk through the various characteristics and features, JavaScript offers.\nExperienced Instructor\nAs a freelance web developer I use JavaScript a lot but I know that using it doesn't necessarily qualify you to teach it well. That's why I'm also proud to host dozens of 5-star rated courses here on Udemy as well as a successful learning YouTube channel.\nI not only offer high quality videos and examples, I'm also there to help whenever you're facing problems or do have open questions. Indeed, telling by the reviews of my courses, I offer one of the best support services you will find on Udemy!\nPay once, benefit a Lifetime!\nIt's best to have a look at the course content, to find out what you will learn - but to give you a quick overview:\nAll the basics about variables, functions, operators, language features, built-in objects and much more!\nIn-depth modules on Arrays, Objects & Prototypes, Functions, DOM Interaction, Events, AJAX and all the other core features that make JavaScript so important!\nHundreds of examples, showing all the concepts taught, allowing you to see them in action immediately\nA complete project to practice the skills gained throughout this course",
      "target_audience": [
        "This course is meant for students who never touched JavaScript before or everyone interested into refreshing knowledge about specific topics",
        "No prior JavaScript knowledge is required, though you may very well use this course to simply train your skills and practice with JavaScript if you already have some basic experience"
      ]
    },
    {
      "title": "GraphQL by Example",
      "url": "https://www.udemy.com/course/graphql-by-example/",
      "bio": "Learn GraphQL by writing full-stack JavaScript applications with Node.js, Express, Apollo Server, React, Apollo Client.",
      "objectives": [
        "Build a GraphQL server based on NodeJS, Express and Apollo Server",
        "Call GraphQL APIs from JavaScript using GraphQL-Request or Apollo Client",
        "Handle Authentication/Authorization, Caching, and more",
        "Receive real-time updates with GraphQL Subscriptions"
      ],
      "course_content": {},
      "requirements": [
        "Good knowledge of modern JavaScript, including ES6+ and NodeJS",
        "Some knowledge of Express and React preferable but not strictly required"
      ],
      "description": "More and more teams are choosing GraphQL instead of (or along with) REST for their web APIs. GraphQL queries give clients great flexibility in the way they request data from the server, preventing issues such overfetching or underfetching of data, and allowing multiple resources to be retrieved in a single request.\nIn this course you'll learn how to use GraphQL both on the server side and in client applications through practical examples in the form of full-stack JavaScript applications. You will be introduced to all the main GraphQL concepts like schema definition, Queries, Mutations, and Subscriptions, as well as to solution to common requirements such as handling authentication/authorization and client-side caching.\nThe examples use Apollo Server with Node.js and Express on the backend and React on the frontend, with GraphQL-Request first, then Apollo Client as GraphQL clients. GraphQL-WS is used for subscriptions.\nThe aim however is not just to cover specific GraphQL libraries, but to give you a more general understanding of the underlying concepts. For instance, GraphQL client libraries are introduced only after learning how to write a simple client \"by hand\", to make sure you understand the GraphQL over HTTP format.\nThis course assumes good knowledge of modern JavaScript, and ideally some familiarity with Node.js/Express and React.",
      "target_audience": [
        "JavaScript developers looking to learn GraphQL"
      ]
    },
    {
      "title": "The Complete Web Development Course - Build 15 Projects",
      "url": "https://www.udemy.com/course/complete-web-development-course/",
      "bio": "The only course you need to become a full-stack web developer. Covers HTML5, CSS3, JS, ES6, Node, APIs, Mobile & more!",
      "objectives": [
        "Go from Zero skills to building Powerful Web Applications on a highly professional level using the latest 2024 Web Technologies.",
        "Use a Portfolio of over 15 highly professional websites, Games and Mobile apps you would have developed during the course to take your career to the next level.",
        "Create real life mobile apps and upload them to the IOS App Store and Google Play.",
        "Use HTML5, CSS3, Flexbox, Grid & SASS to build website content and add stunning styling and decoration.",
        "Use Javascript, jQuery & jQuery User Interface to create Interactive Websites and Games.",
        "Use Twitter Bootstrap to produce Responsive Websites that will adapt to any device size.",
        "Use Back End Technologies like NodeJS, PHP, AJAX, JSON to build dynamic database-driven websites.",
        "Use advanced skills to connect your websites to APIs like Google Maps, Facebook, Google plus and Twitter.",
        "Create a Professional Mathematics Tutorial Website using HTML5 & CSS3.",
        "Create a Professional Maths Game using HTML5, CSS3 & JavaScript.",
        "Create a Professional Fruits Slice Game using HTML5, CSS3 & JQuery.",
        "Create a Professional App Landing Page using HTML5, CSS3 & Bootstrap.",
        "Create a Professional Company Website using HTML5, CSS3 & Bootstrap",
        "Create a Professional website with video background using HTML5, CSS3, jQuery & Bootstrap.",
        "Create a Professional Stopwatch App using HTML5, CSS3, jQuery & Bootstrap.",
        "Create a Professional Drawing App using HTML5, CSS3, jQuery UI, Canvas, Local Storage...",
        "Create a Professional Online File Explorer App using ES6, NodeJS , HTML5, CSS3 & Bootstrap.",
        "Create a Professional Online Notes App using HTML5, CSS3, Bootstrap, PHP, MySQL & AJAX.",
        "Create a Professional Blog using WordPress.",
        "Create a Professional Distance Between Cities App using HTML5, CSS3, jQuery, & Google Maps APIs.",
        "Create a Professional Website with Social Widgets (Facebook, Google+ & Twitter).",
        "Create a Professional Speed Reader App for IOS and Android.",
        "Create a Fully Functional Car Sharing App which users around the world can use to share car trips. (using HTML5, CSS3, Javascript, PHP, MySQL, AJAX & JSON)"
      ],
      "course_content": {},
      "requirements": [
        "I will teach you everything. All you need is a computer.",
        "There is absolutely no pre-knowledge required. This is a 100% Comprehensive Web Development Course that will take you from Zero-skills to a Cash Earning Web Developer, Step by Step with NO Step skipped."
      ],
      "description": "Recent Update:\nIncludes Flexbox, CSS Grid, SASS, Modern JS (ES6), Node.js (full project included), Git & Github, Heroku & more.\n\n\n***** Save ~ $17000 compared to an in-person Bootcamp *****\n***** 15 Full Professional Projects worth over 20,000$ *****\n***** This is The Only Course you need to learn Web Development *****\n***** Car Sharing Website (10h), Online Notes App (11h) & many more *****\n***** 100 hours of Content + 40 hands on Activities + 21 Quizzes *****\n***** Learn Step by Step with NO Step Skipped *****\n***** The Most Comprehensive and Cost Effective in the Market *****\n\n\n***** Learn and Master Over 10 Modern 2023 Technologies *****\nHTML5/CSS3\nJAVASCRIPT (ES5)\nModern JavaScript (ES6)\nJQUERY & JQUERY UI\nTWITTER BOOTSTRAP\nNode.js\nGit & Github\nHeroku\nPHP & MYSQL\nWORDPRESS\nAJAX\nJSON\nMOBILE APPS\nGOOGLE MAPS APIS\nFACEBOOK WIDGETS\nGOOGLE PLUS WIDGETS\nTWITTER WIDGETS\nAND MORE!\nDid you know you can go from Zero Skills to a Fully Qualified Cash Earning Web Developer in only a few weeks?\n\nWell let me tell you: If you are looking for a truly 100% Comprehensive Web Development Course, that will take you from learning the basics to mastering the most advanced web development techniques, then be certain that you have come to the right place.\nTaking this course will help you achieve your dream of becoming a professional web developer, and you will be ready to build powerful and responsive websites to a highly professional degree using today’s most advanced and up to date web technologies within a few weeks from now.\nIn order to guarantee the success of your learning experience, this course was divided into perfectly structured Chapters consisting of ~100 hours of crystal clear and 100% hands-on engaging lectures.\nEach chapter covers one of the major web technologies and will take you from the basics to advanced skills. This is how:\nYou will first learn the basic concepts, and straight after that apply them in easy practical examples. Then you will easily navigate to more advanced concepts and use them to build more complex applications. Once you have finished the chapter, you will then move to a bigger challenge where you will confidently build a “Real Life Full Professional Project” using the skills you acquired in that chapter combined with previous ones.\nHere are a few examples of in-chapter activities:\nEmbed a relaxing YouTube Video to your website (HTML)\nCreate an online checkout form (HTML)\nHighway Speed Control (HTML & JavaScript)\nOutbound and Return Flight date pickers just like the Expedia Website (HTML, CSS, jQuery & jQuery UI)\nCar Mileage range using a beautiful slider (HTML, CSS, jQuery & jQuery UI)\nInteractive carousel slider (HTML, CSS, jQuery & Bootstrap)\nCreate a responsive Contact Form (HTML, CSS, PHP & Bootstrap)\nWhat day of the week were you born? (HTML & PHP)\nGuess the date in 1000 days from now! (HTML & PHP)\nCalculate the route, distance and time between New York and Toronto. (HTML, Javascript, Google Maps API’s)\nGet the geographic coordinates and postcode of any address. (HTML, jQuery, Google Maps API’s, JSON)\nAnd much more …\nFollowing are some of the “FULL PROFESSIONAL PROJECTS” you will build throughout the course:\nMathematics Tutorials Website. (HTML5 & CSS3)\nMaths Game. (HTML5, CSS3 & JavaScript)\nFruits Slice Game. (HTML5, CSS3 & jQuery)\nApp Landing Page. (HTML5, CSS3 & Bootstrap)\nCompany Website. (HTML5, CSS3 & Bootstrap)\nStopwatch App. (HTML5, CSS3, jQuery & Bootstrap)\nDrawing App. (HTML5, CSS3, jQuery & jQuery UI, Canvas, HTML5 Local Storage)\nOnline File Explorer App. (Node.js, ES6, HTML5, CSS3, Bootstrap)(Full 5.5h project)\nOnline Notes App. (HTML5, CSS3, jQuery, Bootstrap, PHP & MySQL) (Full 11h project)\nHighly professional Blog. (Wordpress)\nDistance Between Cities Website. (HTML5. CSS3, jQuery, Google Maps)\nFreedom Website with Social Widgets. (Facebook, Google+ & Twitter)\nSpeed Reader App for the IOS and Google Play Stores.\nFully functional Car Sharing Website. (HTML5, CSS3, jQuery, Bootstrap, PHP & MySQL, Ajax, JSON, Google Maps) (Full 10h project)\nYou will be so amazed at your own first-class work, and I am sure you will love to share it with the world. That’s why I will offer you \"FREE WEB HOSTING\" worth 200$  so that you can make your professional websites live and attract potential employers or clients. As a result you can start making money from the first week of your unique learning journey.\nBy the end of the course, you will have built a solid portfolio of “Over 15 Real Professional Websites, Games and Mobile Apps for The IOS and Google Stores”. This will give you a competitive edge in the web development market and boost your income as a web developer by increasing your employability or chances of being awarded lucrative projects by clients around the world.\nWhat Students say:\n\"I appreciate the manner in which each project is presented, an example of an end result to which we need to build the relevant to reach the same output. It is a building block approach that works very well for me to comprehend the compartmentalisation of each component and the visualisation of the complete 'picture'. Each component is then carefully unpacked through a process of visually understanding each characteristic and applying the 'code' to create the same. Marvelous.\" Celia M Gaylard\n\n\n\"Incredible course. The content is very comprehensive and informative. 60 hours video + materials! The production quality is amazing The instructor is very interesting and engaging. Could not have asked for a better course Truly fantastic I am very very happy I invested my money and time on this course!\" Klevis Merko\n\n\n\"Easy to understand. The best course to learn web development From the beginning. 100% good.\" Sayuru Sadaru\n\n\n\"It is simply the great course. I have learned so much by doing this course. I can now develop my own Websites, Apps. The instructor is great. He teaches everything step by step. I really liked his teaching style. The projects are great. Every project corresponds to real life. I am very happy about this course. Now I am going to by Javascript course by the sdame instructor. Thank you Sir for this great course.\" Tushar Marathe\n\n\n\"Wow! There is a TON of information here. The instructor goes deep enough into each topic so that you can understand the concepts and start coding on your own. I only had a little background in HTML when I started but have been able to keep up by pausing the videos when needed. I'm only 31% through but I already know this course is exactly what I was looking for. Can't wait to finish! I highly recommend it to anyone just starting out in Web Development.\" Peter Burt\n\n\n\"One of the best web development courses in Udemy!\" Edem Dumenu\n\n\n\"The instructor responded to my questions in a timely manner. He took his time explaining every details of the subject matter. The course also serve as a great template to follow for new web developer who are trying to put together their portfolio.\" Jerome Smith\n\n\n\"I am loving this course. Your explanations and examples are pretty good and clear. A good course for a beginner as well as experienced. Can't ask for more on such a low price. And the instructor is very friendly and helpful.\" Pradeep Gupta\n\n\nSo, what are you waiting for? Enrol today and let's start an exciting journey together!",
      "target_audience": [
        "This Course is for people with no web development knowledge or experience.",
        "This Course is also for people with web development knowledge, but wanting to learn new skills and enrich their portfolio with 15 Highly professional Interactive Websites, Games and Mobile Apps."
      ]
    },
    {
      "title": "Complete Angular Course 2025 - Master Angular in only 6 days",
      "url": "https://www.udemy.com/course/complete-angular-14-course-learn-frontend-development/",
      "bio": "Develop comprehensive and reactive Angular applications including NgRx, Unit Testing, Signals, and Angular Material.",
      "objectives": [
        "Learn Angular in-depth in a short amount of time",
        "Build comprehensive web apps like an e-commerce store",
        "Use Angular components, services and modules to create a maintainable code base",
        "Use NgRx to build reactive web applications using state management",
        "Write Unit Tests using Karma and Jasmine to test your Angular applications",
        "Learn how to communicate with web servers for posting, getting, or deleting data",
        "Setup a real-world mock evironment",
        "Use the latest features like Angular signals and effects"
      ],
      "course_content": {
        "Day 1: Building an Appointment app with components and data-binding": [
          "Defining your Angular goal",
          "Day 1 Topics",
          "Angular building blocks",
          "What you will build",
          "Source Code: Appointment App",
          "Building Angular applications in a web browser",
          "Installing Node.js and Visual Studio Code",
          "Important: Update Read this BEFORE you create an Angular project",
          "Installing the Angular CLI",
          "Angular 17 project creation flag",
          "Creating and serving an angular application",
          "Angular under the hood",
          "Components",
          "Creating the appointment-list component",
          "Introduction to typescript",
          "Using TypeScript in Angular",
          "One-way data binding with appointment property",
          "Creating an appointment interface",
          "Visual Studio Code Angular extension",
          "Adding two-way data binding",
          "Adding a button click event listener",
          "Adding an appointment to the array",
          "Adding an appointment list using ngFor",
          "Removing appointments",
          "Storing appointments in the local storage",
          "Using ngOnInit to load appointments from local storage",
          "Adding bootstrap",
          "Styling the application",
          "The most commonly used commands in Angular",
          "Handout Components",
          "Working with Angular components",
          "Day 1 Progress Report"
        ],
        "Day 2: Build a Hotel Reservation App with Services, Forms, and Routing": [
          "Day 2 Topics",
          "Step-By-Step Exercise: Building a book management system",
          "The hotel reservation app",
          "Source Code: Hotel App",
          "Creating the hotel app project",
          "Project architecture hotel app",
          "Creating all modules, services and components",
          "Creating the reservation interface",
          "Creating routes",
          "Building a simple navigation",
          "Creating a form group",
          "Creating the reservation form",
          "Validating a form using reactive form validation",
          "Dynamically toggle html attributes based on form state",
          "Showing validation messages",
          "Creating the reservation service",
          "Injecting the reservation service into the form component",
          "Using the localStorage in the reservation service",
          "Showing all reservations in a list",
          "ngtemplate and local reference",
          "Using the router navigate method to redirect the user",
          "Deleting reservations",
          "Creating unique ids for reservations",
          "Adding the edit route with parameter",
          "Editing reservations",
          "Combining components from different modules",
          "Styling the home component",
          "Styling the reservation form component",
          "Styling the reservation list component using a table",
          "Modules",
          "Handout Modules",
          "Services",
          "Day 2 Progress Report"
        ],
        "Day 3: Reactive programming with Observables, HTTP and Mock APIs": [
          "Day 3 Topics",
          "Modern web architecture",
          "What you will create during this section",
          "Using Mockoon as a mock backend api",
          "Preparing the project for the mock backend api",
          "Calling the mock api using the http client and observables",
          "Returning reservations from the mock api",
          "Setting up all mock api endpoints",
          "Finishing all CRUD operations with observable implementation",
          "Handout Observables",
          "Modern Web Architecture",
          "Day 3 Progress Report"
        ],
        "Day 4: Building an ecommerce web application with Angular Material and more": [
          "Day 4 Topics",
          "Project overview",
          "Important: Project Materials",
          "Switching to a new angular version",
          "Creating the product module, service and component",
          "Creting the product class and clearing the template",
          "Setting the product route",
          "Setting up the mockoon api",
          "Creating environments",
          "Getting products from our product service",
          "Product list displaying products",
          "Serving for environments",
          "Installing angular material and exploring cards",
          "Creting mat-cards for products",
          "Applying the angular material style and product images",
          "Responsive product grid",
          "Adding an eye-catching hover effect",
          "Adding a container css class",
          "Adding a navbar",
          "Adding a description",
          "Creating the cart module, component and service",
          "Setting up the cart service methods",
          "Getting all cart items",
          "Using mat-list for cart items",
          "Calculating the total cart price",
          "Adding the clear cart and checkout button",
          "Exercise: Adding the checkout logic",
          "Adding products to cart and popup",
          "Adding the search functionality Part 1",
          "Adding the search functionality Part 2",
          "Adding the sort functionality",
          "Day 4 Progress Report"
        ],
        "Day 5: NgRx - Building reactive web applications with Angular": [
          "Day 5 Topics",
          "The problem NgRx can solve",
          "NgRx explained",
          "Angular 17 update hint",
          "Creating a project for our reactive application",
          "Creating the application state",
          "Creating actions for adding and deleting books",
          "Creating the book reducer part 1: Creating a reducer",
          "Creating the book reducer part 2: Change functions",
          "Creating the store",
          "Creating a component and methods to dispatch our actions",
          "Loading books from the store",
          "Using the AppState interface for type safety",
          "Creating the UI to see our reactive application in action",
          "NgRx Basics",
          "NgRx effects recap",
          "Creating success and failure actions",
          "Adjusting the reducer for effects",
          "Creating the service for the effect",
          "Creating the effect part 1",
          "Creating the effect part 2",
          "Registering the effect and using Angular Dev Tools to test the application",
          "Day 5 Progress Report"
        ],
        "Day 6: Unit Testing Angular applications with Karma and Jasmine": [
          "Day 6 Topics",
          "Unit Testing in Angular",
          "Creating our first unit test",
          "Running unit tests using Karma",
          "Creating a service to test",
          "Unit testing the service",
          "Creating a component to test",
          "Component fixture for unit testing",
          "Handling dependencies for component tests",
          "Testing a component property that loads from ngOnInit",
          "Testing a components UI functionality",
          "Day 6 Progress Report",
          "Quiz: Unit Testing with Karma and Jasmine"
        ],
        "Angular Signals": [
          "What are Angular Signals",
          "Creating an Angular Signal",
          "Setting the value of a signal",
          "Creating an effect for a signal",
          "Computed signals",
          "Signal Use Case",
          "Signal Inputs",
          "Angular Signals"
        ],
        "Additional Angular Exercises": [
          "Download Exercise Sheet",
          "Moving on"
        ]
      },
      "requirements": [
        "Basic understanding of programming on any programming language"
      ],
      "description": "Summing up, this course allows you to learn Angular in depth, from scratch, and in only 6 days. It's the best Angular course choice for every busy developer or individual in general.\n\n\nEnroll in this course now and learn how to:\nCreate comprehensive front-end applications using Angular\nUse Angular components, modules, and services to create maintainable applications\nUse the most important features of the Angular framework to build real-world applications\nCommunicate with web servers for posting, getting, or deleting data from within your angular application\nUse the latest features like Angular Signals and Effects\n\n\nWhat's inside this course:\nSetting up Development Environment for Angular projects\nTypescript Overview\nAngular CLI\nComponents\nModules\nServices (Injection and provider scopes)\nValidation\nData Binding\nAdding Packages\nRouting\nTemplate Driven Form Binding (NgModel)\nPipes\nAngular Material\nBuilding web apps with user experience (ux) in mind\n\n\nIn addition, you will easily apply and understand more advanced concepts like:\nNgRx for building reactive web applications\nState management using actions, reducers, store, effects, and selectors\nReactive extensions like observables for asynchronous tasks\nUnit Testing using Karma and Jasmine\nHTTP RESTful API communication\nSetting up Mock servers using Mockoon\nGlobal Error Handling\nDirectives\nSending Data to Child Components (Input binding)\nSending Data to Parent Components (output binding)\nSmart vs Presentational Components\nComponent and Directive Selectors\nAngular Signals\nAngular Effects\n\n\n30 Day Full Money Back Guarantee\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you feel like this course is not for you, ask for a full refund within 30 days. All your money back, no questions asked.\n\n\nEnroll now, take the fast lane, and master Angular in only 6 days.",
      "target_audience": [
        "Anyone who wants to learn Angular in a fast but comprehensive way",
        "Busy professionals who are interested in expanding their coding skills but are constrained by time",
        "Beginner developers who want to learn one of the most popular web development frameworks"
      ]
    },
    {
      "title": "Reactive Angular Course (with RxJs, Angular 20)",
      "url": "https://www.udemy.com/course/rxjs-reactive-angular-course/",
      "bio": "Build Angular 19 Applications in Reactive style with plain RxJs - Patterns, Anti-Patterns, Lightweight State Management",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Learn Lightweight State Management techniques (RxJs only)",
        "Understand the Core Principles of Reactive Programming in general",
        "Know how to build Applications in Angular in Reactive Style using RxJs",
        "Learn a Catalog of RxJs Application Design Patterns and Anti-Patterns"
      ],
      "course_content": {
        "Introduction": [
          "Reactive Angular Course - Helicopter View",
          "IMPORTANT: Recommended Software Versions",
          "Setting Up your Development Environment"
        ],
        "Stateless Observables Services": [
          "Reviewing a component written in traditional Imperative Style",
          "Understanding potential problems of a program written in Imperative style",
          "Design Pattern - Stateless Observable-based Services",
          "Consuming Observable-based services using the Angular async Pipe",
          "Avoiding Angular duplicate HTTP requests with the RxJs shareReplay operator",
          "Angular view Layer Patterns - Smart vs Presentational Components",
          "Data Modification Example in Reactive Style (Stateless Application)"
        ],
        "Reactive Component Interaction": [
          "Reactive Component Interaction - Section Introduction",
          "Decoupled component communication using a shared Service",
          "Loading Service Reactive API Design",
          "Reactive Component Interaction using Custom Observables and Behavior Subject",
          "Loading Indication Service - Reactive Implementation Finished",
          "Understanding the Angular Component providers property",
          "Error Handling and the Messages Component",
          "Error Handling with the catchError RxJs operator",
          "Messages Service - Implementation Finished and Demo",
          "Local Error Handling in an Angular Material Dialog",
          "Angular State Management - When is it Needed and Why?",
          "Initial Implementation of a Store Service",
          "Step-by-Step Implementation of an Angular Store Service",
          "Store Optimistic Data Modification Operations - API Design",
          "Store Optimistic Data Modifications - Step-By-Step Implementation"
        ],
        "Authentication State Management": [
          "Authentication State Management - Section Introduction",
          "Authentication Store - Step-By-Step Implementation",
          "Adapting the UI according to the user Authentication status",
          "Authentication Store - Browser Refresh support with Local Storage"
        ],
        "Master-Detail UI Pattern (with built-in State Management)": [
          "Master-Detail UI Pattern - Section Introduction",
          "Angular Master Detail Implementation - The Master Table",
          "Angular Master Detail Implementation - The Detail Element",
          "Angular Master Detail Implementation - Final Demo"
        ],
        "The Single Data Observable Pattern": [
          "Consolidation Exercise - Implementing the Course Screen in Reactive Style",
          "Course Component Finished - Introduction to the Single Data Observable Pattern",
          "Reactive Angular - The Single Data Observable Pattern",
          "Single Data Observable Pattern - Default Data Values",
          "Refactoring an Angular Reactive Application to OnPush Change Detection"
        ],
        "Conclusions and Course Summary": [
          "Bonus Lecture (Updated October 2025)",
          "Conclusion & Key Takeaways"
        ]
      },
      "requirements": [
        "Angular (beginner level)",
        "Typescript",
        "Some basics of RxJs"
      ],
      "description": "This Course in a Nutshell\nThis course is a catalog of commonly used design patterns (and some anti-patterns) that every Angular developer should know.\nThe goal of the course is to teach you how to comfortably design and develop applications in Angular in Reactive style using just plain RxJs, and nothing more.\nThis course comes with a running Github repository with the the finished code, as well as starting points for different sections of the course in case that you want to code along, which we recommend as its the best way to learn.\nThis course answers the common question: how far can we go in Angular while using only plain RxJs and nothing more, without introducing any state management library?\nIt turns out that the simple set of techniques taught in this course are very well suited for a wide range of applications, especially in-house built enterprise applications\nIn this course, you will learn exactly how to use RxJs to design and develop both the service and the view layers of your application, and you will understand both the advantages and the pitfalls of the reactive approach\nParticularly when it comes to state management, it turns out that we can already go very far by leveraging only plain Angular and RxJs techniques, without using an additional state management library like for example NgRx\nThese simplified state management techniques are adequate and sufficient for a large range of applications,  and we believe that you should consider them first before thinking of adopting a full-blown state management solution\nHow far can you go with these techniques? That's what you will find out in this course.\nCourse Overview\nWe are going to start our course by taking a small Angular application that is written in imperative style, and we are going to talk about some of the problems of that aproach Then, we are going to refactor the application and explain step-by-step how to implement it in reactive style instead.\nWe will explain in detail every RxJs operator that we come across in this course, the first time that we need each operator.\nWe are going to start with a fully stateless solution first, but later we are going to improve the user experience by applying some simple RxJs-only state management techniques We are going to use these patterns in order to handle some of the data of the application, as well as the user authentication profile.\nThe key element needed to implement lightweight state management is RxJs behavior subjects so we will cover those in detail in the course We will also provide step-by-step reactive style solutions for common UI functionality like loading indicators or error messages.\nTable of Contents\nThis course covers the following topics:\nReview of an application written in imperative style\nRefactoring into stateless reactive style, understanding the benefits\nSmart vs Presentational Components\nStateless Observable Services\nThe shareReplay Operator\nStateless UI updates (without state management)\nIntroduction to RxJs Subjects and BehaviorSubject\nDecoupled component communication using shared observable services\nUsing Observables to have components interact at different levels of the component tree\nError Handling and error messages in reactive style\nLoading Indicators in reactive style\nImproving user experience with lightweight RxJs stores\nOptimistic UI updates\nManaging User Authentication state with plain RxJs\nLocal vs Global Services\nMaster Detail with cached master table in reactive style\nThe Single Data Observable Pattern: Avoiding nested ng-component tags\nRefactoring a reactive application to OnPush change detection\nConclusion and key takeaways\nWhat Will You Learn In this Course?\nAt the end of the course, you will feel comfortable designing and developing Angular applications in reactive style, by leveraging plain RxJs-only techniques You will know how to apply simplified reactive state management techniques to different common use cases, and you will understand the advantages and the limitations of this approach\nYou will be familiar with a series of commonly needed reactive design patterns, and you will also be familiar with a series of common pitfalls to avoid",
      "target_audience": [
        "Web developers looking to learn how to build Angular Applications in Reactive Style",
        "Angular Developers looking to learn lightweight state management techniques (using RxJs only)"
      ]
    },
    {
      "title": "HTML, CSS, & Bootstrap - Certification Course for Beginners",
      "url": "https://www.udemy.com/course/html-css-bootstrap-certification-course-for-beginners/",
      "bio": "A Complete Guide for Beginners interested in learning HTML, CSS, & Bootstrap for Building Stylish, Responsive Web Pages.",
      "objectives": [
        "Developing Web Pages in HTML",
        "Styling Web Pages using CSS",
        "Creating Mobile Responsive Web Pages using the Bootstrap Library"
      ],
      "course_content": {
        "HTML Development": [
          "Introduction to HTML",
          "Basic Structure of a Web Page",
          "HTML Head Tags",
          "HTML Body Tag",
          "HTML Paragraph Spacing",
          "HTML Line Breaks",
          "HTML Non-Breaking Space",
          "HTML Header Tags",
          "HTML Text Formatting and Decoration",
          "HTML Inline Text Formatting",
          "HTML Unordered Lists",
          "HTML Ordered Lists",
          "HTML Image Insertion",
          "HTML Embedding Videos",
          "HTML Absolute vs. Relative File Referencing",
          "HTML Link Creation",
          "HTML Anchor Tags",
          "HTML Tables",
          "HTML Nested Tables",
          "HTML Merging Cells",
          "HTML Text Wrapping",
          "HTML Table Background Image",
          "HTML Table Cell Alignment",
          "HTML - Introduction to Forms",
          "HTML Form Tags and Attributes",
          "HTML Forms - Post vs. Get",
          "HTML Forms - Input Text Fields",
          "HTML Forms - Select Menus",
          "HTML Forms - Check Boxes and Radio Buttons",
          "HTML Forms - Text Areas and Buttons",
          "HTML Iframes",
          "HTML Project - Introduction",
          "HTML Project - Header",
          "HTML Project - Callout",
          "HTML Project - Image Insertion",
          "HTML Project - Text Insertion",
          "HTML Project - Links and Form",
          "HTML Project - Tabular Data",
          "HTML Project - Footer"
        ],
        "CSS Development": [
          "Introduction to CSS",
          "Parts of a CSS Rule",
          "Types of CSS Rules",
          "CSS - Color Names and Codes",
          "CSS Classes and Spans",
          "CSS Divisions - DIVs",
          "CSS IDs",
          "CSS Margins",
          "CSS Padding",
          "CSS Text Properties",
          "CSS Font Properties",
          "CSS Borders",
          "CSS Backgrounds",
          "CSS Transparency",
          "CSS Text on Top of Images",
          "CSS Width and Height Properties",
          "CSS Display Properties",
          "CSS Static Positioning",
          "CSS Relative Positioning",
          "CSS Absolute Positioning",
          "CSS Fixed Positioning",
          "CSS Float Property",
          "CSS Clear Property",
          "CSS Z-Index",
          "CSS Styling Links",
          "CSS Tables",
          "CSS Project - Introduction",
          "CSS Project - CSS Rules",
          "CSS Project - Navigation Rules",
          "CSS Project - Responsive CSS",
          "CSS Project - Page Elements"
        ],
        "Bootstrap Development": [
          "Introduction to Bootstrap",
          "Embedding Bootstrap",
          "Bootstrap - Basic Page Structure",
          "Bootstrap Grid System",
          "Bootstrap Three Column Layouts",
          "Bootstrap Typography",
          "Bootstrap Tables",
          "Bootstrap Styling Images",
          "Bootstrap Jumbotron",
          "Bootstrap Wells",
          "Bootstrap Alerts",
          "Bootstrap Buttons",
          "Bootstrap Button Groups",
          "Bootstrap Justified Button Groups",
          "Bootstrap Glyphicons",
          "Bootstrap Badges and Labels",
          "Bootstrap Progress Bars",
          "Bootstrap Pagination",
          "Bootstrap Pager Pagination",
          "Bootstrap List Groups",
          "Bootstrap Panels",
          "Bootstrap Dropdown Menus",
          "Bootstrap Collapsibles",
          "Bootstrap Collapse Panel",
          "Bootstrap Collapse List Group",
          "Bootstrap Accordian",
          "Bootstrap Tab Menus",
          "Bootstrap Pill Menus",
          "Bootstrap Dynamic Tabs and Pills",
          "Bootstrap Navigation Bar",
          "Bootstrap Collapsible Navigation Bar",
          "Bootstrap Forms - Vertical and Inline",
          "Bootstrap Inputs",
          "Bootstrap Form Control States",
          "Bootstrap Input Sizing",
          "Bootstrap Carousel",
          "Bootstrap Modal",
          "Bootstrap Tooltip",
          "Bootstrap Popover",
          "Bootstrap Scrollspy",
          "Bootstrap Project - Themes Intro",
          "Bootstrap Project - File Overview",
          "Bootstrap Project - Script Overview",
          "Bootstrap Project - Script Overview Continued"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course covers three essential concepts for aspiring Web Developers. This includes HTML, CSS, & Bootstrap. Each section comes complete with comprehensive lessons that help students master the art of front-end coding.\nThe course is divided as follows:\nHTML Development\nThis section explores HTML. HTML is a key fundamental building block when learning to develop websites. Students initially learn the basics of HTML page structure and gradually transition into working with spacing, text formatting, lists, images, videos, links, anchors, tables, forms and much more. We include several projects, where students are shown first-hand, how to develop and code html web pages from scratch.\nCSS Development\nStudents learn to use CSS to create stylish, responsive web page layouts. We start by discussing the parts and types of CSS rules, followed by CSS classes, DIVS, and ID's. Students gain significant exposure to various formatting options, including margins, padding, font properties, backgrounds, transparency, positioning, link styling and CSS tables. This section includes a hands-on web development project where students utilize the concepts explored in the lesson.\nBootstrap Framework\nStudents are taught to use the Bootstrap framework for responsive, mobile-first - front-end development. As one of the leading open-source development libraries, Bootstrap is an essential part of the developers coding arsenal. The section begins with teaching students how to include essential Bootstrap files into web pages. It then explores the Bootstrap Grid system and popular layout strategies for optimal cross-device and cross-browser compatibility.\nStudents gain exposure to just about every Bootstrap component, from typography, tables and images, to jumbotrons, wells, alerts, buttons, glyphicons and progress bars. The section includes several hands-on exercises that will walk students through the process of creating stunning layouts, complete with modals, carousels, popovers, drop-down menus, forms and much more.",
      "target_audience": [
        "Aspiring Web Developers",
        "Students interested in Web Coding",
        "Students interested in Front-End Web Page Design",
        "Students interested in learning the essentials of Full Stack Web Development",
        "Students interested in learning HTML, CSS, & Bootstrap"
      ]
    },
    {
      "title": "Introduction to Domain Names and Web Hosting - Quick Guide",
      "url": "https://www.udemy.com/course/introduction-to-domain-names-and-web-hosting-quick-guide/",
      "bio": "Learn how Domain Names Work and Types of Web Hosting for any Web Development Project",
      "objectives": [
        "How Domain Names Work",
        "How to Register a Domain Name",
        "The Role of Domain Registrars",
        "Types of Domains (TLD, CCTLD)",
        "The Role of ICANN",
        "How to conduct a Whois Search",
        "How to Register a domain using GoDaddy",
        "How to Administer a domain name using Godaddy",
        "Setting up Domain Name Privacy, Auto-Renewal, Domain Forwarding",
        "Domain Name Server Administration",
        "Types of Web Hosting",
        "Case Analysis - Shared, Virtual Private, Dedicated, Cloud Hosting",
        "Assessing Scalability and Resource Requirements"
      ],
      "course_content": {
        "Domain Names": [
          "Introduction to Domain Names",
          "Domain Name Registrars",
          "Domain Registration",
          "Registration & Privacy Protection",
          "Control Panel Sign-In",
          "Auto-Renewal & Domain Lock",
          "Domain Forwarding",
          "Nameservers",
          "Update Registration Information"
        ],
        "Types of Web Hosting": [
          "Web Hosting Packages Overview",
          "Shared Hosting",
          "Dedicated Hosting",
          "VPS Hosting",
          "Cloud Hosting & Case Study"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Course: Introduction to Domain Names and Web Hosting - Quick GuideDomain Names Section:\nTake a look at all the exciting concepts we will cover below:\nWe provide an overview of the domain name registration process. This includes the role of registrars and TLD (Top Level Domain) administration by ICANN. ccTLD's (Country Code Top Level Domains) are also explored.\nStudents will gain hands-on experience with the registration process using popular domain registrars. We will provide a comparison of different registrars and register a sample domain name using GoDaddy. Other topics of discussion will include: domain name privacy and administration, auto-renewal, domain forwarding, and name server assignment.\n\nWeb Hosting Section:\n\nWe conduct an in-depth case analysis of web hosting solutions including: Shared, Virtual Private, Dedicated and Cloud Hosting.\nWe provide an overview of various packages offered by different web hosting companies and weigh the pros and cons of each one.\nStudents are also introduced to the importance of web server scalability and the advantages of cloud hosting over traditional hosting services. We also examine the infrastructure requirements of popular, resource intensive applications such as Netflix and Facebook to emphasize the importance of avoiding costly mistakes in the initial stages of development.\nWhat you'll learn\nHow Domain Names Work\nHow to Register a Domain Name\nThe Role of Domain Registrars\nTypes of Domains (TLD, CCTLD)\nThe Role of ICANN\nHow to conduct a Whois Search\nHow to Register a domain using GoDaddy\nHow to Administer a domain name using Godaddy\nSetting up Domain Name Privacy, Auto-Renewal, Domain Forwarding\nDomain Name Server Administration\nTypes of Web Hosting\nCase Analysis - Shared, Virtual Private, Dedicated, Cloud Hosting\nAssessing Scalability and Resource Requirements",
      "target_audience": [
        "Students interested in starting a Website",
        "Students interested in registering a Domain name",
        "Students interested in hosting a Web Application using different Hosting Packages"
      ]
    },
    {
      "title": "Javascript for Beginners",
      "url": "https://www.udemy.com/course/beginning-javascript/",
      "bio": "Learn javascript online and supercharge your web design with this Javascript for beginners training course.",
      "objectives": [
        "Extensive, informative and interesting video lecture",
        "Complete Code demonstrated in lecture",
        "Lab Exercises",
        "Lab Solution Sets",
        "All Powerpoint Demonstrations Used in Course",
        "Instructor contact Email for questions and clarifications",
        "Coverage of all important primary Javascript concepts"
      ],
      "course_content": {
        "Bonus: Mark's JavaScript Workbook": [
          "JavaScript Development Workbook"
        ],
        "JavaScript 2023/2024 Edition": [
          "Output with JavaScript",
          "Variables in JavaScript",
          "Variables in JavaScript",
          "Math with JavaScript",
          "JavaScript Conditionals",
          "JavaScript conditionals",
          "Switch...Case",
          "While and Do...While Loops",
          "For Loops",
          "For Loops",
          "JavaScript Arrays",
          "JavaScript Arrays",
          "JavaScript Functions",
          "JavaScript functions",
          "Javascript Sets and Maps",
          "JavaScript Events",
          "JavaScript Audio",
          "Video with JavaScript",
          "Fetch()ing Data in JavaScript",
          "Fetch in JavaScript",
          "JSON: JavaScript Object Notation",
          "JSON: JavaScript Object Notation",
          "Building a JavaScript App with XML",
          "XML",
          "Promises in JavaScript",
          "Async/Await",
          "JavaScript Strings",
          "String Templates",
          "Classes and Objects with JavaScript",
          "JavaScript Canvas",
          "Creating HTML elements Dynamically"
        ],
        "Beyond the Basics": [
          "JavaScript Testing and Automated Testing with AI"
        ],
        "Chapter 1: Hello Javascript!": [
          "Javascript for Beginners",
          "Adding Hello World JS to our HTML",
          "Course Introduction",
          "Introducing Mark and the Course",
          "Introductory Slides",
          "Hello World in Javascript",
          "Where To Put Javascript",
          "Chapter 1 Lab",
          "Chapter 1 Examples"
        ],
        "Chapter 2: Storing Information in Variables": [
          "Learning to use Variables",
          "Variable Operators",
          "Variables in Javascript",
          "Chapter 2 Labs",
          "Chapter 2 Examples"
        ],
        "Chapter 3: Conditional Statements": [
          "Simple Conditionals",
          "If Else If Statements",
          "Grading system using if else conditionals",
          "Switch... Case... Break Statements",
          "Chapter 3 Lab",
          "Chapter 3 Examples"
        ],
        "Chapter 4: Dialog Boxes": [
          "Three Types of Javascript Dialogs",
          "Chapter 4 Lab",
          "Dialogs"
        ],
        "Chapter 5: Now We're Iterating! Loops in Javascript": [
          "While Loops and Do...While Loops",
          "For Loops and Practical Application of a Loop",
          "Using For loops to Count Numbers",
          "Lab 5 Hint Video",
          "Chapter 5 Labs",
          "Chapter 5 Examples"
        ],
        "Chapter 6: Coding Javascript Functions": [
          "Function Introduction",
          "Functions, Parameters and Returns",
          "Calling Functions From Events",
          "Calling Functions",
          "Chapter 6 Labs",
          "Lab Starter",
          "Chapter 6 Examples"
        ],
        "Chapter 7: Working with Arrays": [
          "Declaring Arrays",
          "Manipulating Arrays",
          "Chapter 7 Labs",
          "Chapter 7 Examples"
        ]
      },
      "requirements": [
        "Some basic knowledge of HTML is required for this course."
      ],
      "description": "Take this Javascript training course and start learning Javascript today.\n\"As a business person, I have no place in programming.\"\nTen years ago you could have gotten away with that statement. Today you say that to your colleagues and they scoff at you before they go back to their computers to fix real problems and do real work.\nIf you want to do something useful start by learning Javascript. These days when the browser is central to all computer use knowing \"the language of the browser\" is the most important step. A few years ago Javascript potential was uncertain and many programmers considered it useless. These days however competent programmers have identified Javascript's real potential and uses and it has gone from a toy language to the main language of the browser. It has become one of the most useful languages of this era. Every developer needs at least a basic understanding of Javascript. A developer who knows Javascript is the rockstar of the company and is in constant demand by employers.\nOur online Javascript course will get you started by teaching you all the essential aspects of coding in Javascript. So... what's it gonna be? Do you want to supercharge your career and be in constant demand by employers? Do you want to learn how to create dynamic and innovative Javascript documents? Start programming today with our Javascript course for Beginners training and take control of your career.\nBonus:   When you enroll in this course you will receive access to my all-new book, JavaScript Development Workbook.  This book will give you even more practice coding in JavaScript!",
      "target_audience": [
        "Web Designers looking to improve their skill set",
        "Programmers who need to learn Javascript for their web applications",
        "People looking to start programming and need a first programming language to learn",
        "Students who want to learn Javascript",
        "People who manage a web site as a volunteer or as a hobby",
        "Bloggers-- even if you use Wordpress or another CMS!",
        "Anyone else who wants to learn Javascript"
      ]
    },
    {
      "title": "The Complete Web Developer Masterclass: Beginner To Advanced",
      "url": "https://www.udemy.com/course/webdevelopercourse/",
      "bio": "In this complete masterclass course students will learn how to build their very own website from scratch through example",
      "objectives": [
        "Learn the fundamentals of coding!",
        "Create beautiful interactive websites from scratch using the framework of your choice!",
        "Teach others coding and use your skills to help them get a job in the real world!",
        "Become an expert using HTML, CSS, Wordpress, Bootstrap, PHP, AJAX, jQuery, and So Much More!",
        "Complete a multiple framework project with us",
        "Continue to learn and grow as a developer, long after the course concludes"
      ],
      "course_content": {
        "Welcome To The Complete Web Developer Masterclass!": [
          "Welcome To Our Course! Learn All About What Our Master Class Has To Offer You!",
          "Course Benefits: How To Use This Course To It's Full Potential!"
        ],
        "Start By Learning The Fundamentals of Coding!": [
          "How To Use the Simple Notepad",
          "Downloading and using Notepad++",
          "How to Download and use the Sublime Text Editor",
          "Quiz2"
        ],
        "Learn EMMET For Making Short Codes!": [
          "Intro to the Emmet",
          "Using Emmet in working mode",
          "Matching with Emmet",
          "Numbering with Emmet",
          "Emmet in CSS",
          "Quiz14"
        ],
        "Learn HTML & CSS From Beginner to Advanced!": [
          "Introduction To HTML and CSS",
          "Tagging",
          "Attributes",
          "HTML syntax",
          "Comments",
          "White Spaces and Preformatted Tag",
          "HTML Lists",
          "Text Formatting",
          "Description Tag",
          "HTML Entities",
          "Images",
          "Tables",
          "Table Attributes",
          "Nesting Tables",
          "Linking",
          "Back And Sub Directory",
          "Target Attributes And Bookmarking",
          "Iframe",
          "Introduction to CSS",
          "Inline CSS",
          "Internal and External CSS",
          "CSS Selectors",
          "Anchor States",
          "How To Use the Div and How it Works",
          "Web Page Dimensions",
          "CSS Box models",
          "CSS Background",
          "Float and Clear",
          "CSS Text",
          "CSS Fonts",
          "CSS Tables",
          "CSS Lists",
          "CSS Navigations",
          "HTML Forms",
          "Applying CSS on Forms",
          "A Beautiful Form",
          "The Web Page Layout",
          "The Complete header",
          "The Middle Area",
          "The Complete Middle Area and Footer",
          "HTML & CSS Source Code",
          "Quiz 1"
        ],
        "Learn HTML5 and CSS3 From Beginner To Advanced": [
          "Introduction to HTML5",
          "HTML5 Basic Syntax",
          "Completing The Semantic Layout",
          "HTML5 New Elements",
          "HTML5 Multimedia",
          "Introduction To The CSS3",
          "CSS3 Borders and Gradient Background",
          "CSS3 Shadow Effects",
          "CSS3 Text",
          "CSS3 Transformation",
          "CSS Transition",
          "CSS3 Animation",
          "CSS3 Columns",
          "CSS3 Filters",
          "Creating HTML5 and CSS Form",
          "HTML5 New Input Type",
          "HTML5 Attributes, Tags and Validator",
          "Simple Website Project Using HTML5 and CSS3",
          "Creating header",
          "Creating Middle Area",
          "Creating Middle Area 2",
          "Creating Middle area 3",
          "Completing Middle Area and Footer",
          "Adding Animation to the Project",
          "HTML, CSS, HTML5 and CSS Section Summary & Final Website Project!",
          "HTML5 & CSS3 Source Code",
          "Quiz3"
        ],
        "Learn HTML5 Canvas From Beginner To Advanced": [
          "Introduction",
          "How Canvas Works and a Simple Rectangle",
          "Draw a Line",
          "Applying Different method to the Line",
          "Drawing a Circle in a Canvas",
          "Creating Quadratic Curve",
          "Bezier Curve",
          "Creating Paths",
          "Lines",
          "HTML5 Canvas Source Code",
          "Quiz15"
        ],
        "Learn Bootstrap, Bootstrap3, and Bootstrap4 From Beginner To Advanced": [
          "Introduction To Bootstrap",
          "How To Download Bootstrap and jQuery and their CDNs",
          "How Bootstrap Works",
          "The Grid system",
          "Containers",
          "Bootstrap Text styles",
          "Images",
          "Tables",
          "Bootstrap new Components",
          "Glyphicons & Fontawesomes",
          "Navbar and DropDowns",
          "Tabs and Pills",
          "List Groups",
          "Alerts",
          "Panels",
          "Accordion",
          "Paginations, Pagers and Breadcrumb",
          "Modals",
          "Carousel",
          "Styling Forms",
          "Form Kinds",
          "Form Validate Input",
          "The tooltip and the Popover",
          "The Complete Bootstrap Project Beginning With The Header",
          "The Complete Bootstrap Project: The Landing Page",
          "The Complete Bootstrap Project: Creating the Gallery Page",
          "The Complete Bootstrap Project: Creating the About Us Page",
          "The Complete Bootstrap Project: Creating the Contact Us Page",
          "Bootstrap Section Summary",
          "Bootstrap, Bootstrap3, and Bootstrap4 Source Code",
          "Quiz4"
        ],
        "Learn JavaScript From Beginner To Advanced": [
          "Introduction to the JavaScript",
          "Creating a Sample File",
          "Adding Comments",
          "JavaScript External File",
          "The Variables",
          "Data Types",
          "Concatination",
          "HTML Inside JavaScript",
          "Arithematic Operators",
          "If Condition and Comparison Operator",
          "Comparison Operators",
          "If, Else or Else",
          "Nested If Else",
          "Switch Statement",
          "For Loop",
          "While and Do While Loop",
          "Break And Continue Statements",
          "Functions",
          "Functions in Details",
          "Local and Global Variables",
          "Events",
          "String Functions",
          "Arrays",
          "Arrays Function",
          "Objects",
          "JavaScript Section Summary",
          "JavaScript Source Code",
          "Quiz5"
        ],
        "Learn jQuery From Beginner To Advanced": [
          "Introduction To jQuery",
          "Download and Implement jQuery",
          "Basic jQuery Syntax",
          "jQuery Events",
          "jQuery Selector",
          "This Selector",
          "Selecting Advance",
          "jQuery Effects",
          "jQuery Animation Effects",
          "Stop Effects and Effect Timing",
          "Call back Function",
          "Chaining Method and Advance Animation",
          "Getting and Setting the HTML and Text",
          "Get and Set the Attr and the Image Changer",
          "Adding New Elements",
          "Removing Elements",
          "jQuery CSS method",
          "Dimension",
          "Adding Removing CSS Classes",
          "Downloading and Installing jQuery UI",
          "Coding First jQuery UI Script",
          "Droppable",
          "Sortable",
          "Accordion",
          "Tabs",
          "Auto Complete",
          "Menu",
          "Project: Creating CSS Generator (1)",
          "PROJECT: Creating CSS Generator (2)",
          "Project: Creating CSS Generator (3)",
          "jQuery Section Summary",
          "jQuery Source Code",
          "Quiz6"
        ],
        "Learn PHP & MySQL From Beginner To Advanced": [
          "Introduction To PHP",
          "PHP Basic Syntax",
          "Integers and Strings",
          "Embeding HTML and PHP Inside Eachother and the PHP Comments",
          "All About Variables and Concatination",
          "Arithmatic, Assignment and Increment, Decrement Operators",
          "Conditional Statements and Comparison Operators",
          "Comparison and Logical Operators",
          "If and Else",
          "Switch Statement",
          "While Loop",
          "What are the Functions",
          "Functions in Detail",
          "Static Keyword",
          "String Functions",
          "HTML Specified Functions",
          "Arrays",
          "Printing Arrays Using For and Foreach Loop",
          "Creating Variables in the URL",
          "Include and Require",
          "Getting Form Data in PHP Using GET and POST Method",
          "PHPMyAdmin, Database and the Table",
          "Database Connection",
          "Retrieving Data From Database",
          "Creating Complete form and Appying Bootstrap for Inserting Data",
          "Creating Complete form and Appying Bootstrap for Inserting Data (1)",
          "Deleting Row From Table Using PHP",
          "Editing Rows from Table Using PHP",
          "Editing Rows from Table Using PHP (1)",
          "PHP Section Summary",
          "PHP & MySQL Source Code",
          "Quiz7"
        ]
      },
      "requirements": [
        "An Internet connection and computer",
        "Download the editor of your choice to practice coding right along with us",
        "You DO NOT need prior experience in coding to take this course",
        "You DO NOT need fancy software to code with us"
      ],
      "description": "Have you always wanted to learn Web Development but you just don't know where to start\nOr maybe you have started but you just don't know how\nThen the Complete Web Developer Masterclass Beginner To Advanced is for You\nWelcome To the Complete Web Developer Masterclass Beginner To Advanced\nJoin 950,000+ Students Who Have Enrolled in our Udemy Courses\n10,000 FiveStar Reviews Show Students Who Enroll in our Courses get results\nYou Get Over 316 Lectures and 51 hours of premium content\nWatch the Promo Video to see how you can Get Started Today\nWhat do you get with this course\nHours of easy to watch video lessons\nDownloadable Resources\nPractical activities\nInstructor support if you have any questions\nCommunity of students ready to help\nWhat will you learn in this Complete Web Developer Masterclass Beginner To Advanced\nIn short you'll learn it all Seriously our goal is to make the most comprehensive Web Development course out there not filled with fluff but filled with only the most actionable and latest tips and strategies We'll be updating this course periodically to make sure we're covering any change with Web Development\nYou'll start by an overview of the course and learn about the benefits of acquiring Web Development skills\nYou'll then start by learning the Fundamentals of Coding\nOnce you understand the fundamentals of coding you will learn from beginner to advanced about EMMET for making short codes HTML CSS HTML5 and CSS3 HTML5 Canvas Bootstrap Bootstrap3 and Bootstrap4 JavaScript jQuery PHP MySQL AJAX Techniques and complete a multiple framework big project You will also learn how to set up your web hosting WordPress Nodejs and AngularJS\nBy the end of our course you will be able to\nLearn the fundamentals of coding\nCreate beautiful interactive websites from scratch using the framework of your choice\nTeach others coding and use your skills to help them get a job with the real world\nContinue to learn and grow as a developer long after the course concludes\nComplete a multiple framework project with us\nBecome an expert using HTML CSS WordPress Bootstrap PHP AJAX jQuery and So Much More\nReady to get started\nOnce you enroll we recommend students to install their favorite editor on their computers to follow along\nSee What Current Students Are Saying About Our Course\n\"Content is so clear to understand and start from the basics, I'm going to enjoy this course of each and every section\"\n-Yash Patel\n\"Great course! Excellent method of content delivery, I will recommend it to my friends\"\n-Shreeya Kharbanda\n\"The way the tutor Simplified the teaching is so cool Even a layman would understand He is so engaging I can't wait to continue to the next topic This is just so amazing I've never encountered a computer training this engaging and simple\"\n-Ngozi Akunwanne\nWho are your instructors\nWe are Joe Parys and Shahzaib Kamal creatives who have taught over 950,000+ students around the world with our online courses tutorials and other content Shahzaib Kamal is the lead instructor for this course bringing his wealth of knowledge in web development Joe Parys is the Bestselling Online Instructor Digital Marketing Expert and Leader in the elearning industry He is the CEO of the Joe Parys Academy serving more than 1,00,0000+ students in more than 100+ co authored courses from 190 countries all around the world\nOur goal is to show you the real world and practical ways to start creating your first website with confidence today\nWith the right mindset understanding and application you will instantly begin learning how to code in HTML CSS PHP and more\nWhen I learn something new I add it to the course at no additional cost to you This is a course that will continue to add more and more to every aspect of your life\nWhat I can't do in this course\nI can't guarantee your success this course does take work on your part But it can be done\nI am also not responsible for your actions You are responsible for 100 of the decisions and actions you make while using this course\nIt's time to take action\nOur happiness guarantee\nThis course includes a moneyback guarantee so there is no risk to try it out Sign up today see if it's the right one for you\nEnroll now\nSincerely\nJoe Parys and Shahzaib Kamal",
      "target_audience": [
        "Anyone who wants to learn about web development, regardless of previous experience",
        "Complete beginners with no coding experience",
        "Intermediate & expert developers looking to learn new frameworks and advanced methods",
        "If you want to take ONE COURSE to learn everything you need to know about web development, enroll in this course"
      ]
    },
    {
      "title": "Learn HTML5 Programming From Scratch",
      "url": "https://www.udemy.com/course/learn-html5-programming-from-scratch/",
      "bio": "A Complete HTML5 Programming Course for Beginners",
      "objectives": [
        "By the end of the course you will be able to create full fledged HTML5 websites",
        "You will be able to use features like Drag and Drop, Geo location and Web Storage to create immersible user experience.",
        "You will have through understanding of both HTML and CSS",
        "You will be able to create web applications for mobile phones as well"
      ],
      "course_content": {
        "HTML Basics (Update)": [
          "Overview",
          "Tour of VS Code",
          "Begin coding in HTML",
          "Links and Navigation",
          "HTML Images",
          "HTML Basics"
        ],
        "CSS Basics (Update)": [
          "Connect a CSS File and Target HTML Elements",
          "CSS Borders, Margins and Padding",
          "Styling the Nav Bar",
          "Styling Images",
          "CSS Basics"
        ],
        "Flexbox, CSS Animations and Position (Update)": [
          "Intro to Flexbox",
          "More FlexBox",
          "Intro to CSS Animations",
          "More Animations",
          "Position Property and Background Images",
          "Flexbox, CSS Animation and Position"
        ],
        "Forms, Frameworks and CSS Grid (Update)": [
          "Forms",
          "Intro to Materialize",
          "Materialize Continued",
          "Intro to CSS Grid",
          "More CSS Grid",
          "Forms, Frameworks and CSS Grid"
        ],
        "Git and Intro to Javascript (Update)": [
          "Git and Github",
          "Deploy with Netlify",
          "Portfolio Project",
          "Intro to Javascript Part 1",
          "Intro to Javascript Part 2",
          "Javascript Coding Practice Part 1",
          "Javascript Coding Practice Part 2",
          "Git and Intro to Javascript"
        ],
        "Introduction to basic HTML": [
          "Introduction",
          "Starting HTML5 Programming",
          "HTML Basics",
          "Creating a HTML Webpage",
          "HTML Tables and Lists",
          "HTML Table List Part - 2",
          "HTML Forms and Input -Part 1",
          "HTML Forms & Input - Part 2",
          "Resources Chapter 1",
          "HTML Basics"
        ],
        "HTML -Continued": [
          "Introduction to CSS",
          "Making Web pages",
          "CSS - Continued - Part1",
          "CSS - Continued - Part2",
          "Putting up a website",
          "Resources Chapter 2",
          "Advance HTML"
        ],
        "Introduction to HTML5": [
          "Introduction HTML5",
          "New Tags and Elements",
          "New Form Elements - Part 1",
          "New Form Elements - Part 2",
          "Resources Chapter 3",
          "Introduction to HTML5"
        ],
        "HTML5 features": [
          "HTML5 Graphics - Part 1",
          "HTML5 Graphics - Part 2",
          "HTML5 Graphics - Part 3",
          "HTML5 Feature Detection and Drag and Drop -Part 1",
          "HTML5 Feature Detection and Drag and Drop - Part 2",
          "HTML5 Multimedia - Part 1",
          "HTML5 Multimedia - Part 2",
          "SVG in HTML5",
          "SVG in HTML5 - Part 2",
          "HTML5 Features"
        ],
        "HTML5 Advance features": [
          "Geolocation",
          "Geolocation - Part 2",
          "WebStorage",
          "WebStorage Part 2",
          "HTML5 - Application Cache",
          "HTML5-Application Cache - Part 2",
          "HTML5 for Mobile Phones",
          "Resources Chapter 5",
          "HTML5 Advance Features"
        ]
      },
      "requirements": [
        "Any HTML editor and HTML5 compatible web browser"
      ],
      "description": "HTML5 is one of the hot web technologies and is widely gaining acceptance across mobile and web. In our course, you get a complete resource that can get you started on application development for HTML5. In our course, you work on actual examples and go through important concepts required for thorough knowledge.\nIn our course, you will start with basic HTML tags. You will learn how to create HTML websites and use CSS in your work before we start discussing HTML5. We do not assume any prior knowledge so we go through the concepts from the beginner's point of view. In our HTML5 lectures, we start with new tags and forms. We then gradually move to advance topics like Drag and Drop and Multimedia. We follow it with difficult topics like Geolocation, WebStorage, and Application cache. This course creates easy to grasp examples for each of the concepts and by the end of it, you will be able to understand the complete picture rather than just bits and pieces of the technology.  Some of the salient features for the course are:\nDesigned for absolute beginners\nPractical tips and tricks for the real world development\nUpdated to include modern concepts\nIt shows how to think in HTML\nLearn the basic Javascript\nThis is the complete HTML5 course you will need to get started with HTML5 application development. The simplicity and its content have made it one of the most popular HTML5 courses on the planet.",
      "target_audience": [
        "No programming background is assumed just a zeal to learn"
      ]
    },
    {
      "title": "All about NodeJS",
      "url": "https://www.udemy.com/course/all-about-nodejs/",
      "bio": "Create & Deploy High Performance Node JS Apps on the Cloud and More !",
      "objectives": [
        "Build High Performance and Scalable Apps using NodeJS",
        "Learn about ES6 with my free eBook - ECMAScript 6 QuickBytes",
        "Use NodeJS Streams to write a Web Server",
        "Use the Node Package Manager (NPM) for managing dependencies",
        "Use the Express 4 Framework for building NodeJS Apps",
        "Use the EJS templating language",
        "Understand MongoDB as a NoSQL Database",
        "Create & Use MongoDB Databases using services like MongoLab",
        "Create Realtime Apps that use Web Sockets",
        "Upload & Resize Images using NodeJS",
        "Integrate Authentication using Social Media Sites like Facebook",
        "Structure the NodeJS app into modules",
        "Create and Deploy EC2 Cloud Server Instances on Amazon Web Services",
        "Create and Use Amazon's S3 Storage Service with NodeJS",
        "Use Amazon's Cloudfront Service",
        "Using Amazon's Elastic IP",
        "Configure Security Groups, Ports & Forwarding on Amazon EC2",
        "Deploy a NodeJS app on the EC2 Instance",
        "Deploy a NodeJS app on Heroku",
        "Deploy a NodeJS app on Digital Ocean",
        "Install & Deploy NGINX as a Reverse Proxy Server for NodeJS Apps",
        "Configure NGINX as a Load Balancer",
        "Learn about Enterprise Integration",
        "Create an app using the incredible Hapi framework",
        "Learn more about logging using the Hapi framework",
        "Learn to use ES6 with Nodejs",
        "Install & Deploy Apache Apollo MQ with Nodejs and a Python Script"
      ],
      "course_content": {
        "Prologue": [
          "What is NodeJS ?",
          "Before You Begin | ECMAScript 6 QuickBytes | Free eBook"
        ],
        "Installing NodeJS": [
          "Installing NodeJS on Windows",
          "Installing NodeJS on a Mac",
          "Installing NodeJS on Linux (Ubuntu)",
          "Installing and using muliple versions of NodeJS (Only on Mac/Linux)"
        ],
        "NodeJS Fundamentals": [
          "Before You Begin : Important Note",
          "Read-Evaluate-Print-Line | REPL & Hello Node !",
          "Hello NodeJS",
          "Hello Routing! | Understanding how Requests & Responses work",
          "Hello Routing! | Handling GET Requests",
          "Hello Routing! | Handling POST Requests",
          "NodeJS at its core",
          "Build a Web Server | Basic",
          "Promise me you'll never callback",
          "Build a Web Server | Using Streams",
          "Modules & NPM",
          "Writing your own Module!",
          "Enigma v2"
        ],
        "MongoDB 101": [
          "Introduction to MongoDB",
          "Installing MongoDB on Windows",
          "Installing MongoDB on a Mac",
          "Playing with the MongoDB Shell"
        ],
        "NodeJS Frameworks": [
          "What are frameworks?",
          "Express and the MEAN Stack",
          "Beyond the MEAN Stack"
        ],
        "ChatCAT - Creating a Realtime Multiroom Chat App & Deploying it on Heroku": [
          "The Goal",
          "Structuring the app",
          "Examining the user interface",
          "Installing Nodemon",
          "npm init and here we go!",
          "Hello Express!",
          "Middleware Ahoy!",
          "The View Renderer",
          "Serving Static Assets",
          "Express Router : First Steps",
          "Express Router : The routes object",
          "Express Router : Mounting the routes - 1",
          "Express Router : Mounting the routes - 2",
          "Express Router : Handling a 404",
          "Do we need a database? Yes we do!",
          "MongoDB as a service | MongoLab.com",
          "Migrating to MongoDB Atlas - IMPORTANT",
          "Environments and the config loader",
          "Mongoose and the database module",
          "Sessions 101",
          "Implementing sessions using the express-session middleware",
          "Social Authentication : An Introduction",
          "Social Authentication : Introduction to Passport",
          "Social Authentication : Installing Passport & Strategies",
          "Social Authentication : Registering the app on Facebook",
          "Social Authentication : Facebook Strategy",
          "Social Authentication : Database helpers",
          "Social Authentication : Serializing & deserializing user data",
          "Social Authentication : Routes",
          "Updates to Facebook Login | Enforcing HTTPS",
          "Social Authentication : Rendering name and profile picture",
          "Social Authentication : Registering the app with Twitter",
          "Social Authentication : Twitter Strategy",
          "Social Authentication : The logout button",
          "Social Authentication : Securing routes",
          "Socket.io | An introduction",
          "Socket.io | Installation and rewiring the server",
          "Socket.io | Storing chat rooms and user data",
          "Socket.io | Bridging Socket.io with Session",
          "Socket.io | Setting up the Rooms Page",
          "Socket.IO | Rendering the list of chatrooms",
          "Socket.IO | Creating a new chatroom",
          "Socket.IO | The chatroom route",
          "Socket.IO | Joining a chatroom",
          "Socket.IO | Updating the list of active users",
          "Socket.IO | When a user leaves or disconnects",
          "Socket.IO | The chat functionality",
          "Sending images using Cloudinary (Optional)",
          "Socket.IO | Scaling with Redis",
          "Logging with Winston",
          "Logging requests using Morgan",
          "Heroku | An introduction",
          "Heroku | Installing the Heroku Toolbelt CLI",
          "Heroku | Preparing for deployment",
          "Heroku | Setting up configuration variables",
          "Heroku | Provisioning Redis",
          "Heroku | Reconfiguring Facebook & Twitter and Deployment!",
          "Heroku | Monitoring your app",
          "Scaling up - An insight | Summary"
        ],
        "Node.JS on Amazon Web Services !": [
          "Introduction to Project PhotoGRID",
          "IMPORTANT : Before you Begin",
          "Examining the User Interface & Getting Started",
          "Creating the Express App & Setting up Socket.io",
          "Creating the Routes.js module",
          "Creating Configuration Files",
          "Amazon Web Services | Signing Up & Creating an S3 Bucket",
          "Amazon Web Services | Setting up a Bucket Policy",
          "Amazon Web Services | Setting up Knox",
          "Setting up the Upload Button Handler & AJAX",
          "Setting up Formidable for Receiving the files",
          "Setting up GraphicsMagick Library + gm for Nodejs for resizing images",
          "Uploading resized images to the S3 using Knox",
          "Storing the file name and votes in MongoDB on MongoLab",
          "Getting images into the Photogrid gallery",
          "Amazon Web Services | Setting up CloudFront Distribution",
          "Creating the Vote Up Functionality & Final Testing",
          "Amazon Web Services | Creating an Elastic Compute Cloud (EC2) Instance",
          "Amazon Web Services | Installing NodeJS on EC2",
          "Amazon Web Services | Creating an Elastic IP for your EC2 Instance",
          "Amazon Web Services | Installing the Photogrid App on the EC2 Instance",
          "Amazon Web Services | Security Group, Ports & Port Forwarding",
          "Amazon Web Services | Ensuring the Photogrid app runs automatically"
        ],
        "NodeJS and NGINX for the Kill !": [
          "What are we talking about ?",
          "The Awesome Cloud9 IDE",
          "Spinning a Droplet on Digital Ocean & Using Cloud9IDE",
          "Installing Nginx",
          "Nginx as a Proxy Server for NodeJS",
          "Uploading and Reconfiguring ChatCAT to work with Nginx",
          "Load Balancing with NGINX"
        ],
        "Enterprise Integration | ES6 | HapiJS": [
          "Introduction to Enterprise Integration",
          "The task at hand",
          "Installing Python dependencies on a Mac",
          "Installing Python dependencies on Windows",
          "Installing Apache Apollo on a Mac",
          "Installing Apache Apollo on Windows",
          "Configuring Apache Apollo | Users and Queues",
          "Introduction to the Hapi Framework",
          "Hello Hapi and a bit of ES6",
          "Writing the Core Plugin | Routes & Views",
          "Setting up Socket.io",
          "Setting up the Stomp Client & Storing Access Credentials",
          "The 'Process' Button State",
          "Core Functionality : The Workflow",
          "Core Functionality : The Code",
          "UPDATE : Fixing the Array.observe() deprecation issue",
          "Fixing data retrieval on a page refresh",
          "Logging using Hapi",
          "Summary"
        ],
        "Epilogue": [
          "Recommended Reading & Resources",
          "BONUS : Join my inner circle of friends!"
        ]
      },
      "requirements": [
        "Working knowledge of HTML, CSS and Javascript",
        "Basic Working knowledge of an image editing application such as Adobe Photoshop would also help, but is not necessarily needed."
      ],
      "description": "About this Course\n\nNodeJS is a platform that allows developers to write server side high performance and networked applications. And that too using good old Javascript. But wait ! Isn't Javascript meant to be used for forms and stuff on web pages ?\nWell that was 10 years ago. The world has gone from 'Oops! You've not filled up the form properly !' days to today's modern web apps and social media sites that rely heavily on Javascript. Google Apps, Facebook, Twitter, Google Plus and LinkedIn, being handful examples of this movement. And to think that this quantum leap would not have been possible without Javascript is not an overstatement. Today, when you socialize with your friends on Facebook, or use your Gmail inbox, you're running thousands of lines of code written in Javascript, in your browser.\nWith Node JS, you can take this knowledge back on the server, where usually you would expect to see the likes of PHP, Ruby, ASP dot NET etc. But that's only a small portion of the reason why NodeJS is so cool. The fact that you can write full blown networked applications (think chat servers, collaborative tools, real-time data visualisation apps) with just a few lines of code is more than reason enough to not only look at NodeJS, but deep dive into it !\nBut I know PHP ? Why should I learn NodeJS ? Well, for starters, learning something new never hurts. But most importantly, learning NodeJS is great because :\nNode allows you to write highly scalable networked apps deployed on the cloud !\nYou're working at a different level of application design per se with Node and that means that you're not writing an app that sits on top of a stack, you design the stack from the server up. And while that may sound daunting, it really is not and you'll see why.\nYou code in the same language, both on the server and on the front end ! We're all polyglots (we use multiple programming languages and syntax in most of our projects), but managing code in the same language on the back-end and the front-end never hurts and in-fact can be a huge time saver when debugging.\nNodeJS is used by the likes of LinkedIn, Yahoo and Microsoft to name a few. Its pretty new and consequently you gain advantage from the exponentially growing community of NodeJS & Javascript developers and that's great fun, really !\nIf you've been coding in Javascript, you can leverage your existing knowledge and skills and take it to a whole new level !\n\n\nThe Real Problem\nSo, NodeJS sounds pretty interesting so far, but what really hit me in the face when I was learning all about Node was the fact that, with any new platform, framework or technology, you need to take baby steps, all the way through, to making real world examples, if you have to get to the grips of it. And that leads us to why you're here.\nIn this course, we'll go from absolute scratch, all the way up to building and deploying full blown NodeJS app on the Cloud !\nProject Oriented Learning\nWith NodeJS, we will build two full blown apps. We will go all the from concept creation, UI/UX design to coding and deploying our app on the cloud.\nA. ChatCAT - One of the fun things that you can do with NodeJS is build realtime apps that allow a high number of concurrent users to interact with each other. Examples of this kind include Chat Servers, Gaming Servers, Collaborative Tools etc. We will build a multi-room chat server that allows users to login via Facebook, Create Chatrooms of their choice and Chat in realtime. We will not only create this app, but also deploy it on Heroku and Digital Ocean !\nYou will learn all about using Websockets, Structuring your App in an efficient manner, creating and using development & production configurations, Authentication using Facebook, Setting up an App on Facebook, Managing Sessions, Querying & Using a Hosted MongoDB Database, Using Heroku & Digital Ocean's Cloud Services and lots more...\nB. PhotoGRID - The second complete app that we will build in this course is a Photo Gallery app which lets users upload images into a gallery with the ability to vote up the images that they like. This NodeJS app lets users upload files, which are then resized to thumbnails on the server and stored in an Amazon S3 Bucket for optimal delivery to the front end interface. The entire app runs on an Amazon EC2 Cloud Server which we will create from scratch and configure for use.\nYou will learn about managing file uploads using NodeJS & AJAX, Resizing Images on the Server, Accessing & Storing files in an S3 Bucket, Querying & Using a Hosted MongoDB Database, Using Amazon's Elastic IP Service & Cloudfront distribution, ensuring your NodeJS app runs automatically even if the server is restarted and lots more...\nIn the projects above, we leave no stone unturned in terms of execution. This is a complete hands-on course that is not just limited to NodeJS but to the ecosystem that needs attention when a NodeJS app is built and deployed. My intent is hand hold you all the way from writing your first app to deploying production level apps on the cloud.\nAnd I'm always available to personally help you out, should you get stuck.\nBONUS :: Here's the best thing about this course. The curriculum that you see gets you up and running with NodeJS & Cloud Deployment. However, there is so much more that you can do with NodeJS, which is why I will keep adding new lectures and sections to this course on an ongoing basis. There is so much more that you will get with full lifetime access to lectures and all updates !!\nSo, join in the fun !",
      "target_audience": [
        "Understand the inner workings of NodeJS",
        "Web Designers & Front End Developers who wish to extend their knowledge of Javascript for building high performance network applications.",
        "Software Developers who want to build high performance network applications.",
        "Absolute beginners with basic knowledge of HTML, CSS and Javascript, wanting to upgrade to professional Web Development and Building Web Apps.",
        "Anyone who wishes to get hands-on training with setting up an Amazon EC2 Instance with a host of other services like Cloudfront, Elastic IP and S3",
        "Anyone who wishes to get hands-on training with deploying a NodeJS app on the cloud",
        "Computer Engineering students",
        "Tech Entrepreneurs who want to get their hands down and dirty with Web Coding & App Development.",
        "Anyone who wishes to stay on the forefront of technology !",
        "PHP, ASPnet, Perl, Java & Ruby coders wanting to leap onto the NodeJs bandwagon."
      ]
    },
    {
      "title": "The Complete SSL and TLS Guide: HTTP to HTTPS",
      "url": "https://www.udemy.com/course/ssl-complete-guide/",
      "bio": "Configure Cloudflare, FREE Let's Encrypt SSL/TLS certificate, NGINX and Apache web servers, create CSR SSL request",
      "objectives": [
        "Learn how to install SSL/TLS Certificate on the web server",
        "What is the difference between HTTP and HTTPS",
        "What is CA (Certificate Authority) and how chain of trust is built",
        "How TLS certificate is structured (subject name, issuer name, validity period, signature etc.)",
        "Let's Encrypt free certificates that are valid 90 days. Certbot ACME client for automatic certificate issuing and renewal",
        "Cloudflare reverse proxy with free SSL certificates",
        "CSR (Certificate Signing Request), domain validation and certificate installation",
        "Install and configure NGINX web server for SSL/TLS encryption"
      ],
      "course_content": {
        "Course Introduction": [
          "Intro",
          "Let's get connected! Join the Learning Community"
        ],
        "Introduction to the HTTPS and TLS": [
          "Section 1 Introduction",
          "Overview of researches dedicated to SSL, TLS and HTTPS",
          "Overview of the certificates of some popular websites",
          "Difference between HTTP and HTTPS",
          "Analyzing traffic using Wireshark",
          "TCP/IP stack by example",
          "Analyzing HTTP protocol using Wireshark",
          "Analyzing HTTPS and TLS using Wireshark"
        ],
        "Encryption and hashing overview": [
          "Section 2 Introduction",
          "Symmetric Key Encryption",
          "Symmetric Key Encryption Algorithms",
          "Hashing Overview",
          "MD5 hashing algorithm",
          "SHA hashing algorithm and HMAC overview",
          "Asymmetric keys overview",
          "Encryption using asymmetric keys",
          "Signing data using assymmetric keys",
          "RSA Overview",
          "PKI - Public Key Infrastructure Overview",
          "Certificate overview"
        ],
        "RSA, Certificates and Chain of Trust": [
          "Section 3 Introduction",
          "Installing OpenSSL",
          "Using OpenSSL for RSA keys generation",
          "Exploring certificate of Instagram",
          "Exploring certificate of Google",
          "Exploring certificate of Comodo",
          "Root CA and root certificates in the OS",
          "How Chain of Trust is built",
          "Verifying chain of certificates",
          "Verifying SSL certificate and certificates chain",
          "PKI, Chain of trust and certificates summary",
          "Certificate domain scopes"
        ],
        "SSL, TLS and HTTPS": [
          "Section 4 Introduction",
          "Introduction to the SSL and TLS",
          "History and versions of the SSL and TLS",
          "Why RSA is not used for data encryption in HTTPS",
          "How TLS session is established",
          "Analyzing TLS session setup using Wireshark",
          "Overview of cipher suites",
          "Encryption key generation by the web browser",
          "Delivering encryption key using Diffie Hellman key exchange",
          "Diffie Hellman overview",
          "Modulus operation",
          "Diffie Hellman algorithm",
          "Elliptic Curve Cryptography Overview",
          "Point Addition on Elliptic Curve",
          "Multiple Point Addition",
          "Point Doubling and Optimization",
          "Elliptic Curve Discrete Log Problem",
          "Comparing formulas",
          "ECDHE - Elliptic Curve Diffie Hellman Exchange",
          "Exploring ECDHE with ECDSA"
        ],
        "Launching TLS secured website with free domain and hosting": [
          "Section 5 Introduction",
          "Free domains overview",
          "Setting up free domain and hosting using GitHub Pages",
          "Exploring TLS session with our website at Github.io - PART 1",
          "Exploring TLS session with our website at Github.io - PART 2"
        ],
        "Custom domain with free hosting": [
          "Section 6 Introduction",
          "Planning next steps with Paid Domain",
          "Buying a domain",
          "Setting up free hosting",
          "Overview of the TLS settings at the free hosting",
          "OPTIONAL - Trying to install free Let's Encrypt TLS certificate on free hosting"
        ],
        "Free TLS certificate (Let's Encrypt) at paid hosting": [
          "Section 7 Introduction",
          "VPS vs Dedicated Server",
          "Hosting Services Overview - PART 1",
          "Hosting Services Overview - PART 2",
          "Buying a droplet at DigitalOcean",
          "Launching Wordpress website with HTTPS",
          "Exploring our brand new TLS Certificate",
          "Finishing Wordpress installation",
          "Let's Encrypt and Certbot Overview",
          "Exploring TLS certificates via shell",
          "Exploring certbot configuration and testing renewal",
          "What we have got so far"
        ],
        "Cloudflare with free TLS certificate": [
          "Section 8 Introduction",
          "Reverse Proxy and Cloudflare",
          "Overview of the current setup",
          "Moving our website to Cloudflare",
          "Exploring free TLS certificate from Cloudflare",
          "Exploring TLS settings at Cloudflare",
          "Cloudflare SSL Operation Modes",
          "Flexible SSL Operation Mode at Cloudflare",
          "Off SSL Operation Mode at Cloudflare"
        ],
        "Configuring NGINX web server and installing TLS certificate": [
          "Section 9 Introduction",
          "Current Setup and planning next steps",
          "Installing Nginx web server",
          "Configuring Nginx web server",
          "Setting up Cloudflare Origin TLS certificate",
          "Cloudflare summary",
          "Disable Cloudflare"
        ]
      },
      "requirements": [
        "Basic computer knowledge",
        "Any computer (Mac or PC)"
      ],
      "description": "This course is all about securing websites with SSL/TLS certificates.\nBecome a master of HTTPS, Let's Encrypt, Cloudflare, NGINX and SSL/TLS Certificates.\n\n\nThis is the most complete practical SSL guide here on Udemy that includes tons of practical activities. All practice exercises are performed on a real domain and real hosting and finally you will get production ready solution with HTTPS setup and redirection of HTTP to HTTPS. You can have zero knowledge about computer networks, encryption, configuration of web servers. All will be taught from scratch, from simple setup to complex solution. If you want to get deep knowledge of SSL and HTTPS this course is for you!\n\n\nWe will start by exploring basics of symmetric encryption algorithms like AES,  asymmetric encryption RSA, hashing protocols MD5 and SHA.  Also I will explain you fundamentals of computer networks, TCP/IP stack and for that we will use Wireshark traffic analyzer.\nYou will learn what is the structure of the SSL/TLS certificate. Also you will understand why CAs (Certificate Authorities) are needed and how chain of trust is built.\nIn practice sections we will perform multiple practice activities:\nBuy a domain and configure DNS settings\nUse Certbot ACME client to automatically obtain free SSL certificate from Let's Encrypt\nWith help of OpenSSL generate RSA keys, self-signed certificates\nSecure Wordpress with Apache using SSL/TLS certificates\nCreate CSR (Certificate Signing Request) by OpenSSL and submit CSR to CA server\nConfigure Cloudflare for your domain and setup different SSL modes of operations\nInstall and configure NGINX web server for SSL/TLS certificates\nMigrate from HTTP to HTTPS\nRedirect all traffic using HTTP 301 redirect from HTTP to HTTPS\n\n\nWith this course you will get lifetime-long access to 100 lectures and tens of practical exercises. After the course you will become a guru of SSL and TLS encryption and will be able easily obtain and install SSL certificates on your web servers.\nYou will also get 30-days money-back guarantee. No questions asked!\nDon't wait and join the course now!",
      "target_audience": [
        "Owners of any websites",
        "DevOps Engineers",
        "Web developers",
        "Network Engineers",
        "JavaScript developers"
      ]
    },
    {
      "title": "Python and Django Full Stack Web Developer Bootcamp",
      "url": "https://www.udemy.com/course/python-and-django-full-stack-web-developer-bootcamp/",
      "bio": "Learn to build websites with HTML , CSS , Bootstrap , Javascript , jQuery , Python 3 , and Django!",
      "objectives": [
        "Create a fully functional web site using the Full-Stack with Django 1.11",
        "Learn how to use HTML to create website content",
        "Use CSS to create beautifully styled sites",
        "Learn how to take advantage of Bootstrap to quickly style sites",
        "Use Javascript to interact with sites on the Front-End",
        "Learn how to use jQuery to quickly work with the DOM",
        "Understand HTTP requests",
        "Create fantastic landing pages",
        "Learn the power of Python to code out your web applications",
        "Use Django as a back end for the websites",
        "Implement a full Models-Views-Templates structure for your site"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Course Overview Don't Skip this Lecture!",
          "FAQ - Frequently Asked Questions",
          "Course Set-Up and Installation",
          "Notes on Updates Versions of Django"
        ],
        "Front-End Introduction": [
          "What is the Web?"
        ],
        "HTML Level One - Basics": [
          "HTML Level One Introduction",
          "HTML Part One Basics",
          "HTML Level One - Part Two -Basic Tagging",
          "HTML Level One -Part Three - Lists",
          "HTML Level One -Part Four - Divs and Spans",
          "HTML Level One - Part Five - Attributes",
          "HTML Level One Assessment - Overview",
          "HTML Level One Assessment Solutions"
        ],
        "HTML Level Two - Advanced": [
          "HTML Level Two Introduction",
          "HTML Level Two - Part One - Tables",
          "HTML Level Two - Part Two Tables Quiz",
          "HTML Level Two - Part Three Table Quiz Solutions",
          "HTML Level Two Part Four - Forms Basics",
          "HTML Level Two - Part Five Forms and Labels",
          "HTML Level Two - Part Six Forms and Selections",
          "HTML Level Two - Assessment",
          "HTML Level Two - Assessment Solutions"
        ],
        "CSS Level One - Basics": [
          "CSS Level One Intro",
          "CSS Level One Part One",
          "CSS Level One Part Two",
          "Quick Note about next lecture",
          "CSS Level One Part Three",
          "CSS Level One Part Four",
          "CSS Level One Part Five",
          "CSS Level One Assessment",
          "CSS Level One Assessment Solutions"
        ],
        "CSS Level Two - Advanced": [
          "CSS Level Two Introduction",
          "CSS Level Two - Part One Fonts",
          "CSS Level Two - Part One (Fonts) Continued",
          "CSS Level Two - Part Two Box Model",
          "CSS Level Two Spectrum Project Overview",
          "CSS Level Two Spectrum Project Solutions"
        ],
        "Capstone Project One": [
          "Capstone Project One Overview",
          "Capstone Project One Solutions",
          "Capstone Project One Solutions (Continued)"
        ],
        "Bootstrap Overview": [
          "Bootstrap Introduction",
          "Bootstrap Part One - Buttons",
          "Bootstrap Part Two Forms",
          "Bootstrap Part Three Navbars",
          "Bootstrap Part Four - Grids",
          "Bootstrap Project",
          "Bootstrap Project Solutions"
        ],
        "Javascript Level One - Basics": [
          "JS Level One Introduction",
          "JS Level One - Part One Basics",
          "JS Level One - Part Two Connecting Javascript",
          "JS Level One - Part Three Exercise",
          "JS Level One - Part Three Solutions",
          "JS Level One - Part Four - Operators",
          "JS Level One - Part Five - Control Flow",
          "JS Level One - Part Six While Loops",
          "JS Level One - Part Seven For Loops",
          "JS Level One Part Eight Loop Exercises",
          "JS Level One - Part Eight Solutions",
          "JS Level One - Project Overview",
          "JS Level One - Part Nine Project Solutions"
        ],
        "Javascript Level Two": [
          "JS Level Two - Introduction",
          "JS Level Two - Part One - Functions",
          "JS Level Two - Part Two Function Exercises",
          "JS Level Two - Part Two Function Solutions",
          "JS Level Two - Part Three Arrays",
          "JS Level Two - Part Four Array Exercise Overview",
          "JS Level Two - Part Four Array Solutions",
          "JS Level Two Part Five Objects",
          "JS Level Two Part Five Objects Continued",
          "JS Level Two Part Six Object Exercises",
          "JS Level Two Part Six Object Exercise Solutions"
        ]
      },
      "requirements": [
        "A computer with an internet connection and download privileges"
      ],
      "description": "Welcome to the Python and Django Full Stack Web Developer Bootcamp! In this course we cover everything you need to know to build a website using Python, Django, and many more web technologies!\nWhether you want to change career paths, expand your current skill set, start your own entrepreneurial business, become a consultant, or just want to learn, this is the course for you!\nWe will teach you the latest technologies for building great web applications with Python 3 and Django! But we don't just teach that, we also teach the Front End technologies you need to know, including HTML, CSS, and Javascript. This course can be your one stop shop for everything you need! It will serve as a useful reference for many of your questions as you begin your journey in becoming a web developer!\nThis course is designed so that anyone can learn how to become a web developer. We teach you how to program by using HD Video Lectures, Walkthrough Code Projects, Exercises, Concept Presentation Slides, Downloadable Code Notes, Reading Assignments, and much more!\nHere is just a small sampling of the topics included in this course:\nHTML5\nCSS3\nJavascript\njQuery\nBootstrap 3 and 4\nDocument Object Model\nPython\nDjango Basics\nDjango Templates\nDjango Forms\nDjango Admin Customization\nORM\nClass Based Views\nREST APIs\nUser Authentication\nand much,much more!\nYou will also get access to our online community of thousands of students, happy to help you out with any questions you may have! Any questions, feel free to send me a message here on Udemy and connect with me on LinkedIn, check out my profile for other courses.\nWe also have a 30-day money back guarantee, so you can try out the course for an entire month, risk-free!\nAlways keep learning!\nJose",
      "target_audience": [
        "Complete Beginners",
        "Professionals looking to bridge gaps in their knowledge",
        "Python Developers looking to get into Web Development"
      ]
    },
    {
      "title": "How the Internet Works & the Web Development Process",
      "url": "https://www.udemy.com/course/how-the-internet-works-the-web-development-process/",
      "bio": "Learn how the Internet Works - HTTP/HTTPS, Mail Delivery (SMTP), LAN, WAN, Network Basics & Firewalls",
      "objectives": [
        "How the Internet Facilities the movement of Data Packets",
        "The Difference between Local and Wide Area Networks (LAN, WAN)",
        "The Basics of the HTTP and HTTPS Protocols",
        "How DNS Lookups Work",
        "How Email Exchange works using SMTP and IMAP",
        "How Network Ports and Firewalls Work",
        "The difference between Hardware and Software Firewalls",
        "An Overview of the Web Development Process",
        "How to Plan the Development of a Small Website"
      ],
      "course_content": {
        "How the Internet Works": [
          "The Internet Overview",
          "The HTTP Protocol",
          "The HTTPS Protocol",
          "The SMTP Protocol and Local Mail Delivery",
          "Outbound Mail Delivery",
          "Network Basics - LAN and WAN",
          "Network Ports and Firewalls"
        ],
        "The Web Development Process - An Overview": [
          "Web Development Process Overview"
        ],
        "Planning a Website": [
          "Web Application Planning Overview"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Course: How the Internet Works & the Web Development Process\nThis course explores how the internet works, including the composition and transmission of data packets over both Local and Wide Area Networks. We take a look at the HTTP and HTTPS protocols as applicable to client and server side communications - including DNS Lookups. This course will also teach students how email exchange works over SMTP and IMAP. The role of Network Ports and Firewalls are also introduced.\n\nThe course comes complete with two bonus sections which offer a quick guide for aspiring Web Developers. Here we offer a brief overview of the Web Development Process and Basic insights into the planning stages of a small website.\nKey Concepts:\nHow the Internet Facilities the movement of Data Packets\nThe Difference between Local and Wide Area Networks (LAN, WAN)\nThe Basics of the HTTP and HTTPS Protocols\nHow DNS Lookups Work\nHow Email Exchange works using SMTP and IMAP\nHow Network Ports and Firewalls Work\nThe difference between Hardware and Software Firewalls\nAn Overview of the Web Development Process\nHow to Plan the Development of a Small Website\nOutline:\nHow the Internet Works\nThe Internet Overview\nThe HTTP Protocol\nThe HTTPS Protocol\nThe SMTP Protocol and Local Mail Delivery\nOutbound Mail Delivery\nNetwork Basics - LAN and WAN\nThe Web Development Process - Overview\nPlanning a Website",
      "target_audience": [
        "Apiring Web Developers",
        "Web Enthusiasts interested in Learning how the Internet Works",
        "Students interested in Learning various Internet Protocols such as HTTP, HTTPS, TCP/IP, SMTP, IMAP",
        "Students interested in learning how Local and Wide Area Networks Operate",
        "Students interested in the basics of Computer Networking"
      ]
    },
    {
      "title": "Mastering TypeScript - 2025 Edition",
      "url": "https://www.udemy.com/course/learn-typescript/",
      "bio": "Learn the world's fastest growing programming language from scratch. Includes Webpack & React!",
      "objectives": [
        "The ins and outs of ALL of TypeScript's syntax",
        "TypeScript Interfaces, Generics, Classes, Modules, and more",
        "Integrate TypeScript with Webpack",
        "Use TypeScript with ReactJS"
      ],
      "course_content": {},
      "requirements": [
        "Basic JavaScript Experience"
      ],
      "description": "Welcome to the best resource online for mastering TypeScript.\nTypeScript is a powerful superset of JavaScript that makes development smoother, safer, and helps you catch errors and avoid bugs early on. TypeScript adds a bunch of useful features to the JavaScript that you know and love. It helps you be a more productive developer and forces you to write better code.\nTypeScript has skyrocketed in popularity to become one of the world’s most popular and loved programming languages. It has doubled in popularity every year since 2017, and it continues to grow at an astronomical rate. It’s definitely the right time to learn TypeScript!\nThis course covers all the syntax, features, and concepts you need to master TypeScript and start using it in your own codebases. We start with the very basics of the type system and cover everything up to incorporating TypeScript in React codebases and using Webpack with TypeScript.\nHere’s a detailed breakdown of the topics the course covers:\nThe TypeScript type system\nUnion Types\nIntersection Types\nTuples and Enums\nInterfaces\nThe TypeScript compiler and how to configure it\nWorking with the DOM and TypeScript\nTypeScript Classes\nGenerics\nType Narrowing\nType Declarations\nWorking with 3rd party libraries\nWebpack + TypeScript workflows\nIntegrating React and TypeScript\nTypeScript’s Module System\nEnroll in this course to learn what TypeScript is, why it’s so popular, and how to use it!",
      "target_audience": [
        "Complete TypeScript Beginners"
      ]
    },
    {
      "title": "Java Enterprise Edition 8 for Beginners course",
      "url": "https://www.udemy.com/course/java-enterprise-edition-8/",
      "bio": "Understand Jakarta EE, JPA, CDI, JAX-RS, REST, JWT, JSON-P and JSON-B and more. Add \"JEE Developer\" to your résumé!",
      "objectives": [
        "Understand the theoretical underpinnings of Java Enterprise Edition (JEE)",
        "Understand what JEE specifications and implementations are and how to use them",
        "Learn to create applications using JEE!",
        "Learn to write loosely coupled code using dependency injection API (CDI)",
        "Learn how the various Java EE APIs work together to make you a productive developer",
        "Learn to write powerful web services using the Java API Restful Web Services (JAX-RS)",
        "Master a set of web services that can facilitate rapid development of strong enterprise level applications",
        "Build complex database applications based on platforms using its services and APIs",
        "Write integration tests for Java EE components",
        "And much more!"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in Java programming",
        "Enthusiasm and a willingness to take your Java skills to the next level"
      ],
      "description": "Are you ready to take your Java skills to the next level and finally understand Java Enterprise Edition (JEE) ?\nThe fact is, that Java Enterprise Edition is in use by companies around the world, including many of the Fortune 500 companies. Because of this there a lots of JEE opportunities and as a JEE developer you will be among the highest paid of all Java developers.\n\nThis course will get you up to speed quickly and give you the real world skills you need to add \"Java Enterprise Edition 8 developer\" to your résumé fast!\n\nWhat's this course about?\nJava Enterprise edition has changed and evolved a lot over the years. This course is about teaching you what JEE is, and how to use it and become a productive JEE developer.\nThe course focuses on JEE 8 (also known as Jakarta EE).\nBy taking this course you will avoid learning about obsolete versions of Java EE, and learn best practices along the way.\nThe course starts at a theoretical level helping you to understand the underpinnings of JEE 8, including understanding the JEE specifications and implementations (which is a very important for a Java Enterprise Edition developer to understand).\nBut then you will dive into understanding JEE 8 at a developmental level with practical hands-on development. Ultimately, this is a hands-on course, so you will be doing a lot of coding as you learn how to use JEE 8.\nYour instructor in this course is Luqman Saeed, an experienced software developer who has vast knowledge in a number of programming languages including Python, C# and of course Java. He also has extensive Java Enterprise Edition (JEE) experience and has created a great course to pass on his skills with JEE to you.\nSome of the highest paid jobs in the industry for Java developers are available to those people who know and understand JEE, so here is your chance to dramatically increase your salary and future career opportunitues.\n\nWhat topics are covered in this course?\nGeneral JEE concepts\nContexts and Dependency Injection (CDI 2.0)\nJava Persistence API (JPA 2.2)\nJava API for Restful Web Services (JAX-RS 2.1)\nJWT (Json Web Token)\nJava API for Web Sockets\nTesting with Arquillian Framework and JUnit.\nAnd a lot more.\n\nWhy take this course?\nThis is the most comprehensive Java EE/Jakarta EE course on the internet with 340+ HD video lectures!\nLearn how to write full working Java EE code that is portable across various JEE vendors.\nThe course has a pure standard Java EE API usage focus on app portability across vendors. This is an important skill to master.\nIn-depth coverage of database persistence with JPA.\nThis is the only online course that teaches the Contexts and Dependency Injection API in detail!\nIn-depth coverage of developing REST web services using standards based JAX-RS.\nCourse constantly updated to reflect latest update with Jakarta EE.\n\nWhat skills do you need to enrol?\n\nThis course assumes you have a basic understanding of the Java programming language. If you have taken a Java course on Udemy such as Tim Buchalka Java Masterclass you will be more than ready for this course.\n\nReady to start?\nIf you're ready to start the Java Enterprise Edition 8 for Beginners Course, then click the enrol button to get started.\nFeel free to try some of the free video previews on this page as well.",
      "target_audience": [
        "This is course is suitable for those who have basic knowledge in Java, who wish to enhance their knowledge",
        "Anyone wanting to enhance their résumé and learn about Java Enterprise Edition"
      ]
    },
    {
      "title": "HTML5 Essentials for Beginners",
      "url": "https://www.udemy.com/course/html5-essentials-for-beginners/",
      "bio": "Discover the essentials of HTML5 during this 1 hour crash course.",
      "objectives": [
        "Discover the differences between HTML4 and HTML5",
        "Learn the different elements and attributes of the tags used in HTML5",
        "Find out about the support HTML5 offers for the latest multimedia"
      ],
      "course_content": {
        "Introduction": [
          "HTML 5 Course Overview",
          "WATCH ME: Essential Information for a Successful Training Experience",
          "HTML5 Course Demo Files"
        ],
        "What's New in HTML 5": [
          "Doctype and Charset",
          "Comparing HTML5 File to HTML4 File - Part 1",
          "Comparing HTML5 File to HTML4 File - Part 2",
          "Forms",
          "Scalable Vector Graphics",
          "Video and Audio",
          "Microdata Tutorial"
        ],
        "Final": [
          "Math element, MathML, and Canvas",
          "Conclusion",
          "Course Review",
          "---->>>> FOR Serious Web Developers Only",
          "Become a Kick-Ass Web Developer",
          "Assessment Test"
        ]
      },
      "requirements": [
        "A text editor and a passion for learning."
      ],
      "description": "If you are unaware of the new the features and tags that HTML5 offers, HTML5 Essentials for Beginners is a course intended for you. This insightful and fast paced overview will help you quickly discover exactly what makes HTML5, the 5th revision of HTML, such an important standard to learn.\nThis course will assist you to:\nDiscover the differences between HTML4 and HTML5, as your trainer makes revealing side-by-side comparisons.\nFind out the different elements and attributes of the tags used in HTML5\nLearn about the support HTML5 offers for the latest multimedia.\nTutorials include the new <video>, <audio> and <canvas> elements, as well as the integration of scalable vector graphics (SVG) content and MathML for mathematical formulas.\nHTML5 Essentials for Beginners includes demo files to help you practice and learn.\nWhat People Are Saying:\n★★★★★ “This tutorial really gave me a good overview of HTML5 and helped me understand the major changes from HTML4. The only knock I would give it is that it does not cover web storage, web workers and some other new features of HTML5. For this course being free though and only taking an hour of your time you can't beat the information you get. I think this course will be most beneficial to those already proficient in HTML4.” –Anthony Martin\n★★★★★ “Clear, easy to understand and informative course. Will take more Simon Sez It courses.” -Mike Felker\n★★★★★ “Just the facts in a very concise way and the explanations were clear. Great Job.” -Eric Belardo\n\n\n★★★★★ “I really like this course because I learned so much in a so little time, please beware that this is not a learn by doing course, it is an course that will explain the use of the ‘commands’ in HTML5 and compare them with HTML4. Keep the good work Simon!” -Cinthia Ramírez Rufino\n★★★★★ “This was a very basic lesson. However, it taught me a lot of things I wasn't aware of. I am a beginner, but some of the other classes I have taken didn't cover some of the fundamentals / basics like this course. I definitely recommend this course to ALL beginners if you're serious about web development.” -John Acosta",
      "target_audience": [
        "Web developers, web designers"
      ]
    },
    {
      "title": "React - The Complete Guide with React Hook Redux in 4hr",
      "url": "https://www.udemy.com/course/complete-react-course-w-hooks-react-router-redux-usecontext/",
      "bio": "Learn how to create high performance web app with react. Hooks, Redux, React Routing, useContext, Fireabase and more",
      "objectives": [
        "Build high performance and user friendly web app",
        "Realize the power of using component in React",
        "Unleash the power of JavaScript with the help of React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to create a blank new react app"
        ],
        "[OPTIONAL] Quick review on es6": [
          "var let and const",
          "The problem of using let in switch cases",
          "Template literal",
          "Arrow function",
          "Classes",
          "Spread operator",
          "Destructuring",
          "Primitive vs Reference",
          "Primitive vs Reference",
          "Import and export",
          "Array function",
          "For in \\ For of"
        ],
        "[REACT ESSENTIALS] JSX": [
          "What is JSX?",
          "Import CSS",
          "inline CSS",
          "Curly braces in react",
          "Styles object",
          "Fast track to convert CSS to JS object",
          "store jsx element to variable"
        ],
        "[REACT ESSENTIALS] Functional Component": [
          "Create a list of card",
          "Create card component"
        ],
        "[REACT ESSENTIALS] Props": [
          "Pass and receive props",
          "Pass multiple props",
          "The children of props"
        ],
        "[REACT ESSENTIALS] State": [
          "useState and Change of State",
          "passing function to component",
          "Two way binding",
          "Conditional rendering"
        ],
        "[REACT ESSENTIALS] List": [
          "Rendering a list of cards",
          "Delete a specific card",
          "Fix unique key error",
          "Change the name of a specific card"
        ],
        "[REACT ESSENTIALS] Style": [
          "Dynamic style with javascript",
          "Dynamic style with classes",
          "Styled component",
          "Theme",
          "Extract the styled button"
        ],
        "[REACT ESSENTIALS] Lifecycle and useEffect": [
          "Convert functional base to class base",
          "Convert Card component to class base component",
          "Life Cycle Methods Diagram",
          "React lifecycle - mounting",
          "React lifecycle - updating",
          "React lifecycle - unmounting",
          "useEffect",
          "useEffect clean up"
        ],
        "[REACT ESSENTIALS] React hooks - to improve the performance of the app": [
          "useEffect fetch data with axios",
          "useEffect fetch a card",
          "React Context",
          "Multiple React Context",
          "useContext",
          "useReducer (Simpiflied)",
          "useReducer (Normal)",
          "multiple useReducer",
          "useReducer with useContext",
          "use of useReducer with useContext",
          "use useReducer with useEffect to fetch the data",
          "Beautify the list with ReactStrap / Bootstrap",
          "useMemo",
          "useMemo",
          "useRef",
          "useRef - deal with the unmount component problems",
          "useCallback - to prevent the recreation of function",
          "custom Hook - extract the logic",
          "custom Hook.- using in form"
        ]
      },
      "requirements": [
        "A window or mac computer",
        "Basic JavaScript knowledge but is not a must",
        "HTML and CSS fundamentals are beneficial but not a must",
        "NO JS framework experience is required"
      ],
      "description": "In this course you will learn to get start with React 16.8+ including what is JSX, how to use props to pass data to the children components, using the React hook useState and also styled component. We will not use more than 40 hours to talking to the same things again and again. You will learn all the react essential things within 4 hours.\nSince this course is the mix of knowledge base and the project base. If you just want to learn the React knowledge fast, 4 hours is enough!!\nAfter that we will also provide project to consolidate your understanding with react, and how to interact with backend like Firebase and also the payment with Stripe.\nWhich companies are using React now and why you need to learn?\nFacebook\nInstagram\nTwitter\nNetflix\nYahoo! Mail\nWhatsApp\nDropbox\nAtlassian\nSalesforce\nNew York Times.\nReddit\nCloudflare\nTesla\nBBC\nGitHub\nPayPal\nUber\nZendesk and more...\nThe above list of big companies taking huge leaps to embrace React, which signifies the extent to which the technology has raised its bars.\nWhat you will learn in this course?\nEs6\nReact components\nJsx\nFunctional component\nProps\nState\nList\nStyled component\nRedux\nUI framework like Reactstrap, Materializecss\nFirebase\nStripe\nStyled component\nRedux\nUI framework like Reactstrap, Materializecss\nFirebase\nStripeStyled component\nRedux\nUI framework like Reactstrap, Materializecss\nFirebase\nStripe\nIn this course you will learn to get start with React 16.8+ including what is JSX, how to use props to pass data to the children components, using the React hook useState and also styled component. We will not use more than 40 hours to talking to the same things again and again. You will learn all the react essential things within 4 hours.\nSince this course is the mix of knowledge base and the project base. If you just want to learn the React knowledge fast, 4 hours is enough!!\nAfter that we will also provide project to consolidate your understanding with react, and how to interact with backend like Firebase and also the payment with Stripe.\nWhich companies are using React now and why you need to learn?\nFacebook\nInstagram\nTwitter\nNetflix\nYahoo! Mail\nWhatsApp\nDropbox\nAtlassian\nSalesforce\nNew York Times.\nReddit\nCloudflare\nTesla\nBBC\nGitHub\nPayPal\nUber\nZendesk and more...\nThe above list of big companies taking huge leaps to embrace React, which signifies the extent to which the technology has raised its bars.\nWhat you will learn in this course?\nEs6\nReact components\nJsx\nFunctional component\nProps\nState\nList\nStyled component\nRedux\nUI framework like Reactstrap, Materializecss\nFirebase\nStripe\nStyled component\nRedux\nUI framework like Reactstrap, Materializecss\nFirebase\nStripeStyled component\nRedux\nUI framework like Reactstrap, Materializecss\nFirebase\nStripe",
      "target_audience": [
        "Anyone who want to start a career with React",
        "Anyone who want to take the web development skills to the next level",
        "Anyone who are interested in learning the most update technology"
      ]
    },
    {
      "title": "ES6 Javascript: The Complete Developer's Guide",
      "url": "https://www.udemy.com/course/javascript-es6-tutorial/",
      "bio": "ES6 Javascript Development from scratch. Get practice with live examples and learn exactly where to apply ES6 features.",
      "objectives": [
        "Learn how to apply each feature of ES6 in practical situations",
        "Understand the major features of ES6",
        "Have total mastery of generators",
        "Know the difference between ES6 and ES2015",
        "Teach other developers about destructuring",
        "Never need to write a for loop again!"
      ],
      "course_content": {
        "Before We Get Started": [
          "How to Take This Course",
          "Course Resources - Exercise Solutions",
          "Join Our Community!",
          "ES6 vs ES2015"
        ],
        "The 'forEach' Helper": [
          "Array Helper Methods - The Easiest Way to Write Better Code",
          "The forEach Helper",
          "forEach Continued",
          "Why Use forEach?",
          "Moving Away from For Loops",
          "Processing Values"
        ],
        "The 'map' Helper": [
          "The Map Helper",
          "Map Helper Continued",
          "Where Map Is Used",
          "Plucking Values",
          "Calculating Values with Map",
          "Really Hard - Implementing 'Pluck'"
        ],
        "The 'filter' Helper": [
          "Selecting Needed Data with Filter",
          "More on Filtering",
          "Choosing When to Filter",
          "Filtering Values",
          "Handling Permissions with Filter",
          "Challenging! Implementing 'reject'."
        ],
        "The 'find' Helper": [
          "Querying For Records with Find",
          "Find Continued",
          "Using Find to Search for Users",
          "Finding Admin Users",
          "What's Your Balance?",
          "Really Challenging: Custom findWhere Helper"
        ],
        "The 'every' and 'some' Helper": [
          "A Little Every and a Lot of Some",
          "More on Every and Some",
          "Every and Some Syntax",
          "Every and Some in Practice",
          "Finding Submitted Users",
          "In Progress Network Requests"
        ],
        "The 'reduce' Helper": [
          "Condensing Lists with Reduce",
          "A Touch More of Reduce",
          "Ace Your Next Interview with Reduce",
          "Distance Traveled",
          "Reducing Properties",
          "Hardmode: Custom 'Unique' Helper"
        ],
        "Const/Let": [
          "Variable Declarations with Const and Let",
          "What Const and Let Solve",
          "A Constant Exercise of Letting Variables Be Variables",
          "Const/Let Refactoring"
        ],
        "Template Strings": [
          "Template Strings",
          "When to Reach for Template Strings",
          "Template Strings in Practice",
          "Name Helpers"
        ],
        "Arrow Functions": [
          "Fat Arrow Functions",
          "Advanced Use of Arrow Functions",
          "When to Use Arrow Functions",
          "When to Use Arrow Functions Continued",
          "Refactoring Keyword Functions",
          "Arrow Functions Aren't Always a Solution"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript is required (Arrays, Functions, Object)"
      ],
      "description": "This is the tutorial you've been looking for to master ES6 Javascript.\nGenerators? We got it. Arrow Functions? Of course. Rest/Spread Operator? Included! And every other new piece of syntax!\nMastering ES6 syntax can get you a position in web development or help you build that personal project you've been dreaming of. It's a skill that will put you more in demand in the modern web development industry, especially with the release of modern web frameworks like React and Angular 2.\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build applications using each new piece of Javascript syntax introduced with ES6.\nWe'll start by mastering the fundamentals of iteration over Arrays using helpers like 'forEach', 'map', and 'reduce'.  After an introduction to Array helpers, we'll dive right in to advanced ES6, covering topics like enhanced object literals, default function arguments, and classes.  Every topic includes multiple live code exercises to ensure you understand each new concept.\nIf you are new to Javascript or ES6, or if you've been working to learn it but sometimes feel like you still don't quite 'get it', this is the Javascript course for you! To learn ES6 you have to understand it and comprehend exactly why each piece of syntax was added to the language\nLearn the purpose of Babel and why ES6 was created\nMaster the process of refactoring your current ES5 code into super-charged ES6\nGrasp the difference between the 'rest' and 'spread' operators\nDevelop complex applications that scale in complexity by mastering advanced ES6 design patterns\nDive deeper into iteration using generators.  No fancy terms required!\nI've built the course that I would have wanted to take when I was learning ES6. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Take this course if you're wondering when to use generators",
        "Enroll now if you want to learn exactly why 'const' and 'let' were added to ES6",
        "Sign up now if you want to write better-looking code"
      ]
    },
    {
      "title": "AWS Serverless APIs & Apps - A Complete Introduction",
      "url": "https://www.udemy.com/course/aws-serverless-a-complete-introduction/",
      "bio": "Get into serverless computing with API Gateway, AWS Lambda and other Amazon Web Services! Zero server config APIs & SPAs",
      "objectives": [
        "Build, secure and run APIs without managing any servers using AWS API Gateway and Lambda",
        "Host SPAs without managing any servers",
        "Add user authentication to serverless applications",
        "Run code on-demand in the cloud"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is AWS?",
          "AWS - A Closer Look (Optional)",
          "Join our Online Learning Community",
          "What is Serverless Development?",
          "Does AWS Cost Money?",
          "AWS Signup & First Serverless API",
          "Why AWS?",
          "Course Structure",
          "How to get the Most out of this Course",
          "How to use the File Downloads"
        ],
        "The Core Serverless Services": [
          "Module Introduction",
          "An Overview over the Core Serverless Services",
          "More Info about the Core Services",
          "The Course Project"
        ],
        "Creating an API with API Gateway & AWS Lambda": [
          "Module Introduction",
          "What is API Gateway?",
          "API Gateway: Useful Resources & Links",
          "Accessing the API Gateway Console",
          "General API Gateway Features",
          "Understanding AWS Permissions (IAM)",
          "API-specific Features & Options",
          "Introducing the Request-Response Cycle",
          "Understanding the Request-Response Cycle",
          "Creating a New API",
          "Creating a Resource (= URL Path)",
          "Handling CORS and the OPTIONS Preflight Request",
          "Creating a (HTTP) Method",
          "What is AWS Lambda?",
          "AWS Lambda: Useful Resources & Links",
          "Improved Lambda Console",
          "Creating a Lambda Function",
          "Lambda Pricing & Uploading Code",
          "Connecting Lambda Functions to API Gateway Endpoints",
          "Accessing the API from the Web & Fixing CORS Issues",
          "Time to Practice - API Gateway + Lambda Basics",
          "Understanding \"event\" in Lambda Functions",
          "Forwarding Requests with \"Proxy Integration\"",
          "Accessing Lambda Logs",
          "Getting Started with Body Mapping Templates",
          "Extracting Request Data with Body Mapping Templates",
          "What's the Idea behind Body Mappings?",
          "Understanding Body Mapping Templates",
          "Mapping Response Data",
          "Using Models & Validating Requests",
          "Understanding JSON Schemas",
          "Models & Mappings",
          "Time to Practice - Models and Mappings",
          "Next Steps",
          "Adding a DELETE Method Endpoint to the API",
          "Using Path Parameters",
          "What about Query Parameters?",
          "Accessing the API from the Web - The Right Way",
          "Wrap Up"
        ],
        "Data Storage with DynamoDB": [
          "Module Introduction",
          "What is DynamoDB?",
          "AWS: DynamoDB Useful Resources & Links",
          "How DynamoDB Organizes Data",
          "NoSQL vs SQL",
          "Using DynamoDB with Lambda",
          "Creating a Table in DynamoDB",
          "Understanding Read & Write Capacity",
          "On-Demand Capacity",
          "Creating and Scanning Items",
          "What about multiple Databases?",
          "Accessing DynamoDB from Lambda",
          "DynamoDB Concepts",
          "Sidenote: How Lambda works behind the Scenes",
          "Putting Items into a DynamoDB Table from Lambda",
          "Setting Permissions Right",
          "Using API Gateway (Request) Data for Item Creation",
          "Mapping the Response & Web Testing",
          "Scanning Data in DynamoDB from Lambda",
          "Improving the IAM Permissions",
          "Restructuring Fetched Data in Lambda",
          "Getting a Single Item from DynamoDB via Lambda",
          "Testing it from the Web & Passing Correct Data",
          "Preparing \"Delete\" Permissions",
          "Giving Lambda Logging Rights",
          "Deleting Items in DynamoDB via Lambda",
          "Mapping DynamoDB Responses",
          "Wrap Up"
        ],
        "Authenticating Users with Cognito and API Gateway Authorizers": [
          "Module Introduction",
          "How to add Authorization to API Gateway",
          "Understanding Custom Authorizers (API Gateway)",
          "Creating a Custom Authorizer Function",
          "Custom Authorizers: Provided Input & Expected Output",
          "MUST READ: New UI for setting up Custom Authorizers",
          "Using Custom Authorizers",
          "Retrieving Users from Custom Authorizers",
          "What is AWS Cognito?",
          "AWS Cognito: Useful Resources & Links",
          "Cognito User Pools and Federated Identities",
          "Creating a Cognito User Pool",
          "Understanding the Cognito Auth Flow",
          "The Example Web App, Angular and TypeScript",
          "Adding Cognito to a Frontend App - Getting Started",
          "Using Cognito in iOS or Android Apps",
          "Adding Signup to the Frontend App",
          "Adding User Confirmation to a Frontend App",
          "Adding Signin to a Frontend App",
          "Managing User State with Cognito",
          "Using a Cognito Authorizer with API Gateway",
          "Passing the right User ID to Lambda",
          "Using Query Params & Cognito from Lambda",
          "More on the Cognito Identity Service Provider",
          "Passing Query Params from the Frontend",
          "Passing the User Id to the DELETE Endpoint",
          "Wrap Up"
        ],
        "Hosting a Serverless SPA": [
          "Module Introduction",
          "What is S3?",
          "AWS S3: Useful Resources & Links",
          "Creating a S3 Bucket",
          "Uploading the Web App to the Bucket",
          "Using S3 for Hosting",
          "Turning a S3 Bucket into a Static Webserver",
          "Setting up Logging",
          "Optimizing Content Delivery: What is AWS CloudFront?",
          "AWS CloudFront: Useful Resources & Links",
          "Setting up a CloudFront Distribution",
          "Finishing the CloudFront Setup",
          "Using a Custom Domain: What is Route53?",
          "AWS Route53: Useful Resources & Links",
          "Registering a Domain",
          "Connecting a Domain to a CloudFront Distribution",
          "Wrap Up"
        ],
        "Beyond the Basics - An Outlook": [
          "Module Introduction",
          "Documenting an API",
          "Other AWS Lambda Triggers",
          "Going Serverless with a Node/ Express App (Non-API!)",
          "Running Node/ Express Apps via Lambda + API Gateway",
          "Pros and Cons of Serverless Node/Express MPA",
          "Learn more about AWS Serverless + Express Apps",
          "Serverless Apps and Security",
          "A Case of a Better Development Workflow",
          "Getting to know the Serverless Framework",
          "More about the Serverless Framework",
          "Getting to know SAM (Serverless Application Model) by AWS",
          "More about the Serverless Application Model (SAM)",
          "Testing Serverless Apps with localstack",
          "Other useful AWS Services",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Course Roundup": [
          "Course Roundup",
          "Bonus: More Content!"
        ]
      },
      "requirements": [
        "You should have a basic understanding about what AWS (Amazon Web Services) is or bring the willingness to learn more about them alongside taking this course",
        "You will need a credit card to create an AWS account",
        "You should have a basic understanding about what APIs and SPAs (Single-Page-Applications) are and what role they play in modern web development",
        "You don't need to be anything close to an AWS expert!",
        "You don't need to have advanced API/ SPA knowledge!"
      ],
      "description": "Serverless computing will shape the future of web development since it allows you to get rid of many issues \"traditional\" web hosting poses.\nNow's the perfect time to dive into this exciting new technology!\nUnlike in traditional web hosting, where you spin up servers, configure them and then deploy your code, in serverless applications, you don't manage any servers! Instead, you only provide your code and define when it should get executed. Done!\nWithout managing any servers, you typically pay way less (since you got no overhead capacity), can react much better to incoming traffic spikes and don't have to worry about server security!\nFor these very reasons, it's no wonder that serverless computing is on the rise, with more and more companies adopting it! Learn it now to gain an edge and either use it for your own projects or apply for high-paid jobs!\nWhat does this course offer then?\nThis course will introduce you to serverless computing and then quickly dive into how to build serverless apps with Amazon Web Services (AWS).\nSpecifically, you will learn:\nhow you can build a REST API without worrying about servers, using AWS API Gateway\nto set up your on-demand code via AWS Lambda\nhow to execute that Lambda code whenever incoming requests reach your defined REST endpoints\nhow you can store data in a database - naturally without managing any database servers!\nWe won't stop there though! Instead, you'll then dive even deeper into serverless computing and learn:\nhow you can add user authentication to your existing frontend apps and how you can then also protect your REST API against unauthenticated access with ease!\nhow you can easily integrate a complete user sign up & sign in flow (including user confirmation) into ANY app (web app, iOS or Android app!) with AWS Cognito\nhow to deploy your web app in a serverless manner\nhow to speed up the delivery of your static web app assets\nhow to secure your serverless app\nwhat else you can build with the services covered in this course and which other services might be interesting to you\nwhere to dive deeper regarding advanced development workflows\nand much more!\nIs this course for you?\nNow that you know what this course offers, is it the right choice for you? Which skills should you bring?\nThis course is absolutely the right choice for you if you're interested in providing great web applications without worrying about the provisioning of servers.\nIt's also the right choice if you already got experience as a system administrator but are interested in keeping up with the latest developments and the many new possibilities serverless computing offers.\nYou will need some basic AWS knowledge, or the willingness to dive deeper into AWS alongside taking this course. Additionally, a credit card is required for signing up to AWS.\nFinally, you should be familiar with APIs and SPAs (Single-Page-Applications) and which role they play in today's web development environment. You don't need to know how to create them though.\nI'd be very happy to welcome you on board!",
      "target_audience": [
        "Anyone who's interested in focusing on the core business logic instead of the infrastructure needed to run an API and/ or SPA",
        "Anyone who wants to use modern techniques to create highly scalable and extremely cost-efficient web apps",
        "Anyone who works with APIs and/ or SPAs on a regular basis and wants to learn how to create flexible and cost-effective web apps",
        "Every developer who loves the \"Dev\" in \"DevOps\" but would be happy to make the \"Ops\" part easier"
      ]
    },
    {
      "title": "The Complete WordPress Website Business Course",
      "url": "https://www.udemy.com/course/the-complete-wordpress-website-business-course/",
      "bio": "Master WordPress with this Complete WordPress Course, without learning how to code and without any programming!",
      "objectives": [
        "Create all kinds of commercial websites, using WordPress, to sell to clients",
        "Master the inner workings of WordPress, for fixing, troubleshooting, and building websites",
        "Set up server and hosting environments in the most economical and secure way",
        "Build and edit websites within staging and development environments",
        "Migrate and transfer WordPress websites from staging to live and vice-versa",
        "Master the three types of email needed to support a WordPress website",
        "Sell Website Care and Maintenance plans to happy clients for recurring revenue"
      ],
      "course_content": {
        "Chapter 1 - About this Course": [
          "Important: Note about the course",
          "What You Need for this Course",
          "What You'll Learn in this Course",
          "WordPress Tour and Different Versions",
          "Tools - Domains, FTP, Image Editing, Invoices, and Taking Payments",
          "Resource List for your Toolbox"
        ],
        "Chapter 2 - Prepare Hosting, Servers, and Install WordPress": [
          "Hosting and Local Development Environments",
          "Website Hosting and Development Options",
          "Local Development Environments",
          "MAMP Overview",
          "Laragon Overview with the Hosts File",
          "Your First WordPress Website - using Local by Flywheel",
          "Local by Flywheel - Files and Database Structure",
          "New Interface for SiteGround Student Accounts",
          "Your Free SiteGround Hosting Account",
          "Your Free Flywheel Hosting Account",
          "Install WordPress Manually using Local by Flywheel",
          "Install WordPress Manually using MAMP",
          "Install WordPress Manually using Laragon",
          "Explore WordPress Files and Database",
          "Student Sandbox Code",
          "Get Your Sandbox",
          "WordPress Defaults"
        ],
        "Chapter 3 - Build a Brochure Site": [
          "Create a New WordPress Installation",
          "Salts and Plugins",
          "Static Homepage and Posts",
          "Interior Pages, Navigation and Sidebar",
          "Configure Contact Form",
          "New rules for Google Maps - Get your API Key",
          "Configure Google Maps",
          "Google Analytics Plugin Changes",
          "Configure Google Analytics"
        ],
        "Chapter 4 - Build a Blog Style Homepage Site": [
          "Modify Homepage and Import Sample",
          "Change Theme and Modify Homepage",
          "Revise Navigation, Header and Footer",
          "Categories and Category Navigation",
          "Tags and Tag Navigation",
          "Post Formats and Finishing Up"
        ],
        "Chapter 5 - Migrating WordPress for Staging and Development": [
          "Site Migration using a Plugin: All In One WP Migration",
          "Site Migration using a Plugin: Duplicator",
          "Migrate a Site Manually from Local to SiteGround Hosting",
          "Migrate a Live Site to Local Staging",
          "Migrating to Live Host and Staging Areas",
          "How to get the Affinity Theme that we use in the next lesson",
          "Change Theme and Update Live Site"
        ],
        "Chapter 6 - Premium Themes, Frameworks and Child Themes": [
          "Why Premium Themes?",
          "Frameworks and Child Themes",
          "Create a Child Theme Manually - notes",
          "Create a Child Theme Manually",
          "Create a Child Theme Using a Plugin",
          "Change the Admin Dashboard",
          "Genesis Child Themes in the Sandbox",
          "Changes to the Footer Edits in the Following Video",
          "More Genesis Child Theme Edits",
          "Code Snippets and WP Clips Plugins"
        ],
        "Chapter 7 - Premium Plugins and Choosing Plugins": [
          "Premium Plugins at WPMUDev.org",
          "Envato Market for Premium Plugins",
          "Choosing Plugins from the Repository",
          "Premium vs. Lite Plugin: Soliloquy Slider",
          "Premium Plugins in the Sandbox"
        ],
        "Chapter 8 - Build a Specialized Homepage Site, Corporate Style": [
          "Executive Pro Theme Update",
          "Executive Pro: Import Demo Content",
          "Genesis Homepage Widget Areas",
          "Special CSS Classes in Genesis Themes",
          "Changes to the Genesis Footer Editing Process",
          "Navigation, Header and Footer",
          "Custom Post Types and Taxonomies",
          "Changes to setting the Blog Archive Page in the next lesson",
          "Featured Post Widgets and Blog Archive",
          "Contact Form Customization Changes"
        ],
        "Chapter 9 - Build a Scrolling Homepage Site": [
          "Activate and Explore Cafe Pro Theme",
          "Scrolling Navigation with Anchor Tags",
          "Affinity Theme Scrolling Homepage",
          "Cafe Pro Homepage Widget Layouts",
          "How I customized the Café Pro Homepage",
          "Custom Post Types with Custompress",
          "Implement Your Custom Post Types",
          "Homepage Content and Conditional Widgets"
        ],
        "Chapter 10 - Custom Post Types with the Author Pro Plugin": [
          "Set Up Author Pro Theme and Plugin",
          "Frontend Display of Author Pro CPT",
          "Author Pro Homepage and Book Widgets",
          "Further Author Pro Customizations",
          "Book Cover using the PSD Template",
          "Change Themes Preserving CPT Data"
        ]
      },
      "requirements": [
        "A working computer, either Windows, Mac or Linux.",
        "A modern browser like Chrome, or Firefox.",
        "Internet access for some of the lessons.",
        "You don't need any experience with programming languages like HTML or CSS."
      ],
      "description": "PLEASE NOTE: A new 2.0 version of this course is now live and ready! (as of March 14, 2022) If you're looking at this 1.0 version of the course, I'd advise that you to STOP! and enroll in the new version instead directly by finding The Complete WordPress Website Business Course 2.0 here on Udemy. If you are already enrolled and did it within 30 days, you can use Udemy's 30-day refund period to return this course and get the new one. Welcome!\n[TLDR; Don't get this course - go the new 2.0 version instead]\n\n\nOLD Course description:\nNo better time than now, and only increasing\n\nWith WordPress powering more than 25% of all websites in the world, there's never been a better time to build an income and a business around it.\nYou're here because you want to master WordPress, right? Good idea. You're in the right place. And, you can do it without learning any programming or coding.\nWhile WordPress is open source, and because of that has thousands of developers building resources for it, it still takes quite a bit of learning to become a master at building and managing websites with it. It's not just learning the WordPress software, there's a small amount of graphic design knowledge needed, hosting and server management, troubleshooting broken sites or problems by hacking into the back end and server setup, and properly staging development environments around new sites or when performing updates and changes on existing sites.\n\"What a great course! Good explanation and a lot to learn, friendly and very quick support. I'm only at the beginning and I'll leave another review later after I finished this course. I'm sure there is much more to learn!\" --Adriene\nWhy am I qualified to teach you?\n\nThrough this course, I'll teach you everything I've learned and mastered\nthrough 10 years of building, managing, migrating, and hosting WordPress websites.\n\"He is concise and well spoken, without dumbing it down at all. As a total newbie to Wordpress, I'm thankful he's offering this! 3 lessons in and it's great so far.\" --Jamie Rasmussen\nMy business lets me work on my own schedule, manage my home workspace\nwithout a boss or a manager, and gives me an unlimited ceiling for profit and income and time freedom.\nWithout learning to code or programming anything, I'm able to leverage what's already been done with WordPress to create modern, robust and functional websites for clients of all types.\n\nI'm hoping you'll get to the same awesome place in your work life. Let this course give you the head start you need to increase your income fast.\n\"[Gregg] has covered more areas than what an average course would deliver, this is clear reflection of Greggs' experience in the subject. He has gone above and beyond to cover every aspect of WordPress for a clear and concise understanding for a beginner.\nGregg is probably one of the best instructors I have come across on Udemy and expert in the subject. Well done and Thank you for an amazing course.\"\n--Mohamed Fawmey Mohamed Vinodh\nMany of my best and biggest clients have come from \"abandoned\" WordPress websites, where the client's website designer or developer has left the scene. My ability to get in and restore, fix, redesign, and continue to manage WordPress websites brings me lots of instant and recurring income.\nYou'll learn how to do all this in 20 hours of easy-to-follow video content, fun lessons and challenges.\nDuring this course, you'll learn everything you need to know to start or improve your own WordPress website business.\nThe WordPress Ecosystem\n\n\"Straight forward and neat! Just what I need to step up the freelancing ladder. Highly recommended.\" --Mr. Graciano Jose Reyes\nIt's probably no surprise to you that the WordPress community has thousands of really talented and creative developers, designers and technologists working within it. And you may know that much of their work is available as open-source resources that will enable you to build your own business.\nThe open-source philosophy doesn't mean that no one makes any money. On the contrary, by sharing much of what we, as a community, create, we all prosper much, much more, because we all share in expanding what's possible with WordPress.\nBy spending zero-to-little money, you can stand on the shoulders of those who came before you, to create your own business niche, by learning the skills and secrets presented in this course.\n\"Instructor explains everything very clearly, and in detail. So simple to learn and understand in this course. Looking forward to finishing all of the lessons with much excitement. An A+++ instructor and course.\" --Mekus\n\nSummary of what you'll get\n\nOver 20 hours of video teaching and training.\nLearn to set up local development environments to play with Wordpress websites in private, on your own computer.\nEvaluate and choose hosting for your own websites and client sites, with insights from 15 years of hosting client websites.\nFree extended hosting trials at SiteGround and Flywheel for performing coursework and hosting your website experiments.\nPremium Products WordPress Sandbox, where you can play with many premium WordPress resources, like Genesis Framework and Themes, WPMUDev Plugins, and other premium tools.\nYour Website Sandbox lets you create an unlimited number of experimental learning environments.\nBuild more than 10 modern mobile-responsive websites, each with a different focus and learning purpose - each one could be re-purposed for a client website.\nActive and helpful community and forum.\nDirect access to your instructors for questions and help through the Udemy communications channels.\nLifetime access to the course, including all future updates.\nWhat will I learn that I can apply to creating a profitable business right away?\n\nDownload and configure free open-source software tools and use online services to build the resources you need to create and manage WordPress websites.\nMaster the ins-and-outs of hosting and development environments, including servers, files, and databases that WordPress uses.\nLearn how to get into the WordPress files and database to manually manage installation and troubleshooting for WordPress websites.\nBuild a simple brochure website after installing and configuring WordPress manually.\nAdd contact forms, Google Maps embedded in the site, and Google Analytics integrations for tracking visitors and traffic.\nCreate a blog-style website, including category and tag navigation systems, and post formats for organizing content.\nHow about more advanced topics I'll need?\n\nWordPress website migration and moving sites to different hosts and servers.\nHosting differences and migration services.\nUsing staging areas for website development and updating.\nWorking with Theme Frameworks and Child Themes.\nCreating a Child Theme manually and using a plugin.\nCustomizing the WordPress Dashboard for clients.\nWorking with plugins, and vetting them for usability, reputation and longevity.\nWebsite Speed and Performance testing.\nCustom Post Types for customizing a website's functionality to match the needs of a client.\nWorking with and extending Genesis Child Themes.\nSetting up email systems: transactional email sent by WordPress, marketing email sent to email lists in bulk, and specific email addresses at website domains.\nECommerce and WordPress: using WooCommerce to build a webstore, and using Custom Post Types within WooCommerce.\nCustomizing Account, Cart, and Checkout pages.\nShipping and Digital Delivery.\nUpdating WordPress, Themes and Plugins.\nManaging multiple websites for recurring income.\nCreating multiple backup and restore systems.\nUsing website security through https:// and SSL Certificates.\nLanding, managing, and keeping great clients\n\nFinding clients and building client proposals\nWebsite care and management services for recurring income.\nClient billing for flat-rate projects and recurring charges.",
      "target_audience": [
        "Those interested in learning to build websites using open source and free tools should take this course.",
        "Those familiar with WordPress, who need a deeper understanding of how all the parts fit together, should take this course.",
        "Those new to Wordpress, but looking for a complete system for creating and managing professional websites for clients or themselves, should take this course."
      ]
    },
    {
      "title": "HTML5 + CSS3 + Bootstrap: The Beginner Web Design Course",
      "url": "https://www.udemy.com/course/html-css-bootstrap-build-your-first-website-today/",
      "bio": "Quickly learn HTML5 and CSS3 + Bootstrap - the basics of Web Development - to design your own responsive websites.",
      "objectives": [
        "You will learn how to build a custom website with HTML, CSS, and Boostrap",
        "You will learn real-world skills to build professional and modern websites",
        "You will learn the basic building blocks to becoming a web developer",
        "You will learn to build websites while you learn each building block - HTML, CSS, Bootstrap",
        "You will get bonus downloadable cheat sheets and guides to help you quickly design your websites",
        "You will learn how to use each skill in the real world with case studies",
        "You will learn basic web design tips so your websites look and act professionally"
      ],
      "course_content": {
        "Welcome": [
          "Welcome to the HTML5 + CSS3Course + 3 Tips for Better Learning",
          "How to Install Brackets & Start Editing Websites in HTML5 + CSS3 Programming",
          "DOWNLOAD: HTML Cheat Sheets | HTML5 + CSS3 Programming Course",
          "Quick Hello from Phil | HTML5 + CSS3 Programming Course",
          "Tips to Improve Your Course Taking Experience | HTML5 + CSS3 Programming Course"
        ],
        "HTML 5": [
          "Intro to the HTML Section | HTML5 + CSS3 Programming Course",
          "What is HTML? See how it's used EVERYWHERE! | HTML5 + CSS3 Programming Course",
          "Case Study: Changing the President's Tweets | HTML5 + CSS3 Programming Course",
          "Start a New HTML File & Use Tags | HTML5 + CSS3 Programming Course",
          "Header Tags in HTML5 + CSS3: How to use them + why they are important",
          "Case Study: Using Header Tags to Improve SEO | HTML5 + CSS3 Programming Course",
          "HTML5 + CSS3 Edit Text: Spacing, Styles, Paragraphs and more!",
          "Links: Create Clickable Text-based Hyperlinks | HTML5 + CSS3 Programming Course",
          "Images: Add Images to Your Website with HTML | HTML5 + CSS3 Programming Course",
          "HTML5 + CSS3 Case Study: Add an Clickable Image to My Website",
          "Lists: Create Bullet-Point and Numbered Lists with HTML",
          "Challenge Exercise 1: Build Your First Basic Website with HTML",
          "Outro: Congrats, you know the basics of HTML! | HTML5 + CSS3 Programming Course",
          "HTML Source Code | HTML5 + CSS3 Programming Course",
          "Basic HTML for WordPress Users | HTML5 + CSS3 Programming Course"
        ],
        "CSS 3": [
          "Intro to CSS | HTML5 + CSS3 Programming Course",
          "How to Add CSS Styles | HTML5 + CSS3 Programming Course",
          "HTML5 + CSS3 Case Study: Change the Header Style for My Website",
          "Classes and Ids | HTML5 + CSS3 Programming Course",
          "Borders | HTML5 + CSS3 Programming Course",
          "Sizing | HTML5 + CSS3 Programming Course",
          "HTML5 + CSS3 Padding and Margin: Putting Space Between Elements",
          "HTML5 + CSS3 Case Study: Using Padding & Margins to Adjust My Website",
          "HTML5 + CSS3 Text Styles: Alignment, Justification, and more!",
          "Divs: Add Styling to a Group of HTML Code | HTML5 + CSS3 Programming Course",
          "HTML5 + CSS3 Positioning: Move Around Elements on Your Screen",
          "Hover: Change the Style while Hovering | HTML5 + CSS3 Programming Course",
          "Easily Center Elements with CSS | HTML5 + CSS3 Programming Course",
          "Fonts: Change the Font of Your Website | HTML5 + CSS3 Programming Course",
          "Challenge Exercise 2: Create a Website with CSS",
          "Outro: Congrats, you know the basics of CSS! | HTML5 + CSS3 Programming Course"
        ],
        "Bootstrap": [
          "Intro to Bootstrap | HTML5 + CSS3 Programming Course",
          "Bootstrap Fix | HTML5 + CSS3 Programming Course",
          "Install Bootstrap: Get Started with Bootstrap | HTML5 + CSS3 Programming Course",
          "Indenting and Containers | HTML5 + CSS3 Programming Course",
          "The Grid System: Make Your Website Responsive | HTML5 + CSS3 Programming Course",
          "Images: Add Images with Bootstrap | HTML5 + CSS3 Programming Course",
          "HTML5 + CSS3 Buttons: Create Beautiful Buttons with Bootstrap",
          "HTML5 + CSS3 Challenge Exercise 3: Create a Website with Bootstrap",
          "HTML5 + CSS3 Outro: Congrats, you know the basics of Bootstrap!",
          "Bootstrap Source Code | HTML5 + CSS3 Programming Course"
        ],
        "Project 1 - Design a Landing Page": [
          "Intro to Website Project 1 | HTML5 + CSS3 Programming Course",
          "Sketch Your Website | HTML5 + CSS3 Programming Course",
          "Design the Top Section of Your Website | HTML5 + CSS3 Programming Course",
          "Polish the Top Section of Your Website | HTML5 + CSS3 Programming Course",
          "Add Images to Your Website | HTML5 + CSS3 Programming Course",
          "Add Main Points to Your Website | HTML5 + CSS3 Programming Course",
          "HTML5 + CSS3 Collect Emails: Add an Email Opt-in Form to Your Website",
          "HTML5 + CSS3 Challenge Exercise 4: Create Your Own Landing Page",
          "Outro | HTML5 + CSS3 Programming Course"
        ],
        "Project 2 - Business Website": [
          "Intro | HTML5 + CSS3 Programming Course",
          "Sketch | HTML5 + CSS3 Programming Course",
          "Fancy Font Logo | HTML5 + CSS3 Programming Course",
          "Carousel Basics | HTML5 + CSS3 Programming Course",
          "Carousel Extras | HTML5 + CSS3 Programming Course",
          "Text on Images | HTML5 + CSS3 Programming Course",
          "Phone GlypIcon | HTML5 + CSS3 Programming Course",
          "Google Maps | HTML5 + CSS3 Programming Course",
          "Font Awesome | HTML5 + CSS3 Programming Course",
          "Challenge | HTML5 + CSS3 Programming Course",
          "Outro | HTML5 + CSS3 Programming Course",
          "Chicken King Source Code| HTML5 + CSS3 Programming Course"
        ],
        "Project 3 - Portfolio": [
          "Intro | HTML5 + CSS3 Programming Course",
          "Sketch | HTML5 + CSS3 Programming Course",
          "Jumbotron | HTML5 + CSS3 Programming Course",
          "NavBar | HTML5 + CSS3 Programming Course",
          "Panels | HTML5 + CSS3 Programming Course",
          "Challenge | HTML5 + CSS3 Programming Course",
          "Outro | HTML5 + CSS3 Programming Course",
          "Rick or Nick Source Code | HTML5 + CSS3 Programming Course"
        ],
        "Hosting - Getting Your Website on the Internet": [
          "Intro | HTML5 + CSS3 Programming Course",
          "Bluehost | HTML5 + CSS3 Programming Course",
          "Uploading | HTML5 + CSS3 Programming Course",
          "Random Tips | HTML5 + CSS3 Programming Course",
          "Outro | HTML5 + CSS3 Programming Course"
        ],
        "Bonuses": [
          "Bonus Lecture: Learn More from Phil + Video School",
          "Bonus Lecture: Nick | HTML5 + CSS3 Programming Course"
        ]
      },
      "requirements": [
        "No coding experience necessary",
        "Seriously, you don't need to know anything about websites or coding!",
        "Any computer will be fine - Windows, OSX or Linux",
        "We'll show you free tools that you can use to follow along and build your own websites in the course"
      ],
      "description": "*** A perfect HTML5 and CSS3 COURSE for beginners on UDEMY! ***\nDo you  want to learn how to build your own websites?\nDo you want to become a web developer?\nDo you just want to know how to customize the design of a website created with Wordpress (or other web-builder) so it looks like you want it to?\nHTML & CSS are the basic building blocks of the website world! And this is the perfect course for you to dive right in and learn them.\nWhy should you enroll in this course?\n1. It's great for absolute beginners, with NO coding or web development experience required!\nMany of the other courses on HTML5 and CSS3 on Udemy are too advanced, or use language that is confusing to a beginner. We break down every definition and step of the process so you never get lost.\n2. Project-based learning. Plus it's free to build websites!\n\nLearning is better when you're actually doing. As you follow along with each section of the course, you'll be building your own websites. Plus, we'll be using free applications to do so - Brackets and Google Chrome. No matter what type of computer you have - Windows, Mac, Linux - you can get started.\nSeriously, within the first hour of the course, you'll be building your own basic websites!\n3. No more boring lectures!\n\nIf you've watched other HTML5 and CSS3 courses or tutorials before, you know that it can be difficult to make it interesting and fun. The instructors Nick and Phil strive to make each lesson fun and interesting, so you feel like you're actually learning something new... and progressing... all while having fun!\n4. Real world case studies!\n\nIt's great to learn how to use HTML and CSS, but it's even better if you know how what you are learning applies to real-world websites. Throughout the entire course, Nick shows how real websites are using HTML and CSS today. Phil follows up with personal case studies of how even beginner's can use HTML and CSS to customize their own websites.\nWHAT WILL YOU LEARN IN THIS COURSE?\nStart by understanding how to use HTML5, CSS3, and Bootstrap\nEach section builds upon the previous ones to give you a complete understanding of the basics of HTML, CSS, and Bootstrap\nOnce you are in the Bootstrap section, you'll learn how to quickly develop and design beautiful responsive websites\nFinally, you'll put all your knowledge together with full website projects such as creating a modern landing page\nIS THIS THE PERFECT COURSE FOR YOU?\nYES - if you are a complete beginner with no experience building a website.\nYES - if you already know some HTML and CSS, but want to learn everything from the ground up so you know how to build a complete website.\nYES - if you don't necessarily want to be a web developer, but want to understand how HTML and CSS work so you can customize your own WordPress site (or other type of website)\nNO - if you already know the basics of HTML and CSS. If that's the case, we recommend a more advanced HTML and CSS course.\nWHAT DO YOU GET WHEN YOU ENROLL?\nLifetime access to all of our videos. Start whenever you want - and go at your own pace!\nDownload any of the lectures, so you can easily watch back on your computer or device.\nDownloadable cheat sheets and guides that make writing website code much more efficient.\nHigh quality support in the course Q&A for whenever you are stuck and have any questions.\nAn amazing new skill that is in high demand for getting a well paid job.\nREADY TO ENROLL?\nWith our 30-day 100% money-back guarantee, there's no reason to hesitate. Enroll now to try out the course completely risk free!\nWe can't wait to see you in the course!\nNick and Phil",
      "target_audience": [
        "Absolute beginners who want to learn the first building blocks (HTML & CSS) for creating websites",
        "Anyone with a website that wants to be able to customize it with HTML and CSS to make it look like you imagine",
        "Anyone looking for a quick refresher of how HTML, CSS, and Bootstrap works"
      ]
    },
    {
      "title": "Complete ASP.NET Core and Entity Framework Development",
      "url": "https://www.udemy.com/course/complete-aspnet-core-31-and-entity-framework-development/",
      "bio": "Learn ASP.NET Core and Entity Framework by building and publishing a practical Employee Leave Management System.",
      "objectives": [
        "Build Complete Data Driven .NET Core MVC Application From Scratch",
        ".NET 8 / 9 Development",
        "Learn C# and Visual Studio Techniques",
        "Implement Authentication and Authorization functionality with Identity Core",
        "Repository and Unit Of Work Pattern and Dependency Injection",
        "Use AutoMapper and View Models",
        "Build Database using Code First Pattern and Migrations",
        "Interact with Database using Entity Framework Core",
        "Use NuGet Package Manager",
        "Manage and Track Changes using GitHub",
        "Asynchronous Programming",
        "Setting up and Publishing to IIS and Remote Database",
        "Setting up a Microsoft Azure Account",
        "Publishing to Azure Web and SQL Services",
        "Setup Automated Build/Release Pipeline using GitHub and Azure DevOps",
        "Review Application Security Measures"
      ],
      "course_content": {},
      "requirements": [
        "A computer",
        "The Internet",
        "A Willingness to Learn"
      ],
      "description": "Overview\nLearn how to build an Employee Leave Management System using ASP.NET Core 6 / 8, Entity Framework, Code-First, and the Repository Pattern. This course will show you how to use Visual Studio and Microsoft SQL Server and explore dynamic web development with Bootstrap, jQuery, and various front-end libraries.\nASP.NET Core is Microsoft's modern, cross-platform framework for building enterprise-ready web applications. In this course,  you will learn everything you need to know about building ASP.NET Core applications, from understanding the folder structure and files to building a complete web application.\nNEXT STEPS\nAfter you have learned the fundamentals of ASP.NET Core and Entity Framework, it is time to take your architectural skills to the next level. Enroll in ASP.NET Core - SOLID and Clean Architecture to learn how to rebuild this application using advanced architectural techniques.\nWhy Learn .NET Core\nMicrosoft .NET is the platform that drives the business technology of many of the top corporations in the United States and many other countries. It is the predominant technology used to drive enterprise-scale business technology. Companies have chosen .NET because of its proven scalability, reliability, and support.\nThe .NET language of choice to learn is C#, as it is among the most widely used languages today. It’s a general-purpose programming language that can handle almost any problem, from desktop to mobile to dynamic web applications. As such, there is a high demand across the world for .NET developers in various industries, which means that more jobs are available for candidates with a foundation built upon .NET technologies.\nBuild A Strong Foundation in .NET Core Programming:\nBuild a fully data-driven web application using cutting-edge technology\nConnect to a Database using Entity Framework Core\nRepository Pattern and Dependency Injection\nUnderstand how the MVC (Models, Views, and Controllers) Pattern works\nUnderstand C# and .NET Core Web Syntax\nUnderstand user Authentication using ASP.NET Core Identity\nUnderstand how to use Entity Framework Core Data Models, View Models and AutoMapper\nUnderstand Security measures to be taken in the development\nUse Bootstrap to style and manipulate the overall layout\nManage Packages with NuGet Manager\nImplement Website Layout using a Third-Party Admin Theme\nSetup GitHub for Source Control\nSetup IIS Server on a Local Machine (Or Windows Server)\nSetup Microsoft Azure Account\nPublish .NET Core Application to IIS\nPublish .NET Core Application to Microsoft Azure App Services\nImplement Email Services\n\n\nContent and Overview\nTo take this course, you must have some knowledge of Object Oriented Programming, if not C#. Even if you have little exposure to the .NET development stack, this course is beginner-friendly and full of development tips.\nThis is a huge course. Over 14 hours of premium content, but smartly broken up to highlight a set of related activities based on each module in the application that is being built, we will also look at troubleshooting and debugging errors as we go along, implementing best practices, writing efficient logic, and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course, and you will be challenged to be the best you can be.\nBy the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, including some files to make it easier for you to replicate the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nClicking the Take This Course button could be the best step you could take towards quickly increasing your income and marketability! Also, remember that if you don't think the course is worth what you spent, you have a full 30 days to get a no questions asked refund!\n\n\nIt's time to take action!\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to learn Data Driven Web Development",
        "Anyone who wants to learn ASP .NET Core Web Development and Programming",
        "Beginner developers",
        "Developers transitioning from .NET Framework to .NET Core"
      ]
    },
    {
      "title": "Symfony Web Development Complete Guide: Beginner To Advanced",
      "url": "https://www.udemy.com/course/symfony-4-web-development-from-beginner-to-advanced/",
      "bio": "Master Symfony PHP Framework: From Theory, Through Simple and Advanced APPs, to Microservices Architecture using CQRS",
      "objectives": [
        "You will learn Symfony 4 & 5 from theory to advanced level by creating real life projects",
        "You will create two apps: simple crud app and an advanced video sharing service with PayPal integration, deployment to Heroku etc.",
        "You will learn how to create multilevel nested categories tree in PHP",
        "You will learn how to install Symfony",
        "You will learn about Symfony configuration",
        "You will learn about Symfony Flex",
        "You will learn about HTTP processing workflow in Symfony framework",
        "You will learn routes",
        "You will learn controllers",
        "You will learn views in Symfony using Twig",
        "You will learn html forms in Symfony",
        "You will learn Doctrine ORM (how to use database)",
        "You will learn entities (models) in Symfony and relations between them",
        "You will learn about service container & services in Symfony",
        "You will learn dependency injection (autowiring in Symfony)",
        "You will learn console command",
        "You will learn how to create events and listeners",
        "You will learn how to use sessions & cookies in Symfony",
        "You will learn how to send emails",
        "You will learn how to do translations in Symfony",
        "You will learn about security concepts in Symfony (login, registration, etc.)",
        "You will learn unit & functional testing",
        "You will learn about debugging Symfony applications",
        "You will learn about cache",
        "You will learn how to use Redis for session and cache",
        "You will learn about doctrine table inheritance in Symfony & polymorphic database queries",
        "You will learn how to deploy a Symfony application to Heroku (make application online)",
        "You will learn how to integrate PayPal with the Symfony application for making subscription billing",
        "You will learn how to use external API (Vimeo api) and use it with the Symfony application",
        "You will be able to create your own websites or web applications in Symfony framework",
        "You will learn basics of RabbitMQ message broker",
        "You will learn basics of Messenger Component",
        "You will learn CQRS pattern - command query responsibility segregation",
        "You will learn REST API with Symfony & API Platform"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "About Symfony",
          "Tools and requirements for students",
          "How to use the course",
          "Course applications overview",
          "Quick note about coding standards",
          "How to get helped"
        ],
        "Symfony 4 & 5 basics, installation & configuration": [
          "Symfony 4 installation & requirements",
          "Symfony 4 configuration",
          "Installing libraries with Symfony Flex",
          "Request & response objects, HTTP processing workflow"
        ],
        "Theory - Symfony 4 & 5 core features": [
          "Before you start watching this section of the Symfony course",
          "Routes",
          "Controllers",
          "Views",
          "Entities (models)",
          "Service container & services - part 1",
          "Service container & services - part2",
          "Advanced routes",
          "Flash messages",
          "Cookies",
          "Session",
          "POST & GET data",
          "Custom error pages",
          "Handle exceptions",
          "Binding services to controllers",
          "More features in controllers",
          "Views - tags, filters, functions, tests, operators",
          "Views - genereate url's and escaping strings",
          "Views - global variables",
          "Views - Webpack Encore",
          "Views - using app variable",
          "Views - embed controllers in view",
          "Doctrine crud - create",
          "Doctrine crud - read",
          "Doctrine crud - update",
          "Doctrine crud - delete",
          "Doctrine raw queries",
          "Doctrine param converter",
          "Doctrine LifecycleCallbacks option",
          "Doctrine one-to-many & many-to-one relationships",
          "Doctrine database relationships - cascade remove ralated objects",
          "Doctrine one-to-one relationship",
          "Doctrine many-to-many self referencing relationship",
          "Doctrine Query Builder & eager loading",
          "Doctrine table inheritance mapping in Symfony (polymorphic queries) - part 1",
          "Doctrine table inheritance mapping in Symfony (polymorphic queries) - part 2",
          "Doctrine table inheritance mapping in Symfony (polymorphic queries) - part 3",
          "Service parameters",
          "Service & autowiring by constructor injection and service arguments",
          "Service configuration",
          "Services - setter injection for optional dependencies",
          "Services - property injection",
          "Install composer package before the next lecture",
          "Services - lazy services",
          "Service - aliases",
          "Service - tags",
          "Service - dealing with different implementations of a service",
          "Services list",
          "Cache - basic usage",
          "Cache - tags",
          "Symfony console",
          "Use profiler tool in Symfony",
          "Environments vs kernels",
          "Deploy Symfony application",
          "Events & Listeners base concepts",
          "Create listener",
          "Dispatching events",
          "Create subscriber",
          "Subscriber - many events handled by one subscriber",
          "Subscriber - events priorities",
          "Form - create a class",
          "Form - render in view",
          "Form - themes",
          "Form - send",
          "Form - validation",
          "Form - events",
          "Form - fields not related to entity",
          "Form - upload files",
          "Email - install email package & send an email",
          "Email - spooling",
          "Email - functional testing",
          "Security - create user",
          "Security - register",
          "Security - login",
          "Security - logout",
          "Security - login & remember login state",
          "Security - csrf",
          "Security - use security checker",
          "Install expression-language package",
          "Security - authorization using annotations",
          "Security - authorization using configuration file",
          "Security - authorization using denyAccessUnlessGranted method",
          "Security - authorization in view files",
          "Security - authorization using voters",
          "Unit tests - install",
          "Unit tests - first unit test",
          "Functional tests - install",
          "Functional & unit tests - common assertions",
          "Functional tests - click links",
          "Functional tests - send a form",
          "Functional tests - data providers",
          "Functional tests - tests in isolation",
          "Tests - mock objects",
          "Tests - code coverage report",
          "Translations - install a package",
          "Translations - views",
          "Translations - controllers",
          "Translations - routes",
          "Translations - pluralization"
        ],
        "First application in Symfony: to-do list app (CRUD)": [
          "Before you start watching this section of the Symfony course",
          "Installation and creating virtual host (To-Do App)",
          "Move html template to Symfony (To-Do App)",
          "Create controller methods (To-Do App)",
          "Make entity in Symfony and use it (To-Do App)",
          "Display list of all tasks on the website (To-Do App)",
          "Switch status of a task (To-Do App)",
          "Delete a task (To-Do App)"
        ],
        "Controllers, routes, views - install and move html template to Symfony (App)": [
          "Before you start watching this section of the Symfony course",
          "Installation of Symfony 4 framework and moving template to it",
          "Continue with moving html template to Symfony",
          "Make template links working in Symfony - part 1",
          "Make template links working in Symfony - part 2",
          "Make template links working in Symfony - part 3",
          "Make template links working in Symfony - part 4",
          "Make template links working in Symfony - part 5",
          "Install Webpack-Encore"
        ],
        "Doctrine entities, relations, fixtures,console commands - video categories (App)": [
          "Category entity (model)",
          "Continue with Category fixtures - part 1",
          "Continue with Category fixtures - part 2",
          "Display main categories on website",
          "Create custom Twig filter",
          "Category class for front-end",
          "Build php array for nested categories",
          "Create nested categories on front-page",
          "Finish displaying categories on front-page",
          "Display categories in admin area - part 1",
          "Display categories in admin area - part 2",
          "Edit category in admin panel - part 1",
          "Edit category in admin panel - part 2",
          "Edit category in admin panel - part 3",
          "Edit category in admin panel - part 4",
          "Edit category in admin panel - part 5"
        ],
        "First unit tests, mocking classes (Symfony App)": [
          "Unit testing of categories - part 1",
          "Unit testing of categories - part 2",
          "Unit testing of categories - part 3",
          "Unit testing of categories - part 4",
          "Unit testing of categories - part 5"
        ],
        "First functional tests with isolation (Symfony App)": [
          "Functional testing of categories - part 1",
          "Functional testing of categories - part 2",
          "Functional testing of categories - part 3",
          "Functional testing of categories - part 4"
        ],
        "Paginate, sort and search - videos on the website and test it (Symfony App)": [
          "Create video fixtures",
          "Videos on front-page",
          "Pagination",
          "Display videos from child categories",
          "Sort videos",
          "Search results",
          "Functional testing of videos - part 1",
          "Functional testing of videos - part 2",
          "Functional testing of videos - part 3"
        ],
        "Login and authorization system, sample user data - fixtures (Symfony App)": [
          "Symfony login system - part 1",
          "Symfony login system - part 2",
          "Symfony login system - part 3",
          "Symfony login system - part 4",
          "User roles - part 1",
          "User roles - part 2",
          "User roles - part 3",
          "Display links for users depending on login status - part 1",
          "Display links for users depending on login status - part 2",
          "Securing access to superadmin pages",
          "Check security"
        ]
      },
      "requirements": [
        "PHP language and object oriented programming",
        "Basics of HTML, CSS, JavaScript",
        "How to install software on your computer and have internet connection",
        "You need to have server environment installed, e.g. Ubuntu, Xampp etc. to work with PHP applications locally"
      ],
      "description": "Welcome to the most comprehensive Symfony course on Udemy. Symfony is the great PHP framework!\n\n\nIn this course you will learn Symfony from basic to advanced level - from theory, through simple crud app, up to creating an advanced Real Life Application. You will also learn how to create REST API using API Platform and how to create microservices architecture using CQRS, RabbitMQ and Symfony Messenger.\n\n\nBy the end of this course you will be able to create both simple websites and complex dynamic web applications in the Symfony PHP framework.\n\n\nYou won't find a more comprehensive Symfony course on Udemy than this one. Although we currently have Symfony version 7, the course is still very useful, not much has changed, many things are very similar. For example, the definition of routing:\nSymfony 4,5:\n/**\n* @Route(\"/blog\", name=\"blog_list\")\n*/\npublic function list(): Response\n{\n// ...\n}\nSymfony 7:\n#[Route('/blog', name: 'blog_list')]\npublic function list(): Response\n{\n// ...\n}\n\n\nDon't worry. You won't encounter version incompatibility errors - in this course you use the same package versions as the instructor on the screen.\n\n\nVery practical course! Almost all sections/concepts are explained using real life applications/scenarios. In this course we will create a huge real life app (probably you will not find a course where built more advanced  app like in this course).\n\n\nThis is a very massive guide to Symfony, which is one of the most popular PHP frameworks. Symfony 4 version introduced a new approach to php frameworks - it starts small as a microframework and grows as you need new features. You install them using the amazing Symfony Flex tool. For example, if you are making a simple website and do not need a login functionality then there is no code responsible for logging in the framework directory. Thanks to this our application contains only as much as we really need.\n\n\nThe course consist of three main parts:\n1. The theoretical part where I discuss the basic Symfony concepts on examples with effects on a web browser\n2. In the second part we will build a simple application in Symfony - a list of tasks to be performed (database used)\n3. In part 3 we will build an advanced web application for video subscription in which we integrate PayPal for payments, multi-level nested video categories, communication with Vimeo API, deployment to Heroku server\n\n\nas well as:\n\n\nBONUS section added - basics of Symfony Messenger Component, RabbitMQ message broker and CQRS pattern (Command Query Responsibility Segregation) with practical example by simulating e-commerce system consisting of main app and cooperating microservices.\n\n\nCourse update: new section added REST API with Symfony & API Platform\n\n\n\n\nDuring the course we will be covering many simple and advanced Symfony concepts such as: routing, controllers, views, database with doctrine orm, entities and relationships between them: one to one, one to many and many to many; events & listeners, security topics such as login, registration, authorization; also unit and functional testing, dependency injection, service container, symfony services, doctrine table inheritance with polymorphic database queries, REST API and many more.\n\n\nThis course is a combination of theory and project-based learning approach. Learning by building real projects is the best way to learn programming languages and tools like PHP frameworks.\n\n\nAll of the course applications were made using Symfony 4 (except applications for rest api section - Symfony 5). Upgrade to Symfony 5 section was added to the course. According to Symfony standard, there are no any new features in Symfony 5.0 compared to Symfony 4.4.\n\n\nRemember that only practice makes perfect. If necessary, study the course two or more times. Take notes  during the course like a real student. Use documentations, Google search. Finally, try to write the application yourself, not necessarily the same as in the course, you can try to change, add something, etc. No single course will make you a very good web developer. It can only bring you closer to this goal. The more practice, the better.\n\n\n\n\nQA\nQuestion:\nYou used Symfony 4 and Symfony 5 in this course for creating apps to practice knowledge. Why not use only the latest version? Does it mean that this course is outdated and I will not benefit from it?\nAnswer:\nAbsolutely not! In tools like PHP frameworks the fundamentals and base syntax almost never change regardless of the version. But of course any maintained software evolves all the time. That's why I always suggest you to use the version of software that instructor uses in the course. It prevents from errors and confusions. As a someone who wants to learn web development you should be aware, that real web development involves also adapting the code to newer versions if necessary - but this is not always necessary, not every company do that. Software changes so often that the instructors would not be able to create the courses so that they match the latest version. This is not even advisable, because as a student you would loose an important aspect of real web development - the awareness that everything is changing and you need to be able to deal with it.\n\n\n\n\nEnroll now and let's start learning Symfony!\nThere is no risk! 30 day money back guarantee (as always at Udemy)",
      "target_audience": [
        "Everyone who want to learn Symfony framework",
        "Everyone who is interested in building web applications and websites"
      ]
    },
    {
      "title": "Let's Learn Laravel & Livewire: A Guided Path For Beginners",
      "url": "https://www.udemy.com/course/lets-learn-laravel-a-guided-path-for-beginners/",
      "bio": "Learn The Essential Concepts of PHP, Laravel (11) and Livewire To Launch A New Career!",
      "objectives": [
        "The PHP language itself",
        "How to setup your personal computer for Laravel practice",
        "How to keep your code organized (we actually take the time to understand the MVC pattern)",
        "How to deploy your app up to the web (both local Docker practice, and a real public Linux VPS)"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course!",
          "Text Editor",
          "Quick Note About Our Text Editor And Extensions",
          "Windows: Installing PHP",
          "Quick Windows Note",
          "Mac: Installing PHP",
          "PHP The Language Itself",
          "Windows: Composer",
          "Mac: Composer",
          "Actually Using Composer"
        ],
        "Laravel Introduction": [
          "Using Composer To Create a Laravel Project",
          "Routes and URLs",
          "How To Use The Reference Zip Files In This Course",
          "What Is A Controller?",
          "Clearing \"View\" Cache",
          "What Is A View? What Is Blade?",
          "Reducing Duplication in Blade"
        ],
        "Database Basics": [
          "About MySQL and SQLite",
          "Install MySQL (Windows)",
          "Install MySQL (Mac)",
          "Connecting Laravel To Our Database",
          "Submit HTML Form Into Database",
          "Validation & Details"
        ],
        "Authentication Basics": [
          "Logging In",
          "Logging Out & Misc Details"
        ],
        "Blog Posts": [
          "Blog Posts",
          "Single Blog Post URL (Part 1)",
          "Single Blog Post URL (Part 2)",
          "What Is Markdown?",
          "What Is Middleware?",
          "User Profile (List of Their Blog Posts)",
          "Updating & Deleting Posts (Policy)",
          "Policy Middleware",
          "How To Setup \"Moderator\" Permissions",
          "Admin Only Pages (What is a Gate?)"
        ],
        "User Uploaded Files (Avatar)": [
          "Quick Note About The Profile Screen",
          "Letting Users Upload Files",
          "Resizing Images With PHP",
          "Using Avatar in Database & Blade"
        ],
        "Users Following Each Other": [
          "Saving a \"Follow\" Into Our Database",
          "Removing a Follow",
          "Profile Pages (Part 1)",
          "Profile Pages (Part 2)",
          "List Of Users (Model Relationships)",
          "Homepage Feed of Posts",
          "Pagination",
          "Document / Page Title & Post Component",
          "How To Populate Or \"Seed\" Your Database"
        ],
        "Search": [
          "Search (Back-End)",
          "We'll Rebuild Using Livewire",
          "Asset Bundling Vite Setup"
        ],
        "Chat": [
          "Events & Listeners",
          "Important Note For Windows Users",
          "Broadcasting (Part 1)",
          "Broadcasting (Part 2)",
          "Don't Forget To \"Build\" Your JavaScript"
        ],
        "Livewire": [
          "What Is Livewire? (Getting Started)",
          "Live Results From Livewire (No JS Needed)",
          "Alpine Is The Perfect Companion For Livewire",
          "Finishing Search With Livewire",
          "Starting Chat With Livewire",
          "Broadcasting In Livewire",
          "Scrolling Chat To Bottom After Every Message",
          "SPA: The Magic of \"wire:navigate\"",
          "Converting Other Forms to Livewire",
          "Avatar Upload With Livewire"
        ]
      },
      "requirements": [
        "No programming experience is required, but a basic understanding of HTML will be helpful.",
        "A computer that you are allowed to install software on, and an internet connection."
      ],
      "description": "Updated in November 2024 to include version 11 of Laravel and also a brand new chapter about the amazing Livewire framework.\nLearn the incredibly popular and in demand Laravel (version 11) framework. There are countless Laravel courses in the world; here's what makes this one unique:\nNo assumptions that you already understand the PHP language.\nNo assumptions that you already understand the \"Model View Controller\" pattern.\nNo assumptions that you already understand how to setup a dev environment on your computer.\nNo assumptions that you already understand how to deploy a website.\nNo assumptions that you already understand the Linux command-line.\nLaravel is an amazing framework, but because it is so feature-complete I've noticed that a lot of guides and tutorials get overly ambitious and introduce 10 or 20 new concepts in a single lesson which is frustrating when you're a beginner and you're trying to actually understand why you're doing what you're doing. I've also noticed a lot of tutorials assume you've already used lots of other web application frameworks before Laravel, and so they don't actually explain any of the organizational or conceptual pieces of the puzzle.\nThis course is different because I assume that Laravel is the first web application framework you've ever attempted to learn, and so we move at a pace where you can actually absorb the big-picture concepts that exist in all frameworks; not just Laravel.\nHere's what we'll learn in the course:\nThe PHP language itself\nGetting our computer ready for Laravel\nUser registration, log in, log out\nProfile Photo Upload (server-side resize & storage)\nThe Blade Template Engine\nComposer the PHP Dependency Manager\nForm Validation\nGates, Policies, Permissions (e.g. You can only edit your own posts and not other people's posts)\nRelationships; letting one user follow another user\nHow to use Models to query for the exact data you want (e.g. homepage feed of posts from the users you follow)\nHow to send automated emails from your app\nAdd API URLS that allow users to login and create & delete posts from outside the context of a web browser\nUse Docker to practice deploying to a Linux server\nConfigure a real public Ubuntu VPS to host our Laravel app with a real domain\nSetup our VPS as a Git server that you can push to for effortless future updates to your live site\nI encourage you to watch the freely available first lesson titled \"Welcome To The Course\" to get a better feel for the course.\nThis course may be brand new, but this isn’t my first time teaching. I’ve led training sessions for Fortune 500 companies and I’ve already helped over 200,000 people on Udemy and received the following feedback:\n\"Brad definitely has some of the best techniques to embed the lesson into your mind… hands down these are the best tutorials I have had the opportunity to view.\"\n\"Presentation is concise without being tedious… you honestly feel that you have a thorough understanding of the subject.\"\n\"…[Brad] explained the process. Not memorize this or that, he explained the process. If you're looking to take a course to understand the foundations of creating websites, look no further.\"\nBecome highly valuable and relevant to the companies that are hiring Laravel developers; in one convenient place alongside one instructor. If you're ready to begin coding your own applications from the ground up - I'll see you on the inside!",
      "target_audience": [
        "Anyone who wants to begin creating web applications using Laravel & PHP."
      ]
    },
    {
      "title": "Learn Angular 2 from Beginner to Advanced",
      "url": "https://www.udemy.com/course/learn-angular-2-from-beginner-to-advanced/",
      "bio": "Learn how to develop web applications using Angular 2",
      "objectives": [
        "Develop web applications using Angular 2",
        "Create single-page applications",
        "Write cleaner and reusable code for better maintainability",
        "Be profficient in Angular2"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to Angular2 Course"
        ],
        "Setup": [
          "Setup Part 1",
          "Setup Part 2",
          "Setup Linux"
        ],
        "Quickstart": [
          "Quickstart files Part 1",
          "Quickstart files Part 2",
          "Quickstart files Part 3",
          "Quickstart files Part 4"
        ],
        "Templates and Components": [
          "Interpolation Part 1",
          "Interpolation Part 2",
          "Property Binding Part 1",
          "Property Binding Part 2",
          "Event Binding",
          "Local Variables Part 1",
          "Local Variables Part 2",
          "ngIf and ngFor",
          "Let Us Start Building Our Application Part 1",
          "Let Us Start Building Our Application Part 2",
          "Let Us Start Building Our Application Part 3",
          "Let Us Start Building Our Application Part 4",
          "Let Us Start Building Our Application Part 5",
          "Component Styles in Angular2",
          "ngClass",
          "Bootstrap Part 1",
          "Bootstrap Part 2",
          "Separating Components Part 1",
          "Separating Components Part 2",
          "Separating Components Part 3",
          "Inter-component Communication Concept",
          "Decorator @INPUT",
          "Decorator @OUTPUT Part 1",
          "Decorator @OUTPUT Part 2",
          "Account form Component Part 1",
          "Account form Component Part 2",
          "Account form Component Part 3",
          "Account form Component Part 4",
          "Account form Component Part 5"
        ],
        "Services": [
          "Our First Service Part 1",
          "Our First Service Part 2",
          "When service injects service Part 1",
          "When service injects service Part 2",
          "Promises-Asynchronous service methods Part 1",
          "Promises-Asynchronous service methods Part 2"
        ],
        "UPDATE ANGULAR2 AND NODE": [
          "Update Part 1",
          "Update Part 2"
        ],
        "Routing": [
          "Home Page and Accounts Part 1",
          "Home Page and Accounts Part 2",
          "Home Page and Accounts Part 3",
          "Child Routes Part 1",
          "Child Routes Part 2",
          "Child Routes Part 3",
          "Child Routes Part 4",
          "Route Parameters Part 1",
          "Route Parameters Part 2",
          "Route Parameters Part 3",
          "Add Transactions Part 1",
          "Add Transactions Part 2",
          "Add Transactions Part 3",
          "Add Transactions Part 4",
          "Query Parameters Part 1",
          "Query Parameters Part 2"
        ],
        "Pipes": [
          "Introduction",
          "Date Pipe",
          "Async and JSON Pipes",
          "Custom Pipe",
          "Pure and Impure Pipes",
          "Pure and Impure Pipes Demo"
        ]
      },
      "requirements": [
        "Basic HTML and CSS skills, but it is not a requirement"
      ],
      "description": "If you are looking to advance your skills with Angular 2, then look no further because this course is just right for you! Become an advanced programmer in Angular 2 in no time using this course which will continue to educate and motivate you along the way.\nThere is no reason to feel discouraged if you have no previous experience with Angular 2 since this course starts off with the mere basics. Even if you do have previous Angular 2 knowledge, this course covers interesting topics that you might have missed or would like to learn about.  Each section of the course is related to the previous one in terms of utilizing what was already learned. All the covered subjects come with loads of examples to aid students in the process of learning and improving their skills. Upon the completion of this course, you should be able to write your own programs that have real-life applications, making it interesting for both beginner and advanced students alike.\nWhat I think is the best about this course is that you can check out questions that were posted by other students as well as ask your own questions, and  get answers to challenges you are currently facing in learning and using Angular 2.  You get paid Angular 2 expert technical support in this course here to answer every single question you ask!\nYou can send any suggestion you have on topics that have not been covered by contacting me via private message.  I will do my best to cover them as soon as possible. Rest assured that any feedback you might have will not go ignored.\nThank you for reading this. I hope to see you in the course soon and I hope you will enjoy your time learning as much as I have!",
      "target_audience": [
        "This course is meant for beginners and web developers who wish to learn how to build web applications in Angular 2"
      ]
    },
    {
      "title": "Build Responsive Real World Websites with CSS3 v2.0",
      "url": "https://www.udemy.com/course/css3-responsive-web-design-tutorial-with-flexbox-and-animations/",
      "bio": "Learn CSS3 Flexbox, CSS3 Animations, Transitions, Transformations and Responsive Web Design. Make beautiful websites!",
      "objectives": [
        "Real-world skills to build real-world websites. Including several mini projects!",
        "Learn the basics, then learn Advanced Selectors, Gradients, Transformations, Transitions, Animations, Flexbox and Responsive Web Design!",
        "Get my e-book \"CSS Masterclass\" for free. It's a 180 page CSS3 eBook with interactive code examples all available on CodePen",
        "Get helpful support in the course Q&A",
        "Downloadable lectures, code and design assets for the entire project"
      ],
      "course_content": {
        "CSS Introduction": [
          "CSS Introduction",
          "How To Get The Most From This Course",
          "Support Group",
          "Syntax Introduction",
          "Very Important",
          "Editors",
          "How to Ask Great Questions",
          "CSS Masterclass e-book (free)",
          "What is Inline CSS?",
          "What is Internal CSS?",
          "What is External CSS?",
          "CSS Introduction Quiz"
        ],
        "Getting Started": [
          "Color Types",
          "Background Colors",
          "Background Images",
          "Repeating Background Images",
          "Borders",
          "The Box Model (Extremely Important!)",
          "Padding",
          "Margin",
          "Centering an Element",
          "Outline",
          "Cursor",
          "A Quick Checkup",
          "Getting Started Quiz",
          "Mini Project",
          "Mini Project: Solution"
        ],
        "Text Formatting": [
          "Text Color",
          "Text Alignment",
          "Text Decoration",
          "Text Transform",
          "Text Indent",
          "Letter Spacing",
          "Line Height",
          "Direction",
          "Word Spacing",
          "Text Formatting Quiz"
        ],
        "Fonts and Font Styling": [
          "Serif vs. Sans Serif",
          "Font Family",
          "Lots of Free Fonts",
          "Font Style",
          "Font Size",
          "Font Weight",
          "Font Variant",
          "Font Awesome Icons",
          "Font and Font Styling Quiz"
        ],
        "Links and their \"States\"": [
          "Links Introduction",
          "Hover Over Links",
          "Visited Links",
          "Active Links",
          "Links Quiz"
        ],
        "Better Selectors": [
          "Grouping Selectors",
          "Descendant Selectors and Specificity",
          "Child Selectors",
          "Adjacent Selectors",
          "Better Selectors Quiz"
        ],
        "Lists": [
          "List Style Type",
          "List Style Position",
          "List Style Image",
          "Lists Quiz"
        ],
        "Tables": [
          "Tables",
          "Table Borders",
          "Table Cell Vertical Align",
          "Table Row Hover Effect",
          "Mini Project",
          "Mini Project: Solution",
          "Tables Quiz"
        ],
        "Display": [
          "Display Introduction",
          "Display Block",
          "Display Inline",
          "Display Inline-Block",
          "Display None",
          "Display Quiz"
        ],
        "Sizing Elements": [
          "Width",
          "Height",
          "Sizing Elements Quiz"
        ]
      },
      "requirements": [
        "No coding or design experience necessary",
        "Any computer will do — Windows, OSX or Linux",
        "You don’t need to buy any software — we will use the best free web development editor in the world"
      ],
      "description": "You can launch a new career in web development by simply learning HTML and CSS. You don't need a university degree or any paid software, everything can be learned for free with free software and a few hours of your time. This course also comes with my full CSS Masterclass e-book, as an added bonus!\nThis entire course is designed to take you from a beginner to a CSS expert in order to prepare you for a job as a web developer.\n\nDon't limit yourself with those terrible site-builder tools. They are cool tools, but ultimately the limit your creativity. By learning CSS you'll be able to unleash your creativity!\nTHIS COURSE COMES WITH:\nOver 170 lessons\nOver 140 tasks (found at the end of each lesson)\nMy CSS Masterclass e-book that has interactive code examples\nOver 25 self contained modules so you can skip around if you like\nDirect access to me through the Q&A section\nUnlimited 24/7 Access through the website, the app, your phone or even your TV\nA certificate of completion\nAccess to my Developer Support Group where you can ask me questions directly\nQuizzes at the end of each module\nThis course does not assume any prior knowledge in CSS, but it's also broken up into small section that allow you to skip around (so you don't have to watch everything you already know about).\nI've taught over 225,000 students on Udemy, so you know you can trust me and what I'm going to teach you. Here's what some people have said about my other courses:\n\n\"This course is worth doing it like what i call baby steps ... i did the course again and practice a lot i sometime refer to some video if i struggle well done\"\n\"very clear explanation how things example with alot of examples. Very good!\"\n\"absolutely love this course! Perfect! You can't go wrong with this Udemy Instructor.\"\n\"Great info. I think it breaks a lot of the myth of what you should and need to know to get a job doing front end development. A++\"\n\"It was a good experience. This course was excellent for me as beginner. Now, I am looking to create my first website. Thank you Mr. Kalob Taulien.\"\nAre you looking for the best way to learn how to build beautiful websites with CSS3? What about websites that look even better on your phone?\nDo you want to learn everything in one course? (no upgrades, no up-selling .. just me and you, a bunch of code and some great projects)\nHave you taken other CSS courses but didn't actually learn how to build beautiful and responsive websites? Or did they teach you things that you can't apply in real life?\nIf your answer is a big YES... Then this is exactly the course you are looking for! This is the one-stop-shop for all your CSS learning needs!\nThis course is very hands on. Over 140 lessons have tasks at the end of them so you can gain immediate experience with everything new you've learned.\n\nYOU'RE GOING TO LEARN AMAZING ADVANCED CSS3 SUCH AS:\nTransitions\nGradients\nTransformations\nAnimations\nFlexbox\nResponsive Web Design\nCSS Transitions:\nYou'll learn how to slowly animate website components using transitions. Like when you put your mouse over a link and it slowly changes color (instead of being instant.. it looks like a fading effect!)\n\nGradients:\nNo Photoshop required! We'll learn how to master gradients from scratch. It's a lot easier than you think and adds a nice visual aspect to your websites!\n\nTransformations:\nYou'll learn about 2D and 3D transformations. Like making an element bigger but keeping it's height and width proportional. Rotating elements has never been easier! Change the perspective on an element adds a nice angle to your elements, and can make your text look like the intro to Star Wars.\n\nAnimations:\nCSS3 animations let you create full CSS-only animations (no JavaScript required). You can do more than just change sizes or colors... you can turn your website into an app-like website with cool animations. And we'll go over each animation property one-by-one with lots of practice in between. By the end of the animations module, you'll be an animation PRO!\n\nFlexbox:\nFlexbox is probably the most important CSS3 property. It lets you set an element's base size and allow it to grow or shrink depending on other content. You can vertically align content without tables or CSS \"hacks\". It makes responsive web design SO EASY. You can re-arrange your HTML elements without writing any HTML (pure css!) With transitions, you can make a VERY nice website. You'll get real life practice with flexbox AND how you can make a website responsive (there's a project based on creating a Flexbox layout!)\n\nResponsive Web Design (RWD):\nLearn exactly how we make a website \"responsive\", which really just means \"the website transforms when you view it on a phone or a laptop\". We'll dive into Responsive Web Design, media queries, and get hands on practice creating our own responsive website!",
      "target_audience": [
        "Complete beginners who want to learn how to build a professional, beautiful and responsive website",
        "Students with some knowledge about HTML and CSS, but who struggle to put together a great website",
        "Designers who want to expand their skill set into HTML5 and CSS3"
      ]
    },
    {
      "title": "Complete FastAPI masterclass from scratch",
      "url": "https://www.udemy.com/course/completefastapi/",
      "bio": "Learn everything about FastApi with Python, Full Stack, OAuth2, SQLAlchemy, RESTful APIs, and practice projects",
      "objectives": [
        "FastApi foundations, basics and advanced features",
        "API creation, management and deployment",
        "Authentication and authorization",
        "Testing, debugging, error handling and management",
        "SQL, relational databases, SqlAlchemy and ORM",
        "Step by step code writing where you will learn by doing",
        "Advanced features such as asynchronous programming and web socket communication",
        "Lots more features that will get you from a beginner to an advanced developer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "If you don't know Python",
          "Important message about Udemy reviews",
          "Engage on social media"
        ],
        "Getting started": [
          "Section overview",
          "Installation on Windows",
          "Installation on Mac",
          "FastAPI features",
          "HelloWorld discussion"
        ],
        "GET method": [
          "Section overview",
          "Path parameters",
          "Predefined values",
          "Query parameters"
        ],
        "Operation description": [
          "Section overview",
          "Status code",
          "Tags",
          "Summary and description",
          "Response description"
        ],
        "Routers": [
          "Section overview",
          "Routers",
          "Refactoring the app",
          "Adding a second router"
        ],
        "Parameters": [
          "Section overview",
          "Request body",
          "Path and query parameters",
          "Parameter metadata",
          "Validators",
          "Multiple values",
          "Number validators",
          "Complex subtypes"
        ],
        "Database with SQLAlchemy": [
          "Section overview",
          "Quick intro about Dependencies",
          "Databases in FastAPI",
          "Boilerplate code",
          "Create database and table",
          "Solving a common python environment problem",
          "Create database and table continued",
          "Write data in database",
          "Process review",
          "Create and read",
          "Update and delete",
          "Relationships"
        ],
        "Concepts": [
          "Section overview",
          "Error handling",
          "Custom Response",
          "Headers",
          "Cookies",
          "Form data",
          "CORS"
        ],
        "Authentication": [
          "Section overview",
          "Authentication",
          "Securing an endpoint",
          "Token generation code",
          "Generating access token",
          "User authentication"
        ],
        "Working with files": [
          "Section overview",
          "File",
          "UploadFile",
          "Making files statically available",
          "Downloading files"
        ]
      },
      "requirements": [
        "Python",
        "Basic web technologies HTML CSS Javascript"
      ],
      "description": "Your professional FastAPI development course.\nFastAPI is one of the fastest growing API development frameworks available. It is easy to use and lightweight. In addition it provides some unique benefits such as automatic Swagger docs generation and modern, open standards of development.\nThis course will give you a complete understanding of FastAPI features. We will discuss simple and advanced concepts so that you have a clear image of what is possible.\nWe will also discuss how FastAPI works with SQL databases, and in particular SqlAlchemy. We will see how we can expose endpoints that will allow a client to manipulate and retrieve data from a database.\nAnd best of all, ALL concepts discussed will be implemented in code. This will not only be a theoretical course, but a course that builds both your knowledge and experience. Whenever we introduce a concept, we will implement it in code so that you see how it works in practice.\nIn this course we will cover:\nInstallation and setup on both Mac and Windows\nVirtual environment and project generation\nFastApi features\nPath and query parameters\nHTTP status, codes and exceptions\nError handling\nTags\nRouters and automatic path generation\nAPI responses and response management\nValidators\nComplex subtypes\nSQL, relational database management and ORM\nSQLAlchemy\nAuthentication and authorization\nFile management\nAPI deployment\nTesting and debugging\nTemplates, middleware, async programming, web socket communication, background tasks and lots more\nThe final part of the course will be a practical project. We will create an Instagram clone app and build the API that is required to make that work. We will focus on a few key concepts like posting, commenting and user authentication.\nWe will also develop two clients for our api:\nweb client in ReactJS\nmobile client in Android and Kotlin\nThat way you will have a complete understanding both web and mobile fullstack development.\nThis course is meant for fullstack developers who wish to acquire a new skill. That of building APIs quickly and easily.\nThe course is constantly updated as the API evolves and adds new tools and concepts.\nI'm confident you will love this course. So sign up today and let's get started learning to build APIs in FastAPI.",
      "target_audience": [
        "Beginner Fullstack Developers",
        "Intermediate Fullstack Developers",
        "Web devs"
      ]
    },
    {
      "title": "Laravel + Vue 3 + Inertia: From Zero to Production SPA",
      "url": "https://www.udemy.com/course/master-laravel-6-with-vuejs-fullstack-development/",
      "bio": "From Zero to Launch: Build Advanced SPAs with Vue, Inertia, Laravel & Tailwind and Ship a Portfolio Project",
      "objectives": [
        "Master the VILT stack: Laravel, Vue 3, Inertia, and Tailwind CSS",
        "Build a full-stack Single Page Application from scratch",
        "Develop robust backend systems with Laravel",
        "Create dynamic, responsive UIs using Vue 3 and Composition API",
        "Seamlessly integrate frontend and backend with Inertia",
        "Design modern, efficient layouts with Tailwind CSS",
        "Implement user authentication and email functionality",
        "Apply best practices in full-stack web development"
      ],
      "course_content": {
        "Introduction, Source Code, Resources and Getting Help!": [
          "What You'll Learn and Build in the Course?",
          "How Laravel, Vue and Inertia Work Together?",
          "What Tools You Need and How to Get Help?",
          "Visual Studio Code Resources!",
          "What's Next?"
        ],
        "Setting Up for Windows!": [
          "Setting Up for Windows! - Section Introduction",
          "Windows Installing PHP",
          "Enabling pdo_mysql Extension!",
          "Windows Installing Composer",
          "Windows Installing Node.js",
          "Windows Installing Docker"
        ],
        "Setting Up for Mac!": [
          "Setting Up for Mac! - Section Introduction",
          "MacOS Installing Homebrew",
          "MacOS Installing PHP",
          "MacOS Installing Composer",
          "MacOS Installing Node.js",
          "MacOS Installing Docker"
        ],
        "Creating the Project & Setting Up Laravel, Vue & Inertia": [
          "Creating the New Laravel Project (And Handling Issues!)",
          "Configuring Laravel, Vue and Inertia.js!",
          "IMPORTANT! Inertia.js Upgrade Guide",
          "Full Upgrade Guide to Laravel 11 & Course Source Code for Laravel 11"
        ],
        "Your First SPA": [
          "Your First SPA - Section Introduction",
          "Creating first pages",
          "Passing data to pages",
          "Layouts",
          "Reactive data in Vue",
          "Persistent layouts with Inertia",
          "Default layouts",
          "(OPTIONAL) Using linter (ESLint), jsconfig and getting most out of VSCode",
          "(OPTIONAL) Advanced JS topics (arrow functions, promises, async importing etc.)"
        ],
        "Working with the Database": [
          "Working with the Database - Section Introduction",
          "Laravel Debugbar & IDE Helper",
          "IMPORTANT: Typical Database Connection Issues Q&A",
          "Connecting to the Database",
          "Models and Migrations",
          "Working with Migrations",
          "Model Factories & Seeders",
          "IMPORTANT! Solving Laravel Tinker Issues!",
          "Querying the Database",
          "Querying the Database (CHALLENGE)",
          "Updating and Inserting Data, Mass Assignment",
          "Resource Controller and Route Model Binding",
          "Vue Directives (v-for, v-bind) & Custom Components",
          "Handling Forms (useForm, v-model)",
          "Handling Forms in Laravel",
          "Middlewares and Sharing Data with All Pages",
          "Computed Data and Conditional Rendering (Displaying Flash Messages)",
          "Data Validation (Back End & Front End)",
          "Edit Form",
          "Deleting Data",
          "Laravel Route Names in Vue"
        ],
        "Adding Some Style (Tailwind CSS)": [
          "Adding Some Style (Tailwind CSS) - Section Introduction",
          "Installing and Setting Up Tailwind CSS",
          "Why Tailwind CSS? Tailwind Overview",
          "Basic Styling of the App (Hands on With Tailwind)",
          "Custom UI Components and Grid Responsive Design",
          "Listing Details (Non-Prop Attributes)",
          "Custom Price Formatting Component",
          "Listing Page (Getting Even Better With Responsive Design!) + Vue Named Slots",
          "Styling Forms",
          "Extracting Tailwind Styles Using @apply Directive",
          "Edit Form Styling",
          "Styling Error Messages"
        ],
        "Monthly Payment Calculator (Mini Vue Project Within a Project)": [
          "What Are We About to Build?",
          "Payment Calculator Markup (Sliders)",
          "Payment Calculator Logic",
          "Composables - Reusable Logic in Vue (Reactive Monthly Payment)",
          "Displaying Payment Next to Every Listing (Reusing Composable)",
          "Adding More Composable Members (Total Paid, Total Interest)"
        ],
        "Authentication & Security": [
          "Authentication & Security - Introduction",
          "Authentication Controller and Routes",
          "Authentication Form Markup and Basic Logic",
          "Signing-In Logic - Authentication Process Explained",
          "Explaining the Authentication Process",
          "Getting the Currently Logged In User",
          "Logging Users Out",
          "CSRF Tokens",
          "Protecting Routes (Authorization) - Can You Access a Specific Page?",
          "User Registration Form",
          "Note on Password Hash Since Laravel 10",
          "User Registration Logic & Hashing Passwords",
          "Eloquent Mutators & Accessors - Hashing Password Example",
          "How Hashing of The Passwords Work",
          "Form Links",
          "419 Errors When Logging Out"
        ],
        "Database Relations & User Authorization": [
          "Database Relations & User Authorization - Introduction",
          "Creating a One-to-Many Database Relationship",
          "One-to-Many Connecting Models Together - the Theory",
          "One-to-Many Connecting Models - Practice",
          "Every New Listing Needs an Owner!",
          "Model Policies - Theoretical",
          "Model Policies - In Practice",
          "Model Policy and Guest Users",
          "Only Owners Can Edit or Delete!",
          "Admin Users - Overriding Policy Implementation",
          "Reading the Related Data (Using Database Relationship)"
        ]
      },
      "requirements": [
        "Basics of JavaScript",
        "Basics of PHP"
      ],
      "description": "Build a modern full-stack SPA with Laravel, Vue 3, Inertia.js & Tailwind (VILT stack)\nSkip the theory-overload. In this course, we’ll actually build a real, production-ready Single Page Application from scratch — backend to frontend — using Laravel, Vue 3, Inertia.js, and Tailwind CSS. You’ll learn by doing, with practical, hands-on coding at every step.\nYou’ll learn by doing:\nSet up a fresh Laravel + Vue + Inertia project and get it running locally (Mac or Windows)\nUse Vue 3 Composition API for clean, reactive, maintainable components\nConnect Laravel & Vue with Inertia.js — no separate API layer, no boilerplate REST/GraphQL headaches\nStyle fast with Tailwind CSS — fully responsive layouts without wrestling CSS files\nImplement auth (login, registration, permissions) the Laravel way\nWork with databases: migrations, Eloquent ORM, relationships, seeding\nAdd real-world features: routing, middleware, email sending, and form handling\nManage state and dynamic UI in Vue for a smooth SPA experience\nAlso covered:\nSensible project structure for full-stack apps that scales with new features\nPerformance tips & optimization techniques for faster load times and smoother UX\nDebugging workflows that actually help you fix issues faster and with less frustration\nBest practices for keeping your codebase clean, organized, and easy to maintain over time\nBy the end, you’ll know exactly how to plan, build, and ship a modern, production-ready SPA without getting lost in outdated patterns, bloated dependencies, or overcomplicated setups.",
      "target_audience": [
        "Beginners in PHP",
        "Beginners in JavaScript"
      ]
    },
    {
      "title": "Introduction to web programming for GIS applications",
      "url": "https://www.udemy.com/course/introduction-to-web-programming-for-gis-applications/",
      "bio": "Understanding web programming fundamentals focused on geospatial applications using Leaflet, Turf.js, and PostGIS",
      "objectives": [
        "Understand the basic technologies used in web programming and how they interact to form a web application. You will gain basic knowledge of HTML, CSS, JavaScript, jQuery, Bootstrap, PHP, AJAX, SQL, and the PostgreSQL database. More specifically you will gain enough understanding of these technologies to be able to use Leaflet, Turf.js, and PostGIS to create a web-mapping application that is freely available to all."
      ],
      "course_content": {},
      "requirements": [
        "This is an introductory level course. The focus is on understanding concepts and, although examples will be provided, installing software and following along is not expected.",
        "Some familiarity with programming and GIS will be beneficial but it is not assumed."
      ],
      "description": "\"Excellent overview of web programming with Geospatial data. I highly recommend this for any beginners. For those with more experience designing web applications, there are a number of points addressed that often are overlooked in typical tutorials. This was a great dive into using open source tools and provides a great example of the tools in action. \" - Student Review on Udemy\n\n\"Thank you for this course! It fills a knowledge gap that I wasn't even aware I had. As a GIS scientist without formal computer science training, a lot of what you are teaching here will come in handy.\" - Student message on Udemy\n\"You truly have inspired me to take a step away and focus on learning more webGIS. Thanks!!\" - Student comment on Twitter\n\"Michael is an incredibly knowledgeable instructor who assumes no prior knowledge. The course content builds up from some very basic coding practices to complex interaction between client and database via a server. Although it was not expected that the exercises were completed I did indeed follow along and now have a fully-functional webapp that I can modify to suit my needs. For an introduction, this course covers an incredibly wide range of concepts covering not only the display and processing of spatial data but also some internet security measures and even a little history thrown in which makes it much easier to understand the possibilities and limitations of Web GIS. I am thoroughly looking forward to starting Michael's Leaflet course.\" - Student Review on Udemy\n\n\"The course is exactly what I need -- not some copy the script and modify, but rather an understanding of what the process is. At this point, it sounds like a great overview and I am equally impressed with the background and teaching style of the instructor.\" - Student Review on Udemy\n\"Great course does exactly what it says on the tin! Easily digested bite sized lectures that are clear and concise and always put the learning into a geospatial perspective, just what I was looking for.\" - Student review on Udemy\nThis course is oriented towards achieving a conceptual understanding of how web technologies work together to form a web application that can be used to distribute, collect, or analyze geospatial data.\n\nThe focus will be on understanding concepts.  You will not have to install any software on your computer.  You will not be asked to follow along step-by-step. Instead the goal will be to provide the background information necessary to understand how the internet works, which technologies you really need to understand and when to use them.  We will also explore additional technologies that you may want to explore further as your understanding and needs grow.\n\nWe will be using readily available open source software so you will be able to create web maps without spending any money. The concepts you will learn, however, will be equally valid if you have access to commercial GIS software and web servers.\nMy intention is to provide the information that I wish I had available before I began my journey into the world of geospatial web development.  I spent a lot of time trying to put together the big picture from the detailed information that was available and I wasted a lot of time pursuing technologies that really were not necessary.  My hope is to help you navigate the world of web development more efficiently than I did and that after taking this course you will be better prepared to take more detailed courses from myself or others.",
      "target_audience": [
        "Two main groups of students will benefit from this course. First will be GIS users who are interested in understanding how to distribute and collect data using the internet. Second will be web developers interested in adding geospatial applications to their toolkit."
      ]
    },
    {
      "title": "Microfrontends with React: A Complete Developer's Guide",
      "url": "https://www.udemy.com/course/microfrontend-course/",
      "bio": "Build incredibly scalable apps with a microfrontend architecture",
      "objectives": [
        "Use microfrontends to architect an app that dozens of teams can work on at the same time",
        "Structure your apps to scale to millions of users",
        "Understand how to divide a monolithic app into multiple sub-apps",
        "Coordinate data exchanged between your microfrontends",
        "Apply a production-style workflow with a full CI/CD pipeline",
        "Deploy your microfrontends to Amazon Web Services with CloudFront",
        "Isolate rules styling by applying CSS-scoping techniques",
        "Judge whether microfrontends are an appropriate choice for your application"
      ],
      "course_content": {
        "The Basics of Microfrontends": [
          "Join Our Community!",
          "Course Resources",
          "What is a Microfrontend?",
          "Application Overview",
          "Understanding Build-Time Integration",
          "A Run-Time Integration",
          "Build-Time vs Run-Time Integrations",
          "Project Setup",
          "Starter Project Files",
          "Generating Products",
          "Some Background on Webpack",
          "A Touch More on Webpack",
          "Finishing the Product List",
          "Scaffolding the Container"
        ],
        "The Basics of Module Federation": [
          "Implementing Module Federation",
          "Understanding Module Federation",
          "More on Module Federation",
          "Module Federation Terminology",
          "Understanding Configuration Options",
          "Scaffolding the Cart",
          "Cart Integration",
          "The Development Process"
        ],
        "Sharing Dependencies Between Apps": [
          "Using Shared Modules",
          "Async Script Loading",
          "Shared Module Versioning",
          "Singleton Loading",
          "Sub-App Execution Context",
          "Refactoring Products",
          "Consuming Remote Modules",
          "Refactoring Cart",
          "[Optional] A Funny Gotcha"
        ],
        "Linking Multiple Apps Together": [
          "Application Overview",
          "Tech Stack",
          "Requirements That Drive Architecture Choices",
          "Dependency Files",
          "Dependency Installation",
          "Initial Webpack Config",
          "Creating and Merging Development Config",
          "Running Marketing in Isolation",
          "Wiring Up React",
          "Marketing Components",
          "Adding the Pricing and Landing Pages"
        ],
        "Generic Ties Between Projects": [
          "Assembling the App Component",
          "Assembling the Container",
          "Integration of the Container and Marketing",
          "Why Import the Mount Function?",
          "Generic Integration",
          "Reminder on Shared Modules",
          "Delegating Shared Module Selection"
        ],
        "Implementing a CI/CD Pipeline": [
          "Requirements Around Deployment",
          "The Path to Production",
          "Initial Git Setup",
          "Production Webpack Config for Container",
          "Production Webpack Config for Marketing",
          "Understanding CI:CD Pipelines",
          "Required Change in the Container Action - Do not Skip",
          "Creating the Container Action",
          "Testing the Pipeline"
        ],
        "Deployment to Amazon Web Services": [
          "S3 Bucket Setup",
          "Authoring a Bucket Policy",
          "Minor Changes in AWS CloudFront UI",
          "Cloudfront Distribution Setup",
          "A Bit More Cloudfront Configuration",
          "Key Creation Update + Reminder on AWS_DEFAULT_REGION",
          "Creating and Assigning Access Keys",
          "Rerunning the Build",
          "A Small Error",
          "Webpacks PublicPath Setting"
        ],
        "Microfrontend-Specific AWS Config": [
          "Manual Cache Invalidations",
          "AWS Region with Automatic Invalidation",
          "Automated Invalidation",
          "Successful Invalidation",
          "Setting Up the Marketing Deployment",
          "Reminder on the Production Domain",
          "Running the Deployment",
          "Verifying Deployment",
          "[Optional] A Production-Style Workflow",
          "AWS Setup and Configuration Cheetsheet"
        ],
        "Handling CSS in Microfrontends": [
          "Header Component",
          "Adding a Header",
          "Issues with CSS in Microfrontends",
          "CSS Scoping Techniques",
          "Understanding CSS in JS Libraries",
          "So Whats the Bug?",
          "Fixing Class Name Collisions",
          "Verifying the Fix"
        ],
        "Implementing Multi-Tier Navigation": [
          "Small Required Change to historyApiFallback",
          "Inflexible Requirements Around Navigation",
          "A Few Solutions",
          "Which History Implementation?",
          "Surveying Our Current History Setup",
          "Using Memory History",
          "Why the Strange Results?",
          "Communication Between Apps",
          "Communicating Through Callbacks",
          "Syncing History Objects",
          "Running Memory History in Isolation",
          "Container to Child Communication",
          "Using Browser History in Isolation"
        ]
      },
      "requirements": [
        "Basic understanding of React"
      ],
      "description": "Congratulations! You've found the most popular, most complete, and most up-to-date resource online for learning how to use microfrontends!\nThousands of other engineers have learned microfrontends, and you can too. This course uses a time-tested, battle-proven method to make sure you understand exactly how microfrontends work, and will get you a new job working as a software engineer or help you build that app you've always been dreaming about.\nThe difference between this course and all the others: you will understand the design patterns used by top companies to build massively popular web apps.\nMicrofrontends are used to divide a large app into a series of smaller apps. This provides a set of unique benefits to any frontend:\nAuthor smaller, easier to understand codebases\nUse a different set of libraries for each sub-app - bring the best tool for the job!\nDeploy each portion separately - limit the chance of interrupting your users\nAllow each of your engineering teams to work independently\nThis new architecture is popular, but there is a lot of misinformation online. This course has been developed with input from top engineers to ensure total technical accuracy. Additionally, you'll learn how to evaluate whether microservices are a good choice for your application.\n----------------------\nWhat will you build?\nThis course features hundreds of videos with dozens of custom diagrams to help you understand how microfrontends work. No prior experience is necessary. Through tireless, patient explanations and many interesting practical examples, you'll learn the fundamentals of building dynamic and live web apps using microfrontends.\nEach topic included in this course is added incrementally, to make sure that you have a solid foundation of knowledge. You'll find plenty of discussion added in to help you understand exactly when and where to use each aspect of microfrontends.\nBelow is a partial list of the topics you'll find in this course:\nLearn design patterns used by the largest companies in the world\nUnderstand when to use microfrontends\nLink multiple apps together using a tiered routing system\nScope CSS on your page to prevent cross-app contamination\nAvoid sharing state between apps to promote isolation\nDeploy each portion of your app independently to avoid production bugs\nScaffold a CI/CD pipeline to automate your release process\nUtilize multiple front-end frameworks in the same app\nMaximize performance by using module federation\nI built this course to save you hundreds of hours of self study. I've put years of my own experience into this course to save you time. Sign up today and join me in mastering microfrontends.",
      "target_audience": [
        "Engineers looking to scale frontend apps"
      ]
    },
    {
      "title": "The Complete jQuery Course: From Beginner To Advanced!",
      "url": "https://www.udemy.com/course/jquery-tutorial/",
      "bio": "Use jQuery to create stunning animations, provide fast feedback forms, handle all user events and perform Ajax calls.",
      "objectives": [
        "Add beautiful effects & animations to your sites",
        "Use AJAX to add content a the page dynamically from APIs like Flickr and TheMovieDB",
        "Create dynamic websites that users enjoy",
        "Handle arbitrary user events such as mouse clicks and keyboard presses",
        "Add fast feedback and validation for forms using jQuery",
        "Manipulate the appearance and content of any element on the page"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Complete jQuery Course! Learn What This Course Can Do For You!",
          "How To Use This Course To Gain Its Maximum Benefits & Learn jQuery Quickly",
          "A Quick Overview of JavaScript and jQuery",
          "Overview of JavaScript Frameworks",
          "Setting Up The Editor",
          "Code is Accessible on GitHub"
        ],
        "Effects – Animations": [
          "Setting Up The jQuery Project",
          "Fading In Elements (and Fading Them Out Again)",
          "A Pitfall With fadeIn/fadeOut vs. fadeTo",
          "Showing And Hiding Elements",
          "Sliding Elements Up And Down",
          "Moving Elements",
          "Get Creative: Custom Animations!",
          "Delaying and Chaining Animations",
          "Timing Animations Using Callback Functions",
          "Coding Activity: Creating a Signup Lightbox!"
        ],
        "Element Selectors": [
          "Using CSS Selectors in jQuery",
          "jQuery Methods for Traversal",
          "jQuery Methods for Filtering"
        ],
        "Manipulating the DOM I – Inserting, Replacing and Removing Elements": [
          "What is the DOM?",
          "Adding New Elements to the DOM",
          "Replacing Elements and Content",
          "Removing Elements and Content",
          "Manipulating Attributes and Properties",
          "Coding Activity: Creating an Image Slideshow!"
        ],
        "Manipulating the DOM II – Changing Element Data and CSS": [
          "Changing the CSS Properties of Elements",
          "Adding or Removing CSS Classes",
          "Changing the Data of an Element",
          "Retrieving and Changing the Content of an Element"
        ],
        "Events I ‒ Handling Mouse Events & Keyboard Events": [
          "What are Events and Event Handlers?",
          "Adding Click Handlers",
          "Adding Hover Handlers",
          "Adding MouseEnter & MouseLeave Handlers",
          "Adding the Same Handler for Multiple Events",
          "Modularizing Event Handlers (No More Inline Functions)",
          "Delegated Events",
          "Passing Additional Data to Events",
          "Coding Activity: Creating an Image Gallery with Lightbox Preview",
          "Handling KeyDown & KeyUp Events"
        ],
        "Events II ‒ Forms": [
          "The Focus & Blur Events",
          "Using the Change Event",
          "Handling the Submit Event",
          "Coding Activity: Complete Form Validation on Submit",
          "Coding Activity: Fast Feedback Form"
        ],
        "Ajax with jQuery": [
          "What is Ajax?",
          "Fetching a Server File with jQuery",
          "Retrieving Flickr Images Through the Flickr API (+Understanding JSON)",
          "Coding Activity: Retrieving Pokémon Data from The PokéAPI (Or Star Wars)",
          "Coding Activity: Improving the Pokédex"
        ],
        "Conclusion": [
          "Course Summary and Conclusion! What Have We Learned In This Course?",
          "Want More?! Watch Our Special Bonus Lecture & Continue Learning With Us Today!"
        ]
      },
      "requirements": [
        "You should have basic knowledge of JavaScript, HTML & CSS",
        "Basic knowledge of JavaScript or another programming language is beneficial",
        "You'll need an Internet connection at least once to download jQuery and to access APIs (e.g. Flickr)",
        "You'll need a text editor of your choice to write the code, we'll go through the installation process for one such editor. No other software is required",
        "You DO NOT need any experience with jQuery or another JavaScript framework at all"
      ],
      "description": "Have you always wanted to learn how to develop professional dynamic websites using JavaScript & jQuery but you just don't know where to start?\nOr maybe you have started but you just don't know how.\nThen the “Complete jQuery Course: From Beginner To Advanced” is for You!\n_________________________________________________________________________\nWelcome To the “Complete jQuery Course: From Beginner To Advanced.”\n⇉ Join 950,000+ Students Who Have Enrolled in our Udemy Courses!\n⇉ 10,000+ Five Star Reviews Show Students Who Enroll in our Courses get Results!\n⇉ You Get Over 51 Lectures and 6+ hours of premium content\n⇉ Watch the Promo Video to see how you can Get Started Today!\n_________________________________________________________________________\nWhat do you get with this course?\nHours of easy-to-watch video lessons\nResources on Github\nPractical activities\nInstructor support if you have any questions\nCommunity of students ready to help\nWhat will you learn in this “Complete jQuery Course: From Beginner To Advanced.”\nIn short, you'll learn it all! Seriously, our goal is to make the most comprehensive jQuery course out there - not filled with fluff, but filled with only the most actionable and latest tips and strategies. We'll be updating this course periodically to make sure we're covering any change with jQuery.\nYou'll start by an overview of the jQuery course and learn about JavaScript frameworks, then set up the editor.\nYou'll then start by learning effects and animations like fading in/out elements, showing and hiding elements, sliding elements up and down, moving elements, custom animations, delaying and chaining animations, and timing animations using callback functions.\nOnce you understand the effects and animations, you will learn about element selectors, manipulating the DOM like inserting, replacing and removing elements, changing element data and CSS. You will also learn events like handling mouse events & keyboard events, forms, and Ajax with jQuery.\n\nBy the end of our course you will be able to:\nAdd beautiful effects & animations to your sites\nUse AJAX to add content a the page dynamically from APIs like Flickr and TheMovieDB\nCreate dynamic websites that users enjoy\nHandle arbitrary user events such as mouse clicks and keyboard presses\nAdd fast feedback and validation for forms using jQuery\nManipulate the appearance and content of any element on the page\n\n\nReady to get started?\nOnce you enroll we recommend students to install their favorite editor on their computers, download jQuery and access APIs, to follow along.\n_____\nSee What Current Students Are Saying About Our Course:\n“Good demonstrations on how to use various jQuery methods. As a beginner, I really liked the mini-challenges spread throughout most of the lectures.”\n-Lamont Wilson\n“It was perfect for my level of expertise. The end result catapulted me ahead with a much better understanding of not only jquery, but with a few well-placed examples, also JavaScript and debugging.”\n-Larry Loreman\n“A very well laid out class, it truly is a beginner to advanced course. It does help to have at least an introductory level of knowledge to Javascript. My favorite part is that all the course code is available on Github, which allows you to download each sections code so you can troubleshoot against mistakes you may have made along the way.”\n-Lindsey Higginbotham\n_____\nWho are your instructors?\nWe are Joe Parys and Peter Sommerhoff, creatives who have taught over 950,000+ students around the world with our online courses, tutorials and other content. Peter Sommerhoff is the lead instructor for this course, bringing his wealth of knowledge in JavaScript and jQuery. Joe Parys is the Bestselling Online Instructor, Digital Marketing Expert and Leader in the eLearning industry. He is the CEO of the Joe Parys Academy serving more than 1,000,000+ students in more than 100+ co-authored courses from 190 countries all around the world.\nOur goal is to show you the real world and practical ways to start using jQuery with confidence today!\n_________________________________________________________________________\nWith the right mindset, understanding, and application, you will instantly begin learning how to use jQuery.\nWhen I learn something new I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But it can be done!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n_________________________________________________________________________\nIt's time to take action!\nOur happiness guarantee\nThis course includes a money back guarantee, so there is no risk to try it out. Sign up today, see if it's the right one for you.\nEnroll now.\nSincerely,\nJoe Parys and Peter Sommerhoff.",
      "target_audience": [
        "Anyone wanting to learn jQuery from scratch or wanting to speed up their JS development",
        "Anyone wanting to develop professional dynamic websites using JavaScript & jQuery",
        "Web developers and programmers wanting to improve their skills in web development"
      ]
    },
    {
      "title": "The Complete FastAPI Course With OAuth & JWT Authentication",
      "url": "https://www.udemy.com/course/fastapi-course-python/",
      "bio": "Learn how to built modern, authenticated REST API with FastAPI, Python, SQLAlchemy, OAuth & JWT",
      "objectives": [
        "Develop APIs quickly using FastAPI",
        "Learn to model data for providing API response",
        "Learn how to connect an API to a database",
        "Use SQLAlchemy to perform operations like create, read, update & delete data",
        "Make API requests to manipulate database data",
        "Send different status codes from an API",
        "Handle exceptions for invalid API requests",
        "Establish relationships between multiple data models",
        "Create metadata for API",
        "Use API router to modularise API routes",
        "Protect API routes using authentication mechanisms",
        "Generate JWT tokens to validate API requests"
      ],
      "course_content": {
        "Introduction & Installation": [
          "Introduction",
          "What is an API",
          "Introduction To FastAPI",
          "Installing FastAPI On Mac",
          "Installing FastAPI On Windows",
          "Creating A Simple API",
          "Quiz 1: FastAPI Basics"
        ],
        "Path & Query Parameters": [
          "Path Parameters",
          "Path Parameters With Type",
          "Automatic Documentation",
          "Ordering Of Routes",
          "Query Parameters",
          "Passing Default Values To Query Parameters",
          "Using Path & Query Parameters Simultaneously",
          "Required Query Parameters"
        ],
        "Request Body & Pydantic Models": [
          "Request Body",
          "POST Method",
          "Pydantic Models With Request Body",
          "Using Model Inside A Function",
          "Passing Path & Query Parameters To Request",
          "Passing Multiple Models",
          "Defining Fields For Metadata",
          "Nesting Python DataTypes In A Model",
          "Nesting Pydantic Models",
          "Deeply Nested Models",
          "Providing Example Data",
          "Defining Example Data Using Fields",
          "Time Data Types",
          "Forms To Submit API Data"
        ],
        "Connecting To Database": [
          "Introduction To Connecting To Database",
          "Creating A Project",
          "Creating A Connection",
          "Creating A Model",
          "Using Table Plus"
        ],
        "Performing CRUD Operations": [
          "Adding Data To Database",
          "Fetching Products",
          "Deleting Products",
          "Creating A Route To Update Products",
          "Response Model",
          "HTTP Status Codes",
          "Raising Exceptions"
        ],
        "Creating Multiple Models & Establishing Relationships": [
          "Creating Sellers",
          "Hashing Passwords",
          "Response Model For Seller",
          "Establishing Relationships Between Models",
          "Adding Metadata",
          "Using API Router",
          "Using Router For Sellers Routes",
          "Defining Tags & Prefix"
        ],
        "Authentication": [
          "Introduction To Authentication With JWT",
          "Creating Login Route",
          "Logging In The User",
          "Significance Of JWT Token",
          "Utility Function To Create JWT Token",
          "Generating JWT Token",
          "Get Current User",
          "Protecting Routes"
        ],
        "Conclusion": [
          "Course Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of Python is essential"
      ],
      "description": "The Complete FastAPI Course: Build API with Python & FastAPI\nHere Is What You Get By Enrolling In This Course:\nWord-By-Word Explanation: In the entire course, I explain each line of code, without skipping a single line of code.\nAwesome Quality Content: Over 5+ hours of HD(1080p) Videos.\nWell Structured & Easy To Learn: Course has been specially designed to make it easy for the students to learn how to build APIs using FastAPI & Python.\n24 X 7 Support: I  will always be there to guide you in your journey to become a FastAPI expert.\n\n\nHere Is A Brief Introduction About This Complete Course:\nFastAPI is one of the most modern, fast and efficient framework for building APIs.\nIf you want to learn how to built high performance APIs then FastAPI should be your go to framework.\nIn this course we will learn FastAPI right from scratch and by then end of the course you will be able to build a complete API which supports authentication, JWT tokens, relational models and protected API routes.\nThis course is designed in a way that even a complete beginner can get started building APIs without even knowing what an API is.\nWe start off with the basics such as understanding what an API is and what purpose it serves.\nWe will then learn the different approaches/ frameworks to build APIs with Python and how they compare with FastAPI.\nThe entire course is divided into 8 sections as follows:\nSection 1: Introduction & Installation.\nThis section covers what an API is and the purpose and API serves. We also jump into learning about the FastAPI framework and how it helps create high performance APIs in no time. We will also learn how to setup and install FastAPI framework in a virtual environment and will create our first and the most basic API.\nSection 2: Path & Query Parameters\nAPIs accept queries in form of URL requests. In this section we learn what are path and query parameters and how they can be used for form a request body to make API calls. We learn how to program APIs in a way such that they respond as per the data sent to it from path and query parameters. We also learn how to use both the parameters simultaneously in a single API route.\nSection 3: Models & Request Body.\nWhile working with APIs we need a way to model data, be it request or response data. With FastAPI, we can use Pydantic models which allow us to create data models that can be used to define the structure of data. We learn how to create Pydantic models and use them inside API routes\nSection 4: Connecting to the database.\nIn this section we learn how to establish a connection with the database. We will be using the SQLAlchemy library as on object relational mapper which maps tables into classes and table rows into objects, that way database data can be manipulated without having to write any SQL queries. We learn how to create SQLAlchemy models and later convert them into database tables at the backend. We use a tool called table plus to visualize database data.\nSection 5: Performing CRUD operations.\nOnce the database connection is established, we then learn how to perform operations like create, read, update and delete on the database data. We create separate routes for each of these operations and also learn how to raise exceptions with HTTP error codes whenever the API receives an invalid request.\nSection 6: Creating Multiple Models & Establishing Relationship.\nAfter performing the database operations on a single model, we then learn how to create multiple models and establish a connection between them using a foreign key. We also learn how to securely store hashed passwords in a database using a library called Bcrypt. Along with it we also learn how to add metadata to our API and modify contents on the documentation page.\nSection 7: Using API Router.\nWriting modular code is always preferable when it comes to any software and same is the case with APIs as well. Using API routes, we can split different routes into multiple files so that the code becomes modular and maintainable. We learn how to use routers and split the main API code into separate modules using an API router.\nSection 8: Authentication.\nThis section covers how to validate user credentials via an API route. Once the credentials are found to be valid, we then generate a JWT token for every logged in user. JWT tokens help us prevent access to API routes from unauthorized users. We learn how to create an assign JWT tokens to users so they can securely access API routes.\n\n\nSo let's begin the journey of becoming an expert API developer.\nIn addition to the Udemy 30-day money back guarantee, you  have my personal guarantee that you will love what you learn in this  course. If you ever have any questions please feel free to message me  directly and I will do my best to get back to you as soon as  possible!\n\n\nMake sure to enrol in the course before the price changes.\nTake yourself one step closer towards becoming a professional API developer by clicking the \"take this course button\" now!\nJoin the journey.\nSincerely,\nAshutosh Pawar",
      "target_audience": [
        "Python developers who want to learn an efficient, modern and faster way to create a APIs",
        "Developers who want to create performant APIs"
      ]
    },
    {
      "title": "GraphQL with React: The Complete Developers Guide",
      "url": "https://www.udemy.com/course/graphql-with-react-course/",
      "bio": "Learn and master GraphQL by building real web apps with React and Node",
      "objectives": [
        "Build amazing single page applications with React JS and GraphQL",
        "Master fundamental concepts behind structuring GraphQL servers",
        "Realize the power of building flexible data schemas",
        "Be the engineer who explains how GraphQL works to everyone else, because you know the fundamentals so well",
        "Become fluent in the ecosystem supporting GraphQL, including the differences between Apollo and Relay"
      ],
      "course_content": {
        "Why GraphQL?": [
          "Introduction",
          "Join Our Community!"
        ],
        "A REST-ful Routing Primer": [
          "Review of REST-ful Routing",
          "Shortcomings of RESTful Routing"
        ],
        "On To GraphQL": [
          "What is GraphQL?",
          "Working with GraphQL",
          "TypeError: expressGraphQL is not a function",
          "Registering GraphQL with Express",
          "GraphQL Schemas",
          "Writing a GraphQL Schema",
          "Root Queries",
          "Resolving with Data",
          "The GraphiQL Tool",
          "A Realistic Data Source",
          "Async Resolve Functions",
          "Nodemon Hookup",
          "Company Definitions"
        ],
        "Fetching Data with Queries": [
          "Nested Queries",
          "More on Nested Queries",
          "A Quick Breather",
          "Multiple RootQuery Entry Points",
          "Bidirectional Relations",
          "More on Bidirectional Relations",
          "Resolving Circular References",
          "Query Fragments",
          "Introduction to Mutations",
          "NonNull Fields and Mutations",
          "Do It Yourself - Delete Mutation!",
          "Do It Yourself - Edit Mutation!"
        ],
        "The GraphQL Ecosystem": [
          "GraphQL Clients - Apollo vs Relay",
          "Sidenote - Apollo Server vs GraphQL Server"
        ],
        "Clientside GraphQL": [
          "The Next App",
          "Starter Pack Walkthrough",
          "MongoDB Atlas Setup and Configuration",
          "MongoLab Setup",
          "Working Through the Schema",
          "Apollo Client Setup",
          "React Component Design",
          "GQL Queries in React",
          "Bonding Queries with Components"
        ],
        "Gotchas with Queries in React": [
          "Handling Pending Queries",
          "Fixing Key Warnings",
          "Architecture Review",
          "Adding React Router",
          "Creating a Song"
        ],
        "Frontend Mutations": [
          "Mutations in React",
          "Query Params",
          "Defining Query Variables in React",
          "Navigating on Successful Mutation",
          "Troubleshooting List Fetching",
          "Refetching Queries",
          "Deletion by Mutation",
          "Associating Mutations with a Component",
          "Invoking Delete Mutations"
        ],
        "Automatic Data Caching": [
          "Refetching a Query",
          "A Quick CSS Breather",
          "Showing a Particular Song",
          "Fetching Individual Records"
        ],
        "React Router + GraphQL": [
          "Integrating React Router with GraphQL",
          "Watching for Data",
          "Navigating Between Screens",
          "Lyric Creation Form",
          "The CreateLyric Mutation",
          "Submitting Mutations",
          "Showing a List of Lyrics",
          "Enhancing Queries",
          "Identifying Records",
          "Caching with DataIdFromObject",
          "Thumbs Up Icon"
        ]
      },
      "requirements": [
        "Familiarity with React"
      ],
      "description": "Note: This course assumes you are familiar with React!\nIf you're tired of spinning your wheels trying to figure out what type of backend server to use, this is the course for you.\nAuthentication? You will learn it.  Apollo Data? Included.  Integration with React? Of course!\nThis course will get you up and running with GraphQL quickly, and teach you the core knowledge you need to deeply understand and build React applications quickly.\nBoth OSX and Windows supported.\nWe'll start by mastering the fundamentals of GraphQL, including data types, schemas, and integration with Express and React. Source code is provided for each lecture, so you will always stay up-to-date with the course pacing.  Special attention has been paid to creating code that you'll be able to make use of on your own fantastic projects.\nIf you are new to GraphQL, or if you've been working to learn it but sometimes feel like you still don't quite 'get it', this is the GraphQL course for you! To learn GraphQL you have to understand it.\nLearn how to use GraphQL's schema to define relations between your data objects\nLearn the process of combining a backend server with a front end React\nMaster the process of thinking about your applications data in terms of a graph structure\nGrasp the difference between GraphQL, Apollo, and Relay, and when to use each\nDevelop apps that are unique, fun, and responsive.\nBuild servers that can be used with both React and React Native applications\nMaster handling authentication with GraphQL\nLearn the core principles of navigation with React Router and GraphQL\nI've built the course that I would have wanted to take when I was learning GraphQL. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Programmers looking to learn GraphQL"
      ]
    },
    {
      "title": "Object-oriented Programming in JavaScript",
      "url": "https://www.udemy.com/course/javascript-object-oriented-programming/",
      "bio": "Learn all about OOP, understand the most confusing parts of JavaScript and prepare for technical interviews",
      "objectives": [
        "Understand the most confusing parts of JavaScript",
        "Learn all about object-oriented programming",
        "Prepare for technical interviews",
        "Manage and reduce complexity in code",
        "Build re-usable components",
        "Write cleaner code",
        "Learn all about prototypes and prototypical inheritance",
        "Use ES6 features (classes and modules) and tooling"
      ],
      "course_content": {
        "Getting Started": [
          "What is OOP?",
          "Four Pillars of OOP",
          "Setting Up the Development Environment",
          "Course Structure",
          "Asking Questions"
        ],
        "Objects": [
          "1- Introduction",
          "2- Object Literals",
          "3- Factories",
          "4- Constructors",
          "5- Constructor Property",
          "6- Functions are Objects",
          "7- Value vs Reference Types",
          "8- Adding or Removing Properties",
          "9- Enumerating Properties",
          "10- Abstraction",
          "11- Private Properties and Methods",
          "Getters and Setters",
          "13- Cheat Sheet",
          "14- Exercise- Stop Watch",
          "15- Solution- Stopwatch"
        ],
        "Prototypes": [
          "1- Inheritance",
          "2- Prototypes and Prototypical Inheritance",
          "3- Multi-level Inheritance",
          "4- Property Descriptors",
          "5- Constructor Prototypes",
          "6- Prototype vs. Instance Members",
          "7- Iterating Instance and Prototype Members",
          "8- Avoid Extending the Built-in Objects",
          "9- Cheat Sheet",
          "10- Exercise",
          "11- Solution"
        ],
        "Prototypical Inheritance": [
          "1- Creating Your Own Prototypical Inheritance",
          "2- Resetting the Constructor",
          "3- Calling the Super Constructor",
          "4- Intermediate Function Inheritance",
          "5- Method Overriding",
          "6- Polymorphism",
          "7- When to Use Inheritance",
          "8- Mixins",
          "9- Cheat Sheet",
          "10- Exercise Prototypical Inheritence",
          "11- Solution Prototypical Inheritance",
          "12- Exercise- Polymorphism",
          "13- Solution- Polymorphism"
        ],
        "ES6 Classes": [
          "1- ES6 Classes",
          "2- Hoisting",
          "3- Static Methods",
          "4- The This Keyword",
          "5- Private Members Using Symbols",
          "Private Members Using WeakMaps",
          "7- Getters and Setters",
          "Inheritance",
          "9- Method Riding",
          "10- Cheat Sheet",
          "11- Exercise",
          "12- Solution"
        ],
        "ES6 Modules": [
          "1- Modules",
          "2- CommonJS Modules",
          "3- ES6 Modules",
          "4- ES6 Tooling",
          "5- Babel",
          "6- Webpack",
          "7- Cheat Sheet",
          "Bonus"
        ]
      },
      "requirements": [
        "At least 3 months experience with JavaScript"
      ],
      "description": "What is Object-oriented Programming (OOP)?\nObject-oriented programming (OOP) is a popular programming paradigm or style of programming. It’s been around since ‘70s, but unlike tools and frameworks that come and go, OOP is still very relevant today. That’s because it’s not a programming language or a tool. It’s a style of programming.\n\n\nWhy learn OOP?\nOOP helps you manage and reduce complexity in software by building re-usable building blocks (objects). Properly designed objects provide a simple interface and hide the unnecessary complexity from the outside, just like a DVD player! A DVD player has a complex logic board on the inside and a few buttons on the outside. When you press the play button, you don’t care how all those microchips talk to each other.\n\n\nObject-oriented programming helps you:\nManage and reduce complexity\nEliminate redundant code\nBuild re-usable building blocks\nWrite cleaner code\n\n\nAn essential skills for every developer\nOOP comes up in many technical interviews. So if you really want to be a serious developer, you need to understand object-oriented programming. As a technical interviewer myself, if I see a candidate with OOP on their resume, that candidate stands out to me.\nIt may interest you to know that many of the popular frameworks out there that you might be using are actually designed with OOP concepts in mind. Angular is an example of such frameworks!\n\n\nA Step-by-Step, A to Z course\nWhat you'll get when you sign up for this course:\nLearn all about object-oriented programming in JavaScript\nNo more wasting time on disjointed tutorials\nLearn at your own pace - lifetime access - so take your time if you prefer\nWatch on any device, online or offline\nSolidify your understanding of JavaScript\nPrepare for technical interviews\nConfidently build applications with Node, Angular, React, Vue and other JavaScript libraries\nLearn the best practices and common pitfalls to avoid\nCertificate of completion to present to your employer\n\n\nYou'll learn\nThe core principles of OOP: encapsulation, abstraction, inheritance and polymorphism\nHow to implement OOP concepts in JavaScript\nAll about objects, their properties, property descriptors, getters and setters\nDifference between factory and constructor functions\nHow \"this\" works in JavaScript\nPrototypes and prototypical inheritance: one of the confusing parts of JavaScript\nES6+ features used in object-oriented programming\n\n\nThis course is for you if:\nYou’re a developer who already knows OOP principles but want to learn how to implement them in JavaScript.\nYou’re a developers who is not familiar with OOP, perhaps you just know the basics of JavaScript and want to solidify your understanding of JS and prepare for technical interviews.\nHaving OOP and JS on your resume helps you find more jobs and make more money.\nAre you ready to take your JavaScript skills to the next level? Enroll in the course and get started.",
      "target_audience": [
        "Any JavaScript developers who wants to solidify their understanding of JavaScript",
        "Anyone preparing for technical interviews",
        "Developers familiar with OOP who want to learn how to implement it in JavaScript"
      ]
    },
    {
      "title": "React Crash Course: From Zero to Hero",
      "url": "https://www.udemy.com/course/react-crash-course-from-zero-to-hero/",
      "bio": "React JS for Beginners: Build 3 React Projects, Learn React Components, JSX, State, React Hooks, Forms, API calls",
      "objectives": [
        "The core knowledge of React (JSX, Virtual Dom, Components, Props, Events, State, Effects, Hooks etc)",
        "Setting up a development environment with essential tools (Browser, Code Editor, Node. js, npm)",
        "Creation a React application, project file structure, organizing components using best practices.",
        "Styling React components, pros and cons of popular approaches (Inline Styles, CSS Files, CSS Modules, etc)",
        "Form submission and validation (using React-Hook-Form and Yup libraries), handling form error messages.",
        "Making API calls (using fetch and Axios library), HTTP methods (GET, POST, PUT, DELETE), errors handling.",
        "Connecting ChatGPT, Gemini, DeepSeek, Claude, and Grok APIs to build an interactive AI chatbot for real-time conversations.",
        "Set up GitHub Copilot and Cursor AI, explore powerful features like Code Completions, Chat Context, Agent Mode, and more.",
        "Effective team collaboration, task estimation, productivity, problem solving, code review, developers salaries.",
        "And much more to enhance your skills as a React.js developer."
      ],
      "course_content": {
        "Introduction to the Course": [
          "Welcome to the Course",
          "Course Requirements",
          "How to Study on Udemy",
          "How to Use Code Examples from Github",
          "GitHub Source Code Examples"
        ],
        "REACT BASIC: Getting Started": [
          "Introduction",
          "What is React",
          "Master React Fundamentals with Maya (your AI Mentor)",
          "Environment Setup",
          "Creating React Application",
          "Application Structure",
          "Cleaning Up Application",
          "Developer Tools",
          "Getting Started"
        ],
        "REACT BASIC: Creating Component": [
          "Introduction: Creating React Components",
          "Your First React Component",
          "Importing and Exporting Components",
          "Writing Markup with JSX",
          "Using Variables in JSX",
          "Creating React Components",
          "Importing and Exporting Your First Component",
          "Writing Markup and using Variables in JSX"
        ],
        "REACT BASIC: Adding Interactivity": [
          "Introduction: Adding Interactivity",
          "Passing Props to a Component",
          "Component Props Manipulations",
          "Responding to Events",
          "Rendering List",
          "Fragment Component",
          "Conditional Rendering",
          "Adding Interactivity",
          "Passing Props and their Manipulation in the Component",
          "Rendering List and Using Fragment Components",
          "Responding to Events and Conditional Rendering"
        ],
        "REACT BASIC: Styling in React": [
          "Introduction: Styling in React",
          "Using Inline Styles",
          "Using CSS Files",
          "Using CSS Modules",
          "Using Global CSS Styles",
          "Alternative Styling Options",
          "Styling in React",
          "Using Inline Styles",
          "Using CSS Files"
        ],
        "REACT BASIC: Managing State": [
          "Introduction: Managing State",
          "Component life-cycle and state",
          "Component state vs local variables",
          "Using useState hook",
          "Batch updating of useState",
          "Managing State",
          "Using useState hook",
          "Batch updating of useState"
        ],
        "REACT BASIC: Managing Complex State": [
          "Introduction: Managing Complex State",
          "Updating Objects in State",
          "Adding/Deleting items in Array State",
          "Updating items in Array State",
          "Managing Complex State",
          "Updating Objects in State",
          "Adding/Deleting items in Array State",
          "Updating items in Array State"
        ],
        "REACT FORMS: Working with Form Controls": [
          "Setting Up New Application via Vite",
          "Create Application Layout for To-Do List",
          "Creating a Form to Add New To-Do’s",
          "Structuring and Styling Form Fields",
          "Handling Form Submission with onSubmit",
          "Storing Form Data in the State"
        ],
        "REACT FORMS: Displaying To-Do List": [
          "Expanding/Collapsing Additional Form Fields",
          "Creating and Displaying To-Do List",
          "Structuring and Styling To-Do List",
          "Move Static Data about Priorities into Variables",
          "Updating To-Do Status with Controlled Components"
        ],
        "REACT FORMS: Advancing To-Do List Functionality": [
          "Preparing Components for Editing functionality",
          "Displaying an Edit Form for To-Do’s",
          "Allowing User to Edit Items in a List",
          "Adding Delete Functionality to Remove Items",
          "Display Filtering Options for To-Do List",
          "Move Static Data about Filters into Variables",
          "Allowing User to Filter Items in List"
        ]
      },
      "requirements": [
        "NO React knowledge or experience required",
        "Basic knowledge of JavaScript (we provide reading materials for those who are not familiar with JavaScript)",
        "Basic knowledge of HTML/CSS"
      ],
      "description": "React is a Top JavaScript library for building interactive web applications, because of its fast performance, scalability and ease of use.\nI will teach you React from the very beginning by building a real web project on practice.\nThis is a crash practical course made with Love. It won't take too much of your time.\nTo make learning easier for you, I will explain React concept in the simplest way possible.\n\n\nCourse updates\nSeptember 2025. Added “NEXTJS BASIC” module: Learn Next.js Basics and Build server-side Contacts App.\nAugust 2025. Added “WINDSURF” module. Learn Windsurf for Development & Vibe Coding. Complete Guide.\nJuly 2025. Added “CURSOR” module. Learn Cursor AI for Development & Vibe Coding. Complete Guide.\nJune 2025. Added “GITHUB COPILOT” module. Learn Github Copilot for Development & Vibe Coding. Complete Guide.\nMarch 2025. Added “AI CHATBOT” module. Build a real-time AI Chatbot with React.js, ChatGPT, Gemini AI & DeepSeek.\nFebruary 2025. Added “REACT FORMS & API” modules. Build a functional To-Do List using Forms, Data Validation & API Integration.\nDecember 2024. Added “SOFT SKILLS” module. Learn about effective team collaboration, task estimation, productivity, problem solving, code review, developers salaries.\n\n\nWhat's in this course?\nREACT BASIC Module\nLearn the Core Skills of React. Work through Practical Examples.\nUnderstand React key concepts: JSX, DOM, Virtual DOM, Component-Based Architecture.\nSet up development environment (Browser, VS Code Editor, Node.js, npm).\nDebug React applications using Developer Tools.\nCreate Components and write JSX markup. Import & Export Components.\nShare Data between Components via Props and Events. Conditional rendering.\nStyling components via Inline Styles, CSS Files and CSS Modules. Alternative Approaches.\nUnderstand Component Life-Cycle. Props vs State vs Variables.\nREACT FORMS & API Modules\nBuild a functional To-Do List using Forms, Data Validation & API Integration.\nSet up React application via Vite.\nHandle Form Submission, store Form Data in the Component State.\nRender Lists in React. Controlled and Uncontrolled Components.\nImplement Filtering, Editing and Deleting List Items. Handle Input Fields Changes.\nForm Data Validation, Errors Handling via react-hook-form and yup libraries.\nAPI interaction via fetch and axios library. HTTP methods (GET, POST, PUT, DELETE).\nOrganizing of API calls. Handle API error mesages. Add Loading Spinner.\nCreate and using of React Custom Hooks. Using useEffect hook.\nAI CHATBOT Module\nBuild a real-time AI Chatbot with React.js, ChatGPT, Gemini AI & DeepSeek.\nGenerative AI and Pricing Models for popular AI API’s.\nCreate and style Chatbot Layout. Handle Chat Interactions via Component State.\nOverview of Popular AI Models. Getting API keys for AI API’s.\nConnect ChatGPT, Gemini and DeepSeek AI Models the for Chatting.\nImplement Streaming Messages. Handle and Debug API’s Errors.\nAdd support of Dark Mode, Markdown, Messages Auto-Scrolling and Auto-Resizable Inputs.\nBuild a Responsive Sidebar to Display All Chats with ability to Switch Between Them and Start New Chat Conversations.\nNEXTJS BASIC Module\nBuild server-side Contacts App with Next.js.\nLearn what Next.js is, why it’s popular, and how to set up your first project.\nExplore project structure, clean up starter code, and style your application.\nBuild Pages, Layouts, add Navigation, including Nested Pages and Layouts.\nWork with Dynamic Routes and Search Params to create flexible web apps.\nUnderstand how Server and Client Components work together in Full-Stack apps.\nFetch data in Server Components with Loading states and in Client Components with Suspense.\nGITHUB COPILOT Module\nLearn Github Copilot for Development & Vibe Coding. Complete Guide.\nUnderstand GitHub Copilot Payment Plans, Usage Limits and explore Data Privacy\nLearn common Developer Use Cases for Copilot with practical Prompt Examples\nSet up GitHub Copilot in VS Code and connect it to your GitHub account\nExplore key Copilot Features: Code Completions, Chat Interface, Smart Actions, Chat Modes (Ask, Edit, Agent), and Chat Context\nUse Copilot for tasks like UI Improvements, generating Unit Tests, and Code Refactoring etc.\nCURSOR Module\nLearn Cursor AI for Development & Vibe Coding. Complete Guide.\nUnderstand Cursor AI Payment Plans, Usage Limits and explore Data Privacy\nLearn common Developer Use Cases for Cursor with practical Prompt Examples\nSet up Cursor AI and connect it to your Cursor account\nExplore key Cursor Features: Tab Completions, Chat Interface, Chat Modes (Ask, Manual, Agent), and Chat Context\nUse Cursor for tasks like UI Improvements, generating Unit Tests, and Code Refactoring etc.\nWINDSURF Module\nLearn how to use Windsurf effectively on Practice\nUnderstand Windsurf Payment Plans, Usage Limits and explore Data Privacy\nLearn common Developer Use Cases for Windsurf with practical Prompt Examples\nSet up Windsurf and connect it to your personal account\nExplore key Windsurf Features: Tab & Supercomplete, Codelenses, Command, Cascade, Chat Modes (Chat, Write, Plan) and Context\nUse Windsurf for tasks like UI Improvements, generating Unit Tests, and Code Refactoring etc.\nSOFT SKILLS Module\nLearn about effective team collaboration, task estimation, productivity, problem solving, code review, developers salaries and much more. Improve your development of Soft-Skills.\n\n\nThis Course includes\nTheory and Practice: Lectures with many practical examples (3-10 min lessons duration).\nQuizzes: Test your knowledge with quizzes after key sections (ensure you remember key concepts).\nCoding Exercises: Practice your skills with coding exercises (reinforce core concepts and boost your confidence).\nSource Code Examples: Full access to source code for all projects and exercises (practice on your own).\nUdemy Certificate: which you will receive after completing the course.\nSupport: If you have any questions, we will always be willing to answer them.\n\n\nMeet your instructor!\nDmytro Vasyliev - Senior Front-end Engineer with more than 10 years of professional experience in developing complex Web Applications. I have extensive experience with React and other frameworks, having used it in various projects to build dynamic and efficient user interfaces.\n\n\nDo you need to be concerned?\nThis course comes with a 30-day money-back guarantee.\nJoin our course today to learn how to build your first application in React!",
      "target_audience": [
        "Students who are new to React and want to learn it from scratch",
        "JavaScript developers who have basic knowledge and want to dive deeper into React",
        "Developers familiar with other frameworks (like Angular or Vue) who are looking to switch to React",
        "Non-technical professionals who want to make the transition to programming and get started with React"
      ]
    },
    {
      "title": "Angular 2+ with Typescript - Essential Training",
      "url": "https://www.udemy.com/course/angular-2-training/",
      "bio": "Learn Angular 2 (or 4) from the ground up | This course combines a Project, Slides and Quizzes | Perfect for beginners",
      "objectives": [
        "Understand the Fundamental Concepts of Angular 2",
        "Develop Angular 2+ Applications using Best Practices",
        "Learn and Use TypeScript",
        "Understand Modules, Components, Routing and Services",
        "Understand HTTP and Observables",
        "Know how to pass Data between components using Input and Output"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course"
        ],
        "Getting Started": [
          "Intro to Getting Started",
          "What is AngularJS?",
          "Why Angular 2?",
          "Language Options",
          "Benefits of Typescript",
          "Section 2 Quiz"
        ],
        "Angular 2 Setup": [
          "Intro to Setup",
          "Developer Environment",
          "Starter Files Setup",
          "Understanding Modules",
          "Section 3 Quiz"
        ],
        "NgModules": [
          "NgModules Introduction",
          "NgModules Explained",
          "Bootstrapping Our App",
          "Section 4 Quiz"
        ],
        "Components": [
          "Components Intro",
          "Why Components?",
          "App Component Explored",
          "Composing Components",
          "Components as Directives",
          "Hiding Our Javascript Files",
          "Updating our App"
        ],
        "Data Binding": [
          "Data Binding Intro",
          "One-Way Data Binding",
          "One-Way Binding in Our App",
          "2-Way Data Binding",
          "2-Way Binding in Our App",
          "Event Binding",
          "Event Binding in Our App"
        ],
        "Directives": [
          "Directives Intro",
          "Attributes Directive",
          "NgIf",
          "NgFor",
          "NgClass"
        ],
        "Pipes": [
          "Pipes Intro",
          "Built-in Pipes",
          "Custom Pipes"
        ],
        "Interface": [
          "Interface Intro",
          "Interface Explained",
          "Using Interfaces",
          "Interface Example in Our App"
        ],
        "Lifecycle Hooks": [
          "Lifecycle Hooks Intro",
          "Lifecycle Hooks Explained",
          "Lifecycle Hooks Example"
        ]
      },
      "requirements": [
        "Basics of Javascript"
      ],
      "description": "*** Updated for latest version of Angular 2. Project works with Angular 4. ***\nLearn all the essentials of building Angular 2+ applications right here.\n\nThis is a beginner level course aimed at those new to Angular 2 and Typescript.  No previous knowledge of either is required before starting this course.\nThis course combines slides, projects and quizzes in a clear, concise and engaging way to guide you through the core concepts of Angular 2 and Typescript.\n...\n⭐⭐⭐⭐⭐\nThis is the best explain course on Angular 2 I've seen so far, keep up the good work!\n\n-- Adrian T.\n⭐⭐⭐⭐⭐\n\nExcellent course, in a very short time span I come to know all the important information about Angular 2, this course really cover all the aspects of Angular 2 for beginners as well as for experience. Thank you very much for making such amazing course.\n\n-- Subhobroto Roy\n⭐⭐⭐⭐⭐\n\nGreat course! Perfect for beginners. It is exactly what I was looking for - building a real life project from scratch with a lot of explanations and examples. I highly recommend it for beginners!\n\n-- Ivan Atanasov\n...\nEach section will contain an introduction to a new concept. Followed by a slide-based presentation to get you familiar with the concept, and then an example inside of our application to cement your understanding.\n\nYou will gain a solid foundation for building real-world applications following best practices and the Angular 2 style guide. This includes how to build components, create shared services, navigate between views, manage data using observables, and bind data using expressions inside your HTML templates.\nBy the end of this course, you will have a clear understanding of how to to build Angular applications with many real-world features. As a result, you will feel empowered to go out into the wild and start creating your own Angular 2 applications!\nWhat you'll learn:\nTypescript\nComponents\nPipes\nData Binding\nNgModules\nRouting\nInput/Output\nHTTP\nObservables\nInterfaces\nDirectives\nLifecycle Hooks\n...\nCourse updated regularly with new content to stay relevant & up-to-date!\n...\n⭐⭐⭐⭐⭐\n\nThis course is accessible and gives information that are factual and easy to to understand (even to a newbie like me). The content of the technical part is easy to understand and straightforward making the course a great way to learn : first a part that explains the nature of the \"code\", then an example of application of the \"code\" (\"code\" is for all the different types : modals, interfaces, and so on). I highly recommend this course.\n\n-- Geslin JB",
      "target_audience": [
        "Beginners to Angular 2"
      ]
    },
    {
      "title": "The Complete SQL Course: Become a MYSQL Master",
      "url": "https://www.udemy.com/course/the-complete-sql-course-2020-become-a-mysql-master/",
      "bio": "This complete SQL bootcamp will take you from beginner to master",
      "objectives": [
        "Learn how to create and deal with databases",
        "Learn CRUD operations and how to use them to make use out of your database",
        "Grasp the concept of SQL clauses, functions, data types",
        "How to write simple to complex SQL queries",
        "Understand the basics of databases and SQL",
        "Install and set up a real SQL database environment (MySQL)",
        "Use filtering with WHERE, LIKE, IN, and BETWEEN clauses",
        "Master SQL JOINs (INNER, LEFT, RIGHT, FULL) to combine data from multiple tables",
        "Apply aggregate functions like COUNT, SUM, AVG, MAX, and MIN",
        "Work with GROUP BY and HAVING for grouped data analysis",
        "Create and modify tables with CREATE, ALTER, and DROP statements",
        "Design efficient database structures and improve query performance"
      ],
      "course_content": {},
      "requirements": [
        "Just a computer"
      ],
      "description": "Welcome to The Complete SQL Course – the ultimate, beginner-friendly guide to mastering SQL and database querying from the ground up. Whether you're aspiring to become a backend developer, data analyst, database administrator, or just want to enhance your technical skill set, this course is designed to equip you with the practical knowledge and hands-on experience needed to work confidently with SQL.\nSQL (Structured Query Language) is one of the most essential and in-demand tools in the world of technology. From storing and retrieving data to manipulating and managing complex databases, SQL is used by companies of all sizes across all industries. In this course, you’ll learn how to write SQL queries, understand relational database structures, and perform powerful data operations using real-world examples and exercises.\nWe start with the very basics—understanding what databases are, how SQL works, and how to write your first query. Step by step, you’ll move on to more advanced topics like JOINs, aggregate functions, subqueries, data normalization, and working with multiple tables. You’ll also get hands-on practice with a real SQL environment (such as MySQL or SQLite), so you’re not just learning theory—you’re building real experience.\nBy the end of the course, you’ll have a solid understanding of SQL syntax and functionality, the ability to write clean and efficient queries, and the confidence to apply these skills in professional scenarios.",
      "target_audience": [
        "Anyone interested in learning SQL, MYSQL for software engineering, data analysis or big data"
      ]
    },
    {
      "title": "CSS And Javascript Crash Course",
      "url": "https://www.udemy.com/course/css-and-javascript-crash-course/",
      "bio": "Learn CSS And JavaScript Programming Language With Practical Interaction",
      "objectives": [
        "Introduction to CSS concepts",
        "Practically Getting Started With CSS Styles, CSS Fonts",
        "Practical demonstrations of CSS concepts",
        "Practically Getting Started With Javascript Variables,Values and Data Types, Operators and Operands",
        "Write Javascript scripts and Gain knowledge in regard to general javascript programming concepts",
        "Introduction And Use Of Conditional Statements In Javascript"
      ],
      "course_content": {
        "CSS Introduction": [
          "CSS Introduction",
          "CSS Inclusion In HTML",
          "CSS Basic Syntax",
          "CSS Fonts"
        ],
        "JavaScript Introduction": [
          "JavaScript Introduction",
          "JavaScript Array",
          "JavaScript Variables",
          "JavaScript Animation"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge",
        "Basic HTML Knowledge"
      ],
      "description": "CSS And Javascript Crash Course\n1)  Learn CSS Crash Course\nThis course shows you how to create CSS classes from a beginner's level. It starts off with basic HTML declarations, properties, values, and how to include a CSS style sheet with your HTML code. For those of you who are new to CSS and HTML, we show you step-by-step how to create a CSS file and include it in your HTML code, even if you use a cloud server for your hosting.\nWe show you how to position your elements, layout your elements relative to your documents, and style your HTML using predefined CSS values. We introduce you to the common CSS styling that you'll need when you start off designing your pages. If you want to get to know CSS and website design, this course is meant for you, and it can be used by anyone who hasn't even seen one line of CSS code yet. We focus on the latest CSS 3 and HTML 5 standards, so you get the latest when coding your website pages instead of focusing on older code.\nThere are no prerequisites. Anyone Can join this course. It is recommended though that individual have some basic computer programming knowledge.\n\n\nCourse Topics\n\nIntroduction to CSS\nCSS Syntax\nHTML 5 IN CSS\nCSS Styling Text\n\n\nLearn Javascript Programming\nThe curriculum is going to be very hands-on as we walk you from start to finish to become a professional Javascript developer. We will start from the very beginning by teaching you Javascript basics and programming fundamentals, and then execute into real-life practice and be ready for the real world.\n\n\nWhile Javascript is complicated for beginners to learn, it is widely used in many web development areas.\nThis course gets you started with an introduction to JavaScript. It assumes that you're new to the language, so it gets you started with basic functionality such as creating functions, creating variables, and calling these lines of code from your standard HTML pages. It talks about events and triggers for custom event handling. It talks about pattern matching, searching for text within a page, flow control, and the document object model (DOM). We start off with the basics and move on to more complex functionality such as arrays and objects. We then discuss how to script common elements with JavaScript such as forms and tables. At the very end, we discuss major libraries such as Ajax, which allows you to make asynchronous calls to server-side scripts without reloading the web page in the server.\nMaster the fundamentals of writing Javascript scripts\nLearn core Javascript scripting elements such as variables and Objects\nDiscover how to work with lists and sequence data\nWrite Javascript functions to facilitate code reuse\nUse Javascript to read and write files\nMake their code robust by handling errors and exceptions properly\nSearch text using regular expressions\nThe topics covered in this course are practicals of:\n* Javascript Course Contents:\n\n\nJavascript Array\nJavascript Variables\nJavascript Functions\nJavascript Objects",
      "target_audience": [
        "For CSS And Beginners",
        "For People Who want to learn CSS Fundamentals and later Transition into Web Designing",
        "For People New to CSS And Javascript"
      ]
    },
    {
      "title": "React JS Masterclass: Zero To Job Ready With 10 Projects",
      "url": "https://www.udemy.com/course/complete-reactjs-masterclass/",
      "bio": "Become React Developer: React Core, Hooks, APIs,Routing, Context, Reducers, Redux, Firebase, Tailwind, Deployment & More",
      "objectives": [
        "Everything you need to become a React developer with basics to advanced concepts, how things works behind the scenes and real projects",
        "Understand fundamentals: Components & Props, State, Hooks, Context & Reducers and more...",
        "Dive Deep with Custom Hooks, Tailwind CSS, React Router, Redux, Firebase, React Skeleton & more...",
        "Build real-world applications with React (E-Commerce, Movie Informer, Todolist Manager, Blog, Word Counter & more)",
        "Build mock ecommerce backend with JSON Auth Server and deploy it on Railway",
        "Work with multiple API's to make the most of third-party data (such as Movie information & Jokes)",
        "Deploy your projects on Netlify using Git & Github",
        "Test your application with Jest and React Testing Library",
        "Learn with the latest versions: React 18 and JavaScript ES13",
        "Be in the top 10% Fresh React JS Developer",
        "And lot more!"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of HTML, CSS & JavaScript"
      ],
      "description": "Welcome to React JS Masterclass, one single course to start your React journey as a beginner step-by-step. This course touches on each and every important topic through concept explanation, documentation, and implementation. The entire course is designed for beginners with one goal in mind, to learn concepts and build React projects.\nThroughout the course, we will explore the most important React topics step-by-step:\nJSX and components\nState and props\nEvent handling\nBuilt-in hooks (e.g. useState, useEffect, useCallback, useRef)\nWorking with forms, validations, and handling form data.\nClient-side routing with React Router\nWork with multiple API and handle data for projects\nIntegrating with other libraries and frameworks (e.g. Redux)\nTesting and debugging React applications using popular libraries like Jest, RTL and React DevTools.\nDOM manipulation and manipulating the Virtual DOM\nServer-side rendering\nOptimizing the performance of React application\nBest practices for structuring and organizing React projects\nBuilding and deploying production-ready React applications, including code splitting and optimization techniques.\nOther Concepts:\nBuilding and using advanced Custom Hooks\nStyling with Tailwind CSS\nIntegrating Context & Reducers\nBuilding mock backend with JSON Server & JSON Server Auth\nIntegrating Firebase storage as well as authentication\nProject deployment on Netlify using Git & Github\nIntegrating external libraries: Toastify & React Skeleton\n\n\nWhy this course?\nComplete course is focused on the concept learning approach, you learn every concept through a logical and visual learning approach.\nLearn all important concepts in the simplest possible way with examples and real-life projects.\nYou need HTML, CSS and JavaScript knowledge, we will cover everything about React step-by-step from scratch.\nThe course is designed for developers who have some experience with JavaScript and web development and want to learn how to build dynamic, responsive user interfaces using React.\n------------------\nAfter completing this course you will be ready to work as an Intern, Fresher, or Freelancer and you will also be able to implement everything yourself! Most importantly you will have the potential to build, test and deploy your own projects.\nEnroll now, I will make sure you learn best about React.",
      "target_audience": [
        "Anyone who wants to learn React from basics to advanced"
      ]
    },
    {
      "title": "Web Developer Bootcamp with Flask and Python in 2024",
      "url": "https://www.udemy.com/course/web-developer-bootcamp-flask-python/",
      "bio": "Become a Full Stack Web Developer using Flask, Python, HTML, CSS, and MongoDB! Fully updated for 2023 and beyond.",
      "objectives": [
        "Build complete, dynamic websites for your freelance projects or business",
        "Design, develop, and deploy full-stack web apps using Flask, Python, HTML, and CSS",
        "Create your own portfolio website to showcase all your projects",
        "Become a true HTML and CSS professional without the need for complicated JavaScript, or stop-gap solutions like Bootstrap and jQuery",
        "Publish your websites online with Heroku for free",
        "Connect your Python applications to a MongoDB database on the cloud",
        "Allow your users to sign up and log in to your applications",
        "Change the content of your web app's pages dynamically depending on the user that is logged in"
      ],
      "course_content": {
        "Welcome to this Course!": [
          "Welcome to the course!",
          "Curriculum overview",
          "Access the code and e-book here!",
          "How to install Python on your computer",
          "How to install your IDE"
        ],
        "A Full Python Refresher": [
          "Introduction to this section",
          "Access the code for this section here",
          "Variables in Python",
          "Creating variables (Python 3.10)",
          "String formatting in Python",
          "Getting user input",
          "Asking users for input (Python 3.10)",
          "Writing our first Python app",
          "Lists, tuples and sets",
          "Advanced set operations",
          "Booleans in Python",
          "If statements",
          "The \"in\" keyword in Python",
          "If statements with the \"in\" keyword",
          "If statements (Python 3.10)",
          "Loops in Python",
          "List comprehensions in Python",
          "Dictionaries",
          "Destructuring variables",
          "Functions in Python",
          "Function arguments and parameters",
          "Creating functions (Python 3.10)",
          "Default parameter values",
          "Functions returning values",
          "Lambda functions in Python",
          "Dictionary comprehensions",
          "Unpacking arguments",
          "Unpacking keyword arguments",
          "Object-Oriented Programming in Python",
          "Magic methods: __str__ and __repr__",
          "@classmethod and @staticmethod",
          "Class inheritance",
          "Class composition",
          "Type hinting in Python 3.5+",
          "Imports in Python",
          "Relative imports in Python",
          "Errors in Python",
          "Custom error classes",
          "First-class functions",
          "Simple decorators in Python",
          "The 'at' syntax for decorators",
          "Decorating functions with parameters",
          "Decorators with parameters",
          "Mutability in Python",
          "Mutable default parameters (and why they're a bad idea)"
        ],
        "Website Basics": [
          "How do websites and the internet work?",
          "Front end vs. Back end development",
          "Key web technologies: HTML, CSS, and JavaScript",
          "The Browser Inspector: using the developer tools"
        ],
        "Page structure with HTML": [
          "Elements: the basic components of HTML",
          "Write your first HTML element",
          "Reminder: where to find code and notes",
          "A full example: HTML and CSS",
          "Some of the most common HTML elements",
          "Common HTML Elements",
          "What are HTML content categories?",
          "HTML content categories",
          "Nesting elements in HTML",
          "Starting our first HTML project",
          "Which HTML elements can't be nested?",
          "An overview of HTML container elements",
          "A detailed look at HTML attributes",
          "The class and id HTML attributes",
          "Adding images to our project",
          "What is semantic HTML?",
          "Document-level annotations in HTML",
          "Document-level annotations",
          "Completing our HTML project with document-level annotations",
          "The best HTML resource: MDN"
        ],
        "Page style with CSS": [
          "How to link a CSS file",
          "Linking CSS files",
          "Basic CSS selectors: targeting specific elements",
          "How colours work: RGB, Hexadecimal, and HSL",
          "Colours in CSS",
          "Colours in CSS: text and background",
          "Starting to write our project's CSS file",
          "Inheritance in CSS",
          "What properties can't be inherited?",
          "The CSS Box Model",
          "CSS Box Model",
          "Overview of CSS units",
          "Working with spacing in our project",
          "Descendent selectors in CSS",
          "What is specificity in CSS?",
          "BEM: a simpler approach to CSS targeting"
        ],
        "Project 1: Micro Blog (design+site)": [
          "Overview of this section's project",
          "Access the finished code here",
          "From our YouTube channel: How to start a new software project",
          "Step 1: becoming a user",
          "Step 2: populating the backlog",
          "Step 3: wireframing or rough design",
          "Step 4: pixel perfect design",
          "Step 5: creating the page structure",
          "Step 6: coding the page structure with HTML",
          "What are SVGs?",
          "How to include images in our HTML site",
          "Finishing the header and navigation",
          "HTML forms: sending data",
          "HTML forms: working with textareas",
          "Creating the footer with multiple columns",
          "How to style the header and menu bar",
          "Setting the font family in our project",
          "How to style HTML forms and inputs",
          "How to style the micro blog entries",
          "How to style the page footer",
          "A CSS reference for what we've used in this section"
        ],
        "Backend Development with Flask": [
          "\"Hello, world\" with Flask",
          "Using render_template to send longer HTML strings",
          "What is Jinja2?",
          "Jinja2 Expressions",
          "Working with data structures in Jinja2",
          "Conditional statements in Jinja2",
          "Using loops in Jinja2",
          "Setting up our Microblog project with Flask",
          "Receiving form data using Flask",
          "Displaying past entries in the Microblog project",
          "Formatting dates correctly in our entries",
          "Introduction to MongoDB",
          "Accessing MongoDB with Compass and Atlas",
          "Small update to pymongo affecting the next video",
          "Storing Microblog entries in MongoDB",
          "What happens when you hit \"Refresh\"?",
          "Retrieving the Microblog entries from MongoDB",
          "How to use Flask's app factory pattern"
        ],
        "Deploying Flask Apps to Render.com": [
          "What is the requirements.txt file?",
          "What do deployment services do for us?",
          "Preparing our app for deployment",
          "Deploy a Flask app to Render.com"
        ],
        "Jinja2 Mastery: Level I": [
          "Defining Jinja variables using the 'set' keyword",
          "Jinja filters to call inline functions using the pipe operator",
          "Jinja macros to improve reusability and remove duplication",
          "Jinja inheritance using 'extends' and 'block'",
          "How to use CSS style tags with inheritance",
          "Handling CSS in larger apps with inheritance",
          "Jinja tests using the 'is' keyword",
          "The Jinja Environment and Rendering Context",
          "Routing with Jinja using url_for in your templates"
        ],
        "Project 2: Habit Tracker": [
          "Habit tracker project overview",
          "Displaying and saving habits",
          "Styling the habit tracker",
          "Adding date navigation",
          "Styling the date navigation",
          "Completing habits",
          "Adding Flask blueprints",
          "Setting up MongoDB",
          "Using MongoDB in the habit tracker",
          "Introduction to Git and GitHub",
          "Deploying our habit tracker app to Render.com"
        ]
      },
      "requirements": [
        "Some programming experience required! Although I've included a comprehensive Python Refresher section in this course, you should know the fundamentals of programming",
        "No software or payment information required. Everything we use is free and I'll guide you through installing anything you need!"
      ],
      "description": "Welcome to the Web Developer Bootcamp with Flask and Python! In this course, you'll learn how to build and deploy dynamic websites using Python, Flask, MongoDB, HTML, and CSS!\nIf you want to share your projects online and become a full stack web developer, you're in the right place! I will teach you the latest and most popular technologies, including Python 3.10, Flask, HTML 5, and CSS 3.\nI won't teach you jQuery or Bootstrap since those are old technologies! Instead, I focus on giving you a solid HTML and CSS foundation, so that you can be truly independent, and build anything you want.\nI'll help you write many real-world projects that test your skills and build your understanding. By the end of the course, you'll be able to design and code any feature on any website!\nThis course beats attending any live bootcamp or workshop because I've put hundreds of hours into planning, recording, and editing. Plus you get lifetime access, and I provide outstanding support—I answer dozens of questions every day!\n\n\nWhy learn Flask?\nFlask is a microframework for web development, written in Python.\nIt's lightweight and simple, so you can start using it straight away. As you go through the course and learn more about it, you'll realize it's also really powerful!\nFlask provides everything we need for building websites: a good way to organize our apps, helpers for user authentication, a large selection of plugins and extensions to do dozens of other things, and much more!\n\n\nWhat you'll learn!\nHere's an overview of what you'll learn in this course:\nA super-strong HTML 5 and CSS 3 foundation\nHow to plan your software projects and make them successful\nDesign websites using design software like Figma\nSemantic HTML, and how to code in HTML like a professional\nBuild backend applications with Flask and Python\nMake your HTML websites dynamic with Flask and Jinja2\nBecome a CSS professional: learn about flex, grid, CSS animations, and much more\nStore and retrieve data with MongoDB on the Cloud\nDeploy your web applications (using both free and paid solutions)\nImplement user authentication on your Python and Flask websites\nMuch, much more!\nBut most importantly, learn to code from a professional software developer, and like a professional software developer\nI won't cover JavaScript in detail, but that's because you just don't need it! With HTML, CSS, and a backend (written with Flask and Python) you can do almost anything your users want. Later on, you can always learn JavaScript for extra functionality. Trying to learn JavaScript and Python together leads to problems, and everything becomes a bit more difficult than it has to be.\nIf you already know a little bit about programming (with Python or any other language), you're ready to start this course! Also, I've included a complete Python Refresher section to help you get up to speed with Python if you don't know it well already.\n\n\nOther students are loving the course!\n\"Jose is a Master of the Art of Programming. This course is truly underrated. He goes straight to the point, yet flesh out all the Gotchas. Introduces current best practices in Web dev. An easy 5 for this course!\" - Olayemi Akinsanya\n\"Great course, learned loads, really great for OOP and for web development. Really fun, can't wait to start my own projects now!\" - Joshua Shallow\n\"A well organized and very useful course! Thank you, Jose!\" - Leonid Bushman\n\n\nFeel free to look through the preview videos of this course to see if it's a good fit for you!\nRemember I offer a 30-day money-back guarantee, so you can join me for an entire month, risk-free, and decide whether to keep going or not.\nI'll see you on the inside!\nJose Salvatierra",
      "target_audience": [
        "Python developers who want to start sharing their projects online via websites",
        "Anyone who has learned a bit about programming, and wants to become a full stack web developer",
        "Business professionals and startup founders who want to build websites for their business"
      ]
    },
    {
      "title": "The Ultimate 2025 Fullstack Web Development Bootcamp",
      "url": "https://www.udemy.com/course/the-ultimate-fullstack-web-development-bootcamp/",
      "bio": "Become a fullstack web developer (and get a job) by taking this ONE course, even if you've never coded before.",
      "objectives": [
        "Be able to build ANY website you want.",
        "Build fully-fledged websites and web apps for your startup or business.",
        "Master backend development with Django and Python",
        "Learn the latest frameworks and technologies, including Javascript ES6+, Bootstrap 5, Django, Postgres and more.",
        "Craft several projects to show off to your future employer as a junior developer.",
        "Work as a freelance web developer.",
        "Master frontend development with HTML, CSS and JavaScript",
        "Master backend development with Python, Django, Wagtail and Postgres",
        "Learn professional developer best practices.",
        "Learn modern workflow using Git and Github",
        "Learn how to use your command line tools like a boss",
        "You will learn about API's and RESTful API's",
        "Learn how to make beautiful websites quickly with Bootstrap 5",
        "Learn how to customize your text editor like a pro",
        "How websites and coding works behind the scenes"
      ],
      "course_content": {
        "Getting started in this bootcamp": [
          "How this bootcamp is setup",
          "Commonly asked questions",
          "The Bootcamp members-only exclusive group",
          "How to share your projects"
        ],
        "Web Development Fundamentals": [
          "What is web development?",
          "How to get into web development",
          "What does it take to get into web development?",
          "Web development tools",
          "How websites are created",
          "Frontend vs. backend coding",
          "What is fullstack web development?",
          "Working with teams",
          "What is open source?",
          "Don't reinvent the wheel, leverage open source!",
          "Your Project: Getting started with your first line of code",
          "Practice Test"
        ],
        "Understanding how websites work, a glimpse into the request/response lifecycle": [
          "What is a browsers job?",
          "What does your browser do?",
          "What are web requests?",
          "The request lifecycle",
          "What are server responses?",
          "Interpreting HTML, CSS, and JavaScript",
          "Viewing your requests and responses",
          "Your project"
        ],
        "VS Code 101: A beautiful code editor": [
          "Downloading VS Code",
          "Finding a nice theme",
          "Nice theme icons",
          "Awesome VS Code extensions",
          "How I use VS Code every day",
          "Moving around VS Code",
          "Shortcuts and hotkeys",
          "Managing files in your editor",
          "Different views",
          "How to effectively use search",
          "Typing in multiple places",
          "Your project",
          "Practice Test"
        ],
        "HTML 101: A beginners guide to coding": [
          "What is HTML?",
          "Getting setup",
          "HTML syntax",
          "The base structure",
          "Page titles",
          "Paragraphs and headings",
          "Whitespace doesn't matter",
          "Nesting HTML elements",
          "Bold, italics, and underlines",
          "The div element",
          "Block elements vs. inline elements",
          "Linking to other pages",
          "Opening links in new windows",
          "Adding images",
          "Linking an image to other web page",
          "Horizontal rules and line breaks",
          "HTML comments",
          "Bullet point lists",
          "Introduction to CSS: CSS tags",
          "Introduction to JavaScript: Script tags",
          "Sharing code with CodePen",
          "Finding extra support",
          "HTML 101 Quiz",
          "Your final project"
        ],
        "HTML 201: Intermediate level HTML": [
          "No more underlines",
          "Internal links",
          "Favicons",
          "Pathing",
          "Introduction to tables",
          "Table rows and cells",
          "Merging table cells and rows",
          "Table and cell widths",
          "Table headers",
          "Inline CSS",
          "HTML classes",
          "HTML ID's",
          "Code formatting",
          "HTML entities",
          "Introduction to forms",
          "Input elements",
          "Textareas",
          "Buttons",
          "Dropdown menus",
          "Embedding videos",
          "HTML 201 Quiz",
          "Your Project",
          "HTML5 resources & e-book"
        ],
        "CSS 101: A beginners guide to beautiful websites": [
          "What is CSS?",
          "How does CSS work?",
          "CSS syntax overview",
          "How to write inline CSS",
          "How to write internal CSS",
          "CSS selectors introduction",
          "Writing element selectors",
          "Writing class selectors",
          "Selecting elements by their ID",
          "Grouped CSS selectors",
          "Selecting nested elements using CSS",
          "How to comment out your code",
          "Working with different text colors",
          "Working with different color types",
          "Applying styling to different link states",
          "How to change font sizes",
          "A glimpse into different measurement types",
          "How to change your background colors",
          "How to add images to your backgrounds",
          "The most useful tool you can use: the developer tools",
          "Changing your text alignment: left, center or right",
          "Adding borders to your elements",
          "How to add a rounded border",
          "Vital: Different display types",
          "Changing the default width of an element",
          "How to change the default height of an element",
          "Adding box shadows for an eye-popping element",
          "Padding: the internal element spacing",
          "Margin: the external element spacing",
          "How to set a maximum width on an element",
          "How to make elements see-through",
          "Moving your code to an external file",
          "How to float your elements like a newspaper article",
          "CSS 101 Quiz",
          "A note about this project",
          "Your final project"
        ],
        "CSS 201: Intermediate level CSS": [
          "The display property",
          "IMPORTANT: The box model",
          "Outlines: Borders around borders",
          "How to add shadows to text",
          "Forcing a minimum width on an element",
          "Introduction to CSS positions",
          "Relative positioning",
          "Absolute positioning",
          "Fixed positioning (like headers)",
          "Sticky positioning (like modern headers)",
          "Controlling overflowing text",
          "Centering block elements in the middle of the page",
          "Advanced CSS selectors",
          "Introduction to pseudo selectors",
          "Pseudo selectors: getting started",
          "Introduction to pseudo elements",
          "The before and after pseudo elements",
          "Changing the first letter and first line using pseudo elements",
          "Highlighting text with selection",
          "How to add smooth transitions",
          "How to add gradient backgrounds",
          "How to layer backgrounds and gradients together",
          "How to use custom web fonts",
          "What are transformations?",
          "How to make animations using CSS",
          "Flexbox: the new kind of page layout",
          "Grid: the promised land of page layouts",
          "CSS 201 Quiz",
          "Your final project"
        ],
        "CSS 301: Responsive web design": [
          "The viewport meta element",
          "Media query syntax",
          "What is mobile-first?",
          "Responsive images",
          "Responsive embeds",
          "Multiple media queries",
          "Making a responsive layout",
          "CSS 301 Quiz",
          "Your project",
          "CSS resources & e-book"
        ],
        "JavaScript 101: A beginners guide to JavaScript programming": [
          "Getting your hands dirty with your first line of JavaScript",
          "What is JavaScript?",
          "You need a text editor",
          "Your personal coding playgrounds",
          "JavaScript syntax",
          "Console logging",
          "Debugging external files",
          "Storing data in variables",
          "Let and Const variable types",
          "Coding comments",
          "JavaScript operators",
          "Data structures",
          "Conditional statements",
          "The Document Object Model (The DOM)",
          "Selecting elements by their IDs",
          "JavaScript objects",
          "String methods",
          "Demystifying data types",
          "Casting data types",
          "String concatenation",
          "JavaScript numbers",
          "JavaScript arrays",
          "Array iteration",
          "Selecting multiple DOM nodes",
          "Functions: The DRY principle",
          "Functions: Re-using code",
          "Functions: The rest operator",
          "Objects with functions",
          "JavaScript 101 Quiz",
          "Final project"
        ]
      },
      "requirements": [
        "No programming experience needed — I'll teach you everything you need to know",
        "A Mac or PC computer with access to the internet",
        "No paid software required - all websites will be created with VS Code (which is free)",
        "I'll walk you through, step-by-step how to get all the software installed and set up"
      ],
      "description": "Welcome to the Ultimate 2025 Web Development Bootcamp, the only course you need to learn to code and become a full-stack web developer and the only course that will prepare you for a career in web development.\nJoin over 36,000 fellow students already taking this course!\nAt 55+ hours, this web development course is extremely comprehensive and one of the most detailed courses available on Udemy! Even if you have zero programming experience, this course will take you from beginner to coding ninja. Here's how:\nThe course is is taught by a leading web development expert who's worked with organizations such as NASA, Mozilla, the NHS, Arctic Research Foundation and many more.\nThe course has been updated to be 2025 ready and you will be learning the latest tools, techniques and technologies used at large companies such as Instagram, Google, Apple, and YouTube.\nThe course doesn't leave any stone unturned. Every lesson is hyper focused on one single subject, with most lessons having some form of \"homework\". And every module has a final project which will give you real world coding experience.\nThe course curriculum was developed over nine years after teaching hundreds of thousands of students and over 50 coding courses with comprehensive student testing and feedback.\nThe course is made up of over 28 smaller courses, each module being its own self-contained course. Pick and choose what you want to learn, or start from the beginning!\nWe've taught over 450,000 students how to code, and have personally mentored thousands of students in person and online. Through years of feedback, we've been able to hone the perfect teaching strategies.\nWe've taught every age imaginable ranging from 7 years old to 82 years old (seriously, we've taught great-grandma's how to code!) with students moving on to become professional developers and students who have started their own startups.\nYou'll save over $15,000 by enrolling in this course rather than investing in an in-person bootcamp, and you'll still get access to the same teacher materials from the same instructor.\nThe course is just like an in-person bootcamp and feels like you're being personally mentored. That's because we designed it to feel that way.\nThe course is updated with new content, with new projects and modules constantly.\nWe'll take you through every subject, every module and every lesson in a step-by-step manner to teach you everything you need to know to succeed as a professional web developer.\nYou will learn the most in-demand languages and tools like React and Python!\nThe course includes over 55 hours of Ultra HD video tutorials and will build your knowledge as a web developer while working on small website components, and then finishing it off by using all the small components in a fully functional and gorgeous website.\nIn this extremely comprehensive course, we cover a massive an insane number of technologies and tools, including:\nSetting up a beautiful code editor\nFront-End Web Development\nHTML 5\nCSS 3\nBootstrap 5\nJavascript ES6 and newer\nDOM Manipulation\njQuery\nReact.js\nBash Command Line\nGit, GitHub and Version Control\nBackend Web Development\nPython\npip\nDatabases (sqlite and postgres)\nDjango\nWagtail CMS\nREST\nAPIs\nAuthentication\nAnd how to get a job as a professional web developer.\nBy the end of this course, you will be confident and fluently programming, and be ready to apply for web development jobs or take on freelancing contracts.\nSign up today, and look forward to:\nVideo Lectures\nFully Fledged Projects\nQuizzes\nProgramming Resources and Cheatsheets\n$15,000+ web development bootcamp course materials and curriculum\n11 free coding e-books and dozens of additional learning resources\nDon't just take my word for it, check out what existing students have to say about the course and me as a teacher:\n\"Kane and Kalob are very good teachers in explaining things in details, its been one and half months since i'm learning this course and i have learned a lot although I'm a very slow learner still doing CSS animation. this course is good for anyone who want to learn web building from scratch. lots of lessons details videos and course is very well structured. Kane is very interactive always responds your questions. i highly recommend this course.\" - Ahmad Mian\n\"He explains the basic concepts very well. The really good thing he discusses that a lot of others do not are using Git, understanding APIs, and Python. Overall, he does an exceptional job explaining what you need to know and where to go after learning the basics.\" - Christopher S Nichols\n\"Really nice course so far. Lessons are concise and introduce achievable concepts through examples that are easy to follow along with. Only scratching the surface of the course so far, but feel like I'm in good hands.\" - Nicolas Peters\n\"Very complete! So take it, it worth the money, the time, everything! :) Thank you Kane! -Cindy Lorena Sanchez Sua\n\"I've taken other courses but this it's the first time I fell like I'm actually learning.\" - Martin Grus\n\"At first I doubted in purchasing this course because I never thought it would be this simple to understand. I want to give a personal thanks to the course teacher for making it easier the way he is executing things. Cant wait to learn more!!\" - Rutilo Fernandez\n\"Ive tried a lot of courses on the web and this is one of the first that I fell actually help me understand the different concepts without having to go back and to. Very well designed and presented.\" - Leander Gouws\n\"Each and every topic is touched and explained thoroughly! I'm a beginner and I'm just loving it. Among the tons of web development courses in Udemy I'm so glad that I've chosen this course at the first shot, bulls-eye! just the kind of Teacher I was looking for. I am so happy and enjoying all the lectures.\" - Riyad Hossain\n\"This course is extremely detailed. It is great for beginners.\" - Khai Tran\n\n\n\n\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the ONE AND ONLY development course you will ever need.",
      "target_audience": [
        "If you want to learn to code by building fun and useful projects, then take this course.",
        "If you want to start your own startup by building your own websites and web apps, then take this course.",
        "If you are a seasoned programmer, then take this course to to get up to speed quickly with the latest frameworks like Django + Python.",
        "If you want to take ONE COURSE and learn everything you need to know about web development, take this course.",
        "If you want hands on experience with 25+ projects and over 400 tasks, take this course."
      ]
    },
    {
      "title": "The Complete Ruby on Rails Developer Course",
      "url": "https://www.udemy.com/course/the-complete-ruby-on-rails-developer-course/",
      "bio": "Learn to make innovative web apps with Ruby on Rails and unleash your creativity",
      "objectives": [
        "Learn how to rapidly prototype ideas and turn them into presentable apps",
        "Become a professional web application developer",
        "Become a professional Ruby on Rails developer",
        "Design and build virtually any web application you can imagine",
        "Apply for jobs at software companies as Ruby on Rails developer"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "Welcome quiz: Let's get our logic-based thinking warmed up",
          "Let's code the quiz!",
          "Course Structure, Overview and best way to use the course",
          "Ruby on Rails Development Environment overview",
          "[IMPORTANT] Development Environment Update - Please don't skip this text lecture",
          "Web apps built in the course - Preview series kickoff",
          "Preview: SaaS - Project Management App built in section 11",
          "Preview of MessageMe chat application showcasing real-time Rails - Section 8",
          "Preview of Finance Tracker App built in section 9, rapid prototyping",
          "Preview of Univ App using material design for front-end (Section 12)",
          "Preview of Alpha Blog App built from section 4 through 7"
        ],
        "The Ruby Programming Language": [
          "How to get Free Live Help!",
          "Introduction to Section 2 and Ruby",
          "Introduction to Ruby - Text with directions, references and code",
          "Working with Strings part 1",
          "Working with Strings part 2: Getting input from user",
          "Working with Strings - Text with directions, references and code",
          "Homework Solution: Analyzer program code",
          "Working with numbers",
          "Working with numbers - Text with directions, references and code",
          "Homework Solution: Working with numbers - Analyzer",
          "Brief look at comparison operators",
          "Methods",
          "Branching if/elsif/else/end",
          "Methods and Branching - Text with directions, references and code",
          "Arrays and Iterators",
          "Arrays and Iterators - Text with directions, references and code",
          "Hashes",
          "Hashes - Text with directions, references and code",
          "Homework Project: Authenticator",
          "Authenticator project implementation",
          "Text lecture: Authenticator project code",
          "Ruby Style Guide",
          "Ruby Style Guide - Text with directions and references",
          "Homework Assignment: Area code dictionary",
          "Homework Assignment: Area code dictionary - Text directions",
          "Solution: Area code dictionary",
          "Solution: Area code dictionary",
          "Practice what you have learnt",
          "Introduction to Object Oriented Programming",
          "Introduction to Object Oriented Programming - Text directions, refs and code",
          "Attributes, getters and setters",
          "Attributes, getters, setters - Text directions, references and code",
          "Final Ruby project: Classes, Modules, Mixins - 1 - bcrypt",
          "Final Ruby project 1 - Text follow-up",
          "Final Ruby project: Classes, Modules, Mixins - 2 - methods",
          "Final Ruby project 2 - Text follow-up",
          "Final Ruby project: Classes, Modules, Mixins - 3 - modules",
          "Final Ruby project 3 - Text follow-up",
          "'self' notation for method names",
          "Final Ruby project: Classes, Modules, Mixins - 4 - include",
          "Final Ruby project 4 - Text follow-up",
          "Ruby Quiz"
        ],
        "Introduction to Ruby on Rails": [
          "Introduction to Section 3 and Ruby on Rails kickoff",
          "Ruby on Rails kickoff - Text directions and references",
          "Model, View, Controller and Rails App Structure",
          "Model, View, Controller and Rails App Structure - Text references",
          "Required: Ruby on Rails installation (local or cloud-IDE)",
          "Root route, controller, more MVC and say 'Hello World!'",
          "Root route, controller and more MVC - Text directions and references",
          "Structure of a Rails application",
          "Structure of a Rails application - Text references",
          "Version control with Git",
          "Version control with Git - text references",
          "Setup online code repository with GitHub",
          "Setup online code repo with Github - Text directions and references",
          "Front-end: Learn and practice HTML and CSS",
          "Learn and practice HTML and CSS references",
          "Create an HTML paragraph element",
          "Create an unordered list",
          "Add About page and homework assignment",
          "Add About page and homework assignment - Text reference and code",
          "Production Deploy!",
          "Production Deploy - Text directions, references and code",
          "The back-end: Database and tables in Rails",
          "The back-end: CRUD, scaffold and wrap-up section 3",
          "CRUD and scaffold generators - Text directions, references and code",
          "Rails basics"
        ],
        "CRUD Operations in Ruby on Rails": [
          "Preview of Alpha Blog App and Information",
          "Introduction to Section 4: Tables, migrations and naming conventions",
          "Intro to tables, migrations, rails conventions - text references",
          "Models and rails console",
          "Models and rails console - text references",
          "CRUD operations from rails console",
          "CRUD ops from rails console - text directions and code",
          "Validations",
          "Validations - text references",
          "Show articles (route, action and view)",
          "Show articles feature - text references and code",
          "Articles index",
          "Articles index - text references and code",
          "Forms - build a new article creation form",
          "Forms - new article form text reference",
          "Create action - save newly created articles",
          "Create action - text references",
          "Messaging - validation and flash messages",
          "Messaging - validation and flash messages - text references",
          "Edit and update: update existing articles",
          "Edit and update - text references and code",
          "Delete: delete articles",
          "Delete articles - text references",
          "User Interface - add layout links",
          "Layout links: text references",
          "DRY (Don't Repeat Yourself) code - refactoring and partials",
          "DRY code - text references",
          "Production deploy and wrap up section 4",
          "Production deploy - text follow-up",
          "Rails UI",
          "Define a style to set the font color",
          "Define a style to remove underlines from all hyperlinks"
        ],
        "Styling for your Rails Application": [
          "Introduction to Section 5 and styling",
          "Learn to use Bootstrap",
          "Install Bootstrap, asset pipeline, JavaScript, webpack - Rails 6 vs 5",
          "Install Bootstrap, asset pipeline - text directions, references and code",
          "Install Bootstrap in Rails 5 (or earlier versions)",
          "Install Bootstrap in Rails 5 - text references",
          "Build homepage",
          "Build homepage - text follow-up",
          "Layout links using Bootstrap classes",
          "Layout links - text follow-up",
          "Style articles index page",
          "Style index view - text references",
          "Style form partial",
          "Style form - text references and code",
          "Style validation and flash messages",
          "Style messages - text references",
          "Style show view",
          "Style show view - text references",
          "Cleanup layout, production deploy and wrap up section 5",
          "Cleanup layout - text references",
          "Rails front-end styling"
        ],
        "Associations and Authentication Systems": [
          "Introduction to section 6: users, associations, ERD and more",
          "One-to-many associations demo with the rails console",
          "Create users",
          "Create users - text directions and code",
          "Add user validations",
          "Add user validations - text directions and code",
          "One to many association",
          "One to many association - text directions and code",
          "Show user info in articles",
          "Show user info in articles - text directions and code",
          "Alter object state before_save",
          "Alter object state before_save - text directions",
          "Add secure password",
          "Add secure password - text directions and code",
          "New user signup form",
          "New User Signup - text directions and code",
          "Create new users (back-end)",
          "Create new users - text directions and references",
          "Edit users",
          "Edit users - text directions and code",
          "Show user and profile image",
          "Show user and profile image - text directions and code",
          "Add users index",
          "Add users index - text directions",
          "Cleanup layout",
          "Cleanup layout - text reference",
          "Add pagination to views",
          "Add pagination to views - text references",
          "Add login form",
          "Add login form - text references",
          "Create and destroy user sessions",
          "Create and destroy sessions for users - text directions and code",
          "Authentication helper methods",
          "Authentication helper methods - text reference and code",
          "Controller methods as helper methods",
          "Controller methods as helper methods - text references",
          "Restrict actions from UI",
          "Restrict actions from UI - text references",
          "Modify navigation based on helpers",
          "Modify navigation - text references",
          "Restrict actions at controller level - articles",
          "Restrict actions for articles controller - text references",
          "Restrict actions in controller level - users",
          "Restrict actions for users controller - text references",
          "Delete user",
          "Delete user - text references",
          "Add admin user functionality - intro",
          "Admin user intro - text references",
          "Add admin user access through views and controllers",
          "Add admin user access - text references",
          "Assignment - alert message color based on type",
          "Assignment solution - text references",
          "Production deploy and wrap up section 6",
          "Rails actions, authentication and associations"
        ],
        "Many-To-Many Associations and Automated Testing - Integration, Functional, Unit": [
          "Introduction to Section 7",
          "Category model and testing",
          "Category model and testing - text references and code",
          "Validations using unit tests",
          "Validations using unit tests - text references",
          "Categories controller and tests",
          "Categories controller and tests - text references and code",
          "Create category and test",
          "Create category - text references and code",
          "Integration test: Create category business process",
          "Integration test: Create category - text references",
          "Integration test for invalid category",
          "Integration test for invalid category - text references",
          "Integration test and feature: listing categories",
          "Integration test and feature: listing categories - text directions and code",
          "Admin user requirement and test",
          "Admin user requirement and test - text references",
          "Update navigation",
          "Update navigation - text references",
          "Many-to-many association - introduction",
          "Many-to-many association - back-end implementation",
          "Many-to-many association - implementation - text references",
          "Add association from UI",
          "Add association from UI - text references",
          "Update article views to display categories",
          "Update article views - text references",
          "Complete category index and show views",
          "Complete category index and show - text references",
          "Edit categories",
          "Edit categories - text references",
          "Deploy to production, homework, wrap up section 7",
          "Deploy to production, homework and wrap section 7 - text"
        ],
        "Real-time Rails - MessageMe Chat app using ActionCable and web sockets": [
          "Preview of the app built in this section",
          "(IMPORTANT) Notes about this section",
          "Start new rails app (local, cloud9, AWS cloud9 all 3 for demo)",
          "Task 1: Version control",
          "Task 2: Root and Login routes",
          "Install Semantic-UI for front-end",
          "Add navigation menu",
          "Enable dropdown functionality and create nav partial",
          "Add favicon",
          "Build Chatroom Homepage",
          "Complete Chatroom",
          "Task 3: Build login page",
          "Explore the back-end design",
          "Task 4: Build User resource",
          "Task 5: Build Message resource",
          "Task 6: Add actual messages from table",
          "Add message partial and refactor some code",
          "Task 7: Start authentication system",
          "Add authentication system - create and destroy sessions",
          "Enable flash messages display",
          "Restrict views at controller layer",
          "Add messages from UI",
          "Introduction to WebSocket protocol",
          "Implementing real-time with ActionCable overview",
          "Generate a Chatroom channel",
          "Modify and broadcast messages",
          "Display messages using partial",
          "Add auto-scrolling to chat window",
          "Beautify input box, functionality and create custom scope",
          "Section Project",
          "Section conclusion notes"
        ],
        "Stock Tracker Social Media App": [
          "Preview and Details of Stock Tracker Social Media App",
          "Finance Tracker Requirements",
          "Finance Tracker Assignment 1 - Text",
          "Assignment 1 completion",
          "Finance Tracker Assignment 2 - Text",
          "Assignment 2 completion",
          "Add devise gem for authentication",
          "Create users using devise",
          "Test authentication system, login, logout",
          "Assignment: Add Bootstrap to the application",
          "Implementation: Add Bootstrap 4 step by step",
          "Update views",
          "Update layout: containers for styling",
          "Layout Assignment: Add messages and nav partial",
          "Setup and use API key to get stock data",
          "Create Stock model with attributes",
          "Stock lookup: build class method to lookup stock info",
          "Secure credentials in Rails 6",
          "Store secure API key",
          "Setup front-end structure for stock lookup",
          "Build Stock Lookup Form",
          "Display stock price in browser",
          "Create and display stock objects in browser",
          "Dealing with invalid search results",
          "Use Ajax for form submission",
          "Setup JavaScript response",
          "Declare a variable and assign it a string value in JavaScript",
          "Create a simple function in JavaScript which accepts one parameter and returns a computed value",
          "Invoke a function",
          "Sort the characters of a string in alphabetical order",
          "JavaScript responses to invalid search results",
          "Users and stocks: many-to-many association",
          "Setup UserStock resource",
          "Stocks listing view",
          "Cleanup application layout",
          "Track stocks from front-end: browser",
          "Implement stock tracking restrictions",
          "Add functionality to remove tracking",
          "Modify user model",
          "Accept additional fields in app - edit action",
          "Complete signup assignment",
          "Self referential association - users and friends",
          "Assignment completion walkthrough: friends list",
          "Assignment: Create search friends form",
          "Add JavaScript response to form submission",
          "Search users/friends: implement search method",
          "Display search results in the browser",
          "Implement remove tracking functionality",
          "Implement add friend functionality",
          "Display user/friend profile and tracking options",
          "Finance Tracker Assignment and section wrap up"
        ],
        "Email, Custom Payment Functionality and File Uploads": [
          "IMPORTANT: Preview of material covered in this section",
          "Start Photo App",
          "Start Photo App - Text directions and code",
          "Setup Authentication System",
          "Setup Authentication System - Text directions and code",
          "Sending Email in Production",
          "Sending Email in Production - Text directions and code",
          "Update Layout and Test Email in Production",
          "Update Layout and Test Production Email - Text directions and code",
          "Build Homepage",
          "Build Homepage - Text directions and code",
          "Stripe and Payment Introduction",
          "Stripe for Payment Introduction - Text directions, references and code",
          "Payment Model",
          "Payment Model - Text directions and code",
          "Update Form for Credit Card Payments",
          "Update Form for Credit Card Payments - Text directions and code",
          "Javascript Events",
          "Javascript Events - Text directions and code",
          "Extend Devise Registrations Controller",
          "Extend Devise Registrations Controller - Text directions, references and code",
          "Fix Conflict Bug",
          "Fix Conflict Bug - Text directions",
          "Image Upload",
          "Image Upload - Text directions and code",
          "Image Size Validations",
          "Image Size Validations - Text directions and code",
          "Image Upload in Production",
          "Image Upload in Production - Text directions and code",
          "Complete Prod Image Upload",
          "Complete Prod Image Upload - Text directions and code"
        ]
      },
      "requirements": [
        "Modern browser and internet connection",
        "No prior programming or web app development experience necessary"
      ],
      "description": "Now featuring Rails 6 - the latest version of the Ruby on Rails framework.\nRuby on Rails Web Developer average salaries by city as of January 2020 (according to Glassdoor):\nNew York - $95,000/yr, Boston - $97,000/yr, San Francisco - $100,719/yr\nNeed more reasons on \"why Ruby on Rails?\"\nSince its introduction, Ruby on Rails has rapidly become one of the most popular and powerful web application development tools for both startups and mature software companies. Some of the top sites in the world started with Ruby on Rails such as Basecamp, Twitter, Shopify, Github, LivingSocial, Groupon, Hulu, Airbnb, Yellow Pages and many more! Even after immense scaling, most of them continue to use Rails! Ruby on Rails developers routinely command the highest salaries in the tech industry!\nThe Complete Ruby on Rails Developer is:\n#1 Web development course with Ruby on Rails on Udemy. 64,000+ students, 9500+ ratings, 57% of them are 5-star!\n#1 Best-seller in Ruby on Rails since it's launch\nThis is the only course you'll need where you learn how to build everything from simple to complex, deployable, production-ready web applications\nThis course currently features the Ruby programming language, 5 total apps -- Alpha-blog and Finance Tracker featuring Rails 6, MessageMe and University app featuring Rails 5 and a SAAS app upgrade to Rails 6 underway!\nThe Complete Ruby on Rails Developer Course provides a thorough introduction to Web Applications Development using the wildly popular Ruby on Rails framework. With 40+ hours of engaging video lectures and text follow-up lectures with directions, references and code, this course is designed to:\n- Take students with no prior programming or web application development experience to accomplished web application developers specializing in Ruby on Rails.\n- Give students with prior experience in Ruby on Rails or web development a leg up in the industry by helping them learn the ins and outs of back-end development with Rails and building complex apps at will.\n- Give professionals and students alike the avenue by which they can switch to Ruby on Rails as the back-end development framework of choice so they can build robust web apps in very quick time and bring their ideas to life.\nCurrent web apps built in the course (6):\nSections 4 - 7: Alpha blog - CRUD functions, multiple resources, authentication system built from scratch, front-end using Bootstrap, one-to-many and many-to-many associations at DB layer, production deployment! Compatible with both Rails 4 and 5 (with repositories on each version). Built using Rails 6 (compatible with 4, 5, 6)\nSection 8: MessageMe real-time messaging app featuring ActionCable, use of WebSocket protocol and Semantic-UI front-end. Built using Rails 5!\nSection 9: Finance Tracker social media app - Learning to use Devise for authentication, generators, search forms, Ajax, JavaScript, search functionality, external API usage, secure credentials management, rapid prototyping. Built using Rails 6.\nSection 10: Photo App - Production email confirmation functionality, extending devise basic functionality, payment using Stripe API, file storage with AWS S3 bucket.\nSection 11: SaaS Project Management App - Multi-tenancy, extending devise and incorporating payment functionality with Stripe, multi-tiered teams, email invitations within teams, restrictions based on payment tiers and more!\nSection 12: University App (bonus) - Introductory Rails app (optional as beginner app for the course) - beginner friendly, along the lines of Alpha blog, but uses MaterializeCSS front-end framework instead of Bootstrap and walks through how to customize features in it. Built using Rails 5.\nRuby on Rails - introduced 15 years ago - continues to be the cool but stable framework of choice for startups since it allows for rapid development - while maintaining structure and security - as complex and disruptive business ideas are brought to life in record time.\nThis course takes a very structured approach of teaching Rails starting with Ruby - the programming language behind Rails. Everything from \"Hello World\" to Object Oriented Programming is covered. Students acquire skills rapidly; utilizing homework assignments, quizzes, coding exercises and free web based resources to go with the video lectures. The text lectures also provide reference material after each video, it's like having multiple books in addition to the videos to guide students through the course.\nAt first all the code is done from scratch limiting the use of shortcuts and generators so students can understand what's really going on under the hood of Rails applications and can design them the way they want. Then with solid knowledge and understanding already in place, rapid prototyping methods are introduced in later parts of the course, showing use of generators and scaffolding, finishing with a complete Software as a Service Application that can be used to launch a startup!\nSome key features of this course are:\n- 250+ lectures and 40+ hours of video content\n- Ruby programming from scratch; writing your first program to say \"Hello World\" to Object Oriented Programming while building multiple mini-projects along the way\n- Local installation and development options made available for both Macs and Windows machines (that's right, Windows as well!)\n- Git for version control, Github as code repository, Heroku for production deployment\n- Working with Amazon Web Services S3 bucket for storage, Sendgrid for production email functionality, Multi-Tenancy using Milia\n- Custom credit card form creation and working with Stripe API to implement payment processing functionality\n- Rails MVC structure in-depth - Models, Views, Controllers\n- FREE live support\n- Design and conceptualization using wire-framing tools\n- Building authentication systems from scratch at first using the default Rails stack, including admin feature, log in/logout and signup. Then learning how to use Devise and extend the basic functionality provided by Devise to customize it and speed up authentication systems\n- Ajax, Jquery, plain JavaScript - all 3 used in different parts of the course!\n- Bootstrap, Semantic-UI and MaterializeCSS (using material design concepts) for UI styling\n- Fully automated test suites using Unit, Functional and Integration tests\n- Database associations: One-to-many, many-to-many, self-referential using ActiveRecord\n- much, much more!\nJoin today and I'll see you in the course.",
      "target_audience": [
        "Anyone who wants to be a web app developer: This is a complete course which starts with Ruby and ends with creating multiple web apps with Rails 5 & 6.",
        "Anyone who wants to learn to code: Ruby is a language built with programmer happiness in mind",
        "Anyone who wants to bring their web app ideas to life",
        "Anyone who wants to start their own startup with their own apps"
      ]
    },
    {
      "title": "The Fastest Javascript Course: From ZERO to HERO in 6 Hours",
      "url": "https://www.udemy.com/course/javascript-flash-course-beginner-to-advanced/",
      "bio": "Complete Project-Based JavaScript with ES6+, JS Best Practices, HTTP Requests to APIs, JSON and more",
      "objectives": [
        "Javascript Core Constructs: Data Types, Conditionals, Loops & Functions",
        "Advanced ES6+ Features",
        "HTTP Requests to APIs",
        "Data & Time Functions",
        "Error Handling",
        "JavaScript for Web: HTML, CSS and DOM Manipulation",
        "Image Galleries & Product Filters with JavaScript",
        "Advanced Methods for Arrays and Objects"
      ],
      "course_content": {
        "Getting Started With Javascript": [
          "Presentation of The Project & Useful Tips",
          "How to Open the Project",
          "How to Run Javascript Code",
          "Using Script Tags",
          "Running Javascript Code",
          "Javascript Syntax",
          "DOM: Document Object Model",
          "Interacting with HTML Elements",
          "More Select Methods",
          "Test your skills with HTML manipulation",
          "CSS Manipulation",
          "HTML & CSS Manipulation",
          "Events",
          "Project: Open & Close the Menu"
        ],
        "Javascript Basics - Variables & Data Types": [
          "Variables",
          "Variable Naming Rules & Best Practices",
          "Variable Naming Rules & Best Practices",
          "Data Types - Introduction",
          "Data Types: Strings",
          "Data Types: Numbers",
          "Project: The Greeting Section",
          "Project: Replacing Dynamic Values in the Greeting Message",
          "Data Types: Arrays",
          "Data Types: Objects",
          "Data Types: Booleans",
          "Data Types: Null & Undefined",
          "Data Types"
        ],
        "Javascript Basics - Functions, Loops & Conditionals": [
          "Functions",
          "Project: The Temperature Switch",
          "Test your skills with functions",
          "Conditionals",
          "Date & Time",
          "Test you skills with Date & Time",
          "Project: The Local Time Section",
          "Set Timeout and Set Interval",
          "Pad Start for Formatting the Clock",
          "Loops For & For in",
          "Test your skills with the For Loop",
          "Project: The Image Gallery",
          "The forEach Loop",
          "Test your skills with the forEach Loop",
          "Project: The Gallery Main Image",
          "Project: The Gallery Thumbnails"
        ],
        "Intermediate Javascript": [
          "Ternary Conditionals",
          "Project: The Gallery Functionality",
          "Project: The Greeting Title",
          "Code Organization & Best Practices",
          "Project: The Products Section",
          "Project: Populating the Products Section (Part 1)",
          "Project: Populating the Products Section (Part 2)",
          "The Array Filter Method",
          "Test your skills with the Array Filter Method",
          "Project: The Product Filter Labels",
          "Project: The Product Filter Functionality",
          "Project: The Footer Section"
        ],
        "Advanced Javascript": [
          "Navigator for Geolocation",
          "Arrow Functions",
          "HTTP Requests",
          "The Fetch Method",
          "Project: The Weather Map API",
          "Project: Generating the Weather Text",
          "Error Handling - Try & Catch"
        ]
      },
      "requirements": [
        "It is recommended that students have basic knowledge of HTML5 & CSS"
      ],
      "description": "Javascript is the most used programming language in the world. After almost 30 years since the first release, its popularity continues to spread as the community grows and more robust frameworks are launched frequently.\nLearning Javascript will open a brand new world of opportunities for you. Whether you need to learn Javascript for an ongoing project, to apply for a job, or simply because you want it now, here you will find all the resources you need.\nThis course is also a great choice for businesses as a web development training resource.\n\n\nOur Project-Based Approach\nThis course was designed for people with fast-paced lives, that don't have time to waste. In the very first lesson, you will be presented with a project you will build from start to finish.\nThis project has multiple Javascript components that will enable you to learn beginner, intermediate, and advanced Javascript concepts while you build them.\nHere's a summary of these components:\n• The popular animated mobile menu, that opens and closes with a slide effect.\n• A real-time weather information section, with data retrieved from The Weather Map API.\n• A temperature conversion switch\n• A local-time clock that runs on the page.\n• An image gallery with thumbnails.\n• A product section populated from a JSON object.\n• A product filter that showcases free, paid, or all products.\n\n\nAll The Fundamentals of Javascript Covered\nAlthough this is a fast project-based course, we made sure to cover all the fundamentals of Javascript.\nWhile you get the thrill of solving challenging Javascript problems within the project, you will learn all these topics in detail:\n• Javascript Syntax\n• Code Organization & Best Practices\n• The Document Object Model (DOM)\n• HTML & CSS Manipulation\n• Events\n• Variables\n• Data Types\n• Functions\n• Conditionals\n• Loops\n• Date & Time\n• Geolocation\n• How to Work With External APIs\n• HTTP Requests & the Fetch Method\n• Error Handling\n• ES6+ Functions\n\n\nThis Is Your Opportunity\nThis course offers a certificate of completion, lifetime access, and a 30-day money-back guarantee. It's a risk-free opportunity for you to learn Javascript today!\n\n\nAbout the Instructor\nThis course is ministered by Ivan Loureço Gomes, a top-rated Udemy instructor, famous for his easy-to-follow and hands-on teaching style. Ivan has 8 years of professional experience in IT areas, such as web design, front-end web development, software testing, agile methodologies, project management, and team building.\nWith 18 courses published in 4 languages. he knows how to deliver the best and most engaging content for students.",
      "target_audience": [
        "Professionals looking to learn Javascript fast for an ongoing project",
        "Beginner developers looking to learn Javascript to start a new job",
        "Any person willing to learn Javascript in a short time"
      ]
    },
    {
      "title": "Python for Network Engineers: Netmiko, NAPALM, pyntc, Telnet",
      "url": "https://www.udemy.com/course/python-for-network-engineers-netmiko-napalm-pyntc-telnet-ssh-automate/",
      "bio": "Program networks using Python. Learn network automation and programmability with this practical course (Cisco networks)",
      "objectives": [
        "Learn network programmability with GNS3 and Python",
        "Learn how to automate the configuration of network devices with Python",
        "Learn how to leverage NAPALM for network automation",
        "Learn how to use pyntc for easy network programmability",
        "Use Netmiko for SSH connections to routers and switches",
        "Quick start guide using Telnet and SSH - get started in 20 minutes!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Good news!",
          "Answering your questions",
          "Udemy Tips and Tricks"
        ],
        "GNS3 Setup": [
          "GNS 2.2 GUI Install",
          "GNS3 2.2 VM Install",
          "GNS3 IOS images",
          "CML VIRL 2.0 Install Part 1",
          "CML VIRL 2.0 Install Part 2",
          "EVE NG Installation",
          "EVE-NG Cisco Images",
          "Free CML"
        ],
        "Quick Start Guide to Network Automation": [
          "GNS3 Installation and Setup",
          "Quick Start 1: Python and Telnet: Configure Cisco Router",
          "Quick Start 2: Python and Telnet: Configure Switch VLANs",
          "Quick Start 3: Remove Passwords and improve scripts (Telnet)",
          "Quick Start 4: Create switch VLANs using loops (Telnet)",
          "Quick Start 5: Multiple switches, multiple VLANs (Telnet)",
          "Quick Start 6: In-band management network",
          "Quick start 7: PEP Style Guide",
          "Quick Start 8: Opening Files and spacing importance!",
          "Quick Start 9: Backup switch configurations",
          "Quick Start 10: Jupter IDE",
          "Quick Start 11: Paramiko, SSH, Python and Cisco devices",
          "Quick Start 12: Netmiko Part 1",
          "Quick Start 13: Netmiko Part 2",
          "Quick Start 14: Netmiko Part 3",
          "Quick Start 15: Netmiko Part 4",
          "Quick Start 16: Netmiko Part 5",
          "Quick Start 17: Netmiko Part 6"
        ],
        "NAPALM (P75)": [
          "NAPALM Introduction (P75_12)",
          "Install NAPALM (P68_13)",
          "NAPALM connect to switch 1 (P68_14)",
          "JSON and more commands (P68_16)",
          "Mac address table, ARP cache (P68_17)"
        ],
        "NAPALM and BGP (P75)": [
          "Use NAPALM to retrieve BGP neighbor information: Part 1 (P75_1)",
          "Use NAPALM to retrieve BGP neighbor information: Part 2 (P75_2)",
          "Use NAPALM to retrieve BGP neighbor information: Part 3 (P75_3)",
          "NAPALM: Multiple BGP neighbors (P75_4)",
          "NAPALM and bigger BGP Network Part 1 (P75_5)",
          "NAPALM and bigger BGP network Part 2 (P75_5b)"
        ],
        "Use NAPALM for device configuration audit and changes (P75)": [
          "Use NAPALM to configure Access lists (P75_6)",
          "Check if ACL already exists and add if missing (P75_7)",
          "Use NAPALM for auditing device configs (P75_8)",
          "Use NAPALM to add multiple config files (P75_9)",
          "NAPALM: Multiple config files, multiple devices (P75_10)",
          "Want more?"
        ],
        "pyntc (P69)": [
          "pyntc Introduction (P69_1_2)",
          "pyntc Installation and get device version information (P69_3_4)",
          "Use pyntc to configure a Cisco IOS device (P69_5)",
          "Use pyntc to retrieve a switch running-config (P69_6)",
          "Use pyntc and github to save a switch running config to a file (P69_7_8)",
          "Backup a switch config with 5 lines of code! (P69_9)",
          "Want more?"
        ],
        "Iteration Examples: Netmiko scripts (P77)": [
          "Netmiko Iteration: Script Overview",
          "Netmiko Iteration (Script 1): Basic Script",
          "Netmiko Iteration (Script 2): Open a file of commands",
          "Netmiko Iteration (Script 3): Configure multiple devices using a file of devices",
          "Netmiko Iteration (Script 4): Remove passwords from script",
          "Netmiko Iteration (Script 5): Except (Error) Handling",
          "Netmiko Iteration (Script 6): Determine device types and run specific device typ",
          "Netmiko Iteration (Script 7): Iterate device type script"
        ],
        "Netmiko Scaling": [
          "Encrypted Password File",
          "Netmiko Sequential Part 1",
          "Netmiko Sequential Part 2",
          "Netmiko Multithreading",
          "Netmiko Thread Pools"
        ],
        "Python Theory (P61)": [
          "Keep learning (P61_26)",
          "2.7 and 3 setup (P61_27)",
          "2.7 and 3 examples (P61_28)",
          "Basic Hello World Scripts (P61_29_30)"
        ]
      },
      "requirements": [
        "Basic Networking Knowledge (CCNA Level)",
        "Basic understanding of GNS3"
      ],
      "description": "Learn Network Programmability and Network Automation using GNS3 and Python.\nWant to program networks using Python, but not sure where to start? Well, this course will show you how you can start programming Cisco networks within 20 minutes.\nThis course was created for network engineers. There are too many other Python courses out there that try to make network engineers software developers. Instead of teaching network automation, they teach you Python theory. This course is different.\nThis course is practical. I won't talk about programming in abstract terms and make you wait before you can start automating networks. I will show you how you can quickly and easily start network programming by using GNS3, Cisco IOS and Python.\nYou will see demonstrations of the configuration of both Cisco routers and switches in GNS3. For example, how to configure multiple VLANs on a multiple switches, or how to configure OSPF on a router and more.\nThis course shows you practical examples of using Python to programmatically configure Cisco network devices rather then just talking about it.\nThe days of configuring Cisco networks only with the command line interface (CLI) are drawing to a close. You need to add network programmability using Python and APIs to your skill set.\nLearn how to automate networks using:\n- Telnet\n- SSH\n- Paramiko\n- Netmiko\n- NAPALM\n- pyntc\nTools such as NAPALM and pyntc make it easy to configure and interact with network devices using an API such as NETCONF or using SSH. Don't reinvent the wheel. Use the tools available to you to quickly and easily automate your networks.\nSome comments about the course:\n\"Knowing the material from just the first video would have saved me hours of work and rework in the past.\"\n\"It's the easiest, most fun, and most valuable course I've completed yet on Python Programming for Networking. Love it! Thanks again David!!!\"\n\"Excellent course on Network Programming using Python with lot's of practical network configuration examples.\"\n\"Great way of explanation.Nice video and inspiring words! Thank you so much David. You are genius.\"\n\"I've been doing network automation for a while, even so, I've learned new things through this course. The instructor start from a basic example, adding improvements in each step. It's a skill that's worth it.\"\n\"A must for all network engineers who want to learn python!!! I had very \"very\" basic programming skills, and couldn't just get the bridge between network and programming (mainly Python - since that's where the hype is now), this course was amazing, I have never been glued to a training course since I can remember. The couple of things I loved the most about this course: 1- David's clear voice. 2- Real world application, not only will David interduce different real-world practical modules that you can import and use, but he shows you how to apply them on ios devices.\"\n\"Excellent course on Network Programming using Python with lot's of practical network configuration examples. High quality content.\"",
      "target_audience": [
        "Network Engineers",
        "Network Architects"
      ]
    },
    {
      "title": "Learn XML Crash Course: Discover Essential XML Fundamentals",
      "url": "https://www.udemy.com/course/learn-xml-crash-course/",
      "bio": "Jump into the world of XML with this fast and immersive course.",
      "objectives": [
        "Uses for XML",
        "The fundamental components of an XML document",
        "Learn to define XML document",
        "Element attributes",
        "Attribute types",
        "Best practices for writing code",
        "XML syntax",
        "Adding comments to XML code",
        "DTD (Document Type Definition)",
        "Internal and external DTDs",
        "XML namespace",
        "Using XML schemas",
        "Extensible Stylesheet Language (XSL)",
        "XSLT/ XSL Transformations"
      ],
      "course_content": {
        "Introduction to XML": [
          "Course Objectives and Introduction",
          "WATCH ME: Essential Information for a Successful Training Experience",
          "Course Demo files",
          "Creating an XML Document - Demo",
          "Practical XML",
          "Document Type Document - Demo",
          "Chapter 1 Summary"
        ],
        "Advanced XML Topics": [
          "XML Attributes",
          "Use of Attributes - Demo",
          "XML Schema",
          "Use of Namespaces - Demo",
          "XML Schema Documents - Demo",
          "Chapter 2 Summary",
          "Course Review"
        ],
        "XSLT": [
          "Extensible Stylesheet Language, XSL Transformation and XPATH",
          "Providing Presentation Option in the form of XSL for the XML- Demo",
          "Chapter 3 Summary"
        ],
        "Conclusion": [
          "Course Wrapup",
          "XML Quiz"
        ]
      },
      "requirements": [
        "A basic understanding of HTML",
        "A web browser capable of processing XML (like Firefox, Chrome, or Internet Explorer)"
      ],
      "description": "Learn the essentials needed to get started using Extensible Markup Language (XML), which is the default language for defining and transmitting data on the Internet.\nIn this course, your professional instructor introduces XML and explains why it’s such a powerful language for sharing and transmitting data. You will discover the basics of an XML document, and how to define XML documents and learn their syntax.\nIn this XML Crash Course, you will also learn advanced topics such as using XML schemas, the purpose of a DTD (Document Type Definition), and Extensible Stylesheet Language (XSL) to transform an XML document to another document.\nThis course includes:\nDemo files\nAn optional quiz to test what you’ve learned\nCertificate of completion.\nWhat People Are Saying:\n★★★★★ “Good overview course. Provides a useful introduction to the concepts and practices employed in XML.” –Steve Denton\n★★★★★ “I was looking for an overview of XML, something to give me a rudimentary understanding of the language. I had a very basic understanding but wanted something more to motivate me to take the next steps to learn more. This course did exactly that.” -Michael Miles\n\n★★★★★ “I'm taking another course along with this one and am going through three tutorials. Having several explanations helps me learn - but I must say Simon breaks the concepts down very well. This course is excellent for a beginner.” -Keryn Witte\n★★★★★ “I appreciate the depth and example of this course and they are applicable to real-life scenarios. It took my understanding of XML messages to a new level. Thank you.” -Alexandru Tofan",
      "target_audience": [
        "Develepors that need a jumpstart in XML"
      ]
    },
    {
      "title": "React & TypeScript Chrome Extension Development",
      "url": "https://www.udemy.com/course/chrome-extension/",
      "bio": "Learn Google Chrome Extension development using modern web frameworks. JavaScript, React, TypeScript, Webpack and more!",
      "objectives": [
        "The ins and outs of modern Chrome Extension development",
        "Learn to use the newest Manifest Version 3 Chrome APIs",
        "Standard extension development in basic HTML, CSS and JavaScript and modern development in React and TypeScript",
        "Using HTTP requests in your chrome extensions to interact with third party APIs",
        "Create a study focus timer extension built in simple JavaScript, HTML and CSS",
        "Build a multi-featured weather extension built in React, TypeScript and Webpack",
        "Design a build system for developing extensions using Webpack",
        "Build user interfaces using popular component libraries like Material UI",
        "Deploying your completed extension to the Chrome Web Store for real users",
        "Work with simple command line tools such as Git and NPM",
        "Design an ad blocker extension that covers the basic principles of ad blocking",
        "Build a mini TV show search extension and text-to-speech extension",
        "Bonus mini-section covering the basics of Chrome Extension themes"
      ],
      "course_content": {
        "Course Orientation": [
          "Introduction",
          "Course Overview",
          "Why build Chrome Extensions?"
        ],
        "Chrome Extension Basics": [
          "Section Overview",
          "Section Notes",
          "Editor Setup and Section Resources",
          "Manifest File",
          "Popup and Browser Actions",
          "Options Page",
          "Chrome Storage API",
          "Background Scripts and Service Workers",
          "Chrome Alarms API",
          "Chrome Notifications API",
          "Optional: Notification Time Option Feature",
          "Optional: Start, Stop and Reset Timer Feature",
          "Optional: Chrome Dev Tools"
        ],
        "Beginner Project: Study Timer Extension": [
          "Section Overview",
          "Manifest and Popup",
          "Tasks List Feature Part 1",
          "Tasks List Feature Part 2",
          "Timer Feature Part 1",
          "Timer Feature Part 2",
          "Options Page",
          "Styling Part 1",
          "Styling Part 2"
        ],
        "Data Fetching and More Chrome APIs": [
          "Section Overview",
          "Section Notes",
          "Chrome Runtime and Context Menu APIs",
          "Chrome Search and Tab APIs",
          "Content Scripts",
          "Message Passing",
          "Data Fetching / HTTP Requests",
          "Optional: Text to Speech API"
        ],
        "TypeScript, React and Webpack Build System": [
          "Section Overview",
          "Section Notes",
          "Git and NPM Setup",
          "TypeScript and React Setup",
          "Webpack Configuration Setup",
          "Webpack Plugins Part 1",
          "Webpack Plugins Part 2",
          "Webpack CSS Loaders Part 1",
          "Webpack CSS Loaders Part 2",
          "Types Definition Libraries",
          "Webpack Production Mode",
          "Boilerplate Walkthrough"
        ],
        "Advanced Project: Weather Extension": [
          "Section Overview",
          "Section Notes",
          "Open Weather API Part 1",
          "Open Weather API Part 2",
          "Material UI Part 1",
          "Material UI Part 2",
          "Weather Card",
          "Popup and Cities Feature Part 1",
          "Popup and Cities Feature Part 2",
          "Storage Part 1",
          "Storage Part 2",
          "Temperature Scale Feature Part 1",
          "Temperature Scale Feature Part 2",
          "Options Page Part 1",
          "Options Page Part 2",
          "Overlay Feature Part 1",
          "Overlay Feature Part 2",
          "Overlay Feature Part 3",
          "Overlay Feature Part 4",
          "Temperature Badge Feature",
          "Weather Icons"
        ],
        "Final Project: AdBlock Extension": [
          "Section Overview",
          "Section Notes",
          "Web Request API Part 1",
          "Web Request API Part 2",
          "Declarative Net Request API",
          "Content Script DOM Blocking"
        ],
        "Chrome Web Store Publishing": [
          "Section Overview",
          "Section Notes",
          "Developer Account Setup and Extension Guidelines",
          "Developer Dashboard Walkthrough",
          "Optional: Easy Clipboard Extension Analytics",
          "Optional: Course Final Remarks"
        ],
        "Bonus: Chrome Extension Themes": [
          "Section Overview",
          "Section Notes",
          "Manifest File",
          "Images and Properties",
          "Colors and Tints"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript, HTML, CSS for standard extension development",
        "Basic knowledge of React for modern frameworks section"
      ],
      "description": "Hi! Welcome to the comprehensive Chrome Extension Development course using modern web frameworks in 2023. This is the only course on Udemy that is focused on building extensions using modern technologies like TypeScript, React and Webpack along with standard JavaScript and HTML/CSS development. Using popular frameworks means that the skills you learn in this course building extensions will be transferrable to general web software development.\nThe course is designed flexibly for students of all levels, covering everything from the very basics of extensions to more exciting new technologies! The first part of the course is designed to help you hit the ground running so that you can develop your very first extension within the first hour of the course. Then, we begin introducing more advanced concepts, technologies and projects to supercharge your extension development skills.\nThroughout the course we cover a ton of concepts and technologies:\nComprehensive overview of the fundamentals behind Chrome Extensions\nBuilding extensions using the standard approach with JavaScript, HTML and CSS\nDesigning a Webpack build system to enable the use of React and TypeScript in your extension\nBuilding three large extension projects step-by-step from scratch\nUsing design system component libraries like Material UI to build beautiful UIs quickly\nData fetching using HTTP requests to third party APIs\nDeploying your completed extension to the Chrome Web Store for real users\nBasic usage of Git and NPM on the command line\nIf you have any additional questions, please let me know. I'm always happy to help.\nRegister today to see what modern Chrome Extension development can look like!",
      "target_audience": [
        "Anyone curious about learning to build Chrome Extensions using modern web frameworks",
        "Perfect for developers of all skill levels looking to expand their web development skills to Chrome Extensions",
        "If you want to take ONE course to learn everything you need to know about chrome extension development, take this course"
      ]
    },
    {
      "title": "Django 3 - Full Stack Websites with Python Web Development",
      "url": "https://www.udemy.com/course/django-3-make-websites-with-python-tutorial-beginner-learn-bootstrap/",
      "bio": "Build 3 stunning websites, learn Back and Front End Web Development, deploy your site with HTML5, CSS3 and Bootstrap 4",
      "objectives": [
        "Understand how using frameworks like Django will save you a ton of time in web development",
        "Create beautifully styled websites using Bootstrap 4 (a front-end framework that simplifies web design)",
        "Build fully functional websites for your startup or business",
        "Create your own personal portfolio site to showcase your projects to potential employers",
        "Understand Django basics like function base views, URL routing, models, templates and much more!",
        "Publish your website online with Python Anywhere",
        "Create a fully functional Todo List manager website where users can create accounts",
        "Be able to connect Django to databases to help store and track data",
        "Create a random password generator",
        "Working with Static and Media files",
        "Working with Forms",
        "Creating a User Login System"
      ],
      "course_content": {
        "Welcome": [
          "Welcome"
        ],
        "Python Refresher": [
          "Intro",
          "Installing Python",
          "Variables, Strings, Int and Print",
          "Variables, Strings, Ints and Print Challenge",
          "If Statements and Comments",
          "If Statements and Comments Challenge",
          "Functions",
          "Functions Challenge",
          "Lists",
          "Lists Challenge",
          "Loops",
          "Loops Challenge",
          "Dictionaries",
          "Dictionaries Challenge",
          "Classes",
          "Classes Challenge",
          "Outro"
        ],
        "Site 1 - Password Generator": [
          "Password Generator Preview",
          "Installing Django",
          "Django Cheat Sheet",
          "Running the Server",
          "Project Structure",
          "Apps",
          "URLs",
          "Templates",
          "Forms",
          "Making a Random Password",
          "Using Form Data",
          "Challenge",
          "Solution",
          "Bootstrap",
          "Outro",
          "Source Code"
        ],
        "Git": [
          "Intro",
          "Git Basics"
        ],
        "Site 2 - Personal Portfolio": [
          "Intro",
          "New Project and Apps",
          "Models",
          "Admin and Images",
          "Displaying Objects",
          "Another Set of URLs",
          "Blog Model",
          "Looking Inside the Database",
          "Static Files",
          "Detail Page",
          "Polish",
          "Extending Base Templates",
          "Bootstrap",
          "Outro",
          "Source Code"
        ],
        "Deployment - Pushing Your Site Live for the World to Enjoy": [
          "Python Anywhere",
          "Virtual Enviroments",
          "Running the Server",
          "Static and Media Files",
          "Gitignore",
          "Deploying Changes",
          "Your Custom Domain"
        ],
        "Site 3 - Todo Woo": [
          "Intro",
          "New Project",
          "Sign Up Form",
          "Creating a User",
          "Error Handling",
          "Showing If a User Is Logged In",
          "Logout",
          "Login",
          "Todo Model",
          "Creating Todos",
          "List Todos",
          "View and Update Todos",
          "Complete and Delete Todos",
          "Listing Completed Todos",
          "Styling",
          "Outro",
          "Source Code"
        ],
        "What's New in Django 3?": [
          "What's New in Django 3?"
        ],
        "What's Next?": [
          "Farewell!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Some Python knowledge is helpful but not required. I have a section at the beginning of the course called \"The Python Refresher\" to get you up to speed in no time"
      ],
      "description": "Have you ever wanted to create a Web application but didn't know where to start? Have you previously tried to learn Django but got fed up with incomplete YouTube videos and poorly written tutorials? Or are you looking to move your code from Django 2 to Django 3?\nTHEN THIS IS THE COURSE FOR YOU!\nIn my Django course, I will walk you through the Django web framework from beginning to end! I'm a self-taught programmer so I know what it feels like to start from scratch. I care about your learning, but even more importantly... I care about you!\nWhat is Django?\nDjango is an open-source web framework that is written in Python. It was created about twelve years ago, but new in 2020 we have Django 3 with a whole new set of features and capabilities!\nDjango is an amazing framework for web developers because it provides the infrastructure required for database-driven websites that have user authentication, content administration, contact forms, file uploads, and more. Instead of creating all of these features from scratch, you can use the Django framework and utilize these components that are already built, and focus your time on developing your web app instead.\nIf you're going to be working with Python, especially for web applications or web design, you'll want to learn the Django framework. It will save you a ton of time!\nContents and Overview\nI believe we learn best by doing. So, throughout this course you'll be presented with coding quizzes and challenges in order for you to test what you just learned. This format will allow you to actually learn Django and not just follow along like a robot ;)\nWe will use Python in this course, so if you have never used Python before, we will start with a python refresher to get you up to speed (no other python experience required).\nWe will then dive into making three complete websites:\n1 - Password Generator: A simple website to create a random password with several options. You will learn how to:\nInstall Django\nCreate a new project\nWork with Django's URL routing\nCreating Templates\nSubmit and handle HTML form data\n\n\n2 - Personal Portfolio: Create your own portfolio to show to potential employers showing off your resume, previous projects, and a fully functional blog. You will learn how to:\nAdd apps to your project\nWork with models and databases (including SQLite)\nAccess the admin panel\nCreate super users\nMake a responsive website with Bootstrap 4\nWork with static and media files\nExtending Templates\nFormating dates and purals\n\n\n3 - Todo Woo: A website where a user can sign up for an account, and fully manage a todo list with the ability to create, edit, and delete. You will learn how to:\nWork with the authentication system (sign up, login, logout)\nCreate virtual environments\nEstablish model relationships\nRequire login for certain pages\nCreate a CRUD application (Create, Read, Update, Delete)\nQueries and filters\nHandling Errors\n\n\nI will also walk you through Git, which is an awesome tool for developers that allows you to create multiple versions of your code. I'll explain why this is useful and help you understand why you should use it.\nAdditionally, I will show you how to take the projects that you made in this course and publish them live on the web through Python Anywhere. Like I said, I will take you from the very beginning to the very end!\nCourse material is regularly refreshed to include all of the newest updates and information. Additionally, I have made this course downloadable, so you can work through the class offline, making it as convenient as possible for you! Most instructors won't allow this, but I want you to be able to enjoy this course in whichever way is best for you :)\n\nDon't waste your time scouring the internet and trying to piece together how to learn Django on your own. Invest in yourself, and allow me to teach you Django while having fun.\nDon't take my word for it. See what my other students are saying!\n\"Amazing course to get into Django and web development! Nick is really engaging and enthusiastic and a joy to learn from!! He explains concepts clearly and teaches in ways that allow the student to easily recall the information.\" - Evv Erb\n\"I now work as a developer creating internal projects for our support team. Thanks!\" - Johnathan\n\"Truly understands the concept of starting from the beginning. Great teacher and presenter.\" - Earl McAndrew\n\"I really loved the course. By going through the course, I actually made my own website and deployed it on a server.\" - Mrinal Shrivastava\n\"After buying 3 courses about django in Udemy. This is the only one I'm picking something up. Recommended.\" - Ruben\n\"Amazing teacher, very good and clear explanations very nice and helpful real life examples and projects\" - Itay Galea\n\"Nick really goes the extra mile to ensuring a fantastic learning experience from beginning to end. I would recommend this course to anyone looking to get their python apps online quick and easy. You just became my favorite instructor :)\" - Nur Roberts\nFeel free to take a free preview of this course to see if it's a good fit for you. I am so confident that you will love my course, that I even offer a 100% 30-day money-back guarantee. You have nothing to lose, so come join me and let's get started!",
      "target_audience": [
        "Anyone looking for a great beginner's guide to Django",
        "Python developers that want to learn web development with Django"
      ]
    },
    {
      "title": "NGINX, Apache, SSL Encryption - Certification Course",
      "url": "https://www.udemy.com/course/nginx-apache-ssl-encryption-certification-course/",
      "bio": "Install, Configure, and Secure NGINX & Apache on an Ubuntu Server using Digital Ocean & Let's Encrypt SSL",
      "objectives": [
        "Deploying a virtual server on Digital Ocean",
        "Working with dynamic, static and floating IPs",
        "Using Terminal for remote authentication",
        "Installing and configuring LAMP Stack on Ubuntu 18.04",
        "Testing PHP",
        "Hosting Multiple Domains on one Apache Virtual Server",
        "Configuring Virtual Host Files and Directives",
        "DNS Zone File Configuration",
        "Understanding the difference between Apache & NGINX",
        "Installing NGINX on a Digital Ocean Droplet or any Virtual Server of your choice",
        "Modifying the NGINX Block Configuration file for hosting Websites",
        "Installing essential components on NGINX such as MySQL, PHP & PhpMyAdmin",
        "Securing PhpMyAdmin using symbolic links and NGINX's built in authentication gateway",
        "Securing your hosted websites with free SSL using Certbot & Let's Encrypt",
        "Installing and Configuring WordPress on your NGINX Server",
        "Types of SSL Certificates",
        "How SSL Certificates Work",
        "SSL Certificate Status Reports",
        "Redirect all Domain Variations to HTTPS"
      ],
      "course_content": {
        "Apache Web Server Configuration": [
          "Deploying a Virtual Server on Digital Ocean",
          "Creating and Attaching a Floating IP",
          "Intro to Terminal and Root User Authentication",
          "Apache Installation and Testing",
          "Installing MySQL Database Management System",
          "Installing and Testing PHP",
          "Installing PhpMyAdmin for Database Administration",
          "Introduction to Virtual Hosts",
          "Directory Structure, Permissions and Test Files",
          "Configuring Virtual Host Files and Directives",
          "Name Server Configuration",
          "DNS Zone File Configuration and Testing",
          "Installing SSL for each Domain using Lets Encrypt",
          "Summary and Next Steps"
        ],
        "NGINX Web Server Configuration": [
          "Apache vs NGINX",
          "History of Apache",
          "Advantages of NGINX",
          "Deploying a Droplet on Digital Ocean",
          "Attaching a Floating IP",
          "Connecting to your Virtual Server",
          "Install and Configure NGINX",
          "Install and Configure MySQL on NGINX",
          "Install and Configure PHP on NGINX",
          "Creating a PHP Test File",
          "Modifying Domain Name Servers",
          "Configuring DNS Zone Files",
          "Updating the NGINX Block File Configuration",
          "Installing Lets Encrypt SSL on NGINX",
          "Installing PhpMyAdmin",
          "Securing PhpMyAdmin with Symbolic Links",
          "Securing PhpMyAdmin with Authentication Gateways",
          "Enabling Authentication Gateways",
          "Introduction to WordPress",
          "Creating a Database for Wordpress",
          "Installing PHP Extensions for WordPress",
          "NGINX Block Configuration for WordPress",
          "Downloading WordPress",
          "WordPress Configuration",
          "WordPress Setup"
        ],
        "Bonus: SSL Certificates Explored + Practice Project": [
          "Introduction to SSL Certificates",
          "Traditional vs. Digital Certificate",
          "Types of SSL Certificates",
          "How SSL Certificates Work",
          "Obtaining an SSL Certificate",
          "Introduction to Lets Encrypt",
          "Server Preparation",
          "Domain Name Server Administration",
          "Introduction to Digital Ocean",
          "Droplet Configurations",
          "Creating a Droplet",
          "Install PuTTY-Terminal and Connect",
          "Install LAMP Stack - Apache, MySQL, PHP",
          "Configure DNS on Digital Ocean",
          "Droplet Basic Configurations",
          "Installing Lets Encrypt",
          "SSL Certificate Status Reports",
          "Redirect all Domain Variations to HTTPS",
          "Auto Renewal with cron jobs"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to our latest course, which will guide you through the process of installing, securing, and configuring NGINX or Apache on an Ubuntu web server. You will also learn to encrypt all web traffic, using a Free SSL certificate from Let’s Encrypt.\nAPACHE Section:\nThis course begins with exploring the most widely used web server technology available, Apache. Statistics show that Apache is used to run over 65% of all web servers around the world. Understanding how to work with Apache, is an instrumental part of the web development process. Students will learn the following key concepts:\nDeploying a virtual server on Digital Ocean\nWorking with dynamic, static and floating IPs\nUsing Terminal for remote authentication\nInstalling and configuring LAMP Stack on Ubuntu 18.04\nTesting PHP\nHosting Multiple Domains on one Apache Virtual Server\nConfiguring Virtual Host Files and Directives\nDNS Zone File Configuration\nNGINX Section:\nNGINX is now considered the most powerful, efficient, and secure web server technology used to host web applications of all sizes and complexity. The software is open-source, and is designed for maximum performance and stability. It also aims to correct many of the short-falls of Apache, when it comes to delivering content to your end user. NGINX can be used for web serving, reverse proxying, caching, load balancing, media streaming, and much more.\nThe NGINX Section of this course will help you understand the following key concepts:\nUnderstanding the difference between Apache & NGINX\nInstalling NGINX on a Digital Ocean Droplet or any Virtual Server of your choice.\nModifying the NGINX Block Configuration file for hosting Websites\nInstalling essential components on NGINX such as MySQL, PHP & PhpMyAdmin\nSecuring PhpMyAdmin using symbolic links and NGINX's built in authentication gateway.\nSecuring your hosted websites with free SSL using Certbot & Let's Encrypt\nInstalling and Configuring WordPress on your NGINX Server\nSSL Certificates - Let's Encrypt\nThis section of the course offers an in-depth look into the role of SSL certificates when it comes to server security and web traffic encryption. We start with a thorough introduction which includes exploring different types of certificates and how they work. From there, students create a droplet on Digital Ocean and configure their own free SSL certificate using Let’s Encrypt Certificate Authority. This section of the course combines theoretical and hands-on training. Students have the opportunity to practice some of the concepts explored in the previous two sections, while also learning about free SSL Certificates, such as Let’s Encrypt.",
      "target_audience": [
        "Students Interested in learning the Foundations of NGINX, Apache & SSL Encryption",
        "Students interested in learning how SSL Certificates work",
        "Web Developers interested in setting up NGINX on a Ubuntu Server, with MySQL, PHP, & PhpMyAdmin",
        "Web Developers interested in setting up APACHE on Ubuntu with LAMP Stack (Linux, Apache, MySQL, PHP)",
        "Students interested in learn how to install and configure WordPress on NGINX"
      ]
    },
    {
      "title": "Learn WCF And Web APIs From Scratch",
      "url": "https://www.udemy.com/course/learn-wcf-and-web-apis-from-scratch/",
      "bio": "Learn how to develop services using WCF and Web APIs.",
      "objectives": [
        "Getting started with WCF Services",
        "Creating services",
        "Hosting services",
        "Consuming services"
      ],
      "course_content": {},
      "requirements": [
        "MS SQL Server express",
        "VS2012 express or higher"
      ],
      "description": "******Updated on Feb 2016********\nWCF\nIt is a framework for building service-oriented applications. Using WCF, you can send data as asynchronous messages from one service endpoint to another. A service endpoint can be part of a continuously available service hosted by IIS, or it can be a service hosted in an application. An endpoint can be a client of a service that requests data from a service endpoint. The messages can be as simple as a single character or word sent as XML, or as complex as a stream of binary data.\n\n\nWeb APIs\nA server-side web API is a programmatic interface to a defined request-response message system, typically expressed in JSON or XML, which is exposed via the web—most commonly by means of an HTTP-based web server",
      "target_audience": [
        ".Net Developers",
        "Anyone who has good understanding of C# programming language"
      ]
    },
    {
      "title": "Running a Web Development Business: The Complete Guide",
      "url": "https://www.udemy.com/course/the-complete-guide-to-running-a-web-development-business/",
      "bio": "Learn how to start and grow a successful web development business. Get up & running and making sales in under a week.",
      "objectives": [
        "Understand how development stacks work and pick which stack is ideal for you",
        "Predict the timeline for starting your business",
        "Decide between hiring in-house employees or contractors for your business",
        "Decide between offering generalized or specialized web services",
        "Choose a winning combination of traits that you want your business to convey",
        "Understand the different types of contractors and where to find them",
        "Effectively allocate your time",
        "Assess the core components of successful web development firms",
        "Find cheap and professional ways of creating an online presence",
        "Select a name that's attractive and conveys your core messaging",
        "Master the biggest platforms for contracting: Freelancer and Upwork",
        "Use advanced search techniques to fill the gaps of your development work with contractors",
        "Create and organize a professional and effective portfolio",
        "Use a few uncommon techniques to grow your portfolio faster",
        "Utilize 15 different strategies to attract potential clients",
        "Create three different types of proposals and know when to use them",
        "Use tools like Proposify and Nusii to create and streamline proposals",
        "Strategically use ballpark estimates to close clients sooner",
        "Manage clients effectively while using your time efficiently",
        "Keep client retention rates high and minimize churn",
        "Sniff out a client's budget before they tell you",
        "Use advanced best practices to maintain your businesses growth",
        "Recognize client red flags before you start working with them",
        "Figure out the optimal pricing configuration for your rates",
        "Handle client meetings in person",
        "Gauge when clients are not likely to accept an estimate or proposal",
        "Make long-term decisions about which clients to retain and which to lose",
        "Integrate Asana into your workflow to increase transparency and efficiency",
        "Manage a team of subcontractors online"
      ],
      "course_content": {},
      "requirements": [
        "No pre-requisites necessary.",
        "Programming experience is helpful but not necessary."
      ],
      "description": "Web development is one of the fastest growing online industries today. It's important for every business to have an online presence and that represents a huge opportunity for you. Whether you want to code or not, you can capitalize on the over 24 billion dollars of money spent per year on web development services. Whether you want to work part-time or full-time, you can create an awesome portfolio and an even better income taking on web development projects.\nIn this course, I'm going to show you how to jumpstart your business, grow it quickly, and manage your business like a professional - all from the comfort of your laptop.\n——————————————————————————\nI'm Evan Kimbrell and I'm the founder of Sprintkick, a full service web & mobile application studio based out of San Francisco. Over the last 4 years I've personally overseen the launch of over 100 apps all the way from concept to deployment. I've grown my business 400% a year from one small client to 100+ clients. Today, we make apps for big name brands like Walmart, GNC, Dick's Sporting Goods, and other Fortune 500 companies.\nI see too many people floundering to start or grow their web development business because they don't have the mentorship or the guidance to do it right. This course is my answer for all of you who have reached out for help. I've piled everything I know and everything that has made my business successful into this course. I created this course to teach you how you can hit the ground running with starting a web development business - even if you don't want to code.\n——————————————————————————\nThese are some of the questions this course will answer:\nWhere do I start and how do I know if I should do this?\nHow do I choose a niche or should I not specialize?\nHow should I make my portfolio and what is most effective?\nHow do I make professional proposals without spending tons of money?\nHow do I spend less time looking for clients and more time building websites?\nHow do I take on larger projects and make more money?\nHow do I find clients?\nHow do I keep clients from going to the competition?\nWhich clients are the most profitable and how do I find them?\nHow do I get clients to accept my estimates?\nHow did other companies get so successful with web development?\nHow do I charge more for my services?\nHow can I bring in development partners to offload my work?\n——————————————————————————\nWhy you should take this course:\nOver 22+ hours of content and direct access to me, the instructor, as a guide and personal helper.\nLearn step-by-step from someone who started and runs a very successful web development business.\nShorten your learning curve and protect yourself from making costly beginner mistakes.\nGrow your business faster and with fewer hiccups along the way. See how the professionals do it.\nA web development business can be run from anywhere at anytime. Join the international community of entrepreneurs who work when they want and how they want.\nLearn how to tailor your business to your lifestyle. If you want to work part time and free yourself up from the full time grind, this course shows you how.\n\n\nIncluded in this course:\nFree contract documents such as an NDA, a customizable standard web contract, and an addendum contract for extra work. All of these documents cost me over $5,000, but are yours free as part of the course.\nFree access to any course updates including case studies, projects, and collaborative discussions.\nLearn on the go. All course lectures are free to download and view anywhere even without an internet connection.\nSection summaries to help you review and re-learn lecture points easily and quickly.",
      "target_audience": [
        "Web developers who want to learn how to expand their skills into a business.",
        "Non-technical entrepreneurs who want to start a business building web applications.",
        "Established freelancers who want to add development services to their offered services.",
        "Marketing, strategy, and SEO consultants who want to expand their business and offer more to their clients."
      ]
    },
    {
      "title": "Complete Modern JavaScript Firebase BootCamp the beginner",
      "url": "https://www.udemy.com/course/complete-modern-javascript-with-firebase-bootcamp-for-beginners/",
      "bio": "Master JavaScript and Firebase Firestore with Pure JavaScript！JavaScript ES6+, OOP, AJAX",
      "objectives": [
        "Go from a total beginner to an advanced JavaScript developer",
        "Asynchronous JavaScript: The event loop, promises, async/await, AJAX and APIs",
        "OOP including ES5 prototypes & ES6 classes",
        "ES6 features like arrow functions, classes, default and rest parameters, etc."
      ],
      "course_content": {},
      "requirements": [
        "No coding experience is required in this course",
        "Basic HTML/ CSS knowledge is an advantage, but not a must",
        "All you need is a computer"
      ],
      "description": "This is a JavaScript course for everybody.\nJavaScript is everywhere\nJavaScript is the most popular programming language out there, you need to know JavaScript no matter you are a frontend developer or backend developer.  YouTube tutorials are usually talking about a JavaScript features without showing how to use them.\nComplete Modern JavaScript BootCamp from the beginning starts from scratch and builds up your knowledge of the JavaScript language. Yes, you’ll learn all the features of the language, but you’ll also learn how to use those features together to create a complete application.\n\n\nFirestore -Real time database\nBesides JavaScript, we will also learn to build web with Firebase. Cloud Firestore is also a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud Platform.",
      "target_audience": [
        "Those who want to gain an understanding of most popular language JavaScript",
        "Those who want to get start with programming in general",
        "Those who want to learn modern JavaScript from beginner to advanced without libraries and frameworks",
        "Those who want to gain an understanding of most popular language JavaScript"
      ]
    },
    {
      "title": "Angular Material In Depth (Angular 20)",
      "url": "https://www.udemy.com/course/angular-material-course/",
      "bio": "In-depth guided tour to the Angular Material component library (in Angular 19)",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Learn how to use the Angular Material Library",
        "Learn how to design responsive applications with Angular Material",
        "Learn how to setup the Navigation Menu of your Angular Material Application",
        "Learn how to use the most commonly needed Angular Material Form Widgets",
        "Master the Angular Material Data Table, learn server-side Pagination, Sorting and Filtering",
        "Learn how to build Angular Material Custom Dialogs",
        "Learn how to build an Angular Material Custom Theme",
        "Learn the Angular Material Tree component, Virtual Scrolling and other advanced components"
      ],
      "course_content": {
        "Introduction": [
          "IMPORTANT",
          "Angular Material In Depth - Helicopter View",
          "How to Take this Course - Set Up Your Local Development",
          "What is Angular Material?",
          "How to Add Angular Material to Your Project"
        ],
        "Angular Material Navigation and Container Components": [
          "Setting Up a Complete Navigation System With Angular Material",
          "Angular Material Dropdown Menus",
          "Angular Material Tab Groups",
          "Angular Material Cards - How to Use Them?",
          "Angular Material Stepper - Multi-Step Forms",
          "Angular Material Input Field: Lots Of Useful Options",
          "Angular Material Radio Button",
          "Angular Material Select Box",
          "Angular Material Date Picker",
          "Angular Material Date Picker - Highlighting a Calendar Date",
          "Angular Material Check Box",
          "Angular Material Text Area",
          "Angular Material Tooltip - Several Useful Options",
          "Angular Material Data Table - Complete Example With Simplified DataSource",
          "How To Style The Columns of an Angular Material Data Table",
          "Angular Material Data Table - Loading Data From the Backend",
          "Angular Material Loading Indicator",
          "Angular Material Data Table Paginator",
          "Angular Material Data Table - Sorting Data",
          "Angular Material Data Table - Multi-Template Data Rows and Expandable Rows",
          "Angular Material Data Table Data Selection",
          "Angular Material Data Table - Sticky Header and Sticky Columns"
        ],
        "Angular Material Dialogs": [
          "Angular Material Dialogs - How To Create a Dialog",
          "Angular Material Dialog - Final Implementation and Demo",
          "Angular Material Dialog - Best Practices, Patterns and Anti-Patterns"
        ],
        "Angular Material Advanced Features": [
          "Angular Material Drag and Drop - Complete Step-by-Step Example",
          "Angular Material Drag and Drop Between Different Lists"
        ],
        "Responsive Design With Angular Material": [
          "Introduction To Responsive Design With Angular Material",
          "The Angular Material mat-grid-list Component",
          "The Angular Material Responsive Breakpoint Observer Service",
          "Writing Responsive CSS for Angular Material Components",
          "Angular Material Responsive Dialogs"
        ],
        "Angular Material Tree Component": [
          "Introduction to The Angular Material Tree Component",
          "Angular Material Nested Tree - Step-by-Step Example",
          "Angular Material Flat Trees"
        ],
        "Virtual Scrolling and Custom Themes": [
          "Angular Material Virtual Scrolling",
          "Angular Material Custom Theme"
        ],
        "Conclusion": [
          "Bonus Lecture (Updated October 2025)",
          "Angular Material In Depth - Conclusions & Key Takeaways"
        ]
      },
      "requirements": [
        "Just some previous knowledge of Angular and Typescript"
      ],
      "description": "This course covers in detail the Angular Material component library, and comes with a running Github repo.\nThis Course in a Nutshell\nAngular is an amazing framework that does a lot of the work for us, but one thing that the core modules don't do by themselves is provide you with commonly used user interface components.\nImagine what it would be like to use Angular, but have to develop all your dropdown boxes, date pickers, menus, and all those commonly needed and very standard components every time that you need to develop an application.\nThis would be not only impractical, but in most cases impossible as some of these components might take weeks to months to develop and test given their complexity!\nAlso, how about styling and theming your application and make sure that everything looks neat and professional?\nImagine what it would like to have to style your whole application from scratch, from a completely empty page. This is a huge amount of work and custom development that most companies prefer to avoid.\nAnd so this is where Angular Material comes in! :-)\nAngular Material is an amazing component suite for Angular which is based on Material Design (a UI development standard from Google).\nWith Angular Material, you can quickly give your applications that typical Android-like Material Design look and feel, just by adding a few components and styles to your application.\nAlso, you will never have to develop your own date picker and many other commonly needed components, everything is already available from the beginning of your project.\nThese are very high quality components that have been extensively tested in thousands of applications, including for usability, user-friendliness and responsiveness.\nThese components, developed by Google themselves are some of the highest quality UI components that you can choose to build your application, and they are ready to be used from day one in your project.\nCourse Overview\nIn this course we are going to build a sample Angular application from scratch using Angular Material.\nWe are going to first set up the menu structure of the application, and then we are going to display some data on the screen using commonly used container components like tab containers, and we will apply some Material Design principles.\nWe will then learn how to use some of the most commonly needed form controls, like inputs and text areas, date pickers, dropdowns, radio buttons and checkboxes, and other commonly used form components.\nWe will build a complex form using Angular Material, and show how to properly display form control errors. We will then learn how to use Material data table component to display tabulated data, including how to credit in-place editable tables and expandable table rows.\nWe will show how to paginate the data in the data table, and we will display a loading indicator to the user while the data gets loaded.\nWe will also cover in detail a very commonly used feature which are dialogs, and discuss when to use them and when not to use them and talk about some useful best practices.\nWe will then cover some of the most advanced components in the Angular Material suite, including it's powerful drag and drop features, the responsive design capabilities of Angular Material, and we will cover also in detail how to use the material tree component.\nWe will learn how to handle large amounts of data using virtual scrolling, and we will finish the course by learning how to create your own custom themes.\nTable of Contents\nThis course will go over the following topics:\nSet up Angular Material from scratch\nnavigation and containers, side menu, tab container\ndisplay data with cards, use some buttons\ncommonly used form controls and buttons - create course form\ninputs and text areas\nradio buttons, checkboxes, tooltips\ndate picker, date/time formatting\nDisplaying form errors\nAngular Data Table in depth\nEditable in-line table\nExpandable table rows\npagination and loading indicator\nOverlays, best practices to use them\nDrag and Drop\nResponsive design with mat-grid-list\nResponsive breakpoint observers\nTree component\nVirtual scrolling - handling large amounts of data\nCustom Themes\nSwitching themes at runtime\nWhat Will You Learn In this Course?\nAt the end of this course, you will feel very comfortable using the Angular Material library to build and style your applications\nYou will know how to add Angular Material to an existing Angular application, and you will be familiar with most of its more commonly used components, as well as with many of the most advanced components\nHave a look at the course free lessons below, and please enjoy the course",
      "target_audience": [
        "Developers looking to get in-depth knowledge on the Angular Material Library"
      ]
    },
    {
      "title": "The Complete JavaScript Course For Web Development Beginners",
      "url": "https://www.udemy.com/course/javascriptcourse/",
      "bio": "In this course students will learn the basics of JavaScript and beyond to help them in their web development needs",
      "objectives": [
        "Learn the basics of JavaScript",
        "Learn basic syntax to write JavaScript code",
        "Learn basic structure of JavaScript code",
        "Learn how to use JavaScript to validate forms",
        "Learn how to perform mathematical operations using JavaScript"
      ],
      "course_content": {
        "Introduction To JavaScript": [
          "Introduction & Course Benefits: Welcome To Our JavaScript Web Development Course",
          "Introduction To JavaScript",
          "Hello World Program",
          "Comments & Statements",
          "What Are Variables",
          "Different Types Of Variables",
          "Using Strings With Variables"
        ],
        "Functions In JavaScript": [
          "Using Functions In JavaScript Program",
          "Passing Parameters To Functions",
          "Using Multiple Parameters",
          "Calling Function From Another"
        ],
        "Operators In JavaScript": [
          "Assignment Operators",
          "Math Operators",
          "Global And Local Variables"
        ],
        "Control Flow In JavaScript": [
          "Using If Statement",
          "Using Else Statement",
          "Nesting",
          "Complex Conditions",
          "Using Switch"
        ],
        "Looping In JavaScript": [
          "Looping Part 1- For Loop.",
          "Looping Part 2- While Loop",
          "Looping Part 3- Do While Loop"
        ],
        "Event Handling & Objects": [
          "Event Handling",
          "Using Objects In JavaScript Program",
          "Creating Objects",
          "Initializing Objects",
          "Adding Methods To Objects"
        ],
        "Arrays In JavaScript": [
          "Arrays",
          "Creating Arrays By Other Methods",
          "Array Methods",
          "Join & Pop",
          "Reverse & Sort",
          "Adding Elements Of An Array",
          "Printing Array Elements",
          "What Are Associative Arrays"
        ],
        "Objects & Forms": [
          "Math Objects",
          "Date Objects",
          "How To Access Forms",
          "Accessing Form Elements",
          "Validating A Form"
        ],
        "JavaScript Examples": [
          "Making a simple interest calculator using JavaScript",
          "Using onmouseover to add cool effects to your website",
          "Background Color Selector Using JavaScript",
          "Creating A Progress Bar Using JavaScript"
        ],
        "Conclusion": [
          "Conclusion",
          "A Special Bonus Lecture Exclusively For The Students Enrolling In This Course!"
        ]
      },
      "requirements": [
        "Students should have basic knowledge of HTML",
        "Notes and Note Sheets",
        "A Computer with internet access",
        "An open mind to learning JavaScript"
      ],
      "description": "Welcome To The Complete JavaScript Course For Web Development Beginners!\n⇉ Watch the promo video to see How You Can Begin Using JavaScript Today!\n\n\n\n⇉ Join Over 950,000+ Students Who Have Enrolled In My Udemy Courses This Year!\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nThen this course is for you! Click \"Take This Course Now\" For Instant Life-Time Access!\n\n\n__________________________________________________________________________\nIn This Course You Will Learn About JavaScript!\nJavaScript is a high level, dynamic, untyped and interpreted programming language.\nIn this course we will learn how to embed JavaScript code into HTML code and how JavaScript can be used in order to create interactive websites. We will also learn what are comments and statements in JavaScript and what is their significance in writing JavaScript. In the duration of the course we will also go through the basic data types, which are used in JavaScript in order to store and manipulate the data.\n\nWe then study what are variables and will learn the syntax to create variables in JavaScript. Moving along we start with functions, what functions are, where they are used and how to create and call them. Next to that are operators, we study different types of operators in JavaScript, such as the mathematical operators and the assignment operators. After that we will study about the control flow and we study the conditional statements which are used to make decisions. Next in the course is nesting, we go through how a function can be nested in other.\n\nMoving along we learn how to repeat a set of JavaScript statements by using loops and the basic syntax for creating loops. In the next part we study about objects and the concept of object oriented programming in JavaScript. We will also learn what are properties and what are methods. After this we discuss arrays in depth, we learn how arrays can be created and manipulated in JavaScript, also we learn some methods related to arrays.\nFinally we learn how to access form and form elements in JavaScript,we also learn how JavaScript can be used to validate HTML forms\nHere is What You Will Learn In Each Section of our Course:\nIntroduction to JavaScript\nFunctions in JavaScript\nOperators in JavaScript\nControl Flow in JavaScript\nLooping in JavaScript\nEvent Handling & Objects\nArrays in JavaScript\nObjects & Forms\nSummary & Conclusion\nAnd So Much More!\n__________________________________________________________________________\n\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin to move towards Using and Mastering JavaScript!\nWhen I learn something new, I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But You Can Do It!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button at the top right now!\n...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys & Ashutosh Pawar",
      "target_audience": [
        "Beginner level programmers who want to learn JavaScript",
        "This course is not for advanced JavaScript students"
      ]
    },
    {
      "title": "ASP.NET Core 5.0 MVC The Beginners Guide To Becoming A Pro",
      "url": "https://www.udemy.com/course/aspnet-core-5-mvc/",
      "bio": "Learn ASP.NET Core 5 with MVC and Entity Framework Core- Build a Real World Appointment Application using .NET 5 & Azure",
      "objectives": [
        "Learn the fundamentals of ASP NET Core MVC 5",
        "Learn how ASP NET works under the hood",
        "Learn Forms and validations in ASP NET CORE MVC",
        "Learn ViewModels, ViewBag, ViewData etc.",
        "Learn How to Send Emails through your ASP NET Core Application",
        "Best Practices",
        "Learn through assignments",
        "Setup Database Connection Using Entity Framework Core"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "What you will learn in this course and how it is structured",
          "Your first task to become a successful developer..."
        ],
        "Setup and Project Overview": [
          "Intro",
          "Tools required to get started",
          ".Net Core Theory",
          "Creating an ASP.NET Core Project",
          "Project File and Program File",
          "Dependency injection",
          "Startup File, .Net Core Pipeline and Middleware",
          "Routing in MVC and Endpoints",
          "Launchsettings AppSettings and WWWRoot",
          "What exactly is MVC",
          "Shared Folder as well as VieImports and ViewStart"
        ],
        "Controllers and Routing": [
          "Intro",
          "Creating Our Own Controller",
          "Creating Our Own View",
          "Routing Explained",
          "Conventional Routing",
          "Attribute Based Routing",
          "Controller Actions",
          "Passing Values to Actions",
          "Action Return Types"
        ],
        "Model, Database and CRUD": [
          "Intro",
          "Creating Our First Model",
          "Code First Approach",
          "Setting Up The Connectionstring",
          "Setting up The DbContext as well as EntityFrameWork",
          "Setting Up the DB Context in Our Startup File",
          "Push Our Items To The Database, Micrations and Checking the DB",
          "Add A Controller For Our Borrowed Items",
          "Passing Data To The Controller",
          "Displaying our Data using HTML and Bootstrap",
          "Add new Columns To Database",
          "Create Page and Button",
          "Design the Create Item Page",
          "Creating The Entry In The Database",
          "Challenge - Expenses",
          "Challenge - Expenses - Solution",
          "Server Side and Cliend Side Validation",
          "Delete Entry in The Database",
          "Update Entry in The Database"
        ],
        "Foreign Keys, Viebags, Viewdata and Viewmodels": [
          "Intro",
          "Expense Category Challenge",
          "Expense Category Challenge - Solution",
          "Adding a Foreign Key and Table Relationship",
          "A Problem With Foreign Keys",
          "Viewbag and Passing Data From A Controller To A View",
          "ViewBag And ViewData",
          "ViewModels and Strongly Typed Views",
          "ViewModels in Action",
          "Displaying The Types And Getting Their Details Via Include",
          "Update Challenge and Solution"
        ],
        "Appointment Scheduler - Introduction": [
          "Project Overview",
          "Project Demo",
          "GitHub Code",
          "Create Project",
          "Add Connection String in AppSettings",
          "Setup ApplicationDbContext",
          "Project demo"
        ],
        "Identity Management": [
          "Add Identity Tables",
          "Add Login View Model",
          "Add Styling and JS",
          "Layout Changes",
          "Login View",
          "Register View Model",
          "Helper Class",
          "Register View",
          "Client Side Validations",
          "Partial View",
          "Tag Helper",
          "Configure Application User to Identity",
          "Register Post Action Method",
          "Create First User",
          "Sign In Navbar",
          "SignIn SignUp Errors and Logoff",
          "SignIn SignUp Logoff Demo"
        ],
        "Appointment API and Setup": [
          "Add missing Js",
          "Appointment Setup",
          "Appointment Service Get Doctors Part 1",
          "Appointment Service Get Doctors Part 2",
          "Display Doctor DropDown",
          "Show Calendar",
          "Show modal on calendar selection",
          "Modal for Add_Edit Appointment Part 1",
          "Modal for Add_Edit Appointment Part 2",
          "Update Full Calendar",
          "Api Endpoint and Common Response",
          "Appointment and View Model",
          "Create Appointment Service",
          "Create Appointment API",
          "Build data for API call",
          "Add first appointment",
          "Validations"
        ],
        "Appointment Management": [
          "Retieve Doctor and Patients appointment in Appointment Service",
          "Get Calendar Data API",
          "Display Booked Appointments",
          "Get Appointment Details API",
          "Event Click in Full Calendar",
          "View Appointment Details",
          "Change Doctor Event",
          "Get Calendar Date",
          "Calendar values formatting",
          "Format content based on Role",
          "Display Patient Name and Status"
        ],
        "Advance Features": [
          "Confirm and Delete Appointment Endpoint",
          "Confirm and Delete Appointment Demo",
          "Toggle Buttons",
          "Bug Fixes",
          "Session in .NET Core",
          "Enhancing Security",
          "TempData",
          "MailJet Email Setup",
          "Email Demo",
          "Update Appointment",
          "Authorization in .NET Core"
        ]
      },
      "requirements": [
        "6 months of experience with C#",
        "Experience using SQL",
        "SQL Server 2017+",
        "Visual Studio 2019"
      ],
      "description": "The course comes with 100% support for any questions or errors with the course content/project.\nIn this ASP.NET Core 5 Beginner course, you will learn to build Web Apps using the MVC architecture. The course will take you from no experience with ASP.NET to building a functional website.\nThis course is for Anyone with experience in C# and SQL who wants to take the next step and learn to build applications in ASP.NET Core with MVC as well as by using the Entity Framework Core.\nIf you want to finally understand what the fuzz is all about and want to see how to quickly create functional, clean, and efficient websites and get a great entry into ASP.NET Core MVC development, then this is the right course for you.\nWe will be building a real-world appointment website using authentication, user roles, etc.\nWe will be setting up a great foundation with all the basic concepts of ASP.NET Core 5\nThe focus of this course is not just on teaching you ASP.NET Core, its main focus is getting you ready for real-world projects.\nWe have divided the course into two parts.\nIn part 1 you will learn the fundamentals of ASP.NET, CRUD Operations, and the Entity Framework Core.\nThis includes:\nIntroduction to Model View Controller\nUnderstanding the structure of an ASP.NET Core Project by understanding what each file does\nUnderstanding Routing and Actions\nPassing values from one screen to another\nSetting up the Database DB Context as well as Entity Framework Core\nApplying CRUD operations\nand much more\n\n\nIn the second part, you will build a real-world appointment Applications. This will teach you to become a real ASP.NET developer.\n\n\nYou have a 30 Day Money-back Guarantee, so in case you realize, this isn't the right course for you, you don't take any risk and can get your money back.\nThe course comes with challenges and real-world applications.\nSo don't hesitate and enroll in the only course that you will need, to take you from beginner to a confident developer of real-world projects.",
      "target_audience": [
        "Anyone who needs to learn ASP NET for their job",
        "Anyone who wants to build a web app using ASP NET"
      ]
    },
    {
      "title": "Web Development Masterclass - Online Certification Course",
      "url": "https://www.udemy.com/course/web-development-masterclass-complete-certificate-course/",
      "bio": "Cloud Computing | Web Apps | Linux | Web Servers | DBMS | LAMP Stack | HTML | CSS | JavaScript | PHP | + More",
      "objectives": [
        "Understand the essentials of Local and Wide Area Networks",
        "Setup a basic network.",
        "Register a domain name with Domain Privacy",
        "Forward a domain, renew and administer a domain",
        "Configure Nameservers and DNS Zone Files",
        "Create and Configure a Testing server on a Local Windows or MAC System.",
        "Configure a Production web server on popular cloud hosting platforms.",
        "Create disk backups and install disk images on a virtual server",
        "Setup Ubuntu on a Virtual Machine",
        "Install and configure WAMP for Windows",
        "Install and configure MAMP for MAC",
        "Administer a remote server using PuTTY or Terminal",
        "Proficiently navigate the Linode Virtual Server Dashboard",
        "Configure Security Settings on a Virtual Ubuntu Server",
        "Scale a virtual server up and down depending on needs",
        "Install LAMP Stack (Linux, Apache, MySQL, PHP, PhpMyAdmin) on a local and remote server",
        "Setup users and access privileges on an Ubuntu server",
        "Upload files using FileZilla FTP Client",
        "Proficiently Program in HTML, CSS, JavaScript, jQuery, Bootstrap, PHP, and AJAX",
        "Create mobile responsive web applications using Bootstrap",
        "Create unique animated objects using jQuery",
        "Create and administer MySQL databases using PhpMyAdmin",
        "Create Web-based Login Authentication using PHP and MySQL",
        "Create the famous \"Google Search Suggest\" Feature using AJAX and PHP",
        "Create server and client side validation algorithms for web forms.",
        "Use Google Apps for Work to setup a customized business email address"
      ],
      "course_content": {
        "Introduction": [
          "Course Learning Objectives"
        ],
        "How the Internet Works": [
          "The Internet Overview",
          "The HTTP Protocol",
          "The HTTPS Protocol",
          "The SMTP Protocol and Local Mail Delivery",
          "Outbound Mail Delivery",
          "Network Basics - LAN and WAN",
          "Network Ports and Firewalls"
        ],
        "The Web Development Process": [
          "Web Development Process Overview"
        ],
        "Planning a Website": [
          "Web Application Planning Overview",
          "Quiz 1"
        ],
        "Web Hosting and System Requirements": [
          "Web Hosting Packages Overview",
          "Shared Hosting",
          "Dedicated Hosting",
          "VPS Hosting",
          "Cloud Hosting and Case Study"
        ],
        "Domain Names": [
          "Introduction to Domain Names",
          "Domain Name Registrars",
          "Domain Registration",
          "Registration and Privacy Protection",
          "Control Panel Sign-In",
          "Auto-Renewal and Domain Lock",
          "Domain Forwarding",
          "Nameservers",
          "Update Registration Information",
          "Quiz 2"
        ],
        "Testing Environment": [
          "Introduction to Testing Servers",
          "Installing WampServer - WAMP",
          "Installing MampServer - MAMP",
          "WampServer Menu",
          "Localhost File Test"
        ],
        "Introduction to Cloud Computing": [
          "History of Linode",
          "Intro to Cloud Computing",
          "Benefits of Cloud Computing",
          "Cloud Computing Service Models"
        ],
        "Cloud Computing Service Models": [
          "Infrastructure as a Service (IaaS)",
          "Platform as a Service (PaaS)",
          "Software as a Service (SaaS)",
          "IaaS vs PaaS vs SaaS"
        ],
        "Cloud Server Deployment on Linode": [
          "Linode Account Setup",
          "Exploring the Linode Cloud Manager",
          "Enabling TFA on Linode",
          "Deploying a Linode Virtual Instance",
          "Exploring the Linode Instance Dashboard",
          "Remote Server Admin via SSH",
          "Password vs SSH Key Authentication",
          "SSH Key Pair Authentication on Windows",
          "SSH Key Pair Authentication on MacOS",
          "Connecting with LISH",
          "Adding SSH Public Keys to Linode"
        ]
      },
      "requirements": [
        "Students will require an internet connection and PC or MAC Computer System.",
        "Please note that all required downloads are free.",
        "Text Editor such as Text Wrangler (MAC) or Notepad++ (Windows)",
        "FileZilla FTP Client (Downloaded in Section 9).",
        "PuTTY and PuTTY Key GEN for Windows users (Downloaded in Section 8).",
        "WAMP Server for Windows Users and MAMP Server for MAC Users (Downloaded in Section 7).",
        "Tight VNC Viewer for Windows Users and RealVNC Viewer for MAC Users (Downloaded in Section 8)."
      ],
      "description": "This course offers a comprehensive look into the entire web development process - from local server configuration using WAMP and MAMP (Apache, MySQL, PHP) to production deployment using the latest web technologies including: LAMP Stack (Linux, Apache, PHP and MySQL) for Ubuntu, HTML5, CSS, Bootstrap, JavaScript, jQuery, XML, and AJAX.\nThe content is ideal for those interested in working as a web developer, launching a web application, or devoted enthusiasts. The concepts explored in this course are suitable for individuals of all skill levels. Each module starts with the fundamental concepts and gradually transitions into more advanced material.\n\nWhat makes this course unique?\nThis course is specifically intended to teach students to develop web applications using the most efficient methods and the latest web technologies. Through live demonstrations we teach the importance of using scalable cloud hosting infrastructures during the development process. This includes small informational websites of only a few pages to advanced 'big data' style, dynamic web applications. We go through several live examples of web development and Linux based server configurations on popular Cloud hosting providers such as Linode.\n\nSection 1 & 2 (Introduction, How the Internet Works)\nThe course begins with with an overview of learning objectives. We then explore how the internet works, including the composition and transmission of data packets over both local and wide-area Networks. Next we take a look at the HTTP and HTTPS protocols as applicable to client and server side communications - including DNS Lookups. This section will also teach students how email exchange works over SMTP and IMAP. The role of Network Ports and Firewalls are also introduced.\n\nSection 3, 4: (The Web Development Process, Planning a Website)\nStudents will gain an understanding of all the steps involved in the web development process.\n\nSection 5: Web Hosting and System Requirements\nWe conduct an in-depth case analysis of web hosting solutions including: Shared, Virtual Private, Dedicated and Cloud Hosting.\nWe provide an overview of various packages offered by different web hosting companies and weigh the pros and cons of each one.\nStudents are also introduced to the importance of web server scalability and the advantages of cloud hosting over traditional hosting services. We also examine the infrastructure requirements of popular, resource intensive applications such as Netflix and Facebook to emphasize the importance of avoiding costly mistakes in the initial stages of development.\n\nSection 6: Domain Names\nWe provide an overview of the domain name registration process. This includes the role of registrars and TLD (Top Level Domain) administration by ICANN. ccTLD's (Country Code Top Level Domains) are also explored.\nStudents gain hands-on experience with the registration process using popular domain registrars. We provide a comparison of different registrars and register a sample domain name using GoDaddy. Other topics of discussion include: domain name privacy and administration, auto-renewal, domain forwarding, and name server assignment.\n\nSection 7: Testing Environment\nStudents are introduced to configuring a local testing server on a PC or MAC system using WAMP (Windows) or MAMP (MAC). The lessons provide a detailed guide on installation of the packages and an overview of the interface.\n\nSection 8: Production Environment\nStudents acquire the skills needed to optimally configure a live production environment for securely hosting web applications on a cloud server (Linode). The section starts with an overview of different cloud hosting providers such as Amazon Web Services, Microsoft Azure, Linode and Digital Ocean.\nWe then provide a live demonstration of server setup using Linode. This includes deployment of Ubuntu and installation of LAMP Stack (Linux) on the Linode Server using remote access consoles such as Terminal (MAC) and PuTTY for Windows.\nStudents gain an in-depth knowledge of server maintenance, file and directory commands. We also explore SSH Authentication for multiple users and file permissions to reduce security vulnerabilities. Remote Desktop connections for server administration are taught, using Tight VNC (Windows) and RealVNC (MAC).\nA thorough overview of the Linode server management console is conducted, to show students how to scale servers, change root passwords, manage the DNS Zone file and create back-ups.\n\nSection 9: FTP Setup\nStudents learn the role of an FTP (File Transfer Protocol) client to connect to a remote server, through a local machine. We provide a live demonstration on file upload using FileZilla and explore the FileZilla Interface for connection management.\n\nSection 10: HTML Development\nThis section explores HTML. HTML is a key fundamental building block when learning to develop websites. Students initially learn the basics of HTML page structure and gradually transition into working with spacing, text formatting, lists, images, videos, links, anchors, tables, forms and much more. We include several projects, where students are shown first-hand, how to develop and code html web pages from scratch.\n\nSection 11: CSS Development\nStudents learn to use CSS to create stylish, responsive web page layouts. We start by discussing the parts and types of CSS rules, followed by CSS classes, DIVS, and ID's. Students gain significant exposure to various formatting options, including margins, padding, font properties, backgrounds, transparency, positioning, link styling and CSS tables. This section includes a hands-on web development project where students utilize the concepts explored in the lesson.\n\nSection 12: Document Object Model (DOM)\nAs a precursor to JavaScript, we explore the DOM (Document Object Model). We explain its usage and application in manipulating HTML and CSS elements.\n\nSection 13: JavaScript Development\nWe introduce students to JavaScript coding to add interactivity to static HTML and CSS pages. The section starts with discussing JavaScript placement, using both internal and external scripts. We then take a look at JavaScript output, variable declarations, arithmetic operators, objects, strings, math functions, arrays, conditional statements, loops, functions and events. Students also go through two hands-on projects that will further solidify their knowledge of the concepts explored in the lessons.\n\nSection 14: JQuery Library\nWe explore the jQuery library and many of its unique features, used to create stunning, animated web pages. We start with the basics, from embedding jQuery into web pages to working with Selectors. Students then explore working with events, toggling, fading, sliding, and other forms of animation. The lessons also teach students how to work with callbacks, chaining, dragables, accordion menus and many other functions.\n\nSection 15: Bootstrap Framework\nStudents are taught to use the Bootstrap framework for responsive, mobile-first - front-end development. As one of the leading open-source development libraries, Bootstrap is an essential part of the developers coding arsenal. The section begins with teaching students how to include essential Bootstrap files into web pages. It then explores the Bootstrap Grid system and popular layout strategies for optimal cross-device and cross-browser compatibility.\nStudents gain exposure to just about every Bootstrap component, from typography, tables and images, to jumbotrons, wells, alerts, buttons, glyphicons and progress bars. The section includes several hands-on exercises that will walk students through the process of creating stunning layouts, complete with modals, carousels, popovers, drop-down menus, forms and much more.\n\nSection 16: PHP Development\nStudents gain exposure to creating dynamic web applications and functionality using PHP. We start with the basics, including variable declaration and data output. The lessons then transition into working with objects, conditional statements, loops, functions, arrays and form validation.\n\nSection 17: MySQL Database Integration\nStudents learn to unleash the true power of web application development with MySQL database integration. We start with the basics from database and table creation, to user management. Next we explore the execution of commonly used SQL statements for database modification and administration. Students are also taught how to create database connections and execute SQL statements from PHP scripts.\n\nSection 18, 19 (XML, AJAX, & Development)\nWe explore XML and AJAX integration to create dynamic content, without page refresh. The lessons cover several hands-on training exercises that will encompass many of the exciting functions AJAX offers. Students will build a website complete with database integration, registration forms with server-side validation, user authentication, and a SMTP-based contact submit form.\n\nSection 20: Google Apps for Work\nStudents learn to create a customized business email address using Google Apps for Work. Email administration is also explored, along with alias creation.",
      "target_audience": [
        "No prerequisite knowledge required",
        "Students interested in a career in web development",
        "Students interesting in starting a web based business",
        "Students who want to transition from basic shared, vps or dedicated hosting packages to sophisticated cloud hosting solutions",
        "Students wanting to update or learn new programming skills using the latest web scripting languages",
        "Web Development enthusiasts"
      ]
    },
    {
      "title": "MERN From Scratch 2023 | eCommerce Platform",
      "url": "https://www.udemy.com/course/mern-ecommerce/",
      "bio": "JUST UPDATED! Build an eCommerce platform from the ground up with React, Redux Toolkit, Express & MongoDB",
      "objectives": [
        "Build a custom eCommerce platform with React, Redux, Node, Express & MongoDB",
        "An actual real-world project built in a linear and progressive manner",
        "JWT Authentication Stored In An HTTP-Only Cookie",
        "Full featured shopping cart with PayPal & credit/debit payments",
        "Admin area to manage customers, products & orders",
        "Product Rating & Review System",
        "Product Search, Carousel, Pagination & More"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "Course Project Intro",
          "Course Code Repo",
          "Getting Setup"
        ],
        "Starting The Front End": [
          "React Setup & Git Initialize",
          "Header & Footer Componenets",
          "Custom Bootstrap Theme",
          "List Products",
          "Implement React Router",
          "Rating Component",
          "Product Details Page"
        ],
        "Serving & Fetching Data": [
          "Full Stack Workflow & Explanation",
          "Express Server & Initial Product Routes",
          "Nodemon & Concurrently",
          "Environment Variables",
          "Fetch Products"
        ],
        "Starting MongoDB & Mongoose": [
          "MongoDB Atlas Setup",
          "MongoDB Compass Setup",
          "Connect With Mongoose",
          "Modeling Our Data",
          "Prepare Sample Data",
          "Seeding Sample Data",
          "Getting Started With Postman",
          "Get Products From Database",
          "Custom Error Middleware",
          "Product Controller"
        ],
        "Redux Toolkit Setup & State Management": [
          "Redux & State Overview",
          "Redux Store & API Slice",
          "Products API Slice & Get Products Endpoint",
          "Get Product Details Endpoint Challenge",
          "Loader & Message Components"
        ],
        "Shopping Cart Functionality": [
          "Cart Slice & Reducer",
          "Add To Cart Function",
          "Qty & Add To Cart Handler",
          "Cart Utils File",
          "Item Count In Header",
          "Cart Screen",
          "Remove From Cart"
        ],
        "Backend Authentication": [
          "User Routes & Controller",
          "User Email & Password Validation",
          "How Do JSON Web Tokens Work?",
          "JWT HTTP Only Cookie",
          "Auth Middleware & Endpoint",
          "Logout User & Clear Cookie",
          "User Register Endpoint & Encryption",
          "User Profile Endpoints"
        ],
        "Frontend Authentication": [
          "Auth & User API Slice",
          "Login Screen",
          "Login Functionality",
          "User Logout",
          "User Registration"
        ],
        "Checkout Process - Part 1": [
          "Shipping Screen",
          "Private Routes",
          "Checkout Steps Component",
          "Payment Method",
          "Order Routes & Controller",
          "Create & Get Orders",
          "Order API Slice & Start Order Screen",
          "Creating An Order"
        ],
        "Checkout Process - Part 2": [
          "Order Page",
          "PayPal Setup & Order Paid",
          "React -PayPal Integration",
          "PayPal Buttons",
          "User Profile & Update",
          "Display Order History"
        ]
      },
      "requirements": [
        "You should know modern JS fundamentals and the basics of React"
      ],
      "description": "This is a single-project course, meaning that we spend almost 13 hours building an eCommerce shop using the MERN stack along with Redux Toolkit. We start from absolute scratch with an empty folder. You will learn everything from setting up a server, modeling data, creating a MongoDB database, seeding data, creating the UI, managing state with Redux, authentication with JWT and much much more.\n\n\nThe ProShop platform that we will be building will include the following features:\n\n\nFull-featured shopping cart with quantity\nProduct reviews and ratings\nTop products carousel\nProduct pagination\nProduct search feature\nUser profile with orders\nAdmin product management\nAdmin user management\nAdmin Order details page\nMark orders as delivered option\nCheckout process (shipping, payment method, etc)\nPayPal / credit card integration\nCustom database seeder script\n\n\nThis is not a documentation-type course. This is a \"jump in and get your hands dirty\" course where by the end, you have an actual real-world project to use and put on your portfolio. You will learn the following by completing this course..\n\n\nReact with functional components & hooks\nReact router\nReact-Bootstrap UI library\nHow to structure components\nComponent level state & props\nManaging global state with Redux (Actions & Reducers)\nUsing Redux state in components (useDispatch & useSelector)\nCreating an extensive back end with Express\nWorking with a MongoDB database and the Mongoose ODM\nJWT authentication (JSON web tokens) with HTTP-Only cookie\nCreating custom authentication middleware\nCustom error handler\nIntegrating the PayPal API\nEnvironment variables\nProject deployment\nMuch more!",
      "target_audience": [
        "Full stack web developers that want to learn MERN by building a real-world app"
      ]
    },
    {
      "title": "Make an E-Commerce Website with Blazor WebAssembly in .NET 6",
      "url": "https://www.udemy.com/course/blazor-ecommerce/",
      "bio": "Learn how to build an E-Commerce Website with Blazor WebAssembly, a Web API, Entity Framework Core & SQL Server Express.",
      "objectives": [
        "Build a full stack Blazor WebAssembly application by the example of an E-Commerce Website",
        "Create a Walking Skeleton with .NET, Blazor WebAssembly, a Web API, Entity Framework Core & SQL Server right at the beginning",
        "Implement Best Practices with Generics, Data-Transfer-Objects (DTOs) and the Repository Pattern",
        "Build several features of an E-Commerce App, like Search, Pagination, Featured Products, a Cart (local & database), Orders and many more",
        "Implement Authentication with JSON Web Tokens (JWT)",
        "Use Role-Based Authorization for Administrators & Customers",
        "Use Code-First Migration with Entity Framework Core & SQL Server",
        "Implement Payment with Stripe Checkout providing Credit Card, Apple Pay & Google Pay",
        "Create a Custom Layout for your Blazor WebAssembly Application",
        "Implement Administration Features with all CRUD operations to Create, Read, Update & Delete your Products"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Install .NET & Visual Studio",
          "GitHub Repository"
        ],
        "Full Stack Foundations - Building a Walking Skeleton": [
          "Introduction",
          "Create the Blazor WebAssembly Project",
          "Solution Overview",
          "Debug the Project",
          "Trust the Dev Certificate",
          "Hot Reload with .NET 6 & Visual Studio 2022",
          "Add the Product Model",
          "Your First Component",
          "Images don't show up? Here's why.",
          "CSS Isolation",
          "Fixing Bootstrap from .NET 5 / Bootstrap 5 CSS Fix",
          "Your First Web API Controller",
          "Call the Web API from the Client",
          "Add SwaggerUI",
          "Install SQL Server",
          "Add the ConnectionString",
          "Install Entity Framework",
          "Install Packages for Entity Framework Core, Code-First Migration & SQL Server",
          "Add the DataContext",
          "Register the DbContext & Configure SqlServer",
          "Your First Migration with Entity Framework Core",
          "Seed Data",
          "Get Products from the Database",
          "Create the GitHub Repository",
          "Summary"
        ],
        "Adding & Using Best Practices": [
          "Introduction",
          "Implement a Service Response with Generics",
          "Using Services with Dependency Injection",
          "Add the ProductService to the Client",
          "Use the ProductService in the ProductList Component",
          "Summary"
        ],
        "It's all about Products - Blazor WebAssembly in Action": [
          "Introduction",
          "Show Product Details with Page Parameters",
          "Get a Single Product from the Server",
          "Get a Single Product on the Client",
          "Little CSS Fix",
          "Introducing Categories",
          "Add Category Seeding & Migration",
          "Seed More Products",
          "Get all Categories with a new Service & Controller",
          "Add a CategoryService on the Client",
          "Display Categories in the NavMenu",
          "Get Products by Category from the Server",
          "Get Products by Category on the Client",
          "Introducing Product Variants",
          "Add a Composite Primary Key & More Seeding",
          "Add Product Variants Migration",
          "Include Product Variants & Types in the Product Service",
          "Display the Price in the ProductList Component",
          "Display the Price in the ProductDetails Component",
          "Use a Select Box for the Product Variant",
          "Introducing a Product Search Feature",
          "Search a Product on the Server",
          "Get Product Search Suggestions",
          "Add Search Methods to the Client",
          "Implement a Search via URL in the Index.razor Component",
          "Implement the Search Component",
          "Use a Custom Layout",
          "Add a Home Button",
          "Introducing Featured Products",
          "Load Featured Products",
          "Show Featured Products with a new Component",
          "Introducing Pagination & Data-Transfer-Objects (DTOs)",
          "Implement Product Search Pagination on the Server",
          "Add Pagination to the ProductService on the Client",
          "Add Pagination to the Components",
          "Introducing the Cart with the Local Storage",
          "Create a Cart Counter",
          "Add a CartItem Class",
          "Implement a CartService on the Client",
          "Implement “Add to Cart” Button in ProductDetails Component",
          "Show the Number of Items in the Cart Counter",
          "Turn Cart Items into Products on the Server",
          "Get the Cart Products on the Client",
          "Implement the Cart Page",
          "Remove an Item from the Cart",
          "Add the Quantity to Cart Models",
          "Modify the Cart Services",
          "Add Option to Update the Quantity",
          "Update the Quantity with an Input Number Field",
          "Summary"
        ],
        "Let's add Users - Authentication with JSON Web Tokens": [
          "Introduction",
          "Add the UserRegister Model",
          "Create the User Registration Page (EditForm without Validation)",
          "Implement a User Menu Button",
          "Add Data Annotations for Validations",
          "Add Validation to the Registration Form",
          "Use a Validation Message instead of the Validation Summary",
          "Add a User Model for the Database",
          "Add an Authentication Service on the Server",
          "Check if a User already exists",
          "Implement the User Registration on the Server",
          "Add the AuthController",
          "Create the AuthService on the Client",
          "Implement the Registration on the Client",
          "Use the AuthService on the Registration Page",
          "Display a Success Message after Registration",
          "Add a UserLogin Model",
          "Add the Login Page",
          "Prepare the Login on the Server",
          "Verify the User’s Password",
          "Create the JSON Web Token",
          "Implement the Login on the Client",
          "Implement a Custom AuthenticationStateProvider",
          "Expose the Authentication State",
          "Build a Logout Option with the AuthorizeView Component",
          "Add a Return Url to the Login",
          "Create a User Profile Page",
          "Utilize the [Authorize] Attribute on the Client",
          "Add a UserChangePassword Model",
          "Change the Password on the Server",
          "Add Authentication Middleware",
          "Implement Changing the Password in the AuthController",
          "Implement Changing the Password on the Client",
          "Change the User’s Password on the Profile Page",
          "Summary"
        ],
        "Let's buy some Products - Cart & Orders": [
          "Introduction",
          "Change the CartItem & Add it to the Database",
          "Prepare the Cart for Authenticated Users",
          "Store Cart Items in the Database",
          "Use the HttpContextAccessor to Access the User in the Services",
          "Get the Number of Cart Items from the Server",
          "Implement a Method to Check if the Current User is Authenticated",
          "Get the Number of Cart Items on the Client",
          "Handle the Number of Cart Items on Login and Logout",
          "Get the Stored Cart Items from the Server",
          "Refactor the CartService on the Client",
          "Add a CartItem to the Database",
          "Update the CartItem Quantity in the Database",
          "Remove a CartItem in the Database",
          "Prepare the Order Implementations (Models, Migration & a Composite Key)",
          "Implement Placing an Order on the Server",
          "Implement Placing an Order on the Client",
          "Empty the Cart after Placing an Order",
          "Say “Thank You” after Placing an Order",
          "Move GetUserId() to the AuthService",
          "Get Orders from the Server",
          "Implement Receiving Order on the Client",
          "Get Order Details from the Server",
          "Show Order Details on the Client",
          "Move IsUserAuthenticated() to the AuthService on the Client",
          "Summary"
        ],
        "Ka-Ching! - Payment with Stripe Checkout": [
          "Introduction & Get a Stripe Account",
          "Stripe Dashboard",
          "Install Stripe.net in the Server Project with NuGet",
          "Redirect the User to a Stripe Checkout Page",
          "Create a Checkout Session on the Server",
          "Create a Success Page & Place an Order",
          "Fulfill an Order with WebHooks & Store the Order in our Database",
          "Enable a Shipping Address in Stripe Checkout",
          "Summary"
        ],
        "Where are you from? - Add a Delivery Address": [
          "Add Address Model & New Migration",
          "Implement the Address Logic on the Server",
          "Implement the Address Logic on the Client",
          "Create a Shared AddressForm component",
          "Use the Address Form in the Cart & Profile Components"
        ],
        "We need more stuff! - Admin Dashboard": [
          "Introduction",
          "Add a Role to the User Model and to the Token in the AuthService",
          "Create the Admin Menu Component & a Categories Admin Page",
          "Add More Properties to the Category Model",
          "Implement all CRUD Operations for Categories on the Server",
          "Implement all Client-Side CRUD Operations for the Categories",
          "Implement the Administration Page for Categories",
          "Re-render the Menu after changing the Categories",
          "Load the Product Types from the Server for Administration",
          "Add ProductTypeService Implementations to the Client",
          "Create the ProductType Administration Page",
          "Add & Update Product Types on the Server",
          "Add & Update Product Types on the Client",
          "Finish the ProductType Administration Page",
          "Change the Product & ProductVariant Model for Administrations",
          "Use the new flags in the ProductService Methods",
          "Load the Products for Administration",
          "Get the Products for Administration on the Client",
          "Create the Administration Page for Products",
          "Add an Edit & Create Button for Products",
          "Get a Single Product for Administrators",
          "Create, Update & Delete Products on the Server",
          "Create, Update & Delete Products on the Client",
          "Implement the EditProduct Component",
          "Test (and fix) the Create & Update Implementations",
          "Implement Deleting a Product on the EditProduct Page",
          "Summary",
          "Closing Words"
        ],
        "Bonus: Upload Images & MudBlazor Introduction": [
          "Introduction",
          "Preparations",
          "Add the Image Model",
          "Add a New Migration",
          "Create a New Product with Multiple Images",
          "Include Multiple Images",
          "Update Product Images & Remove Images",
          "Install MudBlazor",
          "Display Images with MudBlazor",
          "Show an Image Carousel on the Product Details Page",
          "Use the First Image of an Image List in Products, ProductList & FeaturedProducts"
        ]
      },
      "requirements": [
        "Experience with C#, HTML & CSS is preferable",
        "Experience with Blazor WebAssembly is not a must, but helps",
        "All frameworks and tools used in this course are available for free and we'll install everything together along the way"
      ],
      "description": "Welcome to the Blazor WebAssembly E-Commerce Course!\n\n\nIn this online course, we’re going to build an e-commerce web application with .NET 6 & Blazor WebAssembly.\nWe’ll cover the complete stack, meaning Blazor for the client, a Web API for the back end web service, and Entity Framework Core with SQL Server Express for the database.\n\n\nThe course starts with a walking skeleton. This means, right at the beginning of this course, and in just a few hours you learn how to build a running full-stack web application with all the mentioned frameworks and technologies.\nSo, after this section, you won’t use any mock data, for instance. You will already make calls to the web service, grab data from the SQL Server and return the results back to the Blazor WebAssembly client.\n\n\nOn top of that, we will introduce best practices to that walking skeleton. For instance, we don’t want to use fat controllers. Instead, we’ll use the repository pattern together with dependency injection.\nAfter that, we build a huge part of the e-commerce application. This section is all about the products your users can buy in your shop, it’s about categories, product variants, a search bar, pagination, a basic cart, and so on.\nWith all these implementations you learn lots of features of Blazor WebAssembly, together with the Web API and also relationships between entities and how to manage them with Entity Framework Core and SQL Server.\n\n\nAfter that, we dive into authentication with JSON web tokens.\nYou will learn how to register users, log them in and create JSON web tokens (JWT) to authenticate your users, set the token in the default HTTP request header, utilize the famous [Authorize] attribute to secure your Web API, and add a page for the users' profile so that they can change their password, for instance.\n\n\nThe next section is all about the cart and orders. Until this point, you’ve already implemented a cart, but it only works offline. So now it’s time to store the products of the cart in the database and also implement the final order and an overview of the order history.\n\n\nBut one thing will still be missing, and that’s an option to checkout and pay for your order. We cover that with the next section and use Stripe to do that. This means, your users can pay with a credit card, Google Pay and Apple Pay. Additionally, we’ll continue with a smaller section where we implement the option to add a delivery address.\n\n\nAnd after that, it’s time for the big administration dashboard. Everything you’ve learned so far comes together in this section.\nWe utilize lots of features of Blazor WebAssembly, we build several CRUD operations for our entities - meaning an administrator should be able to create, read, update and delete all products, categories, and product variants - and to know if the user is allowed to do all that, we introduce role-based authorization.\nAs you can see, there’s a lot to learn!\n\n\nHere's an overview of what you will learn in this course:\nIntroduction\n- Install the .NET 6 Framework & Visual Studio 2022\n- Get the source code from GitHub\nFull Stack Foundations - Building a Walking Skeleton\n- Create a Blazor WebAssembly ASP.NET Core Hosted Project\n- Debug your project\n- Learn about the new Hot Reload feature of .NET 6 & Visual Studio 2022\n- Create Razor Components & utilize CSS Isolation\n- Implement a Web API Controller & test it with SwaggerUI\n- Install & use SQL Server Express and Entity Framework Core 6\n- Utilize Code-First Migrations with EF Core 6 & Seed Data programmatically\n- Create a Git repository and push your code to GitHub\nAdding & Using Best Practices\n- Implement a Service Response with Generics\n- Use the Repository Pattern and Dependency Injection\n- Create Services for the client and the service\nIt's all about Products - Blazor WebAssembly in Action\n- Add more models & entities to your web application like categories, variants, and more\n- Use several features of EF Core 6 like composite primary keys, more migrations & relationships\n- Utilize several built-in components of Blazor WebAssembly\n- Realize a search feature & pagination\n- Implement a custom layout\n- Add a cart using the local storage to your application\nLet's add Users - Authentication with JSON Web Tokens\n- Implement user registration & login\n- Use data annotations & validation\n- Introduce the user model\n- Add token authentication with JSON Web Tokens (JWT)\n- Implement a custom AuthenticationStateProvider\n- Add a return URL to the login\n- Utilize the [Authorize] attribute\nLet's buy some Products - Cart & Orders\n- Store the cart of a user in the database\n- Use the HttpContextAccessor to access the user in the services\n- Store the orders in the database\n- View an order history\n- Utilize the authentication state of the user\nKa-Ching! - Payment with Stripe Checkout\n- Introduce Stripe\n- Use Stripe Checkout for payments\n- Fulfill an Order with WebHooks\n- Enable a shipping address in Stripe Checkout\nWhere are you from? - Add a Delivery Address\n- Add an address model with a new migration\n- Create a shared component for the cart and the user profile page\nWe need more stuff! - Admin Dashboard\n- Introduce role-based authorization on the client & the server\n- Extend your models\n- Create several administration pages\n- Implement CRUD operations (create, read, update, delete) for your entities\n\n\nIf you don’t know me yet from YouTube or my other courses on Udemy, my name is Patrick God, I’m going to be your instructor for this course. I’m a web developer for over a decade now, I have worked for big corporations and small teams, as an employee and a contractor and I just love to see the way Microsoft is going with .NET & Blazor and how important these technologies get day by day.\nSo far, I’ve created 10 courses on Udemy about .NET (Core), Blazor WebAssembly, single-page applications, Angular, and DevOps - with a total of more than 60.000 students and countless 5-Star reviews.\n\n\nIf you’re still not sure if this course is right for you, there's a 30-day money-back guarantee. So, feel free to check it out and get your money back if it’s just not for you. No questions asked.\n\n\nApart from that, you can always ask questions in the Q&A sections that the community (including me) is happy to answer and you also get the complete source code, if there happens to be a problem with that.\n\n\nAre you ready?\n\n\nI’m looking forward to seeing you in the course!",
      "target_audience": [
        "C# and .NET developers who want to improve their skills and learn to build a full stack Blazor WebAssembly project",
        "Beginner Blazor WebAssembly Developers who already have a little experience with Blazor and want to deepen their knowledge",
        "Aspiring .NET developers who want to get the skills that might lead to more .NET & Blazor job opportunities"
      ]
    },
    {
      "title": "The Complete JavaScript Course - Beginner to Professional",
      "url": "https://www.udemy.com/course/javascript-training/",
      "bio": "The only course you need to become a JavaScript developer - 45 JavaScript projects, ES6, JSON, AJAX & much more!",
      "objectives": [
        "Master the #1 programming language in the world",
        "Become a professional JavaScript developer",
        "Build games, web apps and websites in JavaScript",
        "Get web development jobs on freelancer sites"
      ],
      "course_content": {
        "Getting Started with JavaScript": [
          "Introduction to the Complete JavaScript Course",
          "Setup JavaScript",
          "JavaScript and HTML",
          "Add JavaScript to your WebPage",
          "First JavaScript",
          "Console debug",
          "JavaScript Comments",
          "Practice Exercise",
          "Exercise Source Code",
          "Source Code JavaScript File",
          "250 JavaScript Quiz questions PDF download",
          "Quiz Getting Started with JavaScript"
        ],
        "JavaScript Essentials": [
          "Introduction to JavaScript Essentials",
          "Primitive Data types",
          "JavaScript Variables",
          "Data Type Tips",
          "Exercise Prompt",
          "Arithmetic operators",
          "Assignment operators",
          "Comparison operators",
          "Logical operators",
          "Source Code",
          "Quiz JavaScript Essentials"
        ],
        "JavaScript Multiple Values": [
          "Introduction to JavaScript Multiple Value Containers",
          "JavaScript Arrays",
          "Source Code 1",
          "Exercise ToDo List",
          "Array properties",
          "Task List Source Code",
          "Array type",
          "Exercise guessing game",
          "Source Code Game Source",
          "Modify the Array",
          "Source Code Arrays",
          "Exercise Update Array",
          "Source Code array updates",
          "Array Access Methods",
          "Exercise remover",
          "Source Code Array Remover",
          "Multidimensional Array",
          "Source Code Nested Array",
          "Array Loop",
          "Source Code Looping array items",
          "JavaScript Objects",
          "Retrieve Data",
          "Source Code JavaScript Objects",
          "Update Objects",
          "Loop Objects",
          "Source Code Loop Objects",
          "Objects and Arrays",
          "Quiz JavaScript Essentials"
        ],
        "Document Object Model Basics": [
          "Introduction to Document Object Model Basics",
          "Intro to the DOM",
          "Closer Look at the DOM",
          "Dynamic Content",
          "Selecting Updating Exercise",
          "Manipulate innerHTML",
          "Source Code",
          "Prompt and DOM",
          "JavaScript DOM"
        ],
        "JavaScript Logic Statements": [
          "Introduction JavaScript Logic Statements",
          "Conditional Ternary Operator",
          "Ternary Operator source code",
          "If Statement",
          "Source Code If Statement",
          "Else if Statement",
          "Source Code Else",
          "Switch Statement",
          "Switch Source Code",
          "If statement coin toss",
          "Coin Toss Exercise source code",
          "Magic 8 Ball Switch",
          "Magic 8 Ball Source Code",
          "Rock Paper Scissors",
          "Rock Paper Scissors Game",
          "Rock Paper Scissors Source Code",
          "Logical Statements"
        ],
        "JavaScript Loops": [
          "Introduction to JavaScript Loops",
          "Do Loops",
          "Source Code Do While",
          "JavaScript While Loops",
          "Source Code Code Cracking",
          "JavaScript For loops",
          "Source Code",
          "Nested Loops",
          "Source Code for nested loops",
          "Break and Continue",
          "Break source code",
          "Get Multiples",
          "Source Code for Multiples",
          "Loops and Arrays",
          "Source Code for loops and arrays",
          "Loop and Objects",
          "Source Code Objects",
          "Shopping List Array Exercise",
          "JavaScript Shopping list builder",
          "JavaScript Loops"
        ],
        "JavaScript Functions": [
          "Introduction to JavaScript Functions",
          "Introduction to Functions",
          "Returns and Local Variables",
          "Function returns source code",
          "Random Name Generator",
          "Random Name Generator Source Code",
          "JavaScript Calculator",
          "Source Code JS calculator",
          "No argument options",
          "Source Code for Function",
          "Code Cracking Game",
          "Source Code for Code cracking game",
          "Anonymous Functions",
          "Self invoking functions",
          "Self invoking function source",
          "Recursive Function Game",
          "Source Code Word guessing game",
          "Shuffle array function",
          "Shuffle array source code",
          "Function scope",
          "Exercise remove Duplicates",
          "Remove Duplicates from arrays source",
          "Functions within functions",
          "Functions within functions source code",
          "Exercise Shopping List",
          "Shopping List Source Code",
          "Function callbacks",
          "Source Code Callbacks",
          "Exercise Callback calculator",
          "Exercise Card Deck",
          "Source Code Card Deck",
          "Deal deck of cards",
          "Tweak Exercise Local Scope",
          "Source Code Exercise Tweak",
          "JavaScript Functions"
        ],
        "Interactive Content JavaScript DOM and More": [
          "Introduction to Interactive Content",
          "Windows Browser Object",
          "Windows History",
          "Windows Object Methods",
          "Windows Objects Source Code",
          "Window SetTimeOut Method",
          "Source Window SetTimeOut Method",
          "Windows Navigator Object",
          "Source Windows Navigator Object",
          "Windows Location Object",
          "DOM traversing",
          "Source DOM traversing",
          "This DOM element",
          "Source This DOM element",
          "Event Handler Code",
          "Source Event Handler Code",
          "Onload Event Handler",
          "Source Onload Event Handler",
          "Mouse Event Handlers",
          "Source Mouse Event Handlers",
          "Event Target Form Content",
          "Source Event Target Form Content",
          "Onchange and Onblur",
          "Source Onchange and Onblur",
          "Placeholder Image Generator",
          "Source Placeholder Image Generator",
          "Build an Image Carousel",
          "Source Build an Image Carousel",
          "Key Event Return Boolean",
          "Source Key Event Return Boolean",
          "Onsubmit Form Validation",
          "Source Onsubmit Form Validation",
          "Drag and Drop Elements",
          "Source Drag and Drop Elements",
          "Name Game Setup",
          "Source Name Game Setup",
          "Create Game Play",
          "Source Create Game Play",
          "Gameplay Overview",
          "Source Gameplay Overview",
          "JavaScript Dynamic Web with the DOM"
        ],
        "JavaScript Dynamic Web with the DOM": [
          "Introduction to Dynamic Web",
          "Traversing the DOM",
          "Get Elements Id and TagName",
          "Source Get Elements Id and TagName",
          "Get Elements By ClassName",
          "Source Get Elements By ClassName",
          "Elements Click Handler",
          "Source Elements Click Handler",
          "QuerySelector Element Selection",
          "Source QuerySelector Element Selection",
          "QuerySelectorAll Element Selector",
          "Source QuerySelectorAll Element Selector",
          "Manipulating Element Style",
          "Source Element Style",
          "Popup Modal using JavaScript",
          "Source Popup Modal using JavaScript",
          "Adding and Removing Classes",
          "Source Adding and Removing Classes",
          "Build JavaScript Accordion",
          "Source Build JavaScript Accordion",
          "Manipulating Attributes",
          "Source Manipulating Attributes",
          "Use Custom Attributes",
          "Source Use Custom Attributes",
          "Creating New Elements",
          "Source Creating New Elements",
          "Friend Vote List Builder",
          "Source Friend Vote List Builder",
          "JavaScript Shopping List",
          "Source JavaScript Shopping List",
          "Event Listeners on Elements",
          "Source Event Listeners on Elements",
          "Multiple Event Listeners",
          "Source Multiple Event Listeners",
          "DOM Event Flow",
          "Source DOM Event Flow",
          "Select Event Listener",
          "Source Select Event Listener",
          "Event Listener ListMaker",
          "Source Event Listener ListMaker",
          "Dynamic List Editor",
          "Source Dynamic List Editor",
          "JavaScript DOM Interactive Content"
        ],
        "Built-in JavaScript": [
          "Introduction to Built-In JavaScript methods",
          "New Window Open",
          "Global JavaScript Methods",
          "Source Global JavaScript Methods",
          "JavaScript String Methods",
          "Source JavaScript String Methods",
          "String Manipulation",
          "Source String Manipulation",
          "String Method Replace",
          "Source String Method Replace",
          "Word Scramble Guessing Game",
          "Source Word Scramble Guessing Game",
          "JavaScript Math Object",
          "Source JavaScript Math Object",
          "JavaScript Date Object",
          "Source JavaScript Date Object",
          "Countdown Timer",
          "Source Countdown Timer",
          "Color Matching Game",
          "Source Color Matching Game",
          "Create User Interaction",
          "Source Create User Interaction",
          "Bug Fixes and Tweaks",
          "Source Bug Fixes and Tweaks",
          "Debugging Try Catch Throw",
          "Source Debugging Try Catch Throw",
          "Hit a Computer Game",
          "Source Hit a Computer Game",
          "Scoring Complete App",
          "Source Scoring Complete App",
          "Built-in JavaScript"
        ]
      },
      "requirements": [
        "No experience required - this course will take you from beginner to paid professional",
        "All you need is a text editor or download of the one suggested in the course",
        "HTML and CSS experience"
      ],
      "description": "This course has everything you need to become a professional JavaScript developer!\nWith over 33 hours of training, quizzes and challenges, it's the most comprehensive JavaScript course available on Udemy!\nWhether you want a career in front end or back end development - it's essential that you have a solid understanding of this versatile language!\nCome learn the #1 programming language in the world in this fun and exciting course with Laurence Svekis - a web developer with 18 years experience who has followed Rob Percival's \"learn by doing\" style to create this amazing course.\nBuild 45 Games, Web Apps and Websites with JavaScript\n\nYou'll go from beginner to extremely high-level and your instructor will complete each project with you step by step on screen.\nInside the course, you'll build a Magic Eight Ball game, mini calculator, a Calorie Counter app, a geo-located Google Map, a functioning online store and much much more!\nYou'll learn how to:\nUse logic statements to make decisions within your code\nSave time writing the same thing over and over again with JavaScript Loops\nUse JavaScript Functions to build mini programs to selectively execute code\nMake your webpages comes to life with Interactive Content\nConnect to HTML5 elements & newer API's\nMake your code more efficient with Regex\nHandle data and updating page content without page refreshes using JSON and AJAX\nBuild faster with the new ECMA6 version of JavaScript.\nGain a strong foundation in Javascript so you’ll be ready to move up to frameworks like Angular and Node.js\nNo JavaScript or web development experienced required. You'll get friendly support in the Q&A area and all the source code available for download.\nThis Offer Won't Last Forever\nGo ahead and hit that \"take this course\" button to start learning the #1 programming language in the world!",
      "target_audience": [
        "Anyone who wants to learn to program",
        "Web developers and designers",
        "Website owners",
        "Anyone who wants to refresh their knowledge of JavaScript",
        "Anyone who wants to create websites",
        "Anyone who wants to practice JavaScript",
        "Anyone who wants everything JavaScript in one place"
      ]
    },
    {
      "title": "Python REST APIs with Flask, Docker, MongoDB, and AWS DevOps",
      "url": "https://www.udemy.com/course/python-rest-apis-with-flask-docker-mongodb-and-aws-devops/",
      "bio": "Learn Python coding with RESTful API's using the Flask framework. Understand how to use MongoDB, Docker and Tensor flow.",
      "objectives": [
        "Have a deeper knowledge and understanding of core elements of web development using Python",
        "Understand and be able to use the flask framework",
        "Plan, build, setup and deploy a RESTful API to an Amazon EC2 instance",
        "Make use of a NoSQL (MongoDB) Database",
        "Build a machine-learning API using Tensorflow for image recognition"
      ],
      "course_content": {
        "Understanding the Basics of the Python Flask Framework and its Workflow": [
          "Downloading and Installing VirtualBox and Ubuntu",
          "Installing Flask and Running a Hello World Program",
          "Understanding the Web Cycle For Development",
          "Revisiting Hello World Program And Explaining GETs",
          "JSON, Examples of JSON, and JSON in Flask",
          "GET and POST Requests + Response Structure",
          "Downloading and Installing Postman",
          "Handling POST Requests in Flask and Building a Mini API"
        ],
        "Understanding and Implementing a Simple REST API": [
          "What is a RESTful API.",
          "Restful API Resource Method Chart",
          "Project 1, Building Restful API Part 1",
          "Project 1, Building Restful API Part 2"
        ],
        "Docker": [
          "What is Docker and Why Use it.",
          "Note on Docker Installation",
          "Downloading and Installing Docker and Docker-Compose",
          "Dockerizing our First Application"
        ],
        "MongoDB": [
          "What is a Database and MongoDB",
          "MongoDB Introduction",
          "Note on MongoDB installation",
          "Installing MongoDB on the Ubuntu Virtual Machine",
          "Creating and Deleting Databases",
          "Creating and Deleting Collections in MongoDB",
          "Query Documents in MongoDB",
          "Updating and Sorting and Limiting Documents in MongoDB",
          "Note on API to keep track of Number of Users",
          "Building a Simple Application to Keep Track of Number of Users"
        ],
        "Project: Database as a Service Restful API": [
          "Chart Protocol for New API Part 1",
          "Note on Sentences API",
          "Building the Sentences API Part 2",
          "Building the Sentences API Part 3"
        ],
        "Project: Building a Restful API for Similarity Check using Natural Language Proc": [
          "Building a Similarity API Part 1",
          "Building a Similarity API Docker-compose Structure Part 2",
          "Building a Similarity API Registration Part 3",
          "Building a Similarity API Detection of Similarity Part 4",
          "Building a Similarity API Refilling Part 5",
          "Important: Similarity API Updated Source Code",
          "Building a Similarity API Testing the API Part 6"
        ],
        "Project: Building an Image Recognition Restful API using Tensorflow and Deeplear": [
          "Building an Image Classification API Part 1",
          "Building an Image Classification API, Project folders Part 2",
          "Building an Image Classification API, Registration Part 3",
          "Building an Image Classification API, Classification Function Part 4",
          "Building an Image Classification API, refill functionality Part 5",
          "Building an Image Classification API Testing Part 6"
        ],
        "Project: Building a Restful API to handle Bank Transactions": [
          "Building a Bank API, Part 1",
          "Building a Bank API, Part 2",
          "Building a Bank API, Part 3",
          "Building a Bank API, Part 4"
        ],
        "Deploying Restful API into AWS EC2 Instance": [
          "Deploying"
        ],
        "[ARCHIVED]: Project: Building an Image Recognition Restful API using Tensorflow": [
          "Building an Image Classification API Part 1",
          "Building an Image Classification API, Project folders Part 2",
          "Building an Image Classification API, Registration Part 3",
          "Building an Image Classification API, Classification Function Part 4",
          "Important: Image Classification API Updated Source Code",
          "Building an Image Classification API, refill functionality Part 5",
          "Building an Image Classification API Testing Part 6"
        ]
      },
      "requirements": [
        "Basic knowledge of the Python programming language",
        "Enthusiasm and a willingness to take your Python skills to the next level"
      ],
      "description": "So you know a bit of Python and want to learn about RESTful API's and other cool technologies like Flask, Docker, MongoDB to name just a few?\n\nOr maybe you just want to add web development Python skills to your resume.\n\nWhatever the reason is, you have landed on the right page if you have an interest in taking your Python skills to the next level.\nWhy use Python for web development?\nCoding in Python is simple, and a student with no prior knowledge can easily understand a line of code and its use - this means with only the basics, you can comfortably write a complete program.\n\nPython has a great number of frameworks and tools to get you up and going fast with web development.\n\nIt's a great match - a powerful language with a great range of tools that you can put to use quickly.\nWhy choose this course?\n\nYou will be able to learn and understand how to design and implement RESTful API’s via the Flask framework.\nEver wanted to know what a NoSQL database is, and how to use one?  You'll learn how to do that as well, using Python.\nAnd what is Docker, and what does it mean to \"dockerize\" your apps?  Yep, you guessed it, you will learn that as well in this course.\nYou'll even learn how to build a machine learning API using TensorFlow for image recognition.\nAnother hot topic is DevOps, and you will learn about that and go through the process of deploying a RESTful API on an Amazon EC2 instance.\nIn short, this course is designed to take your basic Python skills and take you to the next level in the shortest period of time.\nWhat topics are covered in this course?\nUnderstanding the Basics of the Python Flask Framework\nUnderstanding and Implementing a  REST API\nDocker\nMongoDB\nProject: Database as a Service Restful API\nProject: Building a Restful API for similarity check using Natural Language Processing\nProject: Building an Image Recognition Restful API using Tensorflow and Deep Learning\nProject: Building a Restful API to Handle Bank Transactions\nDeploying Restful API into an AWS EC2 Instance\n\nYou'll come away with a firm understanding of how all the pieces work individually, and more importantly how they fit together.\nThis really is an all in one course to get you up to speed with these topics, fast.\n\nCheck permission.\n\nThis course requires you to download and use the software listed below. If you are a Udemy Business user, please check with your employer before downloading software.\n\nAtom\nDocker\nDocker compose\nFlask\nFlask-restful\nMongoDB\nPostman\nUbuntu\nvFlask\nVirtualBox\n\n\nWhat skills do you need?\n\nThe ideal student would be someone with a basic knowledge of Python who is eager to improve their skills.  That's it!\n\nReady to start?\n\nIf you're ready to start the course, then click the enroll button to get started. We look forward to seeing you on the inside.o",
      "target_audience": [
        "This course is suitable for those with basic skills, who wish to learn about Python web development",
        "This course is ideal for those who wish to learn more about RESTful API's",
        "Anyone with an interest in database,DevOps, MongoDb and more"
      ]
    },
    {
      "title": "NodeJs API for Beginners (Marketplace with AWS & MongoDB)",
      "url": "https://www.udemy.com/course/node-js-api-tutorial/",
      "bio": "NodeJs API Development from absolute scratch in 2024 with PDF Booklet. Build Solid Marketplace App with AWS & MongoDB.",
      "objectives": [
        "Learn Node JS Fundamentals",
        "Learn Modern JavaScript",
        "Learn to Build Complete API",
        "Learn to use AWS IAM SES and S3",
        "Learn to Build API for Real Estate Marketplace",
        "Interactive Learning with PDF Booklet"
      ],
      "course_content": {
        "Understanding Node JS": [
          "What is node js",
          "Why learn node js",
          "Installation",
          "Javascript in browser environment",
          "Javascript in node js environment",
          "Getting started with node js",
          "Writing functions",
          "Import Export",
          "Using arrow functions",
          "Object destructuring",
          "Using node js core modules",
          "Using npm packages",
          "Using express",
          "Node js event loop",
          "Programming for event loop",
          "Asynchronous programming",
          "Synchronous programming",
          "Functional approach",
          "Secrets of understanding node js"
        ],
        "Node JS API Development - Getting Started": [
          "Creating server with express",
          "Separating routes",
          "Middleware explained",
          "Using controllers",
          "JSON and postman",
          "Database Options: mLab vs MongoDB Atlas",
          "Signup with mlab to use mongodb",
          "Signup with MongoDB Atlas to use mongodb",
          "Resources to install MongoDB and Robo3T (optional)",
          "Connecting to database using mongoose"
        ],
        "Node JS API Development - Posts": [
          "Post schema",
          "Creating a post",
          "Using the right version of express-validator for the next lecture",
          "Validation and friendly error messages",
          "Getting posts",
          "Whats next and cleanup",
          "Continue this project"
        ],
        "Getting Started with Real Estate Marketplace API (2024)": [
          "Download PDF Booklet with all the source code step by step",
          "Real Estate Marketplace API Development",
          "Node Express Server",
          "MongoDB Atlas Connection"
        ],
        "Routes Controllers & Helpers": [
          "Organize Routes",
          "Controller Functions",
          "Password Hash and Compare with Bcrypt",
          "Login Register Workflow"
        ],
        "AWS SES for Emails": [
          "Getting Started with AWS",
          "AWS SES Verify Emails",
          "AWS Environment Variables",
          "AWS SES Send Email Params",
          "Send Welcome Email"
        ],
        "Authentication": [
          "User Model",
          "Login Validation Errors",
          "Create User",
          "Login User"
        ],
        "Password Forgot & Reset": [
          "Forgot Password",
          "Password Reset"
        ],
        "Authorization & Current User": [
          "Require SignIn Middleware",
          "Current User",
          "Update Password",
          "Update Username"
        ],
        "AWS S3 for Storing Images": [
          "AWS S3",
          "Ad Routes",
          "Resize then Upload",
          "Multiple Upload to S3",
          "Remove Image from S3"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript or any other Programming Language"
      ],
      "description": "Welcome to learn Node JS API development for absolute beginners. In this course you will learn the core fundamentals of Node JS so that you can start building API using Node JS. In this course, you will learn Modern JavaScript, Node JS event loop, Asynchronous programming, using NPM modules, creating server, connect to database and sending json responses.\n\n\nMARKETPLACE PROJECT with PDF Booklet (2024)\nThis comprehensive project is your gateway to mastering backend development using Node.js and creating a robust real estate marketplace API from scratch.\nWhat You'll Learn:\n\n\nGetting Started with Real Estate Marketplace API:\nSet up your development environment.\nCreate a Node Express server.\nConnect to MongoDB Atlas seamlessly.\nRoutes, Controllers & Helpers:\nOrganize routes efficiently.\nDevelop powerful controller functions.\nSecure passwords using Bcrypt and manage login/register workflows.\nAWS SES for Emails:\nSet up AWS and verify emails.\nConfigure environment variables.\nSend welcome emails using AWS SES.\nAuthentication:\nDesign user models and validate login errors.\nImplement user creation and login functionalities.\nPassword Management:\nHandle password reset requests.\nImplement secure password updates.\nAuthorization & User Management:\nMiddleware for requiring sign-in.\nManage current user sessions.\nUpdate user information securely.\nAWS S3 for Storing Images:\nUtilize AWS S3 for image storage.\nImplement routes for image upload and resizing.\nManage image uploads and deletions on AWS S3.\nGoogle Maps Integration:\nIntegrate Google Maps for geocoding.\nRetrieve and use latitude and longitude for listings.\nAds CRUD (Real Estate Listings):\nDesign ad models.\nImplement CRUD operations for ads.\nFilter ads for sale and rent.\nManage ad updates and deletions.\nUser Ads Management:\nAllow users to manage their ads.\nUpdate ad status efficiently.\nContact Agent Functionality:\nEnable users to contact real estate agents.\nImplement email communication with agents.\nAdvance Searching & Filtering of Ads/Properties based on Geo Location\nDeployment to Cloud Servers\nPDF Booklet with all the Source Code Step by Step\nWhy This Course?\nThis course is designed with beginners in mind, offering step-by-step guidance through practical, real-world examples. Whether you're a budding developer or looking to enhance your backend skills, this course equips you with the knowledge and tools to build a fully functional real estate marketplace API.\nEnroll Today!\nTake the first step towards becoming a proficient backend developer. Enroll now and start building your real estate marketplace API, while learning everything about Node JS from absolutely scratch!",
      "target_audience": [
        "Anyone who wants to learn Node JS",
        "Anyone who wants to learn Node JS API Development",
        "Anyone who wants to learn NodeJS MongoDB AWS API Development",
        "Anyone who wants to build Powerful Backend API for a Marketplace App"
      ]
    },
    {
      "title": "Next.js Dev to Deployment",
      "url": "https://www.udemy.com/course/nextjs-dev-to-deployment/",
      "bio": "Learn Next.js by building a music event website",
      "objectives": [
        "Build a music event application from start to finish",
        "Learn the fundamentals of NextJS",
        "Create a backend using Strapi CMS",
        "JWT Authentication / HttpOnly Cookie Storage",
        "Pagination, search, image uploading with Cloudinary",
        "Build a static blog with pagination, search & categories using Markdown",
        "Deploy to production using Vercel"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "What Is Next.js?",
          "Main Project Overview",
          "Environment & Tools",
          "Final Code Repo Links"
        ],
        "Next.js Fundamentals": [
          "Creating a Next.js App",
          "Pages & Routing",
          "Next Link & Router",
          "Head Tags & Layout",
          "Header & Footer",
          "Custom 404 Page",
          "Module Aliases With jsconfig",
          "Showcase Component"
        ],
        "Data Fetching": [
          "API Routes",
          "getServerSideProps & getStaticProps",
          "DIsplaying Events",
          "getStaticPaths",
          "Single Event Page"
        ],
        "Strapi Backend": [
          "Strapi CMS Setup",
          "Cloudinary For Images",
          "Event Content Type"
        ],
        "Events Functionality - Part 1": [
          "Connecting to the Strapi API",
          "Search Page Using Filters",
          "Search Component",
          "Add Event Page",
          "Event Submit & React Toastify",
          "Create a Slug"
        ],
        "Events Functionality - Part 2": [
          "Delete Events",
          "Edit Event & Image Preview",
          "Modal Component",
          "Image Upload",
          "Events Pagination"
        ],
        "Authentication, JWT & HttpOnly Cookies": [
          "Register & Login Forms",
          "Auth Context",
          "Our JWT Strategy Explained",
          "Login & Get JWT",
          "Store JWT In Server HttpOnly Cookie",
          "Persist Logged In User",
          "Logout & Destroy Cookie",
          "Register User"
        ],
        "Authorization & Access": [
          "Custom User Events Endpoint",
          "Gettting User Events For Dashboard",
          "Display Dashboard Events",
          "Create Is Owner Policy For Events",
          "Associating Events With Users",
          "Authenticated Edit, Delete & Image Upload"
        ],
        "Extras & Deployment": [
          "Add Map to Event Pages",
          "Strapi Backend Deploy - Heroku",
          "Next.js Deploy - Vercel"
        ],
        "Project 2 - DevSpace Static Markdown Blog": [
          "Project Intro",
          "Markdown - What & Why?",
          "Markdown Crash Course",
          "Project Repo Link",
          "Next.js & TailwindCSS Setup",
          "Layout Component",
          "Header & Tailwind Styling",
          "About & 404 Page"
        ]
      },
      "requirements": [
        "Modern JavaScript",
        "The basics of React"
      ],
      "description": "This course is outdated. See the new Next.js from Scratch course\nNext.js is a framework for building server-side rendered React websites as well as static websites. This is a project-based course for learning Next.js. We will build a music events application that will give you the foundational knowledge that you need to create your own applications. We will use Strapi (a headless CMS) as our backend but you could just as well use anything\nWe will learn the fundamentals of Next.js like...\nPages & Routing\nData Fetching Methods - getServerSideProps, getStaticProps, getStaticPaths\nCustom API Routes\nStatic Generation\nCSS Styling\nImage Optimization\nIn our main project, we will also be working with...\nStrapi CMS\nAuthentication with JWT (JSON Web Tokens)\nAuthorization and access control\nStoring HttpOnly Cookies on the server\nPagination, search filters, etc\nImage uploading with Cloudinary integration\nDeploying to Vercel and Heroku\nNext.js can also be used to create \"static websites\". The second project is a static blog called Devspace\nTaiilwindCSS Integration\nStatic Data Fetching/Generation\nCreate, Fetch & Parse Markdown with Frontmatter\nSearch Functionality with API route/Serverless Function\nPost Caching\nGit Hooks with Husky\nDeploy to Vercel\nWhat should you know before taking this course?\nYou should know JavaScript basics and modern JavaScript features like arrow functions, restructuring, the spread operator\nYou should also know the basics of React. I will not be explaining things like components, props, JSX\n\n\nResources:\nAll of the final code will be provided in the project repos and all needed resources will be provided in the sections",
      "target_audience": [
        "People that want to learn NextJS",
        "Learn the foundations to build a full stack application with CRUD, pagination, authentication and more"
      ]
    },
    {
      "title": "Learn PHP Fundamentals From Scratch",
      "url": "https://www.udemy.com/course/learn-php-fundamentals-from-scratch/",
      "bio": "A Short Course on PHP Basics",
      "objectives": [
        "To Learn Fundamentals of PHP",
        "To Create simple Web Scripts using PHP",
        "Learn about OOPS and Regex in PHP"
      ],
      "course_content": {
        "Introduction to PHP": [
          "Introduction to the Course",
          "PHP Fundamentals",
          "Environment Setup"
        ],
        "PHP Building Blocks": [
          "PHP Variables and Arrays",
          "PHP Loops"
        ],
        "Advanced PHP Features": [
          "PHP Functions and Including",
          "PHP Conditionals and RegEx",
          "PHP OOP"
        ],
        "Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "A simple text editor and a zeal to learn"
      ],
      "description": "PHP powers hundreds of millions of websites worldwide. Undoubtedly it is one of the most popular server side scripting language. If you want to start web programming it is one of the first language you should pick up. In this introductory course in PHP you will get all the fundamental concepts required to start your PHP web programming.\nWe have kept the learning curve fairly simple and anyone with basic knowledge of programming can quickly pick up PHP with the help of this course.\nIn the course you will go through basic web programming concepts and will be able to master PHP programming by the end of it.",
      "target_audience": [
        "Any one with basic knowledge of Programming and HTML"
      ]
    },
    {
      "title": "Write PHP Like a Pro: Build a PHP MVC Framework From Scratch",
      "url": "https://www.udemy.com/course/php-mvc-from-scratch/",
      "bio": "Write faster, easier to maintain, more secure PHP websites by creating your own Model View Controller framework",
      "objectives": [
        "Efficiently organise your PHP code into models, views and controllers",
        "Separate application code (PHP) from presentation code (HTML)",
        "Learn concepts like dependency injection, templating and middleware",
        "Best practices for handling errors and exceptions in PHP",
        "How frameworks like Laravel or CodeIgniter work",
        "Have pretty URLs instead of PHP filenames",
        "Object-oriented (OO) techniques such as inheritance, interfaces, abstract classes and more"
      ],
      "course_content": {
        "Introduction and Project Setup": [
          "Introduction and Welcome: How to Get the Most out of the Course",
          "Install the Recommended Software",
          "Develop in the Web Server's Root Folder",
          "Configure the Web Server to Access the Code using a Virtual Host",
          "Addendum: Accessing the MySQL Console on the Command Line",
          "Create a Database in the Local Database Server"
        ],
        "MVC Basics: Models, Views and Controllers": [
          "Retrieve Data from the Database using Plain PHP",
          "Format the Data Using HTML",
          "The MVC Pattern: How it Can Help You to Write Better Web Applications",
          "Adapt Plain PHP Code to Fit the MVC Pattern: Create a Model Class",
          "Adapt Plain PHP Code to Fit the MVC Pattern: Create a View",
          "Adapt Plain PHP Code to Fit the MVC Pattern: Create a Controller Class",
          "Organise Controllers and Models into Folders",
          "Organise Views into their Own Folder",
          "MVC Concepts"
        ],
        "Controllers, Actions and the Front Controller": [
          "Add Another Page: How NOT to Do it in an MVC Framework",
          "The Front Controller: Handle All Requests with One Script",
          "Add Another Controller and Select it in the Front Controller",
          "Remove Repetition by Dynamically Creating Objects and Running Methods",
          "Controller Concepts"
        ],
        "Pretty URLs": [
          "How to have \"Pretty\" URLs",
          "Enable URL Rewriting and .htaccess Files",
          "Add an .htaccess File to Rewrite all URLs to index.php",
          "Get the Value of the URL Path in the Front Controller",
          "Remove the Query String and Get the Controller and Action from the URL Path"
        ],
        "An Introduction to Routing": [
          "Routes, Routing and the Router: Add a Router Class",
          "Add the Routing Table and Some Routes",
          "Match the Route Path to the Routes in the Routing Table",
          "Use the Controller and Action from the Matched Route",
          "Show a Message if no Route Matches"
        ],
        "Class Organisation: Autoloading and Namespaces": [
          "Class Autoloading: Load Classes Automatically Without Having to Require Them",
          "Add an Autoload Function and Require the Router Class Automatically",
          "Try to Load the Controller Class Using the Autoloader",
          "Namespaces: What They Are and How to Use Them",
          "Organise Classes in Namespaces and Corresponding Folders",
          "Change the Autoloader to Include the Namespace",
          "Load the Controller in its Namespace",
          "The Root Namespace and Relativity: Load the Model in its Namespace",
          "Import a Class Into the Current Namespace With a Use Statement"
        ],
        "Advanced Routing using Regular Expressions": [
          "Introduction to Advanced Routing: More Flexible Routes Using Patterns",
          "How to do Complex String Comparisons: An Introduction to Regular Expressions",
          "Match the URL Path to a Regular Expression",
          "Using Special Characters in Regular Expressions: Matching the Start and End",
          "Matching Patterns: Character Sets in Regular Expressions",
          "Repetition in Regular Expressions",
          "Match the URL Path to a Pattern Instead of a Fixed String",
          "Get Segments from the Matched String using Capture Groups",
          "Use Named Capture Groups to Name the Captured Segments",
          "Pass the Captured Controller and Action to the Front Controller"
        ],
        "Route Variables: Get Data from the URL Path": [
          "How to Have More Flexible Routing with Route Variables",
          "Add a Route with Variables and Make Parameters Optional when Adding a Route",
          "Process the Route Path One Segment at a Time",
          "Convert the Segment with a Variable into a Named Capture Group",
          "Complete the Route-Matching Regular Expression",
          "Use the Generated Regular Expression to Match the URL Path",
          "Enable Literal Segments in the Route Paths",
          "Add a Route with Another Variable",
          "Wildcards and Negated Character Classes in Regular Expressions",
          "Match Any Value in the URL Segment for a Route Variable",
          "Route Variable Patterns and Shorthand Character Classes in Regular Expressions",
          "Enable Optional Custom Regular Expressions for Route Variables",
          "Match the URL Path in a Case-insensitive Manner",
          "Match Unicode Characters in the URL Path",
          "Add General Routes After More Specific Ones"
        ],
        "Dispatching: Following the Directions from the Router": [
          "Dispatching: Create a Dispatcher Class and Use it From the Front Controller",
          "Create a Dispatcher Method to Handle the Request",
          "Pass Route Variables to the Action Method as Arguments",
          "Use Reflection to Get the Action Method Argument Names",
          "Match the Action Method Argument Names to Parameter Values",
          "Pass the Argument Values to the Action Method",
          "Allow Multiple-word Controller Classes and Action Method Names",
          "Convert the Controller Parameter to StudlyCaps",
          "Convert the Action Parameter to camelCase",
          "Add a Namespaced Controllers Option"
        ],
        "Views: Present the Data": [
          "An Introduction to Views: Create a Viewer Class",
          "Add a Render Method and Use it from the Controller",
          "Pass Optional Data to the View when Rendering it",
          "Use Output Buffering to Load the Contents of the Template",
          "Organise View Templates in Subfolders",
          "Add Shared View Templates for Common Code",
          "Add a Title Variable to the Shared Header Template"
        ]
      },
      "requirements": [
        "You should already be familiar with PHP and HTML.",
        "You should be comfortable installing software on your computer - in the first section we'll be installing a web server."
      ],
      "description": "Most modern PHP development uses a framework like Laravel or CodeIgniter. However, the jump from using basic PHP to using a framework can be difficult. This course bridges that gap.\nFrameworks can make your PHP projects faster, easier to write and maintain, and more secure.\nLearn to structure your PHP Code like a professional by building a PHP MVC framework from scratch.\n\nLearn how to efficiently organise your code\nSeparate application code (PHP) from presentation code (HTML)\nHave pretty URLs instead of PHP filenames\nDevelop advanced routing using regular expressions\nLearn concepts like dependency injection, templating and middleware\nUse object-oriented (OO) techniques such as inheritance, interfaces, abstract classes and more\nDevelop a full CRUD application using the MVC pattern\nThe essential skills required to understand and use a PHP MVC framework.\nDeveloping PHP applications is faster and more secure if you use a framework. Learning how to use an MVC framework puts a very powerful tool at your fingertips. By developing your own from scratch, you'll gain an understanding of just how each component works.\nFrameworks like Laravel, Symfony and CodeIgniter all use the MVC pattern, so understanding how an MVC framework is put together will give you a strong background to more easily learn frameworks such as these.\n\nContent and Overview\n\nThis course is designed for developers who know PHP but don't know how to use a framework. I designed the course for developers who want to develop full, feature-rich applications quickly and easily. Learning the techniques on this course will enable you to write web applications using the framework you build, but also learn frameworks like Laravel much more easily.\nSuitable for all PHP developers, you'll start by learning the basics of a PHP MVC framework.\nYou'll learn how to organise your code into models, views and controllers, and how to work efficiently with them.\nWe'll build a full web application from scratch, with each concept explained in detail at every stage.\nThroughout the course, we'll build code that you can reuse in all your projects.\nAll the source code developed in the lectures is available to download.\nAll the time we'll adhere to industry standards and best practices.\nWhen you complete the course you'll be able to use your framework to create fast, flexible web applications, with all the features a modern web application requires.\nComplete with all the code shown in the lectures, you'll be able to work alongside the instructor and will receive a verifiable certificate of completion upon finishing the course.\nAlso, at all times throughout the course you have access to the instructor in the Q&A section to ask for help with any topic related to the course.\nEnrol now and become a master of PHP MVC frameworks!",
      "target_audience": [
        "This PHP MVC course is meant for those who already know PHP but want to know how they can improve their code by using a framework. This course is not for you if you don't already know PHP.",
        "The gap between learning PHP and using a framework can be large - if you've just learnt PHP and you're wondering what the next step might be, this course is for you."
      ]
    },
    {
      "title": "The Modern Angular Bootcamp",
      "url": "https://www.udemy.com/course/the-modern-angular-bootcamp/",
      "bio": "Get job ready with Angular! Understand how to build and deploy production-ready apps.",
      "objectives": [
        "Build amazing single page applications with Angular and Typescript",
        "Master fundamental concepts behind structuring Angular applications",
        "Realize the power of building composable components",
        "Be the engineer who explains how Angular works to everyone else, because you know the fundamentals so well",
        "Build a portfolio of projects to show any potential employer",
        "Architect large apps effectively using Typescript + Angular's Module system",
        "Handle and process data declaratively using RxJs"
      ],
      "course_content": {
        "Welcome! Start Here!": [
          "How to Get Help",
          "Course Resources",
          "Join Our Community!",
          "Intro - Our First App",
          "A Few Questions Answered",
          "Four Major File Types",
          "Environment Setup - Node JS",
          "Environment Setup - Angular CLI",
          "Environment Setup - Visual Studio Code"
        ],
        "Understanding Angular Template Syntax": [
          "Project Overview",
          "Starting and Stopping an Angular Project",
          "Updating a Component Template",
          "Event Binding Syntax",
          "Property Binding Syntax",
          "Interpolation Syntax",
          "Angular vs JavaScript Design Patterns",
          "Tracking Input State",
          "Tracking Additional Properties",
          "Handling Text Input",
          "Generating a Random Password",
          "Review on Property Binding",
          "Adding Third Party CSS",
          "CSS Import Statements",
          "Adding Some Styling",
          "Structural Directives",
          "Deploying Angular Apps",
          "Terminology Review",
          "Terminology Review"
        ],
        "Building Components": [
          "App Overview",
          "Project Setup",
          "A Quick HTML Dump",
          "Adding Static Files to Angular",
          "Scoped CSS Files",
          "Components in Angular",
          "Creating Components",
          "How Angular Creates Components",
          "More on CSS Scoping",
          "Tying Data to a Component",
          "Accepting Data in a Child Component",
          "Communicating from Parent to Child",
          "Fixing Template References",
          "Building Lists with NgFor",
          "Two Notes on NgFor",
          "Host Element Selectors",
          "Deployment and Review",
          "What We've Learned So Far"
        ],
        "Exercise! Building a Typing Game": [
          "App Overview",
          "Initial Steps",
          "Adding CSS",
          "IMPORTANT Info About Faker Installation",
          "Displaying Content",
          "Randomly Generating Text",
          "Handling User Input",
          "Conditional Display",
          "Character by Character Comparison",
          "Styling by Comparison"
        ],
        "Mastering Pipes": [
          "Pipes Overview",
          "Adding an Input",
          "Pipes in Action",
          "A Touch of Styling",
          "Adding a Date Picker",
          "Formatting Dates",
          "Displaying Currency",
          "Formatting the Currency",
          "Formatting Numbers",
          "Displaying JSON",
          "Creating Custom Pipes",
          "Custom Arguments",
          "Two Neat Things with Pipes"
        ],
        "Directives in Angular": [
          "App Overview",
          "App Setup",
          "Getting Some Data",
          "Review on NgFor",
          "The NgClass Directive",
          "More on NgClass",
          "Conditionally Disabling Buttons",
          "Changes Pages",
          "Displaying Images",
          "Reminder on NgIf",
          "Multiple Directives with Ng-Container",
          "NgSwitch",
          "Generating Custom Directives",
          "Accessing Elements from a Custom Directive",
          "Communicating Properties to Directives",
          "Intercepting a Property Assignment",
          "Input Aliasing",
          "Replacing NgClass",
          "Custom Structural Directives",
          "Context in Structural Directives"
        ],
        "The Module System": [
          "App Overview",
          "Tackling Some Challenges",
          "Modules Overview",
          "Generating Modules",
          "Importing and Exporting Modules",
          "Modules Exercise",
          "Quick Note",
          "Modules Exercise Solution",
          "Module Property Definitions"
        ],
        "Routing and Navigation Between Pages": [
          "Adding Basic Routing",
          "Routing Exercise",
          "Exercise Solution",
          "The RouterOutlet Element",
          "Navigating with RouterLink",
          "A Touch of Styling",
          "Styling an Active Link",
          "Adding Home and NotFound Routes",
          "Reordering Routing Rules",
          "Landing and NotFound Components"
        ],
        "Lazy Loading with Modules": [
          "Lazy vs Eager Loading",
          "Implementing Lazy Loading",
          "Lazy Loading Exercise",
          "Exercise Solution",
          "Creating a Placeholder Component",
          "Customizing Components",
          "Reminder on Structural Directives",
          "Widget Modules",
          "Implementing a Titled Divider",
          "Grabbing Content with NgContent",
          "Creating a Segment Component",
          "NgContent with Selects",
          "Hiding Empty Elements",
          "Building a Reusable Table",
          "Generating and Displaying the Table",
          "Communicating Down Table Data",
          "Assembling the Table",
          "Passing Down Class Names"
        ],
        "Advanced Component Routing": [
          "Tab Based Navigation",
          "Adding Child Navigation Routes",
          "Understanding Child Component Routing",
          "RouterLink Configuration",
          "Relative RouterLink References",
          "Alternate RouterLink Syntax",
          "Matching Exact Paths",
          "A Reusable Tabs Component",
          "Views Module Exercise",
          "Exercise Solution",
          "Displaying a List of Statistics",
          "Displaying a List of Items"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript",
        "Basic understanding of how to use the command line"
      ],
      "description": "If you want to build large, scalable apps, Angular is the Javascript framework to learn!\nAngular has been under development by Google for nearly a full decade.  It has one purpose: scale up to gracefully handle the largest and most complex web apps around.  If you want to build a big app, Angular is the way to go.  Every other course online around Angular shows you how to use the basic syntax and features of Angular, but only this course will show you how to build large, professional projects using Angular.\nMastering Angular by reading the documentation alone is challenging.  The official documentation always offers multiple ways to achieve any simple task, but never clarifies what the best way to do something is.  In this course, you will gain a fundamental understanding of the best way to achieve any goal with Angular, along with an explanation of the pros and cons of each possible approach.\nTop companies are hungry for Angular developers.  You've probably heard of the crazy salaries being offered for front-end developers.  The average starting salary for an Angular developer is $115k USD.  That is not an exaggeration, it is not a joke - this is how badly employers are looking for Angular developers.  You can be the latest hire at a new tech startup, a fantastic engineer with amazing skills in Angular!  All you have to do to earn this salary is understand Angular, and this course will help you do that.\nLearning Angular will make you a better software engineer.  Here's the little secret of Angular that nobody tells you about: Angular is really three different topics in one!  You've got Angular itself, Typescript, and RxJs.  Learning Angular isn't just about Angular, its about Typescript and RxJs as well!  Typescript's goal is to help you catch errors quickly during development, rather than when you are running your app, while RxJs has a goal of helping you manage data transparently throughout your application.  Understanding Typescript and RxJS will undoubtedly help you become a more knowledgeable, productive, and successful engineer.  Note that you do not need any prior experience with Typescript or RxJs to take this course - I will teach you everything you need to know!\nPlanning on building your own apps? This course will give you a countless number of reusable code snippets that you can utilize on your own personal projects, saving you valuable time.  Angular is all about code reusability, and this course will get you started on the right track.  Not only will you get incredibly reusable code, but you'll also learn to integrate multiple different CSS frameworks with Angular, so you can get some custom styling that suits the needs of your app.\nLearn from someone who has worked with Angular since its 1.0 release.  I have worked with Angular since version 1.0, released many years ago.  I've seen an incredible number of design patterns and approaches, and I've narrowed down that list to the critical topics that you need to understand.  Rather than showing you every last tiny feature of Angular, you'll learn only the best way to achieve any given task.\nBut don't just take my word for it - check out the reviews for this course!  You'll see that other engineers - just like yourself - have had great success and acquired a new understanding of how to build large web apps using Angular.\n\n\n------ What You'll Learn ------\nThis is a long course, with just about every fact about Angular you could ever hope to know. Here's a brief subset of the topics you'll cover:\nMaster the fundamentals of Angular, including components, services, pipes, and directives\nCreate reusable components that you can plug-and-play to create dynamic, complex apps\nUnderstand how to design and architect large apps, with a careful eye on code maintainability\nBuild modular apps that can easily be updated and changed\nGet a handle on performance by leveraging lazy loading, supercharging the speed of your apps\nTake a look at Typescript, which will help you write perfect code the first time, rather than encountering errors in the browser\nUse RxJs to declaratively manage data throughout your app, leveraging built-in functions to transform your data\nConnect to backend databases like MySQL, Postgres, or MS SQL Server to add data to your app\nUnderstand how to handle security in your Angular code\n...And so much more!\nThis course is the resource that I wish I had when I was learning Angular - a course that is up-to-date, complete, and full of practical examples.  I learned Angular years ago before any courses like this existed.  Now you can learn at 10x the speed I did. Sign up today, master Angular, and get a job as a Software Engineer!",
      "target_audience": [
        "Anyone looking to learn more about Angular"
      ]
    },
    {
      "title": "Advanced Javascript",
      "url": "https://www.udemy.com/course/javascript-advanced/",
      "bio": "In only seven hours you will learn enough javascript to transform from a Junior JS Dev into a Senior JS Guru",
      "objectives": [
        "Impress interviewers with knowledge about advanced JavaScript features",
        "Confidently Interview other JavaScript candidates",
        "Pass stage one JavaScript telephone interviews",
        "Prepare for working on complex frontend frameworks like React, Vue, Svelte or Angular."
      ],
      "course_content": {
        "Introduction": [
          "Hello Introduction - NEW",
          "How to edit and run code in Chrome?"
        ],
        "Basics": [
          "Hello Basics - NEW",
          "What is JavaScript and how does it change? - NEW",
          "What is compilations vs polyfilling? - NEW",
          "What is \"use strict\" and what does it do?",
          "Does javascript pass variables by reference or by value?",
          "Quiz Basics-A",
          "What are the rest operators? - NEW",
          "What is the spread operator? - NEW",
          "What are template strings? - NEW",
          "What are template string tags? - NEW",
          "Quiz Basics-B"
        ],
        "Types & Equality": [
          "Hello Types & Equality - NEW",
          "What are the different types in JavaScript?",
          "What is the difference between == and ===?",
          "What is NaN and how can we check for it?",
          "Quiz Types & Equality"
        ],
        "Scopes & Variables": [
          "Hello Scopes & Variables - NEW",
          "What are the different scopes in JavaScript? - NEW",
          "What is variable hoisting?",
          "What is the scope chain?",
          "What is an IIFE and why might you use it?",
          "What are function closures?",
          "Quiz Scopes & Variables"
        ],
        "Destructuring & Looping": [
          "Hello Destructuring & Looping",
          "What is destructuring?",
          "What are the different ways you can loop with `for`?",
          "Quiz Destructuring & Looping"
        ],
        "This": [
          "Hello This - NEW",
          "What does the this keyword mean?",
          "What do the functions call, bind and apply do?",
          "What is a fat arrow function?"
        ],
        "Object Orientation": [
          "Hello Object Orientation",
          "What is the prototype chain?",
          "What is the difference between prototypal and classical inheritance?",
          "Quiz Object Orientation - A",
          "What is the Constructor OO pattern? (part 1)",
          "What is the Constructor OO pattern? (part 2)",
          "What is the Prototype OO pattern?",
          "How do you use the class and extends keywords? - NEW",
          "Quiz Object Orientation - B"
        ],
        "Asynchronous Programming": [
          "Hello Asynchronous Programming",
          "What is a callback?",
          "What is callback hell?",
          "What are promises?",
          "How do you chain promises together?",
          "What does the Promise.all function do?",
          "What is async/await and how is it different from promises?",
          "Quiz Asynchronous Programming"
        ],
        "Networking": [
          "17. What is CORS?",
          "18. What is JSONP?",
          "Quiz Networking"
        ],
        "Events": [
          "What is the difference between event capturing and bubbling?",
          "What is the difference between stopPropagation and preventDefault?",
          "Quiz Events"
        ]
      },
      "requirements": [
        "A basic understanding of Javascript"
      ],
      "description": "In only seven hours you will learn enough JavaScript to transform from a junior javascript developer into a senior javascript guru.\n\nYou will dramatically improve your chances of getting past a technical interview, landing that dream job and earning more money.\nIf you are like me you learnt Javascript by just muddling along, seeing what works and learning a thing or two every day.\nHowever, without a grasp of the deeper fundamentals, you will hit quite a few head scratchy issues, introduce bugs, find it hard to read and understand framework and library code and won’t be considered a senior developer.\nThis unique course teaches you advanced javascript knowledge through a series of interview questions, with regular quizzes on the way through to cement your knowledge.\nWhat are you going to learn?\nTypes & Equality: The different types in JS and how to check if two values are really equal?\nScopes: The different scopes a variable can be declared in and how to manipulate those scopes.\nDestructuring  & Looping: Did you know that JavaScript has for methods of looping over things?\nThis: We have a whole section dedicated to the this keyword. A deep understanding of the this keyword is core to becoming a senior JavaScript developer.\nObject Orientation: The history of OO in JavaScript from the Prototype Pattern to the Pseudo-Classical/Constructor Pattern all the way to the class syntax introduced in ES6. You need to know the previous patterns to truly understand the current class pattern.\nAsynchronous Programming: JavaScript power is in its asynchronicity, you will learn all about the pros and cons of callbacks, promises and async/await.\nAdvanced topics in Networking such as CORS and JSONP.\nAdvanced topics in Event Handling such as the different event phases.\nWhy an interview format?\n\nI find that it's only when I'm facing an upcoming interview that I get into gear and really make sure I have a deep understanding of what I claim to know.\nI might know the best practice for how to solve a problem, but do I know why?\nJavascript interviews are designed to dig deeper into your knowledge of a subject, see if you are just mimicking what you have read or if you have a proper understanding.\nAlso, it's FUN, what's more satisfying than learning something, then passing a test!",
      "target_audience": [
        "Maybe your a JS developer looking to change jobs and isn’t looking forward to the interview, I mean who does?",
        "Maybe it’s been a while since you wrote JS and you want to get a refresher on the latest features.",
        "Maybe you just finished another Beginner or Intermediate JavaScript course and want to get to the next level",
        "Just about to enter the job market after a career change",
        "New graduates coming out of university"
      ]
    },
    {
      "title": "Wordpress & Elementor Mastery 2025 - Learn To Build Websites",
      "url": "https://www.udemy.com/course/complete-wordpress-elementor-mastery-course/",
      "bio": "Learn to build beautiful websites using WordPress & Elementor and how to drive free traffic using SEO & email marketing",
      "objectives": [
        "Learn how to build beautiful, responsive WordPress websites and blogs using Elementor Page Builder",
        "Discover how to build your WordPress site 'locally' on your computer without having to buy a domain name or hosting,",
        "Learn how to migrate your 'local' website on your computer and push it 'live' onto your actual domain name with hosting",
        "Understand what a domain name is, how to buy one and how to use it for your next WordPress website",
        "Grasp all of the details of WordPress posts, pages and tags and understand the relationships with categories and parent/child pages",
        "Quickly develop beautiful websites, blogs and landing pages using Elementor Page Builder and the hundreds of pre-made website templates",
        "Learn all about domain hosting, from the budget-friendly to the lightening fast web servers to catapult your search engine rankings",
        "Introduction to search engine optmisations, including on-page and off-page optimisations to maximise your organic search traffic to your website",
        "Create effective custom menu's that allow your visitors and search engines to navigate your website and quickly find what they are searching for",
        "Understand what WordPress plugins and themes are, and how to install them for extra website functionality",
        "Protect your website from hackers and spammers and prevent brute-force attacks using Wordfence",
        "Create a professional, static homepage that will keep visitors returning time and time again",
        "Learn how you can quickly 'rinse and repeat' your WordPress site and Elementor theme templates so you can quickly build more websites and blogs",
        "Build websites and blogs that are optimised for speed that visitors and search engines are going to love you for"
      ],
      "course_content": {
        "Introduction": [
          "What you will learn from this course",
          "Who is this course for?",
          "Meet the website you are going to build"
        ],
        "WordPress - Powering The Internet": [
          "What is WordPress and why we are using it",
          "Wordpress.com or Wordpress.org?"
        ],
        "Understanding The Basics": [
          "Web hosting 101",
          "Understanding what a domain name is",
          "Understanding the techy jargon (cheatsheet download)",
          "Show me what you know!"
        ],
        "Your Path to Building Your New Website": [
          "A fork in the road",
          "What to do next..."
        ],
        "Setting Up Wordpress Locally Without Hosting": [
          "Student Hub",
          "What is Local WP?",
          "Installing & configuring Local WP",
          "Creating your first WordPress site locally",
          "Hosted WordPress vs Local WP",
          "Free Elementor Pro",
          "Join a fun and aspiring community of WordPress business builders",
          "Free premium plugins"
        ],
        "Purchase Hosting & Get Elementor Pro For Free": [
          "Note on the next lesson",
          "Purchasing your Hostinger account",
          "Claiming your free domain name from Hostinger",
          "Purchasing a domain name from a different service provider",
          "Setting up your WordPress website live on your own domain name",
          "Amending your nameservers if you are using a different hosting company",
          "Introduction to your Hostinger dashboard (hpanel)"
        ],
        "WordPress - Getting under the hood": [
          "Introduction to the WordPress Dashboard",
          "Configuring our WordPress settings",
          "Introduction to the block editor - creating our first post",
          "Installing and customising themes",
          "Adding a few more posts using the classic editor"
        ],
        "The Elementor Theme Builder": [
          "What is Elementor?",
          "Understanding the WordPress template files",
          "Install & activate Elementor on our website",
          "Note on the next lesson",
          "Installing & setting up Elementor Pro",
          "Claimed Elementor Pro from me? Watch this...",
          "Introduction to the Elementor settings",
          "Elementor settings continued",
          "Experiments & features",
          "Updating our Elementor UI for a better workflow"
        ],
        "Building Our Menu, Header & Footer": [
          "Creating our header menu",
          "Designing your logos for free using canva",
          "Adding logos to our site",
          "Quick note on the 'Search Widget' we're going to be using",
          "Building our header with flexbox containers",
          "Building our header - pt 2",
          "Finishing off our header",
          "Creating our footer menu",
          "Design & build our footer"
        ],
        "Design & Build Our Homepage": [
          "Design & build the homepage - hero section",
          "Design fundamentals - colour palettes & font pairing",
          "Adding global default fonts and styles to our project",
          "Design & build the counters section",
          "Design & build the polaroids section",
          "Design & build the polaroids section - pt 2",
          "Design & build our posts section",
          "Adding a few more blog posts",
          "Design & build our parallax section",
          "Design & build our inspiration section",
          "Design & build our logo slider section",
          "Final tweaks to our homepage design"
        ]
      },
      "requirements": [
        "No prior knowledge of WordPress is required. Learn everything from scratch, with an 'over-the-shoulder- view",
        "No coding skills are required. You won't have to go near a single line of code!",
        "You will need a working computer that is connect to the internet, and an internet browser of your choice",
        "Claim Elementor Pro for FREE for 1 year when you purchase Hosting (otherwise Elementor Pro is $84 per year)",
        "An Elementor Pro subscription costs $84 per year, and is fully refundable within 30 days if you do not wish to continue with it"
      ],
      "description": "The only WordPress & Elementor Mastery series that you need to learn EVERYTHING about WordPress and building beautiful, modern websites.\nLet me ask you - have you ever had a business idea that you had to let slide because you didn't know how to build a website? Or maybe you have been quoted thousands of dollars for someone else to build one for you?\nThat all changes after this course.\nLearn how to build responsive, modern and beautiful WordPress websites in less than 21 hours. After completion, you will be able to confidently transform any business or blog ideas into life overnight with the power of WordPress and the industry-leading visual page builder - Elementor.\nWelcome to part 1 of this 4-part WordPress & Elementor Mastery series - and fully packed series of WordPress courses designed to show you how to build any type of website you can imagine. And in this top-selling course, I'm going to be taking you by the hand and progressing you from complete beginner to comfortably advanced...and I can't wait to get you started.\nBuild beautiful, modern websites for yourself,  or master your craft and start charging new clients for your new in-demand skill set.\nDoors open and opportunities reveal themselves once you can proficiently design and build a website - a website just like we will build in this WordPress & Elementor Master Course. You will also master the basics of WordPress SEO (Search Engine Optimisation) and how you can drive traffic to your website completely for free.\nIf you're ready to invoke some change and take a giant leap in your career, professional and personal life, then I look forward to seeing you inside!",
      "target_audience": [
        "A complete WordPress and Elementor development course aimed at the complete beginner - the perfect introduction to the most powerful CMS and WordPress Plugins covering all of the basics and beyond!",
        "This course is built for people who want to learn WordPress, perhaps as a means to build their own monetised blog, or as a pathway to more advanced WordPress & Elementor design skills so you can build your own (or clients) e-commerce websites, membership sites, dynamic content websites and everything inbetween!",
        "Perhaps you have dabbled with WordPress before, or even if you are complete new, now you can watch 'over-the-shoulder' of an expert and see exactly how they create stunning websites, so you can follow along and grasp all of the skills you may have missed from other similar courses",
        "No need to purchase a domain name or hosting for this one - jump straight in and set up a 'local environment' that you can work on without having to pay a penny. You will learn how you can transfer (migrate) your local site and push it onto a real website, using your domain name and hosting whenever you are ready",
        "This course is taught by Ricky Wallace, a WordPress developer, digital marketer, SEO ninja and entrepreneur. With over 11 years experience building WordPress websites, you're in safe hands to accelerate your knowledge from complete newbie to master jedi within just a few hours. Learn the power of WordPress and actually enjoy building beautiful, responsive websites and develop all of the skills to be a WordPress developer."
      ]
    },
    {
      "title": "Beginning Laravel - From Novice to Professional",
      "url": "https://www.udemy.com/course/laravel-blog-development/",
      "bio": "Get from novice to professional in Laravel by learning the concepts and build 3 Real World projects with Laravel",
      "objectives": [
        "Learn the Laravel concept and how to apply it to build real-world projects",
        "Practice your Laravel skills with challenges and assignments (solutions included)",
        "Leverage Laravel Eloquent to communicate with any databases in easy and elegant way",
        "Build 3 amazing real-world projects for your portfolio and become job-ready programmer",
        "Write clean code with Laravel"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Project Repositories"
        ],
        "Setting up our Laravel Development Environment": [
          "Section Introduction (DON'T SKIP unless you have dev environment setup)",
          "Setting up Local Development on Windows - Installing XAMPP",
          "Setting up Local Development on Windows - Install Composer & Laravel Installer",
          "Upgrade PHP version on XAMPP (OPTIONAL)",
          "Setting up Local Development on Mac (an easier way in 2024+)",
          "Setting up Local Development on Mac - Install Homebrew, PHP, MySQL and Composer",
          "Setting up Local Development on Mac - Installing Valet",
          "Alternative Local Development Environment - Installing Laravel Sail",
          "Other Tools to install",
          "My Visual Studio Code Editor settings"
        ],
        "Building blog app with Laravel 11": [
          "Introduction",
          "Setting up a new Laravel project",
          "Working with routes and views",
          "loading posts from markdown files",
          "Adding post metadata",
          "Styling our Blog with Tailwind CSS",
          "Creating application layout",
          "Refactoring application layout with Blade components",
          "Displaying author's posts",
          "Tagging the posts",
          "Displaying posts by tag"
        ],
        "Multiple files upload and image resizing with Laravel 12": [
          "Basic setup",
          "Validating images",
          "Adding multiple upload files logic",
          "Storing file meta data into database",
          "Displaying uploaded images",
          "Resize images",
          "Setup Tailwind CSS 4 and create Application layout",
          "Styling the upload images form",
          "Enhance the file input"
        ],
        "Getting started with Laravel Artisan & Tinker": [
          "Setting up new Laravel project",
          "Laravel project structure",
          "Artisan Command Line Interface",
          "Working with Tinker shell"
        ],
        "Routing": [
          "Defining our first routes",
          "Routes Parameters",
          "Constraining the route parameter format",
          "Named routes",
          "Route groups",
          "Fallback routes"
        ],
        "Views and Blade Template": [
          "Displaying data in the Blade template",
          "Creating our first view",
          "Exercise 1 - Creating view for contacts-create route",
          "Passing data to the views",
          "Another approach passing data to the views",
          "Building application layout",
          "Blade template inheritance",
          "Exercise 2 - Using blade template inheritance",
          "Including sub-views",
          "Blade control statements and loops",
          "Controlling loops and loop variables",
          "Rendering views for collection",
          "Styling the empty view",
          "Create landing page for our app"
        ],
        "Controllers": [
          "Creating our first controller",
          "Exercise 3 - From routes to controllers",
          "Grouping the controller routes",
          "Single Action Controller",
          "Dependency Injection in the Controller",
          "Resource Controller",
          "Partial resource routes",
          "API resource routes",
          "Nested resources",
          "Customizing the resource routes"
        ],
        "Working with Database": [
          "Setting up the database connection",
          "Introduction to Migrations",
          "Creating our first migration",
          "Exercise 4 - Creating Tasks table schema with migration",
          "Updating table with migration",
          "Foreign key constraints",
          "Dropping foreign keys",
          "Foreign key constraint actions",
          "Query Builder - Inserting records",
          "Query Builder - Updating and deleting records",
          "Query Builder - Retrieving all records",
          "Query Builder - Retrieving a single record",
          "Seeding database",
          "Working with Faker library"
        ],
        "Eloquent ORM": [
          "Creating our first Model",
          "Exercise 5 - Creating Contact Model",
          "Querying database with Eloquent",
          "Using the Where clauses",
          "Inserting, Updating and deleting records",
          "Mass assignment",
          "Inserting or updating method",
          "Upsert method",
          "Exercise 6 - Seeding the contacts table",
          "Exercise 7 - Calling the model in the controller",
          "Eloquent Relationship - Querying models",
          "Eloquent Relationship - Inserting related models",
          "Eloquent Relationship - Implementing The Eloquent relationship"
        ]
      },
      "requirements": [
        "You should be familiar with the basics of HTML and PHP",
        "You should have basic understanding of Object Oriented Programming"
      ],
      "description": "Welcome to Beginning Laravel - From novice to professional!\nDive into modern web development with Laravel, one of the most powerful and flexible PHP frameworks. Whether you’re just starting or looking to solidify your programming skills, this course is designed to take you from a novice to a proficient.\nYou'll start by mastering the basics—installing Laravel, understanding Artisan CLI, and setting up routes. From there, we’ll guide you through database migrations, Eloquent ORM, authentication, and advanced features like middleware and RESTful APIs.\nBy the end of the course, you’ll have the skills to build robust, dynamic web applications with hands-on projects that mirror real-world scenarios.\nWith step-by-step instructions, coding challenges, and interactive examples, you’ll gain practical experience while becoming confident in your ability to create scalable, secure, and maintainable Laravel applications.\nWhether you aim to advance your career, create your web apps, or expand your programming toolkit, this course is your gateway to becoming a Laravel professional.\nKey Highlights:\nA comprehensive introduction to Laravel’s core features\nHands-on projects: Build a full-featured web app from scratch\nIn-depth focus on routing and database interaction\nLearn advanced concepts like Eloquent ORM, blade templating, and more\nPerfect for beginners looking to become web development professionals\nDon't just take our word for it – check out what our students have to say:\n\"A good course that touches on pretty much most of the fundamental topics of learning/using Laravel.\nMy goal after a year-and-a-half of writing PHP procedurally was to learn a framework and I'm glad I chose this course to get started doing so\" - Jacob P.\n\"This is the best course I have learned on udemy. The teacher is focusing really good on subject and give it in linear way. I think I am getting professional knowledge that will help me in my work. Thank you very much mister.\" - Mohammed M.\n\"I rarely rate any course. I Already bought 4 Laravel courses, and I think this is the best course. Instructor gives different solutions/methods to solve a single problem. Clear explanation\". Mohd Rushdi.\nSo why wait? Start your journey to becoming a professional Laravel developer today! Enroll now and join the hundreds of students who have already benefited from our comprehensive and hands-on course. We can't wait to see what you'll build with your new skills.\n\n\nUpdate Histories:\n11/06/2025 - Add a new project: Multiple file uploads with Laravel 12\n22/10/2024 - Rebuild Blog project with Laravel 11\n10/11/2023 - Add new section: Export and Import data on Contact App\n26/08/2023 - Added a new section: Build Blog with Laravel 10\n11/11/2022 - Re-recorded some lectures with Laravel 9 (total 6 hours)\n21/05/2022 - Added new content:\nOne-to-one relationship\nBuild settings feature\nBuild author profile page on Larapics app\n02/04/2022 - Added new section: Authorization\n01/03/2022 - Added a new section: Working with Blade components\n20/02/2022 - Added a new section: Build a new project with Laravel 9\n10/01/2022 - Update course curriculum to support Laravel 8\n01/01/2022 - Added a new section: Working with File Storage\n06/05/2020 - Added Handling File upload\n04/06/2020 - Added N+1 Query Problem & Eager Loading\n02/03/2020 - Added new content about tidying up the code\n01/15/2020\nUpdated content on setting up Local development environment\nAdded fresh content about Authentication in Laravel 6X\n12/15/2019 - Added new content about Query scopes\n11/20/2019 - Added fresh content with Laravel 6X\n04/02/2018 - Added course contents About customizing Authentication with Laravel 5.6 Includes:\nAuthentication redirection\nBasic Login Form customization\nAdvanced login Form customization",
      "target_audience": [
        "This course is meant for students already familiar with the basics of HTML, PHP and have basic understanding of OOP",
        "PHP Developers who want to take their skill to the next level",
        "Anyone who want to learn Laravel in efficient way"
      ]
    },
    {
      "title": "Java Design Patterns & SOLID Design Principles",
      "url": "https://www.udemy.com/course/design-patterns-in-java-concepts-hands-on-projects/",
      "bio": "A master guide to gang of four design patterns & SOLID design principles using Java",
      "objectives": [
        "Master 26 design patterns including 23 design patterns of gang of four & other new modern design patterns",
        "Master the SOLID design principles using Java with hands on examples along with design patterns",
        "Get a complete understanding of Java design patterns & understand where to use them in Java code",
        "Learn the differences between competing design patterns to choose correct solution to your problem",
        "Get real world examples of design patterns usage with hands on projects for every design pattern",
        "Become senior Java developer by learning about design patterns and SOLID design principles",
        "Understand & implement all creational, structural & behavioral gang of four design patterns using Java",
        "Understand & implement Null Object, Object Pool design patterns using Java",
        "Comprehensive knowledge about limitations, comparisons, real world usage & hand on examples of design patterns using Java"
      ],
      "course_content": {
        "SOLID Design Principles": [
          "Section Introduction",
          "Single Responsibility Principle",
          "Single Responsibility Principle - Hands on",
          "Open-Closed Principle",
          "Open-Closed Principle - Hands On",
          "Liskov Substitution Principle",
          "Liskov Substitution Principle - Hands On",
          "Interface Segregation Principle",
          "Interface Segregation Principle - Hands On",
          "Dependency Inversion Principle",
          "Dependency Inversion Principle - Hands On",
          "SOLID Principles Quiz"
        ],
        "Introduction": [
          "Design Patterns - Introduction",
          "Quiz - Design Pattern Introduction"
        ],
        "Creational Design Patterns": [
          "Creational Patterns - Introduction"
        ],
        "Builder": [
          "Builder - Introduction",
          "Builder Implementation Steps",
          "Builder - Example UML",
          "Builder - Implementation Part 1",
          "Builder - Implementation Part 2",
          "Builder - Implementation & Design Considerations",
          "Builder - Examples",
          "Builder - Comparison with Prototype",
          "Builder - Pitfalls",
          "Builder - Summary",
          "Quiz - Builder Design Pattern"
        ],
        "Simple Factory": [
          "Simple Factory - Introduction",
          "Simple Factory - Implementation Steps",
          "Simple Factory - Implementation",
          "Simple Factory - Implementation & Design Considerations",
          "Simple Factory - Example",
          "Simple Factory - Comparison with Factory Method",
          "Simple Factory - Pitfalls",
          "Simple Factory - Summary",
          "Quiz - Simple Factory"
        ],
        "Factory Method": [
          "Factory Method - Introduction",
          "Factory Method - Implementation Steps",
          "Factory Method - Example UML",
          "Factory Method - Implementation",
          "Factory Method - Implementation & Design Considerations",
          "Factory Method - Example",
          "Factory Method - Pitfalls",
          "Factory Method - Summary",
          "Quiz - Factory Method"
        ],
        "Prototype": [
          "Prototype - Introduction",
          "Prototype - Implementation Steps",
          "Prototype - Example UML",
          "Prototype - Implementation",
          "Prototype - Implementation & Design Considerations",
          "Prototype - Example",
          "Prototype - Comparison with Singleton",
          "Prototype - Pitfalls",
          "Prototype - Summary",
          "Quiz - Prototype Design Pattern"
        ],
        "Abstract Factory": [
          "Abstract Factory - Introduction",
          "Abstract Factory - Implementation Steps",
          "Abstract Factory - Example UML",
          "Abstract Factory - Implementation",
          "Abstract Factory - Implementation & Design Considerations",
          "Abstract Factory - Example",
          "Abstract Factory - Comparison with Factory Method",
          "Abstract Factory - Pitfalls",
          "Abstract Factory - Summary",
          "Quiz - Abstract Factory"
        ],
        "Singleton": [
          "Singleton - Introduction",
          "Singleton - Implementation Steps",
          "Singleton - Implementation - Eager Singleton",
          "Singleton - Implementation - Lazy Singleton",
          "Singleton - Implementation - Initialization Holder",
          "Singleton - Implementation - Enum",
          "Singleton - Implementation & Design Considerations",
          "Singleton - Example",
          "Singleton - Comparison with Factory Method",
          "Singleton - Pitfalls",
          "Singleton - Summary",
          "Quiz - Singleton"
        ],
        "Object Pool": [
          "Object Pool - Introduction",
          "Object Pool - Implementation Steps",
          "Object Pool - Example UML",
          "Object Pool - Implementation",
          "Object Pool - Implementation & Design Considerations",
          "Object Pool - Example",
          "Object Pool - Comparison with Prototype",
          "Object Pool - Pitfalls",
          "Object Pool - Summary",
          "Quiz - Object Pool"
        ]
      },
      "requirements": [
        "You should have a basic knowledge of Java & basic programming concepts",
        "If you want to follow along, you need any Java code editor & a computer to run it"
      ],
      "description": "Course Overview\n\nThis course starts with SOLID Design Principles in Java. It will then provide a comprehensive introduction to Java Design patterns with practical, hands on exercises.\n\n\nWhat are SOLID Design Principles?\nSOLID design principles are almost a mandatory skill for every Java developer. These principles enable you to write most reusable & clean Java code in your projects.\nYou'll learn SOLID Principles which are:\nSingle Responsibility Principle\nOpen-Closed Principle\nLiskov Substitution Principle\nInterface Segregation Principle\nDependency Inversion Principle\n\n\nAll these principles are explained in detail and you'll refactor existing Java code and apply these principles in hands on exercise along with me.\nThen we move on to Java Design Patterns.\nTo learn about the design patterns using Java programming language we'll discuss:\n\nLearn what kind of problems are solved by each design pattern.\nDiscuss various roles in the design pattern using UML diagrams.\nWe'll use UML of example that we are going to solve as well as UMLs from gang of four book\nDiscuss how the design  pattern is applied in the example & how various parts fit together.\nHands on example using Java in Eclipse IDE that uses the design pattern.\nVarious design & implementation considerations for every design pattern.\nDiscuss how the design pattern varies from another similar pattern.\nSee where a design pattern is used in real life.\nThis course covers all the classic design patterns from the Gang of Four (GoF) book. In addition we'll discuss few newer design patterns that are used in modern software development. We'll discuss how a pattern can be implemented in various ways & how we can tailor them to be used with Java language.\nThis course is the Most Comprehensive course on Java Design Patterns that you can find.\n\n\nSo, what are Design Patterns & why should you care?\nDesign patterns represent solutions to common problems, which you face while doing programming. These solutions are reusable and can solve a wide variety of problems. These became popular with the release of classic book on the subject \"Elements of Reusable Object-Oriented Software\" writtern by Erich Gamma, John Vlissides, Ralph Johnson and Richard Helm (these authors are known as Gang of Four and so the common abbreviation GoF book :) )\nOne problem while studying this book as a Java developer is that the authors are using C++ to demonstrate a pattern, which was the most popular & widely used programming language at the time. So you'll see examples using C++ language features like pointers, copy constructors etc. which do not translate easily to Java.\nThis course will help greatly in that aspect. We'll study each design pattern using Java to its full potential.\n\n\nWhat is covered in this course?\n\nThis course covers SOLID Design Principles and 26 design patterns in all. We'll cover following:\n\nSOLID Design Principles: Learn about Single Responsibility, Open-Closed, Liskov substitution, Interface segregation & Dependency Inversion principles.\nCreational Design Patterns: Simple Factory, Abstract Factory, Factory Method, Singleton, Builder, Prototype & Object Pool\nStructural Design Patterns: Object & Class Adapters, Decorator, Bridge, Facade, Static & Dynamic Proxy, Flyweight & Composite\nBehavioral Design Patterns: Chain of Responsibility, Command, Interpreter, Mediator, Iterator, Memento, Observer, State, Strategy, Template Method, Visitor, & Null Object\nEach design patterns is also implemented in a follow along coding lecture.\n\n\nHow the Course is Structured?\nWe focus on live coding along with theory. Each design is implemented in a live coding session (which you can follow along) as well as discussed with UML & slides. After studing a section you'll know almost everything about the design pattern.\nThis course is created with focus on being used as a reference. So each design pattern is discussed in it's own section with a separated lecture for each aspect of the design pattern. Each section is organized as following lectures:\n1. Introduction - This lecture introduces pattern, a problem that it solves & a formal UML diagram\n2. Implementation Steps - This lecture will discuss how you'll implement this pattern in Java.\n3. Example UML - We discuss the UML of the hands on problem we're going to solve.\n4. Implementation - In this lecture we'll implement the design pattern in Java using Eclipse IDE\n5. Implementation & Design Considerations - Some important points about performance, variations & practical advice on using the pattern\n6. Real World Example - In this lecture we'll see how the pattern is used in real life by Java's own class library & popular frameworks like Spring, JSF\n7. Comparison with Similar pattern - See how the pattern is different than another similar pattern.\n8. Pitfalls - Many pattern have some drawbacks. This lecture will show you what those are.\n9. Summary - This lecture will summarise all the information about the pattern.\nAs you can see, by breaking a single design pattern in smaller topics, you can easily watch only those parts that you need in future.\n\n\nWhat is provided with the Course?\n\nWe have provided all code samples from the hands on lectures. You can download the starter code & follow along or you can download the finished code to study on your own.\nAll UML diagram with description of each role in the design pattern is provided as PDF in summary video. These slides are enough to quickly revise design pattern structure.\nA PDF guide to all design pattern summaries with code samples and UML diagrams.\nWho should take this Course?\n\nBeginner as well as experience Developers.\nSoftware Designers & Architects.",
      "target_audience": [
        "This course will benefit every Java developer, regardless of your experience, you'll find something to use.",
        "If you are just beginning your career, then you must take this course. It'll benefit you most",
        "If you are working in Java for 1 - 4 years, this course'll help you advance to next stage in your career",
        "If you are preparing for interview, this course is a must for you.",
        "If you are experience developer, this course will help you brush up your software design skills"
      ]
    },
    {
      "title": "Go Java Full Stack with Spring Boot and Angular",
      "url": "https://www.udemy.com/course/full-stack-application-development-with-spring-boot-and-angular/",
      "bio": "Become a Full Stack Java Developer. Build Your First Java Full Stack Application with Angular and Spring Boot.",
      "objectives": [
        "You will Develop Your First FULL STACK Application with Angular and Spring Boot",
        "You will learn the Basics of Building AWESOME Frontend Applications with Angular",
        "You will be introduced to Building Great RESTful APIs with Spring Boot",
        "You will Learn to use Spring Security to configure Basic Authentication and JWT",
        "You will learn to Solve the Challenges of Connecting an Angular Frontend to a RESTful API",
        "You will learn the basics of Angular - Angular Modules, Components, Data Binding and Routing",
        "You will learn to connect REST API to JPA/Hibernate with Spring Boot",
        "You will understand the best practices in designing RESTful web services",
        "You will learn to use a wide variety of Spring Boot Starter Projects - Spring Boot Web, and Spring Boot Data JPA",
        "You will learn the magic of Spring Boot - Auto Configuration, Spring Initializr and Starter Projects",
        "You will develop a Todo Management Full Stack Application step by step with login and logout functionalities",
        "You will understand how to make best use of Spring Boot Actuator and Spring Boot Developer Tools",
        "You will learn to secure RESTful API with Spring Boot and Spring Security"
      ],
      "course_content": {},
      "requirements": [
        "You have an attitude to learn while having fun :)",
        "You have some programming experience with JavaScript, Java and Spring.",
        "We will help you learn the basics of Modern JavaScript, TypeScript, Spring Boot and JPA",
        "We will help you install Chrome, Eclipse, Visual Studio Code and Node JS (for npm)"
      ],
      "description": "Welcome to this Amazing Course on Full Stack Web Development with Angular and Spring Boot. This course is designed to be a Perfect First Step as an Introduction to Angular and Full Stack Development for Java & Spring Developers.\nZero Experience with Angular, TypeScript (AND/OR) Modern JavaScript?     No Problem.  Start Learning Now!\n\n\nUPDATE: NEW Section on Spring Security\n\n\nWHAT OUR LEARNERS ARE SAYING:\n5 STARS -  This is the perfect course for Java developers to use to get familiar with Angular and do it beyond just an elementary kind of familiarity.  Very good job, instructor.  Thank you!\n5 STARS -  Yes the Journey was Amazing, the Tutor is Awesome. Not a single doubt & error i faced while following Step-by-Step videos. I would suggest this course to all those who really want to Learn Spring Boot + Angular. The Explanation was clear and systematic. I would like to thank Mr. Rangakaran as he is the best Tutor... :)\n5 STARS -  Wonderful course with practical content taught in a very intuitive way; building from lesson to lesson. As a web application developer with some experience in both Spring Boot and Angular, this course was perfect when providing a clear way use both technologies together. I really appreciate this instructor, and look forward to more courses.\n5 STARS -  Video explanations clear and easy to follow. Recommended!\n5 STARS -  Very good course. The instructor is very knowledgeable about the material and walks you through it in a clear way. Good start to learning about Full Stack development.\n5 STARS -  Awesome explanation, great course specially for Java developer who wants to groom herself/himself to full stack java development using Spring boot and Angular.\n\n\nCOURSE OVERVIEW\nDeveloping your first full stack web application with Angular and Spring Boot is fun.\nIn this course, you will learn the basics of full stack web development developing a Basic Todo Management Application using Angular, Spring Boot, and Spring Security Frameworks.  You will build the Todo Management Application step by step - in more than 100 steps.\nYou will be using Angular (Frontend Framework), TypeScript Basics, Angular CLI(To create Angular projects), Spring Boot (REST API Framework), Spring (Dependency Management), Spring Security (Authentication and Authorization - Basic and JWT), BootStrap (Styling Pages), Maven (dependencies management), Node (npm), Visual Studio Code (TypeScript IDE), Eclipse (Java IDE) and Tomcat Embedded Web Server.\nWe will help you set up each one of these.\nAngular is a complete front end framework with a wide range of features. Spring Boot is an awesome framework to build RESTful API and Microservices. Let's combine these frameworks and create an awesome full stack web application.\n\n\nCOURSE HIGHLIGHTS\nOverview\nStep01 - Understanding Full Stack Application Architecture\nStep02 - Quick Overview of Modern JavaScript and TypeScript\nStep03 - Installing Angular CLI - Awesome Tool to create Angular Projects\nStep04 - Creating and Launching Angular Application with Angular CLI\nStep05 - Importing Angular App into Visual Studio Code\nStep06 - Exploring Angular CLI Commands - test, lint, e2e, serve, build\nStep07 - Exploring Angular CLI Project Structure\n\n\nGetting Hands on With Angular\nStep08 - Introduction to Angular Components - Basics\nStep09 - Introduction to Angular Components - Playing with AppComponent\nStep10 - Generating Welcome Component with ng generate\nStep11 - Language Variations With an Example - Java, JavaScript and TypeScript\nStep12 - Generating and Setting up Login Component\nStep13 - Understanding Event Binding - Adding click event on Login Page\nStep14 - Using ngModel with 2 Way Data Binding in Login Page\nStep15 - Quick Review of Data Binding Approaches\nStep16 - Adding Hardcoded Authentication to Logic Component - ngIf directive\nStep17 - Implementing Routes for Login, Welcome and Error Components\nStep18 - Implementing Routing from Login to Welcome Component\nStep19 - Adding Route Parameter for Welcome Component\nStep20 - Create List Todos Component with ng generate\nStep21 - Create a Link to Todos in Welcome Component\nStep22 - Best Practice - Create a Todo Class\nStep23 - Quick Introduction to Angular Modules\nStep24 - Understanding Bootstrapping of Angular App with Root Module and Component\nStep25 - Quick Review - Angular Modules and Components\nStep26 - Overview of Next Few Steps - Bootstrap, Menu, Footer and Refactoring\nStep27 - Adding Bootstrap Framework and Creating Components for Menu and Footer\nStep28 - Using Bootstrap to Create a Menu with Navigation Links\nStep29 - Styling Footer and Other Components with CSS and Bootstrap\nStep30 - Good Practice - Use RouterLink instead of href for Routes\nStep31 - Creating an Independent Authentication Service Component\nStep32 - Using Session Storage to Store User Authentication Token\nStep33 - Enabling Menu Links Based on User Authentication Token\nStep34 - Implementing Logout to remove User Authentication Token\nStep35 - Securing Components using Route Guards - Part 1\nStep36 - Securing Components using Route Guards - Part 2\nStep37 - Quick Review - Authentication Service, Dependency Injection and Route Guards\n\n\nIntroduction to Web Services and REST\nStep41 - What is a Web Service?\nStep42 - Important How Questions related to Web Services\nStep43 - Web Services - Key Terminology\nStep44 - Introduction to RESTful Web Services\n\n\nGetting Up and Running with REST and Spring Boot\nStep45 - Initializing a RESTful Services Project with Spring Boot\nStep46 - Creating a Hello World Service\nStep47 - Enhancing the Hello World Service to return a Bean\nStep48 - Quick Review of Spring Boot Auto Configuration and Dispatcher Servlet - What's happening in the background?\nStep49 - Enhancing the Hello World Service with a Path Variable\n\n\nConnecting Angular Frontend to Spring Boot Restful Services\nStep50 - Connecting Angular Frontend with Restful API - 1 - Creating Data Service\nStep51 - Connecting Angular Frontend with Restful API - 2 - HttpClientModule and HttpClient\nStep52 - Connecting Angular Frontend with Restful API - 3 - Understanding Observable\nStep53 - Connecting Angular Frontend with Restful API - 4 - Understanding Subscribe\nStep54 - Connecting Angular Frontend with Restful API - 5 - Handling Error Responses\nStep55 - Calling Welcome HTTP Service with Path Variables\nStep56 - Designing RESTful Services for Todo Resource\nStep57 - Creating REST API for retrieving Todo List\nStep58 - Connecting Angular Frontend with Todo List RESTful Service\nStep59 - Creating REST API to delete a Todo - DELETE Request Method\nStep60 - Adding Delete Todo Feature to Angular Frontend\nStep61 - Creating Todo Component and Handle Routing\nStep62 - Designing Todo Page with Bootstrap Framework\nStep63 - Creating Retrieve Tod0 Service and Connect Angular Frontend\nStep64 - Improve Todo Page Appearance\nStep65 - Creating REST API for Updating Todo - PUT Request Method\nStep66 - Creating REST API for Creating a Todo - POST Request Method\nStep67 - Implementing Update Todo Feature in Angular Frontend\nStep68 - Implementing New Todo Feature in Angular Frontend\nStep69 - Improving Todo Form - Validation and Form Submit on Enter - ngSubmit\nStep70 - Enhancing Validation Messages on Todo Page\n\n\nImplementing Spring Security with Basic Authentication\nStep71 - Overview of Security with Basic Auth and JWT\nStep72 - Setting up Spring Security\nStep73 - Configure standard userid and password\nStep74 - Enhancing Angular Welcome Data Service to use Basic Auth\nStep75 - Configure Spring Security to disable CSRF and enable OPTION Requests\nStep76 - Creating Angular HttpInterceptor to add Basic Auth Header\nStep77 - Configure HttpInterceptor as Provider in App Module\nStep78 - Create Basic Authentication RESTful Service in Spring Boot\nStep79 - Create Angular Basic Authentication Service\nStep80 - Connect Login Page to Basic Authentication Service - Part 1\nStep81 - Connect Login Page to Basic Authentication Service - Part 2\nStep82 - Refactoring Angular Basic Authentication Service\nStep83 - Refactoring HttpInterceptor to use Basic Authentication Token\nStep84 - Best Practice - Use Constants for URLs and Tokens\n\n\nConnecting Spring Security with JWT\nStep85 - Introduction to JWT\nStep86 - Importing JWT Framework into Eclipse\nStep87 - Quick Tip - Resolving JWT Compilation Errors\nStep88 - Executing JWT Resources - Get Token and Refresh Token\nStep89 - Understanding JWT Spring Security Framework Setup\nStep90 - Creating a New User with Encoded Password\nStep91 - Using JWT Token in Angular Frontend\n\n\nConnecting REST API With JPA and Hibernate\nStep92 - Setting up Todo Entity and Populating Data\nStep93 - Connecting GET REST APIs to JPA Repository\nStep94 - Connecting POST, PUT and DELETE REST APIs to JPA Repository\n\n\nStart Learning Now. Hit the Enroll Button!",
      "target_audience": [
        "You want to develop your first full stack application with Angular and Spring Boot",
        "You are a Java Developer aiming to get started with Full Stack Development with Angular and Spring Boot",
        "You are a Spring Boot Developer looking to Build a Full Stack Application with Angular",
        "You want to learn the fundamental building blocks of Angular Frontend Framework",
        "You want to learn to build basic RESTful API and Services with Spring Boot Framework",
        "You want to learn how to Secure REST API with Spring Boot and Spring Security with Basic Authentication and JWT"
      ]
    },
    {
      "title": ".NET / C# Interview Questions with Answers.",
      "url": "https://www.udemy.com/course/csharp-interview-questions-answers/",
      "bio": ".NET / C# Interview Questions with Answers. Crack you next Csharp interview or .NET Interview with confidence.",
      "objectives": [
        "Understanding what kind of Fundamental questions are asked in C# and .NET interviews and how clear the same.",
        "Answering fundamental C# questions around .NET core vs .NET framework vs .NET 5.0 , IL code , JIT,CTS,CLS,CLR, Managed , Unmanaged code and Garbage collector.",
        "How to confidently answer questions around stack , heap , value types, reference types ,boxing , unboxing,LIFO,FIFO, implicit casting and explicit casting.",
        "Threading and collections are favorites in C# interviews. A complete section dedicated to answer questions like array,arraylist,array vs arraylist and generics.",
        "No C# interview is complete with out a question on delegates and events. A full section dedicated to delegates and events and how to answer their differences",
        "Dedicated OOP Interview section covering Classes , Objects , Polymorphism , Inheritance , virtual methods,overloading ,overriding ,abstract class vs interfaces",
        "Handling tricky questions on Aggregation, Composition, Association, UML diagrams , Shadowing, Sealed classes, Nested classes and partial classes.",
        "How to answer questions around SOLID (SRP,OCP,LSP,ISP and Dependency Inversion) , DI(Dependency injection), IOC(Inversion of Control).",
        "Garbage collector questions covering Managed,Unmanaged,Generations,GC0,GC1,GC2,Finalize vs Destructor , Dispose Pattern,Using keyword, Weak & Strong references",
        "Dedicated section covering basics of design patterns ,Structural , Behavioral, Creational, Singleton Pattern, Prototype, Template ,Adapter, Repository, CQRS"
      ],
      "course_content": {
        "Lesson 1:- Stack,Heap,Boxing,Unboxing,Array,ArrayList,Generics,Threading": [
          "Lesson 1:- Covers 30 important C# Interview questions."
        ],
        "Lesson 2 - Questions on Delegates,Event and Delegates vs Events.": [
          "Delegates,Event and Delegates vs Events."
        ],
        "Lesson 3:- OOP, Abstraction,Encapsulation,Inheritance, Overriding & overloading.": [
          "OOP,Abstraction,Encapsulation,Inheritance,Virtual,Overriding and overloading."
        ],
        "Lesson4:- Polymorphism,Static vs Dynamic polymorphism and operator overloading.": [
          "Polymorphism, Static vs Dynamic polymorphism and operator overloading."
        ],
        "Lesson 5:- Tricky Questions around Abstract classes and Interfaces.": [
          "Tricky Questions around Abstract classes and Interfaces."
        ],
        "Lesson 6 :- Answering the most asked Question \"Abstract classes vs Interface\"": [
          "How to Answer Abstract class vs Interface Question"
        ],
        "Lesson 7:- Questions around constructors & parent child constructor.": [
          "How to answer Questions around constructors."
        ],
        "Lesson 8:- Questions around Shadowing,Sealed,Nested classes and partial classes.": [
          "Questions around Shadowing,Sealed,Nested classes and partial classes."
        ],
        "Lesson 9:- Questions Around SOLID principles , Dependency injection (DI) and IOC": [
          "Questions Around SOLID principles , Dependency injection (DI) and IOC"
        ],
        "Lesso 10:- Explain & Differentiate Composition, Aggregation & Association in C#.": [
          "Explain & Differentiate Composition, Aggregation and Association in C#."
        ]
      },
      "requirements": [
        "Should have knowledge of C#. Remember this is a interview preparation revision course and not short cut to easy jobs in C#."
      ],
      "description": "If you are looking to clear C# and .NET Interviews then you have landed at the right course. You can be a hero in your project/company , you must have handled complex scenarios.\nBut failing to answer simple .NET , C# Fundamental question during interview can lead to a very negative impact during interviews.\nThis course focuses on Fundamental questions around C# and .NET... Happy job hunting.\nBelow is the list of C# interview questions covered in the Series.\nPart 1 - Stack, Heap, Boxing, Unboxing, Array, ArrayList, Generics, Threading\nQuestion 1 :- Explain difference between .NET and C# ?\nQuestion 2 :- .NET Framework vs .NET Core vs .NET 5.0\nQuestion 3 :- What is IL ( Intermediate Language) Code ?\nQuestion 4 :- What is the use of JIT ( Just in time compiler) ?\nQuestion 5 :- Is it possible to view IL code ?\nQuestion 6 :- What is the benefit of compiling in to IL code ?\nQuestion 7 :- Does .NET support multiple programming languages ?\nQuestion 8 :- What is CLR ( Common Language Runtime) ?\nQuestion 9 :- What is managed and unmanaged code ?\nQuestion 10 :- Explain the importance of Garbage collector ?\nQuestion 11 :- Can garbage collector claim unmanaged objects ?\nQuestion 12 :- What is the importance of CTS ?\nQuestion 13 :- Explain CLS ?\nQuestion 14 :- Difference between Stack vs Heap ?\nQuestion 15 :- What are Value types & Reference types?\nQuestion 16 :- Explain boxing and unboxing ?\nQuestion 17 :- What is consequence of boxing and unboxing ?\nQuestion 18 :- Explain casting, implicit casting and explicit casting ?\nQuestion 19 :- What can happen during explicit casting ?\nQuestion 20 :- Differentiate between Array and ArrayList ?\nQuestion 21 :- Whose performance is better array or arraylist ?\nQuestion 22 :- What are generic collections ?\nQuestion 23 :- What are threads (Multithreading)?\nQuestion 24 :- How are threads different from TPL ?\nQuestion 25 :- How do we handle exceptions in C#(try/catch)?\nQuestion 26 :- What is the need of finally?\nQuestion 27 :- Why do we need the out keyword ?\nQuestion 28 :- What is the need of Delegates ?\nQuestion 29 :- What are events ?\nQuestion 30 :- What's the difference between Abstract class and interface ?\nPart 2 - Questions on Delegates, Event and Delegates vs Events.\nQuestion 31  :- What is a delegate and How to create a delegate ?\nQuestion 32  :- Where have you used delegates ?\nQuestion 33  :- What is a Multicast delegates ?\nQuestion 34  :- What is a Event ?\nQuestion 35  :- How to create a event ?\nQuestion 36  :- Delegate vs Events.\nPart 3 - OOP, Abstraction, Encapsulation, Inheritance, Overriding & overloading.\nQuestion 37 :- Why do we need OOP ?\nQuestion 38 :- What are the important pillars of OOPs ?\nQuestion 39 :- What is a class and object ?\nQuestion 40 :- Abstraction vs Encapsulation?\nQuestion 41 :- Explain Inheritance ?\nQuestion 42 :- Explain virtual keyword ?\nQuestion 43 :- What is overriding ?\nQuestion 44 :- Explain overloading ?\nQuestion 45 :- Overloading vs Overriding ?\nPart 4 - Polymorphism, Static vs Dynamic polymorphism and operator overloading.\nQuestion 46 :- What is polymorphism ?\nQuestion 47 :- Can polymorphism work with out inheritance ?\nQuestion 48 :- Explain static vs dynamic polymorphism ?\nQuestion 49 :- Explain operator overloading ?\nPart 5 - Tricky Questions around Abstract classes and Interfaces.\nQuestion 50  :- Why do we need Abstract classes ?\nQuestion 51  :- Are Abstract methods virtual ?\nQuestion 52  :- Can we create a instance of Abstract classes ?\nQuestion 53  :- Is it compulsory to implement Abstract methods ?\nQuestion 54  :- Why simple base class replace Abstract class ?\nQuestion 55  :- Explain interfaces and why do we need it ?\nQuestion 56  :- Can we write logic in interface ?\nQuestion 57  :- Can we define methods as private in interface ?\nQuestion 58  :- If i want to change interface what's the best practice ?\nQuestion 59  :- Explain Multiple inheritance in Interface ?\nQuestion 60  :- Explain Interface Segregation principle ?\nQuestion 61  :- Can we create instance of interface ?\nQuestion 62  :- Can we do Multiple inheritance with Abstract classes ?\nPart 6 - Answering the most asked Question \"Abstract classes vs Interface\".\nQuestion 63 :- Difference between Abstract Class & Interfaces?\nPart 7 - Questions around constructors & parent child constructor.\nQuestion 64  :- Why do we need constructors ?\nQuestion 65  :- In parent child which constructor fires first ?\nQuestion 66  :- How are initializers executed ?\nQuestion 67  :- How are static constructors executed in Parent child ?\nQuestion 68  :- When does static constructor fires ?\nPart 8 - Questions around Shadowing, Sealed, Nested classes and partial classes.\nQuestion 69 :- What is Shadowing?\nQuestion 70 :- Explain method hiding?\nQuestion 71 :- Shadowing vs Overriding ?\nQuestion 72 :- When do we need Shadowing ?\nQuestion 73 :- Explain Sealed Classes ?\nQuestion 74 :- Can we create instance of sealed classes ?\nQuestion 75 :- What are nested classes and when to use them ?\nQuestion 76 :- Can Nested class access outer class variables ?\nQuestion 77 :- Can we have public, protected access modifiers in nested class ?\nQuestion 78 :- Explain Partial classes ?\nQuestion 79 :- In What scenarios do we use partial classes ?\nPart 9 - Questions Around SOLID principles , Dependency injection (DI) and IOC\nQuestion 80 :- What is SOLID ?\nQuestion 81 :- What is the full form of SOLID ?\nQuestion 82 :- What is the goal of SOLID ?\nQuestion 83 :- Explain SRP with A example ?\nQuestion 84 :- What is the benefit of SRP ?\nQuestion 85 :- Explain OCP with a example ?\nQuestion 86 :- What is the  benefit of OCP ?\nQuestion 87 :- Can you explain LISKOV Principle and it's violation?\nQuestion 88 :- How can we fix LISKOV Problem ?\nQuestion 89 :- Explain Interface Segregation Principle ?\nQuestion 90:- Is there a connection between LISKOV and ISP ?\nQuestion 91 :- Define dependency inversion ?\nQuestion 92 :- What is higher level module and lower level module ?\nQuestion 93 :- How does dependency inversion benefit, show with an example ?\nQuestion 94 :- Will only Dependency inversion solve decoupling problem ?\nQuestion 95 :- Why do developers  move object creation outside high lever module ?\nQuestion 96 :- Explain IOC ( Inversion of Control) ?\nQuestion 97 :- Explain Dependency Injection with an example ?\nQuestion 98 :- Is SOLID, IOC and DI design pattern or Principle?\nQuestion 99 :- Is only SOLID Enough for good code/ architecture ?\nPart 10- Explain & Differentiate Composition, Aggregation and Association in C#.\nQuestion 100 :- What are the different types of \"USING/HAS A\" relationship ?\nQuestion 101 :- What is a composition relationship ?\nQuestion 102 :- Explain Aggregation ?\nQuestion 103 :- Explain Association ?\nQuestion 104 :- Differentiate between Composition vs Aggregation vs Association ?\nQuestion 105 :- UML Symbols for Composition, Aggregation and Association\nPart 11 - Crack questions on Stack, Heap, Boxing, Unboxing, Value &  reference types\nQuestion 106 :- Explain stack and Heap ?\nQuestion 107 :- Where are stack and heap stored ?\nQuestion 108 :- What goes on stack and what goes on heap ?\nQuestion 109:- How is the stack memory address arranged ?\nQuestion 110 :- How is stack memory deallocated LIFO or FIFO ?\nQuestion 111 :- How are primitive and objects stored in memory?\nQuestion 112 :- Can primitive data types be stored in heap ?\nQuestion 113 :- Explain value types and reference types ?\nQuestion 114 :- Explain byval and byref ?\nQuestion 115 :- Differentiate between copy byvalue and copy byref ?\nQuestion 116 :- What is boxing and unboxing ?\nQuestion 117 :- Is boxing unboxing good or bad ?\nQuestion 118 :- Can we avoid boxing and unboxing ?\nQuestion 119 :- What effect does boxing and unboxing have on performance ?\nQuestion 120 :- Are string allocated on stack or heap ?\nQuestion 121 :- How many stack and heaps are created for an application ?\nQuestion 122 :- How are stack and heap memory deallocated ?\nQuestion 123 :- Who clears the heap memory ?\nQuestion 124 :- Where is structure allocated Stack or Heap ?\nQuestion 125 :- Are structures copy byval or copy byref ?\nQuestion 126 :- Can structures get created on Heap ?\nPart 12 - What is Garbage collector, Managed vs UnManaged code, Dispose Pattern, Memory Leaks, weak VS strong references ?\nQuestion 127: - Explain Garbage collector (GC)?\nQuestion 128:- How does Garbage collector know when to clean the objects ?\nQuestion 129 :- Is there a way we can see this Heap memory ?\nQuestion 130 :- Does Garbage collector clean primitive types ?\nQuestion 131: - Managed vs UnManaged code/objects/resources?\nQuestion 132:- Can garbage collector clean unmanaged code ?\nQuestion 133:- Explain Generations  ?\nQuestion 134:- What is GC0,GC1, and  GC2 ?\nQuestion 135:- Why do we need Generations ?\nQuestion 136:- Which is the best place to clean unmanaged objects ?\nQuestion 137:- How does GC behave when we have a destructor ?\nQuestion 138:- What do you think about empty destructor ?\nQuestion 139:- Explain the Dispose Pattern?\nQuestion 140 :- Finalize vs Destructor ?\nQuestion 141:- What is the use of using keyword ?\nQuestion 142:- Can you force Garbage collector ?\nQuestion 143:- Is it a good practice to force GC ?\nQuestion 144:- How can we detect a memory issues ?\nQuestion 145:- How can we know the exact source of memory issues ?\nQuestion 146 :- What is a memory leak ?\nQuestion 147 :- Can .NET Application have memory leak as we have GC?\nQuestion 148:- How to detect memory leaks in .NET applications ?\nQuestion 149:- Explain weak and strong references ?\nQuestion 150 :- When will you use weak references ?\nLesson 13 :- Questions around Design Pattern Basics, Types, Singleton Pattern, Prototype, Template and Adapter.\nQuestion 151:- What are design patterns?\nQuestion 152 :- Which are the different types of design patterns?\nQuestion 153 :- Explain structural , Behavioral and Creational design pattern ?\nQuestion 154:- Explain Singleton Pattern and the use of the same?\nQuestion 155:- How did you implement singleton pattern?\nQuestion 156:- Can we use Static class rather than using a private constructor?\nQuestion 157:- Static vs Singleton pattern?\nQuestion 158:- How did you implement thread safety in Singleton?\nQuestion 159:- What is double null check in Singleton?\nQuestion 160:- Can Singleton pattern code be made easy with Lazy keyword?\nQuestion 161:- Can we rid of this double null check code?\nLesson 14 :- Repository Pattern and Unit of Work Design Pattern Interview Questions.\nQuestion 162:- What is the use of repository pattern?\nQuestion 163:- Is Dal (Data access Layer) and Repository same?\nQuestion 164:- What is Generic repository pattern ?\nQuestion 165:- Is abstraction the only benefit of Repository?\nQuestion 166:- How to implement transaction in repository?\nQuestion 167:- What is Unit of work design pattern?\nQuestion 168:- Do we need repository pattern as EF does almost the same work?\nQuestion 169:- Did you do unit testing with Repository ?\nQuestion 170:- How does repository pattern make unit testing easy?\nQuestion 171:- How can we do mock testing with Repository?\nLesson 15:- Most asked Factory Pattern, DI and IOC Interview Questions.\nQuestion 172 :- What is Factory pattern and how does it benefit?\nQuestion 173 :- How does centralizing object creation helps in loose coupling ?\nQuestion 174 :- What is IOC and DI ?\nQuestion 175 :- DI vs IOC ?\nQuestion 176 :- What is a service locator ?\nQuestion 177:- Service Locator vs DI ?\nQuestion 178 :- Which is good to use Service Locator or DI ?\nQuestion 179 :- Can not we use a simple class rather than interface for DI ?\nQuestion 180 :- Is DI a Factory Pattern?\nQuestion 181 :- So If you just centralize object creation is it Factory pattern?\nQuestion 182 :- Static DI and Dynamic DI ?\nQuestion 183 :- In which scenarios to use Static DI vs Dynamic DI ?\nLesson 16 :- The Real Factory and Abstract Factory Patterns.\nQuestion 184 :- The real Factory pattern ?\nQuestion 185 :- Factory Method vs Factory pattern ?\nQuestion 186 :- How are new behaviors created in FP ?\nQuestion 187 :- What is Abstract Factory Pattern ?\nQuestion 188 :- Does Abstract Factory Pattern use FP inside ?\nQuestion 189 :- Explain Simple Factory Pattern ?\nQuestion 190 :- Simple Factory vs Factory (Factory Method) vs Abstract Factory ?\nQuestion 191 :- How to remove IF conditions from Simple Factory?",
      "target_audience": [
        "C# .NET Developers who are looking for a job change and good prospects.",
        "C# .NET Developers who want to do last minute revision before going to interview."
      ]
    },
    {
      "title": "Next JS: The Complete Developer's Guide",
      "url": "https://www.udemy.com/course/next-js-the-complete-developers-guide/",
      "bio": "Build apps using NextJS v14 using App Router, Next Auth, NextUI, and TailwindCSS! Learn the latest version of NextJS!",
      "objectives": [
        "Make incredibly performant web apps using Next JS",
        "Understand the differences between running Next JS in development and production environments",
        "Utilize four different caching systems to speed up request response times",
        "Use the latest React tech with Server Components to build streaming interfaces",
        "Implement robust and secure user authentication with the Next Auth library",
        "Automatically update and refresh data with the use of Server Actions with Revalidation",
        "Optimize image fetching and loading through the use of Next's Image component",
        "Add robust form validation and handling by implementing React's new useFormState hook"
      ],
      "course_content": {
        "Get Started Here!": [
          "How to Learn NextJS Quickly",
          "A Note about Turbopack",
          "Project Overview",
          "File-Based Routing",
          "Adding Additional Routes",
          "Linking Between Pages",
          "Common UI in Next JS with Layouts",
          "Project Structure Strategy",
          "Absolute Path Import Shortcut",
          "Image Files + Import Update",
          "Adding Images in Next JS",
          "More on the Image Component",
          "Adding a Reusable Presentation Component",
          "Adding Some Styling",
          "Production Deployment with Vercel",
          "Join Our Community!",
          "Course Diagrams"
        ],
        "Changing Data with Mutations": [
          "App Overview",
          "Project Setup",
          "Adding a Create Page",
          "Creating a Prisma Client within Next.js",
          "Adding a Creation Form"
        ],
        "Streaming Content with React Server Components": [
          "Introducing Server Actions in Next.js",
          "A Deeper Dive into Server Actions",
          "Server Components vs Client Components",
          "Fetching Data with Server Components",
          "Adding Dynamic Paths",
          "Async Dynamic Params in Next.js 15",
          "Fetching Particular Records",
          "Custom Not Found Pages",
          "Automatic Loading Spinnners",
          "A Few Quick Tasks",
          "Styling the Show Page",
          "Linking to the Edit Page",
          "More Async Dynamic Params In Next.js 15",
          "Showing a Client Component in a Server Component",
          "Adding the Monaco Editor",
          "Handling Editor Changes"
        ],
        "Server Actions in Great Detail": [
          "Server Actions in Nextjs Client Components",
          "Server Actions in a Separate File",
          "Options for Calling Server Actions from Client Components",
          "Calling a Server Action from a Client Component",
          "Deleting a Record with a Server Action"
        ],
        "Server Forms with the UseFormState Hook": [
          "Understanding the UseFormState Hook",
          "useActionState in Next v15",
          "UseForm State in Action",
          "Breaking Changes in Forms with React 19",
          "Adding the Form Validation",
          "Gotchas Around Error Handling in Nextjs"
        ],
        "Understanding Next's Caching System": [
          "Super Unexpected Behavior",
          "The Full Route Cache System",
          "What Makes a Static or Dynamic Route in Next.js",
          "When to Use Each Cache Control",
          "Help, My Page is Showing Old Data!",
          "Enabling Caching with GenerateStaticParams",
          "Caching Dynamic Routes"
        ],
        "Authentication with Next-Auth": [
          "Starter Files for Discuss Project",
          "Project Overview",
          "Critical Libraries in Our Project",
          "NextUI Setup",
          "Prisma Schema File",
          "Database Setup",
          "OAuth Setup",
          "Next-Auth Setup",
          "The Theory Behind OAuth",
          "Wrapping Auth in Server Actions",
          "Sign In, Sign out, and Checking Auth Status",
          "Upfront Design Process",
          "Why Path Helpers?",
          "Path Helper Implementation",
          "Creating the Routing Structure",
          "Stubbing Out Server Actions",
          "Planning Revalidating Strategies",
          "Building the Header",
          "Displaying the Sign In and Sign Out Buttons",
          "Enabling Sign Out",
          "More Caching Issues",
          "Static Caching While Using Auth",
          "Creating Topics",
          "Creating a Popover Form",
          "Receiving Form Data",
          "Adding Form Validation with Zod",
          "Reminder on the UseFormState Hook",
          "useAction State in Next.js 15",
          "Fixing UseFormState Type Errors",
          "Here's Our FormState Type",
          "Breaking Changes in Forms with React 19",
          "Displaying Validation Errors",
          "Handling General Form Errors",
          "Handling Database Errors in Forms"
        ],
        "Using Data - Database Queries": [
          "Replacing useFormStatus with useActionState",
          "Showing Loading Spinners",
          "Fetching and Listing Content from Prisma",
          "More Async Dynamic Params in Next.js 15",
          "Scaffolding the Topic Show Page",
          "More useActionState in Next.js 15",
          "Displaying a Creation Form",
          "FormButton and Hook Name Update",
          "Applying Validation to Post Creation",
          "Checking Authentication Status",
          "Passing Additional Args to a Server Action",
          "Type 'string | undefined' is not assignable to type 'string' Fix",
          "Creating the Record",
          "A Few Project Files",
          "Merging a Few Files",
          "Considerations Around Where to Fetch Data",
          "Data Fetching in Child Components",
          "Recommended Data Fetching",
          "Define in Parent, Fetch in Child",
          "Alternative Type Names and Query Definitions",
          "Don't Go Crazy With Reuse",
          "Comment Creation",
          "Recursively Rendering Components",
          "Fetching the Big List"
        ],
        "Caching with Request Memoization": [
          "Multiple Repeated DB Queries",
          "Introducing Duplicate Queries",
          "Request Memoization",
          "Deduplicating Requests with Cache"
        ],
        "Implementing Search Functionality": [
          "Adding in Component Streaming",
          "Streaming with Suspense",
          "Adding a Loading Skeleton",
          "Top Posts on the HomePage",
          "Back to the Search Input",
          "Notes on QueryStrings in Next",
          "Accessing the Query String",
          "Redirecting From a Server Action",
          "Even More Async Dynamic Params in Next.js 15",
          "Receiving the Query String in a Server Component",
          "Running the Search",
          "The De-Opt to Client Side Rendering Warning",
          "Wrap Up!",
          "Deploying Discuss App to Vercel with Postgres"
        ]
      },
      "requirements": [
        "Basic knowledge of React and Typescript is helpful, but refresher sections on these topics are included"
      ],
      "description": "Congratulations! You’re on the brink of entering the fast-evolving world of NextJS, designed to empower developers with the tools to create high-performance, feature-rich web applications that stand out in the modern digital landscape.\nNextJS is the key to unlocking the full potential of server-rendered React applications, combining the best of web development into one powerful, developer-friendly framework. This comprehensive course takes you on a deep dive into advanced NextJS features that can set you apart in the job market, equipping you to tackle real-world projects with confidence. By exploring the intricacies of authentication with the Next-Auth library, the innovative approach to data mutations using server actions, and the foundational concepts of server and client components, you'll be well on your way to mastering modern web development.\nWith the tech industry looking for skilled professionals, mastering Next puts you at the forefront of opportunity, with a skill set that's in high demand. Whether you're eyeing a new career as a software engineer or aiming to enhance your existing projects, there's never been a better time to delve into Next.\n\n\nWhat will you achieve?\n\n\nThrough an extensive collection of video lectures complemented by detailed diagrams and real-world examples, this course ensures a thorough understanding of Next's capabilities, no pre-existing knowledge of the framework necessary. I've crafted a learning experience that's both rigorous and encouraging, with layers of knowledge built one at a time and ample dialogue to contextualize each feature of Next.\nI proudly offer the most detailed journey through Next available online. No stone is left unturned in this resource-packed adventure.\n\n\nPrepare to conquer a diverse array of topics, including:\nImplementing user authentication flows with next-auth, for secure and scalable user management\nEffectively structuring server actions to handle data mutations\nDissecting the theory of server vs client components, and knowing how to leverage each for maximum efficiency\nMastering data validation techniques to ensure the reliability and integrity of user input\nNavigating Next's sophisticated caching systems to deliver lightning-fast content performance\nRecognizing the critical differences between development and production environments and preparing your applications for successful deployment\nTailoring Server-Side Rendering (SSR) and Static Site Generation (SSG) to your application's needs\nUtilizing Incremental Static Regeneration (ISR) for the best of SSR and SSG\nEnriching user interfaces with TailwindCSS support for styling components\nOptimizing images on-the-fly with Next's Image component for better performance and user experience\nDeploying your Next applications with Vercel and other hosting platforms with ease\nLeveraging TypeScript with Next for robust, type-safe applications\nWith each new topic, you’ll gain knowledge, proficiency, and the assurance to apply what you’ve learned to practical scenarios.\nEmbrace the opportunity to define the future of web development with your newly acquired NextJS expertise. Join the ranks of developers who not only follow best practices but also contribute to them. Sign up now and transform your understanding and execution of modern web development with Next.",
      "target_audience": [
        "Any engineer looking to build high-performance web apps with Next JS"
      ]
    },
    {
      "title": "Deep Learning and NLP: Seq2Seq Model Theory + ChatGPT Prizes",
      "url": "https://www.udemy.com/course/chatbot/",
      "bio": "Learn the Theory of Deep Natural Language Processing with the Seq2Seq model and enjoy several ChatGPT Prizes at the end!",
      "objectives": [
        "Why this is important",
        "Types of Natural Language Processing",
        "Classical vs. Deep Learning Models",
        "End to End Deep Learning Models",
        "Seq2Seq Architecture & Training",
        "Beam Search Decoding"
      ],
      "course_content": {
        "Welcome to the course!": [
          "Welcome Challenge!",
          "Get Excited!",
          "Recommended Workshops before we dive in!"
        ],
        "Deep NLP Intuition": [
          "What You'll Need For This Module",
          "Plan of Attack",
          "Types of Natural Language Processing",
          "Classical vs Deep Learning Models",
          "End-to-end Deep Learning Models",
          "Bag-of-words model",
          "Seq2Seq Architecture (Part 1)",
          "Seq2Seq Architecture (Part 2)",
          "Seq2Seq Training",
          "Beam Search Decoding",
          "Attention Mechanisms (Part 1)",
          "Attention Mechanisms (Part 2)"
        ],
        "---------- PART 0 - BUILDING A CHATBOT WITH SEQ2SEQ ----------": [
          "Step 1 - Welcome to the Practical Activity",
          "Step 2 - Get the dataset",
          "Step 3 - Get the codes"
        ],
        "---------- PART 1 - DATA PREPROCESSING ----------": [
          "Welcome to Part 1 - Data Preprocessing",
          "Step 4 - Data Preprocessing",
          "Step 5 - Data Preprocessing",
          "Step 6 - Data Preprocessing",
          "Step 7 - Data Preprocessing",
          "Step 8 - Data Preprocessing",
          "Step 9 - Data Preprocessing",
          "Step 10 - Data Preprocessing",
          "Step 11 - Data Preprocessing",
          "Step 12 - Data Preprocessing",
          "Step 13 - Data Preprocessing",
          "Step 14 - Data Preprocessing",
          "Step 15 - Data Preprocessing",
          "Step 16 - Data Preprocessing",
          "Step 17 - Data Preprocessing"
        ],
        "---------- PART 2 - BUILDING THE SEQ2SEQ MODEL ----------": [
          "Welcome to Part 2 - Building the Seq2Seq Model",
          "Step 18 - Building the Seq2Seq Model",
          "Step 19 - Building the Seq2Seq Model",
          "Step 20 - Building the Seq2Seq Model",
          "Step 21 - Building the Seq2Seq Model",
          "Step 22 - Building the Seq2Seq Model",
          "Step 23 - Building the Seq2Seq Model",
          "Step 24 - Building the Seq2Seq Model"
        ],
        "---------- PART 3 - TRAINING THE SEQ2SEQ MODEL ----------": [
          "Welcome to Part 3 - Training the Seq2Sesq Model",
          "Step 25 - Training the Seq2Seq Model",
          "Step 26 - Training the Seq2Seq Model",
          "Step 27 - Training the Seq2Seq Model",
          "Step 28 - Training the Seq2Seq Model",
          "Step 29 - Training the Seq2Seq Model",
          "Step 30 - Training the Seq2Seq Model",
          "Step 31 - Training the Seq2Seq Model",
          "Step 32 - Training the Seq2Seq Model",
          "Step 33 - Training the Seq2Seq Model",
          "Step 34 - Training the Seq2Seq Model",
          "Step 35 - Training the Seq2Seq Model",
          "Step 36 - Training the Seq2Seq Model"
        ],
        "---------- PART 4 - TESTING THE SEQ2SEQ MODEL ----------": [
          "Welcome to Part 4 - Testing the Seq2Seq Model",
          "Step 37 - Testing the Seq2Seq Model",
          "Step 38 - Testing the Seq2Seq Model",
          "Step 39 - Testing the Seq2Seq Model",
          "Step 40 - Testing the Seq2Seq Model"
        ],
        "Congratulations!! Don't forget your Prize :)": [
          "THANK YOU Video",
          "Huge Congrats for completing the challenge!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Just some high school mathematics level",
        "Basic Python programming knowledge"
      ],
      "description": "Learn the theory of Seq2Seq in only 2 hours! A straight to the point course for those of you who don't have a lot of time.\nEmbark on an academic adventure with our specialized online course, meticulously designed to illuminate the theoretical aspects of Seq2Seq (Sequence to Sequence) models within the realms of Deep Learning and Natural Language Processing (NLP).\nWhat This Course Offers:\nExclusive Focus on Seq2Seq Model Theories: Our course curriculum is devoted to exploring the intricacies and theoretical foundations of Seq2Seq models. Delve into the principles and mechanics that make these models a cornerstone in NLP and Deep Learning.\nIn-Depth Conceptual Insights: We take you through a comprehensive journey, dissecting the core concepts, architectures, and training of Seq2Seq models. Our focus is on fostering a deep understanding of these complex theories.\nTheory-Centric Approach: Emphasizing theoretical knowledge, this course intentionally steers away from practical coding exercises. Instead, we concentrate on building a robust conceptual framework around Seq2Seq models.\nIdeal for Theoretical Enthusiasts: This course is perfectly suited for students, educators, researchers, and anyone with a keen interest in the theoretical aspects of Deep Learning and NLP, specifically in the context of Seq2Seq models.\nJoin us to master the theoretical nuances of Seq2Seq models in Deep Learning and NLP. Enroll now for an enlightening journey into the heart of these transformative technologies!\nAnd last but not least you will get a great series of Prizes providing extra case studies in Artificial Intelligence made by ChatGPT.\nCan't wait to see you inside the class,\nKirill & Hadelin",
      "target_audience": [
        "Any students in college who want to start a career in Data Science",
        "Any Data Science enthusiast",
        "Anyone interested in creating their own ChatBot",
        "Anyone interested in Artificial Intelligence, Machine Learning or Deep Learning and its applications"
      ]
    },
    {
      "title": "React JS - Mastering Redux",
      "url": "https://www.udemy.com/course/react-js-mastering-redux/",
      "bio": "Build the React JS and Redux apps of your dreams! Learn JavaScript, ES6, APIs, and Full Web App Development in ReactJS!",
      "objectives": [
        "Build entire ReactJS and Redux applications from scratch.",
        "Develop apps that deal with APIs and web requests.",
        "Understand how to develop Redux apps with actions, reducers, and the Redux store.",
        "Create Web Apps that use advanced redux mechanics like asynchronous actions and redux middleware.",
        "Use ES6 and advanced JavaScript techniques to more efficiently code.",
        "Use animations to create compelling User Interfaces and Experiences.",
        "Add external libraries to React projects like react-bootstrap, react-router-dom, and more.",
        "Build multi-page applications with dynamic routes and links."
      ],
      "course_content": {
        "Introduction": [
          "Introducing the Instructor",
          "Installing React Tools",
          "Installing a Code Editor",
          "Source Code for the Course",
          "Final Introductory Notes"
        ],
        "Understanding React": [
          "React, Components, & JSX",
          "State, Props, & Lifecycle Methods"
        ],
        "Application One | AgeTeller": [
          "Previewing AgeTeller",
          "Setting Up AgeTeller",
          "Creating an App Component",
          "Crafting a Form Component",
          "Implementing State",
          "Building a Stats Component",
          "Adding Styling and Animations",
          "Section Overview | AgeTeller"
        ],
        "Understanding Redux": [
          "Redux - the 3 Step Recipe",
          "Section Overview | Understanding Redux"
        ],
        "Redux Application One | SuperSquad": [
          "Previewing SuperSquad",
          "Setting Up SuperSquad",
          "The First Reducer",
          "The Store",
          "The First Action",
          "Adding a Second Reducer",
          "Mapping State to Props in a CharacterList",
          "Mapping Dispatch to Props",
          "Styling the App",
          "Creating a Hero List",
          "The Second Action",
          "Building a Squad Stats Component",
          "Section Overview | SuperSquad"
        ],
        "Redux Application Two | RecipeFinder": [
          "Previewing RecipeFinder",
          "Setting Up RecipeFinder",
          "Creating a Form to Search Recipes",
          "Coding Break | Web Requests",
          "Accessing the API",
          "Fetching from the API",
          "Storing Recipes",
          "Building a Recipe List",
          "Making Recipe Items",
          "Storing Favorite Recipes",
          "Starring Recipe Items",
          "Building a Favorite Recipe List",
          "Routing Recipe Lists",
          "Section Overview | RecipeFinder"
        ],
        "Redux Application Three | MemeGenerator": [
          "Previewing MemeGenerator",
          "Setting Up MemeGenerator",
          "Getting Access to the API",
          "Fetching Memes Asynchronously",
          "Applying Thunk Middleware",
          "Listing Memes",
          "Creating Meme Items",
          "Animating Meme Items",
          "Crafting a Custom Meme Form",
          "Reducing and Posting Personal Memes",
          "Setting Up a Post Meme Action",
          "Building a Personal Memes List",
          "Section Overview | MemeGenerator"
        ],
        "React Hooks Section 1 - Dive into Hooks Development": [
          "Project One Preview",
          "Set Up Project One | Revised",
          "First Hook: useState | Revised",
          "useEffect",
          "Challenge and Code: Stories Component with UseEffect | Revised",
          "Build a Custom Hook: useFetch",
          "[Optional] Function Keyword vs Arrow Functions"
        ],
        "React Hooks Section 2 - Hooks Under the Hood": [
          "Section Preview - Hooks Under the Hood",
          "The React Runtime and How React Applies Hooks",
          "UseState Under the Hood",
          "Tasks Component Part 1: Multiple useState hooks",
          "Tasks Component Part 2",
          "The Order of UseState",
          "Local Storage for Tasks",
          "Hooks with an Interval",
          "Effects with Cleanup",
          "Dynamic Delay and Increment",
          "Challenge and Code: Matrix Component",
          "Build a Custom Hook: useDynamicTransition"
        ],
        "React Hooks Section 3 - Reflection on the Why of Hooks & Project Two": [
          "The Why of Hooks",
          "Project Two Preview",
          "The Reducer Pattern Overview",
          "Set Up Reaction App",
          "Reactions Reducer State",
          "UseReducer for Tasks | Part 1",
          "UseReducer for Tasks | Part 2",
          "PublishMessage Component",
          "Challenge and Code: MessageBoard Component",
          "UseContext and a Custom Context Hook",
          "The PubSub and Reducer Architecture",
          "Explore PubNub",
          "PubSub Function and Reducer Connection",
          "Set Username",
          "CreateReaction Component",
          "Reactions Reducer flow",
          "Publish Reactions",
          "MessageReactions Component"
        ]
      },
      "requirements": [
        "Students who have some JavaScript experience will be most comfortable."
      ],
      "description": "﻿Updated for 2023! React, React Redux, React Hooks, In-depth JavaScript, resume-worthy projects, and more!\nYou will become an in-demand software engineer by taking this course on React JS and Redux. As one of the most popular pairs of frameworks, learning React and Redux is a must. Simply put, learning React will open doors and jobs for you.\nThis project-based course will have you coding right away. By building four carefully thought-out example applications, you will sharpen your skills in modern web development.\n* First, learn the essentials of ReactJS by going through the main concepts.\n* Then build your first React application to get familiar with the essentials.\n* Create your first Redux application to learn how to pair this elegant and complex framework with React.\n* Next, build an application that uses an API along with routing for multiple pages.\n* Finally, build an additional app that works with another API and has more advanced redux mechanics.\nYou’ll not only learn React and Redux, but get comfortable with popular libraries like react-bootstrap, react-router-dom, and more. Plus, you’ll find a secret recipe to Redux that boils it down to three simple steps!\n*****\n[2023 Update]\nAlso, this course contains optional content in Nextjs, React 18, and In-Depth JavaScript. Continue your learning React journey beyond hooks, here in this course!\nNextjs and React 18 are the modern ways to make a React application. In this course, you will also build a production-level Nextjs and React 18 project. During the Nextjs and React 18 project section, you will:\nGo more into depth with server and client components.\nLearn Nextjs server actions.\nExplore the React 18 useTransition hook.\nExpand upon Nextjs fundamentals, and create a shared layout structure.\nCreate dynamic segments with Nextjs and learn generateStaticParams.\nExplore React Suspense and React lazy.\nDive deeper into advanced Nextjs hooks like useSelectedLayoutSegments, and useSearchParams.\nExplore the React 18 useDeferredValue hook.\nLearn how to deploy a Nextjs application.\n\nThen follow with a bounty of In-Depth JavaScript content. During the In-Depth JavaScript section, you will find videos on:\n* The Console, Operators, and Variables, Arrays, Objects.\n* Functions - Declarations vs. Expressions, and Arrow Functions\n* Methods and the `this` Keyword\n* Callbacks\n* A Dynamic Language and Types - \"Almost Everything is an Object\"\n* Equality and Type Coercion\n* Let, Const, Mutability, Var, and Scope\n* Interview Question | Scope and Hoisting\n* Template Literals and Ternary Operators\n* The Property Shorthand and Destructuring Assignment\n* JSON parse, JSON stringify, Custom and Lodash CloneDeep\n* Closures\n* Function Factories, and Higher Order Functions\n* Prototypes and the Prototype-Based Inheritance, Object Prototype, __proto__, and the prototype chain\n* Asynchronous Code with SetTimeout\n* Fetch and Promise from Scratch\n* JavaScript Engine and Runtime\n* Await and Async\n\n\n*****\n\n\n\n\nSo what are you waiting for? Take the dive into React and Redux. Let’s get started coding!",
      "target_audience": [
        "The perfect student knows some JS, HTML, and CSS, but hopes to learn a new web development framework to significantly boost their skills.",
        "All levels of coding. However this won’t introduce coding from the ground up, so complete beginners might find it fast-paced.",
        "Experienced developers and engineers will find this course perfect for brushing up on ReactJS and Redux and web development.",
        "Anyone who wants to add ReactJS and Redux to their resume and set of skills should take this course!"
      ]
    },
    {
      "title": "Firebase In Depth",
      "url": "https://www.udemy.com/course/firebase-course/",
      "bio": "Full-stack Development with Firebase, Firestore, Firebase Storage & Hosting, Firebase Cloud Functions & AngularFire",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "In-depth coverage of the Firestore NoSQL Database",
        "Complete Transactional Serverless CRUD Example",
        "Email and Social Authentication With Firebase Authentication",
        "Full RBAC Role-Based Authorization with Firestore Security Rules",
        "Secure Serverless File Upload with Firebase Storage",
        "High-performance, free SSL hosting with Firebase Hosting",
        "Database Triggers with Firebase Cloud Functions",
        "Secure REST Endpoints with Firebase Cloud Functions",
        "Serverless Architecture Design",
        "Serverless Angular development with AngularFire",
        "Full drop-in Authentication solution: Firebase UI",
        "Full Production Deployment"
      ],
      "course_content": {
        "Introduction": [
          "Firebase & AngularFire In Depth - Helicopter View",
          "IMPORTANT",
          "Course Introduction and Development Environment Setup",
          "Set Up a Firebase Account and Populate a Firestore Database",
          "Firestore Fundamentals - What is a Firestore Document?",
          "Firestore Fundamentals - Collections, Unique Identifiers and Relationships",
          "Firestore Fundamentals - Introduction to Collection Queries using AngularFire",
          "Firestore Fundamentals - Performance Guarantees and Indexes",
          "Firestore Fundamentals - Collection Group Queries",
          "Firestore Fundamentals - Realtime Capabilities"
        ],
        "Angular Service Layers with AngularFire and Firestore": [
          "New Section Introduction - Beginning the Implementation of the Home Component",
          "An Example of a Firestore array-contains Query",
          "Converting Firestore Query Results to a Domain Model",
          "Finishing the Implementation of the Home Component",
          "The Firebase Local Emulator - Why do we need it?",
          "Setting Up a Firebase Project with firebase init",
          "Introduction to the Firebase Local Emulator",
          "AngularFire CRUD Example - The Create Course Form",
          "AngularFire CRUD Create Service - API Design",
          "AngularFire CRUD Create - Service Implementation",
          "AngularFire CRUD Update - Service Implementation",
          "AngularFire CRUD Update - Building the Edit Course Dialog",
          "AngularFire CRUD Update - Final Implementation and Demo",
          "AngularFire CRUD Delete - Implementation and Demo",
          "Understanding Firestore Transactional Batched Writes",
          "Course Screen - Pre-Fetching Data with a Course Resolver",
          "Course Screen - Router Resolver Implementation and Demo",
          "How to Implement a Firestore Paginated Query",
          "Firestore Data Pagination Example - Implementation Conclusion and Demo"
        ],
        "Firebase Authentication and Firestore Security Rules": [
          "Introduction to Firebase Authentication",
          "Implementing Authentication Using Firebase UI",
          "Implementing an Angular User Service - API Design",
          "User Service - Adapting the UI to the User Authentication Status",
          "Introduction to Firestore Security Rules",
          "Firestore Security Rules Fundamentals - Nested Rules",
          "Firestore Security Rules Fundamentals - Rule Order and Access Types",
          "Checking if a User Is Authenticated Using Firestore Security Rules",
          "Implementing Firestore Schema Validation With Firestore Security Rules",
          "How to Implement a User White List Using Firestore Security Rules",
          "Implementing Role Based Access Control (RBAC) with Firestore Security Rules",
          "How to Write Security Rules For Collection Group Queries",
          "RBAC UI Implementation - The Roles Observable",
          "Showing certain UI Features only to Administrator Users",
          "Protecting Access to Admin Screens With the AngularFire Authentication Guard"
        ],
        "Serverless File Upload With Firebase Storage": [
          "Introduction to Firebase Storage",
          "File Upload with Firebase Storage - Implementation Finished and Demo",
          "Implementing a File Upload Progress Indicator for Firebase Storage",
          "How to Create a Safe Download Url in Firebase Storage",
          "Firebase Storage Security Rules"
        ],
        "Firebase Cloud Functions In Depth": [
          "Why do We Need Firebase Cloud Functions?",
          "How Do Firebase Cloud Functions Work?",
          "Firebase Cloud Functions - Hello World",
          "Firebase Cloud Functions - Introduction to Database Triggers",
          "How To Initialize a Firestore Connection From a Firebase Cloud Function",
          "Firebase Cloud Functions Add Document Trigger Implementation",
          "How To Minimize the Cold Startup Time Of Firebase Cloud Functions",
          "Firebase Cloud Functions - Update Triggers",
          "Firebase Cloud Functions - Delete Trigger",
          "How to Create an HTTP Endpoint with Firebase Cloud Functions",
          "Calling a Firebase Cloud Function REST Endpoint",
          "Implementing a Create User REST Endpoint with Firebase Cloud Functions",
          "Setting Up an Angular Http Interceptor",
          "Securing a Firebase Cloud Function Endpoint using Express Middleware",
          "Firebase Cloud Functions Secure REST Endpoint - Final Demo"
        ],
        "Production Deployment With Firebase Hosting": [
          "Introduction to Firebase Service Accounts",
          "Setting The Claims of the Initial Root Admin Using a Node Script",
          "Production Deployment With Firebase Hosting",
          "Final Application Test In Production"
        ],
        "Conclusion": [
          "Bonus Lecture (Updated October 2025)",
          "Conclusions and Key Takeaways"
        ]
      },
      "requirements": [
        "Just a little bit of Angular and Typescript"
      ],
      "description": "This Course in a Nutshell\nIf you are looking for the best backend to go along with your Angular frontend, then the Firebase ecosystem (with the Firestore NoSQL database) is the right choice for you.\nToday, it's simpler than ever to develop Firebase applications thanks to the latest Firebase development tools, including the awesome local emulator (covered in detail in the course).\nFirebase allows us to build applications in a mostly serverless way, in the sense that when using it we only have to write a little bit of server-side code, if any at all in a lot of cases.\nWith Firebase, we can not only query our database but also do data modification operations straight from the browser, in a secure way. So how is this possible?\nThe way that this works is that the Firestore database enables us to declaratively accept or deny incoming requests using Firestore Security Rules.\nA key ingredient for this to work is Firebase Authentication, which we will cover in detail in this course. Firebase is, of course, frontend agnostic, meaning that it will work with any frontend technology. So why does it work especially well with Angular?\nThis is due to the powerful AngularFire library, which allows us to easily query and modify Firestore data in a reactive way using the AngularFire Observable-based API.\nBesides Firestore, the Firebase ecosystem provides everything else that you need for building a fully functioning backend solution. This includes secure file upload via Firebase Storage and the hosting of your static files via Firebase Hosting.\nFor the rare cases when you need some server-side code, you can do that too in Firebase using Firebase Cloud Functions, which are node-based stateless functions running on the Google Cloud infrastructure.\nUsing Cloud Functions, you can implement server-only functionality like database triggers, or even REST endpoints for operations that can only be done on the server, such as user creation, or payments.\nThe Firebase ecosystem provides a complete solution for quickly building the backend of your web application, allowing you to focus more of your development time on the frontend.\nCourse Overview\nIn this course, we are going to take a sample Angular application and we are going to connect it to a Firestore database. We will learn how to do all sorts of database queries and we will provide a complete CRUD example using AngularFire.\nWe will set up the local development emulator from the very beginning, which will allow us to use a local database with predefined authentication users and some initial data.\nThe emulator will also allow us to test cloud functions locally as well as security rules, which is super convenient.\nFrom there, we are going to add security to the application, starting with authentication using Firebase Authentication. We will implement both email and password and social login using the Firebase UI library.\nWe are also going to implement role-based authorization using Firebase Authentication custom claims and the AngularFire Authentication router guard.\nWe will implement an administration screen that allows an existing administrator to create other users, including other administrators in a secure way.\nFor this, we will need some backend code, so we will be using Firebase Cloud Functions for that. We will also show how to use Cloud Functions to implement other commonly used backend features, such as database triggers.\nWe will show how to do secure file upload of an image thumbnail using Firebase Storage.\nWe will end the course by doing a full production deployment using Firebase Hosting, and testing everything out in a non-emulated production environment.\nTable of Contents\nThis course will go over the following topics:\nIntroduction to NoSQL data modeling\nDocuments vs Collections\nFirestore Unique Identifiers\nQuerying a database using the Firebase SDK\nAngular Service Layer Design with AngularFire\nPagination\nIndexes, Composite Indexes\nData Modification with AngularFire\nTransactions\nMulti-path Updates\nFull CRUD example with AngularFire\nAuthentication with Firebase Authentication\nProtecting screens with the AngularFire Authentication guard\nSecuring Database access with Firebase Security Rules\nFull role-based authorization using Firebase Authentication custom claims\nSecure file upload with Firebase Storage\nFirebase Storage Rules\nServer-side image processing with Firebase Cloud Functions\nFirebase Cloud Functions Database Triggers\nFirebase Could Functions HTTP endpoints\nCloud Functions Service Accounts\nProduction Deployment with Firebase Hosting\nWhat Will You Learn In this Course?\nIn this course, you will learn everything that you need to know to become a proficient Firebase developer. You will understand how to model a Firestore database, and how to interact with it using AngularFire.\nYou will know how to implement secure, transactional data modification queries straight from the frontend using the AngularFire Observable-based API. You will know how to secure your data using Firestore Security rules, and how to implement role-based Authorization.\nYou will learn how to design your system in order for it to need minimum backend code, that when necessary can be implemented using Firebase Cloud Functions.\nAt the end of the course, you will feel confident designing and developing applications in a serverless way using the complete Firebase ecosystem.\nHave a look at the course free lessons below, and please enjoy the course!",
      "target_audience": [
        "Any Developers trying to learn the Firebase ecosystem from scratch",
        "Angular Developers looking for the best possible backend to go along with Angular"
      ]
    },
    {
      "title": "React Front To Back",
      "url": "https://www.udemy.com/course/react-front-to-back-2022/",
      "bio": "Learn modern React by building 4 projects including a Firebase 9 app and a full stack MERN app",
      "objectives": [
        "Learn modern React by building 4 projects",
        "Suitable For Both Beginners & Intermediate React Developers",
        "Feedback app with in depth explanation of React fundamentals",
        "Build a house marketplace with React and Firebase 9",
        "Learn React hooks and how to create custom hooks",
        "Learn how to use context and reducers to manage global state",
        "Build a Fullstack MERN support ticket system with Redux Toolkit"
      ],
      "course_content": {},
      "requirements": [
        "You should know JavasScript pretty well before learning React or any framework"
      ],
      "description": "This course is outdated. Please see the new 2025 course - Modern React From The Beginning\n\n\nThis course is for anyone that wants to learn React and also for React developers looking to build some projects and sharpen their skills.\nThe first project (Feedback App) is structured in a way so I can explain the fundamentals such as components, hooks, props, state, etc in a way that beginners can understand. The second project (Github Finder) will show you how to work with 3rd party APIs and the third project (House Marketplace) is a larger app that uses Firebase 9 and includes authentication, Firestore queries, file storage and more.\n\n\nThe final project has been added! It is a fullstack MERN support ticket system that uses Redux and Redux Toolkit.\n\n\nHere are some of the things you will learn in this course:\n\n\nReact fundamentals including components, props, hooks, state, etc\nReact hooks such as useState, useEffect, useContext, useReducer, useRef, etc\nCreating custom hooks\nReact Router v6 (latest version)\nHow to handle global state with context, reducers and hooks\nFirebase 9 authentication, queries, storage\nDeploying React apps to Vercel & Netlify\nBasic Animation with Framer Motion\nImplement Leaflet maps and Swiper sliders\nFullstack MERN (MongoDB, Express, React, Node.js)\nREST API creation\nRedux\nRedux Toolkit\nAuthentication with JWT\nMuch More...\nThis course has been completely re-done with new projects and concepts from the old course. I have a few React courses and this is the one that I always suggest people start with before moving on to the MERN courses",
      "target_audience": [
        "Anyone that wants to become a React developer"
      ]
    },
    {
      "title": "SocketIO v4, with websockets - the details.",
      "url": "https://www.udemy.com/course/socketio-with-websockets-the-details/",
      "bio": "Socket io. Learn how to harness real-time communication on the web. W/Cluster Module, React and a real time game!",
      "objectives": [
        "Socketio. That's (mostly) all we cover so when you finish, you'll know it!",
        "Setup a socketio application between the browser and an Express server and run real-time back and forth",
        "Understand the basics of websockets and how they work",
        "The basics of the transport layer and how a packet works"
      ],
      "course_content": {},
      "requirements": [
        "You have a solid working knowledge of JavaScript and nodejs (Not a ninja, but you are not new).",
        "You have used the node ecosystem (npm, Express, etc.). This is NOT an intro to node class and I will NOT cover these in detail.",
        "You have basic command line knowledge (at least capable of navigating and running a program)",
        "You have a computer capable of running Nodejs."
      ],
      "description": "Websockets are one of the coolest api's to ever hit the web. They allow the browser real-time communication, bridging one of the last gaps in both human and web-based communication. Socket io is the king library that uses websockets under the hood. There's a good chance if you're reading this, you've heard about socketio. Maybe even done a tutorial on it. But how far did you get? In my experience, the vast majority of the material on the web goes no farther than a quick-start, instant chat app. You don't learn how anything works, never look at the docs, and are stuck at the end wondering what to do now. Is that all socketio can do? The remaining shred of material is waaay over everyone's head. The fact that the websocket API was standardized in 2011 and most developers still don't know how to use it is evidence of the gap.\nThis course is meant to alleviate that! It is not a quick start guide to socket IO. There are loads of those all over the Internet. You should definitely look elsewhere if you are wanting a 10 minute intro to the 3-4 things you need to know to make something quick. On the other hand, if you are looking to really learn one of the most awesome JavaScript libraries in socket io, you should stick around. Like Express and other JavaScript/Node pieces,  it's getting passed over in the wave to learn just enough to get to the term \"full-stack developer.\" My main goal is to help you figure out how to go from being a good developer to a great developer. Understanding... not just knowing a few methods... of socketio is part of that! It even transcends the browser and node with implementations in most other languages, and even mobile/React Native. This means as you grow, you have the power of sockets without having to learn more than the socket io library.\nI first used socketIO in 2013 for a tiny company directory app. I've been following since and have been frustrated that it hasn't gotten more mainstream notice because it opens the way for so many improvements to existing applications and obvious groundwork for new ones. Let's change that :) Prepare to for a detailed look at socketio and websockets and start going real-time.\nSections:\nIntroduction - course overview, github link, and the state of socketio and websockets\nBefore SocketIO... - TCP, network sockets, & a native websockets app\nSocket.IO-101 - Why you'd want to use socketio (instead of just websockets), and how it works (simple chat app)\nSocket.IO-201 - Making the chat app into a slack clone with namespaces and rooms\nProject - real-time canvas game (agar.io-clone)\nProject - Real-time performance data (uses React, Cluster, and the Cluster Module. Rotated Redis out until the new module is stable)\nSupplemental - HTTP (for those in need of a review)\nLEGACY - version 2 - Socket.IO-101\nLEGACY - version 2 - Socket.IO-201\nLEGACY - multi-player canvas game\nLEGACY - Advanced Project\nI hope to add sections for a streaming videos/socket.io-stream app, as well as a React Native app.",
      "target_audience": [
        "JS/Node developers who want to actually learn how to use Socketio for more than a chat app tutorial",
        "JS developers interested in how node & JS combine to make the networking happen",
        "Developers interested in building real time applications"
      ]
    },
    {
      "title": "Learn How To Build Amazing Websites w/ HTML, CSS and Sass",
      "url": "https://www.udemy.com/course/build-websites-html-css-sass-javascript/",
      "bio": "Learn how to build professional websites & become a front-end developer! [Includes 2 Web Projects, Flexbox, Grid, & SEO]",
      "objectives": [
        "How to build amazing websites: professional, beautiful and responsive",
        "Learn the skills needed to become a front-developer",
        "Learn the fundamentals of web design",
        "Learn the fundamentals of JavaScript",
        "Modern CSS techniques to create stunning designs and effects",
        "Step by Step website projects using HTML5 and CSS3",
        "Sass project: global variables, architecting CSS, managing media queries, etc.",
        "jQuery animation effects, scroll effects and \"sticky\" navigation",
        "Advanced CSS animations",
        "How to make your website stand out",
        "Learn the fundamentals of SEO",
        "Website projects for you to follow step by step",
        "How to get web design clients",
        "Ready-to-use email scripts for getting clients",
        "Ready-to-use proposal template",
        "Ready-to-use consultation scripts for getting clients",
        "Flexbox layouts: build a project with flexbox",
        "Advanced responsive design: media queries, mobile vs desktop",
        "NPM: development workflows and building processes"
      ],
      "course_content": {},
      "requirements": [
        "Basic computer skills"
      ],
      "description": "Want to learn how to become a front-end developer? You're in the right place!\nWelcome to the: Build Amazing Websites w/ HTML, CSS, Sass, JavaScript & More Course!\nIn this course, you’re going to learn how to build professional websites and become a front-end developer and how to land your first job as a Web Developer or get your first Web Design Client even if you have no prior knowledge or experience.\nIn this practical, hands-on course our main objective is to give you the education so that you can master the fundamentals of expert web design with HTML, CSS, Sass, and various other tools.\nBlending practical work with solid theoretical training, we take you from the basics of Web Design with HTML, CSS and Sass to mastery, giving you the training you need not just to create simple websites with HTML and CSS but also to create amazingly beautiful responsive websites.\nAnd we understand that theory is important to build a solid foundation, we understand that theory alone isn’t going to get the job done so that’s why this course is packed with practical hands-on examples that you can follow step by step.\nMy name Juan and I’m one of your instructors in this course. My background in the Tech space specifically with Digital Marketing and Web Development to Programming\nNahid is your other instructor in this course and has many years of experience as a web developer and programmer.\nTogether we’re going to give you the foundational education that you need not just on how to design and create websites from scratch, but also how to get paid for your newly developed skills.\nThe course covers 5 main areas:\n1. Course Intro\nWeb Developer Marketplace\nWeb Developer Job Opportunities\nFront-End Developer\nBack-End Developer\nFull-Stack Developer\nCourse Website Projects Overview\n2. HTML/CSS + Website Project\nHTML Walkthrough\nCSS Walkthrough\nBuilding a Website w/ HTML+CSS\nEffects and Animations with JQuery\nOptimizing and Launching Website\nSEO Mini-Course\n\n3. SASS/NPM + Website Project\nSASS Walkthrough\nNPM Walkthrough\nBuilding a Website w/ SASS+CSS\nAdvanced Responsive Design\n\n4. Flexbox, JavaScript + Web Design Biz Course\nFlexbox Walkthrough\nBuilding a Website w/ Flexbox\nCSS Grid Walkthrough\nJavaScript Crash Course\nWeb Design Business Crash Course\n\n5. Web Developer Career\nCreating a Web Developer Resume\nContacting Recruiters\nGetting Started with Freelancing\nHow to Get Web Design Clients\nTop Freelance Websites\nPersonal Branding\nNetworking Do's and Don'ts\nWhy You Need a Website\n\n\nNo matter what the scenario or how complicated a website or design may be, this course gives you the foundational training you need to design amazingly beautiful websites and applications – and start pursuing a career in a field that is increasingly in demand as the global reliance on technology grows.",
      "target_audience": [
        "Students who want to learn to build websites from scratch"
      ]
    },
    {
      "title": "Learn JavaScript for Web Development",
      "url": "https://www.udemy.com/course/javascript-learn-javascript-essentials-and-build-project/",
      "bio": "Advance your Web Development Skills By Learning Javascript from JavaScript Expert!",
      "objectives": [
        "You will have a great skill set of writing JavaScript programs.",
        "You would be able to apply JavaScript programming skills to build dynamic and interactive web projects."
      ],
      "course_content": {},
      "requirements": [
        "No coding experience is required. You will start learning from the basics.",
        "All you need to get started is a code editor & internet browser.",
        "If you know basic html & css that would be bonus otherwise no worries."
      ],
      "description": "*** Over 105,000+ Students Are Already Taking This Course ***\n*** BEST REVIEWED Course On Udemy***\nThis course will teach you the most popular programming language in the world. Which is JavaScript! Yes, the JavaScript!\nIf you are interested in building dynamic & interactive projects in web development then this is the right course for you.\nThis course will start teaching you the very basics of JavaScript language and will gradually take you to the advanced level.\nYou will learn a deep understanding of JavaScript concepts. You will see the beauty and power of JavaScript language and you would be able to apply all these skills in modern web development.\nAlong the way, you will have quizzes, coding assignments to polish your JavaScript programming skills.\nYou will learn JavaScript coding standards with best practices.\nAfter learning all the essentials of JavaScript language then you will build an interactive web project. And you will see, how with very basic HTML, CSS, and JavaScript essentials you can build modern-looking web projects.\nStudents Review:\nI really enjoy learning JavaScript through this course. This course will definitely improve your JavaScript skills and help you understand the basics and advanced concepts of JavaScript. The best thing about this is that the instructor explains the matters in a very easy and understandable approach illustrating with actual codes. In the end, the overlay menu project provides insight on how to actually code something from scratch. Nabin Jaiswal\n\nIt is a nice course on javascript, very helpful in learning complex concepts in a simple manner. The Instructor has nicely covered up the important concept in simple English. Faisal Q.\nExcellent teacher who made difficult concepts easy to learn and understand. Highly recommend taking this course if you want to learn JavaScript! AWESOME. COURSE EVER. Mohin Sandhi\nBest Javascript Course. To the point & very Informative. The teacher has a clear voice and well knowledge. Asfak Ahmed",
      "target_audience": [
        "This course is for anyone who want to learn JavaScript programming and want to build dynamic & interactive web projects with JavaScript language."
      ]
    },
    {
      "title": "Complete Responsive Web Development Bootcamp: 4 Courses in 1",
      "url": "https://www.udemy.com/course/responsive-web-development/",
      "bio": "Learn responsive web development with HTML, CSS & JavaScript. Build modern websites in this 4-in-1 bootcamp",
      "objectives": [
        "Will be able to create responsive and user friendly web pages",
        "Will be proficient on HTML5",
        "Will be proficient on CSS3",
        "Will be able to show as expert on HTML5 and CSS3 on their resume",
        "You will master yourself in Bootstrap",
        "You will master yourself in jQuery"
      ],
      "course_content": {
        "Mastering HTML5": [
          "Introduction to HTML",
          "HTML4 vs. HTML5",
          "Making your first HTML page",
          "Tools to create HTML files",
          "Base HTML Tags",
          "Paragraph Tags",
          "Break Tags",
          "Header Tags",
          "Bold and Italic Tags",
          "Ordered and Unordered Lists",
          "Image Tags",
          "Difference between Absolute links and Relative Links",
          "Hyperlinking to an external page",
          "Hyperlinking to an email address",
          "Hyperlinking to a file in your site",
          "Playing and Controlling Audio",
          "Playing and Controlling Video"
        ],
        "Mastering CSS": [
          "About the class - what you will need",
          "What is CSS? Why we need it?",
          "What's new in CSS3",
          "CSS Selectors, properties and attributes",
          "ID Selectors",
          "Class Selectors",
          "Element Selectors",
          "All Selectors",
          "Inline style sheets",
          "External style sheets",
          "Inline styles",
          "The Box model",
          "Adding color",
          "Working with fonts",
          "Background Images # Part 1",
          "Background Images # Part 2",
          "Styling links",
          "Styling ID Tags",
          "Float & Clear",
          "Block and Inline Elements",
          "Positioning",
          "Building the framework",
          "Setting the styles",
          "Adding the elements",
          "Applying to other pages"
        ],
        "Mastering Bootstrap": [
          "Why Bootstrap?",
          "Downloading Bootstrap",
          "Adding Boostrap to your site",
          "Creating the navigation # Part 1",
          "Creating the navigation # Part 2",
          "Creating the navigation # Part 3",
          "Styling images",
          "Creating the footer",
          "Adding styled buttons",
          "Adding Google Maps",
          "Adding an image carousel",
          "Styling a contact form",
          "Creating a complete web page # Part 1",
          "Creating a complete web page # Part 2",
          "Creating a complete web page # Part 3"
        ],
        "Mastering jQuery": [
          "What is jQuery and Why you need?",
          "Downloading jQuery",
          "Adding jQuery to your site",
          "First look at jQuery code",
          "Selectors & Filters",
          "Replacing content",
          "Handling Events",
          "Hover Effects and Hide/Show Events: Part 1",
          "Hover Effects and Hide/Show Events: Part 2",
          "Fading",
          "Slide",
          "Toggle",
          "Animate",
          "Selectors",
          "Filters",
          "Advanced Selectors",
          "Creating content",
          "Creating content: Part 2",
          "Inserting Contents",
          "Modifying Contents",
          "Modifying CSS",
          "Final Thoughts"
        ]
      },
      "requirements": [
        "No prior technical knowledge required"
      ],
      "description": "=== Our students reviews regarding this course ===\n\"This course deserves more than 200$\" -- Mohamed Laqlii\n\"A-class course. So excited that I am taking it.\" -- Krassimir Boyanov\n\"Great and very clear teaching. Easy to understand and follow, I highly recommend this class.\" -- Kingsley Onuoha\n\"Very easy to understand, the instructor has a mastery of the subject.\" -- Carlos Rivera\n\"I enjoyed this course, the instructor has good knowledge of the subject, the lesson plans are prepared and explained well.\" -- Michael Pritchard\n\"Interesting contribution on the applications that can be used for HTML development.\" -- Francisco J. Parrilla\n\"It was a brilliant course to learn web development in the shortest way possible. It was very helpful and enjoyed learning. The expertise of the teacher is quite enormous in the field\" -- Shahriar Alam\n\"While I already a fair amount of knowledge and understanding relating to the concepts in this video I wanted to reassess some bad habits that I feel I've developed in order to improve my skills and workflow. This course has helped me to identify methods and habits that I could improve upon as I'm still very early on in my coding and programming education.\" -- EstenGrove\n\"I have completed HTML and CSS. both of the courses have been amazing. the tutor explains the stuff in a very understandable manner.\" -- Adit Kalyani\n\n\nAre you ready to become a job-ready front-end web developer?\nThis Complete Responsive Web Development Bootcamp (4 Courses in 1) is designed to take you from absolute beginner to confident coder, giving you hands-on experience with today’s most in-demand front-end technologies: HTML5, CSS3, Bootstrap, and jQuery. Whether you’re looking to start a new career in web development, upgrade your coding skills, or build modern responsive websites for personal projects, this course is your all-in-one learning path.\nBy the end of this course, you’ll be able to read, write, and build clean front-end code while designing mobile-friendly, professional websites that work across devices. With practical examples, projects, and detailed explanations, you’ll gain the skills that companies are actively hiring for.\nWhat You’ll Learn in This Course\nMastering HTML5\nIntroduction to HTML and differences between HTML4 vs HTML5\nCreating your first HTML page step by step\nUnderstanding essential HTML tags: paragraphs, headers, lists, images, links\nHyperlinking to external websites, files, and email addresses\nEmbedding and controlling audio and video\nStructuring clean, semantic web pages for accessibility and SEO\nMastering CSS3\nWhat CSS is and why it’s essential for web design\nWhat’s new in CSS3 compared to earlier versions\nCSS selectors, properties, and attributes explained in detail\nInline vs. external style sheets\nThe Box Model: margin, padding, border, and content\nAdding colors, fonts, and background images\nStyling IDs, classes, and elements\nFloat, clear, block vs. inline elements, and positioning techniques\nBuilding professional, visually appealing layouts\nMastering Bootstrap\nWhy Bootstrap is the world’s most popular front-end framework\nSetting up and integrating Bootstrap into your site\nBuilding responsive navigation bars and menus\nCreating styled images, buttons, and footers\nAccelerating your workflow with prebuilt Bootstrap components\nBuilding fully responsive layouts that adapt to desktops, tablets, and mobile\nMastering jQuery\nIntroduction to jQuery and why it’s still widely used\nDownloading and setting up jQuery\nUnderstanding jQuery syntax, selectors, and filters\nReplacing, creating, and modifying HTML content dynamically\nHandling events (clicks, hovers, form actions)\nAdding interactivity with hide/show, fade, slide, and toggle effects\nAnimating elements and building dynamic UI experiences\nWorking with advanced selectors and filters for professional projects\nWhy This Course?\n4 Courses in 1 – Learn HTML5, CSS3, Bootstrap, and jQuery in a single bootcamp\nBeginner-Friendly to Advanced – No prior coding experience required\nHands-On Projects – Apply every concept with real coding exercises\nResponsive Design Focus – Build websites that look amazing on any device\nCareer-Boosting Skills – Gain job-ready expertise that employers demand\nWho This Course is For:\nAbsolute beginners who want to learn responsive web development from scratch\nStudents and professionals looking to upgrade their HTML, CSS, Bootstrap & jQuery skills\nAnyone interested in creating modern websites and landing pages\nAspiring web developers preparing for entry-level jobs or freelance projects\nCareer Benefits\nLearning HTML5, CSS3, Bootstrap, and jQuery is one of the fastest ways to grow your career in tech. These core front-end skills are the foundation of every website and application today. Whether you aim to work as a front-end developer, freelance web designer, or full-stack engineer, this course equips you with the tools you need to stand out.\nStart your journey into responsive web development today and join thousands of learners already building the websites of tomorrow.",
      "target_audience": [
        "Who wanna learn Responsive Web Development",
        "Who wanna learn HTML5",
        "Who wanna learn CSS3"
      ]
    },
    {
      "title": "APIs in PHP: from Basic to Advanced",
      "url": "https://www.udemy.com/course/php-apis/",
      "bio": "Use REST APIs from PHP, and create your own RESTful API using plain PHP, with API key and JWT token authentication",
      "objectives": [
        "Understand how APIs work",
        "Learn how to use an API from PHP",
        "Create an API from scratch in plain PHP",
        "Create, Read, Update, Delete (CRUD) using an API",
        "Understand what REST and RESTful APIs are",
        "Create a RESTful API in PHP",
        "Understand how different API authentication mechanisms work",
        "Create API-key authentication for your API",
        "Understand how JSON web tokens (JWTs) work, the advantages and disadvantages, and why we use them",
        "Understand how HTTP requests and responses work"
      ],
      "course_content": {},
      "requirements": [
        "You need to know PHP, including the basics of classes and objects, and how to work with a database",
        "You need to be happy using the command line, although full instruction on what commands to use will be given",
        "Ideally have a web server with PHP and Composer installed, but a brief overview of installing these will be covered"
      ],
      "description": "An API is a way for a program to interact with another program. By using third-party APIs from your code, you can utilise functionality developed elsewhere. By creating an API to access your own data, other programs can take advantage of your services in a secure and easy fashion.\nLearn how to Use and Create Secure and Scalable APIs in PHP in this Comprehensive Course.\nUnderstand how APIs work\nLearn how to use an API from PHP\nUnderstand how HTTP requests and responses work\nUnderstand what REST and RESTful APIs are\nCreate a RESTful API from scratch, using plain PHP and MySQL\nUnderstand how API authentication works\nAdd API key authentication to your API\nUnderstand how JSON Web Tokens (JWTs) work\nAdd JWT access token authentication to your API\nThe essential skills required to use and develop APIs with PHP.\nUnless you create every component of your application from scratch, your code will need to interact with external services - for example a payment gateway, or currency data. To use such services, you need to consume their APIs. On this course you'll learn how to do this from PHP, and also how to create an API so that external programs can interact with your application.\nContent and Overview\nThis course is designed for the PHP developer who wants to learn in depth how to use APIs from their code. I designed the course to be easily understood by PHP developers who have no previous experience of using APIs, and who want to develop full, secure APIs quickly and easily. Learning the techniques on this course will enable you to create APIs that are secure, robust and that comply with industry standards.\nSuitable for all PHP developers, you'll start by learning the basics of how APIs work.\nYou'll learn various techniques for consuming APIs from PHP, along with their advantages and disadvantages.\nWe'll build a full API from scratch, with each concept explained in detail at every stage.\nYou'll learn what REST and what RESTful APIs are, why we use them, and how to make your API RESTful.\nThroughout the course, we'll build code that you can reuse in all your projects.\nAll the source code developed in the lectures is available to download.\nAll the time we'll adhere to industry standards and best practices.\nEach section has short, self-contained lectures that you can go back to reinforce specific concepts if you need to.\nWhen you complete the course you'll be able to use APIs in your PHP applications to leverage third-party components and services. You'll also be able to create your own API, using various authentication techniques depending on the type of API you want to create.\nComplete with all the code shown in the lectures, you'll be able to work alongside the instructor and will receive a verifiable certificate of completion upon finishing the course.\nAlso, at all times throughout the course you have access to the instructor in the Q&A section to ask for help with any topic related to the course.\nEnrol now and become a master of APIs in PHP!",
      "target_audience": [
        "PHP developers of all levels who want to learn how to use third-party APIs in their code",
        "PHP developers of all levels who want to create their own APIs",
        "Experienced PHP API developers who want to add authentication to their APIs"
      ]
    },
    {
      "title": "Web Development Concepts for Everyone",
      "url": "https://www.udemy.com/course/web-development-concepts-for-everyone/",
      "bio": "Complex Web Development Topics, Broken Down into Easy to Understand Concepts",
      "objectives": [
        "Confidence in Understanding the Technologies that Create and Power the Web",
        "Understanding of Websites and Web Applications",
        "Understanding of Front-End and Back-End Development",
        "Understanding of Databases - Including SQL, NoSQL, and In-Memory",
        "Understanding of Programming Languages and what makes them Different",
        "Understanding of the Cloud and Cloud Services Providers",
        "Understand of Version Control Systems like Git"
      ],
      "course_content": {},
      "requirements": [
        "Understanding how to get around a Computer",
        "Understanding how to get around the Internet",
        "Understanding that Applications are installed onto Devices such as Smart Phones and Computers"
      ],
      "description": "React? Docker? Kubernetes? APIs? Git? GitHub?\n\nIf you work in the Web industry but are not a developer, the industry can be full of nouns and verbs that you may or may not have a full grasp on. It can lead to some conversations where you say out loud, \"Well, I am not technical.\" - But we all know, when you understand a conversation and can follow along, it is exciting and empowering.\nThe theme of this course is \"Confidence\".\nThis course is specifically designed to be technical, but not get into the weeds.\nIt's about understanding a concept, without actually implementing it.\n\nIn my career as a developer and now leader of development teams, I have always done my best to make others who participate in technical conversations feel as confident as they can. I have gone out of my way to coach and train individuals and teams on the concepts that surround the web and software development industry.\nThis includes those who work in Recruiting, Human Resources, Sales, Client Success, Project and Delivery Management, and more.\n\nThis course is a training I have been doing for years for live audiences, and I am excited to capture it in a digital format and help more people.\n\nI am a seasoned educator as well, so I took the opportunity to break this course up into easily consumable sections. The goal is to allow you to digest its content daily, 10 minutes at a time, or binge if that is your preference.\n\nI hope you will join me, in this course on Web Development Concepts!",
      "target_audience": [
        "Human Resource Professionals in the Technology Industry",
        "Recruiters and Sourcing Professionals in the Technology Industry",
        "Sales and Client Success Executives in the Technology Industry",
        "Project and Delivery Management Professionals in the Technology Industry",
        "Product and User Experience Professionals in the Technology Industry",
        "Associate Level Developers",
        "Anyone looking to better understand how Web Applications are built"
      ]
    },
    {
      "title": "The Complete Oracle APEX Fundamentals Course (2025)",
      "url": "https://www.udemy.com/course/oracle-application-express-learn-oracle-apex-201/",
      "bio": "The easiest way to learn Oracle APEX step-by-step from scratch. Rapidly develop a new project with low code.",
      "objectives": [
        "The course provides the entire toolbox you need to become an Oracle APEX developer",
        "Impress interviewers by showing an understanding of the complete Oracle APEX platform",
        "Unfold the power of low code platform",
        "Learn how to build a new web application from scratch",
        "Start coding in SQL and learn how to use it for displaying the data graphically",
        "Understand the Interactive features in Interactive Grid Region for a better representation of the data",
        "Learn how to pre-process and post-process the data",
        "Warm up your fingers as you will be eager to apply everything you have learned here to more and more real-life business cases"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is Oracle APEX?",
          "Why should I use Oracle APEX?"
        ],
        "Understanding Oracle APEX": [
          "Oracle APEX Architecture",
          "Oracle APEX Structure",
          "What you should know"
        ],
        "Setting up the Workspace": [
          "Requesting a New Workspace",
          "Oracle APEX 21.1 version",
          "Installing Sample Database Application",
          "Creating a New Application"
        ],
        "Exploring the New Application": [
          "Running the Boilerplate Application",
          "Creating and Understanding a Page",
          "Update from Oracle APEX 21.2",
          "Regions and Page 0",
          "Buttons and Page Items"
        ],
        "Regions": [
          "New Update : Attributes tab",
          "Interactive Grid - Part 1",
          "Interactive Grid - Part 2",
          "Forms",
          "Reports",
          "Charts",
          "Other Regions - Part 1",
          "Other Regions - Part 2",
          "Page Items - Part 1",
          "Page Items - Part 2 and Buttons"
        ],
        "Dynamic Actions": [
          "Dynamic Actions - Part 1",
          "Dynamic Actions - Part 2"
        ],
        "Page Processing": [
          "Processing points",
          "Computations",
          "Validations - Part 1",
          "Validations - Part 2"
        ],
        "Shared Components": [
          "Application Logic and Other Components",
          "Navigation",
          "User Interface and Files",
          "Note about the Next Lecture",
          "Data Load"
        ],
        "Security": [
          "Authorization Schemes - Part 1",
          "Authorization Schemes - Part 2",
          "Session State Protection and Read Only"
        ],
        "Project: Expense Splitter": [
          "Groups Overview Report",
          "Form for New Group",
          "Note",
          "Expenses Overview Report",
          "Form for Adding New Expense",
          "Expense Details Report",
          "Members Overview Report and Form for New Member",
          "Actions for Updating and Deleting an Expense",
          "Amount Pending Functionality",
          "Graphical Representation"
        ]
      },
      "requirements": [
        "A standard web browser like Google Chrome / Mozilla Firefox / Opera / Edge / Safari",
        "Basic knowledge of SQL",
        "You don't need to be a SQL to succeed in this course!"
      ],
      "description": "This course gives you the complete fundamentals of the Oracle APEX platform.\nYou only need to have a basic knowledge of SQL.\nStarting from setting up the workspace, this course will give a brief overview of how the Oracle APEX architecture is designed and learn the art of using the low code platform to enter into a zone of rapid development of web applications.\nYou will be learning how to build an application from scratch. This course also helps create new blank pages and decorate them with the components provided by Oracle APEX.\nYou will be able to understand how to create a new region like Interactive Grid, Forms, and various kinds of reports for a page. This includes other page rendering components like buttons and page items as well.\nYou will learn how to create Dynamic Actions and the necessity of using validations and computations in page processing.\nAlso, this course covers the shared components section to get a brief idea of how to implement and make use of it.\nMore importantly, you will be learning how to secure your page by understanding the built-in security features in Oracle APEX.\nFinally, we will be creating a real-time web application that takes advantage of a low code platform to design and develop a quick graphical interface for the end user.\nYou need not worry about designing your web page as Oracle APEX page designer greatly helps you with its layout and component view system.\nBy the end of this course, you will be able to build web applications with ease!",
      "target_audience": [
        "Business Users who wants to create web applications from a spreadsheet",
        "Developers who have knowledge in Oracle Database",
        "Anyone who is having basic SQL knowledge can directly jump here"
      ]
    },
    {
      "title": "Angular Crash Course for Busy Developers",
      "url": "https://www.udemy.com/course/angular-crash-course/",
      "bio": "Have limited time to learn Angular 4 (Angular 2+)? Take this course and learn Angular in 10 hours!",
      "objectives": [
        "Master the essential Angular concepts",
        "Troubleshoot common runtime errors",
        "Write cleaner, more maintainable code"
      ],
      "course_content": {
        "Getting Started": [
          "Course Introduction",
          "What is Angular",
          "Architecture of Angular Apps",
          "Setting Up the Development Environment",
          "Your First Angular App",
          "Structure of Angular Projects",
          "Webpack",
          "Angular Version History",
          "How to Take This Course",
          "Asking Questions"
        ],
        "TypeScript Fundamentals": [
          "Introduction",
          "What is TypeScript",
          "Your First TypeScript Program",
          "Declaring Variables",
          "Types",
          "Type Assertions",
          "Arrow Functions",
          "Interfaces",
          "Classes",
          "Objects",
          "Constructors",
          "Access Modifiers",
          "Access Modifiers in Constructor Parameters",
          "Properties",
          "Modules",
          "Exercise",
          "Solution"
        ],
        "Angular Fundamentals": [
          "Introduction",
          "Building Blocks of Angular Apps",
          "Components",
          "Generating Components Using Angular CLI",
          "Templates",
          "Directives",
          "Services",
          "Dependency Injection",
          "Generating Services Using Angular CLI",
          "Authors Page"
        ],
        "Displaying Data and Handling Events": [
          "Introduction",
          "Property Binding",
          "Attribute Binding",
          "Adding Bootstrap",
          "Class Binding",
          "Style Binding",
          "Event Binding",
          "Event Filtering",
          "Template Variables",
          "Two-way Binding",
          "Pipes",
          "Custom Pipes",
          "Favorite Component",
          "Title Casing"
        ],
        "Building Reusable Components": [
          "Introduction",
          "Component API",
          "Input Properties",
          "Aliasing Input Properties",
          "Output Properties",
          "Passing Event Data",
          "Aliasing Output Properties",
          "Templates",
          "Styles",
          "View Encapsulation",
          "ngContent",
          "ngContainer",
          "Like Component"
        ],
        "Directives": [
          "Introduction",
          "ngIf",
          "Hidden Property",
          "ngSwitchCase",
          "ngFor",
          "ngFor and Change Detection",
          "ngFor and trackBy",
          "The Leading Asterisk",
          "ngClass",
          "ngStyle",
          "Safe Traversal Operator",
          "Creating Custom Directives",
          "ZippyComponent"
        ],
        "Template-driven Forms": [
          "Introduction",
          "Building a Bootstrap Form",
          "Types of Forms",
          "ngModel",
          "Adding Validation",
          "Specific Validation Errors",
          "Styling Invalid Input Fields",
          "Cleaner Templates",
          "ngForm",
          "ngModelGroup",
          "Control Classes and Directives",
          "Disabling the Submit Button",
          "Working with Check Boxes",
          "Working with Drop-down Lists",
          "Working with Radio Buttons",
          "Course Form"
        ],
        "Reactive Forms": [
          "Introduction",
          "Building a Bootstrap Form",
          "Creating Controls Programmatically",
          "Adding Validation",
          "Specific Validation Errors",
          "Implementing Custom Validation",
          "Asynchronous Operations",
          "Asynchronous Validation",
          "Showing a Loader Image",
          "Validating the Form Upon Submit",
          "Nested FormGroups",
          "FormArray",
          "FormBuilder",
          "Quick Recap",
          "Change Password Form"
        ],
        "Consuming HTTP Services": [
          "Introduction",
          "JSONPlaceHolder",
          "Getting Data",
          "Creating Data",
          "Updating Data",
          "Deleting Data",
          "OnInit Interface",
          "Separation of Concerns",
          "Extracting a Service",
          "Handling Errors",
          "Handling Unexpected Errors",
          "Handling Expected Errors",
          "Throwing Application-specific Errors",
          "Handling Bad Request Errors",
          "Importing Observable Operators and Factory Methods",
          "Global Error Handling",
          "Extracting a Reusable Error Handling Method",
          "Extracting a Reusable Data Service",
          "The Map Operator",
          "Optimistic vs Pessimistic Updates",
          "Observables vs Promises",
          "GitHub Followers Page"
        ],
        "Routing and Navigation": [
          "Introduction",
          "Routing in a Nutshell",
          "Configuring Routes",
          "RouterOutlet",
          "RouterLink",
          "RouterLinkActive",
          "Getting the Route Parameters",
          "Why Route Parameters Are Observable",
          "Routes with Multiple Parameters",
          "Query Parameters",
          "Subscribing to Multiple Observables",
          "SwitchMap Operator",
          "Programmatic Navigation",
          "Blog Archives",
          "Note"
        ]
      },
      "requirements": [
        "Basic familiarity with HTML, CSS and JavaScript",
        "No prior knowledge of earlier versions of Angular is required"
      ],
      "description": "Chances are you have heard that Angular developers are in demand these days. And you are here to learn Angular fast.\n\n\n\nThere are tons of great courses out there for learning Angular. But most these courses are more than 20 hours long. If you're a busy developer and need to quickly pick up Angular, this is the ideal course for you.\n\n\nThis course contains 20 hours of content but you only need to watch the first 10 hours. The other 10 hours are recorded with an earlier version of Angular. You don't need to watch those videos.\n\n\nSo, in  just 10 hours, you can learn all the essential Angular concepts! You can simply dedicate a weekend to this course and by the end of the weekend you'll have a good understanding of Angular and you'll be able to build real client apps with Angular.\n\n\nMore specifically, you'll learn about:\nFundamentals of TypeScript and object-oriented programming\nDisplaying data and handling events\nBuilding re-usable components\nManipulating the DOM using directives\nFormatting data using pipes\nBuilding template-driven and reactive forms\nConsuming HTTP services\nHandling HTTP errors properly\nUsing Reactive Extensions and observables\nAdding routing and navigation\n\n\nYou don't need any prior knowledge of earlier versions of Angular. As long as you have some basic familiarity with HTML, CSS and JavaScript you can take this course and start learning Angular right now!\n\n\nEvery section includes a few bite-sized videos and concludes with a coding exercise to help you master what you learn in that section.\n\n\n\n\nReviewed by Todd Motto (Google Developer Expert):\nMosh has a fantastic teaching style, and just delivered the best online course I've seen in a long time. Mosh's approach to teaching and guiding makes no assumptions on existing Angular 1.x knowledge, but helps those who have to clarify new concepts. Mosh guides you through critical concepts slowly without skipping over details, and the course is extremely worth investing a few hours in, your understanding of Angular 2 will reach new levels. He fills all the gaps, presents impeccably well and the preparation was top notch, seriously can't recommend the course enough.\n\n\n\n\nWHAT OTHER STUDENTS WHO HAVE TAKEN THIS COURSE SAY:\n\"Great course, even for seasoned developers. I'm a ReactJs developer using this to broaden my horizons!\" -Tyler Markvluwer\n\n\n\"Mosh is a great instructor, he is very clear and concise and breaks down his examples into small \"components\" (drum roll please). Having never used Angular before, I'm really impressed at how easy it was to understand the concepts and even managed most of the examples without having to refer back to the lectures and that is in no small part due to Mosh's understanding of Angular and how well he explains everything. If you can't already tell, I'm really impressed Mosh\" -Chris Graham\n\n\n\"It's the best angular2 video that i ever seen. It's all well explained and easy to understand. It's not need have angular1 knowledge. I'm happy because i've grown as a developer. Thanks\" -Miguelangel Cabrera\n\n\n\"Very good step by step explainations. Focus on \"why\", then \"how\" instead of \"type after me\". Love it!\" -Krysztof Gurniak\n\n\n\"As the absolute Angular newbie I was, I can recommend this course 100%.\" -Guillermo Aguyanes\n\n\n\"Mosh does a great job at explaining templates, directives, dependency injections and everything else. 10/10 would take his course again.\" -Rob\n\n\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you feel like you haven't gained the confidence to build real-world apps with Angular, ask for a full refund within 30 days. All your money back, no questions asked.\n\n\n\n\nABOUT YOUR INSTRUCTOR\nMosh (Moshfegh) Hamedani is a software engineer with 17 years of professional experience. He is a Pluralsight author and a Udemy instructor with several best-selling courses with more than 130,000 students in 195 countries. His students describe him as passionate, pragmatic and motivational in his teaching.\n\n\n\n\nSo, if you're looking for an Angular course that quickly teaches you the absolute essentials, don't look further.\n\n\nEnroll in the course now and you'll build your first Angular app within 10 minutes!",
      "target_audience": [
        "Web developers wanting to build apps with Angular 2+"
      ]
    },
    {
      "title": "HTML5 and CSS3 Fundamentals",
      "url": "https://www.udemy.com/course/html5-fundamentals-for-beginners/",
      "bio": "Build your very own website with HTML5 from scratch using HTML5 and CSS3 - designed for complete beginners",
      "objectives": [
        "Know how to use Html tags and build with the most common ones.",
        "Learn the use of attributes and common settings.",
        "Create CSS stylesheets that control your site design and set them up on your project site.",
        "Understand how the elements go together to build each part of the site",
        "Finish a complete typical website as part of your lessons."
      ],
      "course_content": {
        "Course Intro": [
          "Introduction"
        ],
        "Basic HTML": [
          "Page basics",
          "Text Basics",
          "Text Formatting",
          "Lists",
          "Image Prep",
          "Inserting Images",
          "Website Project"
        ],
        "CSS Basics": [
          "css basics",
          "Font Styles",
          "Colors",
          "List Styles",
          "Advanced Selectors",
          "Website Project"
        ],
        "Links": [
          "Link Basics",
          "In-Page links",
          "Link styles",
          "Navigation Menus",
          "Website Project"
        ],
        "Layout": [
          "Block Spacing",
          "Arranging the Page",
          "Positioning",
          "Website Project"
        ],
        "Tables": [
          "Tables",
          "Table Styles",
          "Website Project"
        ],
        "Forms": [
          "Form Basics",
          "Form Elements",
          "HTML5 Form Elements",
          "Form Styles",
          "Form Website Project"
        ],
        "Video": [
          "Video preparation",
          "Video HTML",
          "Website Project"
        ],
        "Wrap up": [
          "Conclusion tips and resources"
        ]
      },
      "requirements": [
        "Students only need to know how to use a browser and a text editor. It is up to the student to choose one of each - there are many free options available."
      ],
      "description": "When it comes to the world of technology, staying ahead of the curve is always a challenge. In the last year one aspect of this – the world wide web – has kicked up a gear with the introduction of HTML5, the newest version of the code that makes the web tick. If you learn HTML5 along with CSS3 (the next level of web design used on all modern websites), you’ll have a recipe for success; and this course will show you how.\nCreate a website from scratch with HMTL5 and CSS3\nBuild a complete functioning website section by section\nGain a solid knowledge base of HMTL5and CSS3 for future, more complex projects\nControl your website’s appearance, functionality and navigability\nDiscover how HTML5 and CSS3 can be used in other areas of the web\nLearn best practice techniques for building websites and web pages\nBuild Like a Pro with HMTL5 and CSS3 Design\nThe only way to effectively learn HTML5 and CSS3 is by diving right in and building websites from the ground up. That’s exactly what this course does. Designed for complete beginners, you’ll create a complete website section by section during 35 lectures and 5 hours of content.\nYou’ll start by becoming familiar with HTML tags and how they’re used, followed by the use of attributes and common settings. Once you’ve got a handle on basic HTML, you’ll move on to the fun stuff: CSS. You’ll use CSS for fonts, colours, lists, navigation menus, and more, adding a new element to your website with each section. Links, layouts, tables, forms and videos are all covered too.\nIf you know how to use a web browser and a text editor, you’re all set up for this course already. No extra software or tools are needed, and you can choose your preferred option of each to get going. By the time you finish, you’ll know everything you need to know to create beautiful, functional, easy to use websites of any kind.\nAbout HTML5 and CSS3\nHTML5\nHTML or Hyper Text Mark-up Language is the language used for presenting websites and web content. HTML5 is the latest version, made official by the World Wide Web Consortium in 2014. Having a good grasp of HTML means you’ll be able to create, present and edit a whole variety of content on the web.\nCSS3\nCSS (Cascading Style Sheets) essentially ‘enhances’ HTML, giving developers and users more control over how pages and content is displayed. It is responsible for creating more visually engaging web pages, applications and interfaces. CSS3 is the latest version, and has many more extended features than previous versions – although it is backwards compatible.",
      "target_audience": [
        "Anyone who wants to learn html from the beginning."
      ]
    },
    {
      "title": "Make a Responsive Portfolio Website: JavaScript and HTML",
      "url": "https://www.udemy.com/course/portfolio-website/",
      "bio": "Use JavaScript and HTML to create the ultimate responsive portfolio website from scratch!",
      "objectives": [
        "Build their own website using a range of technical skills",
        "Easily utilise third party tools to make your site stand out"
      ],
      "course_content": {},
      "requirements": [
        "A computer is needed",
        "Basic HTML knowledge is nice to have but not needed"
      ],
      "description": "Do you want to become an expert web developer?\nOr maybe you want to build a professional portfolio website to show off your projects?\nIf so, you’re in the right place! This course will guide you step by step in creating your own responsive portfolio website COMPLETELY from scratch.\nWe’re talking the kind of website that will amaze anybody that sees it. The kind of website that will get you hired in no time! A good portfolio website is something every decent developer needs to have. Without it, how can you expect to stand out from the millions of other developers that are out there. A portfolio website is an excellent way to show people just how good you are as well as displaying projects that you've worked on. Why tell an employer how good you are when you can show them.\nWhy let me teach you?\nI work as a Software Engineer at Microsoft where I build products used by millions of people all over the world! I want to take the skills I’ve gained through years of working with some of the best developers in the world and transfer them directly to you!\nI’ve taught thousands of students here on Udemy and created some of the most popular development courses on Udemy!\nOkay so what’s the course about?\nIn this course, we will create a beautiful responsive portfolio website from scratch using HTML, CSS, JavaScript/JQuery and whilst also making use of some great (free) third party tools. Anybody who sees your site will know that:\nyou are proficient with HTML/CSS\nyou possess extensive JavaScript skills\nyou are able to create responsive websites\nyou are able to implement third party tools (very important skill)\nand much more!\nWhether you are a complete beginner* or an experienced programmer, this course will be massively beneficial to you.\nWhy should I take the course?\nIn the programming world, the “big 4” often consists of Google, Microsoft, Facebook and Amazon. To get a job at any of these companies, you absolutely MUST know the essentials: HTML, CSS and JavaScript.\nIf you take this course, you will have nothing to worry about because we use all of these skills extensively!\nSupport:\nBy enrolling in this course, you will have my COMPLETE support. I'm always ready to answer any question you may have. Programming issues, errors, feature requests, general programming advice - it doesn't matter, I'm always happy to help! I always aim to respond to questions within a few hours and it's also worth noting that I've answered EVERY SINGLE question asked so far on all of my courses.\nFun!\nFinally, this project is a lot of fun and I know you'll have a great time implementing your own unique ideas as well as the ones we implement together. What are you waiting for?\n*You don't need any experience to take this course, however a basic understanding of HTML would be great. I will explain everything as I go, but some things I spent more time on than others. I don't spent a huge amount of time on the absolute lowest level basics e.g. what is HTML. So if you have absolutely no experience programming, you are absolutely fine to take this course, just ask me to explain things further if you would like a more detailed explanation :)",
      "target_audience": [
        "Anybody who wants to build their own portfolio website."
      ]
    },
    {
      "title": "React JS Portfolio Project - React Training for Beginners",
      "url": "https://www.udemy.com/course/react-for-beginners-build-a-quiz-while-learning-react/",
      "bio": "Build React JS Portfolio Project and Deploy React Project to Production With My React Training for Beginners",
      "objectives": [
        "Build React JS Portfolio Project",
        "Write high quality code",
        "Understand React state management",
        "Learn React in real React training for beginners"
      ],
      "course_content": {
        "Preparing tools": [
          "What is this section about?",
          "What we will implement?",
          "Generating React project",
          "I prepared some files"
        ],
        "Creating our first components": [
          "What is this section about?",
          "Creating React components",
          "Rendering React components markup",
          "React strict mode"
        ],
        "State management": [
          "What is this section about?",
          "useState hook",
          "useReducer hook",
          "Global state in React"
        ],
        "Adding functionality": [
          "Rendering questions",
          "Next button",
          "Result page",
          "Rendering answers",
          "Highlighting answers"
        ],
        "Working with real API": [
          "Making async questions with trivia API",
          "Handling API errors"
        ],
        "Deployment": [
          "Renting a production server to deploy React",
          "Configuring production server to deploy React",
          "Uploading React to production"
        ],
        "What's next?": [
          "Homework",
          "My Bonus Lecture"
        ]
      },
      "requirements": [
        "Javascript",
        "HTML",
        "CSS"
      ],
      "description": "Do you want to build React JS portfolio project the real way? In this React training, you will learn the key concepts of React while building a Quiz project.\nReact is currently the most popular front-end framework. It's easy to begin with yet it's very capable even for building large-scale professional web-applications. In this course, we learn the fundamentals of React while creating a real project which will be deployed to production.\nWhile building React JS portfolio project we dive into the fundamentals of React like:\nHow to break down your application into smaller pieces, into components?\nHow to structure your business logic and manage state and how to connect these to our components?\nHow to deal with component changes, what is the state, what to store in it, and where to define it?\nHow to add interaction and how does re-rendering work in React?\nHow to communicate with real API from React application\nHow to deploy your React application on your real server (You will need to pay for a server for deployment or just follow along)\nWe don't learn dry theory or go through each step of React documentation. Instead, you can see on the real example how you can use React to build applications.\nRequirements:\nThis is an intro course, no prior React knowledge is required, but HTML, CSS, and Javascript skills are necessary.",
      "target_audience": [
        "Beginner Web developers who want to learn React while building a real application"
      ]
    },
    {
      "title": "Internet and Web Development Fundamentals",
      "url": "https://www.udemy.com/course/internet-and-web-development-fundamentals/",
      "bio": "Learn how the Internet Works and Setup a Testing & Production Web Server",
      "objectives": [
        "How the Internet Works",
        "Internet Protocols (HTTP, HTTPS, SMTP)",
        "The Web Development Process",
        "Planning a Web Application",
        "Types of Web Hosting (Shared, Dedicated, VPS, Cloud)",
        "Domain Name Registration and Administration",
        "Nameserver Configuration",
        "Deploying a Testing Server using WAMP & MAMP",
        "Deploying a Production Server on Linode, Digital Ocean, or AWS",
        "Executing Server Commands through a Command Console",
        "Server Configuration on Ubuntu",
        "Remote Desktop Connection and VNC",
        "SSH Server Authentication",
        "FTP Client Installation",
        "FTP Uploading"
      ],
      "course_content": {
        "How the Internet Works": [
          "The Internet Overview",
          "The HTTP Protocol",
          "The HTTPS Protocol",
          "The SMTP Protocol",
          "Outbound Mail Delivery",
          "Network Basics - LAN and WAN",
          "Network Ports and Firewalls"
        ],
        "The Web Development Process": [
          "Web Development Process Overview"
        ],
        "Planning a Website": [
          "Web Application Planning Overview"
        ],
        "Web Hosting and System Requirements": [
          "Web Hosting Packages Overview",
          "Shared Hosting",
          "Dedicated Hosting",
          "VPS Hosting",
          "Cloud Hosting and Case Study"
        ],
        "Domain Names": [
          "Introduction to Domain Names",
          "Domain Name Registrars",
          "Domain Registration",
          "Registration and Privacy Protection",
          "Control Panel Sign-In",
          "Auto-Renewal and Domain Lock",
          "Domain Forwarding",
          "Nameservers",
          "Update Registration Information"
        ],
        "Testing Environment": [
          "Introduction to Testing Servers",
          "Installing WampServer (WAMP)",
          "Installing MampServer (MAMP)",
          "WampServer Menu",
          "Localhost File Test"
        ],
        "Production Environment": [
          "Overview",
          "Cloud Hosting Registration",
          "Create a Virtual Server",
          "Linode Settings",
          "Deploying an Image - Ubuntu 14.04 LTS",
          "Linode Dashboard",
          "Remote Access",
          "Download PuTTY and PuTTYgen - Windows",
          "Launch Terminal - MAC",
          "Intro to Command Console",
          "Connecting with PuTTY - Windows",
          "Connecting with Terminal - MAC",
          "Maintenance Commands",
          "File and Directory Commands",
          "Install LAMP Stack",
          "Server Host Name and Date",
          "Creating a User - Ubuntu",
          "Ubuntu SSH Authentication - Windows",
          "Ubuntu SSH Authentication - MAC",
          "Web Root Permissions",
          "Remote Dekstop Connection",
          "Installing Tight VNC Viewer - Windows",
          "Installing RealVNC Viewer - MAC",
          "Ubuntu Desktop Basics",
          "Disable Root and Password Access",
          "Re-sizing a Linode Server",
          "Creating Backups on Linode",
          "Changing Root Password through Linode",
          "Linode DNS Manager",
          "Amending GoDaddy Name Servers"
        ],
        "FTP Setup": [
          "FTP Client Installation",
          "FileZilla Overview",
          "FileZilla Uploading",
          "FileZilla Interface Basics"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "This course is part-one of the nine-part series that starts by taking an in-depth look at how the internet facilitates the movement of data packets across both LANs (Local Area Network) and WANs (Wide Area Network). Students learn how to interpret various protocols such as TCP/IP, HTTP, HTTPs, SMTP and FTP. We examine the entire flow and life-cycle of data-packet movement from origin to destination. The course examines the role of DNS and SMTP servers in routing internet traffic and email transmissions. Mechanism to safeguard the movement of data, such as network routers, ports and firewalls, are also explored.\nStudents are then introduced to the web development process and planning stages of building websites and complex web applications. We conduct an overview of web hosting infrastructures such as shared, VPS, Dedicated and Cloud hosting solutions through case analysis. We then take a look at the role of Domain name registrars and ICANN (The Internet Corporation for Assigned Names and Numbers). Students learn to register and administer domain names through the GoDaddy domain management console. Management features such as Name Server assignment, auto-renewal, domain privacy, and domain forwarding will be covered.\nWith first-hand insights into the creation of effective web infrastructures and domain management, students learn to configure local testing servers. This includes installing and configuring WAMP/MAMP (Windows/MAC, Apache, MySQL, PhpMyAdmin) on a PC or MAC system. We discuss the role of each essential service as it applies to testing dynamic, database-driven web applications on a local computing system.\nStudents then explore the configuration of a live production server using popular cloud hosting providers such as Linode. This includes deployment and administration of Ubuntu on Linux based distributions and essential web services (LAMP Stack - Linux, Apache, MySQL, PhpMyAdmin) on scalable virtual machines. Several remote access tools such as PuTTy and Terminal will be used to administer virtual servers through the use of command lines. Servers will be configured with security in mind, using multi-user accounts, SSH authentication, and file permission management.\nStudents also learn to install and connect to their virtual machines using remote desktop connection tools such as Tight VNC and Real VNC. The entire Linode management console will be explored to demonstrate how to complete various tasks including: creating backups, server re-sizing, changing root passwords, DNS management, and general administration.\nLastly, the course takes a look at FTP clients and establishing connections from local machines to production servers to upload web content. We will explore the FileZilla interface and provide demonstrations on uploading, deleting and modifying remote server files.",
      "target_audience": [
        "Web Developers",
        "Cloud Server Administrators",
        "Students who want to build a Web Application",
        "Students who want to Deploy a Testing or Production Web Server"
      ]
    },
    {
      "title": "20 Web Projects With Vanilla JavaScript",
      "url": "https://www.udemy.com/course/web-projects-with-vanilla-javascript/",
      "bio": "Build 20 mini frontend projects from scratch with HTML5, CSS & JavaScript (No frameworks or libraries)",
      "objectives": [
        "Build 20 Frontend Projects From Scratch",
        "No JS or CSS Frameworks",
        "Modern JavaScript (ES6+) - Arrows, Fetch, Promises, etc",
        "DOM Manipulation & Events",
        "Animations With CSS & JavaScript",
        "Fetch & JSON With 3rd Party API's",
        "HTML5 Canvas, Speech API, Audio & Video",
        "Beginner Friendly"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "Getting Setup",
          "The Code"
        ],
        "1: Form Validator | Intro Project": [
          "Project Intro",
          "Project HTML",
          "Project CSS",
          "Adding Simple Validation",
          "Check Required & Refactor",
          "Check Length, Email & Password Match"
        ],
        "2: Movie Seat Booking | DOM & Local Storage": [
          "Project Intro",
          "Project HTML",
          "Project CSS",
          "Selecting Movie & Seats From UI",
          "Save Data To Local Storage",
          "Populate UI With Saved Data"
        ],
        "3: Custom Video Player | HTML5 Video API": [
          "Project Intro",
          "Project HTML",
          "Project CSS",
          "Play, Pause & Stop",
          "Video Progress Bar & Timestamp"
        ],
        "4: Exchange Rate Calculator | Fetch & JSON Intro": [
          "Project Intro",
          "Project HTML",
          "Project CSS",
          "A Look at JSON & Fetch",
          "Fetch Rates & Update DOM"
        ],
        "5: DOM Array Methods | forEach, map, filter, sort, reduce": [
          "Project Intro",
          "Project UI",
          "Generate Random Users - Fetch w/ Async/Await",
          "Output Users - forEach() & DOM Methods",
          "Double Money - map()",
          "Sort By Richest - sort()",
          "Show Millionaires - filter()",
          "Calculate Wealth - reduce()"
        ],
        "6: Menu Slider & Modal | DOM & CSS": [
          "Project Intro",
          "Project HTML",
          "Navbar Styling",
          "Header & Modal Styling",
          "Menu & Modal Toggle"
        ],
        "7: Hangman Game | DOM, SVG, Events": [
          "Project Intro",
          "Draw Hangman With SVG",
          "Main Styling",
          "Popup & Notification Styling",
          "Display Words Function",
          "Letter Press Event Handler",
          "Wrong Letters & Play Again"
        ],
        "8: Meal Finder | Fetch & MealDB API": [
          "Project Intro",
          "Project HTML & Base CSS",
          "Search & Display Meals From API",
          "Show Single Meal Page",
          "Display Random Meal & Single Meal CSS"
        ],
        "9: Expense Tracker | Array Methods & Local Storage": [
          "Project Intro",
          "Project HTML",
          "Project CSS",
          "Show Transaction Items",
          "Display Balance, Income & Expense",
          "Add & Delete Transactions",
          "Persist To Local Storage"
        ]
      },
      "requirements": [
        "Basic knowledge in HTML, CSS & JavaScript"
      ],
      "description": "This is a fun, practical & project based course for all skill levels. The projects in this course are designed to get you building things using HTML5, CSS &  JavaScript with no frameworks or libraries. Every project is built from scratch and has some kind of dynamic functionality from small games to an expense tracker to a breathing relax app.\nAlthough this is a project based course, I will still be explaining everything as I go. These are mini-projects designed for you to complete in a few hours.\nYou should have some basic knowledge of HTML/CSS/JS. If you are brand new, I would suggest my Modern HTML/CSS From The Beginning and/or my Modern JS From The Beginning courses on Udemy. This course is a mix of both.\n\n\nSome Things You Will Learn In These Projects:\nCreate Layouts & UI's With HTML/CSS ( No CSS Frameworks )\nCSS Animations (Transitions, Keyframes, etc With JS Triggers)\nJavaScript Fundamentals\nDOM Selection & Manipulation\nJavaScript Events (Forms, buttons, scrolling, etc)\nFetch API & JSON\nHTML5 Canvas\nThe Audio & Video API\nDrag & Drop\nWeb Speech API (Syth & Recognition)\nWorking with Local Storage\nHigh Order Array Methods - forEach, map, filter, reduce, sort\nsetTimout, setInterval\nArrow Functions\nand More!!",
      "target_audience": [
        "Anyone that wants to build some fun and easy to intermediate projects"
      ]
    },
    {
      "title": "React JS, Angular & Vue JS - Quickstart & Comparison",
      "url": "https://www.udemy.com/course/angular-reactjs-vuejs-quickstart-comparison/",
      "bio": "Angular (Angular 2+), React or Vue? Get a Crash Course on each of them and a detailed comparison!",
      "objectives": [
        "Choose their favorite JavaScript framework and dive deeper into it",
        "Understand the JavaScript world and its many packages and tools better",
        "Take their JavaScript apps to the next level"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "The Goal of this Course",
          "Understanding the Role of JavaScript",
          "The World of JavaScript",
          "Join our Online Learning Community",
          "Using Vanilla JavaScript & Understanding Its Limitations (1/3)",
          "Using Vanilla JavaScript & Understanding Its Limitations (2/3)",
          "Using Vanilla JavaScript & Understanding Its Limitations (3/3)",
          "Analyzing the Vanilla JavaScript Solution",
          "Improving the App with jQuery",
          "More JavaScript Libraries: Adding Lodash",
          "The Role of JavaScript Libraries",
          "Libraries vs Frameworks",
          "Using Vue.js (A JavaScript Framework)",
          "Understand other Parts of the JavaScript World",
          "JavaScript Versions and Languages - ES6 and TypeScript",
          "Course Structure",
          "Where to Find the Course Source Code",
          "Module Resources"
        ],
        "Understanding JavaScript Frameworks in General": [
          "Module Introduction",
          "JS Frameworks in Fullstack Applications",
          "JS Frameworks in Single-Page-Applications",
          "An Example for a Framework in a Fullstack Application",
          "An Example for a Framework running a Single-Page-Application",
          "Fullstack Approach - Pros and Cons",
          "Single-Page-Application - Pros and Cons",
          "Prerequisites for the Different JS Frameworks",
          "Module Resources"
        ],
        "Vue.js - An Introduction": [
          "Module Introduction",
          "Creating a Basic Vue.js Application",
          "In a Nutshell: How Vue.js Works",
          "Handling Events and Updating the DOM",
          "Rendering Content Conditionally",
          "Outputting Lists",
          "Binding HTML Attributes & Properties to Data",
          "Styling Elements Dynamically",
          "Setting CSS Classes Dynamically",
          "Using Shorthands for v-bind and v-on",
          "Using Multiple Vue Instances",
          "Limitations of Multiple Vue Instances",
          "Creating and Using Components",
          "Passing Data into Components",
          "Emitting Custom Events in Components",
          "Template Restrictions",
          "Two-Way-Binding to Input Fields",
          "Time to Practice - Vue.js - Problem",
          "Time to Practice - Vue.js - Solution",
          "Creating Vue.js Projects with the Vue CLI",
          "Why do we need Node.js and NPM?",
          "Using the Vue CLI to Create Projects",
          "Understanding the Project Folder",
          "Understanding .vue Files",
          "How the Application Gets Rendered",
          "Creating Global Components with .vue Files",
          "Creating Local Components",
          "Scoping Styles to Components",
          "Creating a Single Page Application (SPA)",
          "Adding Routing to the Application",
          "Linking with router-link",
          "Routing and the Server-Side",
          "Wrap Up",
          "Module Resources & Further Resources"
        ],
        "Understanding Workflows & Webpack": [
          "Module Introduction",
          "The Big Picture",
          "The Role of Node.js and NPM",
          "Why do we need a Development Server?",
          "How Webpack Works: Entry & Output",
          "How Webpack Works: Modules, Rules & Plugins",
          "Wrap Up"
        ],
        "React.js - An Introduction": [
          "Module Introduction",
          "Using React.js to Create a Basic App",
          "Understanding How React.js Works and JSX",
          "Outputting Dynamic Content",
          "Handling Events and Updating the DOM",
          "Creating a First Component",
          "Passing Data into Components (Props)",
          "Creating Components using ES6 Classes",
          "More about ES6",
          "Using State in React.js Components",
          "What Happens Behind the Scenes",
          "Rendering Conditional Content",
          "Outputting Lists",
          "Setting Styles Dynamically",
          "Setting CSS Classes Dynamically",
          "User Input & Two-Way-Binding",
          "Using Multiple Components",
          "Dumb Components",
          "Passing Data from Child to Parent",
          "Time to Practice - React.js - Problem",
          "Time to Practice - React.js - Solution",
          "Switching to a Local Setup & SPA",
          "Using the \"create-react-app\" Package",
          "Understanding the Created Project",
          "Using the Local Setup",
          "Adding React Router and Routes for the App",
          "Adding Links",
          "The React Router and a Server",
          "Wrap Up",
          "Module Resources & Further Resources"
        ],
        "Angular - An Introduction": [
          "Module Introduction",
          "What It's Good at and What It's Not Good At",
          "Understanding Angular Versioning",
          "TypeScript",
          "TypeScript - A Brief Introduction",
          "Creating an Angular Project with the CLI",
          "Understanding the Project Structure",
          "Understanding the Role of Components and the App Component",
          "How the App Starts",
          "Understanding the App Module",
          "Outputting Data with String Interpolation",
          "Handling Events",
          "Rendering Content Conditionally",
          "Outputting Lists",
          "Binding Data to (HTML and other) Properties",
          "Adding Dynamic Styles to Elements",
          "Adding CSS Classes Dynamically",
          "When to use the * Syntax",
          "Using Multiple Components",
          "Passing Data Into Components",
          "Emitting Custom Events From Components",
          "Using Two-Way-Binding",
          "Time to Practice - Angular - Problem",
          "Time to Practice - Angular - Solution",
          "Using the CLI to Generate Components",
          "Nesting Multiple Components",
          "Scoping Styles to Components",
          "Adding Routing & Routes",
          "Adding Links",
          "The Angular Router and the Server",
          "Wrap Up",
          "Module Resources & Further Resources"
        ],
        "Comparing the Frameworks": [
          "Module Introduction",
          "Possible Comparison Dimensions",
          "Dimension 1: The Learning Curve",
          "Dimension 2: Downscaling & Fullstack Applications",
          "Dimension 3: Upscaling & SPAs",
          "Dimension 4: Performance",
          "Dimension 5: Ease of Deployment (The Way from Dev to Production)",
          "Dimension 6: Popularity & Job Market",
          "The Verdict",
          "...What About jQuery?",
          "Module Resources"
        ],
        "Course Roundup": [
          "Course Roundup",
          "Bonus: More Content!"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge is a must",
        "Advanced JavaScript knowledge is a plus but not required",
        "No prior JavaScript framework or library experience is required"
      ],
      "description": "After learning the basics about JavaScript, the JavaScript world can be very intimidating. There are lots of different frameworks like Angular, React or Vue, libraries and other packages (like webpack).\nYou’ll quickly see yourself ask questions like:\nWhat do all these packages, tools, libraries and frameworks do?\nWhat IS a library and what's the difference to a framework?\nWhich framework should you learn? Angular, React.js or Vue.js?\nWhat about jQuery?\nThis course will help you with that!\nYou’ll get an introduction into the three most important JavaScript frameworks (Angular, React.js and Vue.js) and you’ll also get a detailed comparison! This will then allow you to pick other resources or courses to dive super-deep into your chosen framework whilst having a solid foundation already.\nThroughout the course, we’ll dive into the basics of these frameworks but we’ll also have a look at why we use them to begin with. The role of jQuery and how these frameworks differ from jQuery will be clarified, too!\nWhich framework should you learn?\nNot only are we going to dive into the basics of the three most popular JavaScript frameworks, this course will also draw a detailed comparison. A couple of different dimensions will be considered to find out which framework might be the perfect tool for the job you have at hand!\nThis course won’t stop at this point though!\nWe’ll also have a look at Webpack and “Build workflows” in general. You’ll learn which role these (and the respective packages like Webpack) play and why we need them. You will also understand which role ES6 and TypeScript play.\nHere’s a detailed overview over what you’ll get!\nAn introduction to today’s JavaScript world and an immediate overview over the different roles of the individual pieces\nA practical example showing you why vanilla JavaScript (=without any libraries or frameworks) might NOT be all you need\nAn overview what JavaScript frameworks are and where to use them\nDetailed introductions to the three most relevant JavaScript frameworks as of today: Angular (2, 4), React.js and Vue.js\nAn introduction to Webpack and why we use it (and build workflows in general)\nA detailed comparison of the three frameworks shown in this course – when could you pick which?\nA detailed understanding of the JavaScript world as it is today\nIs this course for you?\nNow that you learned what this course offers, let's find out if it's the right choice for you. It's definitely the right choice if you can answer at least one of the following questions with \"YES\":\nYou have basic JavaScript experience and want to learn how to use libraries or frameworks to \"do more with JavaScript\"\nYou're not sure which JavaScript (frontend) framework you should learn\nYou already know something about JavaScript frameworks but want to get a basic introduction to the three most important ones\nYou already know either Angular, React.js or Vue.js but also want to get an overview over the other two frameworks\nYou're totally confused by the many terms the JavaScript world throws at you\nI'd be very happy to welcome you on board of this course!",
      "target_audience": [
        "Everyone who's interested in diving deeper into JavaScript and wants to learn a JavaScript framework",
        "Anyone who isn't sure which JavaScript framework to choose",
        "Anyone confused by the many options, packages and tools JavaScript development offers"
      ]
    },
    {
      "title": "GitHub Copilot (AI Coding Assistant) - Complete Guide [2024]",
      "url": "https://www.udemy.com/course/github-copilot-complete-guide/",
      "bio": "Learn GitHub copilot, and how to use it in day to day programming to let AI help you with smart suggestions in .NET",
      "objectives": [
        "Learn fundamentals of GitHub Copilot",
        "Learn how to effectively use GitHub Copilot",
        "Use GitHub Copilot with Visual Studio",
        "Use GitHub Copilot with Visual Studio Code"
      ],
      "course_content": {},
      "requirements": [
        "GitHub Copilot License or Free Trial",
        "Visual Studio Code",
        "Visual Studio"
      ],
      "description": "AI is the buzz word in programming, but AI is not going to replace developers, it is rather going to enhance the development for developers and GitHub Copilot is the proof of that! GitHub copilot has been a game changer in programming.\n\n\nBut in order to get maximum out of GitHub Copilot, one must know how to use it, what to ask and how to ask GitHub Copilot to fix issues. In this course we will explore all of that.\n\n\nGitHub copilot analyzes your code and based on that it provides autocomplete suggestions, helps you document, fix issues and much more.\n\n\nGitHub copilot is an AI code assistance tool developed by GitHub in collaboration with OpenAI. It uses machine learning models to provide intelligent coding suggestions directly in IDE like visual studio code.\nGitHub copilot will help with basic tasks and common problems that a developer faces in day to day programming. Based on what you are typing and your context it provides smart suggestions ,helps with documentation, solving errors and much more.\n\n\nGitHub Copilot is designed to work seamlessly alongside developers as the name implies with the role of a copilot serving as a coding companion that adapts to the developers coding preferences and enhances the coding process, ultimately accelerating productivity in software development.",
      "target_audience": [
        "Anyone who wants to learn GitHub Copilot"
      ]
    },
    {
      "title": "Ultimate ASP.NET Core Web API Development Guide",
      "url": "https://www.udemy.com/course/ultimate-aspnet-5-web-api-development-guide/",
      "bio": "Learn how to create a maintainable Web API using ASP.NET Core, Entity Framework and Enterprise Level Design Patterns",
      "objectives": [
        "Build A Data Driven API using Entity Framework Core",
        "How to Build RESTful APIs with proper practices",
        "Configure Cross-Origin Resource Sharing (CORS)",
        "Learn C# and Visual Studio Techniques",
        "Enterprise Level Design Patterns",
        "Using Production Grade Third-Party Tools",
        "Troubleshoot and Fix Practical Errors",
        "Use AutoMapper and Data Transfer Objects (DTOs)",
        "Use NuGet Package Manager",
        "Manage and Track Changes using GitHub",
        "Asynchronous Programming",
        "Custom Logging using SeriLog",
        "Use Swagger UI Documentation",
        "Deploy API to Microsoft Azure",
        "API Versioning",
        "API Caching"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started with ASP.NET Core and APIs": [
          "Section Overview",
          "What is .NET?",
          "What is ASP.NET Core?",
          "What is an API?",
          "Using ASP.NET Core API",
          "Section Review"
        ],
        "Environment Configuration": [
          "Section Overview",
          "Install Visual Studio (Windows Only)",
          "Tour Visual Studio",
          "Install Visual Studio 2026 (Insiders Edition)",
          "Install Visual Studio Code and .NET SDK (Any OS)",
          "Visual Studio Code Tour",
          "Jetbrains Rider",
          "Setup GitHub Account",
          "Install and Explore PostMan",
          "Section Review"
        ],
        "Project Setup and Configurations": [
          "Section Overview",
          "Create ASP.NET Core API Project with Visual Studio",
          "Create ASP.NET Core API Project with Visual Studio Code",
          "Controllers vs Minimal APIs",
          "Project Files Tour and Explanation",
          "Testing the API",
          "Section Review"
        ],
        "Understanding RESTful APIs and Standards": [
          "Section Overview",
          "RESTful API Principles",
          "HTTP Response Codes",
          "Activity: Implement GET Endpoints",
          "Activity: Implement PUT, POST and DELETE Endpoints",
          "Testing New API Endpoint",
          "Best Practices and Recommendations",
          "RESTful Decisions: You're the Lead API Developer",
          "Section Review"
        ],
        "Working With GitHub (Source Control Management": [
          "Section Overview",
          "What is Source Control Management",
          "Introducing Git and GitHub",
          "Sign Up for GitHub",
          "Add to Source Control (Visual Studio)",
          "Add to Source Control (Visual Studio Code)",
          "Making A Commit",
          "Understanding Git Operations",
          "Section Review"
        ],
        "Database Modelling with Entity Framework Core": [
          "Section Overview",
          "Understanding Entity Framework Core",
          "Setup Entity Framework Core In API Project",
          "Adding Data Models",
          "Adding a Database Context",
          "Optional: Setup SQL Server on Docker",
          "Adding a Connection String and Configurations",
          "Understanding Migrations",
          "Performing Database Migrations and Updates",
          "Scaffolding a Database",
          "Review and Add Changes to GitHub",
          "Database Modelling with Entity Framework Core",
          "Section Source Code",
          "Section Review"
        ],
        "Scaffolding Database Driven API Endpoints (Countries)": [
          "Section Overview",
          "Introducing Scaffolding",
          "Scaffold Countries API Controller",
          "Review Countries Controller",
          "Testing Countries API Endpoints",
          "Refactoring Scaffolded Controller Code",
          "Scaffolding Controllers and Testing API Endpoints",
          "Section Source Code",
          "Section Review"
        ],
        "Scaffolding Database Driven API Endpoints (Hotels)": [
          "Section Overview",
          "Scaffold and Test Hotels API Controller",
          "Understanding Related Data",
          "Improve GET Endpoint To Fetch Related Data - Part 1",
          "Fix: JSON Object Cycle Error",
          "Improve GET Endpoint To Fetch Related Data - Part 2",
          "Section Source Code",
          "Section Review"
        ],
        "Implementing DTOs for Data Shaping, Validation, and Security": [
          "Section Overview",
          "The Importance of Validation",
          "Explore and Implement Validation Rules",
          "Understanding DTOs and Data Shaping",
          "Adding DTOs for Data Data Validation and Data Shaping",
          "Adding DTOs for Country Data Data Validation and Data Shaping",
          "Refactor Hotels Controller to Use DTOs",
          "Refactor Country Controllers to Use DTOs",
          "Section Source Code",
          "DTOs Under the Microscope: Secure, Shape, Validate",
          "Section Review"
        ]
      },
      "requirements": [
        "A computer",
        "The Internet"
      ],
      "description": "Overview\nLearn how to build a RESTful API using ASP.NET Core API, Entity Framework, and enterprise-grade practices for a scalable and future-proofed Web API solution. We will implement various support tools for logging, documentation, security, and error handling.\nASP.NET Core, based on the new .NET 6 / .NET 7 runtime, is Microsoft's modern, cross-platform framework for building enterprise-ready web applications. In this course, you will learn everything you need to know about building a RESTful API using .NET Core 6 / 7, from understanding the folder structure and files to building and deploying a complete web REST API.\nEverything in this course is compatible with .NET 6 / .NET 7.\nWhy Learn ASP.NET Core / .NET 6\nMicrosoft .NET is the platform that drives the business technology of many top corporations in the United States and other countries. It is the predominant technology used to drive enterprise-scale business technology. Companies have chosen .NET for its proven scalability, reliability, and support. Only a few technologies have achieved this level of stability, maturity, and speed. Creating a flexible yet stable technology is quite a feat, and that’s precisely what ASP.NET Core developers have achieved.\nThe .NET language of choice to learn is C#, as it is among the most widely used languages today. It’s a general-purpose programming language that can handle almost any problem, from desktop to mobile to dynamic web applications. As such, there is a high demand worldwide for .NET developers across various industries, which means that more jobs are available for candidates with a foundation built on .NET technologies.\nWhy Learn to Build An API\nThe acronym API means Application Programming Interface. The ability to design and maintain an API is a crucial toolset for modern web developers. It enables you to extend the accessibility of your software to external applications and other developers, resulting in a more comprehensive software solution.\nREST APIs have become a standard in the industry due to their ability to serve essential functionality from any backend to any frontend, while simultaneously catering to thousands of clients. There is no time like the present to upskill and start adding ASP.NET Core Web API to your skill set.\nBuild A Strong Foundation in .NET Programming:\nBuild a fully data-driven REST Web API using cutting-edge technology.\nTest and Troubleshoot using Postman\nCreate a database using Entity Framework Core.\nAuthor efficient queries using Entity Framework Core\nGeneric Repository Pattern\nDependency Injection\nSetup Logging using Serilog\nSetup API documentation using SwaggerUI\nUnderstand the REST design principles.\nUnderstand C# 10 and .Net Core Web Syntax\nSetup Identity Core for User Authentication and Authorization\nUnderstand user Authentication using JWT (JSON Web Tokens)\nImplement Refresh Tokens Endpoint\nUnderstand how to use Data Transfer Objects (DTOs) and AutoMapper.\nManage Packages with NuGet Manager\nAPI Caching, Versioning and Request Rate Throttling\nImplement API Health Checks\nUnderstand .NET 6 / .NET 7 workflows, tools, and application development.\nSetup GitHub for Source Control\nDeploy Applications and Database to Microsoft Azure\nPREREQUISITES\nTo take this course, you should have at least 3 months of experience programming in C#. If you need to strengthen your C# fundamentals, you can take my C# beginner course C# Console and Windows Forms Development with LINQ & ADO .NET.\nContent and Overview\nTo take this course, you will need to have some knowledge of object-oriented programming, if not C#. Even if you do not have much exposure to the .NET development stack, this course is very beginner-friendly and chock-full of development tips.\nPractical guidance is provided to help you achieve a tangible and valuable outcome, and you are also introduced to key concepts, including REST (Representational State Transfer), JSON (JavaScript Object Notation), DTOs (Data Transfer Objects), and the MVC (Model-View-Controller) architectural pattern.\nThis is a vast course. Over 10 hours of premium content, but smartly broken up to highlight a set of related activities based on each module in the application that is being built. We will also examine troubleshooting and debugging errors as we progress, implementing best practices, writing efficient logic, and understanding why developers approach tasks in a particular way. Your knowledge will grow, step by step, throughout the course, and you will be challenged to be the best you can be.\nWe don't do things the perfect way the first time; that is not the reality of writing code. We make mistakes, point them out, and fix them around them. By doing this, we develop proficiency in using debugging tools and techniques. By the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, including additional files to facilitate replication of the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nClicking the 'Take This Course' button could be the best step you can take towards quickly increasing your income and marketability. Also, remember that if you don't think the course is worth what you spent, you have a full 30 days to get a no-questions-asked refund!\nIt's time to take action!\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to learn REST API Development",
        "Anyone who wants to learn .NET Core Development and Programming",
        "Anyone who wants to learn application and hosting and database hosting on Azure",
        "Everyone"
      ]
    },
    {
      "title": "ASP.NET Core - Cross-Platform Development",
      "url": "https://www.udemy.com/course/learn-aspnet-mvc-and-entity-framework/",
      "bio": "Learn how to develop an ASP.NET Core application for any operating system using cross-platform tools and the dotnet CLI.",
      "objectives": [
        ".NET 7/8/9 Development",
        "Use the dotnet command line interface to automate tasks",
        "How to manipulate data using Entity Framework Core",
        "How to use Bootstrap 5",
        "An understanding of the MVC pattern",
        "Visual Studio Code",
        "Azure Data Studio",
        "How To Connect to and Use GitHub",
        "How to Manage Packages in a .NET Project"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Environment Setup": [
          "Create GitHub Account",
          "Install .NET 7 SDK",
          "IMPORTANT - .NET 8/9 Version",
          "Install Visual Studio Code (Any Operating System)",
          "Alternative - Install Visual Studio 2022 (Windows and Mac)",
          "Install SQL Server Express (Windows)",
          "Alternative - Install SQL Server on Docker (Any Operating System)",
          "Install Microsoft Data Studio"
        ],
        "Setup ASP.NET Core MVC Application": [
          "Create ASP.NET Core MVC Project - Visual Studio Code",
          "Create ASP.NET Core MVC Project - Visual Studio",
          "Tour Visual Studio Code",
          "Tour of Files and Folders",
          "Add Project to GitHub"
        ],
        "Manipulating Website Views and Layout": [
          "Understanding the layout file and Bootstrap",
          "Modifying the homepage",
          "Adding an About Us page",
          "Add To GitHub"
        ],
        "Adding a Database": [
          "Connect to Database with Azure Data Studio",
          "Create Database",
          "Scaffold Database with Entity Framework Core",
          "Scaffolding Views and Controllers - Part 1",
          "Understand Scaffolded Controller",
          "Understand Scaffolded Views",
          "Scaffolding Views and Controllers - Part 2",
          "Add To GitHub"
        ],
        "Customizing Views and Elements": [
          "Section Overview",
          "Adding Boostrap Styling",
          "Delete using jQuery",
          "Add Datatables",
          "Adding Custom Labels",
          "Managing Database Changes",
          "Fix syntax errors",
          "Add To GitHub"
        ],
        "Website Authentication": [
          "Understanding Authentication",
          "Register for Auth0",
          "Testing Authentication",
          "Setup User Related Pages",
          "Finishing Touches",
          "Add To GitHub"
        ],
        "Complex Views, Actions, and Debugging Methods": [
          "Section Overview",
          "Understanding Foreign Keys and Data Contexts",
          "Understanding Complex Queries",
          "Understanding Select Lists",
          "Displaying Related Data",
          "Using Custom View Models",
          "Creating Custom Views",
          "Creating Custom Actions in Controllers",
          "Testing and Debugging",
          "Finishing Touches",
          "Add To GitHub",
          "Add Essential UI and Bug Fix",
          "Section Source Code"
        ],
        "BONUS Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A Reliable Internet Connection",
        "A desire to learn"
      ],
      "description": "Overview\nASP.NET Core MVC is a powerful, flexible framework for building modern web applications. This course teaches you how to use ASP.NET Core MVC to build cross-platform web applications that can run on any operating system, including Windows, Linux, and MacOS.\nYou will start by learning the fundamentals of ASP.NET Core MVC, including how to create and configure a new project, design the layout and structure of your application, and implement standard features such as authentication, authorization, and data validation.\nAs you progress through the course, you will learn how to use advanced features of ASP.NET Core MVC, such as dependency injection, middleware, and filters, to create more complex and scalable applications. You will also learn how to optimize your applications for performance and deployment.\nBy the end of this course, you will have a solid understanding of using ASP.NET Core MVC to build cross-platform web applications and be well-prepared to tackle real-world projects.\nWhether you are new to web development or have some experience, this course will provide a comprehensive overview of ASP.NET Core MVC and help you become proficient in its use.\nYou will learn how to:\nBuild an entirely data-driven web application.\nUse the dotnet command line interface and complete tasks like:\nScaffolding a database using Entity Framework Core\nGenerating Views and Controllers\nRunning and debugging an application.\nManage packages in a project.\nUnderstand how Models, Views, and Controllers combine to facilitate a web application\nUse and manipulate data models and database contexts.\nUnderstand how to add views and actions to a controller\nUse Bootstrap 5 to manipulate the web application's overall look and feel.\nUse GitHub for source control management.\nUse popular cross-platform development tools like:\nVisual Studio Code\nAzure Data Studio\nDocker\nAdd OpenID Connect authentication using Auth0\nContent and Overview\nTo take this course, you must have some knowledge of HTML, CSS, and Object Oriented Programming, if not with C#. Even if you have little exposure to the .NET development stack, this course is beginner-friendly and full of development tips.\nThis course has several hours of premium content but is smartly broken up to highlight related activities based on each module in the application being built. We will also look at troubleshooting and debugging errors as we go along, implementing best practices, writing efficient logic, and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course, and you will be challenged to be the best you can be.\nBy the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, including some files to make it easier for you to replicate the demonstrated code. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nClicking the Take This Course button could be the best step to increase your income and marketability quickly! Also, remember that if you think the course is not worth what you spent, you have a full 30 days to get a no questions asked refund!\n\n\nIt's time to take action!\nSee you in the course!",
      "target_audience": [
        "Beginner .NET Developers seeking to explore modern website development methods",
        "Intermediate .Net Developers seeking more answers"
      ]
    },
    {
      "title": "Gatsby.js 3 Tutorial and Projects Course",
      "url": "https://www.udemy.com/course/gatsby-tutorial-and-projects-course/",
      "bio": "Create Blazingly Fast Websites with latest version of Gatsby.js 3",
      "objectives": [
        "Learn Gatsby",
        "Build Awesome Projects",
        "Build Blazingly Fast Websites",
        "Become Better React Developer"
      ],
      "course_content": {
        "Gatsby Intro": [
          "Gatsby Intro",
          "Course Info",
          "Course Requirements"
        ],
        "Course Info": [
          "Latest Version Updates",
          "Video Blur Fix",
          "Course Review",
          "Visual Studio Code"
        ],
        "Gatsby Tutorial - SimplyRecipes Project": [
          "Intro",
          "Install gatsby-cli",
          "Setup New Project",
          "Project Structure",
          "First Page",
          "Error Page",
          "Nested Pages",
          "Links",
          "Navbar",
          "Layout Component",
          "CSS Info",
          "Inline CSS",
          "Global CSS",
          "CSS Naming Issues",
          "CSS Modules",
          "Styled-Components",
          "House Cleaning",
          "Styles",
          "Optional !!!",
          "Footer",
          "Error Page",
          "Contact Page",
          "Assets and Icons",
          "Navbar Setup",
          "Navbar Functionality",
          "Gatsby Image Info",
          "Sandbox Setup",
          "Install Plugin",
          "Static Image Setup",
          "Shared Props and Options",
          "Options Example",
          "All Layouts",
          "Height",
          "About Page",
          "Hero Page",
          "Gatsby and GraphQL Intro",
          "Gatsby DataLayer in a Nutshell",
          "GraphiQL Interface",
          "siteMetadata",
          "First Query",
          "Explorer",
          "Static Query vs Page Query",
          "useStaticQuery Hook - Code Exporter",
          "useStaticQuery, graphql - From Scratch",
          "Field Alias",
          "Query Keyword, Name and Gatsby Clean",
          "Page Query",
          "Install SOURCE-FILESYSTEM Plugin",
          "allFile - Field",
          "Query Arguments",
          "Static Path Fix",
          "file - Field",
          "sourceInstanceName - Argument",
          "Gallery Setup",
          "gatsbyImageData - Field",
          "Render Gallery",
          "getImage - Helper Function",
          "Local vs External Data",
          "Headless CMS",
          "Contentful Info",
          "Setup Contentful Account",
          "Content-Type",
          "Content",
          "Connect Gatsby - Contentful",
          "ENV Variables",
          "allContentfulRecipe - Field",
          "AllRecipes Component",
          "RecipesList Component",
          "Featured Recipes",
          "Utils Setup",
          "Helper Function",
          "TagsList",
          "Tags Page",
          "Recipe Template Page Setup",
          "Recipe Template Page Walkthrough",
          "Slugify",
          "Query Variables",
          "Recipe Template Query",
          "Recipe Template Return",
          "GATSBY-NODE.JS Setup",
          "Create Tag Template Pages Programmatically",
          "Tag Template Return",
          "Possible Bug Fix",
          "Fonts",
          "Contact Form",
          "FAVICON",
          "SEO - Setup",
          "SEO - Props",
          "SEO - Complete",
          "Netlify Info",
          "Netlify - Drag and Drop",
          "Netlify - Continuous Deployment",
          "Webhooks"
        ],
        "IMPORTANT UPDATE!!!!": [
          "IMPORTANT UPDATE!!!"
        ],
        "Portfolio Project": [
          "Intro",
          "Starter Files",
          "Install Starter",
          "Project Overview",
          "GATSBY-BROWSER",
          "Navbar",
          "Hero",
          "Services",
          "Important Update !!!",
          "Setup Strapi",
          "Content-Type",
          "Content",
          "Strapi Source Plugin Update !!!",
          "Connect Strapi - Gatsby",
          "Jobs Query",
          "Single Job",
          "Jobs Logic",
          "Sort Jobs",
          "Project Content-Type",
          "Project Content",
          "Strapi Source Plugin Update !!!",
          "Project Query",
          "Projects Component",
          "Single Project Component",
          "Projects Page",
          "Setup Project Pages Programmatically",
          "Project Template",
          "Strapi Source Plugin Update",
          "About Page - Setup",
          "About Page - Complete",
          "Error Page and Footer",
          "Contact Page",
          "Sidebar Setup",
          "Sidebar Logic",
          "Initial Deploy",
          "siteMetadata",
          "SEO Component",
          "Complete Project",
          "Source Code"
        ],
        "MDX Blog": [
          "Intro",
          "Starter Project",
          "Install",
          "Project Overview",
          "Plugins and main.css",
          "Navbar",
          "Sidebar",
          "Sidebar Toggle",
          "Hero",
          "Footer",
          "Error Page",
          "Newsletter Info",
          "Collect Form Values in Netlify",
          "MDX Setup",
          "MDX Extension",
          "Basic Markdown",
          "Basic Styling",
          "First React Component",
          "Nice Text",
          "Complete Components Info",
          "Counter and Like Button",
          "Posts Intro",
          "Single Post Setup",
          "Frontmatter",
          "Home Query",
          "Posts Component",
          "Single Post Component",
          "Posts Page",
          "Create Post Pages Programmatically",
          "Single Post Query",
          "Post Template Complete",
          "Categories Setup",
          "Categories Query",
          "Categories JSX",
          "Banner About",
          "Banner Recent",
          "Banner Categories",
          "Navbar Categories",
          "Inline Images with Remark Images Plugin",
          "Inline Images with GatsbyImage",
          "Regular Video",
          "External Video",
          "MDX Wrapper Intro",
          "Root MDX",
          "First MDX Example",
          "MDX - props / children",
          "MDX - Component Example",
          "MDX - H2",
          "MDX - H4",
          "Inline Code",
          "MDX - Blockquote",
          "Prism Setup",
          "Prism Config",
          "My Example",
          "Finished Project"
        ],
        "Design Project with Airtable": [
          "Intro",
          "Starter Project",
          "Bootstrap Starter",
          "Starter Info",
          "Global Styles with Styled-Components",
          "Root Wrapper",
          "Hero",
          "Navbar",
          "About and Title Components",
          "Airtable Info",
          "Airtable Setup",
          "First Table",
          "API Docs and Keys",
          "API KEYS",
          "Connect Airtable and Gatsby",
          "Latest Project Query",
          "Projects Component",
          "Customers Table",
          "Customers Query",
          "Customers Slider Info",
          "Survey Setup",
          "Survey Fetch Items",
          "Survey - Display Items",
          "Survey - Update Items",
          "Alternative Loading Setup",
          "All Projects Query",
          "Search Buttons - Setup",
          "Search Buttons - Complete",
          "Algolia - Intro",
          "Algolia - ENV VARS",
          "Algolia - Account Setup",
          "Algolia - Plugin Setup",
          "Algolia - Query Setup",
          "Algolia - Basic Front-End",
          "Algolia - SearchBox Component",
          "Algolia - New Hits",
          "Context API",
          "Nested Links Info (sublinks)",
          "Sidebar",
          "Payments Page",
          "Toggle Sidebar",
          "Navbar - Sublinks",
          "Tile Layout",
          "Source Code"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "Basic Knowledge of React"
      ],
      "description": "Gatsby is a React-based, GraphQL powered static site generator. It combines together the best parts of React, webpack, react-router, GraphQL, and other front end tools to provide excellent developer experience. Gatsby is far more than typical static site generator though. You can think of it more like a modern front-end  framework.\nIt uses powerful pre-configuration to build a website that uses only static files for incredibly fast page loads, service workers, code splitting, server side rendering, smart image loading, asset optimization, and data prefetching.\nThe course will consist of two parts. In the first part, the tutorial part  we will cover Gatsby basics, and in the second part, projects part, we will build interesting projects using Gatsby.\nAll project intro videos are available for preview.\nWith the new Gatsby create blazing fast web experiences that integrate your favorite services and content. Build e-commerce sites, landing pages, blogs and more in minutes.\nGo from idea to production in literal minutes with a 10x developer experience. Gatsby is built on popular, proven tech like React and GraphQL, has loads of tutorials and starter templates, and over 2500 plugins that can help integrate all of your favorite web services.\nGatsby loads only critical 1 parts of the page, exactly when the visitor needs it, and not a second sooner. Once loaded, Gatsby prefetches resources 2 for other pages so that clicking on the site feels buttery smooth and responsive. Everything is statically generated at runtime - so your site loads as fast as possible.",
      "target_audience": [
        "Everyone Interested in Building Blazingly Fast Static Websites With Gatsby"
      ]
    },
    {
      "title": "The Complete ASP.NET MVC 5 Course",
      "url": "https://www.udemy.com/course/the-complete-aspnet-mvc-5-course/",
      "bio": "Learn to build fast and secure web applications with ASP.NET MVC 5 - The most popular course with 40,000+ students!",
      "objectives": [
        "Understand the MVC architectural pattern",
        "Implement CRUD operations",
        "Build forms with server-side and client-side validation",
        "Build RESTful services using ASP.NET Web API",
        "Use powerful jQuery plug-ins",
        "Implement authentication and authorization using ASP.NET Web API",
        "Use Entity Framework to query or update data",
        "Understand and apply security best practices",
        "Build and deploy applications",
        "Create and customize build configurations",
        "Manage client / server dependencies",
        "Test APIs using PostMan",
        "Use AutoMapper"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "MVC Architectural Pattern",
          "Setting Up the Development Environment",
          "Your First ASP.NET MVC App",
          "MVC in Action",
          "Adding a Theme",
          "Quiz",
          "Course Layout",
          "Asking Questions"
        ],
        "ASP.NET MVC Fundamentals": [
          "Introduction",
          "Action Results",
          "Action Parameters",
          "Convention-based Routing",
          "Attribute Routing",
          "Passing Data to Views",
          "View Models",
          "Razor Syntax",
          "Partial Views",
          "Cheat Sheet",
          "Exercise",
          "Solution",
          "Summary"
        ],
        "Working with Data": [
          "Introduction",
          "Entity Framework",
          "Database-first vs Code-first",
          "Code-first Migrations",
          "Changing the Model",
          "Seeding the Database",
          "Overriding Conventions",
          "Querying Objects",
          "Eager Loading",
          "Shortcut to Package Manager Console",
          "Cheat Sheet",
          "Exercise 1: Add membership type to list of customers",
          "Exercise 2: Add birthdate to customer",
          "Exercise 3: Display the list of movies and their details",
          "Summary"
        ],
        "Building Forms": [
          "Introduction",
          "The Markup",
          "Labels",
          "Drop-down Lists",
          "Model Binding",
          "Saving Data",
          "Edit Form",
          "Updating Data",
          "Cheat Sheet",
          "Exercise",
          "Troubleshooting Entity Validation Errors",
          "Summary"
        ],
        "Implementing Validation": [
          "Introduction",
          "Adding Validation",
          "Styling Validation Errors",
          "Data Annotations",
          "Custom Validation",
          "Refactoring Magic Numbers",
          "Validation Summary",
          "Client-side Validation",
          "Anti-forgery Tokens",
          "Cheat Sheet",
          "Exercise",
          "Code Review",
          "Summary"
        ],
        "Building RESTful Services with ASP.NET Web API": [
          "Introduction",
          "What is a Web API?",
          "RESTful Convention",
          "Building an API",
          "Testing an API",
          "Data Transfer Objects",
          "Auto Mapper",
          "Using Camel Notation",
          "IHttpActionResult",
          "Cheat Sheet",
          "Exercise",
          "Summary"
        ],
        "Client-side Development": [
          "Introduction",
          "Calling an API Using jQuery",
          "Bootbox Plug-in",
          "Optimizing jQuery Code",
          "DataTables Plug-in",
          "DataTables with Ajax Source",
          "Returning Hierarchical Data",
          "DataTables: Removing Records",
          "DataTables: Discussion Points",
          "Single Page Applications (SPAs)",
          "Cheat Sheet",
          "Exercise",
          "Summary"
        ],
        "Authentication and Authorization": [
          "Introduction",
          "The Problem",
          "Authentication Options",
          "ASP.NET Identity",
          "Restricting Access",
          "Seeding Users and Roles",
          "Working with Roles",
          "Adding Profile Data",
          "OAuth",
          "Social Logins",
          "Cheat Sheet",
          "Exercise",
          "Summary"
        ],
        "Performance Optimization": [
          "Introduction",
          "Overview",
          "Data Tier",
          "Glimpse",
          "Output Cache",
          "Data Cache",
          "Async",
          "Release Builds",
          "Disabling Session",
          "Client Tier",
          "Chrome Developer Tools Tip",
          "Cheat Sheet",
          "Summary"
        ],
        "Building a Feature End-to-End Systematically": [
          "Introduction",
          "Understanding the Problem",
          "Domain Modelling",
          "Building the Simplest API",
          "Adding the Details",
          "Edge Cases",
          "Building the Front-end",
          "Adding Auto-completion",
          "Updating the DOM",
          "Improving the Look and Feel",
          "Filtering Records",
          "Submitting the Form",
          "Displaying Toast Notifications",
          "Implementing Client-side Validation",
          "Code Review",
          "Summary"
        ]
      },
      "requirements": [
        "C# (at a minimum lambda expressions, LINQ)",
        "Basic familiarity with web development (HTML, CSS, JavaScript, jQuery)"
      ],
      "description": "With over 40,000 happy students and 12,000+ positive reviews, this course is Udemy's most popular course for learning ASP.NET MVC!\n\n\n\nASP.NET MVC is a server-side web framework for building dynamic, data-driven web applications. Since its first release in 2009, it has gained a lot of popularity amongst developers using Microsoft technologies. If you want to get employed as a web developer at a company that utilizes Microsoft technologies, you need to master ASP.NET MVC.\n\n\nIn this course, Mosh, author of several best-selling courses on Udemy, takes you on a fun, hands-on and pragmatic journey to master ASP.NET MVC 5.\n\n\nIn 7.5 hours of high-quality content (equivalent to a 500-page book), you'll learn how to build and deploy fast and secure web applications with ASP.NET MVC 5.\nBy the end of watching this course, you'll be able to:\nImplement CRUD operations\nBuild forms with validation\nBuild RESTful services using ASP.NET Web API\nUse Entity Framework code-first workflow to build a model\nImplement security, authentication and authorization using ASP.NET Identity\nUse powerful jQuery plugins\nOptimize application's performance\nBuild and deploy your applications\nAnd much more...\n\n\n\n\nYou'll start building a real-world video rental application within minutes. Every section includes a few bite-sized videos, and concludes with one or more coding exercises to help you master what you learn in that section. Finally, in the last section, you'll learn how to\nDeploy the application\nDeploy the database\nCreate custom build configurations (development, testing, staging, etc)\nStore application settings in web.config and override them for different environments\nSecure application settings and connection strings\nAnd more...\n\n\nWhether you're new to ASP.NET MVC or have some experience but are looking for a course to fill in the gaps, you'll love this course. On top of all the core features of ASP.NET MVC, Mosh teaches you a systematic way to build a feature end-to-end. And more importantly, he includes you as part of building a sophisticated feature end-to-end. So, he builds some parts and delegates the other parts to you.\n\n\nIf you've taken any of Mosh's courses before, you know what you get. He is very passionate, clear and concise in his teaching. Every section and every lecture has been perfectly thought through to lead you on a step-by-step journey from zero to hero with no fluff whatsoever. If you're looking for 10+ hours of wasted time on the content you don't need and a rambling instructor, there are other courses you can enrol in.\n\n\nPREREQUISITES\nIn order to take this course, you should have at least 3 months experience programming in C#. Also, any familiarity with Entity Framework will be helpful but not required.\n\nIf you need to strengthen your C# skills or learn Entity Framework in depth, you can watch Mosh's related courses:\nC# Basics for Beginners (essential knowledge)\nC# Intermediate: Classes, interfaces and Object-oriented (essential knowledge)\nC# Advanced (essential knowledge)\nEntity Framework in Depth (nice to have)\n\n\nSo, if you watch all the lectures and do all the exercises, by the end of this course, you'll have the necessary skills to build real-world applications with ASP.NET MVC 5, or all your money back (within 30 days of taking the course).\n\n\nSo, if you're looking for an ASP.NET MVC course with\n\nA passionate coder and instructor who knows his craft\nPerfect structure\nBalanced mix of theory and practice\nClear, concise and bite-sized videos\nLots of real-world examples and coding exercises\nDiscussion of best practices\nWorld-class audio / video production\n\n\nDon't look further. Enroll in the course now and learn to build and deploy fast and secure web applications with ASP.NET MVC 5.\n\n\nFREQUENTLY ASKED QUESTIONS\n\n\n1- Does this course cover ASP.NET Core 1.0?\nNo! Once you master ASP.NET MVC 5, you can quickly get up to speed with ASP.NET Core. Mosh has a follow up course on Udemy called \"Build a Real-world App with ASP.NET Core and Angular\". In this course, you'll get up to speed with ASP.NET Core in the context of building a real app from A to Z.\n\n\n2- Why should I pay for this course when there are lots of free tutorials available?\nFree tutorials and YouTube videos are free for a reason. They introduce you to a few concepts here and there, but soon you'll find yourself jumping from one tutorial to another to fill the missing gaps. By taking a perfectly-structured course, you'll be confident that you're in good hands, right from the beginning all the way through to the very end. You pay for saving your precious time: the time that you can spend on the things you love.\nPlus, many of these free tutorials, including tutorials published by Microsoft on the official ASP.NET website, teach you poor practices. Throughout this course, Mosh points out some of these poor practices and explains in technical terms why you should avoid them.\n\n\nWHAT OTHER STUDENTS WHO HAVE TAKEN THIS COURSE SAY\n\n\n\"The is course is very much worth your time and money. Mosh did an outstanding job explaining each aspect of MVC 5 as well as introducing and using other technologies such as Web API. I've been working with MVC since it's release but felt I needed a refresher course and this was excellent. I would also recommend it to developers just getting into MVC as well because Mosh does a great job of explaining the concepts behind what you're learning. I really enjoyed it and highly recommend it.\" -Scott Smith\n\n\n\n\"Course teaches exactly what the title promises to teach. Quality of production, content, and lectures are excellent! Explanations of the how and why are also a nice touch!\" -Pierre Gadea\n\n\n\"Mosh never disappoints. Clear explanations. Exercises that will test you knowledge. Great instruction as always. I also love that he includes shortcuts and best practices. Worth the time and money!\" -Lara Caves\n\n\n\"Amazing course from Mosh! After I finished the C# series, I moved directly to this course and learn so much and even developed a successful web app in my internship! Thanks Mosh for a great course!!\" -Menny Atia\n\n\n\"I've been into web development for more than 15 years, but until recently I was totally new to ASP.NET MVC. Before taking this course I tried other courses, but these were either too complicated for a beginner or didn't cover all the necessery informations needed to get started. This is an excellent course to begin with ASP.NET MVC that covers everything you need to create a real world project. The prerequisites are a good understaning of C# (OOP, Lambdas, LINQ...) , Javascript and JQuery\" -Marko Pavic\n\n\n\"Professionally structured, carefully planned course. Passionate, engaging instructor with great communication skills. Best course I've ever had on Udemy so far. I would love to take the follow-up course on architecture and testing mentioned in the final video.\" -Istvan Voros\n\n\n\"One of the best courses i have ever taken,Recommend for every C# developer through his all the courses in Udemy. They are eye-openers and it will change the way you think about Programming.After taking his courses ,with in a span of one month i have a cracked a interview in one of the Big 4 with 70% hike.\" -Rama Reddy\n\n\n\n\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you feel like this course is not for you, ask for a full refund within 30 days. All your money back, no questions asked.\n\n\n\n\nABOUT YOUR INSTRUCTOR\nMosh (Moshfegh) Hamedani is a software engineer with 17 years of professional experience. He is the author of several best selling Udemy courses with more than 120,000 students in 192 countries. He has a Master of Science in Network Systems and Bachelor of Science in Software Engineering. His students describe him as passionate, pragmatic and motivational in his teaching.\n\n\nDo you want to learn how to build and deploy fast and secure web application with ASP.NET MVC 5?\nIf you enroll in the course now, you'll start building your first ASP.NET MVC app within a few minutes. Join the other 40,000+ students who have taken this course now and get started.",
      "target_audience": [
        "Developers with no knowledge of ASP.NET MVC 5 who want to build web apps with this framework",
        "Developers with some experience in ASP.NET MVC 5 who are looking for a comprehensive course to fill the gaps"
      ]
    },
    {
      "title": "PHP MVC Framework CodeIgniter Tutorial for Beginners Project",
      "url": "https://www.udemy.com/course/php-mvc-framework-codeigniter-tutorial-for-beginners-project/",
      "bio": "Learn how to use the Most Popular PHP MVC Framework and create the best applications, easily, securely and fast.",
      "objectives": [
        "Learn to use CodeIgniter",
        "Learn to build Web Applications",
        "Have a new PHP Skill that would increase income"
      ],
      "course_content": {
        "CodeIgniter Basics": [
          "Intro to the Course",
          "Exercise Files",
          "What is code igniter and how it works?",
          "Installing CodeIgniter",
          "Get Into the file structure",
          "Using methods in views",
          "Creating custom controllers",
          "Creating a model and a database",
          "Creating the users controller and creating a user model method",
          "Auto-loading Model",
          "Processing a result from a model in a controller",
          "Transferring data to views"
        ],
        "CRUD with CodeIgniter": [
          "Intro to the CRUD",
          "Helper function examples",
          "Selecting Data in our DB table based on parameters",
          "Conditions in our Queries",
          "Inserting Data",
          "Updating Data",
          "Deleting Data"
        ],
        "Project # 1 : Login Application": [
          "Intro to the Login APP",
          "Downloading Assets",
          "Creating Main Template",
          "Creating main file structure and loading main content",
          "Loading sidebar view",
          "Starting our CodeIgniter Form",
          "Creating the username input and attributes in the CodeIgniter way :)",
          "Creating the password and submit inputs",
          "Form processing methods"
        ],
        "Project # 1 : Login Application - Form Validation with CodeIgniter": [
          "Intro to Form Validation",
          "Form Validation Part 1",
          "Form Validation Part 2",
          "Form Validation Part 3 and using sessions",
          "Form Validation Part 4",
          "Setting up the else condition for validations",
          "Creating login user method in the user moded",
          "Giving our user some sessions with CodeIgniter",
          "Setting up notifications",
          "Displaying form based on conditions",
          "Creating the logout form",
          "Creating the logout method",
          "Creating an admin view",
          "Wrapping this up"
        ],
        "EXTRA LECTURES - Project #1 = Extended": [
          "Intro",
          "Modifying index.php"
        ],
        "Project #1: User Registration": [
          "Creating more users columns",
          "Creating register view",
          "Creating register Method and Challenge",
          "Validations and Solution",
          "Navigation and Links",
          "Testing and setting up create user method",
          "Creating the user model code",
          "Testing and Creating User",
          "Password Encription",
          "Updating Login Code with password encryption"
        ],
        "Project #1: Projects": [
          "Intro",
          "Projects Home Page",
          "Creating the projects table",
          "Access to projects page code",
          "Projects model setup",
          "Displaying projects - bootstrapping part 1",
          "Displaying projects - bootstrapping part 2",
          "Displaying projects - bootstrapping part 3",
          "Displaying projects - bootstrapping part 4",
          "Displaying specific projects part #1",
          "Displaying specific projects part #2",
          "Displaying specific projects part #3",
          "Displaying specific projects part #4",
          "Creating the create method part 1",
          "Creating the create method part 2",
          "Creating the create project method in models and view",
          "Creating Projects",
          "Creating our projects controller edit method",
          "Creating the edit project method in the model",
          "Creating the get projects method in the model",
          "Editing projects",
          "Deleting projects",
          "Notifications and custom delete link",
          "Displaying projects part 1",
          "Displaying projects part 2",
          "Fixing Home page and a little bootstraping"
        ],
        "Project #1: Tasks": [
          "Intro to Tasks Section",
          "Creating the tasks table in the database, plus tasks controller and model",
          "Coding the tasks display method",
          "Displaying individual tasks",
          "Create task method 1",
          "Create task method 2",
          "Create task due date and CI URI class",
          "Task display links",
          "Edit task method in the controller",
          "Setting up important needed methods in the task model",
          "Display data in the edit task view",
          "Displaying date and BUG Fixing CHALLENGE",
          "Solution to BUG and more fixes",
          "Editing Tasks BUG and Solution",
          "Edit Task View Explanation Lecture"
        ],
        "Joining Tables": [
          "Intro to joining tables",
          "Joining table code part 1",
          "Joining table code part 2",
          "Displaying Joined Tables"
        ],
        "Tasks Display View Page": [
          "Intro",
          "Deleting tasks",
          "Redirecting after deletion",
          "Deleting tasks with projects"
        ]
      },
      "requirements": [
        "Basic OOP PHP"
      ],
      "description": "UPDATED as of March 2016\nBIGGEST CodeIgniter Course in UDEMY!\nHands on Real Life Project inside!\n\n\nDo you want to really master PHP dynamic applications and website development?\nThen this course will speed up the process by allowing you to learn how to use the most popular PHP framework in the planet, \"CodeIgniter\".\nCoding in PHP or any other language can be time consuming, especially for common tasks. Using a framework is the best way to apply common tasks, like:\nSecurity\nForm validation\nDatabase configurations\nDatabase queries (CRUD)\nIf you want to be a head of the competition and get paid more, then using a FRAMEWORK is the way to do.\nHigh paying jobs require knowledge of frameworks, since speed and accuracy are crucial for the development team and company.\nHaving knowledge of using frameworks will allow you to find a hight paying job, or find a job easier than not having the skill at all.\nMy Personal Experience\nMy first job interview required a codeigniter knowledge and because I did not have the skill, I did not get the job even though I knew how to code in PHP.\nThat jobs started at 75K per year in the US and that could've propelled big time in my career, it wasn't until after I acquired this skill that jobs were pouring in from everywhere.\nI created this course with the intention to provide you with the knowledge you need to use codeigniter to develop applications fast and efficiently. I also create this course to help you provide a great skill that will propel you in your web development career.\nWhy Codeigniter?\nBecause is the most popular PHP framework and is on demand for jobs and freelance projects.",
      "target_audience": [
        "This is meant for students who want to developer PHP dynamic applications and websites faster",
        "This is meant for students who have basic Knowledge of OOP in PHP",
        "This is meant for students who want to become better at PHP",
        "This is meant for students who want to improve their careers or get a better one"
      ]
    },
    {
      "title": "JavaScript Beginner Bootcamp (2025)",
      "url": "https://www.udemy.com/course/javascript-the-basics-for-beginners/",
      "bio": "JavaScript for Beginners: Projects based learning, whiteboard animations, coding in the browser and quizzes.",
      "objectives": [
        "Learn basics of JavaScript",
        "Create Interactive Webpage and deploy to the web",
        "Build projects as you learn concepts to get a taste of building applications on a small scale",
        "Become interview ready with whiteboard algorithm challenges",
        "Build a Portfolio Page with HTML & CSS",
        "Visually understand the JavaScript Language",
        "Look under the hood to understand how JavaScript works"
      ],
      "course_content": {},
      "requirements": [
        "Google Chrome Browser",
        "No prior coding experience needed"
      ],
      "description": "This isn't the only JavaScript course you should ever take...but it should be your first!\nJavaScript the Basics is your one stop course to enter into the language of JavaScript. We are going to start from scratch and build up our understanding of the world's most popular programming language together.\nView JavaScript in action with whiteboard videos optimized for viewing on your smartphone. This is truly a course that you can engage with no matter where you are. Take your JavaScript eduction on the go! With whiteboard videos you get to visualize what JavaScript does under the hood.\n\nYou can practice JavaScript in your web browser! Take advantage of Google Chrome developer tools to put the JavaScript you have learned during our whiteboard lesson into practice with further examples and challenges. This is our JavaScript playground.\n\nThere will be lots of quizzes on the JavaScript syntax we have just covered. The goal of this course is to move slow and allow these concepts and syntax to sink in through repetition.\nThis course is also full of mini-projects that allow you to apply the JavaScript you are learning to actually building something that you can use. We focus on small to mid-sized projects aimed at the skill level of a beginner to intermediate JavaScript student.\n\nLearning JavaScript is like learning a language. This course won't make a false promise of saying you will master JavaScript overnight. However, this course will immerse you into the world's most popular programming language.\nJavaScript Syntax\nJavaScript Building Blocks\nBuild a Kelvin to Fahrenheit Converter\nBuild a Cat Age estimator\nJavaScript Best Practices\nJavaScript Objects\nJavaScript Arrays\nBuild a Random Insult Generator\nJavaScript Functions\nBuild a Calorie Tracker\nBuild a Rock, Paper, Scissors game\nJavaScript Conditionals\nBuild a Magic 8 Ball\nJavaScript Regular Expressions\nJavaScript Functional Programming\nJavaScript Algorithms\nJavaScript ES6 Syntax\nBuild a Portfolio Page with HTML & CSS\nPractice for Real World JavaScript Whiteboard Interview Questions\nMake an Interactive Webpage: TODO List with Local Storage\nMake an Interactive Webpage: Matching Game\nMake an Interactive Webpage: Magic 8 Ball\nMake an Interactive Webpage: Dog Therapy App\nYou'll finish this course with an understanding of JavaScript that will let you take a deeper dive into the language and possibly launch you into a new career as a JavaScript web developer.\nLearning a new language can be difficult and even feel intimidating. JavaScript the Basics makes the the learning process feel accessible and welcoming!\nThere are a lot of JavaScript courses out there in which you can make some pretty great projects. But unless you know JavaScript you are just copying and pasting. This course won't offer you empty promises like moving from \"zero to hero\" but it will help you to take the first steps in the right direction.\n\nThis isn't the only JavaScript Course you should ever take. But it should be your first!\nThis course expands monthly! Get it now and check back often for updates!",
      "target_audience": [
        "Those who are JavaScript Newbies",
        "Those with no previous coding experience",
        "Those who want to learn on the go by watching whiteboard videos optimized for smartphones and tablets",
        "Those who want a thorough step by step introduction to the JavaScript language",
        "Those coders who want a visual and hands on playground environment to reinforce what they have learned",
        "Those who want to learn how to build their first JavaScript Application",
        "Those who want to learn how to build a portfolio page with HTML & CSS"
      ]
    },
    {
      "title": "Servlets and JSPs Tutorial: Learn Web Applications With Java",
      "url": "https://www.udemy.com/course/javawebtut/",
      "bio": "Learn how to create dynamic websites using the Java programming language with this java web application tutorial",
      "objectives": [
        "Understand the core technologies of modern Java web programming",
        "Know how to develop and deploy your own websites using Java"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Setting Up Your System",
          "A \"Hello World\" Servlet",
          "A \"Hello World\" JSP (Java Server Page)",
          "Deployment Descriptors: the Web.xml File",
          "Deploying Your Application to a Local Server",
          "Important Note ...",
          "Deploying Your Application to the Internet -- For Free"
        ],
        "Nuts and Bolts": [
          "Importing Java Classes Into JSPs",
          "Getting URL Parameters",
          "Scripting HTML",
          "Including Files In Other Files",
          "Forwarding and Redirecting",
          "The Declaration Tag",
          "JSP Tags Summary",
          "Model 1 vs. Model 2 Architecture",
          "Using External APIs in Web Applications",
          "The Servlet Lifecycle"
        ],
        "Beans and Forms": [
          "JSP Beans",
          "Beans and Scope",
          "Setting Bean Properties Using Parameters",
          "Forms",
          "HTTP Posts",
          "Using Beans to Store Form Data",
          "Adding Validation to Beans",
          "Self-Validating Forms",
          "Validating Forms Using MVC Architecture"
        ],
        "Some Useful Objects": [
          "The Session Object",
          "URL Rewriting: Supporting Sessions Without Cookies",
          "The Servlet Context Object",
          "Getting Initialisation Parameters from web.xml",
          "Scoped Objects Review",
          "Cookies"
        ],
        "Databases": [
          "Connecting to a Database",
          "Setting Up a JNDI Data Source",
          "Querying Databases",
          "Inserting Data Into Databases"
        ],
        "Sending Emails": [
          "Sending Emails: Prerequisites",
          "Sending Emails with the Mail API"
        ],
        "Simplify Your Code With JSTL": [
          "Beginning JSTL: Hello World JSTL",
          "Accessing Bean Values in JSTL",
          "Getting URL Parameters in JSTL",
          "The JSTL \"if\" Statement",
          "The Choose Tag in JSTL",
          "The foreach loop in JSTL",
          "Referencing Java Objects in JSTL",
          "JSTL Implicit Objects",
          "Using Maps in EL",
          "Outputting Variables: The c:out Tag vs. Using EL Directly",
          "forEach: Iterating Through Lists",
          "Using External Files: Graphics, CSS, etc",
          "Reusable Fragments Using JSTL c:import",
          "SQL Queries with JSTL",
          "Setting Variables in JSTL",
          "Expressions in EL",
          "Creating URLs With JSTL",
          "Wildcards and Getting a Single Row in JSTL",
          "JSTL Functions",
          "SQL Updates and Transactions in JSTL",
          "Formatting Using JSTL",
          "Custom Tags"
        ],
        "Source Code": [
          "Source Code"
        ],
        "Where Now?": [
          "Some Final Words ...."
        ],
        "Extra!": [
          "Uploading Files: Allowing the User to Upload Images and Other Stuff"
        ]
      },
      "requirements": [
        "Basic Java knowledge",
        "Ideally basic HTML and SQL knowledge",
        "Basic computer and Internet skills"
      ],
      "description": "In this Java web application tutorial I'll show you how to create dynamic websites using the core technologies of Java web programming. If you want to create your own interactive websites, if you know some Java and you want to take your skills to the next level, or if you want hot skills for the job marketplace, this Java web application tutorial course is for you.\nIn this Java web application tutorial course you'll learn how to:\nLeverage the power of Java to create dynamic websites\nDeploy your applications for free on the Internet\nUse and understand core server-side Java web technologies\nI'll show you how to take your basic Java knowledge and use it to create websites using the same technologies (servlets, JSPs and JSTL) that everyone from self-employed web developers to huge corporations use to create modern interactive web sites.",
      "target_audience": [
        "Anyone who wants to create websites that interact with databases",
        "Java programmers who want to learn web programming skills",
        "Java beginners who want to learn more Java and enjoy a challenge"
      ]
    },
    {
      "title": "[NEW] Building Microservices with Spring Boot & Spring Cloud",
      "url": "https://www.udemy.com/course/building-microservices-with-spring-boot-and-spring-cloud/",
      "bio": "Build Microservices using Java, REST API, Spring Boot 3, Spring Cloud, React JS, Kafka, RabbitMQ, Docker & IntelliJ IDEA",
      "objectives": [
        "Learn REST API Fundamentals - REST API, Resource, Sub-resource, URI, HTTP methods, HTTP status codes, Design REST APIs, Best Practices, and REST API Differences",
        "Build REST API's using Spring Boot",
        "Build CRUD REST API's using Spring Boot, Spring Data JPA and MySQL Database",
        "Using DTO (Data Transfer Object) Pattern in Spring Boot App",
        "Using Mapping Libraries - ModelMapper and MapStruct",
        "Exception Handling in Spring Boot App",
        "Spring Boot REST API Validation",
        "Spring Boot Actuator - Production-Ready Features",
        "Building Spring Boot Microservices in IntelliJ IDEA",
        "Microservices Communication using RestTemplate, WebClient and Cloud OpenFeign",
        "Centralized Configurations using Spring Cloud Config Server",
        "Create Service Registry and Discovery using Spring Cloud Netflix Eureka",
        "Create API Gateway using Spring Cloud Gateway",
        "Load balancing with Eureka server and Open Feign using Spring Cloud LoadBalancer",
        "Auto Refresh Config Changes using Spring Cloud Bus",
        "Distributed Tracing with Spring Cloud Sleuth and Zipkin",
        "Resilience4J: Circuit Breaker, Retry and RateLimiter Patterns",
        "How to Add Step by Step New Microservice to Existing Project",
        "Create React Frontend Microservice and Integrate with Backend Microservices",
        "Dockering Spring Boot Application Step by Step",
        "Dockering Spring Boot MySQL CRUD Application Step by Step",
        "Docker Compose for Dockering Spring Boot Application Step by Step",
        "Learn How to Use Apache Kafka in the Spring Boot App",
        "Spring Boot + Apache Kafka Real-World Wikimedia Project",
        "Event-Driven Microservices using Spring boot and Kafka",
        "Learn How to Use RabbitMQ in the Spring Boot App",
        "Event-Driven Microservices using Spring boot and RabbitMQ",
        "REST API Documentation using SpringDoc OpenAPI (Swagger) Library",
        "Migrate Existing Microservices Project into Latest Version",
        "Build Spring Boot React JS Full-Stack CRUD Web Application",
        "Learn Functional Programming in Java"
      ],
      "course_content": {},
      "requirements": [
        "Java",
        "Familiar with IntelliJ IDEA",
        "No Spring Boot REST API experience needed, You will learn building Spring Boot REST APIs from the scratch",
        "No Microservices experience needed. You will learn everything you need to know about Microservices",
        "No Docker experience needed. You will learn Docker essentials for deployment",
        "No RabbitMQ and Kafka experience needed. You will learn RabbitMQ and Kafka essentials for building event-driven microservices"
      ],
      "description": "Disclaimer:\n\"This course requires you to download Docker Desktop from the official Docker website. If you are a Udemy Business user, please check with your employer before downloading software.\"\n\n\nIn this course, you will learn to build Microservices using Java, Spring Boot, Spring Cloud, React, Kafka, RabbitMQ, Docker, and REST API (REST Web Services).\n\n\nImportant Note: This course supports the latest Spring Boot 3 and Spring Cloud 2022.0.0.\n\n\nIn this course, we will follow the real-time industry-standard project development approach.\nThis course covers Spring Boot REST API development from scratch.\nThis course covers the REST API fundamentals from scratch.\n\n\nMicroservices:\nA Microservice is a service built around a specific business capability that can be independently deployed. So, to build large enterprise applications, we can identify the sub-domains of our main business domain and build each sub-domain as a MicroService using Domain-Driven Design (DDD) techniques. But in the end, we need to make all these microservices work together to serve the end user as if it were a single application.\n\n\nWhy are Spring Boot and Spring Cloud good choices for MicroServices?\nSpring Boot is the most popular and widely used Java framework for building Microservices. These days, many organizations prefer to deploy their applications in a Cloud environment instead of taking on the headaches of maintaining a data center themselves. However, we need to take good care of the various aspects of making our applications Cloud-Native. There comes the beauty of Spring Cloud.\nSpring Cloud is essentially an implementation of various design patterns for building Cloud-Native applications. Instead of reinventing the wheel, we can simply take advantage of various Spring Cloud modules and focus on our main business problem rather than worrying about infrastructural concerns.\nWhat you'll learn\nBuild RESTful web services using Spring Boot - Learn Important Spring MVC Annotations.\nBuild CRUD REST APIs using Spring Boot, Spring Data JPA, and MySQL Database.\nBuilding Spring Boot Microservices in IntelliJ IDEA\nMicroservices Communication using RestTemplate, WebClient, and Spring Cloud OpenFeign\nCreate Service Registry and Discovery using Spring Cloud Netflix Eureka\nLoad balancing with Eureka server and Open Feign using Spring Cloud LoadBalancer\nCreate an API Gateway using Spring Cloud Gateway\nCentralized Configurations using Spring Cloud Config Server\nAuto Refresh Config Changes using Spring Cloud Bus\nDistributed Tracing with Spring Cloud Sleuth and Zipkin\nResilience4J: Circuit Breaker, Retry, and RateLimiter Patterns\nAdding a Step-by-Step New Microservice to an Existing Project\nCreate React Frontend Microservice and Integrate with Backend Microservices\nLearn How to Migrate Existing Projects to the Latest Version\nLearn How to Generate REST API Documentation\nDockering Spring Boot Application Step-by-Step\nDockering Spring Boot MySQL CRUD Application Step-by-Step\nDocker Compose for Dockerizing Spring Boot MySQL CRUD Application Step-by-Step\nEvent-driven Microservices using Spring Boot and Kafka\nLearn how to use RabbitMQ in the Spring Boot app.\nLearn how to use Kafka in a Spring Boot app.\nKafka Spring Boot - Real-World Wikimedia Project Development\nEvent-driven Microservices using Spring Boot and RabbitMQ\nBuild a Spring Boot React JS Full-Stack CRUD Web Application\nLearn Functional Programming in Java\n\n\nTools and technologies used:\n1. Java 17+\n2. Spring Boot\n3. Spring Cloud\n4. Microservices\n5. React\n6. Resilience4J framework\n7. Maven\n8. IntelliJ IDEA\n9. MySQL database\n10. Postman\n11. Kafka\n12. RabbitMQ\n13. Docker\n\n\nSample amazing feedback from students on this course:\nFrancis Dahryl N:\n\" One of the best learning videos. Ramesh, the instructor, will guide every student until the end.\"\nJuan Paulo L:\n\"Amazing course, well structured, well documented, resourceful, if you really want to learn about microservices, spring boot and spring cloud you have to take this course now!\"\nTirtha S:\n\"One of the best course for Microservices. Extraordinary explanations to the point. Thank you for providing us such a great course and helping us to gather the knowledge which we are required to know about microservices architecture. You are the best and Thank you once again.\"\nLakshman M:\n\"I always admire you sir. You are an Inspiration & Guide to many Java Developers. Keep Doing More Udemy Courses Sir. Thank you\"\nFurkan P:\n\"This course teaches everything you need to start with microservices. You need a Java/Spring Boot background to follow up well! Great one!\"\nHarsh S:\n\"it is very good course if you want to get your hand dirty in the spring boot microservices\"\nVivek Yuvraj Pawar:\n\"In this course the explanation is above my expectations. in this course all concepts are deeply explained\"\nSagar Talagatti:\n\"Instructor explains the concepts very well and demonstrates with appropriate examples. Thank you for such a good course.\"\nds r:\n\"I have no words to describe how amazing this course is. Ramesh has explained everything in such an easy to understand manner. This course covers tremendous amount of great content at one single place. After building the Restful APIs, CRUD operations, building different microservices, spring cloud features etc., he included a step to create docker file and run everything in container. Also, two other projects about Spring Kafka and RabbitMQ are included as bonus! My only suggestion would be to include another video that shows how everything can be deployed on AWS EKS. This is the best microservices course on Udemy. Period.\"\nPriya Chondke:\n\"its all good covered all topics in easiest way thank you for such an excellent course\"\n\n\nCheck out all the reviews/ratings for this course in the Reviews section of this course.",
      "target_audience": [
        "This course for Java programmers who want to learn building RESTful Web services and Microservices using Spring Boot, Spring Cloud, Kafka, RabbitMQ and Docker."
      ]
    },
    {
      "title": "Blazor Deep Dive - From Beginner to Advanced in .NET 8",
      "url": "https://www.udemy.com/course/blazor-deep-dive-from-beginner-to-advanced/",
      "bio": "Ultimate ASP.NET Core Blazor Course with projects (with .NET 9 updates)",
      "objectives": [
        "Basic Blazor concepts and project structures",
        "Choices of Interactivities",
        "Basics of razor components",
        "Razor syntax",
        "Blazor Static Server-side Rendering (Blazor SSR)",
        "Form submission and validations",
        "Navigations",
        "Stream Rendering",
        "Enhanced Navigation",
        "Event handling",
        "Two way data binding",
        "Virtualizaiton",
        "Component Parameters",
        "Cascading Parameters",
        "Templated components",
        "QuickGrid",
        "Component life cycle events",
        "Static vs Interactive Routing",
        "Different ways for State Management",
        "Working with WebAssembly",
        "Data Access for Server side Blazor with Entity Framework Core",
        "Data Access with Web API for WebAssembly",
        "Authentication and Authorization with ASPNET Core",
        "Pre-Rendering in Blazor"
      ],
      "course_content": {
        "Introduction": [
          ".NET 9 Updates",
          "What is Blazor",
          "Choices of Interactivity",
          "Blazor SSR Project Structure",
          "Source Code"
        ],
        "Blazor SSR": [
          "Two Types of Components",
          "Razor Syntax Implicit Razor Expression",
          "Razor syntax Explicit Razor Expression",
          "Create a static data repository",
          "Razor Syntax Output list with looping",
          "Assignment 1: Output city buttons list",
          "Assignment 1: Answer",
          "Working with Static Resources",
          "Assignment 2: Create a routable component",
          "Assignment 2: Answer",
          "Route Parameters & Route Constraints",
          "Use OnParametersSet to receive parameter value",
          "Use Form and Input components to display and collect data",
          "Form submission and model binding",
          "Form Validations",
          "Navigation with NavigationManager & Dependency Injection",
          "Assignment 3: Add Server",
          "Assignment 3: Answer",
          "Use EditForm to delete data",
          "Stream Rendering"
        ],
        "Add Server Interactivity": [
          "What is interactivity",
          "Use Enhanced Navigation in Blazor SSR for interactivity",
          "Use Enhanced form handling in Blazor SSR for interactivity",
          "What is Server Interactivity",
          "Enable Server Interactivity how to make a component interactive",
          "Interactivity Location",
          "Server Interactivity in Visual Studio project template",
          ".NET 9 Updates: Include SSR in Global Server Interactivity location",
          "Three main aspects of interactive components",
          "Event Handling (Passing Data)",
          "Assignment 4: Highlight current City",
          "Assignment: 4 Answer",
          "Update. state variables with Onchange event",
          "Two way data binding",
          "Interactive EditForm",
          "Use @key to improve list-rendering performance",
          "Use Virtualization to improve list-rendering performance"
        ],
        "Course Project (Part 1): To-Do List App Basics": [
          "Requirement of To do list app",
          "Display a list of tasks use case",
          "Add Task use case",
          "Input task name use case",
          "Mark task as completed use case"
        ],
        "Non-Routable Razor Component Deep-Dive": [
          "Thinking in Components",
          "Extract the ServerList Component",
          "Use Component Parameters to communicate from parent to child components",
          "Assignment 5: Extract the Server Component",
          "Assignment 5: Answer",
          "Extract city components",
          "Use EventCallback to pass info from child to parent components",
          "Assignment 6: Componentize the search bar",
          "Assignment 6: Answer",
          "Reference a child component",
          "Reuse routable component as non-routable component",
          "Use if statement to output data conditionally",
          "Assignment 7: Display people online",
          "Assignment 7: Answer",
          "CSS Isolation",
          "Cascading Parameter theory",
          "Use cascading parameter to pass values down the component tree",
          "Cascading Parameter crossing render mode boundary",
          "Use templated components to create generic components",
          "Typed Templated Component",
          "Use html table in our RepeaterComponent",
          "Using QuickGrid to display our servers",
          "QuickGrid Sorting and Pagination",
          "Use arbitrary attributes to provide flexibility"
        ],
        "Course Project (Part 2): Componentize our To-Do List App": [
          "Componentize the List of Items",
          "Componentize the to do item"
        ],
        "Component Lifecycle Deep-Dive": [
          "Component Lifecycle Overview",
          "Component lifecycle events sequence Part 1",
          "Component lifecycle events sequence Part 2",
          "The problem of component initialization",
          "Trouble with Pre-Rendering",
          "The problem with OnParameterSet",
          "When does a component render",
          "The problem of ShouldRender",
          "Thread Safety & SynchronizationContext for Server Interactivity"
        ],
        "Routing and Navigation Deep-Dive": [
          "Static vs Interactive Routing",
          "Use NavigationLock to prevent navigation",
          "Multiple Page Directives",
          "Optional Parameters",
          "Query Strings"
        ],
        "State Management Deep-Dive": [
          "State Management Overview",
          "Use URL to pass info across routable components",
          "Use browser storage to maintain states",
          "Use DI container to maintain states",
          "Use Observer Pattern to access states across component trees",
          "Implement state store with Observer pattern",
          "Dispose Subscribers"
        ],
        "WebAssembly Interactivity": [
          "WebAssembly Interactivity Locations",
          "Create a new project with WebAssembly Interactivity",
          "Mix Render Modes",
          "Life cycle events in WebAssembly Interactivity",
          "Browser Storage & Javascript InterOp",
          "Use DI container to maintain states for WASM components",
          "Debug WebAssembly Components",
          "Other Differences"
        ]
      },
      "requirements": [
        "Basic HTML",
        "Intermediate C#",
        "Good understanding of OOP, esp. the usage of interface (although Dependency Injection is thoroughly covered in this course)",
        "It is best if you have a little bit experience with ASP Dot Net Core. But don't worry too much, I will help you with that too."
      ],
      "description": "(Note that this course includes updates for .NET 9 features)\n\n\nEmbark on a Comprehensive Journey with Blazor in .NET 8\nWelcome to a transformative learning experience designed for developers eager to explore the full spectrum of ASP.NET Core Blazor, the innovative web framework that empowers you to build interactive applications using .NET 8. This course is a deep dive into the world of Blazor, where you’ll learn to harness the power of both server-side rendering and WebAssembly to create dynamic user experiences.\nCourse Overview:\nIntroduction to Blazor: Begin with the basics, understanding what Blazor is and the choices it offers for interactivity. Familiarize yourself with the project structure and get organized with our course resources.\nBlazor Server-Side Rendering (SSR): Delve into the nuances of Blazor SSR, learning about components, Razor syntax, and static resources. Tackle assignments that challenge you to create and manipulate data repositories and components.\nInteractivity: Discover the core of Blazor’s interactivity in both Blazor Server and Blazor WebAssembly, learning how to handle events, manage state variables, and implement two-way data binding. Explore the use of @key and virtualization for performance optimization.\nComponent Architecture: Take a deep dive into non-routable and routable components, understanding their parameters, lifecycle, and how to create reusable and generic components. Learn about CSS isolation and cascading parameters to style and manage your app effectively.\nAdvanced Topics: Master advanced concepts like pre-rendering, routing, navigation, and state management. Learn how to maintain states across components and implement the observer pattern for dynamic applications.\nData Access and Management: Gain proficiency in data access patterns for both server-side and WebAssembly applications. Learn to integrate Entity Framework Core with Blazor for server-side data management, and understand how to interact with Web APIs for client-side data access. Set up a Firebase Realtime Database and manage CRUD operations in WebAssembly.\nAuthentication and Authorization: Secure your applications by understanding the authentication process in ASP.NET Core. Learn to register, log in, and authorize users, and secure your server-side Blazor app.\nPractical Projects: Apply your knowledge with two course projects—a Server Management project and a To-Do List App. These projects will solidify your understanding and give you practical experience in Blazor development.\nWhy Choose This Course?\nDeep-Dive Experience: Starting with the fundamentals, this course is designed to support beginners every step of the way. Yet, it doesn’t stop there. We delve deep into Blazor, equipping you with an intimate understanding of the framework by the course’s conclusion.\nExpertly Curated Content: Each module is carefully crafted to build upon the previous one, ensuring a seamless learning curve.\nHands-On Learning: With numerous assignments and practical projects, you’ll not just learn but apply your knowledge in real-world scenarios.\n\n\nBy the end of this course, you’ll have a robust portfolio of projects, a deep understanding of Blazor, and the skills to confidently build modern web applications. Join us on this journey to become a Blazor expert in .NET 8!\n\n\nWho is this course for?\nThis course is for anyone who wants to learn how to develop web applications with ASP.NET Core Blazor using .NET 8. You should have some basic knowledge of C# and HTML, but no prior experience with ASP.NET Core Blazor is required.\nIf you already have experience working with Blazor previously but feeling overwhelmed by the changes introduced in .NET 8, this course is also perfect for helping you catching up.\n\nSo, what are you waiting for? Enroll now and start your journey to become an ASP.NET Core Blazor developer!",
      "target_audience": [
        "C# developers who want to become full stack developers without the hassle of mastering JavaScript.",
        "Developers who work with Razor pages and/or MVC along with front end frameworks/libraries and would prefer work with less JavaScript.",
        "Developers with some experience  in Blazor who is looking for a comprehensive course to fill in the gaps especially if you are feeling overwhelmed by the changes to Blazor from .NET 8",
        "Developers who are curious about Mirosoft's newest SPA application framework: Blazor."
      ]
    },
    {
      "title": "Dapper - Getting Started",
      "url": "https://www.udemy.com/course/dapper-the-complete-guide/",
      "bio": "Gain practical knowledge of Dapper as we integrate with ASP.NET Core (.NET 5) application and learn advance concepts.",
      "objectives": [
        "Basics of Dapper",
        "Perform CRUD operations with Entity Framework Core.",
        "Perform CRUD operations with Dapper using SQL.",
        "Perform CRUD operations with Dapper using stored procedures.",
        "Complex parent-child objects in Dapper",
        "Dapper Contrib library.",
        "Advance Dapper concepts like relations in mapping, N+1 query, repository and much more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview",
          "ORM vs Micro ORM",
          "Udemy Review",
          "Naming Conventions",
          "Project Resources & Github",
          "Tools Needed",
          "Create Project"
        ],
        "Entity Framework Core": [
          "Create Company Model",
          "Create DbContext",
          "Configure Startup Class File",
          "Create Database and Tables",
          "Scaffold EF CRUD",
          "Implement Entity Framework Repository",
          "Entity Framework Repository Demo"
        ],
        "Dapper Hands On": [
          "Configuring Dapper Repository Part 1",
          "Get All - Dapper",
          "Dapper - Get Single",
          "Dapper - Create",
          "Dapper - Update",
          "Dapper - Delete",
          "Add Employee Model"
        ],
        "Employee Dapper": [
          "Employee Repository",
          "Employee Controller",
          "UI Changes",
          "Employee CRUD",
          "Display company Id"
        ],
        "Stored Procedures in Dapper": [
          "Add Stored Procedures",
          "Get Stored Procedure",
          "Dynamic Parameters with Dapper",
          "Stored Procedure Update and Remove"
        ],
        "Dapper Contrib": [
          "Dapper Contrib Setup and Model Change",
          "Dapper Contrib Get and GetAll",
          "Dapper Contrib Insert, Update and Delete"
        ],
        "Advanced Dapper": [
          "Setup Bonus Repository",
          "N + 1",
          "One to One Relation in Dapper",
          "One to One Relation with Parameters",
          "Multiple Result Sets in Dapper",
          "One to Many Relation in Dapper",
          "Display all company and employees",
          "Insert Company With Employees Populated",
          "In Clause and Remove Range in Dapper",
          "Bulk Insert in Dapper",
          "Transaction in Dapper",
          "Async Version",
          "Generic Dapper Stored Proc Repository"
        ]
      },
      "requirements": [
        "Visual Studio 2019",
        "SQL Server Management Studio",
        ".NET 5 (or .NET Core)"
      ],
      "description": "Dapper provides a super fast library for mapping between databases and .NET. This code-focused course will introduce you to all the basics you need to be productive with Dapper and how to incorporate Dapper in your project.\nThis is an introductory course on Dapper with ASP.NET Core (.NET 5). This course is for anyone who is new to Dapper for overview with exposure to some advance concepts of Dapper.\nWhen you are finished with this course, you will have the skills and knowledge of Dapper needed to build elegant and high-performance data access layers.",
      "target_audience": [
        "Anyone who wants to learn fundamentals with advance concepts in Dapper"
      ]
    },
    {
      "title": "AI-Agents: Automation & Business with LangChain & LLM Apps",
      "url": "https://www.udemy.com/course/ai-agents-automation-business-with-langchain-llm-apps/",
      "bio": "AI Agents with Node.js, Python, JavaScript, LangChain, LangGraph, GPT-4o, Llama, and RAG! Automate tasks, sell software",
      "objectives": [
        "Basics of AI agents like Autogen, LangChain, LangFlow, Flowise, LangGraph, BabyAGI, CrewAI & more",
        "Basics of LLMs like ChatGPT, Claude, Gemini, Llama, Mistral, GPT-4o & more with Function calling in LLMs",
        "All about vector databases, embedding models & retrieval-augmented generation (RAG)",
        "Creating AI agents for automating content, emails, lead research & more Installation and operation of Flowise with Node",
        "Function calling for external APIs, Python interpreter, calculator, Gmail, Serper, Make & more",
        "RAG AI agent: Training on own data & automatic saving of files on your PC",
        "Data preparation for RAG: PDFs, Docs, CSV & more with LlamaIndex & LlamaParse",
        "Integration and automation of custom tools in Flowise",
        "API connection and automation with JavaScript, Python and Make",
        "AI agents in business: offering, pricing, sales, customer acquisition",
        "Marketing strategies for selling AI agents",
        "Integration of AI agents into websites or as standalone apps",
        "Installation of VS Code and Git",
        "Local Microsoft Copilot with Vision as an AI agent in Python",
        "AI agents with open-source LLMs: Ollama, Llama 3.1 & more",
        "Choosing the right LLM for the AI agent",
        "Issues, security, and copyrights in AI agents"
      ],
      "course_content": {
        "Introduction and Overview": [
          "Welcome",
          "Course Overview",
          "My Goal and a Few Tips",
          "Explanation of the Links",
          "Important Links",
          "Instructor Introduction: Arnold Oberleiter (Arnie)"
        ],
        "Basics: AI Agents, LLMs, Function Calling, Vector Databases & Embeddings": [
          "What This Section is About",
          "What are AI-Agents? A quick overview",
          "What are LLMs like ChatGPT, Claude, Gemini, Llama, Mistral etc.",
          "What is Function Calling in LLMs?",
          "Vector Databases, Embedding Models & Retrieval-Augmented Generation (RAG)",
          "AI Agents explained & Tools like Autogen, LangChain, LangGraph, CrewAI & more",
          "What is a API? Function calling for AI-Agents with APIs",
          "Recap: What You Have Learned So Far"
        ],
        "Creating Your First AI Agents": [
          "What Will You Learn in This Section?",
          "Info about Updates",
          "Running Flowise Locally with Node.js: Installing Node",
          "Installing Flowise with Node.js via Command Prompt",
          "Problems with the Installation of Flowise in Node.js? Fix it!",
          "The Flowise Interface: LangChain/LangGraph made Easy",
          "Our First AI Agent: Boss, Creative Writer & Title Generator",
          "Flowise V3 with Agentfow V2 is here!",
          "AI Agent No. 2: Social Media Strategy & Prompt Engineering for AI Agents",
          "AI Agent No. 3: Function Calling, Lead Research on the Web & Personal Emails",
          "Agent 4: Function Calling, Python Interpreter, Calculator & Local Text Storage",
          "Summary: Important Points You Should Not Forget"
        ],
        "Agentflow V2": [
          "What's New in Flowise Agent V2: Key Features & Improvements",
          "Agent V2 first Workflow with MCP",
          "Enhance Customer Support with Sentiment Analysis Using AI"
        ],
        "Advanced AI Agents: RAG, Custom Tools & Actions in Apps": [
          "What is This Section About?",
          "RAG AI Agent: Training LLMs on Your Data & Automatic Content Storage",
          "Tips for Better RAG Apps: Firecrawl for Your Web Data",
          "RAG with LlamaIndex & LlamaParse: Data Preparation for PDFs, Docs, CSV & More",
          "LlamaIndex brings easy LlamaParse!",
          "Chunk Size and Chunk Overlap for a Better RAG Application",
          "Overview of Custom Tools in Flowise",
          "Connect any API to Flowise with Custom Tools & JavaScript Functions",
          "Custom Tools and Automation of Gmail with Make (Part. 1)",
          "Automation of Gmail with Make scenarios, Webhooks, & Google API (Part 2)",
          "Recap: What You Have Learned and Mistakes to Avoid"
        ],
        "AI Agents for Business: Hosting, Lead Generation & Sales": [
          "What Will You Learn Here?",
          "Applications of AI Agents in Business",
          "Example of a Simple AI-Agent then we can sell",
          "External Hosting of Chatbots for Clients (or for us) on Render",
          "Integrating AI Agents in Websites or Using Them as Standalone Apps",
          "Making Standalone Apps More Appealing",
          "Visually Improving Chatbots on Websites: Branding, Style & Integrating Links",
          "Generating Leads, Integrating Audio Models & Additional Functions",
          "Selling AI Agents: Marketing, Customer Acquisition, Offer, Sales & Warranty",
          "Summary: Important Points to Remember!"
        ],
        "Creating Your Own AI Assistant, Similar to Microsoft Copilot": [
          "What Will We Learn in This Section?",
          "Overview of the Python Code on Github",
          "Installing Visual Studio Code (VS Code) for Python, Javascript & more",
          "Installing Git for Projects from GitHub",
          "Our Project: Microsoft Copilot with Vision as Our Own AI Agent (In Python)",
          "Additional Tips, Use Cases, Different Voices & Prompts",
          "Security, API Costs, Speed & Hardware",
          "Copy my Python Code (if you like)",
          "Code & Requirements for Desktop Recording (Simple)",
          "Recap What You Should Not Forget"
        ],
        "AI Agents with Open-Source LLMs: Private & Uncensored AI on Your PC": [
          "What is This Section About?",
          "Pros and Cons of Open-Source LLMs like Llama3.1, Mistral & More",
          "Installing Ollama and Downloading Open-Source LLMs",
          "A Simple Open-Source AI Agent with Llama 3.1 & Ollama (LangChain/LangGraph)",
          "Advanced Open-Source AI Agent with Llama 3.1: Responding to Emails",
          "Local RAG Chatbot with Flowise, Llama3 & Ollama: A Local Langchain App",
          "Insanely fast inference with the Groq API",
          "Llama 3.1: Infos and What Models should you use?",
          "DeepSeek R1 (new Chinese AI beats OpenAI o1) Infos",
          "DeepSeek R1 Tutorial",
          "Important Points to Remember"
        ],
        "Issues, Security, and Copyrights in AI Agents": [
          "What Will We Learn in This Section",
          "Jailbreaks: A Method to Hack LLMs with Prompts",
          "Prompt Injections: Another Security Vulnerability of LLMs",
          "Data Poisoning and Backdoor Attacks",
          "Copyrights & Intellectual Property of Generated Data from AI Agents",
          "Privacy & Protection for your own and Client Data",
          "Recap: Important Points to Remember!"
        ],
        "What’s Next?": [
          "What’s Next and My Thank You!",
          "Bonus"
        ]
      },
      "requirements": [
        "No prior knowledge required, everything is shown step by step."
      ],
      "description": "AI agents are on everyone's lips, but few know what they are and even fewer know how to use them.\nTools like CrewAI, Autogen, BabyAGI, LangChain, LangGraph, LangFlow etc., sound more complex than they are.\nAre you ready to master the intricacies of AI agents and leverage their full potential for process automation and selling tailored solutions?\nThen this course is for you!\nDive into \"AI Agents: Automation & Business through LangChain Apps\"—where you will explore the basic and advanced concepts of AI agents and LLMs, their architectures, and practical applications. Transform your understanding and skills to lead in the AI revolution.\nThis course is perfect for developers, data scientists, AI enthusiasts, and anyone wanting to be at the forefront of AI agent and LLM technology. Whether you want to create AI agents, perfect their automation, or sell tailored solutions, this course provides you with the comprehensive knowledge and practical skills you need.\nWhat to expect from this course:\nComprehensive knowledge of AI agents and LLMs:\nBasics of AI Agents and LLMs: Introduction to AI agents like Autogen, LangChain, LangGraph, LangFlow, CrewAI, BabyAGI & their LLMs (GPT-4, Claude, Gemini, Llama & more).\nTools and Techniques: Using LangChain, LangGraph, and other tools to create AI agents.\nFunction Calling and Vector Databases: Understanding function calling and using vector databases and embedding models.\nCreating and deploying AI agents:\nInstallation and Use of Flowise with Node: Step-by-step guides for installing and using Flowise.\nCreating and Deploying AI Agents for Various Tasks: Developing creative writers, social media strategists, and function-calling agents.\nAdvanced techniques for AI agents:\nRAG AI Agents: Training LLMs on your own data and automatic local text storage.\nData Preparation and Integration: Using LlamaIndex, LlamaParse, and other tools for data preparation and integration in Flowise.\nAPI Connection and Automation: Connecting APIs and automating with JavaScript, Python, and Make.\nAI agents in a business environment:\nUse Cases and Integration: Hosting and integrating AI agents into websites or as standalone apps.\nLead Generation and Marketing: Strategies for generating leads and selling AI agents.\nCreating your own AI assistant:\nPython Code and Installation: Developing a local Microsoft Copilot-like AI agent with Vision and Python.\nUsing VS Code and Git: Step-by-step guides for installing and using VS Code and Git.\nAI agents with open-source LLMs:\nPros and Cons of Open-Source LLMs: Using and installing open-source LLMs like Llama 3.\nInstalling and Using Ollama with Llama 3.1 and Other Open-Source LLMs.\nCreating Open-Source AI Agents: Developing simple and advanced open-source AI agents.\nIssues, security, and copyrights in AI agents:\nSecurity Measures and Privacy: Understanding jailbreaks, prompt injections, and data poisoning.\nCopyrights and Privacy: Handling copyrights and privacy for generated AI agent data.\nPractical applications and API integration:\nAPI Basics and Integration Skills: Using the OpenAI API, Google API, and more for various applications.\nDeveloping AI Apps: Creating apps with Whisper, GPT-4, and more.\nInnovative tools and agents:\nOverview of Microsoft Autogen and CrewAI.\nImplementing Flowise: Integrating Flowise with function calls and open-source LLMs as a chatbot.\nHarness the power of AI agents and LLM technology to develop solutions and expand your understanding of their applications.\nAt the end of \"AI Agents: Automation & Business through LangChain Apps,\" you will have a holistic understanding of AI agents and LLMs and the skills to use them for various purposes. If you are ready to be at the forefront of this technological revolution, this course is for you.\nEnroll today and become an expert in AI agents and large language models.",
      "target_audience": [
        "To everyone who wants to learn something new and gain deep insights into AI agents",
        "To entrepreneurs who want to become more efficient, save money, or build an AI business",
        "To individuals interested in AI and wanting to build their own agents",
        "To anyone who wants to automate tasks"
      ]
    },
    {
      "title": "Next.js 15 & React - The Complete Guide",
      "url": "https://www.udemy.com/course/nextjs-react-the-complete-guide/",
      "bio": "Learn NextJS 15 from the ground up and build fullstack ReactJS + NextJS apps with the App Router or Pages Router!",
      "objectives": [
        "Learn how to build fullstack React apps with NextJS 15 & the App Router",
        "Build real projects and apply what you learned with hands-on projects and examples",
        "Learn about different ways of building NextJS app - App Router vs Pages Router",
        "Get started with React Server Components, Client Components, data fetching & more!",
        "Handle data submissions via Server Actions",
        "Learn all key NextJS features like pre-rendering, SSR, data fetching, file-based routing and authentication",
        "Take the full course or the \"NextJS Summary\" module for a quickstart if you have limited time"
      ],
      "course_content": {},
      "requirements": [
        "ReactJS knowledge is strongly recommended, but the course also includes a complete React refresher module",
        "NO prior NextJS knowledge is required"
      ],
      "description": "Update October 2024:\nUpdated content to reflect latest version of Next.js (15).\nUpdate March/April 2024:\nCompletely updated the entire course to cover the latest version of Next.js!\n\n\nThis course teaches you the latest version of Next.js and covers both the \"App Router\" and \"Pages Router\" (and explains what these two approaches are).\n\n\nJoin this bestselling NextJS course and learn how to build highly dynamic, super fast and SEO-ready React apps with React & NextJS!\nThis course covers both the NextJS \"App Router\" & the \"Pages Router\" - two different approaches for building fullstack apps with React! And, of course, you'll learn what these two approaches are, why two different approaches exist and how each approach works!\n\n\nI created the bestselling Udemy course on React, now I'm super excited to share this NextJS with you - an in-depth course about an amazing React framework that allows you to take the next step as a React developer and build real, production-ready projects with React and Next.js!\nNext.js is the production-ready, fullstack-capable framework for ReactJS - the most popular JavaScript library you can learn these days!\nToo many buzzwords for your taste?\nFair enough - but indeed, NextJS is a great choice for growing as a React developer and for taking your React apps to the next level!\nBecause NextJS is growing fast and therefore in high demand. And there are good reasons for that: NextJS allows you to build React apps with built-in server-side rendering and page pre-rendering. Building great user experiences and search engine friendly (SEO!) React apps has never been easier!\nIn addition, NextJS makes building fullstack React apps (frontend + backend code combined in one project) extremely easy as well! Blend client-side and server-side code and build a NodeJS-based API side-by-side with your frontend React apps. It's a breeze with NextJS!\nWant to add authentication? NextJS simplifies that as well and makes user signup, sign in and session management very convenient.\nThis course will take you from NextJS beginner to advanced level in no time!\nWe'll start at the very basics, no NextJS knowledge is required at all, and we'll then dive into all the core features that make up NextJS. Both in theory as well as with multiple real projects where all concepts will be applied step-by-step.\nFor this course, you'll need basic React knowledge, though the course does come with a \"React refresher\" module in case it's been some time since you last worked with React.\nThis course also includes a \"NextJS Summary\" module for the Pages router and a \"NextJS Essentials\" module for the App router - which allow you to always come back to the course in the future and refresh your knowledge without going through the full course again. Or you just take those summary modules (and skip the rest for now) to learn about all the core features in as little time as possible.\nAfter finishing this course, you'll be well prepared to build your own NextJS projects from the ground up and apply for NextJS positions!\nIn detail, this course will cover:\nWhat is NextJS? And why would you use it?\nWhy is just React (in many cases) not enough?\nCreating NextJS projects from the ground up & understanding these projects\nWorking with file-based routing\nAdding dynamic routes and catch-all routes\nImplementing different forms of page pre-rendering and server-side rendering\nWorking with data and adding data fetching + pre-fetching to your apps\nHandling form submissions with Server Actions\nHandling File upload\nPre-generating dynamic and static pages\nAdding optimizations like metadata to pages\nOptimizing images with the NextJS Image component\nBuilding fullstack apps with API routes or Server Actions\nManaging app-wide state with React context (in NextJS apps)\nAdding authentication to NextJS apps\nMultiple complete apps where we'll apply all these core concepts!\nA complete React.js refresher module (so that we're all on the same page)\nA NextJS summary module so that you can refresh what you learned or just explore the core features quickly\nAnd much more!\nI can't wait to start this journey together with you! :)",
      "target_audience": [
        "React developers who want to take the next step and build production-ready React apps",
        "React developers who aim to build fullstack React apps",
        "Web developers in general, who want to work with one of the most popular and in-demand tech stacks"
      ]
    },
    {
      "title": "1 Hour CSS",
      "url": "https://www.udemy.com/course/1-hour-css/",
      "bio": "Learn how to code in CSS in 1 hour. This class is set up for complete beginners!",
      "objectives": [
        "Learn how to become a web developer",
        "Learn CSS",
        "Learn how to design websites"
      ],
      "course_content": {
        "Let's learn CSS": [
          "1. Introduction to the course",
          "2. Course requirements and formate",
          "3. HTML and Style points",
          "4. Adding the CSS",
          "5. Style tags",
          "6. IDs",
          "7. Font families",
          "8. Font properties",
          "9. Adding in Colors",
          "10. Formatting tags",
          "11. Tables part 1",
          "12. Tables part 2",
          "13. Lists",
          "14. Classes versus ids",
          "15. Uses for CSS"
        ],
        "Congratulations you are finished!": [
          "16. Course conclusion. Thanks for taking te course."
        ]
      },
      "requirements": [
        "An internet connection",
        "An up to date web browser"
      ],
      "description": "Have you ever wanted to learn to code but don't know where to start? Learning how to code can get you a better job and lead to a better future. In this tutorial series you get to learn about CSS. CSS is the number design language for the web. CSS is easy to learn and it is used in most web development today. This course is a 1 hour course of action packed material. By the end of it you will have a firm understanding of the concepts of CSS.\n\n\nThe best part is that this is for complete beginners! Coding is a fantastic career to get into and this is the first course you should take. All web developers start with CSS and it is by far the easiest language to learn. CSS stands for cascading style sheets and it is the what makes websites look good. Before CSS, websites didn't look good at all.\n\n\nJust think of all of the things you can do in 1 hour and imagine learning a whole new skill. That's why these 1 hour lessons are so valuable. Take a look at the reviews, they speak for themselves.\n\n\nWhat are you waiting for, enroll today.",
      "target_audience": [
        "Complete beginners",
        "People who want to learn about web development"
      ]
    },
    {
      "title": "FULL STACK JAVA DEV: JAVA + JSP + SPRING + BOOT + JS + REACT",
      "url": "https://www.udemy.com/course/full-stack-java-developer-java/",
      "bio": "Full Stack Java, JSP, Hibernate, Spring, Web-services/RestFul API, Spring boot, JavaScript, React, FREE 6-month IDE.",
      "objectives": [
        "Build a fully functioning web application through a simplistic step from a professional trainer",
        "Java programming language",
        "Learn Java server pages, servlets, and JSTL from the basics to advance",
        "Understand building web forms with JSP",
        "Apply validations on the forms",
        "Use the web template to make the web application incredible",
        "Create-Deploy Servlets & Understand Servlet Lifecycle",
        "Learn how to Handle Session in JSP",
        "Develop Dynamic Web Applications",
        "Learn MVC in JSP",
        "Forms under JSP and Servlets",
        "Collection",
        "Learn the concept related to Generics",
        "Add validations on form data",
        "Adding records into the database",
        "Updating record(s) into database",
        "Deleting record(s) into database",
        "Spring Framework",
        "Web Services – RestFul API",
        "Spring Boot",
        "Spring Boot Restful API",
        "JavaScript"
      ],
      "course_content": {
        "Java: Getting started": [
          "About the course",
          "Background Story",
          "Course upgraded!",
          "IntelliJ IDEA FREE access for 6 months",
          "NOTE: Updated coupon link",
          "Java versions and Setting up environment",
          "How to import java project files in IntelliJ IDEA",
          "HelloWorld Java program without Maven",
          "HelloWorld Java program with Maven",
          "Linkedin and Instagram links",
          "Maven jar plugin example",
          "Keywords and variables in Java",
          "Understanding variables",
          "Primitive data types - integer types",
          "Primitive data types - float types",
          "Primitive data types - float types continues",
          "Primitive Data Types - Boolean and char",
          "String basics",
          "Type casting in Java - (Part 01)",
          "Type casting in Java - (Part 02)",
          "Exercise - Solve an equation",
          "Java naming conventions",
          "When to use what",
          "Quiz on section 1",
          "Understand Udemy interface and how to get completion certificate",
          "Project files and downloadable material and articles",
          "Project files"
        ],
        "Java: Decision making under Java": [
          "Arithmetic operators in Java - (Part 01)",
          "Arithmetic operators in Java - (Part 02)",
          "Making decision with operators - (Part 01)",
          "Making decision with operators - (Part 02)",
          "Making decision with operators - (Part 03)",
          "Making decision with operators - (Part 04)",
          "Ternary operator",
          "Assignment operators",
          "Making decision with else if",
          "Udemy QnA",
          "Exercise",
          "Project files",
          "Quiz on section 2"
        ],
        "Java: Flow control": [
          "Switch case in Java - (Part 01)",
          "Switch case in Java - (Part 02)",
          "Switch case in Java - (Part 03)",
          "Switch case in Java - (Part 04)",
          "For loop in Java - (Part 01)",
          "For loop in Java - (Part 02)",
          "For loop in Java - (Part 03)",
          "While loop",
          "Do while loop in Java",
          "Loops revisited",
          "Break and Continue in Java",
          "Foreach in Java",
          "Nested loops",
          "Sum of digits - Exercise",
          "Quiz on section 3",
          "Project files",
          "Rating and reviews"
        ],
        "Java: Methods": [
          "Methods in Java",
          "Return in methods of Java",
          "Method overloading in Java - (Part - 1)",
          "Method overloading in Java - (Part - 2)",
          "Quiz on Section 4",
          "Project files"
        ],
        "Java: Some good information": [
          "Code Block, Indentation and statements",
          "Java literals",
          "Java Literals documentation",
          "Quiz on section 5",
          "Project files"
        ],
        "How to use IntelliJ IDEA (Supported by JetBrains)": [
          "IntelliJ IDEA Shortcuts",
          "IntelliJ IDEA Terminal features",
          "IntelliJ IDEA Docker support"
        ],
        "Java: Object Oriented Programming Concepts": [
          "Getting started with Java classes",
          "Getters and Setters in Java Classes",
          "Instance variable default values",
          "Adding functionality to Java Class",
          "Run Java Class methods",
          "Constructor introduction in Java",
          "Default Constructor in Java",
          "Inheritance 01 - Understanding inheritance in programming",
          "Inheritance 02 - Inheritance in Java",
          "Inheritance 03 - Access getter and setter of classes",
          "Inheritance 04 - Constructors with inheritance",
          "Inheritance 05 - Method conflict in Java inheritance",
          "Inheritance 06 - Type of Inheritance in Java",
          "Inheritance 07 - Inheritance example",
          "Composition Introduction",
          "Composition setting up",
          "Working with compositions",
          "Working with composition - Composition continues",
          "Encapsulation in Java",
          "Encapsulation in Java continues",
          "Polymorphism in Java",
          "Polymorphism in Java continues",
          "Benefits of Polymorphism",
          "Quiz on section 6",
          "Project files"
        ],
        "Java: Core concepts": [
          "Interface in Java",
          "Interfaces in Java continues",
          "Interface with Polymorphism and multiple inheritance",
          "Abstract class - Introduction",
          "Non static inner class in Java",
          "Non static inner class in Java continues",
          "Different types of inner classes in Java",
          "Local inner class in Java",
          "Anonymous object",
          "Anonymous inner class in Java",
          "Advantages of inner class in Java",
          "User input (Basics)",
          "Static elements",
          "Static inner class in Java",
          "Static inner class in Java continues",
          "Few more thing - static inner class in Java",
          "Final keyword with variable in Java",
          "Final keyword with method and classes in Java",
          "Packages in Java",
          "Packages in Java continues",
          "Scope in Java",
          "Access modifiers in Java getting started",
          "Access modifiers in Java without inheritance",
          "Access modifier - Part 2",
          "String handling in Java",
          "String handling in Java continues",
          "Exception handling introduction in Java",
          "Exception handling - Documentation and few more things",
          "Exception handling, sub statements and Multiple exception blocks",
          "Exception handling, Multiple catches and Finally",
          "Throws keyword usage in Java",
          "Throw keyword in Java",
          "User defined exception",
          "Checked and unchecked exception in Java",
          "String in Java",
          "String in Java continues",
          "String literals vs String objects",
          "Printf in Java, String formatting in Java",
          "Printf in Java, String formatting in Java document",
          "Enum in Java",
          "Enum in Java continues",
          "Quiz on section 7",
          "Project files"
        ],
        "Java: Array": [
          "S08L01 - Introduction to arrays in Java",
          "S08L02 - Initialization of array in Java",
          "S08L03 - Initialization of array in Java continues",
          "S08L04 - Foreach loop refresher",
          "S08L05 - Method arguments, call by value in Java",
          "S08L06 - Method arguments, call by reference in Java",
          "S08L07 - Issues with array",
          "Quiz on section 8",
          "Project files"
        ],
        "Java: Collections framework": [
          "S09L01 - ArrayList",
          "S09L02 - ArrayList continues",
          "S09L03 - Autoboxing and unboxing in Java collections",
          "S09L04 - Autoboxing and unboxing continues",
          "S09L05 - Autoboxing and unboxing behind the scene",
          "S09L06 - ArrayList and Stack overview",
          "S09L07 - Important stack methods",
          "S09L08 - Java Vector methods",
          "S09L09 - LinkedList",
          "S09L10 - LinkedList operations in Java",
          "S09L11 - List interface in Java Collections framework",
          "S09L13 - Iterators, sort and reverse in Java Collections",
          "S09L14 - CompareTo method overview",
          "S09L15 - Comparable interface in Java",
          "S09L16 - Comparable interface in Collections continues",
          "S09L17 - Section wrap up",
          "Quiz on section 9",
          "Project files"
        ]
      },
      "requirements": [
        "Basics of any programming knowledge(Optional)",
        "A computer/Laptop",
        "JDK (Java development kit)",
        "IDE (Eclipse, VS Code, IntelliJ IDEA)",
        "Passion to learn new things"
      ],
      "description": "Are you ready to elevate your career in IT?\nDive into our Full Stack Java Development course designed for all skill levels. Whether you're a seasoned IT professional looking to expand your skillset or a newcomer eager to explore the world of web development, our comprehensive course is crafted to cater to all levels of expertise.\nThe course begins with a solid foundation in Java, ensuring a seamless transition for beginners and a perfect refresher for those with existing Java knowledge. Dive deep into Java fundamentals, exploring key concepts such as Lambdas Expression, Java Generics, Collections, Multithreading, and File handling. Our expertly designed curriculum doesn't just stop at the basics; we guide you through the details of debugging in IntelliJ IDEA, ensuring you develop the crucial skill of identifying and fixing errors efficiently.\nAs you progress, immerse yourself in the dynamic universe of web development with a focus on JSP and Servlets, essential components in building robust Java web applications. Harness the power of Hibernate and Spring framework, both built on the latest Java 17 LTS version, to master the art of seamless data persistence and efficient application development.\nOur course places a special emphasis on mastering Spring Boot REST, a vital component in contemporary web development. Explore RESTful APIs and gain a profound understanding of JavaScript basics, which is essential for creating dynamic and interactive web pages. Dive into JSTL and Restful Micro-webservices concepts, covering the legacy part of the course built on Java 8, ensuring you are well-versed in both the latest advancements and established practices.\nTake your skills to the next level with in-depth coverage of advanced topics such as HATEOS introduction, Junit, and testing methods, as well as Testing exceptions. Our commitment to providing a holistic learning experience means you'll not only grasp the theoretical aspects but also gain practical insights through real-world projects.\nJoin our course, and benefit from a curriculum that is carefully curated to align with the demands of the ever-evolving IT landscape. Whether you're aiming for a career transition or seeking to enhance your existing skills, our Full Stack Java Developer course is your gateway to success in the dynamic and high-demand field of web development.\n\n\nCourse Highlights\n\n\nHigh-quality video content\nCourse materials (Project files and quizzes)\nGet a FREE 6-month subscription for IntelliJ IDEA Ultimate or another JetBrains IDE of your choice\nMore than 650+ Lectures and 70+ hours of video content\nLatest tools and software versions used\nCourse built on the latest JAVA 17 LTS version\nLegacy concepts (Additional content on Java 8)\n\n\n\n\nWhat Sets Us Apart?\nExtensive Content: With over 650+ lectures and 70+ hours of high-quality video content, our course leaves no stone unturned in equipping you with the knowledge and skills needed to excel as a Full Stack Java Developer.\nLatest Tools and Technologies: Stay ahead of the curve with our course built on the latest Java 17 LTS version, coupled with legacy concepts on Java 8. Experience hands-on learning with industry-standard tools like IntelliJ IDEA, Eclipse IDE, and VS Code IDE.\nFocus on Modern Technologies: Immerse yourself in the world of modern web development with a special emphasis on React, Spring Boot, Restful Microservices, and JavaScript basics. From setting up React JS to implementing Swagger using React, our course covers it all.\n\n\nUncover the top skills taught in our course\nJava Programming\nSpring Framework\nBack-End Development\nFront-End Development\nServer-Side Architecture\nNew Addition: Dive into the Exciting World of React\nBut that's not all!\nIn response to the growing demand for cutting-edge technologies, we've added a comprehensive section on React. Explore topics such as setting up React JS, user management, making HTTP GET calls, dynamic menus, and much more!\n\n\nWhat you’ll learn\n\n\nEnhance your foundational understanding of Java to seamlessly transition into advanced frameworks such as Spring, Java EE, and JavaScript.\nDevelop expertise in the latest Java version, Java 17, while also mastering earlier iterations including Java 8.\nElevate your programming skills with comprehensive Java fundamentals for a holistic grasp of key concepts essential for advanced development.\nBuild a fully functioning web application through a simplistic step from a professional trainer.\nJava programming language\nLearn Java server pages(JSP), Servlets, and JSTL from the basics to advance\nUnderstand building web forms with JSP\nApply validations on the forms\nUse the web template to make the web application incredible\nLearn how to Handle Sessions in JSP\nDevelop Dynamic Web Applications\nLearn MVC in JSP\nForms under JSP and Servlets\nLearn the concept related to Generics\nAdd validations on form data\nAdding records to the database\nUpdating record(s) into a database\nDeleting record(s) into a database\nSpring Framework\nWeb Services – RestFul API\nSpring Boot\nSpring Boot Restful API\nJavaScript basics\nBuild frontend using REACT\nJUnit\n\n\nCourse Curriculum Content\n\n\nBuild a Strong Foundation in Java\nThe course begins with a solid foundation in Core Java, ensuring a seamless transition for beginners and a perfect refresher for those with existing Java knowledge. Dive deep into Java fundamentals, exploring key concepts such as Lambdas Expression, Java Generics, Collections, Multithreading, and File handling. Our expertly designed curriculum doesn't just stop at the basics; we guide you through the details of debugging in IntelliJ IDEA, ensuring you develop the crucial skill of identifying and fixing errors efficiently.\nTopics have been covered:\nDecision-making under Java\nObject-oriented programming concepts\nCollections framework & debugging\nGenerics\nMulti-threading\nLambdas\nFile Handling under Java\n\n\nExplore the World of Web Development\nDive deep into the realm of web development with JSP and Servlets, mastering the art of building resilient Java web applications. Seamlessly integrate Hibernate and Spring frameworks, leveraging the power of Java 17 LTS to achieve unparalleled efficiency in data persistence and application development.\nTopics in this section:\nApply validations on the forms\nCreate & Deploy Java Servlets\nLearn how to Handle Sessions in JSP\nDevelop Dynamic Web Applications\nForms under JSP and Servlets\nAdding records to the database\nUpdating record(s) into a database\nDeleting record(s) into a database\nImage/File upload\n\n\nHibernate for Database Operations\nEstablish a robust connection between Hibernate and databases.\nDive into Hibernate Query Language (HQL) basics.\nPerform CRUD operations seamlessly with Hibernate.\n\n\nSpecial Emphasis on Spring Boot REST\n\nMake your applications come alive with Spring Boot, the shining light of modern Java development. Dive into the Spring ecosystem, covering IoC, Dependency Injection, Restful APIs, JWT token generation, and more, with a special focus on Spring Boot for rapid application development. Learn how to use Spring Boot effectively to create strong, flexible web applications that can handle challenges and grow over time.\nTopics in this section:\nSpring Framework\nInversion of control\nSpring Beans\nResource-based URIs for CRUD methods\nJSON response\nHATEOAS - get links from resources\nIdempotence of HTTP Methods\nMethod parameter and return type\n\n\nSpring Boot REST API\nSpring Boot JWT token generator\nIntegration of H2 database in Spring Boot\nWeb template Integration\nUpdate Profile (Account) on the Spring Boot Blog\nAdding Spring security into the application\nSpring security login, adding rules and Bcrypt password\nWeb App with spring boot\nSending email for password reset\nEmail Service in Spring Boot\nDocker and WSL on Windows\nSpring Boot OAuth2 JWT token generator\nSpring Boot OAuth2 JWT Adding Public-private KeyGenerator\nSpring boot JWT JPA Auth Controller\nBuild Add Album API\n\n\nElevate Frontend Dynamics with React & JavaScript\nBut wait, there's more! The crown jewel of our curriculum lies in React\nWe've supercharged our curriculum with an exclusive focus on React, the powerhouse of frontend development. Elevate your skills with in-depth coverage of REACT, the cutting-edge JavaScript library for building user interfaces.\nBegin your journey with JavaScript basics to setting up React JS and mastering Material UI, manage user interactions, make HTTP calls, and implement dynamic functionalities with ease, all within the sleek environment of VS Code IDE. From token handling to Swagger implementation, our REACT section is designed to empower you with the latest tools and techniques for crafting cutting-edge front-end experiences.\nTopics in this section:\n\n\nJavaScript basics\nKeywords, datatypes in JavaScript\nNormal functions and expression functions in JavaScript\nForeach methods\nJavaScript - Dom Object\nJavaScript - Callback functions\nReact\nSetting up React JS\nMaterial ui with React\nUser management with react\nMaking HTTP GET call with axios\nLocal server, CORS and Proxy in React\nLogin functionality\nAlbums use case in React\nToken handling and local storage with react\nDynamic menus and updated registration page\nSwagger implementation using React\nUpload photos onto the Albums\nProps, useEffect and Async\nAlbums Show page\nAdd, Edit, Delete functionality\nShow Photos using Albums API\n\n\nBonus Modules:\nUnlock the Secrets of Testing & Deployment\nEvery journey has its challenges, but with JUnit, your code will be strong enough to overcome any bugs.\n\n\nTopics in this section:\nFundamentals of the JUnit testing framework\nJUnit Testing\nGain proficiency in the JUnit testing framework and explore testing exceptions.\nStructure and implementation of effective test methods\nTechniques for testing exceptions\nAnd many more!\nMicro-Web Services and JSTL\nConcluding the curriculum, Discover the legacy concepts of Spring Legacy, Restful Micro-Web Services, JSP & Servlets, and JavaServer Pages Standard Tag Library (JSTL) covering both basic and advanced concepts all developed on Java 8, ensuring you're well-versed in both cutting-edge technologies and established practices.\n\n\nKey Learning Objectives\nJava Fundamentals: Master core Java concepts, including multi-threading, Lambdas, Collections framework, and file handling.\nHibernate: Explore Hibernate, learn to build applications using JSP and Hibernate, and perform CRUD operations.\nSpring Framework: Dive into the Spring framework, covering Inversion of Control, Dependency Injection, and more.\nSpring Boot: Gain in-depth knowledge of Spring Boot, covering migrations, security integration, Thymeleaf tags, and Restful API implementation.\nJavaScript Basics: Understand essential JavaScript concepts, including objects, loops, decision-making, array methods, and asynchronous JavaScript.\nReact: Setting up React JS, Material ui with React, User management with react, Making HTTP GET call with axios, Local server, CORS and Proxy in React, Login functionality, Albums use case in React, token handling and local storage with react, Dynamic menus and updated registration page, Swagger implementation using React, Upload photos onto the Albums, Props, useEffect and Async, Albums Show page, Add, Edit, Delete functionality, Show Photos using Albums API.\n\n\nCourse Features\nUnderstand the end-to-end process of building web forms with JSP and Servlets.\nAcquire a strong foundation in object-oriented programming, covering core concepts, method parameters, return types, arrays, collections, and debugging.\nImplement sessions in JSP for efficient web application management.\nApply a wide range of concepts to projects, allowing you to practice and reinforce your new skills.\n\n\nWhy Choose This Course?\nComprehensive Content: Covering essential concepts, tools, functions, and topics required for Java Developers in the web application development process.\nUnique Teaching Style: Experience a unique and easy-to-understand teaching approach that caters to various learning styles.\nComprehensive Learning: From theory to practice, from legacy to cutting-edge, our curriculum leaves no stone unturned, ensuring you emerge as a well-rounded, versatile developer.\nHands-On Approach: Learn by doing with a hands-on approach that lets you practice and reinforce your learning.\nCareer Booster: In today's competitive landscape, mastering Full Stack Java Development isn't just an advantage — it's a necessity. With our course, you'll unlock doors to exciting career opportunities and pave your path to success.\n\n\nWhy Learn Full Stack Java Development?\nIn today's digital era, where web applications drive businesses, full-stack Java Developers are in high demand. Mastering Full Stack Java Development empowers you to create dynamic and static web content, offering a skill set that is crucial in the ever-evolving IT landscape.\n\n\nAbout the Instructor\nOur experienced instructor, with over 8 years of teaching IT to 200,000+ students, is also a seasoned web application developer. His unique teaching style ensures that you not only grasp the concepts but also enjoy the learning process.\n\n\nEnroll Risk-Free\nStill hesitating? Rest easy with our No Question Asked - Money Back Guarantee!\n\n\nIf you're not satisfied within the first 30 days, we'll refund your investment — no strings attached. Your journey to mastery begins with a single step — Enroll Today, Transform Tomorrow.\n\n\nWith our easy-to-follow curriculum, you'll be amazed at how quickly you can master Java, Spring Boot REST, and JavaScript. Remember, practice makes perfect, and your efforts will shape your success.\nDon't miss the opportunity to propel your career forward and unlock your full potential in the world of IT.\nEnroll today and become the architect of tomorrow's web. Your destiny awaits — seize it now!\nSee you on the course!",
      "target_audience": [
        "Java programmers seeking to enhance their skill set by delving into web application development.",
        "Aspiring developers aiming to specialize in web application creation.",
        "Professionals keen on expanding their expertise in Java development.",
        "Future developers of web applications.",
        "Individuals with a goal to efficiently build swift web applications using Java."
      ]
    },
    {
      "title": "The Complete Front-End Web Development Course",
      "url": "https://www.udemy.com/course/front-end-web-development/",
      "bio": "Get started as a front-end web developer using HTML, CSS, JavaScript, jQuery, and Bootstrap!",
      "objectives": [
        "Build a simple HTML text site",
        "Style web pages using CSS",
        "Program websites with JavaScript",
        "Build a Pipboy using Bootstrap",
        "Build and publish a Google Chrome Extension"
      ],
      "course_content": {
        "Welcome to the Course!": [
          "Introduction to the course",
          "Atom setup"
        ],
        "Web Development Basics - HTML": [
          "HTML document structure",
          "HTML elements - div and span",
          "HTML elements - i, b, p, and a",
          "HTML elements - ul, li, and ol",
          "HTML elements - header and footer",
          "HTML elements - section, main, and article",
          "HTML elements - h1-h6 and aside",
          "HTML tables",
          "Project #1 - HTML text site"
        ],
        "Advanced HTML Concepts": [
          "Images",
          "Forms",
          "Inputs",
          "Checkboxes",
          "Radio buttons",
          "Select, option, and buttons",
          "HTML5 videos",
          "HTML5 audio",
          "Doctypes",
          "Meta tags"
        ],
        "Introduction to Cascading Style Sheets (CSS)": [
          "Targeting color and background",
          "Element specificity",
          "ID targeting, margin, and border",
          "Padding, margin, and float",
          "Max-width and background-image",
          "Switching over to an IDE",
          "Font weight, style, and family",
          "Text decorations",
          "Text spacing",
          "Text decoration modification",
          "Text shadow"
        ],
        "Advanced CSS": [
          "Pseudo-states",
          "Border radius",
          "Positions",
          "Pseudo-elements",
          "Z-index",
          "Viewpoint width and height, overflowing content",
          "Transition property"
        ],
        "JavaScript for Beginners": [
          "Intro to JavaScript",
          "Alerts and console logging",
          "Integers, strings, and variables",
          "Undefined variables and modifying values of variables",
          "Boolean operators",
          "Comparing values",
          "If statements",
          "For loops",
          "Defining functions",
          "Event handling",
          "Setting an elements innerHTML"
        ],
        "More JavaScript Concepts": [
          "Arrays pt.1",
          "Arrays pt.2",
          "Arrays pt.3",
          "Textareas and getting the value of inputs",
          "Functions - parameters and return values",
          "Multiple parameters in functions",
          "Flexible function parameters",
          "Exercise - find the missing number",
          "Exercise solution",
          "Classes explained",
          "Class constructor, instance variables, and static variables",
          "Extending classes"
        ],
        "Getting Started with jQuery": [
          "jQuery setup",
          "Targeting elements",
          "Event handling",
          "Dropdown menus",
          "Making our dropdown disappear",
          "Multiple targets, events, and attr method",
          "Prepend, append, and html",
          "preventDefault",
          "event.which and switch properties",
          "Custom context menu, pageY, and pageX",
          "is method"
        ],
        "More jQuery": [
          "Writing our own version of jQuery",
          "Find method",
          "First and last",
          "Focusin and focusout",
          "Contains, is, and hasClass",
          "Each method",
          "Callbacks",
          "CSS"
        ],
        "Bootstrap Basics": [
          "Bootstrap setup",
          "Navbar pt.1",
          "Navbar pt.2",
          "Forms pt.1",
          "Forms pt.2",
          "Buttons"
        ]
      },
      "requirements": [
        "No previous development experience required",
        "Access to various open-source (free) software."
      ],
      "description": "If you would like to learn web development and get a job in the tech industry, you are going to LOVE this course! Learn HTML, CSS, JavaScript, Bootstrap and more with over 15 hours of HD video tutorials! This course was designed to be extremely beginner friendly. We will begin with the very basics of HTML and build a simple web page. By the end of this course, you will be able to develop and publish your very own Google Chrome extension! In this course we will focus on coding exercises and projects. Your time will not be wasted reviewing unnecessarily long PowerPoint presentations. Upon completing this course, you will have a solid portfolio of development projects to show potential employers!\n\n\n3 Coding Projects in the course:\n• Simple text site - We will use what we learned in the HTML sections to\ncreate a simple text site. This project will help you learn HTML structure\nand the essential elements.\n• Fallout inspired Pip-Boy - We will take what we learned in the CSS and\nBootstrap sections of the course to code a Pip-Boy from the game\nFallout. This project will help you learn the design elements of modern\nweb development.\n• Google Chrome extension - We will finish the course by programming a\nJavaScript based Google Chrome extension. This project will help you\nunderstand the logical parts of web development.\n\n\nTopics covered in the course:\n• Web development basics with HTML\n• Cascading Style Sheets (CSS)\n• JavaScript programming\n• jQuery JavaScript library\n• Bootstrap framework\n\n\nStill not sold? Check out a few of the awesome reviews this course has received from customers:\n• \"Excellent course! Highly recommend it! Provides great hands-on experience with web development.“\n• \"I really like how when the author makes a mistake he takes the time to show us how he is wrong and corrects it rather than editing it out of the video. Very easy to follow and informative course!“\n• \"I am really enjoying the experience of learning a new skill. I used to believe that web design was way too complicated for me to learn but so far in this course I have been keeping up and having fun.\"",
      "target_audience": [
        "Anyone who would like to learn front-end web development"
      ]
    },
    {
      "title": "JavaScript Pro: Mastering Advanced Concepts and Techniques",
      "url": "https://www.udemy.com/course/pro-javascript/",
      "bio": "Level Up Your JS. Covers latest syntax, design patterns, functional programming, browser APIS, OOP, Canvas, and more!",
      "objectives": [
        "Explore Advanced JavaScript Patterns and Practices: proxy objects, observers, generators, and more",
        "Apply Advanced Functional Programming Techniques: currying, composition, and more",
        "Understand Scope, Closures, and Hoisting",
        "Work with JavaScript APIs including Intersection Observers, Canvas, Web Sockets, and more",
        "Master the trickiest parts of JavaScript",
        "Learn the latest ES2021 & ES2022 features"
      ],
      "course_content": {
        "Introduction": [
          "Course Welcome & Introduction",
          "Join The Community!",
          "Curriculum Walkthrough",
          "Getting The Course Code",
          "Course Slides and Handouts",
          "IMPORTANT: About The Visual Studio Code Color Theme",
          "My Developer Environment"
        ],
        "Object Oriented JavaScript": [
          "Working With Plain Old JavaScript Objects",
          "Mixing Data & Functions With Objects",
          "Class Basics",
          "Constructors",
          "Practice Time: Bank Account",
          "Instance Methods",
          "Inheritance Basics",
          "The Super Keyword",
          "Static Properties",
          "Static Methods",
          "Use Cases For Static Methods",
          "Ebook Exercise",
          "ArrayUtils exercise",
          "Connect Four OO Exercise"
        ],
        "OOP: Newer Features in JavaScript": [
          "Getters",
          "Setters",
          "Practice Time: Getters and Setters",
          "Public Fields",
          "Private Fields",
          "Private Methods",
          "ES2022 Static Initialization Blocks",
          "Getters and Setters exercise",
          "Section Quiz"
        ],
        "The Mysterious Keyword \"This\"": [
          "Introducing This",
          "The Mystery of The Keyword This",
          "Global Objects and This",
          "The \"Left Of The Dot\" Rule",
          "This and Classes",
          "The Call Method",
          "The Apply Method",
          "The Bind Method",
          "Binding Arguments",
          "Bind With Event Listeners",
          "Bind With Timers",
          "Arrow Functions and This",
          "This Takeaways",
          "Buggy Code `this` Exercise",
          "Buggy Code `this` Timers Exercise"
        ],
        "OOP Under The Hood: Prototypes, New, & More!": [
          "OOP Under The Hood Intro",
          "The New Keyword",
          "Prototypes: Part 1",
          "Prototypes: Part 2",
          "Prototypes: Part 3",
          "The Prototype Chain",
          "Classes, Inheritance, & Prototypes",
          "__proto__ vs. prototype",
          "Useful Prototype Methods",
          "Section Quiz"
        ],
        "Asynchronous Code": [
          "Callbacks: Our Good Friend",
          "Callback Hell & The Pyramid of Doom",
          "The Basics of Promises",
          "Using .then() and .catch()",
          "Promise Chaining To Flatten Code",
          "Error Handling With Promises",
          "Async/Await Basics",
          "More on Async/Await",
          "Error Handling With Async Functions",
          "Async Patterns: Parallel Async Operations",
          "Async Patterns: Sequential Async Operations",
          "Async Patterns: Promise.all()",
          "Async Patterns: Promise.allSettled()",
          "Async Patterns: Promise.race()",
          "Building Our Own Promise Objects",
          "Promisifying Node's fs.readFile()",
          "Async Num Cards Exercise",
          "Section Quiz"
        ],
        "Latest JavaScript Features": [
          "Optional Chaining",
          "Nullish Coalescing",
          "Numeric Separators",
          "Array.prototype.at()",
          "String replaceAll()",
          "Logical OR Assignment ||=",
          "Logical AND Assignment &&=",
          "Nullish Coalescing Assignment ??=",
          "Promise.any()",
          "New OOP Features: Private Fields & Static Initialization Blocks",
          "Section Quiz"
        ],
        "The Tricky Parts of JavaScript": [
          "Working With Float Imprecision",
          "BigInt() and Really Large Numbers",
          "isNan() vs. Number.isNaN()",
          "Post and Pre Increment: ++x vs. x++",
          "Automatic Semicolon Insertion",
          "JavaScript Generator Functions",
          "When Are Generators Useful?",
          "The Incredibly Versatile Array.from() Method",
          "parseAndCheck Exercise",
          "Prefix and Postfix Exercise",
          "rangeGenerator Exercise",
          "Section Quiz"
        ],
        "The Tricky Parts: Scope & Closures": [
          "Recaping Var & Scope",
          "Recaping Let, Const, & Scope",
          "The Scope Chain",
          "Static Scope",
          "Hoisting",
          "IIFEs",
          "Closures: The Basics",
          "Closures: Another Example",
          "Closures: Factory Functions",
          "Closures: Event Listeners",
          "Closures: Loops",
          "Guessing Game Exercise",
          "Bank Account Exercise",
          "Special Add Exercise",
          "Section Quiz"
        ],
        "Timers: Debouncing, Throttling, & RequestAnimationFrame": [
          "setTimeout",
          "setInterval",
          "clearInterval",
          "clearTimeout",
          "Debouncing",
          "Writing a Fancy Debounce Function",
          "Throttling",
          "Building a Fancy Throttle Function",
          "requestAnimationFrame Basics",
          "requestAnimationFrame With Timestamps",
          "Scroll To Top Animation With RequestAnimationFrame",
          "Section Quiz"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge: familiarity with functions, loops, conditionals, etc."
      ],
      "description": "Transform your basic JavaScript knowledge into expert-level skills with this brand-new comprehensive course designed for those ready to take the next big leap in their programming career. If you've ever found yourself intimidated by JavaScript's more complex features or struggled to grasp its intricate concepts, this course is tailor-made for you.  If you've taken a few Udemy courses on JavaScript and don't know where to go next, this course is for you!\nThis course demystifies the 'scary' and tricky parts of JavaScript, guiding you through the intricate details and advanced aspects with ease. By the end of this journey, you'll not only understand these concepts but also skillfully apply them in real-world scenarios.\nKey Topics Covered:\nObject-Oriented Programming (OOP): SOLID design principles, prototypes, private class fields, etc.\nJavaScript Design Patterns: Proxy objects, module pattern, singleton pattern, observer pattern, mixin pattern, registry pattern, and others.\nAdvanced JavaScript APIs: IndexedDB, Geolocation, Web Sockets, Notifications API, Canvas, getUserMedia, and more.\n'this' Keyword Mastery: Deep dive into 'this', call, apply, and bind methods.\nAsynchronous Programming: Master promises, async/await, asynchronous design patterns, and write your own promise objects\nModern JavaScript Features: Optional chaining, nullish coalescing, logical assignment operators, and other ES2021 & ES2022 features\nTricky Parts of JavaScript: Tackle closures, float imprecision, BigInt, automatic semicolon insertion and a bunch more.\nFunctional Programming Techniques: Recursion, currying, composition, partial application, and more.\nWhether you're a self-taught programmer, a computer science student, or a professional developer looking to sharpen your JavaScript skills, this course will elevate your coding abilities, preparing you to handle advanced web development challenges with confidence and expertise.",
      "target_audience": [
        "Anyone looking to level up their JavaScript skills to a professional level"
      ]
    },
    {
      "title": "Amazon s3 Mastery - THE How-To' Guides For Amazon S3",
      "url": "https://www.udemy.com/course/amazon-s3-mastery/",
      "bio": "Amazon S3 & AWS are Easy Once You Know How. Follow My Step-By-Step Guides & Master Amazon S3 Quickly.",
      "objectives": [
        "Host a website on Amazon s3",
        "Create a secure s3 bucket and add files to it",
        "Prevent hotlinking (stealing bandwidth) of your Amazon s3 files",
        "Understand the pricing & costs of using Amazon s3 plus guesstimate your costs.",
        "Add Amazon s3 hosted videos to your WordPress or HTML websites that will securely play in ANY browser",
        "Navigate around the Amazon AWS management console like a pro",
        "Create an IAM user with admin permissions which will add extra layer of security to your s3 buckets",
        "Manage & encrypt your s3 files with all FREE tools",
        "Disguise or Mask s3 URL with cName"
      ],
      "course_content": {
        "Introduction to Amazon Web Services (AWS) & Amazon S3": [
          "What Is Amazon Web Services (AWS) & s3",
          "AWS & Amazon S3 Introduction"
        ],
        "Figuring Costs & Signing Up For AWS & Amazon S3": [
          "Amazon S3 Storage Classes",
          "Amazon s3 Pricing Demystified",
          "Amazon s3 Pricing Calculator",
          "Signing Up For Your Amazon S3 (AWS) Account - Time Saving Tips Included",
          "Signing Up For Amazon AWS & Related Costs"
        ],
        "The Amazon Web Services (AWS) Console & Buckets": [
          "What Is An Amazon S3 Bucket",
          "A Tour Of The Amazon Web Services (AWS) Management Console",
          "The AWS Console and S3 Buckets"
        ],
        "Security & The Identity Access Management (IAM) Service": [
          "Introduction To The Identity Access Management (IAM) Service",
          "IAM Account Settings",
          "IAM - Create Admin User",
          "IAM - Delete Root Access Keys (Security Status Section)",
          "IAM - Create Groups With Permissions",
          "IAM - Create Users & Add To Groups",
          "IAM - Activate (MFA) Multifactor Authentication (Security Status section)",
          "IAM - Add Billing Access To Admin User",
          "IAM - Create Custom Login URL",
          "IAM - Create User With Limited s3 Access",
          "IAM - Apply Single Bucket Access Policy (JSON)",
          "IAM - Manually Create & Apply Single Bucket Access Policy (Visual Editor)",
          "IAM - Test That The Single Bucket Access Policy Works",
          "Access Analyzer Part 1-What Is The Analyzer",
          "Access Analyzer Part 2-How To Use It",
          "Access Analyzer Part 3-Extra Features",
          "The Identity Access Management Service"
        ],
        "Third Party Tools - Cyberduck & Connecting To An IAM User Account": [
          "Cyberduck Introduction & Setup",
          "Cyberduck & File Management",
          "Cyberduck & Creating Expiring URLs",
          "Cyberduck Q&A"
        ],
        "Third Party Tools - CloudBerry Explorer For Amazon S3 (this is my favorite)": [
          "CloudBerry Explorer For s3 Introduction & Setup",
          "CloudBerry Explorer s3 & File Management",
          "CloudBerry Explorer s3 & Expiring URLs",
          "CloudBerry Labs Explorer Q&A"
        ],
        "Amazon Web Services (AWS) Management Console & Encryption": [
          "AWS Console & File Management",
          "AWS Console & File Encryption",
          "Lecture 24 Copy & Paste File as demonstrated in the video",
          "File Encryption Using The 3rd Party Tools",
          "AWS Console Q&A"
        ],
        "Streaming Amazon S3 Hosted Videos": [
          "How To Stream Amazon S3 Hosted Videos From Your Static HTML Website",
          "Streaming Amazon S3 Hosted Video From A WordPress Site"
        ],
        "Amazon S3 File Security, Deliverability, Sharing & Disguising": [
          "Secure s3 Hosted Download Links (Zip Files) & Images",
          "Share Buckets With Other Peoples AWS Accounts",
          "Mask s3 URL With cName",
          "Prevent Hotlinking Of Your s3 Files",
          "Lecture 39 Copy and Paste File as demonstrated in lecture 39"
        ],
        "Host Your Website On Amazon s3": [
          "How To Host HTML Site On Amazon S3"
        ]
      },
      "requirements": [
        "An Amazon(dot)com account is helpful but not mandatory. I walk you through the entire signup process in Lecture #4"
      ],
      "description": "Master the basics of properly setting up & securing your Amazon s3 account. Forget having to spend days researching outdated YouTube videos or going through nearly impossible to understand documents from the Amazon AWS 'Help' section.\nLearn how simple it is to host your website on s3.  Stream your s3 hosted videos without worrying about someone stealing them. Plus Much More!\nStop Struggling and Start SUCCEEDING with Amazon s3\nIn this course, you will learn the basics of setting up your Amazon AWS account the right way.\n*How To Use FREE 3rd Party Tools To Manage Your Amazon s3 Files - Mac or PC\n*Discover What A Bucket Policy Is & How To Put It To Use\n*Prevent Your Download Files From Getting Passed Around\n*Prevent People From Stealing Your Bandwidth (Hotlinking)\n*Fully Understand The Costs Related To Having An Amazon s3 Account\nAmazon s3 is or should be an important tool in your online business toolbox. The problem is the enormous learning curve you need to deal with in order to get any of the basic benefits like increasing site speed & security while decreasing the bandwidth costs.\nMy name is Steve Dougherty and I've been an s3 user since 2008. Over the years I've had many headaches due to the difficulty of locating answers to the many questions I had about my Amazon AWS s3 account.\nI eventually came up with the solutions, & in most cases I developed shortcuts along the way.\nI've taught 100's of people how to master the basics of Amazon s3.\nThe first Amazon s3 training course I created was back in 2009, shortly after I began mastering it myself. Over the years, Amazon s3 has changed, and I've developed even more tips & shortcuts to help cut that learning curve down to almost nothing.\nAs a result, you will not have to deal with the trial & error nor the headaches that I had to struggle with.\nThese 30+ lectures are 2024 fresh.\nI take pride in the quality of your training. So you will Not Hear Any 'UM-BUTS' OR 'BUT-UMS' in these videos. Part of my goal with your training is quality content and enjoyable delivery.\n\nIt doesn't matter how great the content is if you can't stand the audio.\nThis course is a series of over-the-shoulder style video screen captures that detail everything from introducing you to Amazon AWS & Amazon s3 and signing up for your free first year of AWS & Amazon s3, to securely hosting your website and streaming your videos from Amazon s3.\nYou'll discover tricks like how to create time-expiring URLs using FREE 3rd party tools that are shown to you step-by-step with no techie stone left unturned.\nUpon completion of this course, you'll be able to easily navigate through the otherwise confusing AWS management console. You'll know why and how to create additional users & groups and assign specific permissions (policies) to each of them.",
      "target_audience": [
        "Entrepreneurs, Online Business Owners & anyone wanting to economically & securely speed up the delivery of files they have online - videos, zip-files, PDFs & images.",
        "This Amazon s3 How To Video course is mainly for the novice s3 user but I've included several tips and shortcuts that can benefit the intermediate s3 user.",
        "If you are an advanced Amazon s3 user or looking for a course to pass the AWS Certification exam then this is NOT for you."
      ]
    },
    {
      "title": "HTML5 & CSS3 Complete Course: Build Websites like a Pro",
      "url": "https://www.udemy.com/course/html5-css-fundamentals/",
      "bio": "Learn how to build websites from scratch with HTML and CSS in a course designed to take you from beginner to expert",
      "objectives": [
        "Learn how to design quality websites using HTML and CSS",
        "Learn the fundamentals of coding in CSS and how to style websites beautifully",
        "Learn how to carve out a career in frontend website development and the necessary skills to learn to continue on this path",
        "Learn how to create customizable forms in HTML5",
        "Learn how to include multimedia in your web pages (audio, video, images)",
        "Get ready for a rewarding career in web development, where you can potentially make up to $140,000 annually by working with the top companies in the industry",
        "Gather enough knowledge of the language to become an expert in website design, creating attractive websites to showcase your design prowess"
      ],
      "course_content": {
        "Introduction to HTLM5 & Setting things up": [
          "Introduction to HTML5",
          "Features of HTML5",
          "Benefits of using HTML5",
          "Where and how is HTML5 used?",
          "HTML5 editors",
          "Downloading Visual Studio Code",
          "Course Materials"
        ],
        "Structure of an HTML5 file": [
          "What are HTML tags?",
          "Structure of an HTML5 file",
          "File and folder structure",
          "How to create an HTML5 file?"
        ],
        "HTML5 basic building blocks": [
          "Heading Tags in HTML",
          "HTML5 Quotation and Citation tags",
          "Commenting out code in HTML5",
          "HTML5 attributes",
          "How to style in HTML5"
        ],
        "Exploring HTML5 tags": [
          "What are anchor tags?",
          "What are image tags?",
          "What are paragraph tags?",
          "What are break tags?",
          "What are table tags?",
          "List Tags",
          "Video Tag",
          "Audio Tag"
        ],
        "Building a Form from Scratch": [
          "Form tags",
          "Input Types",
          "Input attributes (size, read-only, disabled)",
          "Additional input attributes (Min, max, multiple, and placeholder)",
          "Required Inputs"
        ],
        "Block and Inline Elements": [
          "Introduction",
          "Examining Block and Inline Elements"
        ],
        "Conclusion (HTML Part)": [
          "Conclusion"
        ],
        "Introduction to CSS3": [
          "Introduction to CSS3",
          "Syntax of CSS3",
          "Uses of CSS3",
          "Types of CSS3",
          "Selectors & Colors in CSS3"
        ],
        "Basics Properties of CSS3": [
          "Background",
          "Borders",
          "Outline",
          "Height and width",
          "Margin and padding"
        ],
        "Typography Properties of CSS3": [
          "Text alignment",
          "Text decoration",
          "Text transform",
          "Text spacing",
          "Font family",
          "How to use font awesome icons"
        ]
      },
      "requirements": [
        "Readiness and passion for learning",
        "No programming experience needed",
        "Basic knowledge about the internet and the composition of websites is recommended but not necessary",
        "A good browser and stable internet connection are required to test the websites you build",
        "A modern code editor like Visual Studio Code, Atom, or Sublime Text is also helpful for writing and formatting the code"
      ],
      "description": "All new web developers must learn the basics of HTML and CSS, as they’re the basic languages required to build and style a website. While there are many ways to learn these languages, the best way is to learn from an experienced instructor with profound knowledge and experience coding in these languages.\nThis course will show you how to code in HTML and CSS from the ground up, starting from the absolute fundamentals to the advanced topics. It doesn’t matter if you’re a beginner trying to learn from scratch or an experienced coder looking to brush up your knowledge, you’ll always find something useful in this course.\nYou’ll begin by learning the components of HTML, including its lists, tables, URLs, hyperlinks, and many other important aspects of the language. Also, you’ll learn how to put all of them together to create a structure for your website to style with CSS.\nThen, you’ll learn the fundamentals of CSS like selectors, dimensions, box models, lists, texts, fonts, tables, and other essentials. With basic knowledge of both languages, you can confidently style the HTML structures you created earlier to make fully-fledged websites.\nWith web developers making up to $140,000 annually, a course in HTML and CSS might be the most rewarding thing you'll do this year. After the course, you'll get ideas of what languages to learn in addition to your current knowledge to get enough skills to be employable.",
      "target_audience": [
        "Beginners looking to start their foray into website development and design using the most basic languages; HTML and CSS",
        "Experienced website designers who need a reminder of some important concepts or need to keep their skills up to date with the introduction of new HTML and CSS coding standards",
        "Aspiring full-stack engineers with knowledge of backend languages like PHP or Nodejs, looking to add web development to their skillset",
        "Anyone interested in learning about the science behind websites and the magic that goes into creating exciting sites on the web",
        "Students who want to be employable",
        "Individuals interested in acquiring this essential skill set",
        "Marketing Designers",
        "Graphic and Digital Designers",
        "Startup Employees",
        "Web Designers",
        "Content Specialists"
      ]
    },
    {
      "title": "Learn and Understand D3.js for Data Visualization",
      "url": "https://www.udemy.com/course/learn-d3js-for-data-visualization/",
      "bio": "Dive deep under the hood of D3.js. Learn core concepts and build stunning data visualizations using D3 version 7",
      "objectives": [
        "Create stunning data visualizations using D3 and SVG",
        "Understand selections to manipulate the DOM using D3",
        "Learn about layouts to build various charts and graphs",
        "Add transitions and animations to your graphs for a more interesting user experience",
        "Use scales to help make your visuals work on any browser or device.",
        "Understand the enter and exist modes in D3",
        "Create responsive charts and graphs"
      ],
      "course_content": {
        "Overview": [
          "Overview",
          "Preparing a Local Server",
          "Understanding D3 & Data Visualization"
        ],
        "Understanding SVG": [
          "What is SVG?",
          "Creating SVG images",
          "Basic SVG Shapes",
          "SVG Paths"
        ],
        "Fundamentals": [
          "Adding D3",
          "D3 Packages",
          "Selections",
          "Appending Elements",
          "Transformation Methods",
          "Classes and Styles",
          "Joining Data",
          "The Enter Selection",
          "The Exit Selection",
          "Displaying Data",
          "Enter, Update, and Exit",
          "The Update Pattern",
          "JSON Requests",
          "CSV Requests"
        ],
        "Drawing A Scatterplot": [
          "First Steps",
          "Drawing the Image",
          "Adding Margins",
          "Accessor Functions",
          "Understanding Scales",
          "Writing Scales",
          "Applying Scales to Visualizations",
          "Refining Scales",
          "Adding an Axis",
          "Refining the x-axis",
          "The y-axis",
          "Flipping the y-axis",
          "Refining the Axis Ticks",
          "Summary"
        ],
        "Scales": [
          "Continuous vs. Discrete",
          "The scaleLinear() scale",
          "Introduction to Heatmaps",
          "Drawing the Heatmap",
          "Colors with a Linear Scale",
          "The scaleQuantize() Scale",
          "The scaleQuantile() Scale",
          "The scaleThreshold() Scale",
          "Quantize vs. Quantile vs. Thresholdv",
          "Color Scales",
          "Understanding the Log Scale",
          "The scaleLog() Scale",
          "Summary"
        ],
        "Animations & Interactivity": [
          "Introduction to Animations & Interactivity",
          "What is a histogram?",
          "Preparing the Histogram",
          "Understanding the Problem",
          "Creating Bins",
          "Histogram Finishing Touches",
          "Changing Metrics with Events",
          "Updating the Chart",
          "Transitions",
          "Understanding the Problem",
          "Fixing the Transition",
          "Fixing the Exit Transition",
          "Tweaking the Bars and Labels",
          "Adding the Mean",
          "Adding a Tooltip",
          "Mouse Events",
          "Formatting",
          "Understanding the Voronoi Diagram",
          "Creating a Voronoi Diagram",
          "Fixing the Voronoi Diagram"
        ],
        "Even More Charts!": [
          "Even More Charts",
          "Preparing the Line Chart",
          "Time Scales & Parsing",
          "Line Generator",
          "Adding an Axis",
          "Preparing the Tooltip",
          "Understanding Bisectors",
          "Custom Bisectors",
          "Finishing the Tooltip",
          "Getting Started with Pie Charts",
          "Drawing Arcs",
          "Understanding Ordinal Scales",
          "Using Ordinal Scales",
          "Adding Labels",
          "Fixing the Pie Chart",
          "Preparing the Stacked Bar Chart",
          "The Stack Function",
          "Band Scales",
          "Drawing the Stacked Bars",
          "Drawing the Axis",
          "Finishing Touches"
        ],
        "Conclusion": [
          "Sketching",
          "Responsive Charts",
          "Conclusion"
        ]
      },
      "requirements": [
        "Have a basic understanding of HTML, CSS and JavaScript",
        "A text editor of your choice",
        "Knowledge of SVG would be beneficial, but not required."
      ],
      "description": "*** This course has been updated to use the latest version of D3 - Version 7.x ****\n\nHello! Welcome to the D3.js development course. This is the most comprehensive and effective course on D3 around. This is the only course you'll ever need to learn D3.\nThe goal of this course is to not just teach you D3 (v7.x), but help you understand D3. D3 is a JavaScript library that allows you to build data visualizations easily. The library is absolutely massive and you can create any kind of data visualization you can imagine.  With such a massive library, it can be difficult to grasp a lot of the concepts.\nBy the end of this course, you'll be more than comfortable using D3 and build awesome visualizations. Here is just some of the things you can expect to learn.\nLearn about D3 selections which are used to select and manipulate elements on your document.\nGet a basic overview of SVG. This is something courses skip over. By having a solid foundation of SVG, then you can make more optimal decisions for your visualizations.\nLearn about scales which help you by converting your data into values that can be used to properly display your data. We'll learn about the linear, quantize, quantile, threshold, log, color, and a whole lot of other scales in this course.\nBuilds various graphs such as bar graphs, pie charts, scatter plots, histograms, line charts, and so much more!\nAdd interactivity and animation to your graphs to make them more interesting and appealing to the user.\nBuilds responsive graphs. Your visualizations will work on any device with a few simple tricks.\nThis course focuses on the latest version of D3. (version 7.x)\nThis is just some of the topics that will be covered. If you want to take ONE COURSE to learn everything you need to know to be successful D3 developer, take this course.",
      "target_audience": [
        "Journalists who would like to tell a story through data visualization.",
        "Developers who wish to take their skills and profit to the next level.",
        "Anyone who truly wants to understand the D3 core and create data visualizations.",
        "Anyone new to data visualization and would like to know the best practices and approaches to projects.",
        "Anyone wanting to learn about more advanced topics to become a better developer."
      ]
    },
    {
      "title": "CSS & JavaScript - Certification Course for Beginners",
      "url": "https://www.udemy.com/course/css-javascript-certification-course-for-beginners/",
      "bio": "Learn how to Add Dynamic Client-Side Functions to your Web Pages using CSS & JavaScript",
      "objectives": [
        "Parts of a CSS Rule",
        "Types of CSS Rules",
        "CSS Classes, Spans, IDs, Divisions",
        "CSS Margins, Padding, Text Properties, Font Properties, Borders",
        "CSS Backgrounds, Transparency",
        "CSS Positioning - Static, Relative, Absolute, Fixed, Float, Clear",
        "CSS Link Styling, Z-Index, Tables",
        "Responsive Web Page Design using CSS",
        "JavaScript Placement",
        "JavaScript Variables, Constants, Arithmetic Operators",
        "Operator Precedence, Data Types, Objects",
        "JavaScript Functions, Arrays, Array Attributes",
        "JavaScript Loops (For, For-In, While, Do-While)"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to the CSS & JavaScript – Certification Course for Beginners\n\nThis two part series provides a detailed overview of the fundamentals of coding using CSS and JavaScript. Students will learn how to create responsive web pages using project based learning. The CSS section explores almost every aspect of CSS development. This includes:\nWorking with IDs, Classes, and Divisions.\nCSS Text Properties, Borders and Backgrounds\nStyling Images and Links\nCSS Display Properties\nElement Positioning Techniques for fully Responsive layouts\nNavigation Rules\nPage Elements\nMuch More…\nIn Section two, students learn to integrate JavaScript components into their web pages for dynamic client-side functionality. We start by exploring basic concepts such as JavaScript placement and Output. From there we move into Variables, Arithmetic Operators, Objects, and Data Types. The course includes many other important topics, such as:\n\nJS Min, Max Functions\nSpecial Characters\nMath Functions\nArrays\nChanging and Deleting Elements\nConditional Statements\nComparisons\nBooleans\nLoops (For, For-In, While, Do-While)\nEvents\nFunctions\nWhat you'll learn - Overview\nParts of a CSS Rule\nTypes of CSS Rules\nCSS Classes, Spans, IDs, Divisions\nCSS Margins, Padding, Text Properties, Font Properties, Borders\nCSS Backgrounds, Transparency\nCSS Positioning - Static, Relative, Absolute, Fixed, Float, Clear\nCSS Link Styling, Z-Index, Tables\nResponsive Web Page Design using CSS\nJavaScript Placement\nJavaScript Variables, Constants, Arithmetic Operators\nOperator Precedence, Data Types, Objects\nJavaScript Functions, Arrays, Array Attributes\nJavaScript Loops (For, For-In, While, Do-While)\nStudents will also have an opportunity to solidify their learning through exciting hands-on projects.\nSo, don’t wait another second. Enrol in this exciting new course today!",
      "target_audience": [
        "Students interested in learning the foundations of CSS & JavaScript Coding",
        "Students interested in adding dynamic client-side functions to Web Pages",
        "Beginner Web Developers looking to improve their Skills"
      ]
    },
    {
      "title": "Learn JavaScript: Full-Stack from Scratch",
      "url": "https://www.udemy.com/course/learn-javascript-full-stack-from-scratch/",
      "bio": "Understand the JavaScript language itself, Node.js, MongoDB, The Web Browser and More To Create Meaningful Applications",
      "objectives": [
        "The JavaScript language itself",
        "How to control a database (MongoDB) with JavaScript",
        "How to control the Web Browser with JavaScript",
        "How to implement user registration, log-in, log-out & user generated content",
        "How to setup a server by using Node JS and Express"
      ],
      "course_content": {
        "Welcome To The Course!": [
          "Where Do We Begin?"
        ],
        "The 10 Days of JavaScript: The Language Itself": [
          "Getting Started",
          "Functions",
          "Objects",
          "Arrays",
          "Arrays Exercise",
          "Making Decisions",
          "Higher-Order Functions",
          "Returning vs Mutating",
          "Scope & Context (Part 1)",
          "Scope & Context (Part 2)",
          "Miscellaneous Info (Part 1)",
          "Miscellaneous Info (Part 2)",
          "Building To-Do App (Part 1)",
          "Building To-Do App (Part 2)"
        ],
        "Server Basics": [
          "Why Do We Need a Server?",
          "Node.js Intro",
          "Text Editor Software",
          "Our First Basic Server",
          "Express Intro (Part 1)",
          "Express Intro (Part 2)",
          "What's Next? (Big Picture)"
        ],
        "Database Basics": [
          "First Taste of a Database",
          "Note About The Next Video Lesson",
          "Optional: Host Your Database Locally On Your Computer",
          "CRUD: Actually Working With A Database",
          "Initial Setup for App #1",
          "Save Time: Automatic Node App Restarts",
          "Note About Concept In The Next Video Lesson",
          "Connecting Node App to Database",
          "Solution to Common Database Problem",
          "Installing NPM Packages Without Stopping Server/App",
          "Reading Data from a Database",
          "Updating a Database Item (Part 1)",
          "Updating a Database Item (Part 2)",
          "Deleting a Database Item",
          "Create New Item Without Page Reload",
          "Client-Side Rendering",
          "What About Security?",
          "Note About Front-End Security",
          "Pushing Our App Onto The Internet"
        ],
        "Starting Our Complex App (App #2)": [
          "What's Next?",
          "Optional: Finished Product Working Example",
          "Let's Begin App #2",
          "Always Have The Current Year In The Footer",
          "Important Note About Package Versions To Save You Frustration",
          "What Is A Router?",
          "What Is A Controller?",
          "Security Note",
          "What Is A Model?",
          "Note About Arrow Functions & The \"this\" Keyword",
          "Adding Validation To Our Model",
          "Quick Misc. Clean Up",
          "Quick Note About Connecting to Database",
          "Optional: Hosting Your Database Locally",
          "Connecting To Database In a Reusable Fashion",
          "Best Practice Time Out: Environment Variables",
          "Quick Note",
          "Letting Users Log In",
          "What is a Promise? (Part 1)",
          "What is a Promise? (Part 2)",
          "Running Multiple Promises Efficiently When Order Doesn't Matter",
          "Hashing User Passwords",
          "How Can We \"Identify\" or \"Trust\" a Request?",
          "Session Security",
          "Understanding Sessions",
          "Letting Users Logout",
          "Adding Flash Messages",
          "User Registration Improvements (Part 1)",
          "User Registration Improvements (Part 2)",
          "Adding User Profile Photos"
        ],
        "User Created Posts": [
          "Letting Users Create Posts (Part 1)",
          "Letting Users Create Posts (Part 2)",
          "ObjectId Instead of ObjectID",
          "Post Model (Part 1)",
          "Post Model (Part 2)",
          "Don't Forget The New Keyword With ObjectId",
          "Viewing a Post (Part 1)",
          "Viewing a Post (Part 2)",
          "Performing a Lookup in MongoDB (Part 1)",
          "Performing a Lookup in MongoDB (Part 2)",
          "User Profile Screen",
          "View Posts by Author",
          "Is the Current Visitor the Owner of the Post?",
          "The \"Edit\" Screen for a Post",
          "Updating Posts in Database (Part 1)",
          "Updating Posts in Database (Part 2)",
          "Miscellaneous Improvements",
          "Markdown: Safe User Generated HTML",
          "Make This Quick Edit To Your Code",
          "Let Users Delete a Post"
        ],
        "Live Search Feature": [
          "Staying Organized: Front-End JavaScript",
          "Important Note For Windows Users",
          "Showing and Hiding Search Overlay",
          "Responding to Key Press Events",
          "Back-End Aspect of Search",
          "How To Create DB Indexes From Within Node.js Code",
          "Generating HTML for Search Results (Part 1)",
          "Generating HTML for Search Results (Part 2)",
          "Fixing The Month for Post Dates in Search Results",
          "Sanitizing User Generated HTML on the Front-End"
        ],
        "Letting Users Follow Each Other": [
          "Letting Users Follow Each Other",
          "Saving a \"Follow\" Action Into Our Database",
          "Stop Following a User (Part 1)",
          "Stop Following a User (Part 2)",
          "Profile Followers Screen (Part 1)",
          "Profile Followers Screen (Part 2)",
          "Following Screen (Part 1)",
          "Following Screen (Part 2)",
          "Homepage Feed (Posts From Those You Follow)"
        ],
        "Live Chat (Socket.IO)": [
          "Beginning Chat Feature",
          "Socket.IO (Part 1)",
          "Socket.IO (Part 2)",
          "Note About Socket.io In The Next Lesson",
          "Finishing Chat (Part 1)",
          "Finishing Chat (Part 2)",
          "Quick Misc. Feature: Dynamic Title Tag"
        ],
        "Live Validation for Registration Form": [
          "Live Form Validation (Part 1)",
          "Live Form Validation (Part 2)",
          "Live Form Validation (Part 3)",
          "Live Form Validation (Part 4)"
        ]
      },
      "requirements": [
        "No prerequisite knowledge required; the only thing you need is a computer (that you are allowed to install software on) and an internet connection."
      ],
      "description": "Learn the incredibly popular and in demand JavaScript language. This course makes no assumptions of prior computer programming experience. We begin with the very basics and slowly but surely work our way up to writing JavaScript code to power every aspect of an application.\nThere are countless JavaScript courses in the world; here's what makes this one unique:\nA strong emphasis on the \"why\" and not just the \"how\"\nAs few assumptions as possible; it's a pet peeve of mine when instructors assume I know something I don't\nAs few \"just download my existing project to get you up and running\" moments as possible. It's another pet peeve of mine when instructors have you use an existing solution that just \"automagically\" works and you miss a potential learning experience of setting it up yourself.  We do copy-and-paste HTML templates (since the focus of the course is not about HTML) but aside from that I explain things from the ground up.\nHere's what we'll learn in the course:\nThe JavaScript language itself\nThe Web Browser Environment\nThe Node.js environment\nThe MongoDB environment\nThe Express framework for creating servers\nUser registration & user-generated content\nAuthentication (both stateful with sessions and stateless with JSON Web Tokens)\n... and much more!\nI encourage you to watch the freely available first lesson titled \"Where Do We Begin?\" to get a better feel for the course.\nThis course may be brand new, but this isn’t my first time teaching. I’ve led training sessions for Fortune 500 companies and I’ve already helped over 65,000 people on Udemy and received the following feedback:\n\"Brad definitely has some of the best techniques to embed the lesson into your mind… hands down these are the best tutorials I have had the opportunity to view.\"\n\"Presentation is concise without being tedious… you honestly feel that you have a thorough understanding of the subject.\"\n\"…[Brad] explained the process. Not memorize this or that, he explained the process. If you're looking to take a course to understand the foundations of creating websites, look no further.\"\nBecome highly valuable and relevant to the companies that are hiring JavaScript developers; in one convenient place alongside one instructor. If you're ready to begin coding your own applications from the ground up - I'll see you on the inside!",
      "target_audience": [
        "Anyone who might be interested in starting a career in computer programming (no experience required)."
      ]
    },
    {
      "title": "Modern JavaScript From The Beginning 2.0 (2024)",
      "url": "https://www.udemy.com/course/modern-javascript-from-the-beginning/",
      "bio": "A 36-hour master course to take you from beginner to advanced JavaScript",
      "objectives": [
        "Learn the Fundamentals (Variables, Loops, Functions, etc)",
        "Learn How JavaScript Works (Execution Context, Call Stack, Async JS)",
        "Master the Document Object Model & Events (Interactivity)",
        "Asynchronous JavaScript (Callbacks, Promises, Fetch, Ajax)",
        "OOP (Constructors, Prototypes, Classes)",
        "Modern Tooling & Workflow (Webpack, Babel, File Structure, NPM, Plugins & Loaders)",
        "Full Stack Project With Webpack, Node, Express & MongoDB",
        "5 Real World Projects & 10+ Mini-Projects"
      ],
      "course_content": {
        "Intro & Getting Started": [
          "Welcome To The Course",
          "Course Outline",
          "What Is JavaScript?",
          "Tools & Setup",
          "Running JavaScript In The Browser",
          "Course Links"
        ],
        "Variables, Data Types & More": [
          "Section Intro",
          "The Sandbox Files",
          "Using The Console",
          "Comments & Shortcuts",
          "Variables & Constants",
          "Data Types",
          "Primitive vs Reference Types",
          "Type Conversion",
          "Operators",
          "Type Coercion",
          "Working With Strings",
          "Capitalize Challenge",
          "Working With Numbers",
          "The Math Object",
          "Number Challenge",
          "Dates & Times",
          "Date Methods & DateTimeFormat API"
        ],
        "Arrays & Objects": [
          "Section Intro",
          "Creating Arrays",
          "Basic Array Methods",
          "Nesting, Concat & Spread Operator",
          "Array Challenge",
          "Object Literals",
          "Object Spread Operator & Methods",
          "Destructuring & Naming",
          "JSON Intro",
          "Object Challenge"
        ],
        "Functions, Scope & Execution Context": [
          "Section Intro",
          "Function Basics",
          "More on Params & Arguments",
          "Global & Function Scope",
          "Block Scope",
          "Nested Scope",
          "Declaration vs Expression",
          "Arrow Functions",
          "Immediately Invoked Function Expressions",
          "Function Challenges",
          "Execution Context",
          "Execution Context In Action",
          "The Call Stack"
        ],
        "Logic & Control Flow": [
          "Section Intro",
          "If Statements",
          "If Else & Nesting",
          "Switches",
          "Calculator Challenge",
          "Truthy & Falsy",
          "Logical Operators",
          "Logical Assignment",
          "Ternary Operator"
        ],
        "Loops, Iteration & Array Methods": [
          "Section Intro",
          "For Loop",
          "Break & Continue",
          "While & Do While Loops",
          "FizzBuzz Challenge",
          "For Of Loop",
          "For In Loop",
          "Array.forEach",
          "Array.filter",
          "Array.map",
          "Array.reduce",
          "Array Method Challenges"
        ],
        "Document Object Model": [
          "Section Intro",
          "Intro To The DOM",
          "Document Element Properties",
          "DOM Selectors - Single Elements",
          "DOM Selectors - Multiple Elements",
          "Traversing The DOM - Elements",
          "Traversing The DOM - Nodes",
          "Create & Append Elements",
          "InnerHTML vs createElement()",
          "Refactor To Multiple Functions",
          "Insert Elements, Text & HTML",
          "Custom insertAfter Challenge",
          "Replace Elements",
          "Remove Elements",
          "Working With Styles & Classes"
        ],
        "Events": [
          "Section Intro",
          "Event Listeners",
          "Mouse Events",
          "The Event Object",
          "Keyboard Events & Key Properties",
          "KeyCode Mini-Project",
          "Input Events",
          "Form Submission & FormData Object",
          "Event Bubbling",
          "Event Delegation & Multiple Elements",
          "Page Loading & Window Events"
        ],
        "Shopping List Project": [
          "Shopping List - Project Intro",
          "Add Items To List",
          "Setting Up Git & GitHub (Optional)",
          "Remove & Clear Items",
          "Clear UI State",
          "Filter Items",
          "Local Storage Crash Course",
          "Add Item To Local Storage",
          "Display Items From Local Storage",
          "Remove Items From Local Storage",
          "Set Item To Edit",
          "Update & Reset State",
          "Prevent Duplicate Items",
          "Deploy To Netlify"
        ],
        "Asynchronous JavaScript": [
          "Section Intro",
          "Thread Of Execution",
          "How Async JavaScript Works",
          "setTimeout & clearTimeout",
          "setInterval & clearInterval",
          "Callbacks",
          "HTTP Request Crash Course",
          "DevTools Network Tab",
          "AJAX & XHR Object",
          "Joke Generator Project Challenge",
          "Callback Hell",
          "Promises",
          "Callback To Promise Refactor",
          "Promise Chaining",
          "Promises vs Callback Hell",
          "promise.all()"
        ]
      },
      "requirements": [
        "Basic HTML / CSS knowledge"
      ],
      "description": "This is a 36+ hour in-depth course that will take you from the absolute beginning of JavaScript, learning about data types, functions and loops to learning DOM manipulation, asynchronous JS with promises, async/await and much more. You will even learn how to write unit tests for algorithms. We go into how JavaScript works under the hood including execution context, the call stack, event loop, etc. We learn about Webpack tooling and how to create a modern development environment. At the end, we build a Node.js/Express API with a custom Webpack frontend.\n\n\nAll of the code in the learning modules will go into a folder called \"JavaScript Sandbox\". This is so we can keep things organized and you can always refer back to it for any code snippets that you may need. All of the final and starter code for the projects is included as well as links to the GitHub Repos.\n\n\nWHAT YOU WILL LEARN\n\n\nBasics & Fundamentals: Data types, let & const variables, functions, conditionals, loops, object literals, etc\nData Structures - Arrays, objects, maps, sets as well as custom data structures like stacks and queues\nDOM Manipulation - Selectors, traversing the DOM, show/hide, creating & removing elements, event listeners\nOOP - Constructor functions, prototypes, inheritance, classes, protected properties, getters/setters\nAsync JS - Ajax & XHR, Fetch API, callbacks, promises, async / await\nError Handling - Try...Catch, HTTP errors\nWeb & Browser APIs - Canvas, geolocation, audio/video, web animations API\nModules & Tooling - CommonJS & ES Modules, Webpack,  plugins, loaders, modern dev environment &  workflow\nUnit Testing Algorithms - Learn the Jest testing library and algorithms like palindromes and anagrams\nNode.js & Express - Learn about Node modules, NPM packages and build a REST API with Express & MongoDB\nFull Stack Development - We build an API with Express and a frontend with Webpack. No frontend frameworks!\nSo So Much More!\n\n\nCOURSE PROJECTS & MINI-PROJECTS\n\n\nShopping List\nFlix Movie App\nTracalorie OOP Project\nTracalorie Webpack Refactor\nChuck Norris Joke Generator\nRandomIdeas Full Stack APP - API & Frontend\nWebpack Starter Project\nKeycode Mini-Project\nRandom User Generator\nMusic Player\nVideo Player\nDrum Machine\nProfile Scroller\nPolling App\nJoke Generator\nBall Animation\nAnimated Clock\nTypicode Todos\nText To Speech",
      "target_audience": [
        "People that want to learn modern JavaScript from beginner to advanced including tooling and setting up a modern workflow"
      ]
    },
    {
      "title": "JavaScript Bootcamp - Build Real World Applications",
      "url": "https://www.udemy.com/course/the-ultimate-javascript-course-build-real-world-apps2018/",
      "bio": "JavaScript from basic to advanced level. Project - based JavaScript course. JavaScript ES6 guide. Including JSON & AJAX",
      "objectives": [
        "You will start from the JavaScript fundamentals and go to an advanced level",
        "You will get a deep understanding about how JavaScript works behind the scenes",
        "You will be able to check your knowledge using lots of coding challenges and quizzes",
        "You will learn how to manipulate on the web page using Document Object Model",
        "You will be able to understand the most advanced topics such as function constructors, prototypes, first-class functions, closures and much much more",
        "You will code and build the real-world application using object-oriented JavaScript and modular patterns",
        "You will be able to get 24/7 support from the instructors"
      ],
      "course_content": {
        "JavaScript Essentials": [
          "Introduction",
          "How to Watch Lectures in High Quality",
          "Section Introduction",
          "Download Source Code",
          "What Is JavaScript",
          "Setup",
          "How To Write JavaScript",
          "JavaScript Syntax",
          "Variables and Data Types - Part 1",
          "Variables and Data Types - Part 2",
          "Operators",
          "Comparison Operators",
          "Type Coercion",
          "Conditional Statements",
          "Else If Statement And Logical Operators",
          "Coding Task 1",
          "Coding Task 1 - Solution",
          "JavaScript Essentials"
        ],
        "From Basics To Intermediate JavaScript": [
          "Section Introduction",
          "Functions - Part 1",
          "Functions - Part 2",
          "Arrays - Part 1",
          "Arrays - Part 2",
          "Objects - Part 1",
          "Objects - Part 2",
          "Loops - Part 1",
          "Loops - Part 2",
          "Date Object",
          "Date Object - Digital Clock Project",
          "Coding Task 2",
          "Coding Task 2 - Solution",
          "Intermediate JavaScript"
        ],
        "JavaScript Behind The Scenes": [
          "Section Introduction",
          "JavaScript Behind The Scenes - Introduction",
          "Global Execution Context And Global Object",
          "Execution Context And Execution Stack",
          "Scope And Scope Chain",
          "Hoisting",
          "Objects VS Primitives",
          "The Special Keyword 'this'",
          "JavaScript Behind The Scenes"
        ],
        "Document Object Model (DOM)": [
          "Section Introduction",
          "DOM - Introduction",
          "Get Ready",
          "Get and Manipulate On Individual Element - Part 1",
          "Get and Manipulate On Individual Element - Part 2",
          "Get and Manipulate On Multiple Elements - Part 1",
          "Get and Manipulate On Multiple Elements - Part 2",
          "Get and Manipulate On Multiple Elements - Part 3",
          "DOM Styles",
          "DOM Styles And Classes",
          "Events - Part 1",
          "Events - Part 2",
          "Events - Part 3",
          "Get And Set Attributes",
          "DOM Navigation",
          "Creating Elements",
          "Project - Coding Task 3",
          "Project - Coding Task 3 - Solution",
          "Project - Edit And Delete Items - Part 1",
          "Project - Edit And Delete Items - Part 2",
          "Project - Hide Notes",
          "Project - Search Filter",
          "Document Object Model (DOM)"
        ],
        "Advanced JavaScript": [
          "Section Introduction",
          "Everything Is An Object",
          "Function Constructor",
          "Prototype - Object Function",
          "Function Constructors And Prototypes",
          "Object.create()",
          "First - Class Functions - Part 1",
          "First - Class Functions - Part 2",
          "Immediately Invoked Function Expression (IIFE)",
          "Closures",
          "call(), apply() and bind()",
          "Advanced JavaScript"
        ],
        "JSON & AJAX": [
          "JSON Introduction",
          "JSON & AJAX"
        ],
        "Project - The Quiz Application": [
          "Section Introduction",
          "Project Overview",
          "Get Ready",
          "Module Pattern",
          "Browser Local Storage",
          "Add Questions - Part 1",
          "Add Questions - Part 2",
          "Add Questions - Part 3",
          "Add Questions - Part 4",
          "Add Inputs Dynamically",
          "Create Question List",
          "Edit Questions",
          "Update Questions - Part 1",
          "Update Questions - Part 2",
          "Delete Questions",
          "Clear Question List",
          "Display Questions",
          "Display Progress",
          "Check Answer",
          "Instant Answer",
          "Proceed The Quiz",
          "Add Person",
          "Get Full Name",
          "Final Result",
          "Create Result List",
          "Delete Result",
          "Clear Results"
        ],
        "Next Generation JavaScript": [
          "Section Introduction",
          "Array Helpers - forEach()",
          "Array Helpers - map()",
          "Array Helpers - filter() / find()",
          "Array Helpers - every() / some()",
          "Array Helpers - reduce()",
          "let / const Variable Declarations",
          "Template Strings",
          "Arrow Functions - Part 1",
          "Arrow Functions - Part 2",
          "Arrays In ES6",
          "Default Parameters",
          "Spread Operator",
          "Rest Parameter",
          "Destructuring",
          "Map and Set",
          "Classes"
        ],
        "JavaScript Interview Questions": [
          "Section Introduction",
          "Interview Questions"
        ],
        "BONUS": [
          "Bonus Lecture: Check Out"
        ]
      },
      "requirements": [
        "No coding experience is required! We will start from very basics and take you to the advanced level!",
        "You just need a computer, web browser and code editor",
        "Basic knowledge of HTML and CSS will be a plus, but it is not mandatory!"
      ],
      "description": "THE COMPLETE JAVASCRIPT COURSE ON UDEMY!!!\nJOIN THE COMPLETE AND ADVANCED JAVASCRIPT TUTORIAL ON UDEMY!!!\nIf you want to start learning to program or you already have some basic knowledge, then you are in the right place. This course gives you a chance to take your knowledge to the next level. You will start from very basics and reach the most advanced level.\nLet's actually talk about what the course covers...\n***INCLUDED:***\nJavaScript Basics / Intermediate:\nYou will learn about the very basics of this language, like how to write JavaScript, what kind of syntax it has. What kind of data types JavaScript uses, functions, conditionals, objects, loops, etc. At the end of the section, you will be able to build your very first basic JavaScript application -- 'Digital Clock', followed by the coding task and quiz.\nJavaScript Behind The Scenes:\nIn this section, you will be able to learn how JavaScript works behind the scenes. If you want to be a real JavaScript developer then you definitely need to understand how the code actually works, how the JavaScript engine executes and runs the code under the hood. You will cover very important topics, such as the global execution context and global object, what is execution stack, scope, and scope chain, hoisting, the special keyword 'this' etc. At the end of the section, you will check your knowledge with a quiz.\nDocument Object Model (DOM):\nYou will learn how to manipulate individual and multiple elements, how to change the web page content, how to style the elements using JavaScript and much more. In this section, you will build your next project -- 'Note Manager', which will be more complex and interesting than the previous one.\nAdvanced JavaScript:\nThis is the section where you will feel confident in JavaScript because you will be able to learn and understand the most advanced concepts in JavaScript. You will cover the following topics: function constructors, prototypal inheritance, prototype chain, first-class functions, closures and much more...\nAdvanced JavaScript Project - Quiz Application:\nWhen you reach this point, you will be able to build the most advanced real-world application using pure JavaScript. You will learn how to write a real-world app using object-oriented JavaScript, you will be familiar with how to organize, structure and make your code safer using JavaScript Patterns.\nNext-Generation JavaScript:\nAt the end of the course, you will be able to get familiar with the latest updates of JavaScript. You will learn about the next version of JavaScript, ES6 or ECMAScript2015. You will cover the following topics: Get familiar with Array helpers, let/const block-level variable declarations, arrow functions, template strings, default parameters, spread operator, rest parameter, destructuring, classes and much much more...\nJavaScript Interview Questions:\nThe last section of the course will help you to get ready for your JavaScript interview. In this part, you will meet commonly asked JavaScript questions on the interviews and the relevant answers on them.\nTest your knowledge with lots of QUIZZES AND CODING TASKS!!!\n24/7 Support From The Instructors!!!\nJOIN US!",
      "target_audience": [
        "Student who wants to start learning JavaScript from scratch",
        "Student who has some knowledge in JavaScript and wants take it to the advanced level",
        "Student who is specialized in other programming languages and wants to get deep understanding in JavaScript",
        "Everyone who wants to learn and become a master in one of the most powerful programming language in the world"
      ]
    },
    {
      "title": "RxJs In Practice (with FREE E-Book)",
      "url": "https://www.udemy.com/course/rxjs-course/",
      "bio": "Learn numerous RxJs Operators, learn all RxJs and Reactive Programming core concepts via Practical Examples",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Learn the RxJs library via Practical Examples",
        "Become familiar with an extended subset of RxJs Operators",
        "Understand in detail the core notions of Reactive Programming",
        "Learn how to design and build Applications in Reactive style"
      ],
      "course_content": {
        "Introduction to RxJs": [
          "RxJs In Practice Course Helicopter View",
          "IMPORTANT - Recommended Software Versions",
          "The Typescript Jumpstart Ebook",
          "Environment Setup - Get the Lessons Code Up and Running",
          "Understanding RxJs - What are Streams?",
          "What is RxJs? What Problem Does it Solve?",
          "What is an RxJs Observable? A Simple Explanation",
          "3 Core RxJs Concepts - Errors, Completion and Subscriptions",
          "Learn How Observables Work Under the Hood, Build Your Own HTTP Observable"
        ],
        "Essential RxJs Operators + Reactive Design": [
          "What are RxJs Operators? Learn the Map Operator",
          "Building Components with RxJs - Imperative Design",
          "Building Components with RxJs - Reactive Design",
          "Sharing HTTP Responses with the shareReplay Operator",
          "RxJs Higher-Order Mapping Operators PDF",
          "Observable Concatenation - In-Depth Explanation",
          "Form Draft Pre-Save Example and the RxJs Filter Operator",
          "The RxJs concatMap Operator - In-Depth Explanation and Practical Example",
          "Understanding the merge Observable combination Strategy",
          "The RxJs mergeMap Operator - In-Depth Explanation",
          "The RxJs exhaustMap Operator - In-Depth Explanation",
          "Unsubscription In Detail - Implementing a Cancellable HTTP Observable",
          "Setting Up the Course Component",
          "Building a Search Typeahead - debounceTime and distinctUntilChanged Operators",
          "Finishing the Search Typeahead - The switchMap Operator"
        ],
        "RxJs Error Handling": [
          "RxJs Error Handling - PDF Guide",
          "RxJs Error Handling - The Catch and Replace Error Handling Strategy",
          "The Catch and Rethrow RxJs Error Handling Strategy and the finalize Operator",
          "The Retry RxJs Error Handling Strategy.screenflow",
          "The startWith RxJs Operator - Simplifying the Course Component",
          "RxJs Throttling vs Debouncing - Understand the Differences"
        ],
        "Building a RxJs Custom Operator": [
          "Implementing a Custom RxJs Operator - the Debug Operator",
          "The RxJs Debug Operator - Implementation Conclusion",
          "The RxJs forkJoin Operator - In-Depth Explanation and Practical Example"
        ],
        "RxJs Subjects and the Store Pattern": [
          "Subjects and Stores - New Section Kickoff",
          "What are RxJs Subjects? A Simple Explanation",
          "BehaviorSubject In Detail - When to Use it and Why?",
          "AsyncSubject and ReplaySubject - Learn the Differences",
          "Store Service Design - What Subject to Use?",
          "The Store Pattern - Loading Initial Data, Selector Methods, Consuming Data",
          "BehaviorSubject Store - Example of a Data Modification Operation",
          "Refactoring the Course Component for Using the Store",
          "Forcing the Completion of Long Running Observables - First and Take Operators",
          "The withLatestFrom RxJs Operator - Detailed Explanation"
        ],
        "Conclusion": [
          "Bonus Lecture (Updated October 2025)",
          "RxJs In Practice Course Conclusion and Key Takeaways"
        ]
      },
      "requirements": [
        "Just a bit of Javascript",
        "No previous knowledge of Typescript or Angular is needed",
        "No previous knowledge of RxJs is needed, we will start from scratch"
      ],
      "description": "This Course in a Nutshell  (note: this course includes the Typescript Jumpstart E-Book)\nThis course is a complete practical guide for the RxJs library (Reactive Extensions for Javascript).\nIf you are a developer just getting started with the Angular ecosystem, or even if you already have some experience with it, the part that you will find the hardest to wrap your head around is RxJs.\nAnd this is because RxJs and Reactive Programming have a steep learning curve that makes it hard to just jump in into an existing program and learn these concepts by example. With RxJs that approach will simply not work. Instead, we need to start at the beginning and learn some baseline reactive design concepts first.\nIn this course, we will start by presenting a couple of baseline concepts, and then we will provide you with an extended catalog of RxJs operators that will in practice cover the vast majority of your daily needs.\nAlso, the goal here is not to cover every single operator, but instead to choose an extended subset that contains the most commonly used operators, and provide practical examples for each.\nAnother goal of the course is to show how RxJs is meant to be used for building programs using Reactive Design as opposed to an imperative programming style.\nCourse Overview\nWe will start by quickly introducing RxJs: we will cover the notions of Stream and Observable, and we will answer common questions such as: what is RxJs, when to use it and why, what problem does it solve?\nWe will then write our own Observable from first principles: we will implement our own HTTP observable that will allow us to handle backend HTTP requests while supporting error handling and cancellation.\nAfter this quick introduction, we will dive straight into the practical examples covering a large variety of operators. We will cover the operators by explaining their behavior using the official RxJs marble diagrams, and then we will complement that with a practical example.\nWe will first start with the Map and Filter operators, and quickly move to more complex operators such as shareReplay, concat, concatMap, and other commonly used observable combination strategies such as: merge and mergeMap, exhaustMap, switch and switchMap. We will provide practical examples for these operators that include backend save operations and search typeaheads.\nWe will then cover several RxJs error handling strategies, like catch and recover, catch and rethrow or retry.\nWe will also cover the notion of subject and give examples of several commonly used subjects, such as BehaviorSubject or AsyncSubject. We will then use a subject to implement a very commonly used reactive pattern: we will implement a centralized observable store from first principles.\nWe will also cover many other commonly used operators, that include but are not restricted to: withLatestFrom, forkJoin, take, first, delay, delayWhen, startWith, etc.\nAt the end of the course, we will implement our own custom pipeable operator from first principles: we will implement a debugging operator that is going to be very helpful for debugging our RxJS programs.\nWhat Will You Learn In this Course?\nBy taking this course you will learn how to use the RxJs library in practice for building applications in reactive style. You will understand well the core notions that are the basis of reactive programming, such as Streams and Observables.\nYou will also be familiar with an extended subset of operators that in practice will provide all that you will need for building applications in reactive style using RxJs.\nHave a look at the course free lessons below, and please enjoy the course!",
      "target_audience": [
        "Developers trying to make sense of the RxJs library",
        "Developers looking to learn Reactive Programming",
        "Developers trying to understand how to build Applications in a Reactive Design style"
      ]
    },
    {
      "title": "Tailwind CSS From Scratch | Learn By Building Projects",
      "url": "https://www.udemy.com/course/tailwind-from-scratch/",
      "bio": "Build great looking layouts fast and efficiently using Tailwind CSS utility classes",
      "objectives": [
        "Learn to create and edit layouts super fast",
        "Learn the Tailwind utility classes using a code sandbox",
        "Build 5 mini-projects and 6 website projects",
        "Learn how to set up a dev environment using the Tailwind CLI",
        "Configure your styles to create custom layouts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Tailwind Version (Important)",
          "Course Outline & Projects",
          "Project Links",
          "What Is Tailwind CSS?",
          "Basic Environment Setup",
          "Tailwind Sandbox Setup"
        ],
        "Tailwind Fundamentals - Part 1": [
          "Utility-First Example",
          "Working With Colors",
          "Container & Spacing",
          "Typography",
          "Width & Height",
          "Layout & Position",
          "Backgrounds & Shadows",
          "Borders & Border Radius",
          "Filters"
        ],
        "Tailwind Fundamentals - Part 2": [
          "Interactivity",
          "Breakpoint Classes & Media Queries",
          "Columns",
          "Flexbox",
          "Grid",
          "Transition & Transform",
          "Animation Classes & Keyframes",
          "Config & Customization",
          "Dark Mode"
        ],
        "A Better Development Environment": [
          "Create An Environment With Tailwind CLI",
          "Directives & Functions",
          "Optional - Webpack & PostCSS Environment"
        ],
        "Tailwind CSS Mini-Projects": [
          "Mini-Projects Introduction",
          "Mini-Project 1 - Email Subscribe Card",
          "Mini-Project 2 - Pricing Grids",
          "Mini-Project 3 - Product Modal",
          "Mini-Project 4 - Image Gallery",
          "Mini-Project 5 - Login Modal"
        ],
        "Project 1 - Clipboard Website": [
          "Project Intro",
          "Setup & Config",
          "Hero Section & Background Image",
          "4 - Snippets Section & Using Directives",
          "Features Section & Items",
          "Supercharge Section",
          "References & Footer",
          "Deploy To Netlify"
        ],
        "Project 2 - Loopstudios Website": [
          "Project Intro",
          "Setup & Config",
          "Hero With Desktop Navigation",
          "Feature Section",
          "Creations Section With Gradient Overlays",
          "Footer",
          "Hamburger Button & Animation",
          "Mobile Menu & JavaScript",
          "Deploy To Vercel"
        ],
        "Project 3 - Shortly Website": [
          "Project Intro",
          "Setup & Config",
          "Navbar",
          "Hero Section",
          "Shorten Form & Links",
          "JavaScript Link Validation",
          "Feature Boxes",
          "CTA & Footer",
          "Mobile Menu"
        ],
        "Project 4 - Testimonial Grid Project": [
          "Project Intro",
          "Setup & Config",
          "FIrst Box",
          "Remaining Boxes",
          "Add Grid Classes",
          "Line Clamp Plugin"
        ],
        "Project 5 - Fylo Website With Color Picker": [
          "Project Intro",
          "Setup & Config",
          "Header & Dark Mode Button",
          "JavaScript For Color Mode",
          "Hero Section",
          "Features & Productive Sections",
          "Testimonials & Early Access",
          "Smooth Scroll & Footer"
        ]
      },
      "requirements": [
        "You should know the basics of CSS"
      ],
      "description": "This is a fun project-based course to learn how to create awesome layouts using the Tailwind CSS framework and get comfortable using utility classes over something like Bootstrap, which uses component-based classes. Let's take a look at the outline for this course...\n\n\n✔️ The Sandbox\nI don't want to jump right into the projects, though you certainly could if you want. So the first two sections, we will be working in a coding sandbox. In every new video in these sections, we will have a new file to experiment with and learn all about a certain aspect of Tailwind. For example, we will have pages/videos for colors, typography, spacing, flex classes, and much more. This allows us to essential touch on all parts of Tailwind in a specific order, rather than just jumping right into projects.\n\n\n✔️ Mini-Projects\nNext, we will take what we learn in the sandbox environment and use it to create some small projects. These are things that will take 10 - 20 minutes to create and we will do it all in one video per project. The mini-projects include\n\n\nEmail Subscribe Card\nPricing Grids\nProduct Modal\nImage Gallery\nLogin Modal\nI may even add more mini-projects later. These will help you get your feet wet by creating something.\n\n\n✔️ Website Projects\nNext, we will start to work on larger landing-page websites. This will really put what you learned to the test. There will be 6 different websites. They are all very modern and clean-looking. We partnered with Frontend Mentor for the designs. Some projects will have a bit of javaScript for things like hamburger menus, tabs, and some validation. Let's take a look at the projects.\n\n\nClipboard Website - Simple software product landing page. Focusing mostly on flexbox and alignment. Some background images, etc.\nLoopstudios - VR company website with cool images, responsive mobile menu with some JavaScript, gradient overlay effects.\nShortly - Website for a link shortening tool. We will have a nice-looking responsive menu and add a little JavaScript for some form validation and working with the DOM.\nTestimonial Grid - A project where we focus on using Tailwind's grid classes.\nFylo - Product page with a light/dark mode feature. We will add some JavaScript to save the color mode to local storage. We will also have a dynamic tab component for the FAQ.\nBookmark - Bookmark manager extension landing page. This website will have some dynamic background images, a hamburger menu and some tabs that will use JavaScript.",
      "target_audience": [
        "Anyone that wants to get better at creating website and UI layouts"
      ]
    },
    {
      "title": "Dissecting Ruby on Rails 5 - Become a Professional Developer",
      "url": "https://www.udemy.com/course/professional-rails-5-development-course/",
      "bio": "Don't simply follow a tutorial, learn what it really takes to become a pro Rails developer with this immersive course.",
      "objectives": [
        "Build a professional Rails application.",
        "Implement advanced JavaScript components, such as persistent drag and drop functionality and live page update via ActionCable into a Rails application.",
        "Deploying a Rails application along with the ActionCable web socket feature to Heroku.",
        "Build a Rails 5 application that utilizes multiple layouts.",
        "Build jQuery and CoffeeScript components that can be utilized by the Rails application."
      ],
      "course_content": {
        "Mac Environment Customization": [
          "The Application We're Going to Build",
          "Section Introduction",
          "Introduction to the Command Line Interface in Mac and Linux",
          "Installing the X-Code Command Line Tools for Mac",
          "Installing Git for Source Code Version Control",
          "How to Install Homebrew on a Mac",
          "Installing GPG Security System on a Mac",
          "Guide to RVM for Ruby Management",
          "Configuring RubyGems and Installing Rails",
          "Installing the Postgres Database on a Mac",
          "Installing and Working with the Sublime Text Editor",
          "Deep Dive into the Command Line - Part 1 of 2",
          "Deep Dive into the Command Line - Part 2 of 2",
          "Section 1 Quiz"
        ],
        "PC Environment Setup": [
          "Note to PC Users",
          "PC Environment Setup: Installing Virtual Box",
          "Guide to Installing Ubuntu Linux in VirtualBox",
          "How to Reboot a Linux Virtual Machine from the Terminal",
          "Installing Desktop Applications and Ubuntu Navigation Tips and Tricks",
          "How to Sign Up for a GitHub Account",
          "How to Install Git on Linux and Connect to GitHub via SSH",
          "How to Securely Install Node and NPM on Linux via NVM",
          "Installing the Heroku CLI and the Full Deployment Lifecycle",
          "How to Install and Work with Sublime Text in Linux",
          "PC Setup: Guide for Ruby on Rails and Postgres on Linux - Part 1 of 2",
          "PC Setup: Guide for Ruby on Rails and Postgres on Linux - Part 2 of 2",
          "Fixing the Role Does Not Exist Error"
        ],
        "App Creation and Project Planning": [
          "Section Introduction",
          "Signing Up for a Project Management Account",
          "Managing the Project Management Dashboard",
          "Download Project Management Data",
          "Importing Project Management Tasks into Pivotal Tracker",
          "Creating a Rails Application",
          "Generating a Blog for the Portfolio Application Using Rails Scaffolds",
          "Analyzing the Rails Process: Index and Show Actions",
          "Analyzing the Rails Process: New, Create, Update, Edit, and Destroy Actions",
          "Analyzing the Rails Process: Routing with Resources",
          "Rails File System Overview",
          "Updating the Project Management Dashboard",
          "Deep Dive: Analyzing the Application Generator - Part 1 of 2",
          "Deep Dive: Analyzing the Application Generator - Part 2 of 2",
          "Section 2 Quiz"
        ],
        "Implementing Version Control": [
          "Section Introduction",
          "How to Sign Up for a GitHub Account",
          "Generating SSH Keys to Securely Communicate with GitHub",
          "Guide to GitHub",
          "How to Update a .gitignore File to Securely Store Secret Credentials",
          "Guide to the Markdown Syntax",
          "Updating the Git Sprint in the Project Management Dashboard",
          "Deep Dive: Analyzing Version Control and Git - Part 1 of 2",
          "Deep Dive: Analyzing Version Control and Git - Part 2 of 2"
        ],
        "Rails Generators": [
          "Section Introduction",
          "Guide to the Rails Controller Generator to Build Pages Part 1 of 2",
          "Guide to the Rails Controller Generator to Build Pages Part 2 of 2",
          "Guide to the Rails Model Generator to Build out Data Specific Features",
          "Guide to the Rails Resource Generator for Building Out the Portfolio Feature",
          "Deep Dive: Analyze Rails Generators and How to Customize a Generator - 1 of 2",
          "Deep Dive: Analyze Rails Generators and How to Customize a Generator - 2 of 2"
        ],
        "Data Flow in Rails": [
          "Section Introduction",
          "Building out a Seeds File for Generating Dynamic Sample Data",
          "Implement an Index Action from Scratch in Rails",
          "Build the New and Create Functionality from Scratch in Rails",
          "Implement the Ability to Edit Database Records from Scratch in Rails",
          "How to Use the Link To Method in Rails for Creating Dynamic Links",
          "How to Implement the Show Action from Scratch in Rails",
          "Building the Ability to Delete Items in Rails",
          "How to Implement Custom Routes for Pages in Rails",
          "How to Override the Rails Resources Routes for the Show Action",
          "How to Implement Permalinks in a Rails Application - Part 1 of 2",
          "How to Implement Permalinks in a Rails Application - Part 2 of 2",
          "How to Use Enums in Rails to Manage Data Stages",
          "How to Implement a Custom Action in Rails via a Button Click - Part 1 of 2",
          "How to Implement a Custom Action in Rails via a Button Click - Part 2 of 2",
          "Updating the Project Management Dashboard and Performing a Pull Request",
          "Deep Dive: Rails Routing and Data Flow - Part 1 of 3",
          "Deep Dive: Rails Routing and Data Flow - Part 2 of 3",
          "Deep Dive: Rails Routing and Data Flow - Part 3 of 3"
        ],
        "Data Management in Rails": [
          "Section Introduction",
          "Implementing Data Validations in Rails 5",
          "Guide to Data Relationships in Rails",
          "How to Implement Custom Scopes in Rails 5",
          "How to Set Default Values in Rails 5",
          "How to Use Concerns in Rails 5",
          "Building an Additional Parent/Child Relationship in Rails 5",
          "Rails 5 Complex Forms: Configuring Nested Attributes in the Model",
          "Rails 5 Complex Forms: Configuring Nested Attributes in the Form",
          "Deep Dive: Working with SQL and ActiveRecord in Rails 5 - Part 1 of 3",
          "Deep Dive: Working with SQL and ActiveRecord in Rails 5 - Part 2 of 3",
          "Deep Dive: Working with SQL and ActiveRecord in Rails 5 - Part 3 of 3"
        ],
        "Rails 5 Authentication": [
          "Section Introduction",
          "How to Install Devise in Rails 5",
          "Using Devise to Implement Registrations and Login Functionality",
          "Building Custom Routes for Authentication Pages with Devise in Rails 5",
          "Enable Users to Logout and Dynamically Render View Content in Rails 5",
          "How to Add Custom Attributes to a Devise Based Authentication System",
          "How to Use Controller Concerns in Rails 5 for Devise Custom Attributes",
          "Integrate Virtual Attributes to Extract First and Last Name Data from a User",
          "Deep Dive: Using BCrypt to Implement Encryption in Ruby"
        ],
        "Ruby on Rails Controllers": [
          "Section Introduction",
          "Rails Data Flow Review and Working with Params",
          "Using Rails Sessions to Share Data Between Pages",
          "Refactoring the Session Tracker into a Controller Concern",
          "Working with Strong Params in a Rails 5 Controller",
          "Deep Dive: Building a Guest User Feature in Rails - Part 1 of 2",
          "Deep Dive: Building a Guest User Feature in Rails - Part 2 of 2"
        ],
        "Working with Views in Rails": [
          "Section Introduction",
          "How to Customize the Rails Master Layout File - Part 1 of 2",
          "How to Customize the Rails Master Layout File - Part 2 of 2",
          "Guide to Using Multiple Layout Files in Rails 5",
          "Introduction to Partials in Rails 5",
          "How to Send Data to Partials to Generate Custom Behavior in Rails 5",
          "Guide to View Helpers in Rails 5",
          "How to Use the Rails Content Tag Helper to Auto Generate HTML Code",
          "Introduction to Rendering Collections via Partials in Rails 5",
          "Guide to Manually Configuring Partials to Work with Collections in Rails",
          "Guide to Helpful ActionView Helper Methods in Rails 5",
          "Deep Dive: Tips and Tricks to Working with ActionView in Rails 5 - Part 1 of 2",
          "Deep Dive: Tips and Tricks to Working with ActionView in Rails 5 - Part 2 of 2"
        ]
      },
      "requirements": [
        "You should have basic computer skills"
      ],
      "description": "Latest course update: March 2021 - Added multiple sections for the Ruby on Rails 6 full course update.\nThrough the years I've constantly heard the same question from students: \"I can follow a tutorial, but I don't feel confident enough to build apps/features from scratch\". This course is my answer to that question. I'm not satisfied in simply teaching you how to build an application, my goal is to teach you to understand how to build professional web applications, not to simply follow a tutorial. This is the most comprehensive course I've ever put together and combines my 14+ years of development experience.\n\nI took a completely different approach in building this course. This course is unique for a number of reasons:\nCurriculum - After completing the initial course outline I sent it out to a group of CTOs and Senior Rails developers from around the world. I asked them to go through the list of features and add the full set of skills they look for when hiring Rails devs. The course outline literally doubled based on their input. So the features that we're going to build throughout this course aren't simply my idea of what it takes to build progressional grade Rails applications, it's the combined knowledge over over a dozen premier developers from a wide variety of industries. One of the hiring managers who reviewed the outline responded to the outline and said, \"If you send me developers who build this full set of features, I'll hire them on the spot!\".\nDeep Dives - Going through tutorials is great. However, many times courses that simply walk through the build out of a project skip over important concepts. For this reasons I have created a Deep Dive at the end of each section of this course. These guides select the most challenging topics of each section and give a detailed walk through of the concept so that you can completely understand how to work with the key features of the Rails framework.\nFull Stack - Many courses promise to teach you how to become a full stack developer, but most of them simply gloss over the concepts that you need in order to build truly professional applications. This course was built to walk you through a real world approach to full stack coding. This includes: backend development with Ruby on Rails, front end coding with HTML/CSS/JavaScript/jQuery, along with advanced ways to use SQL for database management.\nImmersive - This is not a light and easy course that you can go through in a weekend. This course was designed specifically for coding bootcamp students that have the goal of becoming professional developers. This means that there is over 35 hours of video lessons and you will build a professional grade Rails application by the time you have completed the course.\nSo with all that being said, let's talk about everything that we're going to build throughout the guides. We're going to build a feature rich portfolio application that you can actually use for your own portfolio (I'm even using it for my own portfolio). Let's walk through the full feature set of what the application will include:\nBuilding out a professional Rails environment (if you're on a PC I even built a free C9 dashboard that you can use for this course).\nWe'll utilize Pivotal tracker to follow SCRUM project management best practices throughout the build of this application, just like you'll do in a professional dev shop.\nExamine how to work with Rails generators, including how to customize the generators so that you can have your very own scaffolds.\nWork with data flow in Rails. One of my strongest beliefs is that if you can understand how data flow works in Rails, you can build anything! With that in mind we'll take a step by step approach for understanding how data comes into a Rails app and how you can build features that utilize the process.\nManage a database. You'll learn advanced SQL techniques for working with data in a Rails application, including how to manage data relationships between tables along with what it takes to implement efficient queries.\nBest practices. Writing clean code is one of the key requirements of professional Rails developers, throughout the course we'll walk through what professional grade code looks like and the common patterns you'll need to know in order to build well written applications.\nJavaScript and jQuery components. One of the hallmarks of a modern Rails application is the proper integration of JavaScript features. Throughout the course we'll walk through advanced JavaScript features such as how to integrate drag and drop functionality for users and how to build dynamic forms that change based on user input, all without a page refresh!\nStreaming Live Data/Page Updates with ActionCable. The top new feature in Rails 5 was definitely Action Cable, which allows for Rails to utilize web sockets and have live page updates. In this course we'll build a real time commenting feature for our portfolio that will showcase your JavaScript skills to everyone who visits your new site.\nAPI Integration. Because most modern applications need to communicate with the outside world, in this course we'll build an integration with the Twitter API to pull in real time tweets into our portfolio application.\nRubyGem Libraries. In addition to teaching you about how to use RubyGems in a Rails application, I also show you how to create your very own RubyGem from scratch and walk through how to use it in your application.\nIn addition to all of these features, we'll also examine: advanced forms, how to integrate professional styles by leveraging Bootstrap 4, building a connection to AWS for file uploads, and how to deploy our application to the web.\nIn addition to the lectures, I also include the source code for each guide so that you can always have access to the full codebase for the application.\nI look forward to going through this immersive program with you and good luck with the coding!",
      "target_audience": [
        "This course is for someone who wants to learn how to build professional grade Ruby on Rails applications",
        "This course is for developers that want to learn advanced features specific to the Ruby on Rails version 5 framework, such as ActionCable"
      ]
    },
    {
      "title": "Mastering data visualization in D3.js",
      "url": "https://www.udemy.com/course/masteringd3js/",
      "bio": "Design and build beautiful data visualizations with d3.js. An intensive introduction to the D3 library (V6).",
      "objectives": [
        "Understand the fundamental building blocks of D3",
        "Gain a wide breadth of knowledge, learning how to create 14 different visualizations",
        "Critique existing visualizations and invent better designs for displaying data",
        "Interpret open source code from the D3 community for use in your own projects",
        "Master advanced tools in D3, building choropleth maps, brushes, tooltips, and layouts",
        "Develop substantial web apps, with multiple visualizations on the page at once",
        "Articulate original abstract ideas with compelling sketches"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "What is a data visualization?",
          "Activity: Your favorite visualization",
          "The power of D3",
          "How this course is structured",
          "Section Summary",
          "Course GitHub Repository"
        ],
        "Getting started with D3": [
          "Introduction - Getting started with D3",
          "Setting up your environment",
          "Understanding SVGs",
          "Adding SVGs with D3",
          "Activity: Adding SVGs to the screen",
          "Selections and data joins",
          "Loading external data",
          "Activity: Your first visualization!",
          "Section Summary"
        ],
        "Scales and Axes": [
          "Introduction - Scales and Axes",
          "Linear Scales",
          "Logarithmic Scales",
          "Time Scales",
          "Ordinal Scales",
          "Band Scales",
          "D3 min, max, and extent",
          "Scales in D3",
          "Margins and groups",
          "Axes and labels",
          "Making a bar chart",
          "Project 1: StarBreak Coffee",
          "Activity: Project 1",
          "Section Summary"
        ],
        "The basics of design": [
          "Introduction - The basics of design",
          "Designing for clarity",
          "Subjectivity in design",
          "Activity: Critiquing visualizations",
          "The design toolkit",
          "An introduction to sketching",
          "Activity: Making sketches",
          "The Bootstrap grid system",
          "Section Summary"
        ],
        "Make it dynamic": [
          "Introduction - Make it dynamic",
          "Looping with intervals",
          "Adding an update function",
          "The D3 update pattern",
          "Updates in D3",
          "Making our chart dynamic",
          "D3 Transitions",
          "Scatter plots in D3",
          "Project 2: Gapminder Clone",
          "Activity: Project 2",
          "Section Summary"
        ],
        "Make it interactive": [
          "Introduction - Make it interactive",
          "Adding a legend",
          "Formatting and parsing in D3",
          "Introducing Tooltips",
          "Event listeners and handlers in D3",
          "Adding a jQuery UI slider",
          "Line graphs in D3",
          "Project 3: CoinStats",
          "Activity: Project 3",
          "Section Summary"
        ],
        "Frequently used visualizations": [
          "Introduction - Frequently used visualizations",
          "Using the D3 community",
          "Migrating code to version 5.x",
          "D3 Layouts",
          "Area Charts",
          "Stacked Area Charts",
          "Data structures and D3 nests",
          "Pie and donut charts",
          "Wordclouds",
          "Layouts in D3",
          "Section Summary"
        ],
        "Maps and Networks": [
          "Introduction - Maps and Networks",
          "Visualization around the globe",
          "Loading multiple datasets with D3",
          "Choropleth Maps",
          "Forces in D3",
          "Node-Link Diagrams",
          "Maps and Networks",
          "Section Summary"
        ],
        "Hierarchical Data": [
          "Introduction - Hierarchical Data",
          "Building hierarchies in D3",
          "Tree Diagrams",
          "Treemaps",
          "Circle Packing",
          "Sunburst Plots",
          "Activity: Find your own visualization",
          "Section Summary"
        ],
        "File structure and linked views": [
          "Introduction - File structure and linked views",
          "File Separation",
          "Visualizations as Objects",
          "Converting our code to OOP",
          "Handling events across objects",
          "D3 Brushes",
          "Project 4: A corporate data dashboard",
          "Activity: Project 4",
          "Section Summary"
        ]
      },
      "requirements": [
        "Students should have a good understanding of HTML, CSS, and JavaScript",
        "Students should know how to interact with the Document Object Model (DOM) using jQuery"
      ],
      "description": "Welcome to Mastering data visualization in D3.js!\nThis course will take you from a beginner level in D3 to the point where you can build virtually any visualization that you can imagine. The course will teach you to program in the latest version of D3 - version 6.x.\nCourse Outline\nIn the first phase of the course, I will be building up your knowledge of D3 and introducing you to some of the most foundational topics in data visualization. You will:\nUnderstand what SVGs are and how to they work with D3.\nDiscover how D3 associates shapes with pieces of data.\nWrite scales, axes, and labels to make some basic visualizations.\nUse the D3 update pattern to shift the position of SVGs as our data changes.\nHandle user interactions by adding events to the page.\nAdd legends, tooltips, and sliders to your visualizations.\nThe course will also focus on data visualization design, helping you to make better decisions about how to structure your code, and teaching you to justify the decisions that you make to others. You will learn how to select the right visual channels for the data that you're working with to create completely unique visualizations.\nIn the second phase of the course, I will be taking you on a crash course through 12 new visualizations. You will gain a wide breadth of knowledge in D3, as I will be walking you through pre-written code from members of the D3 community. I'll introduce you to D3 layouts, and I will be showing you how to build each of these visualizations in D3:\nLine Charts\nArea Charts\nStacked Area Charts\nPie Charts\nDonut Charts\nWordclouds\nChoropleth Maps\nNode-Link Diagrams\nTree Diagrams\nTreemaps\nCircle Packs\nSunburst Plots\nThis part of the course will also teach you the skill of finding new visualizations by yourself, adapting open source code to fit with your own data.\nIn the final phase of the course, I will be showing you the proper file structure to use for managing multiple visualizations on the page at once. You will be able to create visualizations that can communicate with one another, allowing you to link user interactions between multiple different graphs. You'll also learn how to use brushes in D3 to select areas on the chart with the drag of a mouse.\nClass Projects\nThe course will include 4 class projects for you to complete, which will give you the opportunity to practice your D3 skills with real data:\nA simple bar chart to display the revenue growth of a small coffee chain.\nAn updating bubble chart, cloning a famous visualization from Gapminder.\nAn interactive line chart, showing historical cryptocurrency prices over time.\nA data dashboard for a large conglomerate company.\nEach of the projects will gradually become more complex as the course progresses.\nShould I Take This Course?\nD3 is an incredibly powerful library to use, with a strong community of developers which is growing every day. Students should take this class if they want to get a rigorous introduction to D3, which covers a wide range of different topics.\n\n\nThis course is not an introductory course to web development. Students are expected to have had experience coding in JavaScript, HTML, CSS, and jQuery before enrolling in this course.",
      "target_audience": [
        "Anyone who has a passion for working with data",
        "Anyone who is curious about data visualization design",
        "Anyone who wants to build complex interactive websites with D3js"
      ]
    },
    {
      "title": "MERN 2025 Edition - MongoDB, Express, React and NodeJS",
      "url": "https://www.udemy.com/course/mern-stack-course-mongodb-express-react-and-nodejs/",
      "bio": "Build Full Stack Application from Scratch with React Router 6.4+, React Query, Mongoose 7+, Cloudinary, Axios",
      "objectives": [
        "Learn how to build big full stack app from scratch",
        "Learn how to connect Front-End application (React) with Backend application (Express, MongoDB, NodeJS)",
        "Learn how to implement JWT for authentication and authorization",
        "Learn how to implement React Hooks, Async/Await, React Router 6, Axios",
        "Learn how to implement ES6 in Node",
        "Learn how to deploy MERN app on Heroku",
        "Learn best practices of Front-End and Server applications"
      ],
      "course_content": {
        "Introduction": [
          "Course Resources",
          "Discord Channel",
          "Course Requirements",
          "Free Resources",
          "Video Blur Fix",
          "Course Review"
        ],
        "General Setup": [
          "VS Code",
          "VITE - Info",
          "VITE - Install",
          "VITE - Folder Structure",
          "Remove Boilerplate",
          "Obtain Assets",
          "Global CSS",
          "Title and Favicon",
          "Install All Libraries (Optional)"
        ],
        "React Router": [
          "React Router - Info",
          "React Router - Initial Setup",
          "Create Pages",
          "Setup index.js",
          "Link Component",
          "Nested Routes",
          "Error Page"
        ],
        "Landing Page": [
          "Styled Components - Intro",
          "Wrapper",
          "Landing Page",
          "Landing Page - CSS (optional)",
          "Logo Component",
          "Logo and Images"
        ],
        "Error Page": [
          "Error Page - JSX",
          "Error Page - CSS (optional)"
        ],
        "Register Page": [
          "React Router Action Intro",
          "First Action",
          "Register User Complete",
          "Navigation State",
          "React Toastify"
        ],
        "Login Page": [
          "Login Page",
          "Login and Register CSS (optional)"
        ],
        "Dashboard Page": [
          "Dashboard Setup",
          "Dashboard Structure",
          "Dashboard CSS (optional)",
          "Dashboard Context",
          "React Icons",
          "Navbar Structure",
          "Navbar CSS (optional)",
          "Links Data",
          "Sidebar Structure",
          "Sidebar Functionality",
          "Sidebar CSS (optional)",
          "NavLinks Component",
          "Big Sidebar",
          "Big Sidebar CSS (optional)",
          "Logout Container",
          "Logout Container CSS (optional)",
          "Theme Toggle",
          "Theme Toggle CSS (optional)",
          "Dark Theme Logic",
          "Dark Theme Logic - Bug Fix",
          "Dark Theme CSS (optional)"
        ],
        "Server": [
          "Folder Structure",
          "ES6 Modules",
          "Install Server Packages",
          "Express and Nodemon",
          "Thunder Client",
          "JSON Middleware",
          "Morgan and Dotenv",
          "New Node Features (optional)",
          "Get All Jobs",
          "Create Job",
          "Get Single Job",
          "Edit Job",
          "Delete Job",
          "Not Found and Error Route",
          "Not Found vs Error Route",
          "Controller and Router",
          "MongoDB",
          "Atlas Account",
          "Mongoose",
          "Connect DB",
          "Job Model",
          "Create Job Controller",
          "Async Errors",
          "Get All Jobs and Get Single Job",
          "Delete and Update Job",
          "Status Codes",
          "Custom Error",
          "More Custom Errors",
          "Validation Layer - Intro",
          "Express Validator - Setup",
          "Validation Middleware",
          "Constants",
          "Validate Job Input",
          "Validate ID Params",
          "Validate Job",
          "User Model",
          "User Controller and Router",
          "Create User",
          "Validate Register User",
          "Admin User",
          "Hash Password",
          "Hash Utils",
          "Validate Login",
          "Login Logic",
          "JWT",
          "JWT ENV",
          "Http Only Cookie",
          "Authenticate User Setup",
          "Verify Cookie",
          "Verify JWT",
          "Add User to Job Routes",
          "Validate Owner",
          "Logout Controller",
          "User Routes",
          "Get Current User",
          "Update User",
          "Get Application Stats",
          "Proxy Setup",
          "Concurrently",
          "Axios"
        ]
      },
      "requirements": [
        "Good Grasp of Javascript",
        "Solid Understanding of ES6",
        "React Basics",
        "Node and Express Basics"
      ],
      "description": "Welcome to an immersive learning experience in this comprehensive MERN Stack course.\nWhether you're a budding developer or looking to enhance your programming skills, this course is designed to guide you through the process of building a complete full-stack application, \"Jobify,\" using MongoDB, Express, React, and Node.js.\nCourse Highlights:\nFront-End Development with React: Start from scratch with VITE to create a dynamic React front-end application. Learn to add global styles and build an array of user-friendly pages including Landing, Error, Register, and Dashboard.\nStunning Visuals: Master the art of setting up visually appealing images and layouts for a professional look and feel.\nRouting with React Router 6.4+: Navigate the complexities of React Router for seamless page transitions and nested pages.\nBuilding a Server Application: Dive into backend development by creating a server application from the ground up, utilizing ES6 modules and implementing the \"nodemon\" package for efficient development.\nDatabase Management: Gain hands-on experience in setting up a MongoDB database in the cloud with Atlas, crafting routes and controllers, and ensuring robust data handling.\nTesting and Error Handling: Conduct extensive testing using Thunder Client, set up error handling in Express, and utilize the \"express-async-errors\" package for streamlined debugging.\nSecurity and Authentication: Learn to hash passwords, implement JWT for secure authentication and authorization, and compare passwords to ensure user security.\nFull Stack Integration: Connect your front-end application with the server, utilize the \"concurrently\" package, and set up a \"proxy\" in VITE for seamless full-stack integration.\nAdvanced React Techniques: Explore advanced functionalities in React, including programmatically navigating using React Router 6, setting up protected routes, and implementing logout features.\nAPI Management: Master the use of Axios for API interactions, set JWT tokens in Postman, and implement various Axios configurations for efficient data retrieval and manipulation.\nCRUD and Permissions: Achieve complete CRUD functionality, set up server permissions, and understand the nuances of creating and managing mock data.\nData Visualization and UI Enhancements: Learn to set up informative charts and cards, and implement search/filter functionality for a user-friendly interface.\nPagination and Deployment: Tackle pagination challenges and deploy your MERN application to Render for real-world use.\nThis course is your gateway to mastering full-stack development with the MERN stack, providing you with the skills and knowledge to build robust, scalable web applications. Join us on this journey to become a proficient MERN Stack developer!",
      "target_audience": [
        "Developers who are familiar with React and Express Fundamentals and now want to learn how to build and deploy MERN application from scratch"
      ]
    },
    {
      "title": "Docker & Kubernetes: The Practical Guide [2025 Edition]",
      "url": "https://www.udemy.com/course/docker-kubernetes-the-practical-guide/",
      "bio": "Learn Docker, Docker Compose, Multi-Container Projects, Deployment and all about Kubernetes from the ground up!",
      "objectives": [
        "Learn what Docker and Kubernetes are and why you might want to use them",
        "Learn how to install and use Docker on any system (macOS, Windows, Linux)",
        "Learn how to create and use Images & Containers with Docker",
        "Understand complex topics like managing and persisting data with Volumes",
        "Learn about Container Networking with Docker Networks and DNS Service Discovery",
        "Learn how to deploy Docker applications - manually, with managed services or with Kubernetes"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome to the Course",
          "What Is Docker?",
          "Why Docker & Containers?",
          "Join Our Learning Community",
          "Virtual Machines vs Docker Containers",
          "Docker Setup - Overview",
          "Docker Setup - macOS",
          "Docker Setup - Windows",
          "Docker Setup - Docker Toolbox for Older Systems",
          "Docker Playground",
          "An Overview of the Docker Tools",
          "Installing & Configuring an IDE",
          "Getting Our Hands Dirty!",
          "Course Outline",
          "How To Get The Most Out Of This Course",
          "Course Resources",
          "Course Setup"
        ],
        "Docker Images & Containers: The Core Building Blocks": [
          "Module Introduction",
          "Images & Containers: What and Why?",
          "Using & Running External (Pre-Built) Images",
          "Our Goal: A NodeJS App",
          "Building our own Image with a Dockerfile",
          "Running a Container based on our own Image",
          "EXPOSE & A Little Utility Functionality",
          "Images are Read-Only!",
          "Understanding Image Layers",
          "A First Summary",
          "Images & Containers",
          "Managing Images & Containers",
          "Stopping & Restarting Containers",
          "Understanding Attached & Detached Containers",
          "Attaching to an already-running Container",
          "Entering Interactive Mode",
          "Deleting Images & Containers",
          "Removing Stopped Containers Automatically",
          "A Look Behind the Scenes: Inspecting Images",
          "Copying Files Into & From A Container",
          "Naming & Tagging Containers and Images",
          "Time to Practice: Images & Containers",
          "Sharing Images - Overview",
          "Pushing Images to DockerHub",
          "Pulling & Using Shared Images",
          "Managing Images & Containers",
          "Module Summary",
          "Module Resources"
        ],
        "Managing Data & Working with Volumes": [
          "Module Introduction",
          "Understanding Data Categories / Different Kinds of Data",
          "Analyzing a Real App",
          "Building & Understanding the Demo App",
          "Understanding the Problem",
          "Introducing Volumes",
          "A First, Unsuccessful Try",
          "Named Volumes To The Rescue!",
          "Removing Anonymous Volumes",
          "Getting Started With Bind Mounts (Code Sharing)",
          "Bind Mounts - Shortcuts",
          "Combining & Merging Different Volumes",
          "A NodeJS-specific Adjustment: Using Nodemon in a Container",
          "Volumes & Bind Mounts: Summary",
          "Volumes & Bind Mounts",
          "A Look at Read-Only Volumes",
          "Managing Docker Volumes",
          "Using \"COPY\" vs Bind Mounts",
          "Don't COPY Everything: Using \"dockerignore\" Files",
          "Adding more to the .dockerignore File",
          "Working with Environment Variables & \".env\" Files",
          "Environment Variables & Security",
          "Using Build Arguments (ARG)",
          "Module Summary",
          "Module Resources"
        ],
        "Networking: (Cross-)Container Communication": [
          "Module Introduction",
          "Case 1: Container to WWW Communication",
          "Case 2: Container to Local Host Machine Communication",
          "Case 3: Container to Container Communication",
          "Analyzing the Demo App",
          "Creating a Container & Communicating to the Web (WWW)",
          "Making Container to Host Communication Work",
          "Container to Container Communication: A Basic Solution",
          "Introducing Docker Networks: Elegant Container to Container Communication",
          "How Docker Resolves IP Addresses",
          "Docker Container Communication & Networks",
          "Docker Network Drivers",
          "Module Summary",
          "Module Resources"
        ],
        "Building Multi-Container Applications with Docker": [
          "Module Introduction",
          "Our Target App & Setup",
          "Dockerizing the MongoDB Service",
          "Dockerizing the Node App",
          "Moving the React SPA into a Container",
          "Adding Docker Networks for Efficient Cross-Container Communication",
          "Fixing MongoDB Authentication Errors (relevant for next lecture)",
          "Adding Data Persistence to MongoDB with Volumes",
          "Volumes, Bind Mounts & Polishing for the NodeJS Container",
          "Live Source Code Updates for the React Container (with Bind Mounts)",
          "Module Summary",
          "Module Resources"
        ],
        "Docker Compose: Elegant Multi-Container Orchestration": [
          "Module Introduction",
          "Docker-Compose: What & Why?",
          "Creating a Compose File",
          "Diving into the Compose File Configuration",
          "Installing Docker Compose on Linux",
          "Docker Compose Up & Down",
          "Working with Multiple Containers",
          "Adding Another Container",
          "Building Images & Understanding Container Names",
          "Docker Compose",
          "Module Summary",
          "Module Resources"
        ],
        "Working with \"Utility Containers\" & Executing Commands In Containers": [
          "Module Introduction & What are \"Utility Containers\"?",
          "Utility Containers: Why would you use them?",
          "Different Ways of Running Commands in Containers",
          "Building a First Utility Container",
          "Utilizing ENTRYPOINT",
          "Using Docker Compose",
          "Utility Containers, Permissions & Linux",
          "Module Summary",
          "Module Resources"
        ],
        "A More Complex Setup: A Laravel & PHP Dockerized Project": [
          "Module Introduction",
          "The Target Setup",
          "Adding a Nginx (Web Server) Container",
          "Adding a PHP Container",
          "Adding a MySQL Container",
          "Adding a Composer Utility Container",
          "Creating a Laravel App via the Composer Utility Container",
          "Fixing Errors With The Next Lecture",
          "Launching Only Some Docker Compose Services",
          "Adding More Utility Containers",
          "Docker Compose with and without Dockerfiles",
          "Bind Mounts and COPY: When To Use What",
          "Module Resources"
        ],
        "Deploying Docker Containers": [
          "Module Introduction",
          "From Development To Production",
          "Deployment Process & Providers",
          "Getting Started With An Example",
          "Bind Mounts In Production",
          "Introducing AWS & EC2",
          "Connecting to an EC2 Instance",
          "Important: Installing Docker on a Virtual Machine",
          "Installing Docker on a Virtual Machine",
          "Installing Docker on Linux in General",
          "Pushing our local Image to the Cloud",
          "Running & Publishing the App (on EC2)",
          "Managing & Updating the Container / Image",
          "Disadvantages of our Current Approach",
          "From Manual Deployment to Managed Services",
          "Important: AWS, Pricing and ECS",
          "Deploying with AWS ECS: A Managed Docker Container Service",
          "More on AWS",
          "Updating Managed Containers",
          "Preparing a Multi-Container App",
          "Configuring the NodeJS Backend Container",
          "Deploying a Second Container & A Load Balancer",
          "Using a Load Balancer for a Stable Domain",
          "Using EFS Volumes with ECS",
          "Our Current Architecture",
          "Databases & Containers: An Important Consideration",
          "Moving to MongoDB Atlas",
          "Using MongoDB Atlas in Production",
          "Our Updated & Target Architecture",
          "Understanding a Common Problem",
          "Creating a \"build-only\" Container",
          "Introducing Multi-Stage Builds",
          "Building a Multi-Stage Image",
          "Deploying a Standalone Frontend App",
          "Development vs Production: Differences",
          "Understanding Multi-Stage Build Targets",
          "Beyond AWS",
          "Module Summary",
          "Module Resources"
        ],
        "Docker & Containers - A Summary": [
          "Module Introduction",
          "Images & Containers",
          "Key Commands",
          "Data, Volumes & Networking",
          "Docker Compose",
          "Local vs Remote",
          "Deployment",
          "Module Resources"
        ]
      },
      "requirements": [
        "NO prior Docker or Kubernetes experience is required!",
        "Basic (web) development knowledge is required - you don't need to know a specific language though",
        "AWS (used in a couple of deployment examples, ~4 hours of the course) requires a credit card - you can also follow along passively though"
      ],
      "description": "Join this bestselling Docker & Kubernetes course and learn two of the most important development technologies from the ground up, in great detail!\n-\nDocker & Kubernetes are amongst the most in-demand technologies and topics you can learn these days.\nWhy?\nBecause they significantly simplify the development and deployment process of both simple and complex software projects. Especially in web development (though not limited to that), Docker can really take you to the next level!\nWith Docker, you create and manage so-called \"Containers\" - basically packages of code and tools required to run that code. These containers allow you to run your programs in a predictable, environment-independent way - no matter where you need to run it.\nFor modern DevOps (Development Operations) but also for local development - on your own or in a team - this is a winner feature since you will no longer have any \"but it worked on my machine\" discussions. It works inside of a container, hence it works everywhere!\nThis course will teach you both Docker & Kubernetes from the ground up with all the required theory and tons of examples and demos!\nWe'll explore all key concepts in detail and with practical examples and demos - from images and containers, over volumes and networking all the way up to deployment and Kubernetes Cluster: This course has it all!\nIn detail, this course includes the following topics:\nA thorough introduction to Docker, containers and why you might want to use Docker\nDetailed setup instructions for macOS and Windows\nA deep-dive into the core concepts you need to know: Containers & images\nLearn how to create custom images, use existing images and how to run containers based on such images\nGet a detailed overview of the core commands you need when working with Docker\nLearn how to work with data and how to persist data with volumes\nExplore container networking - with the outside world and between multiple containers\nLearn how to work with both single and multi-container projects\nIn-depth deployment instructions: Manual deployment and deployment with managed services like AWS ECS\nUnderstand Kubernetes core concepts & architecture\nLearn how to create Kubernetes resources, deployments, services and how to run your containers with Kubernetes\nDive deeply into working with data in Kubernetes projects - with different types of volumes\nKubernetes networking and DNS service discovery\nLearn how to deploy your Kubernetes project (at the example of AWS EKS)\nAnd much more!\nAll these topics are taught in great detail with slides and theory but also, most importantly, with many examples and demo!\nYou'll find tons of demo projects throughout the course - using programming languages like NodeJS, Python or PHP (with Laravel). You don't need to know these languages to follow along though, no worries!",
      "target_audience": [
        "Everyone who has NOT worked with Docker or Kubernetes at all",
        "Everyone who is struggling with understanding what exactly Docker is (and why you might want to use it)",
        "(Web) developers who want to explore modern DevOps and Docker"
      ]
    },
    {
      "title": "RESTful Web API - The Complete Guide (.NET7 API) Part 1",
      "url": "https://www.udemy.com/course/restful-api-with-asp-dot-net-core-web-api/",
      "bio": "Build RESTful web API (C#) with Authentication and learn how to consume them in a real world application (.NET 7 API)",
      "objectives": [
        "Learn basic fundamentals of ASP NET Core Web API",
        "Build RESTful API's in .NET 7",
        "Learn how to document an API",
        "Versioning in an API",
        "Implement Repository Pattern in API to database using EF",
        "Implement Authentication and Authorization in API and Consume API",
        ".NET Identity to Authenticate API",
        "Integrate Entity Framework along with code first migrations",
        "Learn how to consume API using HTTPClient in the Repository Pattern",
        "Dependency Injection in .NET API",
        "Deploying API to Azure"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Demo",
          "Identity Server and .NET 7 API",
          "What we will cover",
          "What is api",
          "Request and response",
          "Request Object",
          "Response object",
          "Project Resources",
          ".NET 9 UPDATE (Do Not Skip)",
          "Swashbuckle removed from .NET 9",
          "Create Project (.NET 7 - OLD Way)",
          "Create Project (.NET 9 - New Way)",
          "Swagger with Open API",
          "Replace Open API with Swagger",
          "Default Page Load"
        ],
        "First End point": [
          "Add project to source control",
          "Code CleanUp",
          "Create VillaAPIController Class",
          "First API Endpoint - HTTPGET",
          "Using Controller Name in Route",
          "Add VillaDTO",
          "Villa Data Store",
          "Get individual Villa"
        ],
        "CRUD Functionality": [
          "Status Code in EndPoints",
          "Response Types",
          "HttpPOST in Action",
          "CreatedAtRoute",
          "ModelState Validations",
          "Custom ModelState Validation",
          "Http Delete in Action",
          "Http PUT in action",
          "Http Patch Nuget Packages",
          "Http Patch in Action",
          "PostMan",
          "Content Negotiations"
        ],
        "Dependency Injection and DBContext": [
          "Logger Dependency Injection",
          "Changing Logger with Dependency Injection - Serilog",
          "Dependency Injection - Custom Logging",
          "Entity Framework Core Database Models",
          "NugetPackages for Entity Framework Core",
          "SQL Server Connection Server Name",
          "Connection String and DbSet Entity",
          "Use Connection String",
          "Create Villa Table",
          "Seed Villa Table with records",
          "Use ApplicationDbContext in APIController",
          "Demo - Entity Frameowkr Core CRUD in Action",
          "AsNoTracking in Action"
        ],
        "DTO and AutoMapper": [
          "Seperate DTO for Create and Update",
          "Async Methods",
          "Setup AutoMapper and MApping Config",
          "AutoMapper in Action"
        ],
        "Repository": [
          "Add Villa Repository Interface",
          "Villa Repository Implementation",
          "Async Repository in Action",
          "Repository CleanUp",
          "API Response",
          "Standard API Response",
          "Villa Number Models",
          "Assignment 1 - Villa Number API Endpoints",
          "Add Foreign Key Reference",
          "CRUD Villa Number DTO with Villa ID"
        ],
        "Consuming API": [
          "Setup MVC Web Project",
          "Web Project DTO's and API Models",
          "AutoMapper",
          "Add API URL in AppSettings",
          "Base Service for API",
          "Adding Villa Service",
          "Calling Villa API",
          "Display all Villa List",
          "Create Villa UI",
          "Disable NULLABLE - IMPORTANT",
          "Update Villa Action Methods",
          "Update VIlla UI",
          "Delete Villa",
          "Add VillaNumberService",
          "Getting Villa Numbers",
          "Include Villa when retireving Villa Number",
          "Bootswatch Theme",
          "Villa Home Page",
          "Move Images",
          "Villa Number Assignment",
          "Create Villa Number GET",
          "Create Villa POST",
          "Special Validation and Base Service Update",
          "Display API Error Messages",
          "Update and Delete Action Method for Villa Number",
          "Update and Delete Villa Number",
          "Sweet Alert"
        ],
        "API Security": [
          "Add Models for Login and Registeration",
          "Add User Repository",
          "Implement User Repository - Register",
          "Implement User Repository - Login Part 1",
          "Generate Token on Successful Login",
          "User Controller",
          "Login and Register in Action",
          "Secure API Endpoints",
          "Authentication in Action",
          "Swagger and Bearer in Action"
        ],
        "Consuming Secured API": [
          "Add DTOs for Login and Registeration",
          "Add Auth Service",
          "Auth Controller Action Methods",
          "Login and Register View",
          "Auth Controller Action Methods",
          "NavBar Display",
          "Authentication in Web Project",
          "Pass Token to API from Web Project"
        ],
        "Versioning in API": [
          "Nuget Packages for API Versioning",
          "Add Versioning to API Services",
          "API Version Attribute",
          "Multiple Version in same Controller",
          "API Version Configuration",
          "Swagger Document for v1",
          "Multiple Version Swagger Doc",
          "Managing Multiple Versions - Cleaner Approach",
          "API Neutral and Depreciating API",
          "Consume Versioned API"
        ]
      },
      "requirements": [
        "6months knowlege of C#",
        "3-6 months knowledge of NET Core",
        "Visual Studio 2022",
        "SQL Server 2018",
        ".NET 7"
      ],
      "description": "This is a Beginner to Intermediate level course on ASP.NET Core Web API that will take you from the basics of building API to consuming them. This course is for anyone who is new to RESTful Web API's in ASP.NET Core or who is familiar with ASP.NET and wants to learn how to consume them effectively in an ASP.NET Core Web application.\nBy the end of this course, you will be able to build a RESTful web service with Web API by yourself, make GET, POST, PUT and DELETE HTTP Requests with a well-built repository pattern in ASP.NET Core Project. You will also get a exposure to Entity Framework Code First migrations and learn how to save your data persistently in a database.\nWe will cover authentication and authorization in Web API as well as consume them in a real-world project.\nFinally the complete project will be deployed to azure!\n\n\nWhat are the requirements?\n6months experience in C#\n3-6 months knowledge of ASP.NET Core.\nVisual Studio 2022\nSQL Server Management Studio\n.NET 7\nWhat am I going to get from this course?\nLearn basic fundamentals of ASP NET Core web API\nBuild RESTful API's in .NET 7\nLearn how to document an API using swagger and swashbuckle.\nVersioning in an API.\nImplement Repository Pattern in API to the database using EF.\nAuthentication and Authorization in ASP.NET Core API's.\nIntegrate Entity Framework along with code first migrations\nLearn how to consume API using HTTPClient in the Repository Pattern.\nDeploying .NET 7 API\nAll source codes and exercise solutions of this course are also available on Github and you can find details in the lecture \"PROJECT RESOURCES\", of course.",
      "target_audience": [
        "Anyone who wants to learn Web API in NET 7",
        "Anyone who wants to learn how to consume Web API's",
        "Anyone who wants to Learn Creating and Consuming API with Authentication"
      ]
    },
    {
      "title": "Bootstrap & jQuery - Certification Course for Beginners",
      "url": "https://www.udemy.com/course/bootstrap-jquery-certification-course-for-beginners/",
      "bio": "Learn to Create fully Animated, Interactive, Mobile Responsive Web Pages using Bootstrap & jQuery Library.",
      "objectives": [
        "How to create Mobile-Responsive web pages using the Bootstrap Grid System",
        "How to create custom, drop-down navigation menus with animation",
        "How to create collapse panels, accordion menus, pill menus and other types of UI elements",
        "Working with Typography in Bootstrap for modern, stylish fonts",
        "Working with Lists and Pagination to organize content",
        "How to add events to page elements using jQuery",
        "How to create animations in jQuery (Fade, Toggle, Slide, Animate, Hide-Show)",
        "How to add and remove elements using Selectors (Id, Class)",
        "How to use the Get Content function to retrieve Values and Attributes",
        "How to use the jQuery Callback, and Chaining Function",
        "Master the use of jQuery Animate with Multiple Params, Relative Values, and Queue Functionality"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to the Bootstrap & jQuery – Certification Course for Beginners\n\nWith over 64% of the world using mobile devices to browse web pages, it’s no surprise that Bootstrap and jQuery have become the industry leaders in front-end scripting languages.\n\nThis course starts right from the foundational concepts and gradually progresses to intermediate topics. Through a project-style learning approach, students will have the opportunity to build mobile-responsive web pages, complete with animation and interactivity.\n\nBootstrap Section:\n\nStudents are taught to use the Bootstrap framework for responsive, mobile-first - front-end development. As one of the leading open-source development libraries, Bootstrap is an essential part of the developers coding arsenal. The section begins with teaching students how to include essential Bootstrap files into web pages. It then explores the Bootstrap Grid system and popular layout strategies for optimal cross-device and cross-browser compatibility.\n\nStudents gain exposure to just about every Bootstrap component, from typography, tables and images, to jumbotrons, wells, alerts, buttons, glyphicons and progress bars. The section includes several hands-on exercises that will walk students through the process of creating stunning layouts, complete with modals, carousels, popovers, drop-down menus, forms and much more.\n\njQuery Section:\n\nWe explores the jQuery library and many of its unique features, used to create stunning, animated web pages. We start with the basics, from embedding jQuery into web pages to working with Selectors. Students then explore working with events, toggling, fading, sliding, and other forms of animation. The lessons also teach students how to work with callbacks, chaining, dragables, accordion menus and many other functions.",
      "target_audience": [
        "Students who want to learn the foundations of Bootstrap & jQuery Development",
        "Beginner Web Developers looking to upgrade their existing skills",
        "Students interested in building animated, interactive, mobile-responsive web pages",
        "Coding enthusiasts looking to learn new front-end scripting languages"
      ]
    },
    {
      "title": "Build a Backend REST API with Python & Django - Beginner",
      "url": "https://www.udemy.com/course/django-python/",
      "bio": "Finally create that App & fully-functioning user database in this crash course to building a REST API",
      "objectives": [
        "How to create the most important part of any user application",
        "How to confidently use some of the most in-demand full stack technologies today",
        "How to create a local development server from scratch",
        "How to create a brand new Django project with sqlite database",
        "How to build your own browsable, self documenting REST API",
        "Handle user registration, login, and status updates in your app with your very own REST API"
      ],
      "course_content": {},
      "requirements": [
        "Access to a computer that supports VirtualBox (unfortunately this excludes macOS running M1 chips)",
        "Familiarity with simple command line tools like command prompt or terminal.",
        "Access to a computer running either Windows 10 or macOS",
        "A passion for learning and a willingness to persevere when things get tough.",
        "If using Windows, your machine needs to support running VirtualBox",
        "A basic level of experience in any programming language."
      ],
      "description": "Welcome to the beginner course on How to Build a REST API from scratch, using Django, Django REST Framework, Python, Vagrant, VirtualBox, Atom, and ModHeaders. You'll also learn how to deploy your dev server to AWS!\nThis course is made with Django 2.2 and Django REST Framework 3.9.\nThe skills taught in this course are absolutely essential for creating successful products that users love and can’t live without.\nFacebook, Instagram, Snapchat, you name it. These apps all have their own backend REST APIs that handle millions of call requests everyday. You cannot build a successful app without a backend REST API.\nNot only is it essential to whatever app or MVP you are building -- the skills you learn in this course will make you a kickass developer in the workplace.\nIf you’re a front-end developer and you take this course, you’ll be able to “speak backend” with your colleagues and understand what’s going on “under the hood” of all your projects, increasing your confidence and earning the respect of your peers.\nIf you’re a newbie developer or just starting out in your career, this course will give you a very practical foundation to building your portfolio and increasing your earning potential.\nIn this course you will learn the best-practice way of building your very own REST API.\nYou will learn how to create a local development server and test your code each step of the way.\nWhether you’re looking to gain a bit of experience with backend development, or you’re looking to create a REST API to turn your app idea into a reality - then this course is for you.\nBy the end of this course you will have built a fully functioning REST API that can handle:\nCreating and updating user profiles.\nLogin and authentication.\nPosting status updates.\nViewing status update feeds.\nYou’ll also have a solid foundation to understanding one of the most complex components in software development.",
      "target_audience": [
        "This course is for developers who want build a REST API either for their app, MVP or business idea.",
        "This course is for frontend developers who want to learn backend."
      ]
    },
    {
      "title": "MERN Stack React Node Ecommerce from Scratch to Deployment",
      "url": "https://www.udemy.com/course/react-node-ecommerce/",
      "bio": "MERN Stack React Node MongoDB powered E-Commerce App with PayPal and Credit Card Payment along with Admin Dashboard",
      "objectives": [
        "Learn Node JS API (Backend) Development",
        "Learn React JS (Frontend) Web Development",
        "Learn to Write Functional Components with React Hooks",
        "Learn the Fundamental Concepts of Building Ecommerce Application",
        "Learn to Implement Payment Gateway using Credit Card and PayPal",
        "Learn to Integrate Braintree (A PayPal Company) for Payment Processing",
        "Learn to Implement Advance Searching/Filtering based on Categories",
        "Learn to Implement Advance Searching/Filtering based on Price Range",
        "Learn to Implement Standard Products Search System with Categories option/dropdown",
        "Learn to Build Shopping Cart",
        "Learn to Implement Authentication based on JWT",
        "Learn to Build Scalable React App with Proper Layouts and Routes",
        "Learn to build Admin and User Dashboard",
        "Learn to Implement Flexible Private and Admin Routing System",
        "Learn advance CRUD with Products and Categories",
        "Learn to handle File Upload",
        "Learn to use LocalStorage (CRUD) to Minimize Requests to Backend",
        "Learn to Store Sold Products Record into the Database for Further Processing",
        "User Profile and Update Ability",
        "Learn to implement Order Management System by Admin",
        "Learn to Deploy your app to Digital Ocean's Cloud Servers",
        "Learn to add a Custom Domain name to your app",
        "Learn to use Cloudflare's CDN to serve your app (for speed)",
        "Learn to use Cloudflare's free SSL to secure your app"
      ],
      "course_content": {
        "Introduction": [
          "Course introduction",
          "Are you ready for this course?",
          "Are you new to JavaScript React and NodeJs?",
          "Course roadmap (optional)"
        ],
        "Node - Project Setup": [
          "Download source code for all the lectures from Github",
          "Express server",
          "Mongoose version",
          "Using MongoDB Atlas",
          "Signup with MongoDB Atlas",
          "Resources to install MongoDB and Robo3T (optional)",
          "Connecting to MongoDB",
          "Routes",
          "Controllers"
        ],
        "Node - User Signup and Signin": [
          "User schema",
          "Virtual fields and methods",
          "User signup",
          "Using Postman to signup user",
          "Error handler method and UUID solution",
          "Friendly error message",
          "Using the right version of express-validator for the next lecture",
          "Using express validator",
          "User signin using JWT",
          "Using Postman to signin user",
          "User signout"
        ],
        "Node - Auth and Admin Middlewares": [
          "Express JWT Error - Algorithms should be set (for next lecture)",
          "Require signin middleware",
          "Renaming from user to auth",
          "User by id middleware",
          "Auth and admin middlewares"
        ],
        "Node - Product and Categories": [
          "Category model route and controller",
          "Creating category using postman",
          "Product model",
          "File upload code update",
          "Create product with file upload",
          "Creating product using postman",
          "Create product validation",
          "Product by id middleware and single product",
          "Product delete",
          "Product update",
          "Category by id and single category",
          "Category update delete and get all"
        ],
        "Node - Sending Products with Queries": [
          "Products by sell and arrival on request query params",
          "Fetch products based on request query using postman",
          "Related products",
          "List product categories",
          "Products by search source code",
          "List products by search",
          "Send product photo",
          "User profile read and update",
          "Installing CORS"
        ],
        "React - React Hooks (Optional)": [
          "Get up and running with React Hooks",
          "React hooks",
          "Why we used class components?",
          "Counter app using class",
          "useState hook",
          "useEffect hook",
          "News app using hooks",
          "Search news on input change",
          "Controlling useEffect's behaviour",
          "Loading",
          "Code Organization"
        ],
        "React - React App with Pages and Layouts": [
          "Create react app",
          "React router version",
          "Routing pages",
          "Menu and active links",
          "Shared layout component",
          "Environment variables"
        ],
        "React - User Signup and Signin": [
          "Signup form handle change",
          "User signup",
          "User signup success and error",
          "Code refactoring - Signup",
          "User signin",
          "Save user and token in local storage",
          "User signout",
          "Show and hide signin signout links conditionally"
        ],
        "React - Private and Admin Route with User Dashboard": [
          "Private route for authenticated users only",
          "User dashboard",
          "Links on user dashboard",
          "Admin dashboard",
          "Private route for admin"
        ]
      },
      "requirements": [
        "Basic Understanding JavaScript or any other programming language",
        "Basic Understanding of React Js",
        "Basic Understanding of Node Js"
      ],
      "description": "COURSE UPDATE: Deployment, Domain, CDN and free SSL\nLearn to Deploy your fully functioning Ecommerce app to production by using Digital Ocean cloud servers. Learn to add your own custom Domain name. Learn to use Cloudflare's CDN to supercharge the speed of your site and also use free SSL to secure your app.\n\n\nFull Stack / MERN Stack (Mongo Express React Node) Powered Ecommerce App from Scratch to Deoplyment\n\n\nAs a Web Developer, I have always wanted to build an Ecommerce App.\nI wanted to know how to implement Add to Cart, Payment Gateways, Order Management System and so much more...\n\n\nAnd I know a lot of you out there want to experience building Ecommerce app. The experience is absolutely amazing and it gives you loads of must have knowledge and confidence to start off your next big project using React Node and MongoDB.\n\n\nThis course also uses latest React Hooks which is an absolute joy. Your code will be so much simplified and readable, you wont believe it.\n\n\nOur Node API will follow MVC Pattern. The codebase will be so clean and elegant, you will be absolutely loving it.\n\n\nYou will also get introduced with Braintree (A PayPal Company) for handling Payments. Braintree is hands down the best payment gateway you could possibly use in a production site for both PayPal and Credit Card payments.\n\n\nBy the end of the course you will learn to deploy your fully functioning Ecommerce app to Digital Ocean cloud servers for production.\n\n\nNot only that... you will also learn to add your own custom Domain, use Cloudflare's CDN to supercharge your app and free SSL to secure your app.\n\n\nAll this goodness for the price of lunch? YES! Thats right!\n\n\nWe are really living in an age of goodness. Aren't we?\n\n\nOK. Enough said, I know you cant wait to get your hands on this course :)\n\n\nBy the way, you will never get stuck with this course because each lecture has the Source Code available. Really?\n\n\nHere are some of the course highlights:\n\n\nSearch product\nSearch products based on particular category\nNew arrivals\nBest sellers\nProduct image\nProduct information\nProduct in stock/out of stock\nView product\nRelated product\nAdd to cart\nRemove product\nAdjust quantity\nSignin to checkout\nUser dashboard\nAdmin dashboard\nPrivate routes\nAdmin routes\nShopping cart\nCheckout with credit card and paypal\nCheckout with delivery address\nSuccess message\nUpdate profile\nAdvance search of products\nAdvance search based on category and price range\nLoad more products\nAdmin dashboard\nCreate category\nCreate product\nView orders\nManage products update/delete\nRole based access\nand lots more...............\n\n\nLet me welcome you in an Incredible Journey of Building a  MERN Stack React, Node and MongoDB powered Ecommerce Application from the groud up. Let's do it. Let's code together.",
      "target_audience": [
        "A Web Developer looking to Build API with Node JS and MongoDB",
        "A Web Developer looking to Build Fast, Interactive and Scalable Web Applications using React JS",
        "A Web Developer looking to Build a FullStack Ecommerce Application using MERN Stack"
      ]
    },
    {
      "title": "React & TypeScript - The Practical Guide",
      "url": "https://www.udemy.com/course/react-typescript-the-practical-guide/",
      "bio": "Build type-safe React apps & use TypeScript to enhance your components, state management, Redux & side effects code.",
      "objectives": [
        "Learn how to build React apps with TypeScript",
        "Get a structured introduction to TypeScript",
        "Use both basic & advanced TypeScript concepts",
        "Build dynamic & highly flexible components with React & TypeScript",
        "Build advanced & highly dynamic components in a type-safe way",
        "Use TypeScript with React's Context API & useReducer() Hook",
        "Manage state and events with React and TypeScript",
        "Use TypeScript with Redux for type-safe global state management"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course!",
          "Why React & TypeScript?",
          "About The Course & Course Content",
          "How To Get The Most Out Of The Course",
          "Learning Community & Course Resources",
          "Creating & Using React + TypeScript Projects",
          "Course Setup"
        ],
        "TypeScript Basics & Core Concepts": [
          "Module Introduction",
          "TypeScript Setup & Using TypeScript",
          "Working with Types: Type Inference & Explicit Type Annotations",
          "Basic Primitive Types",
          "Invoking The TypeScript Compiler",
          "Combining Types Union Types (Alternative Types)",
          "Working with Object Types",
          "Working with Array Types",
          "Adding Types to Functions - Parameter & Return Value Types",
          "Defining Function Types",
          "Creating Custom Types / Type Aliases",
          "Defining Object Types with Interfaces",
          "Interfaces vs Custom Types",
          "Merging Types",
          "Being Specific With Literal Types",
          "Adding Type Guards",
          "Type Guards & Type Narrowing - A Closer Look",
          "Making Sense Of Generic Types",
          "Summary"
        ],
        "Using TypeScript with React - Essentials": [
          "Module Introduction",
          "Creating a React + TypeScript Project",
          "Understanding the Role of tsconfig.json",
          "Building a First Component & Facing a Missing Type",
          "Defining Component Props Types",
          "Storing Props Types as a Custom Type or Interface",
          "Defining a Type for Props with \"children\"",
          "Component Props & The Special \"key\" Prop",
          "Another Way Of Typing Components",
          "Exercise: Creating a Header Component",
          "Using useState() and TypeScript",
          "Working with State & Outputting State-based Values",
          "Another Exercise & Reusing Types Across Files",
          "Passing Functions as Values - In A Type-Safe Way",
          "Handling & Typing Events",
          "Working with Generic Event Types",
          "Using useRef() with TypeScript",
          "Handling User Input In A Type-Safe Way",
          "Summary"
        ],
        "Advanced Component Types - Dynamic Components, Polymorphic Components & More": [
          "Module Introduction",
          "Building a More Dynamic & Flexible Component",
          "Problem: Flexible Components With Required Prop Combinations",
          "Solution: Building Components with Discriminated Unions",
          "Onwards To A New Project",
          "Building a Basic Wrapper Component",
          "Building Better Wrapper Components with ComponentPropsWithoutRef",
          "Building a Wrapper Component That Renders Different Elements",
          "Working with Type Predicates & Facing TypeScript Limitations",
          "Building a Basic Polymorphic Component",
          "Building a Better Polymorphic Component with Generics",
          "Examples: More Component Ideas",
          "Using forwardRef with TypeScript",
          "Building Another Wrapper Component (Custom Form Component)",
          "Sharing Logic with \"unknown\" & Type Casting",
          "Exposing Component APIs with useImperativeHandle (with TypeScript)",
          "Alternative: Avoiding Type Casting with \"as\"",
          "Summary"
        ],
        "Advanced Type-Safe State with Context API & useReducer()": [
          "Module Introduction",
          "The Starting Project",
          "Creating a Context & Fitting Types",
          "Creating a Type-Safe Provider Component",
          "Accessing Context Type-Safe With A Custom Hook",
          "Getting Started with useReducer() & TypeScript",
          "A Basic Reducer Function & A Basic Action Type",
          "Changing State via the Reducer Function",
          "Using Better Action Types",
          "Wiring Everything Up & Finishing the App"
        ],
        "Side Effects, useEffect() & Data Fetching with TypeScript": [
          "Module Introduction",
          "Creating a First Side Effect",
          "Using useEffect() with TypeScript",
          "Managing An Interval With Refs & The Effect Cleanup Function",
          "useEffect() & Its Dependencies",
          "A Small Bug & Its Solution",
          "Onwards to Data Fetching!",
          "Building a Utility \"get\" Function with TypeScript",
          "Fetching & Transforming Data",
          "Alternative: Using the \"zod\" Library for Response Data Validation",
          "Alternative: A Generic \"get\" Function",
          "Handling Loading & Error States"
        ],
        "Using Redux with TypeScript": [
          "Module Introduction",
          "The Starting Project",
          "Redux Setup",
          "Creating a Redux Store & A First Slice",
          "Setting a State Type",
          "A First Reducer & Controlling the Action Payload Type",
          "Adding Logic To The Reducer",
          "Providing the Redux Store",
          "Dispatching Actions & Adjusting the useDispatch Hook",
          "Creating a Type-Safe useSelector Hook",
          "Selecting & Transforming Redux Store Data",
          "Finishing Touches & Summary"
        ],
        "Practice Project: A \"Book a Session\" Management Application": [
          "Your Task",
          "Your Task - Details",
          "Hints",
          "An Example Solution"
        ],
        "Bonus Content": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic React knowledge of core concepts (components, JSX, state) is needed",
        "NO prior TypeScript knowledge is required"
      ],
      "description": "TypeScript is an amazing technology that helps developers write better code with less errors - simply because it let's you catch & fix type-related errors immediately whilst writing the code (instead of when testing the application).\nBut using TypeScript with React can sometimes be tricky. Especially when building more complex, dynamic components, defining the right types can be challenging.\nThat's why I built this course!\nThis course will teach you how to use TypeScript with React - and, of course, the course will introduce you to all the core concepts & patterns you need to work with components, state, side effects & more in a type-safe way!\nThis course will:\nTeach you WHY using TypeScript in your React projects might be a good idea\nIntroduce you to the key TypeScript concepts you'll need - when working with React & in general\nGet you started with using TypeScript with React - for components, state & more\nExplore more advanced, complex patterns & examples\nHelp you with building dynamic or even polymorphic components in a type-safe way\nTeach you how to use TypeScript with React's Context API\nExplore how you can enhance code used with useReducer() with help of TypeScript\nCover data fetching & useEffect() with TypeScript\nUse the popular Redux library in a type-safe way\nBuild or improve multiple demo projects so that can apply your knowledge\nBy the end of the course, you'll be able to use TypeScript in your own (future) React projects and write better, more type-safe code.\nCourse prerequisites:\nNO prior TypeScript knowledge is required - though basic knowledge will help (but the course includes an introduction module)\nBasic React knowledge (components, JSX, state) IS required - more advanced concepts will be explained though",
      "target_audience": [
        "React developers who want to improve the quality & type-safety of their codebase",
        "TypeScript developers who want to apply their knowledge to React apps"
      ]
    },
    {
      "title": "Build Reports with JasperReports, Java and Spring Boot",
      "url": "https://www.udemy.com/course/reporting-with-jasperreports-java-spring-boot-jasperstudio-jaspersoft/",
      "bio": "Reporting with Java & Spring Framework Using TIBCO JasperSoft and Jasper Studio. Reports with Charts, Table, Sub Report",
      "objectives": [
        "You will learn to build reports with Java and Spring Boot using Jasper Reports",
        "You will learn to build report dynamically at run time using Java Application & Spring Boot Application",
        "You will learn to export report in different formats like PDF, HTML, Microsoft Excel",
        "You will learn to build report with Image and Charts ( Pie Chart, 3D Bar Chart)",
        "You will learn to build report with table data using Data Source",
        "You will learn different bands provided by Jasper Reports - Title, Page Header, Page Footer, Column Header, Column Footer, Details, Summary",
        "You will learn how to have sub report with Jasper Reports"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What Is Reporting and Why We Need It ?"
        ],
        "Introduction To Jasper": [
          "What is Jasper Report ?",
          "JDK, Maven and STS Installation",
          "Download and Install JasperSoft Studio",
          "Setting Up Java Project with Jasper"
        ],
        "Getting Started with Jasper": [
          "Create First Report with Jasper Studio",
          "Basic Elements In Jasper Report",
          "Parameters, Fields and Variables in Jasper Report",
          "Create Parameter and Set Its Value In Java App",
          "Setting up Fields For Table Data",
          "Generate Report In PDF Format",
          "Alignment Of Element",
          "Changing Element Properties From Java Code (Dynamically at Run Time)"
        ],
        "Custom Report with Jasper": [
          "Introduction To Custom Report",
          "Create Blank Report and Understanding Bands",
          "Adding Label, TextField and Image To Report",
          "Adding Line To Report as Page Header",
          "Adding Page Footer To Display Page Count"
        ],
        "Table Inside Report": [
          "Adding Table To Report",
          "Setting Up Dataset and Fields For Table",
          "Create Report By Filling Table Data From Java App",
          "Sorting Table Data By Column",
          "Total Count Of Particular Column Values"
        ],
        "Charts Inside Report": [
          "Setting Up Fields and Data Source For Charts",
          "Adding Pie Chart To Report and Understanding Terms",
          "Create Report with Pie Chart",
          "Create Report with 3D Bar Chart"
        ],
        "Different Formats Of Report - HTML, Microsoft Excel": [
          "Exporting Report In HTML Format",
          "Exporting Report In MS Excel Format"
        ],
        "Sub Report ( Report Inside Another Report )": [
          "Create Sub Report",
          "Generate Sub Report with Data Source",
          "Sub Report with Parameter"
        ],
        "Jasper Reports with Spring Boot": [
          "Setting up String Boot App",
          "Getting Report with GET API using Spring Boot"
        ],
        "Thank You....": [
          "Bonus Lecture",
          "Thank You...."
        ]
      },
      "requirements": [
        "Need to have basic knowledge of Java"
      ],
      "description": "***** Some Reviews From Students *****\nI found exactly what I'm looking for. Thank you\nreporting is essential and that's what this course covers. amazing course.\nIn this course you will learn to create reports From your Java and Spring Boot Application using Jasper Reports. The course is designed in such a way that you will learn to build reports from scratch and at the end you will be able to create report like shown in preview video.\nYou will learn to export your report in different formats like PDF, HTML and Microsoft Excel. You will learn how to build report dynamically at run time from Java Application.\nFirst you will learn to design your report with JasperStudio that is basically your template file. After that you will learn to fill report by passing data from your Java Application.\nYou will learn different elements provided by Jasper Reports Like Static Text, Text Field. You will learn how to use Jasper Parameters, Fields and Variables to fill data from your Java Application.\nYou will learn to design your custom report from scratch. In this you will learn different bands provided by Jasper Reports - Title, Page Header, Page Footer, Column Header, Column Footer, Details, Summary\nEach of these bands you will learn in detail as describe below.\nImage, Label and Text value inside your Title Band\nHorizontal line in Page Header\nDisplay page number out of total number of pages using Page Footer\nTable with data using Details Band\nDraw Pie Chart and 3D Bar Chart in Summary Band\nUsing Jasper Reports you can build report with any of your Java Applications. Be it Spring Boot OR JavaFX OR Java Console Application.",
      "target_audience": [
        "Any Java Developer who is interested to build reports"
      ]
    },
    {
      "title": "Microservices with Spring Boot, Spring Cloud, Docker, K8s",
      "url": "https://www.udemy.com/course/microservices-with-spring-boot/",
      "bio": "Build Microservices with Java, Spring Boot, Spring Cloud, Docker, Kubernetes, Okta, Spring Security, CI/CD, GCP",
      "objectives": [
        "What is microservices architecture and how it is different from monolithic and SOA architectures",
        "How to build production ready microservices using  Spring, SpringBoot, Spring Cloud and Cloud Platforms",
        "Orchestrate microservices with KUBERNETES",
        "Create containers for microservices with DOCKER",
        "Configuration management in microservices using Spring Cloud Config Server",
        "Service Discovery and Registration pattern inside microservices and how to implement using Spring Eureka server",
        "Building resilient microservices using RESILIENCE4J framework",
        "Microservices Security using OAuth2 and Okta",
        "Implementing CI/CD Pipelines for Microservices deployment",
        "Deploying Microservices to Google Cloud Platform",
        "Implementing Distributed tracing & Log aggregation in microservices",
        "Unit Testing for all layers in Microservices"
      ],
      "course_content": {
        "Introduction - Microservices with Spring Boot": [
          "Introduction",
          "Course Repo Details"
        ],
        "Introduction to Spring Boot": [
          "What is Spring Boot?",
          "What is Dependency Injection?",
          "Spring Initializr",
          "Setting up your IDE for Spring Boot Project",
          "Creating First Hello World API",
          "Spring Boot Starters Project",
          "Understanding Spring Boot Magic",
          "Embedded Servers",
          "Exploring Spring Boot Actuator",
          "Exploring Spring Boot DevTools",
          "Spring Boot Introduction Quiz"
        ],
        "Introduction to Web Services": [
          "Introduction to Web Services",
          "What is Web Service?",
          "How Webservices work?"
        ],
        "RESTful Web Services with Spring Boot": [
          "What is REST?",
          "Creating a Hello World Service",
          "Enhancing Hello World Service to Return an Object",
          "Working with the Path Variables",
          "Working with Request Params",
          "Implementing POST method to Create Employee Resource",
          "Implementing GET Method for Employee Resource",
          "Implementing GET Method for Employee by Id",
          "Implementing Exception Handling - 404 Resource Not Found",
          "Implementing Generic Exception Handling for All Resources",
          "Implementing DELETE Method to delete a Employee Resource",
          "Content Negotiation - Implementing Support for XML and JSON",
          "Implementing Data Filtering for RESTful Services",
          "API Versioning"
        ],
        "Spring Data JPA with Spring Boot": [
          "What is JPA with REST API?",
          "Setting up JPA and Different Classes",
          "Create Employee POST methods with JPA",
          "Get Employee Data from DB with JPA",
          "Delete Employee Data from DB using JPA",
          "Converting H2 DB to MYSQL DB"
        ],
        "Introduction to Microservices": [
          "All about Microservices"
        ],
        "Microservices Implementation": [
          "Overview of Implementing Microservice Architechture",
          "What is Service Registry?",
          "Creating Product Service",
          "Implementing Create Product API",
          "Implementing Get Product API",
          "Exception Handling in Product Service",
          "Creating Service Registry",
          "Implementing Service Registry Client in Product Service",
          "Creating Order Service Application with packages and Classes",
          "Creating Place Order API with Basic data saving",
          "Implement Service registry Client in Order Service",
          "How to handle repetitive configurations",
          "Config Server Repo",
          "Creating Config Server",
          "Adding Config Client in Order and Product Service",
          "Implementing ReduceQuantity API in Product Service",
          "Testing reduceQuantity API",
          "Feign Client Introduction",
          "Calling ReduceQuantity API from placeOrder Service using Feign Client",
          "Implementing ErrorDecoder to handle Exceptions",
          "Adding ExceptionHandler in OrderService",
          "Installing Zipkin via Docker",
          "Adding Distributed Log Tracing (Zipkin and Slueth)",
          "Creating Payment Service Application",
          "Implementing doPayment API in Payment Service",
          "Calling doPayment API with Feign Client from placeOrder",
          "Implementing GetOrder Details in Order Service",
          "Fetching Product data for getOrder details API",
          "Fetching Payment details for getOrder detials API",
          "Introduction to API Gateway",
          "Implementing API Gateway Service",
          "What is Circuit Breaker",
          "Implementing Circuit Breaker in API gateway",
          "Implementing Circuit Breaker in Order Service",
          "Implementing Rate Limiter in API Gateway using Resilience 4j and Redis"
        ],
        "Spring Security with Microservices": [
          "Intro to Spring Security",
          "Okta Registration and Configuration",
          "Adding Security in API Gateway",
          "Implement Authenticate Login API",
          "Adding Security in Order Service",
          "Adding Interceptors",
          "Adding Security in Product Service",
          "Adding Security in Payment Service",
          "Testing Spring Security",
          "Okta Configuration"
        ],
        "Securing Microservices with Auth0": [
          "Spring Security and Auth0 Introduction",
          "Code Repo Details",
          "Microservice Architecutre and How Security will work with microservices",
          "Spring Security Components",
          "Auth0 Config Understanding",
          "Auth0 Configuration Changes in Auth0 Dashboard",
          "Upgrading Spring Boot and Java 21",
          "Implement Login API in Cloud Gateway",
          "Implement Resource Server in Product Service",
          "Implement Resource Server in Payment Service",
          "Implement Resource Server in Order Service and Passing Token to Internal Service",
          "Implement TokenRelay in Cloud Gateway",
          "Auth0 Configuration Step by Step Documentation"
        ],
        "Unit Testing of Microservices": [
          "Overview of Unit Testing",
          "Congifure Order Service for Testing",
          "Creating Test Class for Service layer",
          "Create a Test Method with Mocking",
          "Test Verify and Assertions",
          "Testing GetOrderDetails Failure Scenario",
          "Testing PlaceOrder Success Scenario",
          "Testing PlaceOrder Failure Scenario",
          "Checking Coverage",
          "Overview of Testing Controller",
          "Creating OrderControllerTest Class",
          "Adding Dependencies in Controller Test",
          "Implementing Setup Methods",
          "PlaceOrder Test Success Scenario",
          "PlaceOrder Forbidden Scenario",
          "GetOrder Success Scenario",
          "GetOrder Failure Scenario"
        ]
      },
      "requirements": [
        "Experience with Java",
        "You have ZERO Experience with Spring",
        "You have ZERO Experience with Microservices",
        "You have ZERO Experience with Docker",
        "You have ZERO Experience with Kubernetes",
        "You have ZERO Experience with CI/CD"
      ],
      "description": "This course requires you to download Docker Desktop from the official docker site. If you are a Udemy business user, please check with your employer before downloading the software.\n\n\nDo you want to Learn to Build an Amazing REST API with Spring Boot? Do you want to learn what the Hype about Microservices is all about? Do you want to Build Microservices with Spring Boot and Spring Cloud? Do you want to Build Containers with Docker? Do you want to orchestrate Microservices with Kubernetes? Look no further!\n\n\nWhat is microservices architecture and how is it different from monolithic and SOA architectures\nHow to build production-ready microservices using Spring, SpringBoot, and Spring Cloud\nConfiguration management in microservices using Spring Cloud Config Server\nService Discovery and Registration pattern inside microservices and how to implement using Spring Eureka server\nBuilding resilient microservices using the RESILIENCE4J framework\nHandling Cross-cutting concerns and routing inside microservices using Spring Cloud Gateway\nImplementing Distributed tracing & Log aggregation in microservices using Spring Sleuth and Zipkin\nRole of Docker in microservices and how to build docker images, containers\nMost commonly used Docker commands\nRole of Kubernetes in microservices as a container orchestration framework.\nHow to setup a Kubernetes cluster and deploy microservices inside it\nThe most commonly used Kubernetes commands\nMicroservices Security using OAuth2 and Okta\nUnit testing for all layers in Microservices\nCI/CD Pilepile with Jenkins for the deployment of Microservices\nGCP Cloud Platform as a Cloud provider for deploying Microservices to Cloud using CI/CD Pipeline\nThe pre-requisite for the course is basic knowledge of Java and an interest in learning.",
      "target_audience": [
        "Beginner students who are learning Spring framework and interested in Microservices as well",
        "Developers who already know developing web applications using Spring framework",
        "Java Architects"
      ]
    },
    {
      "title": "Advanced CSS and Sass: Flexbox, Grid, Animations and More!",
      "url": "https://www.udemy.com/course/advanced-css-and-sass/",
      "bio": "The most advanced and modern CSS course on the internet: master flexbox, CSS Grid, responsive design, and so much more.",
      "objectives": [
        "Tons of modern CSS techniques to create stunning designs and effects",
        "Advanced CSS animations with @keyframes, animation and transition",
        "How CSS works behind the scenes: the cascade, specificity, inheritance, etc.",
        "CSS architecture: component-based design, BEM, writing reusable code, etc.",
        "Flexbox layouts: build a huge real-world project with flexbox",
        "CSS Grid layouts: build a huge real-world project with CSS Grid",
        "Using Sass in real-world projects: global variables, architecting CSS, managing media queries, etc.",
        "Advanced responsive design: media queries, mobile-first vs desktop-first, em vs rem units, etc.",
        "Responsive images in HTML and CSS for faster pageloads",
        "SVG images and videos in HTML and CSS: build a background video effect",
        "The NPM ecosystem: development workflows and building processes",
        "Get friendly and fast support in the course Q&A",
        "Downloadable lectures, code and design assets for all projects"
      ],
      "course_content": {
        "Welcome, Welcome, Welcome!": [
          "Welcome to the Most Advanced CSS Course Ever!",
          "READ BEFORE YOU START!",
          "Setting up Our Tools"
        ],
        "Natours Project — Setup and First Steps (Part 1)": [
          "Section Intro",
          "Project Overview",
          "Building the Header - Part 1",
          "Building the Header - Part 2",
          "Creating Cool CSS Animations",
          "Building a Complex Animated Button - Part 1",
          "Building a Complex Animated Button - Part 2"
        ],
        "How CSS Works: A Look Behind the Scenes": [
          "Section Intro",
          "Three Pillars of Writing Good HTML and CSS (Never Forget Them!)",
          "How CSS Works Behind the Scenes: An Overview",
          "How CSS is Parsed, Part 1: The Cascade and Specificity",
          "Specificity in Practice",
          "How CSS is Parsed, Part 2: Value Processing",
          "How CSS is Parsed, Part 3: Inheritance",
          "Converting px to rem: An Effective Workflow",
          "How CSS Renders a Website: The Visual Formatting Model",
          "CSS Architecture, Components and BEM",
          "Implementing BEM in the Natours Project"
        ],
        "Introduction to Sass and NPM": [
          "Section Intro",
          "What is Sass?",
          "First Steps with Sass: Variables and Nesting",
          "First Steps with Sass: Mixins, Extends and Functions",
          "A Brief Introduction to the Command Line",
          "NPM Packages: Let's Install Sass Locally",
          "NPM Scripts: Let's Write and Compile Sass Locally",
          "The Easiest Way of Automatically Reloading a Page on File Changes"
        ],
        "Natours Project — Using Advanced CSS and Sass (Part 2)": [
          "Section Intro",
          "Converting Our CSS Code to Sass: Variables and Nesting",
          "Implementing the 7-1 CSS Architecture with Sass",
          "Review: Responsive Design Principles and Layout Types",
          "Building a Custom Grid with Floats",
          "Building the About Section - Part 1",
          "Building the About Section - Part 2",
          "Building the About Section - Part 3",
          "Building the Features Section",
          "Building the Tours Section - Part 1",
          "Building the Tours Section - Part 2",
          "Building the Tours Section - Part 3",
          "Building the Stories Section - Part 1",
          "Building the Stories Section - Part 2",
          "Building the Stories Section - Part 3",
          "Building the Booking Section - Part 1",
          "Building the Booking Section - Part 2",
          "Building the Booking Section - Part 3",
          "Building the Footer",
          "Building the Navigation - Part 1",
          "Building the Navigation - Part 2",
          "Building the Navigation - Part 3",
          "Building a Pure CSS Popup - Part 1",
          "Building a Pure CSS Popup - Part 2"
        ],
        "Natours Project — Advanced Responsive Design (Part 3)": [
          "Section Intro",
          "Mobile-First vs Desktop-First and Breakpoints",
          "Let's Use the Power of Sass Mixins to Write Media Queries",
          "Writing Media Queries - Base, Typography and Layout",
          "Writing Media Queries - Layout, About and Features Sections",
          "Writing Media Queries - Tours, Stories and Booking Sections",
          "An Overview of Responsive Images",
          "Responsive Images in HTML - Art Direction and Density Switching",
          "Responsive Images in HTML - Density and Resolution Switching",
          "Responsive Images in CSS",
          "Testing for Browser Support with @supports",
          "Setting up a Simple Build Process with NPM Scripts",
          "Wrapping up the Natours Project: Final Considerations"
        ],
        "Trillo Project — Master Flexbox!": [
          "Section Intro",
          "Why Flexbox: An Overview of the Philosophy Behind Flexbox",
          "A Basic Intro to Flexbox: The Flex Container",
          "A Basic Intro to Flexbox: Flex Items",
          "A Basic Intro to Flexbox: Adding More Flex Items",
          "Project Overview",
          "Defining Project Settings and Custom Properties",
          "Building the Overall Layout",
          "Building the Header - Part 1",
          "Building the Header - Part 2",
          "Building the Header - Part 3",
          "Building the Navigation - Part 1",
          "Building the Navigation - Part 2",
          "Building the Hotel Overview - Part 1",
          "Building the Hotel Overview - Part 2",
          "Building the Description Section - Part 1",
          "Building the Description Section - Part 2",
          "Building the User Reviews Section",
          "Building the CTA Section",
          "Writing Media Queries - Part 1",
          "Writing Media Queries - Part 2",
          "Wrapping up the Trillo Project: Final Considerations"
        ],
        "A Quick Introduction to CSS Grid Layouts": [
          "Section Intro",
          "Why CSS Grid: A Whole New Mindset",
          "Quick Setup for This Section",
          "Creating Our First Grid",
          "Getting Familiar with the fr Unit",
          "Positioning Grid Items",
          "Spanning Grid Items",
          "Grid Challenge",
          "Grid Challenge: A Basic Solution",
          "Naming Grid Lines",
          "Naming Grid Areas",
          "Implicit Grids vs. Explicit Grids",
          "Aligning Grid Items",
          "Aligning Tracks",
          "Using min-content, max-content and the minmax() function",
          "Responsive Layouts with auto-fit and auto-fill"
        ],
        "Nexter Project — Master CSS Grid Layouts!": [
          "Project Overview and Setup",
          "Building the Overall Layout - Part 1",
          "Building the Overall Layout - Part 2",
          "Building the Features Section - Part 1",
          "Building the Features Section - Part 2",
          "Building the Story Section - Part 1",
          "Building the Story Section - Part 2",
          "Building the Homes Section - Part 1",
          "Building the Homes Section - Part 2",
          "Building the Gallery - Part 1",
          "Building the Gallery - Part 2",
          "Building the Footer",
          "Building the Sidebar",
          "Building the Header - Part 1",
          "Building the Header - Part 2",
          "Building the Realtors Section",
          "Writing Media Queries - Part 1",
          "Writing Media Queries - Part 2",
          "Browser Support for CSS Grid",
          "Wrapping up the Nexter Project: Final Considerations"
        ],
        "That's It, Everyone!": [
          "See You Next Time, CSS Master!",
          "My Other Courses + Updates"
        ]
      },
      "requirements": [
        "This not a beginner course — You should be confident in coding HTML and CSS before taking the course",
        "Any computer and OS will work — Windows, macOS or Linux",
        "There is no need for any paid software — The text editor you already have works just fine"
      ],
      "description": "Have you been coding CSS for some time, but want to take your game to the next level? Do you feel confused with CSS jargon like inheritance, specificity, or the cascade?\nWhat if there was one resource, one place, where you could learn all the advanced and modern CSS techniques and properties you've been reading about?\nGood news: there is!\nWelcome to \"Advanced CSS and Sass\", the most advanced, the most modern, and the most complete CSS course on the internet. It's everything you want in an advanced CSS course, and more.\nYou will learn complex CSS animations, advanced responsive design techniques, flexbox layouts, Sass, CSS architecture, fundamental CSS concepts, and so much more.\nLike in all my courses, you will build beautiful and carefully designed projects, that will make you proud of yourself and leave you ready to build complex projects on your own.\nAfter finishing this course, you will:\n1) Be up to speed with the most modern and advanced CSS properties and techniques;\n2) Have mastered the cutting-edge layout technologies Flexbox and CSS Grid;\n3) Be ready to build responsive layouts for all kinds of devices and situations;\n4) Truly understand how CSS works behind the scenes;\n5) Be able to architect large CSS codebases for reusability and maintainability using Sass.\nPlease note that this course is NOT for absolute beginners, so you should already be at an intermediate level in HTML and CSS (please check out my other course if that's not the case).\nThis course is massive, coming in at 28+ hours. Here is exactly what you will learn:\nTons of modern cutting-edge CSS techniques to create stunning designs and effects: clip-path, background-clip, mask-image, background-blend-mode, shape-outside, filter, backdrop-filter, object-fit, transform, column-count, hyphens, perspective, calc() and custom CSS properties;\nAdvanced CSS animations with @keyframes, animation, and transition;\nAdvanced CSS selectors, pseudo-classes, and pseudo-elements required for modern CSS development;\nHow CSS works behind the scenes: the cascade, specificity, inheritance, value processing, the visual formatting model, the box model, box types, positioning schemes, and stacking contexts;\nCSS architecture: The 7-1 rule, component-based design, the BEM methodology, writing reusable, maintainable, and scalable code;\nIntroduction to Sass: variables, nesting, partials, imports, mixins, functions, extends, and more;\nUsing Sass in real-world projects: setting global variables, building for reusability, architecting CSS, and managing media queries;\nThe NPM ecosystem: setting up a development process to compile Sass and automatic browser reload, and creating a build process to concatenate, prefix, and compress CSS files;\nModern responsive design: fluid grids, layout types, flexible images, using media queries to test for different screen widths, pixel densities, and touch capabilities;\nAdvanced responsive design workflows: mobile-first vs desktop-first strategies, selecting breakpoints, em vs rem units and feature queries to test for browser support;\nResponsive images in HTML and CSS for faster pageloads: resolution switching, density switching, art direction;\nSVG images in HTML and CSS: how and why to use SVG, generating SVG sprites, changing SVG colors in CSS and best practices;\nVideos in HTML and CSS: building a background video effect;\nFlexbox layouts: main concepts, introduction to both flex container and flex item-specific properties, advanced positioning techniques applied to a huge real-world project;\nCSS Grid layouts: main concepts, CSS grid vs flexbox, and layout techniques applied to a real-world project. This part alone could be an entire course!\nWhy should you take this course?\nSo you saw that the course is absolutely full-packed with content. But maybe you're still not sure if you should actually learn advanced CSS?\nThat's probably because CSS is so easy to get started with. In fact, most developers highly underestimate the importance and power of CSS. But nothing could be further away from the truth!\nCSS is what makes our design come to life. And there is so much we can do with it! Mastering advanced techniques like flexbox, CSS grid, and animations, will give you an edge over many CSS developers out there who still use outdated methods.\nPlus, CSS can become a real nightmare when you try to master it, and when you have to maintain large projects. So having a good grasp on fundamental concepts is an absolute must for any serious front-end developer.\nAnd this course will help you with all that!\nSo, should you take this course? The answer is most likely a big YES!\nAnd I packed so much content into this course, that no matter if you're just starting out, or if you're already an experienced front-end developer, there is definitely gonna be something for you in this course.\nAnd this is what you get by signing up today:\n28h of Up-to-date HD-quality videos, that are easy to search and reference (great for Udemy Business students)\nProfessional English captions (not the auto-generated ones)\nDownloadable design assets + starter code and final code for each section\nDownloadable slides for theory videos (not boring, I promise!)\nFree support in the course Q&A\nLots of small challenges are included in the videos so you can track your progress.\nIf you're still with me at this point, then please watch the promo video to take a look at the course projects, and I promise you will be amazed :)\nAfter that, I hope to welcome you as a new student in my course. I'm sure you're gonna love it!",
      "target_audience": [
        "CSS developers who want to update their CSS skills to the most modern level",
        "CSS developers who want to expand their toolset to animations, flexbox, Sass, NPM, SVG, and much more",
        "Front-end developers who want to finally understand how CSS works behind the scenes",
        "In general: anyone who wants to truly master CSS!"
      ]
    },
    {
      "title": "Master Hibernate and JPA with Spring Boot in 100 Steps",
      "url": "https://www.udemy.com/course/hibernate-jpa-tutorial-for-beginners-in-100-steps/",
      "bio": "Learn Hibernate, JPA (Java Persistence API) and Spring Data JPA using Spring and Spring Boot",
      "objectives": [
        "You will learn the basics of JPA and Hibernate - Entities, Relationships, Inheritance Mappings and Annotations",
        "You will understand approaches to querying data using JPA and Hibernate - JPQL, Criteria API and Native Queries",
        "You will understand JPA and Hibernate Relationships in depth - One to One, Many to One and Many to Many",
        "You will use a variety of Spring Boot Starters - Spring Boot Starter Web, Starter Data Jpa, Starter Test",
        "You will learn the basic of performance tuning your JPA application with Hibernate - Solve N+1 Queries Issue",
        "You will learn the basics of caching - First Level Cache and Second Level Cache with EhCache",
        "You will understand the basics of Spring Data JPA and Spring Data REST"
      ],
      "course_content": {
        "Introduction": [
          "Master Hibernate and JPA with Spring Boot - Preview",
          "Congratulations",
          "One Thing You Should Do",
          "Master Hibernate and JPA with Spring Boot - Course Overview",
          "Master Hibernate and JPA with Spring Boot - Git Repository",
          "Master Hibernate and JPA with Spring Boot - Installing Basic Tools",
          "Quick introduction to JPA",
          "DO NOT SKIP: Join in28minutes Learning Community"
        ],
        "Introduction to Spring Boot in 10 Steps": [
          "DO NOT SKIP: New to Spring Framework?",
          "Step 01 - Getting Started with Spring Boot - Goals",
          "Step 02 - Setting up New Spring Boot Project with Spring Initializr",
          "Step 03 - Setting up New Spring Boot Project with Spring Initializr",
          "Step 04 - Build a Hello World API with Spring Boot",
          "Step 05 - Understanding the Goal of Spring Boot",
          "Step 06 - Understanding Spring Boot Magic - Spring Boot Starter Projects",
          "Step 07 - Understanding Spring Boot Magic - Auto Configuration",
          "Step 08 - Build Faster with Spring Boot DevTools",
          "Step 09 - Get Production Ready with Spring Boot - 1 - Profiles",
          "Step 10 - Get Production Ready with Spring Boot - 2 - ConfigurationProperties",
          "Step 11 - Get Production Ready with Spring Boot - 3 - Embedded Servers",
          "Step 12 - Get Production Ready with Spring Boot - 4 - Actuator",
          "Step 13 - Understanding Spring Boot vs Spring vs Spring MVC",
          "Step 14 - Getting Started with Spring Boot - Review",
          "How to remember things for long time"
        ],
        "Journey From Spring JDBC to JPA": [
          "Introduction to Journey from JDBC To JPA",
          "Step 01 - Setting up a project with JDBC, JPA, H2 and Web Dependencies",
          "COURSE UPDATE : H2 Database URL",
          "Step 02 - Launching up H2 Console",
          "Trouble Shooting Your Problems",
          "Step 03 - Creating a Database Table in H2",
          "Step 04 - Populate data into Person Table",
          "Step 05 - Implement findAll persons Spring JDBC Query Method",
          "Step 06 - Execute the findAll method using CommandLineRunner",
          "Step 07 - A Quick Review - JDBC vs Spring JDBC",
          "Step 08 - Whats in the background? Understanding Spring Boot Autoconfiguration",
          "Step 09 - Implementing findById Spring JDBC Query Method",
          "Step 10 - Implementing deleteById Spring JDBC Update Method",
          "Step 11 - Implementing insert and update Spring JDBC Update Methods",
          "Step 12 - Creating a custom Spring JDBC RowMapper",
          "Step 13 - Quick introduction to JPA",
          "Step 14 - Defining Person Entity",
          "Step 15 - Implementing findById JPA Repository Method",
          "Step 16 - Implementing insert and update JPA Repository Methods",
          "Step 17 - Implementing deleteById JPA Repository Method",
          "Step 18 - Implementing findAll using JPQL Named Query"
        ],
        "Introduction to JUnit in 5 Steps": [
          "Introduction to JUnit in 5 Steps",
          "Step 1 : What is JUnit and Unit Testing?",
          "Step 02 - Your First JUnit Project and Green Bar",
          "Step 03 - Your First Code and First Unit Test",
          "Step 04 - Exploring other assert methods",
          "Step 05 - Exploring few important JUnit annotations"
        ],
        "JPA and Hibernate in Depth": [
          "Introduction to JPA and Hibernate in Depth",
          "Step 01 - Create a JPA Project with H2 and Spring Boot",
          "COURSE UPDATE : H2 Database URL",
          "Step 02 - Create JPA Entity Course",
          "Step 03 - Create findById using JPA Entity Manager",
          "Step 04 - Configuring application.properties to enable H2 console and logging",
          "COURSE UPDATE : JUnit 4 vs JUnit 5",
          "Step 05 - Writing Unit Test for findById method",
          "Step 06 - Writing a deleteByID method to delete an Entity",
          "Step 07 - Writing Unit Test for deleteById method",
          "Step 08 - Writing a save method to update and insert an Entity",
          "Step 09 - Writing Unit Test for save method",
          "Step 10 - Quick Review and Debugging Tips",
          "Step 11 - Playing with Entity Manager",
          "Step 12 - Entity Manager Methods - clear and detach",
          "Step 13 - Entity Manager Methods - refresh",
          "Step 14 - A Quick Review of Entity Manager",
          "Step 15 - JPQL - Basics",
          "Step 16 - JPA and Hibernate Annotations - @Table",
          "Step 17 - JPA and Hibernate Annotations - @Column",
          "Step 18 - JPA and Hibernate Annotations - @UpdateTimestamp & @CreationTimestamp",
          "Step 19 - JPA and Hibernate Annotations - @NamedQuery and @NamedQueries",
          "Step 20 - Native Queries - Basics",
          "How to be consistent?"
        ],
        "Establishing Relationships with JPA and Hibernate - OneToOne": [
          "Step 21 - Entities and Relationships - An overview",
          "Step 22 - Defining Entities - Student, Passport and Review",
          "Step 23 - Introduction to One to One Relationship",
          "Step 24 - OneToOne Mapping - Insert Student with Passport",
          "Step 25 - OneToOne Mapping - Retrieving Student with Passport and Eager Fetch",
          "Step 26 - OneToOne Mapping - Lazy Fetch",
          "Step 27 - Transaction, Entity Manager and Persistence Context",
          "Step 28 - OneToOne Mapping - Bidirectional Relationship - Part 1",
          "Step 29 - OneToOne Mapping - Bidirectional Relationship - Part 2"
        ],
        "Let's review with a few FAQs about Hibernate and JPA": [
          "FAQ 1 - When does Hibernate send updates to the database?",
          "FAQ 2 - When do we need @Transactional in an Unit Test?",
          "FAQ 3 - Do read only methods need a transaction?",
          "FAQ 4 - Why do we use @DirtiesContext in an Unit Test?"
        ],
        "Establishing Relationships with JPA and Hibernate - OneToMany and ManyToMany": [
          "Step 30 - ManyToOne Mapping - Designing the database",
          "Step 30 - Part 2 - ManyToOne Mapping - Implementing the Mapping",
          "Step 31 - ManyToOne Mapping - Retrieving and inserting Reviews for Course",
          "Step 32 - ManyToOne Mapping - Generalizing Insert Reviews",
          "Step 33 - ManyToOne Mapping - Wrapping up",
          "Step 34 - ManyToMany Mapping - Table Design",
          "Step 35 - ManyToMany Mapping - Adding Annotations on Entities",
          "Step 36 - ManyToMany Mapping - Fixing two join tables problem",
          "Step 37 - ManyToMany Mapping - Customizing the Join Table",
          "Step 38 - ManyToMany Mapping - Insert Data and Write Join Query",
          "Step 39 - ManyToMany Mapping - Retrieve Data using JPA Relationships",
          "Step 40 - ManyToMany Mapping - Insert Student and Course",
          "Step 41 - Relationships between JPA Entities - A summary",
          "How to handle failures"
        ],
        "Inheritance Hierarchies with JPA and Hibernate": [
          "Step 42 - Introduction to Inheritance Hierarchies and Mappings",
          "Step 43 - JPA Inheritance Hierarchies and Mappings - Setting up entities",
          "Step 44 - JPA Inheritance Hierarchies and Mappings - Setting up a Repository",
          "Step 45 - JPA Inheritance Hierarchies and Mappings - Single Table",
          "Step 46 - JPA Inheritance Hierarchies and Mappings - Table Per Class",
          "Step 47 - JPA Inheritance Hierarchies and Mappings - Joined",
          "Step 48 - JPA Inheritance Hierarchies and Mappings - Mapped Super Class",
          "Step 49 - JPA Inheritance Hierarchies and Mappings - How to Choose?"
        ],
        "Queries with Entities using JPQL": [
          "Step 50 - JPQL - Courses without Students",
          "Step 51 - JPQL - Courses with atleast 2 Students and order by",
          "Step 52 - JPQL - Courses like 100 Steps",
          "Step 53 - JPQL - Using Joins"
        ]
      },
      "requirements": [
        "You have an attitude to learn while having fun :)",
        "You have programming experience with Java",
        "We will help you get started with Spring and Spring Boot"
      ],
      "description": "Hibernate is the most popular Java ORM framework.  Almost every Real World Project today uses JPA and Hibernate in combination with Spring Boot and Spring Data JPA.\nDo you want to Learn JPA & Hibernate and use them in combination with Spring Boot and Spring Data JPA?  Do you want to Learn about Entities, Relationships, Entity Manager, JPQL, Native Queries, Inheritance Hierarchies, Criteria API, Transaction Management, Caching and Performance Tuning with JPA & Hibernate in combination with Spring Data JPA and Spring Data REST?\n\n\nWHAT OUR LEARNERS ARE SAYING:\n5 STARS - I really loved this course. The instructor explains features of JPA and Hibernate clearly and also very deeply. Especially I liked explanation of the transaction management what I didn't seen in other courses.By the way this course helped me to develop the persistence layer of a commercial application for my customer.\n5 STARS - Absolute brilliant course, I was struggling using books but this course helped me understand using code to demonstrate how Hibernate and JPA work. Each video builds on the next and is at a pace that does not overwhelm you. I thoroughly recommend this course if you need to improve your Hibernate and JPA knowledge.\n5 STARS - It is really state of the art and how spring boot and hibernate are used nowadays! This course was very helpful in my new job, since in the project we use spring boot and hibernate. Thank you!\n5 STARS - This course exceeded my expectations, I thought I knew about hibernate but I discovered I didn't, I really recommend this course.\n5 STARS - Thanks Ranga for the wonderful course on Hibernate and JPA with Spring Boot! It's a long course and well worth it. Keep up the great work!\n\n\nCOURSE OVERVIEW\nHibernate is the most popular implementation of JPA. It was the most popular ORM framework option before JPA emerged and it provides additional features on top of JPA. We will use Hibernate as the JPA implementation in this course.\nThe Java Persistence API provides Java developers with an api for mapping java objects to relational data. In this course, you will learn about the Hibernate, JPA API, JPQL (Java Persistence query language), Java Persistence Criteria API and how you can perform ORM (Object Relational Mapping) with JPA and Hibernate.\nDuring this course\nYou will learn the basics of JPA and Hibernate - Entities, Relationships, Inheritance Mappings and Annotations\nYou will understand approaches to querying data using JPA and Hibernate - JPQL, Criteria API and Native Queries\nYou will understand JPA and Hibernate Relationships in depth - One to One, Many to One and Many to Many\nYou will use a variety of Spring Boot Starters - Spring Boot Starter Web, Starter Data Jpa, Starter Test\nYou will learn the basic of performance tuning your JPA application with Hibernate - Solve N+1 Queries Issue.\nYou will learn the basics of caching - First Level Cache and Second Level Cache with EhCache\nYou will understand the basics of Spring Data JPA and Spring Data REST\n\n\nCOURSE HIGHLIGHTS\n\n\nJourney from JDBC To JPA\nStep01 - Setting up a project with JDBC, JPA, H2 and Web Dependencies\nStep02 - Launching up H2 Console\nStep03 - Creating a Database Table in H2\nStep04 - Populate data into Person Table\nStep05 - Implement findAll persons Spring JDBC Query Method\nStep06 - Execute the findAll method using CommandLineRunner\nStep07 - A Quick Review - JDBC vs Spring JDBC\nStep08 - Whats in the background? Understanding Spring Boot Autoconfiguration\nStep09 - Implementing findById Spring JDBC Query Method\nStep10 - Implementing deleteById Spring JDBC Update Method\nStep11 - Implementing insert and update Spring JDBC Update Methods\nStep12 - Creating a custom Spring JDBC RowMapper\nStep13 - Quick introduction to JPA\nStep14 - Defining Person Entity\nStep15 - Implementing findById JPA Repository Method\nStep16 - Implementing insert and update JPA Repository Methods\nStep17 - Implementing deleteById JPA Repository Method\nStep18 - Implementing findAll using JPQL Named Query\nJPA/Hibernate in Depth\n\nStep01 - Create a JPA Project with H2 and Spring Boot\nStep02 - Create JPA Entity Course\nStep03 - Create findById using JPA Entity Manager\nStep04 - Configuring application.properties to enable H2 console and additional logging\nStep05 - Writing Unit Test for findById method\nStep06 - Writing a deleteByID method to delete an Entity\nStep07 - Writing Unit Test for deleteById method\nStep08 - Writing a save method to update and insert an Entity\nStep09 - Writing Unit Test for save method\nStep10 - Quick Review and Debugging Tips\nStep11 - Playing with Entity Manager\nStep12 - Entity Manager Methods - clear and detach\nStep13 - Entity Manager Methods - refresh\nStep14 - A Quick Review of Entity Manager\nStep15 - JPQL - Basics\nStep16 - JPA and Hibernate Annotations - @Table\nStep17 - JPA and Hibernate Annotations - @Column\nStep18 - JPA and Hibernate Annotations - @UpdateTimestamp and @CreationTimestamp\nStep19 - JPA and Hibernate Annotations - @NamedQuery and @NamedQueries\nStep20 - Native Queries - Basics\nStep21 - Entities and Relationships - An overview\nStep22 - Defining Entities - Student, Passport and Review\nStep23 - Introduction to One to One Relationship\nStep24 - OneToOne Mapping - Insert Student with Passport\nStep25 - OneToOne Mapping - Retrieving Student with Passport and Eager Fetch\nStep26 - OneToOne Mapping - Lazy Fetch\nStep27 - Session vs Transaction\nStep28 - OneToOne Mapping - Bidirectional Relationship - Part 1\nStep29 - OneToOne Mapping - Bidirectional Relationship - Part 2\nStep30 - ManyToOne Mapping - Designing the database\nStep31 - ManyToOne Mapping - Retrieving and inserting Reviews for Course\nStep32 - ManyToOne Mapping - Generalizing Insert Reviews\nStep33 - ManyToOne Mapping - Wrapping up\nStep34 - ManyToMany Mapping - Table Design\nStep35 - ManyToMany Mapping - Adding Annotations on Entities\nStep36 - ManyToMany Mapping - Fixing two join tables problem\nStep37 - ManyToMany Mapping - Customizing the Join Table\nStep38 - ManyToMany Mapping - Insert Data and Write Join Query\nStep39 - ManyToMany Mapping - Retrieve Data using JPA Relationships\nStep40 - ManyToMany Mapping - Insert Student and Course\nStep41 - Relationships between JPA Entities - A summary\nStep42 - Introduction to Inheritance Hierarchies and Mappings\nStep43 - JPA Inheritance Hierarchies and Mappings - Setting up entities\nStep44 - JPA Inheritance Hierarchies and Mappings - Setting up a Repository\nStep45 - JPA Inheritance Hierarchies and Mappings - Single Table\nStep46 - JPA Inheritance Hierarchies and Mappings - Table Per Class\nStep47 - JPA Inheritance Hierarchies and Mappings - Joined\nStep48 - JPA Inheritance Hierarchies and Mappings - Mapped Super Class\nStep49 - JPA Inheritance Hierarchies and Mappings - How to Choose?\nStep50 - JPQL - Courses without Students\nStep51 - JPQL - Courses with atleast 2 Students and order by\nStep52 - JPQL - Courses like 100 Steps\nStep53 - JPQL - Using Joins\nStep54 - Criteria Query - Retrieving all courses\nStep55 - Criteria Query - Courses like 100 Steps\nStep56 - Criteria Query - Courses without Students\nStep57 - Criteria Query - Using Joins\nStep58 - Introduction to Transaction Management\nStep59 - Transaction Management - ACID Properties\nStep60 - Understanding Dirty, Phanthom and Non Repeatable Reads\nStep61 - Understand 4 Isolation Levels\nStep62 - Choosing between Isolation Levels\nStep63 - Implementing Transaction Management - 3 Things to Decide\nStep64 - Introduction to Spring Data JPA\nStep65 - Testing the Spring Data JPA Repository with findById.\nStep66 - Spring Data JPA Repository - CRUD Methosd\nStep67 - Sorting using Spring Data JPA Repository\nStep68 - Pagination using Spring Data JPA Repository\nStep69 - Custom Queries using Spring Data JPA Repository\nStep70 - Spring Data REST\nStep71 - Introduction to Caching\nStep72 - Hibernate and JPA Caching - First Level Cache\nStep73 - Hibernate and JPA Caching - Basics of Second Level Cache with EhCache\nStep74 - Hibernate and JPA Caching - Second Level Cache Part 2\nStep75 - Hibernate Tips - Hibernate Soft Deletes - @SQLDelete and @Where\nStep76 - Hibernate Soft Deletes - Part 2\nStep77 - JPA Entity Life Cycle Methods\nStep78 - Using Embedded and Embeddable with JPA\nStep79 - Using Enums with JPA\nStep80 - JPA Tip - Be cautious with toString method implementations\nStep81 - JPA Tip - When do you use JPA?\nStep82 - Performance Tuning - Measure before Tuning\nStep83 - Performance Tuning - Indexes\nStep84 - Performance Tuning - Use Appropriate Caching\nStep85 - Performance Tuning - Eager vs Lazy Fetch\nStep86 - Performance Tuning - Avoid N+1 Problems\nHibernate Tips & Tricks\n\nWhen does Hibernate send updates to the database?\nWhen do we need @Transactional in an Unit Test?\nDo read only methods need a transaction?\nWhy do we use @DirtiesContext in an Unit Test?\nHow to connect to a different database with Spring Boot?\nHow do you approach designing great applications with JPA?\nGood Practices for developing JPA Applications\nStart Learning Now. Hit the Enroll Button!",
      "target_audience": [
        "You want to learn the basics of JPA and Hibernate",
        "You want to understand how to build data layer of a web application"
      ]
    },
    {
      "title": "The Docker for DevOps course: From development to production",
      "url": "https://www.udemy.com/course/the-docker-for-devops-course-from-development-to-production/",
      "bio": "Updated for Docker v19.03+. Learn how to build and deploy web applications with Docker in an automated way.",
      "objectives": [
        "Learn how to deploy web applications with Docker",
        "Ability to serve your web app securely over SSL (HTTPS)",
        "Confidence to apply for DevOps positions at software companies"
      ],
      "course_content": {
        "Introduction": [
          "What does the course cover?",
          "Dealing with issues",
          "Life without Docker",
          "Introduction - Quiz"
        ],
        "Getting setup": [
          "Preparing your system for Docker",
          "Preparing your system for Docker - Text directions",
          "Installing Docker",
          "Installing Docker - Text directions",
          "Installing additional Docker tools",
          "Installing additional Docker tools - Text directions",
          "Installing Sublime Text",
          "Installing Sublime Text - Text directions",
          "Getting setup - Quiz"
        ],
        "Docker basics": [
          "What is Docker?",
          "Benefits of using Docker",
          "Docker hello world",
          "Docker hello world - Text directions",
          "Working with a Docker Registry",
          "Working with a Docker Registry - Text directions",
          "Docker basics - Quiz"
        ],
        "Building a Dockerized web app": [
          "Setting up a project directory",
          "Setting up a project directory - Text directions",
          "Building a Dockerized web app - Quiz"
        ],
        "Dockerized Flask app": [
          "Project scaffolding",
          "Project scaffolding - Text directions",
          "The Dockerfile",
          "The Dockerfile - Text directions",
          "Docker Compose",
          "Building the app",
          "Building the app - Text directions",
          "Dockerized Flask app - Quiz"
        ],
        "Dockerized Rails app": [
          "Project scaffolding",
          "The Dockerfile",
          "The Dockerfile - Text directions",
          "Docker Compose",
          "Building the app",
          "Building the app - Text directions",
          "Dockerized Rails app - Quiz"
        ],
        "Spinning up a staging server": [
          "Benefits of a staging server",
          "Picking an operating system",
          "Why can't we use Vagrant?",
          "Provisioning the staging server",
          "Provisioning the staging server - Text directions",
          "Installing sudo",
          "Installing sudo - Text directions",
          "Setting a static IP address",
          "Setting a static IP address - Text directions",
          "Setting up SSH",
          "Setting up SSH - Text directions",
          "Installing Docker",
          "Installing Docker - Text directions",
          "Operation automation",
          "Operation automation - Text directions",
          "Pulling the Docker images",
          "Pulling the Docker images - Text directions",
          "Pushing the web app",
          "Pushing the web app - Text directions",
          "Securing your staging server",
          "Securing your staging server - Text directions",
          "Spinning up a staging server - Quiz"
        ],
        "Crash course with systemd": [
          "What is systemd?",
          "Creating your first unit files",
          "Creating your first unit files - Text directions",
          "Exploring the updated deploy script",
          "Exploring the updated deploy script - Text directions",
          "Crash course with systemd - Quiz"
        ],
        "Adding nginx into the mix": [
          "What is nginx?",
          "Customizing the official nginx image",
          "Customizing the official nginx image - Text directions",
          "Creating self signed SSL certificates",
          "Create self signed SSL certificates - Text directions",
          "Updating the deploy files",
          "Updating the deploy files - Text directions",
          "Adding nginx into the mix - Quiz"
        ],
        "Creating a production server": [
          "Picking a hosting provider",
          "Signing up with Digital Ocean",
          "Signing up with Digital Ocean - Text directions",
          "Creating a new droplet",
          "Creating a new droplet - Text directions",
          "Preparing your droplet",
          "Preparing your droplet - Text directions",
          "Creating a production server - Quiz"
        ]
      },
      "requirements": [
        "A computer with at least 4GBs of RAM running Windows, OSX or Linux"
      ],
      "description": "From Docker novice to DevOps expert in 7 hours\n\nHuge update for 2020: Many videos from this course were completely re-recorded to bring everything up to date. All of the Docker content is up to date as well as all of the other technologies we use, such as nginx, Ubuntu, Debian and more!\nLooking to level up your skills by deploying your own web application? How about furthering your career by picking up years worth of general DevOps skills?\n\nPrepare to get excited about Docker (and this course)!\nDozens of massive companies are using Docker every day but the awesome thing about Docker is it works incredibly well even for the smallest projects.\nNowadays learning about Docker and general DevOps skills is gaining massive momentum in the tech scene. It's similar to how mobile app development was a few years ago.\nCompanies are EXPECTING new developers to manage the full life cycle of their web applications. This means BOTH developing and deploying your apps.\nHere's your chance to STAY AHEAD OF THE CURVE.\nThe Docker for DevOps course isn't just your run of the mill introduction to Docker course, you can get that info by skimming Docker's website.\nThis course shows you WHAT you can build with Docker and HOW to do it -- of course you'll learn the Docker basics along the way!\nTogether we'll walk through developing and deploying a multi-service Flask and Ruby on Rails application (more framework examples will be provided as bonus lectures too).\nOh and don't worry, you won't need Flask or Ruby on Rails experience to understand this course. The emphasis is on deploying a web application, not building one.\n\nLearning by example is a great way to retain information and learn quickly.\n\n\"The course has a perfect balance between theory and practical material. At the end of the course, you have a working and secured web app with fully automated deployment along with an understanding of how it works. This is exactly what I wanted from the course.\"\n\n\nReady to level up?\nHere's what you'll get when you sign up to my course today:\nYou'll learn how to get your development environment set up to run Docker. Windows, Mac and Linux users will be able to follow along.\nNext, you'll learn the Docker basics and we'll complete a hello world example.\nYou'll Dockerize a Flask or Ruby on Rails application and pickup a few best practices on how to create a production ready application with those frameworks.\nYou'll learn how to create a staging server so you can test your app.\nYou'll learn how to keep your app running forever by getting a crash course with systemd.\nYou'll learn how to configure and serve your app over SSL (HTTPS) with nginx.\nYou'll get $10 in free hosting credits on DigitalOcean to deploy your application.\nYou'll learn how to purchase and configure a domain name (and make it work with your new server).\nFinally, you'll learn how to obtain a FREE SSL certificate and hook it up.\n\nI'll also give you tips on where to go next for topics such as:\n\nAdding more services to your app\nScaling out beyond 1 host\nMonitoring and alerting\nHooking up a continuous integration pipeline\nDealing with centralized logging\nLooking into using various configuration management tools\n\nYou're getting all of that AND additional bonus lectures for just $25.\n\nThis course is jam packed with over 100 lectures, 7+ hours of videos and quizzes. You'll also receive full PDF text directions for each video lecture and complete source code examples.\n\n\"This course was really well put together and covers a wide range of topics around both DevOps and Docker. I chose it primarily for the Docker side, but learned a lot about Ruby and Python too. I am very pleased with this course.\"\nWhy is it worth using Docker?\n\nSaves a ton of time and headaches when setting up development environments.\nEasily move an application across environments or servers.\nRemoves issues such as \"well, it worked on my machine!\".\nMakes developing with teams a much more pleasant experience.\nWorks on most major platforms.\nHas amazing support on most cloud hosting providers.\nYou won't need expensive hosting to deploy your web applications.\nDocker as a company is well funded and moving forward quickly.\n\n\n\"Well structured course with high quality information. Source code is really well written and well structured. The tutor support is like 24/7. He replied to my all questions within few hours and most of the times in few minutes.\"\nWhy is this course for you?\n\nAfter finishing this course you'll have enough knowledge about Docker and general DevOps skills to start applying for jobs, so by investing in this course you're jump starting your DevOps career.\nOr perhaps you have a thirst to broaden your skill set and want to save a ton of time by avoiding the tedious task of researching all of these topics on your own.\nIn either case, you're going to walk away with years of knowledge and best practices that I've accumulated while working as a consultant.\n\"Meticulous hands-on descriptions and recipes of how to utilize Docker and a lot of associated software in the real world scenario of building a web-app! I especially enjoyed the clear delivery of content: well structured, superbly produced, written summaries for each shown topic.\"\n\nWho am I?\nHi, I'm Nick. I'm a consultant by day and open source contributor by night. I write software and help companies being their ideas to life.\nI love learning new things and then sharing my knowledge with others.\nI don't have a fancy degree but I do have experience shipping code and explaining my thought process to others while I talk about various technical topics.",
      "target_audience": [
        "Anyone who wants to learn how to use Docker",
        "Anyone who wants to deploy a web application in an automated way",
        "Anyone who wants to save money by self-hosting their own web apps",
        "Anyone who wants to further their career by improving their DevOps skills"
      ]
    },
    {
      "title": "Learn Visual Studio Code (2020)",
      "url": "https://www.udemy.com/course/learn-visual-studio-code/",
      "bio": "Everything you need to know about Visual Studio Code, the most popular editor in Web Development!",
      "objectives": [
        "Time-saving tips on how to efficiently navigate Visual Studio Code",
        "Customize Visual Studio Code with shortcuts, themes, extensions, snippets, and more",
        "Effectively debug JavaScript with Node, React, Angular, and Vue.",
        "Integrate source control with Git/Github into Visual Studio Code",
        "Generate code faster and more efficiently"
      ],
      "course_content": {
        "Introduction": [
          "Welcome and Resources",
          "The What and the Why",
          "Downloading and Installing"
        ],
        "The User Interface": [
          "The Interface",
          "Optimizing Your Layout for Development",
          "Split Editor and Grid Tab System",
          "Opening and Working with Files",
          "Navigating and Manipulating Text",
          "Search and Replace Like a Ninja",
          "Intellisense",
          "HTML Shortcuts with Emmet"
        ],
        "Customization": [
          "Customizing Shortcuts",
          "User and Workspace Settings",
          "Using Font Ligatures",
          "Installing Your First Extension",
          "Popular Extensions Part 1",
          "Popular Extensions Part 2",
          "Popular Extensions Part 3",
          "Settings Sync Extension",
          "Themes"
        ],
        "Writing and Formatting Code": [
          "Snippets",
          "Working With Markdown",
          "Organizing Your Code",
          "Creating Standard Settings With Editor Config",
          "Formatting Code with Prettier",
          "Formatting and Linting Code With ESLint",
          "Formatting and Linting Code With TSLint (DEPRECATED)"
        ],
        "The Integrated Terminal": [
          "The Integrated Terminal",
          "Customizing the Integrated Terminal Part 1",
          "Customizing the Integrated Terminal Part 2"
        ],
        "Working With Git and Source Control": [
          "Built In Git Tools",
          "Working with Remote Github Repositories",
          "Useful Extensions for Working With Git",
          "Git Lens Extension"
        ],
        "Debugging": [
          "Creating Your First Debug Configuration",
          "Debugging Node (Server Side JavaScript)",
          "Debugging Angular CLI Applications",
          "Debugging Create React App Applications",
          "Debugging Vue CLI Applications"
        ],
        "Extras": [
          "VS Code Live Share"
        ],
        "Closing": [
          "Closing"
        ]
      },
      "requirements": [
        "Basic web development knowledge is useful but not required.",
        "A computer and internet"
      ],
      "description": "This course has been completely re-recorded in 2020 to make sure you get the latest content!\nIn just a few years, Visual Studio Code has become the most popular editor for Web Development. In short, it is open-source, cross-platform, full of functionality, and has an amazing community behind it. Many of the biggest names in Web Development have already made the switch, and so should you! If you're looking to learn the ins and outs of VS Code while increasing your efficiency and proficiency as a developer, this course is perfect for you. Whether you're brand new to Web Development or a seasoned veteran, there's something for everyone.",
      "target_audience": [
        "New web developers looking for the best tools.",
        "Experienced Web Developers looking to switch over to Visual Studio Code",
        "Web Developers looking to increase their speed and efficiency as a developer"
      ]
    },
    {
      "title": "Node JS: Advanced Concepts",
      "url": "https://www.udemy.com/course/advanced-node-for-developers/",
      "bio": "Get advanced with Node.Js! Learn caching with Redis, speed up through clustering, and add image upload with S3 and Node!",
      "objectives": [
        "Absolutely master the Event Loop and understand each of its stages",
        "Utilize Worker Threads and Clustering to dramatically improve the performance of Node servers",
        "Speed up database queries with caching for MongoDB backed by Redis",
        "Add automated browser testing to your Node server, complete with continuous integration pipeline setup",
        "Apply scalable image and file upload to your app, utilizing AWS S3"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Node, Express, and MongoDB",
        "Strong knowledge of Javascript"
      ],
      "description": "Go beyond the basics of Node!  This course will give you the skills needed to become a top Node engineer.\nQuery Caching with Redis? You will learn it.  The Node Event Loop? Included.  Scalable File Upload? Of course!\n------------------------------\nThis is a must-take course if you work with Node.\nNode Internals: Here's one of the most common interview questions you'll face when looking for a Node job: \"Can you explain Node's Event Loop?\" There are two types of engineers: those who can describe the Event Loop and those who cannot!  This course will ensure that you are incredibly well prepared to answer that most important question.  Besides being critical for interviews, knowledge of the Event Loop will give you a better understanding of how Node works internally.  Many engineers know not to 'block' the Event Loop, but they don't necessarily understand why.  You will be one of the engineers who can clearly articulate the performance profile of Node and its Event Loop.\nCaching with Redis: We'll also supercharge the performance of database queries by implementing caching backed by Redis.  No previous experience of Redis is required!  Redis is an in-memory data store purpose built for solving caching needs.  By adding caching to your application, you can decrease the amount of time that any given request takes, improving the overall response time of your app.\nFile Upload: There are many resources online that offer suggestions on how to handle file upload, but few show a solution that can truly scale.  Hint: saving files directly on your server isn't a scalable solution!  Learn how to leverage AWS S3 to implement file upload that can scale to millions of users with a few dozen lines of simple code.  Plentiful discussions are included on security concerns with handling uploads, as well.\nContinuous Integration Testing: This is a must have feature for any serious production app.  We'll first learn how to test huge swaths of our codebase with just a few lines of code by using Puppeteer and Jest.  After writing many effective tests, we'll enable continuous integration on Travis CI, a popular - and free - CI platform.  Testing can sometimes be boring, so we'll use this section to brush up on some advanced Javascript techniques, including one of the only legitimate uses of ES2015 Proxies that you'll ever see!\n\n------------------------------\nHere's what we'll learn:\nMaster the Node Event Loop - understand how Node executes your source code.\nUnderstand the purpose of Node, and how the code you write is eventually executed by  C++ code in the V8 engine\nAdd a huge boost to performance in your Node app through clustering and worker threads\nTurbocharge MongoDB queries by adding query caching backed by a lightning-fast Redis instance\nScale your app to infinity with image and file upload backed by Amazon's S3 file service\nImplement a continuous integration testing pipeline so you always know your project functions properly\nThink you know everything there is about managing  cookies and session?  Well, you might, but learn even more!\nEnsure your app works the way you expect with automated browser testing using Jest and Puppeteer\nBonus - learn advanced JS techniques along the way, including where to use ES2015 proxies!\nI've built the course that I would have wanted to take when I was learning to Node. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Anyone who wants a deep mastery of Node",
        "Engineers looking to understand the internals of Node",
        "Programmers looking to improve Node's performance"
      ]
    },
    {
      "title": "Azure Serverless Functions and Logic Apps",
      "url": "https://www.udemy.com/course/azure-serverless/",
      "bio": "Learn about the new Serverless model for Cloud Apps, using Azure Functions, Logic Apps, and Event Grid.",
      "objectives": [
        "What does Serverless mean?",
        "Which features of the Azure platform are Serverless?",
        "Triggers, input bindings and output bindings",
        "Confidence to try creating your own Azure functions and logic apps"
      ],
      "course_content": {
        "Azure Serverless": [
          "Welcome",
          "What is Serverless?",
          "Frequently Asked Questions",
          "Udemy Video Player",
          "How Azure Does Serverless",
          "Azure Serverless Basics"
        ],
        "Functions": [
          "Overview of Functions",
          "Live Walkthrough: Creating a Function",
          "Assignment: Create Your Own Function",
          "Live Walkthrough: Testing a Function"
        ],
        "Logic Apps": [
          "Overview of Logic Apps",
          "Live Walkthrough: Creating a Logic App",
          "Live Walkthrough: Testing a Logic App",
          "Assignment: Create Your Own Logic Apps"
        ],
        "Serverless Storage and Data": [
          "Overview of Azure Storage Features",
          "Using Azure Storage with Functions",
          "Live Walkthrough: Binding to Storage",
          "Overview of Azure Data Features",
          "Using Cosmos DB with Functions",
          "Live Walkthrough: Binding to Cosmos DB / DocumentDB"
        ],
        "Azure Features that Support Serverless": [
          "Securing Azure Functions",
          "Messaging and Disconnected Apps",
          "Events and Queues",
          "Azure Bots",
          "Live Walkthrough: Creating a Bot"
        ],
        "Conclusion": [
          "Azure Cognitive Services",
          "Wrapping Up",
          "Discounts for More Courses"
        ]
      },
      "requirements": [
        "A free or paid subscription to Microsoft Azure",
        "Excitement to learn Microsoft's constantly growing cloud platform"
      ],
      "description": "NEW COURSE - JUST LAUNCHED NOV 2017\nYou've been working on this app for months. You finally publish it live, and you start letting people know about it. Then you have a new set of problems - checking the CPU usage, worrying about performance, almost hoping that it doesn't get too popular too fast. Do you have to spin up more servers in advance in case there is a spike in demand?\nAzure Serverless apps promises to take the stress and worry about application scaling off your hands. If you code your application using logic apps, functions, messages, and events, Azure will add more server power when your application needs it, and will take care of scaling back down when you don't. And you only pay for what you use. No hourly compute charges when a server is running but not doing much.\nIn this course, we'll look at all of the components of an Azure Serverless app.\nFunctions\nLogic Apps\nEvent Grid\nCosmosDB\nAzure Storage\nMessaging and Queuing\nBeyond the overview, we'll also look at the Azure Portal and see live walkthroughs of creating Serverless apps. Then you'll have a chance to do it yourself using Assignments.\nTo be sure, Azure Serverless apps aren't perfect or for every situation. Virtual Machines aren't going away. But there are some great uses for these small functions that have specific tasks to perform, and in this course we'll look at how to add Serverless apps to your toolbox.",
      "target_audience": [
        "Senior technical people with exposure to Azure",
        "Those interested in the Azure Serverless features",
        "Business or technical people who want to see Serverless in action"
      ]
    },
    {
      "title": "Personal Book Author Website with E-Commerce (PHP & MySQL)",
      "url": "https://www.udemy.com/course/personal-book-author-website-with-ecommerce-php-mysql/",
      "bio": "Building a personal book author website with Ecommerce using the PHP, PDO & MySQL from scartch.",
      "objectives": [
        "Complete project using php, pdo and mysql",
        "Full admin panel authentication system from scratch",
        "Sending email using phpmailer",
        "Complete CRUD system",
        "PHP session",
        "User registration, login, reset password (full authentication)",
        "Connecting database with php, pdo",
        "Form validation technique",
        "Photo uploading system",
        "Toast message notification",
        "PayPal and Stripe Integration",
        "Cart and Checkout System for Books",
        "Coupon Management System",
        "Delivery Pricing Setup System",
        "Invoice System",
        "Printing Invoice System"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge in HTML",
        "Basic knowledge in CSS",
        "Basic knowledge in Javascript and Jquery",
        "Basic knowledge in Bootstrap",
        "Basic knowledge in Code Editor like VS Code or any other"
      ],
      "description": "In this course, I am going to teach students how to build a Personal Book Author Website with E-Commerce from scratch using PHP and MySQL. The course will cover all the core aspects of web application development, including authentication systems, email verification, template mastering etc.\nI will develop a real-world personal book author website with E-Commerce where book author can show his portfolios, education, experience, awards, photos, videos, events, posts etc. and users can buy his books giving orders online. This project will be built using the latest version of PHP at the time of recording, ensuring students learn modern and up-to-date practices.\nThis course is designed especially for beginners who have little or no experience with PHP, but even advanced learners will find it useful as I implemented here real-life ecommerce features with cart, checkout, coupon, delivery charge, payment options etc.\n\n\nAdmin Panel Features:\n1. Admin can create, edit and delete users.\n2. Admin can change logo, favicon, banner etc.\n3. Admin can manage sliders\n4. Admin can manage testimonials.\n5. Admin can manage terms and privacy pages.\n6.  Admin can manage about page items.\n7. Admin can manage photo gallery.\n8. Admin can manage video gallery.\n9. Admin can manage FAQ page items.\n10. Admin can manage events.\n11. Admin can manage blog post.\n12. Admin can view and delete subscribers.\n13. Admin can export subscriber list as CSV.\n14. Admin can change his own photo, information and password.\n15. Admin can manage his education, experience and award sections.\n16. Admin can manage counter\n17. Admin can manage book category\n18. Admin can manage book publisher\n19. Admin can manage book language\n20. Admin can manage book items\n21. Admin can manage delivery charge options\n22. Admin can manage coupons\n23. Admin can see all the book orders\n24. Admin can see order invoices\n25. Admin can change the order status to paid, processing, shipped or cancelled\n\n\nUser Features\n1. User can create account in this system for free.\n2. User can reset password if needed.\n3. User can change his profile information and password.\n4. User can pay using paypal, stripe and order for books.\n5. User can see orders and invoices.\n6. User can print or download the invoice as CSV.\n7. User will get email from admin when order status will be changed.",
      "target_audience": [
        "Persons who want to learn php from scratch",
        "Persons who want to learn mysql from scratch",
        "Persons who are looking for a good job in web development sector",
        "Persons who want to have a remote job in php",
        "Persons who want to start his freelancing career using php",
        "Persons who want to learn making book author personal portfolio website using PHP, PDO, MySQL"
      ]
    },
    {
      "title": "AWS CloudFormation Master Class v2 [2024]",
      "url": "https://www.udemy.com/course/aws-cloudformation-master-class/",
      "bio": "Write Complete AWS CloudFormation Templates using YAML. Learn all the Recent Cloud Formation Features",
      "objectives": [
        "YAML",
        "Parameters",
        "SSM Parameter Types",
        "Resources",
        "Advanced Resources (DependsOn, DeletionPolicy, UpdateReplacePolicy, CreationPolicy, UpdatePolicy)",
        "Mappings",
        "Pseudo Parameters",
        "Outputs & Cross Stack References",
        "Conditions",
        "Rules",
        "Metadata",
        "CFN Init",
        "Drift",
        "Nested Stacks",
        "StackSets",
        "Deployment Options (ChangeSets, StackPolicy, Rollback, Termination, Service Roles)",
        "Continuous Delivery with CodePipeline",
        "Custom Resources (Lambda & SNS)",
        "WaitCondition",
        "Dynamic References",
        "Registry, 3rd-party Resource Types & Modules",
        "Resource Imports",
        "SAM (Serverless Application Model) Intro",
        "CDK (Cloud Development Kit) Intro",
        "Macros",
        "Template Validation",
        "Best Practices"
      ],
      "course_content": {},
      "requirements": [
        "Must have some understanding about AWS",
        "Knowledge of JSON and / or YAML is preferred",
        "Recent Mac / Linux / Windows machine",
        "Lots of desire to learn new exciting things!"
      ],
      "description": "[June 2021 Update - AWS CloudFormation Master Class v2]: the ENTIRE course has been re-recorded, and new sections and features have been added, to cover every CloudFormation feature.\n[March 2019 Update]: Added two sections on Drift and Nested Stacks\n\n\n-- -- -- -- -- -- --\nAWS CloudFormation is the best way to write, deploy and maintain your AWS Infrastructure. It helps you create efficient solution architectures, all self-contained in one file. It supports most of the AWS Services and is the safest way to make your AWS Infrastructure evolve over time.\nThanks to YAML, writing AWS CloudFormation Templates has become extremely easy and natural. AWS CloudFormation is powerful and supports Parameters, Mappings, Resources, References, Cross-Stack References, Conditions, Outputs, Metadata, and so much more!\nIn this course AWS CloudFormation Master Class, I will teach you about all the CloudFormation features. In just a few hours, you will know everything about CloudFormation and seamlessly deploy your infrastructure in no time.\nTake a look at these student reviews..\n★★★★★  \"An excellent course on AWS CloudFormation. It covers everything, but this is definitely not for AWS Beginners. You need to know the fundamentals of AWS if you want to really get something out of it. It is very worthwhile for AWS System Architects, AWS Developers, and SysOps/DevOps professionals. I hold two AWS associate certifications and enjoyed this course.\" – Gerry H.\n★★★★★   \"I really enjoyed the course. I spent a day or two going through the overwhelming sea of official documentation before landing on this video. Like the instructor says in the introduction, you need to have knowledge of most of the popular AWS services like EC2, security groups, key-pair, floating ips, volumes, AWS Billing, etc. before watching this as he doesn't waste any time explaining about those services. A slight knowledge of JSON or YAML is really helpful.\" – Purmode R.\n\n-- -- -- -- -- -- --\nAWS CloudFormation Master Class is the easiest way to start learning AWS CloudFormation:\n> Learn CloudFormation and master all its concepts\n> Go through Hands-On examples to practice what we learned\n> Learn how to use YAML to write the CloudFormation Templates\n> Learn how to write your infrastructure as code\n> Keep all the course material as a reference for your future templates!\n> Learn each CloudFormation building blocks in-depth: Parameters, Mappings, Resources, Outputs, Conditions, Metadata\n> Learn about CloudFormation Init, the most powerful way to bootstrap your EC2 instances\n> Advanced CloudFormation features Drift, Nested Stacks, etc.\n> So much more!\nNote: This course assumes you know how to use the AWS Cloud. It will help you transform your solution architecting skills into CloudFormation templates.\n\n\n-- -- -- -- -- -- --\nInstructor\nMy name is Stephane Maarek, and I'll be your instructor in this course. I teach about AWS certifications with my focus always on helping my students improve their professional proficiencies in AWS. I am also the author of some of the most highly-rated & best-selling courses on AWS Lambda, AWS CloudFormation & AWS EC2.\nThroughout my career in designing and delivering these certifications and courses, I have already taught 2,000,000+ students and gotten 350,000+ reviews!\nWith AWS becoming much more than a buzzword out there, I've decided it's time for students to properly learn how to write complete AWS CloudFormation Templates using YAML. So, let’s kick start the course! You are in good hands!\n\n\n-- -- -- -- -- -- --\nThis course also comes with:\nLifetime access to all future updates\nA responsive instructor in the Q&A Section\nUdemy Certificate of Completion Ready for Download\nA 30 Day \"No Questions Asked\" Money Back Guarantee!\nJoin me in this course if you want to learn about all the latest features of Cloud Formation and master the AWS platform!",
      "target_audience": [
        "Developers who want to learn about AWS CloudFormation and how to write templates",
        "DevOps who want to learn how to deploy and orchestrate CloudFormation templates",
        "Solutions Architect who want to understand the benefit of using CloudFormation to manage infrastructure and steer their team to use CloudFormation"
      ]
    },
    {
      "title": "Node with React: Fullstack Web Development",
      "url": "https://www.udemy.com/course/node-with-react-fullstack-web-development/",
      "bio": "Build and deploy fullstack web apps with NodeJS, React, Redux, Express, and MongoDB.",
      "objectives": [
        "Create boilerplate starter projects with React, Redux, Express, and Mongo",
        "Understand common web technologies and design patterns to connect them together",
        "Master deployment techniques between the production and development environments",
        "Make an app with Google OAuth authentication",
        "Learn to effectively create and send emails from a backend server",
        "Accept and process credit card payments from users"
      ],
      "course_content": {
        "Course Overview - Start Here!": [
          "Course Resources",
          "Join Our Community!",
          "App Overview",
          "App User Flow Walkthrough",
          "Tech Stack",
          "App Mockups"
        ],
        "Server Side Architecture": [
          "Application Architecture",
          "Relationship Between Node and Express",
          "Generating Express Apps",
          "Express Route Handlers",
          "Important Info About Heroku and Deployment",
          "Deployment Checklist",
          "[Render] Git and GitHub Setup",
          "[Render] Registration, Creating a Service and Deployment",
          "[Heroku] Installing the Heroku CLI",
          "[Heroku] Verifying Deployment",
          "[Heroku] Followup Deployments"
        ],
        "Authentication with Google OAuth": [
          "Intro to Google OAuth",
          "The OAuth Flow",
          "Overview of Passport JS",
          "Passport Setup",
          "The Google OAuth API",
          "Google Project Setup and Enabling the Google OAuth API",
          "Securing API Keys",
          "Google Strategy Options",
          "Testing OAuth",
          "Authorized Redirect URI's",
          "OAuth Callbacks",
          "Access and Refresh Tokens",
          "Nodemon Setup"
        ],
        "Adding MongoDB": [
          "Server Structure Refactor",
          "The Theory of Authentication",
          "Signing In Users with OAuth",
          "Introduction to MongoDB",
          "Remote vs Local MongoDB Instances",
          "MongoDB Atlas Setup and Configuration",
          "Connecting Mongoose to Mongo",
          "Breather and Review",
          "Mongoose Model Classes",
          "Saving Model Instances",
          "TokenError: Bad Request",
          "Mongoose Queries",
          "Passport Callbacks",
          "Encoding Users",
          "Deserialize User",
          "Enabling Cookies",
          "Testing Authentication",
          "Logging Out Users",
          "[Optional] A Deeper Dive"
        ],
        "Dev vs Prod Environments": [
          "Dev vs Prod Keys",
          "MongoDB Atlas Production Setup and Configuration",
          "Generating Production Resources",
          "Determining Environment",
          "Version Control Scheme",
          "[Render] Production Environment Variables",
          "[Heroku] Production Environment Variables",
          "Fixing Proxy Issues"
        ],
        "Moving to the Client Side": [
          "Required React App Boilerplate",
          "A Separate Front End Server",
          "Running the Client and Server",
          "Important Create React App Proxy Update",
          "Routing Stumbling Block",
          "The Beauty of Create React App's Proxy",
          "[Optional] Why This Architecture?"
        ],
        "Developing the Client Side": [
          "Async/Await Syntax",
          "Refactoring with Async/Await",
          "Important Note About Proxy",
          "Front End Tech",
          "Client React Setup",
          "ReactDOM warning with React v18",
          "Installing Root Modules",
          "Troubleshooting NPM",
          "createStore Strikethrough in Code Editor",
          "Redux Review and Setup",
          "The Auth Reducer",
          "Finishing Reducer Setup",
          "Why We Care About Auth",
          "React Router Setup",
          "Route Configuration",
          "Matching Routes with Exact",
          "Always Visible Components",
          "Materialize CSS",
          "Webpack with CSS",
          "Header Design",
          "Current User API",
          "Additional Proxy Rules",
          "Basics of Redux Thunk",
          "Refactoring the App",
          "Testing FetchUser",
          "Refactoring to Async/Await",
          "AuthReducer Return Values",
          "Accessing State in the Header",
          "Header Content",
          "Redirecting a User on Auth",
          "Redirect on Logout",
          "Landing Component",
          "Link Tags"
        ],
        "Handling Payments": [
          "Client Side Billing",
          "Billing Considerations",
          "Stripe Billing Process",
          "Exploring the Stripe API",
          "Stripe API Keys",
          "Env Variables with React",
          "The Payments Component",
          "Stripe Tokens",
          "Payment Fixes",
          "Reusing Action Types",
          "Posting the Stripe Token",
          "Post Request Handlers",
          "Creating Charges",
          "BodyParser Middleware",
          "Creating a Charge Object",
          "Finalizing a Charge",
          "Adding Credits to a User",
          "Requiring Authentication",
          "Route-Specific Middlewares",
          "Displaying Credit Quantity",
          "Updating Credits"
        ],
        "Back End to Front End Routing in Production": [
          "Express with Create-React-App in Production",
          "Routing in Production",
          "Deployment Options",
          "Adding in a Build Step",
          "[Render] Postbuild and Deployment",
          "Fixes for Failing Heroku Builds",
          "Testing Deployment"
        ],
        "Mongoose for Survey Creation": [
          "Survey Overview",
          "Server Routes",
          "Survey Model",
          "Model Deficiencies",
          "Limitations of Subdocument Collections",
          "Setting up SubDocs",
          "Relationship Fields",
          "Survey Creation Route Handler",
          "Verifying Minimum Credits",
          "Creating Surveys",
          "Creating Subdoc Collections",
          "Oops! A Little Tweak",
          "Creating Mailers",
          "Identifying Unique Users",
          "Sendgrid Activation Update",
          "Sendgrid Setup",
          "Mailer Setup",
          "Update for \"from_email\" setting",
          "Mailer in Use",
          "Mailer Constructor",
          "Boilerplate for Sending Emails",
          "More Mailer Properties",
          "Sending SendGrid Emails",
          "Testing Email Sending",
          "Improving the Email Template",
          "Polish in the Route Handler",
          "Verifying Sendgrid Click Tracking",
          "Feedback for User Feedback"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript, React, and Redux",
        "A Mac, Windows, or Linux computer"
      ],
      "description": "Note: This course assumes you've got the basics of React and Redux down.  Check out my course 'Modern React with Redux', its the perfect preparation!\nGo beyond the basics of React and Redux!  This course will teach you to combine the ultra-popular React, Redux, Express, and MongoDB technologies to build a fullstack web application.\nAdvanced Deployment? You will learn it.  Billing/Payments? Included.  Handling Email? Of course!\n------------------------------\nWhat Will You Build?\nAll of my courses are 'learn-by-doing': no boring endless lectures with Powerpoints, only live, interactive coding examples.  In this course we'll build one massive web application that profiles the advanced features of React, Redux, Express, and Mongo.  By putting each concept into a real app, you'll get a better idea of when to use each unique and powerful feature.\nBuild a large feedback-collection app. This mega app will include the full gamut of features, including everything from authentication to email handling.  You'll learn how to build an app that can be used to send mass emails to a big list of users for the purpose of collecting feedback.  It's my goal to ensure you understand each feature we build into this app so you can apply them to your own personal or professional projects in the future.\n------------------------------\nHere's what we'll learn:\nLearn the architectural considerations of building a full stack app\nConnect a front-end Create-React-App server to a NodeJS and Express backend\nCommunicate data from your Mongo database to your React application\nUnderstand how to route user requests on the front end with React Router and on the backend with Express\nBuild reusable user inputs with Redux Form, complete with navigation\nHandle credit cards and receive payments from your users with Stripe\nEngage your users with automated emails\nEnhance authentication flows in your app with Google OAuth authentication\nSeparate production and development resources with advanced API key handling techniques\nEducate your users on how to use your app with custom build landing pages\nI've built the course that I would have wanted to take when I was learning to build fullstack apps. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Anyone who wants to learn how to build full stack apps with the latest in web technology"
      ]
    },
    {
      "title": "Build an app with React, Redux and Firestore from scratch",
      "url": "https://www.udemy.com/course/build-an-app-with-react-redux-and-firestore-from-scratch/",
      "bio": "Learn how to build a web app with React, Redux and Firestore from beginning to publishing",
      "objectives": [
        "Students will be able to create an application using React, Redux and Firestore by the end of this course.",
        "Students will improve their javascript skills by taking this course"
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction to the course",
          "Setting up the developer environment",
          "Creating the React Project",
          "Setting up VS Code",
          "What’s in the React project",
          "Saving our code into Source control",
          "Where to get the course assets and source code"
        ],
        "React concepts": [
          "Introduction to React",
          "React concepts",
          "Typescript basics",
          "Decisions made on packages used to build the app"
        ],
        "React basics": [
          "Introduction to section 3",
          "Adding Tailwind CSS, DaisyUI and Motion",
          "Adding the EventDashboard component",
          "Adding a NavBar component",
          "Adding the EventDashboard content",
          "Adding the EventForm component",
          "Adding some sample data to work with",
          "Passing down props to components",
          "Using component state with useState",
          "Using the useEffect hook",
          "Using animations when components mount and unmount",
          "Summary of section 3"
        ],
        "CRUD operations in React": [
          "Introduction to section 4",
          "Form basics",
          "Creating an event",
          "Selecting an event to read and populate in the form",
          "Controlling components with a key",
          "Update event operation",
          "Delete event operation",
          "Updating the theme",
          "Summary of section 4"
        ],
        "Redux": [
          "Introduction to section 5",
          "React Redux concepts",
          "Setting up Redux with the Redux toolkit",
          "Using Redux",
          "Old Redux",
          "Creating an Event slice",
          "Redux dev tools",
          "Creating reducer functions for create, delete and update",
          "Using Redux thunks",
          "Removing prop drilling from the components",
          "Summary of section 5"
        ],
        "Routing": [
          "Introduction to section 6",
          "Installing react router",
          "Configuring React Router",
          "Updating the Nav bar with NavLinks",
          "Animating the route transitions",
          "Adding a User menu to the nav bar",
          "Adding an Account slice",
          "Routing in code",
          "Setting up the Event detailed page",
          "Design the Event detailed header",
          "Design the Event detailed info",
          "Design the Event detailed chat",
          "Design the Event detailed sidebar",
          "Selecting an event in the detailed page",
          "Using the selected event to populate the detailed page",
          "Designing the home page",
          "Section 6 Challenge",
          "Challenge solution",
          "Summary of section 6"
        ],
        "Forms Revisited": [
          "Introduction to section 7",
          "Installing and setting up React Hook form",
          "Validating the inputs",
          "Creating a reusable uncontrolled text input",
          "Creating a reusable controlled text input",
          "Schema validation with Zod",
          "Creating a reusable text area input",
          "Creating a reusable select input",
          "The Date Time input",
          "Creating a place autocomplete part 1",
          "Creating a place autocomplete part 2",
          "Creating a place autocomplete part 3",
          "Selecting the location with lat/lng",
          "Tidying up and testing the event form",
          "Adding a map component",
          "Adding a login form",
          "Validation errors",
          "Summary of section 7"
        ],
        "Firestore": [
          "Introduction to section 8",
          "Setting up firebase",
          "Seeding data part 1",
          "Seeding data part 2",
          "Seeding data part 3",
          "Listening to data from Firestore",
          "Shaping the Firestore data",
          "Listening to a single document from Firestore",
          "Creating a Firestore slice",
          "Create a useCollection custom hook",
          "Converting Timestamps again",
          "Creating a useDocument hook",
          "Create a useFirestoreActions custom hook",
          "Updating an event in Firestore",
          "Fixing the loading issue",
          "Error handling",
          "Creating an Event in Firestore",
          "Deleting an Event in Firestore",
          "Summary of section 8"
        ],
        "Firebase authentication": [
          "Introduction to section 9",
          "Setting up auth in firebase",
          "Signing in with Firebase auth",
          "Preparing the user data in the account slice",
          "Persisting the login",
          "Creating a centered card",
          "Registering users",
          "Social logins part 1",
          "Social logins part 2",
          "Introduction to Firestore security rules",
          "Server side validation",
          "Summary of section 9"
        ],
        "Profiles": [
          "Introduction to section 10",
          "Creating a profile page",
          "Creating the profile content",
          "Creating the profile components",
          "Getting the profile data from Firestore",
          "Adding the edit mode for the current user",
          "Adding the profile form",
          "Designing the profile photos component",
          "Displaying the list of members part 1",
          "Displaying the list of members part 2",
          "Updating the profile links in the app",
          "Updating the create method with the current user",
          "Updating the event detailed header with user info",
          "Adding the attendance toggle function",
          "Updating the security rules",
          "Cancelling the event functionality",
          "Formatting the dates",
          "Adding a countdown timer for the events",
          "Summary of section 10"
        ]
      },
      "requirements": [
        "Students should be familiar with HTML, CSS and Javascript",
        "A computer with either Windows, Mac OSX or Linux is required",
        "We will make use of (free) Google services so a Google account is necessary"
      ],
      "description": "* Re-mastered, re-imagined and re-recorded in full as at  April 2025*\nThis course has been completely rewritten and re-recorded from scratch using the tools and techniques available to us to build an application as at April 2025.\nDo you want to learn React and Redux in the context of building a complete application?   Do you want to learn about Firestore, the new Database offering from Google that provides 'live data' to our application?  Are you the type of learner who gets most out of actually building an application rather than watching endless slides about how something is supposed to work?  If so then this course is for you!\nIn this course we build a complete application from start to finish.\nEvery line of code is demonstrated and explained.  We warm up by building a CRUD application in React, we then enhance it by adding Redux and following that we add in Firestore to provide the persistence layer for the application.\nHere are just some of the things you will learn about in this course:\nSetting up the developer environment\nCreating a React application using the create-react-app utility from Facebook\nLogin and Register functionality using Firebase authentication\nAdding social login for Facebook and Google into the application\nGoogle maps and Places autocomplete integration\nPhoto uploading using drag and drop, with resizing and cropping of the images before upload\nAdding a live chat system\nPaging, Sorting and Filtering with Firestore\nInfinite scroll for the pagination\nFirestore database design\nCreating reusable form components with React hook forms\nBuilding a great looking application with Tailwind CSS, DaisyUI and Framer Motion\nMany more things as well\nTools you need for this course\nIn this course all lessons are demonstrated using Visual Studio Code, a free (and really good) cross platform code editor.  You can of course use your preferred IDE or Code editor of choice and any operating system you like... well as long as it's either Max OSX, Windows or Linux.\nIs this course for you?\nThis course is extremely practical.  About 90% of our time is spent actually building the application.  If you are the type of person who gets the most out of learning 'by doing', then this course will be for you.\nPlease note that we do not start from zero coding knowledge.   Whilst this is aimed at beginner level, you will need to have some basic javascript knowledge (not a lot is needed) or if you are coming from another programming language then you should be fine with this course.  It's designed to take you from beginner level to having the skills to build a much more significant application.\nWhat do we do on this course\nWe are building a social events application, much like Facebook events or Meetup.   Building a social application gives us opportunity to build more than just a simple CRUD application.",
      "target_audience": [
        "Beginner developers who have familiarity with HTML, CSS and JS who want to learn about React and Redux",
        "Beginner developers who want to learn about Firestore, Google's new database service"
      ]
    },
    {
      "title": "Learn SVG Animation - With HTML, CSS & Javascript",
      "url": "https://www.udemy.com/course/learn-svg-animation/",
      "bio": "Learn how these powerful animation are created using HTML,CSS & Javascript",
      "objectives": [
        "Optimise SVG files for use online",
        "Prototype animations in the online tool Codepen",
        "Use Javascript to calculate the length of an SVG Path",
        "Create SVG's that make use of Masks & Gradients"
      ],
      "course_content": {},
      "requirements": [
        "Have a text editor downloaded to their computer e.d Atom.io, Sublime Text",
        "If you have a vector graphics program like Adobe illustrator you can follow along but it is not required. All svg files are provided.",
        "Have experience writing CSS code and styling using classes"
      ],
      "description": "Looking to enhance your next web development project? Or learn one of the most sort after animation skills?\nWithin two hours you will have created Six SVG projects looking at a number of different animation techniques. Using animation within the user interface of a website is now standard practise. This fast and effective course will introduce use to new ways to improve your client projects.\n\nAll SVG files are provided but we do also work through creating the SVG files in Adobe Illustrator(or Similar). Lessons are taught with video screencasts, explained in detail as we work through real projects created directly for this course.\nProjects Include\n- Animating Logos\n- Animating Social Icons\n- Hand Drawing Text\n- CSS animation properties explained\n- Using Gradients over Text and Icons (Cross Browser)\n- Using Masks\n- Using CodePen\n- Introduction to SVG Optimisation Online\nFor a complete beginner to SVG we recommend taking our other course in the series.",
      "target_audience": [
        "Should already know what an svg file is",
        "Should have used html/css before - not suitable for absolute beginner to coding",
        "Students who want to improve their svg animations and try new techniques but don't know how"
      ]
    },
    {
      "title": "Bash Shell Scripting: Crash Course For Beginners",
      "url": "https://www.udemy.com/course/bash-shell-scripting-crash-course-for-beginners/",
      "bio": "Learn Bash Shell Scripting from total beginner:Start from the Command Line,finish with a real world Shell Script Project",
      "objectives": [
        "Learn how to use the command line",
        "Be able to write your own Shell scripts",
        "Automate tasks using Shell scripts",
        "Make decisions by using if-else statements",
        "Make decision based on strings, variables or files",
        "How to use arithmetic expressions",
        "How to loop through files and folders with for and while loops",
        "How to use functions",
        "How to deal with variables scope",
        "Create Shell Scripts that solves a real world problem"
      ],
      "course_content": {
        "Command Line for Beginners": [
          "Introduction",
          "Terminal Overview",
          "Track Your Progress",
          "List command Ls",
          "Ls -L. Understand the Terminal Output",
          "Ls with folders",
          "Change Directory: cd",
          "NEW! Open, Xdg-Open",
          "Touch",
          "Move",
          "Copy-Remove",
          "Star Sign: *",
          "Recursive",
          "Section 1",
          "(NEW!) Exercises Command Line Sect1",
          "(NEW!) Sect 1 Ex1",
          "(NEW!) Sect 1 Ex2"
        ],
        "Important Commands For Shell Scripting": [
          "Redirect",
          "Pipe",
          "Find",
          "Grep",
          "Bonus Lecture: The AWK command. Part1",
          "Bonus Lecture: The AWK command. Part2",
          "Sudo",
          "Change Owner",
          "Change Permission",
          "Change Ownership to Folders",
          "(UPDATED!) Variables",
          "Command Substitution-Expansion",
          "UNIX Login file ( IMPORTANT )",
          "Read",
          "Section 2",
          "(NEW!) Exercises Command Line Sect2",
          "(NEW!) Sect 2- Ex1",
          "(NEW!) Sect 2- Ex2"
        ],
        "SHELL SCRIPTING: Intro and Basics": [
          "Track you Progress !! (2)",
          "Shell Scripting Intro",
          "Execute",
          "Which",
          "The First Script",
          "Editors and Read",
          "Change the PATH ( IMPORTANT )",
          "Script Open",
          "Shell Script Basics",
          "(NEW!) Exercises Shell Script Sect3",
          "(NEW!) Sect 3- Ex1",
          "(NEW!) A script that create another Script: Ex2"
        ],
        "SHELL SCRIPTING": [
          "Arithmetic Expressions",
          "IF Conditions",
          "Else",
          "Exit",
          "Logic Conditions",
          "IF on Strings",
          "Empty Strings",
          "IF on Files",
          "For Loops",
          "NEW! TOP 5 MISTAKES as a beginner",
          "While Loops",
          "Terminate a Script; Sleep",
          "(NEW!) Cases",
          "Exit Status",
          "Functions",
          "Variables Scope",
          "Exercises Shell Scripting",
          "Divisibility of Numbers Script. Ex1",
          "Counting of \".txt\" Files Script. Ex2",
          "(NEW!) User renaming all files: Ex3"
        ],
        "Bonus Lecture": [
          "Bonus Lectures: Become Professional in Bash"
        ],
        "SHELL SCRIPT PROJECT": [
          "Intro to the project",
          "Project1 Part A",
          "Project1 Part B",
          "Project1 Part C"
        ],
        "SHELL SCRIPT COMPLETE PROJECT ( PROJECT 2 )": [
          "COMPLETE PROJECT Part A",
          "COMPLETE PROJECT Part B",
          "COMPLETE PROJECT Part C",
          "COMPLETE PROJECT Bonus: Functions"
        ],
        "Conclusion and Tips": [
          "Conclusion and Tips",
          "Bonus Lectures: Become Professional in Bash"
        ]
      },
      "requirements": [
        "Have access to use the command line on Linux, Mac or Unix computer",
        "Very Basic knowledge of the command line could be helpful, however not necessary"
      ],
      "description": "You can finally understand Shell Scripting.\n\nThis course will give you a clear understanding of how to write Shell Scripts.\nIn this course everything is explained at a slow pace and thoroughly to make sure you can follow everything.\nEven if you never used the command line, the first 2 Sections  will teach you all the tools necessary to use the command line and start writing your shell scripts, nothing is left out.\n\nMoreover after walking you through  all the fundamentals of Shell Scripting, the last 2 Sections are project based, there we will combine everything you have learned in the course to create a script that solve s real world problem.\nBy the end of the course you'll be writing  your own Shell Scripts, in particular you will learn how to:\nUse the command line\nAutomate tasks using Shell Scripts\nCreate and use variables in your scripts\nMake decisions by using if-else statements\nMake decision based on strings, variables or files\nUse arithmetic expressions\nLoop through files and folders with \"for\" and \"while\" loops\nUse functions\nDeal with variables scope\nCreate Shell Scripts that solves real world problems\nand much more...",
      "target_audience": [
        "Anyone who would like to learn how to automate tasks with the terminal",
        "Anyone familiar with the Terminal but not with Shell Scripting",
        "Anyone who want to learn the command line and shell scripting in the same course"
      ]
    },
    {
      "title": "Docker Crash Course for busy DevOps and Developers",
      "url": "https://www.udemy.com/course/docker-tutorial-for-devops-run-docker-containers/",
      "bio": "Learn how to develop and deploy web applications with Docker technologies. Take your DevOps skills to the next level.",
      "objectives": [
        "Containerize a web-based application with a microservice approach and automate it using Dockerfile",
        "Design multi-container applications and automate the workflow using Compose",
        "Scale Docker workflow with Docker Swarm, orchestrate and deploy a large-scale application across multiple hosts in the cloud",
        "Best practices of working with Docker technology in the field",
        "In-depth knowledge about Docker technology and confidence to help your company or your own project to apply the right Docker deployment workflow and continuously deliver better software",
        "Invaluable DevOps skills such as setting up continuous integration workflows",
        "And much much more..."
      ],
      "course_content": {
        "Get Started with Docker Technologies": [
          "Course Overview: Welcome to the Docker Technology World",
          "How to Take this Course and How to Get Support",
          "Text Lecture: How to Take this Course and How to Get Support",
          "Course Slides",
          "Introduction to Virtualization Technologies",
          "Docker Software's Client-Server Architecture",
          "Install Docker for Mac/Windows",
          "Install Docker Toolbox",
          "Important Concepts of Docker Technology",
          "Run Our First Hello World Docker Container",
          "Deep Dive into Docker Containers",
          "Docker Port Mapping and Docker Logs Command",
          "Extra Learning: Deep Dive into Docker Logging"
        ],
        "Working with Docker Images": [
          "Docker Image Layers",
          "Build Docker Images by using Docker Commit Command",
          "Build Docker Images by Writing Dockerfile",
          "Dockerfile In-depth",
          "Push Docker Images to Docker Hub"
        ],
        "Create Containerized Web Applications": [
          "Containerize a Simple Hello World Web Application",
          "Text Direction: Containerize a Hello World Web Application",
          "Implement a Simple Key-value Lookup Service",
          "Create Docker Container Links",
          "Automate Current Workflow with Docker Compose",
          "Deep Dive into Docker Compose Workflow",
          "Extra Learning: Things to Watch out When Working with Docker Containers"
        ],
        "Docker Networking": [
          "Introduction to Docker Networking",
          "None Network",
          "Bridge Network",
          "Host Network and Overlay Network",
          "D3: Text Lecture: Overlay Network",
          "Define Container Networks with Docker Compose"
        ],
        "Create a Continuous Integration Pipeline": [
          "Write and Run Unit Tests inside Containers",
          "Introduction to Continuous Integration",
          "Text Direction: Introduction to Continuous Integration",
          "Link CircleCI with Github Account for Setting up a CI Workflow",
          "Push Docker Images To DockerHub from CircleCI",
          "Trouble Shooting: Push Docker Images to Docker Hub"
        ],
        "Deploy Docker Containers in Production": [
          "Introduction to Running Docker Containers in Production",
          "Register Digital Ocean Account for Deploying Containerized Applications",
          "Deploy Docker Application to the Cloud with Docker Machine",
          "Text Direction: Deploy Docker Application to the Cloud with Docker Machine",
          "Introduction to Docker Swarm and Set up Swarm Cluster",
          "Deploy Docker App Services to the Cloud via Docker Swarm",
          "Extra learning Material: Dockers Monitoring Tools"
        ],
        "Additional Learning Materials": [
          "What is new in Docker 17.06",
          "Docker's Native support for Kubernetes",
          "Future Learning",
          "Text Lecture: Future Learning",
          "Coupons to Our Other Courses"
        ]
      },
      "requirements": [
        "A computer running Windows, OSX or Linux.",
        "Knowledge of Git and Linux will be preferred but NOT required.",
        "Prior experience with Docker Technologies is NOT required."
      ],
      "description": "Disclaimer:\nThis course requires you to download Docker Desktop from the Docker Official Website. If you are a Udemy Business user, please check with your employer before downloading software.\n\n\nWhat is this course about:\n\nThis course covers all the fundamentals about Docker software and teach you everything you need to know about developing and deploying modern applications with Docker software.\nIn the end of this course, you will gain in-depth knowledge about Docker software and general DevOps skills to help your company or your own project to apply the right docker workflow and continuously deliver better software.\nWhat will you learn from this course:\nIn particularly, you will learn:\nContainerize a web-based application with a micro-service approach and automate it using Dockerfile.\nDesign multi-container applications and automate the workflow using Compose.\nScale Docker workflow with Docker Swarm, orchestrate and deploy a large-scale application across multiple hosts in the cloud.\nBest practices of working with Docker software in the field.\nIn-depth knowledge about Docker software and confidence to help your company or your own project to apply the right Docker deployment workflow and continuously deliver better software.\nInvaluable DevOps skills such as setting up continuous integration pipelines.\n\n\nWhy shall we learn Docker technologies:\nDocker software is on the bleeding edge of technology today.  It is also one of the most compelling technologies of the last decade in terms of its disruption to software development, operations, systems architecture, testing and compliance practices.\n\nDocker is becoming a must tool for developers. containers and the Docker’s approach gives you the opportunity to work without any need of dependencies. Docker allows developers to focus on the things which actually matters without worrying about the environment where the application runs.\nTons of companies are using docker in production, today you have the access to that same virtualization technology right on your desktop.\n\n\nAbout the author:\nIn the past, James worked at many companies such as Amazon and Google. Now James is working at one of the top Silicon Valley startups specializing big data analysis.\nDuring the past two years, James has been leading his team to dockerize their old monolithic applications with a micro-service approach.\nJames' company has gained massive benefits by running Docker in production. In this course, he is going to share with you his years of knowledge and best practices of working with docker in the real field.\n\nWhy DevOps skills?\nNowadays DevOps engineers are in great demand in the IT industry. Companies are looking for developers who can both develop and deploy the applications.\nThe average salary of a DevOps engineer is about $140,000 per year in Silicon Valley area which is 20% higher than the salary of a software engineer.\nMaster DevOps Skills means you will be staying ahead in the competitive job market!\n\n\nWhy choosing this course?\nThis course is very hands on, James has put lots effort to provide you with not only the theory but also real-life examples of developing Docker applications that you can try out on your own laptop.\nJames has uploaded all the source code to Github and you will be able to follow along with either windows, MAC OS or Linux.\nIn the end of this course, James is confident that you will gain in depth knowledge about Docker and general DevOps skills to help your company or your own project to apply the right docker workflow and continuously deliver better software.\n\n\n30-day money-back guarantee!\nYou will get 30-day money-back guarantee from Udemy for this course.\nIf not satisfied simply ask for a refund within 30 days. You will get full refund. No questions whatsoever asked.\n\n\nAre you ready to take your DevOps skills and career to the next level, take this course now!\nYou will go from zero to Docker hero in 4 hours.",
      "target_audience": [
        "Anyone who want to fully understand how Docker technology works and learn how Docker technology is being used in the field.",
        "DevOps, Developers, or QAs who want to advance their career by improving their DevOps skills.",
        "Developers who want to learn how to develop and deploy containerized modern web applications with a micro-service approach."
      ]
    },
    {
      "title": "JavaScript Basics Web Development Building Blocks",
      "url": "https://www.udemy.com/course/javascript-basics-web-development-building-blocks/",
      "bio": "JavaScript Course for everyone who wants to learn more about using JavaScript Dynamic interactive pages with JavaScript",
      "objectives": [
        "Know how JavaScript works",
        "Know how to use JavaScript",
        "Create your own JavaScript code",
        "Add JavaScript to a website",
        "How JavaScript works in a browser",
        "know JavaScript syntax and how to use it"
      ],
      "course_content": {
        "Learn JavaScript Introduction to Course": [
          "Course Intro JavaScript",
          "Resources",
          "How to use this course and write JavaScript Code"
        ],
        "Lets Get Coding JavaScript Programming": [
          "How to get your browser to use JavaScript",
          "JavaScript Basic Syntax",
          "JavaScript Variables",
          "JavaScript Functions",
          "Javascript arithmetic operators",
          "JavaScript Conditions Statement If else",
          "Operators explained",
          "Switch Statement",
          "Looping while in JavaScript",
          "JavaScript Objects",
          "JavaScript Arrays",
          "Document Object Model Window Console values",
          "Working with the DOM changing a web page"
        ],
        "Questions and Answers Code Snippets Additional Learning JavaScript Lesson": [
          "How to create a Dynamic List with JavaScript",
          "JavaScript Resources",
          "Learning Guides and resources PDF guides"
        ]
      },
      "requirements": [
        "Basic Understanding of HTML",
        "Desire to learn JavaScript",
        "Some JavaScript Coding experience"
      ],
      "description": "JavaScript Beginners course will walk you through all the basic building blocks of JavaScript.\nLearning JavaScript for dynamic Website development.  JavaScript is the most popular programming language in the world, its used everywhere.  HTML CSS and JavaScript are the core building builds of the web, and used throughout the internet to make interactive and dynamic web content.\nJavaScript runs directly within your browser, from the HTML file.\nLearn\nJavaScript comments console information\nJavaScript variables\nJavaScript functions\nJavaScript operators\nJavaScript if statements\nJavaScript switch\nJavaScript loops\nJavaScript event handlers\nJavaScript objects\nJavaScript arrays\n\n\nLearn to create DYNAMIC INTERACTIVE web pages using JAVASCRIPT.\nJavaScript is the dynamic programming language that, when applied to an HTML document, can provide dynamic interactivity on websites. Used in all browsers it's the most popular coding language ever. Websites and web apps everywhere are using JavaScript. It runs directly in your browser and you can create html files with a text editor directly on your computer to run in your browser. Select the html file and open it with any browser.\nEverything you need to learn about JavaScript is provided within this course.\nexclusive download PDF resource ebook\nno wasted time watching someone type\nquick lessons get right to the point\nfully covered topics with real world examples\nover 10 source files downloadable to work along\nchallenges and lessons\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nLearn how Javascript works and it's fundamental concepts.  Learn to build your own Javascript code to make you website interactive.",
      "target_audience": [
        "Learn the advantages of using JavaScript",
        "Learn the fundamentals of JavaScript",
        "Web coders",
        "Web developers",
        "Web masters",
        "Web managers",
        "Web content creators",
        "want to make dynamic web content",
        "want to make interactive web pages"
      ]
    },
    {
      "title": "Build NodeJS applications with Mongodb",
      "url": "https://www.udemy.com/course/node-js-mongo-db-2018/",
      "bio": "Learn to build fullstack web applications with the most popular server side framework, NodeJS",
      "objectives": [
        "Build high quality applications built with Node, Express and MongoDB",
        "Storing data with Mongodb database",
        "Use cutting-edge ES6/ES7 JavaScript",
        "Create Express web servers",
        "Learn user sessions and authentication in nodejs applications",
        "Communicating with a mongodb database using mongoose ODM"
      ],
      "course_content": {
        "Introduction": [
          "The source code for this course",
          "What is nodejs?",
          "Creating our first server",
          "Understanding the request and response objects",
          "Responding with HTML",
          "Asynchronous vs synchronous",
          "Introduction to npm",
          "Introduction to express framework",
          "Sending HTML files with express",
          "Static assets with express"
        ],
        "build the blog": [
          "Installing project files",
          "Creating the home page",
          "Creating the about page",
          "Introduction to templating engines",
          "Introducing layouts in templating engines",
          "Refactoring post and contact page to edge",
          "Introduction to mongodb",
          "Introduction to mongoose",
          "CRUD operations with mongoose models",
          "Reading data from database using mongoose",
          "Getting single database documents",
          "Deleting database records",
          "The create post form",
          "Express post requests",
          "Saving posts to database",
          "Displaying a list of posts",
          "Dynamic data with templating engines",
          "The single post page",
          "Adding database fields to the schema",
          "Renaming description to subtitle",
          "Image upload with express",
          "Saving uploaded images to database",
          "Introduction to express middleware",
          "Registering validation middleware",
          "Refactoring to MVC",
          "Refactoring middleware",
          "User registration",
          "User model",
          "Handling user registration",
          "Mongoose model hooks",
          "Mongoose model validation",
          "User login process",
          "The login process",
          "Express sessions",
          "Persistent express sessions",
          "Authentication middleware",
          "Displaying validation errors",
          "Displaying validation errors in template",
          "Flash messaging",
          "Persist request data on form",
          "Redirect if auth middleware",
          "Conditionally display login and register links",
          "User logout",
          "Relating the post collection with the user collection",
          "Display post with user data",
          "Creating a 404 page",
          "Adding a wysiwyg editor",
          "File upload to cloudinary",
          "Environment variables"
        ]
      },
      "requirements": [
        "Basic understanding of the javascript programming language",
        "Understanding of HTML & CSS"
      ],
      "description": "What is this course about?\nNodejs, the most popular server side framework (runtime)\nWhy should I join this course?\nThe largest companies in the world like PayPal, Uber, etc are switching to the technologies taught in this course. Join this course to upgrade your knowledge and be prepared for the future.\nWhat's the teaching methodology?\nThis course follows a project driven approach , and at the end of the course, you must have built a complete web application from scratch.\nWhat topics are covered in the course?\nNodejs\nExpress framework\nMongodb\nMongoose ODM\nExpress sessions\nMongoose data validation\nExpress Middleware & Request interception\nUser authentication and authorization\nDynamic views with templating engines\nModel View Controller design pattern\nPassword security and hashing\nMongoose model hooks\nAnd so so much more !!!",
      "target_audience": [
        "Anyone willing to learn how to build web applications with NodeJS, Express and Mongodb (mongoose)"
      ]
    },
    {
      "title": "Next.js From Scratch",
      "url": "https://www.udemy.com/course/nextjs-from-scratch/",
      "bio": "Build a real-world project using Next.js and MongoDB",
      "objectives": [
        "Learn The Fundamentals of Next JS",
        "Build a Real-World Property Rental Website From Scratch",
        "File-Based Routing, React Server Components, Data Fetching, API Routes+",
        "Next Auth & Google Provider for Authentication & Authorization",
        "Use MongoDB & Mongoose In Server Actions",
        "Internal Messaging, Bookmarks, Search, Image Lightboxes, Pagination+",
        "Implement Cloudinary for Image Storage & Optimization"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "PropertyPulse Project Demo",
          "What Is Next.js?",
          "Next.js Features",
          "Environment Setup",
          "Project Theme Files"
        ],
        "Next.js Fundamentals & Project Start": [
          "New Project & Tailwind Config",
          "Layout & Homepage",
          "Metadata & Assets",
          "File-Based Routing",
          "Server vs Client Components",
          "Client Component & Navigation Hooks",
          "Navbar Component Start",
          "Navbar Links, Dropdown State, Icons",
          "Active Links & Conditional Rendering",
          "Homepage Components & Footer",
          "Properties Page & PropertyCard Component",
          "Home Property Listings",
          "Custom Not Found & Loading Pages"
        ],
        "MongoDB Database, Server Components & Fetching Properties": [
          "Create MongoDB Database",
          "MongoDB Compass & Importing Data",
          "Database Connection & Mongoose",
          "Property & User Models",
          "Fetch Data Using Server Component",
          "Single Property & Header Image",
          "Property Details Component",
          "Intro To API Routes"
        ],
        "Next Auth, Sessions & Google Provider": [
          "What Is Next Auth?",
          "Google OAuth Setup",
          "Next Auth & Provider Setup",
          "Sign In Button",
          "Save User to Database & Session",
          "Profile Image",
          "Sign Out Button",
          "Protecting Routes"
        ],
        "Server Actions & Creating Properties": [
          "Add Property Form",
          "Server Actions",
          "Format Property Data",
          "Get User From Session",
          "Remove Try/Catch From getSessionUser",
          "Submit Property To Database",
          "Custom Error Page",
          "Cloudinary Image Upload",
          "PropertyCard & Header Images",
          "PropertyImages Component"
        ],
        "Profile & Manage Properties": [
          "User Profile Info Display",
          "User Profile Listings",
          "Searialize Lean Documents",
          "Deleting Properties",
          "Toast Notifications",
          "Edit Property Form",
          "Update Property Action"
        ],
        "Map, Bookmarks & Sharing": [
          "Geocode For Latitude & Longitude",
          "Mapbox Map Display",
          "Property Page Sidebar",
          "Bookmark Property Action",
          "Bookmark Button Functionality",
          "Check Bookmark Status",
          "Saved Properties Page",
          "Share Buttons"
        ],
        "Property Search": [
          "Property Search Component",
          "Fetch Search Results",
          "Display Search Results"
        ],
        "Messaging System": [
          "Message Model & addMessage Action",
          "Submit Message & useFormState Hook",
          "useFormStatus Hook",
          "Fetch Messages",
          "Display Messages",
          "Mark As Read",
          "Delete Messages",
          "Global Context For Message Count",
          "Get Unread Message Count"
        ],
        "Pagination, Featured, Lightbox & Deploy": [
          "Pagination Logic",
          "Pagination Component",
          "Photoswipe Lightbox",
          "Featured Properties",
          "Deploy To Vercel"
        ]
      },
      "requirements": [
        "You should have basic knowledge of JavaScript and React"
      ],
      "description": "This is a project based course that will teach you how to use Next.js in the real world. We use the Next.js framework to build a property rental website where users can browse, search and manage property listings.\n\n\nNext.js is the future of React. Server-side rendered websites and static websites are becoming the norm over single page applications and Next.js allows you to build both with ease. Learning Next will give you a huge advantage when it comes to modern web development.\n\n\nThe project will have the following features:\n\n\nUser authentication with Google & Next Auth\nUser authorization\nServer Actions & Database Interaction\nRoute protection\nUser profile with user listings\nProperty Listing CRUD\nProperty image upload (Multiple)\nCloudinary integration\nProperty search\nInternal messages with 'unread' notifications\nPhotoswipe image gallery\nMapbox maps\nToast notifications\nProperty bookmarking / saved properties\nProperty sharing to social media\nLoading spinners\nResponsive design (Tailwind)\nCustom 404 page\nThis course will give you all of the skills that you need to start creating your own full stack Next.js applications.\n\n\nHere are some of the packages and technologies that we will be using:\n\n\nNext.js 14\nReact\nTailwind CSS\nMongoDB\nMongoose\nNext Auth\nReact Icons\nPhotoswipe\nCloudinary\nMapbox\nReact Map GL\nReact Geocode\nReact Spinners\nReact Toastify\nReact Share",
      "target_audience": [
        "People that understand React that want to start building more powerful websites and applications with Next JS"
      ]
    },
    {
      "title": "PHP Unit Testing with PHPUnit",
      "url": "https://www.udemy.com/course/php-unit-testing/",
      "bio": "Unit test your PHP code using the PHPUnit testing framework: find bugs quickly and early, and improve your code quality",
      "objectives": [
        "Write automated tests for your PHP functions and classes",
        "Write better code with less bugs, in less time",
        "Develop code using test-driven development (TDD)",
        "Know that the code you write works how you want it to",
        "Learn the industry-standard PHPUnit testing framework",
        "Get support directly from the instructor"
      ],
      "course_content": {},
      "requirements": [
        "You must know PHP, including object-oriented code",
        "Be happy running commands in the terminal / command line on your computer",
        "Ideally have PHP and Composer installed, but a brief overview of installing these will be covered"
      ],
      "description": "If you are a PHP developer and you want to learn how to write better code, with fewer bugs, you will need to know how to write unit tests.\nLearn how to unit test your PHP code using the PHPUnit testing framework.\nLearn what unit tests are\nLearn how to write unit tests using PHPUnit\nBuild a test suite for PHP functions and classes\nMake test methods dependent on each other\nUse test doubles: mocks and stubs, including how to use Mockery\nLearn how and why you should use dependency injection\nLearn test-driven development (TDD)\nLearn how to test protected and private methods and properties (and whether you actually should or not!)\nLearn how to test abstract classes\nA skill that will enable you to write higher quality code, in a shorter time, with better documentation and fewer bugs.\nLearning how to write unit tests for your code will make you write better code. With automated tests, you can find bugs more easily, and if you break something you'll notice straight away.\nMany experienced developers write unit tests for their code. It's a repeatable way of checking that the code works as intended, and also serves as documentation. Many popular PHP projects are unit tested, such as WordPress and Moodle, and if you use frameworks such as Laravel or Symfony, these provide tight integration with the PHPUnit testing framework.\nContent and Overview\nHow do you currently test your code? Maybe you run your code in a browser, use var_dump a lot and so on. The problem with this is that you only tend to test new code - you don't go back and test old code. What if you add some new code that breaks the old code?\nWith automated unit tests, you have more control. If your new code breaks something, you'll notice straight away. You can fix bugs more easily, thereby reducing development time.\nTests are also a form of documentation, just like comments: they serve to show why the code has been written that way.\nSuitable for all PHP developers, you'll start by learning the basics of unit testing PHP code, including how to use assertions.\nThen you'll learn how to test functions and classes, and how to configure the PHPUnit framework.\nNext you'll learn how to use test dependencies, fixtures and how to test for exceptions.\nYou'll also see how test doubles work - mock objects and stub methods.\nThen you'll learn how to write code using test-driven development - writing the tests first, then the code.\nYou'll also learn how to test protected and private class methods and properties, and whether this is actually a good idea or not.\nTesting static methods is covered in detail, including several methods for dealing with static dependencies.\nWhen you complete the course you'll be able to write unit tests for your existing PHP code, and develop new code using test-driven development.\nComplete with all the code shown in the lectures, you'll be able to work alongside the instructor and will receive a verifiable certificate of completion upon finishing the course.\nAlso, at all times throughout the course you have access to the instructor in the Q&A section to ask for help with any topic related to the course.\nEnrol now and add unit testing to your PHP skillset!",
      "target_audience": [
        "PHP developers who want to improve the quality of their code by writing automated tests for their functions and classes",
        "PHP developers who want to learn the PHPUnit testing framework",
        "This course is about unit testing - this course is probably not for you if you're looking to learn how to test the user interface"
      ]
    },
    {
      "title": "Python Django - The Practical Guide",
      "url": "https://www.udemy.com/course/python-django-the-practical-guide/",
      "bio": "Learn how to build web applications and websites with Python and the Django framework",
      "objectives": [
        "Learn how to use Python for web development with Django",
        "Build real projects and apply what you learned in a full blog website created in the course",
        "Choose between the full course or the included course summary to get you started quickly"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is Django?",
          "The Course Prerequisites",
          "What's Inside the Course?",
          "Join Our Learning Community!",
          "Getting the Most out of the Course",
          "Choose Your Course Path!",
          "Course Setup"
        ],
        "Course Setup": [
          "Module Introduction",
          "Installing Python & Django",
          "Creating a Django Project",
          "Installing an IDE",
          "Analyzing the Created Project",
          "Starting a Development Server",
          "Django Apps",
          "Analyzing the Created Project",
          "More Advanced Setup Steps",
          "Useful Resources & Links"
        ],
        "URLs & Views": [
          "Module Introduction",
          "Creating a New Project",
          "What are URLs & Views?",
          "Creating a First View & URL",
          "Adding More Views & URLs",
          "Dynamic Path Segments & Captured Values",
          "Path Converters",
          "Adding More Dynamic View Logic",
          "Redirects",
          "The Reverse Function & Named URLs",
          "Returning HTML",
          "Practicing URLs, Views & Dynamic View Logic",
          "Summary",
          "Useful Resources & Links"
        ],
        "Templates & Static Files": [
          "Module Introduction",
          "Adding & Registering Templates",
          "Rendering Templates",
          "Template Language & Variable Interpolation",
          "Exercise Solution",
          "Filters",
          "The Django Visual Studio Code Extension",
          "Tags & the \"for\" Tag",
          "The URL Tag for Dynamic URLs",
          "The \"if\" Tag for Conditional Content",
          "Template Inheritance",
          "Exercise Solution",
          "Including Partial Template Snippets",
          "More on the Django Template Language (DTL)",
          "404 Templates",
          "Adding Static Files",
          "Adding Global Static Files",
          "Adding CSS Styling",
          "Building Static URLs Dynamically",
          "Summary",
          "Useful Resources & Links"
        ],
        "Course Project: Building a Blog - The Basics": [
          "Module Introduction",
          "Setting Up the Starting Project",
          "Planning the Project",
          "Adding URLs & Views",
          "Adding First Templates",
          "Template Content & Static Files",
          "Adding Images as Static Files",
          "Adding the \"All Posts\" Page & Style",
          "Linking the Pages",
          "Adding the \"Single Post\" Page",
          "Adding Dummy Data to the \"Views\" File",
          "Special Template Features & Syntax",
          "Adding a Single Post Page",
          "Adding a 404 Page",
          "Useful Resources & Links"
        ],
        "Data & Models": [
          "Module Introduction",
          "Different Kinds of Data",
          "Understanding Database Options",
          "Understanding SQL",
          "Django Models",
          "Creating a Django Model with Fields",
          "Migrations",
          "Inserting Data",
          "Getting all Entries",
          "Updating Models & Migrations",
          "Blank vs Null",
          "Updating Data",
          "Deleting Data",
          "Create Instead of Save",
          "Querying & Filtering Data",
          "\"or\" Conditions",
          "Query Performance",
          "Bulk Operations",
          "Preparing Templates",
          "Rendering Queried Data in the Template",
          "Rendering the Details Page",
          "Model URLs",
          "Adding a Slugfield & Overwriting Save",
          "Using the Slug & Updating Field Options",
          "Aggregation & Ordering",
          "Summary",
          "Useful Resources & Links"
        ],
        "Admin": [
          "Module Introduction",
          "Logging Data Into the Admin Panel",
          "Adding Models to the Admin Area",
          "Configuring Model Fields",
          "Configuring the Admin Settings",
          "More Config Options",
          "Useful Resources & Links"
        ],
        "Relationships": [
          "Module Introduction",
          "Understanding Relationship Types",
          "Adding a one-to-many Relation & Migrations",
          "Working with Relations in Python Code",
          "Cross Model Queries",
          "Managing Relations in Admin",
          "Adding a one-to-one Relation",
          "One-to-one Python Code",
          "One-to-one & Admin Config",
          "Setting-up many-to-many",
          "Using many-to-many in Python",
          "Many-to-many in Admin",
          "Circular Relations & Lazy Relations",
          "Summary",
          "Useful Resources & Links"
        ],
        "Course Project - Building a Blog: Data & Models": [
          "Module Introduction",
          "Planning the Data Models",
          "Adding a Post Model",
          "Author Model & one-to-many",
          "Tag Model many-to-many",
          "Registering Models for Admin",
          "Migrations & Admin Login",
          "Adding Data via Admin",
          "Configuring the Admin Panel",
          "Fetching Posts for Starting Page",
          "All Post & Single Post Pages",
          "Using Author & Tags Data",
          "Summary",
          "Useful Resources & Links"
        ],
        "Forms": [
          "Module Introduction",
          "Starting Setup",
          "Adding a Dummy Form",
          "Get & Post Requests",
          "CSRF Protection",
          "Handling Form Submission & Extracting Data",
          "Manual Form Validation & the Problems with \"that\"",
          "Using the Django Form Class",
          "Validation with Django Forms",
          "Customizing the Form Controls",
          "Customizing the Rendered HTML",
          "Adding Styling",
          "Adding More Form Controls",
          "Storing Form Data in a Database",
          "Introducing Modelforms",
          "Configuring the Modelform",
          "Saving Data with a Modelform",
          "Class Based Views",
          "Summary",
          "Useful Resources & Links"
        ]
      },
      "requirements": [
        "Basic Python and web development knowledge (HTML/ CSS) is required",
        "NO prior Django experience is required at all"
      ],
      "description": "Python is the most popular programming language of the world - it is versatile, easy to learn and very powerful!\nBut one of the primary things you can build with Python is a website! You can use Python for web development.\nAnd to make that easier, you would typically use a framework like Django - simply because that allows you to focus on your core business logic and you don't need to re-invent the wheel and implement all the nitty-gritty technical details from scratch.\nThis course is about Django - the most popular Python web development framework out there!\nDjango covers all aspects of web development - from handling requests and responses, over rendering dynamic HTML pages with templates, all the way up to making database access and data management easy. It's all baked in and it's all covered in great detail in this course!\nThis course teaches Django from the ground up - you don't need to know anything about it to get started. Basic Python and web development knowledge is all you need.\nWe'll start at the absolute basics and understand how to create Django project, how to run them and how to add features - step by step.\nIn detail, this course covers:\nInstalling Django\nCreating and understanding Django projects\nUnderstanding URLs, views, requests and responses\nWorking with templates and static files like CSS and images\nWorking with data and models\nConnecting data with relationships (one-to-many, one-to-one, many-to-many)\nQuerying data with Django's powerful model solution\nAdding administration panels to your projects\nHandling user input with forms - manually and with Django's built-in form support\nAdvanced features like class-based views (and when to use them)\nDealing with file uploads and how to serve uploaded files\nWorking with sessions\nIn-depth deployment instructions and examples\nDifferent ways of deploying and serving static files and user uploads\nAnd much more!\nAll those concepts are taught in great depth and backed up by a complete example course project where we build a \"Blog website\" from the ground up.\nTherefore, you'll learn all the important concepts and the theory and you're also going to be able to see it applied to a real project.\nHence, once you completed the course, you'll have a very solid understanding of Django and you'll be able to dive into your own Django projects!",
      "target_audience": [
        "Python developers who want to take the next step and dive into web development with Python",
        "JavaScript developers who want to explore Python for web development",
        "Everyone interested in learning how to build websites with Python"
      ]
    },
    {
      "title": "PHP for Beginners - Become a PHP Master - CMS Project",
      "url": "https://www.udemy.com/course/php-for-complete-beginners-includes-msql-object-oriented/",
      "bio": "PHP for Beginners: learn everything you need to become a professional PHP developer with practical exercises & projects.",
      "objectives": [
        "You will learn to create a (CMS) Content Management System like WordPress, Drupal or Joomla",
        "You will learn how to use Databases",
        "You will learn MySQL",
        "Object Oriented Programming",
        "You will learn how to launch your application online",
        "How to use forms to submit data to databases",
        "How to use AJAX to submit data to the server without refreshing the page",
        "You will learn about PHP security",
        "You will learn about sessions",
        "Password hashing",
        "Email sending",
        "You will learn to use composer (PHP package manager)",
        "You will learn to create clean URL's and remove the .php from files",
        "You will learn to use bootstrap by getting experience from the project",
        "You will learn to debug your code",
        "You will learn to create pagination",
        "You will code refactoring",
        "You will learn to debug (fix your code)",
        "You will learn to use an API to bring data from a database to a graphical interface",
        "There is so much more and my hands are just tired of typing :)"
      ],
      "course_content": {},
      "requirements": [
        "Some HTML is needed for this course (You can get my free HTML course on that)"
      ],
      "description": "Are you new to PHP or in need of a refresher? This course is designed to provide a comprehensive understanding of Procedural PHP, Object-Oriented PHP, and MySQLi, culminating in building a CMS system similar to WordPress, Joomla, or Drupal.\nLearning PHP has enabled me to create a successful career from home, developing courses like this one for students around the world. Becoming a PHP developer can open doors to lucrative opportunities both online and offline, allowing you to create dynamic applications.\nMastering PHP will empower you to build web applications, websites, and content management systems like WordPress, Facebook, Twitter, or even Google.\nThe possibilities are endless. PHP remains one of the most essential programming languages in web development. Acquiring this skill will give you a significant advantage in the web development world and job market.\nWhy?\nBecause millions of websites and applications (a majority) are built using PHP. Whether you're seeking employment or looking to work independently on platforms like Freelancer or Upwork, mastering PHP can significantly boost your earning potential.\nHere’s what some of my students are saying about this course and others:\n\"Holy cr\nI’ve read books about PHP, but they were so boring that I never finished one. This course changed everything for me. After watching a free tutorial on YouTube, I signed up, and I’m so glad I did. The instructor, Edwin Diaz, has an incredible teaching style—engaging, fun, and easy to follow. This course is so good, it’s even keeping me up at night! One word to describe this course: Epic! Looking forward to more content. Greetings from a Dutchy.\n\"Best PHP course\nThis course is just amazing. You start with the basics and then quickly progress to building your own CMS. Every line of code is clearly explained, so you always know what you’re doing. After completing this course, I felt ready to build my own social networking site. And let’s not forget about the instructor—he’s always there to help with any issues. This is, hands down, the best course I’ve ever taken.\n\"The Best PHP Course Made FUN and EASY - Worth the Money!!!\"\nHi Edwin, you’ve made learning PHP both fun and easy to follow. I’ve had so many project ideas but struggled for years to find the right course and instructor to help me achieve them. Now, thanks to you, I’m halfway through your course and still excited to keep learning. Your motivation and encouragement keep me going. I believe your course is the key to fulfilling my dreams. The best part? You’re always quick to respond to questions. Thank you!\n\"The best course I’ve taken so far\nEvery other programming course I’ve taken was boring, and I found it hard to stay focused. But this course was different—it was clear, engaging, and kept me interested from start to finish. I not only learned PHP, but I now understand concepts that previously seemed impossible. Thank you for creating such a great course.\nMy Promise to You\nI created this course not just to earn money but to truly teach you PHP because I was once in your shoes. If you need support, I’m just a message or email away. I love what I do, but more importantly, I love seeing my students succeed. Your success is my success, and I’ll be here to help whenever you need it.\nYou won’t be bored :)\nI take my courses seriously, but I also strive to make them fun. I know how hard it can be to learn from a monotone instructor, so I make sure to keep things lively and engaging. When you need motivation, I’ll be there to give it to you.\nMy Approach\nPractice, practice, and more practice. Every section of this course ends with a practical lecture to reinforce the concepts. I’ve even created a small application for you to download and practice with. To cap it all off, we’ll build an impressive CMS, similar to WordPress, Joomla, or Drupal.\nYour Investment Will Pay Off\nWith over 176 lectures and 20 hours of real-world PHP knowledge, you can be confident that your money is well spent.\n100% Money-Back Guarantee\nIf for any reason you don’t like the course or my teaching style, Udemy offers a 100% refund within 30 days. You have nothing to lose and a world of opportunities to gain.\nCommon Questions\nQ: Is learning PHP worth it?\nA: Absolutely YES! PHP is one of the top web programming languages used by major companies like Google, Apple, Facebook, Yahoo, and Wikipedia.\nQ: Can I make money with PHP?\nA: A LOT of it! Just check freelance platforms like Freelancer or Upwork, and you’ll see hundreds of PHP projects waiting to be completed. In fact, PHP is in higher demand than most other programming languages.\nThis PHP Course Covers:\nDatabases in PHP\nObject-Oriented PHP\nCMS Project (similar to WordPress)\nForm Submissions in PHP\nSecurity in PHP\nVariables in PHP\nMath in PHP\nArrays in PHP\nControl Structures in PHP\nComparison Operators in PHP\nMajor Loops in PHP\nFunctions in PHP\nConstants in PHP\nSuper Globals in PHP\nSessions in PHP\nCookies in PHP\nWorking with Files\nCustom Search Features\nAuthentication\njQuery + Bootstrap\nReal-time Notifications with JavaScript\nProtecting Credentials with .ENV\nUsing Composer (PHP Dependency Manager)\nSending Emails (from PHP or using third-party packages)\n...and much, much more.\nWith the incredible project we’ll build, you’ll acquire the skills needed to land that job or project. This is a real-world project, and I’ll walk you through every step from scratch.\nTake a look at the full curriculum to see everything covered!",
      "target_audience": [
        "This course is meant for TOTAL beginners in PHP",
        "No programming experience is needed at all"
      ]
    },
    {
      "title": "The Full Stack Web Development",
      "url": "https://www.udemy.com/course/the-full-stack-web-development/",
      "bio": "Learn Full Stack Web Development Building Over 40+ Projects",
      "objectives": [
        "Learn core concepts of both the front end and backend programming course",
        "Get familiar with the latest web developer technologies and ecosystems",
        "Learn all about sql and nosql databses",
        "Learn complete web development process"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Basic HTML Programming": [
          "Getting Started With HTML",
          "Basic Elements & Document Setup - Project Basic Elements",
          "Lists & Tables - Project List &Table",
          "Forms & Input - Project Registration Form",
          "Basic Styling - Project on Basic CSS",
          "Project - Building A Simple HTML Template"
        ],
        "HTML5 Programming": [
          "Getting Started With HTML5",
          "New Elements - Project on New Elements",
          "Video & Audio - Project Audio Visual",
          "Canvas - Project on Drawing with Canvas",
          "Svg - Project on Vector Graphics",
          "Web Storage - Project on Web Storage",
          "Drag & Drop - Project on HTML5 Drag and Drop",
          "Geolocation - Project on Geolocation",
          "Project MyNote - A HTML5 App"
        ],
        "Styling with CSS3": [
          "Getting Started With CSS",
          "CSS Basic Styling - Project on Basic Styling",
          "Positioning & Background Images - Project on Images",
          "Pseudo Classes - Project on Pseudo Classes",
          "Colors, Backgrounds & Gradients - Project on Color Backgrounds",
          "Text & Box Shadows - Project Text Shadows",
          "Transitions & Animation - Project on Animations",
          "Columns & Flexbox - Project in FlexBox",
          "CSS3 - Project using Dropdown Menu"
        ],
        "Twitter Bootstrap Programming": [
          "Getting Started With Bootstrap",
          "Setup, Templates & Navbar - Project using Navbar",
          "Typography, Forms & Tables - Project using Forms and Tables",
          "CSS Components - Project using Components - Part A",
          "CSS Components - Project using Components - Part B",
          "Grid System - Project using Grid System",
          "Modal, Dropdown, Tabs & Tooltip - Project on JavaScript Plugins(Part A)",
          "Collapse, Accordion and Carousel",
          "Project Custom Bootstrap Theme - Part A",
          "Project Custom Bootstrap Theme - Part B",
          "Project Custom Bootstrap Theme - Part C"
        ],
        "Basic JavaScript Concepts": [
          "Getting Started With JavaScript",
          "Variables, Arrays & Objects - Project using Arrays and Objects",
          "Loops, Conditionals & Switches - Project on Iterations",
          "Functions & Events - Project on Functions",
          "JavaScript Form Validation - Form Project",
          "Learning Ajax - Basic Ajax Project",
          "Project - Github AJAX"
        ],
        "jQuery Programming Techniques": [
          "Getting Started With jQuery",
          "Selectors & Mouse Events - Project on Selectors",
          "Form Events - Project Form Events",
          "DOM Manipulation - Project on DOM",
          "Effects & Animation - Project on Effect and Animation",
          "Traversing & Filtering - Project on Filtering",
          "Project - jQuery Image Slider"
        ],
        "Backend programming with Node.js": [
          "Getting Started With Node",
          "Installation and Simple Server - Project using Simple Node Server",
          "Express Setup and Routing",
          "Template Engines - Project using template Engine",
          "Node MongoDB Driver - Part 1",
          "Node MongoDB Driver - Part 2",
          "Setup, Middleware & Routes - Starting the Project",
          "Creating the UI",
          "Form Validation and User Register",
          "Password Encryption",
          "Login Functionality",
          "Access Control & Logout"
        ],
        "App Development with Meteor.js": [
          "Getting Started With Meteor",
          "Installation & Templates - Project on Quick Todo",
          "Find & Insert Into Collections",
          "Mark & Delete From Collection",
          "User Accounts",
          "Implementing Methods",
          "Publications & Subscriptions",
          "Bootstrap Package and UI"
        ],
        "App Development with Angular": [
          "Getting Started With Angular",
          "Part 1 - Angular 2 App From Scratch",
          "Part 2 - Angular 2 App From The Quickstart",
          "Components & Properties - Part 1 - Project Simple Profile",
          "Components & Properties - Part 2",
          "Events & Binding With ngModel - Projects on Event Binding",
          "Part 1 - Fetch Data From A Service - Project on Blog",
          "Part 2 - Submit Data To Service",
          "Http Module & Observables",
          "Routing - Project ngWebsite"
        ]
      },
      "requirements": [
        "Basic Knowledge of Programming will help but is not necessary as this course will start from basics"
      ],
      "description": "Eduonix introduces it’s biggest and best course yet! To cater to the changing role of developers and technologies around the world, we have introduced a brand new master course to become a Full Stack Web Developer.\nWith the fast paced nature of technology, developers can no longer become experts in aspects of development, but now must learn the entire process of development from design to actual deployment. This has introduced a new role for developers – Full Stack Developers.\nWhat are Full Stack Developers?\nFull Stack Developers are developers that design complete apps and websites. These developers work on all facets of development, from frontend, to backend, to database and even debugging and testing. In short, the developer must understand the app through and through. Frontend developers are more sought after because of their expertise of not in one but multiple technologies. They can handle all aspects of development, and it can result in a more seamlessly created product.\nHowever, resources to become a Full Stack Developer are limited and only offer sections or just random technologies that you must learn and combine on your own. So, we introduced this course that compiles all technologies in perfect sync to help developers transition from a simple developer to become a Full Stack Developer.\nStarting from frontend development, the learner will slowly progress to become to other aspects of development including backend, database, debugging, version control and other essential technologies that are helpful for a developer.\nOur Full Stack Course breaks down the fundamentals of each technology that you would require to become a Full Stack Developer. The entire course is broken down into five separate segments: Frontend, Backend, Database, Other Essential Technologies and Debugging/Version Control. Each section includes multiple technologies to help you gain more experience as a developer.\nThat’s not it! In addition to theory based learning, the course also focuses on practical applications by covering multiple projects in great detail, helping you learn with hands-on experience.\nLet’s look at the different technologies and frameworks that you will learn:\nFrontend – HTML, HMTL5, CSS3, Twitter Bootstrap, JavaScript, jQuery\nBackend – Node.js, Meteor.js, Angular 2, PHP, Ruby on Rails\nDatabase – MySQL, PostgreSQL, MongoDB, CouchDB, Apache Cassandra\nOther Essential Technologies – Memcached, Redis, Apache Lucene, Apache Solr\nDebugging/Version Control – GIT, Subversion, Task Runners (Grunt, Gulp), Debuggers (Xdebug, Firedebug)\nEach technology will include functional projects that you will create with the help of the instructor. Here are a few of the projects are included in this course:\nPHP Job Board\nAJAX Github Profile Finder\nRESTful JSON API\nSASS Template Page Cache/Memcached\nPHP MYSQL Messaging App\nHTML5 Note App Using LocalStorage\nThese are just a few of the 40 different projects that are packed in this brilliant course. So, what are you waiting for? Let’s master Full Stack with this course.",
      "target_audience": [
        "Student who want to become the Full Stack Web Developers will find this course very beneficial",
        "Front end Developers who want to learn backend programming",
        "Backend developers who want to learn front end programming concepts"
      ]
    },
    {
      "title": "Vibe Coding: AI-Driven Software Development and Testing",
      "url": "https://www.udemy.com/course/ai-vibe-coding/",
      "bio": "Leverage tools such as Cursor, Windsurf, GitHub Copilot or Lovable to build applications using plain English",
      "objectives": [
        "Build applications from scratch using AI agents",
        "Turn an app idea into a working prototype",
        "AI-guided debugging & code refinement",
        "Version control & maintainable project structuring",
        "Write tests to check that the app does what it’s supposed to"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Vibe Coding",
          "AI-powered coding tools",
          "Installing software (Cursor, Node.js, Git)",
          "Hands-on example of vibe coding (with Cursor)",
          "Understanding that LLMs are non-deterministic",
          "Model selection",
          "Auto-run mode (letting the agent run commands)",
          "Traditional vs Vibe coding workflow",
          "Choosing a tech stack"
        ],
        "Vibe coding fundamentals (with Cursor)": [
          "Project overview",
          "Writing a software specification",
          "Creating a TODO list",
          "Building the first feature",
          "Configuring Version Control (Git)",
          "Iterating with new features",
          "Adding automated tests",
          "Rolling back to a working version",
          "Rules for controlling the AI behavior",
          "Code refactoring",
          "Providing context by referencing resources",
          "Model Context Protocol (MCP)",
          "GitHub integration",
          "Adding the GitHub MCP server",
          "Taking actions using GitHub MCP",
          "Deployment",
          "Restarting a chat session",
          "Cursor pricing"
        ],
        "Building applications with Lovable (No code / low-code)": [
          "Project overview - Building apps with Lovable",
          "First Lovable project",
          "Creating the Product Requirements Document (PRD)",
          "Adding Instructions & Guidelines",
          "Supabase integration",
          "Storing data in the database",
          "Troubleshooting errors",
          "Adding functionality & refactoring code",
          "GitHub integration",
          "Deploying the application",
          "Resolving Supabase security issues",
          "Domains & External hosting options",
          "Additional integrations",
          "Conclusion"
        ],
        "Working on existing code bases (with Windsurf)": [
          "Installing and configuring Windsurf",
          "First project with Windsurf",
          "Analyzing an existing code base",
          "Implementing features",
          "Windsurf Previews",
          "Windsurf settings",
          "Windsurf rules",
          "Cascade plugins (MCP integration)",
          "GitHub integration",
          "Windsurf workflows",
          "Deploying the application (Deploys feature)",
          "Pricing",
          "Conclusion"
        ],
        "Conclusion": [
          "Bonus"
        ]
      },
      "requirements": [
        "A computer running Windows, macOS, or Linux and the ability to install software",
        "Sign-up for free trails / free accounts to use the software downloaded",
        "Node.js LTS & Git",
        "No prior coding experience required—just curiosity and willingness to learn!"
      ],
      "description": "In this hands-on course, you’ll discover how to shift from traditional line-by-line programming to a “vibe coding” approach, where natural-language prompts drive AI agents to write, test, and deploy your applications. Inspired by Andrej Karpathy’s vision, vibe coding lets you focus on guiding and refining AI output, rather than wrestling with every detail of syntax. You’ll watch AI tools like Cursor and Windsurf create files, install dependencies, and execute commands—all from simple English instructions.\n\n\nWhat this course covers\nIntroduction to the “vibe coding” mindset and its origins\nOverview of leading AI-powered coding tools (Cursor, Windsurf, Lovable, GitHub Copilot)\nHands-on projects\nBest practices for vibe coding\nCore software development practices adapted for AI workflows\n\n\nWho this course is for\nComplete beginners curious about building apps without writing every line of code\nDevelopers eager to speed up prototyping and learn to guide AI output\nAnyone who wants to understand how AI changes the software development life cycle\nKey skills you’ll gain\nNatural-language prompting: describe app ideas in plain English and turn them into working code\nAI-guided debugging: identify, troubleshoot, and refine AI-generated code\nProject organization: structure files and folders for clarity and maintainability\nVersion control with Git: track changes, manage branches, and roll back safely\nAutomated testing: write simple tests to verify functionality\nDeployment automation: configure one-command or CI/CD pipelines to launch your app",
      "target_audience": [
        "Beginner and experienced software developers",
        "Test engineers / Quality Assurance",
        "DevOps engineers",
        "Designers / UI / UX",
        "Entrepreneurs"
      ]
    },
    {
      "title": "Materialize CSS From Scratch With 5 Projects",
      "url": "https://www.udemy.com/course/materialize-css-from-scratch-with-5-projects/",
      "bio": "Master HTML 5 & the Materialize CSS framework by building 5 real world responsive material design based themes",
      "objectives": [
        "Learn to correctly structure HTML 5 documents with semantic tags and attributes",
        "Learn and create amazing high quality Materialize themes and UIs from scratch",
        "Learn the Materialize utilities, classes, components & JS widgets using a custom sandbox environment",
        "Learn some custom JavaScript/JQuery to make your themes more interactive"
      ],
      "course_content": {
        "Intro & Getting Started": [
          "Welcome To The Course",
          "What Is Materialize & Why Use It?",
          "Environment Setup",
          "Materialize Sandbox Setup"
        ],
        "CSS Components - Part 1": [
          "Typography & Alignment",
          "Text & Background Colors",
          "Buttons & Icons",
          "Floating & Fixed Action Buttons",
          "Navbar",
          "Collections & Badges",
          "The Grid System"
        ],
        "CSS Components - Part 2": [
          "Cards",
          "Breadcrumb & Footer",
          "Basic Form & Input Controls",
          "Fancy Form & Input Controls",
          "Tables & Media",
          "Chips & Pagination",
          "Preloaders"
        ],
        "Interactive Components - Part 1": [
          "Carousel",
          "Collapsible",
          "Feature Discovery",
          "Dialogs (Toasts & Tooltips)",
          "Material Box & Slider",
          "Modals"
        ],
        "Interactive Components - Part 2": [
          "Parallax",
          "Side Navigation",
          "PushPin",
          "ScrollSpy Nav Scrolling",
          "Tabs"
        ],
        "Project 1 - Travelville": [
          "Project Intro",
          "Navbar & Sidenav",
          "Image Slider",
          "Search & Icon Boxes",
          "Popular Places & Gallery",
          "Contact Section & ScrollSpy"
        ],
        "Project 2 - Quazzu": [
          "Project Intro",
          "Navbar & Showcase",
          "Boxes, About & Overlay",
          "Podcast Section & Testimonials Carousel",
          "Footer & Login Modal",
          "Solutions Page",
          "Signup Page"
        ],
        "Project 3 - Madmin": [
          "Project Intro",
          "Navbar & Sidenav",
          "Stat Counters & Preloader",
          "Display Chart & Recent Comments",
          "Recent Posts & Todo List",
          "Floating Button & Modals",
          "Posts & Categories Pages",
          "Comments & Users Pages",
          "Login & Details Pages"
        ],
        "Project 4 - BizLand": [
          "Project Intro",
          "Full Screen Header",
          "ScrollFire & Boxes",
          "About, Testimonials & ScrollSpy",
          "Contact & Google Map"
        ],
        "Project 5 - Galappear (With Sass)": [
          "Project Intro",
          "Koala Setup & Sass",
          "Header & Navbar",
          "Changing & Using Variables",
          "Gallery Layout",
          "Modals & ScrollFire",
          "Inner Pages"
        ]
      },
      "requirements": [
        "Basic HTML & CSS"
      ],
      "description": "This course is for anyone that knows basic HTML and a little CSS that wants to take their frontend website and UI creation to the next level using the Materialize CSS framework which is based off of Google's Material Design scheme. You will learn all of the CSS and JavaScript components, animations/transitions and build 5 beautiful and completely responsive, real world themes from absolute scratch.\nCustom Materialize Sandbox\nI have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an html page associated with it and has a start state. As we move along through the lectures, you code along with me learning all that Materialize offers including CSS components, utilities, JS widgets and more.\n5 Real Projects/Themes\nWe will create the following projects from scratch..\nTravelville -  A travel agency website/theme  (Carousel slider, autocomplete, scrolling navigation)\nQuazzu - Cloud hosting theme (SideNav, cards, CSS overlays)\nMadmin - Interactive admin theme (Working todo list, charts, preloader, counter script)\nBizLand - Business consultation theme with a full screen landing page (Scrollfire, Google maps integration)\nGalappear - Graphic design portfolio (Uses Sass and scrollfire for scroll animations)",
      "target_audience": [
        "Anyone that wants to learn & master Materialize CSS and build real world themes"
      ]
    },
    {
      "title": "HTML, JavaScript, & Bootstrap - Certification Course",
      "url": "https://www.udemy.com/course/html-javascript-bootstrap-certification-course/",
      "bio": "A Comprehensive Guide for Beginners interested in learning HTML, JavaScript, & Bootstrap. Build Interactive Web Pages.",
      "objectives": [
        "Master HTML and code customized, stylish web pages",
        "Add interactivity to Static HTML elements using JavaScript",
        "Learn to build mobile responsive web pages, using the Bootstrap Framework",
        "Create modern, stylish websites using the latest scripting languages",
        "Learn to work with variables, conditional statements, arrays, and loops in JavaScript",
        "Master the Bootstrap Grid system, so your Web Pages fit all devices, and screen sizes.",
        "Learn to build stylish forms in Bootstrap with complete JavaScript enabled validation",
        "Learn to create stylish navigation bars and menus using Bootstrap theme elements",
        "+ Much More..."
      ],
      "course_content": {
        "HTML Development": [
          "Introduction to HTML",
          "Basic Structure of a Web Page",
          "HTML Head Tags",
          "HTML Body Tag",
          "HTML Paragraph Spacing",
          "HTML Line Breaks",
          "HTML Non-Breaking Space",
          "HTML Header Tags",
          "HTML Text Formatting and Decoration",
          "HTML Inline Text Formatting",
          "HTML Unordered Lists",
          "HTML Ordered Lists",
          "HTML Image Insertion",
          "HTML Embedding Videos",
          "HTML Absolute vs. Relative File Referencing",
          "HTML Link Creation",
          "HTML Anchor Tags",
          "HTML Tables",
          "HTML Nested Tables",
          "HTML Merging Cells",
          "HTML Text Wrapping",
          "HTML Table Background Image",
          "HTML Cell Alignment",
          "HTML - Introduction to Forms",
          "HTML Form Tags and Attributes",
          "HTML Forms - Post vs Get",
          "HTML Forms - Input Text Fields",
          "HTML Forms - Select Menus",
          "HTML Forms - Check Boxes and Radio Buttons",
          "HTML Forms - Text Areas and Buttons",
          "HTML Iframes",
          "HTML Project - Introduction",
          "HTML Project - Header",
          "HTML Project - Callout",
          "HTML Project - Image Insertion",
          "HTML Project - Text Insertion",
          "HTML Project - Links and Form",
          "HTML Project - Tabular Data",
          "HTML Project - Footer"
        ],
        "JavaScript Development": [
          "DOM Introduction",
          "DOM Manipulation",
          "JavaScript - Introduction",
          "JavaScript Placement",
          "External JavaScript",
          "JavaScript Output",
          "JavaScript InnerHTML",
          "JavaScript Commenting",
          "JavaScript Constants",
          "JavaScript Variables Introduction",
          "JavaScript Assignment Operator",
          "JavaScript Arithmetic Operations",
          "JavaScript Arithmetic Operations Continued",
          "JavaScript Operator Precedence",
          "JavaScript Data Types",
          "JavaScript Objects",
          "JavaScript Object Output",
          "JavaScript Strings",
          "JavaScript String Length",
          "JavaScript String Length",
          "JavaScript Random Numbers",
          "JavaScript Min and Max Function",
          "JavaScript Math Round Function",
          "JavaScript Arrays",
          "JavaScript Array Attributes",
          "JavaScript Arrays - Pop - Push - Shift - Unshift",
          "JavaScript Changing and Deleting Elements",
          "JavaScript Splicing an Array",
          "JavaScript Sorting an Array",
          "JavaScript Joining Arrays",
          "JavaScript Conditional Statements",
          "JavaScript Comparisons",
          "JavaScript Booleans",
          "JavaScript For Loops",
          "JavaScript For-In Loop",
          "JavaScript While Loops",
          "JavaScript Do-While Loop",
          "JavaScript Break and Continue",
          "JavaScript Functions",
          "JavaScript Events",
          "JavaScript Project 1 - BG Color Changer"
        ],
        "Bootstrap Development": [
          "Introduction to Bootstrap",
          "Embedding Bootstrap",
          "Bootstrap Basic Page Structure",
          "Bootstrap Grid System",
          "Bootstrap Three Column Layouts",
          "Bootstrap Typography",
          "Bootstrap Tables",
          "Bootstrap Styling Images",
          "Bootstrap Jumbotron",
          "Bootstrap Wells",
          "Bootstrap Alerts",
          "Bootstrap Buttons",
          "Bootstrap Button Groups",
          "Bootstrap Justified Button Groups",
          "Bootstrap Glyphicons",
          "Bootstrap Badges and Labels",
          "Bootstrap Progress Bars",
          "Bootstrap Pagination",
          "Bootstrap Pager Pagination",
          "Bootstrap List Groups",
          "Bootstrap Panels",
          "Bootstrap Dropdown Menus",
          "Bootstrap Collapsibles",
          "Bootstrap Collapse Panel",
          "Bootstrap Collapse List Group",
          "Bootstrap Accordian",
          "Bootstrap Tab Menus",
          "Bootstrap Pill Menus",
          "Bootstrap Dynamic Tabs and Pills",
          "Bootstrap Navigation Bar",
          "Bootstrap Collapsible Navigation Bar",
          "Bootstrap Forms - Vertical and Inline",
          "Bootstrap Inputs",
          "Bootstrap Form Control States",
          "Bootstrap Input Sizing",
          "Bootstrap Carousel",
          "Bootstrap Modal",
          "Bootstrap Tooltip",
          "Bootstrap Popover",
          "Bootstrap Scrollspy",
          "Bootstrap Project - Themes Intro",
          "Bootstrap Project - File Overview",
          "Bootstrap Project - Script Overview",
          "Bootstrap Project - Script Overview Cont."
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to the HTML, JavaScript, & Bootstrap – Certification Course for Beginners\n\nThis course gives students the knowledge necessary to take their front-end development skills to the next level. This course, is meant for beginners who have little, to no experience with coding. We start right from the foundational concepts and work our way up to intermediate level topics. By the end of this course, students will be able to create stunning, mobile responsive web pages using the latest scripting languages.\n\nHTML Section:\n\nHTML is a key fundamental building block when learning to develop websites. Students will initially learn the basics of HTML page structure and gradually transition into working with spacing, text formatting, lists, images, videos, links, anchors, tables, forms and much more. We also include several projects, where students are shown first-hand, how to develop and code html web pages from scratch.\n\nJavaScript Section:\n\nIn Section two, students learn to integrate JavaScript components into their web pages for dynamic client-side functionality. We start by exploring basic concepts such as JavaScript placement and Output. From there we move into Variables, Arithmetic Operators, Objects, and Data Types. Students also explore intermediate concepts such as math functions, arrays, conditional statements, loops, events, and functions.\nBootstrap Section:\n\nStudents are taught to use the Bootstrap framework for responsive, mobile-first - front-end development. As one of the leading open-source development libraries, Bootstrap is an essential part of the developers coding arsenal. The section begins with teaching students how to include essential Bootstrap files into web pages. It then explores the Bootstrap Grid system and popular layout strategies for optimal cross-device and cross-browser compatibility.\n\nStudents gain exposure to just about every Bootstrap component, from typography, tables and images, to jumbotrons, wells, alerts, buttons, glyphicons and progress bars. The section includes several hands-on exercises that will walk students through the process of creating stunning layouts, complete with modals, carousels, popovers, drop-down menus, forms and much more.",
      "target_audience": [
        "Students who want to learn the foundations of HTML, JavaScript, & Bootstrap Development",
        "Students interested in building mobile-response web pages",
        "Beginner Web Developers interested in upgrading their skills",
        "Students interested in learning how to add dynamic client-side functions using JavaScript"
      ]
    },
    {
      "title": "Vue - The Complete Guide (incl. Router & Composition API)",
      "url": "https://www.udemy.com/course/vuejs-2-the-complete-guide/",
      "bio": "Vue.js is an awesome JavaScript Framework for building Frontend Applications! VueJS mixes the Best of Angular + React!",
      "objectives": [
        "Build amazing Vue.js Applications - all the Way from Small and Simple Ones up to Large Enterprise-level Ones",
        "Understand the Theory behind Vue.js and use it in Real Projects",
        "Leverage Vue.js in both Multi- and Single-Page-Applications (MPAs and SPAs)",
        "Learn the latest version of Vue (Vue 3), including the brand-new Composition API"
      ],
      "course_content": {},
      "requirements": [
        "Basic JavaScript Knowledge is Required",
        "ES6 Knowledge is a Plus but not a Must",
        "Basic HTML and CSS Knowledge is assumed throughout the Course"
      ],
      "description": "Join this bestselling Vue course to learn how to use the latest version of VueJS to build amazing, modern web apps!\nNo matter at which metric you look at (Google Trends, Github Stars, Tweets ...) - VueJS is the shooting star in the world of JavaScript frameworks - it simply is amazing!\nThis bestselling Udemy course teaches the latest version of Vue (Vue.js 3) from the ground up and in great detail. We'll cover all the core basics but we'll not stop thereafter - this course also dives into advanced concepts like the Composition API introduced with Vue 3.\nFrontend frameworks like Vue JS are extremely popular because they give us this reactive, great user experience we know from mobile apps - but now in the browser! No wonder that jobs requiring frontend framework skills like VueJS are amongst the best paid ones in the industry!\nYou may know Angular 2+ and ReactJS, well, VueJS combines the best of both frameworks and makes building anything from small widgets to big, enterprise-level apps a breeze and a whole lot of fun!\nAnd if you don't know the two mentioned frameworks: That's fine, too, this course does not expect any knowledge of any other frontend framework - you will learn it all throughout this Course!\nThis course covers it all!\nWe'll start at the very basics, what Vue.js is and how it works before we move on to more complex and advanced topics but I'll be honest: It's too much to fit it all into one sentence, so here's what you'll learn in this Course:\nWhat is VueJS and Why would you use it?\nThe Basics (including the basic Syntax, Understanding Templates and much more!)\nHow to Output Reactive Data & Listen to Events\nInteracting with DOM (Rendering Lists, Conditionally attaching/ detaching Elements ...)\nSetting up a Development Environment and Workflow\nUsing Components (and what Components are to begin with)\nA Deep Dive Look Behind the Scenes of Vue\nBinding to Form Inputs\nSending Http Requests to Backend APIs\nAuthentication & Vue\nHow to make your App more Beautiful with Animations and Transitions\nHow to create an awesome Single-Page-Application (SPA) with Routing\nHow to improve State Management by using Vuex\nHow to Deploy the App\nAnd much more!\nAll these topics are taught with real examples and demo projects. This course is full of exercises, challenges and bigger courser projects that allow you to practice what you learned.\nAlong with many other smaller projects, we will build a couple of bigger main projects:\nThe \"Monster Slayer\" Game - a game running in the browser, 100% powered by Vue\nThe \"Learning Resource Manager\" - a web app that allows you to manage (add, delete, list) your favorite learning resources\nThe \"Find a Coach\" app - a web app that allows you to sign up / login, register as a coach, list and filter available coaches and send messages to coaches\nIs this course for you?\nNow that you know what this course is about, let's see if this course is for you!\nHere are three types of students who will love this course:\nStudent #1:\nHas some JavaScript experience and is interested in what this language can do. You heard and read that JavaScript allows you to create nice web applications and enhance existing web pages. VueJS is your choice!\nStudent #2:\nYou already have some experience with other frontend frameworks like Angular (2+) or ReactJS. But either due to interest or disappointment of the existing frameworks, you seek some alternatives - VueJS might be what you were looking for!\nStudent #3:\nHas experience with backend frameworks/ languages but now also wants to enter the frontend world. VueJS is an awesome choice here, it's fun, it uses native JS and it's extremely powerful!\nBonus: Student #4\nIs disappointed by Angular 2+. Does a good framework need 2 hours of setup? No, certainly not - as VueJS will prove to this student!\nLet's dive into VueJS right now!",
      "target_audience": [
        "This Course is for Everyone interested in Frontend Development and Major JavaScript Frameworks",
        "This Course is for you if you want to create Reactive Applications, which run in the Browser",
        "This Course also targets Students who prefer a native JavaScript Framework which makes Getting Started much simpler than Angular 2",
        "Displeased with Angular 2? VueJS is for you!"
      ]
    },
    {
      "title": "Understanding APIs and RESTful APIs Crash Course",
      "url": "https://www.udemy.com/course/learn-and-understand-apis-and-restful-apis/",
      "bio": "An introduction to how APIs and RESTful APIs work. No coding in this course, it's all conceptual.",
      "objectives": [
        "What APIs are",
        "How APIs work",
        "What a RESTful API is",
        "What JSON is",
        "How computers talk to each other",
        "CRUD Operations",
        "The 5 main request methods (GET, POST, PUT/PATCH, DELETE)",
        "HTTP status codes",
        "How to understand APIs as if they were real people",
        "HTTP Requests and Responses"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is an API?",
          "Google Slides"
        ],
        "Understanding APIs and RESTful APIs": [
          "The simplest way to think about an API (the metaphor)",
          "A real life use case",
          "What programming languages can we use?",
          "Introduction to RESTful APIs",
          "Introduction to JSON",
          "Using SWAPI Notes",
          "A real JavaScript API example",
          "GET requests",
          "POST requests",
          "DELETE requests",
          "PUT/PATCH requests",
          "Consuming APIs (how to use them)",
          "Requests and responses",
          "Common status codes",
          "API security"
        ],
        "Summary": [
          "Summary",
          "Resources",
          "REST API Cheat Sheet",
          "Questions, Feedback, and Support"
        ]
      },
      "requirements": [
        "You should probably be an intermediate developer by now OR be a junior developer who's trying to level up their skills",
        "OR You should be interested in learning more about communication between computers (you don't need to be a coder if you fit into this category)"
      ],
      "description": "In this course you will learn about APIs and RESTful APIs, and how they work. There is no coding in this course.\nBy the end of this course you will completely understand how APIs work, and how computers talk to each other. You'll also be familiar with RESTful APIs which make use of the HTTP protocol. If that sounded confusing, scary, or overly technical — it's not — it's just a fancy way of saying \"it uses the internet\".\nThe goal of this course is to help you understand APIs and RESTful APIs without needing to write any code. So next time someone says \"API\" you will know exactly what they are talking about (and you'll also know it's not really that technical or fancy, but that'll be our secret ;)\n———\nThis course is designed to remove the sense of overwhelm and \"scariness\" when we start to talk about APIs. APIs and RESTful APIs come across as difficult or advanced subjects, but really it's just two computers talking to each other and exchanging commands and data. No different than when your friend sends you a text message, and you text back.\nI'll give you several easy to remember metaphors so APIs don't feel scary or overwhelming, too.\nAPIs can be written and used by most programming languages, so we're not writing any code, although I do provide a live JavaScript demo.\nAll the slides will be provided for you, as well as reference material for when you've graduated this course and you're ready to take on the world of APIs.\n———\nThis course is only 45 minutes, but I promise you that's all the time you'll need — not because I'm a good teacher, but because APIs are seriously that simple once someone takes the time to explain them.",
      "target_audience": [
        "Intermediate Web Developers OR Eager Junior Web Developers",
        "Non-coders who want to learn about inter-computer communications",
        "This course is NOT for junior developers who are brand new to coding (not yet, anyway!)",
        "This course is NOT for senior developers who already have knowledge about APIs and how they work"
      ]
    },
    {
      "title": "REST APIs with Flask and Python in 2025",
      "url": "https://www.udemy.com/course/rest-api-flask-and-python/",
      "bio": "Build professional REST APIs with Python, Flask, Docker, Flask-Smorest, and Flask-SQLAlchemy",
      "objectives": [
        "Connect web or mobile applications to databases and servers via REST APIs",
        "Create secure and reliable REST APIs which include authentication, deployments, and database migrations",
        "Understand the different layers of a web server and how web applications interact with each other",
        "Handle seamless user authentication with advanced features like token refresh",
        "Handle log-outs and prevent abuse in your REST APIs with JWT blacklisting",
        "Develop professional-grade REST APIs with expert instruction",
        "Optimize performance of your REST APIs using task queues and background workers"
      ],
      "course_content": {
        "Welcome!": [
          "How to take this course",
          "Python on Windows",
          "Python on Mac"
        ],
        "A Full Python Refresher": [
          "Introduction to this section",
          "Access the code for this section here",
          "Variables in Python",
          "Variables in Python",
          "Variables (Python 3.10)",
          "Solution to coding exercise: Variables",
          "String formatting in Python",
          "Getting user input",
          "String formatting and getting user input",
          "Writing our first Python app",
          "Lists, tuples, and sets",
          "Advanced set operations",
          "Lists, tuples and sets",
          "Lists, tuples, and set (Python 3.10)",
          "Solution to coding exercise: Lists, tuples, sets",
          "Booleans in Python",
          "If statements",
          "Booleans and 'if' statements",
          "The 'in' keyword in Python",
          "If statements with the 'in' keyword",
          "The 'in' keyword and 'if' statements",
          "Loops in Python",
          "Loops in Python",
          "Flow control—loops and ifs (Python 3.10)",
          "Solution to coding exercise: Flow control",
          "List comprehensions in Python",
          "List comprehensions",
          "Dictionaries",
          "Dictionaries",
          "Destructuring variables",
          "Destructuring variables",
          "Functions in Python",
          "Functions in Python",
          "Function arguments and parameters",
          "Function arguments and parameters",
          "Default parameter values",
          "Functions returning values",
          "Default parameters and function returning values",
          "Functions (Python 3.10)",
          "Solution to coding exercise: Functions",
          "Lambda functions in Python",
          "Dictionary comprehensions",
          "Lambda functions and dictionary comprehensions",
          "Dictionaries and students (Python 3.10)",
          "Solution to coding exercise: Dictionaries",
          "Unpacking arguments",
          "Unpacking keyword arguments",
          "Object-Oriented Programming in Python",
          "Magic methods: __str__ and __repr__",
          "Classes and objects (Python 3.10)",
          "Solution to coding exercise: Classes and objects",
          "@classmethod and @staticmethod",
          "@classmethod and @staticmethod (Python 3.10)",
          "Solution to coding exercise: @classmethod and @staticmethod",
          "Class inheritance",
          "Class composition",
          "Type hinting in Python 3.5+",
          "Imports in Python",
          "Relative imports in Python",
          "Errors in Python",
          "Custom error classes",
          "First-class functions",
          "Simple decorators in Python",
          "The 'at' syntax for decorators",
          "Decorating functions with parameters",
          "Decorators with parameters",
          "Mutability in Python",
          "Mutable default parameters (and why they're a bad idea)"
        ],
        "Your first REST API": [
          "Access the course e-book here",
          "Overview of the project we'll build",
          "Initial set-up for a Flask app",
          "Your first REST API endpoint",
          "What is JSON?",
          "How to interact with and test your REST API",
          "How to create stores in our REST API",
          "How to create items in each store",
          "How to get a specific store and its items"
        ],
        "Introduction to Docker": [
          "What are Docker containers and images?",
          "How to run a Flask app in a Docker container",
          "In-depth Docker tutorial notes",
          "How to run the Flask REST API with Docker Compose",
          "How to debug Flask applications running on Docker with VSCode"
        ],
        "Flask-Smorest for more efficient development": [
          "Data model improvements for our API",
          "General improvements to our first REST API",
          "New endpoints for our first REST API",
          "How to run the API in Docker with automatic reloading and debug mode",
          "How to use Blueprints and MethodViews in Flask",
          "How to write marshmallow schemas for our API",
          "How to perform data validation with marshmallow",
          "Decorating responses with Flask-Smorest"
        ],
        "Store data in a SQL database with SQLAlchemy": [
          "Overview and why use SQLAlchemy",
          "How to code a simple SQLAlchemy model",
          "How to write one-to-many relationships using SQLAlchemy",
          "How to configure Flask-SQLAlchemy with your Flask app",
          "How to insert data into a table using SQLAlchemy",
          "How to find models in the database by ID or return a 404",
          "How to update models with SQLAlchemy",
          "How to retrieve list of all models",
          "How to delete models with SQLAlchemy",
          "Deleting related models with cascades",
          "Conclusion of this section"
        ],
        "Many-to-many relationships with SQLAlchemy": [
          "Changes in this section",
          "One-to-many relationship between stores and tags",
          "Many-to-many relationship between items and tags"
        ],
        "User authentication with Flask-JWT-Extended": [
          "Changes in this section",
          "What is a JWT?",
          "Who uses the JWT?",
          "How to set up Flask-JWT-Extended with our app",
          "Coding the User model and schema",
          "How to add a register endpoint to the REST API",
          "How to add a login endpoint to the REST API",
          "Protect endpoints by requiring a JWT",
          "JWT claims and authorization",
          "How to add logout to the REST API",
          "Request chaining with Insomnia",
          "Token refreshing with Flask-JWT-Extended"
        ],
        "Database migrations with Alembic and Flask-Migrate": [
          "Why use database migrations at all?",
          "How to add Flask-Migrate to our Flask app",
          "Initialize your database with Flask-Migrate",
          "Change SQLAlchemy models and generate a migration",
          "Manually review and modify database migrations"
        ],
        "Git Crash Course": [
          "What are Git repositories and commits?",
          "Initialize a Git repository for our project",
          "Caution: line endings in Windows and Unix",
          "Writing Markdown for documents and commits",
          "Remote repositories and how to use them",
          "Git branches and merging",
          "Merge conflicts and how to resolve them",
          "Overview of the final e-book chapters"
        ]
      },
      "requirements": [
        "Some prior programming experience in any programming language will help. The course includes a full Python refresher course.",
        "All software used in the course is provided, and completely free",
        "Complete beginners may wish to take a beginner Python course first, and then transition to this course afterwards"
      ],
      "description": "Are you tired of boring, outdated, incomplete, or incorrect tutorials? I say no more to copy-pasting code that you don’t understand.\nWelcome to the bestselling REST API course on Udemy! I'm Jose. I'm a software engineer, here to help you truly understand and develop your skills in web and REST API development with Python, Flask, and Docker.\n\nProduction-ready REST APIs with Flask\nThis course will guide you in creating simple, intermediate, and advanced REST APIs including authentication, deployments, databases, and much more.\nWe'll start with a Python refresher that will take you from the very basics to some of the most advanced features of Python—that's all the Python you need to complete the course.\nUsing Flask and popular extensions Flask-Smorest, Flask-JWT-Extended, and Flask-SQLAlchemy we will dive right into developing complete, solid, production-ready REST APIs.\nWe will also look into essential technologies like Git and database migrations with Alembic.\n\n\nYou'll be able to...\nCreate resource-based, production-ready REST APIs using Python, Flask, and popular Flask extensions;\nHandle secure user registration and authentication with Flask.\nUsing SQLAlchemy and Flask-SQLAlchemy to easily and efficiently store resources to a database; and\nUnderstand the complex intricacies of deployments of Flask REST APIs.\nUse Docker to simplify running and deploying your REST APIs.\n\n\nBut what is a REST API anyway?\nA REST API is an application that accepts data from clients and returns data back. For example, a REST API could accept text data from the client, such as a username and password, and return whether that is a valid user in the database.\nWhen developing REST APIs, our clients are usually web apps or mobile apps. That's in contrast to when we make websites, where the clients are usually the users themselves.\nTogether we'll develop a REST API that not only allows clients to authenticate but also to store and retrieve any data you want from a database. Learning this will help you develop any REST API that you need for your own projects!\n\n\nI pride myself on providing excellent support and feedback to every single student. I am always available to guide you and answer your questions.\nI'll see you on the inside. Take your first step towards REST API mastery!",
      "target_audience": [
        "Students wanting to extend the capabilities of mobile and web applications by using server-side technologies",
        "Software developers looking to expand their skill-set by learning to develop professional grade REST APIs",
        "Those looking to learn Python while specifically catering to web services"
      ]
    },
    {
      "title": "Complete React JS web developer with ES6 - Build 10 projects",
      "url": "https://www.udemy.com/course/complete-react-js-course/",
      "bio": "Master react JS, ES6, firebase, Auth0. Along with reactjs basics, create 10 projects",
      "objectives": [
        "Create web apps in react js",
        "Learn about components, props, states and component life cycle methods",
        "Create web apps that use firebase as login and database",
        "Create web apps with Google login feature",
        "Create web Apps with Auth0 login systems",
        "Create web apps that use web API like reddit and github",
        "Build 10 unique projects to build a solid profile in react js",
        "Learn modern Javascript AKA ES6"
      ],
      "course_content": {
        "Reactjs Introduction": [
          "Introduction to the course",
          "Mindset to learn reactjs",
          "Our first virtual Hello World in reactjs",
          "Setting Reactjs in local environment"
        ],
        "Getting the basics of Reactjs right": [
          "What we will do in section 2 - Intro",
          "Github repo for React course is here",
          "Get all course codes and exercise files here",
          "Understanding reactjs App",
          "Creating our first react component",
          "Importing components from other files",
          "Calling functions in components",
          "Virtual DOM in reactjs"
        ],
        "Props, state and component life cycle in reactjs": [
          "What we will do in section 3 - Intro",
          "Props in reactjs",
          "props types in react js",
          "States in react js",
          "Components life cycle part 1",
          "Components life cycle part 2",
          "Project 1 - Create react app manually and understanding it"
        ],
        "3 Projects and routers in react JS": [
          "What we will do in section 4 - Intro",
          "First Blog App - setting structure",
          "First blog App - breaking down components",
          "Timer App part 1 in react js",
          "Timer App part 2 in reactjs",
          "Course sales app - part 1 - setup",
          "Course sales App - part 2 - getting courses",
          "Course sales App - part 3 - logic for selecting courses",
          "UPDATE - React router 4.x.x walk through",
          "React router baiscs",
          "Creating first route and link",
          "Route inside a route"
        ],
        "3 projects - Firebase with React js": [
          "What we will do in section 5 - Intro",
          "Usurvey App -setting up firebase",
          "Setting input form to ask name",
          "setting if else condition",
          "displaying questions for students",
          "handling questions with state",
          "saving everything to firebase and finish it",
          "Firebase Login App - Setting app structure",
          "Firebase Login App - Setting up login calls",
          "Firebase Login App - Setting up signup calls",
          "Firebase Login App - logout the user",
          "Google Sign In - setting up button",
          "Google Sign In - sign in with popup"
        ],
        "3 projects with Auth0, Reddit API and github API": [
          "What we will do in section 6- Intro",
          "API basics - setting up project",
          "API basics - getting subredit from JSON",
          "Github searcher - setting headers",
          "Github Searcher - showing login and signup popups",
          "setting user token and profile",
          "passing components to header for logout",
          "logout applied and clearing local storage",
          "fetching Github API with Fetch",
          "Handling search from github",
          "showing profiles of users",
          "Setting Environment for ES6"
        ],
        "OPTIONAL - ES6 Bootcamp": [
          "Let and const keyword with caution",
          "arrow functions in ES6",
          "THIS keyword is now fixed",
          "Code Hoisting and default parameters",
          "Dynamic Object creation",
          "For of loop - Best of all",
          "Super dots in ES6",
          "Setup and import exports"
        ],
        "OPTIONAL - ES6 Bootcamp Beyond basics": [
          "exporting functions",
          "importing everything from files",
          "MAPS - complete guide",
          "SET in ES6 - marvel universe",
          "Static function and getters and setters in ES6",
          "Symbols in ES6",
          "Classes in ES6",
          "Introduction to promises in ES6",
          "Web request using promises"
        ],
        "See you next time - Farewell": [
          "Farewell"
        ],
        "After launch updates": [
          "Project 11 - Complete youtube video fetching app",
          "Redux Fundamentals - as easy as possible"
        ]
      },
      "requirements": [
        "Basics of HTML",
        "Basics of CSS",
        "Basics of javascript like creating functions and loops",
        "ES6 is NOT REQUIRED, it's covered in course"
      ],
      "description": "UPDATE: React Router version 4 videos are now added.\nHi and welcome to react JS course.\nReact is a library by Facebook to create web applications that are fast, modular and everything can be done with just Javascript.\nNow, before you get bore with this text, as you are a video learner, let me talk about projects of this course.\nThis course will first cover local installation and react basics. After that we will create 10 projects.\nProject 1 - Create react app manually.\nProject 2 - Converting a simple Blog into react components\nProject 3 - Timer App\nProject 4 - Sales cart in Single Page Application\nProject 5 - Usurvery with Firebase database\nProject 6 - Firebase Login Setup\nProject 7 - Google Sign in with Firebase\nProject 8 - Reddit API with axios\nProject 9 - Auth0 login System\nProject 10 - Github API with Fetch and Auth0 login system\nIdeal student for this course:\nThis course is perfect for someone who has little knowledge of HTML, CSS and Javascript. We are not saying that you need to be guru of javascript but little concepts like Loops and functions should be familiar to you. If you know ES6 that’s great, if not, don’t worry, ES6 is also covered in this course.\nReact is having very high demand in market. One of the top most searched subject on stack overflow. Most of high performance apps are created using react. If you want to stand apart from react, for sure you need to get familiar with react.\nAlso, if you are looking to move in react-native app development, that path goes with react js. Once you are familiar with concepts like JSX, props and states; same concepts are applied in react native too. And moving into react-native would be just a piece of cake.\nStill, thinking about taking this course or not, we highly recommend to check a few projects mentioned in course introduction and free preview.\nSee you inside the course !",
      "target_audience": [
        "web developers",
        "app developers who are looking to jump into react and react-native",
        "students who are looking to jump into react and master it",
        "looking to make apps using JS, this is perfect starting point",
        "People who have learned front end basics, this is next step to take",
        "one, who want to learn the implementation of javascript"
      ]
    },
    {
      "title": "Web Development | HTML | CSS | JavaScript | jQuery | NodeJS",
      "url": "https://www.udemy.com/course/ui-technologies-indepth/",
      "bio": "Full Stack Web Development Bootcamp | HTML Project | HTML 5 | CSS 3 | JavaScript | Bootstrap | ES6 | jQuery | NodeJS",
      "objectives": [
        "HTML",
        "CSS",
        "JavaScript",
        "jQuery",
        "NodeJS",
        "Bootstrap"
      ],
      "course_content": {
        "Introduction to HTML": [
          "What is HTML",
          "Anatomy of HTML Tag",
          "HTML Document Structure"
        ],
        "Basic Tags - HTML 5": [
          "Creating First HTML Application",
          "Headings and Paragraphs",
          "Hr",
          "Div",
          "Headings and Paragraphs"
        ],
        "Basic Styles - CSS 3": [
          "What is CSS",
          "Anatomy of CSS Style",
          "Tag Selector",
          "ID Selector",
          "Class Selector"
        ],
        "Font and Text Styles - CSS 3": [
          "Font-Family",
          "Font-Size",
          "Font-Weight",
          "Font-Style",
          "Font-Variant",
          "Font-Shorthand",
          "Color",
          "Text-Align",
          "Text-Decoration",
          "Text-Transform",
          "Text-Indent",
          "Letter-Spacing",
          "Line-Height",
          "Word-Spacing",
          "Text-Shadow",
          "White-Space",
          "Text-Direction",
          "Span Tag in HTML",
          "Font and Text Properties in CSS"
        ],
        "Icons - CSS 3": [
          "Font-Awesome Icons",
          "Google Icons"
        ],
        "The Box Model - CSS 3": [
          "Background-Color",
          "Box Model",
          "Margin",
          "Margin - Top Right Bottom Left",
          "Margin - Shorthand",
          "Padding",
          "Padding - Top Right Bottom Left",
          "Padding - Shorthand",
          "Width and Height",
          "Float",
          "Clear",
          "Border - Style Width Color",
          "Border - Shorthand",
          "Border - Top Right Bottom Left",
          "Outline",
          "Outline-Offset",
          "Border Radius",
          "Box Shadow",
          "Transition",
          "Transformations",
          "Transform-Origin",
          "3D Transformations",
          "KeyFrame Animations",
          "Gradient Colors",
          "Overflow",
          "Word Wrap",
          "Writing Mode",
          "Max-Width and Min-Width",
          "Wooden Workshop Website Template"
        ],
        "Lists - HTML 5 & CSS 3": [
          "Unordered List",
          "Ordered List",
          "List-Style-Type",
          "List-Style-Image",
          "Nested Lists",
          "Description Lists",
          "Live Server in VS Code",
          "Countries List"
        ],
        "HTML 5 & CSS 3 - Links and Navigation": [
          "Links",
          "Link Styles",
          "Navigation Bar",
          "External Style Sheet",
          "Bookmark Links",
          "File Links",
          "Iframe",
          "Position",
          "Display",
          "Visibility",
          "Sidebar",
          "Sidebar with Sub-menus"
        ],
        "Images, Audio, Video - HTML 5 & CSS 3": [
          "Images",
          "Image Gallery",
          "Figure and Figcaption",
          "Importance of Title and Alt Attributes",
          "Style Attribute",
          "Images as Links",
          "Background-Image",
          "Background-Repeat",
          "Background-Position",
          "Background-Size",
          "Background-Attachment",
          "Background-Clip",
          "Multiple Background Images",
          "Border-Image",
          "Picture Tag",
          "Audio",
          "Video",
          "Youtube Videos in HTML",
          "Image Maps",
          "Food Menu"
        ],
        "Tables - HTML 5 & CSS 3": [
          "Basic Table",
          "Creating Professional Looking Table",
          "Striped Table",
          "Responsive Table",
          "Caption",
          "Colspan",
          "Rowspan",
          "Vertical-Align",
          "Table with CSS"
        ]
      },
      "requirements": [
        "Basic knowledge on computers is required. Basic knowledge on any one programming language is preferable."
      ],
      "description": "Sample of the reviews:\n★★★★★\nYes, the explanations are very clear and the examples are useful - Todoya Soudry\nthe examples are explained very well and the teaching is amazing. - Sadiya Kausar\nThis course is great! The author explains all the concepts in a very detailed and easy to follow way! I ll update my review later upon completing the javascript part. For now, the course is largely amazing and above my expectations. - Abdoul Nasser Ibrahim\nThis course very clearly explain and very useful for every frontend developers. Heartly thanks for harsha sir your good teaching and clear explanation and your efforts. - kumaran bala\nIts a good course for beginners. Each and everything is explained here. - Suprith H L Preetham\nVery explicative and a lot of examples with every single details highlighted. - Sebastian Echegaray\n\n\n\n\nYour dream of becoming UI Developer / Frontend Developer becomes TRUE with this course. This course provides Real training lectures with clear explanations with practicals. Each topic will covered with theoretical, practical with best practices and examples.\nThis course covers both basic HTML and HTML 5 & also both basic CSS and CSS 3.\nIncludes Object Oriented JavaScript concepts.\n\n\nREAL-WORLD PROJECT:\n\"India Tourism\" website that demonstrates various widgets such as cards, grids, pagination, list groups, fonts, icons and many more. Each lecture makes a progress in the course project.\nSo you will code along with me to make your dream project come true.\n\n\n\nPOTENTIAL BENEFITS OF THIS COURSE\nBy the end of this course, you will create all of the source code for a complete \"India Tourism\" web project.\nYou will type in every line of code with me in the videos ... all from scratch.\nI explain every line of html/css/javascript code that we create. So this isn't a copy/paste tutorial, you will have a full understanding of the code.\nI am a RESPONSIVE INSTRUCTOR. post your questions and I will RESPOND in 24 hours, ASAP.\nAll source code is available for download\nEnglish captions are available.\n\n\nThis course is offered by Web Academy by Harsha Vardhan. Any watermark stating \"Harsha Web University\" is from our old branding and does not represent an academic institution. This course is for educational purposes only and is not affiliated with any university or degree-granting institution.",
      "target_audience": [
        "Anyone to create websites"
      ]
    },
    {
      "title": ".NET Core MVC - The Complete Guide 2025 [E-commerce]",
      "url": "https://www.udemy.com/course/complete-aspnet-core-21-course/",
      "bio": "Build real world e-commerce application using ASP.NET Core MVC, Entity Framework Core and ASP.NET Core Identity.",
      "objectives": [
        "Learn structure of ASP NET MVC Core (.NET 8) Project",
        "Learn structure of ASP NET Core (.NET 8) Razor Project",
        "Learn basic fundamentals of ASP NET MVC Core (.NET 8)",
        "Build 2 Projects throughout the course",
        "Integrate Identity Framework and learn how to add more fields to Users",
        "Interact with Razor class library for Identity",
        "Integrate Entity Framework along with code first migrations",
        "Sessions in ASP NET Core (.NET 8)",
        "Custom Tag Helpers in ASP NET Core (.NET 8)",
        "View Components and Partial Views in ASP NET Core",
        "Bootstrap v5",
        "Authentication and Authorization in ASP NET Core (.NET 8)",
        "Role Management in ASP NET Core Identity",
        "Email notifications",
        "TempData in ASP NET Core (.NET 8)",
        "Stripe Payment Integrations",
        "Repository Pattern to Access Database",
        "Seed Database Migrations Automatically",
        "Deploying website on Microsoft Azure"
      ],
      "course_content": {
        "Welcome & Getting Started": [
          "Welcome",
          "What we will Build",
          "Feedback",
          "Dot Net Core Roadmap",
          "Live Preview Url",
          "Project Resources",
          ".NET Community",
          "Prerequisites",
          "Tools Needed",
          "Download .NET 8 and VS Preview",
          "Course Overview",
          "Create Project",
          "Project File",
          "Launch Settings",
          "wwwroot and appsettings",
          "Program File",
          "MVC Architecture",
          "Routing Overview",
          "Routing in Action",
          "Default Views",
          "What is Dependency Injection?",
          "Go Easy on Yourself!"
        ],
        "Category CRUD Operations": [
          "Create Category Model",
          "Data Annotations",
          "Connection String",
          "Nuget Packages for Entity Framework Core",
          "Setup ApplicationDbContext",
          "Create Database",
          "Create Category Table",
          "Add Category Controller",
          "Add Category Link in Header",
          "Seed Category Table",
          "Get all Categories",
          "Hot Reload",
          "Display all Categories",
          "Bootswatch Theme and Bootstrap Icons",
          "Design Category List Page",
          "Create Category UI",
          "Input Tag Helpers",
          "Create Category",
          "Server Side Validations",
          "Custom Validations",
          "Asp Validation Summary",
          "Client Side Validation",
          "Edit and Delete Buttons",
          "Get Category Details to Edit",
          "Update Category",
          "Update Category in Action",
          "Get and Post Action for Delete Category",
          "Delete Category in Action",
          "TempData",
          "Partial Views",
          "Toastr Notification"
        ],
        "Razor Project": [
          "Create Razor Project",
          "What's Different in Razor Project?",
          "Setup EF Core",
          "Create first Razor Page",
          "Display all Categories",
          "Create Category UI",
          "Create Category Post Handler",
          "Edit and Delete Category",
          "Toastr Notifications and Partial Views"
        ],
        "N-Tier Architecture": [
          "Create More Projects",
          "Modify Styling Refresh",
          "Modify Styling",
          "Modify UI of Category Pages",
          "N-Tier Architecture",
          "How to Reset Database",
          "Bonus - Dependency Injection Service Lifetimes"
        ],
        "Repository Pattern": [
          "IRepository Interface",
          "Implement Repository Interface",
          "Implement ICategoryRepository",
          "Implement Category Repository",
          "Replace DbContext with Category Repository",
          "How Easy is it to move to a Different Database?",
          "Renaming Project and Solving Issues",
          "UnitOfWork Implementation",
          "UnitOfWork in Action",
          "Areas in .NET",
          "Dropdown in NavBar"
        ],
        "Product CRUD": [
          "Create Product Model",
          "Seed Product and Assignment 1",
          "Assignment 1 Solution - Product Repository and UnitOfWork",
          "Assignment 2 - Product CRUD Operations",
          "Assignment 2 Solution - Product CRUD Operations",
          "Add Foreign Key in EF Core",
          "Add Image Url Column",
          "Projections in EF Core",
          "Viewbag in Action",
          "ViewData in Action",
          "Depereciated NuGet Package (Microsoft.AspNetCore.Mvc.ViewFeatures)",
          "View Models in Action",
          "File Upload Input",
          "Combine, Create, and Edit Pages",
          "Rich Text Editor",
          "Create Product",
          "Display Image on Update",
          "Handle Image on Update",
          "Update Product Custom Code",
          "Loading Navigation Properties",
          "DataTables API",
          "Load DataTables",
          "Datatable column count",
          "Edit Product Link in DataTable",
          "Delete Product",
          "SweetAlerts"
        ],
        "Home and Details Page": [
          "Home Page",
          "Details Action Method",
          "Details UI"
        ],
        "Identity in .NET Core": [
          "Scaffolding Error",
          "Scaffold Identity",
          "Scaffold Identity Issue (NET8)",
          "Understand what Got Added",
          "Add Identity Tables",
          "Extend Identity User",
          "Register a User",
          "Register an Application User",
          "Create Roles in Database",
          "Assign Roles on Registration",
          "Authorization in Project",
          "Update Login and Register UI",
          "Register Other Fields",
          "UI Bug"
        ],
        "Company CRUD": [
          "Why do we have a Company Role?",
          "Assignment 3",
          "Assignment 3 Solution - Company CRUD Operations",
          "Display Company Dropdown",
          "Toggle Company Dropdown",
          "Register Company User"
        ],
        "Shopping Cart": [
          "Add Shopping Cart Model",
          "Add Shopping Cart to Repository",
          "Add ApplicationUser Repository",
          "What will be Model for Details Page?",
          "Add to Cart",
          "Fix Issue with Add to Cart",
          "A Weird Bug",
          "Shopping Cart UI",
          "Get Shopping Cart",
          "Get Order Total in Shopping Cart",
          "Dynamic Shopping Cart",
          "Update Quantity in Shopping Cart",
          "Order Summary UI"
        ]
      },
      "requirements": [
        "3-6 months knowledge of C#",
        "Visual Studio 2022",
        "SQL Server Management Studio",
        ".NET 6"
      ],
      "description": "This is a Beginner to Advanced level course on .NET 8 that will take you from basics all the way to advance mode. This course is for anyone who is new to ASP.NET Core or who is familiar with ASP.NET and wants to take the first stab at understanding what is different in ASP.NET Core. From there we would be building multiple projects to understand all concepts in .NET 8 as we will deploy our final application on Azure as well as IIS.\nThroughout this course, we would understand the evolution of ASP.NET Core, and then we would take a look at the modified files and folder structure.\n\nWe would then take a look at new concepts in ASP.NET Core\nWe would build a small Razor application with CRUD operations using Entity framework for integration with the database.\nWe would build our Bulky Book website where we will learn advanced topics in ASP.NET MVC Core\nFinally, we will deploy our Bulky Book website on Microsoft Azure and IIS.\n\n\n\n\nWhat are the requirements?\n3-6 months knowledge of c#\nVisual Studio 2022\nSQL Server Management Studio\n\n\nWhat am I going to get from this course?\nLearn the structure of ASP NET MVC Core Project\nLearn the structure of ASP NET Core  Razor Project\nLearn the fundamentals of ASP NET MVC Core\nBuild 2 Projects throughout the course\nIntegrate Identity Framework and learn how to add more fields to Users\nInteract with Razor class library for Identity\nIntegrate Entity Framework along with code first migrations\nSessions in ASP NET Core\nCustom Tag Helpers in ASP NET Core\nView Components and Partial Views in ASP NET Core\nBootstrap v5\nAuthentication and Authorization in ASP NET Core\nRole Management in ASP NET Core Identity\nEmail notifications\nTempData/ViewBag/ViewData in ASP NET Core\nStripe Payment Integrations\nRepository Pattern to Access Database\nSeed Database Migrations Automatically\nDeploying the website on Microsoft Azure",
      "target_audience": [
        "Anyone who wants to learn ASP NET MVC core (.NET 8) from Basics to Advance",
        "Anyone who wants to learn most latest changes with Microsoft newest framework",
        "Anyone interested in learning how to Architect Large Scale Projects"
      ]
    },
    {
      "title": "Querying Microsoft SQL Server 2012 - (Exam No. 70-461)",
      "url": "https://www.udemy.com/course/querying-sql-server-2012-70-461/",
      "bio": "Master in SQL Server 2012 in a step-by-step manner",
      "objectives": [
        "List different SQL data types",
        "Make, amend and delete various database structures",
        "Modify constraints",
        "Make new data storing procedures",
        "Maximize querying",
        "Work with various functions",
        "Know to handle errors",
        "Manage transactions"
      ],
      "course_content": {
        "Introduction to SQL Server 2012": [
          "Introduction to SQL Server 2012",
          "RDBMS - An Introduction",
          "SQL Server 2012",
          "SQL Server Components",
          "SQL Server Tools",
          "SQL Server Management Studio",
          "Managing Databases",
          "SSMS Windows",
          "Demo - Exploring SSME",
          "Understanding Database Objects",
          "Demo - Creating Database Objects using SSMS",
          "Conclusion",
          "Quiz"
        ],
        "Working with T-SQL": [
          "Working with T - SQL",
          "Demo Viewing a Table Structure",
          "Querying",
          "T - SQL",
          "Demo Writing a Simple Query",
          "Managing Database Objects",
          "Demo - Add, Modify, and Delete Database Objects",
          "Constraints",
          "Demo - Adding Constraints",
          "SELECT",
          "Demo - Querying Data from Tables",
          "CASE",
          "Demo - Advanced Queries",
          "Conclusion",
          "Quiz"
        ],
        "Understanding SQL Data Types": [
          "Understanding SQL Data Types",
          "String Types",
          "MAX Setting",
          "Demo - Using Character, UNICODE, and Binary Strings",
          "Numeric Types",
          "Demo - Working with Numeric Data",
          "Date and Time",
          "Demo - Working with Date and Time",
          "Advanced Data Types",
          "Demo - Exploring Some Advanced Data Types",
          "Conclusion",
          "Quiz"
        ],
        "Sorting and Filtering": [
          "Sorting and Filtering",
          "Sorting with ORDER BY, and Performing Multiple Column and Ascending - Descending",
          "Extended Capabilities for Sorting",
          "Demo - Using TOP, OFFSET, and FETCH",
          "Filtering Results",
          "Demo - Filter using WHERE, and Different Predicates and Operators",
          "Advanced Filtering",
          "Demo - Unicode, ANY, and ALL filters",
          "Conclusion",
          "Quiz"
        ],
        "Query Multiple Tables using JOINs": [
          "Query Multiple Tables using JOINs",
          "Multiple Tables",
          "Demo - Querying Multiple Tables without a JOIN",
          "Using JOIN",
          "Simple Join",
          "Demo - Using Implicit Join between Tables",
          "JOINs",
          "Demo - Using CROSS, INNER, and OUTER JOINs",
          "Advanced JOINs",
          "Demo - Using MERGE, HASH, and LOOP",
          "Conclusion",
          "Quiz"
        ],
        "Modifying Table Data": [
          "Modifying Table Data",
          "Demo - Using Different Forms of INSERT to Add Data to a Table",
          "Other Methods to Add Data",
          "Demo - Using Bulk Adding Methods",
          "Modifying Data in a Table",
          "Demo - Modifying Data with UPDATE",
          "Removing Data from Tables",
          "Demo - DELETE and TRUNCATE Data from Tables",
          "Synchronizing Data between Tables",
          "Demo - Synchronizing Data using MERGE",
          "Conclusion",
          "Quiz"
        ],
        "Programming in SQL Server": [
          "Programming in SQL Server",
          "Function Categories",
          "String Functions",
          "Conversion Functions",
          "Logical Numeric Functions",
          "Date and Time Functions",
          "Demo - Using Different Functions in SQL Server",
          "Working with Groups and Aggregates",
          "Aggregate Functions",
          "Demo - Grouping and Using Different Aggregates",
          "Variables and Batches",
          "Demo - Using Variables and Batches",
          "Control Flow Statements",
          "Demo - Using Control Flow Statements",
          "Working with Stored Procedures",
          "Demo - Working with Stored Procedures",
          "Conclusion",
          "Quiz"
        ],
        "Writing Advanced Queries in T-SQL": [
          "Writing Advanced Queries in T - SQL",
          "Using Subqueries Demo",
          "Table Expressions",
          "Using Table Valued Expressions Demo",
          "Set and Conditional Operators",
          "Using Different Set Operators Demo",
          "Window Functions",
          "Using Window Functions Demo",
          "Creating User - Defined Functions",
          "Create and Use UDF Demo",
          "Conclusion",
          "Quiz"
        ],
        "Data Manipulation": [
          "Data Manipulation",
          "Using PIVOT to Analyze Data Demo",
          "Grouping Sets",
          "Grouping Sets Demo",
          "Handling Transactions",
          "Using Transactions Demo",
          "Conclusion"
        ],
        "Advanced Querying": [
          "Advanced Querying",
          "Master Database",
          "System Stored Procedures",
          "Work with System Stored Procedures Demo",
          "Query Plans",
          "Viewing Query Plans Demo",
          "Manage Indexes",
          "Manage Views",
          "Using Indexes and Views Demo",
          "Windows Azure SQL Database",
          "Overview of Windows Azure SQL Database Demo",
          "Conclusion",
          "Quiz"
        ]
      },
      "requirements": [
        "Knowledge of TSQL, javascript and C++ will be an added advantage for any particpant who is taking up this course. awareness about RDMS would be an added advantage."
      ],
      "description": "Querying Microsoft SQL Server (Exam 70-461) training has been designed to help learners ace the Microsoft SQL Server 70-461 exam. The course is based on the curriculum prescribed by Microsoft.\nTaking leap into the data management system had Microsoft come up with a new, authentic and infallible version of SQL Server, Microsoft SQL Server 2012. It offers a trustworthy storage of data for not so important websites and other desktop applications. In this course you will be introduced to the construction and usage of databases in this platform.\nIn this course, students who are preparing themselves for this exam will be showcased with all the necessary technical skills to write basic Transact-SQL queries for Microsoft SQL Server 2012. Also, another point that adds value to this course is that it is the basis for all other SQL Server-related disciplines—Database Development, Database Administration, and Business Intelligence—are few among them. This course is more or less a guide that will help you with exam 70-461 preparation, known as Querying Microsoft SQL Server 2012.\nIt is the advent of cloud that has made this exam so popular amongst the professionals. Apart from cloud, other enterprises are considers SQL Server 2012 as a strong platform as there are many other trivial systems founded on it.\nBy the end of the course you will be trained in creating as well as managing databases in SQL Server 2012. Apart from learning about various database objects including tables, columns, keys and others, there will be an overall understanding of how these objects help store data by providing a well-constructed structure. As add-ons you will also know to query for stored data, add new data, update and delete existing and unwanted data.\nAll these and more are combined in 137 lecture with demos to help you out. There are end of the lesson quiz sections which will check your understanding of the lessons.\n15 hours of learning provides students with the technical skills required to write basic Transact-SQL queries for Microsoft SQL Server 2012. Passing the Querying Microsoft SQL Server 2012 (70-461) exam is a requirement to getting MCSA certified, which in turn is a prerequisite to achieve an MCSE certification.",
      "target_audience": [
        "This is intended for professionals who want to excel in querying. Therefore working professionals like database administrators, developers, system engineers and business professionals can take up this exam. This the first level so if you're looking for an advanced version this course is not for you."
      ]
    },
    {
      "title": "Complete Wordpress Website Developer Course",
      "url": "https://www.udemy.com/course/the-complete-wordpress-developer-course-w/",
      "bio": "Learn WordPress step by step to make beautiful blogs, websites,e-commerce sites to start your business ONLINE.",
      "objectives": [
        "Create beautiful blogs, stunning website and paying e-commerce websites.",
        "Master the WordPress for building and fixing websites.",
        "Set Up Domain and Hosting with no hurdle.",
        "Migrate your WordPress Webiste in Clicks.",
        "And much more."
      ],
      "course_content": {},
      "requirements": [
        "You don't need to know anything about Wordpress.",
        "We will teach you everything STEP by STEP.",
        "Basic knowledge of Computer will be helpful.",
        "All tools which we are using are FREE."
      ],
      "description": "Welcome to the ultimate WordPress course! This course is designed to teach you all the basics and fundamental concepts of WordPress, and how to build a fully functional blogging site and business website from scratch.\nWe will start by exploring the WordPress interface and its various components and then delve into the essential features of building a blogging site. You will learn how to install and setup WordPress on localhost, create and manage content, and optimize your site for search engines.\nNext, we will move on to building a business website using WordPress. You will learn how to choose and customize a theme, create pages, menus, and sidebars, and integrate essential business features such as contact forms and social media.\nWe will also cover how to migrate your site from localhost to an online server. You will learn how to backup and restore your WordPress site, transfer your files and database, and avoid common migration pitfalls.\nIn addition, we will explore the domain and hosting setup process. You will learn how to choose the right domain and hosting provider, how to set up your domain and hosting, and how to migrate your site from one hosting provider to another.\nThe best part of this course is that we add new lectures every now and then based on the requests of our students. We want to make sure that you have access to the latest and most relevant information about WordPress.\nAnd, I personally answer all the questions of students in the discussion section. So, if you have any questions or concerns, feel free to ask and I will do my best to help you out.\nJoin us today and take your WordPress skills to the next level!",
      "target_audience": [
        "Anyone who wants to learn Wordpress.",
        "Anyone who wants to create Websites, Blogs and E-Commerce sites with Ease.",
        "Anyone who wants to start their Web Design business.",
        "Anyone who wants to become a Web Developer."
      ]
    },
    {
      "title": "ASP.NET MVC Complete Guide using .NET Core [.NET8 Updated]",
      "url": "https://www.udemy.com/course/aspnet-mvc-course-aspnet-core/",
      "bio": "ASP.NET MVC Mastery: Dive Deep into .NET Core MVC with Real-World App, Entity Framework Core and ASP.NET Core Identity",
      "objectives": [
        "Learn, Understand and Create .NET Core MVC Websites From Scratch - Updated to .NET8",
        "Building scalable .NET MVC Applications from scratch using C# and .NET Core",
        "Learn and Apply Entity Framework Core to perform CRUD operations on a SQL Server database",
        "Use Entity Framework Core in a code first approach",
        "Understand and Apply the Repository Pattern",
        "Use Domain Driven Design (DDD) approach to create domain first models and project",
        "Understand MVC patterns in ASPNET Core",
        "Add and Use ASPNET Core Model Validations",
        "Understand and Implement Authentication and Role based Authorization to Authenticate and Authorize the ASPNET Core MVC Website",
        "Use Microsoft Identity To Implement Login and Register Functionalities",
        "Learn and Use CRUD operations with MVC and Entity Framework Core (EF Core)",
        "Learn and Use ViewData and TempData to Pass Data From Models To Views",
        "Use Bootstrap 5 To Build The Web Application",
        "Show Notifications To Users Using Bootstrap Alerts",
        "Dependency Injection Used In ASP NET Core",
        "Image Upload Functionality - Upload Images from ASP NET Core Website to Popular 3rd Party Image Hosting Provider Using SDKs",
        "Add WYSIWYG to our Application and Add Image Upload",
        "Learn Advanced Topics Of ASPNET Core (.NET8) and Implement them using the MVC Pattern"
      ],
      "course_content": {
        "Introduction to ASP.NET Core MVC Web Development": [
          "Introduction",
          "Application Demo",
          "Important: How to ask Questions and Submit Reviews",
          "Setting Up Development Environment",
          "Install .NET SDK and .NET Runtime",
          "Download and Install Visual Studio 2022",
          "Download and Install SQL Server (Local Instance) & SQL Server Management Studio",
          "Getting Help",
          "Complete Source Code On GIT",
          "What is ASP.NET Core - An Overview to ASP.NET Core and it's benefits"
        ],
        "Create ASP.NET MVC Web Application From Scratch": [
          "Create New ASP.NET MVC Web Application",
          "Understand Our ASP.NET MVC Web Application and File Structure",
          "Create Domain Models (Blog Post and Tag)",
          "Adding Entity Framework Core Packages",
          "Creating the DBContext Class",
          "Adding ConnectionString To The Database In Appsettings.Json",
          "Injecting DbContext Into Our Application",
          "Run EF Core Migrations"
        ],
        "Create Tag CRUD Operations in ASP.NET MVC": [
          "Introduction to ASP.NET MVC Architecture",
          "Changes to UI For our Application",
          "Create New Controller (AdminTags), Add Action Method (GET) and Create New View",
          "Create New HTML Form to Add new Tags",
          "Form Submission and Data Binding in ASP.NET MVC",
          "Saving Data To Database using DbContext",
          "Display All Tags (Get all Tags)",
          "Edit or Update Tag Functionality",
          "Delete Tag Functionality"
        ],
        "Asynchronous Programming and Repository Pattern": [
          "Introduction",
          "Asynchronous Programming and making our methods Asynchronous",
          "Understanding Repository Pattern and Implementation in ASP.NET"
        ],
        "BlogPost CRUD Operations - Dropdowns, Checkbox, DatePickers etc": [
          "Introduction",
          "Create New Controller (AdminBlogs), Add Action Method (GET) and Create New View",
          "Create New HTML Form to Add new Blog",
          "Saving BlogPost Entity With Tags To The Database",
          "Display All Blogs (Get all Blogs)",
          "Display Edit Blog Functionality",
          "Edit or Update Blog Functionality",
          "Delete Blog Functionality"
        ],
        "Adding WYSIWYG Editor and Image Upload In ASP.NET Core MVC": [
          "Introduction",
          "Add WYSIWYG Editor on Add and Edit BlogPost Page",
          "Image Upload Introduction",
          "Create Image API",
          "Create POST Method and Image Repository",
          "Register To Cloudinary",
          "Inject Image Repository and Test",
          "Call Image Upload From View",
          "Add FeaturedImageUpload To Edit Page",
          "Add Image Upload To Froala WYSIWYG Editor"
        ],
        "Displaying Blogs and Tags To Users": [
          "Introduction",
          "Seeding Blog and Tag Data",
          "Displaying Blogs and Hero Section",
          "Display Single Blog Post and Blog Details",
          "Displaying Tags On Home Page"
        ],
        "Authentication and Authorization in ASP.NET MVC ( ASP.NET Core Identity)": [
          "Introduction",
          "Install Identity Packages",
          "Add ConnectionString and Inject AuthDbContext in Program",
          "Run Entity Framework Core Migrations",
          "Register User Functionality",
          "Login User Functionality",
          "Logout User Functionality",
          "Authorization In our Application",
          "Adding Role Based Authorization",
          "Adding ReturnUrl After Authorization"
        ],
        "Adding Like and Comment Functionality In Our Blog": [
          "Introduction",
          "Domain Models For Like Functionality and Migrations",
          "Display Total Likes - Likes Repository",
          "Implement Like Functionality",
          "Updates To Like Functionality",
          "Domain Models For Comment Functionality and Migration",
          "Add Comment Functionality",
          "Display Comments"
        ],
        "Manage Users - Create Read Delete": [
          "Introduction",
          "Display Users",
          "Create New User",
          "Delete User"
        ]
      },
      "requirements": [
        "3-6 Months Of Knowledge In C# Language and ASP NET (.NET Core or .NET Framework)",
        "3-6 months experience working with .NET Core and C#",
        "Hands On Experience Using Microsoft SQL Server Management Studio",
        "Hands On Experience Using Visual Studio"
      ],
      "description": "A Comprehensive Course on ASP.NET MVC - Updated to latest .NET MVC where you will learn and master your ASP.NET Core skills and be excellent at making websites using the ASP.NET MVC Framework.\n\n\nUse C# and .NET8 to develop web applications using ASP.NET MVC Framework.\n\n\nWhy do you need this course\nIf you are trying to learn ASP.NET Core and specifically build websites with ASP.NET Core MVC and Entity Framework Core aka EF Core, then you have come to the right course.\nThis course helps you understand ASP.NET Core MVC as you have never thought of.\nConcentrating on the practical aspect of web development, You will learn and master ASP.NET Core MVC and with the help of this course and the knowledge you will acquire in this course, you will be able to implement that in your projects and your organization as well.\n\n\nWhat is special about this particular  ASP.NET Core MVC course?\nIn this course, we will build a Real-World Web Application as we learn the core concepts of ASP.NET MVC.\nBuilding a real application will make you confident and will boost your morale as you will be seeing actual stuff being built as you understand the concepts of ASP.NET Core MVC and Entity Framework Core (EF Core).\nThis is a complete guide to Learning and Building scalable and data-driven websites using ASP.NET Core MVC\nThis course is built on the latest ASP.NET Core version. Through this course, you will get to know about the new features of ASP.NET Core and stay up to date with this technology.\nThis course is for all skill levels and is best suited for beginners and intermediate developers who have gained knowledge in C# and ASP.NET framework and want to use their skills to build websites using ASP.NET Core MVC.\n\n\nKnow me more\nI am Sameer, a professional software developer with over 15 years of industry experience. I love to educate myself and others and that's why I started with my YouTube channel where I have a loving audience. I create content for software developers like you so that I can share my knowledge.\n\n\nStatistics\nOver 30000 students on Udemy\nOver 4000  Reviews on Udemy\nOver 2.4 Million Views on YouTube\n\nSome of the reviews\nHands down the best way to learn this technology stack. Sameer really did a good job here and I hope he will be blessing us with more interesting Angular projects in the future! Maybe a sample e-commerce or Hotel Booking app :)\n- Although I didn't have any prior experience with C# OR .Net Core MVC, I was still able to grasp a lot from this course, all thanks to the instructor!\n- A very detailed and extensive course! clear voice and great detail to topics.\n- and1000s of more reviews on my courses.\n\nMoney Back Guarantee\nI Guarantee you that after finishing this course, you will be confident enough to create web applications using .NET Core MVC on your own.\nYou will feel confident at work or creating your own projects.\nIf you want to create functional, generic, clean, and usable websites using ASP.NET, then this is the course for you.\nIf still, you are unable to get benefit from this course (we will be sad to see you go!), there is a \"30-day money back guaranteed by Udemy\".\n\n\nIn this course, you will learn and implement:\nLearn And Create Your First ASP.NET MVC Application\nCreate a fully functional, highly scalable blog application\nRepository Pattern in ASP.NET Core\nIf you come from an ASP.NET background, then this will be a good step forward in learning the latest Web technology that Microsoft gives us to build websites and that is ASP.NET MVC.\nUnderstand and learn the concepts of .NET8 and apply them using the ASPNET MVC Framework\nDomain Modelling\nEntity Framework Code First Approach\nSQL Server\nSeeding the Database\nCRUD operations using ASP.NET MVC\nShowing Notifications (ViewData, TempData, etc)\nRouting in ASP NET MVC\nDomain Models vs View Models\nAuthentication and Authorization\nMulti-Role Authorization\nFull User and Admin Support in the Blog Application\nRich Text Editor\nUploading Images To A 3rd Party Image Hosting Provider\nCreating APIs within our ASP NET Core MVC Application and Call Them using Javascript\nServer-Side and Client-Side Validations.\nCreate, Read, Update, and Delete using Entity Framework Core and SQL Server\nWeb Development Using MVC in ASP.NET Core\nWrite Clean, Re-Usable Code",
      "target_audience": [
        "Beginner, Intermediate and Experienced Developers who are keen to learn creating modular, data driven websites using ASP NET Core MVC",
        "Developers who have done ASPNET MVC in the past but want to refresh their memory with the latest techniques in ASP NET Core MVC"
      ]
    },
    {
      "title": "Just Express (with a bunch of node and http). In detail.",
      "url": "https://www.udemy.com/course/just-express-with-a-bunch-of-node-and-http-in-detail/",
      "bio": "No MERN or MEAN... just Express js. For those who've learned a bit about the most awesome node framework, and want more.",
      "objectives": [
        "Express. That's (mostly) all we cover so when you finish, you'll know it!",
        "Set up an Express server that can do anything Express can do!",
        "Operate that Express Server as a REST API",
        "Use that Express Server to render your front-end web pages with EJS, PUG, & handlebars",
        "Understand the basics of HTTP and the request/response cycle"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "All my code (github link)"
        ],
        "Environment Setup (skip if you have node installed already)": [
          "Install node and npm on Mac",
          "Install node and npm on PC"
        ],
        "Before Express...": [
          "Pre-Express",
          "How the Internet Works - TCP and UDP",
          "What is an HTTP request and how does it work?",
          "Course Housekeeping - How I do Nodejs",
          "Node/HTTP servers 101",
          "Serving up routes and static files in plain Node (no fun...)",
          "Serving up routes and static files... continuted"
        ],
        "Express 101": [
          "What is Express and why should I care?",
          "Enter Express... the basics",
          "Basic Routing in Express",
          "Serving Static Files in Express"
        ],
        "Express 201 - Middleware and Rendering": [
          "Middleware. (It's all Express really is.)",
          "Putting on your Express helmet, and other awesome Express middleware",
          "Responding with JSON",
          "STOP - Time for a Review",
          "Chose your weapon - API or server side rendering",
          "Wiring up Express with a view engine",
          "Note for next video",
          "Rendering in Express (with EJS) - Part1 of 2",
          "Rendering in Express (with EJS) - Part2 of 2",
          "Rendering Engine Option 2. Handlebars",
          "Rendering Engine Option 3: Pug/Jade"
        ],
        "Express 301 - Req & Res revisited, the router, and the express generator": [
          "Getting data from the request object - forms and cookies",
          "Getting data from the query string",
          "Getting data from params (URL wildcards) - req.params and req.param()",
          "Sending files, and headers already sent!",
          "The Router",
          "The Express Generator",
          "STOP - Checklist Update and Short Review",
          "Don't fear the HTTP headers!!"
        ],
        "Starter Project - Movie Fan App": [
          "Project Overview",
          "API key and link for the next lecture",
          "Project Setup",
          "Adding the request module",
          "Putting the data in the template",
          "Adding the single-movie view",
          "Adding the search feature"
        ],
        "Project - Building an API": [
          "Project Overview and Setup",
          "Project structure and routes",
          "First route and middleware",
          "Movie Routes and some header work",
          "Movie Routes and some header work - Continued",
          "Search Routes with router.use()"
        ],
        "Deploying an Express app": [
          "Apache Reverse Proxy"
        ],
        "Supplemental: Passport": [
          "Intro to Passport",
          "Overview of OAuth 2.0",
          "Passport and the github Strategy",
          "Passport and the Github Strategy - part 2"
        ]
      },
      "requirements": [
        "You have a working knowledge of JavaScript (Not a ninja, but you should not be brand new).",
        "You have at least run a Nodejs program before. I will cover some basics, but this is NOT an intro to node class.",
        "You have basic command line knowledge (at least capable of navigating and running a program)",
        "You have a computer capable of running Nodejs."
      ],
      "description": "You have some notion of what Node, Express, and http are or you wouldn't be here. Node and back-end JavaScript have taken the world by storm, [SOME BIG COMPANY] moved to node and it changed the world, blah blah blah. One of the first things you're going to learn in any node course is about the Express module. But how much do you really learn about it? How to render a page in one template engine? How to make a get and a post route? Most MEAN and MERN stacks students I've met learned Express in a few breaths and then moved on to MongoDB, MySQL, Angular, React, or whatever was in the rest of the tech stack. What is http anyway? Should I even care? It's easy to get 2 inches deep and find you've accomplished your task, but in fact have no idea why it works or how you'd go further. That, in my opinion, is no good for someone who wants to be a great developer!\nI've had a lot of students ask for a course on just Express js because they were either overwhelmed when they learned it, or they can't find any detail on it to go further than beginner knowledge. That's what this course is for. We will go through the various pieces of Express in detail so you can know why it behaves the way it does and get the most out of it. Express 5 is currently in alpha, so when it hits beta or full release, and as questions come up, the course will expand accordingly!\nNote: this course is not a quick path to launch a webapp with Express/Node. You can get that in 10 minutes in many other places. This course is meant to take a longer, deeper look at what Express js actually does.\nI've been using Express since V.2, in 2012 and have seen it do just about everything. It is one of my favorite node modules and consistently one of the most downloaded on npm. There are other awesome technologies that patch into Express that get easily missed. This course will naturally lead into other things like websockets, webRTC, etc. Prepare for one of the most awesome node modules on npm!\n\n\nSections:\nEnvironment Setup (skip if you have node installed already)\nBefore Express... - TCP & HTTP, making an express-less node server\nExpress 101 - Making a basic web sever with Express\nExpress 201 - Middleware and Rendering\nExpress 301 - Req & Res revisited, the router, and the express generator\nRendering Project\nAPI Project\nPassport (jwt & local strategy still coming)\nBest Practices (Coming...)\nSupplemental - connecting to various DBs (very basic - only for those already familiar with a database)",
      "target_audience": [
        "Beginner node developers who want to learn Express but overwhelmed by full MERN or MEAN courses",
        "Beginner node developers who need a review of JUST Express js",
        "Developers who want to go into the various pieces of Express in a little more depth without having to look at the docs",
        "Developers interested in using node as a webserver or using web sockets with Express"
      ]
    },
    {
      "title": "Clean Architecture in .NET Core MVC[.NET 8] - Complete Guide",
      "url": "https://www.udemy.com/course/asp-net-core/",
      "bio": "Build resort application using .NET Core MVC, Entity Framework Core and ASP.NET Core Identity with Clean Architecture",
      "objectives": [
        "Learn structure of ASP NET MVC Core (.NET 8) Project",
        "Learn basic fundamentals of ASP NET MVC Core (.NET 8)",
        "Clean Architecture in .NET 8",
        "Integrate Entity Framework along with code first migrations",
        "Stripe Payment Integrations",
        "Repository Pattern to Access Database",
        "Seed Database Migrations Automatically",
        "Deploying website on MyWindowsHosting",
        "Dynamic PPT/PDF/Word Exports",
        "Charts in .NET Core",
        "Admin Dashboard in .NET",
        "Custom .NET Identity using MVC (not Razor Class library)"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "What we will build?",
          "What's different in this course?",
          ".NET Core roadmap",
          "More Content",
          "Course overview",
          "Prerequisites",
          "Tools Needed",
          "How to get help?",
          "Project Resources",
          "Clean Architecture",
          "Create Project",
          "Project File",
          "Launch Settings",
          "wwwroot and appsettings",
          "Program class file",
          "MVC Architecture",
          "Routing Overview",
          "Routing in Action",
          "Default Views",
          "IActionResult",
          "Dependency Injection",
          "Go easy!"
        ],
        "Project Setup": [
          "Getting started with final project",
          "Create project",
          "Add to source control",
          "Create Clean architecture Project",
          "Create Villa Model",
          "NuGet Packages for Entity Framework",
          "Create Application Db Context",
          "Add Connection String to Project",
          "Register ApplicationDbContext to Program Class File",
          "Create Database",
          "Create Villa Table",
          "Some details on Migrations in EF Core",
          "Seed Data in Villa Table"
        ],
        "Villa Model": [
          "Create Villa Controller and Retrieve All Villa",
          "Add View for Villa List",
          "Display Villa List on UI",
          "Clean UI",
          "Add Bootstrap Icons",
          "Dark Bootstrap theme",
          "Empty View for Create Villa",
          "asp-for Tag Helper and Forms",
          "Create Villa UI",
          "Display Data Annotation",
          "Create first Villa",
          "Server Side Validation",
          "More Data Annotations",
          "Custom Model Validation",
          "Binding Model Error to a Property",
          "Client Side Validation"
        ],
        "Villa CRUD": [
          "Edit and Delete buttons in UI",
          "Get Action Method for Update Villa",
          "Update Villa UI",
          "Multiple ways to retrieve in EF Core",
          "Not Found Page",
          "Update in Action",
          "Delete Villa UI",
          "Delete in Action"
        ],
        "Notifications": [
          "Temp Data Notifications",
          "Toastr in Project",
          "Partial Views",
          "Scoped CSS",
          "Global using statements"
        ],
        "Villa Number": [
          "Create Villa Number Table and Seed Records",
          "List all Villa Number",
          "Villa Number Create View",
          "Remove Some ModelState Validations",
          "Projects to Get Select List Item",
          "View Data",
          "View Bag",
          "View Models",
          "Loading Navigation Properties",
          "Assignment 1",
          "Assignment 1 Solution - Unique Villa Number",
          "Update Villa Number UI",
          "Update Post in Action",
          "Delete in Action",
          "Clean Code Tip"
        ],
        "Repository": [
          "Villa Repository Interface",
          "Implement Villa Repository",
          "Dependencies within Projects",
          "Implement methods in Villa Repository",
          "Implement Get and Get All in Repository",
          "Using Villa Repository in Controller",
          "Generic Repository",
          "Generic Repository in Action",
          "UnitOfWork Implementation",
          "Unit of Work in Action",
          "Where should Save Method Reside?",
          "Assignment 2 - UnitOfWork with Villa Number",
          "Assignment 2 Solution - UnitOfWork with Villa Number"
        ],
        "Images and Villa": [
          "1 Add Form File in Villa Model",
          "2 Handle Image Upload Part 1",
          "3 Upload Image in Action",
          "4 Display Image in Upload UI",
          "5 Handle Image in Update Villa",
          "6 Solving Bug",
          "7 Remove Image on Villa Delete"
        ],
        "Amenity": [
          "1 Assignment Question",
          "2 Create Amenity Model",
          "3 Create Amenity Table",
          "4 Amenity Repository",
          "5 Amenity Controller",
          "6 Amenity List",
          "7 Amenity CRUD"
        ],
        "Home Page": [
          "1 Add Dropdown in Navbar",
          "2 Home View Model",
          "3 Index Action Home Controller",
          "4 Load Villa Amenity",
          "5 Home Page UI",
          "6 Bind Home VM",
          "7 Home UI - Display all Villa",
          "8 Dynamic Modal ID",
          "9 Villa Details Modal",
          "10 Assignment 4 - Partial View",
          "11 Assignment 4 Solution - Partial View"
        ]
      },
      "requirements": [
        "6+ months familiarity with C# and SQL",
        "Visual Studio 2022",
        "SQL Server Management Studio"
      ],
      "description": "This is a Beginner to the Advance level course on ASP.NET Core using Clean Architecture that will take you from basics all the way to advance mode. This course is for anyone who is familiar with ASP.NET basics and wants to know how to architect and code real-world applications in ASP.NET Core\n\n\nThis is 100% hands on course where you will learn advance concepts with reports, charts, payment processing and much more in .NET Core\n\n\nWhite Lagoon Website is filled with advanced concepts where customers can view the villa rooms in resort and making bookings with their credit cards. Admin can then view the bookings, check in/checkout the customer, and view the summary on their dashboard while managing all the villa via CMS that we will build for admin users.\n\n\nWhat are the requirements?\n6+ months knowledge of C#\nVisual Studio 2022\nSQL Server Management Studio\n\n\nWhat am I going to get from this course?\nLearn structure of ASP NET Core Project\nLearn identity security of ASP NET Core using MVC\nBuild applications using ASP NET Core using MVC\nRepository Pattern\nClean Architecture\nIntegrate Identity Framework and learn how to add more fields to Users\nIntegrate Entity Framework along with code first migrations\nAuthentication and Authorization in ASP.NET Core\nAccept Payments using Stripe\nAdmin Dashboard\nCharts in .NET Core\nBuild dynamic pdf, ppt, word in .NET Core\nData Seeding and deployment to MyWindowsHosting",
      "target_audience": [
        "Anyone who wants to learn fundamentals of ASP NET Core MVC (.NET 8)",
        "Anyone who wants to understand new file structure in ASP NET Core (.NET 8)",
        "Create basic CRUD operation application using ASP NET MVC Core (.NET 8)",
        "Anyone looking to learn Clean Architecture in .NET 8"
      ]
    },
    {
      "title": "Free Python 101 Class Beginners Bootcamp Intro to Python NYC",
      "url": "https://www.udemy.com/course/python-101-beginners-coding-bootcamp-free-course/",
      "bio": "Python Programming for Beginners Course for your weekends - BREAK THE CODE! From Zero to Hero to Super Hero!",
      "objectives": [
        "Become Ready to join our Data Science Bootcamp Course in NYC 312 285 6886",
        "Find out and debub problems in the code and prepare yourself for Bootcamp in NYC",
        "Search google and get help on the error and ask yourself and google right answer",
        "Gain confidence to join Part time evening Bootcamp in NYC, New York",
        "After this course the learners will assume confidence and gain fundamentals to use Python and advance to Python for Data Analytics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course and Style of Learning",
          "Introduction to Course and Style of Learning",
          "Soul of the language",
          "Different Ways to Run Python",
          "Soul and Motivation behind Python",
          "Soul and Motivation behind Python",
          "Soul of the language",
          "Different Ways to Run Python - 1",
          "Different Ways to Run Python 2",
          "Run Python on AWS"
        ],
        "Using Python for Printing, Variable managment and Calculator": [
          "Printing",
          "Variables - Int and Str also system variables and str functions",
          "Variables - Int and Str also system variables and str functions",
          "Old ways of priting",
          "Old ways of printing",
          "String Concatination, String Multiplicaton & .format command with String",
          "String Concatination, String Multiplicaton & .format command with String",
          "Section 2 str split replace list from string.",
          "Input from a user and File Handling",
          "Input from a user and File Handling"
        ],
        "Functions": [
          "Function Basics & Advanced (Recursion, optional arg, key word arg)",
          "Function Basics & Advanced (Recursion, optional arg, key word arg)",
          "Another way to look at Functions - Input and Output",
          "Another way to look at Functions - Input and Output",
          "Little Advanced Functions",
          "Little Advanced Functions",
          "Boundaries of loops, if else, functions in Python"
        ],
        "If Else Condition": [
          "If Else or just if?",
          "If Else or just if?"
        ],
        "List, Tuples (Non Mutable) & Dictionary (Key Value Pair)": [
          "List, Tuples (Non Mutable) & Dictionary (Key Value Pair)",
          "How to store list of elements?",
          "Key Value Pairing - Dict",
          "Key Value Pairing - Dict"
        ],
        "Loops - Iteration - Assume all values - Traver Through": [
          "For Loops",
          "For Loops",
          "While Loops",
          "While Loops"
        ],
        "Recap and Takeaways": [
          "What to remember from this course",
          "What to remember from this course",
          "What to remember from this course 2"
        ]
      },
      "requirements": [
        "All you need is an Microsoft Account or an AWS account (both free). You need a browser to login to Azure to run the code or Anacond Installed",
        "No programming experience needed although a mind to break the code is needed.",
        "Be able to read Python code with confidence without fear with an open mind !",
        "Become from Zero to Hero to Super Hero"
      ],
      "description": "Python is a very popular programming language used by companies like Google, Facebook, Amazon, Microsoft, etc. Python is used for all variety of things like building websites using Django Python, web scraping, data analysis, machine learning, and natural language processing using Python. Python allows you to code fast, building complex applications with minimum lines of code and use existing libraries and use cloud infrastructure resulting true use of Infra on Cloud and code that is 5 times less than Java and 10 times less than C++ / C#. Python 101 Beginners Coding Boot-camp Class for Analytics. Python Programming for Beginners Course: Python 101 Intro to Python. Python 101 Bootcamp is build up based on the Python classes for Analytics taken in NYC, New York by Shivgan Joshi. Having taught at various bootcamps in NYC and gathering feedback from students this course addresses all the major topics you need to get started for Python Anlytics  if you have never programmed.\nCreate Azure Notebook Account\nDownloading Python Anaconda to your laptop\nIntro to common terminology for running Python (AWS, Jupyter, Azure Notebook)\nHello World Practice, Variables, data types, functions, loops\nPrint Hello World Azure Notebooks & Anaconda Book and Content  Functions (Arguments and Return) Loops (For While) If else  List/Dictionary Nested Loops with if else\nOver 100 code snippets to learn the same concept from different angle and poses",
      "target_audience": [
        "Begineers who would like to use Python for Analytics should start with this Python 101 Bootcamp Course",
        "Anyone one who also thinks to be a python hero and want to become super hero",
        "If you thought programming is not for your and want to give a last try!",
        "Python is a very popular programming language used by companies like Google, Facebook, Amazon, Microsoft, etc. Python is used for all variety of things like building websites using Django Python, web scraping, data analysis, machine learning, and natural language processing using Python. Python allows you to code fast, building complex applications with minimum lines of code and use existing libraries and use cloud infrastructure resulting true use of Infra on Cloud and code that is 5 times less than Java and 10 times less than C++ / C#."
      ]
    },
    {
      "title": "NestJS: The Complete Developer's Guide",
      "url": "https://www.udemy.com/course/nestjs-the-complete-developers-guide/",
      "bio": "Build full featured backend APIs incredibly quickly with Nest, TypeORM, and Typescript. Includes testing and deployment!",
      "objectives": [
        "Deploy a feature-complete app to production",
        "Build authentication and permissions systems from scratch",
        "Write integration and unit tests to ensure your code is working",
        "Automatically validate data included with incoming requests",
        "Use an API client to manually test your app",
        "Apply structure to your code with Typescript",
        "Make your code more reusable and testable with dependency injection",
        "Tie different types of data together with TypeORM relationships",
        "Get a behind-the-scenes understanding of NestJS",
        "Use Guards to prevent unauthorized users from gaining access to sensitive data",
        "Understand Nest's special request-response cycle",
        "Model your app's data using TypeORM entities",
        "Use decorators to dramatically simplify your code"
      ],
      "course_content": {
        "Get Started Here!": [
          "How to Get Help",
          "Join Our Community!",
          "Course Resources"
        ],
        "The Basics of Nest": [
          "Project Setup",
          "TypeScript Configuration",
          "Creating a Controller",
          "Starting Up a Nest App",
          "File Naming Conventions",
          "Routing Decorators"
        ],
        "Generating Projects with the Nest CLI": [
          "App Setup",
          "Using the Nest CLI to Generate Files",
          "More on Generating Files",
          "Adding Routing Logic",
          "[Optional] Postman Setup",
          "[Optional] VSCode REST Client Extension"
        ],
        "Validating Request Data with Pipes": [
          "Accessing Request Data with Decorators",
          "Installing Extra Required Libraries",
          "Using Pipes for Validation",
          "Adding Validation Rules",
          "Behind the Scenes of Validation",
          "How Type Info is Preserved"
        ],
        "Nest Architecture: Services and Repositories": [
          "Services and Repositories",
          "Implementing a Repository",
          "Reading and Writing to a Storage File",
          "Implementing a Service",
          "Manual Testing of the Controller",
          "Reporting Errors with Exceptions",
          "Understanding Inversion of Control",
          "Introduction to Dependency Injection",
          "Refactoring to Use Dependency Injection",
          "Few More Notes on DI"
        ],
        "Nest Architecture: Organizing Code with Modules": [
          "Project Overview",
          "Generating a Few Files",
          "Setting Up DI Between Modules",
          "More on DI Between Modules",
          "Consuming Multiple Modules",
          "Modules Wrapup"
        ],
        "Big Project Time!": [
          "App Overview",
          "API Design",
          "Module Design!",
          "Generating Modules, Controllers, and Services"
        ],
        "Persisting Data with TypeORM": [
          "Persistent Data with Nest",
          "Setting Up a Database Connection",
          "Creating an Entity and Repository",
          "Viewing a DB's Contents",
          "Understanding TypeORM Decorators",
          "One Quick Note on Repositories",
          "A Few Extra Routes",
          "Setting Up Body Validation",
          "Manual Route Testing"
        ],
        "Creating and Saving User Data": [
          "Creating and Saving a User",
          "Quick Breather and Review",
          "More on Create vs Save",
          "Required Update for find and findOne Methods",
          "Querying for Data",
          "Updating Data",
          "Removing Users",
          "Finding and Filtering Records",
          "Removing Records",
          "Updating Records",
          "A Few Notes on Exceptions"
        ],
        "Custom Data Serialization": [
          "Excluding Response Properties",
          "Solution to Serialization",
          "How to Build Interceptors",
          "Serialization in the Interceptor",
          "Customizing the Interceptor's DTO",
          "Wrapping the Interceptor in a Decorator",
          "Controller-Wide Serialization",
          "A Bit of Type Safety Around Serialize"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript"
      ],
      "description": "Authentication/Authorization? Covered.  Automated Testing? Yep, it's here!  Production Deployment? Of course!\nCongratulations! You've found the complete guide on how to build enterprise-ready apps with NestJS.\nNestJS is a backend framework used to create scalable and reliable APIs.  It is a \"battery-included\" framework; it includes tools to handle just about every possible use case, from data persistence, to validation, to config management, to testing, and much, much more.  This course will help you master Nest. By the time you complete this course, you will have the confidence to build any app you can imagine.\nThroughout this course you will build a series of apps with growing complexity.  We use as few libraries and tools as possible.  Instead, you will write many custom systems to better understand how every piece of Nest works together.  Each application you build includes discussion on data modeling and persistence. We will first save records in a simple file-based data store (built from scratch) and eventually work our way up to saving data in a production-grade Postgres instance.\nTesting is a fundamental topic in Nest. A tremendous amount of functionality in Nest is dedicated to making sure your project is easy to test. This course follows Nest's testing recommendations, and you will write both integration and unit tests to ensure your project is working as expected. Although testing can sometimes be confusing and boring, I have put special care into making sure the tests we write are expressive, fast, and effective.  You will be able to use this knowledge on your own projects, even those that don't use Nest!\nTypescript is used throughout this course to make sure we are writing clean and correct code. Don't know Typescript? Not a problem! A free appendix is included at the end of the course to get you up to speed on Typescript.  Once you're familiar with it, Typescript will help you catch errors and bugs in your code before you even run it.  If you've never used Typescript before you are in for a treat :)\n--------------------------------------\nEverything in this course is designed to make your learning process as easy as possible.\nAt every step, I will teach you what Nest is doing internally, and help you understand how to twist and bend Nest to better suit your application's needs.\nEvery single video in the course has an attached ZIP file containing up-to-date code, just in case you ever get stuck.\nFull-time teaching assistants are standing by to help answer your questions\nAccess private live chat server is included. Live help whenever you need it!\n--------------------------------------\nHere's a partial list of the topics included in this course:\nSecurely deploy your app to production\nWrite automated integration and unit tests to make sure your code is working\nBuild an authentication system from scratch to log users in\nAllow users to perform certain actions with a permissions system\nStore and retrieve data with complex queries using TypeORM\nUnderstand how TypeORM handles data relationships\nWrite declarative code using property, method, and parameter decorators\nMaster the concept of dependency injection to write reusable code\nImplement automatic validation of incoming requests\nFormat outgoing response data with a custom DTO system\nHandle incoming requests and outgoing responses using Guards and Interceptors\nSegment your code into reusable Nest Modules\nAdd structure to your database using migrations\n\n\nI had a tough time learning NestJS.  There are a tremendous number of outdated tutorials around it, the documentation is sometimes unclear, and Nest itself is just plain hard to understand.  I made this course to save you time and money - a course to show you exactly what you need to know about every topic in Nest.  You will find learning Nest to be a delightful experience and pick up a tremendous amount of knowledge along the way.\nSign up today and join me in mastering NestJS!",
      "target_audience": [
        "Any engineer looking to build an API"
      ]
    },
    {
      "title": "Blazor - The Complete Guide [.NET 9] [2025] [E-commerce]",
      "url": "https://www.udemy.com/course/introduction-to-aspnet-core-x/",
      "bio": "Build e-commerce web application using Blazor Web App and .NET 9(EF Core) to get real world experience with Blazor",
      "objectives": [
        "Learn fundamentals of Blazor",
        "Forms in Blazor with Validation",
        "Build real world e-commerce application using Blazor Web Assembly and Blazor Server",
        "Manage admin features using Blazor Server",
        "Authentication & Authorization in Blazor Web App",
        "Emails with Blazor",
        "Integrate Stripe Payments in Blazor",
        "Repository Pattern and Dependency Injection",
        "Radzen Blazor Components",
        "Social Login in Blazor",
        "And much more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Demo - What we will build in the course",
          "Project Resources and GitHub"
        ],
        "Create Blazor Project": [
          "Create Project",
          "Add Project to source control",
          "Run default application"
        ],
        "Blazor Fundamentals Part 1": [
          "Create First Blazor Component",
          "One way data binding",
          "Two way data binding",
          "Assignment 1",
          "Assignment 1 Solution",
          "Dropdown in Blazor",
          "Global using statement",
          "Product List",
          "Assignment 2 - Product Table",
          "Assignment 2 Solution - Product Table",
          "Assignment 3 - Binding Product Table to Product Summary",
          "Assignment 3 Solution- Binding Product Table to Product Summary",
          "Assignment 4 - Product Demo Component",
          "Assignment 4 Solution- Product Demo Component",
          "Button clicks in Blazor",
          "Passing parameter to method calls in blazor",
          "Assignment 4 - Delete Product",
          "Assignment 5 Solution - Delete Product",
          "Error with DbContext"
        ],
        "Blazor Fundamentals Part 2": [
          "Create Shared Component",
          "Passing Props to Shared Components",
          "Assignment 6 - Shared Component",
          "Assignment 6 Solution - Shared Component",
          "Create Favorite CheckBox",
          "Event Callback",
          "Assignment 7 - Event CallBack",
          "Assignment 7 Solution - Event Callback"
        ],
        "Blazor Fundamentals Part 3": [
          "Create Parent and Child Components",
          "Render Fragment",
          "Simple EventCallBack for methods with no parameters",
          "Multiple Render Fragment",
          "Passing Parameters at multiple level",
          "Cascading Parameter",
          "Cascading Parameter with Name"
        ],
        "Routing in Blazor": [
          "Routing Basics",
          "Passing parameters to route",
          "Multiple Parameters",
          "Route Constraints",
          "Catch all Route Parameters",
          "NavLink",
          "Named Elements Routing",
          "Query Parameters",
          "Navigate using Navigation Manager",
          "Force Refresh",
          "Query String"
        ],
        "Blazor and JavaScript": [
          "Confirmbox in Blazor",
          "Toastr JS",
          "Toastr JS Part 2",
          "JS Runtime Extensions",
          "Assignment 8 - SweetAlert",
          "Assignment 8 Solution - SweetAlert",
          "Referencing Components",
          "Remove Default Components"
        ],
        "Blazor Lifecycle": [
          "OnInitialized LifeCycle",
          "OnParameterSet LifeCycle",
          "OnAfterRender Lifecycle",
          "Should Render and StateHasChanged"
        ],
        "Blazor Project and Configurations": [
          "Create Blazor Web App - SSR",
          "Enhanced Navigation in Blazor",
          "Make Data Permanant in Nagivation",
          "Stream Rendering in Blazor",
          "Stream Rendering Example",
          "Blazor Server Project with Global",
          "Global vs Component Level Interactivity",
          "Blazor WASM Standalone vs Blazor Web App",
          "Blazor Auto Interactivity",
          "Blazor Server VS WASM VS Auto in Action",
          "Focus on Learning Blazor"
        ],
        "Forms in Blazor": [
          "Product Model Setup",
          "Edit Form in Blazor",
          "Bind Method for Form Submit",
          "Validations in Blazor Forms",
          "More Input Types",
          "Display Created Product",
          "Bind Property to Form"
        ]
      },
      "requirements": [
        "3-6 months familiarity with .NET Core / EF Core / .NET API",
        "Visual Studio 2022",
        "SQL Server Management Studio",
        ".NET 9"
      ],
      "description": "For years JavaScript frameworks have dominated the front end/client side development! But things are about to change with Blazor!\nBlazor is an exciting new part of .NET Core (.NET 9) designed for building rich web user interfaces in C#. This course will help developers transition from building basic sample apps to implementing more real world concepts, design patterns, and features.\nWith that there are many questions.\nWhat is Blazor? How do I get started with fundamentals of Blazor?\nHow do you scale an existing application?\nHow do you architect a mid-large scale project?\nHow to correctly process payments?\nHow to efficiently understand Blazor and use it in real world projects?\nThis course will provide you a complete real world scenario with Blazor which will make you face many challenges and solve those issues as we proceed with the course.\nThere are other courses on Udemy, but this is the ultimate course, it covers everything there is to Blazor starting from fundamentals to advance concepts in Blazor\nThis course will help developers transition from building basic sample apps to implementing more real world concepts, design patterns, and features.\nSo join me in this exciting course of exploring what real world challenges are with Blazor as it evolves drastically!\nWe will be using the latest .NET 9 for this course along with Entity Framework Core and Stripe for payment processing.",
      "target_audience": [
        "Anyone who wants to learn fundamentals of Blazor using .NET 9",
        "Anyone who wants to understand new file structure in Blazor Web App",
        "Build e-commerce website using Blazor Web App in .NET !"
      ]
    },
    {
      "title": "The Complete ReactJs Course - Basics to Advanced",
      "url": "https://www.udemy.com/course/react-js-basics-to-advanced/",
      "bio": "Learn React JS from scratch with hands-on practice assignments and projects.",
      "objectives": [
        "Introduction to what is React and its basic concepts",
        "Learn what is JSX and how it works behind the scenes",
        "Learn what are the stateful and stateless components and when to use them",
        "Working with function based and class based components",
        "Working with React Modules, importing and exporting the modules",
        "Learn in detail about how the render method works",
        "React component lifecycle and different lifecycle methods",
        "Creating dynamic websites with help of re-usable components",
        "Creating a proper working structure for a project from scratch which will help maintaining the project for long term"
      ],
      "course_content": {},
      "requirements": [
        "Good understanding of HTML5, CSS3",
        "A good knowledge of Javascript and Modern Javascript - ES6"
      ],
      "description": "What is this course about?\nThe Complete React JS Course  - Basics to Advanced this course is a complete guide for React JS. Here, you will learn all the concepts required for becoming a front-end React JS developer. If you are new to web development or a professional developer who's creating websites with plain old javascript or jQuery, this is your time to learn React JS and take your web development skills to the next level and impress your recruiter or clients.\nReact JS is gaining rapid popularity. In a very short time, it has become the most widely accepted web development JavaScript library. This is the right time for you to learn and add React JS to your skillset and excel in your career.\nThis course is designed in a way that anyone can understand the journey from the basics to advanced concepts of React with simple explanations by the instructor along with hands-on assignments and projects.\nIn the first part of this course:\nWe cover what is React JS, how it uses JSX, how the compilation is done behind the scenes using babel to browser understandable plain old HTML, CSS, and javascript.\nAfter that, we explain 'components' which are the basic building blocks of a web page while working with React JS. We also cover the stateless and stateful components and when to use those components as well.\n\n\nIn the next section, we learn how to create modules in React JS and how to import or export those modules to other files so that we can reuse the same set of code.\nIn the following section, we will work on how do we style the components using CSS modules and how to create a nice user-friendly mobile responsive website.\nWe also cover how to work with props, how to pass data from stateful to stateless components, and how to pass functions from one component to another component.\nWe explain the different lifecycle methods of a React Component and how we can access and modify the data between these lifecycles using the various lifecycle methods available to us.\nWe will keep on adding more videos to the course as we are creating them. These videos will be available to you soon.\n\nWho's teaching you in this course?\nI am a Computer Science graduate highly rated instructor with a rating of 4.3 and more than 200k students on Udemy, I have been part of the corporate circle since his college days. In my early days, I was part of a startup team delivering production grid android apps. Currently, I am a lead developer at EdYoda. I’m responsible for the entire front-end development & integration with the back-end. React, Python, Django is my areas of expertise. I have been delivering corporate training for Android, React, Javascript, Python & Django. I have an eye for detail & that makes me suited for delivering a finished product. I’m a fitness freak & working out is the favorite thing to do in my spare time.\nI want everyone to enjoy the learning process and I have shared my knowledge that will be helpful for React developers.\n\nEnroll now! see you in class\n\nHappy Learning!\nTeam EdYoda",
      "target_audience": [
        "Beginners who just started to work in web development field",
        "Beginner web developers who want to learn React JS web framework",
        "Developers who have basic knowledge of Javascript and want to add React JS in their skill set",
        "Web Developers who want to learn React JS from scratch and want to get promotions in their job",
        "Professionals, already working with other web frameworks like Angular or Vue and want to learn React JS",
        "Frontend Web Developers who wish to change their working technology domain by learning React JS"
      ]
    },
    {
      "title": "Build a Real-world App with ASP.NET Core and Angular 2 (4+)",
      "url": "https://www.udemy.com/course/aspnet-core-angular/",
      "bio": "Build a full-stack web app with ASP.NET Core, Entity Framework Core and Angular 2 (Angular 4+)",
      "objectives": [
        "Build real-world applications with ASP.NET Core and Angular 2",
        "Integrate ASP.NET MVC / Core with Angular 2",
        "Implement a clean and decoupled architecture",
        "Understand and apply the Dependency Inversion Principle (DIP)",
        "Properly implement the repository and unit of work patterns",
        "Use the new dependency injection feature in ASP.NET Core",
        "Troubleshoot common runtime errors",
        "Build APIs with ASP.NET Core",
        "Test APIs using PostMan",
        "Use AutoMapper",
        "Store and retrieve data using Entity Framework Core (Code-first approach)",
        "Implement CRUD operations (including one-to-many and many-to-many relationships)",
        "Implement filtering, sorting and pagination",
        "Handle and log errors",
        "Display toast notifications",
        "Implement photo upload with progress bar",
        "Add authentication and authorization using Auth0 and JWTs",
        "Write clean, maintainable and reliable code",
        "Refactor bad code into good code",
        "Better understand software development lifecycle"
      ],
      "course_content": {},
      "requirements": [
        "At least 3 months experience with ASP.NET MVC 5, Entity Framework 6 and Angular 2"
      ],
      "description": "[UPDATE, June 19]: Added a new section to the course.\nWith over 3,000 students and 300+ positive reviews, this course is Udemy's most popular course for learning ASP.NET Core in the context of a real project!\n\n\n\nASP.NET Core is the next generation of ASP.NET MVC. It's a complete re-write of this framework but in a modular, cloud-optimized and cross-platform way. So it can run on Windows, Linux and Mac. If you're on Mac or Linux and want to build ASP.NET applications without running Windows in a virtual machine, you're going to love ASP.NET Core! You can use Visual Studio Code (VSCode) or your favorite code editor to build ASP.NET Core applications with C#. Say goodbye to VMWare, Parallels, and other virtualization software.\n\n\nMany companies have already started building their new applications with ASP.NET Core. And they're asking their new interviewees if they are familiar with .NET Core. So, whether you want to stay in the marketplace and get a better job with better pay, or you just love to work with the latest technology, it's time to learn about ASP.NET Core and Entity Framework Core.\n\n\nIn this course, Mosh, author of several highly rated courses on Udemy, teaches you how to build a real-world application with ASP.NET Core, Entity Framework Core and Angular. If you're familiar with ASP.NET MVC 5 and Entity Framework 6 and are looking for a course to quickly get up to speed with .NET core, this is the course for you. Not only will you learn about the changes and the new tooling in ASP.NET Core, you'll also learn how to properly integrate it with Angular to build real-world single page applications (SPAs).\n\n\n\n\nA REAL-WORLD APP\nThe app you build in this course is for an imaginary vehicle dealer. The features in this app are carefully designed by Mosh to help you master the core skills you need to build real-world apps with ASP.NET Core and Angular.\nBy the end of watching this course, you'll be able to:\nBuild APIs with ASP.NET Core\nTest APIs with PostMan\nIntegrate Angular and ASP.NET Core\nImplement a clean and decoupled architecture\nUnderstand and apply the Dependency Inversion Principle (DIP)\nProperly implement the repository and unit of work patterns\nUse the new dependency injection feature in ASP.NET Core\nTroubleshoot common runtime errors\nStore and retrieve data with Entity Framework Core (code-first workflow)\nUse AutoMapper\nImplement CRUD operations (including one-to-many and many-to-many relationships)\nImplement filtering, sorting and paging data\nHandle and logging errors\nDisplay toast notifications\nImplement cascading drop-down lists\nImplement photo upload with progress bars\nAdd authentication and authorization with Auth0 (including roles with different privileges)\nDisplay charts\nAnd more...\n\n\n\n\n\n\n\n\nOn top of all these, you'll learn how to write quality code, not just how to build apps. There are a lot of developers out there who can build apps but they write poor quality code. Mosh shows you how to refactor bad code into clean, maintainable and quality code. He also shares his knowledge and 15 years of experience about software design and architecture. So this course is more than just technology. It teaches you how to think like a software engineer.\n\n\nThese are the essential skills that you take with you to nearly every real-world project. Whether you want to get prepared for a job interview or simply want to take your coding skills to the next level, this course is the means to the destination.\n\n\n\n\n\n\n\nTOOLING\nThere are two ways to build ASP.NET Core applications. You can use Visual Studio 2017 or Visual Studio Code, a light-weight cross-platform code editor. In this course, Mosh uses VSCode and the command-line to build an app, but what you learn can be applied in Visual Studio 2017 as well.\n\n\n\n\nWHO THIS COURSE IS FOR\nIn order to take this course, you should have at least 3 months experience with ASP.NET MVC 5, Entity Framework 6 and Angular 2 (or higher).\nIf you need to strengthen your understanding of these frameworks, you can watch Mosh's related courses prior to or in parallel with this course:\nAngular 2 with TypeScript for Beginners\nThe Complete ASP.NET MVC 5 Course\nEntity Framework 6 in Depth\n\n\n60 DAY CHALLENGE PROGRAM\n\nDepending on your level of experience, there are different ways to take this course. You can watch it, section by section, just like other courses. You may prefer to code along with the videos or watch a section first and then code.\nBut if you like to get out of your comfort zone and take your coding skills to the next level, you should take advantage of the 60 day challenge program that comes with this course.\nImagine you and Mosh are team mates and are working on a real-world project. Every week Mosh gives you a challenge or a task to complete. You have one week to complete this task. The following week he publishes a new section and shows you how he completes that task himself. This is a fantastic learning opportunity for you. You can compare your code with his and find areas for improvement.\n\n\n\n\nWHAT THIS COURSE IS NOT\nWhile you use ASP.NET Core and Entity Framework to build an app, the focus of this course is on application building skills and not a deep overview of ASP.NET Core and Entity Framework. Because in any real-world applications, you use only a subset of the features in any frameworks. So, it's impossible to cover everything about ASP.NET Core and Entity Framework in one app. But you'll learn about the key things that you need to know in order to get the job done.\nAlso, the following topics are outside the scope of this course:\nComplex domains and domain-driven design (DDD)\nDesign patterns\nContinuous integration and deployment\nAutomated testing\nFinally, the application you'll build in this course has a very simple user interface since the focus of this course is on coding not building visually engaging user interfaces.\n\n\n\n\nTAKE YOUR CODING SKILLS TO THE NEXT LEVEL\nSo, do you want to transition from ASP.NET MVC 5 and learn about the latest stuff happening in .NET Core? Do you want to learn how to build a real-world application with ASP.NET Core and Angular? Then take this course and get started.\n\n\nThis course comes with a 30-day money back guarantee. If you're not satisfied, you can contact Udemy for a full refund. No questions asked.\n\n\nJoin the other 3,000 happy students who have taken this course and start building this app in under 10 minutes!",
      "target_audience": [
        "Developers who are familiar with ASP.NET MVC 5 and want to transition to ASP.NET Core",
        "Developers who want to learn how to integrate ASP.NET MVC / Core and Angular 2",
        "Developers who want to learn how to build an application from A to Z",
        "Developers who want to improve their coding skills"
      ]
    },
    {
      "title": "Angular Deep Dive - Beginner to Advanced (Angular 20)",
      "url": "https://www.udemy.com/course/angular-course/",
      "bio": "Updated To Angular 19 (Angular Signals, defer, @if @for): Advanced Features of the Angular Core and Common modules",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Understand key questions about Angular: Why Angular, what are the benefits?",
        "Know how to build and style your own custom Angular Components",
        "Learn in detail all the functionality available in Core Directives",
        "Feel comfortable with Intermediate topics like Template Querying, Content Projection, Dynamic Templates and more",
        "Have in-depth knowledge how to build custom Attribute and Structural Directives",
        "Feel comfortable with Advanced topics like View Encapsulation, Change Detection, Dependency Injection, Lifecycle Hooks and more",
        "Learn in detail about custom Modules, custom Pipes and Internationalization (i18n)",
        "Learn all about Angular Elements (Advanced)"
      ],
      "course_content": {
        "Introduction": [
          "Angular Core Deep Dive - Introduction",
          "IMPORTANT - Recommended Software Versions",
          "Course Kickoff - Development Environment Setup",
          "The Typescript Jumpstart Ebook",
          "Introduction To Angular - Custom HTML Elements, Model vs View",
          "Why Angular? Learn the Key Features of Angular Core"
        ],
        "Angular Components, Core Directives and Pipes": [
          "New Section - Angular Components and Core Directives",
          "Building our First Angular Component",
          "Component Inputs and the @Input Decorator",
          "Angular Component @Output - Custom Events and Event Emitters",
          "Angular 17 Control Flow Syntax",
          "The Angular 17 @for syntax",
          "Angular @for @empty, $index and other extra options",
          "Understanding Angular 17 @for tracking functions",
          "What's Next - The ngFor Directive",
          "The Angular ngFor Core Directive",
          "Angular 17 - Comparison between @for and ngFor",
          "Angular 17 - @if Section Introduction",
          "The Angular 17 @if else syntax",
          "What's Next - The ngIf Directive",
          "Angular ngIf Directive and the Elvis Operator",
          "Angular 17 - Comparison between @if vs ngIf",
          "Angular ngClass Core Directive - Learn All Features",
          "Angular ngStyle Core Directive - When to use it and Why",
          "Angular 17 @switch Section Introduction",
          "The Angular 17 @switch syntax in action",
          "Angular ngSwitch Core Directive In Detail",
          "Angular ng-container Core Directive - When to use it?",
          "Angular Built-In Pipes - Complete Catalog"
        ],
        "Angular Local Template Querying In Depth": [
          "Angular View Child Decorator - How Does it Work?",
          "View Child - Learn the multiple View Query Configuration Options",
          "The AfterViewInit Lifecycle Hook - How deep can we query with View Child?",
          "The View Children Decorator and Query List In Detail"
        ],
        "Angular Content Projection In Depth": [
          "Angular Content Projection with ng-content In Detail",
          "Angular Content Child Decorator - In-Depth Explanation",
          "Angular Content Children and the AfterContentInit Lyfecycle Hook"
        ],
        "Angular Templates In Depth": [
          "Angular Templates Introduction with ng-template",
          "Angular Template Instantiation with ngTemplateOutlet",
          "Angular Templates as Component Inputs"
        ],
        "Angular Directives In Depth": [
          "Introduction to Angular Attribute Directives",
          "Angular Host Binding in Detail - DOM Properties vs Attributes",
          "Angular Host Listener - Handling Events in Directives",
          "Angular Directive Export As syntax - When to Use it and Why",
          "Angular Structural Directives - Understanding the Star Syntax",
          "Angular Structural Directives - Step-by-Step Implementation"
        ],
        "Angular View Encapsulation In Depth": [
          "Angular View Encapsulation - Under the Hood",
          "Angular View Encapsulation - the Host Selector",
          "Bypassing View Encapsulation with the ng-deep modifier",
          "The Host Context Selector - Theming Use Case",
          "Angular View Encapsulation - Default vs Shadow DOM"
        ],
        "Angular Injectable Services In Depth": [
          "Angular Injectable Services - New Section Introduction",
          "The Angular HTTP Client - GET calls with Request Parameters",
          "The Async Pipe - a Better way of passing Observable data to the View",
          "Angular Custom Services - The Injectable Decorator",
          "Angular Custom Service - Fetching Data",
          "Angular Custom Service - Data Modification with an HTTP PUT"
        ],
        "Angular Dependency Injection In Depth": [
          "Introduction to the Angular Dependency Injection System",
          "Angular DI - Understanding Providers and Injection Tokens",
          "Angular DI - Understanding Simplified Provider Configuration",
          "Understanding Hierarchical Dependency Injection",
          "Understanding Angular Tree-Shakeable Providers",
          "Angular DI - Injection Tokens In Detail",
          "Angular DI Decorators - Optional, Self, SkipSelf",
          "Angular DI Host Decorator and Section Conclusion"
        ],
        "Angular Change Detection In Depth": [
          "Angular Default Change Detection - How does it Work?",
          "Angular OnPush Change Detection - How does it Work?",
          "OnPush Change Detection and Observables Data Streams",
          "Angular Attribute Decorator - When to use it?",
          "Angular Custom Change Detection with ChangeDetectorRef"
        ]
      },
      "requirements": [
        "Just some Javascript, HTML & CSS",
        "No previous knowledge of Angular is required",
        "Starts with Angular Fundamentals, but quickly evolves to Intermediate to Advanced topics"
      ],
      "description": "This course will give you a solid foundation on the Angular platform by giving you with an in-depth guide tour of all the advanced features available in the Angular Core and Common modules.\nThese are the baseline modules from which all other modules in the Angular ecosystem are built with, so this is the part of Angular that you want to learn first, and in as much detail as possible.\nAngular has evolved a lot during the years, and since the introduction of Signals there is sometimes more than one way of doing things. In this course we will course each feature both ways where applicable, both with Signals and with decorators.\nIn this course, you will get an exhaustive guided tour of all the basic and also the advanced functionality available in these two Angular essential modules (including Angular Elements).\nThis guide will cover everything from the most commonly used features of Angular, up until the most advanced topics of Angular Core, such as the multiple modes of change detection, style isolation, dependency injection, content projection, internationalization, standalone components and more.\nThe course starts from the beginning, assuming no prior knowledge of Angular. Each concept is introduced based only on previous concepts, so there are no forward references to help with the learning process.\n\nEven though the course starts with the essential concepts of Angular, it will quickly evolve into intermediate to advanced topics. So no matter what your current Angular level is, there is something for everyone in this course!\nTo help you make the most out of the standalone components feature, you have available a full section on how to migrate an existing application to standalone components, and completely remove NgModules from your application.\n\nCourse Overview\nThis course will start with a quick and practical introduction to the Angular framework. You are going to set up your development environment, and using the Angular CLI you will quickly scaffold a small Angular project from scratch.\nUsing this initial playground, we are then going to answer some of the most common Angular questions: Why Angular, what are its main advantages and key features? We will answer this by demonstrating how the change detection mechanism works, and introduce some of the Angular template syntax.\nWe will then cover one by one all the features of the Angular Core and Common modules, which include:\nCustom components with @Component\nComponents @Input and @Output, event Emitters\nControl flow syntax: @if, @for, @switch\nngFor\nngIf\nngClass\nngStyle\nngSwitch\n@defer - Partial template loading\nObservables\nBuilt-In Pipes\nAsync Pipe\nCustom Pipes\n@Injectable and Custom Services\nLifecycle Hooks (ngOnInit, ngOnDestroy, etc.)\nHTTP Client - GET POST PUT DELETE\n@ViewChild and AfterViewInit\n@ViewChildren\nng-content and Component Projection\n@ContentChild and AfterContentInit\n@ContentChildren\nng-template & ng-container\nngTemplateOutlet\nAfterContentChecked and AfterViewChecked\nngDoCheck\nNormal Change Detection\n@Attribute\nOnPush Change Detection\nCustom Change Detection\nView Encapsulation modes\n@Directive\n@Host\n@HostListener\n@HostBinding\nStructural Directives\n@Inject\n@Optional\n@Self\n@SkipSelf\nHierarchical Injector\nCustom Pipe\n@NgModule\nhost, host-context, etc.\n@NgPlural and other i18n features\nAngular Elements\nAngular Standalone Components\nAngular Signals\nWhat Will You Learn In this Course?\nThis course will give you advanced practical knowledge of the Angular framework. After taking this course you will feel very comfortable building Angular Applications, as you will have a detailed understanding of everything that is made available by the Angular framework core modules.",
      "target_audience": [
        "Developers looking to gain some solid fundamentals on the Angular framework"
      ]
    },
    {
      "title": "Understanding TypeScript",
      "url": "https://www.udemy.com/course/understanding-typescript/",
      "bio": "Boost your JavaScript projects with TypeScript: Learn all about core types, generics, TypeScript + React or Node & more!",
      "objectives": [
        "Use TypeScript and its Features like Types, ES6 Support, Classes, Modules, Interfaces and much more in any of their Projects",
        "Understand what TypeScript really is about and how it works",
        "Why TypeScript offers a real advantage over vanilla JavaScript",
        "Learn about basic and advanced features (e.g., \"infer\", \"as const\", \"satisfies\" & much more!)",
        "Explore Classes, Interfaces, Generic Types, Derived Types & Other Crucial Concepts",
        "Learn TypeScript both in theory as well as applied to real use-cases and projects",
        "Learn how to combine TypeScript with ReactJS or NodeJS / Express"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome to the Course!",
          "What Is TypeScript?",
          "Why Would You Use TypeScript?",
          "Join Our Learning Community",
          "Installing & Using TypeScript",
          "Editor & Project Setup",
          "About This Course",
          "How To Get The Most Out Of The Course",
          "Course Setup & Course Code"
        ],
        "TypeScript Basics & Basic Types": [
          "Module Introduction",
          "Using Node.js To Run JavaScript Code",
          "Project Setup",
          "Working with Types & Exploring Built-in Types",
          "Vanilla JavaScript Has Types, Too!",
          "Type Inference vs Type Assignment",
          "Assigning Types To Function Parameters",
          "The \"any\" Type",
          "Understanding Union Types",
          "Arrays & Types",
          "Advanced Array Types",
          "A First Glimpse At Generic Types - Alternative Array Type Declaration",
          "Making Sense of Tuples",
          "Object Types",
          "Tricky: The \"Must Not Be Null\" Type",
          "Flexible Objects with the Record Type",
          "Working with Enums",
          "Being Specific With Literal Types",
          "Type Aliases & Custom Types",
          "Function Return Value Types",
          "The \"void\" Type",
          "The \"never\" Type",
          "Functions As Types",
          "null & undefined - Special Types",
          "Inferred null & A First Look At Type Narrowing",
          "Forced \"Not Null\" And Optional Chaining",
          "Type Casting",
          "The \"unknown\" Type",
          "Optional Values & TypeScript",
          "Nullish Coalescing"
        ],
        "The TypeScript Compiler (and its Configuration)": [
          "Module Introduction",
          "TypeScript Project Setup & Creating a tsconfig.json File",
          "Exploring tsconfig Options: Target & Libs",
          "Controlling File Input & Emission",
          "Configuring Type Checking",
          "Configuring Code Quality Checks",
          "Example tsconfig.json & Deep Dive",
          "Compiling with tsconfig",
          "Using TypeScript's Watch Mode",
          "Installing Type Packages"
        ],
        "TypeScript Essentials Demo Project": [
          "Module Introduction",
          "Using Node.js To Run Compiled JS Code",
          "Getting Started & First Steps",
          "Creating a First Custom Type",
          "Defining a Function with a Union Type Return Value",
          "Adding Application Logic",
          "Connecting Functions & Passing Values",
          "Compilation & Execution"
        ],
        "Next-generation JavaScript & TypeScript": [
          "Module Introduction",
          "\"let\" and \"const\"",
          "Arrow Functions",
          "Default Function Parameters",
          "The Spread Operator (...)",
          "Rest Parameters",
          "Array & Object Destructuring",
          "How Code Gets Compiled & Wrap Up",
          "Useful Resources & Links"
        ],
        "Classes & Interfaces": [
          "Module Introduction",
          "What are Classes?",
          "Creating a First Class",
          "A Useful TypeScript Shortcut & Compiling to JavaScript",
          "Making Sense of \"public\" and \"private\"",
          "Marking Fields as \"readonly\"",
          "Understanding Getters",
          "Setting Values with Setters",
          "Exploring Static Properties & Methods",
          "Understanding Inheritance",
          "The \"protected\" Modifier",
          "Making Sense Of Abstract Classes",
          "Introducing Interfaces",
          "Creating a First Interface",
          "Interfaces As Object Types",
          "Interfaces vs Type Aliases & Understanding Declaration Merging",
          "Using Interfaces To Define Function Types",
          "Implementing Interfaces",
          "Ensuring Base Types with Interfaces",
          "Extending Interfaces",
          "How Interfaces Get (Not) Compiled To JavaScript"
        ],
        "Advanced Types": [
          "Module Introduction",
          "Intersection Types",
          "More on Type Guards",
          "Discriminated Unions",
          "Type Guards via \"instanceof\"",
          "\"Outsourcing\" Type Guards & Using Type Predicates",
          "Function Overloads",
          "Working with Function Overloads",
          "Making Sense of Index Types",
          "Constant Types with \"as const\"",
          "Revisiting the \"Record\" Type",
          "The \"satisfies\" Keyword",
          "Advanced Types"
        ],
        "Generic Types": [
          "Module Introduction",
          "A Generic Type We Already Know",
          "Understanding Generic Types",
          "Creating & Using a Generic Type",
          "Generic Functions & Inference",
          "Working with Multiple Generic Parameters",
          "Generics & Constraints",
          "Constraints & Multiple Generic Types",
          "Working with Generic Classes & Interfaces",
          "Summary"
        ],
        "Classes & Generics - Demo Project": [
          "Module Introduction",
          "What Is A Linked List?",
          "Creating List & Node Classes",
          "Making the Class Generic",
          "Adding an \"add\" Method",
          "Adding Items More Efficiently",
          "Accessing the Data & Compiling + Running the Code",
          "Finishing the Linked List"
        ],
        "Deriving Types From Types": [
          "Module Introduction",
          "Using \"typeof\"",
          "\"typeof\" & A More Useful Example",
          "Another Great Use-case for \"typeof\"",
          "Extracting Keys with \"keyof\"",
          "\"keyof\" & A More Useful Example",
          "Understanding Indexed Access Types",
          "Accessing Array Elements with Indexed Access Types",
          "Introducing Mapped Types",
          "Readonly Types & Optional Mapping",
          "Exploring Template Literal Types",
          "Introducing Conditional Types",
          "Conditional Types - Another Example",
          "Making Sense of the \"infer\" Keyword",
          "TypeScript's Got You Covered: Built-in Utility Types"
        ]
      },
      "requirements": [
        "JavaScript knowledge is required, though you don't need to be an Expert",
        "NO prior TypeScript experience is required",
        "ES6 Knowledge is a plus but not required"
      ],
      "description": "March 2025: BIG COURSE UPDATE\nRe-recorded large parts of the course to cover missing TypeScript concepts (e.g., \"satisfies\"), improve explanations and add extra examples & demo projects.\nAdded more than 10h of new content!\n---\nLearn what TypeScript is, why it really is a powerful addition to JavaScript, what its features are and how to use it! Learn why TypeScript is amazing, how it improves your JavaScript code and how it helps you avoid nasty bugs and errors!\nThis course takes you from the very basics and its most important feature (types!) to the point where you're able to use TypeScript in any of your projects. ReactJS projects included!\nAs TypeScript is developed by Microsoft and strongly advertised and used by Angular 2+ (Google) and other popular libraries, it's here to stay. Indeed, TypeScript is one of the most popular web development languages you can learn these days!\nGain an edge today and be amongst the first to really understand TypeScript!\nLearn how you can use TypeScript to bring modern JS features like destructuring, arrow functions or classes to any environment and codebase - even if it does not support those features yet!  Understand which types you may use and how you can build your own types. Learn how to write better code with types and with the many features offered by TypeScript!\nBut, in this course, we'll not stop after the basics! You will also learn about more advanced features (like decorators) and also how to set up workflows with  TypeScript. This includes a TypeScript-only workflow as well as a webpack workflow.\nYou'll also learn that you're not limited to Angular or plain JavaScript/ TypeScript projects. Instead, a complete module covers how you may use TypeScript with ReactJS and improve your React code with TypeScript as well.\nPractice what you learn!\nWatching videos is a great way to learn. And to a lot of students, it's the best way. If you also want to practice the things you learn, this course offers you more than that though. Because this course comes with plenty of exercises (and solutions, of course) in addition to all the high-quality learning videos.\nSo much Content!\nI'm not a fan of these courses which teach you the basics and then leave you alone.\nThat's why in this course you'll get insights into:\nTypes and how to use them\nHow the TypeScript compiler works (and how you may configure it)\nES6 features with TypeScript\nAdvanced TypeScript Features like \"infer\", Mapped Types, Constant Types & Much More!\nClasses in TypeScript\nNamespaces and modules\nInterfaces\nGenerics\nDecorators\nHow to integrate Third-Party JavaScript libraries like Zod into your TypeScript projects\nHow to set up a TypeScript project with Webpack\nOr how to set up a plain-TypeScript workflow\nHow to use TypeScript together with ReactJS\nHow to use TypeScript together with Node/ Express (incl. native Node.js TypeScript support)\nReal projects and use-cases!\nAnd so much more!",
      "target_audience": [
        "This course is for every student who wants to extend his or her horizon beyond vanilla JavaScript",
        "Everyone learning Angular should definitely understand how TypeScript works"
      ]
    },
    {
      "title": "API Crash Course: How to Create, Test, & Document your APIs",
      "url": "https://www.udemy.com/course/api-course/",
      "bio": "Everything you need to know to understand what an API is",
      "objectives": [
        "What is an API",
        "Difference between API & Webservice",
        "HTTP Basics",
        "Difference between XML & JSON",
        "How to create a mock API",
        "How to test APIs using Postman"
      ],
      "course_content": {},
      "requirements": [
        "English knowledge",
        "PC or Laptop",
        "Internet Connection"
      ],
      "description": "Hello\nIn this course we will explain what an API is.\n\n\nAPI is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other. Each time you use an app like Facebook, send an instant message, or check the weather on your phone, you’re using an API.\n\n\nWhat exactly is an API? Finally learn for yourself in this helpful video from MuleSoft, the API experts.\n\n\nWhen you use an application on your mobile phone, the application connects to the Internet and sends data to a server. The server then retrieves that data, interprets it, performs the necessary actions and sends it back to your phone. The application then interprets that data and presents you with the information you wanted in a readable way. This is what an API is - all of this happens via API.\n\n\nTo explain this better, let us take a familiar example.\n\n\nImagine you’re sitting at a table in a restaurant with a menu of choices to order from. The kitchen is the part of the “system” that will prepare your order. What is missing is the critical link to communicate your order to the kitchen and deliver your food back to your table. That’s where the waiter or API comes in. The waiter is the messenger – or API – that takes your request or order and tells the kitchen – the system – what to do. Then the waiter delivers the response back to you; in this case, it is the food.\n\n\nHere is a real-life API example. You may be familiar with the process of searching flights online. Just like the restaurant, you have a variety of options to choose from, including different cities, departure and return dates, and more. Let us imagine that you’re booking you are flight on an airline website. You choose a departure city and date, a return city and date, cabin class, as well as other variables. In order to book your flight, you interact with the airline’s website to access their database and see if any seats are available on those dates and what the costs might be.\n\n\nHowever, what if you are not using the airline’s website––a channel that has direct access to the information? What if you are using an online travel service, such as Kayak or Expedia, which aggregates information from a number of airline databases?\n\n\nThe travel service, in this case, interacts with the airline’s API. The API is the interface that, like your helpful waiter, can be asked by that online travel service to get information from the airline’s database to book seats, baggage options, etc. The API then takes the airline’s response to your request and delivers it right back to the online travel service, which then shows you the most updated, relevant information.",
      "target_audience": [
        "Software Engineers",
        "Software Developers",
        "Software Testers",
        "CS Students"
      ]
    },
    {
      "title": "ASP.NET Core Identity & Security",
      "url": "https://www.udemy.com/course/aspnet-core-2-security-and-identity-management-with-c/",
      "bio": "ASP.NET Core Identity , 2FA/MFA, OAuth, Jason Web Token (Jwt), Microservices Security and OWASP",
      "objectives": [
        "Implementing Sign Up and Sign-in with E-mail confirmation",
        "Implementing Tw-Factor Authentication",
        "Authorization with Roles",
        "Implementing Claim-based Authorization with Policies",
        "Authentication with Json Web Token to Secure Microservices",
        "Adding Facebook Login to Your ASP .NET Core Websites",
        "Protect Your Web Application Against Common Security Attacks",
        "Web Application Firewalls (WAF)"
      ],
      "course_content": {},
      "requirements": [
        "Beginner-level knowledge of ASP .NET Core"
      ],
      "description": "It has now been updated for .NET 9 and Microservices Architecture.\n\nWith our comprehensive course, unlock the full potential of cutting-edge ASP .NET Core identity management and security. Strengthen your application's defenses against cyber threats through hands-on expertise and in-depth knowledge.\n\n\nThis course delves into essential topics, starting with robust cookie-based authentication and advancing to intricate techniques like role-based and claims-based authorization. Explore OAuth authentication with popular platforms such as Facebook and Google, implement Two-Factor Authentication for an additional layer of security, and harness token-based authentication for creating secure microservices systems using JSON Web Token (JWT).\n\n\nDive into ASP .NET Core security principles, including a comprehensive understanding of OWASP, and learn how to safeguard web applications using Web Application Firewalls (WAF). Go beyond the fundamentals with insights into Cyber Security Management, covering third-party WAF systems, including the industry-leading Cloudflare. Gain a holistic perspective that includes both architectural and managerial considerations.\n\n\nOur course is designed for interactive learning, featuring a dynamic Q&A section for quick, insightful responses to your queries.\n\nEnroll today and embark on a transformative journey to become a security-savvy developer in ASP .NET Core.\n\n\nJoin our community and equip yourself with the skills needed to navigate the complex landscape of modern web application security.",
      "target_audience": [
        "C# Developers",
        "ASP .NET Developers",
        "API and/or Microservices Developers",
        "Software Architects"
      ]
    },
    {
      "title": "SAP - Learn SAPUI5 Professional Development",
      "url": "https://www.udemy.com/course/learn-sapui5/",
      "bio": "Learn SAP UI5 / OpenUI5 In Detail: Basic & Advanced Levels, Step By Step, With The Help of The Best Open UI5 Experts",
      "objectives": [
        "Create their own end to end SAPUI5 / OpenUI5 App",
        "Work as SAP UI5 professional consultants",
        "Make existing SAPUI5 Apps better with responsive and more UX centric development",
        "Understand all the concepts related to SAP UI5/ Open UI5 web app development",
        "Support existing SAPUI5 or SAP Fiori projects"
      ],
      "course_content": {
        "Introduction To Course": [
          "Introduction to the course"
        ],
        "Prerequisites For Using This Course and Links": [
          "***Important - Links to Code Resources ****",
          "Prerequisite"
        ],
        "Resources and Exercise Files": [
          "All Development Code and Exercise Files"
        ],
        "SAP UI5 Basics": [
          "What Is SAPUI5",
          "UI5 Libraries",
          "SAP UI5 App and Fiori",
          "Setting Up The Development Environment",
          "Create Hello World App In UI5",
          "SAP UI5 Basics"
        ],
        "Use Of Wireframe and Control Flow In App": [
          "Create a Simple App",
          "Simple App Creation",
          "Simple Application Control Flow",
          "Usage of MVC and Extending the Application",
          "Two Page App Wireframe and Coding in Eclipse",
          "Wireframing and app control flow"
        ],
        "Major UI5 Components and Databinding": [
          "Designing a Simple Form With UI5 Elements - Part 1",
          "Designing a Simple Form With UI5 Elements - Part 2",
          "Concept of Data Binding",
          "Binding Modes",
          "Data Binding Using Simple App",
          "Basic List",
          "List Aggregation Binding",
          "sap.m Table",
          "sap.ui Table",
          "Tiles Basic",
          "Tiles With Binding",
          "Data Binding Factory Function Using List",
          "Named Model",
          "Major UI5 Components and Databinding"
        ],
        "Using Chrome Development Toolkit": [
          "Chrome Dev Tolkit Part1- Element Tab and Style Tab",
          "Chrome dev toolkit Part2 - Console Tab, Source Tab and Network Tab",
          "Browser Compatibility",
          "Chrome Development Toolkit"
        ],
        "Styling And Theming For UI5 App": [
          "Styling Exercise with our Simple App",
          "Deep Dive in Styling for Form Element - Part 1",
          "Deep dive in Styling for Form Element - Part 2",
          "Theme Designer",
          "Styling and Theming"
        ],
        "Using Events and Handling Events": [
          "Basic Events",
          "Using event case study for real project part 1 - List",
          "Using event case study for real project part 2 - List",
          "Calling Event Listener Function",
          "Event in Table",
          "Advanced Event Handling",
          "Event Capturing and Bubbling",
          "Events"
        ],
        "Miscellaneous Controls In UI5": [
          "Use of UX3(Shell) Control",
          "Use of Fragments",
          "Use of Split Screen Application"
        ]
      },
      "requirements": [
        "You should have a very basic understanding of Javascript and HTML."
      ],
      "description": "SAPUI5 / OpenUI5 is the top trend in the SAP Technical marketplace and almost all the major projects now require this skill-set.\nThe development with SAP UI5 / Open UI5 involves new and cutting edge technologies, responsible for bringing a lot of aspects related to web app development, which makes it difficult to learn.\nThis course is the final result of months of preparation and planning to compile all the details in making the learning process easy, complete and fast.\nWhat are benefits of this course :\nIf you want to learn SAPUI5/Open UI5 then this course will be for you: it comes with rich content that takes you from writing a simple \"Hello World\" app to building your own responsive SAP UI5 complex app.\nThe majority of the content is hands-on, which involves a lot of challenges and exercises and makes the course interesting and engaging.\nThe course covers not only individual topics but also describes real world scenarios where the concepts are used.\nThe course also shares SAPUI5 best practices of implementing a concept to a real SAP global project.\nThe course also shares a bunch of code snippets and examples in a cloud based IDE, where students can have 24*7 access and which is going to be crucial during the development phase of the project. The students will have the best SAPUI5 tutorial examples they can find.\nThe course examples were carefully selected to make the course fun, interesting and engaging to learn.\nThe development scenarios include simulating common mistakes that UI5 developers frequently make, so they can learn exactly how to fix fast.\nThe course also has a UI5 final project to put all the learning into practice.The final project was carefully crafted to make students understand real world scenarios and the roles they will have to perform in team.\nThe course gives importance to all aspects of SAPUI5/OpenUI5 development, may it be wire-framing, design and analysis, development or styling and theming.\nThe course shares information about lots of tools and plugins, which will boost the developers' productivity and efficiency.",
      "target_audience": [
        "This course is for SAP Technical consultants who want to learn SAPUI5/OpenUI5 development.",
        "This course will help an SAP job aspirant to get a good hold in SAPUI5 and become an SAP UI5 consultant.",
        "This course will help SAP Functional consultants to learn SAPUI5/OpenUI5 library better and make them more independent.",
        "This course will help existing SAPUI5 developers to understand the framework in depth and better."
      ]
    },
    {
      "title": "Server Side Rendering with React and Redux",
      "url": "https://www.udemy.com/course/server-side-rendering-with-react-and-redux/",
      "bio": "Build React, Redux, and React Router apps using Server Side Rendering (SSR), Isomorphic, and Universal JS techniques",
      "objectives": [
        "Understand the challenges of Server Side Rendering",
        "Build a server side rendering boilerplate project",
        "Use React, Redux, and React Router to conquer Search Engine Optimization",
        "Master techniques for data loading on the server",
        "Construct server architectures that can easily scale for large apps"
      ],
      "course_content": {
        "Getting Started": [
          "A Few Notes",
          "Course Resources",
          "Join Our Community!",
          "Why Server Side Rendering?",
          "SSR Overview"
        ],
        "Let's Get Coding!": [
          "App Overview",
          "Server Architecture Approach",
          "Starter Package.Json File",
          "Boilerplate Setup",
          "Express Setup",
          "The RenderToString Function",
          "JSX on the Server",
          "Server Side Webpack",
          "Breather and Review"
        ],
        "Server Configuration": [
          "Rebuilding and Restarting",
          "Server Side Rendering, Isomorphic Javascript, Universal Javascript",
          "Client Side JS",
          "Client Bundles",
          "The Public Directory",
          "Why Client.js?",
          "Client Bootup"
        ],
        "Refactoring for Cleaner Code": [
          "Merging Webpack Config",
          "Single Script Startup",
          "Ignoring Files with Webpack",
          "Renderer Helper"
        ],
        "Adding Navigation": [
          "Implementing React Router Support",
          "BrowserRouter vs StaticRouter",
          "Route Configuration",
          "HTML Mismatch",
          "More on Route Configuration",
          "Routing Tiers"
        ],
        "Integrating Support for Redux": [
          "The Users API",
          "Four Big Challenges",
          "Browser Store Creation",
          "Server Store Creation",
          "FetchUsers Action Creator",
          "The Users Reducer",
          "Reducer Imports",
          "UsersList Component",
          "Babel Polyfill"
        ],
        "Server Side Data Loading": [
          "Detecting Data Load Completion",
          "Solution #1 for Data Loading",
          "Solution #2 for Data Loading",
          "The React Router Config Library",
          "Updating Route Uses",
          "The MatchRoutes Function",
          "LoadData Functions",
          "Store Dispatch",
          "Waiting for Data Load Completion",
          "Breather and Review"
        ],
        "Organization with Page Components": [
          "The Page Approach",
          "Refactoring to Pages",
          "Refactoring Page Exports",
          "Client State Rehydration",
          "More on Client State Rehydration",
          "Dumping State to Templates",
          "Mitigating XSS Attacks"
        ],
        "Authentication in a Server Side Rendering World": [
          "Authentication Issues",
          "Authentication via Proxy",
          "Why Not JWT's?",
          "Proxy Setup",
          "Renderer to API Communication",
          "Axios Instances with Redux Thunk",
          "Client Axios Instance",
          "Server Axios Instance",
          "The Header Component",
          "Adding an App Component",
          "Building the Header",
          "Fetching Auth Status",
          "Calling FetchCurrentUser",
          "Connecting the Header",
          "Header Customization",
          "Header Styling"
        ],
        "Error Handling": [
          "404 Not Found Pages",
          "Implementing the NotFound Page",
          "StaticRouter Context",
          "The Admin Feature",
          "Admins Action Creator and Reducer",
          "Admins Route Component",
          "Testing Admins Route",
          "Promise.all Failures",
          "Error Handling Solution #1",
          "Error Handling Solution #2",
          "Error Handling Solution #3",
          "The Require Auth Component",
          "Implementing Require Auth",
          "Require Auth in Use",
          "Handling Redirects"
        ]
      },
      "requirements": [
        "This is not a beginner course. You must be familiar with React, Redux, React Router, and Express"
      ],
      "description": "Note: This course assumes you've got the basics of React, Redux, and Express down.  Check out my course 'Node with React', its the perfect preparation!\n\nGo beyond the basics of React and Redux!  This course will teach you to combine the ultra-popular React v16, Redux, React Router, and Express technologies to build a server-side-rendered web application.\nAll of my courses are 'learn-by-doing': no boring endless lectures with Powerpoints, only live, interactive coding examples.  In this course we'll build one application that profiles the challenges of server side rendering with React, Redux, React Router, and Express.  By putting each concept into a real app, you'll get a better idea of when to use each unique and powerful feature.\nEver wonder why there are so few courses online that teach server side rendering techniques?  Sure, there are blog posts that show a tiny portion of a server side rendered app, but there are nearly no resources online to give you the full server side rendering experience from start to finish.  This course is the most complete resource online for learning about exactly why server side rendering is so challenging.  You'll learn the biggest hurdles, along with multiple solutions to each major problem, giving you the toolset you need to tackle server side rendering techniques in your own applications.\nHere's what we'll learn:\nLearn the architectural considerations of building a server side rendered app\nConnect a Webpack-powered front and and backend app together\nCommunicate data from your server to client using Redux initial state to your React application\nSecure your application from common XSS attacks caused by state rehydration\nUnderstand how to route user requests on the front end with React Router and on the backend with Express\nHandle errors and redirects properly that occur during the server rendering process\nAuthenticate your users with cookie-based authentication during the server rendering phase\nUnderstand why JWT's are not appropriate for use in a server rendered app\nEnhance authentication flows in your app with Google OAuth authentication\nI've built the course that I would have wanted to take when I was learning to build server side rendered apps. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Engineers looking to build new apps with server side rendering",
        "Engineers who wants to understand the challenges of Isomorphic Javascript"
      ]
    },
    {
      "title": "Docker for .NET Developer - Getting Started",
      "url": "https://www.udemy.com/course/docker-for-dot-net-developer/",
      "bio": "Explore fundamentals of Docker as we build docker file for .NET Core Application [.NET 8]",
      "objectives": [
        "Docker fundamentals",
        "Container and Image in Docker",
        "Docker Desktop",
        "Docker Instructions",
        "DockerFile",
        "Host Static HTML in docker Container",
        ".NET applications and DockerFile",
        "Manually create dockerfile for .NET projects",
        "Push Image to DockerHub",
        "Deploy Containers to Azure"
      ],
      "course_content": {
        "Docker Fundamentals": [
          "Welcome",
          "Topics covered",
          "What is docker",
          "Download Snippets",
          "Docker and image",
          "Image layers",
          "Image and container",
          "Docker vs VM",
          "Install desktop docker",
          "Always run docker desktop",
          "Docker Fundamentals",
          "Section Notes"
        ],
        "First Image and Container": [
          "1 First Image and Container",
          "Remove Image and Container",
          "3 Run a Container for 10 seconds",
          "4 Docker Run withot image",
          "5 dot net image",
          "test",
          "Section Notes"
        ],
        "Deploy Static HTML to docker container": [
          "1 Webserver and Static Html Page",
          "2 First docker File",
          "3 Build a docker Image",
          "4 Docker container serving html",
          "5port mapping",
          "6 Tagging Image and Detaching Docker Run",
          "7 New Versions of Image",
          "8 Docker Container Commands",
          "9 Removing docker images and container",
          "Deploy Static HTML to Docker container",
          "Section Notes"
        ],
        "Docker File Instructions": [
          "FROM",
          "2 COPY",
          "WORKDIR",
          "ARG and ENV",
          "EXPOSE",
          "Create Web Application",
          "RUN",
          "ENTRYPOINT",
          "BUILD",
          "RUN",
          "Clean Up",
          "VOLUMES",
          "Docker File Instructions",
          "Section Notes"
        ],
        "Autogenerated .NET Docker file": [
          "Create Application with Docker",
          "Understanding the Docker file in Dot Net Project Part 1",
          "Understanding the Docker file in Dot Net Project Part 2",
          "Add Docker Support"
        ],
        "Manual docker file for .NET Application": [
          "Create New Project and Add Docker File",
          "Run Website Locally",
          "3 Run application on docker"
        ],
        "DockerHub Repository": [
          "4 Login to Docker from Powershell",
          "5 Push Image to Docker Hub",
          "6 Pull Image and build container",
          "7 Set environment variable in docker file and push new tag",
          "Lecture Notes"
        ],
        "Deploy Container to Azure": [
          "8 Basic Azure Deployment",
          "9 Deploy on Container App",
          "Azure Clean Up"
        ],
        ".NET Project Assignment": [
          "Create .NET Project with solution and project in different directory",
          "Assignment Solution"
        ]
      },
      "requirements": [
        "Basics of .NET Core"
      ],
      "description": "For Udemy Business Students : This course requires you to download Docker Desktop. If you are a Udemy Business user, please check with your employer before downloading software.\n\n\nDocker is a buzz word that is gaining more and more attention in the tech world. And that is for a reason!\nBut being a .NET developer if you have to learn docker, it can sometimes be a patchy road! Not because it is difficult but because it is not exactly programming language! It is a different domain but in order to be a full stack developer now docker is becoming one of the required tech stack.\nThis course is aimed exactly at that requirement! In under 3 hours we will start from ground zero in docker and explore all the fundamentals as we will see the default built in docker file in a .NET application and then build a dockerfile manually for .NET application.\n\n\nWe will explore basic terminology when it comes to docker like images, containers, create our image and publish them to azure containers and much more!\n\n\nThis will be a hands on course with docker as we will spend time to understand docker and host a simple html in docker before we dive into docker support for .NET applications.\n\n\nThis course has very special focus for .NET developers and how they can easily grasp docker, and deploy their applications.",
      "target_audience": [
        "Anyone getting started with docker",
        "Any .NET developer looking to explore Docker"
      ]
    },
    {
      "title": "Learn Web Designing & HTML5/CSS3 Essentials in 4-Hours",
      "url": "https://www.udemy.com/course/build-beautiful-html5-website/",
      "bio": "Convert Photoshop Designs into Stunning HTML5 & CSS3 websites with confidence. Absolutely no prior experience necessary!",
      "objectives": [
        "In this course, you will learn how to slice up a Photoshop mockup and hand-code valid HTML5 & CSS3",
        "By the end of the course, you will be able to turn a PSD into a beautiful, usable, and valid HTML5 & CSS3 website"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to PSD to HTML5 & CSS3"
        ],
        "Preparation": [
          "What we are building",
          "What you need to start",
          "Setting up our Folder Structure",
          "Code Chunks"
        ],
        "The PSD": [
          "Becoming Familiar with the Layout",
          "Gathering Assets & Saving for Web",
          "Photoshop Pop Quiz!"
        ],
        "HTML": [
          "Coding an HTML5 Skeleton",
          "Coding the \"Header\"",
          "Coding the \"Content Section\"",
          "Coding the \"Footer\"",
          "HTML5 Pop Quiz!"
        ],
        "CSS": [
          "Adding a Stylesheet to your Website",
          "Normalize vs. Reset: What is the difference?",
          "Global Styles & Typography",
          "Layout: Styling the Navigation Bar",
          "Layout: Styling the Header",
          "Layout: Styling the \"Content Section\" — Part I",
          "Layout: Styling the \"Content Section\" — Part II",
          "Layout: Styling the Footer",
          "CSS3 Pop Quiz!"
        ],
        "Validation": [
          "Validating your HTML5",
          "Validating your CSS3",
          "Validation Pop Quiz!"
        ],
        "Conclusion": [
          "Review"
        ],
        "Brand New Bonus Lectures!": [
          "How to Buy Domain & Hosting for your Website",
          "How to Code a CSS Sticky Footer"
        ]
      },
      "requirements": [
        "Adobe Photoshop CS3 or higher",
        "Very basic knowledge of HTML & CSS",
        "Text Editor (TextWranger, Espresso, or Coda recommended)"
      ],
      "description": "** Course Updated November 26th, 2014! **\nNew lecture added: Code a CSS Sticky Footer\n- - -\nThe Best Way to Learn HTML5 & CSS3\nPSD to HTML5/CSS3 is a simple course that will teach you to take a Photoshop Mockup Design and hand-code it into a beautiful, semantic, valid HTML5 & CSS3 website.\nStart Speaking the Language Right Away\nJust like learning a human language, the best way of learning is by speaking from day 1—this course is similar in the sense that we'll begin speaking HTML5 & CSS3 right away!\nI believe this is the best way to learn HTML5 and CSS3.\nIt's simple. It's easy. You can do it!\nIf you’ve always wanted to know how to build your own website, or have wanted a simple and comprehensive way to dive into PSD to HTML5 & CSS3, this course is definitely for you.\nReal World Example\nOne of my students, who had no previous web design experience, took my course and ran with the skills he acquired. He built a brand new website for his Barbershop in Vancouver!\nSo, what are you waiting for?\nDo you want to hand-code your first website in 4-hours? Let's do this!",
      "target_audience": [
        "This course is intended for beginners who have minimal knowledge or experience in Photoshop, and coding HTML & CSS",
        "A very basic understanding of HTML, CSS, and Photoshop is recommended",
        "First year web design students can greatly benefit from this course!"
      ]
    },
    {
      "title": "NestJS Zero to Hero - Modern TypeScript Back-end Development",
      "url": "https://www.udemy.com/course/nestjs-zero-to-hero/",
      "bio": "Develop and deploy enterprise back-end applications following best practices using Node.js and TypeScript",
      "objectives": [
        "Becoming familiar with the NestJS framework and its components",
        "Designing and developing REST APIs performing CRUD operations",
        "Authentication and Authorization for back-end applications",
        "Using TypeORM for database interaction",
        "Security best practices, password hashing and storing sensitive information",
        "Persisting data using a database",
        "Deploying back-end applications at a production-ready state to Amazon Web Services",
        "Writing clean, maintainable code in-line with industry standards",
        "Utilising the NestJS Command Line Interface (CLI)",
        "Using Postman for testing back-end services",
        "Using pgAdmin as an interface tool to manage PostgreSQL databases",
        "Implement efficient logging in a back-end application",
        "Environment-based configuration management and environment variables",
        "Implementing data validation and using Pipes",
        "Guarding endpoints for authorized users using Guards",
        "Modelling entities for the persistence layer",
        "TypeScript best practices",
        "Handling asynchronous operations using async-await",
        "Using Data Transfer Objects (DTO)",
        "Hands-on experience with JSON Web Tokens (JWT)",
        "Unit testing NestJS applications",
        "Using GraphQL with NestJS",
        "Database persistence with MongoDB"
      ],
      "course_content": {
        "Introduction to NestJS & Pre-requisites": [
          "Welcome to the course!",
          "Installing Node.js and Yarn",
          "Installing the NestJS CLI",
          "(Optional) Installing VSCode and Extensions"
        ],
        "Task Management Application (REST API)": [
          "Project Overview",
          "Creating our project via the NestJS CLI",
          "NestJS Project Structure",
          "Introduction to NestJS Modules",
          "More Valuable Content",
          "Creating a Tasks Module",
          "Introduction to NestJS Controllers",
          "Creating at Tasks Controller",
          "Introduction to NestJS Providers and Services",
          "Creating a Tasks Service",
          "Feature: Getting All Tasks",
          "Installing Postman",
          "Creating a Postman Collection",
          "Defining a Task Model",
          "Feature: Creating a Task (Part 1 - Controller)",
          "Feature: Creating a Task (Part 2 - Service)",
          "Intro to Data Transfer Objects (DTO)",
          "Implementing CreateTaskDto",
          "Feature: Getting a Task by ID",
          "Challenge: Deleting a Task",
          "Solution: Deleting a Task",
          "Challenge: Update Task Status",
          "Solution: Update Task Status",
          "Feature: Searching and Filtering",
          "Summary Quiz",
          "Section Code"
        ],
        "Validation and Error Handling": [
          "Introduction to NestJS Pipes",
          "ValidationPipe: Creating a Task",
          "Error Handling: Getting a non-existing Task",
          "Error Handling: Deleting a non-existing Task",
          "Validation: Update Task Status",
          "Challenge: Validating Task Filtering and Search",
          "Section Code"
        ],
        "Data Persistence - PostgreSQL and TypeORM": [
          "Introduction to Persistence",
          "Installing Docker and pgAdmin",
          "Running PostgreSQL via Docker",
          "Setting up pgAdmin",
          "Creating a Database using pgAdmin",
          "Introduction to TypeORM",
          "Setting up a Database Connection",
          "Creating a Task Entity",
          "Active Record VS Data Mapper Patterns",
          "Creating a Tasks Repository",
          "Refactoring for Tasks Service",
          "Persistence: Getting a Task by ID",
          "Persistence: Creating a Task",
          "(Challenge) Persistence: Deleting a Task",
          "(Solution) Persistence: Deleting a Task",
          "Persistence: Update Task Status",
          "Small Change Needed",
          "Persistence: Getting All Tasks",
          "Section Code"
        ],
        "Auth Part 1 - Authentication": [
          "Intro to Authentication and Authorization",
          "Setting up AuthModule, User Entity and User Repository",
          "Feature: Signing Up",
          "Validation: Credentials and Password Strength",
          "Error Handling: Username Conflicts",
          "Securely Storing Passwords",
          "Password Hashing With Bcrypt",
          "Feature: Signing In",
          "Intro to JSON Web Tokens (JWT)",
          "Setting up the JWT Module and Passport.js",
          "Signing a JWT Token on Sign In (Authentication)",
          "Implementing JWT Validation",
          "Custom @GetUser Decorator",
          "Guarding the Tasks Routes",
          "Section Code"
        ],
        "Auth Part 2 - Task Ownership and Restrictions": [
          "Tasks and Users - Database Relation",
          "Make Users Own Tasks",
          "Serialize User Data",
          "Restricting Getting All Tasks",
          "BUG FIX: Getting All Tasks",
          "Restricting Getting a Task By ID",
          "Restricting Status Updates",
          "Restricting Deleting A Task",
          "Section Code"
        ],
        "THANK YOU!": [
          "THANK YOU! (+ Promotion)"
        ],
        "(Bonus) Logging": [
          "Introduction to Logging",
          "Implementing Logs in our NestJS app",
          "Section Code"
        ],
        "(Bonus) Configuration Management": [
          "Introduction to Configuration",
          "Windows: Environment Variables",
          "Quick Intro to Environment Variables",
          "Setting up ConfigModule",
          "TypeORM Configuration",
          "Config Schema Validation",
          "JWT Secret Configuration",
          "Section Code"
        ],
        "(Bonus) Front-end Application": [
          "Front-end Application",
          "Section Code"
        ]
      },
      "requirements": [
        "Having a basic understanding of JavaScript and/or NodeJS",
        "Having basic knowledge of TypeScript is recommended, but not required"
      ],
      "description": "NestJS is a Node.js back-end development framework built upon Express, leveraging the power of TypeScript.\nNestJS leverages the incredible popularity and robustness of JavaScript as a language and Node.js as a technology. It is inspired by common libraries and frameworks such as Angular, React and Vue which improve developer productivity and experience.\nEven considering the amount of superb libraries, helpers and tools that exist for server-side Node.js, none of them effectively solve the main problem - the architecture of an application.\nNestJS provides an out-of-the-box application architecture which allows developers and teams to create highly testable, scalable, loosely coupled and easily maintainable applications.\n\n\nRecently, the NestJS framework is gaining extreme popularity due to its incredible features;\nLeverages TypeScript - strongly typed language which is a super-set of JavaScript\nSimple to use, easy to learn and easy to master\nPowerful Command Line Interface (CLI) tool that boosts productivity and ease of development\nDetailed, well-maintained documentation\nActive codebase development and maintenance\nOpen-source (MIT license)\nSupports dozens nest-specific modules that help you easily integrate with common technologies and concepts such as TypeORM, Mongoose, GraphQL, Logging, Validation, Caching, Websockets and much more\nEasy of unit-testing applications\nMade for Monoliths and Micro-services (entire section in the documentation regarding the Microservice type of a NestJS application, as well as techniques and recipes).\nIn this course I am going to guide you through the process of planning, developing and deploying a fully-featured back-end application, based on my experience developing and maintaining systems that support dozens of millions of concurrent users at scale.",
      "target_audience": [
        "Intermediate JavaScript developers who want to dive into back-end development",
        "Any developers willing to apply TypeScript on the back-end",
        "Developers eager to learn how to develop performant, secure and production-ready REST APIs following best practices",
        "Developers who want to learn how to deploy their application to the cloud (Amazon Web Services)",
        "Developers who want to follow building a practical, real-world application from zero to production"
      ]
    },
    {
      "title": "HTML5 Specialist: Comprehensive HTML5 Training",
      "url": "https://www.udemy.com/course/html5-specialist/",
      "bio": "Earn a professional credential while learning HTML5.",
      "objectives": [
        "How to create a proper HTML5 scaffolding for the type of application that you’re creating. How should HTML5 differ for web and mobile applications?",
        "How to correctly markup text so that it is sized properly across the variety of screen sizes and densities used by consumers",
        "How to properly integrate code written in CSS and PHP as external or internal code listings.",
        "How to select the most efficient tools and environments for HTML5 authoring and testing.",
        "Understand how to upload content to a web server for public consumption. You’ll also cover how to set up a test server environment locally.",
        "How to create internal and external links within HTML5 documents.",
        "Creating Meta Tags that are properly designed for optimal display on Google and other search engines.",
        "Strategically use HTML5 comments to document your code.",
        "A unique strategy to use HTML5 comments to debug code and quickly find errors.",
        "How to create list based content using ordered lists, unordered lists and custom list bullets for custom branding",
        "How to display images and how to properly optimize images for display on web and mobile devices.",
        "An infrequently used strategy to boost your Search Engine Optimization value using images",
        "How to create beautiful information tables that are easy to both create and read",
        "How to use the hexadecimal color system and apply hexadecimal colors to elements in your HTML5",
        "How to create usable, functional forms to gather data from your users",
        "How to secure your forms to avoid security issues with your forms",
        "How to integrate multimedia elements such as audio, video and animations into your HTML5 content.",
        "A unique technique for laying out our page that will make complex designs easy to markup and manage",
        "How to embed iFrame content from outside sources and make it fit seamlessly into your HTML5 page",
        "A great strategy for correctly converting Photoshop documents to HTML5",
        "The best HTML5 frameworks to save you time and provide an entry point for new projects"
      ],
      "course_content": {
        "First Steps in HTML5": [
          "Welcome to the Course",
          "About Specialist Designation/ Web Development Professional Certification",
          "About the Instructor",
          "Quick Start— Making Your First HTML5 Page",
          "Obtain the Tools of the Trade",
          "Learning Basic Document Structure",
          "Anatomy of a Tag- The Only Vocabulary You’ll Need",
          "Section Lab Video, PDF and Solution",
          "Wrap Up Section 1",
          "Exam Questions for Review"
        ],
        "Everything You Wanted To Know About Formatting Text": [
          "Welcome to Section 2",
          "Paragraph Tags",
          "Break Tags",
          "Preformatted Text",
          "HTML5 Heading Tags",
          "Lists",
          "Quotations and Citations",
          "Formatting: Bold, Italics and More",
          "Computer Code",
          "HTML5 Containers",
          "Section Lab Video, PDF and Solution",
          "Wrap Up Section 2",
          "Exam Questions for Review"
        ],
        "Hyperlinks— Connecting Pages and Content": [
          "Welcome to Section 3",
          "Creating an internal link",
          "Linking to the outside world",
          "The Target Attribute",
          "Anchors to Navigate Long Pages",
          "Section Lab Video, PDF and Solution",
          "Wrap Up Section 3",
          "Exam Questions for Review"
        ],
        "Digital Media": [
          "Welcome to Section 4",
          "Inserting Images",
          "Creating Image Links",
          "Understanding Image and Image Size",
          "Sizing Images Responsively",
          "Playing and Controlling Audio",
          "Playing and Controlling Video",
          "Section Lab Video, PDF and Solution",
          "Wrap Up Section 4",
          "Exam Questions for Review"
        ],
        "Displaying Data in Tables and iFrames": [
          "Welcome to Section 5",
          "Defining a Table",
          "Defining Border of a Table",
          "Determining Table and Cell Width",
          "Defining Table Headers",
          "Spanning Multiple Rows and Columns",
          "Inserting iFrame Content",
          "Adding a table caption",
          "Section Lab Video, PDF and Solution",
          "Wrap Up Section 5",
          "Exam Questions for Review"
        ],
        "Interacting with the User via Forms": [
          "Welcome to Section 6",
          "Defining the Form",
          "Text Input",
          "Limiting Text Input",
          "Multiple Choice",
          "Form Submission",
          "Generic Buttons",
          "Date Inputs",
          "Numerical Input",
          "Organizing a Form with Fieldsets",
          "Section Lab Video, PDF and Solution",
          "Wrap Up Section 6",
          "Exam Questions for Review"
        ],
        "Professional HTML5 Practice": [
          "Welcome to Section 7",
          "Commenting Your Code",
          "Meta Tags",
          "Inserting External Javascript Code",
          "Search Engine Readiness",
          "It’s a Colorful World",
          "Identifying HTML5 API’s",
          "Drawing on Canvas",
          "Wrap Up Section 7",
          "Exam Questions for Review"
        ],
        "Styling with CSS": [
          "Welcome to Section 8",
          "Where to Style...",
          "CSS Selectors",
          "Fundamental Typography with CSS",
          "Understanding the CSS Box Model",
          "Floating Your Layout",
          "Section Lab Video, PDF and Solution",
          "Wrap Up Section 8",
          "Exam Questions for Review"
        ],
        "Responsive Design Fundamentals": [
          "Welcome to Section 9",
          "Demonstrating Responsive Design",
          "Using a responsive stylesheet",
          "Responsive Headers",
          "Section Lab Video, PDF and Solution",
          "Wrap Up Section 9/ Course Wrap-up"
        ]
      },
      "requirements": [
        "Mac, PC or Linux Machine",
        "Google Chrome Web Browser",
        "Text Editor-- Brackets recommended (Free)"
      ],
      "description": "Finally you know...\nThis is Where You Start Your Development Career\nHTML5 is the scaffolding that lies beneath almost every contemporary application.\nThere was a time when only web designers needed to know HTML5 well. However, it's now a universal skill that every developer needs. Strong HTML5 provides a strong foundation for apps. It also allows you to correctly develop content that appears on web sites, in mobile apps and even digital signage.\nHow do you learn to create strong HTML5 code that can be easily maintained?\nThat's what we're here to talk about...\nFACT: HTML5 is the First Language You Need to Know (...and an important part of web and mobile developers' daily work)\nWe get the question all the time: I want to become a developer, but I don't know where to start.\nWe don't have to sell you on the idea of becoming a developer. If you're you here, you already know it's one of the most lucrative (and fastest growing) career tracks out there. It's HTML5 that allows you to get your foot in the door. HTML5 developers:\nCreate the scaffolding for content display for web sites, mobile sites and many mobile applications.\nMark up web content so it can be distributed across multiple platforms\nWork in large scale digital publishing to create flexible content\nCombine HTML5 skills with other digital skill sets to become web and mobile developers\nIn other other words, HTML5 development skills are critical to all developers. HTML5 is the foundation to almost any development process.\nThat's why business, design studios, development shops and other organizations need HTML5 developers.\nBut there's a problem. Most people who learned HTML, learned it in school 12 years ago and have no idea that they're doing.\nThat's how you separate yourself from the pack.\nAs a Certified HTML5 Specialist, you are qualified to build, maintain and edit HTML5 documents. You'll be able to help development teams build strong foundations, manage digital content or use HTML5 as a foundation for a strong developer skill set.\nIn this certification program you will learn:\nHow to create a proper HTML5 scaffolding for the type of application that you’re creating. How should HTML5 differ for web and mobile applications?\nHow to correctly markup text so that it is sized properly across the variety of screen sizes and densities used by consumers\nHow to properly integrate code written in CSS and PHP as external or internal code listings.\nHow to select the most efficient tools and environments for HTML5 authoring and testing.\nUnderstand how to upload content to a web server for public consumption. You’ll also cover how to set up a test server environment locally.\nHow to create internal and external links within HTML5 documents.\nCreating Meta Tags that are properly designed for optimal display on Google and other search engines.\nStrategically use HTML5 comments to document your code.\nA unique strategy to use HTML5 comments to debug code and quickly find errors.\nHow to create list based content using ordered lists, unordered lists and custom list bullets for custom branding\nHow to display images and how to properly optimize images for display on web and mobile devices.\nAn infrequently used strategy to boost your Search Engine Optimization value using images\nHow to create beautiful information tables that are easy to both create and read\nHow to use the hexadecimal color system and apply hexadecimal colors to elements in your HTML5\nHow to create usable, functional forms to gather data from your users\nHow to secure your forms to avoid security issues with your forms\nHow to integrate multimedia elements such as audio, video and animations into your HTML5 content.\nA unique technique for laying out our page that will make complex designs easy to markup and manage\nHow to embed iFrame content from outside sources and make it fit seamlessly into your HTML5 page\nA great strategy for correctly converting Photoshop documents to HTML5\nThe best HTML5 frameworks to save you time and provide an entry point for new projects\nIn summary, certified HTML5 specialists are experts who are able to correctly construct rich digital documents that can appear anywhere on the web, mobile or as part of a larger application. They are able to understand how HTML5 fits into the larger context of web and mobile development and work in serious development environments.",
      "target_audience": [
        "Graphic and Digital Designers",
        "Startup Employees",
        "Marketing Designers",
        "Content Specialists",
        "Agency Personnel",
        "Students who want to be more Employable",
        "...Anyone else who wants this critical skill set and proof of expertise"
      ]
    },
    {
      "title": "Vue.js Essentials - 3 Course Bundle",
      "url": "https://www.udemy.com/course/vuejs-2-essentials/",
      "bio": "Learn and master VueJS by building 3 professional, real world web application using Vue!",
      "objectives": [
        "Understand all Vue concepts from beginner to advanced",
        "Build three real world applications using Vue.js utilising every Vue feature",
        "Use the Vuex statement management library",
        "Write basic Vue with ES5 and also modern Vue with ES6",
        "Setup VueJS environment with development tools including Webpack",
        "Create a universal application with server-side rendering",
        "Use popular plugins from the Vue ecosystem like vue-router and vue-resource",
        "Cutting-edge features like Single File Components, Render functions and Server-Side Rendering"
      ],
      "course_content": {},
      "requirements": [
        "HTML and CSS",
        "JavaScript",
        "Git and Github",
        "NPM",
        "ES6 (for Project 2 & 3 only)",
        "Webpack (for Project 2 & 3 only)",
        "Node.js/Express (for Project 3 only)"
      ],
      "description": "If you're looking to learn and master Vue.js with an expert instructor, look no further than Vue.js Essentials.\nIn this series of three courses, you'll build three real-world Vue.js apps that take you from the very basics of Vue to the cutting edge.\nWith over 6000 past students, this course bundle includes 10 hours of high-quality video with English closed captions.\nKeep reading to see what's included...\nCourse 1: Build Your First Vue.js App\nThis first course is an introduction for those who've never used Vue.js or who need to brush up on the basics.\nWe'll cover key Vue concepts such as:\nInstalling Vue\nAdding Vue to a web page\nTemplate syntax (interpolations and directives)\nLifecycle hooks\nTransitions\nAnd more!\nThe best way to learn is by doing, so we'll put this theory into practice and build a simple but powerful eCommerce user interface complete with products and a shopping cart called Vue.js Poster Shop.\nCourse 2: Build A Vue.js Single-Page App with Vue Router\nNow that you know the basics of Vue, you're ready to learn Vue's most powerful features!\nBy the end of this second course, you'll be able to build a high-performing, feature-rich Vue.js app using the single-page application (SPA) architecture.\nTopics covered in this course include:\nComponents\nVue Router\nSlots\nSingle-file components\nCustom plugins and directives\nWebpack configuration for Vue.js projects\nAnd more!\nTogether, we'll build a movie session times app called Vue.js Cinema that, unlike the app from the first course, includes multiple pages managed with Vue Router.\nBuilding this app will introduce you to the power and versatility of components-based app design. You'll also learn how to utilize Webpack for an enhanced Vue development experience.\nCourse 3: Build A Professional Vue App with Vuex & Server-Side Rendering\nAre you ready to become a Vue expert?\nNow that you're comfortable building Vue.js SPAs, you're ready for Vue's advanced concepts!\nIn this course, I'll show you the tools and techniques that front-end experts use to build highly optimized, high performing web UI.\nFirstly, we'll cover the Vuex state management pattern, which is a special method for storing data in your app that's essential for bigger and more complex sites.\n\nWe'll then set up server-side rendering (SSR) from scratch. This is where we compile our app on the Node.js server in order to drastically improve page load time.\nThe case-study project for this course is our most ambitious yet; a Google Calendar clone called Vue.js Cinema that utilizes Vuex, SSR and a host of other optimizations.",
      "target_audience": [
        "Existing web developers looking to learn Vue.js",
        "New web developers looking to pick up a JavaScript framework",
        "Curious React and Angular developers",
        "Laravel developers"
      ]
    },
    {
      "title": "React - Mastering Test Driven Development",
      "url": "https://www.udemy.com/course/react-tdd/",
      "bio": "Upgrade your React skills with Test Driven Development! Jest, Enzyme, Redux, middleware, ES6, & more!",
      "objectives": [
        "How to use Test and Behavior Driven Development to build React applications.",
        "The ability to discuss the approach of Test Driven Development with fellow software engineers.",
        "How to build full React applications with thorough tests.",
        "How to use libraries like Jest, Enzyme, and more to test React components.",
        "How to use Redux in React applications, including asynchronous actions and middleware.",
        "How to apply advanced es6 concepts to write more concise code.",
        "How to extend React applications with third-party libraries."
      ],
      "course_content": {
        "Introduction to the Course": [
          "What to Expect from the Course",
          "Tools You'll Need",
          "Optional: Installing Node and Create-React-App",
          "Optional: Installing a Code Editor",
          "Test Driven Development, Jest, Enzyme, & More"
        ],
        "GiftGiver and Test Driven Development": [
          "GiftGiver Preview",
          "Set Up GiftGiver with a Unit Test",
          "Important: Enzyme Adapter",
          "Snapshot Test the App Component",
          "Render the Gift List in the App",
          "Render GiftGiver and the Gift List",
          "Behavior Driven Development",
          "BDD in GiftGiver",
          "Test and Build the Gift Component | Part One",
          "Test and Build the Gift Component | Part Two",
          "Remove a Gift",
          "Test Coverage and Helper Methods",
          "Optional Styling",
          "Section Summary | GiftGiver and Test Driven Development"
        ],
        "LootCheck and Behavior Driven Development | Part One": [
          "LootCheck Preview",
          "Start Up LootCheck with an App Component",
          "Optional: Understanding Redux",
          "Optional: Understanding Redux",
          "Optional: Understanding Redux Visually",
          "Set a Balance with a Redux Action",
          "Create the Balance Redux Reducer",
          "Test and Build a Wallet Component",
          "Render the Wallet",
          "Support Redux Deposit and Withdraw Methods",
          "Local Wallet Balance with State",
          "Dispatch Deposit and Withdraw",
          "Store Data with Cookies",
          "Section Summary | LootCheck and Behavior Driven Development | Part One"
        ],
        "LootCheck and Behavior Driven Development | Part Two": [
          "APIs and Middleware in LootCheck",
          "Async Actions, Middleware, & Redux Thunk",
          "Accessing the Bitcoin API",
          "Fetch the Bitcoin Value through Redux",
          "Bitcoin Redux Reducer",
          "Combine Reducers",
          "Test and Build the Loot Component | Part One",
          "Test and Build the Loot Component | Part Two",
          "Stateless Functional Components - Convert the App",
          "Run the Coverage Report",
          "Styling and API Cleanup",
          "Section Summary | Lootheck and Behavior Driven Development | Part Two"
        ],
        "Conclusion": [
          "Final Remarks and Bonus Content"
        ]
      },
      "requirements": [
        "Some JavaScript experience would be ideal.",
        "While not necessary, some React experience would help."
      ],
      "description": "Become an in demand software engineer by taking this course on React as well as Test and Behavior Driven Development. As arguably the most popular web development framework today, learning React along with testing is a must. Knowing how to create React applications with thorough tests will open doors and jobs for you.\nIn this project-based course, you’ll learn how to build React and Redux applications in a test and behavior driven development approach. You’ll discover testing practices widely used in the industry today. And you’ll find out how to use notable testing libraries like Jest and Enzyme.\nYou will skyrocket to the top of the talent pool because you can write tests. Coding the apps is only half of the process. Knowing how to write tests is the other crucial skill looked for by top software companies like Google, Facebook, Microsoft, and more.\nIn this course, first, you’ll get familiar with React by building an application from the start. Writing tests will guide the process as you use popular libraries like Jest by Facebook and Enzyme by Airbnb.\nSecond, you’ll build a more in-depth application with Redux in the behavior driven development approach. You’ll learn all the advanced techniques for testing asynchronous code, effective mocking, and beyond.\nIf you’ve gone through the the quick JavaScript and React tutorials online, then this course will take you to the next level.\nReady to step up your coding game? Excited to boost your skills? Then what you are waiting for? Let’s get started coding!",
      "target_audience": [
        "Anyone who wants to learn how to thoroughly test React applications.",
        "Someone with exposure to React applications.",
        "Someone who is comfortable with JavaScript.",
        "A developer who wants to refine their testing skills."
      ]
    },
    {
      "title": "Learn HTML - For Beginners",
      "url": "https://www.udemy.com/course/learn-html-for-beginners/",
      "bio": "Lean how to create web pages using HTML",
      "objectives": [
        "How to Code in HTML",
        "Structure of an HTML Page",
        "Text Formatting in HTML",
        "Embedding Videos",
        "Creating Links",
        "Anchor Tags",
        "Tables & Nested Tables",
        "Building Forms",
        "Embedding Iframes",
        "Inserting Images"
      ],
      "course_content": {
        "HTML Development": [
          "Introduction to HTML",
          "Basic Structure of a Web Page",
          "HTML Head Tags",
          "HTML Body Tag",
          "HTML Paragraph Spacing",
          "HTML Line Breaks",
          "HTML Non-Breaking Space",
          "HTML Header Tags",
          "HTML Text Formatting and Decoration",
          "HTML Inline Text Formatting",
          "HTML Unordered Lists",
          "HTML Ordered Lists",
          "HTML Image Insertion",
          "HTML Embedding Videos",
          "HTML Absolute vs. Relative File Referencing",
          "HTML Link Creation",
          "HTML Anchor Tags",
          "HTML Tables",
          "HTML Nested Tables",
          "HTML Merging Cells",
          "HTML Text Wrapping",
          "HTML Table Background Image",
          "HTML Cell Alignment",
          "HTML - Introduction to Forms",
          "HTML Form Tags and Attributes",
          "HTML Forms - Post vs Get",
          "HTML Forms - Input Text Fields",
          "HTML Forms - Select Menus",
          "HTML Forms - Check Boxes and Radio Buttons",
          "HTML Forms - Text Areas and Buttons",
          "HTML Iframes",
          "HTML Project - Introduction",
          "HTML Project - Header",
          "HTML Project - Callout",
          "HTML Project - Image Insertion",
          "HTML Project - Text Insertion",
          "HTML Project - Links and Form",
          "HTML Project - Tabular Data",
          "HTML Project - Footer"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Course: Learn HTML - For Beginners\nLean how to create web pages using HTML\nStudents will learn how to create engaging web pages using HTML5, which is an integral part of the development process.\nThe material covers an intensive array of HTML5 elements including images, videos, lists, tables, forms, iframes and much more.\nThe course includes several hands-on projects to ensure comprehension of course materials.\nBy the end of the training, students will be proficient with coding in HTML and ready to tackle the more advanced scripting languages that follow.\nWhat you'll learn - Overview:\nHow to Code in HTML\nStructure of an HTML Page\nText Formatting in HTML\nEmbedding Videos\nCreating Links\nAnchor Tags\nTables & Nested Tables\nBuilding Forms\nEmbedding Iframes\nInserting Images\nKey Concepts:\nHTML Body Tag\nHTML Paragraph Spacing\nHTML Line Breaks\nHTML Header Tags\nHTML Text Formatting and Decoration\nHTML Inline Text Formatting\nHTML Unordered Lists\nHTML Ordered Lists\nHTML Image Insertion\nHTML Embedding Videos\nHTML Absolute vs. Relative File Referencing\nHTML Link Creation\nHTML Anchor Tags\nHTML Tables\nHTML Nested Tables\nHTML Merging Cells\nHTML Text Wrapping\nHTML Table Background Image\nHTML Cell Alignment\nHTML - Introduction to Forms\nHTML Form Tags and Attributes\nHTML Forms - Post vs Get\nHTML Forms - Input Text Fields\nHTML Forms - Select Menus\nHTML Forms - Check Boxes and Radio Buttons\nHTML Forms - Text Areas and Buttons\nHTML Iframes\nHTML Project - Introduction\nHTML Project - Header\nHTML Project - Callout\nHTML Project - Image Insertion\nHTML Project - Text Insertion\nHTML Project - Links and Form\nHTML Project - Tabular Data\nHTML Project - Footer",
      "target_audience": [
        "Students who want an introduction into HTML Coding"
      ]
    },
    {
      "title": "Modern HTML & CSS From The Beginning 2.0 (2024 Revamp)",
      "url": "https://www.udemy.com/course/modern-html-css-from-the-beginning/",
      "bio": "Build modern responsive websites with HTML and CSS - Learning modules, mini-projects and 3 full websites",
      "objectives": [
        "Build 3 High Quality Websites Along With Mini-Projects",
        "Sandbox Environment For Learning Tags, CSS Properties, Accessibility & Other Concepts",
        "Semantic Elements, Box Model, Transitions, Keyframes, Pseudo Selectors & More",
        "Create Flexible Layouts WIth Flexbox & CSS Grid",
        "Create Responsive Websites With Media Queries, Relative Units & Flexible Layouts",
        "Learn The Basics of Git, GitHub and Website Deployment",
        "Learn the BEM (Block Element Modifier) Methodology",
        "All Skill Levels"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "How The Web Works",
          "The Roles Of HTML, CSS & JS In Web Development",
          "VS Code Editor & Environment",
          "Course Code"
        ],
        "Essential HTML": [
          "Section Intro",
          "Create & Open HTML Files",
          "HTML Tags & Attributes",
          "Document Structure",
          "Live Server & Prettier",
          "Sandbox Files Setup",
          "Meta Tags & Search",
          "Headings, Paragraphs & Emphasis",
          "Browser Devtools Intro",
          "Lists",
          "Anchor Tags",
          "Images",
          "Block vs Inline Elements",
          "Line Breaks, Horizontal Rules & Entities",
          "Divs & Spans",
          "Classes & IDs",
          "Semantic Elements",
          "Emmet Crash Course",
          "Keyboard Shortcuts",
          "Pricing Grid Challenge"
        ],
        "HTML Form & Input Elements": [
          "Section Intro",
          "Form & Input Tags",
          "Text-Based Input Tags",
          "Input Field Attributes",
          "Select Boxes & Textarea",
          "Checkboxes & Radio Buttons",
          "Other Input Fields",
          "Datalist",
          "HTML Form Challenge"
        ],
        "More HTML Elements": [
          "Section Intro",
          "Audio Element",
          "Video Element",
          "Image Map",
          "Tables",
          "Iframe",
          "Global Attributes",
          "SVG Element",
          "Popover & Details",
          "Progress & Meter"
        ],
        "CSS Basics": [
          "Section Intro",
          "Implementing CSS",
          "Basic CSS Selectors",
          "Fonts In CSS",
          "Font & Text Properties",
          "Colors (Color Names, HEX, RGB, HSL)",
          "CSS Specificity",
          "Backgrounds",
          "Styling Links",
          "Font Awesome Library",
          "CSS Basics Challenge"
        ],
        "Box Model & Positioning": [
          "Section Intro",
          "Box Model Explained",
          "Sizing & Overflow",
          "Padding",
          "Margin",
          "Universal Selector & Reset",
          "Borders",
          "Display Property",
          "Position Property",
          "Box Shadow",
          "Freelance Form Mini-Project",
          "Shoe Cards Mini-Project"
        ],
        "Flexbox": [
          "Section Intro",
          "What Is Flexbox?",
          "Flexbox Basics - Containers & Items",
          "Align & Justify Items",
          "Flex Properties & Dynamic Sizing",
          "Flex Order",
          "Flexbox Layout Challenge",
          "Pricing Card CSS Mini-Project"
        ],
        "Responsive Design": [
          "Section Intro",
          "What Is Responsive Design?",
          "Flexible Layouts & Percentages",
          "rem & em Units",
          "Viewport Units (vh & vw)",
          "Media Queries",
          "Responsive Pricing Grid",
          "Responsive Flexbox Layout",
          "Container Queries",
          "Container Units"
        ],
        "Landing Form Mini-Project": [
          "Project Intro",
          "Setup & HTML",
          "Base CSS & Header Styles",
          "Main Content Flex & Alignment",
          "Inner Styles",
          "Mobile Layout & Media Queries"
        ],
        "Various CSS Features": [
          "Section Intro",
          "Custom Properties",
          "Vendor Prefixes",
          "Filters",
          "Smooth Scroll Mini-Project",
          "Sticky Nav & Style On Scroll",
          "calc() Function",
          "Nesting"
        ]
      },
      "requirements": [
        "This course is for any developer, beginner to advanced"
      ],
      "description": "Just revamped for 2024, this course is for both beginners that want to learn HTML/CSS beginning to end as well as seasoned developers that just want to build some cool projects. This is my most important course because it is the entry point to everything else that I have created. Whether you want to build front-end applications with React or full stack Node.js, PHP, Python, etc, you will always need use HTML and CSS in some way.\n\n\nWe go over all kinds of HTML tags, elements and structure and tons of CSS properties and concepts with a sandbox environment. Outside of these learning modules are mini-projects, challenges and 3 main website projects. One project uses the BEM CSS methodology.\n\n\nThe first few sections are tailored for beginners so even if you have never built anything before, you will learn all of the basics. If you already have experience with basic HTML & CSS, you can skip around and learn what you need or just go right into the projects.\n\n\nThings We Cover In This Course\n\n\nHow Websites Work\nVisual Studio Code Setup, Shortcuts, Live Server & Emmet\nHTML5 Semantic Elements & Layout\nCSS Fundamentals (colors, fonts, alignment, etc)\nThe Box Model, Margin, Padding & Border\nResponsive Design With Media and Container Queries\nCSS Units - rem, em, vh, vw, etc\nFlexbox Layout Model\nCSS Grid\nAnimation with Keyframes & Transitions\nUsing JavaScript to toggle classes & styles\nCSS Custom Properties\nGit & Github\nDeploying Websites to Netlify and Vercel\nMini-Projects & Challenges\nProject 1 - Lumina Creative Agency Website\nProject 2 - Tutor Course Website\nProject 3 - Leno Mobile App Website (BEM Methodology)\nMuch More",
      "target_audience": [
        "From absolute beginner to seasoned developer"
      ]
    },
    {
      "title": "Step-by-step HTML and CSS for Absolute Beginners",
      "url": "https://www.udemy.com/course/step-by-step-html-and-css-for-absolute-beginners/",
      "bio": "Learn how to code HTML5 + CSS3 to create your own website in this beginner-level course. No coding experience required!",
      "objectives": [
        "In this course, we'll create a simple \"Coming Soon\" webpage using valid HTML5 and CSS3 code",
        "We'll focus on WHY the code we write looks the way it does –– so you can develop an intuitive understanding of how HTML and CSS work",
        "By the end of this course, you'll be able to use HTML and CSS with confidence, following best practices every step of the way!"
      ],
      "course_content": {
        "On your mark, get set... GO!": [
          "Course introduction and welcome",
          "Project overview: A \"Coming Soon\" webpage",
          "Getting started with HTML and CSS",
          "Creating HTML and CSS files",
          "Check your progress!"
        ],
        "Adding content to your webpage using HTML": [
          "Understanding HTML",
          "Learning HTML syntax",
          "Adding headings and paragraph text",
          "Using special characters",
          "Adding web and email links",
          "Adding images",
          "Finding icons and other graphics",
          "Making clickable images",
          "Checking your HTML code for mistakes",
          "Check your progress!"
        ],
        "Controlling the look of your content with CSS": [
          "Understanding CSS",
          "Adding CSS to your webpage",
          "Learning CSS syntax",
          "Changing fonts",
          "Choosing a good color scheme",
          "Changing colors on your webpage",
          "Checking your CSS code for mistakes",
          "Check your progress!"
        ],
        "Publishing your webpage: The (not-so-scary) technical stuff": [
          "How web publishing works",
          "Understanding FTP: File Transfer Protocol",
          "Getting your files online using FTP",
          "Editing your webpage online",
          "Check your progress!"
        ],
        "Putting it all together: Webpage layout and design": [
          "Using HTML and CSS together",
          "Dividing sections of content using DIVs",
          "Changing the background color of a section",
          "Changing the width of a section",
          "Centering content inside a section",
          "Repositioning an entire section",
          "Controlling the way links appear on your webpage",
          "Changing your text to uppercase or lowercase",
          "Categorizing your webpage content using classes",
          "Repositioning images on your webpage",
          "Changing the space around sections of content",
          "Check your progress!"
        ],
        "Getting fancy: Tweaking your webpage design": [
          "Going further with HTML and CSS",
          "Making rounded corners",
          "Tweaking line spacing",
          "Changing the way a link appears when you hover over it",
          "Adding a drop shadow effect",
          "Creating special effects with images",
          "Check your progress!"
        ],
        "Wrapping up": [
          "Project review: Coming Soon page"
        ]
      },
      "requirements": [
        "A computer (Windows, Mac, or Linux) with Internet access",
        "Any modern web browser (Chrome, Firefox, Internet Explorer, Opera, or Safari)",
        "Some basic computer skills (cutting and pasting text, saving files into folders)",
        "A desire to learn!"
      ],
      "description": "Want to learn how to create webpages, but feeling intimidated by HTML and CSS? Not sure where to start? Step-by-step HTML and CSS for Absolute Beginners is a comprehensive and friendly course designed for beginners with NO previous coding or programming experience.\nHTML (HyperText Markup Language) and CSS (Cascading Style Sheets) are the building blocks of the web. If you've ever looked at a website, you've seen HTML and CSS in action!\n\n\nWhether you want to make changes to your website's template, create new webpages from scratch, or just understand what you're doing when you cut-and-paste embed codes from sites like YouTube or SlideShare — understanding HTML and CSS makes it possible.\n\n\nHOW IS THIS COURSE DIFFERENT?\nMy name is Kathleen, and I've been teaching technology to beginners under the moniker Robobunnyattack! since 2009. I believe that with the right approach, anyone can learn anything.\nMy goal in this course is to help you develop an intuitive understanding of how HTML and CSS work.\nIn this course, we'll create a simple \"Coming Soon\" webpage using valid HTML5 and CSS3 code. As we work together, I'll explain WHY the code we write looks the way it does. I'll point out the simple patterns in the code, so you can learn more quickly and with more confidence.\nAs we build our webpage, we'll cover:\nWhat tools you need to write HTML and CSS, and how to use them\nHow to use HTML to organize and manage the content of your webpage\nHow to use CSS to control the presentation or \"look\" of your webpage\nHow web publishing works, and how to get your HTML and CSS files from your computer onto the web\nHow to use lots of other helpful and free web building tools, including code validators, free icon libraries, color scheme generators and more\n\n\nBy the end of this course, you'll be able to use HTML and CSS with confidence, following best practices every step of the way.\n\n\nHere's just a sample of what my (awesome!) students have to say about this course:\n\"My favourite part was learning how to tilt images and add drop shadows. Also, the instructor cares enough to answer questions promptly. Can't say enough good things about this course!\" —R.B.\n\"Very accurate and detailed explanations with real time examples. For me it was a big step ahead...\" —Mihai E.\n\"[Kathleen] knows exactly the info to deliver and what to leave out to avoid confusion.\" —Tara\n\"What I once thought would be overwhelming to learn is surprisingly quite straight forward.\" —Odette\n\"This course finally made CSS make sense to me.\" —Julie G.\n\"Thank you, Kathleen, for a wonderful course! Never thought coding could be made fun.\" —Leslie V.\n\n\nWHAT'S INCLUDED?\nThis course includes lifetime access to 4 hours of step-by-step videos. You'll also get supplementary text lectures, links to helpful resources, HTML and CSS code examples, and downloadable project files.\nShort quizzes at the end of each section will help you gauge your own understanding and check your progress along the way.\n\n\nHOW LONG WILL IT TAKE ME?\nThis completely depends on your availability and learning preference. You can work through all the video lectures in one afternoon, or pace yourself over several days or weeks — it's up to you!\n\n\nWHAT IF THIS COURSE ISN'T FOR ME?\nThis course comes with an unconditional 30-day Udemy-backed guarantee. Try out this course for 30 days and see for yourself if my approach to learning HTML and CSS is right for you. If you're not 100% satisfied with this course, simply request a full refund within 30 days — no conditions, no questions asked!\n\n\nI'm confident you'll LOVE this course, and I'm excited to help you learn. Enrol now and you can start building your own webpage using HTML and CSS today!\n—Kathleen Farley (aka Robobunnyattack!)",
      "target_audience": [
        "Beginners with no previous coding or programming experience",
        "Web designers seeking to strengthen their HTML and CSS skills",
        "Learners of all ages who want to REALLY understand HTML and CSS –– not just memorize code!"
      ]
    },
    {
      "title": "ChatBots: Messenger ChatBot - DialogFlow and nodejs",
      "url": "https://www.udemy.com/course/chatbots/",
      "bio": "Use DialogFlow to train chatbot to have dialogs. Develop backend app to connect chatbot to web services and databases",
      "objectives": [
        "understand how chatbots work",
        "build chatbots for Messenger",
        "know how to create custom code to add flexibility to your chatbot",
        "have in-depth knowledge of natural language processing with DialogFlow",
        "know and use the fb messenger api",
        "get information from the conversation",
        "add persistent menu",
        "use all the possible message types: text, images, video, quick replies, buttons, carousels,...",
        "students will get a codebase that is easily extendable",
        "have a chatbot that can be easily extended to connect to other APIs",
        "add rich media messages in DialogFlow",
        "have a chatbot that answers FAQ"
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction",
          "ChatBots - what are they and how do we build one?",
          "What can I do with bots?",
          "ChatBot behind the scenes",
          "ChatBot architecture",
          "How to get help",
          "Additional resources"
        ],
        "Connect Facebook app with DailogFlow / have a first conversation with a chatbot": [
          "Create a Facebook page",
          "Create a Facebook application",
          "DialogFlow setup and introduction",
          "Connect DialogFlow and Facebook application - updated",
          "First conversation with your bot"
        ],
        "Teach chatbot to answer FAQ. Test and train the ChatBot": [
          "Show chatbot how to answer FAQ",
          "How to test and train a ChatBot / Add friends as testers"
        ],
        "Teach a bot how to have dialogs. Master DialogFlow!": [
          "Chatbot job enquiry",
          "Teach chat bot to take candidates info",
          "Test your chatbot - job interview test",
          "No application context"
        ],
        "Rich messages": [
          "DialogFlow - Rich messages Part 1",
          "DialogFlow - Rich messages Part 2"
        ],
        "Extra DialogFlow features": [
          "Prebuilt agents",
          "Follow-up intents",
          "DialogFlow intents priority",
          "DialogFlow tutorial FREE ebook"
        ],
        "Publish a chatbot": [
          "Introduction to app review - Steps to take",
          "Get the pages_messaging right",
          "Facebook app basic settings",
          "Privacy policy link for Facebook app",
          "Submit for review / publish the chatbot on Messenger"
        ],
        "Upgrade a chatbot - PART 2": [
          "Introduction to part 2",
          "Heroku, GIT and Node.js",
          "Initial project in Node.js"
        ],
        "Code walkthrough and configuration": [
          "Project configuration",
          "Google authentication / service accounts / google project",
          "How to test Messenger Bots localy?",
          "Code walktrough - part 1",
          "Code walktrough - part 2",
          "Take care of security",
          "First deploy to server",
          "Common mistakes that happen when first deploying to Heroku",
          "GRPC not working with node v12 WARNING!"
        ],
        "Add extra features to Chatbot": [
          "Get information from conversation - part 1 - updated",
          "Get information from conversation - part 2 - updated",
          "Test new feature",
          "Send button message - delivery extra options",
          "Set a greeting text for your chatbot",
          "Set get started button",
          "Persistent menu is no longer supported",
          "Set persistant menu",
          "Disable text input",
          "Get information about the user",
          "Quick replies in parameters"
        ]
      },
      "requirements": [
        "you need to know what chatbots are",
        "for the second part of the course you need to know the basics of JavaScript and Node"
      ],
      "description": "Do you want to build a chatbot, so a bot that can talk? Yes, a bot that can talk to your friends or customers or fans while you sleep or do something else. You can make one for your customer that keep on asking the same questions. Or if you have a community for your fans and followers that want to know your details. Use your imagination, any time you have to reply the same thing over and over again, someone else like a bot can do it for you.\nIn the first part of the course, we'll make a chatbot without programming skills. We'll build a ChatBot that can answer frequently asked questions, and I'll show you how to teach your bot to have any other dialogs. We'll learn this by teaching our ChatBot to make job interviews.\nWe'll use DialogFlow to process natural language. DialogFlow will help the bot to understand what users want.\nThe chatbot will communicate to its customers via Facebook Messenger.\nAnd in the second part, we'll use NodeJS to upgrade the bot. So the basic knowledge of javascript and NodeJS is needed.\nWith the new app, our bot will be able to remember things, that is, store information into a database or connect to other API services. With this, the bot will gain external knowledge and functionality.\nAnd remember, I'LL BE THERE FOR YOU. I ANSWER EVERY QUESTION AND HELP EVERY STUDENT.\nAt the end of the course, you'll have a fully functional ChatBot. And you'll also know how to teach the bot to have other dialogs with customers. You'll know how to make a bot for yourself and other people.\nMy name is Jana Bergant, and I'm a developer with over 20 years of experience. I'm an IT instructor teaching people new tech skills. Over 17000 people are already taking my course.\nI help all my students at every step of development. And I'll be here for you!\n\n\nSo if the predictions turn right, this will open up a new channel for businesses to reach a large audience. And here is a BIG OPPORTUNITY FOR YOU! Be one of the first people that know how to build chatbots. You can build it for your business or other people.\nThis course will show you how to create a ChatBot!\n\n\nIn the course, we use the latest version of DialogFlow. Also, I update videos regularly to stay up to date.\nThe last update of the course was on 27th February 2020\nI added DialogFlow mega agents",
      "target_audience": [
        "everybody that realizes the potential chatbots bring",
        "everybody who wan't a deeper knowledge of DialogFlow",
        "everybody who wants to build a chatbot for Messanger",
        "everybody who needs a bot to answer FAQ",
        "everybody who needs a bot to take job interviews",
        "everybody who need the bot to talk to customers or friend or fans or ...",
        "You should not take the course if you don't know what chatbot is. Take a peak at the first FREE videos first!",
        "for the second part of the course you need to know the basics of JavaScript and Node"
      ]
    },
    {
      "title": "Vue JS 2.0 - Mastering Web Apps",
      "url": "https://www.udemy.com/course/vue-web-apps/",
      "bio": "Create the VueJS 2.0 apps you always wanted. Build 5 apps, learn development secrets, VueRouter, Vuex, & more!",
      "objectives": [
        "Build entire Vue JS, VueRouter, and Vuex applications from scratch.",
        "Develop apps that deal with APIs and web requests.",
        "Create web apps with a full authentication service, and real-time database."
      ],
      "course_content": {},
      "requirements": [
        "Some JavaScript, HTML, and CSS will help, but not absolutely required."
      ],
      "description": "Become an in-demand software engineer by taking this tutorial on Vue Js. As one of the fastest growing frameworks for web development, learning Vue is a must. Simply put, understanding Vue will open doors and jobs for you.\nThis project-based course will have you coding right away. By building five carefully thought-out example applications, you will sharpen your skills in modern web development.\nFirst, learn the essentials of Vue 2.0 by going through the main concepts and syntax. Then, build your first single-page app with Vue. Second, create an application that handles HTTP Web Requests in Vue and uses a public API. Extend upon this application next, learning VueRouter for multi-page applications. Fourth, build an application that works with Vuex to manage data. Finally, cap it all off by building an app with full authentication and a real-time database.\nYou’ll not only learn Vue 2.0, but essential libraries like VueRouter and Vuex. Vuex can have a reputation for complexity, but you’ll find in this course, a secret recipe that boils Vuex down to three simple steps!\nLastly, don’t worry if you’re new to web development. Some JavaScript experience will help, but this course explains every new concept thoroughly.\nSo what are you waiting for? Take the dive into VueJs. Let’s get started coding!",
      "target_audience": [
        "The perfect students knows some JS, HTML, and CSS, but hopes to learn a new web development framework to significantly boost their skills.",
        "All levels coding. However this won’t introduce coding from the ground up, so for complete beginners might find it fast-paced.",
        "Experienced developers and engineers will find this course perfect for brushing up on Vue and web development."
      ]
    },
    {
      "title": "Understanding NPM - Node.js Package Manager",
      "url": "https://www.udemy.com/course/understanding-npm/",
      "bio": "Understand and practice NPM. Learn how to use NPM in Node.js, how to install NPM packages, how to configure NPM scripts.",
      "objectives": [
        "Initialize any project using NPM init",
        "Install project dependencies",
        "Understand what is the difference between dependencies and development dependencies",
        "Explain what is Semantic Versioning and what different kinds of packages versions mean",
        "Explain difference between Browser Application and Server Package",
        "Understand purpose of the \"package-lock\" file",
        "Update project dependencies",
        "Configure NPM scripts and execute them",
        "Combine NPM scripts into the one script",
        "Explain what is executable script and how it is executed on the Mac and on Windows"
      ],
      "course_content": {},
      "requirements": [
        "Basic JavaScript knowledge is desirable but not required",
        "Any computer - Mac or PC"
      ],
      "description": "In this course I will explain you what is NPM and how it is used.\nThis course is designed to provide students with a comprehensive understanding of NPM, the Node.js package manager. Students will learn how to use NPM to manage Node.js packages and create their own packages.\nThe course begins with an overview of NPM and its role in the Node.js ecosystem. Students will learn how to install and configure NPM, including setting up a new Node.js project and managing project dependencies using NPM.\nThe course then dives into more advanced NPM features, including package versioning and semantic versioning.\nThroughout the course, students will gain hands-on experience working with NPM through a series of practical exercises and labs. By the end of the course, students will have a solid understanding of NPM and be able to effectively manage Node.js packages in real-world scenarios.\nLearning Objectives:\nUnderstand NPM and its role in the Node.js ecosystem\nInstall and configure NPM and create a new Node.js project\nManage project dependencies using NPM\nYou will learn how to initialize new project, how to install new dependencies and explore their child dependencies.\nWe will also discuss what is Semantic Versioning and what Major, Minor and Patch versions mean.\nYou will also understand what is the purpose of the package-lock.json file.\nI will explain you what is the purpose of the NPM scripts and how they should be used. We will talk about built-in NPM scripts and custom script. Also we will combine several NPM scripts in a one using npm-run-all external package.\nYou will understand what is executable script and what is the purpose of the .bin folder in the node_modules folder. I will explain you what is shebang line and how it is used on the Unix-based system and on Windows.\nAfter this course you will gain a deep knowledge about NPM and learn how to use it on practice.",
      "target_audience": [
        "JavaScript developers who want to know how to properly use NPM"
      ]
    },
    {
      "title": "Ultimate Web Designer & Web Developer Course",
      "url": "https://www.udemy.com/course/web-developer-course/",
      "bio": "Become a Full-Stack Web Designer in 2023 - Learn Everything from Web Design Fundamentals to Front-End Web Development",
      "objectives": [
        "Build 23+ custom web design & development projects by hand",
        "Learn more than 18 professional disciplines",
        "Plan, design and code your very own self-directed website project from scratch to launch!",
        "Plan, design and code robust and fully custom, responsive websites and applications",
        "Explore modern web design tools",
        "Code at an expert level of proficiency with HTML & CSS",
        "Code websites & applications with HTML5 & CSS3",
        "Code basic games & animations with CSS3 and jQuery",
        "Comfortably use Adobe Photoshop for photo manipulation, graphics creation & design",
        "Use modern tools like Figma, Adobe XD and Photoshop to design and prototype for the web",
        "Design a professional and modern business card in Adobe Photoshop",
        "Learn UX and UI design for beginners",
        "Learn visual design fundamentals for beginners",
        "Learn how to wireframe and optimize UX for websites and web applications",
        "Learn how to choose the correct font combinations for your projects",
        "Create beautiful color schemes based on scientific color theory",
        "Code a simple \"Tip Calculator\" in Javascript",
        "Build a useful \"To Do List\" web application in jQuery UI",
        "Learn how to easily set up web hosting & domain names",
        "Learn how to program simple PHP applications",
        "Design, build and manage custom database-driven websites with MySQL",
        "Build a fully functional \"Client Address Book\" with PHP & MySQL",
        "Set up a WordPress blog in 5-minutes",
        "Manage your client's WordPress websites",
        "Learn how to get hired as a full-time web designer or web developer",
        "Learn how to start a profitable and successful freelance business as a web designer or developer",
        "Learn how to earn a full-time income from any of the disciplines you learn!",
        "Start a side hustle as a web designer or developer",
        "Learn how to land your first (or next) web design client"
      ],
      "course_content": {},
      "requirements": [
        "No prior web design or coding knowledge required!",
        "Any operating system: Mac, PC, Linux",
        "No expensive software required"
      ],
      "description": "Welcome to the Ultimate Web Designer & Web Developer Course! Are you ready to become a full-stack web designer in 2023? If so, you're in the right place.\nOur comprehensive course is taught by Brad Hussey, a Udemy Partner and experienced web designer with more than 500,000 students worldwide and over 10 years of experience as a professional web designer. From the basics of web design to front-end development skills, this A to Z course covers everything you need to know to succeed in the world of web design and development. It focuses on what you need to learn and avoids unnecessary details. With over 80,000 happy students, this Udemy course is trusted by beginners and experts alike.\nIn this course, you'll learn how to use Adobe Photoshop, sketch professional wireframes, and code with HTML, CSS, JavaScript, and jQuery. You'll also learn about responsive design using frameworks like Bootstrap and Tailwind CSS (coming soon). In addition to building your own project, you'll work on over 23 designs, websites, and applications throughout the course.\nWhat are some of the projects you will build?\nIn addition to working on your very own self-directed project that challenges you to use your new skills as you learn, you'll be building over 23 custom projects throughout the course:\nIn Photoshop:\nDesign a custom web graphic\nDesign a custom business card\nDesign a modern landing page\nRe-design a blog\nIn HTML5 & CSS3:\nMultiple custom websites & web pages\nCode the Google landing page\n\"Orbiting planets\" animation in CSS3\nA responsive \"Startup Style\" website\nIn Javascript & jQuery\nA working \"Tip Calculator\"\nAn actual race car game\nA \"To-Do List\" web application\nIn PHP & MySQL\nDynamic websites\nAn impressive application that fixes clickbait headlines\nWorking \"login\" and \"logout\" sequence\nA profile page that pulls information from a database\nRobust \"Client Address Book\" application that manages your clients' information\nCustom WordPress plugin\nIn AngularJS\nReal Estate Listing Single-Page Application\nIn WordPress Plugins\nCustom, real-world \"survey\" plugin\n...and much more\nOnce you've mastered the front-end, we'll delve into advanced skills like PHP, MySQL, WordPress, and custom WordPress plugin development. By the end of the course, you'll have the skills and knowledge to start your own successful web design career, whether you want to work as a freelancer or at a design agency.\nBut it doesn't end there! Our course also includes a career section that provides valuable tips, resources, and real-world guidance to help you succeed in your new career. With step-by-step instruction from one of the most experienced and passionate web design educators around, you'll be well on your way to becoming a successful web designer.\nSo don't wait any longer. Join our course today and start your journey to becoming a full-stack web designer in 2023!\nSee you on the inside!",
      "target_audience": [
        "Web developers & Programmers looking to dramatically improve their design skills",
        "Graphic & Web Designers who want to improve their web development & coding skills",
        "Total beginners who want to learn how to plan, design and code amazing websites & applications",
        "People who want to make a comfortable living online as a web designer or developer",
        "Professionals who desperately want to leave the 9-to-5 for a fruitful new web design career",
        "Freelancers who want to deliver higher value to their web design clients",
        "Designers & developers who want to know how to start a successful freelance business",
        "Anyone who likes a bit of fun :)"
      ]
    },
    {
      "title": "JavaScript & jQuery - Certification Course for Beginners",
      "url": "https://www.udemy.com/course/javascript-jquery-certification-course-for-beginners/",
      "bio": "Add Animated, Dynamic, Client-Side Functionality to your Web Pages using JavaScript & jQuery",
      "objectives": [
        "JavaScript Placement",
        "JavaScript Output",
        "JavaScript Variables",
        "JavaScript Assignment & Arithmetic Operations",
        "JavaScript Data Types & Objects",
        "JavaScript Math Functions",
        "JavaScript Arrays, Array Attributes, and Array Splicing",
        "Joining & Sorting Arrays",
        "JavaScript Conditional Statements and Comparisons",
        "JavaScript Loops (For-In, While, Do-While, Break & Continue)",
        "JavaScript Functions & Events",
        "jQuery Selectors (ID, Class, Other)",
        "jQuery Events, Multiple Event Handlers, Hiding-Showing, Toggle, Fades, Slides",
        "jQuery Animations",
        "jQuery Stop, Callback Functions, Chaining, Draggables, Accordion Menus",
        "jQuery Get Content, Set Content, Append and Prepend",
        "jQuery Add, Remove, & Toggle Class"
      ],
      "course_content": {
        "JavaScript Development": [
          "JavaScript - DOM Introduction",
          "JavaScript - DOM Manipulation",
          "JavaScript - Introduction",
          "JavaScript Placement",
          "External JavaScript",
          "JavaScript Output",
          "JavaScript InnerHTML",
          "JavaScript Commenting",
          "JavaScript Constants",
          "JavaScript Variables Introduction",
          "JavaScript Assignment Operator",
          "JavaScript Arithmetic Operations",
          "JavaScript Arithmetic Operations Continued",
          "JavaScript Operator Precedence",
          "JavaScript Data Types",
          "JavaScript Objects",
          "JavaScript Object Output",
          "JavaScript Strings",
          "JavaScript String Length",
          "JavaScript Special Characters",
          "JavaScript Random Numbers",
          "JavaScript Min and Max Function",
          "JavaScript Math Round Function",
          "JavaScript Arrays",
          "JavaScript Array Attributes",
          "JavaScript Arrays - Pop - Push - Shift - Unshift",
          "JavaScript Changing and Deleting Elements",
          "JavaScript Splicing an Array",
          "JavaScript Sorting an Array",
          "JavaScript Joining Arrays",
          "JavaScript Conditional Statements",
          "JavaScript Comparisons",
          "JavaScript Booleans",
          "JavaScript For Loops",
          "JavaScript For-In Loop",
          "JavaScript While Loops",
          "JavaScript Do-While Loop",
          "JavaScript Break and Continue",
          "JavaScript Functions",
          "JavaScript Events",
          "JavaScript Project 1 - BG Color Changer"
        ],
        "jQuery Development": [
          "Introduction to jQuery",
          "Embedding jQuery",
          "jQuery Syntax and Selector Intro",
          "jQuery ID Selector",
          "jQuery Class Selector",
          "jQuery Other Selectors",
          "External jQuery File",
          "jQuery Events Intro",
          "jQuery Events - mouseenter and mouseleave",
          "jQuery Events - mousedown and mouseup",
          "jQuery Multiple Event Handlers",
          "jQuery Hiding-Showing",
          "jQuery Toggle",
          "jQuery Fade In-Out",
          "jQuery Fade Toggle",
          "jQuery Fade To",
          "jQuery Slide Down",
          "jQuery Slide Up",
          "jQuery Slide Toggle",
          "jQuery Animate",
          "jQuery Animate - Multiple Params",
          "jQuery Animate - Relative Values",
          "jQuery Animate - Queue Functionality",
          "jQuery Stop Method",
          "jQuery Callback Functions",
          "jQuery Chaining",
          "jQuery Draggables",
          "jQuery Accordian Menu",
          "jQuery Get Content - text and html",
          "jQuery Get Content - Val",
          "jQuery Get Content - attr",
          "jQuery Set Content - text - html - val",
          "jQuery Set Attributes - attr",
          "jQuery Append and Preprend",
          "jQuery - After and Before",
          "jQuery Remove and Empty",
          "jQuery Filter Remove",
          "jQuery Add Class",
          "jQuery Remove Class",
          "jQuery Toggle Class"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to the JavaScript & jQuery – Certification Course for Beginners\n\nThis course offers a comprehensive guide into the fundamentals of coding using JavaScript and jQuery. These powerful languages can be used to add animated, dynamic client-side functionality to any web page.\n\nThe JavaScript section of the course takes students on a journey that starts right from the basics. This includes JavaScript placement, and embedding External JavaScript code. From there, we move into variable declaration and operators for performing arithmetic. We also look at the order of operations, and different data types. Students then move into more advanced topics such as:\nJavaScript Objects\nArrays, and Array Attributes\nConditional Statements\nJavaScript Comparisons and Booleans\nJavaScript Loops, Functions, and Events\nThe second section of the course takes an in-depth look into jQuery. This is where students can take their development skills to the next level, by adding interactivity to static elements. We start with foundational concepts such as embedding jQuery, and various selectors. We then explore jQuery events, Animations, complex functions, and much more.\nWhat you'll learn\nJavaScript Placement\nJavaScript Output\nJavaScript Variables\nJavaScript Assignment & Arithmetic Operations\nJavaScript Data Types & Objects\nJavaScript Math Functions\nJavaScript Arrays, Array Attributes, and Array Splicing\nJoining & Sorting Arrays\nJavaScript Conditional Statements and Comparisons\nJavaScript Loops (For-In, While, Do-While, Break & Continue)\nJavaScript Functions & Events\njQuery Selectors (ID, Class, Other)\njQuery Events, Multiple Event Handlers, Hiding-Showing, Toggle, Fades, Slides\njQuery Animations\njQuery Stop, Callback Functions, Chaining, Draggables, Accordion Menus\njQuery Get Content, Set Content, Append and Prepend\nIf you are interested in improving your web development skills, then look no further - Enrol today!",
      "target_audience": [
        "Students interested in learning the foundations of JavaScript & jQuery",
        "Beginner Web Developers interested in upgrading their skills",
        "Students interested in adding interactive, animated content to web pages",
        "Students interested in building mobile-responsive web pages."
      ]
    },
    {
      "title": "Microservices with Node JS and React",
      "url": "https://www.udemy.com/course/microservices-with-node-js-and-react/",
      "bio": "Build, deploy, and scale an E-Commerce app using Microservices built with Node, React, Docker and Kubernetes",
      "objectives": [
        "Architect large, scalable apps using a collection of microservices",
        "Deploy a multi-service app to the cloud with Docker and Kubernetes",
        "Solve concurrency issues in a distributed systems environment",
        "Leverage your Javascript skills to build a complex web app",
        "Build a Server-Side Rendered React App to render data from your microservices",
        "Understand how enterprise companies design their infrastructure",
        "Share reusable code between multiple Express servers using custom NPM packages",
        "Write comprehensive tests to ensure each service works as designed",
        "Communicate data between services using a lightning-fast event bus",
        "Write nothing but production-level code. No cutting corners!"
      ],
      "course_content": {
        "Fundamental Ideas Around Microservices": [
          "How to Get Help",
          "Course Resources",
          "Join Our Community!",
          "What Is a Microservice?",
          "Data in Microservices",
          "Quiz - Data in Microservices",
          "Big Problems with Data",
          "Sync Communication Between Services",
          "Event-Based Communication",
          "A Crazy Way of Storing Data",
          "Pros and Cons of Async Communication"
        ],
        "A Mini-Microservices App": [
          "Important - Optional Boilerplate",
          "App Overview",
          "Project Setup",
          "Posts Service Creation",
          "Testing the Posts Service",
          "Implementing a Comments Service",
          "Quick Comments Test",
          "Note on the React App",
          "Addressing Default Export and ReactDom.render Warnings",
          "React Project Setup",
          "Building Post Submission",
          "Handling CORS Errors",
          "Fetching and Rendering Posts",
          "Creating Comments",
          "Displaying Comments",
          "Completed React App",
          "Request Minimization Strategies",
          "An Async Solution",
          "Common Questions Around Async Events",
          "Event Bus Overview",
          "Important Note about Node and Unhandled Promise Rejections",
          "A Basic Event Bus Implementation",
          "Emitting Events",
          "Emitting Comment Creation Events",
          "Receiving Events",
          "Creating the Data Query Service",
          "Parsing Incoming Events",
          "Using the Query Service",
          "Adding a Simple Feature",
          "Issues with Comment Filtering",
          "A Second Approach",
          "How to Handle Resource Updates",
          "Creating the Moderation Service",
          "Adding Comment Moderation",
          "Reminder about Error Catching",
          "Handling Moderation",
          "Updating Comment Content",
          "A Quick Test",
          "Rendering Comments by Status",
          "Dealing with Missing Events",
          "Required Error Handling Update for Query Service",
          "Implementing Event Sync",
          "Event Syncing in Action"
        ],
        "Running Services with Docker": [
          "Deployment Issues",
          "Why Docker?",
          "Why Kubernetes?",
          "Don't Know Docker? Watch This.",
          "Note About Docker Build Output and Buildkit",
          "Dockerizing the Posts Service",
          "Review Some Basic Commands",
          "Dockerizing Other Services"
        ],
        "Orchestrating Collections of Services with Kubernetes": [
          "Installing Kubernetes",
          "IMPORTANT Note for Minikube and MicroK8s Users",
          "A Kubernetes Tour",
          "Important Kubernetes Terminology",
          "Notes on Config Files",
          "Creating a Pod",
          "ErrImagePull, ErrImageNeverPull and ImagePullBackoff Errors",
          "Understanding a Pod Spec",
          "Common Kubectl Commands",
          "A Time-Saving Alias",
          "Introducing Deployments",
          "Creating a Deployment",
          "Common Commands Around Deployments",
          "Updating Deployments",
          "Preferred Method for Updating Deployments",
          "Networking With Services",
          "Creating a NodePort Service",
          "Accessing NodePort Services",
          "Setting Up Cluster IP Services",
          "Building a Deployment for the Event Bus",
          "Adding ClusterIP Services",
          "How to Communicate Between Services",
          "Updating Service Addresses",
          "Verifying Communication",
          "Adding Query, Moderation and Comments",
          "Testing Communication",
          "Load Balancer Services",
          "Load Balancers and Ingress",
          "Important - DO NOT SKIP - Ingress Nginx Installation Info",
          "Installing Ingress-Nginx",
          "Ingress v1 API Required Update + pathType Warning",
          "Writing Ingress Config Files",
          "Important Note About Port 80",
          "Hosts File Tweak",
          "Important Note to Add Environment Variable",
          "Deploying the React App",
          "Unique Route Paths",
          "Final Route Config",
          "Introducing Skaffold",
          "Skaffold API version Update",
          "Skaffold Setup",
          "First Time Skaffold Startup",
          "A Few Notes on Skaffold"
        ],
        "Architecture of Multi-Service Apps": [
          "Big Ticket Items",
          "App Overview",
          "Resource Types",
          "Service Types",
          "Events and Architecture Design",
          "Note on Typescript",
          "Auth Service Setup",
          "Auth K8s Setup",
          "Adding Skaffold",
          "Note on Code Reloading",
          "Ingress v1 API Required Update",
          "Ingress-Nginx Setup",
          "Hosts File and Security Warning"
        ],
        "Leveraging a Cloud Environment for Development": [
          "Note on Remote Development",
          "Remote Dev with Skaffold",
          "Free Google Cloud Trial and Credits",
          "Google Cloud Initial Setup",
          "Kubernetes Cluster Creation with Autopilot",
          "Kubectl Contexts",
          "Initializing the GCloud SDK",
          "Installing the GCloud Context",
          "Updating the Skaffold Config",
          "More Skaffold Updates",
          "Creating a Load Balancer",
          "Final Config and Test"
        ],
        "Response Normalization Strategies": [
          "Creating Route Handlers",
          "Scaffolding Routes",
          "Adding Validation",
          "Handling Validation Errors",
          "Postman HTTPS Issues",
          "Surprising Complexity Around Errors",
          "Other Sources of Errors",
          "Solution for Error Handling",
          "Building an Error Handling Middleware",
          "Communicating More Info to the Error Handler",
          "Encoding More Information In an Error",
          "Subclassing for Custom Errors",
          "Determining Error Type",
          "Property 'param' does not exist on type 'AlternativeValidationError'",
          "Converting Errors to Responses",
          "Moving Logic Into Errors",
          "serializeErrors' not assignable to the same property in base type 'CustomError'",
          "Verifying Our Custom Errors",
          "Final Error Related Code",
          "How to Define New Custom Errors",
          "Uh Oh... Async Error Handling"
        ],
        "Database Management and Modeling": [
          "Creating Databases in Kubernetes",
          "Connecting to MongoDB",
          "Understanding the Signup Flow",
          "Getting TypeScript and Mongoose to Cooperate",
          "Creating the User Model",
          "Type Checking User Properties",
          "Adding Static Properties to a Model",
          "Defining Extra Document Properties",
          "What's That Angle Bracket For?",
          "User Creation",
          "Proper Error Handling",
          "Note on Password Hashing",
          "Reminder on Password Hashing",
          "Adding Password Hashing",
          "Comparing Hashed Password",
          "Mongoose Pre-Save Hooks"
        ],
        "Authentication Strategies and Options": [
          "Fundamental Authentication Strategies",
          "Huge Issues with Authentication Strategies",
          "So Which Option?",
          "Solving Issues with Option #2",
          "Reminder on Cookies vs JWT's",
          "Microservices Auth Requirements",
          "Issues with JWT's and Server Side Rendering",
          "Cookies and Encryption",
          "Adding Session Support",
          "Generating a JWT",
          "JWT Signing Keys",
          "Securely Storing Secrets with Kubernetes",
          "Creating and Accessing Secrets",
          "Accessing Env Variables in a Pod",
          "Common Response Properties",
          "Formatting JSON Properties",
          "The Signin Flow",
          "Common Request Validation Middleware",
          "Sign In Logic",
          "Quick Sign In Test",
          "Current User Handler",
          "Returning the Current User",
          "Signing Out",
          "Creating a Current User Middleware",
          "Augmenting Type Definitions",
          "Requiring Auth for Route Access"
        ],
        "Testing Isolated Microservices": [
          "Scope of Testing",
          "Testing Goals",
          "Testing Architecture",
          "Index to App Refactor",
          "Replacing --only=prod Install Flag",
          "A Few Dependencies",
          "Required MongoMemoryServer Updates",
          "Test Environment Setup",
          "Our First Test",
          "An Important Note",
          "Testing Invalid Input",
          "Requiring Unique Emails",
          "Changing Node Env During Tests",
          "Tests Around Sign In Functionality",
          "Cookie Request is Possibly Undefined Error",
          "Testing Sign Out",
          "Issues with Cookies During Testing",
          "No Overload Matches This Call Error with Cookie",
          "Easy Auth Solution",
          "globalThis has no index signature TS Error",
          "Auth Helper Function",
          "Testing Non-Authed Requests"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript and Express is required",
        "Knowledge of React is good, but not needed",
        "You must be familiar and comfortable with the command line"
      ],
      "description": "Event-Based Architecture? Covered! Server side rendering with React? Yep.  Scalable, production-ready code? Its here!\nThis course requires you to download Docker Desktop from Docker. If you are a Udemy Business user, please check with your employer before downloading software.\nMicroservices are the number one solution for building and scaling out apps that are intended to grow.  Just one little issue: there are few resources online that delve into the most complex and nasty issues around them!  I built this course to fix that.  This course tackles every major issues around microservices head on. From challenges with data replication to confusing unordered event streams, every major challenge of building microservices is covered.\nBeyond focusing on the basics of microservices, this course is a perfect introduction to the world of full-stack development.  You will work all the way from the frontend, assembling a React app using Hooks, to the backend, including database design and deployment strategies.  Every step along the way is covered in tremendous detail, with ample diagrams to ensure every step is crystal clear.\nMany other resources show only the easiest, simplest apps written with microservices.  This course does the opposite: we focus on the most challenging aspects of microservices, challenges that you will likely encounter every single day.  You will see these difficulties first hand, then solve them with easy-to-understand strategies.\n\nHow This Course Works\nThis course doesn't focus on using an off-the-shelf microservices framework. Many exist, but they hide the inner workings and challenges of microservices away from you. Instead, we will be using a minimal number of libraries, and write as much custom code as possible. This will expose you to challenging problems and clever solutions when handling subjects like async events!\n\n\nWhat Technology You'll Use\nBecause we are building a full stack application, we will use a variety of technologies. On the frontend, we'll use React and Next JS to present content to users. Each service is created using Node and Express. Data for each service is held in either a Mongo database or Redis. The entire app is deployed and runs in Docker containers executed in a Kubernetes cluster. Finally, almost all of the code in this course is written with Typescript.\nThis is a scary list of technologies! Not familiar with some of these? No problem! The course is built assuming that you only know the basics of Javascript and Express. No other knowledge is needed - you will learn everything you need to know.\n\n\nWhat You'll Be Able to Do\nBy the time you complete this course, you will be able to:\nArchitect a multi-service application\nDetermine whether your app is a good fit for a microservices approach\nUnderstand and solve the challenges in async, event-based communication between services\nUse Docker and Kubernetes to deploy a multi-service app to any cloud provider\nOrganize and enhance the reusability of code in large projects\n\n\nWhat You'll Learn\nAn absolute incredible number of topics are covered in this course.  Here is a partial list of what you'll do:\nPractice patterns to create scalable microservices for a variety of app domains\nBuild a Server-Side-Rendered React app using Hooks and Next JS\nWrite a custom implementation of an event bus\nOptionally, run a development environment through a cloud provider\nGuarantee consistently structured responses from your different API's\nSee best practices in communication between different services\nConfigure and scale your services using Kubernetes Deployments\nDocument and enforce structure constraints on events shared across microservices\nLimit access to your APIs using JWT-based authentication\nAnd much more!\nThis is the course I wish I had when I was learning microservices. A course that focuses on the hardest parts, gives clear explanations, and discusses the pros and cons of different design options. Sign up today and join me in mastering microservices!",
      "target_audience": [
        "Javascript engineers looking to build large, scalable applications",
        "This course is *not* designed for sysadmins focused on infrastructure deployment"
      ]
    },
    {
      "title": "Modern JavaScript for React JS - ES6",
      "url": "https://www.udemy.com/course/modern-javascript-es6-for-react-js/",
      "bio": "A complete guide for beginners to learn the essential topics of ES6 which are required to learn React JS",
      "objectives": [
        "Learn the basic concepts of modern javascript - ES6",
        "Learn variable creation using 'let' and 'const' keywords and their scope",
        "Learn where to use 'rest' and 'spread' operators",
        "Learn what id destructuring",
        "Lean functional programming in ES6 using map,filter,reduce,find, etc functions",
        "Learn in detail about 'callbacks' and 'promises' along with chaining promises"
      ],
      "course_content": {
        "ES6": [
          "ES6 - Introduction",
          "ES6 - Variable Creation using \"let\" and \"const\"",
          "ES6 - Template Strings",
          "ES6 - Arrow Functions",
          "ES6 - Rest Operator",
          "ES6 - Spread Operator",
          "ES6 - Destructuring",
          "ES6 - Array Functions: map()",
          "ES6 - Arrow Functions: reduce()",
          "ES6 - Arrow Functions: filter()",
          "ES6 - Arrow Functions: find() and findIndex()",
          "ES6 - Introduction to Classes",
          "ES6 - Inheritance in ES6",
          "ES6 - Callbacks and Promises",
          "ES6 - Working with Promises",
          "ES6 - Chaining Promises"
        ]
      },
      "requirements": [
        "Good understanding of JavaScript"
      ],
      "description": "Are you looking to extend your knowledge in Javascript programming by learning the concepts of modern javascript - ES6?\nIf you want to start your journey to become a React or Angular developer, then this is the perfect course for you.\n\nWhat's this course about?\nThis course is specifically designed for those who want to get a quick start with Modern Javascript, especially ES6 concepts. It covers all the basic concepts of ES6: how the javascript has evolved, how to use its latest features that come under ES6 topics, what is babel, and how it is used to compile the ES6 code to make it browser compatible. You will get all the behind the scenes of how the ES6 works in the introduction part of the course.\n\nMore details, please!\nES6/ES7 modern javascript programming is becoming an essential part of the web development industry, as most companies are shifting towards using various popular web frameworks like Angular JS, Vue JS, or React JS. The demand for Developers with knowledge of ES6 is also on the rise. This course will help you get all the essential knowledge from the get-go and you will be a master in the concepts of ES6 by the end of this course.\nIn this course, we have covered :\nAll the basic to advanced concepts of ES6 right from variable declaration using 'let' and 'const' keywords, what is the difference between them and where to use them to the advanced topics like how to make asynchronous requests to servers using async-await and how to use promises to handle the requests more efficiently\nWhat are arrow functions and how to use them\nAll about functional programming with the help of functions like map, reduce, filter, etc.\nHow to deep clone the objects with help of rest and spread operators and also about the scenarios of where and how we should use them most effectively\nBy the end of this course, you will be ready to learn any latest web framework like React JS, Angular JS, or Vue JS.\n\nWho's teaching you in this course?\nI am a Computer Science graduate highly rated instructor with a rating of 4.3 and more than 200k students on Udemy, I have been part of the corporate circle since my college days. In my early days, I was part of a startup team delivering production grid android apps. Currently, I am a lead developer at EdYoda. I’m responsible for the entire front-end development & integration with the back-end. React, Python, Django is my areas of expertise. I have been delivering corporate training for Android, React, JavaScript, Python & Django. I have an eye for detail & which makes me suited for delivering a finished product. I’m a fitness freak & working out is the favorite thing to do in my spare time.\nI want everyone to enjoy the learning process and I have shared my knowledge that will be helpful for you.\n\nAfter completion, we recommend you watch our React JS course which is the continuation part of this course where we have explained React JS frameworks in and out with some simple explanation along with assignments and projects.\n\n\n\nEnroll now!! See you in class.\n\nHappy learning !!\nTeam Edyoda",
      "target_audience": [
        "Beginners who want to learn ES6 - modern javascript from scratch",
        "Professionals who have a good knowledge about Javascript and want to learn ES6 in their skillset",
        "JavaScript developers who want to get into React",
        "Developers who want to brush up on the skills of widely used features of ES6"
      ]
    },
    {
      "title": "JSON - Beginners Guide to learning JSON with JavaScript",
      "url": "https://www.udemy.com/course/learn-json-course/",
      "bio": "Explore JSON and how JavaScript Objects can be used to access data within JSON data format and output to your web page",
      "objectives": [
        "Connect to APIs and retrieve JSON data",
        "Parse JSON data from Strings",
        "Be able to work with JavaScript Objects",
        "Understand how JavaScript Arrays work",
        "Create JSON object arrays"
      ],
      "course_content": {
        "Introduction to learning JSON": [
          "Introduction to Course JSON",
          "Introduction to JSON",
          "Explore JavaScript Objects",
          "Source Code 2",
          "How to use JSON Objects",
          "JSON stringify and Parse",
          "Source Code 4",
          "JavaScript how to Store to Local Storage",
          "Source Code 5",
          "Parse and Stringify in action Storage Exercise",
          "Source Code 6",
          "Output JSON data API",
          "Source Code 7",
          "JavaScript Fetch JSON",
          "JSON AJAX API content to HTML",
          "Source Code 9",
          "API handle Multiple results",
          "Using JavaScript Map to output values",
          "Value to Uppercase",
          "Source Code 12",
          "Get more data from JSON",
          "Source Code 13",
          "Google Spreadsheet Practice Exercise",
          "Source Code 14",
          "Google Spreadsheet Data as JSON practice JSON and JavaScript",
          "Source Code 15",
          "Source Code JSON overview",
          "Resources"
        ],
        "JSON and JavaScript Code Examples": [
          "JSON coding example",
          "JSON and JavaScript code example",
          "JavaScript Arrays Remove and Update Items",
          "Coding ExampleJavaScript JavaScript Arrays Remove and Update Items",
          "How to connect to a JSON API output results on page using AJAX JavaScript",
          "Xhr vs Fetch for JSON data"
        ],
        "Expanded Resources and Materials": [
          "Learning Enhancement Resources"
        ]
      },
      "requirements": [
        "Basic JavaScript/jQuery",
        "Understanding of web development",
        "Desire to learn about JSON and APIs"
      ],
      "description": "Guide to learning how to use JavaScript Objects and JSON data.  JSON is the most popular format for data exchange between applications.  If you are interested in connected to a web API chances are its JSON formatted.   Learn to use AJAX to connect and bring JSON data into your JavaScript!\nThis course shows you how to work with JSON formatted data, output content, loop JSON data, Parse JSON and a whole lot more.\nJSON (JavaScript Object Notation) is a syntax for data.  JSON is easier to use than XML and human readable.   Most modern web APIs output data in JSON formats.  It's a lightweight data interchange format that is quickly becoming the default format for data exchange on internet today!  JSON is lightweight, language independent and easy to read and write.  JSON is better than XML and more popular!\nWithin the lessons of this course we will explore\nJavaScript data types used to hold variables and how they work\nJSON and how to write JSON data\nHow to add values into a JSON object\nAccessing JSON data and bringing it into JavaScript\nJavaScript JSON parse and stringify methods\nAdding JSON to local storage\nRetrieving back data within JSON formats, updating and working with JSON\nConnecting to a web API using fetch\nRetrieving JSON data from a web API and outputting the results into your web page\nIterating threw multiple results from an API\nGoogle Spreadsheet data as JSON and how to practice retrieving data\nAll of the source code and resources are in included\nExplore different methods of working with the JSON data stringify and parsing\nHow JavaScript objects can use Arrays to hold multiple items\nHow JavaScript arrays work and store data\nGet started with JSON quickly\nUnderstanding the basics of JavaScript and how to create websites is a prerequisites to this course.  It covers working within JavaScript code to produce dynamic functionality.  Learning how to work with JSON is a key skill within modern web development.   JSON and APIs are everywhere, once you start working with them you will be amazed at what can be done with a few lines of code.\n\nTaught by an instructor with over 18 years of real world web development experience.  Friendly support is always available within the Q&A section of this course.  I'm here to help you learn about JSON and ready to answer any questions you may have.  One course instructor who is also a web developer with the real world knowledge to help you learn.\nJoin now and bring some JSON data into you web applications today.\nEverything you need to get started using JSON is included within this course..\n\nResources, source files and top links are also included.\nLet's get ready to learn JSON and AJAX",
      "target_audience": [
        "Web developers",
        "anyone interested in JSON",
        "Anyone working with APIs",
        "Front end applications developers",
        "Anyone who wants to access web APIs"
      ]
    },
    {
      "title": "ChatGPT Complete Course - Prompt Engineering for ChatGPT",
      "url": "https://www.udemy.com/course/chat-gpt/",
      "bio": "ChatGPT, ChatGPT App Store, Prompt Engineering in ChatGPT, AI Prompt Engineering, Learn Prompt Design and Generative AI",
      "objectives": [
        "How to use ChatGPT",
        "How to write effective ChatGPT prompts to elicit information",
        "Create and Use ChatGPT Prompt Libraries",
        "Advance Your Communication Skills with ChatGPT",
        "Write effective copy using ChatGPT",
        "Use ChatGPT to write character biographies",
        "Use ChatGPT to come up with plot points and ideas for fictional works",
        "How to learn more about people, places and things using ChatGPT",
        "Learn Prompt Engineering and Design with ChatGPT",
        "How to use ChatGPT to advance your career",
        "How to use ChatGPT to prepare for job interviews",
        "How to use ChatGPT to target your resume for a specific job description",
        "How to use ChatGPT to improve your LinkedIn Profile",
        "How to use ChatGPT to script podcasts",
        "How to use ChatGPT to script YouTube videos",
        "How to use ChatGPT to code games in Python",
        "How to use ChatGPT to create web pages",
        "How to use ChatGPT to come up with ideas and use ChatGPT as your personal idea machine.",
        "How to use ChatGPT to write Batch Apex in Salesforce",
        "How to use ChatGPT to write Apex Test Classes in Salesforce",
        "How to access ChatGPT in the New Bing Search Engine",
        "How to join the OpenAI Discord Channel",
        "How to use ChatGPT for document translation",
        "How to use ChatGPT for text generation",
        "How to detect the use of ChatGPT and other AI tools in various written works",
        "How to use ChatGPT to outline and write a book",
        "How to use ChatGPT with various social media networks",
        "How to access Chat GPT 4",
        "How to sign up for and access ChatGPT Plus",
        "How to use ChatGPT to write HTML, Javascript and CSS for styled webpages",
        "How to use ChatGPT Prompt Engineering and Design to control tone and response length",
        "How to perform mass prompting inside of ChatGPT",
        "How to use ChatGPT to overcome technology challenges",
        "How to use ChatGPT to solve compatibility issues",
        "How to use ChatGPT to strengthen security",
        "How to use ChatGPT to translate technical jargon",
        "How to use ChatGPT to navigate complex software and systems",
        "How to use ChatGPT to translate code into human readable text",
        "How to use ChatGPT to create Regex / Regular Expressions for you",
        "How to use ChatGPT to debug code and for code completion",
        "Learn Prompt Engineering",
        "How to use Replit with ChatGPT",
        "Learn Prompt Design",
        "How to translate code from one language to another using ChatGPT",
        "How to use ChatGPT to discern sentiment analysis",
        "How to use ChatGPT to generate R code for data visualization",
        "How to use ChatGPT to classify and categorize text",
        "How to use ChatGPT to create ascii art",
        "How to use ChatGPT to create algorithms",
        "How to use ChatGPT to write SQL queries"
      ],
      "course_content": {
        "Introduction": [
          "Signing Up for a ChatGPT Account",
          "Generative AI Glossary and Course Updates",
          "ChatGPT 5 Updates",
          "ChatGPT 5 Demo",
          "Your First ChatGPT Prompt",
          "How ChatGPT Works",
          "Prompt Engineering and Design - Crafting Effective Prompts for ChatGPT",
          "ChatGPT Custom Instructions - Train ChatGPT - Similar to a Pre-Prompt Design",
          "ChatGPT vs. ChatGPT Plus Speedtest",
          "Platform.OpenAI.com - Documentation, Example Applications and API",
          "Joining the OpenAI Discord",
          "ChatGPT Prompt Response Copy",
          "Share Chats to Continue the Conversation with Others"
        ],
        "Using ChatGPT for Communication": [
          "Using ChatGPT for Communication Introduction",
          "Using ChatGPT to Write Emails",
          "Using ChatGPT for Ideation - Your Idea Machine",
          "Using ChatGPT to Write Social Media Posts",
          "Using ChatGPT to Write a Blog Articles",
          "Using ChatGPT for Search Engine Optimization (SEO)",
          "Using ChatGPT to Generate a Book Outline",
          "Using ChatGPT to Build a Book Chapter",
          "Using ChatGPT to Write YouTube Scripts",
          "Using ChatGPT to Write YouTube Titles, Descriptions and Tags/Keywords",
          "Using ChatGPT to Write Podcast Scripts",
          "Using ChatGPT to Write Podcast Episode Notes",
          "Using ChatGPT for Translation",
          "GPT4 Launched - NOTE: Available in ChatGPT Plus Only"
        ],
        "Using ChatGPT for Career Advancement": [
          "Using ChatGPT for Career Advancement Introduction",
          "Using ChatGPT to Write Job Search Emails",
          "Using ChatGPT to Improve Your Resume",
          "Using ChatGPT to Improve Your LinkedIn Profile",
          "Using ChatGPT for Increasing LinkedIn Engagement and Reach",
          "Using ChatGPT to Tailor Your Resume for a Specific Job Description",
          "Using ChatGPT to Write Tailored Cover Letters",
          "Using ChatGPT to Prepare for Job Interviews"
        ],
        "Using ChatGPT for Basic Coding": [
          "Using ChatGPT for Basic Coding Introduction",
          "Using ChatGPT to Display 'Hello World' in Different Coding Languages",
          "Using ChatGPT to Explain What Code Does and Create Code Comments",
          "Using ChatGPT to Create a Basic Webpage in HTML",
          "Using ChatGPT to Style Your Webpage"
        ],
        "ChatGPT Prompt Engineering and Design": [
          "ChatGPT Prompt Engineering and Design Introduction",
          "Every ChatGPT Chat is a Blank Canvas",
          "Going Deeper with Prompts – Effective Prompt Design with the Help of ChatGPT",
          "Concise vs. Verbose Spectrum of Responses",
          "Mass Prompting in ChatGPT",
          "Prompt Engineering Jobs Outlook"
        ],
        "ChatGPT Engineering Prompts for Learning with Focus Prompts": [
          "Engineering Prompts for Learning with Focus Prompts Introduction",
          "Subject-Focused Learning Prompts",
          "Problem-Focused Learning Prompts",
          "Learner-Focused Learning Prompts"
        ],
        "Shots and CoTs - Types of Prompts for ChatGPT Introduction": [
          "Chain-of-Thought Prompts - a.k.a. CoT Prompts",
          "Zero-Shot Prompts",
          "Zero-Shot CoTs - Let's Think Step by Step",
          "One Shot Prompts",
          "Few Shot Prompts"
        ],
        "ChatGPT for Technology": [
          "ChatGPT for Technology Introduction",
          "Using ChatGPT to Overcome Technical Issues",
          "Using ChatGPT to Overcome Compatibility Issues",
          "Using ChatGPT to Strengthen Security",
          "Using ChatGPT to Navigate Complex Software and Applications",
          "Using ChatGPT to Translate Technical Jargon"
        ],
        "Cracking the Code – Intermediate Development with ChatGPT": [
          "Cracking the Code – Intermediate Development with ChatGPT Introduction",
          "Translating Code to Human Readable Text",
          "Using ChatGPT for Code Completion",
          "Using ChatGPT for Debugging Code",
          "Translating Code from One Language to Another",
          "Using ChatGPT for Regular Expression – Regex"
        ],
        "Using ChatGPT for Data Management and Visualization": [
          "Using ChatGPT for Data Management and Visualization Introduction",
          "Using ChatGPT for Text Generation",
          "Using ChatGPT for Sentiment Analysis",
          "Using ChatGPT for Text Classification",
          "Using ChatGPT for Answering Questions",
          "Using ChatGPT to Generate ASCII Art",
          "Using ChatGPT to Generate R Code for Data Visualization",
          "Using ChatGPT for Text Cleansing"
        ]
      },
      "requirements": [
        "No prior ChatGPT knowledge is required",
        "All you need is an internet connection and a curiosity about ChatGPT",
        "Although I demonstrate ChatGPT Plus as well as the brand new GPT4 model, you can follow along in a free ChatGPT account!"
      ],
      "description": "Embark on a transformative journey into AI with Mike Wheeler, your guide in this Udemy Best Seller course on ChatGPT and Prompt Engineering. As an experience instructor who has taught well over 300,000 students, Mike unveils the secrets of developing your own custom GPTs, ensuring your skills shine in the thriving digital marketplace. This course will get your familiar with Generative AI and the effective use of ChatGPT and is perfect for the beginner. You will also learn advanced prompting techniques to take your Prompt Engineering skills to the next level!\nThis course is broken into the following sections, one section building upon the next:\nIntroduction to ChatGPT\nUsing ChatGPT for Communication\nUsing ChatGPT for Career Advancement\nUsing ChatGPT for Basic Coding\nChatGPT Prompt Engineering and Design\nEngineering Prompts for Learning with Focus Prompts\nShots and CoTs - Types of Prompts Introduction\nChatGPT for Technology\nCracking the Code - Intermediate Development with ChatGPT\nUsing ChatGPT for Data Management and Visualization\nAdvanced ChatGPT Development Techniques\nExtending ChatGPT and Updates\nMy GPTs and the ChatGPT Store - Custom GPTs\nThe curriculum keeps pace with the rapid advancements of ChatGPT and is updated often. This provides you with the most up-to-date knowledge and practical ChatGPT skills. Whether your goal is career advancement, business growth, or simply a passion for AI, Mike’s hands-on approach will empower you to leverage ChatGPT to its fullest potential.\nFrom initiating your free ChatGPT account to delving into the nuances of OpenAI's ChatGPT Plus, enjoy tailored insights to help you navigate and excel in the world of AI.\nNewly updated to cover custom GPT creation using ChatGPT's GPT Builder, along with publishing to the GPT Store.",
      "target_audience": [
        "Beginners wanting to learn what the fuss is about ChatGPT",
        "Those who are ChatGPT curious",
        "Those that want to use Chat GPT to improve their writing",
        "Those that want to use ChatGPT for creative endeavors",
        "Aspiring Prompt Engineers, Prompt Designers, Prompt Librarians",
        "Beginning developers who wish to advance their skills by using ChatGPT",
        "Those that wish to take ChatGPT to the next level",
        "Those striving to improve their productivity using ChatGPT"
      ]
    },
    {
      "title": "Asynchronous JavaScript: Promises, Callbacks, Async Await",
      "url": "https://www.udemy.com/course/asynchronous-javascript-promises-callbacks-async-await/",
      "bio": "Become an expert in Asynchronous JavaScript: Promises, Callbacks, Async Await, Event Loop, etc.",
      "objectives": [
        "Learn fundamental concepts of Asynchronous JavaScript",
        "Everything you need to know about Promises",
        "Using Callbacks: Pros and Cons, when to use and how to test them",
        "Async / Await - the modern way of handling asynchronous tasks in JavaScript",
        "In-depth understanding of the Event Loop",
        "Learn how JavaScript Engine executes code behind the scenes",
        "Unit Testing of asynchronous functions",
        "No fluff, direct and to the point",
        "Github repository with all the code included"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Structure of This Course"
        ],
        "Difference Between Synchronous And Asynchronous Actions": [
          "What Is Asynchronicity?",
          "Typical Example of an Asynchronous Action in JavaScript",
          "Synchronous vs Asynchronous in JavaScript",
          "Quick Note about Github Repository",
          "Event Loop in JavaScript. Call Stack and Task Queue",
          "Let's Fix Our Example"
        ],
        "Callbacks In JavaScript": [
          "What Is a Callback In JavaScript?",
          "Callbacks Are Not Always Asynchronous",
          "How To Handle Errors In Asynchronous Code",
          "Pros & Cons Of Callbacks",
          "Callback Examples In JavaScript Libraries",
          "Callbacks Lack Readability",
          "Making HTTP Requests From Your Browser",
          "Callback Hell"
        ],
        "Testing Asynchronous Callbacks": [
          "Setting Up Testing Environment",
          "Testing Callback Functions With Mocha And Chai"
        ],
        "Promises In JavaScript": [
          "What Is a Promise In JavaScript",
          "How To Create A Promise",
          "Final States Of The Promise",
          "How To Consume JavaScript Promises: Promise.then",
          "Rewriting Our Function Using Promises",
          "How To Promisify any JavaScript Function",
          "Chaining Promises",
          "Making HTTP Requests Using Fetch API",
          "How To Avoid Callback Hell",
          "Handling Promise Rejections",
          "Promise.resolve and Promise.reject",
          "Executing Promises In Parallel: Promise.all",
          "How Promise.all Handles Rejections",
          "Promise.all: Implementing From Scratch",
          "Executing Promises In Parallel: Promise.allSettled",
          "Promise.allSettled: Implementing From Scratch",
          "Which Promise Is Faster? Promise.race",
          "Getting First Successful Promise: Promise.any",
          "Promise.race: Implementing From Scratch",
          "Promise.any: Implementing From Scratch"
        ],
        "Testing Promises In JavaScript": [
          "Setting Up Testing Environment",
          "Testing JavaScript Promises Using Mocha And Chai",
          "Timeouts In Mocha",
          "Making Multiple Promise Assertions In One Test"
        ],
        "Async Await in JavaScript": [
          "Async Functions in JavaScript",
          "Await Keyword in JavaScript",
          "Using Async Await with Fetch API",
          "Top Level Await",
          "Handling Errors Using Async Await",
          "Sequential vs Parallel Execution"
        ],
        "Advanced Version of Event Loop": [
          "What About Task Priorities?",
          "A Closer Look at the Task Queue",
          "Handling Long Tasks in JavaScript. Part 1",
          "Handling Long Tasks in JavaScript. Part 2",
          "Microtasks",
          "Debugging Our Initial Example",
          "Animations",
          "Creating Animations Using requestAnimationFrame",
          "Quick Recap of Event Loop in the Browser"
        ],
        "Summary": [
          "Summary",
          "Bonus Lecture: Other Courses with Discounts"
        ]
      },
      "requirements": [
        "Basics of JavaScript"
      ],
      "description": "My main goal is to help you master Asynchronous JavaScript. This course was specifically designed for those who want to improve their skills in Callbacks, Promises, Async Await, and Event Loop. This course was designed to be easy to understand, and therefore there are a lot of visuals in it, especially when we are talking about important concepts. You will also see a lot of coding examples along the way.\nWe will be talking about 3 main components of Async JavaScript: Callback functions, Promises, and Async Await.\nCallbacks in JavaScript are used everywhere. Creating event handlers, making HTTP requests, interacting with the DOM, setting timeouts, reading or writing data to the filesystem, working with databases, etc. I am pretty sure you are already using callbacks in your code, but I am not sure if you know how they actually work... Knowing how things really work will help you write your code faster and avoid weird bugs.\nPromises were created as a better alternative to callbacks. They don't have drawbacks that callbacks have. JavaScript promises are incredibly helpful when you have several asynchronous operations that depend on each other. However, promises are a new concept which you have to learn, and this course will help you with that.\nAsync Await is a syntactic sugar around Promises introduced in EcmaScript 8. Before that writing asynchronous code in JavaScript was very different from writing ordinary synchronous code. Async await allows you to structure all your code in a similar way, no matter if it's synchronous or asynchronous.\nThere is a lot of asynchronous stuff going on in popular JavaScript libraries and frameworks: React, Angular, Vue.js, jQuery, etc. In NodeJS it's almost impossible to write anything without using asynchronous operations. After watching this course you will be able to read and write asynchronous JavaScript code effectively, and you will definitely understand how it works behind the scenes!\nP. S. Made in Ukraine",
      "target_audience": [
        "Developers with basic JavaScript knowledge",
        "Those who want to master Asynchronous JavaScript, Callbacks, Promises, Async Await"
      ]
    },
    {
      "title": "The Advanced Web Developer Bootcamp",
      "url": "https://www.udemy.com/course/the-advanced-web-developer-bootcamp/",
      "bio": "Learn React 16, Redux, D3, ES2015, Testing, CSS Flexbox, Animations, SVG, AJAX, and more!",
      "objectives": [
        "Make REAL web applications using cutting-edge technologies",
        "Build responsive applications using modern CSS technologies like flexbox",
        "Build JSON APIs using Node, Express and MongoDB",
        "Learn the most popular front end library React and master the fundamentals around state, props and the component lifecycle",
        "Use babel and webpack to transpile and bundle code",
        "Understand what the Virtual DOM is and how React performs reconciliation",
        "Leverage Component Lifecycle methods with React to include making AJAX calls properly",
        "Secure Node, Express, Mongo and React applications on the front-end and back-end using bcrypt and JSON Web Tokens",
        "Add routing to a single page application with the most popular routing library for react, React Router.",
        "Manage State with a centralized store using Redux",
        "Connect Redux with a React application to build scalable production applications with client-side state management",
        "Select and manipulate elements in the DOM using D3",
        "Build dynamic visualizations using D3 and SVG",
        "Use D3 to build scatterplots, histograms, pie charts and force graphs",
        "Build compelling map visualizations with GeoJSON and TopoJSON",
        "Master how to handle asynchronous code using callbacks, promises, generators and async functions",
        "Understand how JavaScript handles asynchronous code using the Event Loop with the Stack, Heap and Queue.",
        "Use advanced array methods to build a solid understanding of functional programming",
        "Create dynamic single page applications using AJAX",
        "Structure applications with design patterns using closure and modules",
        "Explain how Object Oriented Programming works with a thorough understanding of the keyword this and the new keyword",
        "Refactor code using call, apply and bind to remove duplication",
        "Use jQuery to build single page applications and understand the limitations of just using jQuery",
        "Create block scope with the let keyword and use the const keyword to prevent variables from being redeclared",
        "Clean up code using arrow functions and master method binding without using the bind keyword",
        "Use default parameters, for of loops and the rest and spread operator to write more concise and more maintainable code",
        "Refactor an ES5 application to use ES2015",
        "Master the new class syntax and create instance methods, class methods",
        "Implement inheritance in ES2015 using extends and super",
        "Leverage newer data structures like Maps and Sets to better solve problems",
        "Learn cutting edge features to the JavaScript language with ES2016, 2017 as well as experimental JavaScript additions",
        "Solve problems similar to what you would get in a developer interview or phone screen"
      ],
      "course_content": {
        "Course Introduction": [
          "The Story Of This Course",
          "Curriculum Walkthrough",
          "Learning Paths",
          "Introducing the Team"
        ],
        "CSS Animations: Transforms and Transitions": [
          "Section Introduction",
          "Introduction To CSS Animations",
          "Why Animations Matter",
          "Intro To Pseudoclasses",
          "Pseudo-Classes: Hover",
          "First Pseudo-Class Quiz",
          "Pseudo-Classes: Focus",
          "Pseudo-Classes: Active",
          "Quick Pseudoclasses Exercise",
          "Building An Animated Button",
          "Introduction to Transform",
          "Transform: Translate",
          "Transform:Scale() and Transform-Origin",
          "Transform: Rotate()",
          "A Note on Vendor Prefixes",
          "Transitions Basics",
          "Transition-Duration and Transition-Property",
          "Transition-Timing-Function and Transition-Delay",
          "Transition Shorthand",
          "CSS Animation Performance",
          "Building An Animated Gallery"
        ],
        "CSS Animations: Keyframes": [
          "Introduction to Keyframes",
          "Codealong: Animated Rainbow Flashing Text",
          "Other CSS Animation Properties",
          "Exercise: Rising and Setting Sun Animation",
          "Exercise SOLUTION : Rising and Setting Sun Animation",
          "CSS Animation Shorthand",
          "Building an Animated CSS Loading Icon"
        ],
        "Advanced CSS: Layout With Flexbox": [
          "Section Introduction",
          "Introduction To Flexbox",
          "The Magic of Display: Flex",
          "Important Flexbox Terminology",
          "Flex-Direction",
          "Flex-Wrap",
          "Flexbox Quiz",
          "Justify-Content",
          "Flexbox Sidebar Exercise",
          "Flexbox Sidebar Exercise: SOLUTION",
          "Align-Items",
          "Align-Content",
          "Building A Responsive Navbar CODEALONG",
          "Align-Self",
          "Order",
          "flex-basis",
          "flex-grow",
          "Flex-Shrink",
          "Building a Polygon.com Widget",
          "Exercise: Holy Grail Layout",
          "Exercise: Holy Grail Layout SOLUTION",
          "Flexbox Browser Support"
        ],
        "Project: Building A Startup Site": [
          "Introducing Matt",
          "Section Introduction",
          "Project: Introduction",
          "Project Solution: Nav and Header",
          "Project Solution: Destinations and Features",
          "Project Solution: Testimonials, Contact, and Footer",
          "Project Solution: Responsive Design"
        ],
        "Async Foundations": [
          "Introducing Tim",
          "Introduction",
          "Callback Functions",
          "Codealong: forEach",
          "findIndex Exercise Intro",
          "findIndex",
          "findIndex Solution",
          "The Stack And The Heap",
          "The Stack: An Example",
          "setTimeout and setInterval",
          "Exercise: countDown Function",
          "countDown Exercise Solution",
          "The Event Loop And The Queue",
          "Event Loop Quiz",
          "Promise Basics",
          "Promise Chaining"
        ],
        "AJAX Part 1: XHR and Fetch": [
          "Intro to AJAX",
          "What's the deal with JSON and XML?",
          "Making Our First Request with XMLHTTPRequest",
          "AJAX Workflow: Building The Random Image App",
          "Bitcoin Price Exercise",
          "Bitcoin Price Exercise Solution",
          "Fetch Introduction",
          "Fetch Options",
          "Fetch Error Handling",
          "Fetch Random User Profile Exercise",
          "Fetch Random User Profile Exercise Solution",
          "The Problem With Fetch"
        ],
        "AJAX Part 2: jQuery and Axios": [
          "jQuery AJAX Introduction",
          "jQuery $.ajax Method",
          "Digging In The jQuery Sourcecode",
          "jQuery AJAX Shorthand Methods",
          "jQuery Random Cats API Exercise",
          "jQuery Random Cats Exercise SOLUTION",
          "Axios Intro",
          "Axios Error Handling",
          "Ron Swanson Exercise",
          "Ron Swanson Exercise Solution"
        ],
        "Testing With Jasmine": [
          "Introducing Elie",
          "Section Introduction",
          "Writing Tests in the Browser",
          "Jasmine Syntax and Matchers",
          "Writing Better tests with Hooks",
          "Quiz - Jasmine Matchers and Hooks",
          "Spies",
          "Quiz - Jasmine Spies",
          "Clocks",
          "Jasmine Async",
          "TDD and BDD",
          "Different Types of Tests"
        ],
        "Advanced Array Methods": [
          "Section Introduction",
          "forEach",
          "Exercise: forEach",
          "Exercise SOLUTION: forEach",
          "map",
          "Exercise: Map",
          "Exercise SOLUTION: Map",
          "Filter",
          "Exercise: Filter",
          "Exercise SOLUTION: Filter",
          "Some",
          "Every",
          "Exercise: Some and Every",
          "Exercise SOLUTION: Some and Every",
          "Reduce",
          "Reduce Continued",
          "Exercise: Reduce",
          "Exercise SOLUTION: Reduce",
          "Array Methods Recap"
        ]
      },
      "requirements": [
        "Have a basic understanding of HTML and CSS",
        "Have a fundamental understanding of JavaScript - how to create variables, use conditional logic, looping, objects, arrays and functions",
        "Prepare to build real web apps with the latest JavaScript technologies!"
      ],
      "description": "Hi! Welcome to the Advanced Web Developer Bootcamp, the complete course that will help you learn the latest technologies, tools and libraries to become a proficient web developer.  Think of this course as an encyclopedia of all the  knowledge you need to take your developer skills to the next level.\nThere are quite a few options out there for online training, but we are certain this course is the most comprehensive and frankly the best one out there - here’s why:\nThis course is taught by professional bootcamp instructors. The material you’re going to learn has been taught to hundreds of students in person and hundreds of thousands online.\nEverything we’ll cover in this course is up-to-date and even anticipates future advancements to prepare you for what is to come. We focus on the most commonly used technologies, libraries and frameworks.\nThis is the only full-stack developer course that covers Advanced CSS, Advanced JavaScript, NodeJS, D3, React and Redux!!\nWe build over 10 projects and have dozens of code challenges with solutions to ensure you understand the material and don’t just watch us talk!\nYou get to meet our wonderful course mascot - Whiskey the dog!\nThroughout the course we cover tons of tools and technologies including:\nReact\nReact-Router\nRedux\nCSS3 Transitions, Transforms and Animations\nTesting with Jasmine\nD3\nSVG\nBuilding charts, force graphs and data visualizations\nES2015 keywords, arrow functions, class syntax, and much more\nES2016 and ES2017 and cutting edge features to JavaScript\nCallbacks, Promises, Generators and Async Functions\nBuilding Node.js APIs\nBuilding Single Page Applications\nObject Oriented Programming in JavaScript\nClosures and the keyword 'this'\nFunctional Programming in JavaScript\nAuthentication and Authorization\nAsynchronous Code with JavaScript\nThis course is also unique in the way that it is structured and presented. Many online courses are just a long series of \"watch as I code\" videos. This course is different. I've incorporated everything I learned in my years of teaching to make this course not only more effective but more engaging. The course includes:\n\nLectures\nCode-Alongs\nProjects\nExercises and Solutions\nResearch Assignments\nSlides\nDownloads\nReadings\nIf you have any questions, please don't hesitate to contact us. We’ve all been working in the education industry for the past four years and love working with people and helping students learn. Sign up today and see how fun, exciting, and rewarding web development can be!\nIf you want to take ONE COURSE to learn everything you need to know to be successful as a modern JavaScript web developer, take this course.",
      "target_audience": [
        "This course is for anyone who wants to continue learning about web development",
        "It’s fantastic for someone who has the fundamentals down, but wants to explore more advanced concepts and technologies to be successful as a developer"
      ]
    },
    {
      "title": "The Complete React Developer Course (w/ Hooks and Redux)",
      "url": "https://www.udemy.com/course/react-2nd-edition/",
      "bio": "Learn how to build and launch React web applications using React, Redux, Webpack, React-Router, and more!",
      "objectives": [
        "Build, test, and launch React apps",
        "Use cutting-edge ES6/ES7 JavaScript",
        "Setup authentication and user accounts",
        "Deploy your React apps live to the web",
        "Learn the latest React libraries and tools",
        "Master React, Redux, React-Router, and more"
      ],
      "course_content": {
        "Welcome": [
          "Welcome & Asking Good Questions",
          "\"Why should I learn React?\""
        ],
        "Setting up Your Environment": [
          "Section Intro: Setting up Your Environment",
          "Installing Visual Studio Code",
          "Installing Node.js & Yarn"
        ],
        "Hello React": [
          "Section Intro: Hello React",
          "Setting up a Web Server",
          "Hello React",
          "Setting up Babel",
          "Exploring JSX",
          "JSX Expressions",
          "Conditional Rendering in JSX",
          "ES6 Aside: const and let",
          "ES6 Aside: Arrow Functions",
          "ES6 Aside: Arrow Functions Part II",
          "Events and Attributes",
          "Manual Data Binding",
          "Forms and Inputs",
          "Arrays in JSX",
          "Picking an Option",
          "Build It: Visibility Toggle"
        ],
        "React Components": [
          "Section Intro: React Components",
          "Thinking in React",
          "ES6 Classes: Part I",
          "ES6 Classes: Part II",
          "Creating a React Component",
          "Nesting Components",
          "Component Props",
          "Events & Methods",
          "Method Binding",
          "What Is Component State?",
          "Adding State to Counter App: Part I",
          "Adding State to Counter App: Part II",
          "Alternative setState Syntax",
          "Build It: Adding State to VisibilityToggle",
          "Indecision State: Part I",
          "Indecision State: Part II",
          "Summary: Props vs. State"
        ],
        "Stateless Functional Components": [
          "Section Intro: Stateless Functional Components",
          "The Stateless Functional Component",
          "Default Prop Values",
          "React Dev Tools",
          "Removing Individual Options",
          "Lifecycle Methods",
          "Saving and Loading Options Data",
          "Saving and Loading the Count"
        ],
        "Webpack": [
          "Section Intro: Webpack",
          "What Is Webpack?",
          "Avoid Global Modules",
          "Installing & Configuring Webpack",
          "ES6 import/export",
          "Default Exports",
          "Importing npm Modules",
          "Setting up Babel with Webpack",
          "One Component per File",
          "Source Maps with Webpack",
          "Webpack Dev Server",
          "ES6 class properties"
        ],
        "Using a Third-Party Component": [
          "Section Intro: Using a Third-Party Component",
          "Passing Children to Component",
          "Setting up React-Modal",
          "Bonus: Refactoring Other Stateless Functional Components"
        ],
        "Styling React": [
          "Section Intro: Styling React",
          "Setting up Webpack with SCSS",
          "Architecture and Header Styles",
          "Reset That $#!*",
          "Theming with Variables",
          "Big Button & Options List",
          "Styling the Options List",
          "Styling Option Item",
          "Styling React-Modal",
          "Mobile Considerations",
          "Bonus: Favicon"
        ],
        "React-Router": [
          "Section Intro: React Router",
          "Server vs. Client Routing",
          "Setting Up Budget App",
          "React-Router 101",
          "Setting up a 404",
          "Linking Between Routes",
          "Organizing Our Routes",
          "Query Strings and URL Parameters",
          "Build It: Router for Portfolio Site"
        ],
        "Redux": [
          "Section Intro: Redux",
          "Why Do We Need Something Like Redux?",
          "Setting up Redux",
          "Dispatching Actions",
          "Subscribing and Dynamic Actions",
          "ES6 Object Destructuring",
          "ES6 Array Destructuring",
          "Refactoring and Organizing",
          "Reducers",
          "Working with Multiple Reducers",
          "ES6 Spread Operator in Reducers",
          "Spreading Objects",
          "Wrapping up Our Reducers",
          "Filtering Redux Data",
          "Sorting Redux Data"
        ]
      },
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)",
        "An understanding of core JavaScript (functions, objects, arrays, callback functions)"
      ],
      "description": "This course was just updated to support React v16, React Hooks, the Context API, and more!\n--\nHave you tried to learn React before?\nIt’s easy to go down the rabbit hole of libraries and tools only to come out of it not knowing how to build and launch a real-world React application. You get things configured, but you’re not sure how the libraries fit together (or if you’re even using the right one).\nSound familiar?\nI built this course to show you how you can build and launch real-world React web applications.\nThe Complete React Web Developer Course 2 starts with the fundamentals and covers everything you’ll need to build and launch React web apps.\nYou’ll see what it takes to build and launch a React app, from the first line of code to the final production deployment.\nThis course was designed around one goal: turning you into a professional React developer capable of developing, testing, and deploying real-world production applications.\nYou’ll learn React by doing, not watching.\nFrom the first videos you’ll be building out each project as well as completing programming challenges I’ve designed to test and reinforce what you’ve learned.\nThroughout the course you’ll build two React web apps:\nThe first app, a decision-making app called Indecision, is our starter application. You’ll learn the fundamentals of React while seeing exactly what it takes to get a React app up and running.\nThe second app, an expense manager called Budget, has all the features you’d expect from a real application. You’ll set up authentication, user accounts, routing, testing, form validation, database storage, and more.\nStay up-to-date in an ever changing world.\nThe world of React changes fast, and that’s why I’m always working to keep this course as up-to-date as possible. You can jump in knowing you’re getting access to hot-off-the-press features.\nEverything you need comes in one easy-to-use package.\nThere’s no need to worry if you’re learning the right skills to land that React job or launch that React app. I’ve mapped out everything you need to know in an interactive easy-to-follow package designed to get you up and running in a couple of weeks.\nThere’s no better time to learn React.\nReact’s not going anywhere. Companies like Facebook, Walmart, Uber, Airbnb, and Netflix are all using React in production right now.\nThey’ve also made heavy investments in the React ecosystem, creating new libraries and tools that speed up and simplify React development. From the biggest to the smallest, everyone’s using React and new jobs are popping up every day.\nGet access to fast support if you get stuck.\nThere’s nothing worse than getting stuck ten hours into a course and not getting the help you need to continue. Getting stuck is part of the learning process. That’s why I’m here to answer every single question.\nI’ll work with you to get you unstuck and back on track. It’s one of the reasons students love taking my courses:\n“This is the absolute best course I've taken on udemy. Andrew is amazing at explaining things concisely, and the flow of the course is perfect. He doesn't skip over anything and he doesn't over-explain anything. On top of all that, he responds to questions so quickly that you won't be stuck at any point.\" - Tanya Gamarian\n\"The lessons are of high quality and even more important, he actually takes time to answer your questions!\" - Thomas Vercamer\n\"The instructor does an excellent job in explaining how to build React Apps. He also responds quickly to any questions that are asked.\" - Matt Willy\nI guarantee that this is the most up-to-date and engaging React course available, and it comes with a Udemy 30-day money-back guarantee.\nOver eighteen sections you’ll learn:\nReact\nRedux\nReact-Router\nWebpack\nBabel\nTesting with Jest\nEnzyme\nApp Debugging\nApp Deployment\nFirebase\nAuthentication\nGit/GitHub\nES6/ES7\nAnd many more tools\nI can’t wait to see you on the inside!\n- Andrew",
      "target_audience": [
        "Anyone looking to launch their own React applications, switch careers, or freelance as a React developer"
      ]
    },
    {
      "title": "Implementing a Data Warehouse with SQL Server 2012",
      "url": "https://www.udemy.com/course/implementing-a-data-warehouse-with-sql-server-2012/",
      "bio": "Implementing a Data Warehouse with SQL Server 2012 (Exam 70-463)",
      "objectives": [
        "Illuminate how to work with variables",
        "Confer the concepts involved in Implementing a Data Warehouse with SQL Server 2012",
        "Elucidate the importance of Fact Table",
        "Categorize the different elements of Control Flow",
        "Classify the different types of Transforms available in SSIS",
        "Confer how to deploy and manage packages",
        "Exhibit how to debug and secure packages",
        "Find out the uses of Dimensions",
        "Define data warehouses"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of TSQL, javascript and C++ will be an added advantage for any particpant who is taking up this course. awareness about RDMS would be an added advantage."
      ],
      "description": "Adding to its data management system Microsoft has come up with a new Server, Microsoft SQL Server 2012 which familiarizes us with the construction and usage of databases in SQL Server platform. This course is the successor of Microsoft SQL Server 2012, a step higher into the administration of the data sytem. It is an excellent platform for students to build and implement a data warehouse. The course intends to target all data professionals including data analysts and other aspiring professionals who wants to get ready for exam 70-463, also known as Implementing a Data Warehouse with SQL Server 2012.\nTowards the end of this course our participants will have a thorough knowledge on data warehouses and the uses of dimensions. Apart from that our learner will also understand the importance of Fact Table along with the various concepts that are involved in the implementation of Data Warehouse with SQL Server 2012. This course also looks into the different elements of Control Flow and allows the learner to comprehend how to work with variables. In this course you will learn about the different types of Transforms available in SSIS, apart from how to deploy and manage packages. Finally you will understand how to debug and secure packages.\nThis course is that is the basis for all other SQL Server-related disciplines—Database Development, Database Administration, and Business Intelligence. The main idea of this course is to make our students cognize SQL Server 2012 databases administration. You will be comprehending a lot about the various issues and other decisions that are part of SQL Server installation and configuration. SQL Server 2012 is a prevailing platform that is widely used in the enterprise and cloud. There are many critical systems based on it. This Exam 70-463 is also a part of the series of certifications to master this platform.\nApart from this as a student you will keen to look into the various operations involved including building and managing data warehouse and architecturing and implementing dimensions.\nYou will also find it both challenging and interesting to work with various variables. There will also be a discussion on some of the important topics namely, instance, database and object security strategies. You will be also interested in implementing and automating ETL Solution. Some of the high availability technologies will also be discussed as part of the training by looking into deploying and managing packages along with debugging and securing them\nOur training is broken down to 90 lecture sessions that will cover all objectives. As add ons, we are also providing demos on other major concepts so that participants understand how the steps learned are implemented in real time.",
      "target_audience": [
        "This exam looks at database professionals who are involved in installation, configuration, and maintenance tasks.",
        "SQL Server database administrators, business intelligence professionals and system engineers, database developers with two or more years of experience can take up this exam."
      ]
    },
    {
      "title": "Java Spring Security",
      "url": "https://www.udemy.com/course/how-to-use-spring-security-to-secure-your-java-applications/",
      "bio": "Java Spring Security allows you to add a layer of security to your Java web applications.",
      "objectives": [
        "Add a layer of authentication to their web application (i.e. username/password)",
        "Use roles to manage user accounts (i.e. basic user vs admin user vs super user)",
        "Automatically encrypt the passwords stored in their database",
        "Stop users from sharing their user accounts (via session management)",
        "Add method level security to block certain users from accessing certain methods",
        "Add custom logic to use Spring Security on their legacy systems"
      ],
      "course_content": {},
      "requirements": [
        "You should already be familiar with the Java programming language... a minimum of an intermediate level of core Java is ideal",
        "It would also be beneficial to understand the MVC design pattern before attempting this course",
        "Working knowledge of the Spring Framework",
        "Knowledge of Maven is also a nice to have, but not mandatory",
        "An understanding of web applications, including deployment of web apps and server is required"
      ],
      "description": "This course will teach a Java programmer to add robust security to their web applications. Just like Facebook requires you to login before you can access your profile page, I will teach you how to stop unauthorized users from accessing the protected pages in your Java web application.\nNo prior experience with Spring Security is needed.\nI'll show you exactly how to take your new or existing Java web application and make it so that you can protect certain pages/URLs from unauthorized users.\nWhat is an unauthorized user?\nAnyone who hasn't yet provided a username and password that matches an entry in your database!\nI even show you how to assign roles to user accounts so you can custom tailor the user experience.\nBasic users, Admin users, Super users, whatever user role you'd like to create, you can weave them into your web application and have it respond in dynamic ways\nYou'll learn how to integrate Spring Security directly into your existing database and protect whichever pages you like in less than a day.\nPlus I show you exactly how to handle the always pesky \"set up\" process so it'll be a pain free experience for you.",
      "target_audience": [
        "The ideal student for this coure is someone wanting to learn how to easily add a username/password page that will stop unauthenticated users from accessing the \"members only\" type areas of their web applications",
        "This course is meant for students who would like to add additional functionality to their existing Java web applications"
      ]
    },
    {
      "title": "The Web Developer Bootcamp 2025",
      "url": "https://www.udemy.com/course/the-web-developer-bootcamp/",
      "bio": "With 10 Hours of React added. Become a Developer With ONE course - HTML, CSS, JavaScript, React, Node, MongoDB and More!",
      "objectives": [
        "The ins and outs of HTML5, CSS3, and Modern JavaScript",
        "Make REAL web applications using cutting-edge technologies",
        "Create responsive, accessible, and beautiful layouts",
        "Recognize and prevent common security exploits like SQL-Injection & XSS",
        "Continue to learn and grow as a developer, long after the course ends",
        "Create a blog application from scratch using Node, Express, and MongoDB.",
        "Create a complicated yelp-like application from scratch",
        "Deploy your applications and work with cloud databases",
        "Create static HTML and CSS portfolio sites and landing pages",
        "Think like a developer. Become an expert at Googling code questions!",
        "Create complex HTML forms with validations",
        "Implement full authentication from scratch!",
        "Use CSS Frameworks including Bootstrap 5, Semantic UI, and Bulma",
        "Implement responsive navbars on websites",
        "Use JavaScript variables, conditionals, loops, functions, arrays, and objects",
        "Write Javascript functions, and understand scope and higher order functions",
        "Master the \"weird\" parts of JavaScript",
        "Create full-stack web applications from scratch",
        "Manipulate the DOM with vanilla JS",
        "Write JavaScript based browser games",
        "Use Postman to monitor and test APIs",
        "Use NodeJS to write server-side JavaScript",
        "Write complex web apps with multiple models and data associations",
        "Write a REAL application using everything in the course",
        "Use Express and MongoDB to create full-stack JS applications",
        "Use common JS data structures like Arrays and Objects",
        "Master the command line interface",
        "Use NPM to install all sorts of useful packages",
        "Understand the ins and outs of HTTP requests",
        "Create your own Node modules",
        "Make a beautiful, responsive photographer's portfolio page",
        "Create a beautiful, responsive landing page for a startup",
        "Implement user authentication",
        "Create a beautiful animated todo list application",
        "Create single page applications with AJAX"
      ],
      "course_content": {},
      "requirements": [
        "Have a computer with Internet",
        "Be ready to learn an insane amount of awesome stuff",
        "Prepare to build real web apps!",
        "Brace yourself for stupid jokes about my dog Rusty"
      ],
      "description": "Now with over 10 hours of React content.\nMassive new React \"expansion pack\" covers: React basics, JSX, props, state, Vite, MaterialUI, hooks, useEffect, React design patterns, and more.\nHi! Welcome to the brand new version of The Web Developer Bootcamp, Udemy's most popular web development course.  This course was completely overhauled to prepare students for the current job market, now with over 70 hours of total content! This is the only course you need to learn web development. There are a lot of options for online developer training, but this course is without a doubt the most comprehensive and effective on the market.  Here's why:\nThis is the only Udemy course taught by a professional bootcamp instructor with a track record of success.\n92% of my in-person bootcamp students go on to get full-time developer jobs. Most of them are complete beginners when I start working with them.\nThe previous 2 bootcamp programs that I taught cost $14,000 and $21,000.  This course is just as comprehensive but with latest modern content for a fraction of the price.\nEverything I cover is up-to-date and relevant to the current developer job market. This course does not cut any corners. I spent 8 months redoing this behemoth of a course!\nWe build 13+ projects, including a gigantic production application called YelpCamp. No other course walks you through the creation of such a substantial application.\nThe course is constantly updated with new content, projects, and modules.  Think of it as a subscription to a never-ending supply of developer training.\nYou get to meet my cats and chickens!\nWhen you're learning to program you often have to sacrifice learning the exciting and current technologies in favor of the \"beginner friendly\" classes.  With this course, you get the best of both worlds.  This is a course designed for the complete beginner, yet it covers some of the most exciting and relevant topics in the industry.\nThroughout the brand new version of the course we cover tons of tools and technologies including:\nHTML5\nCSS3\nFlexbox\nResponsive Design\nJavaScript (including modern syntax, ES6, ES2018, etc.)\nAsynchronous JavaScript - Promises, async/await, etc.\nAJAX and single page apps\nBootstrap 4 and 5\nReactJS\nSemanticUI\nBulma CSS Framework\nDOM Manipulation\nUnix (Command Line) Commands\nNodeJS\nNPM\nExpressJS\nTemplating\nREST\nSQL vs. NoSQL databases\nMongoDB\nDatabase Associations\nSchema Design\nMongoose\nAuthentication From Scratch\nCookies & Sessions\nAuthorization\nCommon Security Issues - SQL Injection, XSS, etc.\nDeveloper Best Practices\nDeploying Apps\nCloud Databases\nImage Upload and Storage\nMaps and Geocoding\nThis course is also unique in the way that it is structured and presented. Many online courses are just a long series of \"watch as I code\" videos.  This course is different. I've incorporated everything I learned in my years of teaching to make this course not only more effective but more engaging. The course includes:\n\nLectures\nCode-Alongs\nProjects\nExercises\nResearch Assignments\nSlides\nDownloads\nReadings\nToo many pictures of my dog Rusty\nIf you have any questions, please don't hesitate to contact me.  I got into this industry because I love working with people and helping students learn.  Sign up today and see how fun, exciting, and rewarding web development can be!",
      "target_audience": [
        "This course is for anyone who wants to learn about web development, regardless of previous experience",
        "It's perfect for complete beginners with zero experience",
        "It's also great for anyone who does have some experience in a few of the technologies(like HTML and CSS) but not all",
        "If you want to take ONE COURSE to learn everything you need to know about web development, take this course"
      ]
    },
    {
      "title": "Getting Started with React Hooks",
      "url": "https://www.udemy.com/course/getting-started-with-react-hooks/",
      "bio": "Master React Hooks, the next evolution of the popular React library for building dynamic front end interfaces",
      "objectives": [
        "Explore the React Hooks API introduced in React 16.8",
        "Master the useState, useEffect, and useContext hooks that ship with the library",
        "Declare your own custom hooks to extract business logic from components"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to React Hooks",
          "Setup New create-react-app Project"
        ],
        "The useState Hook": [
          "OPTIONAL - REVIEW: Stateless Functional Components",
          "OPTIONAL - REVIEW: Class-based React Components",
          "OPTIONAL - REVIEW: Array Destructuring",
          "Invoking the useState Hook",
          "Destructuring and Using the useState Return Value",
          "Using the useState Hook to Build a Counter",
          "CHALLENGE: Adding More Click Handlers",
          "The useState Hook with an Object Argument",
          "Working with Multiple Pieces of State in a Hooks-Based Component"
        ],
        "The useEffect Hook": [
          "OPTIONAL - REVIEW: Lifecycle Methods on Class-based Components",
          "Invoking the useEffect Hook",
          "Cleaning Up by by Returning a Function from the Effect I",
          "Cleaning Up by by Returning a Function from the Effect II",
          "Limiting useEffect to Mounting and Unmounting",
          "The Second Argument to the useEffect Hook",
          "OPTIONAL - REVIEW: Event Listeners",
          "Another useEffect Example: User Input"
        ],
        "The useContext Hook": [
          "OPTIONAL - REVIEW: React Context",
          "Invoking the useContext Hook"
        ],
        "Custom Hooks": [
          "Define a Custom Hook (User Keypresses)",
          "Another Custom Hook Example (Counter)",
          "CHALLENGE: Reusing Custom Hooks in Multiple Components"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic knowledge of the React library (components, state, props) -- reviews are provided",
        "Basic knowledge of JSX, the syntax extension for JavaScript",
        "Intermediate knowledge of ES6 features (classes, object destructuring, constants, etc)"
      ],
      "description": "Welcome to Getting Started with React Hooks!\nThis course offers a comprehensive overview of React Hooks, the latest feature introduced in the popular React library for building dynamic front end interfaces.\nA hook is a plain JavaScript function that \"hooks\" into existing React features like state, lifecycle methods, and context. In the official documentation, the core React team writes that, in due time, they \"expect Hooks to be the primary way people write React components\".\nGetting Started with React Hooks begins with the essentials and proceeds to more complex topics including:\nThe useState hook\nThe useEffect hook\nThe useContext hook\nCustom hooks\nIn addition to hooks, the course is packed with optional lessons to enhance your knowledge of core JavaScript and React concepts. These topics include:\nStateless functional and class-based React components\nLifecycle methods\nArray and object destructuring\nClosures\nEvent Listeners\nThe React Context API\nNo matter your skill level, the content is designed to get you up to speed on React Hooks as quickly as possible.\nThanks for checking out the course!",
      "target_audience": [
        "React developers who want to explore the future of the popular UI library",
        "Front end developers interested in discovering the React library"
      ]
    },
    {
      "title": "Electron From Scratch: Build Desktop Apps With JavaScript",
      "url": "https://www.udemy.com/course/electron-from-scratch/",
      "bio": "Create 3 useful desktop applications with web technologies using Electron",
      "objectives": [
        "Learn how to build desktop apps with Electron",
        "Create and package 3 complete cross-platform applications",
        "Use IPC to communicate between Main & Renderer Processes",
        "Use Vanilla JS & React with Electron",
        "Create custom menu items, system tray apps and more",
        "Work with local data as well as MongoDB Atlas database"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "Electron: What & Why?",
          "How Electron Works",
          "Environment & Code Repo",
          "Links"
        ],
        "Project 1 - Image Shrink App & Getting Started With Electron": [
          "Project Intro",
          "Setup & BrowserWindow",
          "Loading a Window File & Adding an Icon",
          "Important! Absolute Icon Paths",
          "Environment & Platform Check",
          "Using Nodemon With Electron"
        ],
        "Working With The Menu": [
          "Creating a Menu Template",
          "Menu & Global Shortcuts",
          "Menu Roles",
          "Open Window From Menu"
        ],
        "Interface, IPC, ImageMin & Packaging": [
          "Creating The Interface",
          "Renderer Node Integration",
          "IPC Communication",
          "Implementing Imagemin & Plugins",
          "Send Events To Renderer",
          "Creating Log Files",
          "Package & Test Our App"
        ],
        "Project 2 - SysTop App": [
          "Project Intro",
          "Boilerplate Setup",
          "Template Assets Setup",
          "Creating The Interface"
        ],
        "System Stats & Renderer Process": [
          "Static System Stats",
          "Interval/Dynamic System Stats",
          "Progress Bar & CPU Overload",
          "Notifications API",
          "Notification Timing"
        ],
        "Storing Local Data": [
          "Creating a Store",
          "Set Default Settings To Renderer",
          "Saving Data To Our Store/File",
          "Use Settings Data In Monitor"
        ],
        "Tray Icon & Wrap Up": [
          "Creating a Tray Icon",
          "Tray Context Menu",
          "Nav Toggle Menu Item",
          "MainWindow Class",
          "AppTray Class",
          "Package & Test Our App"
        ],
        "Project 3 - BugLogger App & Creating The React UI": [
          "Project Intro",
          "React-Electron Boilerplate Setup",
          "Log State & Table",
          "LogItem Component",
          "Formatting Dates With Moment",
          "AddLogItem Component",
          "Adding a Log (UI Only)",
          "Displaying Alerts",
          "Deleting a Log (UI Only)"
        ],
        "Main Process, IPC & MongoDB": [
          "Setup MongoDB Atlas",
          "Connect To Database With Mongoose",
          "Create Log Model",
          "Get Logs From Database",
          "Add Log To Database",
          "Delete Logs From Database",
          "Clear Logs Menu Item",
          "Package & Test Our App",
          "Custom Icon"
        ]
      },
      "requirements": [
        "JavaScript Fundamentals"
      ],
      "description": "This is a hands on, project based course on learning how to build and package cross-platform desktop applications using Electron. Many popular apps including VSCode, Slack and Skype are built on Electron.\nWe will build 3 apps\nImageShrink - An app to optimize images for websites\nSystTop - RealTime CPU monitor with notifications and system tray\nBugLogger - CRUD app to track logs which uses React and the MongoDB Atlas cloud database\n\n\nSome stuff you will learn:\nCreate app windows with BrowserWindow\nCreate menus with custom items\nMenu roles\nShell module to open files and folders\nCreate system tray icons with context menus\nApp events\nMain process & Renderer process\nCommunication between processes with IPCMain & IPCRenderer\nPackaging Electron apps\nCreating log files\nInteract with system hardware\nCreate a data store file with settings data\nIntegrate React with Electron\nIntegrate a MongoDB database with Mongoose\nSome JavaScript stuff that you may not have known",
      "target_audience": [
        "Developers that want to build desktop apps with web technologies"
      ]
    },
    {
      "title": "React JS Web Development - The Essentials Bootcamp",
      "url": "https://www.udemy.com/course/react-js-and-redux-mastering-web-apps/",
      "bio": "Updated for 2026: React.js essentials bootcamp - React Core, Router, Redux, Hooks, in-depth JS, + detailed guides!",
      "objectives": [
        "Updated for 2026: Learn how to code with React, React Hooks, Redux, Next.js, and more from an engineer with 5+ years of industry experience.",
        "Learn React the right way and learn best practices, from an engineer with 5+ years of industry experience.",
        "Modern Redux in 2026: modern syntax and best practices.",
        "Modern React in 2026: createStore, functional components, hooks, etc.",
        "React hooks in 2026 - explore fundamental hooks, and build hooks from scratch.",
        "Explore the React engine, and learn how it works under the hood to better understand the Virtual DOM, state, props, etc.",
        "Learn React in 2026 the right way and learn best practices, from an engineer with 5+ years of industry experience.",
        "Learn how to build applications from scratch, setting up your own react-app-template.",
        "Create industry-relevant projects that you can use on your portfolio and resume.",
        "See how React fits in the big picture of web development, with a ton of detailed overviews on what is happening in the browser and the React engine.",
        "Access 3+ hours of in-depth JavaScript material to hone your JS skills."
      ],
      "course_content": {
        "Introduction": [
          "What You’ll Get From Taking this Course",
          "A 7m Overview of Web Development and React",
          "Course Repo and Software Installations",
          "Optional For Windows: Install the Windows Subsystem for Linux and VS Code"
        ],
        "Optional Reference Content": [
          "Optional Mega JavaScript Overview Part 1",
          "Optional Mega JavaScript Overview Part 2"
        ],
        "Welcome to React | First React Application": [
          "Section Preview: Welcome To React | First React Application",
          "Section Overview | First React Application",
          "Set up the Portfolio App",
          "Run the React App and the React Project Structure",
          "ReactDOM, Elements, and JSX",
          "A React Component",
          "Classes - Overview",
          "Classes, Inheritance, and a Closer Component Look",
          "State",
          "SetState",
          "A React Rule: Never Directly Modify State",
          "Class Properties and Initializers",
          "Component 2: Projects",
          "Props and Project Component",
          "Challenge: Social Profiles Component",
          "Code: Social Profiles Component",
          "Wrap up with Low-Hanging Styling Fruit",
          "Section Summary"
        ],
        "Breaking down React | React and Web Development": [
          "Section Preview: Breaking Down React | React and Web Development",
          "Section Overview",
          "React from Scratch",
          "Compiling, Bundling, and a Closer Look at JSX",
          "Refactor the Portfolio to use Parcel",
          "The Necessity of Bundlers and Transpilers Review",
          "The DOM and React’s Virtual DOM",
          "Section Summary"
        ],
        "[Optional section] Continued Main React Concepts": [
          "Section Preview: Continued Main React Concepts",
          "[Optional section] Section Preview",
          "[Optional section] Lifecycle Methods and componentDidMount",
          "[Optional section] ComponentWillUnmount",
          "[Optional section] Title Fade",
          "[Optional section] Stateless Functional Components",
          "[Optional section] HTTP Overview",
          "[Optional section] Fetch and a Jokes Component",
          "[Optional section] Challenge and Code: Ten More Jokes",
          "[Optional section] Fetch Under the Hood: Promises",
          "[Optional section] React Router",
          "[Optional section] Header Component",
          "[Optional section] Higher Order Components",
          "[Optional section] Section Summary"
        ],
        "Core React Concepts Review": [
          "Core React Review",
          "Core React - Glossary of Key Terms"
        ],
        "React Hooks Section 1 - Dive into Hooks Development": [
          "Section Preview: React Hooks Section 1 - Dive Into Hooks Development",
          "Set Up Project One",
          "First Hook: useState",
          "useEffect",
          "Challenge and Code: Stories Component with UseEffect",
          "Build a Custom Hook: useFetch",
          "[Optional] Function Keyword vs Arrow Functions"
        ],
        "React Hooks Section 2 - Hooks Under the Hood": [
          "Section Preview: React Hooks Section 2 - Hooks Under the Hood",
          "The React Runtime and How React Applies Hooks",
          "UseState Under the Hood",
          "Tasks Component Part 1: Multiple useState hooks",
          "Tasks Component Part 2",
          "The Order of UseState",
          "Local Storage for Tasks",
          "Hooks with an Interval",
          "Effects with Cleanup",
          "Dynamic Delay and Increment",
          "Challenge and Code: Matrix Component",
          "Build a Custom Hook: useDynamicTransition"
        ],
        "React Hooks Wrap-Up: Reflection on the Why of Hooks": [
          "The Why of Hooks"
        ],
        "Next.js and React 18+ Project": [
          "Section Preview: Next.js and React 18+ Project",
          "React Fundamentals and Client vs. Server Components In Depth",
          "Start the Next.js and React Project",
          "Link to Pages with Next/Link | Grid Item",
          "Style with Tailwind CSS",
          "Next.js Fonts and Responsive Design",
          "Connect Page Setup",
          "Next.js Client Components",
          "Next.js Server Actions (get-followers)",
          "Mailjet API post-contact Server Action and Next.js Environment Variables",
          "React 18 useTransition and Create Contact Form",
          "Next.js Layout Structure, Loading.js, and Global Components",
          "Next.js Dynamic Segments and generateStaticParams | record/[id]",
          "Next.js generateMetadata | record/[id]/page.js",
          "React Suspense and React lazy | Embed",
          "Next.js not-found and Route Groups",
          "Nested Dynamic Segments | record/[id]/[content]",
          "Breadcrumbs Component and Next.js useSelectedLayoutSegments | nav-title",
          "Setup Quiz Form and (form) route group",
          "Next.js useSearchParams and Quiz result",
          "Next.js Images and Web Standards | Discography",
          "React 18 useDeferredValue",
          "Next.js Deployment with Vercel",
          "Remaining Pages and Functionality"
        ]
      },
      "requirements": [
        "Beginners are welcome!"
      ],
      "description": "This course is completely up-to-date with React in 2026! A ton of material has been added and revised in this course.\nSince this course’s release, this has been one of the most popular and best-selling React bootcamps on the platform. Here are the testimonials from a handful of students who have taken the course:\n“This course is great! David is super knowledgeable AND passionate about React and it’s obvious in the course quality. I've taken a lot of programming courses on Udemy and David is by far the best instructor I've come across!”\n“It is very clear and well explained. He explains every idiom related to the topic theoretically and by examples so you can have a complete idea about what is going on and why you need every file folder. The application examples are explained very clearly so you can follow up with him and get the same result. Also there is a code challenge to try if you want before seeing the answer. The course is well constructed and explained so never miss it especially if you got lost in the folder tree of react app or about its specialization. Highly recommended.”\n“I started with some React concepts in mind and I found this course very useful. Also I am learning practical ways to do things and advance to Redux for more complex apps. I like very much the step by step, simple to complex, and practical style to explain concepts. Also, David is very nice and quickly solves any question.”\n\"David is a champ! One of the best course instructors I've ever encountered. Not only is his level of knowledge very impressive, but his timing, delivery, and tone create a very easy to follow experience. He's extremely thorough!\"\n\n\nWith five minutes of your time, I’ll explain why this course is the best investment of time you can make to learn how to code React apps.\nWhen I was first learning web development and software engineering, I used courses, tutorials, stackoverflow threads, and public github projects. It was invigorating - teaching myself the skills that would start a career. But I often found that tutorials only showed me what methods to use, not why examples were working, or why bugs were popping up. Even when I found a code fix, there was often that missing layer of how the update addressed the problem.\nIt was a grind, and the learning process could have been more efficient with better resources.\nFast forward five years, and I’m working as a full-stack software engineer at Zendesk in San Francisco. I often think back to those first couple years teaching myself web development.\nThe resources could have been better, more efficient, giving me not only what to write, but why the fix addresses the issue, and how the code works under the hood.\nSo that is what I’ve created in this course. A React learning experience that will give you all three of those important aspects to understanding code: what methods to use, why to use those methods, and how those methods work under the hood.\n\n\nSo Why should you take this course?\nI’ve applied the best practices of software I’ve learned in my software engineering career, and the feedback from my thousands of reviews in over 15 other coding courses, to craft the best learning experience possible for you in this course. You’ll find a healthy balance of conceptual theory, and practical hands-on experience. You’ll gain skills right from the get-go in the first section. And you’ll build interesting and relevant projects throughout the course.\n\n\nIn this course, you will:\nDive into React code right away. You will gain relevant experience as soon as the first section. Time is precious. And I want to make sure that you’ll never feel like you’re wasting it in this course. So in a matter of minutes, you will be writing React code in the first section, with a fully completed app by the end of it.\nUnderstand how React fits in the big picture of web development. In the second section, you will take an important step back and examine how React fits in the big picture of web development. You’ll build a React project from scratch - discovering all the layers that are in between the supplies that support the React app, and the browser which displays the React app.\nCreate relevant and compelling React apps. I’m betting you’ll find the apps both useful and interesting. Useful ones like the portfolio app will help you both learn React, and be valuable as a completed project for your software engineering and web developer profile. Fun ones like “Music Master”, will make coding lively, giving you apps you want to show off to your friends and family.\nDive into React Hooks to learn how to write React apps now and in the future. React hooks, as the new paradigm for React development, are a must in any bootcamp experience on React and frontend web development.\nOptionally explore in-depth JavaScript. At the end of the course, you will find a trove of optional videos that will bring your JavaScript knowledge to the next level.\n\n\n[2023 Update]\nAlso, this course contains optional content in Nextjs, React 18, and In-Depth JavaScript. Continue your learning React journey beyond hooks, here in this course!\nNextjs and React 18 are the modern ways to make a React application. In this course, you will also build a production-level Nextjs and React 18 project. During the Nextjs and React 18 project section, you will:\nGo more into depth with server and client components.\nLearn Nextjs server actions.\nExplore the React 18 useTransition hook.\nExpand upon Nextjs fundamentals, and create a shared layout structure.\nCreate dynamic segments with Nextjs and learn generateStaticParams.\nExplore React Suspense and React lazy.\nDive deeper into advanced Nextjs hooks like useSelectedLayoutSegments, and useSearchParams.\nExplore the React 18 useDeferredValue hook.\nLearn how to deploy a Nextjs application.\n\nThen follow with a bounty of In-Depth JavaScript content. During the In-Depth JavaScript section, you will find videos on:\nThe Console, Operators, and Variables, Arrays, Objects.\nFunctions - Declarations vs. Expressions, and Arrow Functions\nMethods and the `this` Keyword\nCallbacks\nA Dynamic Language and Types - \"Almost Everything is an Object\"\nEquality and Type Coercion\nLet, Const, Mutability, Var, and Scope\nInterview Question | Scope and Hoisting\nTemplate Literals and Ternary Operators\nThe Property Shorthand and Destructuring Assignment\nJSON parse, JSON stringify, Custom and Lodash CloneDeep\nClosures\nFunction Factories, and Higher Order Functions\nPrototypes and the Prototype-Based Inheritance, Object Prototype, __proto__, and the prototype chain\nAsynchronous Code with SetTimeout\nFetch and Promise from Scratch\nJavaScript Engine and Runtime\nAwait and Async\nIn summary, you should take this course if you want to learn React in a time-efficient way, while building relevant and engaging projects.\nSee you in the course!",
      "target_audience": [
        "Aspiring software engineers/developers who want to learn from an engineer who has contributed to and built React applications in the industry.",
        "Working engineers who want to see how a fellow engineer with 5+ years of full-stack experience approaches React applications.",
        "All levels welcome, as long as you have some coding experience!",
        "Anyone who wants a bootcamp to learn the essentials of React development.",
        "Those looking for career opportunities in the exciting field of frontend web development."
      ]
    },
    {
      "title": "Master JavaScript from Basics to Advanced",
      "url": "https://www.udemy.com/course/javascript-basics-to-advanced/",
      "bio": "A perfect JavaScript course for all those who want to learn and master JavaScript programming skills right from scratch.",
      "objectives": [
        "Basics of JavaScript (Data types, Loops, Arrays, Objects, Functions, etc)",
        "Introduction to Document Object Model(DOM) and Browser Object Model(BOM) in Java",
        "OOPs concepts in JavaScript",
        "Working with jQuery"
      ],
      "course_content": {
        "JavaScript Basics": [
          "JavaScript - Introduction",
          "JavaScript - Introduction to Variables, Operators and Expressions",
          "JavaScript - Variables"
        ],
        "Data Types": [
          "JavaScript - Numbers",
          "JavaScript - In-Built Number Functions",
          "JavaScript - Strings",
          "JavaScript - In-Built String Functions Part-1",
          "JavaScript - In-Built String Functions Part-2",
          "JavaScript - Null and Undefined Values"
        ],
        "Conditional Statements": [
          "JavaScript - Conditional Statement: If-else",
          "JavaScript - Conditional Statement: Switch"
        ],
        "Operators": [
          "JavaScript - Arithmetic Operators",
          "JavaScript - Assignment Operators",
          "JavaScript - Comparison and Logical Operators"
        ],
        "Type Coercion": [
          "JavaScript - Implicit Type Coercion",
          "JavaScript - Explicit Type Coercion"
        ],
        "Objects and Arrays": [
          "JavaScript - Objects",
          "JavaScript - Arrays Part 1",
          "JavaScript - Arrays Part 2"
        ],
        "Loops": [
          "JavaScript - Introduction to Loops",
          "JavaScript - While Loop",
          "JavaScript - For Loops"
        ],
        "Functions and Hoisting": [
          "JavaScript - Functions",
          "JavaScript - Function Arguments",
          "JavaScript - Scope and Environment",
          "JavaScript - Variable Hoisting",
          "JavaScript - Function Hoisting"
        ],
        "Document Object Model(DOM)": [
          "JavaScript - Introduction to DOM",
          "JavaScript - Select HTML Elements",
          "JavaScript - Query Selectors",
          "JavaScript - Update HTML Elements",
          "JavaScript - Updating Styles",
          "JavaScript - Intro to Events",
          "JavaScript - Add and Remove Classes from HTML Elements",
          "JavaScript - Getting Styles",
          "JavaScript - Form Events",
          "JavaScript - Keyboard Events",
          "JavaScript - Mouse Events",
          "JavaScript - Create HTML Elements - Part 1",
          "JavaScript - Create HTML Elements - Part 2",
          "JavaScript- Update and Delete HTML Elements"
        ],
        "Browser Object Model": [
          "JavaScript - Introduction to Browser Object Model",
          "JavaScript - Screen and Navigator Object",
          "JavaScript - History and  Location Object"
        ]
      },
      "requirements": [
        "A basic understanding of HTML and CSS"
      ],
      "description": "UPDATE:  New Content Added - 60+ video content added\n+\nBonus Sections: jQuery and ES6 for ReactJS\n\n\nUnlock the full potential of JavaScript with our comprehensive course, now enhanced with over 60 additional video modules and bonus sections covering jQuery and ES6 for ReactJS. Whether you're a novice or seasoned developer, our course guides you seamlessly through fundamental concepts to advanced topics like object-oriented and functional programming.\nLearn the essentials of JavaScript, including data binding, inheritance, and encapsulation, while mastering vital techniques like map, filter, and reduce functions. Dive into jQuery essentials for writing efficient, compact code favored by developers worldwide.\nLed by a top-rated instructor with a Computer Science background and over 200,000 students on Udemy, you'll gain industry insights and best practices for writing clean, understandable code. Even if you're new to programming, the course ensures you'll emerge with the skills to confidently tackle JavaScript challenges and pursue lucrative job opportunities.\nWhy Choose Our JavaScript Course?\n\n\nJavaScript Mastery: From client-side to server-side development, unleash your coding potential across a variety of platforms and applications.\nHigh Demand, High Pay: JavaScript skills are in high demand globally, offering lucrative career opportunities in web, mobile, and desktop app development.\nBeginner-Friendly: JavaScript's ubiquity and supportive community make it an ideal starting point for aspiring developers, providing instant feedback and valuable transferable skills.\nMoney-Back Guarantee: Enroll risk-free with our 30-day money-back guarantee. We're confident you'll love the course!\n\n\nAt the beginning of this JavaScript course, you will learn and understand\n1) All the basic concepts of JavaScript.\n2) And the advanced topics like object-oriented programming where you will learn the OOPs concepts like data binding, inheritance, data encapsulation, etc.\n3) The most used part in JavaScript - Functional Programming where we will cover the special functions like map, filter, reduce, and many more.\n4) We will also cover some essential topics in jQuery which is a widely used JavaScript library. It is preferred by most developers to write crisp and compact code.\nWe have included the best practices and do's and don'ts in JavaScript programming language.\n\nWe will even explain how to write clean code with the help of comments, the code which other developers can understand.\nThis course is designed in such a way that a person, who does not know anything about JavaScript or programming, will be able to write a clean and well-structured code after completion of this JavaScript course.\n\n\nStudent Reviews\n\"I'm a beginner. The first time I was learned JavaScript. Before I watched these videos, I don't know a single line about javascript. I thought this course isn't helpful for me but times go out and I watched all videos then I realized this is awesome for a beginner. and I make sure you will give us a more interesting and more helpful course for our career. so, thank you once again. and keep going UDEMY.\" - Vaibhav Chauhan\n\n\"I loved this course because when I started learning JavaScript I have no idea what things I need to study I read JavaScript documentation and do so many tutorial but what I want to learn about JavaScript is found here. Thanks sir\" - Akhil Balakrishnan\n\n\"Very good course I rarely recommend anything... But this course is very good and I would recommend it??\"- Sanket Jawali\n\nEmbark on your JavaScript journey today and join the thousands of satisfied students on EdYoda. Enroll now and let's master JavaScript together!\nHappy Learning, Team EdYoda",
      "target_audience": [
        "Beginners who are new to Web Development",
        "Freshers who want to learn JavaScript from scratch",
        "Developers who want to brush up on the concepts of Javascript"
      ]
    },
    {
      "title": "Quasar V1: Cross-Platform Apps (with Vue 2, Vuex & Firebase)",
      "url": "https://www.udemy.com/course/quasarframework/",
      "bio": "Use Quasar V1, Vue JS 2, Vuex & Firebase to build a Cross Platform App for Web, iOS, Android, Mac & Windows",
      "objectives": [
        "How to create a real-world, cross-platform app for web, iOS, Android, Mac and Windows using Quasar Framework V1 and Firebase",
        "How to manage the state of your app using Vuex",
        "How to create a back-end for the app using Firebase Realtime Database - including user authentication, reading and writing data",
        "All the essentials of Quasar Framework V1 and VueJS 2"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Course App: Awesome Todo",
          "What is Quasar?",
          "What is Vue.js?"
        ],
        "Getting started": [
          "Module Introduction",
          "Install Node.js and Quasar CLI",
          "Create & launch a new Quasar Project in the Browser",
          "Update: Quasar V1 Documentation",
          "Auto-import Components & Directives",
          "Folder structure - Layouts, Pages, Routes & more"
        ],
        "Vue.js Basics": [
          "Module Introduction",
          "Anatomy of a Vue Single File Component",
          "Binding Data to the View",
          "Two-way Data Binding with v-model",
          "Events & Methods - Click",
          "Events - Keyboard & more",
          "Showing and Hiding Elements - v-show",
          "Conditional Rendering - v-if & v-else",
          "Computed Properties",
          "Filters",
          "Directives",
          "Binding to Attributes & CSS",
          "Lifecycle Hooks - Introduction",
          "Lifecycle Hooks - In Action",
          "Refs",
          "Practise Vue.js Basics"
        ],
        "Vue.js Lists and Components": [
          "Module Introduction",
          "Displaying Lists with v-for",
          "Displaying more details",
          "Child Components",
          "Passing Data to Child Components - Props",
          "Passing Data to Child Components - Slots",
          "Keys",
          "Practise Vue.js Lists & Components"
        ],
        "Start building the Awesome Todo app": [
          "Module Introduction",
          "Pages and Routes",
          "Add Page Navigation to Sidebar (Drawer)",
          "Tab Navigation for Mobile",
          "Consolidating Navigation Data",
          "Only show Drawer on Desktop, Tabs on Mobile",
          "Adding some Style to the Layout",
          "Add SCSS support",
          "Customise Theme with Theme Builder",
          "Module Code"
        ],
        "Create the List of Tasks": [
          "Module Introduction",
          "Display a List of Tasks",
          "Add Due Date and Time",
          "Add some Style to the List of Tasks",
          "Module Code"
        ],
        "Vuex - State Management - Setting Up": [
          "Introduction to Vuex",
          "Setup a Vuex Store",
          "Add Tasks Data to the Vuex Store / Vue Devtools Chrome Extension",
          "Create a Getter for the Tasks Data",
          "Change Tasks Array into an Object Structure",
          "Put Task into a Child Component",
          "Module Code"
        ],
        "Vuex - Actions & Mutations": [
          "Module Introduction",
          "Set Completed Status in Vuex Store",
          "Delete Task - Add Delete Button & Confirm Dialog",
          "Delete Task - Delete the Task from the State",
          "Module Code"
        ],
        "Add Task - Forms, Fields & Validation": [
          "Module Introduction",
          "Add Task - Button & Modal",
          "Add Task - Customize the Modal",
          "Add the Fields",
          "Form Validation & Submission",
          "Vuex - Add Task when Form Submitted",
          "A Few Improvements",
          "Module Code"
        ],
        "Edit Task - Child Components in-depth, Update and Sync, Slots": [
          "Module Introduction",
          "Add Task - Reusable Components (1/5): Modal Header",
          "Add Task - Reusable Components (2/5): Task Name",
          "Add Task - Reusable Components (3/5): Due Date",
          "Add Task - Reusable Components (4/5): Due Time",
          "Add Task - Reusable Components (5/5): Buttons",
          "Edit Task - Add the Button & Show the Modal",
          "Edit Task - Customise & Setup the Modal",
          "Module Code",
          "Practice Vuex, Forms, Quasar Components & Vue.js"
        ]
      },
      "requirements": [
        "Basic HTML and CSS knowledge is required",
        "Basic JavaScript knowledge is beneficial but not required",
        "Basic VueJS knowledge is beneficial but not required",
        "A Mac for development is preferred"
      ],
      "description": "In this course I’ll show you how to use Quasar Framework V1 (along with Vue JS 2, Vuex & Firebase) to create real-world, cross-platforms apps using a single Vue JS codebase; and get these apps production-ready and deployed to all the major platforms - Web, iOS, Android, Mac & Windows.\nThroughout this course we'll create a real-world app called Awesome Todo. In this app we can add, edit or delete tasks and mark them as completed.\nWe can also sort tasks by name or date and search through tasks using a search bar.\nIt's also going to have a Settings page, with 2 real settings which change the way the app works - and which persist when app is closed and restarted (or the browser reloaded on the web version). It will also have a help page, a \"visit our website\" link and an \"email us\" link.\nThe app will have its own back-end created using a Firebase Realtime Database. Users can register, log in and see their data sync in realtime across all of their devices.\nWe'll get the app production ready for all the different platforms - web, iOS, Android, Mac & Windows.\nYou'll learn all of the basics of Quasar Framework, including the Quasar CLI, Quasar Components, Quasar Plugins, Quasar Directives, Platform Detection, Layouts, Theming & various Quasar Utilities.\nI'll also show you all of the basics of Vue.js, including Data Binding, Events, Computed Properties, Components, Directives, Filters, Lists & Lifecycle Hooks.\nYou'll learn how to manage the state of your app using Vuex, where I'll cover State, Mutations, Actions & Setters.\nI'll cover all of the basics of Firebase, including Authentication, Reading data, Writing data & protecting your data with Database Rules.\nBy the end of this course, you will be able to create your own real-world apps, with real back-ends which work on all the different platforms.\nNOTE: This course is for Quasar V1 (with Vue 2). Quasar V2 (with Vue 3) is not covered in this course.",
      "target_audience": [
        "Anyone who wants to create real-world, cross platform apps using a single VueJS codebase.",
        "Web Developers who want to use their existing skills to create a real-world app on many different platforms (Web, iOS, Android, Mac & Windows)"
      ]
    },
    {
      "title": "CSS Bootcamp - Master CSS (CSS Grid / CSS Flexbox)",
      "url": "https://www.udemy.com/course/css-bootcamp-master-in-css-including-css-grid-flexbox/",
      "bio": "CSS Course - Project Based CSS Tutorial. Learn how to create modern, responsive websites using CSS / CSS Grid / Flexbox",
      "objectives": [
        "You will start from basics of CSS, where you will learn things like: CSS selectors, CSS combinators, coloring, inheritance, box model, positions and much more..",
        "After finishing Basic CSS section, you will meet to advanced CSS topics, such as: backgrounds, transitions, transforms, animations, shadow effects and etc.",
        "You will learn how to align elements using modern CSS modules, like CSS Flexbox and CSS Grid.",
        "Throughout the course you will be building big, real-world, modern-looking and beautiful projects.",
        "After finishing the course, you will be able to build your own modern, beautiful websites using pure CSS"
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "How to Watch Lectures in High Quality",
          "Setup"
        ],
        "CSS Basics": [
          "What is CSS?",
          "How to write CSS?",
          "HTML Elements Tree",
          "CSS Selectors",
          "CSS Combinators",
          "CSS Colors",
          "Inheritance",
          "Text Formatting - Part 1",
          "Text Formatting - Part 2",
          "Box Model",
          "Pseudo Classes - Part 1",
          "Pseudo Classes - Part 2",
          "Pseudo Elements",
          "Measurement Units - Part 1",
          "Measurement Units - Part 2",
          "Positions - Part 1",
          "Positions - Part 2",
          "Overflow",
          "Floats",
          "Practice Test"
        ],
        "Advanced CSS": [
          "Backgrounds - Part 1",
          "Backgrounds - Part 2",
          "Gradients",
          "Shadows",
          "Transitions",
          "Transforms - Part 1",
          "Transforms - Part 2",
          "Animations - Part 1",
          "Animations - Part 2"
        ],
        "Flexbox": [
          "What Is Flexbox?",
          "Flex Container Properties",
          "Flex Items Properties",
          "Flexbox"
        ],
        "Project 1 - Grand Hotel (Based on Flexbox)": [
          "Grand Hotel - Project Preview",
          "Sidebar - Markup",
          "Sidebar - Style",
          "Navigation - Markup",
          "Navigation - Style - Part 1",
          "Navigation - Style - Part 2",
          "Create Click Event",
          "Create markup for Header",
          "Header - Style",
          "About Us Section - Markup",
          "About Us Section - Style - Part 1",
          "About Us Section - Style - Part 2",
          "Rooms Section - Markup",
          "Rooms Section - Style",
          "Customers Section - Markup",
          "Customers Section - Style",
          "Footer - Markup",
          "Footer - Style"
        ],
        "Responsive Web Design": [
          "Make \"Grand Hotel\" Project Responsive - Part 1",
          "Make \"Grand Hotel\" Project Responsive - Part 2",
          "Make \"Grand Hotel\" Project Responsive - Part 3"
        ],
        "CSS Grid": [
          "CSS Grid Introduction",
          "Setup",
          "How To Create Grid",
          "Fractional Units",
          "Positioning and Spanning Grid Items",
          "Naming Grid Items - Part 1",
          "Naming Grid Items - Part 2",
          "Naming Grid areas",
          "Explicit and Implicit Grid",
          "Aligning Grid items",
          "Aligning Grid tracks",
          "max-content, min-content, minmax()",
          "auto-fill, auto-fit",
          "CSS Grid"
        ],
        "Project 2 - Furniture Store (Based on CSS Grid)": [
          "Furniture Store - Project Preview",
          "Navbar - Part 1 - Markup",
          "Navbar - Part 1 - Style",
          "Navbar - Search Form",
          "Navbar - Part 2 - Markup",
          "Navbar - Part 2 - Style",
          "Navbar - Part 2 - Dropdown",
          "Banner - Markup",
          "Banner - Style",
          "Banner Slideshow - Part 1",
          "Banner Slideshow - Part 2",
          "Day Offer Section",
          "Bestselling Furniture - Markup",
          "Bestselling Furniture - Style",
          "Gallery",
          "Contact Section and Footer",
          "Modal box - Markup",
          "Modal Box - Style - Part 1",
          "Modal Box - Style - Part 2",
          "Make Project Responsive"
        ],
        "BONUS": [
          "Bonus Lecture: Check Out"
        ]
      },
      "requirements": [
        "Code Editor",
        "Modern Web Browser",
        "ABC of HTML",
        "Desire to become CSS Expert and better Front End web Developer / Designer"
      ],
      "description": "The Complete CSS Course on Udemy!!!\n\"CSS Bootcamp - Master in CSS (Including CSS Grid / Flexbox)\".\nIf you want to learn how to create modern, beautiful and real-world websites using just pure CSS, then this is the right course for you.\nINCLUDED:\n1. CSS Basics\n2. Advanced CSS\n3. Flexbox\n4. Project 1 - \"Grand Hotel\" (Based on Flexbox)\n5. CSS Grid\n6. Project 2 - \"Furniture Website\" (Based on CSS Grid)\nCourse consists of several sections. You will start from CSS essentials, in which you will meet some basic topics. Then after finishing basic part, you will move on to advanced CSS, where you will be able to learn advanced things in CSS, such as: backgrounds, transitions, transforms, animations, shadows and much more.\nAdvanced CSS section will be followed by CSS Flexbox part, in which you will learn about how to create layout of your web page using CSS Flexbox. After Flexbox section, we will build our first project - \"Grand Hotel\". It will be a real-world, modern-looking and beautiful web page about hotel. Layout of this project will be fully created using CSS Flexbox.\nNext, you will move on to CSS Grid. In which you will learn about this new powerful layout module. And lastly, we will build another big project based on CSS Grid.\nEach project built throughout the course, will be fully responsive for all screen device.\nThroughout the course, you will meet detailed explanations about how bootstrap works, also, you will introduce to modern practices and solutions.\nGet fast and friendly support from instructors 24/7.\nJOIN US!!!",
      "target_audience": [
        "Students with zero experience in CSS",
        "Students who have some basic knowledge in CSS and want to get deep understanding in CSS",
        "Everyone who wants to become Master in CSS"
      ]
    },
    {
      "title": "JavaScript from Beginner to Expert",
      "url": "https://www.udemy.com/course/javascript-from-beginner-to-expert-bring-life-to-your-site/",
      "bio": "Become a JavaScript expert in 30 days, even as a beginner! Master JS, React, and Node.js to build web applications",
      "objectives": [
        "You will be able to create tooltips, slideshows, galleries with thumbnails and many more",
        "You will understand events, variables, objects, arrays, functions, loops, conditional statements, DOM, RegExp, Cookies and use that info in your scripts.",
        "You will know how to pre-validate all kind of forms and give users information if something is wrong without reloading the website",
        "You will know how to debug and keep your code performing well",
        "Quizzes and exercises",
        "Support from the author",
        "Organised material taking you from the Beginner to Expert level in Javascript",
        "let/var/const/hoisting"
      ],
      "course_content": {
        "Introduction to JavaScript": [
          "Welcome to my JavaScript course",
          "What is Javascript and where can you use it?"
        ],
        "Editor Setup for JavaScript": [
          "Downloading and installing editor",
          "Creating the project / structure of project"
        ],
        "EXTRA: Useful Shortcuts": [
          "Useful shortcuts that will save you tons of time",
          "Useful shortcuts ready to print!"
        ],
        "JS Basics": [
          "Properly embedding JS scripts on your website reducing website loading speed",
          "Basics: How is your script executed? Whitespaces/semicolons etc.",
          "Comments",
          "Variables",
          "EXERCISE: Calculating Gross Prices with VAT",
          "const variables - why and when should you use 'const' keyword?",
          "Practise your basic knowledge (Updated Jan 25')",
          "JavaScript Fundamentals – Explain in Your Own Words"
        ],
        "Operators": [
          "Arithmetic operators",
          "Create a variable that will hold sum of two other variables",
          "Relational operators",
          "Logical operators",
          "Practise your knowledge about the operators (Updated Aug 25')"
        ],
        "Conditions": [
          "Conditional Statements",
          "Why Did I Get Two Alerts? Understanding Conditional Flow in JavaScript",
          "Conditional operator ?:",
          "Switch",
          "Practise your knowledge about the conditional statements (updated May 25')"
        ],
        "Functions": [
          "Functions basics",
          "Scope of Variables within Functions and Outside of Functions",
          "Scope of Variables - fast text summary",
          "let vs var - what is hoisting?",
          "let vs var - fast text summary",
          "Function Expressions | Anonymous function",
          "Practise your knowledge about the functions (Updated Jul 25')"
        ],
        "Objects": [
          "What are and how to create objects?",
          "If your script is not working watch in Event section about onload event",
          "Using an Object Constructor Function (class)",
          "Adding Properties to Objects using Prototype",
          "Practise your knowledge about the objects (Updated Jul 24')"
        ],
        "Arrays": [
          "Arrays",
          "Useful Array Methods",
          "Practise your knowledge about the Arrays"
        ],
        "Loops": [
          "What is loop? while and do while loop",
          "loop for",
          "Why Do I Only See One Line? Understanding innerHTML and Loops",
          "instruction break and continue",
          "loop for/in - used for processing objects",
          "EXERCISE: Argument Object in function (unlimited number of arguments)",
          "Loops quiz (Updated July 25')"
        ]
      },
      "requirements": [
        "You should already be familiar with basics of HTML and CSS."
      ],
      "description": "Would you like to learn JavaScript and become a good earning front-end developer?\nAfter this course, you'll quickly and simply master programming in JavaScript!\n\n\nWHAT WILL I LEARN?\nDuring this JavaScript course, I’ll show you how to build real-life applications - image sliders, galleries, and more.\nDon't worry if you're new to JavaScript! This course is crafted for people starting from scratch.\nIt doesn't matter whether you have never written any programs or have no idea about programming.\nYou will bust the myth that programming is a difficult thing only for the few!\n\n\nWILL I FIND A JOB?\nJavaScript developers are in high demand. Learning JavaScript can open doors to junior frontend jobs and freelance work.\nJavaScript in business is the choice of leading companies:\nGoogle\nFacebook\nInstagram\nNetflix\nMicrosoft\nTikTok\nTwitch\nWHERE IS JAVASCRIPT USED IN THE REAL WORLD?\nYou will learn a foundation that will allow you to learn popular technologies used to create back-ends by the above companies, such as: Node.js, Next.js, React.js, Angular.js, Vue.js, Express.js, jQuery.\n\n\nEXTRA JAVASCRIPT CONTENT YOU’LL LOVE\n1)\nI've included 2 EXTRA chapters on Debugging and Top strategies for crafting neat, maintainable, and high-performing JavaScript code.\n2)\nLearn React fundamentals - a JavaScript library used by developers worldwide. You’ll build a mini game to practice everything hands-on.\nAfter completing the game, you will learn:\nHow to use Node.js, npm, and Vite\nHow to create components and manage application state\nHow to use JSX to render user interfaces\nHow to work with props and state\nHow to use CSS Modules for styling\nHow to dynamically switch the theme from dark to light mode\nHow to use ContextProvider\nHow to use the useEffect hook\nHow to integrate external libraries with practical examples\nHow to automatically save the state of your game\nAnd that's not all! You will also learn:\nHow to animate elements according to state using Frame Motion\nHow to add icons with Lucide\nHow to transform a React app into a desktop application using Electron (runnable on any system)\nUsing Express & React with fetch API & JS promises\nSATISFACTION GUARANTEE\nI give you 100% satisfaction. If you do not like my course, you can request a full refund up to 30 days.\nOver 350,000 people from around the world have enrolled in my courses\nMy courses are updated if needed\n\n\nINSTRUCTOR SUPPORT\nRemember that if you have any questions regarding topics covered in the course, please feel free to ask.\nI'm always happy to help! :-)\n\n\nSECURE PURCHASE\nHave a look at free lessons before buying!\nGet a taste of the top-notch stuff this course is made of and have a blast!\nBecome JavaScript Expert today!\nSave your precious time by buying this course.",
      "target_audience": [
        "This JavaScript course is meant for people who are familiar with HTML and CSS. No prior knowledge about JavaScript is needed. Everything is described from the beginning to expert level."
      ]
    },
    {
      "title": "The Complete HTML & CSS Course - From Novice To Professional",
      "url": "https://www.udemy.com/course/htmlwebsite/",
      "bio": "In this Course Students will be able to learn a Complete HTML & CSS Course taking them From Novice To Professional",
      "objectives": [
        "Make websites using HTML & CSS",
        "Understand HTML & CSS coding",
        "learn some advance languages like HTML5 & CSS3, PHP, ASP.net",
        "Be Able To Work As A Web Designer Full Time"
      ],
      "course_content": {
        "Welcome! Discover How This Course Will Help You Build A Website From Scratch!": [
          "Welcome To Our Course!",
          "How To Use This Course",
          "Course Essentials - Before Moving Any Further Please Read and Use This Document"
        ],
        "Introduction and basics": [
          "What is HTML",
          "What is HTML Follow Along Guide",
          "HTML vs Programming languages",
          "HTML vs Programming languages (written)",
          "Creating the very first HTML file using notepad with very simple technique",
          "Download and Install notepad++ a better solution to play with codes",
          "Creating an HTML file using notepad ++",
          "How to use tag",
          "What are the attributes"
        ],
        "Literally working on HTML document": [
          "HTML document hierarchy rules",
          "Making the HTML document readable",
          "Styling and formatting text using some HTML tags",
          "Abbr tag and Title attribute",
          "White spaces and preformatted text",
          "HTML Entities"
        ],
        "HTML Lists": [
          "Unordered lists",
          "Ordered Lists",
          "Type and value attribute for formatting HTML Lists",
          "Nesting multiple lists",
          "Making description"
        ],
        "HTML Tables": [
          "Building tables",
          "Table heading",
          "Managing table height and width",
          "Using colspan attribute",
          "Using rowspan attribute",
          "Nested Tables",
          "Cell spacing and Cell padding",
          "Creating a complete website layout using tables"
        ],
        "URLs, Links and iframing": [
          "Understanding URL and its parts",
          "Linking a webpage to another webpage",
          "Linking to an HTML file which is on a sub directory",
          "Linking a webpage to a back directory's HTML file",
          "Bookmarking",
          "Target Attribute",
          "Linking all the pages and making a linked and navigated website",
          "Iframes",
          "Creating navigation page and adding it on all pages using iframe tag"
        ],
        "HTML and Images": [
          "Adding Images",
          "Adding Inline Images",
          "Linking up images with webpages and other images",
          "Title and Alt attribute",
          "Course Feedback Checkpoint - How Are You Enjoying Our Course So Far?"
        ],
        "Intro to CSS and some basics": [
          "What is CSS",
          "Inline CSS",
          "Internal CSS",
          "External CSS",
          "The Div Tag"
        ],
        "CSS Selectors": [
          "CSS Selectors",
          "Different states of anchor tag",
          "Sibling and Child selector of CSS"
        ],
        "CSS Dimensions": [
          "Height and width properties",
          "Pixels and Percents",
          "Margination",
          "Padding",
          "Important rules of dimension"
        ]
      },
      "requirements": [
        "A browser, We'll use chrome throughout in this course",
        "A notepad, We'll use notepad++ and I'll teach you to download and install notepad++ as well",
        "Desire to learn something new and interesting.",
        "No coding or design experience necessary — I show you everything in this course!",
        "Any computer will do Windows, OSX or Linux"
      ],
      "description": "⇉ Watch the promo video to see How You Can Start Becoming A Professional Web Developer Today!\n\n\n\n⇉ Join Over 950,000+ Students Who Have Enrolled In My Udemy Courses This Year!\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nThen this course is for you! Click \"Take This Course Now\" For Instant Life-Time Access!\n\n\n_________________________________________________________________________\nHTML and CSS are the two most important languages for a new web developer to learn. They are also the easiest and most basic. If you are interested in learning how to build webpages, but have limited experience with coding, this course will help you learn HTML and CSS quickly and easily! We Promise to take you from Novice to Professional!\n\nIn this course you will learn fist hand by building your very own website! We take a step by step approach to ensure each student receives a valuable learning experience.\nYou will Begin by understanding what HTML and CSS are, so you will be able to comprehend what they can do for you, and how to use them in web design.\nYou will then learn the rest below throughout this entire course:\nAll of the HTML Basics\nWorking With HTML\nHTML Lists\nHTML Tables\nURL's, Links and iframing\nHTML and Images\nAll of the CSS Basics\nCSS Selectors\nCSS Dimensions\nCSS Box Model\nCSS Lists, Text & Fonts and Tables\nHTML Forms\nComplting A Complete Website Project\nAnd So Much More!!\nYou will receive a basic, yet thorough understanding of both HTML and CSS. The course focuses on having you begin to learn to write code and understand the fundamentals of coding so you can learn through doing.  By the end of this course you will be able to completely use HTML and CSS and become a professional!\nThis course is designed for everyone and anyone, especially aspiring web designers, bloggers, programmers to business owners can benefit from learning some HTML and CSS. This course is also for anyone who plans on becoming a web programmer or a web designer themselves. HTML and CSS are the essential first two languages you must master. HTML is required for anyone that wants to get into web development, there is no way around it. Being able to learn it simultaneously with CSS allows you to become a professional web designer in no time!\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin to move towards becoming a professional web designer and developer.\nWhen I learn something new about HTML and CSS, I add it to the course -at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course.\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But You Can Do It!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button at the top right now!\n...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys and Shahzaib Kamal",
      "target_audience": [
        "Complete beginners who want to learn how to build a professional, beautiful and responsive website",
        "This course if for students who want to learn web design from start to finish!",
        "This course is for anyone looking to learn the basics of web design and beyond",
        "This course is for anyone looking to improve their web development skills",
        "This course is for anyone looking to add onto their existing web development skills",
        "This course is not for anyone looking for anything besides web design"
      ]
    },
    {
      "title": "Build Reactive MicroServices using Spring WebFlux/SpringBoot",
      "url": "https://www.udemy.com/course/build-reactive-restful-apis-using-spring-boot-webflux/",
      "bio": "Learn to write Reactive programming and build Reactive MicroServices using Spring WebFlux and project Reactor",
      "objectives": [
        "What problems Reactive Programming is trying to solve ?",
        "What is Reactive Programming?",
        "Reactive Programming using Project Reactor",
        "Learn to Write Reactive programming code with DB",
        "Learn to Write Reactive Programming with Spring",
        "Build a Reactive API from Scratch",
        "Learn to build Non-Blocking clients using WebClient",
        "Write end to end Automated test cases using JUNIT for the Reactive API"
      ],
      "course_content": {
        "Getting Started with the Course": [
          "Course Introduction",
          "Prerequisites"
        ],
        "Source Code and Course Slides for this Course": [
          "Source Code",
          "Course Slides"
        ],
        "Why Reactive Programming ?": [
          "Why Reactive Programming - Part 1?",
          "Why Reactive Programming - Part 2?"
        ],
        "Introduction to Reactive Programming": [
          "What is Reactive Programming ?",
          "Introduction to Reactive Streams"
        ],
        "Introduction to Spring WebFlux": [
          "Introduction to Spring WebFlux",
          "What are we going to build in this Course ?"
        ],
        "Getting Started with Project Reactor": [
          "Introduction to Project Reactor",
          "Reactor Reactive Types - Flux and Mono"
        ],
        "Setting up the base project for this course": [
          "Project SetUp"
        ],
        "Lets Explore Flux and Mono - Hands On": [
          "Let's write our very first Flux",
          "Let's write our very first Mono",
          "Reactive Stream Events",
          "Testing Flux using JUnit5",
          "Transforming Data Using Operators in Project Reactor",
          "Transform using map() Operator",
          "Reactive Streams are Immutable",
          "Filter using filter() Operator",
          "Advanced transform using the flatMap() Operator",
          "Asynchronous Operations using flatMap() Operator",
          "Advanced transform using the concatMap() Operator",
          "flatMap( ) operator in Mono",
          "flatMapMany( ) operator in Mono",
          "Transform using the transform() Operator",
          "Handling empty data using defaultIfEmpty and switchIfEmpty() Operators",
          "Introduction to Combining Reactive Streams",
          "Combining Reactive Streams using concat and concatWith Operator",
          "Combining Reactive Streams using merge() and mergeWith() Operators",
          "Combining Reactive Streams using mergeSequential() operator",
          "Combining Reactive Streams using zip and zipWith() Operator"
        ],
        "Set up the MoviesInfoService Service": [
          "Project SetUp"
        ]
      },
      "requirements": [
        "At least JDK 8",
        "Any one of the IDE like IntelliJ, Eclipse, etc.,",
        "Spring Boot Knowledge is a must to make the most out of this course"
      ],
      "description": "This course is structured to give you both the theoretical and coding aspect of Reactive Programming and Reactive RestFul APIs using Spring WebFlux.\nIf you are looking forward to learn the below listed things:\nWhat is Reactive Programming ?\nWrite Reactive Programming code with Spring WebFlux.\nWrite Reactive Programming code with DB.\nBuilding Reactive RestFul APIs with Spring WebFlux\nThen this is the right course for you. This is a pure hands on oriented course where you will be writing lots of code.\nBy the end of this course you will have the complete understanding of coding and implementing a Reactive API using Spring WebFlux.\nWhy Reactive Programming ?\nThis section highlights about the need for reactive programming and explains in detail about the current execution model in spring-mvc.\nThis sections explains about the drawbacks in spring-mvc.\nThis section explains about the concurrency model in spring-mvc.\nWhat is Reactive Programming?\nThis section talks about \"What is Reactive Programming ?\"\nHow Reactive programming works in a nutshell using a simple example.\nThis section will give you all an introduction to Reactive Streams Specification.\nThis section will give all an introduction to \"Reactive Libraries\" that are out there.\nGetting started with Project Reactor\nThis section will give you all the fundamentals of Project Reactor and explore the project reactor using some examples.\nThis section covers the Reactive Types Flux and Mono in detail.\nSetting up the Project for this course\nIn this section we will set up the project for this course using the Spring Intializr website.\nReactive Programming (Flux and Mono) - Hands on + Junit Testing\nIn this section we will explore about how Flux and Mono works via code.\nWe will do live coding on how to write Junit test cases using Flux and Mono.\nWe will explore lot of different operators in Flux and Mono.\nBuild the first Non Blocking RESTFUL API using Annotated Controllers - Hands On\nIn this section we will build the first non blocking API using the annotated controllers.\nThis section covers the fundamentals of how the reactive API works.\nThis sections also covers the coding aspect of how to return a Flux/Mono from an end point.\nThis section also covers how to write JUNIT test cases using WebTestClient.\nBuild Non Blocking RESTFUL API using Functional Web - Hands On\nIn this section we will build the non blocking API using the Functional Web Module.\nThis sections explains about the RouterFunction and HandlerFunction which forms the foundation for Function Web Module.\nThis section also covers how to write JUNIT test cases using WebTestClient.\nSpring WebFlux & Netty - Execution Model\nThis section explains about the different layers behind WebFlux to serve a HTTP Request/Response.\nThis sections covers the concepts of NETTY such as Channel, EventLoop and some of the technical aspects of Netty.\nOverview of the Reactive API\nThis section will give you an Overview of the Reactive API that we are going to build as part of this course.\nReactive Programming in Databases - MongoDB - Hands On\nIn this section we will learn about how to write the reactive programming code with MongoDB.\nDefine the Item Document for the project.\nThis section covers about how to configure different profiles in Spring Boot.\nIn this section we will set up the ItemReactive Mongo DB adapter.\nThis section also covers how to write JUNIT test cases for the reactive repository.\nBuild the Item Reactive API Endpoint - Using RestController\nIn this section we will learn about how to code the Item CRUD Reactive API using the @RestController approach.\nThis section also covers how to write automated tests using JUNIT and the non blocking test client WebTestClient.\nBuild the Item Reactive API Endpoint - Using Functional Web\nIn this section we will learn about how to code the Item CRUD Reactive API using the Functional Web approach.\nThis section also covers how to write automated tests using JUNIT and the non blocking test client WebTestClient.\nBuild Non Blocking Client using WebClient\nIn this section we will explore the techniques to interact with Reactive API using the WebClient.\nLearn the techniques to Invoke the Reactive API using exchange() and retrieve() methods.\nWe will explore the GET, PUT, POST and DELETE operations using the WebClient.\nHandling Exceptions in WebFlux - RestController\nIn this section we will code and explore different approaches to handle the exceptions/errors that occurs in the reactive api that’s built using RestController.\nHandle exceptions using @ExceptionHandler and @ControllerAdvice.\nThis section also covers how to write JUNIT test cases for the Exception scenarios.\nHandling Exceptions in WebFlux - Functional Web\nIn this section we will code and explore different approaches to handle the exceptions/errors that occurs in the reactive api that’s built using Functional Web.\nHandle exceptions using WebExceptionHandler.\nThis section also covers how to write JUNIT test cases for the Exception scenarios.\nWebClient - Exception Handling\nIn this section we will code and explore how to handle the exceptions using the WebClient.\nLearn the techniques to handle the exceptions using exchange() and retrieve() methods.\nStreaming Real Time Data using WebFlux - Server Side Events (SSE)\nIn this section we will code and learn about build an endpoint for Streaming RealTime Data using Mongo DB and Spring WebFlux.\nThis section covers about the Tailable Cursors and Capped Collections in Mongo DB.\nBuild a Non Blocking Streaming Endpoint and interact with the Mongo DB using the @Tailable annotation.\nLearn to write Automated Tests using JUNIT for the Streaming Endpoints (SSE).",
      "target_audience": [
        "Anyone who is willing to learn and build Reactive APIs using Spring WebFlux"
      ]
    },
    {
      "title": "Build REST APIs with Django REST Framework and Python",
      "url": "https://www.udemy.com/course/django-rest-framework/",
      "bio": "Learn Basics to Advanced Django REST Framework by building IMDB API Clone (JWT, Token, Throttling, Pagination, Testing)",
      "objectives": [
        "Understand about REST API from Basics",
        "In-depth Django Rest Framework knowledge through Official Documentation",
        "Implement CRUD operations",
        "Build IMDB API Clone",
        "How to use Browsable API as well as Postman",
        "Learn advanced concepts like Permissions, Throttling, Pagination",
        "Work with Django Filter Backend (Filtering, Searching, Ordering)",
        "Understand authentication in DRF including Token as well as JWT",
        "Automated API Testing",
        "Build the backend for your web and mobile apps"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Python and Django"
      ],
      "description": "Welcome to Django Rest Framework Masterclass, One single course to start your DRF journey as a beginner step-by-step. This course touches on each and every important topic through concept explanation, documentation, and implementation. The entire course is designed for beginners with one goal in mind, to build powerful REST APIs using Python and Django.\nThroughout the course, we will explore the most important Django Rest Framework topics step-by-step:\n1. API Basics\n2. Serializers\n- Serializers\n- ModelSerializer\n- HyperlinkedModelSerializer\n3. Function-Based\n4. Class-Based Views\n- APIView\n- Generic Views\n- Mixins\n- Concrete View Classes\n5. Viewsets and Routers\n6. Permissions\n- IsAuthenticated\n- IsAdminUser\n- IsAuthenticatedOrReadOnly\n- Custom Permission\n7. Authentications\n- BasicAuthentication\n- TokenAuthentication\n- JSON Web Token Authentication\n8. Throttling\n- AnonRateThrottle\n- UserRateThrottle\n- ScopedRateThrottle\n- Custom Throttles\n9. Django Filter Backend\n- Filtering\n- Searching\n- Ordering\n10. Pagination\n- Page Number\n- Limit Offset\n- Cursor\n11. Automated API Testing\n\n------------------\nWhy this course?\nComplete course is focused on the concept learning approach, you learn every concept through a logical and visual learning approach.\nLearn all important concepts in the simplest possible way with examples and real-life project.\nYou just need basic Python and Django knowledge, we will cover everything step-by-step from scratch.\n------------------\nAfter completing this course you will be ready to work as an Intern, Fresher, or Freelancer and you will also be able to implement everything yourself! Most importantly you will be ready to divide deep with future practice and hard level question of DRF.\nEnroll now, I will make sure you learn best about Django Rest Framework.",
      "target_audience": [
        "Django Developers Who Want To Learn About API Building"
      ]
    },
    {
      "title": "Learning Linux Essentials: Taking your first steps in Linux",
      "url": "https://www.udemy.com/course/learning-linux-essentials-taking-your-first-steps-in-linux/",
      "bio": "Add Linux to your CV and start studying for the Linux Professional Institute certificate in Linux Essentials",
      "objectives": [
        "Navigate the Linux command line",
        "Execute Linux commands",
        "Understand Open Source Software",
        "Establish file system security",
        "Run commands as standard and elevated users",
        "Identify different Linux distributions"
      ],
      "course_content": {},
      "requirements": [
        "This is a fundamentals course introducing Linux. Access to Linux is useful to follow through in the labs. This can be on a physical host or virtualized. We step though installing Virtual Box"
      ],
      "description": "Let me guide you though each of the objectives outlines for the LPI Linux Essentials exam and get your foot in the door for you dream Linux career.\nMy name is Andrew Mallett and I am the Urban Penguin who has been teaching LInux now for decades including over 800 video on Youtube. Covering each of the objectives in the detail that you will need to pass the exam with additional steps on setting up VirtualBox. I will not leave you wanting.\nYou will learn mainly though demonstrations and we have close to 8 hours of screen-share demonstrations and clear instructions for you to follow. So if you are looking to make your first steps in learning LInux for a career then you will not go far wrong with this course",
      "target_audience": [
        "Those wanting to gain the fundamental skills in Linux",
        "Those who want to understand the power of he command line",
        "Students wishing to pursue Linux Essentials certification from the LPI",
        "This is not for experienced Linux Administrators"
      ]
    },
    {
      "title": "Complete DApp - Solidity & React - Blockchain Development",
      "url": "https://www.udemy.com/course/complete-dapp-solidity-react-blockchain-development/",
      "bio": "Master DApp Development - Smart Contracts - Solidity, Web3, React, Mocha, Ethereum Blockchain Programming for Front-end",
      "objectives": [
        "DApp",
        "Solidity",
        "Blockchain",
        "Truffle",
        "React",
        "Web3",
        "Mocha",
        "Chai",
        "Remix: Ethereum",
        "Decentralized Application Building",
        "Full Stack",
        "Bootstrap",
        "Build Tokens",
        "Smart Contracts",
        "Ethereum",
        "Coding",
        "Node",
        "Javascript",
        "CSS",
        "ERC20"
      ],
      "course_content": {
        "Introduction to DApps": [
          "Welcome To The Course!",
          "What Is A DApp (Decentralized Application)",
          "Introduction To Blockchain",
          "Centralization vs. Decentralization",
          "Join Our Online School",
          "Exercise - Meet The Community"
        ],
        "Introduction to The IDE Remix:Ethereum": [
          "Introduction to IDE ( Remix: Ethereum)",
          "Introduction To Text Editors",
          "IDE Solidity Compiler & Deployer",
          "Download Your First Text Editor",
          "Overview On What Is A Smart Contract",
          "Exercise: Meet A Live Web3 Community and Decentralized Project",
          "Ask A Mentor A Coding Question"
        ],
        "Introduction to Solidity (Smart Contract Basics)": [
          "Create Your First Solidity File",
          "Writing Comments in Solidity",
          "Pragma Solidity",
          "Pragma Solidity Version Conditions",
          "Exercise - Solidity Operator Basics I",
          "Smart Contract As Defined In Solidity",
          "Create Your First Smart Contract!",
          "Introduction to Variables (In Solidity)",
          "Optional - General Introduction To Variables In Programming & Solidity",
          "Introduction to Functions (Solidity)",
          "'Public' Keyword (Solidity)",
          "Exercise - Write The Shell of A Basic Function",
          "Final - Simple Storage Contract",
          "Solidity Compiling & Debugging Introduction",
          "Deploy Your First Smart Contract (IDE - Remix:Ethereum)",
          "Debug Assignment",
          "Interacting (Transactions) with Smart Contracts",
          "Exercise - Deploy A Smart Contract (Solidity)",
          "Simple Storage Contract Solution"
        ],
        "Build Your First Solidity DApp (Decentralized Application) From Scratch": [
          "Overview on Introductory Level DApp Section",
          "Will Smart Contract (Solution Code)",
          "Review: Ide Remix:Ethereum",
          "Creating Variables for The Will Smart Contract",
          "Introduction To The Constructor Function in Solidity",
          "Modifiers in Solidity",
          "Introduction to Arrays & Objects",
          "Mapping in Solidity (Key Store Value)",
          "Exercise - setInheritance Function (Scoping & Argument)",
          "setInheritance Function Recap (Address & Amount)",
          "Pay Investors Assignment",
          "Introduction To For Loop in Solidity",
          "Recap: Will Smart Contract (Steps So Far)",
          "Oracle - isDeceased Function",
          "Compiling & Deploying the Smart Contract",
          "IDE: Deployment Review - WIll Smart Contract",
          "Interacting with The Blockchain & Oracle",
          "Looping Assignment (Complete the Pay Investors Smart Contract)"
        ],
        "Solidity & Smart Contract Glossary": [
          "Overview on Glossary Section",
          "Solidity Address Variable Type",
          "Solidity Mapping",
          "Solidity Scoping with Variable",
          "Global Variables In Solidity",
          "Solidity Modifiers",
          "Solidity Constructor",
          "Blockchain Transactions",
          "Returning Multiple Datatypes with Functions in Solidity",
          "Destructuring and Multiple returns from Functions in Solidity",
          "Exercise - Destructuring and Multiple returns from Functions in Solidity"
        ],
        "Build A Basic Crypto Token (Solidity - Smart Contracts)": [
          "Crypto Coin Solution",
          "Crypto Token Contract Setup",
          "Minting Function in Solidity",
          "Send Tokens Function in Solidity",
          "Review: ERC20 Contract Intro",
          "Deploy Your First Crypto Coin",
          "Crypto Token Assignment"
        ],
        "Optional: OpenSea NFT Marketplaces & Collections (KryptoBirdz Case Study)": [
          "Quick Note About This Section",
          "Introduction To NFT Marketplaces & Collections (KryptoBird Case Study) Part I",
          "The Power of NFT Metadata & Properties",
          "How To Read An NFT (KryptoBirdz Exercise)",
          "Making NFTs Work For You (from Algorithms to Acrylic Paintings)"
        ],
        "Blockchain Smart Contracts & DeFi Lectures": [
          "The Ethereum Virtual Machine (EVM)",
          "Advanced - Introduction to Opcodes for the EVM",
          "How Contract Storage works with Ethereum Smart Contracts",
          "How Blockchain Works",
          "What Is Crypto Mining",
          "What Are Non Fungible Tokens (NFTs)",
          "Proof of Work Vs. Proof of Stake"
        ],
        "The DApplication Developer Environment (Complete Setup)": [
          "Overview on Yield Farming DApplicaiton Development",
          "Download & Install MetaMask.io",
          "Install Ganache & Important Note",
          "Hooking Up MetaMask to Ganache",
          "Install Node js",
          "Node Js Exercise I",
          "Node Js Solution",
          "Install Truffle Globally",
          "Git Clone The Code Starter Project",
          "Add Folders To The Project Directory",
          "Install Dependancies & Project Overview"
        ],
        "Truffle Configs & Migration Setups": [
          "The Final Code Project File (Code Along Solutions)",
          "Truffle Configurations (Network)",
          "Building The Migration Contract",
          "Migration Deployment Code",
          "Tether Smart Contract Shell",
          "Deployment Migration File",
          "Truffle Compile",
          "Exercise - Truffle Console"
        ]
      },
      "requirements": [
        "Internet, computer, and strong interest in DApp"
      ],
      "description": "Become a Complete DApp Developer by learning the best in demand skills taught by renown engineer and full stack developer Clarian North.\nJoin in early on an exciting technology implementing global changes to multiple industries and businesses.\n\nThis is the course you've been looking for to code along and become a modern DApp developer in 2022. It does so much more than just provide you with the basics to building smart contracts. This course covers everything you need to know to work on professional projects: from absolute no starting knowledge to producing a final project you can be proud to put on your resume.\nThere are many courses out there on the internet and it's easy to get lost in the sea of information, so here is why this course will accelerate your learning path towards truly leveling up your skills:\nRegular course updates. Learn the most modern tools available in tech for smart contracts. There are so many ways to go about building something and we are not going to waste our time. In this course, you will learn the specific technologies that are the most in demand in the industry today. These include tools and technologies used by leaders in NFT markets such as OpenSea, tech companies from Facebook to Google and others.\n\n\nUpon completing this course you will be able to build your own smart contracts and have a fundamental understanding of how they are deployed and work off of applications built together from scratch. With zero starting experience to a professional level: where you will build a complete Yield Farming Staking DApp (your own digital banking system which will allocate funds to users and allow for depositing and withdrawals hosting multiple ERC20 style tokens.  This course is the solution for those who are trying to save precious time to figure out how to get things to work and not be overwhelmed with online videos as well as those who want to get into modern tech, but aren’t sure where to start and don’t have the money to spend.\n\n\nThis course is mentored and lead by a seasoned professional with years of experience from SF Valley to top Blockchain Protocol experience and success. The Instructor of this course has worked as a head engineer (senior dev and mastering) and co-producer (writing and arranging) for majors, indies, and international publishing houses including working with Grammy nominated and Award Winning Productions. I have headed and worked in engineering and production for companies from the ground up to viral successes again and again all over the world from studios and Labels in Detroit, LA, Montreal, and Berlin. This is my love and my life. I am someone who is passionate and committed to building quality projects from the ground up. I believe my work speaks for me.\n\n\nThis course is set up to teach you the current modern tools and skills needed to get a job in DApp development from freelancing or at the very least familiarize yourself with the modern tools needed to completing your own personal projects. With our online community, you will be able to get mentoring help from me and other producers along with engage in active conversations. This course features the best and most current tools and techniques I have used and worked with over the years and will excel you in ways that other courses simply can’t confined to just one framework. You will have the knowledge to work with multiple types of languages and libraries.\n\n\n\nThe course is designed to give you employable skills and knowledge with smart contracts integrated into the front end.\n\nThis is the definitive DApp Developer Bootcamp course. After completing the final project, you will have extensively gone through the following tools and technologies:\nSolidity\nEthereum Blockchain\nBootstrap\nWeb3js\nTruffle\nMocha\nChai\nJavascript\nReact\nAsync Await\nNode (HTTP)\nGithub\nReact Lifecycles\nFront End UI & UX\nNPM\nGanache\nMetaMask\nJSX\nTransfer / TransferFrom\nApproval & Authorization Events\nSecurity\nEthereum Blockchain Network and Deployment\nSmart Contract Interactions\n\n\nYou will be able to code-along, step by step through the videos and exercises, and complete the following projects:\n\n\n* Write, compile, debug, and deploy multiple smart contracts.\n* Use professional testing unit suites to check blockchain data.\n* Learn how the front end interacts with blockchain data.\n* Deploy and hook up to local test networks and run transactions on the Ethereum blockchain in real time.\n* Build your own ERC20 Token.\n* Reverse Engineer a decentralized banking system with Yield Farming Staking & Rewards from scratch.\n* Start working remotely freelancing on DApp and Smart Contract projects in the Ethereum Blockchain world.\nI have put into this course the best techniques and tools that I’ve used throughout my entire professional career. There are countless tutorials and master classes out there and it is very easy to get lost on a forum wasting time reading over differing opinions endlessly. But none of that gives you a true learning experience to understanding what’s going on under the hood and being able to succeed not just in the course, but in your projects and career thereafter. This course is the solution for those who are stuck trying to figure out how to get things to work and overwhelmed with tutorials as well as those who want to get into modern tech, but aren’t sure where to start and don’t have the money to spend. This course embodies all of my years of experiences including the best things that work as well as the trappings to avoid, so you don’t have to waste hours upon hours for nothing going back and instead just focus on moving forward and staying on track with the most modern tools available.\nThis is a one of a kind program because there is not yet anything else out there that can offer you this in DApp development. You’re not going to come out of this stuck and feeling limited by just learning basic solidity on an IDE, or feeling like you can’t progress without taking on tons of additional resources. You will come out of it with something for more valuable, going step by step building a DApp from scratch and being guided and challenged all along the way. We’re going to be learning many translatable and employable skills such as:\nSolidity & Smart Contracts: Learn the language that it takes to build the top NFT marketplaces such as OpenSea, lending platforms and Exchanges from Uniswap to Gemini, Yield Farming and all the exciting new developments in DeFi.\nStructuring Out A Professional Project from the Ground Up: We go step by step looking at what it takes to develop a full fledge project from building out our own smart contract features to implementing them onto the front end.\nMocha and Truffle Tests: You will actually code out professional tests and assertions on developed smart contracts to ensure there are no errors to prep for network blockchain transaction and deployment. This is the real way to build out projects both for immutable blockchain transactions as well as large applications in the real world.\nReact, Javascript, & Bootstrap: Build a frontend with a framework that is used by Facebook, Instagram and many leading start ups today.\nWeb3 & MetaMask: We will use the most powerful libraries available to hook up Crypto Wallets to our application and run through verification processes and authorization of transactions.\nBuild A Full Complete Local Dev Env: We will loading up our own test network and leveraging the Ethereum blockchain to build a fully capable local developer environment for building DApps.\nThese days there are so many technologies out there and opinions on how and what to learn, and learning just one language or technique in small pieces as opposed to going through the actual steps and integrating all the key pieces limits our ability to greatly progress. Learning the lessons like the ones above are what it’s going to take to truly level you up so that you’re well ahead of the game in 2021 when it comes to modern DApp development.\nThe world is shifting more and more towards learning and working at home. This is an opportunity for you to start learning the most in demand skills, showcase those skills, and gain the experiences you need to develop your passion into something real. It would be an honor to take this journey with you and I hope you will give this a chance.\nI have poured hard effort into this course and I am very excited about this and can say hands down, there is no other course on the internet or off of it, like this one.\nLooking forward to seeing you in the lessons!\n\n\nThis DApp course is ideal for anyone searching for more info on the following: blockchain development - solidity - blockchain programming - DApp -  blockchain - Ethereum - DApps - web3 - solidity programming - smart contract. Plus, this course will be a great addition to anyone trying to build out their knowledge in the following areas: solidity - smart contracts - Ethereum - blockchain.",
      "target_audience": [
        "You want to learn to code and build DApplications",
        "You are looking to start a career in DApplication Development",
        "You want to know how to build Smart Contracts & Freelance",
        "You want to learn the real skills needed to succeed in 2021 to get hired or build your own projects",
        "You're looking for one course that can give you a complete scope on what it takes to develop a full DApplication"
      ]
    },
    {
      "title": "Complete guide to building an app with .Net Core and React",
      "url": "https://www.udemy.com/course/complete-guide-to-building-an-app-with-net-core-and-react/",
      "bio": "The complete guide to building an app from start to finish using .Net 9.0, React 19 and React Query",
      "objectives": [
        "Learn how to build an application from start to publishing with .Net (9.0), React (with Typescript) and Mobx",
        "How to build a Web API in .Net Core with Clean Architecture using the CQRS + Mediator pattern",
        "How to use AutoMapper and MediatR packages in the .Net projects",
        "How to build a multi-project solution with .Net Core",
        "How to use Entity Framework Core as the Object Relational Mapper",
        "How to integrate ASPNET Core SignalR into an application for real time web communication",
        "How to add Identity and Authentication using .Net Core Identity",
        "How to build a Client side application for the API with React",
        "How to use MobX as a state management library",
        "How to build our own Photo upload widget with a Dropzone and a Cropper to resize images"
      ],
      "course_content": {},
      "requirements": [
        "Some development experience required (3 -6 months)",
        "A computer with Mac OSX, Windows or Linux installed",
        "A passion for learning how to build web applications"
      ],
      "description": "***Course has now been re-imagined and re-recorded for .Net 9.0, React 19 and also now includes React Query***\nHave you learnt the basics of ASP.NET Core and React? Not sure where to go next? This course should be able to help with that. In this course we learn how to build a multi-project ASP.NET Core solution that is built using Clean Architecture and the CQRS and Mediator pattern that makes our code easy to understand, reason about and extend.\nBoth ASP.NET Core and React are hot topics and this course will enhance your knowledge of both, simply by building an application from start to finish. In each module we learn something new, whilst incrementally adding features to the application. Building an application is significantly more rewarding than building yet another Todo List from the documentation!\nEvery line of code is demonstrated and explained and by the end of this course you will have the skills and knowledge to build your own application using the techniques taught in this course.\nHere are some of the things you will learn about in this course:\nSetting up the developer environment\nCreating a multi-project solution using the the ASP.NET Core WebAPI and the React app using the DotNet CLI and the create-react-app utility.\nClean Architecture and the CQRS + Mediator pattern\nSetting up and configuring ASP.NET Core identity for authentication\nUsing React with Typescript\nAdding a Client side login and register function to our React application\nUsing React Router\nUsing AutoMapper in ASP.NET Core\nBuilding a great looking UI using Semantic UI\nAdding Photo Upload widget and creating user profile pages\nUsing React Hook Form and Zod to create re-usable form inputs with validation\nPaging, Sorting and Filtering\nUsing SignalR to enable real time web communication to a chat feature in our app\nPublishing the application to Azure\nMany more things as well\nTools you need for this course\nIn this course all the lessons are demonstrated using Visual Studio Code, a free (and fantastic) cross platform code editor. You can of course use any code editor you like and any Operating system you like... as long as it's Windows, Linux or Mac\nIs this course for you?\nThis course is very practical, about 90%+ of the lessons will involve you coding along with me on this project. If you are the type of person who gets the most out of learning by doing, then this course is definitely for you.\nOn this course we will build an example social network application that allows users to sign up to events (similar to MeetUp or Facebook), completely from scratch. All we start with is an empty terminal window or command prompt.\nAll you will need to get started is a computer with your favourite operating system, and a passion for learning how to build an application using ASP.NET Core and React",
      "target_audience": [
        "Beginners to .Net Core or React or Typescript who want to learn how to build something with these tools",
        "Students who prefer the practical approach to learning rather than learning by theory"
      ]
    },
    {
      "title": "MERN Stack Master Course - Building your own Instagram",
      "url": "https://www.udemy.com/course/mern-stack-master-course-building-your-own-instagram/",
      "bio": "Build Your own Instagram with React, Express, Node.js & MongoDB",
      "objectives": [
        "Discount available use coupon DISCOUNT500",
        "Building websites using MERN stack",
        "Image Uploading",
        "Creating APIs in Node js",
        "Testing end points using postman",
        "Context API for state managemant",
        "JWT based authentication",
        "Deploy to heroku",
        "Sending Email using nodemailer & sendgrid",
        "Forgot & Reset password"
      ],
      "course_content": {},
      "requirements": [
        "Basics of React & Node js"
      ],
      "description": "MERN stands for MongoDB, Express.js, React.js and Node.js - and combined, these four technologies allow you to build amazing web applications\nIn this course we will be building FULL FLEDGED INSTAGRAM website and it will be a lots of fun as we building this together.\nThis course covers -\nBuilding an backend API with Node.js & Express\nTesting API using Postman\nJWT based authentication\nImage upload\nContext API for state management\nReact Hooks\nReact Router hooks\nProtecting routes or endpoints\nSending Emails\nForgot & Reset Password\nThis Instagram Clone project will have following features -\nUsers can Post their pictures and share it with the world.\nUser can see other user posts\nUser can search other users\nUsers can follow other user and they can see the post of user whom they follow on separate page\nUser can unfollow other user\nUser can Like and unlike Post\nUser can comment on Post\nUser can view his profile and others profile\nUser an delete his or her post\n\n\nWhat else you need ?. This course has almost all the features as actual instagram web application has.\nwhat are you waiting for enroll in this course now and I will see you guys inside the course.\n\n\nThis course is NOT an introduction course to React & Node js. It is fully hands on course for building full stacks websites using MERN Stack",
      "target_audience": [
        "Who want to become full stack MERN Developer"
      ]
    },
    {
      "title": "Wordpress Complete Web Design :Latest Wordpress Design Techs",
      "url": "https://www.udemy.com/course/wordpress-complete-web-design-latest-wordpress-design-techs/",
      "bio": "Master Wordpress website design with Elementor : beginner to Advanced - no coding & build Wordpress ecommerce web Design",
      "objectives": [
        "Know about the Wordpress & page builders.",
        "Online Hosting, subdomains, choosing you domain name & Wordpress installation.",
        "how to optimize images & create creative Art direction for web design with photoshop.",
        "how to build your own beautiful Modern Responsive website using WordPress.",
        "You will know how to design pages, menus, sidebars, footers, and create a professional and modern website.",
        "You will know how to set up contact pages & Wordpress contact form,",
        "how to set up email opt-in forms throughout your website for email marketing.",
        "how to find and install plugins.",
        "Complete Wordpress ecommerce Woocommerce plugin tutorial.",
        "Build online 24/7 e-commerce store.",
        "learn to create discount coupons & sale offers.",
        "How to convert your Wordpress website into https secure (encrypted connection).",
        "How to master your online store in all details( shipping, tax, payments..etc)",
        "how to back up your WordPress website in case of emergency.",
        "increase SEO ranking for your website.",
        "You will know how to speed up your Wordpress website with caching plugins.",
        "how to build official professional domain emails."
      ],
      "course_content": {
        "Introduction & installing Wordpress": [
          "Wordpress Elementor Course Outline",
          "Wordpress Course Resources",
          "Website Online Hosting plan",
          "Installing Wordpress on our website",
          "Installing Wordpress ocean wp Theme & Elementor page builder",
          "Classic Editor Vs Gutenburg (Optional)",
          "Creating Wordpress website pages & Menus"
        ],
        "Wordpress page builder Familiarization": [
          "Quick tour in Elementor",
          "Creative Art directions & layout inspirations for wordpress design",
          "Familiarize with Elementor part 1 (sections)",
          "Familiarize with Elementor Part2 (widgets)",
          "Elementor Minor Menu Update (the right click)",
          "Introducing the Ultimate Freehand Design Experience",
          "Brain storming & tips for fast workflow with Elementor"
        ],
        "Wordpress home page Design & development": [
          "Wordpress header & banner design part 1",
          "Wordpress header & banner design part2",
          "Wordpress header & banner design part3",
          "Wordpress website middle sections design & development",
          "Wordpress Png section design",
          "Wordpress email opt-in section design",
          "Wordpress Testimonials Section Design",
          "Wordpress Image carousel section design",
          "Wordpress Website Footer Design",
          "Wordpress Website theme Customizer tour & Logo",
          "Finalizing our Wordpress home page & design tips"
        ],
        "Wordpress About Us page Design & development": [
          "Wordpress About us page design part1",
          "Wordpress About us design part2",
          "Wordpress About us design part3"
        ],
        "Wordpress Contact Us & blog page design & development": [
          "Wordpress website Contact Us page & blog page design",
          "Creating Wordpress blog & posting with elementor",
          "PROPERLY FORMAT YOUR BLOG POST WITH HEADINGS ( For SEO ranking )"
        ],
        "Wordpress Responsive website & publishing website": [
          "Wordpress Mobile & Tablet Responsive website",
          "Publishing Wordpress Website & Creating Maintenance & coming soon pages"
        ],
        "Free Plugins to mimic the Elementor Pro & Premium plugins": [
          "Free plugins to convert your Elementor into Pro",
          "Crocoblock for Elementor",
          "10+ More Add-ons for Elementor"
        ],
        "Exporting & importing our Elementor pages": [
          "Exporting & Importing our elementor web pages"
        ],
        "Creating Our Wordpress ecommerce store": [
          "Installing Woocommerce Plugin ( for Wordpress ecommerce )",
          "Making first ecommerce product (simple product)",
          "Variable ecommerce product",
          "Up sells & Cross sells",
          "Wordpress Woocommerce settings",
          "Ecommerce Discount Coupons",
          "Designing ecommerce store with elementor & wordpress theme"
        ],
        "Wordpress website customization": [
          "Converting wordpress website to HTTPS (SSL Certificate)",
          "Google Analytics & webmasters Tool",
          "Install Google Analyticator plugin",
          "Wordpress Privacy Policy & Terms & conditions page",
          "Speeding Up our Wordpress website",
          "Optimizing Images & Creative Art directions",
          "Subdomain"
        ]
      },
      "requirements": [
        "just a pc (windows, mac or linux) & internet",
        "No coding or design experience required"
      ],
      "description": "WORDPRESS  is that amazing tool to build & develop a website with no coding or web design experience and you don't even want to know about web design to make a beautiful website because Wordpress got all those breathtaking beautiful themes.\nThis is the perfect place to start your Wordpress Web Design & Web development course.\n\" I have purchased over 15 courses about WordPress and other website developing courses and Khalil is by far the best one out there. I still don't understand how for just $10 I was about to obtain so much valuable information. I paid thousands of dollars to multiple institutions over my years and I never learned this much content. Thank you Khalil Ibrahim.\"  Albert Abramchuk\nThis Course we will be using the latest techniques to design our Wordpress website using the Elementor Drag & Drop page builder giving us the flexibility to design or do anything within our Wordpress website without the restrictions of the Wordpress themes taking our web design to the next level.\nIn the Wordpress course we will be learning Web Design & demonstrating Design theories & Fundamentals including design ratios, colors, fonts & more to achieve the best design visuals possible for our web design & development including Latest Design Trends.\n\"This is one of the best wordpress courses I have ever purchased on Udemy. It is very applicable to the real world and I am getting new web design clients paying me more. I highly recommend this course.\" Marvin Chibuye\nAlso you will learn how to use the Elementor & Wordpress theme to create a beautiful Wordpress Ecommerce store that attracts your customers and shows your products at it's best design aspect & presentation Managing all the store customizations including tax, shipping, sales & even discount coupons.\n\n\" Great wordpress course, Instructor nicely covered all the feature and approach is very friendly. Overall its great Elementor course and it is Valuable. thanks \" Qamar Faisal\nThis is a very practical course i will walk you through the steps and together we will be building your Wordpress website step by step so by finishing this course you will have your website designed with its customization & getting the best out of it.\nI tried to make this wordpress web development course so concentrated straight to the point making it so complete in the shortest possible time editing all the loading boring times or excluding all the bla bla that is not going to be useful to the students.\nWordPress is powering more 28% of overall internet websites. its a perfect tool & has been used for big websites like ( Mercedes benz, xerox, ebay inc, bestbuy..etc) & you can customize your wordpress website for any purpose. Whether you want to create a personal portfolio, a blog, or a business website to sell your products and services.\nYou will learn how to build & do web development for your wordpress website for free except for the hosting plan but everything else i will be showing you all the free methods to do it like the premuim even for elementor i will teach you to make it like a pro version with free plugins.\n\"This is a very important course for those interested in using WordPress to get up to speed very quickly. The main points of the course are covered with exacting examples and an in depth review and hands-on approach t the WP Plugin, Elementor. This course is highly recommended.\" Jim Cotton\n\n\"what i really like about this course that it really seem to be for all levels it takes you slowly to excellence thnx alot. \" James Donald\n\n\n\nSummary of what you get from this course :\n\nKnow about the wordpress web development.\nWordpress Online hosting, Domains & subdomains.\nhow to optimize images & create creative Art direction with photoshop.\nMaster the brand new Elementor page builder.\nKnow how to convert to Elementor pro using free plugins.\nhow to web design your own beautiful Modern Responsive website using WordPress.\nYou will know how to design web pages, menus, sidebars, footers.\nApply Design rules to create professional, beautiful, Modern website for any purpose.\nYou will know how to set up contact pages & Wordpress contact form.\nhow to set up email opt-in forms throughout your website for email marketing.\nhow to find and install plugins.\nComplete woocommerce wordpress ecommerce plugin tutorial.\nBuild online 24/7 wordpress ecommerce store.\nlearn to create discount coupons & sale offers.\nHow to convert your website into https secure (encrypted connection & SEO ranking development).\nHow to master your online store in all details ( shipping, tax, payments..etc).\nhow to back up your WordPress website in case of emergency.\nincrease SEO ranking for your website with Analytics, webmaster tool & SEO plugins.\nYou will know how to speed up your website's performance with caching plugins.\nhow to build official professional domain emails.\nWordPress website migration and moving sites to different hosts and servers.",
      "target_audience": [
        "Want to establish your online business \\ entrepreneurship",
        "Those interested in learning to build websites using freely available tools should with lowest possible cost take this course.",
        "want to sell your products online",
        "You are someone who wants to build a wordpress website for your business, hobby, or personal life.",
        "You want someone to walk you through the entire process of creating a WordPress website from the very beginning to publishing.",
        "if you are seeking to design a beautiful website & learn design through",
        "want to Master the Elementor page builder"
      ]
    },
    {
      "title": "Angular Router In Depth (Angular 20)",
      "url": "https://www.udemy.com/course/angular-router-course/",
      "bio": "Build large-scale Angular 19 Single Page Applications (SPAs) with the powerful Angular Router",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "In-depth guided tour to the Angular Router",
        "Angular Router Best Practices",
        "Leverage Lazy-loading to the maximum",
        "Master-Detail with Detail to Detail Navigation",
        "Preloading In Depth",
        "Router Guards In Depth",
        "Advanced Router Concepts"
      ],
      "course_content": {
        "Introduction": [
          "Angular Router In Depth Course - Helicopter View",
          "Download the Angular Router Jumpstart E-Book",
          "IMPORTANT",
          "Angular Router In Depth - Development Environment Setup",
          "What are Single Page Applications? Advantages and Downsides",
          "What is the Angular Router? Essential Concepts (Routes, Paths and Outlets)",
          "Router Essential Concepts - The routerLink and routerLinkActive Directives"
        ],
        "Angular Router Essentials": [
          "How to setup Lazy Loading with the Angular Router",
          "Angular Router Lazy Loaded Modules - Runtime Demo",
          "Angular Router Configuration - Best Practices",
          "Router Path Variables - Variable Target Routes with the Router Link Directive",
          "Angular Router Resolver Services - Building a Linkable Page in a SPA",
          "Angular Router Loading Indicator - Detecting Route Transitions and Lazy Loading"
        ],
        "Angular Router Master Detail with Detail to Detail Navigation": [
          "Angular Router Child Routes - Step-by-Step Explanation",
          "Angular Router Child Routes Demo - The Lessons List Component",
          "Master Detail Implementation - Routing from the Master to the Detail Component",
          "Implementing the Lesson Detail Resolver",
          "Programmatic Router Navigation with the Router Service",
          "Understanding Route Snapshots vs Route Observables - When to Use Each and Why"
        ],
        "Angular Router Guards In Depth": [
          "Router Guards Section Introduction - Authentication Store Review",
          "CanActivate Router Guards - Authentication Guards",
          "Understanding CanActivateChild Guards",
          "CanDeactivate Router Guards - A Practical Example",
          "Angular Router CanLoad Guards"
        ],
        "Angular Router In Depth - Other Topics": [
          "What is an Angular Router Preloading Strategy?",
          "Angular Router Custom Preloading Strategy",
          "Angular Router Query Parameters - Demo",
          "Configuring routing behaviour with routerLinkActiveOptions",
          "Angular Router Secondary Outlets - Step-by-Step Explanation",
          "Angular Router Secondary Outlets - Some Known Issues to be aware of",
          "Angular Router Module Extra Options - enableTracing and useHash",
          "Angular Router Extra Options - Recommended Settings"
        ],
        "Conclusion": [
          "Bonus Lecture (Updated October 2025)",
          "Angular Router In Depth - Conclusions and Key Takeaways"
        ]
      },
      "requirements": [
        "Some Angular is essential, but not at an advanced level"
      ],
      "description": "This Course in a Nutshell\nIn this course, we are going to learn in detail the advantages of building a frontend UI as a single-page application, as opposed to a traditional multi-page application.\nSingle-page applications (or SPAs) have been around for years now, and are today more popular than ever as a simplified way to build enterprise frontends or internet product dashboards.\nSPAs typically give the end-user a much better user experience, due to their better-perceived performance and responsiveness. In this course, we will learn how to use the Angular Router to turn our Angular application into a SPA.\nCourse Overview\nWe are going take as a starting point a small Angular application that does not have any routing yet. We are then going to learn how to configure the Angular Router from scratch. We will assume no prior Angular Router knowledge, as we explain everything from first principles.\nWe will start by introducing the essential router concepts such as route configuration, paths, router outlets, and router navigation links. From these essential concepts, will build a much more advanced routing scenario.\nWe will learn how to build a master-detail with detail-to-detail navigation scenario, and we will use this example to introduce all the advanced routing concepts and powerful features that the Angular Router offers us.\nThis will include lazy loading modules, data pre-fetching with Resolvers, protecting route access with Guards, custom pre-loading strategies, secondary outlets (auxiliary routes), and much more.\nTable of Contents\nThis course covers the following topics:\nWhat is a single page application?\nBest practices for router configuration: home route, page not found route, etc.\nEssential Router configurations concepts: paths, components, and outlets\nEssential Router navigation concepts; the routerLink and routerLinkActive directives\nRelative vs Absolute routing best practices\nUnderstanding Path matching and router configuration order\nRouter Path and Query parameters\nRouter redirects\nDeep linking with the Angular router: master-detail with detail-to-detail navigation scenario\nUnderstanding router snapshots vs router observables\nLazy loaded routes\nRoute data pre-loading with Resolvers\nRouter module pre-loading strategies, building a custom preloading strategy\nRouter Guards - CanActivate and CanActivateChild Authentication Guards\nPreventing route exits with CanDeactivate guards\nChecking if a lazy-loaded module can be loaded with CanLoad\nRouter Loading Indicator\nUnderstanding Router Hash location strategy\nSecondary router outlets and auxiliary routes\nThe router module extra configuration options: enableTracing, scrollPositionRestoration, paramsInheritanceStrategy, etc\nWhat Will You Learn In this Course?\nAt the end of this course, you will feel comfortable setting up the Angular Router from scratch in an existing Angular application\nYou will know not only the essentials of the router together with all its most advanced features, but most importantly you will know exactly when to use each feature and why, and you will know numerous best practices that will help you to make the most out of the Angular Router\nHave a look at the course free lessons below, and please enjoy the course!",
      "target_audience": [
        "Angular developers, looking to learn more about the Angular Router"
      ]
    },
    {
      "title": "Django 4 and Python Full-Stack Developer Masterclass",
      "url": "https://www.udemy.com/course/django-and-python-full-stack-developer-masterclass/",
      "bio": "Learn the entire technology stack to create beautiful and responsive websites with Python and Django!",
      "objectives": [
        "Learn to use HTML",
        "Create responsive layouts with Bootstrap",
        "Style your website with CSS",
        "Understand static website elements like HTML, CSS, and landing pages.",
        "Learn to use Django function based views",
        "Use the Django Template Language to interact with the front-end from Django",
        "Use Django Models to interact with SQL backend databases",
        "Learn to use advanced class based views to quickly create websites",
        "Use Django's built-in authentication and administration systems",
        "Learn to use Django Forms",
        "Create relationships between model tables in the database"
      ],
      "course_content": {
        "Welcome and Course Overview": [
          "Introduction, Welcome, and FAQ",
          "Course Overview and Quick Help (PLEASE DO NOT SKIP THIS LECTURE!)"
        ],
        "Course Curriculum and Setup": [
          "Course Curriculum",
          "Visual Studio Code Set-Up"
        ],
        "HTML 5": [
          "Introduction to HTML",
          "HTML Tags - Basics",
          "Check In: HTML Tags - Basics",
          "HTML Lists",
          "Check in: HTML Lists",
          "HTML - Divs and Spans",
          "HTML Attributes - Img and Anchor Tags",
          "Check-In: HTML Attributes - Img and Anchor Tags",
          "HTML Tables",
          "Check-In: HTML Tables",
          "HTML Forms - Part One",
          "Check-In: HTML Forms - Part One",
          "HTML Forms - Part Two",
          "Check-In: HTML Forms - Part Two"
        ],
        "CSS": [
          "Introduction to CSS",
          "CSS - Styling Basics and Color",
          "Check-In: CSS - Styling Basics and Color",
          "CSS - Common Style Attributes",
          "Check-In: CSS - Common Style Attributes",
          "CSS Selectors - Classes and Ids",
          "Check-In: CSS Selectors - Classes and Ids",
          "CSS - Fonts and Text",
          "Check-In: CSS - Fonts and Text",
          "CSS - Box Models",
          "Check-In: CSS - Box Models"
        ],
        "Bootstrap": [
          "Introduction to Bootstrap",
          "Bootstrap and Buttons",
          "Bootstrap Forms",
          "Bootstrap and Navbars",
          "Bootstrap Grid System and Layout"
        ],
        "Python Overview - Basics": [
          "Introduction to Python Basics",
          "Variables, Arithmetic with Numbers and Running .py Files",
          "Python Strings",
          "Coding Exercise Check-in: Python Strings",
          "Python Lists",
          "Coding Exercise Check-in: Python Lists",
          "Python Dictionaries",
          "Check-In: Python Dictionaries",
          "Python Tuples and Booleans",
          "Check-In: Python Tuples and Booleans",
          "Python Control Flow - Operators",
          "Check-In: Python Control Flow - Operators",
          "Python Control Flow - If , Elif, Else",
          "Check-In: Python Control Flow - If, Elif, Else",
          "Python - For Loops",
          "Check-In: For Loops",
          "Python - While Loops",
          "Check-In: Python - While Loops",
          "Python Functions",
          "Check-In: Python Functions"
        ],
        "Advanced Python": [
          "Introduction to Python: Advanced",
          "Errors and Exception Handling",
          "Check-In: Errors and Exception Handling",
          "Python OOP - Object Oriented Programming - Syntax Theory",
          "Python OOP - Class and Attributes",
          "Check-In: Python OOP - Class and Attributes",
          "Python OOP - Methods",
          "Check-In: Python OOP - Methods",
          "Python OOP - Inheritance",
          "Check-In: Python OOP - Inheritance",
          "Python OOP - Special Methods",
          "Check-In: Python OOP - Special Methods",
          "Modules and Packages",
          "Installing Packages with pip"
        ],
        "Introduction to Django Framework": [
          "Introduction to Django Framework",
          "How Django Works",
          "First Django Project",
          "First Django Application (App)"
        ],
        "Django - Views, Routing, and URLs": [
          "Introduction to URLs, Views, and Routing",
          "Project Application Exercise",
          "Project Application Exercise - Solution",
          "Django - Views and URLs Overview",
          "Function Based Views - Basics",
          "Dynamic Views - Routing Logic",
          "Using ReponseNotFound and 404 Pages",
          "Redirects Basics",
          "Reverse URLs and URL Names",
          "Connecting a View to a Template"
        ],
        "Django -Templates": [
          "Django and Templates",
          "Template Directories",
          "Variables in Templates",
          "VS Code Django Extensions",
          "Filters",
          "Tags - For Loops",
          "Tags - If, Elif, Else",
          "Tags and URL Names in Templates",
          "Template Inheritance",
          "Custom Error Templates",
          "Static Files"
        ]
      },
      "requirements": [
        "No programming experience needed! Just make sure you have full permissions on your computer to install Visual Studio Code and Python"
      ],
      "description": "Welcome to the best online course for learning how to create websites using Python and Django! In this course we take you from zero to hero in web development with Django!\nWhether you want to change career paths, expand your current skill set, start your own entrepreneurial business, become a consultant, or just want to learn, this is the course for you!\nWe will teach you the latest technologies for building great web applications with Python 3 and Django! But we don't just teach that, we also teach the Front End technologies you need to know, including HTML, CSS, and Bootstrap. This course can be your one stop shop for everything you need! It will serve as a useful reference for many of your questions as you begin your journey in becoming a web developer!\nThis course is designed so that anyone can learn how to become a web developer. We teach you how to program by using HD Video Lectures, Walkthrough Code Projects, Exercises, Concept Presentation Slides, Downloadable Code Notes, Reading Assignments, and much more!\nHere is just a small sampling of the topics included in this course:\nHTML5\nCSS3\nBootstrap\nPython\nDjango Basics\nUnderstanding Django Views\nDjango Template Language\nDjango Forms\nDjango Admin and Customization\nORM\nDjango Class Based Views\nUser Authentication\nand much, much more!\nYou will also get access to our online community of thousands of students, happy to help you out with any questions you may have!\nWe also have a 30-day money back guarantee, so you can try out the course for an entire month, risk-free!\nAlways keep learning!\nJose",
      "target_audience": [
        "Beginners in Web Development who want to use Python and Django to create websites"
      ]
    },
    {
      "title": "ASP.NET CORE MVC | Build a Complete eCommerce App",
      "url": "https://www.udemy.com/course/complete-ecommerce-aspnet-mvc-application/",
      "bio": "Learn to build fast and secure eCommerce application with ASP.NET MVC and Entity Framework Core",
      "objectives": [
        ".NET MVC BUILDING BLOCKS - Models, ViewModels, Views, Partial views, Controllers, ViewComponents etc.",
        "CRUD OPERATIONS WITH ENTITY FRAMEWORK CORE - SQL Server configuration, EFCore migrations, relationship types, relational and non-relational data etc.",
        "BUILD RESTFUL SERVICES - Dependency injection, major dependency injection lifetimes, services, and generic base repositories etc.",
        ".NET IDENTITY FRAMEWORK - Authentication, authorization, cookie-based authentication, role-based UI rendering etc.",
        "PAYPAL INTEGRATION - Configuring the PayPal checkout library, create and process payments etc.",
        "AZURE DEPLOYMENT - Deploy your MVC application and your SQL database to azure etc."
      ],
      "course_content": {
        "Before you get started": [
          "How to use any version of .NET?",
          "Using This Course with Any .NET Version: A Quick Guide"
        ],
        "Welcome": [
          "Application Demo",
          "What to expect from this course?"
        ],
        "Getting Started": [
          "What is MVC?",
          "Your first MVC application",
          "Default application files",
          "Course code structure"
        ],
        "Building the Data Structure": [
          "Application models overview",
          "Adding your first model",
          "Adding producer model",
          "Adding cinema model",
          "Adding movie model"
        ],
        "Database Configuration and Management": [
          "Adding your DbContext file",
          "Adding model relationships",
          "Configuring SQL Server",
          "Adding your first migration",
          "Seeding the database",
          "Quiz - Database Configuration and Management"
        ],
        "Building and Managing Controllers": [
          "Application controllers overview",
          "Adding the ActorsController",
          "Adding the ProducersController",
          "Adding the CinemasController",
          "Adding the MoviesController",
          "Quiz - Building and Managing Controllers"
        ],
        "Understanding Views and UI Design": [
          "Adding your first view (list of actors)",
          "Adding the producers view",
          "Adding the cinemas view",
          "Adding the movies view",
          "Designing the movie card",
          "Designing the navigation bar",
          "Quiz - Understanding Views and UI Design"
        ],
        "Managing Actor Data and Services": [
          "Adding IActorsService interface",
          "Adding your first service",
          "Major dependency-injection lifetimes (Singleton vs Scoped vs Transient)",
          "Designing your first form | Create Actor",
          "Model Validation - Adding data to database",
          "Getting item by id (Actor Details)",
          "Updating data in database (Edit Actor)",
          "Deleting data from database (Delete Actor)",
          "Adding NotFound View",
          "Quiz - Managing Actor Data and Services"
        ],
        "Implementing a Generic Base Repository": [
          "Adding EntityBaseRepository files",
          "GetAllAsync() & GetByIdAsync() base methods",
          "AddAsync() method in base repository",
          "UpdateAsync() & DeleteAsync() methods in base repository",
          "ActorsService configuration with EntityBaseRepository",
          "Quiz - Implementing a Generic Base Repository"
        ],
        "Managing Producer Data with EntityBaseRepository": [
          "ProducersService configuration with EntityBaseRepository",
          "Getting producer details",
          "Adding new producer to database",
          "Updating a producer",
          "Deleting a producer from database",
          "Quiz - Managing Producer Data with EntityBaseRepository"
        ]
      },
      "requirements": [
        "Basic understanding of C# is recommended, but not required"
      ],
      "description": "ASP.NET MVC is a design pattern used to archive the separations of concerns. With MVC(model-view-controller) you can easily decouple user-interface (view), data (model), and application logic (controller).\nThis course will teach you all you need to know to build personal or commercial applications using ASP.NET MVC as your development framework. You will start with just an empty project in Visual Studio and build your app from the ground up.\nAs data storage, you will use an SQL database and Entity Framework will be used to interact with your data. You will also learn how to update database schema using Entity Framework migrations, how to add data to the database, get data from the database, update data in the database and also delete data from the database. You will learn about creating services to work with your data, but also create generic services/repositories to help you implement commonly used tasks like creating, reading, updating, and deleting data from the database. Other important features include dynamic content rendering with ViewComponenets, Paypal payments integration role-based UI rendering.\nYou will learn all these, step by step with hands-on practice. You will also have a lot of quizzes that will help to improve your knowledge of the ASP.NET MVC framework. Some of the topics that this course covers are:\nIntroduction to ASP.NET MVC\nModels vs ViewModels\nViews vs PartialViews\nSQL server configuration with Entity framework\nEntity Framework migrations\nAdding, Getting, Updating and Deleting data from an SQL database using Entity Framework\nWorking with relational and non-relational data\nDependency injection\nMajor dependency injection lifetimes\nStatic and generic services/repositories\nModel binding and validation\nRouting\nCookie-based authentication\nRole-based authorization\nRole-based UI rendering\nDynamic rendering with ViewComponents\nOnline payments using Paypal SDK and much more...\nYou can find the source code of this course on my Github account: @etrupja/complete-ecommerce-aspnet-mvc-application",
      "target_audience": [
        "Any developer interested in learning how to build ASPNET MVC applications from scratch"
      ]
    },
    {
      "title": "HTML & CSS - Certification Course for Beginners",
      "url": "https://www.udemy.com/course/html-css-certification-course-for-beginners-e/",
      "bio": "Lean the Foundations of HTML & CSS to Create Fully Customized, Mobile Responsive Web Pages",
      "objectives": [
        "The Structure of an HTML Page",
        "Core HTML Tags",
        "HTML Spacing",
        "HTML Text Formatting & Decoration",
        "HTML Lists (Ordered, Unordered)",
        "HTML Image Insertion",
        "HTML Embedding Videos",
        "Absolute vs. Relative File Referrencing",
        "Link Creation, Anchor Tags, Tables",
        "Table Background Images",
        "Form Tags and Attributes - Buttons, Input Areas, Select Menus",
        "Parts of a CSS Rule",
        "CSS - Classes, Spans, Divisions",
        "CSS Text Properties, Margins, & Padding",
        "CSS Borders, Backgrounds, & Transparency",
        "CSS Positioning - Relative, Absolute, Fixed, Float, Clear",
        "CSS Z-Index, Styling Links, Tables",
        "Responsive Web Page Design using CSS"
      ],
      "course_content": {
        "HTML Development": [
          "Introduction to HTML",
          "What is HTML?",
          "What is Tag, Element and Attribute",
          "Setting up the System",
          "Basic Structure of a Web Page",
          "HTML Head Tags",
          "HTML Body Tag",
          "HTML Paragraph Spacing",
          "HTML Line Breaks",
          "HTML Non-Breaking Space",
          "HTML Header Tags",
          "HTML Text Formatting and Decoration",
          "HTML Inline Text Formatting",
          "HTML Unordered Lists",
          "HTML Ordered Lists",
          "HTML Image Insertion",
          "HTML Embedding Videos",
          "HTML Absolute vs. Relative File Referencing",
          "HTML Link Creation",
          "HTML Anchor Tags",
          "HTML Tables",
          "HTML Nested Tables",
          "HTML Merging Cells",
          "HTML Text Wrapping",
          "HTML Table Background Image",
          "HTML Cell Alignment",
          "HTML - Introduction to Forms",
          "HTML Form Tags and Attributes",
          "HTML Forms - Post vs Get",
          "HTML Forms - Input Text Fields",
          "HTML Forms - Select Menus",
          "HTML Forms - Check Boxes and Radio Buttons",
          "HTML Forms - Text Areas and Buttons",
          "HTML Forms Practice - Creating Forms to take user's input",
          "HTML Project - Introduction",
          "HTML Project - Header",
          "HTML Project - Callout",
          "HTML Project - Image Insertion",
          "HTML Project - Text Insertion",
          "HTML Project - Links and Form",
          "HTML Project - Tabular Data",
          "HTML Project - Footer"
        ],
        "CSS Development": [
          "Introduction to CSS",
          "Parts of a CSS Rule",
          "Types of CSS Rules",
          "CSS - Color Names and Codes",
          "CSS Classes and Spans",
          "CSS Divisions - DIVs",
          "CSS IDs",
          "CSS Margins",
          "CSS Padding",
          "CSS Text Properties",
          "CSS Font Properties",
          "CSS Borders",
          "CSS Backgrounds",
          "CSS Transparency",
          "CSS Text on Top of Images",
          "CSS Width and Height Properties",
          "CSS Display Properties",
          "CSS Static Positioning",
          "CSS Relative Positioning",
          "CSS Absolute Positioning",
          "CSS Fixed Positioning",
          "CSS Float Property",
          "CSS Clear Property",
          "CSS Z-Index",
          "CSS Styling Links",
          "CSS Tables",
          "CSS Project - Introduction",
          "CSS Project - CSS Rules",
          "CSS Project - Navigation Rules",
          "CSS Project - Responsive CSS",
          "CSS Project - Page Elements"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to the HTML & CSS – Certification Course for Beginners\n\nThis two-part series provides an in-depth look at the fundamentals of coding in HTML and CSS. We start by exploring HTML Development using some of the most commonly used tags and attributes. Students will learn the composition of an HTML file, and some of the essential components. Students will work with HTML Spacing, Text Formatting, Lists, Images, Embedding Videos, Link Creation, Tables, and Forms. We also include a hands-on project, that helps solidify the concepts we explore in the course.\n\nAfter the HTML Section, students will dive into CSS to fully customize the look of their web pages. We provide an extensive overview of CSS attributes, components, and positioning. This includes:\nParts of a CSS Rule\nCSS Divisions\nCSS IDs\nColor Codes\nApplying Borders, Backgrounds, and Styling Images\nCSS Positioning, including Static, Relative, Absolute, and Fixed\nCSS Z-Indexing, Styling Links, and Styling Tables.\nThrough a hands-on project, students will also build a fully customized, responsive website using both HTML5 and CSS3.\nIf you are serious about taking your coding skills to the next level, enroll in this course today!",
      "target_audience": [
        "Beginner Web Developers who want to learn to Code in HTML & CSS",
        "Students interested in building Customized Mobile Responsive Web Pages"
      ]
    },
    {
      "title": "Build EU GDPR data protection compliance from scratch",
      "url": "https://www.udemy.com/course/build-eu-gdpr-data-protection-compliance-from-scratch-cipt/",
      "bio": "Preparation for IAPP certifications_FREE GDPR Templates & Documentation - Practical GDPR Blueprint",
      "objectives": [
        "Lessons from ex-Microsofter and IBMer",
        "Will have a list of 61 templates/documents that will help them start GDPR programme",
        "Understand what GDPR needs in order to achieve compliance",
        "Go for CIPT, CIPM and CIPP/E certification by IAPP with a comprehensive learning plan explained in lesson 4",
        "Will have a GDPR implementation guide",
        "Understand Online privacy issues",
        "Understand technologies with privacy considerations and core privacy concepts",
        "Understand how technology will help in achieving compliance",
        "Understand lawful processing from HR point of view",
        "Understand how to work with Cloud Service Providers (CSPs)"
      ],
      "course_content": {
        "Introduction": [
          "Why start learning GDPR Data Privacy with me?",
          "What is included in this course?",
          "Course Resources",
          "My first promise to you - get certified in less than 30 days: CIPT, CIPM, CIPP/E",
          "One more word before we start..."
        ],
        "Understanding the need for privacy in IT environment": [
          "Evolving compliance requirements",
          "Major Risks to a Company's IT Framework",
          "Application Related Risks",
          "Network Related Risks",
          "Storage Related Risks",
          "Stakeholder expectations for privacy",
          "Privacy vs Security",
          "IT Governance vs Data Governance",
          "The role of the IT professional & other stakeholders in preserving"
        ],
        "Privacy and Security will never die!": [
          "Why Privacy and Security will never die!",
          "Privacy vs Security",
          "Privacy Risks Expand",
          "Cyberattacks and what makes them possible",
          "CIA and their privacy implications",
          "Principles for Building and Operating Systems to be more secure",
          "Why does an organization need a privacy program?"
        ],
        "Core Privacy Concepts": [
          "Privacy Foundational elements - Organizational Privacy Notice",
          "Privacy Foundational elements - Organizational Privacy Policy",
          "Example - A great organizational privacy policy",
          "Privacy Foundational elements - Organizational Security Policies",
          "Incident Response - Security and Privacy Perspectives",
          "System Development Lifecycle and Enterprise Architecture",
          "Privacy Impact Assessments (PIA)",
          "Common Privacy Principles",
          "Data Retention Concepts and Best Practices in GDPR context"
        ],
        "Privacy Considerations & Techniques": [
          "The Collection Process - Notice",
          "The Collection Process - Choice, Control & Consent",
          "Other topics related to Collection",
          "Use",
          "Security Practices and Limitations on Use",
          "Disclosure",
          "Retention - Records, Limitations, Access",
          "Retention - Security Considerations",
          "Destruction"
        ],
        "Privacy in Systems and Applications": [
          "Identity and Access Management (IAM)",
          "Limitations of Access Mgmt & Least Privilege principle",
          "User Based Access Control & Role Based Access Control",
          "Context of Authority",
          "Cross Site Authentication & Authorization Models",
          "Credit card information & Processing",
          "PCI-DSS & PA-DSS",
          "Remote Access & BYOD - Privacy & Security Considerations",
          "Remote Access & BYOD - Access to Computers & Architecture controls",
          "Data Encryption - Design Considerations",
          "Application, Record and Field Encryption",
          "File & Disk Encryption",
          "Encryption Regulation & Crypto Standards",
          "Other Privacy enhancing Technologies",
          "Software Notifications and Agreements"
        ],
        "GDPR Implementation - short intro guide!": [
          "GDPR short overview",
          "Format and Definitions",
          "Principles",
          "Lawfulness",
          "Gap Assessment",
          "EU Institutions",
          "How to plan your project - preparation!",
          "GDPR Roles",
          "Data Protection Concepts",
          "Data Subject Rights",
          "Processors under GDPR",
          "How to Capture Personal Data in a Form",
          "GDPR Privacy Data Protection Policy",
          "Data Subject Request Procedure",
          "Data Protection Impact Assessment (DPIA)",
          "How to treat data breaches",
          "How to treat international transfers",
          "ISO 27K and GDPR mapping",
          "Privacy by Design"
        ],
        "EU GDPR Advanced": [
          "Processors, Controllers, Sub Processors - deep dive with examples",
          "Territorial and Material Scope of GDPR with examples",
          "Sanctions under GDPR",
          "Legal Basis for Processing",
          "Consent",
          "Legal Basis for Processing Sensitive Data",
          "Security & Breach",
          "Legitimate interests deep dive - examples",
          "Automated Decision Making & Profiling Deep Dive",
          "The right to data portability Deep Dive",
          "GDPR vs ePrivacy Directive",
          "Brexit and GDPR - what has changed",
          "General Principles for International Transfers",
          "Schrems II - General Statements",
          "Compliance with Schrems II",
          "EU US Data Privacy Framework part 1",
          "EU US Data Privacy Framework part 2"
        ],
        "Online Privacy Issues": [
          "Organizational Privacy Strategy for Social Media",
          "Consumer Expectations",
          "Children's Online Privacy",
          "Social media - personal information collected",
          "Social media - personal information shared and ownership",
          "E-commerce personalization",
          "Online Advertising",
          "Key considerations when posting ADs on your website",
          "Understanding cookies, beacons and other tracking technologies",
          "Cookies - Deep Dive",
          "Web Browser Privacy and Security Features"
        ],
        "Technologies with Privacy Considerations": [
          "Wireless Technology - RFID",
          "Wireless Technology - NFC, Bluetooth & WiFi",
          "Location Based Services (LBS) - generalities",
          "Location Based Services (LBS) - GPS",
          "Location Based Services (LBS) - GIS",
          "Surveillance of Individuals",
          "Data surveillance & Biometric recognition"
        ]
      },
      "requirements": [
        "You should have basic IT Security knowledge",
        "You should have basic audit and compliance knowledge",
        "You should have basic risk management knowledge"
      ],
      "description": "Lessons from Chief Security Officer (CISO) of SAP\nalso an ex IBM-er, MICROSOFT-er, Accenture, Cognizant, Genpact and Cisco\n\n\nThis course is about how to make privacy operational and how to start your journey to get 3 privacy certifications in less than 30 days: CIPT, CIPM, CIPP/E by IAPP”\nPlease take a look at the Learning Plan and together with my other courses, especially:\n- How to Succeed in a DPO role\n- GDPR Privacy Data Protection Case Studies Explained\n- Ultimate Privacy by Design Data Protection Course\n\n\n2025 Updated - 13+ hours of GDPR content and 61 templates\n\n\nNo prior GDPR knowledge is needed.\nCIPT, CIPM and CIPP/E certification preparation in a complete learning plan\nThis is the 1st course in a 6 course series that will drive you to Data Privacy expert and will allow you to go for all IAPP certifications: CIPT, CIPM and CIPP/E.\nMY FIRST PROMISE TO YOU is the following: You will be prepared to pass 3 IAPP certifications in less than 30 days if you follow the below learning plan:\nCourse 1: Build EU GDPR data protection compliance from scratch\nCourse 2: How to succeed in a Data Privacy Officer Role (GDPR DPO, CIPM)\nCourse 3: GDPR Privacy Data Protection Case Studies Explained (CIPP/E, CIPM, CIPT)\nCourse 4: Ultimate Privacy by Design Data Protection Course\nCourse 5: Build Security Incident Response for GDPR Data Protection (incl. parts from CIPT and CIPM also)\nCourse 6: (part of CIPP/US): California Consumer Privacy Act (CCPA) - Complete course\nCourse 7: Build a Cybersecurity Career and Earn more than 150K per year\n\n\nMy name is Roland Costea and I am currently the Chief Security Officer (CISO) of SAP.\nAfter spending my last 10 years working for SAP, Microsoft, IBM, Genpact and Cognizant as a Chief Security Officer or Privacy & Security Director being able to create hundreds of integrated security & privacy programmes for top organizations in the world, I have decided to put all my experience together in a comprehensive privacy LEARNING PLAN, to show how to actually make Data Privacy operational and most importantly how to think out of the box.\nI have been involved in engineering privacy for a lot of industries including Automotive (Mercedes-Benz, Geely, Volvo) and also provided DPO as a service for several other top companies in Europe and US. I have worked and developed the privacy strategy for Microsoft & IBM for the whole Central & Eastern Europe and also drived Cognizant Security & Privacy business in DACH.\nCertifications I hold: CIPT, CIPM, CISSP, CRISC, CISM, CCSK, CCSP, LPT, CEH, ECSA, TOGAF\n\n\nCourse Curricula:\nSection 1: Introduction\nSection 2: Understanding the need for privacy in the IT environment\nSection 3: Core Privacy Concepts\nSection 4: Privacy Considerations & Techniques\nSection 5: Privacy in Systems and Applications\nSection 6: GDPR Implementation - short intro guide!\nSection 7: Online Privacy Issues\nSection 8: Technologies with Privacy Considerations\nSection 9: Direct Marketing Challenges\nSection 10: Lawful Processing of HR Data, Contracts & Recruiting\nSection 11: GDPR for Cloud Service Providers (CSPs)\nSection 12: GDPR and Payment Services Directive (PSD2)\nSection 13: How Technology can help in achieving GDPR compliance\nSection 14: Conclusion",
      "target_audience": [
        "Anyone interested in GDPR compliance",
        "Any security enthusiast willing to learn about GDPR",
        "Anyone interested in how to start a GDPR programme",
        "Anyone interested in technologies that can help achieving GDPR compliance",
        "Anyone interested in making a turn in their career to DATA PRIVACY",
        "Any privacy consultant, manager, director or DPO",
        "Any lawyer interested to learn about data privacy and how technology may fit in this picture also"
      ]
    },
    {
      "title": "Build Responsive Real-World Websites with HTML and CSS",
      "url": "https://www.udemy.com/course/design-and-develop-a-killer-website-with-html5-and-css3/",
      "bio": "Learn modern HTML5, CSS3 and web design by building a stunning website for your portfolio! Includes flexbox and CSS Grid",
      "objectives": [
        "Become a modern and confident HTML and CSS developer, no prior knowledge needed!",
        "Design and build a stunning real-world project for your portfolio from scratch",
        "Modern, semantic and accessible HTML5",
        "Modern CSS (previous CSS3), including flexbox and CSS Grid for layout",
        "Important CSS concepts such as the box model, positioning schemes, inheritance, solving selector conflicts, etc.",
        "A web design framework with easy-to-use rules and guidelines to design eye-catching websites",
        "How to plan, sketch, design, build, test, and optimize a professional website",
        "How to make websites work on every possible mobile device (responsive design)",
        "How to use common components and layout patterns for professional website design and development",
        "Developer skills such as reading documentation, debugging, and using professional tools",
        "How to find and use free design assets such as images, fonts, and icons",
        "Practice your skills with 10+ challenges (solutions included)"
      ],
      "course_content": {
        "Welcome and First Steps": [
          "Course Structure and Projects",
          "Read Before You Start!",
          "A High-Level Overview of Web Development",
          "Setting Up Our Code Editor",
          "Your Very First Webpage!",
          "Downloading Course Material",
          "Watch Before You Start!"
        ],
        "HTML Fundamentals": [
          "Section Intro",
          "Introduction to HTML",
          "HTML Document Structure",
          "Text Elements",
          "More Text Elements: Lists",
          "Images and Attributes",
          "Hyperlinks",
          "Structuring our Page",
          "A Note on Semantic HTML",
          "Installing Additional VS Code Extensions",
          "CHALLENGE #1",
          "CHALLENGE #2"
        ],
        "CSS Fundamentals": [
          "Section Intro",
          "Introduction to CSS",
          "Inline, Internal and External CSS",
          "Styling Text",
          "Combining Selectors",
          "Class and ID Selectors",
          "Working With Colors",
          "Pseudo-classes",
          "Styling Hyperlinks",
          "Using Chrome DevTools",
          "CSS Theory #1: Conflicts Between Selectors",
          "CSS Theory #2: Inheritance and the Universal Selector",
          "CHALLENGE #1",
          "CSS Theory #3: The CSS Box Model",
          "Using Margins and Paddings",
          "Adding Dimensions",
          "Centering our Page",
          "CHALLENGE #2",
          "CSS Theory #4: Types of Boxes",
          "CSS Theory #5: Absolute Positioning",
          "Pseudo-elements",
          "Developer Skill #1: Googling and Reading Documentation",
          "Developer Skill #2: Debugging and Asking Questions",
          "CHALLENGE #3"
        ],
        "Layouts: Floats, Flexbox, and CSS Grid Fundamentals": [
          "Section Intro",
          "The 3 Ways of Building Layouts",
          "Using Floats",
          "Clearing Floats",
          "Building a Simple Float Layout",
          "box-sizing: border-box",
          "CHALLENGE #1",
          "Introduction to Flexbox",
          "A Flexbox Overview",
          "Spacing and Aligning Flex Items",
          "The flex Property",
          "Adding Flexbox to Our Project",
          "Building a Simple Flexbox Layout",
          "CHALLENGE #2",
          "Introduction to CSS Grid",
          "A CSS Grid Overview",
          "Sizing Grid Columns and Rows",
          "Placing and Spanning Grid Items",
          "Aligning Grid Items and Tracks",
          "Building a Simple CSS Grid Layout",
          "CHALLENGE #3"
        ],
        "Web Design Rules and Framework": [
          "Section Intro",
          "Project Overview",
          "Overview of Web Design and Website Personalities",
          "Web Design Rules #1: Typography",
          "Implementing Typography",
          "Web Design Rules #2: Colors",
          "Implementing Colors",
          "Web Design Rules #3: Images and Illustrations",
          "Web Design Rules #4: Icons",
          "Implementing Icons",
          "Web Design Rules #5: Shadows",
          "Implementing Shadows",
          "Web Design Rules #6: Border-radius",
          "Implementing Border-radius",
          "Web Design Rules #7: Whitespace",
          "Web Design Rules #8: Visual Hierarchy",
          "Implementing Whitespace and Visual Hierarchy",
          "Web Design Rules #9: User Experience (UX)",
          "The Website-Personalities-Framework",
          "The Missing Piece: Steal Like An Artist!"
        ],
        "Components and Layout Patterns": [
          "Section Intro",
          "Web Design Rules #10 - Part 1: Elements and Components",
          "Building an Accordion Component - Part 1",
          "Building an Accordion Component - Part 2",
          "Building a Carousel Component - Part 1",
          "Building a Carousel Component - Part 2",
          "Building a Table Component - Part 1",
          "Building a Table Component - Part 2",
          "CHALLENGE #1: Building a Pagination Component",
          "Web Design Rules #10 - Part 2: Layout Patterns",
          "Building a Hero Section - Part 1",
          "Building a Hero Section - Part 2",
          "Building a Web Application Layout - Part 1",
          "Building a Web Application Layout - Part 2"
        ],
        "Omnifood Project – Setup and Desktop Version": [
          "Section Intro",
          "The 7 Steps to a Great Website",
          "Defining and Planning the Project (Steps 1 and 2)",
          "Sketching Initial Layout Ideas (Step 3)",
          "First Design and Development Steps (Step 4)",
          "Responsive Design Principles",
          "How rem and max-width Work",
          "Building the Hero - Part 1",
          "Building the Hero - Part 2",
          "Building the Hero - Part 3",
          "Building the Header",
          "Building the Navigation",
          "Setting Up a Reusable Grid",
          "Building the How-It-Works Section - Part 1",
          "Building the How-It-Works Section - Part 2",
          "Building the Featured-In Section",
          "Building the Meals Section - Part 1",
          "Building the Meals Section - Part 2",
          "Building the Meals Section - Part 3",
          "Building the Testimonials Section - Part 1",
          "Building the Testimonials Section - Part 2",
          "Building the Pricing Section - Part 1",
          "Building the Pricing Section - Part 2",
          "Building the Features Part",
          "Building the Call-To-Action Section - Part 1",
          "Building the Call-To-Action Section - Part 2",
          "Building the Call-To-Action Section - Part 3",
          "Building the Footer - Part 1",
          "Building the Footer - Part 2"
        ],
        "Omnifood Project – Responsive Web Design": [
          "Section Intro",
          "How Media Queries Work",
          "How to Select Breakpoints",
          "Responding to Small Laptops",
          "Responding to Landscape Tablets",
          "Responding to Tablets",
          "Building the Mobile Navigation",
          "Responding to Smaller Tablets",
          "Responding to Phones"
        ],
        "Omnifood Project – Effects, Optimizations and Deployment": [
          "Section Intro",
          "A Short Introduction to JavaScript",
          "Making the Mobile Navigation Work",
          "Implementing Smooth Scrolling",
          "Implementing a Sticky Navigation Bar",
          "Browser Support and Fixing Flexbox Gap in Safari",
          "Testing Performance With Lighthouse",
          "Adding Favicon and Meta Description",
          "Image Optimizations",
          "Deployment to Netlify",
          "Making the Form Work With Netlify Forms"
        ],
        "The End!": [
          "Where to Go from Here",
          "My Other Courses + Updates"
        ]
      },
      "requirements": [
        "No coding or design experience necessary",
        "Any computer works — Windows, macOS or Linux",
        "You don’t need to buy any software — we will use the best free code editor in the world"
      ],
      "description": "*** The #1 bestselling HTML and CSS course on Udemy! ***\n*** Completely re-built from scratch in July 2021 (35+ hours video) ***\n\"Having gone through other related courses on other platforms, I can say this course is the most practical and readily applicable course on web design and development I have taken.\" — Bernie Pacis\n\n\nOpen a new browser tab, type in www.omnifood.dev, and take a look around. I will wait here...\n...\nAmazing, right? What if you knew exactly how to design and build a website like that, completely from scratch? How amazing would that be?\nWell, I'm here to teach you HTML, CSS, and web design, all by building the stunning website that you just saw, step-by-step.\nSo, after finishing this course, you will know exactly how to build a beautiful, professional, and ready-to-launch website just like Omnifood, by following a 7-step process. And it will even look great on any computer, tablet, and smartphone.\nBut what if you want to build a completely different website? Well, no problem! I designed the course curriculum with exactly this goal: to enable you to design and build any website that you can think of, not just copy the course project.\n\n\nSo, in order to become a confident and independent developer, capable of building your own websites in the future, you will learn:\nThe fundamentals of modern and semantic HTML, CSS, and building layouts in a small separate project, which will prepare you for the main course project (www.omnifood.dev). This includes modern flexbox and CSS Grid!\nHow to design beautiful websites, by learning a web design framework I created just for this course. It consists of easy-to-use guidelines for design aspects like typography, colors, images, spacing, and more (this is like a small standalone course!).\nHow to use well-established website components and layout patterns in order to come up with professional-looking designs\nHow to make any website work on any mobile device, no matter the design and layout (responsive design)\nHow to use the 7 steps of building a professional website in practice: planning, sketching, designing, building, testing, optimizing, and launching\nHow to find and use free design assets such as images, fonts, and icons\nImportant developer skills such as reading documentation, fixing code errors on your own, and using professional web development tools\nDoes this sound like fun? Then join me and 200,000+ other developers and start building websites today!\nOr are you not sold yet and need to know more? No problem, just keep reading...\n\n\n[01] Why should you learn HTML and CSS in the first place?\nBuilding websites allows you to do fun and creative work, from anywhere in the world, and it even pays well. Web development is one of the most future-proof and highest-paying industries in the world. And HTML and CSS is the entry point to this world!\nBut you already know all this, that's why you want to learn HTML and CSS too. Well, you came to the right place!\nThis is the best and most complete course for starting your web development journey that you will find on Udemy. It's an all-in-one package that takes you from knowing nothing about HTML and CSS, to building beautiful websites using tools and technologies that professional web developers use every single day.\n\n\n[02] Why is this course so unique and popular?\nReason #1: The course is completely project-based\nSimple demos are boring, and therefore you're gonna learn everything by building actual projects! In the final project (www.omnifood.dev), together we hand-code a beautiful and responsive landing page for a fictional company that I made up just for the course.\n\n\nReason #2: You will not just learn how to code\nCoding is great, but it's not everything! That's why we will go through the entire 7-step process of building and launching our website project.\nSo the huge Omnifood project will teach you real-world skills to build real-world HTML and CSS websites: how to plan projects and page layouts, how to implement designs using HTML and CSS techniques, how to write clean and organized code, how to optimize websites for good speed performance, and many more.\nOn top of that, this course has a huge focus on beautiful design. In fact, this is the only course on the market that focuses on both coding and designing, together.\n\n\nReason #3: I'm the right teacher for you\nWith the right guidance and a well-structured curriculum, building websites can be quite easy and fun to learn. With a bunch of random tutorials and YouTube videos? Not so much. And that's where I come in.\nMy name is Jonas, I'm an experienced web developer and designer, and one of Udemy's top instructors. I have been teaching this bestselling course since 2015 to over 200,000 developers, always listening to feedback and understanding exactly how students actually learn.\nUsing that feedback, I recently rebuilt this course from scratch and designed the ideal course curriculum for every type of student. It's a unique blend of projects, deep explanations, theory lectures, and challenges. I'm sure you're gonna love it!\n\n\n[03] Why is this course so long?\nReason #1: I take time to explain every single concept that I teach, so that you actually learn, and not just copy code from the screen (this is a course, not a tutorial)\nReason #2: I go into topics that other HTML and CSS courses shy away from: professional web design, component and layout patterns, some CSS theory, website planning in theory and practice, and developer skills. I believe you need all of this to be successful!\nReason #3: There is a lot of repetition, so that you actually assimilate and practice what you learn. Practice is the single most important ingredient to learning, and therefore I provide plenty of opportunities for you to sharpen your skills\n\n\n[04] Here is what's also included in the package:\nUp-to-date HD-quality videos, that are easy to search and reference (great for Udemy Business students)\nProfessional English captions (not the auto-generated ones)\nDownloadable design assets + starter code and final code for each section\nDownloadable slides for 20+ theory videos (not boring, I promise!)\nAccess to countless free design and development resources that I curated over many years\nFree support in the course Q&A\n10+ coding challenges to practice your new skills (solutions included)\n\n\n[05] This course is for you if...\n... you are a complete beginner with no idea of how to build a website.\n... you already know a bit of HTML and CSS from some tutorials or videos, but struggle to put together a good-looking, complete website.\n... you are a designer and want to expand your skills into HTML and CSS, because all your designer friends are learning how to code (they are smart!).\nBasically, if you are an HTML and CSS master, and build the most beautiful websites in the world, then DON'T take the course. Everyone else: you should take the course, today.\n\n\nSo, does all of this sound great? Then join me and 200,000+ other developers and start your web development journey today!",
      "target_audience": [
        "Complete beginners who want to learn how to build a professional, beautiful and responsive website",
        "Students with some knowledge about HTML and CSS, but who struggle to put together a great website",
        "Designers who want to expand their skill set into HTML5 and CSS3"
      ]
    },
    {
      "title": "Node.js: The Complete Guide to Build RESTful APIs (2018)",
      "url": "https://www.udemy.com/course/nodejs-master-class/",
      "bio": "Learn to build fast, scalable and secure RESTful services with Node, Express and MongoDB, from setup to production",
      "objectives": [
        "Build the backend for your web and mobile apps",
        "Use modern JavaScript features (ES6, ES7)",
        "Implement CRUD operations",
        "Handle and log errors, the right way",
        "Write unit and integration tests",
        "Practice test-driven development (TDD)",
        "Store and retrieve complex data in MongoDB",
        "Implement authentication and authorization",
        "Deploy your Node apps to production",
        "Apply the best practices for building fast, scalable and secure apps"
      ],
      "course_content": {},
      "requirements": [
        "Basic familiarity with JavaScript"
      ],
      "description": "What is Node.js?\nNode.js, or Node, is a runtime environment for executing JavaScript code outside of a browser. It is ideal for building highly-scalable, data-intensive backend services (APIs) that power your client’s apps (web or mobile apps).\n\n\nWhy learn Node?\nNode is great for prototyping and agile development as well as building super fast and highly scalable apps; Companies like Uber and PayPal use Node in production to build applications because it requires fewer people and less code. Plus, Node has the largest ecosystem of open-source library, so you don’t have to build everything from scratch.\n\n\nA step-by-step, A to Z course\nWhat you’ll get when you sign up for this course:\n15 hours of HD videos, complete with exercises and solutions\nA real-world project: you'll build the back-end for a video rental application, not a dummy to-do app!\nNo more wasted time on lengthy courses or out-of-date tutorials\nUp-to-date and practical information and solutions (no fluff!)\nThe opportunity to learn at your own pace - lifetime access - so take your time if you prefer\nExpert tips to become a Node rockstar\nThe best practices and common pitfalls to avoid\nWatch on any device, online or offline - mobile friendly and downloadable lessons\nCertificate of completion to present to your employer\n\n\nYou’ll learn to:\nConfidently build RESTful services (APIs) using Node.js, Express.js, and MongoDB\nEmploy the best practices for Node.js\nAvoid common mistakes\n\n\nWhat we’ll cover:\nNode module system\nNode Package Manager (NPM)\nAsynchronous JavaScript\nUseful ES6+ features\nImplementing CRUD operations\nStoring complex data in MongoDB\nData Validation\nAuthentication and authorization\nHandling and logging errors the right way\nUnit and integration testing\nTest-driven development (TDD)\nDeployment\n\n\nThis course is for you if:\nYou’re a back-end developer who is used to working with frameworks like ASP.NET, Rails, Django, etc. You want to add Node.js to your toolbox.\nYou’re a front-end developer and want to transition to full-stack development.\nYou’ve tried other Node.js tutorials and found them to be too slow, out-of-date, and boring!\nHaving Node.js on your resume helps you find more jobs and make more money.\n\n\nAnd here is what other students say:\n\"Absolutely the best! Highly recommended if you want to get started on Node.js from zero. I have learned what Node is and what it can do. Truly comprehensive. Perfect rating! Mosh knows his stuff and he deserves your support. On a side note, my current company uses Mosh's courses as a huge resource and reference when training / refreshing knowledge. I just want to say thank you! Please don't stop teaching. You were born with the talent to teach.\" -Eugene John Arellano\n\n\n\"Mosh is one of the top 3 instructors for modern web development. He explains difficult concepts with ease. I recommend all of his courses because of the amount of detail and his style of teaching.\" -Warren Isaac\n\n\n\"What I like most about the course is Mosh's methodology and the way how he explains the things. Very well structured course with high quality of presentation as well.\" -Omar Amrani\n\n\nWho is your instructor?\nHi! My name is Mosh Hamedani and I help ambitious developers take their coding skills to the next level. I'm a software engineer with more than 15 years of experience and I've taught over 200,000 students through my online courses. My YouTube channel, Programming with Mosh, has been watched more than 6M times. My students describe my teaching as clear, concise, and fun, without any fluff.\n\n\nDo you want to become a Node rockstar? Enroll in the course and get started.",
      "target_audience": [
        "You’re a back-end developer familiar with frameworks like ASPNET, Rails, Django, etc. Now, you want to add Node to your toolbox.",
        "You’re a front-end developer and want to transition to full-stack development.",
        "Having Node on your resume helps you find more jobs and make more money."
      ]
    },
    {
      "title": "How to Install a Free SSL Certificate using Let's Encrypt",
      "url": "https://www.udemy.com/course/fix-googles-new-not-secure-warning-with-lets-encrypt/",
      "bio": "Learn to Secure website traffic using HTTPS by installing a FREE Let's Encrypt SSL Certificate!",
      "objectives": [
        "Distinguish between different types of SSL Certificates",
        "Create and Configure a basic droplet on Digital Ocean",
        "Install a Free Let's Encrypt SSL Certificate",
        "Fix the Google \"Not Secure\" Warning on any website that contains input forms.",
        "Install LAMP Stack on Ubuntu 16.04 LTS",
        "Configure Name Servers",
        "Configure DNS Settings on Digital Ocean",
        "Check the status of a SSL Certificate",
        "Automatically renew a SSL Certificate periodically using cron tab, and setting up cron jobs."
      ],
      "course_content": {
        "SSL Certificates": [
          "Introduction to SSL Certificates",
          "Traditional vs. Digital Certificates",
          "Types of SSL Certificates",
          "How SSL Certificates Work",
          "Obtaining a SSL Certificate",
          "Introduction to Let's Encrypt"
        ],
        "Digital Ocean Server Setup": [
          "Preparation",
          "Domain Name Server Administration",
          "Introduction to Digital Ocean",
          "Droplet Configurations",
          "Creating a Droplet",
          "Install PuTTY/Terminal and Connect",
          "Install LAMP Stack - Apache, MySQL, PHP",
          "Configure DNS on Digital Ocean",
          "Droplet Basic Configurations"
        ],
        "SSL Certificate Installation": [
          "Installing Lets Encrypt",
          "SSL Certificate Status Reports",
          "Redirect all Domain Variations to HTTPS",
          "Auto Renewal with cron jobs",
          "Final Quiz"
        ],
        "Next Steps": [
          "Become an Expert"
        ]
      },
      "requirements": [
        "Students will require an internet connection and PC or MAC Computer System.",
        "Terminal for MAC or PuTTY for Windows"
      ],
      "description": "In the modern internet age, delivering web content over a secure protocol has become essential.\n\nSince January 2017, Google attaches a warning label to any website that does not secure sensitive web page content by delivering it using HTTPS. This includes web pages that contain forms asking for usernames, passwords, credit cards and other sensitive information.\n\nIn the near future Google plans to roll out a requirement for all web pages to be secured. Warning labels will become progressively more aggressive, and eventually highlighted in red, bold colors on the address bar.\n\nIt is easy to see the consequences of not complying with this new requirement. You invest time, money and energy to drive traffic to your website. Your users expect a secure browsing experience and will likely be deterred from using your page when they see such warning labels attached.\n\nThere is a common misconception that securing a webpage over HTTPS requires expert server knowledge and is a costly and cumbersome process.\n\nThe purpose of this course is designed to teach you everything you need to know about HTTPS and SSL certificates. We start with the basics. Exploring the theory and definitions that will be useful in developing your understanding.\n\nFrom there, we dive into configuring a server on Digital Ocean and installing a free SSL certificate known as Let's Encrypt. We also explore setting up Cron Jobs on an Ubuntu server, to automatically renew your certificate periodically.\n\nAfter completing this course, you will easily be able to secure any web page using HTTPS and free SSL certificates.",
      "target_audience": [
        "No prerequisite knowledge required",
        "Web developers looking to secure their websites using SSL",
        "Students interested in learning about certificate authorities",
        "Students interested in SSL Certificate Types for maximum security and credibility",
        "Web developers who want to avoid costly fees and install a free, secure SSL Certificate using Let's Ecnrypt",
        "Students interested in learning the basics of SSL Encryption",
        "Web developers who want to direct all domain variations to HTTPS, instead of HTTP",
        "Web developers who want to learn how to easily resolve the \"Google Not Secure\" warning label."
      ]
    },
    {
      "title": "Responsive Web & Mobile Development in HTML,CSS & Javascript",
      "url": "https://www.udemy.com/course/complete-web-development-with-html-css-and-javascript/",
      "bio": "Create interactive and responsive web/hybrid mobile apps for android and ios using HTML, CSS and Javascript",
      "objectives": [
        "Build interactive and modern websites using HTML, CSS and Javascript technologies",
        "Develop responsive web and mobile applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting started with HTML"
        ],
        "Basic": [
          "Introducing HTML, CSS and Javascript",
          "HTML Geolocation (Capturing User's Location)",
          "Create a HTML Geolocation Place Search web app",
          "Scripts & Files",
          "Designing Responsive Web Pages for mobile devices",
          "Convert your Responsive Website into Hybrid Mobile Apps (Android and iOS)",
          "Continuing web development with HTML",
          "Moving into intermediate web development with HTML and CSS",
          "Getting in depth into CSS",
          "Continuing web page customization with CSS"
        ],
        "Javascript: in depth": [
          "Getting started with Javascript",
          "Advanced Javascript concepts into HTML sites",
          "Continuing advanced javascript concepts",
          "Finalizing interactive web app customization with Javascript"
        ],
        "Class files and notes": [
          "Class files (HTML5 codes)"
        ]
      },
      "requirements": [
        "Individuals with passion to learn web development"
      ],
      "description": "Course was last updated on: 04/28/2018, Udemy's Best in Web Development/Javascript!\nOver 15,000 students enrolled worldwide and still counting! A Jump-start to Responsive Web and Mobile App Design with HTML, CSS and Javascript. HTML and Javascript started its journey as an open source blogging tool but now it has become more popular as a content management system (CMS). HTML and Javascript is built on PHP and MySQL. HTML and Javascript has really changed the way we do web development. HTML and Javascript’s content management system makes it easy for developers to create rich and interactive websites. HTML and Javascript basically provides us themes and framework which help us to reduce coding effort. HTML and Javascript also comes with library of plugins. These themes and plugins take care of most of the coding for us. As a result, web developers can save a lot of coding time and focus more into the design concepts. HTML and Javascript do not require any knowledge of programming languages and non-technical people are able to create web pages with the help of HTML and Javascript. HTML and Javascript is a free tool but HTML and Javascript training courses are pretty expensive. Erudeversity likes to keep the training part free as well. HTML and Javascript aimed to create a free platform for everyone, but getting proper training lessons in using HTML and Javascript has not been as easy. Our free HTML and Javascript Training course discusses all basic concepts including HTML and Javascript installation, configuration, server setup, understanding HTML and Javascript settings, toolbar, creating posts and pages, and overview of HTML and Javascript. At the end, we give you a walk-through on how to publish your first HTML and Javascript site with free hosting! Now everyone can become a web developer. Our HTML and Javascript training videos are a comprehensive way to get started with web development. Just like our other courses, most of the course videos are available for preview so that you can test drive the quality of content. If you want to become an expert web developer, then this is the first step for you to get started. Get enrolled and take the opportunity to become an expert web developer without any prior knowledge of HTML and Javascript. You will also learn how to develop and convert your responsive website into hybrid mobile applications for android and iOs.",
      "target_audience": [
        "Anyone who wants to learn coding to develop interactive websites",
        "Anyone who wants to kick start responsive web and mobile app design learning"
      ]
    },
    {
      "title": "The Ultimate Hands-On Lightning Web Component Development",
      "url": "https://www.udemy.com/course/lightning-web-component-development/",
      "bio": "Hands-on mastery of LWC with code examples and real-world projects to create high-performance Salesforce applications.",
      "objectives": [
        "What is Lightning Web Component framework?",
        "LWC Fundamentals",
        "Javascript Fundamentals (including ES6 features)",
        "Integration in Lightning Web Components",
        "Reusability of LWC Components",
        "Styling technique in LWC",
        "SLDS - Salesforce Lightning Design System",
        "Third Party Libraries in LWC",
        "Lightning Navigation Service",
        "Lightning Messaging Service",
        "Calling Salesforce Apex in LWC",
        "LWC and Aura Interoperability",
        "Rent A Car Project Built with LWC",
        "Over 15 Projects",
        "LWC Crash Course (Under 100 Min)",
        "Testing LWC",
        "Lightning Quick Action and Lightning Tab"
      ],
      "course_content": {
        "Introduction And Getting Started": [
          "Course Overview",
          "About Your Author",
          "Introduction to LWC",
          "Important - How to Get Most Out of This Course",
          "Important - A Note From Author"
        ],
        "Javascript Fundamentals - Update 2021": [
          "What is Javascript",
          "Adding Console Statements",
          "Adding Comments in JS",
          "Declaring Variables",
          "Datatypes",
          "String Functions",
          "Arrays",
          "Objects",
          "String Concatenation",
          "Functions in JS",
          "Operators in JS",
          "Compound Operator",
          "Comparison Operator",
          "Arithmetic Operator",
          "Conditional Statement - If Else",
          "Conditional Statement - Ternary Operator",
          "Conditional Statement - Switch Case",
          "Loops in JS",
          "All Type Of For Loops in JS",
          "Array Functions - Map & Filter",
          "ES6 Spread Syntax",
          "JSON Functions",
          "OOPS in JS - Function Constructor",
          "OOPS in JS - ES6 Classes",
          "Working with DOM"
        ],
        "Setup LWC Development Environment": [
          "Set Up Development Environment",
          "Create Developer Org and Setup Dev Hub",
          "Create Scratch Org",
          "Explore Salesforce CLI Commands"
        ],
        "LWC Fundamentals": [
          "Two Paths From Here",
          "Component Bundle",
          "Hello World Component",
          "Data Binding",
          "Applying CSS",
          "Conditional Rendering",
          "Looping or Iteration",
          "Project - Simple Calculator - Part 1",
          "Project - Simple Calculator - Part 2",
          "Bonus - Component Library Overview"
        ],
        "Javascript Properties": [
          "New Updates",
          "Legacy - Private Properties - Non Reactive",
          "Private Properties - Reactive",
          "Spring'20 Update - All Properties Are Reactive",
          "Spring'20 Update - When To Use Track Decorator",
          "Getter Properties",
          "Public Properties",
          "Public Boolean Properties"
        ],
        "LWC Local Development": [
          "LWC Local Development"
        ],
        "Component Lifecycle & Composition": [
          "Using Slots",
          "Public Methods",
          "Shadow DOM",
          "Component Lifecycle"
        ],
        "Component Communication Using Events": [
          "Dispatching And Handling Events",
          "Communication Between Independent Components",
          "Share Javascript Code"
        ],
        "Access Salesforce Data": [
          "Working With Salesforce Data - An Overview",
          "Lightning Data Service - Create Record",
          "Lightning Data Service - View Record",
          "LDS - RecordViewForm and RecordEditForm",
          "LDS - RecordForm Base Component",
          "Call Apex Method Using Wire Adapter",
          "Call Apex Method Imperatively"
        ],
        "Navigation Service and Other Features": [
          "Display A Toast Notification",
          "Get Record Id and Object Name From Framework",
          "Meta File Configurations",
          "Lightning Navigation Service Overview",
          "Examples of Lightning Navigation Service",
          "Using 3rd Party Libraries"
        ]
      },
      "requirements": [
        "Basic understanding of Salesforce Apex and SOQL is preferred"
      ],
      "description": "Learn to build modern, high-performance Salesforce applications using the Lightning Web Component (LWC) framework! This hands-on course is designed to take you from the basics to advanced concepts, through practical, code-by-code examples and real-world projects ensuring you become proficient in LWC development. Whether you’re preparing for a job interview, a new project, or simply want to expand your Salesforce expertise, this course has everything you need.\n\n\nWhat You’ll Learn:\nLWC vs Aura Component Framework:  Understand the significance and power of LWC\nLWC Fundamentals: Gain a solid understanding of the core concepts of Lightning Web Components and their significance in the Salesforce ecosystem.\nComplete JavaScript Tutorials: \"Its important to have Javascript knowledge to master LWC\".  We know this, and has included a complete section to help you master JavaScript, including ES6 features and fundamentals, to build dynamic and interactive LWC applications.\nLocal Development: Learn how to develop and test your components locally using the Local Development Server.\nSalesforce DX (SFDX) Basics: Explore the essentials of SFDX, including push, pull, retrieving, and deploying your code.\nBase Lightning Components: Understand and utilize base Lightning components to enhance your LWC applications.\nLooping and Conditional Rendering: Master the use of loops and conditional rendering to create dynamic components in LWC.\nComponent Lifecycle: Dive deep into the LWC component lifecycle and understand how it affects your applications.\nStyling LWC Components with CSS: Learn how to effectively style your components using CSS to create visually appealing applications.\nSalesforce Lightning Design System (SLDS): SLDS is the Salesforce design system that works hand in hand with LWC.\nComponent Communication: Explore various methods of component communication, including custom events, Lightning Messaging Service, PubSub module, and properties.\nCalling Salesforce Apex from LWC: Learn how to use the Wire Service, REST callouts, and imperative calls to interact with Apex methods from LWC.\nIntegration in LWC: Discover how to make dynamic callouts, parse responses, and seamlessly integrate LWC with Salesforce data.\nNavigation Service in LWC: Understand how to navigate between components and pages within your LWC applications.\nAura and LWC Interoperability: Learn how to integrate Aura and Lightning Web Components within the same application.\nTesting Lightning Web Components: Master the best practices for testing and debugging LWC to ensure robust and reliable applications.\nLWC Crash Course: Short on time? Preparing for a job interview? Our 100-minute LWC Crash Course video covers all the essentials, allowing you to grasp the fundamentals quickly.\n\n\nSpecial Features:\nLWC Crash Course: Short on time? Our 100-minute LWC Crash Course video covers all the essentials, helping you grasp the fundamentals quickly and prepare for your next job interviews.\nContinuous Updates: Stay current with new features and updated tutorials to keep your skills sharp and relevant.\nSLDS Crash Course: Master Salesforce Lightning Design System\nJavascript Course: Get that Salesforce Javascript Developer Certification as the course has everything you need to prepare\n\n\nWhy Enroll?\nCareer Advancement: LWC is a powerful, modern framework that's in high demand. Adding LWC development to your skillset can make you a standout candidate in the Salesforce job market.\nHands-On Learning: This course is packed with real-world examples, projects, and exercises designed to give you practical experience.\nAll Skill Levels Welcome: Whether you're new to web development or an experienced developer, this course starts from the basics and progresses to advanced topics, making it perfect for learners at any stage.\nWho Should Take This Course?\nSalesforce Developers and Administrators: Looking to master the latest Salesforce technology.\nWeb Developers: Seeking to expand their skillset by learning a cutting-edge framework.\nJob Seekers: Preparing for Salesforce-related interviews and looking to add LWC expertise to their resume.\nLWC is still new in the market and learning LWC can make you a Salesforce gem and can give your resume another dimension.\nThe course can be very helpful for Salesforce Javascript Developer Certification aspirants as well, as it covers all fundamentals of javascript.\n\n\nThis course is offered by SFDCFacts Academy, renowned for top-quality Salesforce content, and taught by Manish Choudhari, an Amazon Senior Software Engineer and ex-Google, ex-Salesforce professional. With over 100k students worldwide and multiple \"Bestseller\" and \"Highest Rated\" courses on Udemy, you're in expert hands!",
      "target_audience": [
        "Salesforce Professionals",
        "UI and UX developers",
        "Experienced Professionals",
        "Salesforce Developers and Admins",
        "Students and Fresh Graduates"
      ]
    },
    {
      "title": "Web Development Professional Certification",
      "url": "https://www.udemy.com/course/web-development-assessment/",
      "bio": "Web Development Certification and preparing for certification at other providers",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to Web Development Assessment\nThat assessment helps to employees and companies in internal certification procedures.\nImportant: Its not a course with theory, its exam for certification / assessment\nUdemy doesn't provide certificates for exam type of courses yet.\n\n\nCourse provided by MTF Institute of Management, Technology and Finance\nMTF is the global educational and research institute with HQ at Lisbon, Portugal, focused on business & professional hybrid (on-campus and online) education at areas: Business & Administration, Science & Technology, Banking & Finance.\nMTF R&D center focused on research activities at areas: Artificial Intelligence, Machine Learning, Data Science, Big Data, WEB3, Blockchain, Cryptocurrency & Digital Assets, Metaverses, Digital Transformation, Fintech, Electronic Commerce, Internet of Things.\nMTF is the official partner of: IBM, Intel, Microsoft, member of the Portuguese Chamber of Commerce and Industry.\nMTF is present in 208 countries and has been chosen by more than 380,000 students.\n\n\nAssessment Description:\nThe Web Development assessment is a crucial tool for evaluating the skills and knowledge of employees in the field of web development. This assessment consists of 30 questions that cover the basics of HTML, CSS, and JavaScript, which are the three main languages used to develop websites. The assessment is designed to test the understanding of these languages, as well as their practical application.\n\n\nWeb development assessment is essential for both employees and companies. For employees, it is a means of assessing their current skill level and identifying areas where they need improvement. This assessment can help employees to enhance their skills and knowledge, leading to more effective and efficient web development work.\n\nFor companies, web development assessment is crucial for ensuring that they hire competent and knowledgeable web developers. It can help to identify the strengths and weaknesses of potential employees, allowing the company to make informed decisions about who to hire. Furthermore, regular assessments can ensure that current employees maintain their skills and stay up-to-date with the latest developments in web development.\n\n\nWeb development is a critical skill for building a successful career in the digital age. With the increasing importance of online presence for businesses, the demand for skilled web developers is on the rise. Web developers are responsible for designing and creating websites that are visually appealing, user-friendly, and optimized for search engines. They also need to ensure that the website is secure and accessible to people with disabilities.\n\nBuilding a career in web development requires a solid understanding of HTML, CSS, and JavaScript, as well as the ability to work with other web development tools and technologies. Web development assessments can help aspiring developers to identify areas where they need to improve their skills and knowledge, and to stay up-to-date with the latest trends and best practices in web development.\n\nLinked topics:\nWeb Development\nHTML\nCSS\nJava Script\nDevelopment",
      "target_audience": [
        "For anybody who want to get certification at Web development or prepare to exams at other certification and learning providers"
      ]
    },
    {
      "title": "Advanced React and Redux",
      "url": "https://www.udemy.com/course/react-redux-tutorial/",
      "bio": "Walkthroughs on advanced React v16.6.3 and Redux v4.0.0 - Authentication, Testing, Middlewares, HOC's, and Deployment",
      "objectives": [
        "Build a scaleable API with authentication using Express, Mongo, and Passport",
        "Learn the differences between cookie-based and token-based authentication",
        "Figure out what a Higher Order Component and how to use it to write dramatically less code",
        "Write Redux middleware from scratch to uncover what is happening behind the scenes with Redux",
        "Set up your own testing environment with Jest and Enzyme",
        "Realize the power of building composable components"
      ],
      "course_content": {
        "Welcome! Let's Get Started!": [
          "Course Resources",
          "Join Our Community!"
        ],
        "Testing": [
          "Required Boilerplate - DO NOT SKIP",
          "Project Generation",
          "Our First Test",
          "Introduction to Jest",
          "App Overview",
          "Installing Dependencies",
          "React and Redux Design",
          "What Do We Test?",
          "Starting from Scratch",
          "Rendering the App",
          "Showing Components in the App",
          "Valid Test File Names",
          "Test Structure",
          "Tricking React with JSDOM",
          "Verifying Component Existence",
          "Test Expectations",
          "Limiting Test Knowledge",
          "Enzyme Setup",
          "Enzyme Renderers",
          "Expectations for Component Instances",
          "Exercise Time!",
          "Expecting the Comment List",
          "Absolute Path Imports",
          "Code Reuse with BeforeEach",
          "Comment Box Component",
          "TextArea Implementation",
          "CommentBox Test File",
          "Asserting Element Existence",
          "AfterEach Statements",
          "Simulating Change Events",
          "Providing Fake Events",
          "Forcing Component Updates",
          "Retrieving Prop Values",
          "Form Submit Exercise",
          "Exercise Solution",
          "Describe Statements",
          "Redux Setup",
          "The Provider Tag",
          "The SaveComment Action Creator",
          "Bonding React with Redux",
          "Redux Test Errors",
          "Adding a Root Component",
          "Testing Reducers",
          "Handling Unknown Types",
          "Testing Action Creators",
          "Comment List Wireup",
          "Getting Data Into Redux",
          "Redux Initial State",
          "Cheerio Queries",
          "One More Feature",
          "Fetching a Remote Resource",
          "Parsing Comment List",
          "Integration Tests",
          "Integration Tests in Action",
          "Fixing a Broken Test",
          "Simulating Button Clicks",
          "Why the Failure?",
          "Faking Requests with Moxios",
          "The Reason for Failure",
          "Introducing a Pause",
          "Moxios's Wait Function",
          "App Wrapup"
        ],
        "Higher Order Components": [
          "An Introduction to Higher Order Components",
          "Connect - A Higher Order Component",
          "App Overview",
          "Adding React Router",
          "Adding Routes",
          "Auth Reducer",
          "Rendering a Header",
          "Wiring Up State",
          "Changing Auth State",
          "Steps for Building a HOC",
          "Forced Navigation with React Router",
          "Creating the HOC",
          "Placing Reusable Logic",
          "Passing Through Props"
        ],
        "MIddlewares with Redux": [
          "Introduction to Middlewares",
          "The Purpose of Redux Promise",
          "How Async Middlewares Work",
          "Crazy Middleware Syntax",
          "Forwarding Actions",
          "Waiting for Promise Resolution",
          "Observing the Middleware",
          "State Validation Middleware",
          "JSON Schema",
          "Generating JSON Schema",
          "Middleware Creation",
          "Emitting Warnings"
        ],
        "Server Setup - Authentication": [
          "Introduction to Authentication",
          "Cookies vs Tokens",
          "Scalable Architecture",
          "Server Setup",
          "More Server Setup",
          "Express Middleware",
          "Express Route Handler",
          "Mongoose Models",
          "MongoDB Setup",
          "Inspecting the Database",
          "Authentication Controller",
          "Searching for Users",
          "Creating User Records",
          "Encrypting Passwords with Bcrypt",
          "Salting a Password",
          "JWT Overview",
          "Creating a JWT",
          "Installing Passport",
          "Passport Strategies",
          "Using Strategies with Passport",
          "Making an Authenticated Request",
          "Signing in with Local Strategy",
          "Purpose of Local Strategy",
          "Bcrypt Full Circle",
          "Protecting Signin Route",
          "Signing Users In",
          "Server Review"
        ],
        "Client Side Auth": [
          "Required Boilerplate - DO NOT SKIP",
          "Client Overview",
          "Lib Installs",
          "The App Component",
          "Creating the Header",
          "Wiring Up React Router",
          "Scaffolding the Signup Form",
          "Including Redux",
          "ReduxForm for Signup",
          "Handling Form Submission",
          "Wiring Up Middleware",
          "Basics of Redux Thunk",
          "Calling the API",
          "Code Cleanup with Compose",
          "CORS in a Nutshell",
          "Solution to CORS Errors",
          "Dispatching Actions",
          "Displaying Auth Errors",
          "Redirect on Signup",
          "Feature Component",
          "The Require Auth HOC",
          "Reference - HOC Code",
          "Persisting Login State",
          "Signing Out a User",
          "Automatic Sign Out",
          "The Signin Component",
          "The Signin Action Creator",
          "Updating the Header",
          "Header Styling",
          "Auth Wrapup"
        ],
        "Important - OLD VERSION OF COURSE - React v14": [
          "Note on the Following Lectures",
          "Note",
          "Project Setup",
          "A First Spec",
          "Core Testing - Describe, It, Expect",
          "Purpose of Describe, It, and Expect",
          "Test Reporting",
          "Test Structure",
          "Feature Mockups",
          "Test Structure Setup",
          "Comment Box Tests",
          "Testing Class Names",
          "Using beforeEach to Condense Tests",
          "Expecting Child Elements",
          "Simulating Events",
          "Testing Controlled Components",
          "Form Submit Event",
          "Stub Comment List",
          "Expectations on Content",
          "Assertions with Lists",
          "Testing Action Creators",
          "Action Creator Shortcuts",
          "TDD Comments Reducer",
          "Spec Failures After Code Change",
          "Purpose of Chai and Mocha",
          "App Review",
          "Test Helper From Scratch",
          "JSDom Setup",
          "More JSDom Setup",
          "TestUtils Library",
          "Defining RenderComponent",
          "Finishing RenderComponent Helper",
          "Simulate Helper",
          "Test Helper Review",
          "What is a Higher Order Component?",
          "Connect and Provider",
          "Authentication HOC Overview",
          "Header Setup",
          "React Router Setup",
          "Authentication Reducer",
          "Action Creator Hookup",
          "Authentication Higher Order Component",
          "HOC Scaffold Code",
          "Nesting Higher Order Components",
          "Accessing React Router on Context",
          "Class Level Properties",
          "Handling HOC Edge Cases",
          "Higher Order Components Review",
          "Middleware Overview",
          "App Building Plan",
          "Users Reducer",
          "Static Users Action Creator",
          "Rendering a List of Users",
          "CSS Cleanup",
          "Pains Without Middleware",
          "Middleware Stack",
          "Middleware Internals",
          "Handling Unrelated Actions",
          "Handling Promises",
          "Middleware Review",
          "Client Setup",
          "App Architecture",
          "Component and State Design",
          "Header Component",
          "Scaffolding the Signin Form",
          "Adding Signin Form",
          "Action Creator with Many Responsibilities",
          "Introducing Redux Thunk",
          "Signin Action Creator",
          "CORS In a Nutshell",
          "Serverside Solution for CORS",
          "Programmatic Navigation",
          "Updating Auth State",
          "Breather and Review",
          "LocalStorage and JWT",
          "Auth Error Messaging",
          "Displaying Errors",
          "Header Logic",
          "Signout Component",
          "Signout Action Creator",
          "Signup Component",
          "Signup Form Scaffolding",
          "Redux Form Validation",
          "Implementing Validation Logic",
          "More On Validation",
          "Signup Action Creator",
          "Finish Up Signup",
          "Securing Individual Routes",
          "Root IndexRoute",
          "Automatically Authenticating Users",
          "Making Authenticated API Requests",
          "Handling Data from Authenticated Requests",
          "Authentication Wrapup"
        ],
        "Extras": [
          "Bonus!"
        ]
      },
      "requirements": [
        "Solid understanding of React",
        "Intermediate understanding of Redux; you should have knowledge of reducers, actions, and action creators"
      ],
      "description": "Knowledge of React + Redux is 100% required! If you are familiar with reducers and action creators you will be fine.\n\nThis is the tutorial you've been looking for to take your React and Redux skills to the next level.\nAuthentication with Express/Mongo?  Yes!  Middleware/Higher Order Components? We got it.  Testing with Mocha/Chai?  It's here!\nThis course wastes no time diving right into interesting topics, and teaches you the core knowledge you need to deeply understand and build React components and structure applications with Redux.\n\nMastering React and Redux can get you a position in web development or help you build that personal project you've been dreaming of. It's a skill that will put you more in demand in the modern web development industry, especially with the release of Redux and ReactNative.\nThere are dozens of great tutorials online for React and Redux, but none of them teach the challenging, core features of these two fantastic libraries.  I created this course to push you beyond \"just getting started.\"\nLearn how to thoroughly test React and Redux code, including tests for action creators and reducers\nGet familiar with Higher Order Components.  Don't know what they are?  No problem, you have been using them without even knowing it!\nRewrite a popular Redux Middleware from scratch to handle asynchronous actions\nBecome a master of the trickiest topic in Javascript: authentication.  You will write a server with enterprise-grade authentication from scratch that can scale to hundreds of thousands of users.  No shortcuts, no dummy data.\nI have built the course that I would have wanted to take when I was learning React and Redux.  A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Programmers with experience on React and Redux",
        "NOT for programmers with no previous React/Redux experience!"
      ]
    },
    {
      "title": "Complete Oracle ADF 12c Course for Beginners (step-by-step)",
      "url": "https://www.udemy.com/course/oracle-adf-12c-for-beginner-step-by-step/",
      "bio": "Take the first step to Oracle Fusion Middleware World with Latest Version of ADF 12.2.1.3.0",
      "objectives": [
        "By end of this course you will be able to develop a complete web application using Oracle ADF 12c by yourself",
        "Secure your application using ADF security and Custom Security",
        "Use ADF Visualization Components",
        "Styling your ADF application using CSS",
        "Working in jsf pages and ADF Taskflows",
        "Learn how to create and configure Entity Objects, View Objects and Application Module",
        "Learn how to create Associations, ViewLinks, View Criteria and List of Values (LOV)",
        "Learn how to write java code for customization in Entity Object, View Object, Application Module and Backbeans",
        "Working with ADF faces UI components",
        "Creating data source in weblogic and deploying ADF application to the weblogic"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to ADF Course",
          "What Is ADF and JDeveloper?",
          "ADF Demo Application",
          "Download and Install JDeveloper 12c",
          "Introduction to JDeveloper"
        ],
        "MVC Design Pattern": [
          "What is MVC Design Pattern",
          "MVC in ADF",
          "Create Quick ADF Application to Explain MVC in ADF",
          "Implement MVC in ADF practically in JDeveloper"
        ],
        "ADF Business Components (Model Layer)": [
          "ADF Course Resources",
          "Download and Install Oracle Database",
          "HR Database schema",
          "Connect JDeveloper with Database",
          "ADF Model Entity Object (EO)",
          "Entity Object EO (cont.)",
          "ADF Model View Object (VO)",
          "View Object VO (cont.)",
          "View Object VO (cont.)",
          "View Object VO (cont.)",
          "View Object VO (cont.)",
          "ADF Model Application Module (AM)",
          "Association and View Link"
        ],
        "Oracle ADF View Controller": [
          "Create JSF Page",
          "Navigation Between JSF Pages",
          "ADF Task flows",
          "Bounded Task Flow",
          "Bounded Task Flow (cont.)",
          "ADF Page Template",
          "Create JSF Page Use Page Template",
          "ADF Faces Components (UI components)",
          "ADF Faces Components (cont.)",
          "ADF Faces Components (cont.)",
          "ADF Faces Components (cont.)",
          "ADF Faces Components (cont.)",
          "ADF Faces Components (cont.)",
          "ADF Faces Components (cont.)",
          "Data Control and Page Definition",
          "Data Control and Page Definition (cont.)",
          "Partial Page refresh (Ajax in ADF)",
          "Use Skins and CSS in ADF Application",
          "ADF Security",
          "ADF Security (cont.)"
        ],
        "Write Java Code in Model and View Layer": [
          "Write Java Code in Entity Object",
          "Write Java Code in Entity Object (cont.)",
          "Write Java Code in Entity Object (cont.)",
          "Write Java Code in View Object",
          "Write Java Code in View Object (cont.)",
          "Write Java Code in Application Module",
          "Write Java Code in Application Module (cont.)",
          "Write Java Code in View Layer",
          "Write Java Code in View Layer (cont.)",
          "Write Java Code in View Layer (cont.)",
          "Write Java Code in View Layer (cont.)",
          "Write Java Code in View Layer (cont.)",
          "Write Java Code in View Layer (cont.)"
        ],
        "Create a Complete ADF Application": [
          "School Application Overview",
          "Creating Database for School Application",
          "Create Model Layer for the Application",
          "Entity Object Configurations",
          "Entity Object Configurations (cont.)",
          "Entity Object Configurations (cont.)",
          "Entity Object Configurations (cont.)",
          "Create View Links Between View Objects",
          "Create Static View Objects",
          "Create List of Values (LOVs)",
          "Create View Criteria",
          "Application Module Configurations",
          "Create Page Template for School Application",
          "Create Page Template for School Application (cont.)",
          "Create School Application JSF Pages",
          "Create JSF Pages and Define Navigation between Pages",
          "Developing School Application Lookups Pages",
          "Developing School Application Lookups Pages (cont.)",
          "Developing School Application Lookups Pages (cont.)",
          "Developing School Application Lookups Pages (cont.)",
          "Developing School Application Search Pages",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Search Pages (cont.)",
          "Developing School Application Transaction Pages",
          "Developing School Application Transaction Pages (cont.)",
          "Developing School Application Transaction Pages (cont.)",
          "Developing School Application Transaction Pages (cont.)",
          "Developing School Application Dashboard",
          "Developing School Application Dashboard (cont.)",
          "Developing Dashboard Graphs",
          "Developing Dashboard Statistics",
          "Developing Dashboard Statistics (cont.)",
          "Add Security to School Application",
          "Add Security to School Application (cont.)",
          "Developing School Application Login Page",
          "Developing School Application Login Page (cont.)",
          "Developing School Application Login Page (cont.)",
          "Finalize School Application Login Page and Logout",
          "Deploying ADF Application in Weblogic Server",
          "The Next Step After Learning ADF"
        ]
      },
      "requirements": [
        "You should have a basic knowledge of java programming language"
      ],
      "description": "This course will target a beginner developer who likes to learn ADF 12c to build a complete web application. This course will cover all ADF components from the Model and View layer. By end of this course we will develop a complete ADF application together (step by step) and during this application I will show you how you can secure your ADF Application using custom security and I will give you an idea about data visualization (Graphs) and I will show you how you can deploy ADF application. By the end of this course, you should be able to develop a complete ADF application by yourself.",
      "target_audience": [
        "Anyone would like to be a developer and looking for a tool to develop web applications"
      ]
    },
    {
      "title": "React and Typescript: Build a Portfolio Project",
      "url": "https://www.udemy.com/course/react-and-typescript-build-a-portfolio-project/",
      "bio": "Expand your portfolio of projects by building a complex app with the latest web technologies.",
      "objectives": [
        "Build a portfolio-ready project with React and Typescript",
        "Integrate React and Redux together with Typescript",
        "Simplify state updates with the fabulous Immer library",
        "See the step-by-step process of designing and assembling an advanced project",
        "Manage a project using a package-based architecture",
        "Automate your deployment with the popular Lerna CLI",
        "Build an in-browser transpiler + bundler",
        "Assemble incredibly reusable React components",
        "Use Redux middlewares to handle complicated business logic flows",
        "Use Web Assembly to increase the performance of your app"
      ],
      "course_content": {
        "React with Typescript": [
          "How to Get Help",
          "Join Our Community!",
          "Course Resources",
          "Be Sure to Watch this Video!",
          "Required React App Boilerplate",
          "File Extensions and Starting Up React"
        ],
        "Types Around Props and State": [
          "Changes with TypeScript",
          "The Big Difference with Props",
          "Explicit Component Type Annotations",
          "Property 'children' does not exist",
          "Annotations with Children",
          "State with TypeScript",
          "Type Inference with State",
          "Quick Finish to the Example",
          "More on State",
          "Type Unions in State"
        ],
        "Types Around Events and Refs": [
          "Inline Event Handlers",
          "Typing Standalone Event Handlers",
          "Handling Drag Events Too!",
          "TypeScript with Class Components",
          "Applying Types to Refs",
          "More on Refs"
        ],
        "Typescript with Redux": [
          "App Overview",
          "Required React App Boilerplate",
          "Redux Store Design",
          "Reducer Setup",
          "Annotating the Return Type",
          "Typing an Action",
          "Separate Interfaces for Actions",
          "Applying Action Interfaces",
          "Adding an Action Type Enum",
          "A Better Way to Organize Code",
          "Small Update for Try / Catch Block",
          "Adding Action Creators",
          "Adding Request Logic",
          "Applying Typings to Dispatch",
          "createStore Strikethrough in Code Editor",
          "Setting Up Exports",
          "Wiring Up to React",
          "Oops... Initial State!",
          "Reminder on Event Types",
          "TypeScript Error When Dispatching Action",
          "Calling an Action Creator",
          "Binding Action Creators",
          "Selecting State",
          "Awkward Typings Around React-Redux",
          "Creating a Typed Selector",
          "Consuming Store State",
          "Quick Wrapup"
        ],
        "The Big App - Here's What We're Building!": [
          "App Overview",
          "Three Big Challenges"
        ],
        "Code Transpiling in the Browser": [
          "Transpiling Options",
          "Remote Transpiling",
          "Module Systems",
          "Updated Install Command and Versions for Webpack",
          "Behind the Scenes with Webpack",
          "Webpack with ES Modules",
          "One Small Change",
          "Options for Bundling",
          "So Which Approach?",
          "A Webpack Replacement"
        ],
        "Implementing In-Browser Bundling": [
          "A Demo App",
          "Required React App Boilerplate",
          "Project Setup",
          "Basic Form Elements",
          "Understanding ESBuild",
          "Initializing ESBuild",
          "Using Refs for Arbitrary Values",
          "Transpiling Works!",
          "Troubles with Bundling in the Browser",
          "Issues with NPM",
          "Solution with Unpkg",
          "Demo ESBuild Plugin",
          "ESBuild Can Bundle!",
          "Deep Dive on Bundling",
          "Filters and Namespaces",
          "Adding a Tiny Test Package"
        ],
        "Dynamic Fetching and Loading of NPM Modules": [
          "Dynamically Fetching Modules",
          "Generating the Unpkg URL",
          "Issues with Multi-File Packages",
          "Solving Relative Paths",
          "Using the URL Constructor",
          "Failing Nested Requires",
          "Resolving Nested Paths",
          "It Works!",
          "Defines During Bundling",
          "Bonus! Package Versioning"
        ],
        "Caching For Big Performance Gains": [
          "Crazy Numbers of Requests",
          "Implementing a Caching Layer",
          "Caching with Key-Value Pairs",
          "Fixing a TypeScript Error",
          "Bundling User Input",
          "Breaking Up Resolve Logic With Filters",
          "Refactoring to Multiple Plugins",
          "Loading CSS Files",
          "Configuring the Correct Loader",
          "Small Shortcoming with ESBuild",
          "Tricking ESBuild's CSS Handling",
          "Escaping CSS Snippets",
          "Separate Load Filters",
          "Extracting Common Caching Logic",
          "A Better Way of Loading WASM"
        ],
        "Safely Handling Untrusted Code Execution": [
          "Executing User Code",
          "Big Issues with Code Execution",
          "How Do Others Solve This?",
          "Displaying IFrames",
          "Different Execution Context",
          "Crossing Context",
          "Sandboxing an IFrame",
          "Breaking Access with Different Domains",
          "How Do IFrames Fix Anything?",
          "The Full Flow - How CodePen and CodeSandbox Work",
          "Do We Need Separation?",
          "Middle Ground Approach",
          "IFrames with SrcDocs",
          "Execution Using SrcDoc",
          "Running Unescaped Code",
          "Indirect Communication Between Frames",
          "Passing Code to the IFrame",
          "It Works!",
          "Highlighting Errors",
          "Issues with Repeat Execution",
          "Resetting the IFrame Contents",
          "Warning Fixup"
        ]
      },
      "requirements": [
        "Basic knowledge of React and Redux",
        "No prior knowledge of Typescript required - an introduction is provided"
      ],
      "description": "You've learned React, but what now? Time to build an awesome project for your portfolio!\nProve your React knowledge to employers.\nThere are hundreds of resources online for teaching you the basics of React, but few of them go beyond the basics. You need more - something to teach you how to build a large, interesting app. Something unique, something more than another to-do list.\nThis course is your answer.\nKick off your learning experience with an introduction on how to use React and Typescript together. Not familiar with Typescript? No problem! A lightning fast - but comprehensive - tutorial is included!\nOnce you're ready with React and Typescript, you'll dive into our big project. You are going to build an interactive browser-based coding environment. It's like a Jupyter Notebook, but for Javascript, with many additional features added in. Yes, this is what you are going to build in this course! You will solve incredible challenges around bundling and transpiling code directly in the browser. This is a task normally done by running Webpack and Babel at your terminal! You will execute users' code safely in the browser just like how famous services like CodeSandBox and CodePen do. Finally, you'll deploy this project using a multi-package architecture to NPM, where your friends and employers can easily download and run your project.\nDuring this entire project, I will show you a variety of different solutions to an incredible number of problems. I will show you step-by-step how to solve each problem. You will also see many concerns around performance and security addressed.\nAt the end of the course, you will have an amazing portfolio project with excellent looks and functionality. You will understand every line of code, and be able to explain every bit to potential employers.\nHere's a partial list of the topics that will be covered in this course:\nMaster the use of React, Redux, and Typescript together\nBuild a complex and interesting app using a package-based architecture\nUnderstand the challenges of in-browser code transpiling and and processing\nSecure your app against potential security exploits\nSafely execute user-provided code directly in the browser\nRun a code editor directly in the browser - the same editor used by VSCode!\nLeverage Web Assembly to run a code bundler directly in the browser at lightning-fast speeds\nUse the internals of Redux to manually test out your business logic\nDiscover dozens of tricks to build a sleek UI\nDeploy your app to the NPM registry, where others can easily use it\nI built this course to help you apply your React skills. Sign up today and build an incredible app that will prove your knowledge.",
      "target_audience": [
        "Engineers looking to expand their project portfolio"
      ]
    },
    {
      "title": "The Complete Web Developer Course 3.0",
      "url": "https://www.udemy.com/course/the-complete-web-developer-course-2/",
      "bio": "Learn Web Development in 2024! Build apps, website, projects using HTML, CSS, Javascript, PHP, Python, MySQL & more!",
      "objectives": [
        "Build websites and webapps",
        "Build HTML-based mobile apps",
        "Get a job as a junior web developer",
        "Bid for projects on freelance websites",
        "Start your own online business",
        "Be a comfortable front-end developer",
        "Be proficient with databases and server-side languages"
      ],
      "course_content": {},
      "requirements": [
        "No pre-knowledge is required - enthusiasm is all you need!",
        "A PC or Mac is required",
        "No software is required in advance of the course (all software used in the course is free)"
      ],
      "description": "25hrs+ BRAND NEW CONTENT to get you coding in 2024!\nYou’re here because you’re ready to start building professional, career-boosting websites.\nOr maybe you’re coding already and want to take things to the next level?\n\n\nWelcome to The Complete Web Developer Course 3.0!\nThis course was designed and created by Rob Percival and is the MOST CURRENT, IN-DEPTH and UP TO DATE web development course online!\nOver 300,000 students have already learnt web development from Rob, so join them today and go from beginner to expert in just six weeks (or take it at your own pace—whatever suits you!)\nNo matter where you are in your coding journey, this web developer course is packed full of the high-quality tutorials and hands-on practical projects you need to developer as a coder.\n\n\n★★★★★ ‘It has been a wonderful experience, the concepts have been very well articulated. I am enjoying it.’ - Nicholas M.\n★★★★★ ‘Awesome course! Very detailed and love the working examples given.' - Vagabond E.\n\n\nPractical projects and code builds!\nBuild new projects across 14 course sections, and build all of the following (and more!) from scratch:\nA Portfolio Website in CSS – a landing page for you to tell the world about you! Show off all projects you’ve finished using this page.\nA Wordule Game in Python – make a game to share with friends, and prove your coding chops at the same time!\nA Twitter Client – display a twitter feed on your desktop or mobile app with this project build\nA working WordPress website – for your or your client, and with a dedicated contact form to gather user data too!\nAn App landing page with Bootstrap - exactly what it sounds like!\n\n\n★★★★★ ‘I already had a base, self-taught knowledge of HTML and CSS but this course is giving me a real grounding and better knowledge of the actual intricacies and whys and wherefores of why certain things are the way they are. very much enjoying it. - Sarah S.\n\n\nSign up to The Complete Web Developers Course 3.0 today and revolutionise your learning. Effortlessly embed the fundamentals. Refresh your groundwork. Dig deeper than ever. Start building powerful apps and cash-earning websites today—and enjoy bigger, brighter opportunities.\nI guarantee, this is THE most thorough, laser-focused and up-to-date coding course available ANYWHERE on the market\n\n\nFree Stuff!\n(4th June 2023) PLEASE NOTE: We are currently migrating all the course freebies to a different platform. Students STILL get ALL the ccourse freebies, but they are temporarily unavailable during the migration.\nAs soon as the migration is complete, we will contact all new students and tell them how and where to claim the free stuff. Thank you!\n\nNew students to the course can take advantage of all the freebies that come with the course! The hosting in particular is really popular and very well used by Codestars students!\n1 year of free unlimited hosting (worth £119.00), for every new student to the course.\nA free copy of my popular eBook ‘How to make $10,000 while learning to code'\n3x free Bootstrap themes, that you’ll know exactly how to use after you’ve finished Section 6: Bootstrap!\nLearn from the best!!\nAs well as learning directly from Rob Percival, in the second half of this course, Rob’s brought in expert instructors to share their skills and expertise with you! You’ll learn directly from master coders, industry experts and instructors who have decades of teaching experience.\n\n\n★★★★★ ‘Lots of content and a great way to get an understanding of various coding methods … I definitely recommend.'  - Ian B.\n★★★★★ ‘The course is really helping with some troubling spots I have had with my coding journey.'  - Corey H.\n\n\nHere’s what you get with The Complete Web Developer Course 3.0:\nYou’ll get access to 14 chapters that dig deep into the nitty gritty of building successful websites. Each chapter is supported with intelligent video tutorials and practical coding challenges.\nAll at your fingers tips. Right now.\nThe course starts with the fundamentals. I’ll show you insider tips to work quickly and efficiently with web technologies like HTML5, CSS3 and JavaScript.\nOnce you’ve got that locked down, you’ll master how to build your own responsive websites using more advanced techniques such as jQuery PHP, MySQL and Twitter Bootstrap.\nBy then you’ll be developing blogs and sites with WordPress, and learning smart ways to add dynamic content with using APls.\nOther course sections let you dive in to Python and build an app landing page, learn how to promote your website and boost your success by mastering SEO, and get to grips with Linux Command Line.\nIn each section test your new skills with quizzes, challenges and big project builds and – if you ever get stuck – we’re in the Q&A forum ready to answer your questions!\n\n\n★★★★★ ‘I loved this course. Rob explains everything so well. It's easy to understand. You will get the most of this course as long as you're applying immediately as you're learning. His ebook was the perfect bonus, amazing content inside. Gives you the confidence booster needed when entering this new field. Highly recommend for anyone that really wants to learn these computer languages. - Alfany R.\n\n\nOver 14 chapters you will learn:\nGetting started\nHTML\nCSS\nJavaScript\njQuery\nBootstrap\nWordPress\nPHP Coding\nMySQL Databases\nAPIs\nLinux Command Line\nPython\nSEO – search engine optimisation\nWeb Hosting 101\n\n\nDon’t waste your time learning from out-of-date books, clunky and expensive online courses and yawnsome YouTube videos again!\nWith The Complete Web Developer Course 3.0 everything’s ready to go, in one convenient, mapped-out platform.\nPlus you’ll get fast, friendly, responsive support by email, Twitter and on the Udemy forums. Or enjoy chatting with thousands of other students in my friendly forums.\n\n\n★★★★★ ‘By far this course is amazing, all thanks to the instructor, his way of teaching is very understandable and easy for most people, well that's just a typical logical guess, anyways good content!!! - Uday S.\n\n\nI guarantee that ANYONE can benefit from taking this course, whether it’s earning some extra money or changing your career altogether.\n\n\nSo what are you waiting for? Transform your world and sign up to The Complete Web Developer Course 3.0 today!\n\n\nHappy coding!",
      "target_audience": [
        "Anyone who wants to learn to code",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance"
      ]
    },
    {
      "title": "Laravel 2019, the complete guide with real world projects",
      "url": "https://www.udemy.com/course/best-laravel/",
      "bio": "Build simple to advanced web applications using the PHP's most popular web framework - Completely re-recorded for 5.8",
      "objectives": [
        "Build simple to advanced web applications using laravel",
        "Learn how to build ecommerce web applications in php/laravel",
        "Learn how to build forums, blogs, and the most popular of today's web applications",
        "Get a deep understanding of laravel"
      ],
      "course_content": {
        "[NEW] Introduction to the course": [
          "Introduction to this course",
          "****IMPORTANT*** HOW TO FOLLOW ALONG THIS COURSE",
          "How to get the most out of this course"
        ],
        "[NEW] Project one - Build a tasks manager application": [
          "Installing Laravel",
          "Introduction to views",
          "Introducing controllers",
          "Introduction to views and controllers Quiz",
          "Setting up the todos app",
          "Introducing migrations and models",
          "Documentation deep dive for migrations and models",
          "Factories and seeders",
          "The database layer quiz",
          "Model view controller",
          "Styling views with bootstrap",
          "Displaying a single todo",
          "Model View Controller Quiz",
          "Introduction to layout files",
          "Creating todos",
          "Validating data",
          "Updating todos",
          "Deleting todos",
          "Introducing route model binding",
          "Data creation and validation Quiz",
          "Flash messaging",
          "Complete Todos Exercice",
          "Completing todos"
        ],
        "[NEW] Build a complete CMS with Laravel": [
          "Scaffolding a full authentication system",
          "Categories create read update and delete",
          "Creating post and category models",
          "Creating categories",
          "Storing categories",
          "Introduction to request objects",
          "Categories description Assignment",
          "Updating categories",
          "Deleting categories",
          "Creating posts",
          "Storing posts",
          "Displaying all posts",
          "Upgrade to laravel 5.8",
          "Soft deleting models",
          "Permanently deleting models",
          "Deleting images after post deletion",
          "Adding datepicker and trix editor",
          "Updating posts",
          "Cleanup and refactor",
          "Introducing relationships",
          "Introduction to middleware",
          "Tags create, read, update and delete",
          "Many to many relationships",
          "Using a tag selector",
          "Handle delete tag and category",
          "User profiles",
          "Making administrator users",
          "Updating user profiles",
          "Installing our frontend theme",
          "The welcome page",
          "The single post page",
          "Pagination in laravel",
          "Pagination quiz",
          "Search functionality",
          "Tags and categories",
          "Query scopes",
          "Scope published",
          "Query Scopes and The Query Builder Quiz"
        ],
        "[NEW] Build a complete discussion forum": [
          "Project setup",
          "Creating discussions",
          "Storing and displaying discussions",
          "Adding replies",
          "Save replies to database",
          "Displaying replies",
          "Mark as best reply",
          "Introduction to notifications",
          "Displaying notifications",
          "Best answer notifications",
          "Introduction to queue jobs",
          "Filter discussions by channel",
          "Email verification in laravel"
        ],
        "Introduction to the course": [
          "Introduction",
          "Instructor's advice on getting the most out of this course"
        ],
        "*** Course updates ***": [
          "*** LARAVEL 5.4 UPDATE ***"
        ],
        "Project one - Complete Todo App": [
          "Installation of laravel",
          "** Optional - Better development environment and SQLite setup",
          "How the welcome view is displayed",
          "Your first look at routes and views",
          "Introducing controllers",
          "Migrations and models",
          "Model factories and seeder files",
          "Models, views, and controllers",
          "Refactoring to layout files in our views",
          "Storing data into database",
          "Deleting data from database",
          "Updating database I",
          "Updating database II",
          "Marking resources as completed",
          "Playing around with tinker",
          "Introduction to sessions in laravel"
        ],
        "Project Two - Complete Blogging Content Management System": [
          "Authentication system in laravel",
          "Creating Post and Category model",
          "One to Many relationships",
          "Creating the post view",
          "Creating the post form",
          "Route groups and middleware",
          "More about middleware",
          "Data validation",
          "Categories CRUD I",
          "Categories CRUD II",
          "Toastr notifications in laravel",
          "Displaying Categories in form",
          "Saving posts and featured image upload",
          "Mass assignment in laravel",
          "Soft deletes table setup",
          "Seeding default Administrator",
          "Setting session information",
          "Slugs",
          "Posts display view",
          "Acessors",
          "Soft deleting / Trashing posts",
          "Retrieving trashed posts",
          "Permanently deleting posts",
          "Restoring trashed posts",
          "Updating posts",
          "Cleaning up our views",
          "Many to many relationships",
          "Tags CRUD",
          "One to Many relationships - Deep dive",
          "Many to many relationships - Deep dive",
          "More on relationships",
          "Creating profiles for users",
          "Creating users",
          "Permissions",
          "Recap till now",
          "Middleware - Deep dive",
          "Editing user profile",
          "Updating user profile",
          "Clean up",
          "WYSIWYG installation: summernote",
          "Blog site settings",
          "The fun part: Blog frontend",
          "Dynamic content display I",
          "Dynamic content display II",
          "Dynamic content display III",
          "Single blog post",
          "Next and previous buttons",
          "Disqus install",
          "Category page",
          "Tags page",
          "Searching posts",
          "Setting user relationship",
          "AddThis installation into Blog",
          "Mailchimp installation",
          "Bug fetching",
          "Dashboard and closing"
        ],
        "Project Three - Advanced Forum / Discussion Application": [
          "Complete social authentication in laravel",
          "Models and relationships setup",
          "Admin seeder",
          "CRUD channels the Resource way",
          "Sharing data with all views",
          "Channels seeder file",
          "Creating discussion page",
          "Storing discussions into database",
          "Seeding data",
          "Displaying and paginating discussions",
          "Styling views a little",
          "The discussion page",
          "Creating replies",
          "Creating likes",
          "The Like status of a reply",
          "Like and unlike functionality",
          "Like count",
          "Channel discussions display",
          "Forum cleanup I",
          "Forum cleanup II",
          "Watching discussions and un-watching them",
          "Laravel notifications",
          "Sending email notifications",
          "Marking as best answers",
          "Experience points for participating users",
          "Fix - Mark as best reply",
          "Installing notifications",
          "Marking as closed and opened",
          "Implementing filters in laravel",
          "Fix - Some styling",
          "Updating a discussion",
          "Editing replies and more cleanup",
          "Administrator middleware",
          "Markdown support installation",
          "Fix - Markdown"
        ],
        "Project Four - Complete Ecommerce": [
          "Products CRUD",
          "Products factory",
          "Displaying products",
          "Customizing default Laravel paginator",
          "Product details page",
          "Cart - Add to cart",
          "Cart - Page",
          "Cart - Edit cart image item",
          "Cart - Delete items",
          "Fix - main.js file",
          "Cart - updating item quantities",
          "Cleanup - Little basket",
          "Checkout page",
          "Stripe Installation",
          "Stripe Payment",
          "E-commerce completion - Email sending"
        ]
      },
      "requirements": [
        "BASIC OBJECT ORIENTED PROGRAMMING IN PHP",
        "BASIC UNDERSTANDING OF PHP'S COMPOSER"
      ],
      "description": "This course uses a project based approach for learning. It would also be filled with specific articles to read to clearly understand a concept better, and multiple explanations of all concepts taught . We build a number of projects from simple to extra advanced, as listed below.\n\n\nTask APPLICATION: We learn the total basics of MVC FRAMEWORKS , by building a tasks application, where we can create, read, update, and mark tasks as completed. This is enough to get you started with Laravel\nCOMPLETE BLOG:   Some features of this CONTENT MANAGEMENT SYSTEM are:\nPost categories(CRUD)\nPost tags(CRUD)\nPosts (CRUD)\nTrashing posts\nMultiple user and multiple role support\nSocial media post sharing\nBlog search\nDisqus commenting system\nAnd a lot more !!!\nCOMPLETE FORUM: Some features of this FORUM SYSTEM are:\nMultiple channels\nSocial authentication\nEmail authentication\nUser admin role\nCreate discussions\nReplying to discussions\nMarking best reply to discussion\nUser experience points\nAnd a lot more !!!\nE-COMMERCE WITH STRIPE\nProducts (CRUD)\nComplete shopping cart\nCheckout with stripe\nEmail sending after purchase\nCourse is constantly updated with every new release of the laravel framework, so no matter when you get this course, you are still good to go.\nA lot more in this course . Most of all, course is made with LOVE .",
      "target_audience": [
        "This course is for beginners who have never used Laravel before.",
        "This course is for laravel developers who have never developed real world applications using laravel",
        "This course is for advanced laravel developers who want to increase their skills"
      ]
    },
    {
      "title": "Web Development w/ Google’s Go (golang) Programming Language",
      "url": "https://www.udemy.com/course/go-programming-language/",
      "bio": "Learn Web Programming from a University Professor in Computer Science with over 20 years of teaching experience.",
      "objectives": [
        "Construct server-side applications using today's best practices",
        "Acquire an outstanding foundation in the fundamentals of web programming",
        "Learn from a University Professor in Computer Science with over 20 years of experience teaching individuals of all ability levels",
        "Achieve mastery in the understanding and application of web development",
        "Understand servers, routing, restful applications, JSON, templates, and file servers",
        "Understand cookies, state, UUIDs, HTTP methods, HTTP response codes, and sessions",
        "Create web applications using only the Go programming language's standard library",
        "Create web applications without using third-party frameworks",
        "Build performant distributed applications that dynamically scale",
        "Apply cutting-edge web development practices"
      ],
      "course_content": {},
      "requirements": [
        "You must understand how to program with the Go programming language before taking this course. If you do not know how to program with Go, please take my course: \"Learn How To Code: Google's Go (golang) Programming Language\""
      ],
      "description": "This course requires you to download the Go programming language from the official website of the Go programming language. Additionally, this course may require the use of other software, such as PostgreSQL, Docker, and other tools. If you are a Udemy Business user, please check with your employer before downloading software.\nThe Go programming language was created by Google to do what Google does: performant web applications at scale.\nOpen-sourced in 2009 and reaching version one in 2012, the Go programming language is the best choice for web development programming today. Go is the most powerful, performant, and scalable programming language today for creating web applications, web API’s, microservices, and other distributed services.\nIn this course, you will gain a solid foundation in web development.\nYou will learn all of the following and more:\nArchitecture\nnetworking architecture\nthe client / server architecture\nthe request / response pattern\nthe RFC standards defined by the IETF\nthe format of requests from clients and responses from servers\nTemplates\nthe role that templates play in server-side programming\nhow to work with templates from Go’s standard library\nmodifying data structures to work well with templates\nServers\nthe relationship between TCP and HTTP\nhow to build a TCP server which responds to HTTP requests\nhow to create a TCP server which acts as an in-memory database\nhow to create a restful TCP server that handles various routes and methods\nthe difference between a web server, a servemux, a multiplexer, and a mux\nhow to use a third-party server such as julien schmidt’s router\nthe importance of HTTP methods and status codes\nThe net/http package\nstreamlining your web development with the net/http package\nthe nuances of the net/http package\nthe handler interface\nhttp.ListenAndServe\ncreating your own servemux\nusing the default servemux\nhttp.Handle & http.Handler\nhttp.Handlefunc, func(ResponseWriter, *Request), & http.HandlerFunc\nhttp.ServeContent, http.ServeFile, & http.FileServer\nhttp.StripPrefix\nhttp.NotFoundHandler\nState & Sessions\nhow to create state: UUID’s, cookies, values in URL’s, security\nhow to create sessions: login, permissions, logout\nhow to expire a session\nDeployment\nhow to purchase a domain\nhow to deploy an application to Google Cloud\nAmazon Web Services\nhow to use Amazon Web Services (AWS)\nhow to create a virtual linux machine on AWS EC2 (Elastic Cloud Compute)\nhow to use secure shell (SSH) to manage a virtual machine\nhow to use secure copy (SCP) to transfer files to a virtual machine\nwhat load balancers are and how to use them on AWS\nMySQL\nhow to use MySQL on AWS\nhow to connect a MySQL workbench to AWS\nMongoDB\nunderstanding CRUD\nhow to use MongoDB & Go\nMVC (Model View Controller) Design Pattern\nunderstanding the MVC design pattern\nusing the MVC design pattern\nDocker\nvirtual machines vs containers\nunderstanding the benefits of using Docker\nDocker images, Docker containers, and Docker registries\nimplementing Docker and Go\ndeploying Docker and Go\nGoogle Cloud\nGoogle Cloud Storage\nGoogle Cloud no-sql datastore\nGoogle Cloud memcache\nGoogle Cloud PAAS App Engine\nWeb Dev Toolkit\nAJAX\nJSON\njson.Marhsal & json.Unmarshal\njson.Encode & json.Decode\nHash message authentication code (HMAC)\nBase64 encoding\nWeb storage\nContext\nTLS & HTTPS\nJSON with Go using Tags\nBy the end of this course, you will have mastered the fundamentals of web development.\nMy name is Todd McLeod. I am tenured faculty in Computer Information Technology at Fresno City College and adjunct faculty in Computer Science at California State University Fresno. I have taught enough students over 22 years to know that by the end of this course, you will be an outstanding web developer.\nYou will have the best skills available today.\nYou will know the best way to do web development today.\nYou will have the most demanded and highest paid skills in the marketplace.\nJoin me in this outstanding course. Come learn best practices for web development.\nSign up for this course now and open doors to a great future.",
      "target_audience": [
        "This is a university level introduction to web programming course.",
        "This course is for individuals who know how to use the Go programming language.",
        "This course is perfect for programmers wanting a thorough introduction to web development using the Go programming language.",
        "This course is perfect for developers wanting to fill in gaps in their knowledge."
      ]
    },
    {
      "title": "The Complete Guide to HTML",
      "url": "https://www.udemy.com/course/the-complete-guide-to-html/",
      "bio": "Go From Beginner To HTML Master In A Single Day!",
      "objectives": [
        "Create well-structured web pages with HTML",
        "Create complex HTML forms",
        "Understand web accessibility and create accessible webpages",
        "Work with HTML tables, links, images, audio, video, and more!",
        "Use semantic elements"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course!",
          "Join The Community!",
          "Whirlwind Tour of The Web",
          "Comparing The Roles of HTML, CSS & JavaScript",
          "Installing The Course Tools",
          "A Closer Look At VSCode",
          "GET THE COURSE SLIDES"
        ],
        "HTML Basics": [
          "DOWNLOAD THIS SECTION'S DEMO CODE",
          "What is HTML?",
          "The HTML Workflow",
          "Our First Element: The Paragraph",
          "The Chrome Inspector",
          "Heading Elements",
          "VSCode Tip: Autocomplete",
          "Creating HTML Comments",
          "Tip: Mozilla Developer Network",
          "Proper Document Structure",
          "HTML Basics Exercise"
        ],
        "Text Elements": [
          "DOWNLOAD THIS SECTION'S CODE",
          "The Strong Element",
          "The 'Bring Attention To' Element",
          "The Emphasis Element",
          "The 'Idiomatic Text' Element",
          "Nesting Elements",
          "Superscript and Subscript",
          "Creating Lists",
          "Nesting Lists",
          "Inline Vs. Block Elements",
          "Text Elements Exercise"
        ],
        "Links and Images": [
          "GET THIS SECTION'S DEMO CODE",
          "Introducing Anchor Elements",
          "Creating Relative Links",
          "Linking To Page Elements",
          "Mailto and Telephone Links",
          "Creating Image Elements",
          "The Alt Attribute",
          "Links and Images Exercise"
        ],
        "Tables": [
          "GET THIS SECTION'S DEMO CODE",
          "Introducing HTML Tables",
          "Working with table, tr, and td",
          "Creating Table Headers",
          "Structuring Tables With Thead, Tbody, and Tfoot",
          "Adding Captions To Tables",
          "Working With Colspan and Rowspan",
          "Tables Exercise"
        ],
        "Forms": [
          "GET THIS SECTION'S DEMO CODE",
          "Our First Form Inputs!",
          "The Form Element",
          "Creating Buttons",
          "Email, URL & Number Inputs",
          "Creating Input Labels",
          "The Name Attribute",
          "The Required Attribute",
          "A Quick Note on Divs",
          "Forms Basics Exercise"
        ],
        "More Forms": [
          "GET THIS SECTION'S DEMO CODE",
          "Creating Text Areas",
          "Working With Checkboxes",
          "The Range (Slider) Input",
          "Making Dropdowns with Select and Options",
          "Creating Radio Button Groups",
          "Other Input Types",
          "The Disabled Attribute",
          "Fieldsets and Legends",
          "More Forms Exercise"
        ],
        "Semantic Elements and Multimedia": [
          "GET THIS SECTION'S DEMO CODE",
          "The Span Element",
          "What's The Point of A Div?",
          "Introducing Semantic Markup",
          "Exploring Semantic Elements",
          "Audio Element",
          "Creating Video Elements"
        ],
        "Next Steps": [
          "Next Steps"
        ]
      },
      "requirements": [
        "No programming experience needed"
      ],
      "description": "Every single website uses HTML - even this very course landing page! It’s an absolutely fundamental tool that every web developer uses daily, and it also happens to be very easy (and even fun) to learn. HTML is the language that provides all the content on a webpage: the text, images, links, forms, videos, and more! Learning HTML is the first step in any web development journey, and this course teaches you all the HTML you need to know.\nThis course starts at the very beginning and covers all the essential HTML elements and tags. You’ll learn how to work with text elements, links, images, audio, video, tables, forms, and semantic elements. By the end of the course you’ll be an HTML master. And the best part? The whole course can be completed in a single day!\nHands On Learning\nThis course is structured like an in-person course. You get a chance to practice what you’re learning in every section with exercises, activities, and small projects. Instead of just watching me code, you’ll write your own HTML code and websites. I’ve spent years figuring out how to create compelling online courses, and I feel this is my best one yet!\nAbout me\nI’ve taught millions of students over the last decade, both online and in-person. My specialty is helping complete beginners change careers and break into web development roles. I teach online but also lead intensive in-person coding bootcamps. My experience teaching in a classroom informs the structure and content of all my online courses.\nYou'll learn about dozens of HTML elements, including:\nparagraphs\nheadings\nsemantic elements (nav, header, footer, etc.)\nanchor elements\nimages\ntable elements\nforms\nbuttons\nlabels\ntext areas\nselects and options\naudio\nvideo",
      "target_audience": [
        "Beginners looking to learn HTML quickly and effectively"
      ]
    },
    {
      "title": "Vue JS 3: Composition API (with Pinia, Firebase 9 & Vite)",
      "url": "https://www.udemy.com/course/vue-js-3-composition-api/",
      "bio": "Already know the Options API? Switch over to the Composition API as quickly as possible! (Oh, and Pinia & Firebase 9!)",
      "objectives": [
        "How to switch over from Vue 2 & Options API to Vue 3 & Composition API",
        "Core differences between Options API & Composition API",
        "State Management using Pinia",
        "Create a real-world app from scratch with Vue 3, Composition API, Pinia & Vite",
        "Firebase 9, including Cloud Firestore, Authentication & Security Rules"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Vue 2 & Options API",
        "Basic understanding of HTML, CSS & JavaScript"
      ],
      "description": "If you’re already familiar with Vue 2 & The Options API, then this course will teach you everything you need to know to switch over to (and get started with) Vue 3 & the amazing new Composition API.\nMy name’s Danny, I’m an Indie App Developer & Creator of Fudget, the highest rated personal finance app for iOS, Android, Mac & Windows.\nAnd I’ve spent the last 12 months creating Fudget 2 - which is built on Vue 3 & The Composition API.\nIn this course you’ll start by learning the key differences between the Options API & Composition API by creating a simple Options API app & converting it to the Composition API.\nYou’ll then master all of the basics including:\nReactive data with Refs & Reactive Objects\nMethods, Computed Properties & Watchers\nLifecycle Hooks\nDirectives\nVue Router\nChild Components - including the new ways of handling props, emits & modelValue\nDynamic Components\nComposables - how to create them from scratch & how to import them from the VueUse library\nAnd you’ll learn State Management using Pinia, the incredible successor to Vuex\nAfter learning the basics, you’re gonna create a real world app called Noteballs from scratch - which has full CRUD capabilities, uses Pinia for State Management and demonstrates real-world use of all the basics you learned earlier.\n\n\nFIREBASE 9 UPDATE (JUN 2022):\nThe course has been updated with 3 hours of new content on Firebase 9, where we will:\nHook Noteballs up to a Firebase Cloud Firestore database\nAdd Authentication, so that multiple users can register, login and log out of our app\nAdd Realtime Data Sync, so that if a user adds a note on one device, they'll see the note instantly appear on another device\nAdd Firebase Security Rules to protect our users' data\nHost our finished app on Firebase Hosting so that we can share it with anyone\n\n\nAfter this course, you’ll be able to create your own Vue 3 apps based entirely on the Composition API - from scratch.\nThis course requires a basic understanding of Vue 2 & The Options API, HTML, CSS & JavaScript.\n\n\nPlease check out the preview videos & I look forward to seeing you in the course.",
      "target_audience": [
        "Developers familiar with Vue 2 & Options API who want to switch over to Vue 3 & Composition API"
      ]
    },
    {
      "title": "Create your first portfolio and host it live - for beginners",
      "url": "https://www.udemy.com/course/html-and-css-from-scratch/",
      "bio": "Design and build websites using html, css, javascript and typescript from scratch for absolute beginners.",
      "objectives": [
        "Develop static website",
        "Apply styles using css",
        "Introduction to JavaScript",
        "Getting Started With JavaScript On Visual Studio",
        "Basic Programming Concepts - Conditional Statements",
        "Basic Programming Concepts - Iterative Statements",
        "Arrays And Functions",
        "Various Events",
        "OOPs Concepts In JavaScript"
      ],
      "course_content": {},
      "requirements": [
        "Should know how to use computer"
      ],
      "description": "HTML And CSS\nDo you know! what ever you see on a website in your browser is purely html and css. If you are really interested in learning website development using any technology weather it is Asp.Net, Java or Php, the basic thing that you should know is HTML and CSS. More over if you want to develop your own static website with contact us form then this course teaches you the best.\n\nIn this course we will start with the concept why we need HTML then we dive into tags river and will cover comments, page information, document structure, links, text markup, lists, forms and images. We take start of css with why and goes for various types of styling techniques in web design and move ahead with various selectors and design a beautiful menu from scratch and finally end with designing and hosting a static web site.\nJavaScript : Do you know that all the web client frameworks are based on JavaScript?\nLike AngularJS, ReactJS, NodeJS, etc., So, now it is the time for you to not only build a strong base in JavaScript basic programming but also to understand the basics of object oriented programming using JavaScript.\nYes, the buzzword of the market that is TypeScript and AngularJS2+ are completely based on oops through the JavaScript.\nWhen it comes to the passing data from a client to the server then JSON formatted data is the hero, which again reminds the object or collection of objects of JavaScript.\nNow no way to escape from learning JavaScript, if you want to stick to web technology with any platform whether it is Microsoft or Java or PHP or anything else.\nSo, no worries! we made it damn simple for you to master it :)\nTypeScript : Yes! TypeScript is the base for Angular2+ , If you want to enter into the world of Angular 2, 4, 5, ... then the first step is to understand TypeScript.\nI am going to make it very simple for you to learn and implement it.\nTypeScript starts from the same syntax and semantics that millions of JavaScript developers know today. Use existing JavaScript code, incorporate popular JavaScript libraries, and call TypeScript code from JavaScript.\nTypeScript compiles to clean, simple JavaScript code which runs on any browser, in Node.js, or in any JavaScript engine that supports ECMAScript 3 (or newer).\nWhat are you waiting for? just join into this course and make the buzz word of the market a part of your profile.",
      "target_audience": [
        "Any one who is interested in web development."
      ]
    },
    {
      "title": "A Gentle Introduction To ASP.NET For Beginners",
      "url": "https://www.udemy.com/course/a-gentle-introduction-to-aspnet-web-forms-for-beginners/",
      "bio": "A First Step to Creating Dynamic Websites Using Web Forms , MVC , Razor Pages , Blazor , AI and more",
      "objectives": [
        "Create simple multi-page ASPNET Web Form applications incorporating a number of server controls using Visual Studio on WINDOWS machines",
        "Work with style sheets and master pages in Web Forms",
        "Create SQL server base database driven web pages that perform CRUD operation in ASPNET Web Form Applications",
        "Work with the concept of Databinding by adding databound controls to a Web Form",
        "Transition from Webforms to the MVC Core Framework",
        "Create MVC Applications that incorporate Partial Views, Layout files , Data Annotations",
        "Work with Razor Syntax ... Variables, If Statements, Loops",
        "Create simple Razor Pages (not Razor Syntax) and highlight similarities and differences between Webforms and MVC Frameworks",
        "Learn what Blazor is and why it is the future of ASPNET web development",
        "Create Simple Blazor Applications using both Blazor Server and Blazor WebAssembly Hosting models ... including WebAssembly Core Hosted",
        "Learn about Blazor Data Binding, State Management, Parameters, Routing and Navigation",
        "Create more sophisticated Blazor applications that access Data Services (API), call Javascript Functions",
        "Create Blazor Apps for online stores (Music, Pizza and more), that implement a shopping cart and a checkout feature",
        "Create Blazor Database Apps (single/multi-table) with full CRUD abilities, including Form Validations, Authentication , Authorization, Sorting and Filtering",
        "Learn how to implement Third Party Blazor Components (Radzen/Synfusion...) and how to create your own component libraries",
        "Create a variety of games in Blazor .. including Tic Tac Toe, Connect Four, Matching Game, Word Scramble and Slot Machine Game (with graphics and sound effects)",
        "Learn how to build Blazor Progressive Web Applications",
        "Learn how to implement Drag and Drop features in Blazor",
        "Create a Real Time Application Using Blazor and SignalR",
        "Create Simple Blazor Graphics and Animation Using the HTML 5 Canvas API",
        "Learn how to implement the ApexCharts Library in Blazor WebAssembly to generate interactive and responsive charts using data from a data service",
        "Build a CRUD App in Blazor Server using Entity Framework Core and SQLite.",
        "Learn how to load in and view the contents of an Excel file in Blazor",
        "Learn to create simple Blazor Hybrid (.NET MAUI) applications , extending the capabilities of .NET developers beyond the Web into desktop and mobile development",
        "Learn about the concept of Localization. The the process of customizing applications to display and operate in the culture of the user.",
        "Create simple applications that integrates Localization into Blazor WebAssembly, Server and .NET MAUI Blazor",
        "Learn about using Blazor in .NET 8 how it represents a Paradigm Shift",
        "Learn how to implement new Blazor .NET 8 features including QuickGrid,Sections, Dynamic Components and Fluent UI",
        "Learn about the latest features and enhancements to Blazor in .NET 9",
        "Learn how to Integrate the OpenAI API within Blazor Applications and Implement the .NET Smart Components - AI powered UI Controls",
        "Learn how to use Open Source Tools (Ollama) to Run Large Language Models in Blazor",
        "Learn how to perform AI Image Analysis and connect the results to a Database",
        "Learn how to perform AI Video Analysis from various sources including using a Webcam",
        "Learn how to Record Audio and convert it to Text (transcription/translation) and take Text and convert it to Speech using OpenAI's Whisper model",
        "Learn how to Scrape a Website and analyze the contents using AI in a Blazor Application",
        "Learn how to implement AI in Blazor Hybrid Applications (Windows Desktop/Android/IOS)",
        "Learn how to Generate SQL Queries via AI for use in Blazor Database Applications (Natural Language to SQL)",
        "Learn how to implement RAG (Retrieval Augmented Generation) within a simple Blazor AI application"
      ],
      "course_content": {
        "Course Information": [
          "Welcome",
          "Why ASP.NET ... Some Background",
          "What You Need",
          "What You are Going to Learn"
        ],
        "Introduction to ASP.NET": [
          "How Dynamic Web Sites Work",
          "Dynamic Web Site Development Intro Quiz",
          "Getting Started using Visual Studio...Creating a Simple Web Application",
          "HTML vs ASP.NET",
          "HTML vs ASPX Quiz",
          "Creating a Multi-Page Web Application"
        ],
        "Creating Web Forms ... A Detailed Look": [
          "ASP Server Controls Part 1",
          "ASP Server Controls Part 2",
          "Field Validators",
          "Intro to ASP.NET Server Controls Quiz",
          "Using Methods in C# ... Some Mathematical Web Applications",
          "The Calendar Server Control and Working with Dates",
          "The Concept of Postback",
          "Event and PostBack Quiz",
          "Navigating Between Pages and Passing Data To Another Page",
          "Challenge Problem #1 ... Casino Slots",
          "Challenge Problem #2 ... Currency Converter",
          "Challenge Problem #3 ... Birthday Card Maker"
        ],
        "Working with Style Sheets and Master Pages": [
          "Creating and using Style Sheets Part 1",
          "StyleSheets Intro Quiz",
          "Creating and using Style Sheets Part 2",
          "Creating and Using Master Pages",
          "Creating a Master Page using a CSS Template",
          "Challenge Problem... A Summative Assessment"
        ],
        "Database Driven Web Pages": [
          "The Concept of Data Binding ... Part 1 Creating an SQL Database",
          "The Concept of Data Binding ... Part 2 Adding Databound Controls to a Web Form",
          "The Concept of Data Binding Part 3 ... Using an Access DB",
          "Filtering Data ... Using The WHERE and ORDER BY Options",
          "Filter Data Quiz",
          "Implementing CRUD in FormView",
          "DataBinding Challenge",
          "DataBinding Recap and Extension Part 1 ... Using a DropDown List To Filter Data",
          "DataBinding Recap and Extension Part 2 ... Using a Calendar To Filter Data",
          "Working with a Relational Database",
          "Final Exam"
        ],
        "Transitioning From ASP.NET Web Forms To ASP.NET MVC Core ... An Introduction": [
          "ASP.NET MVC Core vs Web Forms",
          "What is MVC ... a Slightly Deeper Look",
          "Hello World ... Hello Raptors",
          "Creating A Controller",
          "Creating a View",
          "Creating A Model",
          "An Introduction to Razor",
          "Basic Razor Syntax",
          "Razor Variables",
          "Razor If Statements",
          "Razor Loops",
          "Controllers Revisited",
          "Controller Actions",
          "Controller Action Results",
          "Views Revisited",
          "View Discovery : Connecting Controller and View",
          "Passing Data Into Views",
          "Partial Views",
          "Introduction to Layouts",
          "Creating Layout Files",
          "Introduction to Routes",
          "Route Anatomy",
          "Models Revisited Introduction",
          "Model Binding",
          "Data Annotations",
          "Model Validations",
          "More Model Validations and Data Annotations",
          "HTML and Tag Helpers",
          "The Query String ... GET Data",
          "Cookies",
          "Introduction to Databases",
          "MVC Introductory Quiz"
        ],
        "Sample ASP.NET MVC Application": [
          "Getting Started with the Basketball Team Web Application",
          "Working with the Controller",
          "Working with the View",
          "Working with the Model",
          "Working with the SQL Server Express LocalDB",
          "A Closer Look at Controller Methods and Views for CRUD events",
          "Implementing A Search By",
          "Adding New Fields",
          "Adding Validation",
          "Examining The Details and Delete Methods ... The Wrap Up ... Project Suggestions"
        ],
        "Introduction to ASP.NET Core Razor Pages": [
          "Introduction ... Why Use",
          "Creating Your First Razor Pages Web App",
          "Add and Scaffold the Model",
          "A Deeper Look at the Scaffolded Razor Pages and the _Layout Page",
          "Working with the SQL Server Express Local Database",
          "Implementing Data Annotations and a Deeper Look at Edit",
          "Adding a Search Component",
          "Adding a New Field",
          "Adding Validation",
          "Where to go from here"
        ],
        "Introduction to Blazor": [
          "What is Blazor",
          "Hosting Models",
          "Project Structure",
          "Creating and Using ASP.NET Core Razor Components",
          "Splitting Razor Components",
          "ASP.NET WebForms vs Blazor",
          "Parameters",
          "Data Binding Part 1",
          "Data Binding Part 2",
          "Data Binding Part 3",
          "State Management",
          "Parameters Routing and Navigation a Closer Look Part 1",
          "Parameters Routing and Navigation a Closer Look Part 2",
          "Blazor Intro Quiz"
        ],
        "Sample Blazor Applications and More": [
          "Calculator",
          "To Do List",
          "Weather Forecast Part 1 ... Blazor WebAssembly",
          "Weather Forecast Part 2 ... Blazor WebAssembly",
          "Weather Forecast Part 3... Blazor Server",
          "Weather Forecast Part 4... Blazor Server",
          "TicTacToe Game Part 1",
          "TicTacToe Game Part 2",
          "TicTacToe Game Part 3",
          "TicTacToe Game Part 4",
          "TicTacToe Game Part 5",
          "Song List Database Part 1",
          "Song List Database Part 2",
          "Song List Database Part 3",
          "Song List Database Part 4",
          "Accessing Data Services that Implement the JSON:API Part 1",
          "Accessing Data Services that Implement the JSON:API Part 2",
          "Movie Search and Filter Application Part 1",
          "Movie Search and Filter Application Part 2",
          "Calling Javascript Functions in a Blazor Application Part 1",
          "Calling Javascript Functions in a Blazor Application Part 2",
          "Calling Javascript Functions in a Blazor Application Part 3",
          "Deploying a Blazor WebAssembly Application to Azure ... Blazor in the Clouds",
          "Blazor Forms and Validation Part 1 ... Revisiting Validation Techniques",
          "Blazor Forms and Validation Part 2 ... Prepping an App for Validation",
          "Blazor Forms and Validations Part 3 ... Adding Validation Components",
          "Blazor Forms and Validation Part 4 ... Some Practice",
          "Blazor Forms and Validations Part 5 ... Creating a Blazor Server App",
          "Blazor Forms and Validations Part 6 ... Implementing a Registration Form",
          "Introduction to Authentication and Authorization in Server-Side Blazor Part 1",
          "Introduction to Authentication and Authorization in Server Side Blazor Part 2",
          "Intro to Authentication and Authorization ... Customizing the Login Page Part 3",
          "Facebook Authentication and Authorization in a Server-Side Blazor App",
          "Adding Authentication To A Blazor App Using Auth0 Part 1",
          "Adding Authentication To A Blazor App Using Auth0 Part 2",
          "Blazor Updates in .NET 5 and Beyond ... Some Sample Applications",
          "Implementing Third Party Blazor Component Libraries",
          "Creating and Implementing Your Own Blazor Component Library",
          "Blazor ... What We Know So Far ... Summative Case Study Part 1",
          "Blazor ... What We Know So Far ... Summative Case Study Part 2",
          "Blazor ... What We Know So Far ... Summative Case Study Part 3",
          "Blazor ... What We Know So Far ... Summative Case Study Part 4",
          "Blazor ... What We Know So Far ... Summative Case Study Part 5",
          "Creating an ASP.NET Core Hosted Blazor WebAssembly Application Part 1",
          "Creating an ASP.NET Core Hosted Blazor WebAssembly Application Part 2",
          "Creating an ASP.NET Core Hosted Blazor WebAssembly Application Part 3",
          "Vaccination Registration App WebAssembly Database Version ... Part 1",
          "Vaccination Registration App WebAssembly Database Version ... Part 2",
          "Vaccination Registration App WebAssembly Database Version ... Part 3",
          "Building Progressive Web Applications With Blazor WebAssembly Part 1",
          "Building Progressive Web Applications With Blazor WebAssembly Part 2",
          "Building Progressive Web Applications With Blazor WebAssembly Part 3",
          "Building Progressive Web Applications With Blazor WebAssembly Part 4",
          "Drag and Drop in Blazor ... Building a Simple Project Tracker Part 1",
          "Drag and Drop in Blazor ... Building a Simple Project Tracker Part 2",
          "Drag and Drop in Blazor ... Building a Simple Project Tracker Part 3",
          "Authentication in Blazor WebAssembly Applications Part 1",
          "Authentication in Blazor WebAssembly Applications Part 2",
          "Creating and Working with a Relational Database in a Blazor WASM App ... Part 1",
          "Creating and Working with a Relational Database in a Blazor WASM App ... Part 2",
          "Creating and Working with a Relational Database in a Blazor WASM App ... Part 3",
          "Creating and Working with a Relational Database in a Blazor WASM App ... Part 4",
          "Creating A Real Time Application Using Blazor and SignalR",
          "Intro to Blazor Graphics and Animation Using the HTML 5 Canvas API and More Pt 1",
          "Intro to Blazor Graphics and Animation Using the HTML 5 Canvas API and More Pt 2",
          "Intro to Blazor Graphics and Animation Using the HTML 5 Canvas API and More Pt 3",
          "Intro to Blazor Graphics and Animation Using the HTML 5 Canvas API and More Pt 4",
          "Implementing the ApexCharts Library in Blazor WebAssembly",
          "Building a CRUD App in Blazor Server using Entity Framework Core and SQLite.",
          "Introduction to Blazor Hybrid Part 1",
          "Introduction to Blazor Hybrid Part 2",
          "Introduction to Blazor Hybrid Part 3",
          "Introduction to Blazor Hybrid Part 4",
          "Introduction to Blazor Hybrid Part 5",
          "Adding Blazor Components To Existing Windows Form Apps ... Blazor Everywhere!",
          "Localization in Blazor Applications Part 1 ... WebAssembly",
          "Localization in Blazor Applications Part 2 ... WebAssembly",
          "Localization in Blazor Applications Part 3 ... WebAssembly",
          "Localization in Blazor Applications Part 4 ... Server",
          "Localization in Blazor Applications Part 5 ... Hybrid (.NET MAUI Blazor)"
        ]
      },
      "requirements": [
        "You should have a basic understanding of how to create simple web pages using HTML",
        "Having some knowledge of CSS will help but it's not required",
        "You should have a basic beginners understanding of C# (STRONGLY recommended)",
        "You should have access to the Visual Studio IDE for Windows ... Community Edition Version 2022 (freely downloadable)"
      ],
      "description": "There are a number of  flavors of ASP.NET,  Web Forms (Web Sites and Web Applications),  Model-View-Controller (MVC) , Razor Pages and the newest one Blazor. This course is aimed at anyone who wants to create dynamic websites using all these models , with ASP.NET Web Forms as the starting point.\nASP.NET is the Microsoft platform for developing Web Applications. Using ASP.NET you can create e-commerce sites, data driven portals and just about anything else you can find on the internet. Best of all, you don't need to paste together a jumble of HTML and JavaScript code. Instead you can create full scale web apps by leveraging your knowledge of C# coding and a design tool like Visual Studio.\nIn recent years Microsoft has added MVC (Model View Controller) and Razor pages which offer different ways to build dynamic web pages. To some , MVC and Razor pages are cleaner and more suited to the web. To others , it's a whole lot of extra effort with no clear payoff. Either way, it's good to have a strong knowledge of all of these web application programming models before moving onto the most future forward choice   Blazor.\nWe cover all these models at a beginners level and offer a multitude of practical applications.\nOur focus will be working with Visual Studio on WINDOWS machines .  All coding examples are fully compatible with the LATEST Visual Studio Editions (As of 2025 Visual Studio Community 2022 and Visual Studio 2026) for WINDOWS .\n\nMajor Course Updates:\n\nFeb 2020 -Sept 2021\nThree new sections ( 50+ new lectures ) which focus on transitioning from Web Forms to MVC and then Core Razor Pages\n\nSept 2021- Dec 2024\nThree new sections on Blazor ... including the latest on .NET 8 and .NET 9 (110+ new lectures  and more to come!)\n... Think of this as a Course Within a Course all for one price\n\n\nSep 2025-\nNew Lectures on a variety of AI topics including :\nIntegrating the OpenAI API within Blazor Applications\nUsing Open Source Tools to Run Large Language Models in Blazor\nPerforming AI Image Analysis and connecting the results to a Database\nPerforming AI Video Analysis on various videos files sources including via Webcam\nUsing AI (Whisper model) to perform Audio to Text Transcription and Translation and Text to Speech (Audio) generation\nPerforming Web Scraping and AI Analysis and connecting the results to a Database\nImplementing  the .NET Smart Components - AI powered UI Controls\nImplementing AI in Hybrid Applications (Windows Desktop/Android/IOS)\nGenerating SQL Queries via AI for use in Blazor Database Applications (Natural Language to SQL)\nRAG (Retrieval Augmented Generation) and Blazor ... A First Look\n\n52+ Hours of Videos\n950 + downloadable demos\nSample applications specifically for the current lectures\nPLUS hundreds of supplementary demos and exercise solutions\n... and more added monthly\n\n\nHere's how I will help you to succeed:\no    Each lecture starts with a list of objectives/speaking notes\no    Every example covered in the lecture is available for download in the resources section including the objectives/speaking notes\no    Almost every lecture has a set of Practice problems with full solutions provided\no    My style of writing and teaching follows the KISS principle : Keep It Super Simple.   I try to stay away from fancy computer terminology and try to teach like am speaking to a brand new user with little to no previous knowledge on the subject matter and  I am always available for help replying most times within a day.\n\nAnd finally please do not judge a book by it's cover  don't judge the course by the title or this small description section, if you want to know exactly all the topics covered please go to:\nCOURSE CONTENT\nSections\nLectures  (press the down arrow)  This will open up literally thousands of lines of very detailed lecture descriptions leaving no doubt what is and what is not covered.",
      "target_audience": [
        "Beginner web developers/programmers who want to learn how to create simple dynamic websites with ASP NET",
        "This course is not for experienced web developers .",
        "This course acts as a stepping stone to learning more advanced ASP NET Core concepts in (MVC/Razor Pages/Blazor)"
      ]
    },
    {
      "title": "The Complete PHP Full Stack Web Developer Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-php-full-stack-web-developer-bootcamp/",
      "bio": "Learn to build websites with HTML , CSS , JAVASCRIPT , Bootstrap , PHP , MySQL , WordPress , OOP & more!",
      "objectives": [
        "Become Web Developer and Start Earning.",
        "Apply for Job as Junior Web Developer.",
        "Become Freelancer Web developer on Fiverr or UpWork.",
        "Build Website with WordPress, PHP and Laravel and Sell Online.",
        "Start your own online Business.",
        "Learn to build websites.",
        "Be proficient with databases and server-side languages with PHP and MySQL.",
        "Become a front-end and Back-end developer - Complete Full Stack Developer."
      ],
      "course_content": {},
      "requirements": [
        "No pre-knowledge is required - Interest is all you need!",
        "A PC or Mac is required",
        "No software is required in advance of the course (all software used in the course is free)"
      ],
      "description": "Join 130K+ students in the Complete Web development Bootcamp.\nThis is what you get in this course:\n12 Courses into 1 Course. (HTML, CSS, JAVASCRIPT, BOOTSTRAP, PHP, MYSQL, PHP OOP, WORDPRESS, XML, API, JSON and REST.)\n48+ hours of Training.\n6 Web Development Books.\nOnline Premium Access to Documentation.\n80+ PHP Live Projects Source Code.\nShopping Cart Project Source Code.\nWordPress Site Project with Themes.\nInterview Questions (1000+).\n30 days Money Back Guarantee (0% Risk).\n100% FREE for Lifetime Access.\n\n\nDo you want to be a Certified Web Developer?\nor\nAre you are a student and want to get a Job as Web Developer?\nor\nDo you want be Freelancer to earn an extra part time income?\nor\nYou want to improve your Web Development Skills at Work?\n\n\nIf these are your goals then this course is exactly made for you to Become PHP Full Stack Web Developer!\n\n\n48+ hours of course content with Exercises, Quiz, Assignments and Projects.\n\n\nIf you give your valuable time to this course and I will promise to help you achieve your goal.\n\n\nRIGHT AFTER THIS COURSE, YOU WILL BE:\nAble to Build websites.\nGet a job as a junior web developer.\nStart your own online business with WordPress.\nBecome Freelancer Web developer on Fiverr or UpWork.\nBe proficient with databases and server-side languages with PHP and MySQL.\nBecome a front-end and Back-end developer - Complete Full Stack Developer.\nIn less than 30 days, you'll be ready for an entry-level job as a Full Stack Web Developer.\n\n\nThis course will give you the following Skills:\nFront End Web Development:\nHTML.\nCSS.\nJAVASCRIPT.\nBOOTSTRAP.\nBack End Web Development:\nPHP.\nMYSQL.\nWORDPRESS.\nPHP OOP.\nBASICS:\nWEB BASICS.\nINTRODUCTION TO XML.\nCOMPLETE UNDERSTANDING OF JSON.\nINTRODUCTION TO REST AND API.\nSOFT SKILLS:\nINTERVIEW QUESTIONS.\nPHP RESUME.\nSTUDENT MENTORSHIP.\nPROJECTS:\nPHPKart - Complete Shopping Cart Website using HTML, CSS, JAVASCRIPT, PHP and MySQL.\nLearnWP - Blogging Website with WordPress. (Buy Domain, Web Hosting, Installing Themes and etc.)\nCERTIFICATION PROVIDED:\nGet your PHP Full Stack Developer Certification.\nVALUABLE RESOURCES:\nYou will become PHP Full Stack Web Developer: 48+ hours of course. - Worth 199 USD\nYou will be Certified PHP Full Stack Web Developer - Worth 399 USD\nComplete Source Code and Projects: PHPKart & LearnWP. - Worth 299 USD\nStudent Mentorship via Private Facebook Group. - Worth 219 USD\nPHP Projects Downloads. - Worth 129 USD\nResume and Interview Questions. - Worth 79 USD\nLifetime Documentation Site Access - Worth 29.90 USD\n30 Days Money Back Policy.\nTotal Worth: 1353 USD\nFEEDBACK FROM STUDENTS:\nAmazing, above expectations! - Adeel Nazim.\nI think , someone who wants to learn php , should start with this course.Great content , so much valuable info in this course , thank you!! - Andreas.\ngood course with lot of examples. this is the best course in PHP - Murali Krishna Nistala.\nThis course is very good introduction to PHP. Many examples and every lection has a test and a quiz. - Milan Švarc\n.Very easy to understand, lots of examples. Repeats important points in different ways making difficult concepts easier to grasp. - Laura Long.\nA well organized course, explained each and every concept in very easy way, now feeling confident while using PHP oop.- Wasim Tamboli.\nThis course is a easy to learn. and your teaching way is awesome. - Bharat Kumar.\nHe is explaining the concepts crystal clear . Very thankfull to the teacher - Ponmurali Jeyaprakasam\n.Very easy to understand and the best part is there are too many assignments for working which makes u perfect - Gokul Singh\n\n\nDo not miss the Premium Contents with this course:\n48+ hours of Full Stack Web Development Course.\nOne Course Covers - 12 Courses: HTML, CSS, JAVASCRIPT, BOOTSTRAP, PHP, MYSQL, PHP OOP, WORDPRESS, XML, API, JSON and REST.\n6 Web Development Books for FREE. (1200+ pages long) - Selling for 20 USD on Amazon\nLifetime FREE Access to Premium Bootcamp Documentation Website. - Sold monthly membership\nPHPKart and LearnWP Website Source Code. - Sold my source code for each 299 USD\nInterview Questions (1000+ questions) - Selling for 20 USD on Amazon\n30 days Money Back Guarantee (0% Risk)\n100% FREE for Lifetime Access.\n\n\nIF YOU ARE REALLY SERIOUS TO LEARN WEB DEVELOPMENT AND LOOKING FOR THE RIGHT COURSE.\nTHEN THIS IS THE BEST COURSE THAT CAN HELP YOU ACHIEVE YOUR GOAL.\nBELIEVE ME, YOU ARE JUST ONE COURSE AWAY FROM BECOMING BRILLIANT WEB DEVELOPER.",
      "target_audience": [
        "Anyone who wants to learn to code",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to build websites",
        "Anyone who wants to become financially independent",
        "Anyone who wants to start their own business or become freelance"
      ]
    },
    {
      "title": "Blazor - The Complete Guide (WASM & Server .NET Core 5)",
      "url": "https://www.udemy.com/course/blazor-the-complete-guide/",
      "bio": "Build real world resort booking website using Blazor Server, Blazor WASM and .NET 5(.NET Core) API and deploy to azure.",
      "objectives": [
        "Build real world application using Blazor Web Assembly",
        "Manage admin features using Blazor Server",
        "Build .NET 5 API from scratch",
        "Consume .NET 5 API using Blazor WASM",
        "Authentication & Authorization in Blazor Server and WASM",
        "Emails with Blazor",
        "Integrate Stripe Payments in Blazor WASM",
        "Repository Pattern and Dependency Injection",
        "Deploying .NET API, Blazor WASM & Server to Azure"
      ],
      "course_content": {},
      "requirements": [
        "3-6 months familiarity with C# and SQL",
        "Basic knowledge of .NET Core 5 (MVC & API)",
        "Basic knowledge of EF Core",
        "Visual Studio 2019",
        "SQL Server 2016+"
      ],
      "description": "For years JavaScript frameworks have dominated the front end/client side development! But things are about to change with Blazor!\nBlazor is an exciting new part of .NET Core (.NET 5) designed for building rich web user interfaces in C#. This course will help developers transition from building basic sample apps to implementing more real world concepts, design patterns, and features.\nWith that there are many questions.\nHow do you scale an existing application?\nHow do you architect a mid-large scale project?\nHow to correctly process payments?\nHow to efficiently understand Blazor and use it in real world projects?\nThis course will provide you a complete real world scenario with Blazor which will make you face many challenges and solve those issues as we proceed with the course.\nThere are other courses on Udemy, but this is the ultimate course, it covers everything there is to Blazor from Blazor Server to Blazor WASM applications which consumes .NET 5 API.\nThis course will help developers transition from building basic sample apps to implementing more real world concepts, design patterns, and features.\nSo join me in this exciting course of exploring what real world challenges are with Blazor as it evolves drastically!\nWe will be using the latest .NET 5 for this course along with Entity Framework Core and Stripe for payment processing.",
      "target_audience": [
        "Anyone who wants to learn fundamentals of Blazor Web Assembly and Server",
        "Anyone who wants to understand new file structure in Blazor (.NET 5)",
        "How to create .NET API and consume it in Blazor Application",
        "Build real world application using Blazor!"
      ]
    },
    {
      "title": "The Ultimate MySQL Crash Course",
      "url": "https://www.udemy.com/course/the-ultimate-mysql-crash-course-2021/",
      "bio": "Learn MySQL in No Time",
      "objectives": [
        "Install the easiest tool for starting with MySQL",
        "Grasp the basic concepts of MySQL",
        "How to create databases and how to manage them",
        "Learn all you need to know about constraints and how they work",
        "absorb some advanced parts like joins"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Installing Xampp"
        ],
        "Basics and First Steps": [
          "Creating and Dropping Databases",
          "Creating Tables",
          "Dropping Tables",
          "Inserting into Tables",
          "Updating and Deleting",
          "Data Types",
          "Operators"
        ],
        "Constraints and Functions": [
          "Primary Keys",
          "Foreign Keys",
          "Functions"
        ],
        "Clauses": [
          "Select and Where",
          "Order by",
          "Group by"
        ],
        "Alters": [
          "Alters"
        ],
        "Joins": [
          "Aliases",
          "Inner Joins",
          "Left and Right Joins"
        ],
        "Bonus lecture": [
          "Bonus lecture"
        ],
        "More Lectures: 2022 Update": [
          "Wild Cards pt.1",
          "Wild Cards pt.2"
        ],
        "Update: Build Complete Todolist with PHP and MySQL": [
          "Setting Up",
          "Inserting into DB",
          "Pulling the Data",
          "Deleting the Data",
          "Updating the Data"
        ]
      },
      "requirements": [
        "Any knowledge of any programming language is a plus, but it is not at all mandatory"
      ],
      "description": "In this course you are going to learn everything you need to know to get started with MySQL in probably less than two hours, so you can actually consume this piece of content in one sitting. The course is surly intensively on using the SQL command line inside the PHPmyadmin tool and that's for teaching you just how SQL works and you can write your queries, not just in the SQL command, but also inside your backend apps and that's the best way to learn SQL in my opinion. So the course is short, informative, practical, and bite-sized at the same time.\n\nTo elaborate we are going to start of course from the basics of some theoretical crucial definitions like database, queries,  tables, columns, and cells to some beginner sections parts like creating dropping and inserting into tables, data types, and operators to intermediate sections constraints primary and foreign keys functions, SQL most known clauses like (Select - Where - Group by - Order by) and alters to a touch of the advanced parts like joins and so much more. if you want to learn the basics of MySQL and start building your applications on the same day, then this course is yours. come on what are you waiting for? :)",
      "target_audience": [
        "Anyone who wants to learn MySQL"
      ]
    },
    {
      "title": "Object Oriented PHP & MVC",
      "url": "https://www.udemy.com/course/object-oriented-php-mvc/",
      "bio": "Build a custom object oriented PHP MVC framework and then build an application with it",
      "objectives": [
        "Build a custom MVC Framework from absolute scratch",
        "Build an application using your custom framework",
        "Create a custom PDO class to handle database interactions",
        "Complete user authentication using OOP & PDO",
        "Deploy your custom PHP application"
      ],
      "course_content": {
        "Course Intro & Setup": [
          "Welcome To The Course",
          "Project Files & Questions",
          "XAMPP Environment Setup"
        ],
        "Intro To OOP PHP": [
          "About This Section",
          "What Is OOP?",
          "Classes, Properties & Methods",
          "The Constructor & Destructor",
          "Access Modifiers, Getters & Setters",
          "Class Inheritance",
          "Static Methods & Properties"
        ],
        "The Framework [Part 1] - The Core": [
          "What Is MVC?",
          "Workflow Explanation",
          "Creating The Folder Structure",
          "Direct Everything Through index.php",
          "Bootstrap FIle & Core Class",
          "Loading The Controller From The URL",
          "Mapping Methods & Parameters"
        ],
        "The Framework [Part 2] - MVC Workflow": [
          "Base Controller Class",
          "Loading Views",
          "Config File & Uploader",
          "Header & Footer Includes",
          "Aside - PDO Crash Course",
          "The Database Class - Part 1",
          "The Database Class - Part 2",
          "Clean Up"
        ],
        "The App [1] - Setup & User Authentication": [
          "Initial App & Database Setup",
          "Pages, Bootstrap & Navbar",
          "Creating The Users Controller",
          "Register & Login Form Views",
          "Form Validation",
          "User Model & Email Check",
          "User Registration",
          "Custom Flash Messaging",
          "User Login",
          "User Session Data & Logout"
        ],
        "The App [2] - Posts Functionality": [
          "Posts Controller",
          "Posts Access Control",
          "Post Model & Display",
          "Add Post Form",
          "Inserting Posts",
          "Post Show Details Page",
          "Editing Posts",
          "Deleting Posts"
        ],
        "App Deployment": [
          "Deploying Our App"
        ]
      },
      "requirements": [
        "You should know basic PHP & programming concepts"
      ],
      "description": "In this course we will go step by step to build a complete custom MVC (Model View Controller) framework Called TraversyMVC using object oriented PHP. We will build something similar to Codeigniter but much much lighter. This framework is completely open source and you are free to change the name, add stuff, etc and use it as your own. This framework will include...\n\n\nA core library class to load controllers & methods from the URL (Also using .htaccess)\nA base controller class to load models and views\nA custom database library using PDO for all models to interact with the database using prepared statements\nNot only will we create the framework but we will build an application on top of it called SharePosts which will be somewhat of a social network to share posts. This application will include..\n\n\nFull user authentication\nAccess control for posts\nServer side form validation\nBootstrap 4 UI\nPosts CRUD\nHelper functions (flash messaging & redirects)\nWe will also be deploying the application to the Internet\n\n\nThis is not a beginner PHP course. You should already understand things like variables, arrays, loops, functions and all of the basics of the PHP language. It is ok if you do not understand OOP fully. Before we start the framework project, we will have a crash course on object-oriented programming with PHP, where you will learn about classes, methods, properties and more.\n\n\nTo learn the basics, please check out the PHP Front To Back series on YouTube by Traversy Media",
      "target_audience": [
        "People wanting to learn advanced OOP PHP and MVC (Model View Controller)"
      ]
    },
    {
      "title": "Modern JavaScript (Complete guide, from Novice to Ninja)",
      "url": "https://www.udemy.com/course/modern-javascript-from-novice-to-ninja/",
      "bio": "Learn Modern JavaScript from the very start to ninja-level & build awesome JavaScript applications.",
      "objectives": [
        "Learn how to program with modern JavaScript, from the very beginning to more advanced topics",
        "Learn all about OOP (object-oriented programming) with JavaScript, working with prototypes & classes",
        "Learn how to create real-world front-end applications with JavaScript (quizes, weather apps, chat rooms etc)",
        "Learn how to make useful JavaScript driven UI components like popups, drop-downs, tabs, tool-tips & more.",
        "Learn how to use modern, cutting-edge JavaScript features today by using a modern workflow (Babel & Webpack)",
        "Learn how to use real-time databases to store, retrieve and update application data",
        "Explore API's to make the most of third-party data (such as weather information)"
      ],
      "course_content": {
        "Introduction": [
          "Why You Should Take This Course",
          "Why JavaScript is Amazing",
          "Setting up Your Environment",
          "Course Files"
        ],
        "JavaScript Basics": [
          "Adding JavaScript to a Web Page",
          "The Browser Console",
          "Variables, Constants & Comments",
          "Data Types at a Glance",
          "Strings",
          "Common String Methods",
          "Numbers",
          "Template Strings",
          "Arrays",
          "Null & Undefined",
          "Booleans & Comparisons",
          "Loose vs Strict Comparison",
          "Type Conversion"
        ],
        "Control Flow Basics": [
          "What is Control Flow?",
          "For Loops",
          "While Loops",
          "Do While Loops",
          "If Statements",
          "Else & Else If",
          "Logical Operators",
          "Logical NOT",
          "Break & Continue",
          "Switch Statements",
          "Variables & Block Scope"
        ],
        "Functions & Methods": [
          "What are Functions?",
          "Function Declarations & Expressions",
          "Arguments & Parameters",
          "Returning Values",
          "Arrow Functions",
          "Functions vs Methods",
          "Foreach Method & Callbacks",
          "Callback Functions in Action"
        ],
        "Object Literals": [
          "Objects at a Glance",
          "Creating an Object Literal",
          "Adding Methods",
          "'this' Keyword",
          "Objects in Arrays",
          "Math Object",
          "Primitive vs Reference Types"
        ],
        "The Document Object Model": [
          "Interacting with the Browser",
          "The DOM Explained",
          "The Query Selector",
          "Other Ways to Query the DOM",
          "Adding & Changing Page Content",
          "Getting & Setting Attributes",
          "Changing CSS Styles",
          "Adding & Removing Classes",
          "Parents, Children & Siblings",
          "Event Basics (click events)",
          "Creating & Removing Elements",
          "Event Bubbling (and delegation)",
          "More DOM Events",
          "Building a Popup"
        ],
        "Forms & Form Events": [
          "Events Inside Forms",
          "Submit Events",
          "Regular Expressions",
          "Testing RegEx Patterns",
          "Basic Form Validation",
          "Keyboard Events"
        ],
        "Project - Interactive Ninja Quiz": [
          "Project Preview & Setup",
          "Bootstrap Basics",
          "HTML Template",
          "Checking Answers",
          "Showing the Score",
          "The Window Object",
          "Intervals & Animating the Score"
        ],
        "Array Methods": [
          "Filter Method",
          "Map Method",
          "Reduce Method",
          "Find Method",
          "Sort Method",
          "Chaining Array Methods"
        ],
        "Project - Todo List": [
          "Project Preview and Setup",
          "HTML & CSS Template",
          "Adding Todos",
          "Deleting Todos",
          "Searching & Filtering Todos"
        ]
      },
      "requirements": [
        "A basic grasp of HTML & CSS (how to create simple, static web pages)"
      ],
      "description": "Hey gang, and welcome to your first step on the path to becoming a JavaScript ninja! In this course I'll be teaching you my absolute favourite language (JavaScript!) from the very beginning, right through to creating fully-fledged, dynamic & interactive web experiences.\nWe'll cover all the basics to get you up-and-running quickly, before diving in to some of the really fun stuff like web-page manipulation, creating interactive forms, popups & other cool effects. Along the way we'll be using the latest additions to the JavaScript specification (ES6, 7 & beyond) and maintaining good coding standards to keep our code clean and effective!\nOnce we master the basics, we'll dive into several real-life JavaScript projects, including an interactive quiz, a weather app, a real-time chat application and a small UI library you can use in all your future projects!\nWe'll also take a look at some more advanced topics - object oriented programming, asynchronous code, real-time databases using Firebase (including a new chapter about Firebase 9) and much more. Finally, we'll be setting up a modern work-flow using Webpack & Babel, so that by the end of this course you'll be no less than a black-belt JavaScript developer with a lot of coding techniques in your tool-belt.\nSpeaking of ninjas, I'm also known as The Net Ninja on YouTube, where you'll find hundreds of free coding tutorials, so feel free to pop by to say hello :).",
      "target_audience": [
        "New or junior developers who want to learn JavaScript from the ground up",
        "Front-end developers who want to level-up their JavaScript knowledge using modern, cutting-edge techniques",
        "Back-end developers who want to learn the JavaScript language for front-end development"
      ]
    },
    {
      "title": "Javascript for Beginners Learn by Doing Practical Exercises",
      "url": "https://www.udemy.com/course/javascript-for-beginners-introduction-learn-fast-easy/",
      "bio": "JavaScript for Beginners : Work closely with me doing exercises & learn more. I make Javascript easy for you guaranteed.",
      "objectives": [
        "Learn to write JavaScript functions",
        "Learn to write Javascript arrays",
        "Learn to write Javascript loops",
        "Learn to write Javascript math operations",
        "Learn to write Javascript condition structure (if statements)",
        "Learn to about Javascript variables",
        "Extra code based on the instructor experience as a bonus"
      ],
      "course_content": {
        "Introduction, Setup and Syntax": [
          "Introduction",
          "If your lecture videos are blurry Please Look at this!! (Optional)",
          "What is Javascript",
          "Udemy Walk Through and Exercise Files",
          "Practice App & Display Functions",
          "Javascript Quiz",
          "UDPATE - Editors",
          "Using a Code Editor",
          "Variables",
          "Arrays",
          "Variables and Arrays Quiz",
          "Get Your Feet Wet - Practice App -Variables and Arrays"
        ],
        "Control Structures, Functions, Math & Events": [
          "If Statements",
          "Loops",
          "Math",
          "Functions",
          "Even Handlers Part:1 (Example: controlling clicks on a button)",
          "Event Handlers Part:2",
          "Function Quiz",
          "Get Your Feet Wet - Practice App - If Statements and Loops",
          "Get Your Feet Wet - Practice App - Math & Functions",
          "Get Your Feet Wet - Practice App - Events"
        ],
        "Bonus Lectures": [
          "Printing Arrays",
          "Text Output Function with a Loop",
          "Built-in Functions (Displaying the Time In Javascript)",
          "Math Built-in Functions"
        ],
        "Bonus Lectures #2 - More Javascript": [
          "Assigning, Adding and Removing Elements from Arrays",
          "Inserting and Extracting From Arrays more functions",
          "Forloop Array Checking with Challenge Part #1",
          "Forloop Array Checking with Solution Part #2",
          "Setting Up Flags and Using Booleans",
          "Where to go next?",
          "Quick Syntax Reference/Resource File",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic HTML",
        "A desire to learn"
      ],
      "description": "One of the best Practical Courses in UDEMY ........\n\nOver 5,000 Students taking this course already.........\nLooking for a quick and easy way to learn Javascript?\nThis course if for absolute beginners, and it is an introduction to the major components of javascript. By learning the bigger things in Javascript, you will be able to know how to put the remaining pieces together and will be able to get into advanced courses more prepared.\nI'm not going to start this course with False promises.\nAt the end of this course, you will NOT become an expert and nor will you in any other course. To become an expert in Javascript or any other programming language you need many hours of practice and experience; more like years of practice and experience.\nMy PROMISE to you.\nMy promise to you is that all the lessons you will see here, will get engraved in your brain better than in any other course, why? My approach is the practice approach which is the number one key to learning any programming language or technical course faster and easier.\nI created a small practice application for you inside the exercise files. At the end of every section, we will jump into this small application together, and practice everything we covered in the past lectures. This approach will make sure that you can retain the information you learned longer.\nMy goal is to help you understand the major components and prepare you for advanced courses, in this way you can transition to the language easier.\nOnce you know the major parts of the Javascript language, everything else will be very easy to learn, and that is exactly what this course will provide you.\nWith years of programming experience invested in this course, you can rest assured that the information supplied in this course will prepare you to jump into any advanced Javascript course and come out on top.\nCommonly Asked Questions.....\nQ: Is Javascript easy?\nA: Yes and no\nIt depends on the teacher and the student. Learning Javascript is like learning a regular language, you need the major components and then you can start putting everything together. Students that jump into advanced Javascript courses might get confused and take longer to learn the language if they are not prepared with the major concepts.\nThis course's approach is to teach you the major components not just by watching but also practicing after every section so that you get an understanding of the overall logic of the Javascript language. I find this approach to be better than jumping into an advanced course that will confuse you and leave clueless not knowing what to next, and this is why I built this crash course.\nQ: Can I actually make money with Javascript?\nA: Yes and yes.\nThe market for Javascript is enormous and is in demand right now in any part of the world. Having a programming language like Javascript in your toolset will help you make more money regardless if you are working a regular job or freelancing. Javascript is one of the highest paying programming languages out there, and it will stay like that for a very long time.\nThis Javascript Course Covers the following and then some...\nIntroduction to the language\nUnderstanding Javascript variables\nUnderstanding Javascript arrays\nUnderstanding Javascript functions\nUnderstanding Javascript Loops\nUnderstanding Javascript Math\nPracticing Javascript variables\nPracticing Javascript Arrays\nPracticing Javascript Functions\n\n\nPracticing Javascript Loops\nPracticing Javascript Math operations\nand lots more.....\nAnd because I like what I do, I will be adding more lectures in the future. What are you waiting for? Start learning by doing, and take the course now. The sooner you start the better.",
      "target_audience": [
        "This course is meant for absolute beginners of Javascript",
        "This course is meant for students that struggled to learn the language before",
        "This course is meant for students with a little HTML knowledge"
      ]
    },
    {
      "title": "Javascript Tutorial and Projects Course",
      "url": "https://www.udemy.com/course/javascript-tutorial-for-beginners-w/",
      "bio": "Learn Javascript by Building 30+ Interesting Projects",
      "objectives": [
        "students will know what is Javascript",
        "students will know how to add Javascript to their projects",
        "students will know the basics of working with Javascript",
        "students will build projects using Javascript"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Goals",
          "Structure",
          "Video Blur Fix",
          "Course Review",
          "Discord Channel"
        ],
        "Visual Studio Code and Google Chrome": [
          "Intro",
          "Install Google Chrome",
          "Install VS-CODE",
          "VS-CODE Overview",
          "Install Live-Preview",
          "Install Prettier",
          "Emmet",
          "My Setup"
        ],
        "Javascript Basics": [
          "Basics Intro",
          "Basic Project",
          "Inline Javascript",
          "Internal Javascript",
          "External Javascript",
          "Cleanup Workspace",
          "Helper Methods",
          "Statements and Comments",
          "Variables",
          "Assign Variable Value Later",
          "Variable Naming Rules",
          "const, let, var",
          "Challenges Intro",
          "Variables Challange",
          "Prettier Settings",
          "Quotation Marks",
          "String Concatenation",
          "String Concat Challenge",
          "Numbers Basics",
          "Numbers - Additional Features",
          "Numbers Challenge",
          "Implicit Type Conversion",
          "Data Types",
          "Arrays",
          "Array Challenge",
          "Functions - Declare, Invoke",
          "Functions - Parameters, Arguments",
          "Functions - Return",
          "Function Expressions",
          "Function Challenge",
          "Objects",
          "Object Challenge",
          "Conditional Statements - Basics",
          "Conditional Statements Continued",
          "Equality",
          "Logical Operators",
          "Switch Statement",
          "Conditionals Challenge",
          "while Loops",
          "do while loops",
          "for loop"
        ],
        "Javascript Tutorial Continued": [
          "Connecting The Dots",
          "String Properties and Methods",
          "Template Literals",
          "Strings Challenge",
          "Array Properties and Methods",
          "Exercise - Full Name",
          "Exercise - Calculate Total",
          "Value vs Reference",
          "Null and Undefined",
          "Truthy and Falsy",
          "Ternary Operator",
          "Global Scope",
          "Local Scope",
          "Variable Lookup",
          "Callback Functions, Higher Order Functions",
          "Array Iterators",
          "forEach",
          "map",
          "filter",
          "find",
          "reduce",
          "Array Challenge - Intro",
          "Array Challenge - Setup Data",
          "Array Challenge - Multiple Files",
          "Array Challenge - Map",
          "Array Challenge - Filter",
          "Array Challenge - Filter Alternative Syntax",
          "Array Challenge - Find",
          "Array Challenge - Reduce #1",
          "Square Bracket Notation",
          "Array Challenge - Reduce #2",
          "Math Object",
          "Date Object"
        ],
        "DOM": [
          "DOM - Intro",
          "DOM - General Concepts",
          "Window and Document Overview",
          "Get Element By ID",
          "Get Elements By Tag Name",
          "Get Element By Class Name",
          "Query Selector and Query Selector ALL",
          "Navigate the DOM - Children",
          "Navigate the DOM - parentElement",
          "Navigate the DOM - nextSibling, previousSibling",
          "Navigate the DOM - nextElementSibling, previousElementSibling",
          "textContent nodeValue",
          "getAttribute() setAttribute()",
          "classList and className",
          "createElement - createTextNode - appendChild",
          "insertBefore",
          "replaceChild",
          "prepend innerText",
          "remove removeChild",
          "innerHTML and textContent",
          "Change CSS with style property",
          "Events Overview",
          "Click Event",
          "Function Reference",
          "Mouse Events",
          "Key Events",
          "Event Object",
          "CurrentTarget vs Target",
          "Event Propagation - Bubbling- Capturing",
          "Event Propagation Example",
          "Forms",
          "Local Storage",
          "Local Storage With Multiple Values",
          "setTimeout",
          "setInterval",
          "Events - \"DOMContentLoaded\"",
          "Events - \"load\"",
          "Events - \"scroll\"",
          "Width, Height, GetBoundingClientRect",
          "Events - \"resize\""
        ],
        "DOM Projects": [
          "Intro",
          "Starter Project",
          "Setup",
          "Color Flipper - Simple HTML",
          "Color Flipper - Simple Javascript",
          "Color Flipper - Hex",
          "Counter HTML",
          "Counter JS",
          "Reviews HTML",
          "Reviews JS",
          "Navbar HTML",
          "Navbar General Concepts",
          "Navbar JS",
          "Sidebar HTML",
          "Sidebar Manual Setup",
          "Sidebar JS",
          "Modal HTML",
          "Modal Challange",
          "Modal JS",
          "Questions HTML",
          "Questions General Concept",
          "Questions JS - Traversing the DOM",
          "Questions JS - Using Selectors Inside the Element",
          "Menu HTML",
          "Display Items When Page Loads",
          "Refactor",
          "Filter Buttons HTML",
          "Filter Buttons JS",
          "Dynamic Filter Buttons",
          "Unique Categories",
          "Dynamic Filter Buttons Complete",
          "Video Intro",
          "Video HTML",
          "Video Overlay Setup",
          "Video JS",
          "Video Preloader",
          "Scroll Intro",
          "Scroll HTML",
          "Scroll - Setup Date",
          "Scroll - Toggle Simple Setup",
          "Scroll - Toggle Dynamic",
          "Scroll - Fixed Navbar",
          "Smooth Scroll Setup",
          "Smooth Scroll Complete",
          "Tabs HTML",
          "Tabs JS",
          "Countdown HTML",
          "Set Date",
          "Calculate Remaining Time",
          "Time From Now",
          "Lorem Ipsum HTML",
          "Lorem Ipsum JS",
          "GroceryBud - Intro",
          "GroceryBud - HTML",
          "GroceryBud - Select Elements",
          "GroceryBud - addItem Setup",
          "GroceryBud - truthy shortcut",
          "GroceryBud - display alert",
          "GroceryBud - addItem",
          "GroceryBud - setBackToDefault",
          "GroceryBud - clear items",
          "GroceryBud - select edit and delete buttons",
          "GroceryBud - delete item",
          "GroceryBud - edit item",
          "GroceryBud - localStorage info",
          "GroceryBud - addToLocalStorage",
          "GroceryBud - removeFromLocalStorage",
          "GroceryBud - editLocalStorage",
          "GroceryBud - load items from localStorage",
          "Slider Intro",
          "Slider HTML",
          "Slider General Concepts",
          "Slider JS Setup",
          "Slider JS - Slides Approach",
          "Slider JS - Button Approach"
        ],
        "Deployment": [
          "Netlify Intro",
          "Drag and Drop Option",
          "Continuous Deployment"
        ],
        "Objects": [
          "Intro",
          "Object Basics",
          "Nested Objects, Bracket Notation",
          "'this' - Keyword Basics",
          "\"this\" - Keyword Advanced",
          "Factory Functions",
          "Constructor Functions",
          "Constructor Property",
          "Prototype Property",
          "Property Lookup",
          "ES6 Class Syntax",
          "Call",
          "Apply, Arguments",
          "Bind",
          "Button Example"
        ],
        "OOP Projects": [
          "Intro",
          "Setup",
          "Counter - HTML",
          "Counter Setup",
          "Counter - Select Elements",
          "Counter - Functions",
          "Counter - Complete",
          "Counter - Class Refactor",
          "Gallery Intro",
          "Gallery - HTML",
          "Gallery - Select Elements",
          "Gallery - Open Modal Setup",
          "Gallery - Open Modal Complete",
          "Gallery - Close Modal",
          "Gallery - Prev and Next",
          "Gallery - Select Images",
          "Gallery - Class Refactor"
        ],
        "Functions": [
          "Intro",
          "IIFE",
          "Hoisting",
          "Closure",
          "Closure - Basic Example",
          "Closure - Complete Example"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS",
        "Computer",
        "Text Editor",
        "Web Browser"
      ],
      "description": "Master JavaScript: The Language Powering the Modern Web\nCourse Overview: JavaScript (JS), the pulsing heart of modern web development, is a versatile and powerful programming language, renowned for its lightweight, efficient, and highly adaptable nature. This course delves into JavaScript as not only the cornerstone of web scripting but also a robust language used in diverse environments beyond browsers, such as Node.js, Apache CouchDB, and Adobe Acrobat. Embrace the journey through JavaScript's dynamic and multi-faceted landscape, exploring its prototype-based structure, single-threaded execution, and support for various programming paradigms including object-oriented, imperative, and functional programming.\nWhy JavaScript?\nGlobal Dominance: Stand at the forefront of programming with JavaScript, the world's most popular language.\nWeb's Backbone: Master the de facto language that shapes and animates the web.\nAccessibility: Discover the ease of learning JavaScript, making it an ideal starting point for aspiring developers.\nCareer Gateway: Unlock abundant job opportunities by acquiring in-demand JavaScript skills.\nUbiquity: Experience JavaScript's versatility, powering everything from server-side applications (Node.js) to cross-platform desktop apps.\nCourse Structure: Designed for beginners and intermediate learners alike, this comprehensive course requires only a foundational knowledge of HTML and CSS. Step into the world of JavaScript, learning to integrate it into your projects, and understanding its core concepts. By the end of this journey, you will have built an impressive portfolio of projects, showcasing your newfound skills.\nProject Portfolio:\n\n\nInteractive Color Flipper\nDynamic Counter Application\nCustomer Review Interface\nResponsive Navigation Bar\nCustomizable Sidebar\nInteractive Modal Dialogs\nFAQ Accordions\nDynamic Menu Builder\nCustom Video Player\nSmooth Scrolling Effects\nInteractive Tabs System\nCountdown Timer\nLorem Ipsum Generator\nGrocery List App\nImage Slider\nObject-Oriented Counters\nOOP-Based Gallery\nNumber Facts Generator\nDark Mode Toggle\nDynamic Content Filters\nDad Jokes Generator\nProduct Showcase\nRandom User Generator\nCocktail Recipes App\nAdvanced Image Slider\nStripe-Style Submenus\nPagination Systems\nWikipedia Viewer\nComfy Sloth E-commerce Store\nComfy Sloth E-commerce Store\nEmbrace the JavaScript Adventure! Join us on this exciting journey to master JavaScript, the language that powers the modern web. Equip yourself with the skills to build, innovate, and excel in the dynamic world of web development.",
      "target_audience": [
        "Anyone who wants to start working with Javascript"
      ]
    },
    {
      "title": "Complete Blazor (WASM & Server) and ASP.NET API Development",
      "url": "https://www.udemy.com/course/end-to-end-aspnet-core-31-api-and-blazor-development/",
      "bio": "Learn to build a RESTful API and consume it in a Blazor (WebAssembly and Server) Client Application and deploy to Azure",
      "objectives": [
        "Build Complete Data Driven .NET Core API From Scratch",
        "Build client side apps using Blazor Server and Blazor WebAssembly",
        "Learn Development with Blazor 8 / 9",
        "How to Build RESTful APIs with proper practices",
        "Learn C# and Visual Studio Techniques",
        "Repository Pattern and Dependency Injection",
        "Use AutoMapper and Data Transfer Objects (DTOs)",
        "Interact with Database using Entity Framework Core",
        "Use NuGet Package Manager",
        "Manage and Track Changes using GitHub",
        "Asynchronous Programming",
        "Custom Logging using Serilog",
        "Use Swagger UI Documentation",
        "Deploy Web API to Microsoft Azure",
        "Deploy Blazor Applications to Microsoft Azure",
        "Use NSwag Studio"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Environment Configuration and Account Setup": [
          "Install Visual Studio 2022 Community Edition",
          "Install Visual Studio 2026 (Insiders Edition)",
          "IMPORTANT - .NET 8/9 Version",
          "Install SQL Server Express Edition",
          "Create a GitHub Account",
          "Install and Explore PostMan"
        ],
        "Project Setup and Configurations": [
          "Create ASP.NET Core Web API Project",
          "*OPTIONAL* - Upgrade to .NET 7",
          "Tour of Project Structure and Files",
          "Configure Logging using Serilog",
          "CORS Configuration",
          "Review and Add Changes to GitHub"
        ],
        "Setup and Scaffold Database": [
          "Create Database in SQL Server",
          "Scaffold Database",
          "*IMPORTANT* - Scaffold Database Error Fix",
          "Review and Add Changes to GitHub"
        ],
        "Setup Author API Controller and Functionality": [
          "Section Overview",
          "Setup API Controller",
          "Setup AutoMapper and DTOs",
          "Add Logging with Serilog and Seq",
          "Review and Add Changes to GitHub"
        ],
        "Setup Book API Controller and Functionality": [
          "Section Overview",
          "Setup API Controller",
          "Setup AutoMapper and DTOs",
          "Review and Add Changes to GitHub"
        ],
        "Configure Identity and JWT Authentication": [
          "Section Overview",
          "Add Identity Core Libraries and Tables to API",
          "Add Custom Fields to User Table",
          "Seed Test Users and Roles",
          "Setup Authentication Controller",
          "Setup JSON Web Tokens (JWT) Authentication - Part 1",
          "Setup JSON Web Tokens (JWT) Authentication - Part 2",
          "Setup Controller and Action Authorizations",
          "Review and Add Changes to GitHub"
        ],
        "Create Blazor Server Client App": [
          "Section Overview",
          "Create and Understand Blazor Project Structure",
          "Setup HTTP Client Using NSwag Studio",
          "Setup User Registration",
          "Setup User Login - Part 1",
          "Setup User Login - Part 2",
          "Review and Add Changes to GitHub"
        ],
        "Author Management Blazor UI": [
          "Section Overview",
          "Setup Authors Index",
          "Extend HTTP Client",
          "Setup Create Author Component",
          "Setup Update Author Component",
          "Setup View Author Component",
          "Delete Author with JavaScript Interop",
          "Add Authorization Restrictions",
          "Review and Add Changes to GitHub"
        ],
        "Book Management Blazor UI": [
          "Section Overview",
          "Setup Book Management Service Methods",
          "Setup Books Index Component (With Delete Functionality)",
          "Setup Create Book Component w/ File Upload - Part 1",
          "Setup Create Book Component w/ File Upload - Part 2",
          "Setup View Book Component",
          "Setup Update Book Component",
          "Review and Add Changes to GitHub"
        ]
      },
      "requirements": [
        "A computer",
        "The Internet",
        "A Willingness to Learn"
      ],
      "description": "Overview\nLearn how to build a RESTful API using ASP.NET Core 6 / 7, and then consume it in a modern Blazor Single Page Application. Along the way, we will review clean coding principles and patterns, RESTful Standards, logging tools, database development and management, and application testing and deployment strategies.\nBy the end of the course, we would have built a single-page application using Blazor (Server and WebAssembly) that will serve as a stand-alone client app, consuming and interacting with an API. We will look at handling authentication using JSON Web Token (JWT) and using this JWT to communicate with the API for all other operations that our app will support.\nASP.NET Core is Microsoft's modern, cross-platform framework for building enterprise-ready web applications. Its suite of frameworks allows us to develop RESTful APIs and now thanks to Blazor, build robust client apps to interact with our API.\nWhy Learn ASP.NET Core (.NET 6)\nMicrosoft .NET is the platform that drives the business technology of many of the top corporations in the United States and many other countries. It is the predominant technology used to drive enterprise-scale business technology. Companies have chosen .NET because of its proven scalability, reliability, and support.\nThe .NET language of choice to learn is C#, as it is among the most widely used languages today. It’s a general-purpose programming language that can handle almost any problem, from desktop to mobile to dynamic web applications. As such, there is a high demand across the world for .NET developers in a variety of industries, which means that more jobs are available for candidates with a foundation built upon .NET technologies.\nWhy Develop With Blazor?\nThe most popular JavaScript client-side web frameworks have been Angular, React, Vue and others. In this course, we keep it .NET by using Blazor, which is Microsoft's response to that monopoly.\nBlazor allows you to create a Single Page Application, on top of .NET Core and continue coding in C# (without needing to flip between C# and JavaScript too much). Blazor apps are composed of reusable web UI components implemented using C#, HTML, and CSS. Both client and server code is written in C#, allowing you to share code and libraries.\nBlazor WebAssembly or Blazor Server\nBlazor can run your client-side C# code directly in the browser, using WebAssembly. Because it's real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.\nAlternatively, Blazor can run your client logic on the server. Client UI events are sent back to the server using SignalR - a real-time messaging framework. Once execution completes, the required UI changes are sent to the client and merged into the DOM\nWe will be exploring many intricacies of the Blazor life-cycle, data flow, JavaScript Interoperability, and general development activities.\nDeploy To Microsoft Azure Cloud\nAzure Web App Service is key to deploying the API and Blazor Server Applications. We will also enlist the use of Azure SQL for the Database to support our API.\nBuild A Strong Foundation in .NET Core Programming:\nBuild a fully data-driven REST Web API using cutting-edge technology\nBuild a Single Page Application client-side UI using Blazor Server AND Blazor WebAssembly\nConnect to an existing Database using Entity Framework Core\nRepository Pattern and Dependency Injection\nProgressive Web Application with Blazor\nSetup Logging using Serilog\nSetup API documentation using SwaggerUI\nUnderstand the REST design principles\nUnderstand C# 10 and .NET Core Web Syntax\nUse NSwag to speed up API Client Development\nUnderstand user Authentication using JWT (JSON Web Tokens)\nStore JSON Web Tokens using Local Browser Storage\nHandle Blazor Application User Authentication State\nConsume REST Web API in Blazor Application\nUnderstand how to use Models, DTOs and AutoMapper\nManage Packages with NuGet Manager\nSetup GitHub for Source Control\nDeploy Applications and Database to Microsoft Azure\nPREREQUISITES\nIn order to take this course, you should have at least 3 months of experience programming in C#. If you need to strengthen your C# fundamentals, you can take my C# beginner course C# Console and Windows Forms Development with LINQ & ADO .NET. If you need to brush up on your web development skills, you may also review Introduction To Website Development Technologies to learn the fundamentals of HTML, CSS, and JavaScript.\n\n\nContent and Overview\nTo take this course, you will need to have some knowledge of Object Oriented Programming, if not C#. Even if you have little exposure to the .NET development stack, this course is beginner-friendly and full of development tips.\nThis is a huge course. Over 16 hours of premium content, but smartly broken up to highlight a set of related activities based on each module in the application that is being built. We will also look at troubleshooting and debugging errors as we go along; implementing best practices; writing efficient logic and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course and you will be challenged to be the best you can be.\nWe don't do things the perfect way the first time; that is different from the reality of writing code. We make mistakes and point them out and fix them around them. By doing this, we develop proficiency in using debugging tools and techniques. By the time you have finished the course, you will have moved around in Visual Studio and examined logic and syntax errors so much, that it will be second nature for you when working in the .NET environment. This will put your newly learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, with the inclusion of some files to make it easier for you to replicate the code being demonstrated. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nClicking the Take This Course button could be the best step you could take towards quickly increasing your income and marketability! Also, remember that if you don't think the course is worth what you spent, you have a full 30 days to get a no questions asked refund!\n\n\nIt's time to take action!\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to learn REST API Development with .NET Core",
        "Anyone who wants to learn Blazor Server Development",
        "Anyone who wants to learn Blazor WebAssembly Development"
      ]
    },
    {
      "title": "The Front-End Web Developer Bootcamp: HTML, CSS, JS & React",
      "url": "https://www.udemy.com/course/the-front-end-web-developer-bootcamp-html-css-js-react/",
      "bio": "Get started as a front-end web developer with HTML, CSS, JavaScript, React.JS, and more!",
      "objectives": [
        "Learn the fundamentals of HTML and CSS, including tags, attributes, selectors, and styles.",
        "Learn how to create responsive layouts using CSS Grid and Flexbox.",
        "Learn how to use JavaScript to add interactivity to your web pages, including event listeners, DOM manipulation, and basic animations.",
        "Introduction to React and its core concepts: Learn the basics of React, including components, props, state, and lifecycle methods.",
        "Building scalable and reusable components with React: Learn how to build complex and reusable components using React, including conditional rendering, event han",
        "Working with APIs to fetch and display data: Learn how to use APIs to fetch and display data on your web pages",
        "Learn how to carve out a career in frontend website development and the necessary skills to learn to continue on this path",
        "Learn how to design quality websites using HTML and CSS",
        "Learn how to create amazing front-end UIs with React!",
        "You'll learn the very fundamentals of JavaScript to building modern and complex applications",
        "You'll learn all you need to know to become an experienced, self-assured, and up-to-date JavaScript developer"
      ],
      "course_content": {
        "Introduction to HTML5": [
          "Introduction",
          "Features of HTML5",
          "Benefits of using HTML5",
          "Where and how is HTML5 used?",
          "HTML5 editors",
          "Downloading Visual Studio Code",
          "Course Materials"
        ],
        "Structure of an HTML5 file": [
          "What are HTML tags?",
          "Structure of an HTML5 file",
          "File and folder structure",
          "How to create an HTML5 file?"
        ],
        "HTML5 basic building blocks": [
          "Heading Tags in HTML",
          "HTML5 Quotation and Citation tags",
          "Commenting out code in HTML5",
          "HTML5 attributes",
          "How to style in HTML5"
        ],
        "Exploring HTML5 tags": [
          "What are anchor tags?",
          "What are image tags?",
          "What are paragraph tags?",
          "What are break tags?",
          "What are table tags?",
          "List Tags",
          "Video Tag",
          "Audio Tag"
        ],
        "Building a Form from Scratch with HTML5": [
          "Form tags",
          "Input Types",
          "Input attributes (size, read-only, disabled)",
          "Additional input attributes (Min, max, multiple, and placeholder)",
          "Required Inputs"
        ],
        "Block and Inline Elements": [
          "Introduction",
          "Examining Block and Inline Elements"
        ],
        "Conclusion (HTML5 Part)": [
          "Conclusion"
        ],
        "Introduction to CSS3": [
          "Introduction to CSS3",
          "Syntax of CSS3",
          "Uses of CSS3",
          "Types of CSS3",
          "Selectors & Colors in CSS3"
        ],
        "Basics Properties of CSS3": [
          "Background",
          "Borders",
          "Outline",
          "Height and width",
          "Margin and padding"
        ],
        "Typography Properties of CSS3": [
          "Text alignment",
          "Text decoration",
          "Text transform",
          "Text spacing",
          "Font family",
          "How to use font awesome icons"
        ]
      },
      "requirements": [
        "Readiness, flexibility, and passion for learning",
        "No programming experience needed",
        "Basic knowledge about the internet and the composition of websites is recommended but not necessary",
        "A good browser and stable internet connection are required to test the websites you build",
        "A modern code editor like Visual Studio Code, Atom, or Sublime Text is also helpful for writing and formatting the code"
      ],
      "description": "Are you interested in learning the skills and tools required to create modern, interactive, and responsive websites? The Front-End Web Developer Bootcamp: HTML, CSS, JS & React is the perfect course for you! In this comprehensive Bootcamp, you'll learn HTML, CSS, JavaScript, and React - the building blocks of the web - and gain hands-on experience in creating dynamic and engaging web pages from scratch.\nThis course is designed for beginners who are interested in pursuing a career in web development or simply want to learn how to create beautiful and functional websites. Throughout the course, you'll work on a series of practical projects that will allow you to apply your knowledge and skills to real-world scenarios. By the end of the course, you'll have a portfolio of projects to showcase your skills to potential employers or clients.\n\n\nHere are just a few of the benefits of enrolling in The Front-End Web Developer Bootcamp: HTML, CSS, JS & React:\n\n\nGain In-Demand Skills: Front-end web development is a highly sought-after skill in today's job market. By mastering HTML, CSS, JavaScript, and React, you'll be well-positioned to land a job in a rapidly growing field. According to the Bureau of Labor Statistics, the employment of web developers is projected to grow 8% from 2020 to 2030, much faster than the average for all occupations.\nLearn from Expert Instructors: Our experienced instructors have years of experience in the field and are passionate about sharing their knowledge with you. They created this course to help you progress at your own pace and achieve your goals.\nHands-On Learning: The best way to learn front-end web development is through hands-on experience. That's why this course emphasizes practical projects that simulate real-world scenarios. By the end of the course, you'll have a solid understanding of the tools and techniques used by professional web developers.\nBuild a Portfolio: As you complete projects throughout the course, you'll build a portfolio of work that showcases your skills to potential employers or clients. This portfolio will demonstrate your ability to create responsive and engaging websites, which is essential in today's job market.\nJoin a Community: Learning front-end web development can be challenging, but it doesn't have to be lonely. By enrolling in this course, you'll join a community of like-minded individuals who are passionate about web development. You can also share ideas, and collaborate with other students.\nWhat are You Waiting for? Become a top Front-End web developer today!\nThe course is enjoyable, engaging, and interactive, which means it does not consist of introductory lectures that go over your head but rather a more hands-on approach to the subject. The material is kept light and enjoyable by the clever and experienced educator.",
      "target_audience": [
        "Beginners looking to start their foray into website development and design using the most basic languages; HTML and CSS",
        "Experienced website designers who need a reminder of some important concepts or need to keep their skills up to date with the introduction of new HTML and CSS coding standards",
        "Developers who have a basic understanding of JavaScript and want to add React JS to their skillset",
        "Professionals are already familiar with web frameworks such as Angular or Vue and want to learn React JS"
      ]
    },
    {
      "title": "PHP for Beginners: PHP Crash Course",
      "url": "https://www.udemy.com/course/learn-php-for-beginners-php-crash-course-2021/",
      "bio": "Learn PHP for Beginners with this complete PHP crash course",
      "objectives": [
        "You will be able to install the suitable PHP environment for this course",
        "You will be able to dive in the amazing world of PHP codes especially in terms of reading and writing",
        "You will grasp the concept of some Back-End terms and the core of the language",
        "You will have some significant PHP skills under your belt by the end of the course",
        "You will build a project to apply what you have learned on the away",
        "You will be a confidant developer who can take on some PHP challenges and exercises",
        "You will be familiar with PDO and MySQL which are crucial technologies"
      ],
      "course_content": {},
      "requirements": [
        "Just a PC and an active internet connection!!!"
      ],
      "description": "Do you want to start with web development and specifically Back-End? Have you ever thought about learning PHP but you don't know how and where to start? Are you currently a web developer and want to quickly get into PHP? If your answer is \"yes\", then you are in for a treat, because in this course, I packed my knowledge and experience of years of PHP. So after this course, you can feel comfortable working with PHP. The course is highly dedicated to those people who want to get into PHP and start with it in no time. We will start working with the basic fundamentals of PHP like \"echo statements\", \"comments\" and stuff like that up to the intermediate level and then to the advanced parts like \"super globals\", \"date and time\" and so on.\n\nThe other part of the course is very simple yet practical crucial and useful and that is \"building a todolist with PHP and MySQL\". and in it, I am going to walk you through the process of building this little app, so you can apply what you have learned. I am also going to show you how to think and analyze in terms of code and this will unlock your potential as a programmer and allow you to get out of the tutorial hell which kills every programmer's possibility of getting ahead.\nThe course also contains material such as code snippets and source codes for the project applied and quizzes and so on. if you are ready to take this journey with me, then go ahead and take this course.",
      "target_audience": [
        "Anyone who is interested in learning PHP",
        "Anyone who is curious about MySQL and PDO"
      ]
    },
    {
      "title": "The Complete ServiceNow Developer Course",
      "url": "https://www.udemy.com/course/servicenow-201-development/",
      "bio": "Learn how to develop on the ServiceNow platform!",
      "objectives": [
        "Develop on and customize for the ServiceNow platform",
        "The ServiceNow APIs",
        "When & where to script in ServiceNow"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Course Overview",
          "Obtaining a Personal Developer Instance",
          "ServiceNow Resources & FAQs"
        ],
        "Development Overview": [
          "ServiceNow Basics",
          "Tables",
          "Fields",
          "Development Introduction",
          "Should You Script?"
        ],
        "Scripting Locations & API Introduction": [
          "Business Rules",
          "Client Scripts",
          "UI Actions",
          "UI Policies",
          "Script Includes",
          "Scheduled Jobs",
          "Workflow Scripting",
          "Introduction to APIs",
          "Section 3 Quiz"
        ],
        "GlideRecord": [
          "GlideRecord Introduction",
          "Concept: Dot-Walking & API Overview",
          "Common GlideRecord Methods & Stages",
          "Revisiting CRUD",
          "GlideRecord - Demo 1",
          "GlideRecord - Demo 2",
          "GlideRecordSecure & GlideAggregate",
          "Section Recap",
          "Section 4 Quiz"
        ],
        "GlideSystem": [
          "GlideSystem Introduction",
          "Common GlideSystem Methods",
          "Events in ServiceNow",
          "Demo: GlideSystem",
          "Section Recap",
          "Section 5 Quiz"
        ],
        "GlideForm & GlideUser": [
          "GlideForm Introduction",
          "Common GlideForm Methods",
          "Demo: GlideForm",
          "GlideUser Introduction",
          "Demo: GlideUser",
          "Section Recap",
          "Section 6 Quiz"
        ],
        "GlideAjax": [
          "GlideAjax Introduction",
          "GlideAjax Example",
          "GlideAjax Stages",
          "GlideAjax - Demo 1",
          "GlideAjax - Demo 2",
          "Section Recap",
          "Section 7 Quiz"
        ],
        "Exploring Other APIs": [
          "GlideDateTime",
          "GlideElement",
          "XMLDocument2",
          "Other APIs and Undocumented APIs",
          "Creating Our Own API",
          "Section Recap",
          "Section 8 Quiz"
        ],
        "Becoming A Scripting Master": [
          "Scripting Best Practices",
          "Debugging",
          "Debugging Demo",
          "Tips & Help",
          "Version Control & Tips Demo",
          "Section 9 Quiz"
        ],
        "Building A Custom App": [
          "Custom App Introduction",
          "Creating Fetch",
          "Extending Fetch Part 1",
          "Extending Fetch Part 2",
          "Section Recap & Thank You!"
        ]
      },
      "requirements": [
        "ServiceNow Experience",
        "JavaScript & Object Oriented Programming",
        "Understanding of Web App Architecture (HTTP & Databases)"
      ],
      "description": "This course will teach you everything you need to know in order to start scripting on the ServiceNow platform. Whether you're creating custom applications or configuring advanced customizations, leveraging scripting on the ServiceNow platform is a requirement for any great ServiceNow administrator.\nThis course includes over 70 lectures, containing over 8 hours of video, covering everything you need to know in order to master scripting on the ServiceNow platform. You'll learn how ServiceNow APIs work and where you can use them within the platform.\nThis course is composed of 10 sections, which covers all of the most important ServiceNow APIs so you can start developing on the platform as quickly as possible! Learn about GlideRecord, GlideSystem, GlideAjax, GlideForm, GlideUser, GlideDateTime, and many more ServiceNow APIs. Discover the power of Script Includes and how you can create your very own APIs within the ServiceNow platform. Create modern, asynchronous web apps using ServiceNow's GlideAjax API\nImportant: This is an intermediate level course. An understanding of JavaScript and ServiceNow is required. This course will not teach you JavaScript, although it contains many great resources for learning the language.\nThis course will cover all of the topics found within the Scripting in ServiceNow class. In addition to the lectures and slides, this course offers exercises and quizzes for each core section.",
      "target_audience": [
        "ServiceNow Administrators",
        "ServiceNow Developers",
        "Custom App Developers"
      ]
    },
    {
      "title": "PHP & MySQL - Certification Course for Beginners",
      "url": "https://www.udemy.com/course/php-mysql-certification-course-for-beginners/",
      "bio": "Learn to Build Database Driven Web Applications using PHP & MySQL",
      "objectives": [
        "PHP Variables, Syntax, Variable Scope, Keywords",
        "Echo vs. Print and Data Output",
        "PHP Strings, Constants, Operators",
        "PHP Conditional Statements",
        "PHP Elseif, Switch, Statements",
        "PHP Loops - While, For",
        "PHP Functions",
        "PHP Arrays, Multidimensional Arrays, Sorting Arrays",
        "Working with Forms - Post vs. Get",
        "PHP Server Side - Form Validation",
        "Creating MySQL Databases",
        "Database Administration with PhpMyAdmin",
        "Administering Database Users, and Defining User Roles",
        "SQL Statements - Select, Where, And, Or, Insert, Get Last ID",
        "MySQL Prepared Statements and Multiple Record Insertion",
        "PHP Isset",
        "MySQL - Updating Records"
      ],
      "course_content": {
        "PHP Development": [
          "PHP Introduction",
          "PHP Preparation",
          "PHP File Test",
          "PHP Syntax",
          "PHP Variables",
          "PHP Variable Scope",
          "PHP Global Keyword",
          "PHP Static Keyword",
          "PHP Echo vs Print",
          "PHP Data Types",
          "PHP Objects",
          "PHP Strings",
          "PHP Constants",
          "PHP Operators",
          "PHP Conditional Statements",
          "PHP ElseIf Statement",
          "PHP Switch Statement",
          "PHP While Loops",
          "PHP For Loops",
          "PHP Functions",
          "PHP Functions Continued",
          "PHP Arrays",
          "PHP Multidimensional Arrays",
          "PHP Sorting Arrays",
          "PHP Superglobal Variables",
          "PHP Forms Introduction",
          "PHP POST vs GET Basics",
          "PHP Form Output and Validation",
          "PHP Form Required Fields",
          "PHP Validation Continued"
        ],
        "MySQL Database Integration": [
          "Introduction to MySQL Databases",
          "Introduction PhpMyAdmin",
          "PhpMyAdmin Interface Overview",
          "MySQL Security and Root Superuser",
          "MySQL Creating a Database and Table",
          "MySQL Creating a New User",
          "MySQL Database and Table Specific Privileges",
          "MySQL Modifying and Deleting a Table",
          "MySQL Modifying and Deleting a Database",
          "Introduction to SQL",
          "SQL Statements in PhpMyAdmin",
          "Connect to MySQL Database using PHP",
          "MySQL Database - Import Data",
          "SQL Select",
          "SQL Distinct Keyword",
          "SQL Where Clause",
          "SQL And Operator",
          "SQL Or Operator",
          "SQL Order By",
          "MySQL Insert Into",
          "MySQL Get Last ID",
          "MySQL Insert Multiple Records",
          "MySQL Prepared Statements",
          "MySQL Delete Records",
          "PHP Header Function",
          "PHP Isset",
          "MySQL Update Records"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to the PHP & MySQL Certification Course for Beginners.\n\nThis course offers a comprehensive guide to learning how to code in PHP. We also explore integrating MySQL Databases into your PHP Projects for dynamic, user driven functionality.\n\nWe start with PHP basics, including variable declaration and data output. The lessons then transition into working with objects, conditional statements, loops, functions, arrays, form validation, sorting, and much more.\n\nAfter the PHP Section, students learn to unleash the true power of dynamic page development with MySQL database integration. We start with table creation and user management. From there we progress into commonly used SQL statements for database administration. Students are also taught how to create database connections and to execute SQL statements directly from PHP scripts. Our coding style keeps script security, and execution efficiency in mind at all times.\nIf you are interested in embarking into the world of PHP Development with Database integration, don’t wait another second. Enrol today in this exciting new course.\nWhat you'll learn - Overview:\nPHP Variables, Syntax, Variable Scope, Keywords\nEcho vs. Print and Data Output\nPHP Strings, Constants, Operators\nPHP Conditional Statements\nPHP Elseif, Switch, Statements\nPHP Loops - While, For\nPHP Functions\nPHP Arrays, Multidimensional Arrays, Sorting Arrays\nWorking with Forms - Post vs. Get\nPHP Server Side - Form Validation\nCreating MySQL Databases\nDatabase Administration with PhpMyAdmin\nAdministering Database Users, and Defining User Roles\nSQL Statements - Select, Where, And, Or, Insert, Get Last ID\nMySQL Prepared Statements and Multiple Record Insertion\nPHP Isset\nMySQL - Updating Records",
      "target_audience": [
        "Beginner developers who are interested in learning the foundations of PHP.",
        "Students who want to integrate MySQL Databases into their PHP Web Applications.",
        "Students who want to learn to code in PHP.",
        "Students who want to learn how to execute SQL Statements, directly from PHP."
      ]
    },
    {
      "title": "The Complete Developers Guide to MongoDB",
      "url": "https://www.udemy.com/course/the-complete-developers-guide-to-mongodb/",
      "bio": "Master MongoDB and Mongoose design with a test-driven approach",
      "objectives": [
        "Understand how MongoDB stores data",
        "Gain mastery of the most popular MongoDB interface, Mongoose JS",
        "Write efficient queries for reading data",
        "Learn the purpose of each of Mongoose's functions",
        "Design effective NoSQL schema with both data nesting and lookups"
      ],
      "course_content": {
        "Let's Start": [
          "Join Our Community!",
          "MongoDB Setup on macOS",
          "MongoDB Setup on Windows",
          "Using MongoDB Compass on macOS",
          "Using MongoDB Compass on Windows"
        ],
        "A Quick ES6 Refresher": [
          "A Refresher on Promises",
          "Let's Play A Game",
          "Winning the Game",
          "Behind the Scenes with Promises"
        ],
        "Core Fundamentals of MongoDB": [
          "Where Do We Use Mongo?",
          "Fundamentals of MongoDB",
          "A Last Touch of Setup"
        ],
        "A Test Driven Experience": [
          "Project Overview",
          "The Test Helper File",
          "Mongoose Connection Helper",
          "Mongoose Models",
          "More on Models",
          "The Basics of Mocha",
          "Running Mocha Tests",
          "Creating Model Instances",
          "Saving Users to Mongo",
          "Dropping Collections",
          "Mocha's Done Callback",
          "Mongoose's isNew Property",
          "Default Promise Implementation",
          "Test Setup for Finding Users",
          "Making Mongo Queries",
          "The ID Property - A Big Gotcha",
          "Automating Tests with Nodemon",
          "Finding Particular Records",
          "Many Ways to Remove Records",
          "Class Based Removes",
          "More Class Based Removals",
          "The Many Ways to Update Records",
          "Set and Save for Updating Records",
          "Model Instance Updates",
          "Class Based Updates"
        ],
        "Mongo Operators": [
          "Update Operators",
          "The Increment Update Operator",
          "Validation of Records",
          "Requiring Attributes on a Model",
          "Validation With a Validator Function",
          "Handling Failed Inserts"
        ],
        "Handling Relational Data": [
          "Embedding Resources in Models",
          "Nesting Posts on Users",
          "Testing Subdocuments",
          "Adding Subdocuments to Existing Records",
          "Removing Subdocuments",
          "Virtual Types",
          "Defining a Virtual Type",
          "ES6 Getters",
          "Fixing Update Tests"
        ],
        "Thinking About Schema Design": [
          "Challenges of Nested Resources",
          "Embedded Documents vs Separate Collections",
          "BlogPosts vs Posts",
          "Creating Associations with Refs",
          "Test Setup for Associations",
          "Wiring Up Has Many and Has One Relations",
          "Promise.All for Parallel Operations",
          "Populating Queries",
          "Loading Deeply Nested Associations"
        ],
        "Mongoose Middleware": [
          "Cleaning Up with Middleware",
          "Dealing with Cyclic Requires",
          "Pre-Remove Middleware",
          "Required Pre Remove Hook Updates",
          "Testing Pre-Remove Middleware"
        ],
        "Handling Big Collections with Pagination": [
          "Skip and Limit",
          "Writing Skip and Limit Queries",
          "Sorting Collections"
        ],
        "Putting Your Skills to the Test": [
          "Required Starter Files - DO NOT SKIP",
          "Project Overview",
          "First Step - Artist and Album Models",
          "The Album Schema",
          "The Artist Model",
          "Finding Particular Records",
          "FindOne vs FindById",
          "The CreateArtist Operation",
          "Solution to Creating Artists",
          "Deleting Singular Records",
          "Solution to Removing",
          "Editing Records",
          "How to Edit Single Artists"
        ]
      },
      "requirements": [
        "All you need is a Mac or a PC"
      ],
      "description": "MongoDB is the hottest database solution in the tech world right now, able to power anything from your growing personal project to an enterprise infrastructure.\nNodeJS focused?  Yep.  Test Driven Exercises?  Absolutely!  Advanced Features of MongooseJS?  You know it.\n\nThis course will get you up and running with MongoDB quickly, and teach you the core knowledge you need to deeply understand and build apps centered around Mongo.\nWe'll start by mastering the fundamentals of Mongo, including collections, validations, and common record manipulation techniques. Source code is provided for each lecture, so you will always stay up-to-date with the course pacing.  Special attention has been paid to creating reusable code that you'll be able to make use of on your own fantastic projects.\nIf you are new to MongoDB, or if you've been working to learn it but sometimes feel like you still don't quite 'get it', this is the MongoDB course for you! To learn MongoDB you have to understand it.\nLearn how to use the popular MongooseJS library to interface with Mongo\nWrite tests around Mongo queries to ensure your code is working. You can reuse these tests on your own personal projects!\nMaster the process of designing NoSQL schema\nGrasp the differences record associations and resource embedding\nUse the advanced features of Mongoose to save development time\nDevelop apps that are fast and responsive thanks to Mongo's speed and flexibility\nWork on either Windows or OSX\nMaster the integration of Mongo, Node, and Mocha in a modern development environment\nI've built the course that I would have wanted to take when I was learning MongoDB. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "This course is for anyone learning MongoDB in the Node JS environment"
      ]
    },
    {
      "title": "Laravel & PHP Mastery: Build 5 Real-World Projects",
      "url": "https://www.udemy.com/course/laravel-beginner-fundamentals/",
      "bio": "Master Laravel, PHP & full-stack skills by building 5 production-ready apps!",
      "objectives": [
        "Build Complex, Production-Ready Applications with Laravel from the Ground Up",
        "Master the Full PHP Language: Go from a Complete Beginner to Writing Clean, Modern, Object-Oriented PHP Code",
        "Architect and Implement Complex Database Structures, Relationships, and Advanced Queries with the Eloquent ORM",
        "Design and Build Professional RESTful APIs That Can Power Any Front-End or Mobile Application",
        "Implement Rock-Solid, Secure User Authentication and Authorization Systems with Laravel Sanctum, Gates, and Policies",
        "Create Dynamic, Interactive, Real-Time User Interfaces with Livewire and Alpine.js",
        "Master Advanced Laravel Features, Including Task Scheduling, Queues, Notifications, and Email Sending",
        "Handle Complex File Uploads, Storage, and Management with Ease",
        "Optimize Your Application's Performance with Advanced Caching Strategies",
        "Build Beautiful, Responsive UIs with Modern Front-End Tools like Tailwind CSS and Vite"
      ],
      "course_content": {
        "Introduction": [
          "Introduction, What You'll Learn and the Course Projects"
        ],
        "Setting Up": [
          "IMPORTANT: Before You Start!",
          "Windows Setup",
          "MacOS Setup",
          "Linux Setup",
          "Code Editor & Extensions"
        ],
        "Project #1 - Task List": [
          "Project #1 - Section Introduction",
          "Creating a Laravel Project",
          "Quick Overview of Laravel Directory Structure",
          "UPGRADE to LARAVEL 11 - IMPORTANT!",
          "All About Routing",
          "Blade Templates",
          "Blade Directives",
          "Layouts Using Template Inheritance",
          "Running a MySQL Database and Client Using Docker",
          "Connecting to the Database From Laravel",
          "Models and Migrations",
          "Model Factory and Seeder",
          "Model and Reading Data",
          "Forms and CSRF Protection",
          "Validating and Storing Data",
          "Sessions, Errors & Flash Messages",
          "Edit Form",
          "Keeping Old Values in the Form",
          "Reusability (Route Model Binding Form Requests, Mass Assignment)",
          "Deleting Data",
          "Reusing Blade Code - Subviews",
          "Adding Pagination",
          "Toggling Task State",
          "Adding Styling with Tailwind CSS",
          "Styling the Task Page",
          "Styling Forms",
          "Styling Flash Message & Using Alpine.js"
        ],
        "Project #2 - Book Reviews": [
          "Project #2 - Section Introduction",
          "UPGRADE to LARAVEL 11 - IMPORTANT!",
          "Creating the Book Review Project and Setting Up",
          "Defining the One to Many Relationship",
          "Factory & Seeder",
          "Querying & Associating Related Models",
          "Local Query Scopes",
          "Aggregations on Relations",
          "Highest Rated & Popular Books",
          "HEADS UP! Explaining the Confusion with \"Popular Books\" Feature!",
          "Getting Books with Recent Reviews",
          "Controllers & Resource Controllers",
          "Displaying the Book List",
          "Filter Books by Title - Adding the Form",
          "Popular or Highest Rated - the View",
          "Popular or Highest Rated - the Logic",
          "One Book Page",
          "Cache and Caching Queries",
          "Invalidating Cache",
          "Rating and Review Count on All Pages",
          "Blade Components - Star Rating Component",
          "Scoped Resource Controller - Adding a Review",
          "Rate Limiting"
        ],
        "Project #3 - Events Management App (REST API)": [
          "Project #3 - Section Introduction",
          "UPGRADE to LARAVEL 11 - IMPORTANT!",
          "Laravel 11: No api.php route file",
          "Creating the REST API Project",
          "Seeding Data for the REST API",
          "Postman REST Client Crash Course",
          "Storing Data and Validation",
          "Updating and Deleting Data",
          "API Resources - Controlling JSON Response",
          "Attendees and Pagination",
          "Optional Relation Loading",
          "Universal Relation Loading Trait",
          "Loading Attendee Relations",
          "Setting Up Authentication Using Sanctum",
          "Protecting Routes",
          "Automatically Adding Token in Postman Requests",
          "Revoking Tokens and Signing Out",
          "Laravel 11: Authorization changes",
          "Authorization with Gates",
          "Authorization with Policies",
          "Manual Authorization with Policies",
          "Reminding About Events - Custom Artisan Command",
          "Reminding About Events - Task Scheduling",
          "Reminding About Events - Notifications and Email Sending",
          "Reminding About Events - Queues",
          "Throttling the API"
        ],
        "Project #4 - Livewire Poll App": [
          "Project #4 - Section Introduction",
          "UPGRADE to LARAVEL 11 - IMPORTANT!",
          "Creating the Project and Setting Up Livewire",
          "Creating Models and Migrations for the Poll App",
          "Your First Livewire Component",
          "How Livewire Works?",
          "Actions in Livewire",
          "Editing Poll Options",
          "Creating a Poll",
          "Refactoring the Poll Storing Code",
          "Validation in Livewire",
          "Listing Polls Component",
          "Events - Communication Between Components",
          "Voting in Polls!"
        ],
        "Project #5 - Job Board": [
          "Project #5 - Section Introduction",
          "UPGRADE to LARAVEL 11 - IMPORTANT!",
          "Creating the Job Board Project and Job Model",
          "Adding Laravel Debugbar",
          "Setting Up Tailwind CSS using Vite (and Node)",
          "Layouts Using Components",
          "Jobs Page & Card Component",
          "Jobs Page: Tag Component & Job Info",
          "Job Page: Job Card & Link Button Components",
          "Breadcrumbs Navigation",
          "Filtering Jobs: Tailwind Form Plugin & Text Inputs",
          "Filtering Jobs: Form & Searching for Text in Job Posts",
          "Filtering Jobs: Min & Max Salary",
          "Filtering Jobs: Radio Button Filters (Select One Option of Many)",
          "Filtering Jobs: Radio Group Component",
          "Filtering Jobs: Configuring Labels and Talking About Arrays in PHP",
          "Filtering Jobs: Clearing the Input",
          "Refactor Time: Gradient Background, Styling Buttons, Adding Alpine.js",
          "Refactor Time: Plain Vanilla JavaScript to Alpine.js",
          "Refactor Time: Refactoring Filtering Backend Logic",
          "Employer: Model, Migration, Relations",
          "Employer: Factory & Seeder",
          "Employer: Searching By Employer Name",
          "Employer: Other Employer Jobs on the Job Page",
          "Authentication: The Controller",
          "Authentication: Sign-in Form",
          "Authentication: Sign-in Logic",
          "Authentication: Logging Out",
          "Applying for Jobs: Model, Factory, Relations & Migration",
          "Applying for Jobs: Controller, Routing and Application Form",
          "Applying for Jobs: The Logic",
          "Applying for Jobs: The Job Policy",
          "Applying for Jobs: Did I Already Apply?",
          "My Applications: Controller and View",
          "My Applications: Applicant Count, Average Asking Salary",
          "My Applications: Cancelling Applications",
          "File Uploads: Understanding File System & Configuring Disks",
          "File Uploads: Uploading Files",
          "Refactor Time: Displaying Input Errors",
          "Refactor Time: Label Component",
          "Refactor Time: Flash Errors",
          "Employer: Register as an Employer",
          "Employer: Middleware Checking for Permissions",
          "Employer: Adding Jobs Form",
          "Employer: Adding Jobs Logic",
          "Employer: Job List",
          "Employer: Editing Job Offer",
          "Employer: Job Policy",
          "Employer: Soft Deletes",
          "Employer: Soft Deletes - Querying for Trashed Records",
          "Where Are We Right Now?"
        ],
        "Appendix A - PHP Crash Course": [
          "Download the DIAGRAMS!",
          "How to Run PHP Programs",
          "First PHP Expressions",
          "Data Types",
          "Practical Data Types",
          "Conditionals - If Statement",
          "Loops - While Loop (Guess the Secret Game)",
          "Loops - For Loop (Rocket Launch Countdown!)",
          "Do...While Loop (Roll the Dice Game)",
          "Foreach Loop (Count the Items in the Basket)",
          "You Didn't Know the Switch Statement (Clothes Size Demo)!",
          "Match Expression [PHP 8.0+] (HTTP Error Codes Demo)",
          "Require/Include (Config File Demo)",
          "Basics of Functions",
          "Optional Function Arguments",
          "Types in Functions",
          "Variadic Function Arguments",
          "Anonymous Functions",
          "References",
          "Passing by Value and Passing by Reference",
          "Performance Test: Ref vs Value - Big Data Example. Is There a Difference?",
          "Variable Scope",
          "Null in PHP (How it Feels to Have Nothing)",
          "Union Types",
          "Named Function Arguments [PHP 8.0+] - Forget About the Order!",
          "Arrow Functions [PHP 7.4] - Single Expression Short Functions",
          "Pure Functions",
          "Higher-Order Functions",
          "Recursion - Functions Calling Themselves",
          "Generator Functions - For Memory Intensive Tasks",
          "So Many Ways to Write Strings",
          "String Accessing & Manipulation",
          "Searching Through Text and Regular Expressions",
          "Formatting Strings",
          "Advanced Stuff - Base64, Escaping, URL Encoding",
          "Integer, Floating Point, Formatting & Functions, Random Numbers, Min, Max",
          "Arrays #1 - Indexed, Associative, Multi-Dimensional, Sort, Filter, Map, Reduce",
          "Arrays #2 - Diff, Merge, Intersect, Values, Keys, Unpacking",
          "Classes in PHP",
          "Class Inheritance",
          "Class Members Visibility",
          "Static Class Members (Singleton Example)",
          "Interfaces (Payment Processors Example)",
          "Abstract Classes",
          "Payment Processors: Abstract Classes & Interfaces Overview",
          "Traits",
          "Final & Readonly Keywords",
          "Enums (Is It Weekend Yet?)"
        ]
      },
      "requirements": [
        "No prior PHP or Laravel experience is required. This course includes a complete \"PHP From Scratch\" module that will teach you everything you need to know. We will guide you every step of the way.",
        "A basic understanding of web development concepts (like HTML) is helpful, but not strictly necessary. We start from the very beginning."
      ],
      "description": "The PHP ecosystem is still one of the most important parts of the web, and Laravel has become the framework that most teams reach for. If you look at job postings or production apps, Laravel shows up everywhere. The problem is that most tutorials cover only small pieces of the puzzle - you end up with gaps, or you just copy code without understanding how everything fits together.\nThis course takes you through the entire process of building applications the way you’d actually do it on a real project. We start from the basics, and by the time you’re done you’ll have gone through the complete cycle of building the apps.\nYou won’t just watch me code - you’ll build five substantial projects that give you practice with the features and patterns developers really use:\nProjects you’ll create:\nTask List: a simple app to learn the MVC structure, CRUD, forms, and validation.\nBook Review System: a relational app with reviews, ratings, advanced queries, and caching.\nRESTful API: a backend service with secure endpoints, authentication, and rate limiting.\nLivewire Poll App: real-time UI updates with Livewire, no heavy front-end frameworks required.\nFull Job Board: a larger SaaS-style application with dashboards, filtering, file uploads, and advanced authentication.\nSkills you’ll develop along the way:\nSolid understanding of Laravel fundamentals and how to use advanced features when needed.\nWriting clean, modern PHP 8 code that follows best practices.\nDesigning and managing databases with migrations and Eloquent ORM.\nBuilding and securing REST APIs.\nCreating interactive user interfaces with Livewire, Alpine.js, and Tailwind CSS.\nBy the end of the course, you’ll have gone through the full application lifecycle more than once, so you’ll actually understand how things fit together. You’ll be comfortable working with Laravel and PHP in a modern workflow, and you’ll have five projects in your portfolio that show real, practical skills.",
      "target_audience": [
        "For aspiring developers who want to skip the years of trial-and-error and learn how to build professional web applications the right way.",
        "For anyone who wants to become a highly paid, in-demand Laravel & PHP developer.",
        "For backend developers who want to master the world's most popular web framework.",
        "For developers who are ready to build a portfolio of impressive projects that will land them their next job."
      ]
    },
    {
      "title": "Node.js API Masterclass With Express & MongoDB",
      "url": "https://www.udemy.com/course/nodejs-api-masterclass/",
      "bio": "Create a real world backend for a bootcamp directory app",
      "objectives": [
        "Real World Backend RESTful API For Bootcamp Directory App",
        "HTTP Fundamentals (Req/Res Cycle, Status Codes, etc)",
        "Advanced Mongoose Queries",
        "JWT/Cookie Authentication",
        "Express & Mongoose Middleware (Geocoding, Auth, Error Handling, etc)",
        "API Security (NoSQL injection, XSS protection, Rate Limiting)",
        "API Documentation & Deployment"
      ],
      "course_content": {
        "Welcome To The Course": [
          "Course Introduction",
          "A Look At The Project",
          "Optional Node.js Beginner Crash Course",
          "Environment Setup"
        ],
        "HTTP Intro - Headers, Body, Status Codes, etc": [
          "HTTP & the Node Http Module",
          "Installing Nodemon",
          "Responding With Data",
          "HTTP Status Codes",
          "Sending Data To The Server",
          "HTTP Methods & RESTful APIs"
        ],
        "Starting Our DevCamper Project": [
          "Project Specs & Resources",
          "Basic Express Server, dotenv & Git",
          "Creating Routes & Responses In Express",
          "Using The Express Router",
          "Creating Controller Methods",
          "Intro To Middleware",
          "Postman Environment & Collections"
        ],
        "Getting Started With MongoDB & Bootcamps Resource": [
          "MongoDB Atlas & Compass Setup",
          "Connecting To The Database With Mongoose",
          "Colors In The Console",
          "Creating Our First Model",
          "Create Bootcamp - POST",
          "Fetching Bootcamps - GET",
          "Updating & Deleting Bootcamps - PUT & DELETE"
        ],
        "Custom Error Handling & Mongoose Middleware": [
          "Error Handler Middleware",
          "Custom ErrorResponse Class",
          "Mongoose Error Handling [1]",
          "Mongoose Error Handling [2]",
          "Async/Await Middleware",
          "Mongoose Middleware & Slugify",
          "GeoJSON Location & Geocoder Hook - MapQuest API"
        ],
        "Mongoose Advanced Querying & Relationships": [
          "Database Seeder For Bootcamps",
          "Geospatial Query - Get Bootcamps Within Radius",
          "Advanced Filtering",
          "Select & Sorting",
          "Adding Pagination",
          "Course Model & Seeding",
          "Course Routes & Controller",
          "Populate, Virtuals & Cascade Delete",
          "Single Course & Add Course",
          "Update & Delete Course",
          "Aggregate - Calculating The Average Course Cost",
          "Photo Upload For Bootcamp",
          "Advanced Results Middleware"
        ],
        "Authentication, Users & Permissions - Part 1": [
          "User Model",
          "User Register & Encrypting Passwords",
          "Sign & Get JSON Web Token",
          "User Login",
          "Sending JWT In a Cookie",
          "Auth Protect Middleware",
          "Storing The Token In Postman",
          "Role Authorization"
        ],
        "Authentication, Users & Permissions - Part 2": [
          "Bootcamp & User Relationship",
          "Bootcamp Ownership",
          "Course Ownership",
          "Forgot Password - Generate Token",
          "Forgot Password - Send Email",
          "Reset Password",
          "Update User Details",
          "Admin Users CRUD"
        ],
        "Bootcamp Reviews & Ratings": [
          "Review Model & Get Reviews",
          "Get Single Review & Update Seeder",
          "Add Review For Bootcamp",
          "Aggregate - Calculate Average Rating",
          "Update & Delete Reviews"
        ],
        "API Security": [
          "Logout To Clear Token Cookie",
          "Prevent NoSQL Injection & Sanitize Data",
          "XSS Protection & Security Headers",
          "Rate Limiting, HPP & CORS"
        ]
      },
      "requirements": [
        "Modern JavaScript (ES6)",
        "Basic programming principles",
        "Basic knowledge of Node helps"
      ],
      "description": "This is a project based course where we build an extensive, in-depth backend API for DevCamper, a bootcamp directory API. We will start from scratch and end up with a professional deployed API with documentation. We will dive deep into Node, Express and MongoDB. Here is some of what you will learn in this course and project...\n\n\nHTTP Essentials\nPostman Client\nRESTful APIs\nExpress Framework\nRouting & Controller Methods\nMongoDB Atlas & Compass\nMongoose ODM\nAdvanced Query (Pagination, filter, etc)\nModels & Relationships\nMiddleware (Express & Mongoose)\nMongoDB Geospatial Index / GeoJSON\nGeocoding\nCustom Error Handling\nUser Roles & Permissions\nAggregation\nPhoto Upload\nAuthentication With JWT & Cookies\nEmailing Password Reset Tokens\nCustom Database Seeder Using JSON Files\nPassword & Token Hashing\nSecurity: NoSQL Injection, XSS, etc\nCreating Documentation\nDeployment With PM2, NGINX, SSL\nWeb development is changing. We used to render all of our views and templates on the server, but since the rise of frontend frameworks like React, Angular and Vue, we are now splitting projects up into backend and frontend, where the backend is doing all of the database interaction and serving JSON and the frontend is fetching that data and creating the user interface to interact with. This course will teach you the entire backend side of things so that you can build extensive APIs and then use whatever you want on the frontend.\nWe will do a lot more than just build a simple CRUD REST API like many other Node.js and Express tutorials. We will be implementing authentication, roles and permissions, password reset tokens, email functionality, geocoding and much more. This course teaches what it's like to be a real backend engineer.",
      "target_audience": [
        "People that want to learn backend web development with Node",
        "React/Vue/Angular Frontend devs that want to be full stack devs"
      ]
    },
    {
      "title": "Master RESTful APIs with Spring Boot 2 in 100 Steps",
      "url": "https://www.udemy.com/course/master-restful-apis-with-spring-boot/",
      "bio": "Learn RESTful APIs using Spring Boot 2 with a Hands-on Step by Step Approach by building a User Management Service!",
      "objectives": [
        "You will be able to develop RESTful web services with Spring Boot 2 from scratch.",
        "You will build a real time project using Spring Boot Data JPA & H2 database wherein same project will be leveraged for learning all the modules in an incremental manner.",
        "You will learn about using github to manage the incremental development process for SpringBoot applications both via git command line and using STS IDE.",
        "You will understand how to implement Exception Handling using Spring 5 latest ResponseStatusException package.",
        "You will be able to design and implement Global Exception handling and Validation for RESTful Services.",
        "You will understand and implement JPA OneToMany Association",
        "You will understand in depth of HATEOAS concepts and implement Self Linking and Relationship linking concepts using HATEOAS.",
        "You will implement internationalisation feature for RESTful Services.",
        "You will be able to understand and design filtering solutions for RESTful webservices with static, dynamic filtering methods and also using @JsonView.",
        "You will understand DTOs concept (Data Transfer Objects) and implement Entity to DTO conversion using ModelMapper and MapStruct Dependencies.",
        "You will understand the options available for RESTful APIs versioning and implement all the options available.",
        "You will learn about importance of API Documentation for RESTful APIs and implement SWAGGER integration with UserManagement Service which you will build as part of this course.",
        "You will understand and implement spring boot actuator and Spring Boot admin features for RESTful Services.",
        "You will learn about Micrometer and how it can export metrics to multiple monitoring tools. You will implement exporting metrics via JMX and also to a SAAS solution named AppOptics and create dashboards, verify timeseries data, live metrics in AppOptics."
      ],
      "course_content": {
        "Introduction": [
          "Step-01: Course Introduction",
          "Step-02: Introduction to RESTful API",
          "Step-03: Development Environment Setup"
        ],
        "SpringBoot - Manage Project via github and HelloWorld RESTful Service": [
          "Step-00: Best way to quickly complete this course",
          "Step-00: Github & HelloWorld Introduction",
          "Step-01: Create Spring Boot base project from start.spring.io",
          "Step-02: Introduction for managing Spring Boot projects via github",
          "Step-03: Github Base Setup",
          "Step04: Add GIT Repository to Spring Tool Suite IDE",
          "Step05: Create a Simple Hello World RESTful Service which returns a String",
          "Step-06: Create a Simple Hello World REST Service which returns a Bean (JSON)",
          "Step-07: GIT Commit & Push Hello World RESTful service changes to Github",
          "Connect with Me !!!"
        ],
        "SpringBoot - Build RESTful Webservices using Spring Data JPA": [
          "Step-00: Introduction to Build RESTful APIs with JPA",
          "Step-01: Usecase Introduction",
          "Step-02: Verify pom.xml for all Dependencies",
          "Step-03: Update application.properties required for JPA based RESTful Services",
          "Step-04-01: Create User Entity - Understand @Entity Annotation",
          "Step-04-02: Create User Entity - Understand @Table Annotation",
          "Step-04-03: Create User Entity - Define Variables, Getters & Setters",
          "Step-05: Understand and Implement changes related to H2 Database",
          "Step-06: Create User Repository - @Repository",
          "Step-07: Implement getAllUsers RESTful Service - @Service, @RestController",
          "Step-08: Test getAllUsers RESTful Service - Using REST Client POSTMAN",
          "Step-09: Implement createUser RESTful Service - @PostMapping",
          "Step-10: Implement getUserById RESTful Service - @GetMapping",
          "Step-11: Implement updateUserById RESTful service - @PutMapping",
          "Step-12: Implement deleteUserById RESTful Service - @DeleteMapping",
          "Step-13: Implement getUserByUsername RESTful Service - @GetMapping",
          "Step-14: GIT Commit, Push, Merge to Master and Push"
        ],
        "SpringBoot - Exception Handling with ResponseStatusException - Spring5 latest": [
          "Step-00: Introduction to Exception Handling using ResponseStatusException",
          "Step-00: Create git branch - local & remote",
          "Step-01: Implement ResponseStatusException handling for getUserById",
          "Step-02: Implement ResponseStatusException for updateUserById RESTful Service",
          "Step-03: Implement ResponseStatusException for deleteUserById RESTful Service",
          "Step-04: Implement ResponseStatusException for createUser RESTful Service",
          "Step-05: Implement HTTP Status code & Location Header for createUser Service",
          "Step-06: GIT Commit, Push, Merge to Master and Push",
          "Connect with Me !!!"
        ],
        "SpringBoot - Validations & Global Exception Handling": [
          "Step-00: Introduction to Spring Boot - Validations & Global Exception Handling",
          "Step-00: Create git branch for Validations & Global Exception Handling",
          "Step-01: Implement Bean Validation - @Valid",
          "Step-02: Implement custom Global Exception Handler - @ControllerAdvice",
          "Step-03: Implement HttpRequestMethodNotSupportedException in GEH",
          "Step-04: Implement UserNameNotFoundException in GEH - @ExceptionHandler",
          "Step-05: Path Variable Validation & ConstraintViolationException in GEH",
          "Step-06: Implement Global Exception Handling using @RestControllerAdvice",
          "Step-07: Switching between @ControllerAdvice and @RestControllerAdvice"
        ],
        "Spring Boot - JPA - OneToMany Association": [
          "Step-00: Need for JPA OneToMany for HATEOAS",
          "Step-00: Introduction to JPA OneToMany Association",
          "Step-01: Create git branch for JPA OneToMany Association",
          "Step-02: Create Order Entity and @ManyToOne Association",
          "Step-03: Update User entity with @OneToMany Association",
          "Step-04: Implement \"getAllOrders\" RESTful Service",
          "Step-05: Implement \"createOrder\" RESTful Service",
          "Step-06: Implement \"getOrderByOrderId\" RESTful Service",
          "Step-07: GIT Commit, Push, Merge to Master and Push"
        ],
        "Spring Boot - HATEOAS": [
          "Step-00: Introduction to Spring Boot - HATEOAS",
          "Step-00: Create git branch for HATEOAS",
          "Step-01: Add HATEOAS Dependency in pom.xml",
          "Step-02: Extend User and Order Entities with ResourceSupport",
          "Step-03: Create new User and Order Controllers for HATEOAS Implementation",
          "Step-04: Implement self link in getUserById Method",
          "Step-05: Implement self and relationship links in getAllUsers Method",
          "Step06: GIT commit code, push to remote, merge to master"
        ],
        "Spring Boot - Internationalization": [
          "Step-00: Introduction to Internationalization",
          "Step-00: Create git branch for Internationalization",
          "Step-01: Create LocaleResolver and ResourceBundleMessageSource Beans",
          "Step-02: Implement RESTful Service with Internationalization",
          "Step-03: GIT Commit, Push, Merge to Master and Push"
        ],
        "SpringBoot - Filtering": [
          "Step-01: Implement Static Filtering using @JsonIgnore and @JsonIgnoreProperties",
          "Step-02: Implement Dynamic Filtering using MappingJacksonValue",
          "Step-03: Implement Dynamic Filtering with MappingJacksonValue & @RequestParam",
          "Step-04: Dynamic Filtering - git Commit and Push code",
          "Step-05: Introduction to Filtering using @JsonView",
          "Step-06: Implement Filtering using @JsonView"
        ],
        "SpringBoot - DTOs - Data Transfer Objects": [
          "Step-01: ModelMapper Introduction",
          "Step-02: ModelMapper Configuration Setup",
          "Step-03: Implement Methods using ModelMapper",
          "Step-04: MapStruct Introduction",
          "Step-05: MapStruct Configuration Setup",
          "Step-06: MapStruct - Create UserMapper and Implement getAllUsers Method",
          "Step-07: MapStruct - Implement getUserById Method using MapStruct UserMapper"
        ]
      },
      "requirements": [
        "You should be familiar with basic java concepts"
      ],
      "description": "******* Course Overview *******\nWelcome to this Amazing course on Master RESTful API s using Spring Boot 2 in 100 Steps.  The below are the list of modules covered in this course.\n\n\nCourse Modules\n01. Introduction\n02. Manage Spring Boot Projects via Github & HelloWorld REST service\n03. Build RESTful APIs using Spring Data JPA and H2 Database\n04. Exception Handling with ResponseStatusException - Spring 5 Latest\n05. Validations & Global Exception Handling\n06. SpringBoot - JPA OneToMany Association\n07. SpringBoot - HATEOAS\n08. SpringBoot - Internationalisation\n09. SpringBoot - Filtering\n10. SpringBoot - DTOS - Data Transfer Objects\n11. SpringBoot - Versioning & Content Negotiation\n12. SpringBoot - Swagger Integration\n13. SpringBoot - Actuator & Admin\n14. SpringBoot - Actuator & Micrometer\n\n\nEach of my courses come with\nAmazing Hands-on Step By Step Learning Experiences\nReal Implementation Experience\nFriendly Support in the Q&A section\n30 Day \"No Questions Asked\" Money Back Guarantee!\n\n\n***************Section wise course details**********************\nModule 1: Introduction\nModule 01: Introduction\n01 Step 01: Course Introduction\n01 Step 02:  Introduction to RESTful API\n\n\nModule 02: Manage Spring Boot Projects via Github & HelloWorld REST service\n02 Step 00: Github & HelloWorld Introduction\n02 Step 01: Create Spring Boot base project from spring initializer\n02 Step 02: Introduction for managing Spring Boot projects via github\n02 Step 03: Github Base Setup\n02 Step 04: Add GIT Repository to Spring Tool Suite IDE\n02 Step 05: Create a Simple Hello World RESTful Service which returns a String\n02 Step 06: Create a Simple Hello World REST Service which returns a Bean (JSON)\n02 Step 07: GIT Commit & Push Hello World RESTful service changes to Github\n\n\nModule 03: Build RESTful APIs using Spring Data JPA and H2 Database\n03 Step 00: Introduction to Build RESTful APIs with JPA\n03 Step 01: Usecase Introduction\n03 Step 02: Verify pom.xml for all Dependencies\n03 Step 03: Update application.properties required for JPA based RESTful Services\n03 Step 04 01: Create User Entity - Understand @Entity Annotation\n03 Step 04 02: Create User Entity - Understand @Table Annotation\n03 Step 04 03: Create User Entity - Define Variables, Getters & Setters\n03 Step 05: Understand and Implement changes related to H2 Database\n03 Step 06: Create User Repository - @Repository\n03 Step 07: Implement getAllUsers RESTful Service - @Service, @RestController\n03 Step 08: Test getAllUsers RESTful Service - Using REST Client POSTMAN\n03 Step 09: Implement createUser RESTful Service - @PostMapping\n03 Step 10: Implement getUserById RESTful Service - @GetMapping\n03 Step 11: Implement updateUserById RESTful service - @PutMapping\n03 Step 12: Implement deleteUserById RESTful Service - @DeleteMapping\n03 Step 13: Implement getUserByUsername RESTful Service - @GetMapping\n03 Step 14: GIT Commit, Push, Merge to Master and Push\n\n\nModule 04: Exception Handling with ResponseStatusException - Spring 5 Latest\n04 Step 00: Introduction to Exception Handling using ResponseStatusException\n04 Step 00: Create git branch - local & remote\n04 Step 01: Implement ResponseStatusException handling for getUserById\n04 Step 02: Implement ResponseStatusException for updateUserById RESTful Service\n04 Step 03: Implement ResponseStatusException for deleteUserById RESTful Service\n04 Step 04: Implement ResponseStatusException for createUser RESTful Service\n04 Step 05: Implement HTTP Status code & Location Header for createUser Service\n04 Step 06: GIT Commit, Push, Merge to Master and Push\n\n\nModule 05: Validations & Global Exception Handling\n05 Step 00: Introduction to Spring Boot - Validations & Global Exception Handling\n05 Step 00: Create git branch for Validations & Global Exception Handling\n05 Step 01: Implement Bean Validation - @Valid\n05 Step 02: Implement custom Global Exception Handler - @ControllerAdvice\n05 Step 03: Implement HttpRequestMethodNotSupportedException in GEH\n05 Step 04: Implement UserNameNotFoundException in GEH - @ExceptionHandler\n05 Step 05: Path Variable Validation & ConstraintViolationException in GEH\n05 Step 06: Implement Global Exception Handling using @RestControllerAdvice\n05 Step 07: Switching between @ControllerAdvice and @RestControllerAdvice\n\n\nModule 06: SpringBoot - JPA OneToMany Association\n06 Step 00: Need for JPA OneToMany for HATEOAS\n06 Step 00: Introduction to JPA OneToMany Association\n06 Step 01: Create git branch for JPA OneToMany Association\n06 Step 02: Create Order Entity and @ManyToOne Association\n06 Step 03: Update User entity with @OneToMany Association\n06 Step 04: Implement \"getAllOrders\" RESTful Service\n06 Step 05: Implement \"createOrder\" RESTful Service\n06 Step 06: Implement \"getOrderByOrderId\" RESTful Service\n06 Step 07: GIT Commit, Push, Merge to Master and Push\n\n\nModule 07: SpringBoot - HATEOAS\n07 Step 00: Introduction to Spring Boot - HATEOAS\n07 Step 00: Create git branch for HATEOAS\n07 Step 01: Add HATEOAS Dependency in pom.xml\n07 Step 02: Extend User and Order Entities with ResourceSupport\n07 Step 03: Create new User and Order Controllers for HATEOAS Implementation\n07 Step 04: Implement self link in getUserById Method\n07 Step 05: Implement self and relationship links in getAllUsers Method\n07 Step 06: GIT commit code, push to remote, merge to master\n\n\nModule 08: SpringBoot - Internationalisation\n08 Step 00: Introduction to Internationalisation\n08 Step 00: Create git branch for Internationalisation\n08 Step 01: Create LocaleResolver and ResourceBundleMessageSource Beans\n08 Step 02: Implement RESTful Service with Internationalisation\n08 Step 03: GIT Commit, Push, Merge to Master and Push\n\n\nModule 09: SpringBoot - Filtering\n09 Step 01: Implement Static Filtering using @JsonIgnore and @JsonIgnoreProperties\n09 Step 02: Implement Dynamic Filtering using MappingJacksonValue\n09 Step 03: Implement Dynamic Filtering with MappingJacksonValue & @RequestParam\n09 Step 04: Dynamic Filtering - git Commit and Push code\n09 Step 05: Introduction to Filtering using @JsonView\n09 Step 06: Implement Filtering using @JsonView\n\n\nModule 10: SpringBoot - DTOS - Data Transfer Objects\n10 Step 01: ModelMapper Introduction\n10 Step 02: ModelMapper Configuration Setup\n10 Step 03: Implement Methods using ModelMapper\n10 Step 04: MapStruct Introduction\n10 Step 05: MapStruct Configuration Setup\n10 Step 06: MapStruct - Create UserMapper and Implement getAllUsers Method\n10 Step 07: MapStruct - Implement getUserById Method using MapStruct UserMapper\n\n\nModule 11: SpringBoot - Versioning & Content Negotiation\n11 Step 00: Versioning Introduction\n11 Step 01: Create DTO's required for Versioning Implementation\n11 Step 02: Implement URI Versioning\n11 Step 03: Implement Request Parameter Versioning\n11 Step 04: Implement Custom Header Versioning\n11 Step 05: Implement Media Type Versioning\n11 Step 06: Implement & Test Content Negotiation\n11 Step 07: GIT Commit Code & Push for Content Negotiation branch\nModule 12: SpringBoot - Swagger Integration\n12 Step 00: Introduction to Swagger\n12 Step 01: Add Springfox Dependencies to pom.xml and Create SwaggerConfig file\n12 Step 02: Adding API Info to modify header part of our documentation\n12 Step 03: Restrict scope of swagger document generation using API Base packages\n12 Step 04: Auto populate documentation for JSR-303 Validations\n12 Step 05: Adding Swagger Core Annotations to Model class\n12 Step 06: Adding Swagger Core Annotations to Controller classes\n\n\nModule 13: SpringBoot - Actuator & Admin\n13 Step 00: SpringBoot Actuator Introduction\n13 Step 01: Add Actuator Dependency in pom.xml\n13 Step 02: Expose all Actuator Endpoints and discuss about them\n13 Step 03: SpringBoot Admin Introduction\n13 Step 04: SpringBoot Admin - Base Setup\n13 Step 05: Point SpringBoot Client Application to SpringBoot Admin Server\n13 Step 06: Test the features in SpringBoot Admin Server\n\n\nModule 14: SpringBoot - Actuator & Micrometer\n14 Step 00: Introduction to SpringBoot Micrometer\n14 Step 01: Add Micrometer Dependency to pom.xml\n14 Step 02: Integrate with JMX and view metrics in JConsole\n14 Step 03: Integrate with AppOptics to export metrics and View metrics in AppOptic\n14 Step 04: Verify Metrics in AppOptics and Create Metrics Dashboards.",
      "target_audience": [
        "Anyone who wish to learn on how to design and develop Spring Boot RESTful APIs with Spring Boot from scratch.",
        "Anyone who want to learn Step by Step with a Hands-On Approach.",
        "Anyone who wants to learn how to build enterprise application backend layers with modern approach (RESTful APIs)"
      ]
    },
    {
      "title": "CSS - Basics to Adv for front end development",
      "url": "https://www.udemy.com/course/css-basics-to-advanced/",
      "bio": "Complete guide to create beautiful, responsive and user-friendly websites using CSS3. Learn CSS3 with hands-on projects",
      "objectives": [
        "Basic styling of web pages using CSS3",
        "Manipulate the display and position of HTML elements",
        "Understand the Box Model concept",
        "Introduction into Responsive Design",
        "Design mobile friendly web pages using CSS Media Queries",
        "Animate HTML elements using CSS animate property",
        "Web page Layouts - CSS Flex Box and CSS Grid"
      ],
      "course_content": {
        "CSS Introduction": [
          "CSS - Introduction",
          "CSS - How to use CSS?"
        ],
        "Basic Styling": [
          "CSS - Styling Text",
          "CSS - Adding Borders",
          "CSS - Margin and Padding",
          "CSS - Styling Lists",
          "CSS - Styling Links",
          "CSS - Styling Buttons",
          "CSS - Adding Icons"
        ],
        "Display and Position Properties": [
          "CSS - Working with Display Values",
          "CSS - Display value: Inline-Block",
          "CSS - Positioning HTML Elements Part-1",
          "CSS - Positioning HTML Elements Part-2",
          "CSS - Handling Content Overflow",
          "CSS - Floating HTML Elements"
        ],
        "Box Model and Shadows": [
          "CSS - Box Model",
          "CSS - Box Sizing",
          "CSS - Adding Shadows"
        ],
        "Combinators, Psudeo Classes and Elements": [
          "CSS - Combinators Part-1",
          "CSS - Combinators Part-2",
          "CSS - Pseudo Classes Part-1",
          "CSS - Pseudo Classes Part-2",
          "CSS - Pseudo Elements"
        ],
        "Backgrounds and Gradients": [
          "CSS - Adding Backgrounds",
          "CSS - Gradients",
          "CSS - Handling Text Overflow"
        ],
        "Practice Problems": [
          "CSS - Practice Problem-1: Create Google.com Look-Alike",
          "CSS - Practice Problem-1: Create Google.com Look-Alike Solution"
        ],
        "Responsive Design": [
          "CSS - Introduction to Responsive Web Design",
          "CSS - Viewport",
          "CSS - Dynamic Size",
          "CSS - Introduction to Media Queries",
          "CSS - Responsive Webpage Design using Media Queries"
        ],
        "Flex Layout": [
          "CSS - Flex Layout",
          "CSS - Flex Container Properties",
          "CSS - Align Flex Items",
          "CSS - Flex Item Properties",
          "CSS - Design Topbar using Flex",
          "CSS - Responsive Grid using Flex"
        ],
        "Effects and Animations": [
          "CSS - Transform Property",
          "CSS - Align Elements using Transform Property",
          "CSS - Transition Property",
          "CSS - Animation Property",
          "CSS - Flying Rocket Animation using Animation Property"
        ]
      },
      "requirements": [
        "Basic understanding of HTML5"
      ],
      "description": "UPDATE :  New Content Added\n25+ NEW video content added.\nNew Sections added on:\nResponsive Design\nFlexbox\nGrid Layouts\n\n\nCSS - short for Cascading Style Sheets - is a \"programming language\" you use to turn your raw HTML pages into real beautiful websites.\nIf you are new to web development but you have a little bit of knowledge of HTML and its tags and want to take the next step towards becoming a professional frontend web developer, then this is the right course for you.\nHere, we have covered everything right from basics to advanced concepts of CSS3. We have included all the properties in CSS + the newly introduced ones in CSS3 that will help shape the future of web development in the coming years. This course is designed bearing in mind that a beginner should be able to understand what is CSS and how it is used to turn a raw, basic, black & white HTML webpage structure into a beautiful web page. To make web pages interactive for users, you will also learn how to animate the various HTML elements.\nBy the end of this course, you will be able to design beautiful, user-friendly, and mobile-friendly websites from scratch, all on your own.\nAfter completion, we recommend checking out our Javascript, ES6, and React JS courses which are designed with the same simple approach to help you become a professional Frontend web developer.\nPS: More lectures will be uploaded soon.\n\n\nWho's teaching you in this course?\nI am a Computer Science graduate highly rated instructor with a rating of 4.3 and more than 200k students on Udemy, I have been part of the corporate circle since his college days. In his early days, I was part of a startup team delivering production grid android apps. Currently, I am a lead developer at EdYoda. I’m responsible for the entire front-end development & integration with the back-end. React, Python, Django is my areas of expertise. I have been delivering corporate training for Android, React, Javascript, Python & Django. I have eyes for details & that makes him suited for delivering a finished product. I’m a fitness freak & working out is his favorite thing to do in his spare time.\nI want everyone should enjoy learning and I have shared my knowledge that gonna be helpful for you.\n\n\nEnroll Now!! see you in class.\n\nHappy learning\nTeam Edyoda",
      "target_audience": [
        "Beginners who are new to Web Development",
        "Freshers who want to learn CSS3 from scratch",
        "Web Developers who want to brush up the concepts of CSS"
      ]
    },
    {
      "title": "The Complete PHP MYSQL Professional Course with 5 Projects",
      "url": "https://www.udemy.com/course/the-complete-php-mysql-professional-course/",
      "bio": "Learn PHP MYSQL by building 5 Projects including PHP Regular Expressions & CMS | Become a Full Stack Back-End Developer.",
      "objectives": [
        "All PHP Fundamentals and Building Blocks with practical implementation in Projects",
        "Form Validation with most Secure way using Regular Expressions",
        "Making web pages dynamic with the variety of PHP Techniques",
        "Employee Management System CRUD Application in PHP From Scartch",
        "Complete CMS ( Content Management System) with Admin-Panel",
        "Getting Started with Bootstrap 4 FrameWork from scratch without using any Bootstrap Template",
        "Using PHP Sessions in a more sophisticated way and pass information easily on different modules of Project",
        "Stunning Blog with Commenting functionality",
        "Powerful Web Forms which will be Free of Hack",
        "Build Professional CRUD",
        "CMS Based Projects",
        "Full Coding Exercises",
        "Login Logout Admin System",
        "Tips / Tricks",
        "Sending Email using PHP",
        "Bootstrap 4.2.1",
        "PDO",
        "URL Tracking",
        "Security Techniques on Public pages",
        "Font Awsome"
      ],
      "course_content": {
        "Course Promo Video": [
          "Course Promo Video",
          "Instructor Status | Important",
          "Using Possible Answers to Questions Section"
        ],
        "Building Blocks of PHP": [
          "Requirements overview",
          "XAMP Downloading and Installing",
          "Download XAMP",
          "XAMP Files and Solving Error",
          "Getting the Best Editor",
          "Document overview",
          "Variable",
          "Constants",
          "Strings",
          "Numbers",
          "Arrays",
          "Arrays Functions",
          "Array Functions"
        ],
        "Coding Exercises of Course": [
          "All Coding Exercises of Course"
        ],
        "Building Blocks of PHP Continue..": [
          "Inside Job",
          "If Statements",
          "Operators",
          "For Loop",
          "While Loops",
          "For-each Loops",
          "Switch Statements",
          "Branching",
          "User Define Functions",
          "Re-usability",
          "Static Variables",
          "Local Variables",
          "Global Variables",
          "Super Global Variables"
        ],
        "Super Global Post Variable": [
          "Form",
          "Form Another Working Example"
        ],
        "Regular Expressions": [
          "Regular Expressions PPT",
          "Regular Expressions Creation Part 1",
          "Regular Expressions Creation Part 2",
          "Best Practice"
        ],
        "Form Validation Pro": [
          "Form Validation Project Overview Part 1",
          "Form Validation Project Part 2",
          "Form Validation Project Part 3 Adding Constraints",
          "Form Validation Project Part 4 Finishing PHP",
          "Form Validation Project Part 5 Working with CSS",
          "For Sending Email",
          "Understanding Email",
          "Sending Email in PHP",
          "Form Validation Project Sending Email"
        ],
        "Dynamic Web Pages": [
          "URL",
          "Links",
          "Dynamic Web Pages Project Part 1",
          "Dynamic Web Pages Project Part 2",
          "Dynamic Web Pages Project Part 3",
          "Dynamic Web Pages Project Part 4"
        ],
        "Powerful Super Global Variables": [
          "Cookie",
          "Setting Cookie",
          "Un-Setting Cookie",
          "Session",
          "Server"
        ],
        "Employee Management Crud Application": [
          "What we are going to do",
          "Form Creation",
          "Creating Database",
          "Inserting Data into DataBase",
          "SQL Injection",
          "Inserting Completion",
          "View From DataBase",
          "Showing Data on Update Page",
          "Updating Data",
          "Deleting Record",
          "Search From DataBase"
        ]
      },
      "requirements": [
        "No Knowledge required of PHP. This course will teach students everything about PHP from Scratch",
        "Basic HTML",
        "PC of-course :)"
      ],
      "description": "Have you ever wonder why their are so many PHP Mysql Courses but they offer very little practical skills. Even though if you search on Udemy the longest course will only offer 1 big projects. Sometimes its difficult for beginners to understand the long project right after learning basics due to lack of practice.Furthermore, big courses just give presentation to projects they never ever let students see their actual content. For example the basic videos, Free starter content etc. However this course is Scam-Free course. Students can watch more than 2 hour of initial content free of cost to decide weather to buy this course or not.\nThis course is designed in more logical way from easy to complex modules step by step. Here is description of the course\nRoad Map:\nBuilding Blocks Fundamentals   5 Hour 30 mints of Content\n\n\nProjects:\nRegular Expressions 25 mints\nComplete Contact Form + Email 1 Hour of Content\nDynamic Web Pages (Directory Project)  1 Hour of Content\nCMS Based Employee Management CRUD  2 Hour + 30 minutes of Content\nCMS + Admin Panel with Stunning blog + FREE Bootstrap 4.2.1 12 Hour of Content\nThis course will focus on all the Fundamentals , Building blocks and  Advance Concepts of PHP in complete details which are essentials for beginners. In this Course students will build project after every section to see the real world representation of PHP.\nBonuses:\nGetting Started with Bootstrap 4 FrameWork from scratch without using any Bootstrap Template\nLatest Bootstrap 4.2.1 Essentials Practically in a Project\nUsing PHP Sessions in a more sophisticated way and pass information easily on different modules of Project\nFull Coding Exercises\nLogin Logout Admin System\nTips / Tricks\nCode Re-usability\nStrong Security Techniques on Public Pages\nPDO layer for Database Operations\nEnhancing UI UX in admin Panel so that the Admin can manage the different Components of CMS / Blog easily\nEnhancing UI UX in Public Panel so that the Public / Users can easily interact with  the different Functionalities of Blog easily.\nUsing PHP Sessions in a more sophisticated way and pass information easily on different modules of Project\nLogin Logout Admin System\nURL Tracking\nFont Awesome\nPHP 5.6 and 7 Supports\nAdmin Info Update\nThis course offers you a 30 Days Money Back Guarantee, in case if the course does not meet your expectations you can get a full re-fund immediately . Also i will answer all of your questions on top priority.\n\nNow if you want to learn PHP and start your professional career, Take this course now\n--------------------------------------------------------------------------------------------------------------------\nThis course is for complete beginners and for those who want to build projects in PHP.\n\n-----------------------------------------------------------------------",
      "target_audience": [
        "Complete Beginners",
        "PHP Aspirants",
        "Designers who want to Start Back-End Programming",
        "College Students"
      ]
    },
    {
      "title": "Node.js for Beginners - Become a Node js Developer + Project",
      "url": "https://www.udemy.com/course/nodejs-for-beginners-become-a-nodejs-developer/",
      "bio": "Build an Amazing CMS system - Using Express + MongoDB + Bootstrap - Handlebars + Authentication + AJAX + Deployment",
      "objectives": [
        "To build Amazing NodeJS applications like the CMS we build here using Express, MongoDB and more",
        "To deploy Nodejs Apps on the Cloud",
        "To create Login and Registration system using NodeJS",
        "To use Mongoose (ODM) - very similar to ORM",
        "To create custom events",
        "To import and export data",
        "To use the Express FrameWork",
        "To handle HTTP requests",
        "To deal with Files",
        "To use WebSockets - (Chat application)",
        "To use PassportJS a module to login to Facebook, Twitter, Google and more",
        "To use Template Engines like Handlebars",
        "And LOTS more......."
      ],
      "course_content": {
        "Introduction and first steps": [
          "Introduction",
          "Exercise files",
          "What is Node.js",
          "Installing NODE.js in a MAC",
          "Installing NODE.js in Windows"
        ],
        "Core Fundamentals": [
          "IDE's recommended to use",
          "The Global object",
          "The Process object",
          "Readline",
          "Custom Events",
          "Module",
          "Exporting",
          "Child Processes"
        ],
        "Core Fundamentals - Playing with the File System": [
          "Reading files",
          "Writing files",
          "UPDATED - Creating directories",
          "Removing directories",
          "Renaming directories"
        ],
        "Core Fundamentals - HTTP - NPM and More": [
          "HTTP native Requests",
          "Creating Web Servers",
          "Serving files",
          "HTTP and JSON data part 1",
          "HTTP and JSON data part 2",
          "HTTP & Post Data",
          "Intro to NPM",
          "AXIOS",
          "Server Automation Module"
        ],
        "The Express Framework": [
          "The Intro",
          "Routes",
          "Route Parameters",
          "Middlewares",
          "Submitting Post Data with Express"
        ],
        "The exciting World of Websockets - Small Chat App": [
          "Getting setup with BUILT-IN server in editor",
          "Intro and Connection",
          "Sending Form Data",
          "Broadcasting",
          "Client Side Data Data Handling",
          "Communication with all clients"
        ],
        "Database - How to use MongoDB": [
          "Database intro",
          "Installing MongoDB in Windows",
          "Installing MongoDB in a MAC",
          "Connecting to MongoDB using the MondoDB Client",
          "Connecting to MongoDB using an ODM - Mongoose",
          "Let's learn some Database Vocabulary",
          "MongoDB Client - Inserting Data",
          "The ObjectID",
          "MongoDB Client- Fetching",
          "MongoDB Client - Updating",
          "MongoDB Client Deleting",
          "PostMan Installation"
        ],
        "Database - How to use Mongoose - ODM": [
          "Mongoose - ODM - Setup",
          "Mongoose - creating a Model part 1",
          "Mongoose - creating a Model part 2 - Data insertion and Validation",
          "Mongoose - creating a Model part 3 - Using the Schema Object",
          "Setting up Express",
          "Creating Routes part 1",
          "Creating Routes part 2 - saving raw data",
          "Setting up our code to save POST data",
          "Saving POST data",
          "Fetching Data",
          "Updating Data with PATCH",
          "Updating Data with PUT",
          "Deleting Data"
        ],
        "Login and Registration": [
          "Intro and Modules Downloads",
          "Setting up Express Server and our Database",
          "Creating our User Model",
          "Registration part 1 - Creating our register route",
          "Registration part 2 - Adding our Body Parser",
          "Registration part 3- Saving the User",
          "Registration part 4- Let's Hash the Password",
          "Login part 1 - Setting up the Login route",
          "Login part 2 - Testing User Login"
        ],
        "CMS Project Section": [
          "Project directories setup",
          "Initializing our server",
          "Setting up Home page",
          "Dynamic page content and getting styles to work",
          "Including Partials",
          "Creating our Login and Registration Views",
          "Build home page views",
          "Admin Setup part 1 - Loading and using routes",
          "Admin Setup part 2 - Default layout",
          "Admin Setup part 3 - partials and links",
          "Admin Setup part 4 - Javascript files"
        ]
      },
      "requirements": [
        "Some Javascript is needed to learn NodeJs",
        "Some HTML is needed for this course"
      ],
      "description": "I don't know about you,but regular classes bore me, and that is why on this Node.js course we make it fun to learn LOTS of cool things. This course is meant for total beginners in the NodeJs world.\n\n\nThis is course is for you if..................\nYou are total beginner to NodeJs\nYou are looking for a better career\nYou are looking to UP your salary as developer\nYou have tried to learn NODE,js before and it was too hard - I make this EASY!\nYou are trying to get into the Angular World\nYou want to become a great Web Developer with a lot of success\nYou just need to make some serious income as developer\n\n\nWhat is NODEjs or Node.js ?\nFirst of all let me just say that Node.js is the most popular technology right now, and it's REPO website is the biggest in the WORLD, now let's begin......\nSome of us call it Node.js, NODE, or just NodeJs but they all mean the same thing. NodeJs is a runtime to use JavaScript on servers. A runtime acts like a middle-man and in this case NodeJs is helping us use Javascript to handle system processes, files and even databases. NodeJs is written in C++ which is a powerful high level programming language that does LOTS of cool things.\n\n\nMy approach\n\nI'm profesional but not boring\nI'm a regular person just like you - your mentor, teacher!\nI joke sometimes, so that you won't fall asleep (I know how that is)\nMy teaching method are Unorthodox - look it up :)\n\n\nMy goal\nOn the contrary on why other people teach, I do it to help people succeed in life and also because I love teaching. I feel successful when my students become successful. Our goal is to teach as many people as possible and at the same time having a blast.\n\n\nMy promise to you\nIf you give me your time, I will make this learning experience something you will not forget. This course was created to change lives with all the knowledge included.\nAll your questions will be answered in a timely manner\nI will not bore you\nI will make it fun\nYou will get LOTS of knowledge from this course\n\n\nCommonly Asked Questions.......................\nQuestion: Is NODE.js worth learning?\nWHAT? of course, Node.js is the hottest technology to learn right now. NodeJs jobs are some high in demand, there are not enough developers to fill them. As the matter of fact we get TONS of emails from recruiters asking for NODE.js developers.\nQ: Can I make Money know NODE.js?\nExcuse me? Money comes automatically once you have this skill. You walk by an ATM and money comes out just for you, JUST kidding :) . Really!  you do not have to worry about JOBS, or projects when you know NODE.js you can choose who you want to work with. This course will teach everything you need to know to start really making it happen for you, trust me. Of course you have to get yourself some a resume and show your skills to your future employers but that is why we are here, to help with the skills.\nYour $MONEY invested in this course will be multiplied over and over again. Udemy makes courses SUPER affordable for anyone. A course like this would cost thousands of dollars on the market place but here you can grab it for a fraction and with a 30 day no questions asked Guarantee.",
      "target_audience": [
        "If you are a TOTAL beginner for NodeJs you should take this course",
        "If you are looking for a better career you should take this course",
        "If you are looking to UP your salary as developer you should take this course",
        "If you have tried to learn NodeJS before and it was too hard - I make this EASY!",
        "If you are trying to get into the Angular World",
        "If you want to become a great Web Developer with a lot of success",
        "If you just need to make some serious income as a developer"
      ]
    },
    {
      "title": "The Complete Solidity Course - Blockchain - Zero to Expert",
      "url": "https://www.udemy.com/course/the-complete-solidity-course-blockchain-zero-to-expert/",
      "bio": "Master Solidity and Smart Contracts - Blockchain Development: 2022 - Programming & Ethereum - Code Along - DApplications",
      "objectives": [
        "Code along and become an advanced and confident Solidity developer from scratch",
        "Get interview-ready by understanding how Solidity and the EVM (Ethereum Virtual Machine) really works under the hood",
        "Solidity fundamentals: variables, if/else, operators, boolean logic, functions, arrays, modifiers, loops, strings, and more",
        "Public & Private visibility (correctly securing data), struct and enums, special global and blockchain variables, suffixes, and addresses",
        "The Ethereum Virtual Machine (EVM) and assembly (low level language), events and logging blockchain emissions, send vs transfer methods, scoping and more",
        "Object-oriented programming: constructor functions, contract and classes, interfaces, abstract contracts (virtual and override), inheritance, and hash tables",
        "Blockchain Functionality: modifier functions, cryptographic functions, fallback functions, and function overloading",
        "advanced Patterns and topics: the withdrawal pattern, restricted access, error handling",
        "Get support and make connections online with an active focused community with developers and mentors",
        "Professional Blockchain techniques working with the Ethereum network and Web3 for debugging, deployment, and compiling with Remix IDE Ethereum.",
        "How to problem solve and dig through documentations like a developer",
        "How to write code with templated models (abstract contracts) and clearly document your thought process",
        "Practice your skills with 30+ challenges and assignments (source code solutions included)"
      ],
      "course_content": {
        "First Steps - How To Succeed In This Course": [
          "What is a smart contract - Solidity",
          "Join our Online School (Developers and Mentors)",
          "Exercise: Meet the Community",
          "What is an IDE - Remix Ethereum",
          "Remix Ethereum - IDE Basics (How to use an IDE)",
          "How to Code Along with me throughout this Course",
          "Exercise - Get Familiar With the Remix Ethereum IDE",
          "What are comments in Solidity",
          "Why Comments are important!"
        ],
        "Introduction To Solidity (For Complete Beginner)": [
          "Solidity For Beginners - Welcome to your new journey!",
          "Copy & Paste Your First Smart Contract :)",
          "Compile & Deploy Your First Smart Contract",
          "Exercise - Recongifure A Solidity Smart Contract",
          "Solution - Reconfigure A Solidity Smart Contract",
          "Introduction To Pragma Solidity (Compiling Versions)",
          "How to understand Pragma Solidity",
          "Exercise - Instantiate Solidity",
          "Solution - Instantiate Solidity"
        ],
        "Learn Solidity - Basics I": [
          "General Introduction To Variables & Types",
          "Introduction To Booleans, Integers, & Strings",
          "Writing Solidity Variables",
          "Exercise - Write Solidity Variables",
          "Solution - Write Solidity Variables",
          "What Are Functions - In Solidity",
          "How To Write Functions in Solidity",
          "Scope - Functions and Variables in Solidity",
          "Exercise - Write Your First Smart Contract - Calculator",
          "Solution - Write Your First Smart Contract - Calculator",
          "Debug Assignment",
          "What is the Ethereum Virtual Machine (EVM)",
          "Exercise: Meet A Live Web3 Community and Decentralized Project"
        ],
        "Learn Solidity - Basics II (Conditional logic, Scope & Visibility)": [
          "Decision Making in Solidity",
          "How To Write If else statements in Solidity",
          "Exercise - Write an Airdrop If Statement in Solidity (Exercise with Solution)",
          "Visibility - Public Private Internal External - in Solidity",
          "Scope & State in Solidity",
          "Exercise - Strengthen Your Understanding Of Scope and State",
          "Solution - Strengthen Your Understanding Of Scope and State",
          "Visibility - Public Private Interal External - in Solidity II",
          "Visibility - Public Private Internal External - in Solidity III",
          "Operators in Solidity",
          "Arithmetic Operators in Solidity",
          "The Remainder Operator in Solidity",
          "How to calculate the Modulo Remainder - Trick",
          "Exercise - Arithmetic Operator Practice",
          "Solution - Arithmetic Operator Practice",
          "Comparison Opeartors in Solidity",
          "Exericse - Comparison Operators",
          "Solution - Comparison Opeartors",
          "Logical Operators in Solidity",
          "Exercise Logical Operators",
          "Solution - Logical Operators",
          "The Assignment Operator in Solidity",
          "Exercise - Final Solidity Operator Test",
          "Solution - Final Solidity Operator Test",
          "Assignment - Investigate Solidity And Make a Critical Assessment"
        ],
        "Learn Solidity - Basics III": [
          "How to improve your skills with this course",
          "Review - Modulo & Fun Math in Solidity",
          "The For Loop in Solidity",
          "Exercise - How to loop in Solidity",
          "Solution - How to loop in Solidity",
          "Strings in Solidity",
          "Memory Keyword in Solidity",
          "Bytes vs Strings in Solidity",
          "Bytes vs Strings in Solidity II",
          "Exercise - Writing Strings in Solidity",
          "Solution - Writing Strings in Solidity"
        ],
        "Structures & Libraries in Solidity": [
          "What are Constructors in Soliditiy",
          "Exercise - Build A Constructor in Soliditiy",
          "Solution - Build A Constructor in Solidity",
          "Arrays in Solidity - Pop Push and Length Methods",
          "Arrays in Solidity - Delete",
          "Exercise - Compact Array",
          "Solution - Compact Array",
          "What are Enums in Solidity",
          "Exercise - How To Write Enums",
          "Solution - How To Write Enums",
          "What are Structs in Solidity",
          "Exercise - Structs in Solidity",
          "Solution - Structs in Solidity",
          "Mapping in Solidity",
          "Exercise - Set Keys and Values",
          "Mapping & Struct Assignment",
          "Solution - Mapping & Struct Assignment",
          "Nested Mapping in Solidity",
          "Pairing Addresses Assignment"
        ],
        "Learn Solidity Basics IV (Conversions and Special Variables)": [
          "Bits and Uints - Conversion in Solidity",
          "Exercise - Bits & Bytes",
          "Solution - Bits & Bytes",
          "Ether Units and Denominations in Solidity",
          "Exercise - Assert Ether to Wei",
          "Solution - Assert Ether to Wei",
          "Exercise - Assert Time and Dates in Solidity",
          "Solution - Assert Time and Dates Suffix in Solidity",
          "Global variables in Solidity",
          "Global Variables in Solidity II",
          "Blockchain Variables",
          "Discussion - What is A Blockchain"
        ],
        "Learn Functions in Solidity": [
          "Overview on Functions in this Solidity Course",
          "What are Function Modifiers in Solidity",
          "How to write a Function Modifier in Solidity",
          "Exercise - Write a Function Modifier",
          "Solution - Write a Function Modifier",
          "The View Keyword in Solidity",
          "What does Pure mean in Solidity",
          "Exercise - View and Pure Functions",
          "Solution - View and Pure Functions",
          "Returning Multiple Datatypes with Functions in Solidity",
          "Destructuring and Multiple returns from Functions in Solidity",
          "Exercise - Destructuring and Multiple returns from Functions in Solidity",
          "The Fallback Function in Solidity I",
          "The Fallback Function in Solidity II",
          "The Fallback Function in Solidity III",
          "Exercise - Write a Fallback Function",
          "Function Overloading in Solidity",
          "Exercise - Write a Function Overload",
          "Solution - Write a Function Overload",
          "What are Cryptographic Functions",
          "Build A Random Generator Function",
          "Smart Contract Oracles",
          "Exercise - Cryptographic Oracle Contract",
          "Solution - Cryptographic Oracle Contract"
        ],
        "Cryptocurrency (Code - Along) & Smart Contracts - Fundamentals": [
          "Crypto Coin Solution",
          "Crypto Token - Smart Contract Setup",
          "Minting Function in Solidity",
          "Send Tokens Function in Solidity",
          "Review: ERC20 Contract Intro",
          "Deploy Your First Crypto Coin :)",
          "Crypto Tokens Assignment"
        ],
        "Solidity Patterns I - Cybersecurity": [
          "Obvious (but helpful) Advice - Take your time with new things",
          "Leveling up in Solidity",
          "Pop Quiz - Looping & Transactions in Solidity",
          "Solution - Pop Quiz - Looping & Transactions in Solidity",
          "Smart Contracts - Points of Failure",
          "Should Contracts be allowed to receive funds? (Thought Experiment)",
          "A Vulnerable Smart Contract",
          "How To Hack A Smart Contract (Malicious Constructor Trick)",
          "Coding In Terms of Higher Patterns",
          "Transfer Vs Send Method in Solidity",
          "The Withdrawal Pattern in Solidity",
          "Exercise - Write a Withdrawal Function",
          "Solution - How To Write a Withdrawal Function in Solidity",
          "Discussion - What is a DApp"
        ]
      },
      "requirements": [
        "No programming needed to get started. You will learn everything from the ground up."
      ],
      "description": "Solidity is the most popular blockchain language in the world designed to build DApplications (Smart Contracts). It powers Ethereum and there is an in-demand exponential growth of high-paying jobs all over the world which is changing the way we conduct business.\nLearning Solidity can be likened to learning web development languages years ago - You are very much ahead of the game starting today -and that's why you want to learn Solidity too. And you have come to the right place!\nWhy is this the right Solidity course for you?\nThis is the most complete Solidity focused course on Udemy. It's an all-in-one topic by topic focused approach that will take you from the very fundamentals of Solidity and programming, all the way to building complex DApplications.\nYou will learn Solidity from the very beginning, step-by-step. I will guide you through smart contracts and fun code along with examples, an important theory about how Solidity works behind the scenes, and compiling and deploying your own smart contracts from simple storage systems to live interactions with injected web3 and Uniswap.\nYou will also learn how to problem solve like a developer, how to build smart applications from scratch, the proper conventions for your code, how to debug code, and many other real-world skills that you will need on your blockchain developer job.\nAnd unlike other courses, this one actually contains beginner, intermediate, advanced, and even expert topics, so you don't have to buy any other course in order to master Solidity from the ground up!\nBut... You don't have to go into all these topics. This is a long course that focuses purely on Solidity, because, after all, it's \"The Complete Solidity Course\". It is designed to bring you a combination of courses all in one! But you can become a professional blockchain developer by watching only sections of the course. You can use this course as the lifetime reference guide for certain topics as you continue to build projects and learn more that you can always come back to anytime you wish to advance in a particular topic.\nBy the end of the course, you will have the knowledge and confidence that you need in order to ace your solidity blockchain job interviews and become a professional developer for smart contract and DApplications.\nWhy am I the right Solidity teacher for you?\nMy name is Clarian, I've worked as a head engineer for years and am fully passionate and dedicated to what I teach. I have worked and built with top SF Valley companies and blockchain from NEAR to Solana consulting. Problem-solving and building complex design projects is my love and my life. I am someone who is passionate and committed to building quality projects from the ground up.\nI have recently been spending my time building comprehensive training models with clear explanations to help others evolve and grow the blockchain space. This is the most clearly focused and in-depth solidity course that you will find on Udemy (and maybe the entire internet) that provides video code alongs, plenty of challenges, and exercises with solutions and discussions combined into one.\nI know how students learn Solidity and what they need in order to master it. And with that knowledge, I designed the ideal course curriculum. It's a focused approach on core fundamentals, multiple real world examples, advanced pattern techniques and hands on projects, that will take you from zero to professional and confident Solidity developer in a matter of weeks.\n\n\nWhat do we learn exactly in this course?\nBuild multiple complex Smart Contracts from scratch for your portfolio! In these projects, you will learn how to think and properly develop your ideas into written code including how to maximize your time by finding and reading documentation and best practices.\nMaster the Solidity fundamentals: variables, if/else, operators, boolean logic, functions, arrays, modifiers, loops, strings, and more\nLearn Solidity from the beginning: Public & Private visibility (correctly securing data), struct and enums, special global and blockchain variables, suffixes, and addresses.\nHow Solidity works behind the scenes: The Ethereum Virtual Machine (EVM) and assembly (low level language), events and logging blockchain emissions, send vs transfer methods, scoping and more.\nDeep dive into functions: modifier functions, cryptographic functions, fallback functions, and function overloading.\nDeep dive into object-oriented programming: constructor functions, contract and classes, interfaces, abstract contracts (virtual and override), inheritance, and hash tables from mapping to nested mapping (key for DApplication address tracking)\nGain a clear understandings of advanced patterns: the withdrawal pattern, restricted access, error handling and more. We will use this knowledge to build an Auction DApplication as well as plug into the live mainnet and access the Ethereum Blockchain Data via real world DApplications.\nLearn the Solidity techniques that are used by professional in blockchain: test network deployment, IDE, debugging and compiling.\nCheck out the course curriculum for an even more detailed overview of the content :)\n\n\nThis is what's also included in the package:\nConsistently updated content with video and downloadable code files you can reference whenever you want.\nClear explanations which come with exercises, solutions, and discussions\nAn online community of active developers and students is available for support and discussion.\nFree support in the course Q&A\n30+ Exercises to practice your new skills (solutions included)\n\n\nThis course is for you if...\n... you want to gain a clear and advanced understanding of Solidity\n... you have been trying to learn Solidity but: 1) still don't really understand Solidity, or 2) still don't feel confident to code smart contracts\n... you are interested in working on a blockchain project in the future\n... you already know Solidity and are looking for a course to clearly go over advanced topics. This course includes expert topics!\n... you want to get started with programming: Solidity is an awesome and very interesting first language!\nDoes any of the above sound good to you? If so, then whenever you're ready, start this new adventure today, and join me and thousands of other developers in the most focused Solidity course that you will ever need!\nThis solidity course is ideal for anyone searching for more info on the following: solidity - blockchain - Ethereum - blockchain developer - smart contract - Ethereum developer - solidity Ethereum - blockchain programming - Ethereum and solidity - Ethereum solidity. Plus, this course will be a great addition to anyone trying to build out their knowledge in the following areas:\nEthereum - smart Contracts - blockchain - Dapp - cryptocurrency",
      "target_audience": [
        "Take this course if want to gain a clear and advanced understanding of Solidity",
        "Take this course if you have been trying to learn Solidity but: 1) still don't really understand Solidity, or 2) still don't feel confident to code smart contracts",
        "Take this course if are interested in working on a blockchain project in the future",
        "Take this course if you already know Solidity and are looking for a course to clearly go over advanced topics. This course includes expert topics!",
        "Take this course if you want to get started with programming: Solidity is an awesome and very interesting first language!"
      ]
    },
    {
      "title": "The Result-Oriented Web Developer Course - BOOTCAMP 2025",
      "url": "https://www.udemy.com/course/result-oriented-web-developer-course/",
      "bio": "The Best Full Stack Web Development Bootcamp [For Absolute Beginners & Advanced Developers]. Major Projects. Complete",
      "objectives": [
        "Build 9 major projects from scratch. Portfolio-worthy projects",
        "Get a job as a junior web developer in IT company",
        "Master front-end development and learn how to build responsive websites",
        "Work as a freelance web developer",
        "Master back-end development with Node and MongoDB",
        "Learn how to write clean code",
        "Think like a Programmer"
      ],
      "course_content": {},
      "requirements": [
        "No pre-knowledge is required",
        "Have a computer with Internet",
        "Be ready to build big resume-worthy websites"
      ],
      "description": "This full stack web development bootcamp sets a NEW STANDARD in online courses.\n\n\nHere are 5 big reasons why:\n1.  This full stack web development bootcamp is and always will be 100% up-to-date. The biggest problem facing people who are looking for quality online courses is that it can be difficult to find one that’s actually up-to-date. This can be quite demotivating and annoying, especially for beginners. But our students can be sure that this course is always up-to-date, because we meticulously re-record our lessons to reflect the latest in web development.\n2. You will not find explanations of programming concepts so easy to understand in any other course on the Internet. We spend an enormous amount of time looking for the best way to explain complex concepts using simple terms, animations, illustrations, graphs, etc. Our method is always structured to begin by demonstrating theory on well-planned and animated slides before showing the theory in practice.\n3. By studying with us, you will be taught by professional online and offline bootcamp instructors. What's more, you will feel as if you are being taught one-on-one by a private instructor. Most people don’t have $10,000-$20,000 to spend on a coding bootcamp. But, fortunately, there is no need to. This full stack web developer course was developed by a team of professional online and offline bootcamp instructors.\n4. You can be 100% sure that every question you submit will be answered to your satisfaction by our instructors! Another all too common gripe about many online courses is that the instructors don’t respond to questions raised by their students in the Q&A section. However, You will never be alone because we understand how important it is to help beginners on their way to becoming web developers and getting their first job.\n5. You will be taught how to build major projects as though you are already working as a freelancer or as a web developer in an IT company. In this course you will learn how to build - from scratch - real, complex projects that can be added to your portfolio with pride. All projects teach you how to think like and develop the necessary skills of … A Programmer!\n\n\nYour success is PRIORITY #1 to us!\n\n\nFrom Udemy reviews:\n\"Absolute quality. I am learning these topics as a complete beginner, having/wanting/needing to change industries because of this pandemic. I knew I would want several resources so purchased multiple bootcamps to learn from. This one is of the absolute best! Not only the material is current, it is presented in an incredibly descriptive manner with plenty of visuals and instruction. I highly recommend this to anyone starting out in this field or coming back to learn the basics. Kudos.\" - Stephanie Quintana\n\n\n“… I've used all the \"big names\" in online courses, and this is the most comprehensive course I've taken. On other learning platforms, oftentimes you're only coding a portion of the site and I think you miss the \"big picture\". In this course, you build the projects completely from the ground up. And the instructors are incredibly responsive to all questions. Give these guys your money, they deserve it!” – Andrew S.\n\n\n“I did a lot of research until I ultimately decided on this course, and I'm very happy with the choice I made. I really love the way in which the lessons are taught by both demonstrating and allowing you to practice along. Any and all questions asked are answered in-depth and timeously, which I truly appreciate” – Ryan Griffiths\n\n\n-- WE GUARANTEE THAT --\n-- THERE IS NO WEB DEVELOPMENT BOOTCAMP LIKE THIS ON THE MARKET --\n\n\nReason #1: This course is taught by professional web development bootcamp instructors\nWe have 10+ years’ experience in software development and 6+ years’ experience conducting highly-effective web development bootcamps. Our students become web developers from scratch in the shortest possible time thanks to our unique teaching method.\n“The instructor has a talent for knowing what questions you have ... and makes the right thing clear at the right time. This is the mark of a great teacher. “– Bob Douglas, USA\n\n\nReason #2: This course sets a NEW STANDARD in online education\nWe spend lots of time developing strict methodology and premium, animated slides. Our teaching method completely distinguishes our courses from all others on the Internet.\nWhereas other instructors explain theory by coding-and-coding on a black screen, our teaching method flows like a well-illustrated book. First, all theory is explained through visuals and animations, showing you exactly what the code is actually doing. And then, when you have already gotten the concept, it is shown in practice.\n\n\n“Each video starts with awesome animation which explains the concept and …then reinforced with practical examples. You guys totally understand how a student thinks and you guys know how to teach, which is very rare and a God-gifted quality.” – Vivek, India\n\n\nReason #3: Throughout this bootcamp you will never be alone\nWe know how important it is to get timely and detailed answers from the instructor when you are learning web development. That’s why we are always ready to answer your questions. The success of our students is PRIORITY #1.\nWith other courses many instructors don’t answer at all or you could be waiting for 5-10 days to get an answer. We answer literally every question of every student within 24 hours.\n“Highly recommended! Straight to the point tutorials and concise, they always let you know what's best practice and what the smartest approach is. Big plus that they always answer questions as soon as they can! Their answers are always so detailed too, they take time to make sure they explain the answers well” – Kai W\n\n\nReason #4: All lessons are constantly updated\nWith this course you can be 100% sure that your video lectures are always up-to-date.  Many other courses contain lots of outdated information because web development is rapidly changing. Our bootcamp, however, is constantly updated to reflect the latest standards and changes in web development.\n\n\nReason #5: The course is completely project-based\nIt’s packed with 9 major real-world projects, in contrast to other courses that have projects that look nice to beginners but aren't real-world projects. And our projects are a perfect addition to your CV to impress your future employer.\n\n\n“Love this course! It feels that a great amount of effort has been put into this course, the teaching method is great as well as the slides and the projects. I have started it knowing only a little of basics, but now I feel that I have a whole picture of how it all works. Thank you, Vertex Academy, I've learned a lot and special thanks for quick and friendly replies to questions, you're the best” - Rena\n\n\nReason #6: This course is the fastest way to learn full stack web development\nThis bootcamp is so effective because of:\n1. Our unique teaching method\n2. The project-based approach\n3. Detailed and timely answers to all your questions\n\n\nReason #7: Learn technologies used by Google, Amazon, Netflix, etc.\nWe will lead you through every technology used by major IT companies step-by-step. The course is fully packed with 58 hours and counting.\nLet’s start this amazing journey together: from newbie to junior web developer!\n\n\n“This course, is exactly what I have been looking for, I have learnt so much already, I would recommend this course to anybody wishing to learn web development.” – Lorraine j Jones.\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nYOUR LEARNING PLAN:\nIn this course you will learn the following coding technologies and tools:\nHTML5\nCSS3\nEmmet\nPhotoshop\nFlexbox\nBootstrap 4\nBootstrap 5 - NEW!!!\nJavaScript (ES9, ES2018)\nAsynchronous JavaScript (callback, promise, async/await)\njQuery\nGit & GitHub\nThe Command Line\nNode.js\nExpress\nMongoDB\nMongoose\nREST\nAJAX\nAPI\nDeploying (GitHub, Heroku, etc.)\n\n\nThis course is logically divided into 3 STEPS:\nIn steps 1 & 2 you will learn front-end web development.\nIn step 3 you start learning back-end web development.\n\n\nSTEP 1: Front-end web development – From Absolute Beginner to Intermediate\nStudents begin with the basics of front-end web development and will come to understand the logic used by web developers. From there, they will go on to create four static websites in which interactivity will be applied in step two.\n· HTML5\n· CSS3\n· Emmet\n· Photoshop\n· FlexBox\n\n\nSTEP 2: Front-End Web Development – Upper Intermediate\nStudents will learn how to add interactivity to websites by learning Bootstrap, JavaScript and jQuery. Now, you will build four interactive websites and apps.\n· Bootstrap 5\n· JavaScript (ES9, ES2018)\n· jQuery\n· Git & GitHub\n\n\nSTEP 3: Back-End Web Development\nStudents learn effective communication between a server and a database. The complexity of the final project combines the tools and technologies previously covered.\n· The Command Line\n· Node.js\n· Express\n· Asynchronous JavaScript (callback, promise, async/await)\n· MongoDB\n· Mongoose\n· REST\n· AJAX\n· API\n· Deploying (GitHub, Heroku, etc.)\n\n\nNO RISK! You have a 30-day money-back guarantee, no questions asked.\nSo, what are you waiting for? Enroll in the course and start building your career in web development today!",
      "target_audience": [
        "Anyone who wants to become a web developer",
        "Students learning web development",
        "Absolute beginners & Advanced developers"
      ]
    },
    {
      "title": "The Modern JavaScript Bootcamp",
      "url": "https://www.udemy.com/course/modern-javascript/",
      "bio": "Learn JavaScript by building real-world apps. Includes 3 real-world projects, 80 programming challenges, and ES6/ES7!",
      "objectives": [
        "Learn JavaScript by building three real-world web applications",
        "Gain a deep understanding of how JavaScript works behind the scenes",
        "Explore the latest cutting-edge features from ES6 and ES7",
        "Test your skills and gain confidence by completing over 80 coding challenges",
        "Learn how to deploy your application to the web so you can share them with everyone",
        "Learn how to use Promises and Async/Await with asynchronous JavaScript",
        "Get more done by learning how to debug and fix your code when things go wrong",
        "Get access to a free 80 page PDF guide with lecture notes, code samples, and documentation links"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience is required to take this course. I’ll walk you through the entire process from scratch!",
        "All you need is a computer (Windows, macOS, or Linux) with an internet connection (Windows, macOS, or Linux)"
      ],
      "description": "Have you tried to learn JavaScript before?\nJavaScript is the most popular programming language out there, but that doesn’t mean it’s easy to learn. You end up wasting time on out-of-date courses and incomplete YouTube tutorials that talk about a JavaScript features without showing how to use them when building real-world applications.\nSound familiar?\nI built this course to teach you how to build and launch your own JavaScript web applications.\nThe Modern JavaScript Bootcamp starts from scratch and builds up your knowledge of the JavaScript language. Yes, you’ll learn all the features of the language, but you’ll also learn how to use those features together to create a complete application.\nThis comprehensive course covers the modern ES6 and ES7 JavaScript features used in the real world. You’ll gain an understanding of the latest cutting-edge language features.\nGetting experience writing code on your own is a big part of learning JavaScript. That’s why I’ve included over 80 challenges designed to get you writing code, adding app features, and solving a wide range of problems. These challenges will give you the skills and confidence needed to create your own web application.\nThere are no starter projects here. You’ll see what it takes to launch a JavaScript application, from the first line of code to the final deployed application.\nWho’s this course for?\n1. People who are brand new to JavaScript. You want to dive into the world of programming and learn JavaScript. This might be your first programming course, or maybe you’ve worked with other languages before. Either way, you’re ready for this bootcamp.\n2. People who currently use JavaScript but want a better sense of mastery over the language. You picked up little tricks and snippets of code because you needed to solve a problem. Now you’re ready to master JavaScript as well as explore the latest from ES6 and ES7.\nYou’ll learn JavaScript by doing, not watching.\nThis course is not about watching videos, it’s about writing code. From the start, you’ll be building out each project from scratch as well as completing over 80 challenges designed to test and reinforce what you’ve learned.\nDuring the class, you’ll build three JavaScript applications:\n1. The first app, a note-taking app, is our starter application. You’ll learn the fundamentals of JavaScript and see exactly what it takes to build a program that allows users to add, edit, delete, and save their notes.\n2. The second app, a to-do application, you’ll be building on your own. This will test your skills and ensure that you have the real-world experience and problem-solving skills that are essential for writing JavaScript code.\n3. The last app, a hangman word game, is used to explore the world of asynchronous JavaScript. You’ll learn how to set up applications that rely on data from third-party services that can offer up dynamic, real-time information such as the user’s current location.\nStay current in an ever changing world.\nThe world of JavaScript is always changing, and that’s why I work to keep this course as up-to-date as possible. You can join knowing you’ll be learning the fundamentals of the language as well as the new language features that keep coming out.\nThis course uses the latest language features from ES6 and ES7.\nEverything you need comes in one easy-to-use package.\nThere’s no need to worry if you’re learning the right skills to land that JavaScript job or launch that JavaScript app. I’ve mapped out everything you need to know in an interactive, easy-to-follow package designed to get you up and running in a couple of weeks.\nBy the end, you’ll be able to build and launch your own applications.\nThere’s no better time to learn JavaScript.\nYou’ve made a smart choice, because JavaScript is the most popular programming language out there. This is no exaggeration. This popularity and growth means more jobs and opportunities than ever before.\nJavaScript powers the web. That means every company out there uses JavaScript, and the demand for JavaScript developers is only increasing. Companies from Google and Apple to Udemy itself all use JavaScript extensively.\nJavaScript doesn’t stop with the web. It has quickly become a universal programming language capable of anything. JavaScript can be used to create desktop apps, server-side applications, native iOS/Android applications, and so much more. This course is your ticket into that ecosystem.\nGet access to fast support if you get stuck.\nThere’s nothing worse than getting stuck ten hours into a course and not getting the help you need to continue. Getting stuck is part of the learning process. That’s why I’m here to answer every single question that comes my way.\nI’ll work with you to get you unstuck and back on track. It’s one of the reasons students love taking my courses. Don’t take my word for it. Check out the student reviews below.\n“This is the absolute best course I've taken on Udemy. Andrew is amazing at explaining things concisely, and the flow of the course is perfect. He doesn't skip over anything and he doesn't over-explain anything. On top of all that, he responds to questions so quickly that you won't be stuck at any point.\" - Tanya Gamarian\n\"The lessons are of high quality and even more important, he actually takes time to answer your questions!\" - Thomas Vercamer\nI guarantee that this is the most up-to-date and engaging JavaScript course available, and it comes with a Udemy 30-day money-back guarantee.\nI can’t wait to see you on the inside!\n- Andrew",
      "target_audience": [
        "Learning JavaScript for the first time? Already using JavaScript and want to master the language? This course is for you!",
        "This course if for anyone who wants to use JavaScript to launch an application, switch careers, or freelance as a JavaScript developer."
      ]
    },
    {
      "title": "HTML & CSS - Certification Course for Beginners",
      "url": "https://www.udemy.com/course/html-css-certification-course-for-beginners/",
      "bio": "Lean the Foundations of HTML & CSS to Create Fully Customized, Mobile Responsive Web Pages",
      "objectives": [
        "The Structure of an HTML Page",
        "Core HTML Tags",
        "HTML Spacing",
        "HTML Text Formatting & Decoration",
        "HTML Lists (Ordered, Unordered)",
        "HTML Image Insertion",
        "HTML Embedding Videos",
        "Absolute vs. Relative File Referrencing",
        "Link Creation, Anchor Tags, Tables",
        "Table Background Images",
        "Form Tags and Attributes - Buttons, Input Areas, Select Menus",
        "Parts of a CSS Rule",
        "CSS - Classes, Spans, Divisions",
        "CSS Text Properties, Margins, & Padding",
        "CSS Borders, Backgrounds, & Transparency",
        "CSS Positioning - Relative, Absolute, Fixed, Float, Clear",
        "CSS Z-Index, Styling Links, Tables",
        "Responsive Web Page Design using CSS"
      ],
      "course_content": {
        "HTML Development": [
          "Introduction to HTML",
          "Basic Structure of a Web Page",
          "HTML Head Tags",
          "HTML Body Tag",
          "HTML Paragraph Spacing",
          "HTML Line Breaks",
          "HTML Non-Breaking Space",
          "HTML Header Tags",
          "HTML Text Formatting and Decoration",
          "HTML Inline Text Formatting",
          "HTML Unordered Lists",
          "HTML Ordered Lists",
          "HTML Image Insertion",
          "HTML Embedding Videos",
          "HTML Absolute vs. Relative File Referencing",
          "HTML Link Creation",
          "HTML Anchor Tags",
          "HTML Tables",
          "HTML Nested Tables",
          "HTML Merging Cells",
          "HTML Text Wrapping",
          "HTML Table Background Image",
          "HTML Cell Alignment",
          "HTML - Introduction to Forms",
          "HTML Form Tags and Attributes",
          "HTML Forms - Post vs Get",
          "HTML Forms - Input Text Fields",
          "HTML Forms - Select Menus",
          "HTML Forms - Check Boxes and Radio Buttons",
          "HTML Forms - Text Areas and Buttons",
          "HTML Iframes",
          "HTML Project - Introduction",
          "HTML Project - Header",
          "HTML Project - Callout",
          "HTML Project - Image Insertion",
          "HTML Project - Text Insertion",
          "HTML Project - Links and Form",
          "HTML Project - Tabular Data",
          "HTML Project - Footer"
        ],
        "CSS Development": [
          "Introduction to CSS",
          "Parts of a CSS Rule",
          "Types of CSS Rules",
          "CSS - Color Names and Codes",
          "CSS Classes and Spans",
          "CSS Divisions - DIVs",
          "CSS IDs",
          "CSS Margins",
          "CSS Padding",
          "CSS Text Properties",
          "CSS Font Properties",
          "CSS Borders",
          "CSS Backgrounds",
          "CSS Transparency",
          "CSS Text on Top of Images",
          "CSS Width and Height Properties",
          "CSS Display Properties",
          "CSS Static Positioning",
          "CSS Relative Positioning",
          "CSS Absolute Positioning",
          "CSS Fixed Positioning",
          "CSS Float Property",
          "CSS Clear Property",
          "CSS Z-Index",
          "CSS Styling Links",
          "CSS Tables",
          "CSS Project - Introduction",
          "CSS Project - CSS Rules",
          "CSS Project - Navigation Rules",
          "CSS Project - Responsive CSS",
          "CSS Project - Page Elements"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to the HTML & CSS – Certification Course for Beginners\n\nThis two part series provides an in-depth look at the fundamentals of coding in HTML and CSS. We start with exploring HTML Development using some of the most commonly used tags and attributes. Students will learn the composition of an HTML file, and some of the essential components. Students will work with HTML Spacing, Text Formatting, Lists, Images, Embedding Videos, Link Creation, Tables, and Forms. We also include a hands-on project, that helps solidify the concepts we explore in the course.\n\nAfter the HTML Section, students will dive into CSS to fully customize the look of their web pages. We provide an extensive overview of CSS attributes, components, and positioning. This includes:\nParts of a CSS Rule\nCSS Divisions\nCSS IDs\nColor Codes\nApplying Borders, Backgrounds, and Styling Images\nCSS Positioning, including Static, Relative, Absolute, and Fixed\nCSS Z-Indexing, Styling Links, and Styling Tables.\nThrough a hands-on project, students will also build a fully customized, responsive website using both HTML5 and CSS3.\nWhat you'll learn - Overview:\nThe Structure of an HTML Page\nCore HTML Tags\nHTML Spacing\nHTML Text Formatting & Decoration\nHTML Lists (Ordered, Unordered)\nHTML Image Insertion\nHTML Embedding Videos\nAbsolute vs. Relative File Referrencing\nLink Creation, Anchor Tags, Tables\nTable Background Images\nForm Tags and Attributes - Buttons, Input Areas, Select Menus\nParts of a CSS Rule\nCSS - Classes, Spans, Divisions\nCSS Text Properties, Margins, & Padding\nCSS Borders, Backgrounds, & Transparency\nCSS Positioning - Relative, Absolute, Fixed, Float, Clear\nCSS Z-Index, Styling Links, Tables\nResponsive Web Page Design using CSS\nIf you are serious about taking your coding skills to the next level, enrol in this course today!",
      "target_audience": [
        "Beginner Web Developers who want to learn to Code in HTML & CSS",
        "Students interested in building Customized Mobile Responsive Web Pages"
      ]
    },
    {
      "title": "CSS Crash Course For Beginners",
      "url": "https://www.udemy.com/course/css-crash-course-for-beginners-g/",
      "bio": "Learn CSS With Practical Demonstrations",
      "objectives": [
        "Introduction to CSS concepts",
        "Practical demonstrations of CSS concepts",
        "Write CSS Scripts And Understanding Concepts",
        "Practically Getting Started With CSS Styles, CSS Fonts",
        "Introduction To CSS Syntax And CSS Background",
        "Introduction To CSS Inclusion In HTML"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Knowledge",
        "Basic HTML Knowledge"
      ],
      "description": "Learn CSS Crash Course\nEver wonder how the latest website designs are made? Cascading Style Sheets (CSS) are the main coding files used to layout a website and its design. CSS 3 is the latest in styling standards, and it brings several new properties and declarations you can use to make your website design more easily created. CSS is currently the only standard in website design that plugs directly into your HTML, even the latest HTML 5 standards. With CSS 3 and HTML 5, you can create the latest interactive pages for your website viewers.\nThis course shows you how to create CSS classes from a beginner's level. It starts off with basic HTML declarations, properties, values, and how to include a CSS style sheet with your HTML code. For those of you who are new to CSS and HTML, we show you step-by-step how to create a CSS file and include it in your HTML code, even if you use a cloud server for your hosting.\nWe show you how to position your elements, layout your elements relative to your documents, and style your HTML using predefined CSS values. We introduce you to the common CSS styling that you'll need when you start off designing your pages. If you want to get to know CSS and website design, this course is meant for you, and it can be used by anyone who hasn't even seen one line of CSS code yet. We focus on the latest CSS 3 and HTML 5 standards, so you get the latest when coding your website pages instead of focusing on older code.\nThere are no prerequisites. Anyone Can join this course. It is recommended though that individual have some basic computer programming knowledge.\n\n\nCourse Topics\n\n\nIntroduction to CSS\nCSS Syntax\nHTML 5 IN CSS\nCSS Styling Text\nCSS Page Backgrounds\nCSS Animation\n\nThank you see you inside the course",
      "target_audience": [
        "For People New to CSS",
        "For CSS Beginners",
        "For People Who want to learn CSS Fundamentals and later Transition into Web Designing"
      ]
    },
    {
      "title": "Django Masterclass : Build 9 Real World Django Projects",
      "url": "https://www.udemy.com/course/django-course/",
      "bio": "Learn Django from scratch, build an E-commerce store, web based PDF generators, APIs using Python & Django",
      "objectives": [
        "Learn Django From Scratch & Gain Essential Skills To Apply For Junior Django Developer Positions",
        "Learn Django Right From the Basics Like Creating A Django Project, Understanding Models, Making Migrations, Running Django Application On Local Server",
        "Learn How To Build Web Applications Using Django & Python",
        "Learn How To Perform Authentication & Authorisation In Your Django Web Applications",
        "Build A Full-Fledged E-commerce App With Add To Cart & Checkout Functionality, Utilise Local Storage To Save Cart Data",
        "Build A Dynamic Web Based Crawler Using Django To Crawl Webpage Links",
        "Build REST-APIs Using Django Rest Framework",
        "Build A Web Based PDF CV Generator Using Django To Automate PDF Generations From Dynamic User Data",
        "Build A Fully Functional Macro Nutrient & Calorie Tracker Using Django & Chart JS To Track & Visualise Daily Macronutrient & Calorie Consumption",
        "Learn How To Customise Admin Panel In Django",
        "Learn How To Create Models, Views & Templates In Django",
        "Learn How To Configure URL Patters & Add Namespacing To Apps",
        "Learn How To Use Mobile Responsive Templates By Integrating Django & Bootstrap",
        "Learn How To Handle Form Submission POST Requests & Save Data To Database",
        "Learn How To Integrate JavaScript & Django To Store Data In Browser's Local Storage",
        "Learn How To Add Advanced Features Like Pagination & Search",
        "Learn How To Create Dynamic Charts Using Chart JS & Integrate With Django For Data Visualisation"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Introduction To Django": [
          "Introduction To Backend Frameworks",
          "Introduction To Django"
        ],
        "Installation & Setup Instructions For Windows": [
          "Installing Python On Windows",
          "Installing VS Code On Windows",
          "Creating A Virtual Environment On Windows & Installing Django",
          "Creating A Django Project On Windows"
        ],
        "Installation & Setup Instructions For Mac": [
          "Installing Python On Mac",
          "Installing VS Code On Mac",
          "Creating A Virtual Environment & Installing Django On A Mac",
          "Creating A Django Project On Mac"
        ],
        "Project 1: Food Menu App : Setting Up A Django Project": [
          "Significance Of Project Files",
          "Running Django Project On Local Server"
        ],
        "Views & URL Patterns In Django": [
          "Creating A Django App",
          "Significance Of View File",
          "Creating A View In Django",
          "Connecting A View To URL Pattern",
          "How Django URL Patterns Work Internally",
          "Writing Another View"
        ],
        "Database & Models In Django": [
          "Database In Django",
          "How Data Is Stored In A Database",
          "Models In Django",
          "Creating A Model",
          "SQLite Viewer",
          "How To Store Data In Database",
          "Creating Objects Using Interactive Shell",
          "Django Admin Panel",
          "Retrieving Objects",
          "Reading From Database"
        ],
        "Templates": [
          "What Are Templates",
          "Creating & Rendering A Template",
          "Passing Context To Templates",
          "Creating The Detail View",
          "Completing The Detail View",
          "Django Template Language",
          "Removing Hardcoded URLs",
          "NameSpacing"
        ],
        "Static Files & Site Design": [
          "Static Files",
          "Introduction To Static files",
          "Using Tailwind CSS",
          "Base Templates",
          "Adding Image Fields",
          "Styling The Index Page",
          "Designing The Detail Page"
        ],
        "Forms & CRUD Operations In Django": [
          "Creating A Model Form",
          "Rendering Form",
          "Submitting Form",
          "Adding Base Template To Form",
          "Edit Functionality Part 1",
          "Edit Functionality Part 2",
          "Delete Functionality"
        ]
      },
      "requirements": [
        "Must be familiar with the basics of Python"
      ],
      "description": "Django Masterclass : Build 9 Real World Django Projects\nHere Is What You Get By Enrolling In This Course:\nWord-By-Word Explanation: In the entire course, I explain each line of code, without skipping a single line of code.\nAwesome Quality Content: Over 39+ hours of HD Videos.\nWell Structured & Easy To Learn: Course has been specially designed to make it easy for the students to learn Django starting from a basic level and gradually moving up to advance concepts.\n24 X 7 Support: I  will always be there to guide you in your journey to become a Django expert.\n\n\nHere Is Everything You Will Learn In This Complete Course:\nIn this hands-on course, you will learn how to build complex web applications from scratch using Django.\nThe course will teach you Django, right from scratch from a very basic level and will gradually move towards advanced topics like authentication.\nThe entire course is divided into 17 major sections.\nHere is a brief description of what you will learn in each section of the course:\nSection 1: Introduction and installing required software.\nIn this section we will learn what Django is and why it is used. We will also install the tools you will need to start making Django web apps.\nSection 2: Setting up Django project:\nIn this section we will learn about setting up the Django project, using the development server.\nSection 3: Views & URL patterns in Django.\nWe learn about what the MVT (model-view-template) architecture by starting off by creating views in Django, we will also learn what URL patters are and how they help us to setup routes for our website.\nSection 4: Database & Models:\nThis section covers content about how to create models in Django and how models help us to create database tables.\nSection 5: Templates:\nIn this section will learn about templates in Django and how we can pass data from the database to Django templates.\nSection 6: Static Files & Site design:\nThis section will teach you how to use static content in your site such as static images, JavaScript etc and how to use these static elements to style up your web-page.\nSection 7: Forms.\nEvery Django app needs to submit data to the back-end, this section covers how to create forms in Django which allow us to perform basic CRUD operations i.e. create, read, update & delete.\nSection 8: Authentication in Django:\nEvery web-app needs to make sure that it provides a registration and login feature, in this section we learn exactly how to authenticate users on our site and log them in.\nWe will also learn how to password-protect certain webpages in Django.\nSection 9: Django signals, Class based views in Django:\nThis section covers Django signals and class based views in Django, which is an alternative to creating function based views.\nSection 10: Primary & Foreign Keys in Django\nIn this section, you’ll master how Django manages relationships between database tables. We’ll cover:\nWhat Primary Keys (PKs) are and why they’re essential.\nHow to define and use Foreign Keys (FKs) to link models.\nOne-to-many and many-to-many relationships in Django.\nWriting queries that take advantage of these relationships.\nBy the end, you’ll confidently structure relational databases in Django.\nSection 11: Databases & Models In Depth\nHere, we’ll go beyond the basics and truly understand Django’s ORM and model layer:\nHow MVT architecture works in Django\nAdvanced model fields and options.\nHow to configure PostgreSQL database with Django apps.\nLearn how migrations work behind the scenes.\nUsing Meta options to control behaviour of models.\nCreating and managing custom model methods.\nUnderstanding model inheritance.\nBest practices for designing scalable models.\nThis section ensures you can design, query, and optimize Django models like a professional.\nSection 12: Middleware In Django\nIn this section, we’ll explore how Django processes requests and responses behind the scenes:\nWhat middleware is and why it’s important.\nBuilt-in middleware (security, authentication, sessions, etc.).\nWriting your own custom middleware step by step.\nReal use cases: logging, security headers, request throttling.\nUnderstanding the request–response lifecycle in Django.\nBy the end, you’ll know how to extend Django’s core functionality with your own middleware.\nSection 13: Pagination & Caching\nPerformance and usability are critical in modern web apps. In this section, you’ll learn:\nImplementing pagination in Django views and templates.\nStyling pagination controls for a better user experience.\nUnderstanding caching and why it’s vital for performance.\nDifferent caching strategies: per-view, template fragment, and low-level caching.\nThis section equips you to build Django apps that load fast and handle large datasets smoothly.\nSection 14: REST APIs\nIn this section we will learn Django Rest Framework which helps us to create a REST API using Django for any Django web application.\nSection 15: Pagination, Search & User permissions.\nEvery modern web app needs advanced features like pagination, & search. We learn how to paginate out webpages and how to add search functionality to our webpages in Django. We also learn how to add user permissions to our Django models so that only a certain set of users on our app have access to certain models.\nSection 16: Building an E-commerce site.\nThis section will cover everything you need to know to build a fully functional E-commerce website. Right form listing products, searching them, adding them to the cart, and checkout we implement each and every feature from scratch.\nSection 17: Admin Panel Customisation.\nA good web-app has a good admin panel, in this section we will learn how to customise the admin panel for our E-commerce site to make it better to track and manage our orders.\nSection 18: Building A Web Based CV Generator.\nIn this section we will build a tool which automatically generates a CV in a PDF format from user submitted data. This app will help users to collect their data which they want on their resume and will dynamically generate a CV for them which is automatically downloaded to their computer.\nSection 19: Building a Web Based Link Scraper.\nWe will build a web based utility tool which will automatically scrape all the links present on the given webpage and will generate a report out of it in terms on the link name and address. This app will accept a webpage URL from the end-user and will then scrape the given webpage for links, store all the link related information in the back-end and will display it to the user as well.\nSection 20: Building a Social Media App.\nWe will build a web based social media app with a full fledged authentication system with reset and forgot password functionality. The app will also include features like commenting and liking a post by other users.\nSection 21: Building an Advanced Expense Tracker.\nIn this section we build an advanced expense tracker web application which allows users to create, read, update and delete expenses across multiple categories and then calculates the statistical data such as past month, week and year expenses spread across categories. We also visually represent these expenses in charts using CharJS and also learn how data from Django backed database could be loaded into dynamic JavaScript charts.\nSection 22: Building a Real-Time Chat App.\nIn this section we build a Real-TIme chat application using Django Channels and WebSockets. By default Django uses HTTP protocol to make synchronous requests, but Django also supports asynchronous requests as well which are required to real time and multi client communication. In this section we explore the asynchronous capabilities of Django and build a multi-client chat application in which multiple users could connect to and send messages to a chat room.\nSection 23: Building a Multi-Vendor Digital Marketplace App.\nIn this section we build an app which allows vendors/sellers to sell digital products to their customers. A customer can buy a product by making an online payment using Stripe as a payment gateway and download the digital product only after a successful payment. A vendor/seller will have the ability to create digital products, list them on marketplace and sell them. Along with it the seller will also be provided a dashboard which provides sales statistics such as the annual, monthly and weekly sales for the products listed. In this section you will learn how to implement features like adding a paywall to restrict access to a product, how to integrate stripe payment gateway to make payments, how to create sales dashboard to display statistical sales data in numeric as well as graphical format.\n\n\nAfter completing this course, you will be able to do the following:\n1. Build advanced Django apps with features like authentication, search and pagination.\n2. Build REST APIs using Django Rest Framework.\n3. Build a fully functional E-commerce website with features like add-to-cart, search, checkout.\n4. Fully customise admin panels for any Django web-app.\n5. Build advanced tools and web applications like PDF generators and web-crawlers.\n6. Build a social media app which allows you to post images, like and comment on them.\n7. Build an advanced financial tool like an expense tracker and represent data in terms of chart.\n8. Build a real-time chat app using Django Channels and async requests.\n9. Build a multi-vendor marketplace with advanced paywall features and statistical sales dashboards.\n\n\nSo let's begin the journey of becoming an expert in Django.\nIn addition to the Udemy 30-day money back guarantee, you  have my personal guarantee that you will love what you learn in this  course. If you ever have any questions please feel free to message me  directly and I will do my best to get back to you as soon as  possible!\n\n\n\n\nTake yourself one step closer towards becoming a professional Django developer!\nJoin the journey.\nSincerely,\nAshutosh Pawar",
      "target_audience": [
        "Beginner level Python developers or students who want to build real world projects / web applications using Django"
      ]
    },
    {
      "title": "Build an app with ASPNET Core and Angular from scratch",
      "url": "https://www.udemy.com/course/build-an-app-with-aspnet-core-and-angular-from-scratch/",
      "bio": "A practical example of how to build an application with ASP.NET Core API and Angular from start to finish",
      "objectives": [
        "Learn how to build a web application from start to publishing using .Net 8, Entity Framework Core and Angular (v18)",
        "Students who complete this course will have a practical understanding of Angular and ASPNET Core",
        "Understand how to structure an Angular application using best practices",
        "Learn how to integrate 3rd party components into the Angular application",
        "Use Visual Studio code effectively to improve workflow",
        "Use AutoMapper",
        "Implement drag and drop photo upload integrating into a cloud platform",
        "Implement a private messaging system",
        "Implement filtering, sorting and paging of data",
        "Display notifications in Angular",
        "Implement Authentication using JWT Authentication tokens",
        "Handling errors in the API and the SPA",
        "Persist data using Entity Framework Core",
        "Real time notifications and presence using SignalR"
      ],
      "course_content": {},
      "requirements": [
        "Hello world experience in ASPNET Core and Angular",
        "A passion for wanting to learn how to build a fully functional Web Application"
      ],
      "description": "This course has been remastered and completely updated for .Net 9.0 and Angular 20!\nHave you learnt the basics of ASP.NET Core and Angular?  Not sure where to go next?  This course should be able to help with that.  In this course we start from nothing and incrementally build up our API and Angular front end until we have a fully functional Web Application that we then publish to Azure\nThese are 2 of the hottest frameworks right now for the 'back-end' (Microsoft's ASP.NET Core) and the 'front-end' (Google's Angular) and are well worth spending the time to learn.\nIn this course we build a complete application from start to finish and every line of code is demonstrated and explained.\n\nThis course is right up to date as at June 2025 using .Net 9.0 and Angular 20 and as these frameworks evolve, this course will evolve with it.\nRead some of the great reviews of the course:\nJim says \"The absolute best course for building an API in .Net core and working with Angular!\"\nDaniyal says: \"This is a complete project based course from start to finish with real world experience using technologies that are currently in demand in the market. People interested in learning latest technologies should consider this course.\"\nHere are some of the things you will learn about in this course:\nSetting up the developer environment\nCreating the ASP.NET Core WebAPI and the Angular app using the DotNet CLI and the Angular CLI\nAdding a Client side login and register function to our Angular application\nAdding 3rd party components to add some pizzazz to the app\nAdding routing to the Angular application and securing routes.\nUsing extension methods in .Net\nBuilding a great looking UI using Tailwind4 and DaisyUI\nAdding Photo Upload functionality as well as a cool looking gallery in Angular\nAngular Template forms and Reactive forms and validation\nPaging, Sorting and Filtering\nAdding a Private Messaging system to the app\nPublishing the application to Azure free of charge\nUsing SignalR for real time presence and live messaging between users\nMany more things as well\nTools you need for this course\nIn this course all the lessons are demonstrated using Visual Studio Code, a free (and fantastic) cross platform code editor.   You can of course use any code editor you like and any Operating system you like... as long as it's Windows, Linux or Mac\n\nIs this course for you?\nThis course is very practical, about 90%+ of the lessons will involve you coding along with me on this project.  If you are the type of person who gets the most out of learning by doing, then this course is definitely for you.\n\nOn this course we will build an example Dating Application, completely from scratch using the DotNet CLI and the Angular CLI to help us get started.  All you will need to get started is a computer with your favourite operating system, and a passion for learning how to build an application using ASP.NET Core and Angular.",
      "target_audience": [
        "Beginners to ASPNET Core and Angular who want to learn practical usage of these frameworks to build a compelling and functional application",
        "Students who like to learn by doing rather than learning by theory"
      ]
    },
    {
      "title": "C# Console and Windows Forms Development w/ Entity Framework",
      "url": "https://www.udemy.com/course/c-console-and-windows-forms-development-with-linq-adonet/",
      "bio": "C# | .NET Core | Console Programming | Windows Forms | Data-driven development | OOP | GitHub | SQL | Entity Framework",
      "objectives": [
        "Understand how to Create and run Console Applications",
        "Understand how to Create and run Windows Forms Applications",
        "Understand Basic C# Syntax - blocks of code, curly braces, comments",
        "Understand how to use string interpolation, concatenation and general manipulation",
        "Understand Variables and Objects",
        "Understand how to use C# operators for math and logic tasks",
        "Understand Windows Forms Visual Elements and Controls",
        "Understand different data types, when they are used and how they behave.",
        "Understand Methods and their return types",
        "Understand how to build Classes",
        "Understand how to create Windows Forms and how to manipulate them (Open, Close, Hide, etc)",
        "Understand how to pass data between forms",
        "Understand how to connect Windows Forms applications to a database",
        "Understand how to write LINQ queries.",
        "Understand how to connect to and upload a project to GitHub",
        "Understand how to use Entity Framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Programming?",
          "What are C# and .NET?",
          "Best practices"
        ],
        "Development Environment Setup": [
          "Section Overview",
          "IMPORTANT - .NET 8/9 Version",
          "Install Visual Studio 2022 Community Edition",
          "Visual Studio 2022 Community Edition Tour",
          "Install Visual Studio 2026 (Insiders Edition)",
          "Introduction to Visual Studio Code and .NET SDK",
          "Install Visual Studio Code and .NET SDK",
          "Visual Studio Code Tour"
        ],
        "Basic C# Syntax": [
          "Section Overview",
          "Understanding C# Syntax and principles",
          "Top level statements",
          "Producing output to users",
          "Understanding datatypes and variables",
          "Using variables - Part 1",
          "Using variables - Part 2",
          "Getting Started with Initializing Variables in C#",
          "Receiving input from users",
          "Coding Exercise: Completing a full program",
          "Section Review",
          "Section Source Code"
        ],
        "Introducing GitHub": [
          "Introduction to GitHub",
          "Create GitHub Account",
          "Commit and push code to GitHub (Visual Studio)",
          "Commit and push code to GitHub (Visual Studio Code)",
          "Next Steps"
        ],
        "Debugging and Troubleshooting Techniques": [
          "Section Overview",
          "Improve Existing Program",
          "Explore Syntax Errors",
          "Explore Logic Errors",
          "Using Breakpoints",
          "Using Variable Watch",
          "Debugging a Buggy Utility Library",
          "Section Review",
          "Section Source Code"
        ],
        "Arithmetic, Logical and Assignment Operators": [
          "Section Overview",
          "Arithmetic Operators",
          "Basic Math Operators",
          "Logic operators",
          "Basic Logic Operations",
          "Assignment Operators",
          "Basic Assignment Operations",
          "Code Review and GitHub Commit",
          "Section Review",
          "Section Source Code"
        ],
        "Conditional Statements": [
          "Section Overview",
          "Why use Conditional Statements",
          "Simple If Statements",
          "If...Else If...Else Statements",
          "Complex Conditions with AND and OR",
          "Ternary operators",
          "Switch Statements",
          "Understanding Variable Scope",
          "Coding Exercise - Functional Calculator",
          "Code Review and GitHub Commit",
          "Section Review",
          "Section Source Code"
        ],
        "Repetition Statements": [
          "Section Overview",
          "Why use Repetition Statements?",
          "For Loops",
          "While Loops",
          "Do...While Loops",
          "Important Theory and Keywords",
          "Coding Exercise - Enhancing the Calculator",
          "Code Review and GitHub Commit",
          "Section Review",
          "Section Source Code"
        ],
        "Error and Exception Handling": [
          "Section Overview",
          "What Are Exceptions?",
          "Introducing the try..catch",
          "Using the try...catch block",
          "Coding Exercise - Add Exception Handling to the Calculator - Part 1",
          "Coding Exercise - Add Exception Handling to the Calculator - Part 2",
          "Code Review and GitHub Commit",
          "Section Review",
          "Section Source Code"
        ],
        "String and DateTime Manipulation": [
          "Section Overview",
          "Why are strings so special?",
          "String Initializations and Uses - Best Practices and Techniques",
          "String Manipulation Methods",
          "Understanding Date and Time Types",
          "Explore DateTime Manipulations",
          "Explore DateTimeOffset and TimeZones",
          "Exploring DateOnly and TimeOnly",
          "DateTime Comparisons (Logic)",
          "Coding Exercise - User Information Collection",
          "Code Review and GitHub Commit",
          "Section Review",
          "Section Source Code"
        ]
      },
      "requirements": [
        "A Computer",
        "Internet",
        "Willingness to Learn"
      ],
      "description": "Overview\nIn this course, you will learn C# programming for desktop applications. These lessons assume no prior knowledge of programming or the C# language, and will have you up and running in no time. By the end of this course, you will have enough knowledge to build a functional Windows Forms Application, connected to a Microsoft SQL Server Database, with all your program code and changes being tracked on GitHub.\nThis course will equip you to be an employable .NET Developer job in any organization.\nThis journey will have you becoming proficient in\nVisual Studio Interface and Shortcuts\nConsole Application Development with C# (.NET 6/7/8)\nUnderstand C# Syntax\nUnderstand Datatypes and Variables\nUnderstand Sequence, Decision and Repetition Control Structures\nUnderstand String Manipulation\nUnderstand Date and Time Manipulation\nUnderstand Object Oriented Programming, Classes and Objects\nUnderstand Visual Studio 2022\nUnderstand Debugging Techniques\nDevelop Console Applications\nData Driven Graphical User Interface Applications using Windows Forms\nManaging Databases with SQL Server Management Studio\nDeveloping User and Roles Management Interfaces and functions\nUnderstand LINQ and Data Queries with C# Syntax\nSetup Login and User Management Functionality\nUsing Static Utility Classes for cleaner code\nDeveloping Multi-Document Interface (MDI) Applications\nApplying Object Oriented Programming with C#\nAdding a Visual Studio Project to Source Control\nWhy Learn C# Language\nC# is the most versatile programming language in .NET Framework and .NET Core. Not only can you build Windows client applications, but you can also use C# to build Web and mobile apps.\nC# can be used to build:\nWindows client applications using Windows Forms, WPF and UWP.\nWeb applications with ASP.NET and ASP.NET Core.\nNative iOS and Android mobile apps using MAUI.\nLibraries, components, and console applications\nCloud and Azure apps\nBlock chain apps\nNot only is C# language supported and maintained by Microsoft, but it also has a strong community support. More than 5 million developers use C# language. .NET Core and C# compiler are open source and the adoption is growing in open source community.\nContent and Overview\nThis course is very beginner friendly and chock full of development tips. This huge course offers premium content, smartly broken up to highlight a set of related activities based on each module. We will also look at troubleshooting and debugging errors as we go along; implementing best practices; writing efficient logic and understanding why developers do things the way they do. Your knowledge will grow, step by step, throughout the course and you will be challenged to be the best you can be.\nBy the time you have finished the course you will have moved around in Visual Studio and examined logic and syntax errors so much, that it will be second nature for you when working in the .NET environment. This will put your new learned skills into practical use and impress your boss and coworkers.\nThe course is complete with working files hosted on GitHub, with the inclusion of some files to make it easier for you to replicate the code being demonstrated. You will be able to work alongside the author as you work through each lecture and will receive a verifiable certificate of completion upon finishing the course.\nClicking the Take This Course button could be the best step you could take towards quickly increasing your income and marketability! Also, remember that if you don't think the course is worth what you spent, you have a full 30 days to get a no questions asked refund!\n\n\nIt's time to take action! This deal will not be available forever!\nSee you in the course!",
      "target_audience": [
        "Anyone wanting to learn LINQ",
        "Anyone wanting to learn .NET Programming with C#",
        "Anyone wanting to learn Desktop Development with Windows Forms"
      ]
    },
    {
      "title": "[LEGACY] Advanced React Component Patterns",
      "url": "https://www.udemy.com/course/the-complete-guide-to-advanced-react-patterns/",
      "bio": "Build reusable React components without relying on if statements or more props! Use hooks & trusted advanced patterns!",
      "objectives": [
        "Understand why design patterns are important and not just relying on if statements and more props",
        "You will no longer be or feel like a Junior/Intermediate React Developer",
        "Learn by mimicking real world examples by leveraging the popular Medium clap",
        "Understand custom hooks deeply. How they work and their invocation order",
        "Understand and avoid pitfalls with custom hooks and refs",
        "Leverage the compound component pattern to centralise logic within a single parent",
        "Understand these patterns explained as to a 5-year old - with detailed illustrations and guides",
        "Hate or love CSS, you'll learn to build components whose CSS/styles may be extended as willed",
        "Rely on the inversion of control to users of your component via the control props pattern",
        "Build relevant custom hooks you could re-use in your day-to-day work",
        "Evaluate multiple export strategies/API for your reusable components",
        "Bless your component users with ease via prop getters and prop collections",
        "Embrace state initializers for setting and resetting internal state within your components",
        "Master inversion of control via the state reducer pattern",
        "Compare and choose what React pattern is best for your component API"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started with Advanced Patterns",
          "(Bonus) PDF:Advanced React Patterns in the Real World: Lessons from OS Libraries",
          "Why Advanced React Patterns",
          "Design Patterns and React",
          "The Medium Clap"
        ],
        "The Medium Clap: Real-world Component for Studying Advanced React Patterns": [
          "Why build the medium clap?",
          "Setting up your local environment",
          "How the demo showcase works",
          "Building and styling the medium clap",
          "Handling user interactivity",
          "Higher order components recap",
          "Beginning to animate the clap",
          "Creating and updating the animation timeline",
          "Resolving wrong animated scale",
          "Animating the clap count",
          "Animating the total count",
          "Creating animated bursts!"
        ],
        "Custom Hooks: The first Foundational Pattern": [
          "(Bonus) New to hooks?",
          "Introduction to Custom Hooks",
          "Building an animation custom hook",
          "Why reusability fails - important!",
          "Custom hooks and refs",
          "When is my hook invoked?"
        ],
        "The Compound Components Pattern": [
          "Compound components in plain approachable language",
          "Why compound components?",
          "How to implement the pattern",
          "Refactor to Compound components",
          "Alternative export strategy",
          "Exposing state via a callback",
          "Invoking the useEffect callback only after mount!"
        ],
        "Patterns for Crafting Reusable Styles": [
          "Introduction to reusable styles",
          "Extending styles via a style prop",
          "Extending styles via a className prop"
        ],
        "The Control Props Pattern": [
          "The Problem to be solved",
          "What is control props?",
          "Implementing the pattern",
          "Practical usage of control props"
        ],
        "Custom Hooks: A Deeper Look at the Foundational Pattern": [
          "Introduction",
          "useDOMRef",
          "useClapState",
          "useEffectAfterMount",
          "A practical and fun usage"
        ],
        "The Props Collection Pattern": [
          "An alternative export strategy",
          "What are props collections?",
          "Implementing props collections",
          "Accessibility and props collections"
        ],
        "The Props Getters Pattern": [
          "What are props getters",
          "From collections to getters",
          "Use cases for prop getters"
        ],
        "The State Initialiser Pattern": [
          "What are state initializers?",
          "First pattern requirement",
          "Handling resets",
          "Handling reset side effects",
          "How usePrevious works"
        ]
      },
      "requirements": [
        "You are NOT an absolute React beginner",
        "You already know how to build simple React component",
        "You have a basic understanding of how hooks work at least useState & useEffect"
      ],
      "description": "=======================================================================\nTHIS COURSE IS NO LONGER UPDATED AND IS TAUGHT WITH AN OLDER VERSION OF REACT\n=======================================================================\nHey! hey! You've found a one-of-a-kind resource that teaches advanced React patterns in plain, approachable language with patterns geared towards building truly reusable components.\n\n\nMake no mistake, thousands of engineers have learned React, but much fewer have mastered the art of building truly reusable components. Components that leverage trusted, proven and battle-tested patterns to make sure you're building production-ready, reusable components. This is the goal of this course. To set you apart as one of the few engineers who've mastered this!\n\n\nDid you previously attempt learning advanced React patterns? Did they seem too difficult? Were they poorly taught in your opinion? Well, look no more. In this course, I'll walk you step-by-step and you'll be taught the ins and outs of advanced React patterns in such simple terms and methodology, you'll be surprised how the course makes such a difficult subject easy to grasp.\n\n\nBy the end of this course, you'll have learned patterns that'll set you apart and understand them enough to teach them yourself! You'll be impressive on your next React interview, gain the respect of your colleagues, impress your boss, but more importantly, you'll be proud of what you'd have accomplished afterwards.\n\n\nWe'll start from the ground-up, touch every important aspect of advanced react patterns and do so with real-world examples. No boring hello world apps here! We'll build a replica of the popular Medium clap component and lesson by lesson cover use cases (and edge cases) by implementing these advanced React patterns.\n\n\nHere's what sets this course apart:\nYou will not find another Udemy course focused extensively on advanced react component patterns! Go, do a search, you'll find none! Patterns geared towards component reusability.\nThis course doesn't waste your time. While it is well explained, you won't get a course of 24hours you struggle to complete. It's a focused course you can finish in a weekend and arm yourself for life with knowledge.\nIf you search the web, you'd find resources that promise to teach Advanced React Patterns, but none does it in the simple, approachable fashion this course employs. None.\nThis course is taught by a Senior Frontend Engineer who's actually worked with these patterns. I've spent hours toying with these patterns. In fact, chapters were dedicated to the subject in my last published book!\nSearching videos can be hard. So, this course provides resources you can always refer to. An actual accompanying website has been built for this course so you can find whatever information you need after completing the course as fast as possible.\n\n\nBesides just advanced patterns, you'll pick up a ton of other snippets of knowledge, including the use of my favourite React hook, certain best practices, handling refs in custom hooks, and even advanced animations in React.\nThis is the course I wished I took when I first learned advanced React patterns: complete, simple, approachable, with real-world examples.\nSee you later in the course!\n\n\nImportant:\nIn the course, we spend some time building a real-world component, The Medium Clap, for the sake of studying advanced patterns. See course curriculum - to be sure this isn't something that bothers you.\n\n\nPrerequisites:\n- You already know how the basics of building React components\n- You know the basics of React hooks, at least, useState and useEffect OR are willing to learn it at a fast pace in the course.\nNB: Not for absolute React beginners.",
      "target_audience": [
        "React developers looking to build truly reusable components",
        "React developers looking to make a good impression on their (first) jobs",
        "React developers looking for a simplified approach to teaching advanced React patterns",
        "Intermediate React developers preparing for React job interviews",
        "React developers looking to level-up into Senior React engineers"
      ]
    },
    {
      "title": "Electron for Desktop Apps: The Complete Developer's Guide",
      "url": "https://www.udemy.com/course/electron-react-tutorial/",
      "bio": "Use the Electron Framework to build compelling cross platform desktop applications with the latest web dev technologies",
      "objectives": [
        "Learn how to make native-feeling applications using web development technologies",
        "Master the intricacies of development with Electron JS",
        "Build applications that work well on both MacOS and Windows from a single codebase",
        "Develop both traditional single-window apps and status tray-based apps",
        "Understand how to integrate existing technologies like React and Redux into your Electron JS apps",
        "Build a lucrative business with desktop apps, because there is so little competition in the marketplace"
      ],
      "course_content": {
        "Basics of Electron": [
          "How to Get Help",
          "Course Resources",
          "Join Our Community!",
          "Why Does Electron Exist?",
          "How Does Electron Work?",
          "History of Electron"
        ],
        "Handling Electron Projects": [
          "App Overview",
          "Getting Started",
          "Starting and Stopping Electron",
          "Clarification on Toggling Developer Tools",
          "Loading HTML Docs",
          "Selecting Videos",
          "Sample Video - Download Me!",
          "Reading File Details",
          "Introduction to FFMPEG",
          "OSX FFMPEG Installation",
          "Windows FFMPEG Setup",
          "Important BrowserWindow Update",
          "Require Statements in the Browser",
          "Required Destructuring Update",
          "IPC Communication",
          "Video Duration with FFProbe",
          "Receiving IPC Events",
          "Wrapup",
          "Updating Your Project for Best Security Practices"
        ],
        "Handling Menu Bars": [
          "App Overview",
          "App Boilerplate",
          "Important BrowserWindow Update",
          "Creating the MainWindow",
          "Constructing Menu Bars",
          "Menu Bar Gotchas",
          "Darwin Conditional Required Update",
          "On Menu Click Functionality",
          "Cross Platform Hotkeys",
          "Creating Separate Windows",
          "Another Electron Gotcha",
          "Adding Polish to Electron",
          "Restoring Developer Tools",
          "IPC Between Windows",
          "Required Update for Closing a Window",
          "Garbage Collection with Electron",
          "Role Shortcuts",
          "Your Turn - Clearing Lists",
          "Solution and Wrapup",
          "Updating Your Project for Best Security Practices"
        ],
        "Status Tray Applications": [
          "App Boilerplate",
          "Starter Project Files",
          "What's This React Code?",
          "BrowserWindow vs Tray",
          "Important BrowserWindow Update",
          "BrowserWindow Config",
          "Small Update for Tray Icon",
          "Creating Tray Icons",
          "Toggling BrowserWindow Visibility",
          "Detecting Visibility",
          "The Positioning Bounds System",
          "Setting Position with Bounds",
          "Positioning of Windows",
          "Object Oriented Programming with Electron",
          "Basics of ES6 Classes",
          "Subclassing",
          "The TimerTray Subclass",
          "Update to Arrow Functions",
          "Finishing TimerTray Refactor",
          "Setting Tooltips",
          "More on Garbage Collection",
          "More Refactoring to Arrow Functions",
          "Building Context Menus",
          "Controlling Window Focus",
          "Hiding Dock Icons",
          "MainWindow Class",
          "IPC Between React and Electron",
          "Displaying Text on the Tray",
          "Background Throttling"
        ],
        "Combining Electron with React and Redux": [
          "App Overview",
          "Starter Project Files",
          "App Challenges",
          "Important BrowserWindow Update",
          "BrowserWindow Creation",
          "Starting up Electron with Webpack",
          "Overview of React and Redux",
          "Receiving a List of Videos",
          "Video Metadata",
          "Handling Async Bulk Operations with Promises",
          "Fetching Metadata in Promises",
          "Refactoring for Multiple Videos",
          "Wrapup on Metadata",
          "Required Update for the convertVideos Action Creator",
          "Output Paths",
          "Batch Video Conversion",
          "Handling Conversion Completion",
          "Detecting Conversion Progress",
          "Opening Folders with Shell",
          "Wrapup"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript"
      ],
      "description": "Take your web dev skills out of the browser!  This course will teach you the topics you need to make a #1 best-selling desktop app.\n------------------------------\nWhat is Electron?\nElectron is an elegant solution for writing desktop-based apps using existing web technologies you already know, like HTML, CSS, and Javascript.  Electron is used for ultra-popular apps like Atom, Slack, and Discord.\n\nWho builds desktop apps?!\nIn the last 10 years there has been a tremendous shift from desktop to mobile, true, but the result is that there is a huge opportunity to create desktop apps, as all other developers have shifted over to building mobile!  You can easily get into the front page on the MacOS store with an app you spend a few days building - this would never happen on mobile!  The last app you'll build in this course can be easily tweaked into a front-page app.\nWhat Will You Build?\nAll of my courses are 'learn-by-doing': no boring endless lectures with Powerpoints, only live, interactive coding examples.  In this course we'll build four separate apps with increasing complexity, each of which will profile different features of Electron.  By putting each concept into a real app, you'll get a better idea of when to use each unique and powerful feature.\nBoth MacOS and Windows supported!\n\n------------------------------\nApps you'll build:\nVideo File Analyzer.  Learn how to manipulate the underlying OS with this first app, in which you'll build a tool to analyze video files, supported by the FFMPEG CLI tool.  This app will get you familiar with Electron, along with an understanding of how to build a basic app.\nCross Window Todo List: Ok, yep, a todo app, I know, but you'll learn how to manipulate multiple windows with Electron, along with customizing the top menu bar.  Additional emphasis is placed on cross platform experiences between MacOS and Windows\nSystem Tray Timer.  Build a classic system-tray based app - this is the type of app that exists as an icon by the clock on your desktop.  You'll learn how to add a ton of polish to common Electron apps, which will make your users assume that they're using a fully native experience.\nVideo File Converter.  Make an app that can convert video files to any other format.  Existing apps with the exact same feature set sell for $10 on the MacOS store. This tool is amazingly useful, and is something that I use daily myself!\nHere's what we'll learn:\nLearn the theory and history behind Electron\nBuild complex desktop applications using repeatable processes\nAssemble both classic desktop apps and 'tray-based' apps\nAdd polish to your Electron apps, making them feel more native\nSidestep the common pitfalls associated with Electron\nI've built the course that I would have wanted to take when I was learning Electron. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Anyone who wants to create compelling native desktop applications"
      ]
    },
    {
      "title": "Adobe Experience Manager 6.5 - Build Websites and Components",
      "url": "https://www.udemy.com/course/adobe-experience-manager-65/",
      "bio": "Build and Apply AEM elements to master components and websites. Handbook included.",
      "objectives": [
        "Add AEM 6.5 to your Profile",
        "You will get completely updated AEM 6.5 contents",
        "Feel comfortable using AEM to design your own components from scratch",
        "ALL slides available as Student Guide in PDF format",
        "Understand AEM best practices for creating website",
        "You will get hands on experience with Java Content Repository",
        "You will learn to design and create your own web pages",
        "Understand the usage of Client Libraries",
        "You will understand the OSGi Basics and how to use Bundles",
        "You will learn to build your website using AEM core components"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "AEM Architecture",
          "Installation Methods & Prerequisites",
          "Install & Start AEM Instance",
          "Dispatcher",
          "Early Reviews - Please Watch"
        ],
        "AEM Handbook Download": [
          "AEM Handbook Download"
        ],
        "Developer Tools": [
          "Developer Tools",
          "Mutable vs Immutable Content",
          "Content Package Structure",
          "Lab: Install A Package",
          "Lab: Build Your packages"
        ],
        "Sites - Concepts": [
          "AEM UI Features",
          "AEM Reference Site: WKND",
          "Lab: Create A Page Using Sites"
        ],
        "Assets - Concepts": [
          "Assets: Basics",
          "Lab: Upload Assets To AEM",
          "Lab: Add Metadata To Assets"
        ],
        "Working with AEM Project": [
          "IDE Concepts & Modules",
          "Lab: Build AEM Project - LEARN",
          "Lab: Deploy AEM Project - LEARN",
          "OSGi - Architecture and Concepts",
          "Lab: Build & Deploy OSGi Bundle - LEARN",
          "Lab: AEM Sync With Visual Studio - LEARN"
        ],
        "Content Rendering in AEM": [
          "JCR Nodes And Namespaces",
          "Steps to follow: Display Quote component",
          "Lab: Create Training Project In JCR",
          "Lab: Create Quote Component",
          "Lab: Create And Display Content",
          "Lab: Working With Dialogs",
          "Lab: Sling Resolution",
          "Lab: Inheritance With Quote Component",
          "Lab: Enhance Quote Component"
        ],
        "HTML Template Language": [
          "HTL - Introduction",
          "Lab: HTL Using Global Objects",
          "Lab: HTL Using Attributes"
        ],
        "We.Train Website - Foundational Elements": [
          "Templates And Components",
          "Lab: Create Proxy Page Component",
          "Context Aware Configuration",
          "Lab: Create Context Aware Configuration",
          "Editable Templates",
          "Lab: Create Editable Templates - Part 1",
          "Lab: Create Editable Templates - Part 2",
          "Reference Structure In CRXDE - Concepts",
          "Lab: Create Content Root For We.Train",
          "Lab: Create Site Structure for We.Train"
        ],
        "Client-Side Libraries": [
          "ClientSide Library - Concepts",
          "Lab: Add Content To We.Train Site Page",
          "Lab: Create Client-Side Library",
          "Lab: Add ClientLibs To Component",
          "Lab: Apply WKND Design"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript",
        "Good to have CSS/ HTML",
        "AEM Jar and License File"
      ],
      "description": "You want to learn how to use Adobe Experience Manager? Then, you are at the right place!!\nEither you're completely new to AEM, or you've played around with it but want to get more comfortable with Content Management system. Either way, this course will be great for you.\nWith AEM you can build your website, content or components from scratch and create your content with speed and much ease.\nWhat is this AEM course all about?\nIn this guide, you'll not only learn and build your concepts around the fundamentals of AEM but also develop and manage your web applications and personalize your content for the customers using AEM Sites.\nusing components, templates, website scripting, HTL etc.\nAdobe Experience Manager addresses all of our needs when it comes to powerful, enterprise-level CMS that can handle context-driven dynamic content, experience fragments, integration with analytics and targeting tools along with the Adobe Experience Cloud products.\nResource Files for the exercises\nYou will get access to the resources used in the lab sessions as a free download which will enable you to write and experience the code at the root level of AEM.\nAEM Handbook for lifetime..\nLearn to become AEM pro with the latest version\nThis course covers the latest v6.5. To start learning with 6.3, you can refer to my course AEM 6.3 - Complete MasterClass on Udemy\nPromise to You\nI'll be here for you every step of the way. If you have any questions about the course content or anything related to this topic, you can always post a question in the course or send me a direct message.\nI want to make this the best course on AEM from development point of view. So if there is any way I can improve this course, just tell me and I'll make it happen.\nThis course will cover everything you need to know to start, including:\nGetting started with AEM Architecture\nAEM Installation and IDE Basics\nUsing Developer tools\nBasics for working AEM Sites\nBasics for working with AEM Assets\nExperience working with Apache Sling, JCR, OSGi, Packages etc.\nCreate Proxy Components and using AEM Core components\nUsing HTL language for scripting\nAEM Best Practices\nUsing Reference website WKND\nSPA Editor feature in Adobe Experience Manager (AEM).\nAt the end you will get hands-on exercises to implement React application for a fictitious lifestyle brand, the WKND.\nBy the end of this course, you'll have a thorough understanding of how to use Adobe Experience Manager for developing websites or as a career opportunity.\n\nGo ahead and click the enroll button, and I'll see you there!\nCheers,\nJasvinder",
      "target_audience": [
        "Great for beginners who have never worked with AEM",
        "Good for intermediate users who want to learn new techniques and tools, and how to properly use AEM",
        "Good for anyone looking for hands-on experience with AEM"
      ]
    },
    {
      "title": "The Complete Guide To Build Rest Api's with Asp.Net and C#",
      "url": "https://www.udemy.com/course/restapi-in-aspnet/",
      "bio": "Build REST Api's With Asp.Net , Entity Framework and C#",
      "objectives": [
        "Understand the Web Api's",
        "Build the backend for your web and mobile apps",
        "Build Web Api's with Entity Framework Code First Approach",
        "Use Entity Framework to query data",
        "Use Model Validations to Validate the data",
        "Implement Sorting , Paging & Searching",
        "Implement Client and Server Side Caching to reduce server load",
        "Implement Authentication & Authorization in Web Api's",
        "Deploy Web Api to Microsoft Azure",
        "Test Api via Postman",
        "Develop Real World Coffee Shop Api with Asp .Net"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Welcome",
          "Course Structure",
          "Tooling and Prerequisite",
          "Asking Questions",
          "FAQ's"
        ],
        "Getting Started with Web Api's": [
          "What is Api",
          "Create a Web Api Project",
          "Understand Project Architecture",
          "Http Verbs / Installing Postman",
          "Create a First Web Api"
        ],
        "Building Restful Api's with Entity Framework & Asp.Net": [
          "What is Code First Approach",
          "Install Entity Framework",
          "Db Context",
          "Adding Connection String",
          "Handling Get Request",
          "Handling Post Request",
          "Handling Put Request",
          "Handling Delete Request"
        ],
        "Returning Resources": [
          "Http Status Codes Overview",
          "Implement Status Codes",
          "Content Negotiation",
          "Media Type Formatters"
        ],
        "Migrations in Web Api's": [
          "Code First Migration",
          "Implement Migrations in Web Api",
          "Quiz # 1"
        ],
        "Model Validations": [
          "Validation Overview",
          "Implement Model Validations in Web Api's"
        ],
        "Routing and Custom Methods": [
          "Custom Methods in Web Api's",
          "Implement Routing in Web Api's",
          "Quiz # 2"
        ],
        "Implementing Sorting , Paging & Searching": [
          "Sorting Overview",
          "Implement Filtering / Sorting",
          "Paging Overview",
          "Implement Paging",
          "Searching Overview",
          "Implement Searching"
        ],
        "Authentication and Authorization": [
          "Security Overview",
          "Create Project With Individual Account Authentication",
          "Registering Users",
          "User Authentication & Access Token",
          "Create Quotes Api",
          "Adding More Features in Quotes Api"
        ],
        "Caching": [
          "Caching Overview",
          "Adding Caching Package in Web Api's",
          "Client Side Caching",
          "Server Side Caching"
        ]
      },
      "requirements": [
        "The student's must have a Windows OS . If you're using MAC then you'll need a Virtual Machine.",
        "Knowledge of Asp .Net , C# and Entity Framework.",
        "C# (at a minimum lambda expressions, LINQ)"
      ],
      "description": "Welcome to the Complete Rest Api's course with Asp.Net and C#.\nAre you tired of boring outdated and incomplete courses , then let's dive in to this course.Well I'm Asfend Microsoft Most Valuable Professional (MVP) as well as the First Xamarin University Most Valuable Professional at Udemy and in this course I'll explain you every single aspect of rest ful web api's with asp.net and c#. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a complete web api's in asp.net. And the purpose of this course is to train you to build your own Restful web api's in asp.net.\n\nThe main focus of this course is on the Restful Web Api via Asp.NET and C#.  So if you're familiar with C# , Asp.Net and Entity Framework Or if you want to create the Restful web api's in Asp.Net then this is the right course for you.\nIf you don't have any idea about Rest Api then don't worry because in this course we'll cover all the Rest Api concepts.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nHow to create a Rest Api via Entity Framework Code First Approach with all the advanced functions.\nImplement Status Codes\nAdding Migrations in Web Api's\nAdding Content Negotiation and Media Type Formatters\nImplement Validation in Web Api's\nHow to add the Routing and Custom Methods\nImplement Sorting , Paging & Searching\nImplement Authentication and Authorization and secure your Api with Access Token\nAdding both the client side and server side caching\nCreate SQL Database on Microsoft Azure\nDeploy Web Api on Microsoft Azure\nCreate A Real World Coffee Shop Api From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Apis in Asp.Net happily)\n\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos courses. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. In this course you'll get a best instructors with carefully crafted content, beautiful outline and proper structured material and learning by doing.\nI'll explain you each and every single line of code. I've been in your shoes and every time copy and paste is not a solution and that's why I've tried to create everything in front of you so that you can learn how to solve the errors. We'll learn every thing from scratch.\nAnd before this course you don't need my other courses. If you're a C# developer  then you should go ahead with this course.\nAfter this course you'll be very much familiar with Asp.Net Web Api's and you'll be able to create any kind of real world web api's in asp.net quite easily as well as efficiently.\nSign up today, and look forward to:\nOver 4 hours of HD 720p video content\nBuilding a Real World fully-fledged Web Api's including ones that use Rest Api Architecture , Access Token , Authentication , Authorization, Caching and much more.\nAll the knowledge you need to start building any api you want\n$5000+  in person web api development bootcamp course materials and curriculum.\n\n\nRemember...\nAfter this course you'll get all the  Source Code and along with this I'll also share  the links and helping material for the Rest Api's with you but you need your personal Azure Portal where you can launch your web api.\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First Complete Rest Api's Course with Asp.Net and C#.",
      "target_audience": [
        "Developers who are familiar with C# Programming Language.",
        "Some prior programming experience in Object Oriented Programming languages will also help to pick the concepts easily.",
        "Developers who want to build the Complete Restful Web Api from A to Z.",
        "Developers with no knowledge of Asp .Net Web Api's who want to build Restful Web Api's with this framework."
      ]
    },
    {
      "title": "Full-Stack Java Developer Course with Spring Boot & React JS",
      "url": "https://www.udemy.com/course/full-stack-java-development-with-spring-boot-react/",
      "bio": "Build FULL-STACK Web Apps using Java, Spring Boot 3, Spring Data JPA, Spring Security, JWT, JavaScript, React JS & MySQL",
      "objectives": [
        "Learn to develop a FULL-STACK Web Application with React and Spring Boot",
        "Build Employee Management System FULL-STACK Web Application with React and Spring Boot",
        "Build Todo Management FULL-STACK Web Application with React and Spring Boot",
        "Learn Spring Boot Fundamentals and REST API Basics",
        "Learn React JS Fundamentals",
        "Building RESTful APIs with Spring Boot",
        "Consuming RESTful APIs in React JS",
        "Data Persistence with Spring Data JPA and Hibernate",
        "Secure REST APIs using Spring Security",
        "Build User Registration and Login Module",
        "Secure REST APIs using JWT (JSON Web Token)",
        "Using JWT (JSON Web Token) in React App",
        "Style Web Pages using the Bootstrap CSS framework",
        "Use Modern and Popular tools to build full-stack web applications such as IntelliJ IDEA, VS Code, Maven, Postman, NPM, etc."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "⚠️ 7 Career Mistakes Full Stack Developers Must Avoid Early",
          "Prerequisites for this Course",
          "My Other Top Udemy Courses - Don't Skip",
          "Guide to Set Up Development Environment"
        ],
        "REST API Fundamentals": [
          "What is REST API?",
          "REST Architectural Constraints",
          "REST Key Concepts – Resource, Sub-resource, and URI",
          "HTTP Methods – GET, POST, PUT, DELETE",
          "HTTP Status Codes"
        ],
        "Spring Boot Fundamentals and REST API Development Basics": [
          "Download Lecture Notes in PDF",
          "Section Overview",
          "What is Spring Boot?",
          "Spring Boot Features",
          "Create Spring Boot Project using Spring Initializr and Import in IntelliJ IDE",
          "Create Simple Spring Boot REST API",
          "Spring Boot REST API returns Java Bean",
          "Create Spring Boot REST API That Returns List",
          "Spring Boot REST API with Path Variable - @PathVariable",
          "Spring Boot REST API with Request Param - @RequestParam",
          "Spring Boot POST REST API - @PostMapping and @RequestBody",
          "Spring Boot PUT REST API - @PutMapping and @RequestBody",
          "Spring Boot DELETE REST API - @DeleteMapping",
          "Using Spring ResponseEntity to Manipulate the HTTP Response",
          "Define Base URL for REST API’s in Spring MVC Controller - @RequestMapping",
          "Spring and Spring Boot Annotations Cheat Sheet",
          "Download Source Code of this Section",
          "Section Quiz - Test Yourself"
        ],
        "React JS Fundamentals": [
          "Lecture Notes in PDF",
          "Section Overview",
          "Introduction to React JS",
          "Create and Set up React App",
          "Understanding React App Project Structure",
          "React Components Overview",
          "Functional Components",
          "Class Components",
          "Importing and Exporting Components",
          "JSX",
          "JSX Rules in React",
          "Props",
          "Destructuring Props",
          "State and setState",
          "useState Hook",
          "Event Handling",
          "Conditional Rendering",
          "Section Quiz - Test Yourself",
          "Source Code"
        ],
        "Employee Management System Full-Stack Project": [
          "Select Technology Stack and Understanding Project Requirements",
          "Demo - What Are We Going to Build?",
          "Spring Boot React Full-Stack Architecture"
        ],
        "Understanding DTO Pattern": [
          "Section Overview",
          "Understanding DTO (Data Transfer Object) Pattern",
          "How to Use DTO Pattern in Spring Boot Application and it's Advantages"
        ],
        "Employee Management Module - Spring Boot Backend": [
          "Section Overview",
          "Spring Boot Application Three Layer Architecture",
          "Create and Setup Spring Boot Project in IntelliJ IDEA",
          "Using Lombok in IntelliJ IDEA (Resolved Lombok Related Issues in IntelliJ IDEA)",
          "Configure MySQL Database in Spring Boot Application",
          "Create Employee JPA Entity",
          "Create EmployeeRepository",
          "Create EmployeeDto and EmployeeMapper",
          "Build Add Employee REST API",
          "Build Get Employee REST API",
          "Build Get All Employees REST API",
          "Build Update Employee REST API",
          "Build Delete Employee REST API",
          "Source Code of this Section",
          "Quiz for Sections 4 and 5 - Test Yourself"
        ],
        "Employee Management Module - React JS Backend": [
          "Section Overview",
          "Create and Set up React App",
          "Understanding React App Project Structure",
          "Adding Bootstrap in React Using NPM",
          "Create React ListEmployeeComponent and Display Data",
          "Connect React App with Get All Employees REST API",
          "Adding Header and Footer to React App",
          "Configure Routing in a React App",
          "Create React EmployeeComponent and Configure Route",
          "Add Employee Form Handling",
          "Connect React App to Add Employee REST API",
          "Add Employee Form Validation",
          "Adding Update Button, Title and Route",
          "Connect React App to Get Employee REST API",
          "Connect React App to Update Employee REST API",
          "Implement Delete Employee Feature in React App",
          "Source Code of this Section",
          "Section Quiz - Test Yourself"
        ],
        "Department Management Module - Spring Boot Backend": [
          "Section Overview",
          "Create Department Entity and DepartmentRepository",
          "Create DepartmentDto and DepartmentMapper",
          "Build Create Department REST API",
          "Build Get Department REST API",
          "Build Get All Departments REST API",
          "Build Update Department REST API",
          "Build Delete Department REST API",
          "Source Code of this Section"
        ],
        "Department Management Module - React JS Frontend": [
          "Section Overview",
          "Add Navigation Links in Header",
          "Design List Department Component",
          "Connect React App with Get All Departments REST API",
          "Create React DepartmentComponent",
          "Add Department Form Handling",
          "Connect React to Add Department REST API",
          "Adding Update Button, Title and Route",
          "Connect React App to Get Department REST API",
          "Connect React App to Update Department REST API",
          "Implement Delete Department Feature in React App",
          "Change Add and Update Employee Feature - Many To One Relationship in Spring Boot",
          "Change Add and Update Employee Feature to use Department - React App",
          "Source Code of this Section"
        ]
      },
      "requirements": [
        "Java 17+",
        "Familiar with IntelliJ IDEA and VS Code",
        "Familiar with HTML, CSS and JavaScript",
        "No Spring Boot REST API experience is needed, You will learn building Spring Boot REST APIs from the scratch",
        "No React JS experience is needed, I will teach React JS from the scratch"
      ],
      "description": "In this hands-on project-oriented course, you will dive into the world of full-stack web app development using the powerful combination of Spring Boot and React JS.\n\n\nIn this course, you will build two full-stack web applications (Employee Management System and Todo Management App) using Spring Boot, Spring Security, Spring Data JPA, JWT, React JS, and MySQL database.\n\n\nIn this course, we will use the latest version of Spring Boot (3+), Spring Security (6+), React JS (18+), and MySQL database (8+). We will use modern and popular tools to build full-stack web applications such as IntelliJ IDEA, VS Code, Maven, Postman, NPM, etc.\n\n\nWhat is React JS?\nReact JS is a JavaScript library used to build user interfaces (UI) on the front end.\nReact is not a framework (unlike Angular, which is more opinionated).\nReact is an open-source project created by Facebook.\nWhat is Spring Boot?\nSpring boot to develop REST web services and microservices.\nSpring Boot has taken the Spring framework to the next level. It has drastically reduced the configuration and setup time required for spring projects.\nYou can set up a project with almost zero configuration and start building the things that actually matter to your application.\nCourse Topics:\n1. React JS Fundamentals\n2. Spring Boot Fundamentals\n3. Project 1: Employee Management System\nBuild Employee Management Module - Backend Implementation using Spring Boot\nBuild Employee Management Module - Frontend Implementation using React JS\nBuild Department Management Module - Backend Implementation using Spring Boot\nBuild Department Management Module - Frontend Implementation using React JS\nStyle Web Pages using the Bootstrap CSS framework\n4. Project 2: Todo Management App\nTodo Management Module - Backend Implementation using Spring Boot\nTodo Management Module - Frontend Implementation using React JS\nSecure REST APIs using Spring Security\nBuild Register and Login REST APIs\nImplement Register and Login Features in the React App\nSecure REST APIs using JWT (JSON Web Token)\nUsing JWT (JSON Web Token) in React App\nStyle Web Pages using the Bootstrap CSS framework\n\n\nTools and technologies used in this course:\nServer-side:\nJava 17+\nSpring Boot 3+\nSpring Data JPA (Hibernate)\nSpring Security\nJWT\nMaven\nIntelliJ IDEA\nMySQL database\nPostman\nClient-side:\nReact JS 18+\nReact Hooks\nReact Router\nAxios\nBootstrap CSS framework\nVisual Studio Code IDE\nVS Code extensions\nNode JS\nNPM",
      "target_audience": [
        "This course is for everyone who want to learn how to develop a FULL-STACK Web Application using Spring Boot and React JS"
      ]
    },
    {
      "title": "Complete React Hooks Course 2021: A - Z ( Scratch to React )",
      "url": "https://www.udemy.com/course/react-hooks-course/",
      "bio": "React JS Hooks way ( Latest & Comprehensive) : Redux , React Router, Testing with Jest, Build Component Library",
      "objectives": [
        "React Hooks from scratch",
        "Learn React Hooks way",
        "React Hooks advanced level"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Course Introduction",
          "Getting Started",
          "Installing React",
          "Understanding Project Structure",
          "Setting up SASS",
          "Setting up linter"
        ],
        "React Fundamentals": [
          "JSX",
          "Styling Components",
          "Reusable Components",
          "Props",
          "Fragments",
          "Destructring Props",
          "Conditional Rendering",
          "Higher Order Components",
          "useState Hook",
          "Hooks Internals",
          "Hooks Rules",
          "Complex State",
          "Managing Lists"
        ],
        "Handling Events": [
          "Adding Events",
          "Component Communication",
          "Using Multiple Local States",
          "Keyboard Events",
          "Building your own Custom Hook",
          "onChange Event",
          "useRef Hook",
          "Forwarding refs"
        ],
        "Component Lifecycle": [
          "Lifecycle Methods",
          "useEffect Hook",
          "useEffect Example",
          "Fetch Data with Async Await",
          "useMemo Hook ( Memoization )",
          "Custom Hook: usePrevious",
          "useLayoutEffect Hook",
          "useDebugValue Hook",
          "Custom Hook: useCustomFetch"
        ],
        "React Router": [
          "Setting up Routes",
          "Route Links",
          "Route Redirect",
          "Route Prompt",
          "useContext Hook"
        ],
        "Redux": [
          "Redux Fundamentals",
          "React + Redux",
          "Combining Multiple Reducers",
          "Redux Thunk",
          "useReducer Hook",
          "React + Mobx"
        ],
        "Hooks Testing": [
          "Testing Philosophy",
          "Unit Test with Jest"
        ],
        "Projects": [
          "Tic Tac Toe Game",
          "Draggable List"
        ],
        "Building your own reusable component library": [
          "Requirement for a component library",
          "Build a reusable button component",
          "Building a style-guide with styleguidist"
        ],
        "Type Checking": [
          "PropTypes",
          "Flow Types",
          "TypeScript"
        ]
      },
      "requirements": [
        "JavaScript knowledge needed"
      ],
      "description": "This is a modern and comprehensive React JS course that focuses on only the latest version of React with hooks ( \"no classes\"). We will cover the following:  You will learn react from scratch ,  no prior knowledge of react required.\nFundamentals like JSX, component communication, events, fragments, Higher Order Components, and more.\nUnderstand best way to organize files in a react project using common patterns for folder structure\nBuilt-in hooks like useState, useEffect, useReducer, useContext, useDebugValue, useMemo, useRef, useLayoutEffect.\nBuild our own custom hooks.\nUse create-react-app ,  a command line interface ( CLI ) to swiftly create react projects.\nBuild a Single Page Application ( SPA ) using react-router-dom\nGlobal State Management with Redux and Redux thunk\nLearn unit testing , snapshot testing, mocking  in React  with Jest and React testing Library .\nBuild a To-Do app using react\nBuild a complete drag-n-drop app using react\nBuild a reusable component library and a documentation site using react styleguidist\nBuild a documentation site using react storybook\nAll the code examples are provided in github for your reference.\nMany coding exercise to practice\nLearn how to upload your react project on github\nOne of the best feature of this course is its simplicity. All the coding samples are very easy to understand. I prefer to use real-time use cases to explain concepts.",
      "target_audience": [
        "Beginner React developers",
        "React Developers moving to latest version of React"
      ]
    },
    {
      "title": "Learn Object Oriented PHP By Building a Complete Website",
      "url": "https://www.udemy.com/course/learn-object-oriented-php-by-building-a-complete-website/",
      "bio": "Quick and Easy Guide to Master OOPs in PHP",
      "objectives": [
        "Build a complete website using classes and objects in PHP",
        "Understand the concepts behind object oriented PHP",
        "Learn all about Abstraction and Inheritance",
        "Learn how to deal with RDBMS within OOPS framework"
      ],
      "course_content": {
        "Course Intro": [
          "Introduction"
        ],
        "Introduction to PHP": [
          "Section Intro",
          "Overview of PHP",
          "Server & Environment Setup",
          "Variables, Arrays & Loops",
          "Functions & Conditionals",
          "Introduction to PHP Quiz"
        ],
        "OOP Fundamentals": [
          "Section Intro",
          "OOP Overview",
          "Classes & Methods",
          "Properties & Visibility",
          "__get & __set Magic Methods",
          "Class Inheritance",
          "OOP Fundamentals"
        ],
        "Advanced OOP": [
          "Section Intro",
          "Static Properties & Methods",
          "Abstract Classes & Methods",
          "Autoloading Classes & Final Keyword",
          "Object Iteration",
          "Advanced OOP Quiz"
        ],
        "OOP & Databases": [
          "Section Intro",
          "PDO Database Class & Connection",
          "Fetching Data",
          "Inserting Data",
          "Updating & Deleting Data",
          "OOP & Databases Quiz"
        ],
        "PHP Project - Part 1": [
          "Project Intro",
          "Folder Structure & Bootstrap Class",
          "Creating Controllers",
          "Creating Models",
          "Creating Views"
        ],
        "PHP Project - Part 2": [
          "Adding Shares",
          "User Registration",
          "User Login & Sessions",
          "Message Class & Access Control"
        ],
        "Course Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic Knowledge of PHP, JavaScript and HTML"
      ],
      "description": "One of the most powerful server-scripting languages requires an equally powerful course to help break down the tricky concepts of Object Oriented PHP in a step by step manner to help you master OOP PHP.\nDon’t just be good at PHP, instead be a ninja by learning how objects and classes combine to form simple, brilliant software. Leave behind old complicated courses and opt for the course that gets your hand dirty by not only teaching you the theoretical aspects of OOP PHP, but also gets you ready for the physical aspects as well.\nHere’s how object oriented programming blends with PHP to create something simple and beautiful.\nThe idea behind object oriented programming or OOP is that it revolves around objects instead of actions. So, instead of manipulating the logic behind the object to change something, you instead manipulate the object itself. Let’s make it simpler – in OOP PHP, similar items can be clubbed as one object. This means codes that are similar are placed in one object. So, in case you wanted to change the items or modify them in any manner – you can simply modify or call the object (this will change or call everything that is under this object). You can also add subclasses, which share the characteristics of the object. This helps when you constantly require calling certain classes for modification.\nThis course was designed to simplify the process of understanding OOP PHP in the easiest and most accurate manner. The OOP PHP tutorial breaks down the basics of PHP coding, how it works with OOP and even how to combine both to effectively create a website.\nThe course starts by covering simple concepts such as classes, objects, methods, properties, MVC, MySQL, Data Abstraction, Data Binding, etc. Following the fundamentals, you’ll then progress on to more advanced topics before you can use everything you’ve learned to create a functional website with OOP PHP.\nHere’s a course that simplifies your life and teaches you one of the greatest paradigm changes made to the powerful PHP language. So, enroll now and see how OOP PHP can change your life.",
      "target_audience": [
        "Beginners who want to learn professional PHP programming"
      ]
    },
    {
      "title": "The Creative HTML5 & CSS3 Course - Build Awesome Websites",
      "url": "https://www.udemy.com/course/the-creative-html5-css3-course-build-awesome-websites/",
      "bio": "Learn HTML5 and CSS3 by creating 3 amazing, well designed and animated websites from scratch!",
      "objectives": [
        "Create Websites from absolute scratch!",
        "Learn the principles of web development.",
        "Styling nice looking websites.",
        "Flexbox, CSS Grid",
        "Advanced CSS Animations",
        "Fluid Typography and SASS",
        "Deployment."
      ],
      "course_content": {
        "HTML5 Basics": [
          "Welcome to the Course",
          "Setting up vsCode",
          "Installing Extensions",
          "Creating A HTML Tag",
          "Basic Layout",
          "Meta Tags",
          "H and P Tags",
          "Images and Video",
          "A Tags",
          "Forms",
          "Lists",
          "Comments",
          "Tables",
          "Classes and ID's",
          "HTML5 Semantics",
          "HTML Entities",
          "Let's Learn CSS"
        ],
        "CSS Basics": [
          "How To Use CSS",
          "Basic Syntax",
          "Selectors",
          "Specificity",
          "Box Model",
          "Padding and Margin",
          "Pixels, Rem, Em",
          "Styling A Button",
          "Display Types",
          "Positions",
          "Pseudo Elements and Classes",
          "Mini Project - How not to create layouts (optional)"
        ],
        "Mobile Responsive": [
          "Media Queries",
          "VH and WV"
        ],
        "Flexbox": [
          "Flexbox Basics",
          "Let's Practice Flexbox"
        ],
        "Travelly Project": [
          "Important Note!",
          "Before we start our project",
          "Starter Files",
          "Setting things up",
          "Creating our Nav & Hero",
          "Creating the City Section",
          "Card Section",
          "Form Section",
          "Submitting Forms",
          "Final Code"
        ],
        "Accessibility": [
          "Semantics",
          "Contrast",
          "Keyboard",
          "Text",
          "Labels and Alt"
        ],
        "CSS Grid": [
          "CSS Grid Basics",
          "Grid vs Flexbox"
        ],
        "Elena Joy Project": [
          "Starter Files",
          "Setup",
          "Adding Fonts",
          "First Page",
          "Plant Animation",
          "Burger Animation",
          "Fixing Small Issues",
          "About Section",
          "Image Gallery",
          "Contact Page",
          "Javascript Functionality",
          "Final Code"
        ],
        "Basics of SASS": [
          "SASS",
          "Let's learn a magic trick"
        ],
        "Portofolio Website": [
          "Starter Files",
          "Portofolio Setup",
          "Creating SVG & Icon",
          "Nav and Section",
          "Animating SVG's",
          "Mobile Friendly",
          "Project Page",
          "Finish Line",
          "Final Code"
        ]
      },
      "requirements": [
        "You don't need to know anything about programming to get started!"
      ],
      "description": "The creative HTML5 and CSS3 Course was created for everybody who is interested in learning web development.\n\nReal World Projects\n\nIf you are a complete beginner we will cover all the basics to get you up and going to create your first website. If you have some web development skills already, do not worry! We will create 3 amazing projects with awesome design and animations!\nA short list of things we are going to learn!\nHTML5\nCSS3\nResponsive Design\nAnimations\nWorking with Images and SVG's\nFlexbox\nCSS Grid\nSASS\nOptimization\nAccessibility\nDeployment",
      "target_audience": [
        "Anyone interested in building and designing beautiful websites.",
        "Everyone interested in web development."
      ]
    },
    {
      "title": "Bootstrap 5 From Scratch | Build 5 Modern Websites",
      "url": "https://www.udemy.com/course/bootstrap-from-scratch/",
      "bio": "Learn to customize and build modern websites from scratch using Bootstrap 5",
      "objectives": [
        "Create 5 high quality websites from scratch",
        "Create an enviroment boilerplate to compile Sass & customize Bootstrap",
        "3 mini-project challenges",
        "Learn & examine Bootstrap classes & utilities using sandbox files",
        "Learn semantic HTML5 & CSS techniques"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome To The Course",
          "Projects Overview",
          "What Is Bootstrap?",
          "How To Use Bootstrap",
          "Basic Environment Setup",
          "Bootstrap Sandbox Setup"
        ],
        "Bootstrap Fundamentals - Part 1": [
          "Containers",
          "Typography",
          "Display & Position",
          "Background & Text Colors",
          "Spacing",
          "Sizing, Borders & Shadows",
          "Breakpoints",
          "Buttons",
          "Navbar",
          "Dark Mode & Variables"
        ],
        "Bootstrap Fundamentals - Part Two": [
          "Bootstrap Grid & Columns",
          "Flexbox Classes",
          "Cards",
          "List Groups & Badges",
          "Forms & Input",
          "Form Validation & Display",
          "Alerts & Progress Bars",
          "Tables",
          "Breadcrumbs & Pagination",
          "Other CSS Utilities"
        ],
        "Dynamic JavaScript Components": [
          "Dropdowns",
          "Accordions & Collapse",
          "Carousel",
          "Toast Notification",
          "Spinners",
          "Modals",
          "Popovers & Tooltips",
          "Darkmode Toggle"
        ],
        "Mini-Project Challenges": [
          "Intro & Mini-Project Starter",
          "Pricing Cards",
          "Ratings Component",
          "User List"
        ],
        "Custom Sass Workflow & Starter Template": [
          "What Is Sass?",
          "Install & Setup Sass",
          "Install, Setup & Customize Bootstrap",
          "Install & Setup Font Awesome",
          "Starter Template Download"
        ],
        "Website 1 - Ebook Website": [
          "Project Intro",
          "Project Setup",
          "Navigation & Sass Variables",
          "Header/Hero Section",
          "Icon Section",
          "Navbar Scroll Effect",
          "Details Sections With Modals",
          "Testimonials, Download Section & Footer",
          "Contact Page",
          "Deploy To Vercel",
          "Formspree For Contact Forms"
        ],
        "Website 2 - Corso Training Website": [
          "Project Intro",
          "Project Setup",
          "Nav & Header",
          "Image Carousel",
          "Register Area, Nav Scroll & Details",
          "Points & Summary Sections",
          "Invitation & Takeaways",
          "Subscribe & Footer"
        ],
        "Website 3 - Portfolio Website": [
          "Project Intro",
          "Project Setup",
          "Header With Overlay",
          "Typing Effect JavaScript",
          "About & Skills Sections",
          "Projects & Lightbox",
          "StyleShout & Services",
          "Stats & Forms",
          "Deploy To Netlify"
        ],
        "Website 4 - Yavin Office Design": [
          "Project Intro",
          "Project Setup",
          "Navigation & Header",
          "Stats & JavaScript Increment",
          "Intro, Details & Services",
          "3 Middle Sections",
          "Projects & Testimonials",
          "Contact Form & Footer",
          "Back To Top Button",
          "Inner Article Page"
        ]
      },
      "requirements": [
        "You should know the basics of HTML and CSS"
      ],
      "description": "This course is for anyone that wants to learn how to build modern websites and UIs using the Bootstrap CSS framework. This course is very beginner friendly, but is also for anyone that wants to build some cool projects.\n\n\nThe course is broken up into a few parts...\n\n\nThe Bootstrap Sandbox\n\n\nWe will start off by learning all of the important Bootstrap classes, utilities, helpers, etc by using the Bootstrap sandbox. This is a collection of files that are categorized for certain components and areas such as buttons, typography, grid columns, flex, etc. You will have a starter version without the classes and we will go through and add the classes and talk about them and in some cases examine the CSS. We will use the sandbox for all of the CSS components as well as the JavaScript widgets such as the carousel, accordion, toast notifications and so on.\n\n\nMini-Project Challenges\n\n\nThere will be a couple mini-projects that I will ask you to complete yourself, based on what you learned in the sandbox sections. This includes a pricing grid, ratings component and a user list. I may add more to this section as well.\n\n\nStarter Template / Boilerplate\n\n\nWe will be creating a template and environment to build our main projects. This will include using NPM (Node Package Manager) to install Bootstrap and Sass. We will customize Bootstrap by changing Sass variables and then compiling a custom bootstrap.css file. If you don't know NPM or Sass, that is fine. I explain everything as I go.\n\n\n5 Main Websites\n\n\nNext, we will use the starter template to create 5 great looking websites. In these websites, we will use Bootstrap componenrs, JavaScript widgets as well as some custom JavaScript and 3rd part libraries to give us a little more functionality.\n\n\nThe websites are as follows:\n\n\n- Ebook Website - Website that offers a free ebook about starting a blog\n- Corso Website - Website that offers training courses and seminars\n- Portfolio Website - Modern looking portfolio for developers\n- Yavin Website - A business that creates custom office spaces\n- Vera Website - Software solutions website",
      "target_audience": [
        "People that want to build high quality websites & UIs using Bootstrap"
      ]
    },
    {
      "title": "Django Python: Build a Full Stack Website with Features",
      "url": "https://www.udemy.com/course/python-django-2021-complete-course/",
      "bio": "Master Django: Full Stack Website with Email Functionality, Messaging, Commenting, API Development and More!",
      "objectives": [
        "How to Build a Django website from start to finish",
        "User Registration and Authentication",
        "Hosting a website on a live server",
        "Building out a REST API",
        "Build a review and voting system",
        "Search & Pagination",
        "Designing databases with Django",
        "How to send emails with Django"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Django",
          "Prerequisites",
          "Environment Setup",
          "Source code",
          "Installation & Setup"
        ],
        "The Basics": [
          "Views & URL's",
          "Templates & Template Inheritance",
          "Rendering Data to Templates"
        ],
        "Building our Database": [
          "Models & Admin Panel",
          "Database Relationships",
          "Database Queries"
        ],
        "Create Update Delete (CRUD)": [
          "Model Forms",
          "Create Read Update Delete (CRUD)"
        ],
        "Static Files & Theme Installation": [
          "Static Files",
          "Theme Installation"
        ],
        "Add More Apps": [
          "Users App",
          "Add & Render Profiles",
          "Signals"
        ],
        "Authentication": [
          "User Login, Logout and Flash Messages",
          "User Registration",
          "Styling Login & Register Page"
        ],
        "User Actions": [
          "User Account",
          "User Edit Profile",
          "User Project CRUD",
          "Add, Edit & Delete add skills"
        ],
        "Search & Pagination": [
          "Search",
          "Pagination",
          "Search + Pagination Hacky Fix"
        ],
        "Reviews & Messages": [
          "Reviews",
          "Messages"
        ]
      },
      "requirements": [
        "Basic understanding of HTML, CSS & Python"
      ],
      "description": "About this course\nReady to learn Django? In this course we will start from the very basics of what Django is to completing and deploying a fully functional, full stack website with the up to date version of Django 5.\nThe website we will build as we learn will be an online platform where developers from around the world can create a profile and share their work with others.\n\n\nWho is this course for?\nWhile this course is Beginner friendly, all skill levels can learn here. We won't just be learning the basics, we will be applying what we know to add awesome site features like messaging other users, leaving comments and rating projects and so much more. This course will leave all skill levels with a new load of knowledge and different approaches of completing tasks.\nFor those who are more advanced and maybe have already built out a few applications, you can simply skip through or fast-forward to get to the \"good stuff\". In the second half of the course we will work on a voting system, messaging, sending emails and even building out an API. Even if you have done these things already you can see a new approach and build an awesome website in the process.\n\n\nWhat Will You Learn?\nSetting up a Django Website\nViews & URL's\nTemplates & Template Inheritance\nDesigning and Modeling data\nCreate Read Update Delete\nStatic Files\nInstalling Themes\nLogin & Registration\nSearch & Pagination\nBuilding API's\nClass Based Views\nDeploying a website\n*BONUS - Access to private Discord group\n\n\nBuild a REAL Project\nWe wont just be learning the basics, we will be applying what we know to add awesome site features like: messaging other users, leaving comments, rating projects and so much more.\n\n\nWhy Django?\nScale easily with Django for high traffic websites. This is one of its most popular features. Including built in tools to help you get your site to market fast.\nSecurity is a priority when building any website. Django is used by top brands for this reason. It contains built in security features: SQL injection, cross-site request forgery, and cross-site scripting.\nEasily customizable and versatile for any website and company size.\nOne of Djangos likable features is the community support. You can join forums and Facebook groups for connections and resources.\n\n\nDjango helped me build and sell my first website for $41k\nI was searching for a Python framework that would help me build a lab management system (that I then sold to my boss - watch the full story on YouTube: Dennis Ivy - How I Sold My Python/Django Website for $41,000).\nI started with Flask, but all it had was a server setup and everything else I would have to figure out on my own.\nThen I discovered Django...\nIt provided me with ALL the tools. Everything from authentication to a templating engine to a great package for a rest API. Added bonus: they have great community support around it and great infrastructure.\nI didn't have to worry that it wasn’t scalable,\nIf it was good enough for YouTube, Spotify, Instagram and all the behemoth of machines, I knew that it would never be an issue for me.\nOne of the best features about Django is that it has a built in dashboard. You can run one command and already start seeing your data and modify it.\nThis helped me get the site up and running quicker than expected.\n\n\nF.A.Q\nQ: Will I have support throughout this course?\nA: Unfortunately, with over 50k students across all platforms and a full time job, the teacher cannot offer individual help beyond the course itself. You can join the Discord group for additional support from fellow students.\n\n\nQ: Is the course up to date?\nA: Yes this course is currently up to date and compatible with Django 5.0.\n\nQ: Will I always have access to this course when I purchase it?\nA: Yes this course will always be up and hosted on Udemy.",
      "target_audience": [
        "Beginner Python developers looking to build websites with django"
      ]
    },
    {
      "title": "Angular Forms In Depth (Angular 20)",
      "url": "https://www.udemy.com/course/angular-forms-course/",
      "bio": "Build complex enterprise data forms with the powerful Angular 19 Forms module",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Learn all about Template-Driven Forms",
        "Learn all about Reactive Forms",
        "Build custom validators, including asynchronous and multi-field validators",
        "Build custom form controls, including a file upload component",
        "Build reusable nested forms",
        "Build a large production-scale multi-step enterprise form"
      ],
      "course_content": {
        "Introduction": [
          "Angular Forms In Depth -Helicopter View",
          "IMPORTANT",
          "Angular Forms In Depth - Development Environment Setup",
          "Introduction to Angular Forms - why do we need a Forms module?",
          "Introduction to Angular Material Form Controls"
        ],
        "Template Driven Forms In Depth": [
          "Introduction to Template Driven Forms - the ngForm Directive",
          "Understanding how the Angular ngModel Directive Works",
          "Introduction to Form Validation",
          "Understanding Angular Forms CSS State Classes - ng-valid ng-dirty ng-touched",
          "How to Display Error Messages in an Angular Form",
          "Learn All the Built-in Template-Driven Form Validators",
          "How to use ngSubmit - Disabling the Form Submit button",
          "Advanced ngModel - ngModelChange and the ngModelOptions updateOn Property",
          "Advanced ngModel - ngModelOptions In Detail",
          "Understanding ngModel One Way and Bidirectional Data Binding",
          "Template Driven Forms Custom Field Validator - a Password Strength Validator",
          "How to write a Custom Form Field Validator Function",
          "Implementing a Custom Form Field Validation Directive",
          "Multiple error messages per form field - Understanding the problem",
          "The onlyOneError Custom Pipe - API Design",
          "The onlyOneError Custom Pipe - Step-by-Step Implementation"
        ],
        "Introduction to Angular Reactive Forms": [
          "Introduction to Angular Reactive Forms",
          "Introduction to Reactive Forms - Step-by-Step Example",
          "Reactive Forms - The Form Control Directive and Custom Validators",
          "The Form Builder API - Writing much more concise Reactive Forms",
          "Comparing Reactive and Template Driven Forms",
          "Angular Strictly Typed Forms",
          "Non Nullable Form Builder"
        ],
        "Angular Reactive Forms In Depth": [
          "New Section - Advanced Reactive Forms",
          "Building an Angular Multi-Step Reactive Form with Angular Material",
          "Angular Asynchronous Form Validators",
          "Angular Forms Controls - How to add a DatePicker field to a Reactive Form",
          "Angular Form Controls - Checkbox and Text Area",
          "Angular Selection Dropdown Form Control - Step-by-Step Example",
          "Multi-Step Forms - Displaying an Error Message per Step",
          "Reactive Forms - Dynamically Enabling and Disabling Form Fields",
          "Angular Material Date Range Selector - Step-by-Step Example",
          "Reactive Forms Multi-field Custom Validation",
          "How to implement Form Draft Pre-Save using the valueChanges Observable API"
        ],
        "Angular Custom Form Controls": [
          "New Section - Angular Custom Form Controls - a File Upload Component",
          "Custom File Upload Component - Step-by-Step Implementation",
          "Angular File Upload - Opening a File Upload Dialog",
          "Angular File Upload - Uploading to a Node Server using the HTTP Client",
          "Implementing a File Upload Progress Indicator",
          "Understanding the Angular Forms ControlValueAccessor Interface",
          "ControlValueAccessor Interface - Step-by-Step Implementation",
          "ControlValueAccessor - Setting Up DI Configuration and Demo",
          "Angular Custom Form Controls - The Validator Interface",
          "What is a Reusable Nested Form?",
          "How to Use ControlValueAccessor to implement a Nested Form"
        ],
        "Form Arrays In Depth": [
          "New Section - Setting Up Step 3 of our Multi-step Form",
          "Preparing Step 3 of our Multi-Step Form",
          "Angular Form Arrays - Step-by-Step Example",
          "Angular Multi-Step Form - Final Demo"
        ],
        "Conclusion": [
          "Bonus Lecture (Updated October 2025)",
          "Angular Forms In Depth - Conclusions & Key Takeaways"
        ]
      },
      "requirements": [
        "Some base knowledge of Angular and Typescript is all that is needed"
      ],
      "description": "This course is an in-depth guide to Angular template-driven and reactive forms, and it comes with a running Github repository.\nThis Course In a Nutshell\nAngular is very often used to build in-house enterprise applications, which are usually quite form-intensive. This type of application usually has a large number of complex data entry forms, with all sorts of complex form validation rules.\nAngular provides us with all the tools that we need to build these complex forms in a scalable and user-friendly way via the Angular Forms module.\nThere are two types of forms available: template-driven and reactive forms, and we will cover both types of forms in detail in this course. We will also compare them and explain when to use each form type and why.\nCourse Overview\nWe will start this course by implementing a simple form using template-driven forms and ngModel. We will understand exactly how ngModel and ngForm work under the hood and the several ways of using these directives for both data binding and form validation.\nWe will learn template-driven forms in detail, including how to build custom form validators using custom directives. Next, we will refactor the same template-driven form that we have built into a reactive form, and we will compare the two approaches.\nWe will then use reactive forms to build a much more complex data entry form with all sorts of different types of controls, nested groups, arrays of controls, custom validators, asynchronous validators, multi-field validations, form draft pre-saving, and much more.\nThe multi-step reactive form that we will be building will be something very close to what you will find in a production application, and it allow us to easily demonstrate all the powerful features of reactive forms in one large step-by-step exercise.\nWe will learn how to build reusable nested forms (like an address form), and we will also cover file upload in detail. We will build a custom file upload control with a progress indicator and cancel upload capabilities.\nWe will finish the course by providing a complete example demonstrating how to use Form Arrays.\nTable of Contents\nThis course covers the following topics:\n- Introduction to the Angular Forms module\n- Angular Material form components\n- Template-driven Forms - how does ngModel work?\n- Typical Form validation rules\n- Form field validation error messages\n- Using ngModel for one-way binding and bi-directional data binding\n- Understanding ngModelOptions in detail\n- Template-driven form custom validator\n- How to use the FormBuilder service\n- Refactoring of a form from template-driven to a reactive form\n- Comparison between template-driven and reactive forms - when to use each and why\n- Why are they called reactive forms? Understanding the multiple Observables available\n- How to reset and set new values in a reactive form\n- Development of a complex form using reactive forms\n- How to use all types of commonly used form controls: normal inputs, text areas, radio buttons, checkboxes, calendars, auto-completion, etc.\n- The formGroup and formControlName, and formControl directives\n- Reactive forms custom validators - multi-field validation\n- Backend validation of a form field using async validators\n- Dependent fields - how to enable or disable some form fields depending on the values of other fields\n- Pre-saving a form draft\n- Building a multi-step form with Angular Material\n- Reusable nested forms (an address form)\n- Custom File Upload Form Control\n- Form Arrays\nWhat Will you Learn In this Course?\nAt the end of the course, you will have learned everything that you need to know for designing and developing complex data entry forms, that are both maintainable and user-friendly\nYou will be able to implement all sorts of commonly needed form validation rules, including the most advanced scenarios\nYou will feel comfortable using both template-driven and reactive forms, and you will know when to use each and why\nHave a look at the course free lessons below, and please enjoy the course!",
      "target_audience": [
        "Angular Developers, trying to Learn in Depth everything about Angular Forms"
      ]
    },
    {
      "title": "Laravel 9 A-Z For Beginner With Complete News Portal Website",
      "url": "https://www.udemy.com/course/laravel-6-framework/",
      "bio": "In this course, you will learn larval 9 A-Z, Build One complete Basic Project and Online News Portal Website Project",
      "objectives": [
        "Laravel 9 Fundamental A-Z",
        "Create Complete News Portal Project with Laravel 9",
        "Multiple Language Option",
        "Adding Professional Theme for Frontend",
        "Adding Professional Theme for Backend",
        "Image Upload System",
        "User Role Management",
        "How to Set Up Reset Password Option",
        "How to Create Change Password Option",
        "Website Setting Option",
        "Manage News Advertisements",
        "News Photo and Video Gallery",
        "News Widgets Option",
        "Custom Pagination in Laravel",
        "How to Deploy Project in cPanel",
        "Email Verify in Laravel",
        "Update User Profile",
        "Multiple Image Upload",
        "Laravel 9 Authentication"
      ],
      "course_content": {
        "Introduction": [
          "News Portal Introduction - What you will build",
          "Welcome to the Course",
          "Need Your Support."
        ],
        "Laravel 10 New Features What's New in Laravel 10": [
          "Laravel 10 New Features What's New in Laravel 10 | Part 1",
          "Laravel 10 New Features What's New in Laravel 10 | Part 2",
          "Laravel 10 New Features What's New in Laravel 10 | Part 3"
        ],
        "Laravel 9 Basic Foundation with Complete Website": [
          "Introduction What We will Create",
          "Downloadable Resource for this Section.",
          "Essential Environment Setup",
          "Laravel 9 Installation",
          "Discuss on Laravel Folder Structure",
          "What is MVC and Its Benefits",
          "What is Route",
          "Laravel Routes",
          "Laravel Blade Syntax",
          "How to Make Controller And Get Url Request Part 1",
          "How to Make Controller And Get Url Request Part 2",
          "Middleware"
        ],
        "Laravel 9 Breeze Authentication Setup": [
          "Laravel 9 Breeze Authentication install",
          "Discuss on Laravel Breeze File Structure",
          "Forgot Password & Password Reset",
          "Email Verify in Laravel",
          "Changing our Logo Component",
          "Logging in with Username"
        ],
        "Admin Panel Setup With Custom Theme": [
          "Project All Themes-",
          "Admin Panel Setup Part 1",
          "Admin Panel Setup Part 2",
          "Admin Panel Setup Part 3",
          "Admin Logout Option",
          "Customize Register Page",
          "Customize Login Page",
          "Customize Forget Password Page",
          "Admin Profile & Image Update Part 1",
          "Admin Profile & Image Update Part 2",
          "Admin Profile & Image Update Part 3",
          "Admin Profile & Image Update Part 4",
          "Admin Profile & Image Update Part 5",
          "Adding Toster In For View Message",
          "Display Toster Message in Login and Logout",
          "Admin Profile Change Password Part 1",
          "Admin Profile Change Password Part 2",
          "Take a Backup"
        ],
        "Frontend Template Setup": [
          "Frontend Template Setup Part 1",
          "Frontend Template Setup Part 2"
        ],
        "Backend Home Page Slider Setup": [
          "Backend Home Page Slider Option Part 1",
          "Backend Home Page Slider Option Part 2",
          "Install Image intervention Package",
          "Backend Home Page Slider Option Part 3",
          "Frontend Home Page Slider"
        ],
        "Backend About Page Setup": [
          "Backend About Page Setup Part 1",
          "Backend About Page Setup Part 2",
          "Frontend About Page Show Data Part 1",
          "Frontend About Page Show Data Part 2"
        ],
        "Multi Image Setup": [
          "Backend Add Multi Image in About Page Part 1",
          "Backend Add Multi Image in About Page Part 2",
          "Backend Add Multi Image in About Page Part 3",
          "Backend Add Multi Image in About Page Part 4",
          "Backend Add Multi Image in About Page Part 5",
          "Frontend Show Multi Image"
        ],
        "Project Portfolio Setup": [
          "Backend Portfolio Page Setup Part 1",
          "Backend Portfolio Page Setup Part 2",
          "Backend Portfolio Page Setup Part 3",
          "Backend Portfolio Page Setup Part 4",
          "Backend Portfolio Page Setup Part 5",
          "Frontend Portfolio Show Setup Part 1-",
          "Frontend Portfolio Show Setup Part 2"
        ]
      },
      "requirements": [
        "OOP (Basic)",
        "Basic HTML, CSS, Bootstrap",
        "Local Server : Xampp/Wampp/Vertrigo/Mamp",
        "Text Editor/IDE: Sublime Text, Visual Studio Code, Netbeans, PHPStrom, Atom etc"
      ],
      "description": "Laravel 9 A-Z For Beginner With Complete News Portal Website\nIf you are very serious about learning laravel 9 from beginner to advance. Build up your laravel skill then this course will be the best choice for you. In this course, you will build three different projects. One will be How to build a company website with Laravel 8. Then Laravel 8 Multi Authentication and last you will build one complete Advance Ecommerce Project with Laravel 8. You will build every project from scratch. This is not just a functional course it's a real-life project course. Which helps you to become a professional developer.\nLaravel is an open-source PHP framework, which is robust and easy to understand. It follows a model-view-controller design pattern. Laravel reuses the existing components of different frameworks which helps in creating a web application. The web application thus designed is more structured and pragmatic.\nWhy We Should Learn Laravel?\nLaravel is a first development life cycle and less code functionality\nit's easy to learn\nmaking web applications faster\nconfiguration error and exception handling\nautomation testing work.\nURL Routing Configuration is very high in Laravel.\nScheduling tasks configuration and management\nIt has a huge community\nUnlimited resource.\nMost importantly it's very easy to get a job if you have Laravel skills.\nWhat is your benefit ?\nAs i told you this complete project course which beings you to Beginner to Advance level by creating complete most advanced Online News Portal Project. You will able to understand how to complete one project, how to handle project bugs, Core structures of MVC. This complete project will help you to get a job with this new skill. You will be able to start work for your client. Add this project in your profolio and university assignment And most importantly you will get my support with in 24 hours. If you have any issues just let me know about this i will be in your touch.\n\n\nWhat is the Best Part of this Course?\nCreate Complete News Portal Project with Laravel 8\nMultiple Language Option\nLaravel 9 A-Z Basic Fandamentals\nAdding Professional Theme for Frontend\nAdding Professional Theme for Backend\nUser Role Management\nImage Upload System\nMultiple CRUD Function\nWebsite Setting Option\nManage News Advertisements\nNews Photo and Video Gallery\nNews Widgets Option\nCustom Pagination in Laravel\nAdding Toster in Project\nChange Password Option\nHow to Deploy Project in cPanel\nEmail Verify in Laravel\nForgot Password & Password Reset\nUpdate User Profile\nSite SEO\nMultiple Image Upload\nLaravel 9 Authentication\nLaravel 9 Notification\nand much more functions ..\nThis course you will not just learn you actually doing it. Learn and apply this on live project with me.\nSound Great right?\n---------------------------------------------------------------------------------------------------------------------\nClick the \"Enroll Now\" button at the top right now!\n\nI am excited to see you in the course!\nSincerely,\neasy Learning",
      "target_audience": [
        "This Course Best for Beginner",
        "People looking for web programming jobs should take this course",
        "Students who want to take their PHP skills to another level should take this course",
        "This course is for beginners to advanced laravel developers who want to increase their skills",
        "University Project Assignment",
        "Who want to become Laravel Developer."
      ]
    },
    {
      "title": "The Complete front end web developer Bootcamp - 14 projects",
      "url": "https://www.udemy.com/course/complete-front-end-web-developer-bootcamp/",
      "bio": "Learn HTML, HTML5, CSS, CSS3, Bootstrap, JavaScript, Jquery and usage of dozens of plugins like animated CSS & TypeAhead",
      "objectives": [
        "code front end of the web page",
        "Convert any web page into mobile optimised theme.",
        "Write custom Javascript code",
        "Write code in jQuery",
        "Use any pre built libraries in JS and jQuery",
        "Convert any Template into required one",
        "Take online web development projects and complete them",
        "understand codes in HTML, CSS, Bootstrap, javascript and Jquery"
      ],
      "course_content": {},
      "requirements": [
        "No pre requirements to start this course",
        "we will need a few FREE editors (covered in videos)",
        "A simple browser, ohh wait, you already have that",
        "Some developers addon on your browser (covered in videos)"
      ],
      "description": "Welcome to the Complete front end development Bootcamp. This is one of the most comprehensive bootcamp available online. So, if you are new to web development, thats great news because starting from scratch is always easy. And if you have tried some other courses before, you already know that web development is not easy. This is because of 2 reasons. Either the web development course might be missing projects, or might be focusing on too many things at a time. When you focus on everything, in a short duration of time, it is very tough be a great developer.\nThis course gives you a unique experience and focus only on front end web development. First we will get professional and free web development tools, then we will start with HTML. Once we cover this ground, we will take down our very first challenge. Further we will learn HTML 5 and start our first project.\nMoving further we will take CSS and CSS3. After that we will have a complete and dedicated section on projects. After that we will learn Bootstrap and optimise our sites for mobile view. After that we will learn Javascript and jQuery and will do some projects in that.\nStructure of this is designed after research and you will never feel bore in this course. After completion of the course, you will be able to design a web page in the exact same design that is on your mind or you might have seen on some theme website.\nCreating a web template of your own or edit the one, you will be a full skill ninja to do the job.\nOur offline bootcamps are priced at 1000$ per student but with online education, you can get the exact same content in fractions of that.\nStill not satisfied, have a look at the FREE project movie in the course.",
      "target_audience": [
        "Anyone who is interested in building career in web development",
        "One who wants to learn the implementation of HTML, CSS, js and jquery",
        "This course is not for you if you are already a FULL STACK DEVELOPER"
      ]
    },
    {
      "title": "Learn Complete Modern Front-End Web Development Step-by-Step",
      "url": "https://www.udemy.com/course/front-end-web-development-complete-guide-step-by-step/",
      "bio": "Master the essentials of Front-End web development with HTML5, CSS3, Modern JavaScript, Bootstrap 5, Angular, and React",
      "objectives": [
        "Build responsive websites using HTML5 and CSS3, mastering modern web design techniques and layout principles.",
        "Write clean, efficient JavaScript code to create interactive web applications with a focus on ES6+ features.",
        "Design stunning, mobile-first websites using Bootstrap 5 components, utilities, and advanced customization techniques.",
        "Develop dynamic single-page applications using Angular, focusing on components, services, and data binding.",
        "Create scalable and interactive user interfaces with React, mastering hooks, props, and state management.",
        "Understand the fundamentals of web development, including semantic HTML, CSS animations, and DOM manipulation.",
        "Optimize websites for performance and accessibility, ensuring cross-browser compatibility and SEO best practices.",
        "Build reusable UI components and design systems with Bootstrap 5, Angular, and React for professional-grade projects.",
        "Learn to integrate APIs and fetch real-time data in modern JavaScript frameworks like Angular and React.",
        "Gain hands-on experience with front-end project workflows, including complex and deployment techniques."
      ],
      "course_content": {},
      "requirements": [
        "A computer or laptop with internet access to practice coding and follow along with the lessons.",
        "Basic computer skills and familiarity with using a web browser.",
        "A code editor like Visual Studio Code installed on your system (free and easy to set up).",
        "No prior programming experience needed – this course is beginner-friendly and starts from scratch.",
        "Curiosity and willingness to learn new concepts in web development.",
        "Familiarity with typing and basic file management skills to organize your projects.",
        "(Optional) A notebook to jot down important notes or concepts for future reference.",
        "Enthusiasm to build projects and experiment with HTML, CSS, JavaScript, and frameworks.",
        "Access to Google Chrome (or any modern browser) for testing your web pages.",
        "No expensive software required – all tools used are free and open-source."
      ],
      "description": "(August 2024 - Update) Added Project: Vanilla JavaScript - Note App\nLearn Front-End Web Development by building a fully functional Note App with Vanilla JavaScript.\nSetting up a clean and scalable project structure.\nCreating a responsive user interface using HTML, CSS, and Bootstrap for seamless user experience.\nImplementing CRUD (Create, Read, Update, Delete) operations for complete app functionality.\nAdding interactivity and dynamic features using modern JavaScript techniques.\nIncludes step-by-step video tutorials and exercise files for hands-on practice and reference.\nGain practical tips and best practices for JavaScript development and project structuring.\nEnhance your JavaScript skills by building a real-world application.\nStrengthen your understanding of DOM manipulation and front-end development techniques.\nAdd a professional-grade project to your portfolio to showcase your Front-End Web Development expertise.\n(June 2023 - Update) Bootstrap Section Updated to Bootstrap 5.3\nThis course now covers the latest Bootstrap 5.3, keeping your Front-End Web Development skills up to date.\nLearn the newest features, utilities, and components introduced in Bootstrap 5.3.\nCourse Overview: Front-End Web Development - Complete Guide (Step by Step) [Updated 2024]\nThis comprehensive course teaches Front-End Web Development from scratch, designed for beginners and those looking to refine their skills.\nWhat You’ll Learn:\nHTML5 & CSS3\nMaster the foundations of Front-End Web Development by learning to structure and style websites. Build responsive designs and layouts for modern devices.\nJavaScript & ES6+\nAdd interactivity and dynamic features to websites using modern JavaScript techniques (ECMAScript 6 and later). Learn JavaScript step-by-step, from basics to advanced topics.\nBootstrap 5\nHarness the power of Bootstrap 5, the most popular CSS framework, to design responsive, mobile-first websites.\nWork on three live projects, including:\nEMS Web App: Build an Employee Management System with Bootstrap 5.\nBlog App: Create a fully functional blog platform for all levels.\nProfessional Website: Design and develop a high-quality, professional-grade website.\nAngular\nGet started with Angular by integrating it into HTML5 and CSS3 applications. Learn components, data binding, and routing to build dynamic, single-page web applications.\nReact & Bootstrap\nMaster React with the Create React App tool. Build a practical React web application that manages user data via an API. Learn how to implement CRUD functionality (Create, Read, Update, Delete) within your React app.\nWhy Take This Course?\nComprehensive Curriculum: Covers everything you need to know about Front-End Web Development, from basics to advanced frameworks.\nHands-On Projects: Gain practical experience with real-world projects in HTML5, CSS3, JavaScript, Bootstrap, Angular, and React.\nStep-by-Step Tutorials: Detailed and beginner-friendly explanations for every topic, making it easy to follow along.\nPortfolio-Ready Projects: Build professional applications to showcase your skills.\nExpert Support: Access to the Q&A section for personalized help and guidance.\nEnroll now and take the first step toward mastering Front-End Web Development. Whether you’re a beginner or looking to upgrade, this course is going to equip you with the knowledge and hands-on experience to create stunning, interactive websites.\nAll the best, and enjoy learning!",
      "target_audience": [
        "Beginners who want to start their journey in web development and build responsive websites from scratch.",
        "Students or professionals looking to gain hands-on experience in HTML5, CSS3, and modern JavaScript.",
        "Aspiring front-end developers aiming to master frameworks like Angular and React for real-world projects.",
        "Designers who want to enhance their skills by learning how to code and create interactive web pages.",
        "Entrepreneurs or business owners interested in creating and managing their own websites without hiring developers.",
        "Developers transitioning to front-end roles and seeking expertise in Bootstrap 5, Angular, and React.",
        "Tech enthusiasts curious about how websites are built and eager to learn coding fundamentals.",
        "Freelancers aiming to expand their service offerings with professional front-end development skills.",
        "Students pursuing careers in tech who want to add valuable front-end development skills to their resume.",
        "Anyone passionate about web development, regardless of prior experience, looking to build dynamic, modern websites."
      ]
    },
    {
      "title": "Make a Spotify Clone from Scratch: JavaScript PHP and MySQL",
      "url": "https://www.udemy.com/course/spotify-clone/",
      "bio": "Learn JavaScript, PHP and MySQL by building the ultimate music streaming website from scratch! The complete guide!",
      "objectives": [
        "Build your own music streaming service like Spotify",
        "Master important areas of development in JavaScript, PHP, HTML and MySQL",
        "Discover important techniques that are essential for any aspiring software engineers"
      ],
      "course_content": {
        "Setting up the sign up/ log in forms": [
          "Setting up your local server",
          "Creating the login form",
          "Creating the register form"
        ],
        "Handling the user's submitted data": [
          "Intro to PHP - Handling form submission",
          "Form sanitation - Cleaning the input",
          "Separating our code",
          "Preparing our validation functions",
          "Creating the Account class",
          "Validating the username",
          "Validating the name and emails",
          "Validating the passwords",
          "Checking if the sign up was successful",
          "Outputting error messages",
          "Creating our Constants class",
          "Remembering form values"
        ],
        "Completing the sign up / log in process": [
          "Creating the users table",
          "Connecting to our database from PHP",
          "Inserting user details",
          "Testing out the sign up process!",
          "Query not working? Watch this video",
          "Last remaining validation checks",
          "Login handler",
          "Sessions"
        ],
        "Styling the registration page": [
          "Adding a background image",
          "Styling the login container",
          "Styling our text boxes",
          "Input placeholder color",
          "Styling the submit buttons",
          "Buttons to switch between forms",
          "Showing and hiding the forms on press",
          "Showing only the relevant form when data is submitted",
          "Show/hide button - mouse pointer",
          "Right section content",
          "Applying style to the right section content",
          "56,800+ icons FOR FREE - Icons8",
          "Styling the error messages",
          "Remembering the username after failed log in attempt"
        ],
        "Creating the now playing bar": [
          "Quick overview of the index page",
          "Now playing bar container",
          "Creating the now playing bar element",
          "Left, center and middle sections of the bar",
          "All the icons for our site",
          "Adding our player buttons",
          "Making the play and pause buttons larger",
          "Progress bar parent elements",
          "The progress bar",
          "Album artwork",
          "Track info labels",
          "Volume bar"
        ],
        "Navigation menu": [
          "Page containers",
          "Creating our navigation bar container",
          "Navigation bar site logo",
          "Navigation items",
          "Navigation search icon",
          "Navigation links color change on hover"
        ],
        "Tables and data": [
          "Overview of our MySQL table structure",
          "Creating our database tables",
          "Inserting data into the artists, genres and albums tables",
          "Inserting data into the songs table + FREE music files",
          "Shortcut to inserting data into the songs table"
        ],
        "'Music you might like' page": [
          "Organisational trick",
          "Main view containers",
          "Header and footer files",
          "Getting albums from the database",
          "Outputting the album artwork images",
          "Styling the album artwork images",
          "Styling the album title",
          "Making the albums clickable links"
        ],
        "Album page": [
          "Getting album id from url",
          "Getting the artist of the album",
          "Creating the Artist class",
          "Creating the Album class",
          "Album header section",
          "Styling the header section",
          "Displaying the number of songs in the album",
          "Creating the Song class",
          "Getting the songs on an album",
          "Outputting the track count",
          "Outputting the track name and artist name",
          "Outputting the track duration",
          "Styling the track list rows",
          "Styling the track count",
          "Track style finishing touches"
        ],
        "The music player": [
          "Introduction to HTML5 Audio",
          "Creating our initial playlist of 10 random songs",
          "Including JQuery",
          "Set track function setup",
          "Set track function",
          "Playing and pausing the song via buttons",
          "Introduction to Ajax calls",
          "Getting a song via ajax",
          "Getting the artist via ajax",
          "Getting the album via Ajax",
          "Updating the plays count when a song is played",
          "Displaying the time remaining label",
          "Formatting the time remaining",
          "Updating the progress bar as the song plays",
          "Dragging the progress bar on click",
          "Controlling the volume",
          "Updating the volume progress bar",
          "Preventing controls from highlighting on mouse drag",
          "Skipping to the next song",
          "Song repeat mode",
          "Repeat button",
          "Playing the next song when current song ends",
          "Previous song button",
          "Mute button",
          "Shuffle button",
          "Shuffle - Part 1",
          "Shuffle - Part 2",
          "Playing songs by clicking on the song's play button",
          "Fixing the song's play button bug"
        ]
      },
      "requirements": [
        "No prior knowledge needed! A basic understanding of HTML is helpful - but not essential",
        "A computer"
      ],
      "description": "Do you want to become an expert in JavaScript, PHP and MySQL?\nDo you want to build a real music streaming site just like Spotify?\nIf so, you’re in the right place! This course will guide you step by step in creating your own Spotify clone COMPLETELY from scratch.\nWe’re talking the kind of website that will amaze anybody that sees it. The kind of website that will get you hired in no time!\nWhy let me teach you?\nI work as a Software Engineer at Microsoft where I build products used by millions of people all over the world! I want to take the skills I’ve gained through years of working with some of the best developers in the world and transfer them directly to you!\nI’ve taught thousands of students here on Udemy and created some of the most popular development courses on Udemy!\nOkay so what’s the course about?\nI will personally guide you, step by step, in creating your own music streaming site just like Spotify complete with:\nUser registration\nSearch for all their favorite artists, albums and songs in real time!\nCreate and customize their own playlists\nControl the music with all the usual controls such as play, pause, skip, previous, shuffle, repeat etc.\nAnd much, much more!\nWhether you are a complete beginner* or an experienced programmer, this course will be massively beneficial to you.\nWhy should I take the course?\nIn the programming world, the “big 4” often consists of Google, Microsoft, Facebook and Amazon. To get a job at any of these companies, you absolutely MUST know the essentials: HTML, CSS, PHP, JQuery, JavaScript and MySQL.\nIf you take this course, you will have nothing to worry about because we use all of these skills extensively!\nSkills:\nThere is so much to learn! In the course, you will become very familiar an excellent range of technical skills such as HTML, CSS, PHP, JavaScript, JQuery and MySQL. Any good developer will agree that these skills are KEY to becoming an excellent developer/software engineer. If you're just starting out, after completing this course, you will be in a very good position with a fundamental foundation of skills.\nSupport:\nBy enrolling in this course, you will have the COMPLETE support of a Microsoft Software Engineer (me). I'm always ready to answer any question you may have. Programming issues, errors, feature requests, general programming advice - it doesn't matter, I'm always happy to help! I always aim to respond to questions within a few hours and it's also worth noting that I've answered EVERY SINGLE question asked so far on all of my courses.\nFuture course discounts:\nBy enrolling in this course, you will get access to ALL of my current and future courses for the lowest possible discount we as instructors are capable of offering on Udemy - FOREVER.\nProject portfolio:\nThe site you create in this course will be the highlight of your project portfolio! Any potential employer who see's this project on your resume will want to hear all about it. The reason? They know that a project like this means you're familiar with the wide range of technical skills they need their employees to know.\n\n\nFun!\nFinally, this project is a lot of fun and I know you'll have a great time implementing your own unique ideas as well as the ones we implement together. What are you waiting for?\n*You don't need any experience to take this course, however a basic understanding of HTML would be great. I will explain everything as I go, but some things I spent more time on than others. I don't spent a huge amount of time on the absolute lowest level basics e.g. what is HTML. So if you have absolutely no experience programming, you are absolutely fine to take this course, just ask me to explain things further if you would like a more detailed explanation :)",
      "target_audience": [
        "Any aspiring software engineers or web developers dreaming of working at a company like Google, Facebook or Microsoft",
        "Anyone who wants to master HTML, JavaScript, PHP, MySQL"
      ]
    },
    {
      "title": "Zero to Hero in Lightning Web Components",
      "url": "https://www.udemy.com/course/zero-to-hero-in-lightning-web-components/",
      "bio": "Complete Guide to learn Salesforce Lightning Web Components from Basics to Advance with real-time problems and projects",
      "objectives": [
        "HTML and CSS required for LWC",
        "JavaScript required for LWC",
        "What are Lightning Web Components?",
        "Benefits of Lightning Web Components over Aura",
        "Fundamentals of LWC with real time examples",
        "How to Build reusable Lightning Web Components",
        "Integration of LWC with APEX",
        "Navigation Service",
        "Lightning Messaging Service",
        "Reusability of Components",
        "Charts and Maps in LWC",
        "CSV and PDF Generation in LWC",
        "Memory Game in LWC",
        "Styling technique in LWC",
        "Many Real time features and Projects",
        "LWC OSS with HEROKU",
        "LWC Builder",
        "Quick Actions in lwc"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Outline",
          "Fundamentals of Web Technology",
          "Tools for Web Development"
        ],
        "HTML & CSS": [
          "Basics of HTML",
          "Basics of CSS"
        ],
        "JavaScript for LWC": [
          "JavaScript Learning Path",
          "Variables",
          "Fixing Typo in Variables",
          "Data Types",
          "null vs undefined",
          "Spread Operator",
          "Destructuring",
          "String interpolation",
          "String Methods",
          "Object/JSON Operations",
          "Array Methods",
          "Promise",
          "Modules import and export",
          "QuerySelector",
          "Events",
          "Arrow Function",
          "setTimeout vs setInterval"
        ],
        "Lightning Web Component and Setup": [
          "Intro to Lightning Web Components",
          "Setting Up Developer org",
          "Setting Up Salesforce DX Environment",
          "Setting Up My Domain and Dev Hub",
          "List of Common SFDX Commands",
          "Setting up Project and Scratch Org"
        ],
        "Fundamentals of LWC": [
          "Create Your First Component in LWC",
          "Component Folder Structure",
          "Different Naming Conventions Available in LWC",
          "App Creation and Component Deployment",
          "Local Properties and Data Binding",
          "Methods And Two way Data Binding",
          "@track properties",
          "Getters in LWC",
          "Conditional Rendering",
          "Improved Conditional Rendering",
          "Template Looping",
          "Iterator Loop fix"
        ],
        "First Project - Quiz App": [
          "QUIZ APP"
        ],
        "Composition and Query Selectors": [
          "Component Composition",
          "Shadow DOM",
          "Accessing Elements in the Component"
        ],
        "Styling in LWC": [
          "Inline and External CSS",
          "Lightning Design System",
          "SLDS design token",
          "Shared CSS",
          "Dynamic CSS",
          "Styling across shadow DOM"
        ],
        "Component Lifecycle Hooks": [
          "Introduction to lifecycle Hooks",
          "Lifecycle Hooks in Mounting Phase",
          "Lifecycle Hooks in Unmounting Phase",
          "Lifecycle Hooks in Error Phase",
          "Render Method"
        ],
        "Components Communication": [
          "Intro to Components Communication",
          "Parent to Child Communication Approaches",
          "Parent To Child Communication using primitive Data type",
          "Parent To Child Communication using non-primitive Data type",
          "Parent To Child Communication on action at parent component",
          "Calling Child Method from Parent component",
          "Child to Parent Communication Approaches",
          "Child to Parent Communication Using Simple Event",
          "Child to Parent Communication Using Event with Data",
          "Child to Parent Communication Using Event Bubbling",
          "Pubsub Module"
        ]
      },
      "requirements": [
        "A PC with Windows or Linux or Mac",
        "Basic knowledge of Salesforce platform",
        "Willingness to learn"
      ],
      "description": "Lightning Web Component framework is a new programming model to develop Salesforce Lightning Components.\nThe easiest way to learn modern web design, HTML5 and CSS3 step-by-step from scratch. Design AND code a huge project.\nIn this course, we will learn about the following topics:\nFundamentals of HTML and CSS\nTools for Lightning Web Component Development\nJavaScript is Required to master the LWC\nSetup of Vscode, Salesforce DX, Dev HUB, Scratch Org\nWhat are Lightning Web Components?\nBenefits of Lightning Web Components\nData Binding and Properties\nGetter and setter\nComponents Communication\nLifecycle hooks\nPubSub module\nLightning Messaging Service\nRendering components conditionally\nTemplate looping\nLightning Data Services and Base components to get Salesforce data in Lightning web Components\nNavigation Service\nApex connection\nWire service\nReusability of Components\nStyling technique in LWC\nPDF Generation in LWC\nCharts  in LWC\nMaps in LWC\nCSV generation in LWC\nMemory Game in LWC\nMany Real-time features and Projects\nAll latest features added.\nSpring 22 changes\nSummer 22 changes - lightningAlert, lightningPrompt, lightningConfirm\nThe course will mainly focus on Lightning Web Component development. We will take real-time problem statements and examples to learn about each and every topic.\nIf you are new to any web development framework, please do not worry as the course will start from very basic (ground 0) to help you understand how can you start coding web components.\nIf you are already an expert in Web Development frameworks, then this course will definitely be a major plus to your skills as it primarily focuses on learning modern web standards, building ECMAScript modules and developing UI components.",
      "target_audience": [
        "Salesforce Professionals",
        "UI and UX developers",
        "Looking for a job change in Salesforce",
        "Salesforce Admin who wants to get into Salesforce Development"
      ]
    },
    {
      "title": "WordPress for Absolute Beginners",
      "url": "https://www.udemy.com/course/wordpress-for-absolute-beginners-course/",
      "bio": "Installing and Customizing WordPress Themes, Working with Posts and Pages, Writing and Optimizing blog posts and more",
      "objectives": [
        "Install WordPress and connect with Domains",
        "Working with Wordpress Settings, Posts and Pages",
        "Customizing Themes and Plugins",
        "Writing and Optimizing Blog Posts",
        "Profiting from Blogs: Banner Ads and Others."
      ],
      "course_content": {
        "Wordpress Blogging Basics, Domain & Hosting": [
          "Getting started",
          "Different blogging platforms",
          "Choosing the domain name",
          "Choosing hosting provider"
        ],
        "Wordpress Installation & connecting domain to website": [
          "Wordpress Installation - Quick Install: Part 1",
          "Wordpress Installation - Quick Install: Part 2",
          "Wordpress Installation - Manual Installation",
          "Connecting your domain to your website"
        ],
        "Working with WordPress Settings, Posts and Pages": [
          "First look at wordpress",
          "WordPress Settings",
          "Posts",
          "Pages"
        ],
        "Working with WordPress Themes and Plugins": [
          "Themes",
          "Customizing a theme",
          "The Menu",
          "Plugins",
          "More on plugins"
        ],
        "WordPress Blogposts - Writing and Optimization": [
          "Writing and optimizing a blogpost",
          "Advanced optimization of a blog post",
          "How to find a good article writer"
        ],
        "Earning From WordPress Blogging": [
          "Profiting from your blog: Banner Ads",
          "Profiting from your blog: Other Methods",
          "Final thoughts"
        ]
      },
      "requirements": [
        "No prerequisite knowledge required"
      ],
      "description": "WordPress Blogging and WordPress driven Web development is an amazing career path. By completion of this course, you will master yourself in several aspects of WordPress. This course gives you hands-on and practical experience on Installing and Customizing WordPress Themes, Plugins, Working with Posts and Pages, Writing and Optimizing Blog posts and more.\nMastering these areas are one of the fastest ways to improve your career. Hope this course will be used as a helping hand for your prospective career. Please dig on free preview videos for more information.",
      "target_audience": [
        "Absolute Beginners who has near zero knowledge on WordPress"
      ]
    },
    {
      "title": "Master Java Web Services and REST API with Spring Boot",
      "url": "https://www.udemy.com/course/spring-web-services-tutorial/",
      "bio": "Build Java Web Services & REST API - RESTful & SOAP - with Spring & Spring Boot. Learn REST API & SOAP Web Services Now!",
      "objectives": [
        "You will Learn to Design and Develop SOAP and RESTful web services with Spring Boot",
        "You will Understand the BEST PRACTICES in designing RESTful web services",
        "You will Learn the MAGIC of SPRING BOOT - Auto Configuration, Spring Initializr and Starter Projects",
        "You will Learn to Connect Web Services to a Database using JPA and HIBERNATE with Spring Boot",
        "You will Learn to Implement Exception Handling, Validation, HATEOAS and Filtering for RESTful Web Services.",
        "You will Learn to use a wide variety of Spring Boot STARTER PROJECTS - Spring Boot Web, Spring Boot Web Services, Spring Boot Data JPA",
        "You will learn how to version, monitor (Spring Boot Actuator) and document (Swagger) your RESTful Web Services with Spring Boot",
        "You will understand about WSDL, SOAP Header, SOAP Body, SOAP Fault, XSD, JAXB and EndPoint"
      ],
      "course_content": {},
      "requirements": [
        "You have an attitude to learn while having fun :)",
        "You should have prior Java Experience and Zero Experience with Web Services",
        "We will help you install Eclipse and get up and running with Maven and Tomcat."
      ],
      "description": "REST API?   Yes.    Spring Boot ?  Yes     SOAP ?   Yes     Best Practices ?  Yes    Hands-on ?   Of course.\nDo you want to Master Building Great Java Web Services - both RESTful and SOAP - with Spring Boot?\n\n\nWHAT OUR LEARNERS ARE SAYING:\n5 STARS - This is the best course if you like to learn how REST API exactly works. The instructor is awesome. I had a great time watching his videos and doing coding for this course. It really helped me to do a coding assessment for the company.\n5 STARS - This course gave me an excellent head start with creating Restful web services!\n5 STARS - It is such an awesome course, I have now got an idea to create production level restful services\n5 STARS - As an experienced JEE developer unfamiliar with Spring Boot and developing web services within it, this was simply an awesome course for becoming knowledgeable and comfortable in applying it in a real-world context.\n5 STARS - This is my first spring boot course. I've thoroughly enjoyed it. Thank you very much Ranga for delivering such a high quality course. I've learned a lot spring boot from you. If someone want to learn spring boot, this is one of the best courses to pick up.\n\n\n******* Course Overview *******\nDeveloping SOAP and RESTful web services is fun. The combination of Spring Boot, Spring Web MVC, Spring Web Services and JPA makes it even more fun.\nArchitectures are moving towards microservices. RESTful web services are the first step to developing great microservices. Spring Boot, in combination with Spring Web MVC (also called Spring REST) makes it easy to develop RESTful web services.\nThere are two parts to this course - RESTful web services and SOAP Web Services.\nIn the first part of the course, you will learn the basics of RESTful web services developing resources for a social media application. You will learn to implement these resources with multiple features - versioning, exception handling, documentation (Swagger), basic authentication (Spring Security), filtering and HATEOAS. You will learn the best practices in designing RESTful web services.\nYou will be using Spring (Dependency Management), Spring MVC (or Spring REST), Spring Boot, Spring Security (Authentication and Authorization), Spring Boot Actuator (Monitoring), Swagger (Documentation), Maven (dependencies management), Eclipse (IDE), Postman (REST Services Client) and Tomcat Embedded Web Server. We will help you set up each one of these.\nWhile the use of SOAP Web Services is on the way down, there are still considerable number of web services using this approach.\nIn the second part of the course, you will learn the basics of implementing SOAP Web Services developing a few web services for a course management application. You will learn to use a Contract first approach - defining XSD (XML Schema Definition) for your requests and responses. You will learn about WSDL (SOAP Header, SOAP Body and SOAP Fault), XSD (XML Schema Definition) and JAXB (Java API for XML Binding). You will implementing three SOAP web services with exception handling and basic security (with WS Security).\nIn this part of the course, you will be using Spring (Dependency Management), Spring Web Services , Spring Boot, Spring Security (Authentication and Authorization), Maven (dependencies management), Eclipse (IDE), Wizdler (SOAP Services Chrome Plugin) and Tomcat Embedded Web Server. We will help you set up each one of these.\nYou will learn\nWhat is a Web Service?\nWhat is a RESTful Web Service?\nHow to implement RESTful Web Services with Spring and Spring Boot?\nWhat are the best practices in designing RESTful Web Services?\nHow to design Resources and GET, POST and DELETE operations?\nHow to implement Validation for RESTful Web Services?\nHow to implement Exception Handling for RESTful Web Services?\nWhat is HATEOAS? How to implement HATEOAS for a Resource?\nWhat are the different approach in versioning RESTful Services?\nHow to use Postman to execute RESTful Service Requests?\nHow to implement basic authentication with Spring Security?\nHow to implement filtering for RESTful Services?\nHow to monitor RESTful Services with Spring Boot Actuator?\nHow to document RESTful Web Services with Swagger?\nHow to connect RESTful Services to a backend with JPA?\nWhat is a SOAP Web Service?\nWhat is WSDL (Web Service Definition Language)?\nWhat is SOAP Header, SOAP Body and SOAP Fault?\nWhat is an XSD (XML Schema Definition)?\nHow to write an XSD for your requests and responses?\nWhat is JAXB (Java API for XML Binding)?\nWhat is an Endpoint?\nWhat is a Contract First approach?\nWhat are the different steps in building SOAP Web Services with Spring Web Services & Spring Boot?\nHow to build different SOAP Web services for GetCourseDetailsRequest, GetAllCourseDetailsRequest and DeleteCourseDetailsRequest?\nHow to use Wizdler to execute SOAP Requests?\nHow to implement exception handling for SOAP Web Services?\nHow to implement basic security with WS Security for SOAP Web Services?\n\n\nCOURSE HIGHLIGHTS:\n\n\nRESTful Web Services\nStep 01 - Initializing a RESTful Services Project with Spring Boot\nStep 02 - Understanding the RESTful Services we would create in this course\nStep 03 - Creating a Hello World Service\nStep 04 - Enhancing the Hello World Service to return a Bean\nStep 05 - Quick Review of Spring Boot Auto Configuration and Dispatcher Servlet - What's happening in the background?\nStep 06 - Enhancing the Hello World Service with a Path Variable\nStep 07 - Creating User Bean and User Service\nStep 08 - Implementing GET Methods for User Resource\nStep 09 - Implementing POST Method to create User Resource\nStep 10 - Enhancing POST Method to return correct HTTP Status Code and Location URI\nStep 11 - Implementing Exception Handling - 404 Resource Not Found\nStep 12 - Implementing Generic Exception Handling for all Resources\nStep 13 - Exercise : User Post Resource and Exception Handling\nStep 14 - Implementing DELETE Method to delete a User Resource\nStep 15 - Implementing Validations for RESTful Services\nStep 16 - Implementing HATEOAS for RESTful Services\nStep 17 - Overview of Advanced RESTful Service Features\nStep 18 - Internationalization for RESTful Services\nStep 19 - Content Negotiation - Implementing Support for XML\nStep 20 - Configuring Auto Generation of Swagger Documentation\nStep 21 - Introduction to Swagger Documentation Format\nStep 22 - Enhancing Swagger Documentation with Custom Annotations\nStep 23 - Monitoring APIs with Spring Boot Actuator\nStep 24 - Implementing Static Filtering for RESTful Service\nStep 25 - Implementing Dynamic Filtering for RESTful Service\nStep 26 - Versioning RESTful Services - Basic Approach with URIs\nStep 27 - Versioning RESTful Services - Header and Content Negotiation Approaches\nStep 28 - Implementing Basic Authentication with Spring Security\nStep 29 - Overview of Connecting RESTful Service to JPA\nStep 30 - Creating User Entity and some test data\nStep 31 - Updating GET methods on User Resource to use JPA\nStep 32 - Updating POST and DELETE methods on User Resource to use JPA\nStep 33 - Creating Post Entity and Many to One Relationship with User Entity\nStep 34 - Implementing a GET service to retrieve all Posts of a User\nStep 35 - Implementing a POST service to create a Post for a User\nStep 36 - Richardson Maturity Model\nStep 37 - RESTful Services Best Practices\nSOAP Web Services\nStep 01 - Initialize a Spring Web Services application with Spring Boot\nStep 02 - Overview of creating SOAP Web Service using Contract First Approach\nStep 03 - Define Request and Response XML Structure\nStep 04 - Define XML Schema Definition (XSD) for Request - GetCourseDetailsRequest\nStep 05 - Define XML Schema Definition (XSD) for Respone - GetCourseDetailsResponse\nStep 06 - More about XML Schema Definition and Implementing XSD Best Practices\nStep 07 - Introduction to Java API for XML Binding (JAXB) and Configuring JAXB 2 Maven Plugin\nStep 08 - Configuring an Endpoint for GetCourseDetailsRequest\nStep 09 - Spring Web Services Configuration - Message Dispatcher Servlet\nStep 10 - Spring Web Services Configuration - Generating WSDL\nStep 11 - Using Wizdler to execute SOAP Requests\nStep 12 - Implementing a service - Course Details Service - backend with in memory array list\nStep 13 - Implementing SOAP Web Service for GetAllCourseDetailsRequest\nStep 14 - Quick introduction to different parts of a WSDL\nStep 15 - Implementing SOAP Web Service for DeleteCourseDetailsRequest\nStep 16 - Improving the DeleteCourseDetailsRequest - Using an Enum for Status\nStep 17 - Exception Handling and SOAP Fault Responses\nStep 18 - Implementing Security for SOAP Web Services with WS Security\nStart Learning Now. Hit the Enroll Button!",
      "target_audience": [
        "You want to learn the basics of Web Services",
        "You want to learn the terminology associated with Web Services",
        "You want to learn to develop and design RESTful web services",
        "You want to learn to develop and design SOAP web services",
        "You have good experience with Java and want to see what more you can do with Java",
        "You have good experience with Spring and want to use that knowledge"
      ]
    },
    {
      "title": "Asp.Net Core : The Complete Guide To Build RESTful Api's",
      "url": "https://www.udemy.com/course/restful-apis-in-aspnet-core/",
      "bio": "Learn to build secure RESTful Api's with Asp.Net Core, Entity Framework and C# with .NET 7 2024",
      "objectives": [
        "Create Rest Api's with .NET 7",
        "Build the backend for your web and mobile apps",
        "Build Web Api's with Entity Framework Code First Approach",
        "Use Entity Framework to query data",
        "Use Model Validations to Validate the data",
        "Implement Sorting , Paging & Searching",
        "Implement Caching to reduce server load",
        "Implement Authentication & Authorization in Web Api's with Microsoft Identity",
        "Deploy Web Api to Microsoft Azure & Third Party Hosting Provider",
        "Test Api via Postman",
        "Develop Real Estate Rest Api From Scratch"
      ],
      "course_content": {},
      "requirements": [
        "The student's must have a Windows machine. If you're using MAC then you'll need a windows virtual machine Or Visual Studio For MAC with MySQL Server",
        "Knowledge of Asp .Net , C# and Entity Framework.",
        "C# (at a minimum lambda expressions, LINQ)"
      ],
      "description": "Welcome to the most latest and complete course on Rest Api's with .Net 7 2024.\nAre you tired of boring outdated and incomplete courses , then let's dive in to this course. Well I'm Asfend Microsoft Most Valuable Professional (MVP) and in this course I'll explain you every single aspect of restful web api's with .net core and c#. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a complete web api's in .net core. And the purpose of this course is to train you to build your own Restful web api's in .net core.\n\nThe main focus of this course is on the Restful Web Api via Asp .NET Core and C#. So if you're familiar with C# , .Net and Entity Framework Or if you want to create the Restful web api's in Asp .Net then this is the right course for you.\nIf you don't have any idea about Rest Api then don't worry because in this course we'll cover all the Rest Api concepts.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nHow to create a Rest Api via Entity Framework Code First Approach with all the advanced functions.\nImplement Status Codes\nAdding Migrations in Web Api's\nAdding Content Negotiation\nImplement Validation in Web Api's\nHow to add the Routing and Custom Methods\nImplement Authentication and Authorization and secure your Api with JWT\nCreate Real World Real Estate Application From Start to Finish\nDeploy Rest Api's to Third Party Web Hosting Provider\nDeploy Rest Api's to Microsoft Azure\n\n\nDon’t waste your time\nDon't waste another minute of your precious life on poor quality videos courses. Or instructors who you can't understand. Or teachers who have no real world in-person teaching experience. Your time is precious. In this course you'll get a best instructors with carefully crafted content, beautiful outline and proper structured material and learning by doing.\nI'll explain you each and every single line of code. I've been in your shoes and every time copy and paste is not a solution and that's why I've tried to create everything in front of you so that you can learn how to solve the errors. We'll learn every thing from scratch.\nAnd before this course you don't need my other courses. If you're a C# developer  then you should go ahead with this course.\nAfter this course you'll be very much familiar with .Net Core Web Api's and you'll be able to create any kind of real world web api's in .net quite easily as well as efficiently.\n\n\nSign up today, and look forward to:\nOver 5 hours of HD 1080p video content\nBuilding a Real World fully-fledged Web Api's including ones that use Rest Api Architecture , Access Token , Authentication , Authorization and much more.\nAll the knowledge you need to start building any api you want.\n\n\n\n\nRemember...\n\n\nI'm so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days! So it's completely risk free, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's First Complete Rest Api's Course with .Net Core and C#.",
      "target_audience": [
        "Developers who are familiar with C# Programming Language.",
        "Some prior programming experience in Object Oriented Programming languages will also help to pick the concepts easily.",
        "Developers who want to build the Complete Restful Web Api from A to Z.",
        "Developers with no knowledge of Asp .Net Core Web Api's who want to build Restful Web Api's with this framework."
      ]
    },
    {
      "title": "Understanding HTML and CSS: Semantic HTML + Modern CSS",
      "url": "https://www.udemy.com/course/understanding-html-and-css/",
      "bio": "Understand, don't copy: Master semantic HTML, CSS container queries, layers, grid, flexbox, nesting, browser internals",
      "objectives": [
        "Author semantic HTML.",
        "Use semantic HTML to improve the accessibility of your websites and apps.",
        "Layout web pages visually using CSS.",
        "Read and understand the HTML and CSS specifications to be able to continue teaching yourself.",
        "Understand how browser rendering engines work.",
        "Gain a proper understanding of the CSS cascade, inheritance, and specificity.",
        "Advanced CSS features like Flexbox and Grid.",
        "Hyper-modern features like Container Queries, :has, Nesting, and Layers to keep your skills modern and cutting-edge.",
        "How to prompt an AI to get the best quality HTML and CSS"
      ],
      "course_content": {},
      "requirements": [
        "No experience needed."
      ],
      "description": "New lectures on maximizing the quality of AI LLM output when AI generating HTML and CSS!\nMajor Update! New lectures on hyper-modern CSS including Container Queries (@container), :has, Nesting, Media Query Range Syntax, and Layers (@layer). Deeply understand how these latest additions to CSS really work, and keep your skills on the cutting edge!\nUpdates include a brand-new modern real-world HTML and CSS project using cutting-edge CSS techniques and hands-on coding exercises!\nIn this course you'll gain a deep understanding of HTML and CSS (HTML5, CSS3 and beyond), as we dive into how these technologies really work. We'll look at the problems HTML and CSS are trying to solve and how they solve them. We'll dive into how browser rendering engines really work. We'll gain confidence to read and understand the HTML and CSS specifications, so you can continue to teach yourself in the future and keep your skills fresh.\nAlong the way we’ll follow our core philosophy of “Don’t Imitate, Understand”. Simply copying others’ projects won’t help you when faced with a real-world job that doesn’t look like the projects you’ve copied. To succeed in a real world job, you need to truly understand.\nThis course is designed for beginners to learn from scratch, but also to break experienced developers out of bad habits.\nSome things you will learn in this course are:\nLearn to author semantic HTML.\nLearn how semantic HTML improves the accessibility of your user interface.\nLearn to read and understand the HTML and CSS specifications, so you can continue to teach yourself as new HTML and CSS features come along in the future.\nUnderstand how browser rendering engines work, under the hood.\nGain a deep understanding of the browser DOM.\nGain a proper understanding of the CSS cascade, inheritance, and specificity.\nLearn why CSS works the way it does, so that your mental model let's you deal with problems as they come up during work.\nUnderstand advanced CSS features such as Flexbox and Grid.\nLearn to use CSS to create mobile-first responsive design.\nHands-on coding exercises and quizzes to test your skills.\nUnderstand how hyper-modern CSS features like Container Queries (@container), :has, Nesting, Media Query Range Syntax, and Layers (@layer) work, keeping your skills modern and on the cutting edge.\nModern CSS project with hands-on coding exercises to practice authoring semantic, SEO-friendly, and accessible HTML and using the latest in modern CSS.\nLearn how to prompt an AI to give you the best quality HTML and CSS.\nIf you are new to HTML and CSS: you will learn fundamentals and skills that will help you the rest of your career.\nIf you are an experienced developer: you will learn to reset your mental models, understand and rely on the official specifications, and dramatically improve your day-to-day development experience.",
      "target_audience": [
        "Complete beginners as well as experienced developers."
      ]
    },
    {
      "title": "Master Microservices with Spring Boot and Spring Cloud",
      "url": "https://www.udemy.com/course/microservices-with-spring-boot-and-spring-cloud/",
      "bio": "Java Spring Boot Microservices 5-in-1 - Spring Boot, Spring Cloud, Docker, Kubernetes and REST API (REST Web Services)",
      "objectives": [
        "Develop and design REST API and REST WEB SERVICES with Spring Boot",
        "Develop MICROSERVICES with Spring Boot and Spring Cloud",
        "Orchestrate microservices with KUBERNETES",
        "Create containers for microservices with DOCKER",
        "IMPLEMENT Exception Handling, Validation, HATEOAS and filtering for RESTful Web Services.",
        "Implement client side load balancing , Dynamic scaling(Eureka Naming Server) and an API Gateway",
        "You will setup Centralized Microservices Configuration with Spring Cloud Config Server",
        "You will learn to implement Distributed tracing for microservices with Zipkin",
        "You will implement Fault Tolerance for microservices with Resilience4J",
        "You will understand how to version your RESTful Web Services",
        "You will understand how to monitor RESTful Services with Spring Boot Actuator",
        "You will understand how to document RESTful Web Services with Open API Documentation",
        "You will understand the best practices in designing RESTful web services",
        "Simplify communication with other Microservices using Feign REST Client"
      ],
      "course_content": {},
      "requirements": [
        "You have an attitude to learn while having fun :)",
        "You have experience with Java and Spring and ZERO Experience with Microservices",
        "You have ZERO Experience with Docker",
        "You have ZERO Experience with Kubernetes",
        "This course requires you to download Docker Desktop. An alternative to Docker Desktop is Podman Desktop. If you are a Udemy Business user, please check with your employer before downloading software."
      ],
      "description": "Do you want to learn from the MOST POPULAR Course (250,000+ Students)  on Microservices? Do you want to Learn to Build an Amazing REST API with Spring Boot? Do you want to learn what the Hype about Microservices is all about? Do you want to Build Microservices with Spring Boot and Spring Cloud? Do you want to Build Containers with Docker? Do you want to orchestrate Microservices with Kubernetes? Look no further!\n\n\nUPDATES: New Sections on SPRING BOOT, DOCKER and KUBERNETES.\n\n\nWHAT OUR LEARNERS ARE SAYING:\n5 STARS - Anyone willing to learn Spring Cloud APIs and Spring Rest must enroll for the course without second-thoughts.\n5 STARS - Probably I can say this is best tutorial for Spring boot as well as Micro Service for the learners who have just started there work/projects on these technologies.\n5 STARS - This was an excellent course! The instructor provided great examples that were straight-forward and easy to understand….. I would highly recommend his courses if you want to solid introduction to spring boot and the spring framework.\n5 STARS - Very helpful for the beginners as well as experienced people to gain knowledge on Restful Web-services and Spring boot. Thank you for such a nice tutorial.\n5 STARS - This was perfect course to get introduced to the world of microservices. Instructor explained each topic by first listing the problems that the particular solution is going to solve.\n5 STARS - Great course, the teacher explains everything in a good way making good examples that makes easy to understand how this knowledge can be use in real project. All the courses of in28minutes are great, i'm waiting for the next great course.\n5 STARS - The instructor's has a unique style of teaching which is very uncomplicated , up-to-the point and very effective. Great job!\n5 STARS - This one is the most awesome course that I have ever purchased in udemy!\n\n\nNOTE: This course requires you to download Docker Desktop. An alternative to Docker Desktop is Podman Desktop. If you are a Udemy Business user, please check with your employer before downloading software.\n\n\nCOURSE OVERVIEW:\nDeveloping RESTful web services and REST API is fun. The combination of Java, Spring Boot, Spring Web MVC, Spring Web Services and JPA makes it even more fun. And its even more fun to create Microservices.\nThere are two parts to this course - RESTful web services and Microservices\nArchitectures are moving towards microservices. RESTful web services are the first step to developing great microservices. Java and Spring Boot, in combination with Spring Web MVC (also called Spring REST) makes it easy to develop RESTful web services.\nIn the first part of the course, you will learn the basics of RESTful web services developing resources for a social media application. You will learn to implement these resources with multiple features - versioning, exception handling, documentation (Swagger), basic authentication (Spring Security), filtering and HATEOAS. You will learn the best practices in designing RESTful web services.\nIn this part of the course, you will be using Spring (Dependency Management), Spring MVC (or Spring REST), Spring Boot, Spring Security (Authentication and Authorization), Spring Boot Actuator (Monitoring), Swagger (Documentation), Maven (dependencies management), Eclipse (IDE), Postman (REST Services Client) and Tomcat Embedded Web Server. We will help you set up each one of these.\nIn the second part of the course, you will learn the basics of Microservices. You will understand how to implement microservices using Spring Cloud.\nIn this part of the course, you will learn to establish communication between microservices, enable load balancing, scaling up and down of microservices. You will also learn to centralize the configuration of microservices with Spring Cloud Config Server. You will implement Eureka Naming Server and Distributed tracing with Spring Cloud Sleuth and Zipkin. You will create fault tolerant microservices with Zipkin.\nIn the third part of the course, you will learn the basics of Docker. You will understand how to build containers for microservices built using Docker and Spring Cloud.\nIn the fourth part of the course, you will learn the basics of Kubernetes. You will understand how to orchestrate microservices with Kubernetes.\n\n\nWHAT TO EXPECT FROM EVERY IN28MINUTES COURSE\nin28Minutes offers 50+ Best Selling Courses providing Amazing Learning Experiences to 1 MILLION Learners across the world.\nEach of these courses come with\nAmazing Hands-on Step By Step Learning Experiences\nReal Project Experiences using the Best Tools and Frameworks\nAwesome Troubleshooting Guides with 200+ FAQs Answered\nFriendly Support in the Q&A section\nFree Udemy Certificate of Completion on Completion of Course\n\n\nHERE ARE A FEW REVIEWS ON THE IN28MINUTES WAY\n5 STARS - Excellent, fabulous. The way he has prepared the material and the way he teaches is really awesome. What an effort .. Thanks a million\n5 STARS - A lot of preparation work has taken place from the teacher and this is visible throughout the course.\n5 STARS - This guy is fantastic. Really. Wonderful teaching skills, and goes well out of his way to make sure that everything he is doing is fully understood. This is the kind of tutorial that gets me excited to work with a framework that I may otherwise not be.\n5 STARS - The best part of it is the hands-on approach which the author maintained throughout the course as he had promised at the beginning of the lecture. He explains the concepts really well and also makes sure that there is not a single line of code you type without understanding what it really does.\n5 STARS - I also appreciate the mind and hands approach of teaching something and then having the student apply it. It makes everything a lot clearer for the student and uncovers issues that we will face in our project early.\n5 STARS - Amazing course. Explained super difficult concepts (that I have spent hours on the internet finding a good explanation) in under 5 minutes.\nStart Learning Now. Hit the Enroll Button!\n\n\nSTEP BY STEP DETAILS\nRESTful Web Services\nStep 01 - Initializing a RESTful Services Project with Spring Boot\nStep 02 - Understanding the RESTful Services we would create in this course\nStep 03 - Creating a Hello World Service\nStep 04 - Enhancing the Hello World Service to return a Bean\nStep 05 - Quick Review of Spring Boot Auto Configuration and Dispatcher Servlet - What's happening in the background?\nStep 06 - Enhancing the Hello World Service with a Path Variable\nStep 07 - Creating User Bean and User Service\nStep 08 - Implementing GET Methods for User Resource\nStep 09 - Implementing POST Method to create User Resource\nStep 10 - Enhancing POST Method to return correct HTTP Status Code and Location URI\nStep 11 - Implementing Exception Handling - 404 Resource Not Found\nStep 12 - Implementing Generic Exception Handling for all Resources\nStep 13 - Exercise : User Post Resource and Exception Handling\nStep 14 - Implementing DELETE Method to delete a User Resource\nStep 15 - Implementing Validations for RESTful Services\nStep 16 - Implementing HATEOAS for RESTful Services\nStep 17 - Overview of Advanced RESTful Service Features\nStep 18 - Internationalization for RESTful Services\nStep 19 - Content Negotiation - Implementing Support for XML\nStep 20 - Configuring Auto Generation of Swagger Documentation\nStep 21 - Introduction to Swagger Documentation Format\nStep 22 - Enhancing Swagger Documentation with Custom Annotations\nStep 23 - Monitoring APIs with Spring Boot Actuator\nStep 24 - Implementing Static Filtering for RESTful Service\nStep 25 - Implementing Dynamic Filtering for RESTful Service\nStep 26 - Versioning RESTful Services - Basic Approach with URIs\nStep 27 - Versioning RESTful Services - Header and Content Negotiation Approaches\nStep 28 - Implementing Basic Authentication with Spring Security\nStep 29 - Overview of Connecting RESTful Service to JPA\nStep 30 - Creating User Entity and some test data\nStep 31 - Updating GET methods on User Resource to use JPA\nStep 32 - Updating POST and DELETE methods on User Resource to use JPA\nStep 33 - Creating Post Entity and Many to One Relationship with User Entity\nStep 34 - Implementing a GET service to retrieve all Posts of a User\nStep 35 - Implementing a POST service to create a Post for a User\nStep 36 - Richardson Maturity Model\nStep 37 - RESTful Services Best Practices\nMicroservices with Spring Cloud\nStep 01 - Setting up Limits Microservice\nStep 02 - Creating a hard coded limits service\nStep 03 - Enhance limits service to pick up configuration from application properties\nStep 04 - Setting up Spring Cloud Config Server\nStep 05 - Installing Git and Creating Local Git Repository\nStep 06 - Connect Spring Cloud Config Server to Local Git Repository\nStep 07 - Connect Limits Service to Spring Cloud Config Server\nStep 08 - Configuring Profiles for Limits Service\nStep 09 - Introduction to Currency Conversion and Currency Exchange Microservices\nStep 10 - Setting up Currency Exchange Microservice\nStep 11 - Create a simple hard coded currency exchange service\nStep 12 - Setting up Dynamic Port in the the Response\nStep 13 - Configure JPA and Initialized Data\nStep 14 - Create a JPA Repository\nStep 15 - Setting up Currency Conversion Microservice\nStep 16 - Creating a service for currency conversion\nStep 17 - Invoking Currency Exchange Microservice from Currency Conversion Microservice\nStep 18 - Using Feign REST Client for Service Invocation\nStep 19 - Understand Naming Server and Setting up Eureka Naming Server\nStep 20 - Connect Currency Conversion Microservice & Currency Exchange Microservice to Eureka\nStep 21 - Load Balancing with Eureka, Feign & Spring Cloud LoadBalancer\nStep 22 - Setting up Spring Cloud API Gateway\nStep 23 - Enabling Discovery Locator with Eureka for Spring Cloud Gateway\nStep 24 - Exploring Routes with Spring Cloud Gateway\nStep 25 - Implementing Spring Cloud Gateway Logging Filter\nStep 26 - Getting started with Circuit Breaker - Resilience4j\nStep 27 - Playing with Resilience4j - Retry and Fallback Methods\nStep 28 - Playing with Circuit Breaker Features of Resilience4j\nStep 29 - Exploring Rate Limiting and BulkHead Features of Resilience4j\nStart Learning Now. Hit the Enroll Button!",
      "target_audience": [
        "You want to learn how to design and develop RESTful web services with Spring Boot",
        "You want to learn how to design and develop Microservices with Spring Cloud",
        "You want to learn Step by Step with a Hands-on Approach",
        "You want to learn to build containers for Microservices with Docker",
        "You want to orchestrate Microservices with Kubernetes"
      ]
    },
    {
      "title": "Backbone Tutorial: Learn Backbonejs from Scratch",
      "url": "https://www.udemy.com/course/backbonejs-tutorial/",
      "bio": "A collection of hands-on, step-by-step, bite-sized Backbone tutorials covering fundamentals of Backbone.",
      "objectives": [
        "Write clean, perfectly-structured, maintainable and testable Javascript code",
        "Build rich client applications with Backbone.js",
        "Build Single Page Applications with Backbone.js",
        "Test Javascript code with Jasmine.js",
        "Moduarlize Javascript code with Require.js"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is Your Instructor?",
          "How is This Course Structured",
          "Asking Questions"
        ],
        "Getting Started": [
          "What is Backbone.js?",
          "The Big Picture",
          "A Real-World Example",
          "Getting Backbone.js",
          "Source Codes"
        ],
        "Models": [
          "Introduction",
          "Creating Models",
          "Working with Attributes",
          "Validation",
          "Inheritance",
          "Connecting to the Server",
          "Models Cheat Sheet",
          "Models Project"
        ],
        "Collections": [
          "Introduction",
          "Creating Collections",
          "Working with Collections",
          "Connecting to the Server",
          "Collections Cheat Sheet",
          "Collections Project"
        ],
        "Views": [
          "Introduction",
          "Creating Views",
          "Passing Data to Views",
          "Handling DOM Events",
          "Handling Model Events",
          "Handling Collection Events",
          "Templating",
          "Views Cheat Sheet",
          "Views Project"
        ],
        "Events": [
          "Introduction",
          "Binding and Triggering Custom Events",
          "Creating an Event Aggregator to Coordinate Multiple Views",
          "Events Cheat Sheet",
          "Events Project"
        ],
        "Routers": [
          "Introduction",
          "Creating Routers",
          "Single Page Applications Pros and Cons",
          "Routers Cheat Sheet",
          "Routers Project"
        ],
        "Modularizing Backbone Applications": [
          "Introduction",
          "Require.JS"
        ],
        "Testing Backbone Applications": [
          "Introduction",
          "Introduction to Jasmine",
          "Jasmine Cheat Sheet",
          "Testing Backbone Models",
          "Testing Backbone Collections",
          "Testing Backbone Views"
        ],
        "Developing an App with Backbone": [
          "Introduction",
          "Basics",
          "Adding a New Todo Item",
          "Toggling an Item",
          "Deleting an Item",
          "Connecting to the Server",
          "Templating",
          "Improving the Look and Feel"
        ]
      },
      "requirements": [
        "Only basic understanding of Javascript and jQuery"
      ],
      "description": "Want to learn how to write clean, maintainable, testable Javascript code?\nThere are many libraries and frameworks to help you structure your Javascript code. BackboneJS is one of them.\n\nIn this course, I'll take you on a step-by-step journey to learn Backbone from novice to ninja. You'll learn everything you need to know to build structured and maintainable real-world applications with Backbone.\n\nYou don't need any prior knowledge of Backbone. Only basic understanding of Javascript and jQuery is enough to take this course.\n\n\nWe start with the big picture\nYou'll learn the basic building blocks of Backbone and what they are used for. Then, I'll show you a real-world example of an application built with Backbone and explain how those building blocks work together in action.\n\n\nThen we start learning Backbone.js from scratch\nOnce you get the big picture, we start learning Backbone in a practical, hands-on way from scratch. Lectures are short, concise and up to the point, without wasting your time. I hate courses that waste students' time (with too much rambling) and I've done my best to make sure I won't waste your time in this course!\n\n\nEach section includes:\nAn introduction that tells you what you're gonna learn\nA few lectures, each teaching you new concepts, in a step-by-step fashion\nA cheat sheet for you to quickly review what you've learned\nA mini project or assignment for you to apply what you've learned\n\n\n\nNext we get into the real-world challenges\nOnce we cover the fundamentals of Backbone, then we'll cover unit testing and modularising the code. You'll learn the basics of RequireJS and Jasmine.\n\n\nAnd finally build an application from scratch\nIn the last section, we'll build an application with Backbone in an iterative way. With every iteration we enhance our app in a baby-step fashion. The before and after source code for each lecture is available for you to download to review or to complete on your own.\n\n\nI'll share with you other tips to make you a better web developer\nI've been a web developer since 2000. In the last section, I'll share with you lots of other tips on usability, productivity, clean coding, object-oriented programming, HTML, CSS, a little bit of security and many other things. These supplementary materials help you become a better web developer.\n\n\nI'll show you many real-world examples\nThroughout the course I touch on some popular web sites such as Facebook, Twitter, Pinterest, Four Square and Bitly and explain how you can make something like them with Backbone. So, by the end of this course, you'll have a good and in-depth understanding of Backbone and how to use it in building real-world applications.\n\n\nWhat else will you get?\nLifetime access to course materials\nNew lectures, tips and tricks, absolutely free\nAsk me any questions and I'll help you throughout your learning\n\n\nWhat my students say:\n\"Mosh's course stands out as one of the best online courses I've ever taken, whether for Backbone or any other technology. Mosh's teaching style is unique. He leads the student logically through a progression of understanding in a manner akin to good unit testing.\" - David Handel\n\n\"This is one of the best courses I took o Udemy so far. Mosh is one of the best instructor as it is clear and it's evident that lessons are well prepared and not improvised. Thanks a lot!\" -Andrea Salvatore\n\n\"Very good course, with crystal clear examples. Mosh is a very professional trainer and a magic developer. Thanks for your good job.\" Antonio Marqués Taltavull\nWhat's the risk for you?\n\nAbsolutely nothing! This course comes with Udemy's 30-day money-back guarantee. Just take the course, watch the lectures, practice the assignments and if you're not happy, ask for a refund. You'll get all your money back, no questions asked.\n\n\nSo do you want to learn Backbone from scratch and write clean, structured, maintainable and testable Javascript code?\nTake this course now and let's get started.",
      "target_audience": [
        "Any front-end developer who wants to write clean, structured, maintainable and testable Javascript code",
        "Any front-end developer who wants to develop rich client applications"
      ]
    },
    {
      "title": ".NET 5 Web API & Entity Framework Crash Course",
      "url": "https://www.udemy.com/course/aspnet-web-api-2-hands-on/",
      "bio": "Build your RESTful web service with .NET 5 Web API from the ground up and use Entity Framework to create your database.",
      "objectives": [
        "Build RESTful web services with .NET 5 Web API",
        "Object-relational mapping with Entity Framework",
        "Save data persistently in a SQL Server database",
        "Entity Framework Code-First Migrations",
        "Use Postman to test your web service calls",
        "All CRUD operations (Create, Read, Update, Delete)",
        "HTTP Request Methods GET, POST, PUT, DELETE"
      ],
      "course_content": {},
      "requirements": [
        "You should have a little experience in C#"
      ],
      "description": ".NET 5 is the future.\nIt will combine the old .NET framework with .NET Core and that's why it’s about time to update this course with the latest version of .NET.\nYou will learn the crucial stuff about web development with Web API and Entity Framework in .NET 5 in no time so that you're able to join new projects and companies who are craving for .NET developers like you very soon.\nWith the example application, we're going to build you will be able to create, read, update, and delete contacts. We will use people you might even know, like Peter Parker or Tony Stark.\nThe tools we’re going to use are the .NET SDK, of course, together with Visual Studio to write our code, Postman to make our REST calls and SQL Server Express for our database.\nEverything is available for free! So you already have everything you need to start developing with .NET 5.\nA few minutes into the course, you will already make your first Web API call.\nAfter that you create your own model and controller to make use of the Model-View-Controller pattern and implement all CRUD operations, meaning create, read, update and delete with the corresponding HTTP methods GET, POST, PUT and DELETE.\nThen you will make your data persistent with the help of the object-relational mapper Entity Framework and code-first migration.\nWith all that knowledge, you are ready to conquer any .NET 5 back end application.\n\n\nWhat You Will Learn\nIntroduction\nDownload & install the .NET 5 SDK, Visual Studio 2019 Community Edition & Postman\nCreate your first Web API call within the first minutes\nInitialize a Git repository for your source control\nWeb API\nThe Model-View-Controller (MVC) pattern\nCreate models and controllers\nAttribute routing (with parameters)\nAll CRUD operations (Create, Read, Update, Delete)\nThe HTTP request methods GET, POST, PUT & DELETE\nEntity Framework\nObject-Relational-Mapping\nCode-First Migration\nSQL Server Express\nHow to use a DataContext and a proper ConnectionString\nAll previous HTTP requests with Entity Framework  to save your data in a SQL Server database\n\n\nYour Instructor\nMy name is Patrick and I will be your instructor in this course. I’m a web developer for over a decade now, I have worked for big corporations and small teams, as an employee and a contractor and I just love to see the way Microsoft is going with .NET and how important it gets day by day.\nTo this date, I was able to run seven courses on web development here on Udemy about NET Core, single-page applications, Angular, and DevOps with a total of almost 50.000 unique students and more than 4.000 reviews.\nIf you have any questions, feel free to connect.\n\n\nAnd if you still have any doubts, you have a 30-day money-back guarantee, no questions asked.\nSo, I hope you’re ready for your new skills and your new projects! ;)\nI’m looking forward to seeing you in the course!",
      "target_audience": [
        "This course is for students who want to use .NET 5 to build a RESTful web service for their web application and save the data persistently with the help of Entity Framework and SQL Server"
      ]
    },
    {
      "title": "Complete WordPress Developer Course - Plugins & Themes",
      "url": "https://www.udemy.com/course/wordpress-development-create-wordpress-themes-and-plugins/",
      "bio": "Learn how to develop WordPress themes and plugins. Includes React and Gutenberg development.",
      "objectives": [
        "Build a fully functioning WordPress theme and plugin",
        "Build websites for any business and audience",
        "License your theme and/or plugin",
        "Understand the architecture of a plugin and theme",
        "Understand the WordPress core and it's functions",
        "Fully Understand WordPress's API and how to interact with WordPress and its system",
        "Query the Database and create tables",
        "Comfortably navigate around the WordPress core",
        "Confidently use the command line and learn basic commands.",
        "Learn the latest features in JavaScript including ES6 modules and variables",
        "Improve your workflow using Babel and Webpack",
        "Create, manage and process admin forms.",
        "Create custom post types for special kinds of content",
        "Build custom Gutenberg blocks with React, Webpack and Babel."
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Free PDF Download",
          "What is an environment?",
          "Installing WordPress",
          "Local Quick Tour",
          "Text Editors"
        ],
        "PHP Fundamentals": [
          "Introduction to PHP",
          "Variables",
          "Strings and Booleans",
          "Exercise: Data Types",
          "Functions",
          "Arrays",
          "Loops",
          "Constants",
          "Understanding Errors",
          "Comments",
          "WordPress and PHP",
          "PHP Quiz"
        ],
        "Kickstarting a Theme": [
          "Exploring the WordPress Configuration",
          "Adjusting the Configuration",
          "WordPress File and Folders",
          "File Headers",
          "Additional File Headers",
          "Say Hello to Full-Site Editing",
          "The Index Template",
          "Recreating the Index Template",
          "Language Attribute",
          "Character Set",
          "Loading Additional Tags",
          "The Body Tag",
          "Getting to know WordPress",
          "WordPress Coding Standards",
          "Theme Fundamentals"
        ],
        "Global Styles": [
          "Aside: JSON",
          "Introduction to Global Styles",
          "Loading a Schema",
          "Default Color Palette",
          "Block Color Settings",
          "Adding Colors to the Palette",
          "Colors for backgrounds, text, and links",
          "Custom Colors",
          "Duotones",
          "Gradients",
          "Applying Colors",
          "Applying Gradients",
          "Applying Styles to Elements",
          "Borders",
          "Font Families",
          "Font Sizes",
          "Various Font Settings",
          "Applying Typography Styles",
          "Content Width",
          "Margin and Padding",
          "Custom Units",
          "Block gaps",
          "Enabling Everything",
          "Global Styles Quiz"
        ],
        "Managing Asset Files": [
          "Aside: Git & GitHub",
          "Adding the Template",
          "Understanding Hooks",
          "The functions.php File",
          "The Enqueue Hook",
          "Aside: PHP Function Return Values",
          "Including Files",
          "Registering Styles",
          "Enqueuing Styles",
          "Fixing the Google Font",
          "Loading Additional Head Tags",
          "Managing Asset Files Quiz"
        ],
        "Templates": [
          "Creating a Header and Footer Template Part",
          "Brief Anatomy of a Block",
          "Optimizing the Header and Footer",
          "Adding Dummy Content",
          "Creating the Topbar",
          "The Group Block",
          "Loading Editor Styles",
          "Adding a Navigation Menu",
          "Adding the Midsection",
          "Fixing the Editor Styles",
          "Finishing the Header",
          "Tailwind",
          "Inserting the Columns Block",
          "Query Loop Block",
          "Adding Post Blocks",
          "Styling Post Blocks",
          "Pagination",
          "Sidebar Blocks",
          "Exercise: Footer Blocks",
          "Template Hierarchy",
          "404 Template",
          "Category Template",
          "Search Template",
          "Single Post Template",
          "Page Template",
          "Custom Templates"
        ],
        "JavaScript and React Fundamentals": [
          "What’s to come",
          "Introduction to JavaScript",
          "First Taste of JavaScript",
          "Data Types",
          "Variables",
          "Constants",
          "Template Literals",
          "Creating Functions",
          "Arrays",
          "Objects",
          "The Console Object",
          "Loading JavaScript",
          "Working with the DOM",
          "Conditional Statements",
          "Understanding Scope",
          "Arrow Functions",
          "Destructuring",
          "JavaScript Quiz",
          "What is React?",
          "Getting Started with React",
          "Creating a React App",
          "Dynamic Content",
          "Introduction to JSX",
          "Components",
          "Extending Components with Props",
          "ES6 Modules",
          "Adding State to a Component",
          "Events",
          "Using useEffect",
          "The Command Line",
          "Getting started with NodeJS",
          "React Quiz"
        ],
        "Block Development Fundamentals": [
          "Creating a Plugin",
          "Securing the Main Plugin File",
          "Installing WP Scripts with NPM",
          "Upgrading WP Scripts",
          "Creating a Bundle",
          "Creating a Block Metadata File",
          "Registering a Block",
          "Enqueueing a Block’s Script",
          "Adding a Custom Block",
          "The RichText Component",
          "Storing Data in Attributes",
          "Saving the Block",
          "Aside: JavaScript Spread Operator",
          "Adding Block Props",
          "Enqueuing Styles for Blocks",
          "Fixing the Fancy Header Styles",
          "Formatting the RichText Component",
          "The InspectorControls and PanelBody Components",
          "Adding a Color Palette",
          "Dynamic Styles",
          "Attribute Sources",
          "Creating Multiple Blocks"
        ],
        "Server-Side Rendering": [
          "What is Server-Side Rendering?",
          "Creating a Search Form Block",
          "Adding a Custom Icon",
          "Adding the Template",
          "The PanelColorSettings Component",
          "Exercise: Applying Colors",
          "Creating a Render Callback",
          "Rendering a Block with Output Buffers",
          "Using Attributes in a PHP Render Function",
          "Grabbing the Search Query",
          "Adding the Form to the Template",
          "Creating a Page Header Block",
          "Exercise: Adding the RichText Component",
          "The ToggleControl Component",
          "Toggling Content",
          "Rendering the Category",
          "Adding Support for Output Buffers",
          "Including Files with Globs",
          "A Different Way to Create a Plugin",
          "Gutenberg Block Examples"
        ],
        "Authentication": [
          "Creating the Header Tools Block",
          "The SelectControl Component",
          "The CheckboxControl Component",
          "Exercise: Toggling the Links",
          "Finishing the Header Tools Block",
          "Creating the Authentication Modal Block",
          "Toggling the Registration Form",
          "Rendering the Modal",
          "Loading a View Script",
          "Fixing the View Script",
          "Waiting for the Document to be Ready",
          "Opening and Closing the Modal",
          "Switching Tabs",
          "Handling Form Submissions",
          "What is a REST API?",
          "Practicing with the Rest API",
          "The Problem with the Core Endpoint",
          "Adding a Custom Endpoint",
          "Handling the Response",
          "PHP: Classes",
          "Validating the Request Parameters",
          "Preventing Duplicate Users",
          "Creating a New User",
          "Inline Scripts",
          "Submitting the Registration Form",
          "Preparing the Sign in Endpoint",
          "User Authentication",
          "Wiring the Login Form",
          "Finishing the Blocks",
          "Static Properties",
          "WordPress HTTP Methods"
        ]
      },
      "requirements": [
        "You should have a good understanding of HTML, CSS.",
        "If you know PHP and JavaScript, that's great but not required",
        "You should know how to install WordPress and navigate around.",
        "A text editor of your choice."
      ],
      "description": "Hello! Welcome to the WordPress development course. This is the most comprehensive and effective course on WordPress development around. This is the only course you'll ever need to learn WordPress development.\nWordPress currently holds a majority of the market share on the web. WordPress is an absolute dominant force and its popularity continuously grows. One of the best things about WordPress is that it's easily extendable. There are thousands of plugins and themes available both free and premium.\nIn this course, I will teach you how to create your very own plugins and themes. This course was designed for those who truly want to master WordPress inside and out. There is no stone left unturned. This course will help make you into one of the most competitive WordPress developers out there. You will be able to develop custom plugins and themes no matter how hard the task is.\nYou can expect high-quality and fresh tutorials. This course uses the latest versions of software development including PHP (8.x), and MySQL/MariaDB (8.x) .\nHere is an overview of what you can expect to learn.\nTake a static HTML template and convert it into a fully functioning WordPress theme.\nWrite code that scales and learn the best practices for writing clean, efficient, secure, and reusable code. The WordPress coding standards are covered from PHP to JavaScript and CSS.\nProperly take advantage of the template hierarchy system and create your own custom templates for more unique designs.\nBuild plugins that extend the core functionality of WordPress.\nDevelop custom post types for content that give you the flexibility to curate content you want to. Apply metadata to your content and display everything on the front end.\nLearn about the various methods for creating your own custom admin forms and processing the data securely.\nOther topics include licensing, translations, security, authentication, full-site editing, block development and so much more!\nThe APIs that are covered are the following: Database API, HTTP API, Metadata API, Options API, Plugins API, REST API, Rewrite API, and Settings API.\nOn top of everything, you will also learn how to create your very own Gutenberg blocks. Take advantage of the newest feature that comes bundled with WordPress 6!\nNot confident with your React and JavaScript skills? That's completely fine! The skills required to build efficient and scalable Gutenberg blocks are covered in this course. You'll learn how to use Node, Webpack, Babel, and React\nIn a nutshell, we'll explore the various WordPress APIs and how they should be used. The developer documentation is filled with examples and each page is quite lengthy. WordPress development doesn't have to be hard to learn. The biggest mistake most coding tutorials make is expecting someone to learn simply by imitating others' code. Real-world situations are never exactly like the tutorial.\nI believe the best way to learn is to understand how a tool works and what it does for you, look at examples, and then try it yourself. That's how this course is built, with the goal to help you both learn and understand WordPress.\nTake the leap into Gutenberg Development\nThis course goes beyond the simple WordPress plugin development and WordPress theme development tutorials. You will learn how to create Gutenberg Blocks for WordPress as the back end. The CEO of WordPress, Matt Mullenweg, has urged developers to start learning JavaScript deeply.\nYou will first learn the basics such as the command line and ES6. You will be caught up with the latest standards of JavaScript from modules to destructuring and so much more! Tools such as babel and webpack are also explored and implemented with our code. We will build a functioning WordPress Gutenberg block with React.\nBuild components to separate your code. All this knowledge is right at your fingertips!\n\nWhy am I qualified to teach this course?\nI've been developing sites in WordPress for over 10 years. I know all the tricks to work with WordPress. I don't fool around. You will learn all my techniques and teach you the exact process I go through. I've sold commercial themes and plugins with over 1000+ sales worldwide. I know what it takes to create stuff that works!\nThere is no useless information here in this course. It's all 100% high-quality content and nothing less. I guarantee you will absolutely love this course and see real results. You'll have the skills and confidence to build your own custom themes and plugins your clients will love. You'll be able to take on bigger projects for more money. Don't believe me? I offer a 100% refund within 30 days. There is absolutely no risk involved!\nDon't be the one that gets left behind! Enroll and start learning today",
      "target_audience": [
        "Web designers and developers who wish to take their skills and profit to the next level.",
        "Anyone who wants to generate new income streams",
        "Anyone who wants to understand how the WordPress core truly works and extend it.",
        "Entrepreneurs who want to learn how to build quality and premium plugins and themes.",
        "Anyone who wants to go beyond the basic template tutorials and learn how to add unique features along with BuddyPress and Woocommerce integration.",
        "This course is for students who are new to developing plugins and themes and would like to learn the best practices for developing themes/plugins.",
        "The late beginner to PHP and JavaSricpt programming."
      ]
    },
    {
      "title": "1 Hour JavaScript",
      "url": "https://www.udemy.com/course/1-hour-javascript/",
      "bio": "Learn how to code in JavaScript in 1 hour. This class is set up for complete beginners!",
      "objectives": [
        "Learn the basics of JavaScript",
        "Learn the basics of programming"
      ],
      "course_content": {
        "Let's learn JavaScript": [
          "Let's Learn JavaScript",
          "2. Introduction to the course",
          "3 HTML CSS and JavaScript",
          "4 Adding in a button a function",
          "5 Scaling functions",
          "6 Changing the text in javascript",
          "7 Variables",
          "8 Adding variables",
          "9 Adding user input",
          "10 Variable Scope",
          "11 Saving your project",
          "12 Calling functions with functions",
          "13 If Statement",
          "14 Else statements",
          "15 More on variable scope",
          "16 Else if statements",
          "17 Changing the style tags with JavaScript"
        ],
        "Fantastic you completed the course": [
          "18. Course conclusion"
        ]
      },
      "requirements": [
        "Google Chrome",
        "An internet connection"
      ],
      "description": "Have you ever wanted to learn how to code but didn't know where to start? This is a fantastic course to start. Not only is JavaScript easy to learn but it is in demand? If you take this course you will start the fantastic process of learning to code which will lead you to a better life. Coding is one of the most in demand skills if you can code you have a job.\n\n\nThe best part is that this is for complete beginners! Coding is a fantastic career to get into and this is the first course you should take. All web developers start with JavaScript and it is by far the easiest language to learn. JavaScript is one of the most prominent languages out there. When JavaScript first came out, it was really basic but now it's the building block of almost any web application. JavaScript developers will always be in demand.\n\n\nJust think of all of the things you can do in 1 hour and imagine learning a whole new skill. That's why these 1 hour lessons are so valuable. Take a look at the reviews, they speak for themselves.\n\n\nWhat are you waiting for, enroll today.",
      "target_audience": [
        "Complete Beginners"
      ]
    },
    {
      "title": "The Ultimate Redux Course 2025 - [LATEST Redux-toolkit]",
      "url": "https://www.udemy.com/course/the-ultimate-redux-course-state-management-library/",
      "bio": "Master Redux from scratch with Redux core, Redux-toolkit, react-redux library. Latest Redux course 2025",
      "objectives": [
        "Modern way to write Redux code using Redux-toolkit",
        "Calling API using best methods",
        "Mistakes to avoid while writing redux code",
        "Write clean code like a pro",
        "Debug application using Redux devTools",
        "Best folder structure for maintaining Redux code",
        "Use popular middlewares & create your own",
        "Connect React & Redux using react-redux"
      ],
      "course_content": {
        "Section 01 - Introduction": [
          "Introduction of this course",
          "What is Redux?",
          "When we need Redux? - Important",
          "Quiz for Redux Introduction",
          "Setting up development Environment [One time Process]",
          "Error Solving For Setup",
          "How to ask Questions?",
          "Summary"
        ],
        "Section 02 - JavaScript - Functional Programming": [
          "Introduction of this Section",
          "What is Functional Programming?",
          "Basics of Functions",
          "Higher-order Functions",
          "Function Composition in JavaScript",
          "Making code Simple with Compose and Pipe",
          "Currying in Functional Programming",
          "Pure Functions - Important",
          "What is Immutability?",
          "Immutability in Objects",
          "Update Objects using Immer",
          "Immutability in Arrays",
          "Exercise for Immutability",
          "Solution",
          "Summary"
        ],
        "Section 03 - Basics of Redux (Fundamentals)": [
          "Introduction of this section",
          "How Redux works - Important",
          "Introduction of your first Redux application",
          "Designing the Store Structure",
          "Listing all actions",
          "Let’s create Reducer function",
          "Creating the Redux Store",
          "Dispatching the Actions from Store",
          "Making ActionTypes",
          "Understand the subscribing and unsubscribing methods",
          "Exercise for this section",
          "Solution of this Exercise",
          "Best Folder Structure for Redux",
          "Combining Actions, Reducers and Action-types in One File",
          "Introduction of Redux-thunk",
          "Calling an API using Redux-thunk",
          "Summary"
        ],
        "Section 04 - Let’s Learn Debugging for Redux": [
          "Introduction of this section",
          "Configure redux-devTools",
          "How to use redux-devTools",
          "How to trace code",
          "Import and Export logs",
          "Summary"
        ],
        "Section 05 - Mastering Redux-Toolkit": [
          "Introduction of this section",
          "What is Redux-Toolkit?",
          "Configure Store with toolkit",
          "Defining Actions - createAction",
          "Defining Reducers - createReducer",
          "Creating slices with Redux-toolkit - createSlice",
          "Exercise - for mastering Toolkit",
          "Solution",
          "Combine Reducers using Redux-toolkit",
          "Summary"
        ],
        "Section 06 - Middleware in Redux": [
          "Introduction of this section",
          "What is middleware?",
          "How to create own middleware?",
          "Redux-logger Middleware",
          "Exercise for Middleware",
          "Solution for this exercise",
          "Summary"
        ],
        "Section 07 - Calling API with Redux": [
          "Introduction of this section",
          "Set up the backend for API",
          "Making API request using simple function",
          "CreateAsyncThunk Method",
          "Getting Error in Builder Notation?? Watch This",
          "Defining BaseURL for axios",
          "Logic of Custom API Middleware Method",
          "Creating Custom Middleware for API call",
          "Dealing with loading property",
          "Creating General API action",
          "Creating ActionCreators",
          "Exercise for this section",
          "Solution for this exercise",
          "API for Updating Completed property",
          "API for deleting task",
          "Summary"
        ],
        "Section 08 - Integrating Redux with React Application": [
          "Introduction of this section",
          "Creating React application",
          "Adding redux in react application",
          "Configure Store in React",
          "Subscribe & Dispatching an action",
          "Connecting Redux using react-redux",
          "React-redux Hooks - useDispatch and useSelector",
          "React-redux with Class components",
          "Exercise for this section",
          "Solution for this section",
          "Summary",
          "Congratulations",
          "My Other Courses :)"
        ]
      },
      "requirements": [
        "Just Basic Knowledge of JavaScript",
        "1-2 months experience of Development [Optional]"
      ],
      "description": "Redux is the most popular state management library for JavaScript applications. In this course, you will learn redux from scratch. If you are React or Angular or Vue developer, you can still follow this course because, in this course, I explain redux as separate code so all developers can take advantage of this course.\n\n\nBenefits of this course:\nAdd redux to your skillset means getting a better job or asking for raise\nManage web application state without feeling stress\nUnderstand all redux concepts in a fun way\n\n\nIf you don't like this course you will get your all money back. So the risk is 0 and the learning opportunity is a lot.\nMy name is Meet Patel and I am working as a software engineer. And I also teach programming in easy-to-explain language from my Youtube Channel \"Code Bless You\"\nYou'll learn everything about Redux including the whats, whys, hows, and industry best practices.\n\n\nSo after completing this course you'll learn:\nWhat is Redux & when can we use it\nHow to write Redux code in a simple way\nRedux-thunk\nMaster Redux toolkit\nConfigure store\nstore designs\nActions & Reducers\ncreateAction, createReducer & createSlice\nBest way to debug redux applications\nModern folder structure for redux\nProfound explanation about every concept\nUnderstand redux middlewares\nAPI calling using functions\ncreateAsyncThunk method\nAPI call using own middleware\nConnect React with redux using react-redux\nAnd much more\nIf you take any of my courses or tutorial, you know I don't waste your time with repeated explanations. I will guarantee you, You will master redux after completing this course.",
      "target_audience": [
        "Redux Beginners who want to master Latest Redux",
        "React, Angular or Vue developers who wants to learn State management"
      ]
    },
    {
      "title": "Vue JS 2: From Beginner to Professional (includes Vuex)",
      "url": "https://www.udemy.com/course/vuejs-from-beginner-to-professional/",
      "bio": "Learn Vue JS, and become a VueJS professional. Build complex SPAs with Vue.js, a simple and popular JavaScript framework",
      "objectives": [
        "How to build advanced Vue.js applications",
        "How to build single page applications (SPA)",
        "Understand the theory and how Vue works under the hood",
        "How to manage state in large applications with Vuex",
        "Communicating with servers with HTTP",
        "Use modern tools for developing and building applications (e.g. webpack)"
      ],
      "course_content": {
        "Getting Started": [
          "Hello World",
          "Introduction to Vue.js",
          "Setting up a local development environment (the easy way)",
          "Course structure",
          "Guidelines for the course Q&A"
        ],
        "Fundamentals of Vue.js": [
          "Introduction to this section",
          "Working with templates",
          "Methods",
          "A word about ES6 arrow functions",
          "Introduction to directives",
          "Exercises: String interpolation, methods and directives",
          "Using expressions with directives",
          "Introduction to events",
          "Passing arguments to event listeners",
          "Directive & event modifiers",
          "Key modifiers",
          "Modifier keys",
          "Exercises: Events & modifiers",
          "Two-way data binding",
          "Security: Outputting and escaping HTML",
          "Rendering elements only once",
          "Conditionally rendering elements",
          "Showing and hiding elements",
          "Hiding elements until the Vue instance is ready",
          "Looping through arrays",
          "Accessing the loop index",
          "Looping through object properties",
          "Looping through number ranges",
          "Understanding the v-for update strategy",
          "Array change detection",
          "Exercises: Two-way data binding, conditionals, and loops",
          "Optimizing performance with computed properties",
          "Adding getters & setters to computed properties",
          "Watchers",
          "Exercises: Computed properties & watchers",
          "Filters",
          "Exercises: Filters",
          "Styling with inline CSS styles",
          "Styling with CSS classes",
          "Exercises: Styling with inline styles and classes",
          "Shorthands for events and bindings"
        ],
        "Example application #1: E-commerce": [
          "Introduction to the application",
          "Full source code available within GitHub repository",
          "Displaying products",
          "Adding products to the cart",
          "Displaying the cart info in the menu",
          "Switching between views",
          "Displaying the cart",
          "Handling adding products already in cart",
          "Increasing and decreasing product quantities",
          "Checking out",
          "Wrap up"
        ],
        "Deep dive: The Vue Instance": [
          "Introduction to this section",
          "Accessing a Vue instance outside of its declaration",
          "Using multiple Vue instances on the same page",
          "Proxying",
          "Understanding reactivity",
          "Asynchronous update queue",
          "Understanding the Virtual DOM",
          "Adding watchers dynamically",
          "Accessing the DOM with $refs",
          "Mounting templates dynamically",
          "Using inline templates",
          "Destroying a Vue instance",
          "Vue instance lifecycle & hooks",
          "Using lifecycle hooks"
        ],
        "Setting up a Development Environment with Webpack & Vue CLI": [
          "Introduction to this section",
          "Installing Chrome developer tools extension",
          "Introduction to Vue CLI",
          "Creating a project with Vue CLI",
          "Understanding the project structure",
          "Single file components",
          "Building for production"
        ],
        "Components": [
          "Introduction to components",
          "Why the data property must be a function",
          "Global & Local Components",
          "Component naming conventions",
          "Creating a component in the project",
          "Exercises: Global, local and child components",
          "Organizing components",
          "Global & scoped styles",
          "Passing data to components",
          "Validating passed data",
          "Working with events",
          "Communicating through an event bus",
          "Exercises: Passing data & events",
          "Slots",
          "Named slots",
          "Dynamic components",
          "Keeping dynamic components alive",
          "Dynamic components lifecycle hooks",
          "Vue developer tool in action"
        ],
        "Example application #2: Mail application": [
          "Introduction to the application",
          "Full source code available within GitHub repository",
          "Creating components for the views",
          "Adding the sidebar markup",
          "Switching between views",
          "Loading messages from file",
          "Adding numbers to navigation menu",
          "Displaying the inbox",
          "Marking messages as important",
          "Displaying sent, important and trashed messages",
          "Displaying a message",
          "Automatically marking messages as read",
          "Navigating back to previous views",
          "Deleting messages",
          "Marking messages as read or unread",
          "Refreshing the inbox",
          "Sending messages",
          "Wrap up"
        ],
        "Mixins & Filters": [
          "Introduction to mixins",
          "Using mixins",
          "How mixins are merged in",
          "Global mixins",
          "Global filters"
        ],
        "Forms": [
          "Full source code available within GitHub repository",
          "Text inputs & textareas",
          "Checkboxes",
          "Radio buttons",
          "Selects (dropdowns)",
          "Modifiers",
          "How the v-model directive works",
          "Adding default values",
          "Submitting forms"
        ],
        "Animations & Transitions": [
          "Introduction to transitions and animations",
          "Understanding single element transitions",
          "Transitioning with CSS classes",
          "Implementing our first transition",
          "Specifying transition names",
          "Specifying custom transition classes",
          "Implementing a custom CSS animation",
          "Mixing transitions and animations",
          "Transitioning between elements",
          "Transition modes",
          "Transitioning elements initially (on page load)",
          "Transitioning with JavaScript hooks",
          "Ignoring CSS classes",
          "Transitioning dynamic components",
          "Transitioning multiple elements",
          "Transitioning moving elements"
        ]
      },
      "requirements": [
        "You should have basic knowledge of JavaScript, HTML and CSS",
        "Knowledge of ES6 is a plus, but not a requirement"
      ],
      "description": "Vue JS 2 has quickly become incredibly popular, both due to how powerful the JavaScript framework is, but also how easy it is to learn. Vue is much easier to learn than other JavaScript frameworks such as Angular and React, meaning that you can start building your first Vue application in no time!\n\nIn this course, you will learn how to build reactive web applications at any scale with Vue. You will learn the theory that you need to know about Vue.js, and we will be building several example applications as we go along, demonstrating the explained concepts in practice. The course lectures include examples when going through new material, followed by exercises that you can optionally choose to solve - and we walk through the solutions together.\nWhether or not you have prior experience with VueJS, this course is an easy way for you to learn the framework! Perhaps you have struggled with large and complex frameworks such as Angular? Don't worry, Vue.js is much easier to learn! Getting up and running fast is at the heart of Vue, so no more long hours of configuration just to show \"Hello World!\" Or perhaps you have no experience with reactive JavaScript frameworks and come straight from using jQuery? No problem! Vue.js is an excellent choice for your first framework, and is one of the easiest one to start out with.\nDespite the fact that Vue JS is easy to learn, it is an incredibly powerful framework that can be used to build large web applications as well as small ones. Unlike many other frameworks, Vue.js does not try to take control of your application, and allows you to let the framework control only parts of your application - something that is perfect for migrating legacy applications to a more modern framework without doing a complete rewrite at once! Apart from learning how to build single page applications (SPAs), you will also learn how to manage state in large applications with Vuex.\nThis course starts from scratch with teaching you how to build a \"Hello World!\" application in Vue.js and moves towards building advanced applications step by step. By the end of this course, you will be able to build complex and large web applications with Vue.",
      "target_audience": [
        "Developers who have little or no prior experience with Vue.js",
        "Developers who want to learn a modern and simple JavaScript framework",
        "Developers who want to learn how to build reactive web applications"
      ]
    },
    {
      "title": "Salesforce Development Training for Beginners",
      "url": "https://www.udemy.com/course/learn-salesforce-apex-basic-to-advance/",
      "bio": "Salesforce Development :Learn about Apex programming and Salesforce development. Become a Salesforce Developer.",
      "objectives": [
        "you will have a mastery of programming in Apex no matter what level of experience you are at right now.",
        "My goal is not just to show you how to program, but to help you understand what you are doing, and why you are doing it as well!",
        "Not only do the videos show you how to become a Apex programmer in great detail, but this course also contains lot of assignments to practice.",
        "I'll be constantly adding new material to the course as well as updating it on a regular basis to make sure you access to the best and most update to date and comprehensive Apex training"
      ],
      "course_content": {
        "Introduction to programming": [
          "Introduction to the course",
          "Connect with me on LinkedIn",
          "Subscribe to my YouTube Channel",
          "Post a review on the course",
          "What is Apex in Salesforce?",
          "Apex Syntax: How to better understand the Apex Syntax and Logic in Salesforce?",
          "Setting up Developer Account and walk-through of Developer console."
        ],
        "Variables in apex": [
          "What are Variables and how to declare variables in Apex?",
          "Variable Declaration: Using variables to store 3 numbers and adding them",
          "Variable Declaration: Using Variables to calculate Simple Interest"
        ],
        "Primitive data types in apex": [
          "Data Types in Apex: Learn about data types and what are the different data types",
          "Primitive Data Type in Salesforce: Data Class in Apex and its methods",
          "Primitive Data Type in Apex: Time Class In Salesforce and its methods",
          "Primitive Data Type: Datetime Class in Salesforce and its methods",
          "Datetime Class with Example",
          "String data Type in Apex: String Class and its methods in Apex",
          "String Data Type in Apex: Learn about String methods with Example",
          "String Class and its methods with Example",
          "Assignment on Variables"
        ],
        "Operators in Apex": [
          "Overview of Operators in Apex: What are the different Operators in Apex",
          "What are different operators in Apex? Learn with help of examples"
        ],
        "Conditional (If-Else) Statements": [
          "Conditional If- Else statements in Apex",
          "If Else statement in Apex with Example",
          "If Else statement in Apex with Example 2",
          "If-Else-If statement in Apex: Learn about if else if ladder",
          "If else if statement in Apex with Example",
          "if Else If statement in Apex with Example 2",
          "if Else If statement in Apex with Example 3",
          "if Else If statement in Apex with Example"
        ],
        "Switch Statements in Apex": [
          "Overview of Switch Statements in Apex",
          "Switch Statement with example",
          "Switch Statement in Salesforce with example",
          "Salesforce Switch Statements: Learn about Switch Statements in Apex",
          "Difference between Expressions and statements: What are expressions &Statements?"
        ],
        "Loops in Apex": [
          "What are Loops in Apex? Different types of Loops in Apex",
          "While Loop in Apex With example",
          "For loop in Apex with example",
          "For Loop in Salesforce with the help of an example",
          "For Loop in Apex with Example",
          "What is an Infinite Loop in Apex? How to avoid infinite loops in apex?",
          "Different types of for Loop in Apex",
          "Break and Continue Statements in Loops: Difference between break and Continue",
          "Assignment on If else",
          "Nested for loop in salesforce",
          "How a nested loop works?",
          "Nested for loop with example",
          "Assignment on Loops"
        ],
        "Object Oriented Concepts in APEX": [
          "What Is a Class and Object in Apex??",
          "What is a Class and Object with Example",
          "Quiz 1",
          "Classes and Objects",
          "Static and Non Static Method",
          "Static and Non-static variable",
          "Access Modifiers in Apex",
          "Quiz 3",
          "Constructors in Apex",
          "Inheritance in Apex",
          "Quiz 4"
        ],
        "Collections in Apex (List, Set and Map)": [
          "Collection (List ,Set and Map)",
          "Collections in Salesforce : List,Set and Map",
          "List methods in salesforce apex",
          "Difference between set() and add() method of List",
          "How to debug incompatible collection type error?",
          "Sorting a list in apex salesforce",
          "Set and Map in salesforce",
          "Iterate over a set in salesforce: clear() method",
          "Map in salesforce with example",
          "Adding values to a map in salesforce",
          "Can you put a list inside of a Map?",
          "Collection:List, Set and Map",
          "Quiz 2"
        ],
        "SObjects in Salesforce": [
          "SObject in salesforce: What is an Sobject?"
        ]
      },
      "requirements": [
        "This course assumes no previous experience, and takes you from the absolute beginner concepts like creating your developer's account, writing you very first Apex program, and then goes into more detail as we explore the entire Apex feature set."
      ],
      "description": "Salesforce Development Training for Beginners\nMaster APEX Programming from Scratch – No Coding Experience Required!\nStruggling to Break Into Salesforce Development?\nYou want to become a Salesforce Developer, but you have no programming experience.\nAPEX feels intimidating—like a language only coders understand.\nYou’ve tried online tutorials, but they assume you already know how to code.\nThe Problem? Most courses don’t teach APEX for complete beginners. They rush through concepts, leaving you frustrated and lost.\nThe Solution? This course is designed specifically for non-programmers. We start from the absolute basics and guide you step by step to mastering APEX, ensuring you build real skills with confidence.\n\n\nWhy This Course?\nSalesforce Developers earn an average of $120,000+ per year. But how do you get started if you’ve never coded before?\nIn this course, APEX programming is broken down into simple, easy-to-understand lessons. No tech jargon. No prior experience needed.\nImagine writing your first APEX trigger, automating Salesforce processes, and building apps with confidence—without feeling overwhelmed.\nEnroll now and start coding in APEX today.\n\n\nBefore & After – The Transformation You’ll Experience\nBefore: You’re stuck, confused, and overwhelmed by APEX.\nAfter: You confidently write, debug, and deploy APEX code like a pro.\nHands-on coding exercises\nReal-world Salesforce development projects\nSimple explanations for complex concepts\nBy the end of this course, you won’t just understand APEX—you’ll be ready to apply for Salesforce Developer roles.\nWhat You’ll Learn Inside:\nIntroduction to APEX – Understand how it fits into Salesforce\nAPEX Syntax – Learn step-by-step without prior coding experience\nTriggers & Automations – Write powerful logic to automate Salesforce\nSOQL & DML – Retrieve and manipulate data effortlessly\nReal-World Projects – Apply your skills with hands-on practice\nBonus: Exclusive resources, coding exercises, and support from an experienced instructor.\n\n\nWho Is This Course For?\nComplete beginners with no programming experience\nSalesforce Admins looking to transition into development\nAnyone who wants a high-paying career as a Salesforce Developer\n\n\nStart Your Salesforce Developer Journey Today\nNo fluff. No confusing jargon. Just a clear roadmap to learning APEX.\nFrom total beginner to confident Salesforce Developer—step by step.\nThis is your opportunity to gain a skill that’s in high demand. Enroll now and take the first step toward your dream career.",
      "target_audience": [
        "Students who wants to Explore the programming side of Salesforce",
        "Student who has no experience with Programming before."
      ]
    },
    {
      "title": "The Build a SAAS App with Flask Course",
      "url": "https://www.udemy.com/course/the-build-a-saas-app-with-flask-course/",
      "bio": "Build a real world web app with Python, Flask and Docker. Learn to accept payments with Stripe and so much more.",
      "objectives": [
        "See how a large application gets built up in stages",
        "Build complex web applications and websites",
        "Bid for Flask / web development freelance work",
        "Confidence to apply for Flask positions at software companies",
        "Proficiency with server-side development and databases",
        "An awesome Docker based development environment"
      ],
      "course_content": {
        "Welcome to the Course": [
          "What Does This Course Cover",
          "Dealing with Issues"
        ],
        "Is Flask Right for You?": [
          "Introduction",
          "What Is Flask?",
          "What Kind of Web Sites Can You Build with Flask?",
          "How Does Flask Compare to Other Frameworks?",
          "Massive Companies Who Are Using Flask"
        ],
        "Application Overview": [
          "Introduction",
          "Going over the Demo App That We'll Build",
          "Visualizing the Application's Architecture"
        ],
        "Preparing to Follow Along": [
          "Introduction",
          "Setting up an Initial Course Folder",
          "Downloading the Course's Material",
          "Installing a Code Editor"
        ],
        "Getting Familiar with Docker": [
          "Introduction",
          "Why Is It worth Using Docker?",
          "Installing Docker on Linux, macOS and Windows",
          "Making Sure Docker Works on Your System",
          "Getting Familiar with Docker - Quiz"
        ],
        "Creating a Base Flask App": [
          "Introduction",
          "Exploring the App's Package Dependencies",
          "Taking a Look at the Application File",
          "Investigating the Dockerfile",
          "Running the Flask Application",
          "Dealing with Configuration Settings",
          "Creating a Base Flask App - Coding Challenge",
          "Creating a Base Flask App - Quiz"
        ],
        "Blueprints and Jinja 2 Templates": [
          "Introduction",
          "Creating Our First Flask Blueprint",
          "Deciding on a Look for Our Application",
          "Understanding Jinja 2 Templates",
          "Creating the Home Page",
          "Adding a Few Additional Pages",
          "Blueprints and Jinja 2 Templates - Coding Challenge",
          "Blueprints and Jinja 2 Templates - Quiz"
        ],
        "Testing and Code Quality": [
          "Introduction",
          "Going over the requirements.txt Changes",
          "Getting Comfortable Writing Tests",
          "Investigating Our Code Test Coverage",
          "Performing Static Analysis on the Code Base",
          "Testing Code Quality - Coding Challenge",
          "Testing and Code Quality - Quiz"
        ],
        "Creating a CLI Script": [
          "Introduction",
          "Why Do We Need a CLI Script?",
          "Going over New Content Added to the Project",
          "Getting Familiar with Click",
          "Running the Commands We Created",
          "Creating a CLI Script - Coding Challenge",
          "Creating a CLI Script - Quiz"
        ],
        "Using Our First Flask Extension": [
          "Introduction",
          "Going over the requirements.txt Changes",
          "Debug Toolbar",
          "Using Our First Flask Extension - Coding Challenge",
          "Using Our First Flask Extension - Quiz"
        ]
      },
      "requirements": [
        "A computer running Windows, OSX or Linux",
        "Very basic understanding of HTML, CSS and JavaScript",
        "No paid software is required to complete the course (all software used in the course is free)"
      ],
      "description": "Do you want to create an awesome web application but aren’t sure where to start?\nHi, I’m Nick and for the last year I've been teaching thousands of happy students how to deploy web applications with Docker.\nNow I want to teach you how to develop PRODUCTION READY web applications with confidence.\nMost learning material out there only teaches you how to build toy examples and throw out lines like “you wouldn’t want to do this in production…”, but then they never tell you the REAL way to do it.\nImagine how awful you’d feel after spending your time and hard earned money but still had to do a ton of research to complete your project. I’ve been there, done that and it’s not fun.\nInstead, a large portion of the code base in my course is battle hardened from running in production on multiple projects.\nI’ll be at your side explaining my thought process along the way while we build up a multi thousand line application together.\nYou’re going to walk away with everything you need to feel confident building your own web applications.\n\"Wow, what an amazing resource you've made. The app source is amazingly concise (clearly years of experience distilled). Honestly, it's the handsomest web app code base I've ever seen. - David N.\"\n\nHere’s just some of what you’ll learn by taking my course:\nLearn how to use Docker to “Dockerize” a web application\nLearn what Flask is and how to use its features in your applications\nLearn how to create a Python 2 and 3 compatible code base\nLearn how to use PostgreSQL, Redis and Celery with Flask\nCreate a full blown user management system\nCreate a flexible custom admin interface\nAccept both recurring and microtransaction credit card payments\nDeal with both HTML template and JSON responses\nLogging, middleware and error handling\nDatabase migrations and internationalization (i18n)\n\n\n\"I have been working with Flask for the past 3 years and have been a technical reviewer on the Mastering Flask Packt book, even so, I am learning so much form you! - Pedro B.\"\n\n\nWhat makes Flask awesome?\nBased on one of the most popular computer languages in the world (Python)\nMinimalistic and easy to get started\nLightning fast (Pinterest’s API serves 12+ billion requests / day with Flask)\nVibrant community and ecosystem (hundreds of high quality extensions)\nProfitable for freelancing and consulting\nWhy is Docker worth using?\nSaves you from a ton of headaches when setting up development environments\nEasily move an application across environments or servers\nPrevents issues such as “well, it worked on my machine!”\nMakes developing with teams a much more pleasant experience\nYou won’t need expensive hosting to deploy your web applications\n\n\nYou won’t just become a Flask master by taking my course but you’ll also gain the confidence in developing web applications so that you can command the hourly rates you deserve as a software developer.\nThis could be done through increasing your rates as a freelancer or negotiating a higher salary at your job. In my years working as a consultant and talking to a lot of developers, I discovered that most developers are not confident in their ability to fulfill work that is requested of them.\nSome of them are even afraid to bid on or accept contract work.\nThis is actually a very common problem and is described as “Impostor Syndrome”. I’ve suffered from it for a long time and it has cost me tens of thousands of dollars and now I want to save you the hardship of making the same mistake.\nYou might be thinking “Nick, how in the world is a course on Flask going to let me raise my rates?” and that’s a great question but before I answer that, let’s just play around with a few numbers:\nIf you work 20 hours a week for the next year at $30/hour then you would stand to make $31,200.\nAfter you double your rate then you would make $62,400 instead.\n\n\nWouldn’t you want an extra 30k in your pocket every year? You know, the only real difference between a $30/hour and $60/hour developer is their mindset.\nOne of them believes they can fulfill the job, while the other struggles to believe in themselves.\nHow will Build a SAAS App with Flask help you generate more income?\nSimple, you’re going to get a battle hardened web application that you can use as a bulletproof base for your next project. You won’t have to sit there second guessing yourself while researching everything on your own.\nYou’re getting well tested code that’s been running in production. Tons of edge cases have been ironed out, and features were added due to real life needs. Not only that, but I’ll be at your side explaining everything to you while you make your way through the course.\nYou’re going to see how the application gets built up from a single file, all the way to a 4,000+ line project that spans across dozens of files and folders.\nIf that’s not enough, I’ll be available to answer any questions you have in the course’s forums and all of my courses come with an unbeatable 30 day guarantee that’s 100% RISK FREE. If you don’t love the course then I insist you get a 100% refund – no questions asked.\n\"Definitely delivers on hours and sanity saved! Comprehensive and well worth it. - B.C.\"",
      "target_audience": [
        "Anyone who wants to learn web development",
        "Anyone who wants to raise their rates as a software developer",
        "Anyone who wants to learn the ins and outs of Flask",
        "Anyone who wants to create software as a service applications"
      ]
    },
    {
      "title": "Web Components & Stencil.js - Build Custom HTML Elements",
      "url": "https://www.udemy.com/course/web-components-stenciljs-build-custom-html-elements/",
      "bio": "A Complete Introduction to building Custom HTML Elements/ Web Components with and without StencilJS",
      "objectives": [
        "Build your own re-usable HTML elements that you can use in your own projects or share with other developers",
        "Overcome the limitations of the built-in HTML elements with the power of HTML, CSS and JavaScript only"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Web Components - A Quick Demo",
          "What are Web Components",
          "Join our Online Learning Community",
          "Why Do We Use Web Components?",
          "Comparing Web Components & Frameworks",
          "Course Outline",
          "How To Get The Most Out Of The Course"
        ],
        "Refreshing Next Generation JavaScript (Optional)": [
          "Module Introduction",
          "Understanding \"let\" and \"const\"",
          "Working with Arrow Functions",
          "Exports and Imports",
          "Understanding Classes",
          "Classes, Properties and Methods",
          "The Spread & Rest Operator",
          "Refreshing Array Functions",
          "Understanding Async Code",
          "Next-Gen JavaScript - Summary",
          "JS Array Functions"
        ],
        "Understanding the Basics": [
          "Module Introduction - What are Web Components?",
          "Browser Support",
          "Our Development Setup",
          "Creating our First Custom Element",
          "Interacting with the Surrounding DOM",
          "Understanding the Custom Elements Lifecycle",
          "Using \"connectedcallback\" for DOM Access",
          "Listening to Events Inside the Component",
          "Using Attributes on Custom Elements",
          "\"Attributes\" vs \"Properties\"",
          "Styling our Elements",
          "Using the Shadow DOM",
          "Adding an HTML Template",
          "Using Slots",
          "Defining the Template in JavaScript",
          "Using Style Tags in the Shadow DOM",
          "Extending Built-In Elements",
          "Time to Practice - The Basics",
          "Debugging",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Diving Deeper Into Web Components": [
          "Module Introduction",
          "Understanding Shadow DOM Projection",
          "Styling \"slot\" Content Outside of the Shadow DOM",
          "Styling \"slot\" Content Inside the Shadow DOM",
          "Styling the Host Component",
          "Styling Components from Outside",
          "Conditional Host Styling",
          "Styling with the Host Content in Mind",
          "Smart Dynamic Styling with CSS Variables",
          "Cleaning Up Our Overall Styling",
          "Observing Attribute Changes",
          "Adjusting the Component Behaviour Upon Attribute Changes",
          "Using \"disconnectedcallback\"",
          "Adding a Render Method",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Building More Complex Components": [
          "Module Introduction",
          "Creating the Basics Modal Component",
          "Adding the Modal Container",
          "Styling the Modal Elements",
          "Adding Some General App Logic",
          "Opening the Modal via CSS",
          "Public Methods & Properties",
          "Understanding Named Slots",
          "\"slotchange\" & Getting Access to Slot Content",
          "Closing the Modal with Modal Buttons",
          "Dispatching Custom Events",
          "Configuring Custom Events",
          "Adding Enhancements & Modal Animations",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Stencil - An Introduction": [
          "Module Introduction",
          "Using Web Components in Modern Browsers",
          "Browser Support for Web Components",
          "Using Web Components in All Browsers",
          "Creating a Stencil Project",
          "What is Stencil?",
          "Stencil.js behind the Scenes",
          "Diving Into a First Stencil Component",
          "Wrap Up"
        ],
        "Stencil - Diving Into the Basics": [
          "Module Introduction",
          "Using the Development Server",
          "MUST READ: Ensuring Correct Imports",
          "Creating a New Stencil Web Component",
          "Styling a Stencil Component",
          "Using Props",
          "Important: Reflect Props to Attributes",
          "Configuring Props",
          "Using Slots & Styling",
          "Rendering Conditional Content",
          "Using Attributes for Styling only",
          "Using Props in Combination with Attributes",
          "Understanding Mutable Props",
          "Preparing Tabs",
          "Adding More Event Listeners",
          "Using State",
          "Adding Methods to Components",
          "Adding a Backdrop",
          "Time to Practice - Stencil",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Advanced Stencil": [
          "Module Introdution",
          "Creating a New Component",
          "Component & API Preparations",
          "Submitting Forms",
          "Styling the Component",
          "HTTP Requests in Components",
          "Using the API Key",
          "Accessing the Host Element",
          "Using References",
          "Two Way Binding & Input Validation",
          "Error Handling",
          "Using the \"componentdidload\" Lifecycle Hook",
          "All Lifecycle Hooks",
          "Using Update Lifecycle Hooks",
          "Watching Prop Changes",
          "Creating a New Component",
          "Styling the New Component",
          "Outputting a List of Elements",
          "Styling the List Items",
          "Emitting Customs Events",
          "Important: The Listen Decorator",
          "Using the Listen Decorator",
          "Using Hostdata",
          "Adding a Loading Spinner",
          "Embedding Components Into Components",
          "Using CSS Properties",
          "Using Stencil.js to Build Entire Apps",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Deployment & Publishing": [
          "Module Introduction",
          "Using Stencil Config",
          "Building & Using the Components",
          "Using Web Components in a Node.js Project",
          "Publishing to NPM",
          "Installing NPM Packages",
          "Using Web Components in an Angular App",
          "Using Web Components in a React App",
          "Using Web Components in a Vue App",
          "Polyfills & The Internet Explorer",
          "IE & Polyfills",
          "Wrap Up",
          "Useful Resources & Links"
        ],
        "Roundup": [
          "Course Roundup",
          "Useful Resources & Links",
          "Bonus: More Content!"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge is required (base syntax, DOM basics, objects basics)",
        "ES6+ JavaScript knowledge (classes etc) is a plus but not a must-have"
      ],
      "description": "Let's face it: You got hundreds of HTML tags to choose from but some really helpful ones (<tabs>, <side-drawer>, <modal>, ...) are missing.\nWhat if you could build your own HTML tags?\nWithout frameworks like Angular, libraries like React or expert JavaScript knowledge in general. Just with a magic, native-JavaScript feature called \"Web Components\" (or \"custom HTML elements\").\nWeb Components are a combination of various specifications that are baked into the browser. Getting started with these features is a breeze and you'll quickly be able to build your own powerful and re-usable (even across projects!) custom HTML elements.\nSuch custom elements don't replace Angular, React or Vue though - instead you can easily use them in ANY web project, including projects using such frameworks and libraries.\nIn this course, you'll learn this from scratch.\nBut we won't stop there. Whilst getting started is fairly easy, more complex components will be more difficult to create. Stencil.js is a tool that makes the creation of such native web components much easier by using modern features like TypeScript and JSX (don't know that? No worries, you'll learn it in the course!).\nIn detail, in this course you will learn:\nhow to build re-usable, lightweight custom HTML elements with native browser features\nhow to build web components of all complexities - from a simple tooltip to modals or side drawers\nhow to pass data into your own web components and use it there\nhow to emit your own custom events which you can listen to in JavaScript\nhow to use the Shadow DOM to scope your CSS styles to your custom elements\nhow to use Stencil.js to get a much easier development workflow\nhow to use the many features Stencil.js provides to build native web components way more efficiently\nhow to deploy/ re-use your own web components in ANY project using ANY JavaScript framework like Angular, React or Vue (or none at all!)\nPrerequisites:\nBasic JavaScript knowledge is a must-have\nES6 JavaScript knowledge (const, let, classes, ...) is strongly recommended but not strictly required - a brief refresher is provided as part of the course\nNO JavaScript framework knowledge (e.g. Angular, React, Vue) is required\nNO TypeScript or JSX knowledge is required\nLet's dive into this exciting technology together!",
      "target_audience": [
        "Everyone who's interested in building custom HTML tags!",
        "Students who want to dive into a future-proof web technology that can be used in any web app"
      ]
    },
    {
      "title": "Learn Restful Api's with Asp.Net Core 5.0 2022",
      "url": "https://www.udemy.com/course/learn-restful-apis-with-aspnet-core-5/",
      "bio": "Learn to build Secure Real World Cinema RESTful Api's with Asp.Net Core , Entity Framework Core and C#",
      "objectives": [
        "Understand the Restful Api's",
        "Build the backend for your web and mobile apps with .Net Core 5.0",
        "Build Web Api's with Entity Framework Core",
        "Create Real World Cinema API",
        "Implement Authentication & Authorization in Web Api's",
        "Implement JWT and Role Based Authorization",
        "Deploy Web Api to Microsoft Azure",
        "Upload Files in Restful Api's with Json Data"
      ],
      "course_content": {},
      "requirements": [
        "The student's must have a Windows machine.",
        "Knowledge of Asp .Net , C# and Entity Framework.",
        "C# (at a minimum lambda expressions, LINQ)",
        "Visual Studio 2019 with .Net Core version 5.0 is recommend but you can also use .Net Core 3.1",
        "Make sure you have properly installed the Visual Studio and comfortable with the Visual Studio"
      ],
      "description": "Welcome to the Complete Real World Restful API's course with Asp .NET Core 5.0.\nThis course is made with .Net Core 5.0 which is the latest but you can also use the previous version of .NET Core 3.1 if you want.\nThe main focus of this course is on the Restful Web Api via Asp .NET Core and C#. So if you're familiar with C# , Asp.Net and Entity Framework Or if you want to create the Restful web api's in Asp.Net then this is the right course for you.\nIf you don't have any idea about Rest Api then don't worry because in this course we'll cover all the Rest Api concepts.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to make the helpful content for the students.\nSo by the end of the course, you'll completely understand:\nHow to create a Rest Api via Entity Framework Code First Approach with all the advanced functions.\nImplement Status Codes\nHow to add the Routing and Custom Methods\nAdding Migrations in Web Api's\nAdding Content Negotiation\nImplement Validation in Web Api's\nFile Uploading in REST API\"S\nImplement Authentication and Authorization and secure your Api with JWT\nImplement Role Based Authorization For User and Admin\nCreate SQL Database on Microsoft Azure\nDeploy Web Api on Microsoft Azure\nCreate API Documentation\nCreate A Real World Cinema Api From Scratch to End (No Copy paste code I'll explain you each and every single line of code so that you can create a complete Real World Apis in Asp.Net Core happily)\n\n\nThis is not a short course this is a complete guide to make real world Restful Api's from start to end. So if you're a busy kind of developer and wanna learn things quickly from scratch then take this course.\nRemember...\nAfter this course you'll get all the  Source Code and along with this I'll also share  the links and helping material for the Rest Api's with you but you need your personal Azure Portal where you can launch your web api.\nSo what are you waiting for? Click the buy now button and join the world's First Complete Rest Api's Course with Asp.Net Core and C#.",
      "target_audience": [
        "Developers who are familiar with C# Programming Language.",
        "Some prior programming experience in Object Oriented Programming languages will also help to pick the concepts easily.",
        "Developers who want to build the Complete Restful Web Api from A to Z."
      ]
    },
    {
      "title": "AWS AppSync & Amplify with React & GraphQL - Complete Guide",
      "url": "https://www.udemy.com/course/aws-appsync-amplify-with-react-graphql-course/",
      "bio": "Deploy a Serverless GraphQL & Next JS based Javascript application in the AWS Cloud using AWS AppSync and AWS Amplify",
      "objectives": [
        "Develop a production-ready serverless backend API powered by AWS AppSync and GraphQL that scales to MILLIONS of requests",
        "Deploy a fully functional blogging application using the AWS Amplify framework (with comments and likes features!)",
        "Learn how to develop Real-Time Subscriptions with AWS AppSync for real-time scalable updates for your web applications",
        "Learn GraphQL, and how managed GraphQL works in AWS with AWS AppSync"
      ],
      "course_content": {},
      "requirements": [
        "Prior understanding of a JavaScript front-end framework is preferred (such as React)",
        "Prior Knowledge of AWS is preferred",
        "GraphQL will be taught during this course"
      ],
      "description": "Have you ever wondered how to create a production-ready backend API in AWS?\nOn top of it, what if it was all serverless and powered by GraphQL?\nWhat if it could scale to millions of requests?\nWhat if it was... easy!?\n-----\nAWS AppSync & Amplify is the BEST way to start deploying GraphQL-based applications in the AWS Cloud, all without deploying any servers that are infinitely scalable. Welcome to the great world of Serverless computing!\nThis course is fully hands-on, in which you'll get the chance to practice and learn:\nGraphQL crash-course\nHow to deploy GraphQL-based backends in AWS\nHow to develop your next-gen web application using the AWS Amplify framework & AWS AppSync\nYou will see how you can quickly build a secure, scalable, functional, and real-time application in no time!\n\n\n=======================================\nInstructor\nPaulo Dichone is the instructor of this course. He is a Software Engineer, a teacher, and the author of highly-rated Development courses on Udemy. He has already taught over 200,000 students online and received over 12,000 reviews. Students love his teaching methodology, which is heavy on a hands-on, project-based approach.\n=======================================\n\n\nSection Outline:\nSection 1 – Course Introduction: Get an understanding of the course objectives, and how the course is structured, download the course code, and get ready!\nSection 2 -What's AWS AppSync and AWS Amplify - Getting Started: Learn how AWS AppSync and AWS Amplify help us, developers, to build serverless's applications in record time.\nSection 3 - Install Development Tools - Setting up our development environment and Installing Development tools\nSection 4 through 11 - Full Course on GraphQL and Fundamentals: Deep-dive into learning all you need to know about GraphQL and how to create your own GraphQL API's using Express and Node.JS.  This Section could be optional, but it's highly recommended that you at least skim through it.\nSection 12 - The AWS AppSync Console - Build a full Serverless API using the AWS AppSync Console.  Master AppSync Console by building a simple API.\nSection 12 - Real World AWS AppSync API Using Amplify CLI: Getting started building our front-end/Client app with Next JS.  Build the AWS AppSync API using Amplify CLI.\nSection 13 - Real World AWS AppSync, Amplify CLI and Next JS - Navigation and Authentication with Cognito: Kee building the front-end and back-end functionalities into the Next JS App - Blop App. Adding Amazon Cognito User Pools\nSection 14 -Real World AWS AppSync, Amplify CLI and Next JS - Blog App Post Data - Adding and saving posts to DynamoDB in the AppSync backend\nSection 15 - Editing And Deleting User's Posts - Allowing authorized users to delete and edit posts.\nSection 16 - Adding a Post Image with Amazon S3 Storage - Save images to S3 (Storage\nSection 17 - Creating Comments - Using GraphQL mutations to create comments for posts.\nSection 18 - Amplify Important CLI Commands - Learn some important amplify CLI commands\nSection 19 - AWS Hosting - Hosting our Blog app in AWS Hosting- Preparing and deploying the web app in AWS Hosting using Amplify CLI\nSection 20 - Subscriptions - Allowing the app to broadcast onPostCreated event using AppSync subscriptions - making the app real-time driven!\nSection 13 - Next Steps!\n=======================================\nThis Course Also Comes With:\nLifetime Access to All Future Updates\nA responsive instructor in the Q&A Section\nLinks to interesting articles, and lots of good code to base your next template onto\nUdemy Certificate of Completion Ready for Download\nA 30 Day \"No Questions Asked\" Money Back Guarantee!\n\n\nThis is the course that could change your AWS skills.\nJoin me in this course if you want to learn how to deploy a Serverless GraphQL & React JS-based Javascript application in AWS Cloud and master the AWS platform!",
      "target_audience": [
        "Developers who want to learn about GraphQL & AWS AppSync",
        "Developers who want to leverage the AWS Amplify Framework for their next application",
        "Solutions Architect who need to understand the motivation behind AWS AppSync"
      ]
    },
    {
      "title": "Master Electron: Desktop Apps with HTML, JavaScript & CSS",
      "url": "https://www.udemy.com/course/master-electron/",
      "bio": "The Complete Electron course for learning to build Cross Platform Desktop Apps using HTML, JavaScript & CSS",
      "objectives": [
        "Build native desktop applications using existing knowledge of HTML, CSS & JavaSript",
        "Create applications for both Mac, Windows & Linux",
        "Understand the near-entire Electron API in detail.",
        "Package Electron applications for distribution.",
        "Expand your existing skills beyond the browser & add an invaluable new skill to your resume.",
        "Verifiable certificate of completion."
      ],
      "course_content": {
        "Overview": [
          "Introduction",
          "Lesson Structure"
        ],
        "Developing with Electron": [
          "Install & Run",
          "App Structure",
          "Using Native Node Modules",
          "Debugging",
          "Resetting the Project Code",
          "Electron Installation & Application Structure"
        ],
        "Main Process API": [
          "App",
          "BrowserWindow: Getting Started",
          "BrowserWindow: Parent & Child Windows",
          "BrowserWindow: Frameless Window",
          "BrowserWindow: Properties, Methods & Events",
          "BrowserWindow: Window State",
          "BrowserWindow: webContents",
          "App Instance & BrowserWindow",
          "Session: Getting Started",
          "Session: Cookies",
          "Session: DownloadItem",
          "BrowserWindow Sessions",
          "Dialog",
          "Accelerators & globalShortcut",
          "Menu & MenuItem",
          "Context Menu",
          "Tray",
          "PowerMonitor",
          "Screen",
          "Miscellaneous Main Process Modules"
        ],
        "Renderer Process API": [
          "Renderer Overview",
          "BrowserWindowProxy",
          "WebFrame",
          "DesktopCapturer",
          "Render Process Modules"
        ],
        "IPC Communication": [
          "ipcMain & ipcRenderer",
          "Remote Module",
          "IPC Invoke & Handle",
          "Inter Process Communication"
        ],
        "Shared API": [
          "Process",
          "Shell",
          "NativeImage",
          "Clipboard",
          "Shared Electron Modules"
        ],
        "Features & Techniques": [
          "Offscreen Rendering",
          "Network Detection",
          "Notifications",
          "Preload Scripts",
          "Progress Bar",
          "Electron Features & Techniques"
        ],
        "Project": [
          "Overview & Setup",
          "Submitting New Items",
          "Retrieving Item Details",
          "Showing & Persisting Items",
          "Selecting Items for Opening",
          "Opening Items in Reader",
          "Deleting Items",
          "Application Menu"
        ],
        "Application Distribution": [
          "Distribution Overview",
          "Electron-Builder",
          "Code Signing",
          "Publishing Releases",
          "AutoUpdater Module",
          "App Update",
          "Release & Update"
        ],
        "MacOS Notarization": [
          "Notarization Overview",
          "Notarization with Electron-Builder"
        ]
      },
      "requirements": [
        "A good understanding of JavaScript. Basic understanding of ES6 would be beneficial.",
        "Working knowledge of HTML & CSS.",
        "Be comfortable with very basic usage of the command line (CLI)",
        "Understand JavaScript in the Browser. e.g. Knowing what the global 'window' variable is etc.",
        "Basic understanding of Node.js",
        "Basic knowledge of Git (Recommended, but not required)"
      ],
      "description": "** Now includes MacOS Notarization **\n** UPDATED for Electron version 9 & 10 **\nGo from Web Developer to Desktop Applications Developer by learning\nto use the entire Electron API from scratch.\nThis course is suitable for BOTH complete Electron beginners and existing Electron developers looking to advance to the next level.\nLearn to develop with Electron using the best tools\nUnderstand the different parts of Electron and how they work together\nCover the near-entire Electron API, learning one module at a time\nLearn Electron features & techniques for using API modules together\nPut your new knowledge to practical use by building a detailed 8-step Electron project from scratch.\nAn invaluable skill for any Web Developer to expand their career opportunities.\nElectron is by far the most popular and fastest growing library for building cross-platform desktop applications using HTML, JavaScript & CSS.\nThis course will provide a very practical and concise approach to learning Electron from scratch.\nYou will be able to start building real-world desktop applications immediately.\nContent and Overview\nWith 45 concise and practical lectures, this course will provide a COMPLETE understanding of Electron and it's full API.\nIt is suitable for anyone with a a good understanding of HTML, CSS & JavaScript.\nBasic command line usage and an understanding of ES2015 (ES6) will be beneficial.\nThe course starts by setting up the Electron development environment and covers some useful tools to aid in the development process.\nThe main body of the course then covers the 3 individual sections of the Electron API in great detail, with very practical individual lessons on each API module.\nOnce the API is covered, the course looks at some useful features and techniques, also demonstrating how Electron integrates with Native HTML5 APIs.\nFinally you'll build a real-world application which covers a large chunk of the Electron API in real-world scenarios. The project lessons is divided into 8 individual videos and will take you step-by-step to a complete, distribution-ready desktop application.\nUpon completion of this course you will have the practical skills to immediately start building high quality desktop applications for Mac, Windows & Linux.\nThis course is to the point and everything is demonstrated in the most simple, yet practical ways, to help you become an advanced Electron Developer.",
      "target_audience": [
        "This course is designed for developers with a good understanding of web technologies such as HTML, CSS & JS, looking to start building native Desktop applications using their existing knowledge.",
        "The course covers almost every aspect of Electron and is very comprehensive.",
        "No prior experience with Electron is required."
      ]
    },
    {
      "title": "WCAG 2.1 / 2.2 Simplified With Examples",
      "url": "https://www.udemy.com/course/web-content-accessibility-guidelines-wcag-21-simplified/",
      "bio": "Improve your web accessibility knowledge by learning WCAG with practical examples",
      "objectives": [
        "What WCAG rules mean",
        "See WCAG rules applied in real life websites",
        "Become better at web accessibility"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What are WCAG?"
        ],
        "Accessibility Principle #1 - Perceivable": [
          "Guideline 1.1 - Text Alternatives",
          "Live Example - Guideline 1.1",
          "Guideline 1.2 - Time-based Media",
          "Guideline 1.2 - Time-based Media Success Criteria 1.2.7 and 1.2.8",
          "Guideline 1.3 - Success Criterion 1.3.1, Info and Relationships",
          "Success Criterion 1.3.2, Meaningful Sequence",
          "Success Criterion 1.3.3, Sensory Characteristics",
          "Live Example - Success Criterion 1.3.3 violation",
          "Success Criteria 1.3.4, 1.3.5, 1.3.6",
          "Guideline 1.4 - Success Criteria 1.4.1 and 1.4.2",
          "Success Criteria 1.4.3--1.4.9",
          "Success Criteria 1.4.10, 1.4.11, 1.4.12, 1.4.13"
        ],
        "Accessibility Principle #2 - Operable": [
          "Guideline 2.1 - Success Criteria 2.1.1 and 2.1.2",
          "Success Criteria 2.1.3 and 2.1.4",
          "Guideline 2.2 - Success Criteria 2.2.1, 2.2.2, 2.2.3, 2.2.4",
          "Success Criteria 2.2.5 Re-authenticating and 2.2.6 Timeouts",
          "Guideline 2.3 - Seizures and Physical Reactions",
          "Live Example - Guideline 2.3, Seizures and Physical Reactions",
          "Guideline 2.4 Navigable - Success Criterion 2.4.1, Bypass Blocks",
          "Success Criteria 2.4.2 and 2.4.3",
          "Success Criterion 2.4.4, Link Purpose (In Context)",
          "Success Criterion 2.4.5, Multiple Ways",
          "Success Criterion 2.4.6, Headings and Labels",
          "Success Criteria 2.4.7, 2.4.8, 2.4.9, 2.4.10",
          "Guideline 2.5 Input Modalities - Success Criteria 2.5.1--2.5.6"
        ],
        "Accessibility Principle #3 - Understandable": [
          "Guideline 3.1 Readable - Success Criteria 3.1.1--3.1.6",
          "Guideline 3.2 Predictable - Success Criteria 3.2.1--3.2.5",
          "Guideline 3.3 Input Assistance - Success Criteria 3.3.1--3.3.6"
        ],
        "Accessibility Principle #4 - Robust": [
          "Guideline 4.1 Compatible - Success Criteria 4.1.1, 4.1.2, and 4.1.3"
        ],
        "WCAG 2.2": [
          "WCAG 2.2 (Update) - Success Criterion 2.4.11, Focus Visible (Enhanced)"
        ],
        "Bonus section": [
          "Join Our Accessibility Community!"
        ]
      },
      "requirements": [
        "HTML",
        "CSS"
      ],
      "description": "All lectures have professional captions (subtitles).\nAll audio and video issues mentioned in past reviews are now fixed!\n\n\nHave you just begun coding accessible websites and are confused with the Web Content Accessibility Guidelines (WCAG)? Are WCAG descriptions incredibly difficult to understand and the Success Criteria seem impossible to grasp due to a lack of images and practical examples? Do you prefer points explained in plain language, instead of spending hours searching outdated blog posts for information about the WCAG?\n\n\nIf so, then this course is for you.\n\n\nThis course will help you to better understand the WCAG via concrete examples and code (whenever possible), and includes full coverage of all official WCAG Success Criteria, with regular updates made when draft criteria becomes permanent, to make sure that you're up to date on the latest guidelines.\n\n\nStudents are encouraged to contact the instructor with any guideline questions for fully fledged help and course support.",
      "target_audience": [
        "Web accessibility freelancers",
        "Employees of a web accessibility agency",
        "Accessibility advocates",
        "Content creators",
        "Graphic Designers"
      ]
    },
    {
      "title": "Angular - The Complete Guide (2025 Edition)",
      "url": "https://www.udemy.com/course/the-complete-guide-to-angular-2/",
      "bio": "Master Angular (formerly \"Angular 2\") and build awesome, reactive web apps with the successor of Angular.js",
      "objectives": [
        "Learn modern Angular, including standalone components & signals from the ground up & in great detail!",
        "Learn how to send HTTP requests, implement routing, authenticate users or handle complex forms - and much more!",
        "Develop modern, complex, responsive and scalable web applications with Angular",
        "Fully understand the architecture behind an Angular application and how to use it",
        "Learn TypeScript, a modern JavaScript superset, along the way",
        "Create single-page or fullstack applications with one of the most modern JavaScript frameworks out there",
        "Use the gained, deep understanding of the Angular fundamentals to quickly establish yourself as a frontend developer"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome To The Course!",
          "What Exactly Is Angular?",
          "Why Would You Use Angular?",
          "Angular's Evolution & Stability",
          "Creating A New Angular Project",
          "Setting Up An Angular Development Environment",
          "About This Course",
          "Course Setup & Resources"
        ],
        "Angular Essentials - Components, Templates, Services & More": [
          "Module Introduction",
          "A New Starting Project & Analyzing The Project Structure",
          "Understanding Components & How Content Ends Up On The Screen",
          "Creating a First Custom Component",
          "[Optional] JavaScript Refresher: Classes, Properties & More",
          "Configuring the Custom Component",
          "Using the Custom Component",
          "Styling the Header Component & Adding An Image",
          "Managing & Creating Components with the Angular CLI",
          "Styling & Using Our Next Custom Component",
          "Preparing User Data (To Output Dynamic Content)",
          "Storing Data in a Component Class",
          "Outputting Dynamic Content with String Interpolation",
          "Property Binding & Outputting Computed Values",
          "Attribute Binding",
          "Using Getters For Computed Values",
          "Listening to Events with Event Binding",
          "Managing State & Changing Data",
          "A Look Behind The Scenes Of Angular's Change Detection Mechanism",
          "Introducing Signals",
          "We Need More Flexible Components!",
          "Defining Component Inputs",
          "Required & Optional Inputs",
          "Using Signal Inputs",
          "We Need Custom Events!",
          "Working with Outputs & Emitting Data",
          "Using the output() Function",
          "Adding Extra Type Information To EventEmitter",
          "Exercise: Create a Configurable Component",
          "TypeScript: Working With Potentially Undefined Values & Union Types",
          "Accepting Objects As Inputs & Adding Appropriate Typings",
          "TypeScript: Type Aliases & Interfaces",
          "Outputting List Content",
          "Outputting Conditional Content",
          "Legacy Angular: Using ngFor & ngIf",
          "Adding More Components to the Demo App",
          "Outputting User-specific Tasks",
          "Outputting Task Data in the Task Component",
          "Storing Data Models in Separate Files",
          "Dynamic CSS Styling with Class Bindings",
          "More Component Communication: Deleting Tasks",
          "Creating & Conditionally Rendering Another Component",
          "Managing The \"New Task\" Dialog",
          "Using Directives & Two-Way-Binding",
          "Signals & Two-Way-Binding",
          "Handling Form Submission",
          "Using the Submitted Data",
          "Content Projection with ng-content",
          "Transforming Template Data with Pipes",
          "Getting Started with Services",
          "Getting Started with Dependency Injection",
          "More Service Usage & Alternative Dependency Injection Mechanism",
          "Time to Practice: Services",
          "Using localStorage for Data Storage",
          "Module Summary"
        ],
        "Angular Essentials - Working with Modules": [
          "Module Introduction",
          "A First Introduction To Angular Modules (NgModule)",
          "Angular 19, Standalone Components & Modules",
          "Creating a First Empty Module",
          "Bootstrapping Apps with Angular Modules",
          "Declaring & Using Components",
          "A First Summary",
          "Migrating All Components To Use Modules",
          "Creating & Using Shared Modules",
          "Creating More Complex Module-based App Structures"
        ],
        "Angular Essentials - Time To Practice": [
          "Module Introduction & Starting Project",
          "Exercise Hints",
          "Adding a Header Component With An Image",
          "Adding a User Input Component",
          "Handling Form Submission",
          "Extracting Values with Two-Way-Binding",
          "Calculating the Annual Investment Data",
          "Cross-Component Communication with Outputs",
          "Creating & Using a Data Model",
          "Passing Data from Parent to Child with Inputs",
          "Outputting Data in a Table",
          "Formatting Output with a Pipe",
          "Using Signals & Resetting The Form After Submission",
          "Using a Service for Cross-Component Communication",
          "Using Signals in Services",
          "Migrating to Angular Modules",
          "Module Summary"
        ],
        "Debugging Angular Apps": [
          "Module Introduction",
          "Understanding Error Messages & Fixing Errors",
          "Debugging Logical Errors with the Browser DevTools & Breakpoints",
          "Exploring the Angular DevTools"
        ],
        "Components & Templates - Deep Dive": [
          "Module Introduction",
          "Starting Project & An Opportunity For Smaller Components?",
          "When & How To Split Up Components",
          "Splitting A Component Into Multiple Components",
          "Creating Reusable Components",
          "Component Inputs: Repetition",
          "Property Binding: Repetition",
          "Using Content Projection & ng-content",
          "Adding Forms to Components",
          "A Possible, But Not Ideal Way Of Extending Built-in Elements",
          "Extending Built-in Elements with Custom Components via Attribute Selectors",
          "Supporting Content Projection with Multiple Slots",
          "Exploring Advanced Content Projection",
          "Defining Content Projection Fallbacks",
          "Multi-Element Custom Components & Content Projection",
          "Scoping CSS Styles to Components",
          "Understanding & Configuring View Encapsulation",
          "Making Sense of Component Host Elements",
          "Using Host Elements Like Regular Elements",
          "Interacting With Host Elements From Inside Components",
          "When (Not) To Rely On Host Elements",
          "Interacting with Host Elements via @HostListener & @HostBinding",
          "Accessing Host Elements Programmatically",
          "Class Bindings: Repetition",
          "There's More Than One Way Of Binding CSS Classes Dynamically",
          "A Closer Look At Dynamic Inline Style Binding",
          "Manipulating State & Using Literal Values",
          "Introducing the Component Lifecycle: ngOnInit",
          "Implementing Lifecycle Interfaces",
          "Component Lifecycle - A Deep Dive",
          "Component Cleanup with ngOnDestroy",
          "Component Cleanup with DestroyRef",
          "Handling Form Submissions: Repetition",
          "Working with Template Variables",
          "Extracting Input Values via Template Variables",
          "Template Variables & Component Instances",
          "Getting Access to Template Elements via ViewChild",
          "Using The viewChild Signal Function",
          "ViewChild vs ContentChild",
          "A Closer Look at Decorator-based Queries & Lifecycle Hooks",
          "The afterRender and afterNextRender Lifecycle Functions",
          "Making Sense of Signal Effects",
          "Signal Effects Cleanup Functions",
          "TypeScript & Type Models: Repetition",
          "Component Outputs: Repetition",
          "A Closer Look At Template For Loops",
          "Revisiting Inputs & Signals",
          "Updating Signal Values",
          "Cross-Component Communication & State Management",
          "Configuring Component Inputs & Outputs",
          "Two-Way Binding: Repetition",
          "Setting Up Custom Two-Way Binding",
          "An Easier Way of Setting Up Custom Two-Way Binding"
        ],
        "Enhancing Elements with Directives - Deep Dive": [
          "Module Introduction",
          "Understanding Directives",
          "The Starting Project",
          "Analyzing a Built-in Attribute Directive: ngModel",
          "Analyzing a Built-in Structural Directive: ngIf",
          "Getting Started with Custom Directives",
          "Using Attribute Directives To Change Element Behavior",
          "Working with Inputs in Custom Directives",
          "Directives & Dependency Injection",
          "Building Another Directive",
          "Building a Custom Structural Directive",
          "Structural Directives & Syntactic Sugar",
          "Host Directives & Composition"
        ],
        "Transforming Values with Pipes - Deep Dive": [
          "Module Introduction",
          "Making Sense of Pipes",
          "Using Built-in Pipes",
          "More Built-in Pipes Examples",
          "Building a First Custom Pipe",
          "Using Custom Pipes to Perform Custom Transformations",
          "Accepting Parameters in Custom Pipes",
          "Chaining Pipes & Being Aware of Limitations",
          "Building a Pipe That Sorts Items",
          "Understanding How Pipes Are Executed",
          "Pure & Impure Pipes",
          "Pipe Limitations & When Not To Use Them"
        ],
        "Understanding Services & Dependency Injection - Deep Dive": [
          "Module Introduction",
          "The Starting Project & The Need For A Centralized Service",
          "Creating a Service",
          "How NOT To Provide A Service",
          "Using Angular's Dependency Injection Mechanism",
          "Using The Alternative Dependency Injection Syntax",
          "Outsourcing & Reusing Logic with Services",
          "Angular Has Multiple Injectors!",
          "There Are Multiple Ways Of Providing a Service",
          "Providing Services via the Element Injector",
          "Understanding the Element Injector's Behavior",
          "Injecting Services Into Services",
          "Analyzing Dependency Injection with the Angular DevTools",
          "Using Custom DI Tokens & Providers",
          "Preparing A Non-Class Value For Injection",
          "Injecting Other Values (NOT Services)",
          "Angular Modules (NgModule) & Dependency Injection",
          "Working with Services Without Using Signals"
        ],
        "Making Sense of Change Detection - Deep Dive": [
          "Module Introduction",
          "Analyzing the Starting Project",
          "Understanding How Angular Performs Change Detection",
          "Change Detection During Development: ExpressionChangedAfterChecked Errors",
          "Writing Efficient Template Bindings",
          "Avoiding Zone Pollution",
          "Using the OnPush Strategy",
          "Understanding the OnPush Strategy",
          "Working with OnPush & Signals",
          "Using Signals for Sharing Data Across Components (with OnPush)",
          "The Problem With OnPush, Cross-Component Data & Not Using Signals",
          "Triggering Change Detection Manually & Using RxJS Subjects",
          "Introducing The async Pipe",
          "Going Zoneless!"
        ]
      },
      "requirements": [
        "NO prior Angular knowledge is required!",
        "Basic JavaScript & web development knowledge is required!"
      ],
      "description": "Ready for Angular 19\nThis course was built for Angular 19+! It uses standalone components & signals right from the start.\n2024: Big update released!\nThe entire course was re-recorded from scratch and was therefore completely updated! It's now 100% up-to-date with the latest version of Angular again, covering crucial modern features like signals, standalone components etc.\nMany new deep-dive sections on these core topics were added, hence ensuring that you learn ALL about modern Angular in-depth. In addition, the course also still covers older Angular versions & syntax, so that you get the most out of this course, no matter with which Angular version you're working.\nBrand-new \"Essentials\" sections were added, covering modern Angular (incl. standalone components, signals, new control flow & more) from the ground up.\nThis course therefore once again teaches modern Angular, whilst also teaching \"older\" Angular features since many projects are still stuck on old Angular versions. With this course, you'll be ready to work with Angular, no matter which version you might be using in your next project!\n---\nJoin the most comprehensive and bestselling Angular course on Udemy and learn all about this amazing framework from the ground up, in great depth!\nThis course starts from scratch, you neither need to know Angular 1 nor Angular 2 or any other Angular version!\nFrom Setup to Deployment, this course covers it all! You'll learn all about Components, Directives, Services, Forms, Http Access, Authentication, Optimizing an Angular App with Modules and Offline Compilation and much more - and in the end: You'll learn how to deploy an application!\nBut that's not all! This course will also show you how to use the Angular CLI and feature a complete project, which allows you to practice the things learned throughout the course!\nAnd if you do get stuck, you benefit from an extremely fast and friendly support - both via direct messaging or discussion. You have my word! ;-)\nAngular is one of the most modern, performance-efficient and powerful frontend frameworks you can learn as of today. It allows you to build great web apps which offer awesome user experiences! Learn all the fundamentals you need to know to get started developing Angular applications right away.\nHear what my students have to say\n\"Absolutely fantastic tutorial series. I cannot thank you enough. The quality is first class and your presentational skills are second to none. Keep up this excellent work. You really rock!﻿ - Paul Whitehouse\"\n\"The instructor, Max, is very enthusiastic and engaging. He does a great job of explaining what he's doing and why rather than having students just mimic his coding. Max was also very responsive to questions. I would recommend this course and any others that he offers. Thanks, Max!\"\n\"As a person new to both JavaScript and Angular 2 I found this course extremely helpful because Max does a great job of explaining all the important concepts behind the code. Max has a great teaching ability to focus on what his audience needs to understand.\"\nThis Course uses TypeScript\nTypeScript is the main language used by the official Angular team and the language you'll mostly see in Angular tutorials. It's a superset to JavaScript and makes writing Angular apps really easy. Using it ensures, that you will have the best possible preparation for creating Angular apps. Check out the free videos for more information.\nTypeScript knowledge is, however, not required - basic JavaScript knowledge is enough.\nWhy Angular?\nAngular is the next big deal. Being the successor of the overwhelmingly successful Angular.js framework it’s bound to shape the future of frontend development in a similar way. The powerful features and capabilities of Angular allow you to create complex, customizable, modern, responsive and user friendly web applications.\nAngular is faster than Angular 1 and offers a much more flexible and modular development approach. After taking this course you’ll be able to fully take advantage of all those features and start developing awesome applications immediately.\nDue to the drastic differences between Angular 1 and Angular (= Angular 2+) you don’t need to know anything about Angular.js to be able to benefit from this course and build your futures projects with Angular.\nGet a very deep understanding of how to create Angular applications\nThis course will teach you all the fundamentals about modules, directives, components, databinding, routing, HTTP access and much more! We will take a lot of deep dives and each section is backed up with a real project. All examples showcase the features Angular offers and how to apply them correctly.\nSpecifically you will learn:\nWhich architecture Angular uses\nHow to use TypeScript to write Angular applications\nAll about directives and components, including the creation of custom directives/ components\nHow databinding works\nAll about routing and handling navigation\nWhat pipes are and how to use them\nHow to send HTTP requests (e.g. to REST APIs)\nWhat dependency injection is and how to use it\nHow to use modules in Angular\nHow to optimize your (bigger) Angular applications\nAn introduction to NgRx and complex state management\nWe will build a major project in this course so that you can practice all concepts\nAnd so much more!\nPay once, benefit a lifetime!\nDon’t lose any time, gain an edge and start developing now!",
      "target_audience": [
        "Newcomer as well as experienced frontend developers interested in learning a modern JavaScript framework",
        "This course is for everyone interested in learning a state-of-the-art frontend JavaScript framework",
        "Taking this course will enable you to be amongst the first to gain a very solid understanding of Angular"
      ]
    },
    {
      "title": "Salesforce Apex: The Complete Introduction for Beginners",
      "url": "https://www.udemy.com/course/apex-introduction/",
      "bio": "Learn Salesforce development with Apex and start your career as a Salesforce Developer.",
      "objectives": [
        "The Apex programming language from the ground up",
        "Apex Syntax",
        "Variables and Data Types",
        "Operators and Expressions",
        "Control Flow",
        "Collections",
        "Working with Salesforce Data",
        "Object Oriented Apex",
        "Triggers",
        "Unit Tests"
      ],
      "course_content": {
        "Course Introduction and Setup": [
          "Setup your developer org",
          "Important Message",
          "Hello, Developer Console",
          "Summary"
        ],
        "Variables and Data Types": [
          "Variables and Data Types Introduction",
          "Variables",
          "Primitive Data Types",
          "sObjects",
          "Variables and Data Types Assignment",
          "Assignment Solution",
          "Variables and Data Types Quiz",
          "Variables and Data Types Summary"
        ],
        "Operators and Expressions": [
          "Operators and Expressions Introduction",
          "Expressions",
          "Mathematical Operators",
          "Assignment Operators",
          "Equality Operators for Primitive Data Types",
          "Equality Operators for sObjects",
          "Logical Operators",
          "Operator Precedence",
          "Operators and Expressions Quiz",
          "Operators and Expressions Summary"
        ],
        "Control Flow": [
          "Control Flow Introduction",
          "If-else Statements",
          "Switch Statements",
          "Loops",
          "Control Flow Assignment",
          "Control Flow Assignment Solution",
          "Control Flow Quiz",
          "Control Flow Summary"
        ],
        "Object Oriented Apex": [
          "Object Oriented Apex Introduction",
          "Classes and Objects",
          "Methods",
          "Constructors",
          "Access Modifiers",
          "Static vs Instance",
          "Safe Navigation Operator",
          "Object Oriented Apex Assignment",
          "Assignment Solution",
          "Built in Classes",
          "Object Oriented Apex Quiz",
          "Object Oriented Apex Summary"
        ],
        "Collections": [
          "Collections Introduction",
          "Lists",
          "Sets",
          "Maps",
          "Collections Quiz",
          "Collections Summary"
        ],
        "Working With Salesforce Data": [
          "Working With Salesforce Data Introduction",
          "What is SOQL?",
          "SOQL Tools",
          "SOQL Hands On",
          "Using SOQL in Apex",
          "DML",
          "SOQL and DML Assignment",
          "Assignment Solution",
          "SOQL and DML Quiz",
          "Working With Salesforce Data Summary"
        ],
        "Triggers": [
          "Triggers Introduction",
          "What is a Trigger?",
          "Hands On: Before Trigger",
          "Before vs After Trigger",
          "Hands On: After Trigger",
          "Trigger Quiz",
          "Triggers Summary"
        ],
        "Unit Tests": [
          "Unit Tests Introduction",
          "Why We Write Unit Tests?",
          "Hands On: Unit Tests",
          "The Assert Class",
          "Unit Test Quiz",
          "Unit Tests Summary"
        ],
        "Conclusion": [
          "Congratulations and Thank You!"
        ]
      },
      "requirements": [
        "This course assumes no prior Salesforce or programming experience. We will start from the very beginning, including setting up your free Salesforce developer org.",
        "A willingness to experiment and learn!"
      ],
      "description": "Salesforce Development is a skill that is in high demand in today's IT job market\nAccording to ZipRecruiter the average Salesforce Developer in the U.S. earn $115k per year\nAccording to IDC the Salesforce ecosystem will create 4.2 million new jobs by 2024\nThe Salesforce platform is expected to continue to grow by around 65% per year\nIf you're considering a career in Salesforce Development, now is a great time. Even during the Covid-19 pandemic there has continued to be strong demand for Salesforce developers.\nThis course will take you step-by-step through the Apex programming language starting with basic syntax all the way through Object Oriented Apex, Triggers and Automated Testing. At the end of this course you will have a solid foundation in Apex programming and will be ready to tackle more advanced topics.\n\n\nFAQ:\nQ: Do I need to have programming experience to take this course?\nA: No, this course assumes no prior programming experience.\n\n\nQ: Do I need to have Salesforce experience to take this course?\nA: No, you can succeed in this course even if you have no prior Salesforce experience.\n\n\nQ: Are you available to answer questions?\nA: I monitor the Q & A inside the course and will answer your questions there.",
      "target_audience": [
        "Anyone interested in a career in software development or cloud computing",
        "People with no prior programming experience",
        "People with some programming experience on another platform but no Salesforce experience"
      ]
    },
    {
      "title": "The HTML & CSS Bootcamp 2025 Edition",
      "url": "https://www.udemy.com/course/html-and-css-bootcamp/",
      "bio": "Brand New Course! Covers Flexbox, CSS Grid, Animations, Responsive Design and More! Tons of Exercises & Projects.",
      "objectives": [
        "Master HTML & CSS and build massive real-world projects, with no prior knowledge needed!",
        "How to write well-structured and semantic HTML documents",
        "Master tricky CSS concepts including the cascade, inheritance, and specificity",
        "Work with CSS animations, transitions, pseudo-elements, gradients, and more",
        "Get practice with dozens of exercises, quizzes, and challenges",
        "Design beautiful websites from the ground up that look good on all screen sizes",
        "Build reusable components, work with CSS variables, and write modern and clean CSS code"
      ],
      "course_content": {
        "Introduction": [
          "Welcome & Curriculum Overview",
          "Join Our Chat Community",
          "Important Note On Leaving Feedback!",
          "A First Taste of HTML & CSS",
          "How The Web Works",
          "The Roles of HTML, CSS, and JS",
          "Quick Quiz On The Roles of HTML & CSS",
          "Installing The Tools We Need",
          "IMPORTANT: About The Visual Studio Code Color Theme",
          "Configuring VSCode",
          "Important Note On The Course Exercises"
        ],
        "HTML Basics": [
          "Introducing HTML",
          "The Basic HTML Workflow",
          "The Paragraph Element",
          "Mozilla Developer Network",
          "Chrome Developer Tools",
          "Document Structure",
          "Creating HTML Comments",
          "Creating Headings",
          "HTML Basics Exercise"
        ],
        "More HTML": [
          "Working With HTML Lists",
          "The Em, Strong, B, and I Elements",
          "Nesting Elements",
          "Superscript and Subscript",
          "Inline Vs. Block Elements",
          "Creating Links",
          "Other Types of Links",
          "Creating Images",
          "Pasta Recipe Exercise"
        ],
        "Working With Forms": [
          "Creating Text Inputs and Buttons",
          "The Form Element",
          "Name and Placeholder Attributes",
          "Properly Labelling Form Controls",
          "Other Types of Inputs",
          "Checkboxes, Textareas, and Range Inputs",
          "Selects and Radio Button Groupings",
          "Course Landing Page Form Exercise"
        ],
        "Other Elements": [
          "Spans",
          "Divs",
          "Tables",
          "Semantic Markup",
          "Semantic Elements"
        ],
        "CSS Basics": [
          "Getting Our Starter Code",
          "Working Within Inline Styles",
          "Writing Internal Styles",
          "External Styles: The Best Way To Write Styles",
          "Quick Note on Codepen",
          "Anatomy of CSS",
          "The Element Selector",
          "CSS Basics Exercise"
        ],
        "The World of CSS Colors": [
          "Working with background-color",
          "Quick Tip: MDN & Comments",
          "Named Colors",
          "Understanding RGB Colors",
          "Hexadecimal Colors",
          "RGBA Colors and Opacity",
          "Colors Quiz",
          "CSS Inheritance",
          "CSS Colors Exercise"
        ],
        "Styling Text": [
          "Changing Fonts with Font-Family",
          "Font-size, font-weight, and font-style",
          "Changing Text Alignment",
          "Line-height, letter-spacing, and word-spacing",
          "Adding Custom Fonts With Google Fonts",
          "Styling Text Exercise",
          "Creating Text Shadows",
          "Our First Mini Project: Cantilever"
        ],
        "More Text Styling": [
          "Text-transform & text-decoration",
          "The ID Selector",
          "The Class Selector",
          "Styling Lists",
          "Styling Links and :hover Pseudo-Class",
          "The Font Shorthand Property",
          "Leafy Seadragon Exercise"
        ],
        "Selectors Pt. 1": [
          "The Universal Selector",
          "The Attribute Selector",
          "Grouping Selectors",
          "Descendant & Child Combinators",
          "Compound Selectors",
          "CSS Selectors Exercise"
        ]
      },
      "requirements": [
        "No previous coding experience needed",
        "Any computer will work: Mac, Windows, or Linux",
        "All you need is a web browser and code editor (we download a free editor together)"
      ],
      "description": "**Modern in-depth HTML & CSS course!**\n** Check out the promo video to see the beautiful, responsive projects we build in this course! **\nThis course will teach you everything you need to know about HTML, CSS, and web design to build your own stunning websites from scratch. Instead of just watching me code, you’ll learn how to structure and build any website you can think of.\nMy background is in teaching in-person bootcamp programs around the world, where I work directly with students to help them learn web development and change careers. This course is based on all my experience in the classroom. Unlike most Udemy courses, this course includes dozens of exercises and challenges which ask you to recreate components, build layouts, and practice HTML and CSS. Practice is the most important tool I have to help you learn, and this course includes lots of it!\nThis course covers a huge amount of information, but it’s designed to be approachable for complete beginners and intermediate developers alike.\nWe start with the basics of HTML: structuring documents, creating text elements, tables, and forms. Then we learn about semantic markup and creating accessible webpages\nNext, we cover the basics of CSS: working with selectors, color systems, and styling text elements.\nFrom there, we cover critical CSS concepts including the box model, specificity, the cascade, and CSS units.\nNext you’ll learn all about backgrounds, gradients, filters, positioning elements, working with transitions and transformations, and many other more intermediate CSS properties.\nWe then spend nearly 10 hours learning how to create complex CSS layouts using Flexbox and CSS Grid. We then build multiple projects with complicated layouts.\nYou’ll learn how to build responsive layouts that look good on all screen sizes, from large desktops to tablets and mobile devices.\nFinally, we wrap up the course with our massive final project that we build together from scratch. This project combines everything we’ve learned in the course into one huge website built with thousands of lines of HTML & CSS. Check out the promo video to learn more about the final project.\n\n\nThis course includes:\nOver 37 hours of high quality videos\nDownloadable assets, starter coder, and solutions for all sections\nDozens of exercises, challenges, and quizzes\nDownloadable slides and cheatsheets, including beautiful diagrams and syntax references\nIncluded support in the course Q&A forums\nAccess to our exclusive discord community with thousands of students\nAbout me (your instructor)\nI’m a teacher with extensive real-world teaching experience. I’ve taught thousands of students how to code at my in-person coding bootcamps around the globe. My graduates work at companies including Google, Tesla, Apple, Airbnb, and pretty much any big company you can name. My in-person teaching background informs the online experiences I create for students. Unlike most Udemy instructors, I’ve actually taught this material in a classroom full of students for nearly a decade. I know what works and what doesn’t work!",
      "target_audience": [
        "Anyone who wants to learn how to create their own stunning, professional websites",
        "Complete beginners with no experience",
        "Students with some HTML & CSS experience looking to level up their skills"
      ]
    },
    {
      "title": "JSP, Servlet, JSLT + Hibernate: A complete guide",
      "url": "https://www.udemy.com/course/jsp-servlet-free-course/",
      "bio": "A JSP (Java server pages) + Servlet + Hibernate: Quick course",
      "objectives": [
        "Basic concept of JSP and servlets",
        "Student could start learning framework like Spring, JSF etc"
      ],
      "course_content": {
        "Basics": [
          "Requirements to get started",
          "Project setup",
          "Hello Servlet",
          "Hello World Jsp",
          "Servlets life cycle",
          "JSP expressions scripting element",
          "JSP scriptlets scripting element",
          "JSP declarartions scripting element",
          "JSP comment",
          "JSP directives",
          "MCQs and Predict the Output",
          "Deployment descriptor and annotations",
          "JSP configuration in deployment descriptor",
          "Reading URL parameter(s)",
          "Include file(s) in JSP page",
          "Import files into Jsp page",
          "Forward and redirect under JSP",
          "JSP Implicit Objects",
          "MVC overview",
          "Exercise - Basic redirection using servlet",
          "Basic application based on MVC",
          "MCQs and Predict the Output",
          "Project files",
          "How to Import Project Files?",
          "Meet your Author",
          "Linkedin and Instagram links"
        ],
        "Web Forms": [
          "Forms overview",
          "Form elements",
          "Forms under JSP",
          "Forms under Servlet",
          "Basic form validation under JSP",
          "Checkout \"Our Full Stack Java Developer Course\"",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Understanding Java Beans": [
          "Beans overview",
          "Bean scope types - session, page & application",
          "Request scope",
          "Beans with web forms",
          "Connect on LinkedIn, \"It's good!\"",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Session management": [
          "Session under JSP overview",
          "Introduction to cookie",
          "Read and write operation of cookie",
          "User logout (Via cookie)",
          "User logout (using session attribute)",
          "Organizing application",
          "Fixing Redirect and forward links",
          "Handling session without cookie",
          "Servlet Filters",
          "Discussion forum",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "JSTL core tags (Bonus)": [
          "JSTL setting up",
          "JSTL set and remove tags",
          "Reading from Bean using Expression Language",
          "Decision making under JSTL",
          "JSTL Choose and when tags",
          "MCQs and Predict the Output",
          "JSTL for loop",
          "JSTL forEach loop",
          "JSTL forTokens tag",
          "JSTL import and param tag",
          "JSTL URL and redirect tag",
          "JSTL catch tag",
          "About Project files",
          "MCQs and Predict the Output",
          "Project files"
        ],
        "Good to know information": [
          "Good to know information",
          "We have started AI related courses"
        ],
        "JSTL functions tags": [
          "JSTL length functions",
          "JSTL trim and escapeXml function",
          "JSTL more functions",
          "JSTL even more functions",
          "JSTL Split and Join function",
          "MCQs and Predict the Output"
        ],
        "JSTL XML tags": [
          "Adding Sample XML file",
          "JSTL XML Parse and Out tag",
          "JSTL XML ForEach and If tag",
          "JSTL XML Choose When otherwise",
          "MCQs and Predict the Output"
        ],
        "I18N Overview": [
          "Overview of I18N",
          "Locale"
        ],
        "Project on JSTL I18N": [
          "Setting up",
          "Adding properties",
          "Integration with website (i18n)",
          "MCQs and Predict the Output"
        ]
      },
      "requirements": [
        "HTML basics"
      ],
      "description": "This course will cover JSP & Servlets from beginning to advanced. We will check out JDBC connectivity via pooling technique and later we will check out Hibernate basics. Making forward, will checkout, how to integrate Hibernate with project based on JSP and Servlets. All the videos are easy to understand, making learning experiences pleasant. Project files are as well available for you.\nIn this particular course, we have covered concepts like\nSetting up the computer for JSP and serverlet\nServlets life cycle\nJSP scripting elements\nDeployment descriptor and annotations\nInclude file(s) in JSP page\nImport files into Jsp page\nMVC overview\nBasic application based on MVC\nForms overview under JSP\nForms under Servlet\nBasic form validation\nSession under JSP overview\nJDBC Database connectivity\nProject performing CRUD operations\nHibernate Introduction\nProject on JSP & Servlets + Hibernate\n\n\nNo question asked - Money Back Guarantee!\nWe are confident that you'll enjoy this course, there is no risk, and this course comes with a 30-day money-back guarantee. Once you purchase the course, if for any reason you are not satisfied with the course, please let us know, we will refund 100%, no questions asked! So, you have nothing to lose, sign up for this course, and learn JSP, Servlet, JSTL + Hibernate: A complete guide.",
      "target_audience": [
        "Student with prior knowledge of HTML",
        "Student looking forward to learn learning framework like Spring, JSF Etc in future."
      ]
    },
    {
      "title": "jQuery Crash Course: Learn the Essentials of jQuery Fast",
      "url": "https://www.udemy.com/course/learn-jquery-crash-course/",
      "bio": "Learn the essentials you'll need to get started with jQuery.",
      "objectives": [
        "Understand the basics of the jQuery syntax.",
        "Know how to set and retrieve values.",
        "Use jQuery effects to apply special effects to web pages",
        "Work with jQuery to traverse and filter the DOM.",
        "Understand how to use jQuery selectors.",
        "How to use Google Chrome as a browse-based development tool.",
        "How to combine jQuery events with jQuery selectors.",
        "Know how to capture a mouse event.",
        "Discover how to record user events that occur on the user’s browser window, a great way to discover usability issues.",
        "Using jQuery UI, another framework built on JavaScript and jQuery, allowing you to develop rich interface features. This allows you to build a lot of functionality with a small amount of code.",
        "Understand jQuery UI elements, dialog features, a date picker, and special effects.",
        "Learn some of the more popular jQuery plugins you can use to expand the functionality of jQuery and reduce the code needed to create."
      ],
      "course_content": {
        "Introduction to jQuery": [
          "Hello World Example",
          "WATCH ME: Essential Information for a Successful Training Experience",
          "Course Demo Files",
          "Setting Values with Text HTML",
          "Getting Values with Text HTML",
          "Selectors",
          "Events",
          "Showing and Hiding Effects",
          "Combining Events with Selectors",
          "Traversing and Filtering"
        ],
        "Advanced Concepts": [
          "Introduction to Advanced Features of jQuery",
          "Drawing and Mouse Position",
          "Recording Events",
          "jQuery UI - Using Elements",
          "jQuery UI - Using the Dialog Feature",
          "jQuery UI - Using the Datepicker",
          "jQuery UI - Using Special Effects",
          "jQuery Plugins"
        ],
        "Course Quiz": [
          "Learn jQuery Quiz"
        ]
      },
      "requirements": [
        "Prerequisites include a foundation of creating basic websites, an understanding of HTML/CSS familiarity, and basic web concepts."
      ],
      "description": "Learn the essentials you'll need to get started with jQuery, the most popular JavaScript library in use today.\nDuring this two-hour crash course, your instructor will introduce you to the basics of the jQuery syntax.\nLearn about jQuery selectors, one of the most important parts of the jQuery library, and how to manipulate the Document Object Model (DOM). Discover how jQuery events can be used to register behaviors that take effect when the user interacts with the web browser.\nYou will also learn how to use jQuery to traverse and filter the DOM, which is used to help find HTML elements.\nLearn advanced topics, including how to capture mouse events using the jQuery UI framework and some of the popular jQuery plugins used to extend the power of jQuery.\nBy the end of this course, you will be confident in your knowledge of the fundamentals needed to effectively use jQuery.\nThis course includes:\nDemo files\nAn optional quiz to test what you've learned\nCertificate of completion\nAll of our videos are high-definition videos, therefore, they are best viewed with the HD setting on, and the videos enlarged.\nWhat People Are Saying:\n★★★★★ “This course is very good. the explanation is very clear and easy to understand” –Justin Rogers\n★★★★★ “Very easy to follow course, extremely informative, very well done. Thank you so much!” -Mike Webster\n★★★★★ “Excellent accelerated intro to jQuery. Clearly spoken and the videos are crisp and easily viewed.” -Leslie Milburn\n★★★★★ “Instructor did a fantastic job explaining what we were doing. This course is one of the best on the subject that I've done. I especially appreciate the project based approach of learning jQuery, but the instructor does a good job walking us through the HTML, CSS, and jQuery of building these examples. I'd definitely take more Simon Sez IT courses from this teacher.” -Daniel Maldonado",
      "target_audience": [
        "Web masters or web designers who need to improve their development skills."
      ]
    },
    {
      "title": "Building Modern Web Applications with Go (Golang)",
      "url": "https://www.udemy.com/course/building-modern-web-applications-with-go/",
      "bio": "Learn to program in Go from an award winning university professor",
      "objectives": [
        "How to write programs in the Go language (often called Golang)",
        "How to create HTML pages using HTML5",
        "How to write Javascript without depending on something like jQuery",
        "How to create and use Cascading Style Sheets",
        "How to build modern, secure web applications in Google's Go programming language",
        "How to organize your Go application correctly",
        "How to write tests in Go",
        "How to connect to a database in Go",
        "How to manage sessions in Go",
        "How to create and use middleware in Go",
        "How to use 3rd party packages with Go Modules",
        "How to implement secure user authentication in Go",
        "Best practices for security in web applications",
        "How to deploy a Go web application to a live server"
      ],
      "course_content": {
        "Introduction": [
          "Introduction: who I am, and what we're going to do",
          "Why Go? Why not PHP, or Python, or Node.js, or whatever?",
          "Why use Go? - System Resources",
          "Installing Go, an IDE, and writing a simple program",
          "Getting help: How to ask questions",
          "Some Useful Resources"
        ],
        "Overview of the Go Language": [
          "A note about the terminal on Windows: Git Bash",
          "Variables & Functions",
          "Pointers",
          "Types and Structs",
          "Receivers: Structs with functions",
          "Other data structures: Maps and Slices",
          "Decision Structures",
          "Loops and ranging over data",
          "Interfaces",
          "Test quiz",
          "Packages",
          "Channels",
          "Reading and Writing JSON",
          "Writing Tests in Go"
        ],
        "Building a Basic Web Application": [
          "How web applications work: the request/response lifecycle",
          "Making a \"Hello, World\" web application",
          "Making our application module-ready",
          "Functions and handlers",
          "Error checking",
          "Serving HTML Templates",
          "A note for Windows Users",
          "Reorganizing our code, and adding some basic styling to pages",
          "Enabling Go Modules and refactoring our code to use packages",
          "Working with Layouts",
          "Building a simple template cache",
          "Building a more complex template cache",
          "A note about the next lectures",
          "Setting application wide configuration",
          "Why the application wide config is so useful",
          "Optimizing our template cache by using an application config",
          "A note about the next lecture",
          "Sharing data with templates"
        ],
        "Improved Routing & Middleware": [
          "Using pat for routing",
          "Using chi for routing",
          "Developing our own middleware"
        ],
        "State Management with Sessions": [
          "Installing and setting up a sessions package",
          "Experimenting with sessions"
        ],
        "Choosing a Project, and Working With Forms": [
          "What are we going to build?",
          "Setting up our project",
          "Enabling static files",
          "Creating pages as HTML",
          "Creating a landing page",
          "Creating a page for each room",
          "Adding a form to search for availability",
          "Improving our form",
          "Creating the reservation page"
        ],
        "Javascript & CSS": [
          "What is Javascript, and why should I care?",
          "Making a better date picker",
          "Custom alerts using Notie",
          "Creating modals with SweetAlert",
          "Implementing a Javascript module",
          "Adding custom alerts in our Javascript module",
          "Using our Javascript module on the \"Book Now\" button",
          "What is CSS, and how does it work?"
        ],
        "Coverting our HTML to Go Templates, and creating handlers": [
          "Converting our pages to Go templates",
          "Creating handlers for our forms & adding CSRF Protection",
          "Creating a handler that return JSON",
          "Sending & processing an AJAX request",
          "Sending AJAX post and generalizing our custom function",
          "Refactoring to use internal packages",
          "Server-side form validation",
          "Server side form validation II",
          "Server side form validation III",
          "Server Side form validation IV",
          "Displaying a response to user after posting form data",
          "Finishing up our response to user, and adding alerts",
          "An aside: Alternate Templating Engines"
        ],
        "Writing Tests": [
          "Writing tests for our main package",
          "Writing tests for our GET handlers",
          "Writing tests for our POST handlers",
          "Writing tests for our Render package I",
          "Writing tests for our Render package II",
          "Getting test coverage",
          "Exercise: Writing tests for the Forms package",
          "Solution to writing tests for the Forms package",
          "Making running our application easier"
        ],
        "Improved Error Handling": [
          "Centralizing our error handling to a helpers package",
          "Using our ClientError and ServerError helper functions",
          "Updating our tests"
        ]
      },
      "requirements": [
        "There are no prerequisites for this course. All you need is a computer (Mac, Windows, or Linux) and an Internet connection."
      ],
      "description": "Learn to write modern, fast, and secure web applications in Google's Go programming language, and learn it from an award winning University professor with 20 years of teaching experience, and 20 years of experience working in the industry as an entrepreneur.\nGo is a modern, type safe, compiled, and extremely fast programming language. It it is ideally suited for building safe, scalable, incredibly fast web applications.\nThis course is well-suited for both absolute beginners, and for developers who already know something about web development, but want to add Go to their toolbox.\nWe start with an overview of the Go language, and then cover everything you need to get started writing web applications, including an overview of HTML5, a survey of JavaScript and JavaScript modules, how to work with Cascading Style Sheets to make our application look the way we want, and much more.\nThe major project in this course is building a bookings and reservation system for a Bed & Breakfast. Visitors to our site will be able to search for accommodations by date and make an online reservation, and the site owner will be able to manage reservations from a secure back end.\nBy the time you finish this course, you will have a solid grasp of what it takes to build a completely functional, secure, and fast web application from the ground up, and you will have a solid understanding of the Go programming language.",
      "target_audience": [
        "Beginners who want to learn to write programs professionally",
        "Experienced developers who are interested in learning Go"
      ]
    },
    {
      "title": "AWS CloudFormation - Simplified | Hands On with YAML",
      "url": "https://www.udemy.com/course/aws-cloudformation-simplified-hands-on-learning/",
      "bio": "An awesome journey from AWS CloudFormation to Continuous Integration, Continuous Delivery & Infrastructure as Code.",
      "objectives": [
        "You will learn all CloudFormation template sections with multiple hands-on examples for each section of template.",
        "You will write 45 CloudFormation templates during the period of this course with different varitions in templates",
        "You will learn writing CloudFormation templates for AWS CodeBuild, CodeDeploy & CodePipeline services which are very important services in AWS for achieving Continuous Integration, Continuous Delivery & Infrastructure as Code.",
        "You will learn Metadata cfn-init and Helper Scripts (cfn-init, cfn-signal & cfn-hup) in a step by step manner by deploying a simple rest service application to an EC2 instance.",
        "You will get complete knowledge on every section of cfn-init metadata (packages, users, source, services etc) and helper scripts (cfn-init, cfn-signal & cfn-hup).",
        "You will learn in implementing the Infrastructure as Code with a VPC sample provided.",
        "You will master the Nested Stacks concepts by building two nested stacks and using them in Root Stack.",
        "You will learn implementing cfn-init Config sets(Both Single Config sets and Multiple Config Sets)",
        "You will learn practically implementing AWS CodeCommit, CodeBuild, CodeDeploy & CodePipeline Services both via AWS Management Console and CloudFormation",
        "You will learn and master using 14 Intrinsic functions in AWS CloudFormation",
        "You will learn YAML basics and write all the CloudFormation templates using YAML.",
        "You will learn concepts, features and integration aspects present in CodeCommit, CodeBuild, CodeDeploy & CodePipeline services.",
        "You will learn about creating simple rest application using Spring Boot.",
        "You will learn about AWS SNS (Simple Notification Service - Topics, Subscriptions) and implement the notificaitons in CodeBuild and CodeDeploy Services using CloudFormation.",
        "You will learn and understand the local git repository, remote git repository and how to use them from Spring Tool Suite IDE.",
        "You will learn deploying java based rest applications to EC2 Instances using AWS CloudFormation and AWS Developer Tools.",
        "You will write CloudFormation templates for EC2 Instances and VPC"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to AWS CloudFormation",
          "AWS CloudFormation Templates and Slides"
        ],
        "YAML Concepts required for AWS CloudFormation": [
          "YAML Concepts",
          "Connect with Me !!!"
        ],
        "Stack Features": [
          "01. Stack Features - Pre-requisites",
          "02. Create Stack",
          "03. Update Stack",
          "04. Create Change Set - KeyName",
          "05. Create Change Set - InstanceType",
          "06. Update Rollback",
          "07. Create Stack - Invalid Template"
        ],
        "Resources": [
          "00. Resources Introduction",
          "01. Create a Resource - EC2 Instance",
          "02. Create a Resource - Security Group",
          "03. Create a new rule in existing Security Group",
          "04. Create a new resource - Elastic IP",
          "05. Perform CloudFormation Temaplate - Case Sensitivity Test"
        ],
        "Parameters": [
          "00. Parameters Introduction",
          "01. Add KeyName as Parameter - AWS Specific Parameter",
          "02. Add AvailabilityZone as Parameter - Parameter Type - String",
          "03. Add InstanceType as Parameter - Parameter Type - String",
          "04. Add Instance Type as Parameter -Parameter Type - SSM"
        ],
        "Mappings": [
          "00. Mappings Introduction",
          "01. PSeudo Parameters",
          "02. Create a Map for AMI's",
          "03. Create a Map for Environments",
          "Connect with Me !!!"
        ],
        "Conditions": [
          "00. Conditions Introduction",
          "01. Conditions - Intrinsic Function Fn::Equals",
          "02. Conditions - Intrinsic Function Fn::If and PSeudo Parameter AWS::NoValue",
          "03. Conditions - Intrinsic Function Fn::If - Additional Usecase",
          "04. Conditions - Intrinsic Function Fn::Not",
          "05. Conditions - Intrinsic Function Fn::Or",
          "06. Conditions - Intrinsic Function Fn::And"
        ],
        "Outputs": [
          "00. Outputs Introduction",
          "01. Outputs - Base Template Overview",
          "02. Outputs - InstanceId as Output",
          "03. Outputs - Intrinsic Function Fn::GetAtt",
          "04. Outputs - Intrinsic Function Fn::Sub and Exports Feature",
          "05. Outputs - Cross Reference Stacks using Exports Feature & Fn::ImportValue",
          "06. Outputs - For Master Stack - Test Delete Stack and Modify Stack",
          "07. Outputs - Conditions in Outputs section of a Template",
          "08. Outputs - Intrinsic Function Fn::Join"
        ],
        "Metadata": [
          "00. Metadata Introduction",
          "01. Metadata - Designer Metadata Introduction",
          "02. Metadata - Designer Metadata Demo",
          "03. Metadata - Interface Metadata Introduction",
          "04. Metadata - Interface Metadata Base Template Overview",
          "05. Metadata - Interface Metadata Demo"
        ],
        "EC2 UserData": [
          "00. EC2 UserData Introduction",
          "01. EC2 UserData - Base Template Overview",
          "02. EC2 UserData - Demo"
        ]
      },
      "requirements": [
        "You must have an AWS account to follow with me for hands-on activities.",
        "Having basic knowledge on AWS EC2 service will suffice."
      ],
      "description": "******* Course Overview *******\nWelcome to this Amazing course on AWS CloudFormation Simplified. We will learn by practically implementing all the CloudFormation concepts with multiple examples.\nAWS CloudFormation is a core Service in AWS which allows us to automate the Infrastructure and Application Deployments. We can achieve Continuous Integration, Continuous Delivery and Infrastructure as Code when using AWS CloudFormation in combination with AWS Developer Tools like AWS CodeCommit, AWS CodeBuild, AWS CodeDeploy and AWS CodePipeline.\nThere are two parts to this course.\nIn the first part of the course you will learn all the AWS CloudFormation concepts by practically implementing them. Below are the sections for part one.\nPart-1: AWS CloudFormation\n01. Introduction to CloudFormation\n02. YAML Essentials\n03. Stack Features\n04. Resources\n05. Parameters\n06. Mappings\n07. Conditions\n08. Outputs\n09. Metadata\n10. EC2 UserData\n11. Metadata cfn-init & Helper Scripts (cfn-init, cfn-signal and cfn-hup)\n12. Metadata cfn-init - Config Sets\n13. Nested Stacks\nIn the second part of the course, you will implement the below listed three concepts using AWS CloudFormation & AWS Management Console.  You will write cloud formation templates for AWS Developer tools (AWS CodeCommit, CodeBuild, CodeDeploy & CodePipeline) to implement the CI, CD and IAC.\n01. Continuous Integration (CI)\n02. Continuous Delivery (CD)\n03. Infrastructure as Code (IAC)\nPart-2: AWS Continuous Integration, Continuous Delivery and Infrastructure as Code using AWS CloudFormation & AWS Management Console\n14. Continuous Integration & Continuous Delivery using CloudFormation\n15. Infrastructure as Code using CloudFormation\nDuring the learning process, you will write 45+ cloud formation templates written in YAML.\nThis course also provides 45+ pre-built templates which you can use them during the learning process.  In addition this course comes with 190 slides in a PDF document.\nEach of my courses come with\nAmazing Hands-on Step By Step Learning Experiences\nReal Implementation Experience\nFriendly Support in the Q&A section\n30 Day \"No Questions Asked\" Money Back Guarantee!\n***************Section wise course details**********************\nIntroduction\n01 Step 01: Introduction to AWS CloudFormation\n01 Step 02: AWS CloudFormation Templates and Slides\nYAML Concepts\n02 Step 01: YAML Concepts\nStack Features\n03 Step 01: Pre-requisites\n03 Step 02: Create Stack\n03 Step 03: Update Stack\n03 Step 04: Create Change Set - KeyName\n03 Step 05: Create Change Set - Instance Type\n03 Step 06: Update Rollback\n03 Step 07: Create Stack - Invalid Template\nResources\n04 Step 00: Resources Introduction\n04 Step 01: Create a Resource - EC2 Instance\n04 Step 02: Create a Resource - Security Group\n04 Step 03: Create a new rule in existing Security Group\n04 Step 04: Create a new resource - Elastic IP\n04 Step 05: Perform CloudFormation Template - Case Sensitivity Test\nParameters\n05 Step 00: Parameters Introduction\n05 Step 01: Add Keyname as Parameter - AWS Specific Parameter\n05 Step 02: Add Availability Zone as Parameter - Parameter Type String\n05 Step 03: Add InstanceType as Parameter - Parameter Type String\n05 Step 04: Add InstanceType as Parameter - Parameter Type SSM\nMappings\n06 Step 00: Mappings Introduction\n06 Step 01: Pseudo Parameters\n06 Step 02: Create a Map for AMI's\n06 Step 03: Create a Map for Environments\nConditions\n07 Step 00: Conditions Introduction\n07 Step 01: Conditions - Intrinsic Function Fn::Equals\n07 Step 02: Conditions - Intrinsic Function Fn::If and Pseudo Parameter AWS::NoValue\n07 Step 03: Conditions - Intrinsic Function Fn::If (Additional usecase)\n07 Step 04: Conditions - Intrinsic Function Fn::Not\n07 Step 05: Conditions - Intrinsic Function Fn::Or\n07 Step 06: Conditions - Intrinsic Function Fn::And\nOutputs\n08 Step 00: Outputs Introduction\n08 Step 01: Outputs - Base Template Overview\n08 Step 02: Outputs - InstanceId as Output\n08 Step 03: Outputs - Intrinsic Function Fn::GetAtt\n08 Step 04: Outputs - Intrinsic Function Fn::Sub and Exports Feature and Pseudo Parameter AWS::StackName\n08 Step 05: Outputs - Cross Reference Stacks using Exports feature and Intrinsic Function Fn::ImportValue\n08 Step 06: Outputs - For Master Stack - Test Delete Stack and Modify Stack\n08 Step 07: Outputs - Conditions in Outputs section of a template\n08 Step 08: Outputs - Intrinsic Function Fn::Join\nMetadata\n09 Step 00: Metadata Introduction\n09 Step 01: Metadata - Designer Metadata Introduction\n09 Step 02: Metadata - Designer Metadata Demo\n09 Step 03: Metadata - Interface Metadata Introduction\n09 Step 04: Metadata - Interface Metadata Base Template Overview\n09 Step 05: Metadata - Interface Metadata Demo\nEC2 UserData\n10 Step 00: EC2 UserData Introduction\n10 Step 01: EC2 UserData -  Base Template Overview\n10 Step 02: EC2 UserData - Demo\nMetadata cfn-init & Helper Scripts (cfn-init, cfn-signal and cfn-hup)\n11 Step 00: Metadata cfn-init - Introduction\n11 Step 00: Metadata cnf-init - Base Template Overview\n11 Step 01: Metadata cfn-init - Metadata Format\n11 Step 02: Metadata cfn-init - Packages\n11 Step 03: Metadata cfn-init - Groups\n11 Step 04: Metadata cfn-init - Users\n11 Step 05: Metadata cfn-init - Sources\n11 Step 06: Metadata cfn-init - files\n11 Step 07: Metadata cfn-init - commands\n11 Step 08: Metadata cfn-init - Services\n11 Step 09: UserData - Update Helper Scripts - aws-cfn-bootsrap\n11 Step 10: UserData - cfn-init\n11 Step 11: UserData - cfn-signal\n11 Step 12: Outputs & Create Stack\n11 Step 13: Creation Policy & Create Stack\n11 Step 14: UserData - cfn-hup & Update the v2 version of App - Update Stack Demo\n11 Step 15: Metadata cfn-init - Conclusion\nMetadata cfn-init - Config Sets\n12 Step 00: ConfigSets Introduction\n12 Step 01: Single ConfigSet - Demo\n12 Step 02: Multiple ConfigSets - Demo 1\n12 Step 03: Multiple ConfigSets - Demo 2 - Configset in Configset\n12 Step 04: Multiple ConfigSets - Demo 3 - default ConfigSet\nNested Stacks\n13 Step 00: Nested Stacks Introduction\n13 Step 00: Nested Stacks - S3 Pre-requisites\n13 Step 01: Nested Stacks - Manual VPC Creation\n13 Step 02: Create Nested Stack VPC Template - Create VPC\n13 Step 03: Create Nested Stack VPC Template - Create Subnet\n13 Step 04: Create Nested Stack VPC Template - Create Route Table\n13 Step 05: Create Nested Stack VPC Template - Associate Subnet to Route Table\n13 Step 06: Create Nested Stack VPC Template - Create Internet Gateway and Associate it\n13 Step 07: Create Nested Stack VPC Template - Add Route for Internet Access\n13 Step 08: Create Nested Stack VPC Template - Parameterize CidrBlocks\n13 Step 09: Create Nested Stack VPC Template - Create Interface Metadata\n13 Step 10: Create Nested Stack VPC Template - Create Outputs\n13 Step 11: Create Nested Stack VPC Template - Test and Upload to S3\n13 Step 12: Create Root Stack Template - Create Base Template\n13 Step 13: Create Root Stack Template - Nest VPC stack in Root Stack\n13 Step 14: Nested VPC Stack - Demo\n13 Step 15: Create Nested Security Group Stack Template\n13 Step 16: Update Root Stack Template - Nest Security Group stack in Root Stack\n13 Step 17: Nested Security Group Stack - Demo\n13 Step 18: Update Nested Security Group Stack with new Inbound Security Rule\n13 Step 19: Delete Nested Stacks\nContinuous Integration & Continuous Delivery using CloudFormation\n14.00.00: Introduction to Continuous Integration & Continuous Delivery\n14.01.00: Introduction to EC2 Apps Stack\n14.01.01: EC2 Apps Stack - Create Security Group\n14.01.02: EC2 Apps Stack - Create VM Instances, Parameters and Outputs\n14.01.03: EC2 Apps Stack - Create Instance Profile Role and Instance Profile\n14.01.04: EC2 Apps Stack - Create Stack and Verify\n14.02.00: CodeCommit - Introduction\n14.02.01: CodeCommit - Create a Simple Rest Application\n14.02.02: CodeCommit - Create Repo in CodeCommit and check-in code\n14.02.03: CodeCommit - Additional CodeCommit Features\n14.03.00: Introduction to CodeBuild with AWS Web Console & CloudFormation\n14.03.01: CodeBuild - Introduction\n14.03.02: CodeBuild - Create Project\n14.03.03: CodeBuild - Create buildspec.yml and start buil\n14.03.04: CodeBuild - Create Build Notifications\n14.03.05: CodeBuild CFN - CloudFormation Introduction\n14.03.06: CodeBuild CFN - Update buildspec.yml with Runtime Version\n14.03.07: CodeBuild CFN - Create CodeBuild CloudFormation Template\n14.03.08: CodeBuild CFN - Create CodeBuild Stack and Test\n14.04.00: Introduction to CodeDeploy with AWS Web Console & CloudFormation\n14.04.01: CodeDeploy - Introduction\n14.04.02: CodeDeploy - Create CodeDeploy Service Role\n14.04.03: CodeDeploy - Create a Test VM\n14.04.04: CodeDeploy - Create Application & Deployment Group\n14.04.05: CodeDeploy - Create appspec.yml and scripts\n14.04.06: CodeDeploy - Create New Build & Deploymen\n14.04.07: CodeDeploy - Verify the new Deployment\n14.04.08: CodeDeploy - New Application Release\n14.04.09: CodeDeploy CFN - CloudFormation Introduction\n14.04.10: CodeDeploy CFN - appspec.yml and Scripts\n14.04.11: CodeDeploy CFN - Create Template - Role, Application and Deployment Group\n14.04.12: CodeDeploy CFN - Create CodeDeploy Stack\n14.04.13: CodeDeploy CFN - Create Deployment and Update Stack and Test\n14.05.00: Introduction to CodePipeline with AWS Web Console & CloudFormation\n14.05.01: CodePipeline - Introduction\n14.05.02: CodePipeline - Create Pipeline\n14.05.03: CodePipeline - Make changes to Rest App and Verify CodePipeline\n14.05.04: CodePipeline - Introduction to Prod Approval and Deploy Stages\n14.05.05: CodePipeline - Create Prod EC2 Instance & Prod Deployment Group\n14.05.06: CodePipeline - Create Prod Approval and Prod Deploy Stages\n14.05.07: CodePipeline - Change Code in App and Check-In Code to Trigger Pipeline\n14.05.08: CodePipeline - Conclusion for Prod Approval and Deploy Stages\n14.05.09: CodePipeline CFN - Introduction\n14.05.10: CodePipeline CFN - Create CodePipeline Role\n14.05.11: CodePipeline CFN - Create Pipeline Stages - Source, Build and Stage\n14.05.12: CodePipeline CFN - Create Pipeline Stack and Verify\n14.05.13: CodePipeline CFN - Create SNS and Prod Deployment Group\n14.05.14: CodePipeline CFN - Create Prod Pipeline Stages - Approval & Deploy\n14.05.15: CodePipeline CFN - Update Stack with Prod Stages\nInfrastructure as Code using CloudFormation\n15.00.00: Introduction to Infrastructure as Code\n15.01.00: Introduction to Infrastructure as Code using AWS Management Console\n15.01.01: Understand VPC Source Files\n15.01.02: Create VPCRepo in CodeCommit and Check-In VPC Source files\n15.01.03: Create Pipeline with Source and Build Stages\n15.01.04: Create Pipeline with Test VPC Stage\n15.01.05: Create Pipeline with Prod Stage (Create Change Set, Approval, Execute CS)\n15.01.06: Update VPC CFN Template with new VPC resources and check-in code\n15.02.00: Introduction to Infrastructure as Code using CloudFormation\n15.02.01: VPC Source files check-in to CodeCommit Repository\n15.02.02: Create CodeBuild Role and CodeBuild Project in CFN Template\n15.02.03: Create CodePipeline Role and CloudFormation Role in CFN Template\n15.02.04: Create CodePipeline stages Source, Build and Tes\n15.02.05: Create CodePipeline CloudFormation Stack with 3 stages\n15.02.06: Create Pipeline Stage for Prod(Create Change Set, Approval, Execute CS)\n15.02.07: Create CodePipeline CloudFormation Stack with 4 stages\n15.02.08: Check-in VPCRepo with new subnet resource added and Monitor Pipeline\nCloudFormation Stack Policy\n16 Step 00: Introduction to Stack Policy\n16 Step 01: Stack Policy - Resource\n16 Step 02: Stack Policy - Resource Type\n16 Step 03: Stack Policy - Action:Update:Replace\n16 Step 04: Stack Policy - NotAction:Update:Delete\n16 Step 05: Stack Policy - Override the existing Stack Policy during Stack Update",
      "target_audience": [
        "AWS Developers planning to learn writing CloudFormation templates to provision AWS services.",
        "System Engineers or Infrastructure engineers who want to better understand the Automated deployment process in AWS.",
        "Technologists who want to implement Continuous Integration and Continuos Delivery/Deployment process (CI/CD) in AWS.",
        "DevOps Teams who want to automate the Application and Infrastructure deployments using AWS CloudFormation and AWS Developer Tools.",
        "Anyone who want to learn end to end automation in AWS (Application Deployments and Infrastructure Deployments)."
      ]
    },
    {
      "title": "Become a WordPress Developer: Unlocking Power With Code",
      "url": "https://www.udemy.com/course/become-a-wordpress-developer-php-javascript/",
      "bio": "Learn PHP, JavaScript, WordPress theming & the WP REST API to Create Custom & Interactive WordPress Websites",
      "objectives": [
        "Why code is the key to building whatever you can imagine with WordPress",
        "The ability to write PHP to manipulate the data of a WordPress site",
        "The ability to write JavaScript to add on-the-fly interactivity to a WordPress site",
        "How to code your own new custom block types for the \"Gutenberg\" Block Editor",
        "The skills, knowledge and vocabulary to work professionally as a WordPress developer"
      ],
      "course_content": {},
      "requirements": [
        "Basic WordPress knowledge (how to create a blog post, etc...)",
        "A basic understanding of HTML (e.g. \"p\" is for paragraph, \"h1\" is for headline, etc...)",
        "No CSS knowledge required (although it helps to understand that CSS is used to add style & design to a page)",
        "No JavaScript knowledge required (although it helps to understand that JS is used to add interactivity to a page)"
      ],
      "description": "Unlock the full power of WordPress and go beyond \"just a blog platform\" by learning how to code completely custom WordPress powered sites.\nUpdated for 2024: New chapters about The Interactivity API, Block Themes, Full Site Editing, Gutenberg Block Type Creation, Plugin Development, React.js basics, custom MySQL essentials, and more!\nI've spent the last 12 years studying WordPress, PHP, and JavaScript and now I'm here to teach you everything I know. Come along on this journey with me and become a WordPress developer.\nTogether we will build a website for a fictional university and along the way we will:\nInstall WordPress on your personal computer so you have a private playground copy of WordPress to practice and experiment with\nGet introduced to the PHP language (this is what powers WordPress)\nSet Up a New Theme (You'll learn how to convert any HTML template into a living breathing WordPress theme)\nCreate Custom Post Types and Custom Fields\nRelate pieces of content with each other (e.g. a professor and a program)\nLearn the basics of (object-oriented) JavaScript\nLeverage the WP REST API\nLearn to use JavaScript to communicate with the WordPress back-end on-the-fly\nLet visitors sign up for a basic account on our site\nBuild a \"My Notes\" feature (user specific single page application with real-time CRUD actions)\nLet users \"like\" or \"heart\" a professor (update the professor's like count on-the-fly)\nDeploy our website live up onto the web for the entire world to view\nAnd much more!\n\n\nThis course may be brand new, but this isn’t my first time teaching. I’ve led training sessions for Fortune 500 companies and I’ve already helped over 17,000 people on Udemy and received the following feedback:\n\"Brad definitely has some of the best techniques to embed the lesson into your mind… hands down these are the best tutorials I have had the opportunity to view.\"\n\"Presentation is concise without being tedious… you honestly feel that you have a thorough understanding of the subject.\"\n\"…[Brad] explained the process. Not memorize this or that, he explained the process. If you're looking to take a course to understand the foundations of creating websites, look no further.\"\nBecome highly valuable and relevant to the companies that are hiring WordPress developers; in one convenient place alongside one instructor. If you're ready to begin coding custom websites - I'll see you on the inside!",
      "target_audience": [
        "Developers who want to use WordPress as a true Content Management System and not \"just a blog platform.\"",
        "Those looking to learn the PHP and JavaScript languages.",
        "People who want to learn about the \"REST API\" which allows us to interact with WordPress data on-the-fly in realtime.",
        "Anyone interested in custom post types, custom fields, and creating relationships between various content types."
      ]
    },
    {
      "title": "MongoDB with Java Spring Boot & Spring Framework",
      "url": "https://www.udemy.com/course/mongodb-with-spring-boot-spring-data-mongorepository-mlab-cloudfoundry/",
      "bio": "MongoDB (NoSQL) With Spring Boot using Spring Data. Learn to deploy Spring Boot App to Pivotal Cloud Foundry with mLab",
      "objectives": [
        "You will Learn MongoDB which is most widely used NoSQL Database",
        "You will Learn CRUD ( Created, Read, Update and Delete ) Operations in MongoDB",
        "You will Learn to implement Pagination and Sorting in MongoDB",
        "You will Learn AND, OR, IN, Like and Starts With Query in MongoDB",
        "You will Learn CRUD ( Created, Read, Update and Delete ) Operations With Spring Data MongoDB",
        "You will Learn to implement Pagination and Sorting in MongoDB With Spring Data MongoDB",
        "You will Learn AND, OR, IN, Like and Starts With Query in MongoDB With Spring Data MongoDB",
        "You will Learn To Deploy Spring Boot App as Jar packaging to Pivotal Cloud Foundry along with MongoDB using mLab",
        "You will Learn to write Native MongoDB With Spring Data MongoDB",
        "You will Learn MongoDB with Java."
      ],
      "course_content": {},
      "requirements": [
        "Need to have Basic Knowledge of Spring Boot and JSON"
      ],
      "description": "***** Some Reviews From Students *****\nI really like the way you explained everything. Thank you so much for your clear elaborations.\nVery helpfull course for basic intro into SpringData with MongoDb.\nExcellent course so far, it has valuable content, good topic organization and useful tools taught.\nGood course to learn MongoDB with Spring Boot\n\n\n***** Course Updates*****\nApril 2021 - Course Updated with latest version of MongoDB and MongoDB Compass UI Tool.\n\n\nIn this course you are going to learn MongoDB which is most widely used NoSQL database in the world.\nMongoDB is a cross platform document-oriented database program. MongoDB Stores data in the format of JSON.\n\n\nThis course covers MongoDB starting from its installation with wide range queries including CRUD operations. You will learn MongoDB with Studio 3T UI Connector which is used to run queries over MongoDB database.\nMongoDB Compass is an official UI tool to execute queries and you will earn that as well in this course.\n\n\nNow a days Spring framework is widely used among Java Developers and specifically Spring Boot is in high demand. So in the later part of the course you will learn to use MongoDB with Spring Boot App using Spring Data MongoDB with help of MongoRepository.\nWe are in the era of cloud and who doesn't want to have applications in the cloud. In this course you will learn to deploy your Spring Boot Application to Pivotal Cloud Foundry (PCF) which is Platform As A Service (PaaS) cloud provider.\nThere you will learn to use mLab which provides MongoDB on cloud. It is Database As A Service (DBaaS).\nSo by end of this course you will learn MongoDB in detail and you Spring Boot and MongoDB both will be on cloud. Isn't it Amazing.\nYou will Learn CRUD ( Created, Read, Update and Delete ) Operations in MongoDB and in the later part of the course you will learn CRUD operations in Spring Boot App using Spring Data MongoDB.\nYou will Learn to implement Pagination and Sorting in MongoDB and in the later part of the course you will learn to implement in Spring Boot App using Spring Data MongoDB.\nYou will Learn AND, OR, IN, Like and Starts With Query in MongoDB and in the later part of the course you will learn AND, OR, IN, Like and Starts With Query in Spring Boot App using Spring Data MongoDB.\nYou will Learn to write Native MongoDB With Spring Data MongoDB using @Query Annotation.\nYou will Learn MongoDB with Java.\nLet's begin journey towards NoSQL with MongoDB by enrolling in this course...",
      "target_audience": [
        "Anyone who wants to learn MongoDB (NoSQL)"
      ]
    },
    {
      "title": "Salesforce Visualforce Development: Create Visualforce pages",
      "url": "https://www.udemy.com/course/learn-salesforce-visualforce-step-by-step/",
      "bio": "Salesforce Visualforce: create custom pages, learn about tags, standard controller, custom controller and extensions",
      "objectives": [
        "Use custom button to launch visual force page",
        "They will also learn about different types of controllers like Standard Controllers, Custom Controllers and Controller extensions",
        "They will learn basic visualforce tags like <apex:pageBlockButtons> <apex:pageMessage> <apex:inputsecret> <apex:inputcheckbox> <apex:inputFile> etc",
        "Accessing Data with List Controllers",
        "Hands-on examples that will help you create business applications using Visualforce quickly and efficiently.",
        "Learn about Multiple controller extensions",
        "Building a Custom List Controller",
        "Design a Visualforce page using Apex and JavaScript",
        "Learn to build interactive Visualforce pages.",
        "Display data in a Visualforce page",
        "Invoking custom methods in Visualforce pages",
        "Interaction of the Visualforce controller with the view"
      ],
      "course_content": {},
      "requirements": [
        "Little Apex or Programming knowledge is required.",
        "Understanding of basic concepts of Salesforce and their functions is required.",
        "Internet connection to access the course"
      ],
      "description": "Salesforce Visualforce Development: Create Visualforce Pages\nMaster Visualforce and Build Custom, Interactive Salesforce Pages With Confidence\nSalesforce is the world’s #1 CRM, but what truly sets it apart is the ability to customize it to fit the exact needs of a business. That’s where Visualforce comes in.\nVisualforce is more than just a framework. It’s your toolkit for creating sophisticated, interactive, and custom user interfaces that can be hosted natively on the SalesForce platform.\nAnd here’s the truth:\nIf you want to stand out as a Salesforce Developer, you need to master Visualforce. It’s what turns a good developer into a problem-solver who can adapt Salesforce to real-world business needs.\nThis course is your hands-on path to mastering Visualforce — step by step, with real examples, no fluff.\nWhy This Course?\nMost tutorials just skim the surface of Visualforce. They either drown you in theory or show you isolated snippets without context.\nThis course is different. Here, you’ll:\nWork hands-on with every essential Visualforce tag.\nBuild real, interactive pages from scratch.\nLearn by doing — not by watching PowerPoints.\nGet notes on every topic to reinforce your learning.\nBy the end, you won’t just “know about” Visualforce. You’ll have the skills and confidence to create, extend, and customize Visualforce pages in real-world Salesforce environments.\nWhat You’ll Learn\nWe’ll cover everything you need to become job-ready with Visualforce:\nPart 1: Visualforce Tags (Hands-On Practice)\nYou’ll master key tags like:\n<apex:pageBlockButtons>\n<apex:pageMessage>\n<apex:inputSecret>\n<apex:inputCheckbox>\n<apex:inputFile>\n<apex:inputHidden>\n<apex:inputField>\n<apex:inputTextArea>\n<apex:outputLabel>\n<apex:outputLink>\n<apex:outputPanel>\n<apex:outputText>\n<apex:column>\n<apex:tab>, <apex:toolbar>, <apex:panelBar> and many more...\nThese are the building blocks you’ll use every single day as a Salesforce Developer.\nPart 2: Controllers and Data\nHow to use Standard Controllers\nAssociating controllers with Visualforce pages\nAction methods (and which ones every controller supports)\nStandard List Controllers and their actions\nCustom Controllers & Controller Extensions\nMultiple controller extensions\nBuilding your own Custom List Controller\nWhat You’ll Get\nHands-on learning with real-time examples\nAll the important Visualforce tags you’ll use on the job\nDownloadable notes for every topic\nStep-by-step guidance on controllers and extensions\nThe confidence to customize or override standard Salesforce pages\nWho This Course Is For\nSalesforce Developers who want to level up their UI skills\nSalesforce Admins who want to understand how custom pages are built\nBeginners eager to get hands-on with Visualforce\nAnyone preparing for a Salesforce Developer career or certification\nWhy Learn From Me?\nI’ve taught thousands of students how to become Salesforce professionals. My teaching approach is simple:\nBreak down every concept step by step\nShow you how to do it, not just talk about it\nGive you practical examples you’ll face in real projects\nThis course is designed to make you confident and job-ready with Visualforce\nYour Career Advantage\nVisualforce remains a critical skill for Salesforce Developers — especially when businesses need custom, highly tailored solutions. By learning Visualforce, you’re giving yourself an edge in the job market and setting yourself up for bigger projects, better roles, and higher pay.\nEnroll today in Salesforce Visualforce Development: Create Visualforce Pages and start building the kind of Salesforce pages that make you stand out as a true developer.\nHands-on. Practical. Career-focused.\nThis is the course that takes you from knowing Visualforce to mastering it.\nClick “Enroll Now” and start building your first Visualforce pages today.",
      "target_audience": [
        "Salesforce admistrators who want to become Salesforce Developers",
        "Salesforce Developers who want to learn Visualforce.",
        "Any developer who wants to customize and write programs for business logic and user interface layers using Apex and Visualforce",
        "If you want to Gain knowledge of the Visualforce controllers and markup"
      ]
    },
    {
      "title": "Document Object Model (DOM) - Complete Guide - Part 1 (2025)",
      "url": "https://www.udemy.com/course/build-interactive-websites-1/",
      "bio": "Advanced Document Object Model (DOM) course for everyone! Use JavaScript to Build Dynamic Exciting Websites with the DOM",
      "objectives": [
        "Deeply understand the Document Object Model (DOM)",
        "Use JavaScript and the DOM to create dynamic web apps",
        "Understand Parent, Sibling and Children DOM relationships",
        "Code dynamic web pages with the DOM with JavaScript",
        "Learn how to clone elements in the DOM",
        "Understand the difference between the DOM and JavaScript",
        "Understand the differences between HTMLCollections and NodeLists",
        "Traverse up and down the DOM tree",
        "Learn how your browser creates a DOM tree",
        "Learn how your website can come alive with actions, like zitsy changes on clicks, colour wheels, dropdowns, response on form submissions and much more",
        "Have fun mastering front-end website development",
        "Build awesome dynamic front-end applications",
        "Practical - build awesome dynamic front-end applications with me",
        "Become a pro at creating elements in the DOM",
        "The different environments of JavaScript",
        "***Download lectures (for offline viewing)",
        "The different types of Nodes",
        "How you can find the DOM",
        "How you can access elements in the DOM",
        "How to remove items from the DOM",
        "From beginner to expert (advanced +)",
        "You will emerge an expert",
        "Gives you depth of knowledge to boost your ability and confidence",
        "I am here to support you, step-by-step",
        "The different environments of JavaScript",
        "Parent, Sibling and Children DOM relationships"
      ],
      "course_content": {},
      "requirements": [
        "Desire to become a full stack web developer",
        "A desire to take your coding skills to the next level",
        "Desire to create dynamic, interesting and acclaimed web apps",
        "Desire to have unique features and actions to engage visitors to your website",
        "Basic HTML, CSS and JavaScript will be helpful, but not absolutely necessary",
        "Desire to KNOW the full process of how your webpage is represented by your browser behind the scenes",
        "Desire to KNOW how user interaction (like clicking a button, or submitting a form) can cause jazzy things to happen on your page (like displaying a message, or changing a button color, etc.)",
        "A computer is required as you need to code alongside me to learn effectively"
      ],
      "description": "*** THIS COURSE IS A GAME-CHANGER ***\nElevate Your Skills: Master the Document Object Model (DOM) and take your coding to the next level.\nCreate Dynamic Web Apps: Learn how to use JavaScript and the DOM to build engaging, interactive websites.\nHands-On Learning: Dive into practical examples and performance analysis techniques.\nUnderstand Relationships: Grasp Parent, Sibling, and Child DOM relationships for better manipulation of elements.\nUnlock Your Creativity: Transform your ideas into reality by mastering front-end development.\nLet me share my new front-end web development secrets with you\nUnderstanding the DOM will equip you to become an awesome front-end programmer. Learn how to implement your creative, different and dynamic ideas into your website. Master front-end development and you’re half way to becoming a full stack web developer. Take control through understanding. Delivering an interactive web experience is challenging.\nHow exactly does the browser model your HTML, CSS, and JavaScript? Where can we access this model? What can we do with this model? How can we change this model? By understanding these questions, you will be able to access the DOM and better yet, manipulate it! In other words, you will be able to create dynamic apps that improve user engagement and experience.\n\n\nWhat This Course Covers\nThis course is designed to provide you with a solid foundation in front-end web development. By the end of this course, you'll have a clear understanding of what the Document Object Model (DOM) is, how to access it, and how to manipulate it effectively. You’ll learn about nodes, HTMLCollections versus NodeLists, and much more!\nIn this course you’ll learn about front-end Web Development, by mastering the Document Object Model.\n\n\nWhy do you need to know about the DOM?\nSo, you know some HTML, you’ve created your first tags, learned about CSS, made awesome forms, star-gazing buttons, responsive pages and have started to create dynamic and interesting pages.\nBut now you want to do more: “How can I add animation (and life) to my page? I wish I could give an error message to a user who incorrectly submits a form!”\nAnd this is where the DOM comes into the picture. and where this course(s) provide you with an opportunity to grow in your skills.\nTo cut a long story short, we use the DOM to allow users to interact with our app. It doesn’t have to be annoying interaction either – simple things like giving the user the ability to ADD/EDIT/DELETE/UPDATE contents on your page, for example, requires interaction with the DOM.\nThe first step in understanding the DOM is understanding what it is. How does it differ from your HTML markup? How does it differ from JavaScript? From there, you’ll start exploring and experimenting with tools to access the DOM. You’ll learn simple, yet very powerful strategies to access and traverse the DOM. We don’t stop here, but then get into more advanced things like manipulating the DOM (via the create and remove methods given to us by the DOM API).\nKnowledge of the DOM is incredibly useful for understanding how your webpage can be improved.\nBy the end of this course, you'll be able to “speak” DOM by gaining an understanding of where you can find it, how you can access it, and more importantly, how you can manipulate it. We dig deeper in every lecture, learning about things like Nodes, the difference between HTTPCollections vs NodeLists, and a whole bunch more! This course has many bonus lectures which extend your knowledge base and test your skills.\nThrough practical examples, this course helps you understand the DOM piece by piece. And we use the latest and best features of JavaScript and browsers (like the new remove API) along the way so you can stay ahead of the pack.\n\n\n*** A must-do Web Development course on Udemy  ***\nSuccessful programmers know more than rote learning a few lines of code. They also know the fundamentals of how your browser represents your HTML code and works behind the scenes. If you’re wanting to become a full stack developer, you need to know how to deal with the DOM. You need to know how to access it, how to manipulate it, and how to dynamically interact with it.\nI want you to become a successful front-end programming Grandmaster.\nI want you to be able to apply what your learn in this course to your webpage.\nThis course is perfect for you.\n\n\nDescription\nHi there, my name is Clyde and together we’re going to learn how successful web developers can create whizbang websites that are dynamic and engaging!\nThe root to understanding how to be a professional front-end web developer is understanding the Document Object Model and applying it to practical situations. We're going to practice and learn and emerge confident to tackle any challenges modern programs and websites throw at us.\nAfter completing a few university degrees, and post graduate studies, I developed a fascination for web design and software languages. For several years I have immersed myself in this. I spent a fair bit on top courses and went on to apply the knowledge practically. I recognized gaps in some of the courses I’ve taken and hence my course teaches what I wish I was taught. My intention is to share the knowledge with you in an easy to follow manner, so that we can benefit together. You benefit form learning, and I from sharing in your success.\nThis course is for beginners and for intermediates.\n\n\nA unique view\nUnderstanding the DOM is a vast topic. To get you up to speed, I’ve spent months thinking about where to focus content and how to deliver it to you in the best possible way.\nYou will learn \"why\" things work and not just \"how\". Understanding the fundamentals of the DOM is important as it will give you infinite possibilities. Armed with this knowledge, you’ll be able to create applications that update the data of the page without needing a refresh. You will be able to create apps that are customizable by the user. You can even allow the user to drag, move, and delete elements. Can you begin to see how important the DOM is?\n\n\nHow is this course different?\nThere are lots of great courses that focus on web development. Pity they never get into the detail about how the Document Object Model works behind the scenes – a skill that every full-stack developer needs to master.\nIn this course, I focus on true web development in the front end. This includes understanding what nodes are, looking at the Document node (this is different from the document object by the way), understanding the DOM tree structure, what the different types of nodes there are, and how you can use the DOM to access elements on your page and manipulate them.\n\n\nPractice makes perfect\nTheory is theory … but there’s nothing like getting behind your computer and typing in code. That’s why we will be coding, laughing and pulling out our hair together as we code real life websites and exercises during this course.\nI love practical examples, which is why we build simple pages and analyze the DOM together.\n\n\nIs This Course Right for You?\nAbsolutely!\nThis course is suitable for all levels.\nIf you fall into any of these categories, this course is perfect for you:\nAspiring Programmers: Start your journey into programming with essential HTTP and JavaScript fundamentals.\nDynamic Website Builders: Learn how successful developers create engaging websites that stand out.\nFront-End Enthusiasts: Gain a solid understanding of front-end web development.\nFuture Full-Stack Developers: Understand how JavaScript operates on the front end before diving into backend frameworks like Node.js.\nCurious Learners: Explore how the Document Object Model works behind the scenes.\n\n\nWHY START NOW?\nRight this second, your competitors are learning how to become better web developers.\nWeb development is a blazing hot topic at the moment. But you have a distinct advantage. This course offers memorable learning topics, actionable tactics and real-world examples.\nLets get started!\n\n\nWhat do you get?\nLifetime access to all tutorial videos. No fees or monthly subscriptions.\nQ&A support.\nQuizzes and challenges to help you learn.\nI’ve allowed you to download all of my lectures for offline viewing.\nLet's get excited about becoming a professional web developer, and to be able to confidently apply it to your own websites.\nLet's get crackin'",
      "target_audience": [
        "Anyone who has wants to upskill their web development skills",
        "Anyone who has knows JavaScript but wants to master how to use it practically",
        "YES: This course is for beginners. Aimed at people new to the world of web development. No previous JavaScript experience is necessary",
        "NO: This course is NOT only for beginners. It is a complete beginner to advanced master course that is suitable for intermediates who know the basics and have an idea the DOM, but want to dig deeper to know its inner workings. Experienced students sometimes prefer to skip a section that they are very familiar with",
        "YES: This course is for someone wanting to be a professional, to be expert and confident in the entire front-end development process",
        "Those who want to learn modern coding without third party libraries and frameworks",
        "Those interested in building their own frameworks, or being better able to learn from the source code of other well-known frameworks and libraries",
        "Those wanting to start using frameworks (e.g. like Angular or Node) that are heavily reliant on JavaScript and knowing the process flow of front-end web development",
        "Those who have some knowledge of web development, but little knowledge about how it works behind the scenes, and how to practically implement best practices in their websites"
      ]
    },
    {
      "title": "Crash Course: Build a Full-Stack Web App in a Weekend!",
      "url": "https://www.udemy.com/course/full-stack-crash-course/",
      "bio": "A quick, fun, and hands-on introduction to web development. Build a complete app with HTML, CSS, JavaScript, and React!",
      "objectives": [
        "You WILL build a fun web application in just a few days! No experience needed",
        "You will NOT want to pause the course once you start ;)",
        "You WILL learn the very fundamentals of modern web development (fast!)",
        "You will NOT master web technologies (that takes years...)",
        "You WILL get the experience of building a complete web app",
        "You will NOT be able to build complex applications on your own, but small ones",
        "You WILL discover if web development is a good career path for you"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed!",
        "Any computer works — Windows, macOS or Linux",
        "You don’t need to buy any software — we will use the best free code editor in the world"
      ],
      "description": "\"I have already learned more in this class than in a $12,000 coding BootCamp (...). Before taking one of the Bootcamp on Udemy, you should take this class first\" – Robert\n\n\nDo you want to learn the fundamentals of modern web development fast?\nDo you want to find out if building websites and apps is the right career path for you?\nOr maybe you just want to know what your web developer friends do all day?\nIn any of these cases...\nWelcome to my \"Web Development Crash Course\"! Together, we will build a fun, small, but full-stack web application in just a few days.\n\n\nBut why this course? And why is it so short?\nWell, there are so many 60 and 80-hour-long \"complete\" web development courses out there, which are great if you want to invest 3 months of your life into finding out if web dev is even right for you or not...\nI wanted to offer a different approach. A short and fast crash course, where you can dip your toes into the world of HTML, CSS, JavaScript, and even React (the most used JavaScript library in the world).\nYou can finish it in a weekend (if you have nothing else planned), or you can take a week. But the point is that you can learn the very fundamentals of web development quite fast, and in an engaging, 99% project-based way.\nAnd even though this is called a \"crash course\", this course teaches you more in 12 hours than I learned in my first 2 years as a web developer!\nThat's how condensed, and how valuable, the material is. And the course still maintains the high-quality standard of all my other courses, so that you actually understand what you are learning!\n\n\nBut you might be thinking: \"Is a crash course really right for me?\"\nWell, it all depends on your goals.\nSure, you will not become a web developer after this short course, and you will not be able to build big web projects (but sometimes that's true even for those huge 80-hour courses).\nBut, at the end of this course, you will have learned and understood the fundamentals of the most important web technologies (HTML, CSS, JavaScript, React). And even more importantly, you will have discovered if you actually like web development and want to pursue it as a (lucrative) career!\nPlus, you will walk away from this course with a super cool web application that you can show to all your friends (please tell them I sent you ;)\nAll this will enable you to go deeper into the topics that you actually liked, and keep learning and progressing on your own if you like (or of course, you can purchase more specialized courses).\n\n\nSo, have you never written a single line of code in your life?\nYou have come to the right place! We will start slowly, step-by-step, and then speed up the pace as we progress through the course.\nSo here's what we're gonna do in this course:\nWe will set up your code editor and coding environment together (all for free!)\nI will guide you through the basics of the web and web development\nThen we slowly start our project, by writing the HTML code (for the page content)\nWe then style the page and create a layout using CSS\nNext we create an online database and API for our application data, using a free service called Supabase\nTo get the data into the application and make it interactive, we learn the fundamentals of JavaScript\nWriting apps with only JavaScript can be difficult, so we build the app using the React library\nFinally, we deploy the final project to a free service called Netlify\nDONE! You can now share the URL of your project with everyone :)\n\n\nAlready know HTML, CSS, or JavaScript?\nNo problem! You can still get something from the course. For example, you can watch only the section on \"React\" and use the downloadable code from the previous section as your starting point.\n\n\nIf all this sounds great, then join me on this adventure right now! See you on the inside :)",
      "target_audience": [
        "Take this course if you need a quick introduction to modern web development",
        "Take this course if you want to find out if web development is a good career choice",
        "Take this course if you want to impress your friends by building a super cool web app in a few days!"
      ]
    },
    {
      "title": "Complete Angular 11 - Ultimate Guide - with Real World App",
      "url": "https://www.udemy.com/course/complete-angular-indepth-easy/",
      "bio": "Angular 11, Angular 12 Material, REST API, JWT Authentication, Angular Project, Asp.Net Core, Dashboard, Durgasoft",
      "objectives": [
        "Confidently speak about most of the essential concepts of Angular",
        "Crack angular job interviews easier",
        "Solve most common bugs and issues in Angular applications",
        "Secure Angular applications using the most-recommended - JWT Authentication",
        "Creating unit test cases for the angular apps",
        "Create Angular Apps From Scratch and scale it up to any level",
        "Create Angular Folder Structure with industry best practices like a Pro",
        "Add Angular to your prior knowledge of any Server technology (Asp .Net Core, NodeJS, Python, Java etc.), to become successful Full-stack developer",
        "Create Professional Dashboards with ease",
        "Angular Material (UI Components)",
        "Angular Flex Layout",
        "Highcharts basis"
      ],
      "course_content": {},
      "requirements": [
        "Intermediate level knowledge of HTML, CSS, JavaScript is needed.",
        "Basics of OOP Features, Classes, Objects and Interfaces",
        "Knowledge of any one server side technology (Asp .NET Core MVC, NodeJS, Python or Java etc.) is recommended to understand Server side programming part of AJAX & Authentication Lectures.",
        "Intermediate level of Bootstrap is required to understand UI part of the course",
        "Basic Knowledge of Postman is recommended [Not must]"
      ],
      "description": "Complete Angular 11 - Ultimate Guide - with Real World App\nTHE BEST SELLING ANGULAR COURSE ON UDEMY - OVER 1900 REVIEWS - 5 STARS!\n\n\nLEARN these HOT TOPICS in Angular 11:\nData Bindings\nBootstrap Integration with Angular\nngIf, ngFor, ngSwitch, Style Management\nBuilt-in Pipes & Custom Pipes\nModules\nServices and Dependency Injection\nRxJS Basics, Observables\nREST-API calls using AJAX\nObservable Map\nCRUD operations with real databases\nAuthentication with Asp.Net Core and Angular\nJWT Authentication for REST API end points\nHttp Interceptors and Http Headers\nUser Registration and Login in Secured way\nRole Based Authentication\nSecure Routes using Guards\nHandle Forms in Efficient way with Reactive Forms and Form Builder\nComponent Communication with siblings, children and parent level, and with Custom events, RxJS Subject\nViewChild, ViewChildren, ContentChild, ContentChildren, ElementRef\nBuild custom pipes and directives\nPass route parameters in handle them in different ways\nCreate and secure child routes and animate them\nUnderstand router events\nUnderstand feature modules\nCreate Responsive Dashboard with Bindings.\nCreate unit test cases for components and services\nUnderstand Angular Zones\nUnderstand handling XSS and XSRF.\nUnderstand basics of TypeScript classes and interfaces.\nAngular Material\nAngular Flex Layout\nBasics of Highcharts\nREAL-TIME PROJECT:\nA mini project, \"Angular Task Manager\", where the admin can create projects and issue tasks to employees and the employees can update status of tasks.\n\n\n\n\nPOTENTIAL BENEFITS OF THIS COURSE\nBy the end of this course, you will create all of the source code for a complete Angular real-time project, with all features like page navigation with routing, CRUD operations with real databases, User registration and login with JWT authentication, handle other aspects such as directives, pipes, organize the big picture of the application using angular modules.\nYou will type in every line of code with me in the videos ... all from scratch.\nI explain every line of angular code that we create. So this isn't a copy/paste exercise, you will have a full understanding of the code.\nI am a RESPONSIVE INSTRUCTOR.. post your questions and I will RESPOND in 24 hours, ASAP.\nAll source code is available for download\nEnglish, Hindi captions are available.\n\n\n\n\nSample of the reviews:\n★★★★★\nHarsha, Really excellent course, becuase of you i learned Angular, I can say proudly, project based learning ur courses standout best for me. as Im a .net developer, this course really helped me lot. now a days every org is looking for full stack only, this course is really helpful to learners. Please keep uploading these kind of real time project based learning courses frequently. pls do on micro-services and latest .net core frameworks as well, so this will be huge help to people like me. - Siva Sai Sambela\n★★★★★\nThis is the best available course on Angular and he has beaten everyone on Udemy - Alok Verma\n★★★★★\nIt's wonderful experience !! I am very much thanks full to Harsha that he made this tutorial interesting, easy. He teaches angular concept in very easy manner. I am expecting more courses on different technologies from Harsha. - Mithun Patil\n★★★★★\nexplained very neat to understand every topic. - Praveen Kumar T\n★★★★★\nExcellent course content and delivery. Instructor speaks clearly and ensures that course remains relevant as Angular gets updated by their creators. - Mohan Singam\n★★★★★\nyeah it is really amazing .I am loving the course. Thank you Harsha - Kiran Kumar\n★★★★★\ni have completed around 70% of this course and it is absolutely brilliant. Harsha have complete knowledge about his subject and give in depth knowledge about angular. We don't only learn what to use we will learn why to use. Its an in depth explanation about angular. From zero to Hero. - Atal Srivastava\n★★★★★\nIt's 5 Star Rating, Well explained help me in order to get a new job. Thanks :) - Kapil Gupta\n★★★★★\nExcellent awesome.. You Harsh covered all the basic and advanced Angular-10 topics in such a simple way that i am really putting my hands together. - Hitesh kumar Nath\n★★★★★\nHe makes sure the even the backbench guys like us can understand the subject. - Jagdish Dundi\n★★★★★\nI want to appreciate Harsha for covering different aspects in angular in deep. I can definitely say that I learnt a lot. - Dileep\n★★★★★\nThis instructor has such a talent explaining all the concepts and we acquire the knowledge of all about complete project structure which we will need in real time like Authentication and security really superb.. - Santosh\n\n\n\n\nNo Risk – Money-Back Guarantee\nFinally, there is no risk. You can preview first few lectures of the course for free. Once you buy this course, for some reason if you are not happy with the course, Udemy offers a 30-day money back guarantee.\nSo you have nothing to lose, sign up for this course and learn how to build Angular Projects from scratch!\n\n\nKey Points about this Course:\nHTTP requests & Authentication videos will be shown with Asp .Net Core 2; but \"node.js\" source code is provided as alternative, for non-Asp. Net Core developers. So if you are a UI developer / Java developer / NodeJs developer also, no problem - you can use the node.js code for server side app.\nAll the concepts are progressively integrated into a sample mini project called \"Task Manager\", which includes all essential features that a real-time project should have.\nAll the concepts explained in both theoretically and practically.\nWe use Bootstrap from the beginning of the course.\nWe use Windows O/S, Visual Studio Code, TypeScript, Angular 11.\n\n\nThis course is offered by Web Academy by Harsha Vardhan. Any watermark stating \"Harsha Web University\" is from our old branding and does not represent an academic institution. This course is for educational purposes only and is not affiliated with any university or degree-granting institution.",
      "target_audience": [
        "Fresher / Experienced, who wants to understand Angular 11 with complete theoretical and real-time hands-on experience.",
        "Developers, who already have knowledge on any Server technology (Asp .Net Core Mvc, NodeJS, Python, Java etc.), and wants to become Full-Stack Developer"
      ]
    },
    {
      "title": "Working with React and Go (Golang)",
      "url": "https://www.udemy.com/course/working-with-react-and-go-golang/",
      "bio": "Learn how to build a single page application in React, with data supplied by a Go back end REST API",
      "objectives": [
        "Build amazing single page applications with React JS",
        "Build reusable, composable components in React",
        "Build a REST API in Go that handles JSON requests, and serves JSON responses",
        "Build an API in Go that handles GraphQL requests"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "A bit about me",
          "Asking for help",
          "Mistakes. We all make them."
        ],
        "Setting up our development environment": [
          "Installing Node",
          "Installing Go",
          "Installing Visual Studio Code",
          "Installing Docker"
        ],
        "Getting Started with React": [
          "How React works",
          "Hello world with React using Classes",
          "Hello world with React using functional components",
          "Styling Components",
          "Using Bootstrap CSS",
          "Using props: passing data to components",
          "React and State I",
          "React and State II",
          "React and State III",
          "React and State IV",
          "React and State V",
          "Intercepting form submissions with onSubmit()",
          "handleSubmit() continued",
          "Ref: using references in React",
          "References with components: forwardRef()",
          "Class Lifecycle"
        ],
        "Getting started with our main project: Go Watch a Movie": [
          "Getting started with our project",
          "Setting up the application layout",
          "Getting started with React Router v6",
          "Configuring React Router",
          "Using React Router's Link",
          "Working on the Movies component",
          "Routing from the Movies component to individual movies",
          "Displaying an individual movie"
        ],
        "Setting up User Login": [
          "Working on the Login button",
          "Creating the login form",
          "Giving the Login component access to setJWT",
          "Adding error messages and redirects to the Login component",
          "Logging out"
        ],
        "Getting started with our Back End API": [
          "Starting the back end API",
          "Adding handlers and routes to our API",
          "Installing a routing package",
          "Adding a route to our handlers",
          "Returning JSON from our API",
          "Returning a list of movies as JSON",
          "Connecting the front end to the back end API",
          "Enabling CORS middleware",
          "Enabling React's proxy to the back end API"
        ],
        "Connecting to Postgres": [
          "Setting up our database using Docker",
          "Getting started connecting our API to Postgres",
          "Installing a database driver and connecting to Postgres",
          "Setting up a database repository I",
          "Setting up a database repository II",
          "Improving the allMovies handler to use our database"
        ],
        "Working with JSON": [
          "Setting up utils.go and a writeJSON helper function",
          "Adding a readJSON helper function",
          "Adding an errorJSON helper function",
          "Using our errorJSON helper function"
        ],
        "Authentication with JWT": [
          "Installing a JWT package",
          "Generating tokens",
          "Setting default values for JWT tokens",
          "Creating a handler to generate a JWT",
          "Trying out our handler",
          "Generate refresh token cookie",
          "Reading a JSON payload in the authenticate handler",
          "Looking up a user by email",
          "Validating a password",
          "Updating the Login component on the front end",
          "Refresh tokens I",
          "Refresh tokens II",
          "Refresh tokens III",
          "Refresh tokens IV",
          "Refresh tokens V",
          "Protecting routes using JWT tokens",
          "Authentication middleware",
          "Adding our middleware to routes",
          "Trying our our protected routes"
        ],
        "Create/Read/Update/Delete for our Movie Catalogue": [
          "Starting on the Add/Edit movie component",
          "Creating a select component",
          "Creating a checkbox component",
          "Using our input controls to create the edit movie form",
          "Continuing to work on the EditMovie component",
          "Getting a movie and Genres from the database",
          "Creating handlers to get movies for public and admin",
          "Displaying a movie to the public on the front end",
          "Getting started with showing genres on the Add/Edit movie component",
          "Adding checkboxes for genres to the front end form",
          "Enabling checkbox clicks on the EditMovie component",
          "Validation I",
          "Validation II",
          "Creating a database method to insert a movie",
          "Creating a handler to insert a movie",
          "Getting a movie image from a remote API I",
          "Getting a movie image from a remote API II",
          "Handling genres when inserting a movie",
          "Inserting a movie from the front end",
          "Trying out adding a movie",
          "Editing an existing movie I",
          "Editing an existing movie II",
          "Editing an existing movie III",
          "Writing the handler to update a movie",
          "Trying out editing a movie from the front end",
          "Getting started with deleting a movie",
          "Deleting a movie II",
          "Deleting a movie III",
          "Deleting a movie IV"
        ]
      },
      "requirements": [
        "A basic knowledge of the Go programming language",
        "A basic knowledge of Javascript",
        "A basic knowledge of HTML"
      ],
      "description": "React and Go are something of a match made in heaven. React is the world's most popular JavaScript library for building Single Page Applications, and Go is uniquely well-suited for building REST back ends. That is what this course is all about.\nThis course has been completely re-done, for React version 18 and React Router version 6. The old version of this course is still available at the end of the new one, with each section marked as \"Legacy.\" I'll remove it in a month or so, just to give people who have already started a chance to finish that version, if they so desire.\nLearn how to develop and deploy a fast, secure web application built using the most popular and in-demand JavaScript front end (React), with one of the most popular and powerful programming languages for the back end (Go).\nReact is an open-source, front end JavaScript library for building user interfaces or UI components. React is maintained by Facebook and a community of developers and companies. React can be used as a base in the development of single-page or mobile applications. React is the most popular front-end JavaScript library in the field of web development, and is used by many well-known organizations, including Netflix, Instagram, and the New York Times. With React, we build fast, interactive user interfaces.\nGo is a modern, type safe, compiled, and extremely fast programming language. It it is ideally suited for building safe, scalable, incredibly fast REST APIs and web applications, and is also used by large corporations around the wold, including Netflix, Instagram, American Express, and the New York Times.\nIf you were paying attention, you might have noticed some overlap there -- the same large companies using React are also using Go. There is a reason for that, and we will be exploring that reason in this course.\nIn this course we will go over the core fundamentals of React, including the React life cycle, components, functional components, props, state, and more. We will also cover calling a remote API (both one we build, and a 3rd party API), and much more.\nIn the first part of the course, we'll build a simple application using both React class component and Functional Components with hooks. Although hooks and functions appear to the the future for React, there are literally millions of lines of code out there built using classes, so it's important to know how to work with React using both classes and functions & hooks.\nIn the second project for this course, we'll build a Single Page Web Application (SPA) with a React front end and a Go back end API, where we will  cover receiving requests on the back end, both as JSON and as GraphQL, and returning that response as JSON.\nIn order to secure access to authenticated users for certain parts  of our site, we will also explore how to generate and use JSON Web Tokens (JWT), including refresh tokens.\nThis course is not intended for absolute beginners. I expect that you have some experience in JavaScript and Go, and a good knowledge of HTML.\nPlease note that this course requires you to download Docker Desktop from Docker. If you are a Udemy Business user, please check with your employer before downloading software.",
      "target_audience": [
        "Developers who are somewhat familiar with Go & JavaScript"
      ]
    },
    {
      "title": "Complete NodeJS course with express, socket io and MongoDB",
      "url": "https://www.udemy.com/course/create-nodejs-app-with-express-socket-io-and-mongodb/",
      "bio": "Master NodeJS to build real world application, socket io and MongoDB, authentication with JWT",
      "objectives": [
        "Build the backend with NodeJS for your website and mobile app",
        "Use Modern JavaScript es6",
        "Implement CRUD operations",
        "Implement Authentication with JWT",
        "NodeJS Basic and Basic Core Modules",
        "Parsing requests and sending responses",
        "Using express js",
        "Building REST APIs",
        "Building a Realtime Node js App with Socket io",
        "Deploy Node JS Application"
      ],
      "course_content": {
        "Introduction": [
          "Install nodejs and vscode",
          "first node trial",
          "global object",
          "modules",
          "file system module",
          "buffer and stream"
        ],
        "Understand the basic": [
          "Create a server",
          "How to use the req object in Node.js",
          "How to use res object in Node.js",
          "How to return html in Node.js",
          "Node.js routing without using Express.js",
          "Status Code",
          "Status code",
          "Redirect",
          "How to download and install a npm package globally in Node.js",
          "What is package.json and how to install a npm package locally in Node.js?"
        ],
        "Express basic": [
          "What is Express?",
          "Express Basic"
        ],
        "Quick Overview - Build a Todo Application": [
          "Create an express app",
          "Routing (html pages)",
          "Adding materializecss style",
          "Ejs template engine",
          "Generate dynamic content with ejs",
          "Create partial template with ejs",
          "Setup mongodb",
          "Mongoose",
          "Create model and schema",
          "Getting and saving data",
          "Rendering data from mongoDB",
          "Post request with mongoose",
          "Add the materializecss js to the add item page",
          "Route parameter",
          "Create Item detail page",
          "Create delete request",
          "Fix the redirect problem",
          "Create the edit form modal",
          "Create put request",
          "Add the edit function"
        ],
        "[Project] A simple MERN todo app": [
          "Start the project and install necessary packages for client and server",
          "Create the Models, make create todo and read todo API",
          "Prepare the form for this MERN todos project",
          "Create \"createTodo\" and \"ReadTodos\" functions",
          "Create a new todo by using the form",
          "Apply the preloader and render the data to the list",
          "Update functionality (Adding functions to the form)",
          "Prepare the update functionality at backend",
          "Update functionality (client side)",
          "Delete functionality (server side)",
          "Delete functionality (client side)",
          "Deploy server to heroku",
          "Deploy client to Netlify"
        ],
        "[Project] Create a Chatroom with React, Socket.io, Express and MongoDB": [
          "Create project",
          "Create components and routes",
          "Create userContext",
          "Add a navbar",
          "Add a create room form",
          "Add the room list",
          "Prepare for the server side",
          "Add the submit function to the client side",
          "Receive the room name at the server side",
          "Pass the room name and id from home page to chat page",
          "Join the chatroom",
          "Create other helper functions",
          "Add send message function",
          "Receive message at the server side",
          "Receive messages by other clients",
          "Setup the mongoDB Atlas",
          "Connect to mongoDB with mongoose",
          "Create room model and save to mongoDB",
          "Listen create room event at client side",
          "Load the rooms data from MongoDB",
          "Save the message to mongoDB",
          "Pass the data to the message component",
          "Create message component",
          "Add css to message component",
          "Create Input Component",
          "Add css to messages component",
          "Add routes and controllers to server",
          "Apply the express middleware",
          "Sign up and create user",
          "Custom errors",
          "Get the values from the error object",
          "Deal with the duplicate account error",
          "Mongoose hook",
          "Hash the password",
          "Create route to Login and Signup page",
          "Detail the signup page",
          "Add the function and error messages to the signup page",
          "Set and get cookies with options",
          "Signup page: Call signup api from client",
          "Create JSON Web Token",
          "Display error message",
          "Redirect to homepage after signup",
          "Create the login page and login function",
          "Verify the user with the JWT Token",
          "Create the logout api",
          "Conditonal rendering",
          "Finally remove unnecessary functions"
        ]
      },
      "requirements": [
        "Basic JavaScript knowledge",
        "Basic HTML and CSS knowledge",
        "No Node JS knowledge is required"
      ],
      "description": "What is NodeJS ?\nNode.js is an open-source, cross-stage, back-end, JavaScript runtime climate that executes JavaScript code outside an internet browser. Node.js lets engineers use JavaScript to compose order line instruments and for worker side scripting—running contents worker side to create dynamic website page content before the page is shipped off the client's internet browser. Subsequently, Node.js speaks to a \"JavaScript all over the place\" paradigm, bringing together web-application advancement around a solitary programming language, as opposed to various dialects for worker and customer side contents\nBut.. why learn NodeJS?\nNode.js allows you to build complex and powerful applications without writing complex code\nNode.js is well suited to building microservices\nNode.js can be used for more than just web development\nNode.js is a robust project that won’t be going anywhere\n\n\nWhat will you learn from this course?\nIn this course, you will learn how to build a todo app with NodeJS, ExpressJS and also the template engine EJS.\nYou will also learn how to use nodeJS to build RESTful API and create a real time chat app with Socket io",
      "target_audience": [
        "Any developers who want to developer backend with JavaScript",
        "Developers already develope frontend with JavaScript",
        "Want to use one programming language to develope both frontend and backend"
      ]
    },
    {
      "title": "Build Web Apps with Vue JS 3 & Firebase",
      "url": "https://www.udemy.com/course/build-web-apps-with-vuejs-firebase/",
      "bio": "Learn Vue JS 3 & Firebase by creating & deploying dynamic web apps (including Authentication).",
      "objectives": [
        "Learn how to create Vue 3 applications from the ground-up",
        "Get in-depth knowledge of Vue features like the Vue Router, Vue CLI, Options API, Composition API, Teleport etc",
        "Get hands-on & in-depth experience using the latest Vue 3 features (such as the Composition API)",
        "Learn how to use Firebase as a back-end to your Vue applications (as a database, authentication service, hosting etc)",
        "Build & deploy 4 real-world web apps with Vue & Firebase",
        "Learn how to implement an authentication system into your Vue js apps using Firebase Auth",
        "Become a Vue 3 ninja!"
      ],
      "course_content": {
        "Introduction & Setup": [
          "What is Vue?",
          "New Features in Vue 3",
          "What You Should Already Know",
          "Environment Setup",
          "Course Files"
        ],
        "Vue Basics": [
          "How to use Vue (using the CDN)",
          "Creating a Vue App",
          "Templates & Data",
          "Methods & Click Events",
          "Conditional Rendering",
          "Other Mouse Events",
          "Outputting Lists (v-for)",
          "Attribute Binding",
          "Dynamic Classes",
          "CHALLENGE - Add to Favs",
          "SOLUTION - Add to Favs",
          "Computed Properties"
        ],
        "The Vue CLI (for Bigger Projects)": [
          "Why Use the Vue CLI?",
          "How to Use the Vue CLI",
          "New Project Walkthrough",
          "Vue Files & Templates",
          "Template Refs",
          "Multiple Components",
          "Component Styles & Global Styles",
          "Passing Data with Props",
          "Emitting Custom Events",
          "Click Event Modifiers",
          "Slots",
          "CHALLENGE - Reusing Components",
          "Using Teleport"
        ],
        "PROJECT BUILD - Reaction Timer": [
          "Project 1 Preview & Setup",
          "Starting a New Game",
          "Component Lifecycle Hooks",
          "Creating the Reaction Timer",
          "Emitting Custom Events with Data",
          "CHALLENGE - Showing a Results Component",
          "Finishing Touches"
        ],
        "Forms & Data Binding": [
          "Forms Intro & Setup",
          "Two-way Data Binding",
          "Select Fields",
          "Checkboxes",
          "Keyboard Events & Modifiers",
          "CHALLENGE - Deleting Skills",
          "Submitting the Form"
        ],
        "Vue Router Basics": [
          "Why Use the Vue Router?",
          "Router Setup for New Projects",
          "Router Links",
          "Folder Structure",
          "Route Parameters",
          "Dynamic Links",
          "404 Pages & Redirects",
          "Programmatic Navigation",
          "Lazy Loading Components"
        ],
        "Fetching Data": [
          "Using JSON Server",
          "Where to Fetch Data",
          "Conditionally Showing Data"
        ],
        "PROJECT BUILD - Simple Project Planner": [
          "Project 2 Preview & Setup",
          "Home View & Data",
          "Single Project Template",
          "Using Material Icons",
          "Deleting Projects",
          "Completing Projects",
          "New Project Form",
          "Adding New Projects",
          "Navbar Component",
          "Edit Project Route",
          "CHALLENGE - Updating Projects",
          "Creating a Filter Nav",
          "CHALLENGE - Showing Filtered Projects"
        ],
        "The Composition API": [
          "Drawbacks of the Options API",
          "Composition API Basics",
          "Template Refs in the Setup Function",
          "Using Refs for Reactivity",
          "Refs vs Reactive",
          "Computed Values in the Setup Function",
          "Using watch and watchEffect",
          "Using Props in the Setup Function",
          "Lifecycle Hooks"
        ],
        "Async Code (& the Composition API)": [
          "Fetching Data in the Setup Function",
          "Reusable Composition Functions (Composables)",
          "Creating Another Composable",
          "Creating a Loading Spinner",
          "Making a Web Form",
          "CHALLENGE - Making a POST Request",
          "Future Async Lesson & Extra Styling"
        ]
      },
      "requirements": [
        "A basic understanding of HTML, CSS & JavaScript",
        "ES6 Knowledge is advantageous",
        "An appreciation of async JavaScript is a plus but not essential"
      ],
      "description": "If you're looking to get started building full-stack applications with Vue 3 (or Vue 2) and Firebase, then look no further. In this course I'll take you from novice to ninja in Vue JS 3, starting out with the very basics and then moving on towards creating fully-fledged Vue applications.\nWe'll spend a whole chapter learning about the Vue Router - and how to create SPA's (single page applications) using it - as well as exploring how to use the Vue CLI to get up and running quickly when creating slightly larger Vue applications.\nWe'll also dive deep into the newest features Vue 3 has to offer, including a lot about the Composition API & Composable Functions.\nI'll also teach you how to use Firebase - an online & free service provided by Google which will act as a feature-rich back-end to our Vue applications. We'll learn how to use Firebase to store and retrieve real-time data to and from a NoSQL database called Firestore, as well as authenticate our app's users with the Firebase Auth service, We'll also take a peak at Firebase Storage (which will enable us to allow users to upload images on our Vue sites), as well as deploying all of our applications to Firebase hosting.\nAlong the way we'll create several full projects, including a reaction timer, project tracker, a blog, a real-time chatroom & a music playlist website.\nThere's a crazy amount to cover, but by the end of this course you'll be in a position to create full-stack web applications (complete with user authentication) using Vue 3 and Firebase!\nI'm also know as The Net Ninja on YouTube\n...With around 600,000 subscribers and nearly 2000 free web development tutorials. So feel free to check out my teaching style and reviews before you buy my course :).",
      "target_audience": [
        "Anyone who wants to learn how to create websites with Vue 3 & Firebase",
        "Anyone who wants to learn Vue and Firebase",
        "Anyone who wants to learn about Authentication in Vue apps",
        "Anyone who wants to learn Vue from the ground up",
        "Anyone who wants to learn how to use Firebase in their applications"
      ]
    },
    {
      "title": "DRUPAL TUTORIAL: Drupal 8 Beginner to Advanced in 8 PROJECTS",
      "url": "https://www.udemy.com/course/drupal-tutorial/",
      "bio": "Learn LATEST Drupal 8 Tutorial HANDS-ON with COMPLETE real life examples. BONUS assignments, tips, tricks, and pitfalls!",
      "objectives": [
        "Build powerful web sites and applications using Drupal - FROM SCRATCH & WITHOUT PROGRAMMING",
        "Build EIGHT (8!!) fully functional DRUPAL PROJECTS from Scratch - from Beginner level to ADVANCED LEVEL",
        "Kickstart your Entrepreneurial goals by building SCALABLE, SECURE web applications at LIGHTNING SPEED with Drupal",
        "Build your consulting career with Drupal - the most powerful Open Source CMS in the world",
        "Learn Transferrable Technical Skills - User Management, Content Management, Theming, Taxonomy, Content Types and hundreds of other core concepts",
        "You will learn Rapid Application Development with Drupal - in this course.",
        "Learn to leverage THOUSANDS of free Drupal Modules (16,000+) are available in the community to help you quickly add specific features to your website.",
        "Learn to use Drupal INDEPTH like an EXPERT- massively scalable, 100% free, rock solid security, dependability and constant security patches and updates.",
        "Build 8 fully functional DRUPAL PROJECTS from Scratch - from Beginner level to ADVANCED LEVEL",
        "Design and build CONTENT MANAGEMENT SYSTEMS using Drupal - while understanding the core principles behind"
      ],
      "course_content": {
        "Introduction and Welcome": [
          "INTRODUCTION and WELCOME!",
          "What is a CMS? What is Drupal?",
          "When to use Drupal? (and when NOT to?)",
          "Help is always at hand",
          "Quiz for Section 1: Introduction to Drupal and CMSs"
        ],
        "Drupal 8 SUPER EASY Installation": [
          "Drupal 8 Automated Installation"
        ],
        "PROJECT 1 - BEGINNER LEVEL: Company Brochure Website": [
          "Learning Objectives of this section",
          "A first look at Drupal",
          "Discover the Drupal Interface",
          "2.4 Company Brochure Website 1 - Adding a HOMEPAGE",
          "2.4 Company Brochure Website 2 - APPEARANCE",
          "2.4 Company Brochure Website 3 - Additional Pages and CONTACT form"
        ],
        "ASSIGNMENT #1 - Classic brochure website": [
          "ASSIGNMENT #1 - Classic brochure website"
        ],
        "Content Management ESSENTIALS": [
          "Learning Objectives of this section",
          "A Quick look - Content and Content Types",
          "Article Type: In Depth",
          "Article Type: Continued",
          "Drupal's Powerful Versioning System",
          "Managing Content - in bulk"
        ],
        "PROJECT 2 - BEGINNER LEVEL: Blog Site": [
          "Learning Objectives of this section",
          "What is a blog? Design Elements of a Blog",
          "Blog Project - Build your own Blog",
          "Blog Project - Notes, Tips and Tricks"
        ],
        "User Management with Drupal": [
          "What is RBAC? Users, Roles and Permissions",
          "User Account Settings",
          "Creating User Accounts, User Generated Accounts, Resetting Passwords",
          "Creating Roles, Assigning Permissions"
        ],
        "PROJECT 3 - SIMPLE LEVEL: Internet Forum": [
          "Learning Objectives of this section",
          "What is a Forum? Design Elements of a Forum",
          "Forum creation and user management",
          "CONTENT WORKFLOWS in a Forum",
          "ADVANCED Notes, tips and tricks"
        ],
        "POWERFUL THEMES": [
          "How far can you go with the UX? - 8 examples",
          "Working with Themes - The Basics",
          "Installing a new FREE Theme",
          "Theme Personalization and Customization - MULTIPLE techniques"
        ],
        "PROJECT 4 - SIMPLE LEVEL: USING Themes": [
          "Learning Objectives of this section",
          "WHERE to find great Themes?",
          "How To Choose a Theme - Making a DECISION",
          "Theme Selection Checklist - PRINT AND USE"
        ]
      },
      "requirements": [
        "NO Special Requirements! If you do not have access to a testing Drupal installation - you will be taught to install Drupal on your own Windows laptop!",
        "Intermediate level computer proficiency is required - understanding the basics of installing softwares, browsers - and similar tasks"
      ],
      "description": "This course is the FIRST, ONLY, and most comprehensive Drupal course that brings the THREE ASPECTS TOGETHER - 1) Drupal 2) Content Management Principles AND 3) hands-on exercises. NO OTHER book, tutorial or course offers these unique set, anywhere on the internet.\nThis is a Drupal site building course - NO PROGRAMMING or CODING is used or required.\nBefore you read further, see what my students are saying about my courses:\n\"Full marks - met and exceeded expectation. Gladly recommend to anyone\" - Leila Barton\n\n\"One of the best course.... Thanks instructor for shaping our career\" - by Taha Syed\n--------------\nMy promise to you: By  the end of this course - you will be incredibly comfortable with Drupal 8 - and you will be able to use Drupal like a BOSS. You  will be able to design, create and run world class Drupal sites - with complex requirements of RBAC, content flow, workflows and leverage huge existing library of Drupal modules!!!\n--------------\nDo you want to Master the World's Most Popular Content Management Framework? Learn Drupal 8.x in this Comprehensive Course.\n\nLearn the LATEST version - Drupal 8.x - - and stay miles AHEAD of the curve\nBONUS: extra assignments, tips, tricks and pitfalls in all sections\nStart from the very basics - this course makes no assumptions\nEarn promotions with your new skills - Become indispensable in your institution\nBONUS - Project File downloads - PRACTICE EXACTLY what is shown in each and every lecture\nBy the end of the course - you will be able to provide incredible Drupal based solutions.\nYEARS of experience has be condensed into this course - with generous tips, tricks, best practices, pitfalls - in each and every concept lesson.\nA review from a learner in my other course: \"I know the above tag is a oxymoron but then it is.A complete course is a detailed to perfection which i did not came  across many courses. Srikanth as a tutor/ trainer is very good. Highly  Recommended !!!!!\" - by Hasib Patel\n--------------\nLearn DRUPAL 8.x to create INCREDIBLY POWERFUL software web solutions.\nLearn to Use every aspect of Drupal - Content Management, User Management, User Experience, Extending Drupal with modules, Configurations, Application Structuring and admin Reports .\nIdentify REAL LIFE problems and solutions - web application development, rapid prototyping, content management.\nSave Hundreds of hours and Thousands of dollars - by using open source resources OPTIMALLY, identifying, preventing and mitigating RISKS\nLearn to Resolve the #1 PROBLEM that Entrepreneurs  face by using Drupal - Budgets, Time and Resources De-mystify the 100s of features in Drupal - Content, Structure, Appearance, Extending, Configuration, People, Reports etc.\nFrom another learner of mine:\n\"Thanks for this superb course - I needed to get fully hands on ..fast - and this course has me up and running like nothing else.  Have become quite proficient and have others in the office asking my help. Highly recommend this course.\"\nWhat am I going to get from this course?\nA step-by-step HD video tutorial starting from the absolute basics - all the way to advanced level topics.\nVideo lectures, extensive resources, downloadable exercise project files, PDFs etc\nCOMPLETE EXERCISES - every one has different scenarios, objective and overview files explained.\nEVEN MORE: exercise files have design notes and step-by-step instructions - which allows you to REPLICATE EXACTLY what is shown in the lecture.\nEVERY concept is LOADED with tips, tricks, pitfalls from years of hands-on experience\nPractice Assignments in exercises, quizzes to self-test your knowledge\n--------------\nImportant information before you enroll:\nIn case you find the course useless for your career, don't forget you are covered by a 30 day money back guarantee, full refund, no questions asked!\nOnce enrolled, you have unlimited, lifetime access to the course!\nYou will have instant and free access to any updates I'll add to the course.\nCheck out the curriculum and the FREE lectures for a course preview\n\"Excellent course. A well-chosen level of information: from the basic (but not obvious) to  advanced (but without a huge amount of details, which are not possibly  to remember). Very good way of communication. No inconveniences often encountered in  other courses like the useless movements of the mouse, clicking on  everything what’s possible, repeating sentences several times etc...Thank you very much.\" - by Mr. P. Nowakowski\nDON'T WAIT - ENROLL INTO THIS COURSE NOW - JOIN OVER 90,000 LEARNERS WHO HAVE TAKEN MY COURSES.",
      "target_audience": [
        "ANYONE who wants to learn DRUPAL",
        "IT Professionals who want to build a quick and powerful Web Application",
        "ENTREPRENEURS who want to rapidly prototype functional web applications",
        "DEVELOPERS who want to learn how Drupal works",
        "MANAGERS who want to customer oriented web application",
        "TECHNICAL ARCHITECTS who want to build powerful solutions",
        "PROFESSIONALS from all domains who want to learn a powerful Swiss-army web tool",
        "MEDIA PROFESSIONALS who want to learn Content Management Solutions",
        "CONTENT MANAGEMENT professionals who want to learn DRUPAL",
        "QA, Testing and Quality Professionals who want to understand Drupal Workflows",
        "UI, UX, Graphical professionals who want to understand Drupal Functionality",
        "NOT FOR DRUPAL CODERS - Drupal Coding is NOT TAUGHT in this course - it will be taught in a different course of mine",
        "NOT FOR DRUPAL THEMERS - Drupal Theme Building is NOT TAUGHT in this course - it will be taught in a different course of mine",
        "NOT FOR DRUPAL ADMINISTRATORS - Drupal Administration will be taught in a different course of mine"
      ]
    },
    {
      "title": "Angular & NodeJS - The MEAN Stack Guide [2025 Edition]",
      "url": "https://www.udemy.com/course/angular-2-and-nodejs-the-practical-guide/",
      "bio": "Learn how to connect your Angular Frontend to a NodeJS & Express & MongoDB Backend by building a real Application",
      "objectives": [
        "Build real Angular + NodeJS applications",
        "Understand how Angular works and how it interacts with Backends",
        "Connect any Angular Frontend with a NodeJS Backend",
        "Use MongoDB with Mongoose to interact with Data on the Backend",
        "Use ExpressJS as a NodeJS Framework",
        "Provide a great user experience by using Optimistic Updating on the Frontend",
        "Improve any Angular (+ NodeJS) application by adding Error Handling"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is MEAN?",
          "Join our Online Learning Community",
          "What is a Single Page Application (SPA)?",
          "How Does the MEAN Stack Work?",
          "MUST READ: Angular & Angular Material Versions",
          "Installing Node & the Angular CLI",
          "Installing our IDE",
          "Exploring the Project Structure",
          "Course Outline",
          "How To Get The Most Out Of This Course",
          "Section Resources"
        ],
        "The Angular Frontend - Understanding the Basics": [
          "Module Introduction",
          "Understanding the Folder Structure",
          "Understanding Angular Components",
          "Adding our First Component",
          "Listening to Events",
          "Outputting Content",
          "Getting User Input",
          "Installing Angular Material",
          "Adding a Toolbar",
          "Outputting Posts",
          "Diving Into Structural Directives",
          "Creating Posts with Property & Event Binding",
          "Creating a Post Model",
          "Adding Forms",
          "Getting Posts from Post-Create to Post-List",
          "Calling GET Post",
          "More About Observables",
          "Working on our Form",
          "Section Resources"
        ],
        "Adding NodeJS to our Project": [
          "Module Introduction",
          "Connecting Node & Angular - Theory",
          "What is a RESTful API?",
          "Adding the Node Backend",
          "Adding the Express Framework",
          "Improving the server.js Code",
          "Fetching Initial Posts",
          "Using the Angular HTTP Client",
          "Understanding CORS",
          "Adding the POST Backend Point",
          "Adding Angular",
          "Section Resources"
        ],
        "Working with MongoDB": [
          "Module Introduction",
          "What is MongoDB?",
          "Comparing SQL & NoSQL",
          "Connecting Angular to a Database",
          "Setting Up MongoDB",
          "Using MongoDB Atlas & IP Whitelist",
          "Adding Mongoose",
          "Understanding Mongoose Schemas & Models",
          "Creating a POST Instance",
          "Connecting our Node Express App to MongoDB",
          "Storing Data in a Database",
          "Fetching Data From a Database",
          "Transforming Response Data",
          "Deleting Documents",
          "Updating the Frontend after Deleting Posts",
          "Adding Posts with an ID",
          "Section Resources"
        ],
        "Enhancing the App": [
          "Module Introduction",
          "Adding Routing",
          "Styling Links",
          "Client Side vs Server Side Routing",
          "Possible Error",
          "Creating the \"edit\" Form",
          "Finishing the Edit Feature",
          "Updating Posts on the Server",
          "Re-Organizing Backend Routes",
          "Adding Loading Spinners",
          "Section Resources"
        ],
        "Adding Image Uploads to our App": [
          "Module Introduction",
          "Adding the File Input Button",
          "Converting the Form from a Template Driven to a Reactive Approach",
          "Adding Image Controls to Store the Image",
          "Adding an Image Preview",
          "Starting with the Mime-Type Validator",
          "Finishing the Image Validator",
          "Adding Server Side Upload",
          "Uploading Files",
          "Working with the File URL",
          "Beware of the Spread (...) Operator",
          "Fetching Images on the Frontend",
          "Updating Posts with Images",
          "Wrap Up",
          "Section Resources"
        ],
        "Adding Pagination": [
          "Module Introduction",
          "Adding the Pagination Component",
          "Working on the Pagination Backend",
          "Connecting the Angular Paginator to the Backend",
          "Fetching Posts Correctly",
          "Finishing Touches",
          "Section Resources"
        ],
        "Adding User Authentication": [
          "Module Introduction",
          "Adding the Login Input Fields",
          "Handling User Input",
          "Adding the Signup Screen",
          "Creating the User Model",
          "Creating a New User Upon Request",
          "Connecting Angular to the Backend",
          "Understanding SPA Authentication",
          "Implementing SPA Authentication",
          "Sending the Token to the Frontend",
          "Adding Middleware to Protect Routes",
          "Adding the Token to Authenticate Requests",
          "Improving the UI Header to Reflect the Authentication Status",
          "Improving the UI Messages to Reflect the Authentication Status",
          "Connecting the Logout Button to the Authentication Status",
          "Redirecting Users",
          "Adding Route Guards",
          "Reflecting the Token Expiration in the UI",
          "Saving the Token in the Local Storage",
          "Section Resources"
        ],
        "Authorization": [
          "Module Introduction",
          "Adding a Reference to the Model",
          "Adding the User ID to Posts",
          "Changed Mongoose Syntax",
          "Protecting Resources with Authorization",
          "Passing the User ID to the Frontend",
          "Using the User ID on the Frontend",
          "Section Resources"
        ],
        "Handling Errors": [
          "Module Introduction",
          "Testing Different Places to Handle Errors",
          "The Error Interceptor",
          "Displaying the Basic Error Dialog",
          "Adding an Error Dialog",
          "Returning Error Messages on the Server",
          "Finishing Touches",
          "Section Resources"
        ]
      },
      "requirements": [
        "Concepts behind NodeJS, Express and MongoDB (with Mongoose) will be refreshed in this course but as this course is focused on the connection of these technologies with Angular, basic knowledge about them is strongly recommended",
        "It is recommended to have beginner-level Angular knowledge, though this course will provided a detailed refresher and will explain the core concepts used in detail",
        "HTML, CSS and basic JavaScript knowledge is assumed throughout this course",
        "NO advanced or expert knowledge about any of these topics is assumed or required"
      ],
      "description": "Learn how to create modern, scalable and high-speed web applications with Angular + Node.js + Express + MongoDB.\nAngular 1 and NodeJS, together with ExpressJS (a NodeJS Framework) and MongoDB formed the very popular MEAN stack. Now is the time to dive into MEAN 2.0 and replace Angular 1 with Angular 2+.\nBenefit from the many improvements and advantages Angular offers you: Speed, ease of development, highly reactive, awesome support for asynchronous operations, great scalability and more!\nAnd combine these advantages with the power of a NodeJS + Express + MongoDB backend!\nLearn or refresh the Angular Basics!\nThis course is no Angular course, but it includes detailed explanations of the core concepts used as well as about Angular in general. However, keep in mind that, as this course is no Angular course, having additional resources like my \"Angular - The Complete Guide\" course is recommended.\nI'm Maximilian Schwarzmüller, an experienced web developer as well as author of many 5-star rated Udemy courses and host of the \"Academind\" coding channel on YouTube. I will take you on a hands-on journey to get you to build your own Angular + NodeJS Applications in no time!\nThis course follows a hands-on approach, which means that the whole course is structured around one big application and the different concepts will be explained detailedly as they are introduced in this application.\nSpecifically, you will learn how to:\nSet up a NodeJS + Express + MongoDB + Angular Application with the help of the Angular CLI\nUse NodeJS and Express efficiently\nBuild reusable Components in Angular and create a reactive User Experience with the Tools provided by Angular\nConnect your NodeJS (or any other language!) backend with your Angular App through Angular’s HttpClient service\nProvide appropriate endpoints on your Backend, for your Frontend to consume\nAdd advanced features like file upload and pagination\nMake your Application more secure by implementing Users, Authentication as well as Authorization\nHandle Errors gracefully\nAnd much more!\nThis hands-on concept allows you to not get stuck in the theory, but instantly see real implementation examples!\nHear what students of other courses as well as viewers of my YouTube channel have to say\nMax has gone through great lengths to create great content and this course has been great. His teaching style covers everything from basic to advanced topics, and his explanations have been thorough on each topic\nMax demonstrates very good knowledge of the subject matter and great enthusiasm in delivering the lectures.\nMax does a wonderful job making the core concepts of Angular approachable and accessible.\nDon’t stop at the basics!\nDo you know those courses which show you a \"Hello World“ example and then call it an end? That won’t happen to you in this course. While beginning with a very basic app and basic features, you will quickly be able to incorporate many different Routes, Observables, Events, Authentication and Authorization, Error Handling and much more into your applications.\nThe best thing is: You’ll learn all that by putting it into practice immediately! No wall of powerpoint slides, no unrealistic mini-examples – this is the real deal!\nWho should take this course?\nBasic NodeJS/Express and Angular Experience is strongly recommended\nYou should be familiar with HTML, CSS and JavaScript basics, too\nMongoDB (+ Mongoose) knowledge is a plus as MongoDB will be used in this course but won’t be subject of in-depth explanations\nNO expert or advanced knowledge on any of these topics is required or assumed\nBy the end of this course, you will be able to create your own, awesome NodeJS + Angular applications!\nPlease note that this course was recorded with an older version of Angular & Angular Material. The code shown in the videos might not always work with the latest versions of these packages. The general concepts & solution steps still apply, of course.",
      "target_audience": [
        "This course is for everyone interested in putting existing Angular and NodeJS knowledge into action",
        "If you're familiar with the basics of Angular and NodeJS, this course provides a detailed guide on how to connect both technologies",
        "Everyone interested in building a modern, full-stack application",
        "Students who want to exercise with their NodeJS and Angular skills will find a great opportunity to do so"
      ]
    },
    {
      "title": "JavaScript Web Projects: 20 Projects to Build Your Portfolio",
      "url": "https://www.udemy.com/course/javascript-web-projects-to-build-your-portfolio-resume/",
      "bio": "Modern HTML5, CSS3, and JavaScript to build Responsive and Mobile Friendly projects for your dream portfolio and resume!",
      "objectives": [
        "20 projects with pure JavaScript, HTML5, CSS3 with all code provided",
        "Go from a total beginner to a confident JavaScript developer",
        "Learn UI/UX practices to build responsive and mobile first web applications",
        "Asynchronous programming with AJAX, Fetch API, Promises & Async + Await",
        "Write clean, maintainable and performant Javascript code",
        "Work with Web APIs (localStorage, DOM, + more)",
        "Modern HTML5 (Canvas, Video, Audio + more)",
        "Modern CSS3 (Animations, Transitions, Variables + more)",
        "Avoid common mistakes other Javascript programmers and beginners make",
        "Build 20 beautiful and customizable, real world frontend applications"
      ],
      "course_content": {
        "Introduction": [
          "Course Outline",
          "Join Our Online Classroom!",
          "Exercise: Meet Your Classmates and Instructor",
          "The Purpose Of JavaScript",
          "How To Get The Most Out Of The Course",
          "ZTM Resources"
        ],
        "Developer Setup": [
          "Setting Up For The Course",
          "OPTIONAL: MAC/LINUX Setup",
          "OPTIONAL: WINDOWS Setup",
          "Our Visual Studio Code Setup + Templates",
          "Developer Tools + Github Pages",
          "Web Developer Monthly",
          "Bonus resource: Advanced JavaScript Cheatsheet",
          "Monthly Coding Challenges, Free Resources and Guides"
        ],
        "Quote Generator": [
          "Quote Generator Project Overview",
          "Setting Up Our Project",
          "Styling and HTML Elements",
          "Creating Beautiful Buttons",
          "Update to API",
          "[NEW] Fetching Data With JavaScript",
          "Different Option for API",
          "[NEW] Manipulating DOM With JavaScript",
          "[NEW] Creating A Loader With JavaScript",
          "Sharing Your Projects",
          "Quick Note: Upcoming Videos",
          "[OPTIONAL] Fetching Data With JavaScript",
          "[OPTIONAL] 429 Error",
          "[OPTIONAL] Build Your Own Proxy Server",
          "[OPTIONAL] Manipulating DOM With JavaScript",
          "[OPTIONAL] Creating A Loader With JavaScript",
          "Code Review",
          "Manipulating The DOM"
        ],
        "Infinity Scroll": [
          "Infinity Scroll Project Overview",
          "Loader SVG",
          "Centering Elements On The Page",
          "Responsive Layout",
          "Fetching Data",
          "JavaScript To Display Data",
          "Infinite Scroll With JavaScript",
          "Infinite Scroll With JavaScript 2",
          "Code Review",
          "Exercises: Cleaning Up The Code"
        ],
        "Picture In Picture": [
          "Picture In Picture Project Overview",
          "Setting Up Our Project",
          "Styling and HTML Elements",
          "Adding Functionality With JavaScript",
          "Code Review",
          "Endorsements On LinkedIN"
        ],
        "Joke Teller": [
          "Joke Teller Project Overview",
          "Styling and HTML Elements",
          "Responsive Layout and Styling",
          "RapidAPI Disclaimer",
          "JavaScript In The Project",
          "JavaScript In The Project 2",
          "JavaScript In The Project 3",
          "Finishing Up The Project",
          "Code Review"
        ],
        "Light & Dark Mode": [
          "Light Dark Mode Project Overview",
          "HTML and CSS Setup",
          "Content In Our Project",
          "Toggle Theme With JavaScript",
          "Toggle Theme With JavaScript 2",
          "LocalStorage To Save User Data",
          "Code Review",
          "Exercise: Imposter Syndrome",
          "Exercise: Making Code More Readable"
        ],
        "Animated Template": [
          "Animated Template Project Overview",
          "Setting Up Our Template",
          "Setting Up Our Content",
          "JavaScript Inside of HTML",
          "Animation On Scroll",
          "Code Review"
        ],
        "Navigation Nation": [
          "Navigation Nation Project Overview",
          "Setting Up Our HTML and CSS",
          "Navigation UI",
          "Animating Menu With JavaScript",
          "Animations CSS",
          "Cleaning Up Our JavaScript",
          "Code Review"
        ],
        "Music Player": [
          "Music Player Project Overview",
          "Setting Up Our HTML and CSS",
          "Coding Our Responsive UI",
          "JavaScript To Play Audio",
          "Music Player With JavaScript",
          "Progress Bar",
          "Progress Bar 2",
          "Progress Bar 3",
          "Code Review"
        ]
      },
      "requirements": [
        "Only a basic understanding of HTML & CSS & JavaScript",
        "Any computer and OS will work — Windows, Mac or Linux."
      ],
      "description": "Just updated with all modern features of HTML5, CSS3 and JavaScript! Join a live online community of over 900,000+ developers and a course taught by industry experts that have actually worked both in Silicon Valley and Toronto with JavaScript!\n\nThis course is focused on efficiency and getting you hired by building your dream portfolio so you can get a job or work as a freelancer. Never spend time on confusing, out of date, incomplete tutorials anymore! Graduates of Andrei’s courses are now working at Google, Tesla, Amazon, Apple, IBM, JP Morgan, Facebook, + other top tech companies (seriously, google this to verify some testimonials).\nWhether you want to become a freelancer, get hired, or to just advance your career, this brand new course will take you step by step through 20 JavaScript projects that you will be able to customize and put on your portfolio right away. Along the way, you will learn to build projects using HTML, CSS and JavaScript and truly build your skills as a JavaScript developer.\n\nWhether you want to one day learn React, Angular, Vue JS, Node.js, Svelte, or any other toolchain of a modern developer, at the end of the day, JavaScript fundamentals are key, and learning JavaScript is an investment that will pay off many years into the future. By solidifying your JavaScript knowledge and being able to build thing without crutches like libraries and frameworks, you will future proof yourself.\n\n\nHere is the truth: It’s easy to find JavaScript projects to work on online. You can copy and paste code. You can watch YouTube videos. That’s simple (and free). This course is different in that not only de we have modern projects using the latest features of JavaScript, and browser APIs, but we also do a Code Review of each project. After we build a website, we go through the code and talk about how we can improve the code, how to improve the security, or improve the performance of your projects.\n\n\nIt’s like having a senior developer finally teach you what good code means, what are the common mistakes beginners make, and how to  write maintainable code.\n\n\nAll code is going to be provided to you, and even if you don’t like to code along, you will get access to the code for the projects to put them on your portfolio right away.\n\n\nSo what are we building? Get ready for this:\nSpock Rock Game - Confetti.js, Modules\nQuote Generator - Fetch, Async/Await, Quote API, CORS\nPicture-in-Picture - Picture-in-Picture API, Screen Capture API\nBookmarks App - DOM, localStorage\nNASA APOD - Fetch, Async/Await, NASA API, DOM, localStorage\nAnimated Navigation - CSS Animations\nInfinite Scroll - Fetch, Async/Await, Unsplash API, DOM, Scroll Event Listener\nCountdown App - Date, localStorage\nMusic Player - HTML 5 Audio API\nCalculator - Math Methods\nSplash Page - DOM Basics\nLight/Dark Mode - DOM, localStorage\nForm Validation - DOM, Forms\nJoke Teller - Fetch, Async/Await, Joke API, Text-to-Speech\nVideo Player - HTML 5 Video API\nMS Paint Clone - Advanced HTML Canvas, localStorage\nPong Clone - Advanced HTML Canvas\nMath Sprint Game - SetInterval, DOM, Array Methods, localStorage\nAnimated Template - Template, AOS.js\nDrag and Drop - Drag and Drop API, localStorage\nWe will be using modern ES6,ES7,ES8,ES9,ES10 features to master JavaScript! Think of this as a full on JavaScript bootcamp to get you from a beginner to a confident programmer! on top of that, we also cover common UI/UX practices to make sure we have good designs and our projects are mobile friendly.\n\n\nThe course is not about making you just code along without understanding the principles so that when you are done with the course you don’t know what to do other than watch another tutorial. No! This course will push you and challenge you to go from an absolute beginner in JavaScript to someone that is able to build projects on their own.\n\nSo the best time to begin? It's Today! By taking that first step right now, you are that much closer to developing the skills that get you hired and closer to your dream career.\n\nSee you inside the course :)\n\n\nTaught By:\n\nAndrei Neagoie is the instructor of the highest rated Development courses on Udemy as well as one of the fastest growing. His graduates have moved on to work for some of the biggest tech companies around the world like Apple, Google, Amazon, JP Morgan, IBM, UNIQLO etc... He has been working as a senior software developer in Silicon Valley and Toronto for many years, and is now taking all that he has learned, to teach programming skills and to help you discover the amazing career opportunities that being a developer allows in life.\nHaving been a self taught programmer, he understands that there is an overwhelming number of online courses, tutorials and books that are overly verbose and inadequate at teaching proper skills. Most people feel paralyzed and don't know where to start when learning a complex subject matter, or even worse, most people don't have $20,000 to spend on a coding bootcamp. Programming skills should be affordable and open to all. An education material should teach real life skills that are current and they should not waste a student's valuable time.   Having learned important lessons from working for Fortune 500 companies, tech startups, to even founding his own business, he is now dedicating 100% of his time to teaching others valuable software development skills in order to take control of their life and work in an exciting industry with infinite possibilities.\nAndrei promises you that there are no other courses out there as comprehensive and as well explained. He believes that in order to learn anything of value, you need to start with the foundation and develop the roots of the tree. Only from there will you be able to learn concepts and specific skills(leaves) that connect to the foundation. Learning becomes exponential when structured in this way.\nTaking his experience in educational psychology and coding, Andrei's courses will take you on an understanding of complex subjects that you never thought would be possible.\n\n--------\nJacinto is a Senior Developer with the Canadian Broadcasting Corporation with a diverse background, including 5 years experience as a teacher in Canada and South Korea. He has had a passion for technology from a very young age, which led him to build his first computer at age 12 and start using design software at 16. As an instructor for the Zero To Mastery Academy, Jacinto combines these artistic and critical thinking skills to create high quality projects that will add real value to student’s portfolios and jump start their careers in web development.\n\nStarting out learning something new can be challenging and there are so many resources available that it can be overwhelming. Jacinto understands that for some, bootcamps and post-secondary education are too time-consuming or expensive for many to consider. With that in mind, he does his best to create the highest quality courses that are inexpensive and beginner-friendly.\n\nAs a self-taught developer, Jacinto started from scratch and learned enough to land a Senior Developer job after only 4 months working through online courses. He knows it is possible to upgrade your skills and switch careers without spending excessive time or money. He couldn’t be happier to be in this exciting and growing industry and aims to provide students with the same opportunity.\n\n\nSee you inside the courses!",
      "target_audience": [
        "Anyone who feels like they can't build JavaScript projects on their own",
        "Anyone who wants to become a web developer, switch careers, or freelance as a JavaScript developer.",
        "New or junior developers who want to learn modern JavaScript",
        "Programmers who want to learn frontend web development",
        "Anyone that needs to add more projects to their portfolio or resume",
        "Developers who know the basics of JavaScript and want to deepen their knowledge"
      ]
    },
    {
      "title": "jQuery for Beginners - Create Website Animations Easily",
      "url": "https://www.udemy.com/course/jquery-for-beginners-fundamentals-training-tutorial-course/",
      "bio": "jQuery for Beginners : Learn this Javascript Framework to add animations easily and fast to any website.",
      "objectives": [
        "Students will be able make Complicated Javascript applications easier",
        "Students will be able to add nice features to their websites using jQuery",
        "Students will be able to add animations to their apps or websites",
        "Students will be able to make their code a lot more compatible with browsers"
      ],
      "course_content": {
        "First Steps": [
          "Introduction",
          "Course Exercise Files",
          "What is jQuery",
          "Code Editor and Some Settings",
          "UPDATE - Editors"
        ],
        "Quick introduction To jQuery Coding": [
          "First jQuery Code",
          "Separating Scripts",
          "Selectors",
          "Replacing Content",
          "Handling Events"
        ],
        "Animation": [
          "Show and hide elements",
          "Fading",
          "Hover Effects",
          "Toggle",
          "Sliding",
          "Custom Animations"
        ],
        "Extracting Content": [
          "Overview on Extracting Data",
          "Basic Selectors",
          "Basic Filters",
          "Advance Selectors",
          "Advance Filters"
        ],
        "Creating Content Dynamically": [
          "Creating Content",
          "Inserting Content Part 1",
          "Inserting Content Part 2",
          "Modifying Content Part 1",
          "Modifying Content Part 2",
          "CSS Manipulation",
          "Navigating The DOM and Using Statement Chaining",
          "Wrapping it up!"
        ]
      },
      "requirements": [
        "HTML and CSS",
        "JavaScript"
      ],
      "description": "ADD NICE FEATURES TO WEBSITES OR APPS EASILY......\n\nOver 3,000 Students taking this course already.........\nThis jQuery for beginner's tutorial or course will teach you what jQuery is and how to start using it to create animations and advance features for your websites or applications.\njQuery is all around us, everywhere you see a slider, photo gallery, navigation menu, special effects, pop up boxes with photos or videos with plugins like lightbox or prettyphoto or anywhere you see nice animations on any website, jQuery its there.\nDo you need jQuery? If you want to add the best awesome Javascript features and animations to sites or apps without the complicated code then YES.\nIf you are new to web development and don't know Javascript or have very little knowledge then this jQuery tutorial / course is for you.\nHere is what my students think about me and my courses......\nFantastic cource once again!!\nEdwin you are the best teacher, thank you so much!! Guys don't think just enroll to this course and you will love it like i do! I cant wait for more courses on PHP from you my best teacher.\nBest course I've taken on Udemy!!\nI'm an absolute beginner in Javascript. I had started other courses on Udemy but got lost early on due to the instructor not being able to clearly explain what they're teaching. As a result I became discouraged thinking I just don't get Javascript. Well I have just completed this course (the first course I've actually seen through to the end) and I feel a lot more confident now. The teacher (Edwin) is what makes this course enjoyable. He explains the content so clearly and gives good simple examples, which we then build upon as the course progresses. His encouraging, cheerful and down-to-earth approach make for the perfect learning environment. He also responded to my questions very quickly. I can't recommend this course highly enough!! It's perfect for the beginner to build a good solid foundation to then move onto move advanced courses. **Take this course you won't be disappointed** :)\nExcellent Class\nThis class provides a very good introduction to the basic concepts and building blocks of javascript.\nThe instructor, Edwin, is very engaging and enthusiastic about the subject which makes the class very enjoyable.\nI would highly recommend this class for anyone just stating out in javascript.\nIt's magic\nHi , I finished this tutorial successfully . The way of teaching was really good and understandable . The main plus point of this course is the syllabus . Yo have focused on very important topics for a beginner so it will be easy for him to jump to advance level easily with little bit of practice . thank you\nMy Promise\nI will do my best to teach you jQuery and to answer your questions promptly.\nIf you spend anything on this jQuery Course Tutorial, your money will be multiplied over and over again.\njQuery helps make website and apps alive with all the animations and advance features with simplicity. This course will help set you apart from the rest of designers and developers that don't know jQuery.\n100% Money Back if you don't like it\nDon't like this jQuery Course? If for some reason you don't like the course within 30 days, Udemy will return your money and no hard feelings from me.\nAre you still reading? What are you waiting for? Join now and learn jQuery the easy way.",
      "target_audience": [
        "Students new javascript should take this course",
        "Students who wish to take Javascript to another level",
        "Students who know HTML and CSS should take this course",
        "Students who want to learn how add nice features to their sites or apps should take this course",
        "Students looking to save time in web development should take this course"
      ]
    },
    {
      "title": "Programming in Blazor - ASP.NET Core 5",
      "url": "https://www.udemy.com/course/programming-in-blazor-aspnet-core/",
      "bio": "Create interactive web applications with C#",
      "objectives": [
        "Develop web applications using C# and Blazor",
        "Use Azure DevOps to deploy Blazor apps",
        "Create a Database using Entity Framework Core",
        "Create a user system that uses roles"
      ],
      "course_content": {},
      "requirements": [
        "C# Fundamentals (functions, variables, loops, the basics)",
        "HTML and CSS Fundamentals"
      ],
      "description": "Blazor is a Microsoft technology that allows us to make interactive web applications with C# without using JavaScript.\nIn this course we will learn to develop web applications with Blazor.\nThroughout the course we will create an application applying what has been learned.\nWe will go from the basics to the advanced. We will create forms, components,  entities, relations with our entities, and user system with roles and more.\nWe will use an ASP.NET Core 5 application to serve our Blazor project, and with Entity Framework Core 5 we will create our database.\nIn the end, we will use Azure services, such as Azure App Service and Azure DevOps, to publish our application to production.\nThis is some of the things that we'll learn in the course:\n- Creating a new Blazor project\n- Review Razor syntax\n- Learn how to work with components\n- Reusing code using components\n- Pass parameters to components\n- Execute events from components to send messages to the parent component\n- Use dependency injection\n- Invoking JavaScript code from C#\n- Invoking C# code from JavaScript\n- Use routing to allow users to navigate in our page\n- Building forms with validations\n- Communicate from the front-end to the back-end using HTTP\n- Creating a database and interacting with it using Entity Framework Core\n- Creating a user system so that users can log in our app\n- Deploy our web app into a production environment",
      "target_audience": [
        "C# developers who want to build complex web applications",
        "JavaScript developers that do not want to use JavaScript anymore",
        "Front-End developers",
        "Back-End developers who want to use C# on the Front-End"
      ]
    },
    {
      "title": "HTML Email Mastery - Build Responsive Email Templates 2025",
      "url": "https://www.udemy.com/course/html-email/",
      "bio": "Build Responsive Dark Mode Friendly HTML Email Templates tested on 86+ email clients including Outlook in 2025!",
      "objectives": [
        "Learn Responsive HTML Email Development in 2025, from Absolute Beginner to Mastery!",
        "Build HTML Emails that Render 100% Across 86+ Email Clients Including Windows Outlook.",
        "Learn to Develop HTML Emails that are Mobile Friendly with CSS Media Queries.",
        "Design & Develop Emails for Dark Mode Email Clients with Dark Mode CSS Queries.",
        "This is the Email Developer Course you need to learn the Fundamentals of HTML Email!",
        "Learn to Build Bulletproof HTML Email Buttons, Background Image, Responsive Columns & more!",
        "Learn MSO Conditional Statements for Windows Outlook & Vector Markup Language Elements.",
        "Learn how to Test Your HTML Emails in Preview Testing Services like Litmus & Email On Acid."
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to the Course",
          "Course Curriculum Overview",
          "Course Projects & Main Download Overview",
          "Course Support & Recommendations"
        ],
        "Introduction to HTML Email": [
          "Introduction to HTML Email Development",
          "Free Professional Photos & Email Image Hosting",
          "Email Clients List & Email Preview Testing",
          "Email Clients Market Share",
          "Mobile, Webmail, & Desktop Email Client Usage"
        ],
        "HTML Crash Course": [
          "Introduction to HTML",
          "Creating An HTML Document",
          "Setting Up Your Text Editor with VS Code",
          "HTML Document Type",
          "Paragraphs & HTML Comments",
          "HTML Headings",
          "HTML Text Formatting",
          "HTML Links",
          "HTML Images & File Paths",
          "HTML Attributes",
          "Unordered Lists",
          "Ordered Lists",
          "HTML Tables",
          "HTML Forms - Introduction",
          "HTML Forms - Elements",
          "HTML Forms - Input Types",
          "HTML Forms - Contact Form Example",
          "Block & Inline Elements",
          "HTML Classes & IDs",
          "HTML Audio",
          "HTML Video",
          "HTML Crash Course Quiz"
        ],
        "CSS Crash Course": [
          "Introduction to CSS",
          "CSS Syntax",
          "Inline, Internal & External CSS",
          "CSS Comments",
          "CSS Fonts",
          "CSS Sizing",
          "CSS Colors",
          "CSS Backgrounds",
          "CSS Borders",
          "CSS Box Model",
          "CSS Floats & Alignment",
          "CSS Buttons",
          "CSS Icons",
          "CSS Media Queries",
          "CSS Crash Course Quiz"
        ],
        "HTML5 Email Template Practice Activity": [
          "Template Document, Body & Background",
          "Template Wrapper & Border",
          "Header Logo & Banner Sections",
          "Three Column Section Part 1",
          "Three Column Section Part 2",
          "Two Column Section",
          "Footer Section HTML",
          "Footer Section CSS",
          "Responsive Media Query"
        ],
        "HTML Email Testing & Best Practices": [
          "Free HTML Email Testing Services",
          "Paid HTML Email Testing Services",
          "Introduction to ESPs, Anti-Spam, Deliverability & Merge Tags",
          "Email Testing & Email Service Provider Quiz"
        ],
        "HTML Email Sizing, Design, Accessibility & Tools": [
          "Email Template Sizing Best Practices",
          "Email Design Inspiration Resources",
          "Introduction to Email Accessibility",
          "HTML Email Code Fixing Resources",
          "Email Design & Accessibility Quiz"
        ],
        "HTML Email Boilerplate": [
          "Boilerplate Introduction & Why We Use Tables In Email",
          "HTML Email Document Type & Meta Tags",
          "CSS Resets for Email Clients",
          "HTML Email Media Queries",
          "MSO Conditional Statements for Outlook in Windows",
          "Email Template Body & Background Color",
          "HTML Email Preheader Text",
          "HTML Email Template Table Setup",
          "Dark Mode CSS for HTML Email with @Media & Data-OGSC",
          "CSS Blend Modes for Dark Mode in Gmail",
          "HTML Email Boilerplate Quiz"
        ],
        "Basic Email Template Practice Activity": [
          "Email Template Practice Activity Introduction",
          "Email Template Border & Logo Section",
          "Email Template Banner Section",
          "Email Template Heading, Text & Button",
          "Email Template Footer Section",
          "Testing the Practice Activity Template",
          "Practice Activity Quiz: Images & Links in HTML Email"
        ],
        "HTML Email Responsive Table Layouts": [
          "Email Template Layout Types & Intro to Responsive HTML Email Columns",
          "Single Column HTML Email Layout",
          "Emails Columns Reverse Direction & Vertical Alignment",
          "Fluid & Hybrid Columns with Responsive Full Width",
          "MSO Conditional Statements for Responsive Tables in Outlook (Ghost Tables)",
          "MSO Outlook Statements Reversed with Responsive Columns",
          "Showing & Hiding Email Content with MSO Outlook Statements",
          "Fluid/Hybrid Responsive Columns with Content Rows",
          "One & Two Thirds Columns & Additional Column Examples",
          "HTML Email Responsive Table Layouts Quiz"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know!",
        "No HTML, CSS or email coding experience is required!",
        "Email client testing subscriptions are not required to take the course!",
        "This course is for complete beginners & advanced developers!"
      ],
      "description": "HTML Email Development is one of the less talked about front-end development skills yet it is highly desirable.  Starting a career as an email developer or being a freelancer in HTML Email can be very rewarding for developers and email marketers.  Freelancers make upwards of a thousand dollars to build custom responsive HTML email template layouts and developers make $40-50 per hour building client-tested HTML emails.\nIn this HTML email course we'll build a Responsive Dark Mode HTML Email Template that has been tested on 80+ email clients including new and old versions of Outlook. No need to worry about paying $100 per month for email client testing software services, during the course the code we layout for all of our email template projects will be tested live!  This way you'll have a complete understanding of why we need certain coding practices to be compliant with all email clients.\nIn addition to the complete responsive HTML email course projects you'll receive 9 different HTML Email Template layouts, a Professional Email Developer Portfolio Template, and a professional HTML Email Signature that have all been tested and rigorously checking for email client compatibility :).\n\n\nTested Across All 86 Available Email Clients:\nMOBILE CLIENTS\nGmail App Pixel 2 Android 8\nGmail App Pixel 3 Android 9\nGmail App Pixel 4 Android 10\nGmail App Pixel 4 Android 10 (Dark Mode)\nGmail App Pixel 5 Android 11\nGmail App Pixel 5 Android 11 (Dark Mode)\nGmail App Pixel 6 Android 12\nGmail App Pixel 6 Android 12 (Dark Mode)\nGmail App Pixel 7 Android 13 (Dark Mode)\nGmail App Pixel 7 Android 13\niPad Pro (11-in) iOS 15\niPad Pro (12.9-in) iOS 15\niPhone XR iOS 14\niPhone XR iOS 14 (Dark Mode)\niPhone SE 2nd Gen iOS 14\niPhone SE 2nd Gen iOS 15\niPhone 11 iOS 14\niPhone 11 Pro iOS 15\niPhone 11 iOS 15\niPhone 11 iOS 14 (Dark Mode)\niPhone 11 iOS 15 (Dark Mode)\niPhone 11 Pro iOS 14\niPhone 11 Pro Max iOS 14\niPhone 12 Pro Max iOS 15\niPhone 12 Mini iOS 15 (Dark Mode)\niPhone 12 Mini iOS 15\niPhone 12 iOS 15\niPhone 12 iOS 15 (Dark Mode)\niPhone 13 Mini iOS 15 (Dark Mode)\niPhone 13 Mini iOS 15\niPhone 13 iOS 15 (Dark Mode)\niPhone 13 iOS 15\niPhone 13 Pro Max iOS 15\niPhone 14 Pro iOS 16\niPhone 14 iOS 16 (Dark Mode)\niPhone 14 iOS 16\niPhone 14 Pro Max iOS 16 (Dark Mode)\niPhone 14 Pro Max iOS 16\niPhone 14 Pro iOS 16 (Dark Mode)\niPhone 15 Plus iOS 17 (Dark Mode)\niPhone 15 Pro iOS 17\niPhone 15 iOS 17 (Dark Mode)\niPhone 15 Plus iOS 17\niPhone 15 iOS 17\niPhone 15 Pro Max iOS 17 (Dark Mode)\niPhone 15 Pro iOS 17 (Dark Mode)\niPhone 15 Pro Max iOS 17\nPhone 16 Models now included in testing platforms\nOutlook App iPhone 13 iOS 15 (Dark Mode)\nOutlook App iPhone 13 iOS 15\nOutlook App Pixel 6 Android 12\nOutlook App Pixel 6 Android 12 (Dark Mode)\n\n\nDESKTOP CLIENTS\nApple Mail 15 macOS 12\nApple Mail 15 macOS 12 (Dark Mode)\nApple Mail 16 macOS 13\nApple Mail 16 macOS 13 (Dark Mode)\nOutlook Office 365 macOS 12\nOutlook Office 365 macOS 12 (Dark Mode)\nOutlook Microsoft 365 macOS 13\nOutlook Microsoft 365 macOS 13 (Dark Mode)\nOutlook Microsoft 365 Windows 11\nOutlook Office 365 Windows 10\nOutlook Office 365 Windows 10 (Dark Mode)\nOutlook Microsoft 365 Windows 11 (Dark Mode)\nOutlook 2016 Windows 10\nOutlook 2016 (120 dpi) Windows 10\nOutlook 2019 Windows 10\nOutlook 2019 (120 dpi) Windows 10\nOutlook 2021 Windows 11\nOutlook 2021 Windows 11 (Dark Mode)\n\n\nWEB CLIENTS\nAOL\nFree .fr\nGmail\nGmail Dark Mode\nGMX\nGoogle Workspace\nLibero\nMail .ru\nOutlook .com Firefox\nOutlook .com Edge\nOutlook .com Chrome\nOutlook .com Firefox\nOutlook .com Edge\nOutlook .com Chrome\nOutlook .com Dark Mode\nT-Online .de\nYahoo\n\n\nSign up today and code along with me :)\n-Drew",
      "target_audience": [
        "Beginners at HTML & CSS to experienced developers.",
        "Go from absolute beginner to mastery in HTML email development!"
      ]
    },
    {
      "title": "React For The Rest Of Us",
      "url": "https://www.udemy.com/course/react-for-the-rest-of-us/",
      "bio": "Learn React JS to create Single Page Applications (SPA) using modern practices like Context, Reducer, Suspense and more",
      "objectives": [
        "The problem React solves and *why* we should use it (aside from \"because it's popular\")",
        "How to create Single Page Applications with React",
        "The ability to keep your code organized and manageable",
        "How to seamlessly pull real and dynamic data into your front-end"
      ],
      "course_content": {
        "Intro: The 10 Days of React": [
          "What Problem Does React Solve?",
          "Let's Start Using React",
          "Quick Note About CodePen Settings",
          "What Is JSX?",
          "Staying Organized: Components Using Other Components",
          "Using Props To Make a Component Flexible",
          "Looping Through An Array Within JSX",
          "State",
          "Handling Events (Like a Button Click etc...)",
          "Working With Forms",
          "What is UseEffect?"
        ],
        "Getting Ready To Create a Real World App": [
          "Text Editor",
          "Quick VS Code Settings",
          "Node.js",
          "Setting Up Our Workflow",
          "Important Note About NPM Packages and The Zip Files in This Course"
        ],
        "Let's Start Building Our App!": [
          "React & Next.js",
          "Starting Our Complex App",
          "Tip: Always Have The Current Year In The Footer",
          "Routing (Single Page Application)",
          "Quick Note About Rendering React Components To The DOM",
          "React Developer Tools",
          "Creating a Visual Studio Code Snippet",
          "Create a Reusable \"Container\" Component",
          "Quick Details & Composition"
        ],
        "Working With a Real Back-End": [
          "Choosing The Right Approach For You",
          "Getting a Database Ready",
          "Solution to Common Database Problem",
          "Note About a Common Misspelling",
          "Running The Back-End",
          "Optional Alternative: Simple Docker Back-End"
        ],
        "Connecting the Front-End and Back-End": [
          "Quick Note About Debugging",
          "Sending a Request From the Front-End",
          "Access Form Field Values with React",
          "Logging In",
          "Render Different Components Depending on State",
          "Persisting State (Local Storage)",
          "Conditional Homepage Content",
          "Create Post Screen",
          "View Single Post Screen",
          "Flash Messages"
        ],
        "Leveling Up The Way We Approach State": [
          "Context",
          "useReducer",
          "A Powerful Duo: useReducer & Context",
          "What is Immer?",
          "useEffect Practice"
        ],
        "Actually Building Our App": [
          "Profile Screen",
          "Load Posts by Author",
          "Make Single Post Screen Actually Load The Real Content",
          "Animated Loading Icon",
          "Cleaning Up After Ourselves (useEffect)",
          "Markdown in React"
        ],
        "Edit & Delete Post Actions": [
          "Adding Tooltips on Hover for Actions",
          "Edit (Update) Post Component",
          "Edit Post Continued",
          "Client-Side Form Validation",
          "Quick Attention To Detail Features",
          "Delete a Post"
        ],
        "Search Overlay": [
          "Setting Up Search Overlay",
          "React Transition Group (CSS Transition)",
          "Quick JSX Adjustment",
          "Waiting for User To Stop Typing",
          "Finishing Search (Part 1)",
          "Finishing Search (Part 2)"
        ],
        "Letting Users Follow Each Other": [
          "Follow User Feature",
          "Profile Followers and Following Tabs",
          "Homepage Post Feed"
        ]
      },
      "requirements": [
        "A basic understanding of HTML (e.g. \"p\" is for paragraph, \"h1\" is for headline, etc...)",
        "You could likely work through this course even without any JavaScript experience given the reasonable pace of lessons, but at least a tiny bit of JavaScript familiarity is recommended and will result in a much more enjoyable experience",
        "No CSS knowledge required (although it helps to understand that CSS is used to add style & design to a page)"
      ],
      "description": "Learn the world's most popular library for creating user interfaces!\nWhat makes this course different is we take the time to understand *why* we're doing what we're doing. We begin by asking an important question that so many other React courses skip entirely; What problem does React solve?\nOnce we understand what React is and isn't, we spend the remainder of the course together building the front-end for a real world social media app where you can post, follow other users and even hop into a live chatroom. Along the way we will:\nUnderstand what \"state\" is in React and how to bring our interfaces to life\nUse the modern \"hook\" approach with Function Components\nLeverage React Router to create a Single Page Application with shareable URLs\nSee the power of Context, Reducer, and Immer and create an ideal way of working with state\nRun code at the perfect moments by understanding the power of useEffect()\nUse async HTTP requests to communicate with APIs so that our app feels meaningful by working with real data\nDeploy our app up onto the web so you can share it with your friends and family\nThis course may be brand new, but this isn’t my first time teaching. I’ve led training sessions for Fortune 500 companies and I’ve already helped over 98,000 people on Udemy and received the following feedback:\n\"Brad definitely has some of the best techniques to embed the lesson into your mind… hands down these are the best tutorials I have had the opportunity to view.\"\n\"Presentation is concise without being tedious… you honestly feel that you have a thorough understanding of the subject.\"\n\"…[Brad] explained the process. Not memorize this or that, he explained the process. If you're looking to take a course to understand the foundations of creating websites, look no further.\"\nBecome highly valuable and relevant to the companies that are hiring front-end developers; in one convenient place alongside one instructor. If you're ready to begin building with React - I'll see you on the inside!",
      "target_audience": [
        "Anyone who wants to create user interfaces using the most popular and in-demand library in the world today."
      ]
    },
    {
      "title": "Ethereum and Solidity: The Complete Developer's Guide",
      "url": "https://www.udemy.com/course/ethereum-and-solidity-the-complete-developers-guide/",
      "bio": "Use Ethereum, Solidity, and Smart Contracts to build production-ready apps based on the blockchain",
      "objectives": [
        "Understand the why engineers would want to create an app with Ethereum",
        "Build compelling blockchain applications using the Ethereum Blockchain",
        "Design, test, and deploy secure Smart Contracts",
        "Learn the true purpose and capabilities of Ethereum and Solidity",
        "Use the latest version of Ethereum development tools (Web3 v1.0)",
        "See practical examples to comprehend what the blockchain and mining are"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Javascript and NPM",
        "A Mac, PC, or Linux Machine"
      ],
      "description": "Smart Contracts? They're here.  The Ethereum Blockchain?  Covered.  Solidity?  Yep!\nThere can be no understating it: Ethereum and Blockchain technology is the most disruptive force in years.  Companies cannot hire developers who understand blockchain technologies fast enough, but there are a tiny number of resources published to help you truly understand what blockchains are used for, let alone build apps with them.  That's the purpose of this course: to be the best resource online for learning about Ethereum, blockchains, and how to build apps with this new technology.\nThe development community is still figuring out the best way to use Ethereum in the creation of new and exciting apps.  I spent a tremendous amount of time to research and create best practice for interfacing with Ethereum from Javascript.  I can't overstate it enough; this course will show you the best and most easily repeatable patterns for creating production-ready apps with Ethereum.\n\n\nWhat tools and libraries are used?\nThe Ethereum tech ecosystem is in constant change.  Don't be fooled by other courses that mention how you'll learn a dozen different libraries!  Every library that you'll use with Ethereum breaks and is deprecated on a near-weekly basis!  Instead, this course will teach you how to assemble your own boilerplate package to develop, compile, and test Smart Contracts.  By learning the core technologies, you'll be prepared to adjust to Ethereum no matter how the ecosystem changes.\n\nWhat is Ethereum?\n\nEthereum is a cryptocurrency much like Bitcoin, and it has been heralded as Bitcoins successor.  Whereas Bitcoin currently has issues scaling with an increasing backlog of transactions, Ethereum is poised to surpass Bitcoin in performance, popularity, and value.  Ethereum was created to help developers like you create applications focused around transferring money or value from one party to another.\nWhat is Solidity?\nSolidity is a programming language for writing Smart Contracts.  Essentially, think of it as a way to control a bank account with code.  With Solidity, we can write applications that simulate a crowd funding campaign, a lottery, a loan, or any other type of financial instrument.  Don't be intimidated by learning 'another' programming language; Solidity is known to be quite similar to Javascript and exceptionally easy to pick up for anyone who has previous JS experience.  This course will give you all the tools you need to master Solidity.",
      "target_audience": [
        "Programmers looking to leverage blockchain technology for advanced apps",
        "Engineers who want to understand Ethereum and how to build apps with it"
      ]
    },
    {
      "title": "CSS3 and Bootstrap for Absolute Beginners : 4 courses in 1",
      "url": "https://www.udemy.com/course/learn-css-and-bootstrap-from-scratch/",
      "bio": "Learn CSS3, Bootstrap from Scratch using step by step process",
      "objectives": [
        "Will able to code responsive web using CSS",
        "Will able to code responsive web using Bootstrap",
        "Will be able to design & develop responsive web page"
      ],
      "course_content": {
        "CSS3 Basic": [
          "About the class - what you will need",
          "What is CSS and why we will use it",
          "What's new in CSS3",
          "CSS Selectors, properties and attributes",
          "ID Selectors",
          "Class Selectors",
          "Element Selectors",
          "All Selectors",
          "Internal style sheets",
          "External style sheets",
          "Inline styles"
        ],
        "CSS3 Advanced": [
          "The box model",
          "Adding color",
          "Working with fonts",
          "Background images",
          "Background images: Part 2",
          "Styling links",
          "Styling ID Tags",
          "Float & Clear",
          "Block and inline elements",
          "Positioning",
          "Building the Framework",
          "Setting the Styles",
          "Adding the elements"
        ],
        "Bootstrap Basics": [
          "What is Bootstrap?",
          "Downloading Bootstrap",
          "Adding Bootstrap in your site",
          "Creating the Navigation",
          "Creating the Navigation: Part 2",
          "Creating the Navigation: Part 3",
          "Creating containers",
          "Styling images",
          "Creating the footer",
          "Adding styled buttons"
        ],
        "Bootstrap Advanced": [
          "Adding Google Maps",
          "Adding an image carousel",
          "Adding a contact form",
          "Creating a complete web page: Part 1",
          "Creating a complete web page: Part 2",
          "Creating a complete web page: Part 3"
        ]
      },
      "requirements": [
        "HTML Knowledge required"
      ],
      "description": "By completing this course, you will become a master in  Web Design Technologies like CSS3 and Bootstrap and more. This course gives you hands-on and practical experience on detailed CSS3 and Bootstrap and more.\nContents of this tutorial #\n\n\nInteractive CSS3: Basics\nWhat is CSS? Why we need it?\nWhat's new in CSS3\nCSS Selectors, properties and attributes\nID Selectors\nClass Selectors\nElement Selectors\nAll Selectors\nInline style sheets\nExternal Style sheets\nInteractive CSS3: Advanced\nThe Box model\nAdding Color\nWorking with fonts\nBackground images\nStyling ID tags\nFloat and Clear\nBlock and inline elements\nPositioning\nAdding the elements\nInteractive Bootstrap: Basic\nWhy Bootstrap?\nDownloading Bootstrap\nAdding Bootstrap in your site\nCreating navigation\nStyling images\nCreating the footer\nAdding styled buttons\nInteractive Bootstrap: Advanced\nAdding Google Maps\nAdding an image carousel\nAdding a contact form\nCreating a complete web page: Part 1\nCreating a complete web page: Part 2\nCreating a complete web page: Part 3\nLearning CSS3 and Bootstrap is one of the fastest ways to improve your career, especially on web design and development.\nHope this course will be used as a helping hand for your prospective career. Please dig on free preview videos for more information.",
      "target_audience": [
        "Who wanna learn Web Design & Development",
        "Who wanna learn CSS3",
        "Who wanna learn Bootstrap"
      ]
    },
    {
      "title": "React Front To Back",
      "url": "https://www.udemy.com/course/modern-react-front-to-back/",
      "bio": "Learn Modern React 16.8+ Including Hooks, Context API, Full Stack MERN & Redux By Building Real Life Projects",
      "objectives": [
        "Learn Modern React By Building 3 Projects",
        "Flux Pattern Using Context & useContext/useReducer Hooks",
        "Learn Redux From Scratch",
        "Full Stack Development with MERN (MongoDB, Express, React, Node)",
        "Suitable For Both Beginners & Intermediate React Developers"
      ],
      "course_content": {
        "Course Introduction": [
          "Welcome To The Course",
          "What Is React?",
          "Setting Up Our Environment"
        ],
        "Project 1 Start [Github Finder] & React Setup": [
          "Project Introduction",
          "Code & Resources",
          "Create React App & File Structure",
          "CRA Cleanup & Prepare",
          "Intro To JSX & Fragments",
          "Expressions & Conditionals In JSX"
        ],
        "Components, State & Props": [
          "Components, Props & PropTypes",
          "Getting Started With Component State",
          "Lists & Passing State With Props",
          "Stateless Functional Components",
          "HTTP Requests & Updating State",
          "Spinner Component & Refactoring",
          "Environment Variables"
        ],
        "Events, Passing Props, React Router & More": [
          "Events & Search Component",
          "Passing Props Up & Search",
          "Clear Users From State",
          "Alert State & Component",
          "React Router Setup",
          "Single User Component & Data",
          "User Component UI & Layout",
          "Repos & RepoItem Component & Data"
        ],
        "Refactoring To Hooks & Context": [
          "Overview of Hooks & Context",
          "Search Class to Function With useState Hook",
          "User Class to Function With useEffect Hook",
          "App Class to Function Component",
          "Implementing Context",
          "Create Reducer & Actions",
          "Moving User State To Context",
          "Moving Repos State To Context",
          "Alert Context Workflow",
          "Home & NotFound Components",
          "Prepare & Deploy To Netlify"
        ],
        "Project 2 Start [Contact Keeper - MERN] & Express Server Setup": [
          "Project Introduction",
          "Code & Resources",
          "MongoDB Atlas Setup",
          "Dependencies & Basic Express Server",
          "Backend Routes",
          "Connect MongoDB To Our App"
        ],
        "Backend Users, Contacts & JWT Authentication": [
          "User Model & Validation",
          "Hash Passwords & Register Route",
          "Create & Respond With JSON Web Token",
          "Authenticate Route",
          "Auth Middleware & Protecting Routes",
          "Contact Model & Get Contacts Route",
          "Add Contact Route",
          "Contact Update & Delete Routes"
        ],
        "Client Side Setup & Contacts UI": [
          "Setup React & Concurrently",
          "Cleanup, Navbar & Router Setup",
          "Contacts Context & Global State",
          "Contacts & ContactItem Components",
          "ContactForm Component",
          "Delete Contact From UI",
          "Set & Clear Current Contact",
          "Edit & Update Contact Action",
          "Contact Filter Form & State",
          "Basic Add & Delete Animation"
        ],
        "React/Express Authentication": [
          "Auth Context & Initial State",
          "Register & Login Forms",
          "Alert Context, State & Component",
          "User Registration",
          "Load User & Set Token",
          "User Login",
          "Logout & Navbar",
          "PrivateRoute Component"
        ],
        "Contacts API Integration & Deploy": [
          "Add Contact",
          "Get & Clear Contacts",
          "Delete Contacts",
          "Update Contacts",
          "Prepare & Deploy To Heroku"
        ]
      },
      "requirements": [
        "You should know JavaScript pretty well, including ES6 (Arrow functions, promises, etc)"
      ],
      "description": "In this course you will learn to master React 16.8+ concepts including how to create a Flux pattern using the Context API with the useContext and useReducer hooks. We will also build a full stack MERN application with a custom Express backend API that uses JWT (JSON Web Token) for authentication. In addition, we will also create a project that uses Redux.\nHere are some of the things you will learn in this course:\nReact Fundamentals (Components, props, state, etc)\nReact Hooks (useState, useEffect, useContext, useReducer, useRef) in real projects\nContext API & App Level State\nMERN - MongoDB, Express React, Node\nBuild a Custom API With JWT Authentication\nRedux - Reducers, Actions, etc\nBasic Animation\nMuch More...",
      "target_audience": [
        "Developers looking to learn Modern React 16.8+ with hooks & context, MERN & Redux"
      ]
    },
    {
      "title": "Adobe Experience Manager | AEM Developer Masterclass",
      "url": "https://www.udemy.com/course/adobe-experience-manager-developer-masterclass/",
      "bio": "AEM developer course focused on components, templates, sling models and importance of JUnit in AEM as a cloud service.",
      "objectives": [
        "Learn the basics of Adobe Experience Manager",
        "Understand the architecture of AEM as a Cloud Service",
        "Create and Setup an AEM Development Environment",
        "Learn how to build an AEM project from the scratch and deploy it",
        "Important Concepts that an AEM developer must know before getting into development",
        "Build a component by understanding each concept layer by layer, that is dialogs, HTL(Sightly) and Clientlibs",
        "Learn to create a Sling Model for your component",
        "Create a JUnit test environment",
        "Create JUnit test classes for Sling Models",
        "Learn how to create and render multifield components",
        "Create Sling Models and JUnits for multifield components",
        "Learn about templates and its concepts",
        "Understand editable templates and build your own editable template and template type"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction"
        ],
        "Introduction to AEM": [
          "What is AEM?",
          "AEM Architecture",
          "AEM as a Cloud Service Architecture",
          "What Makes AEM as a Cloud different from other versions of AEM?"
        ],
        "AEM Setup": [
          "Setting up AEM"
        ],
        "Navigating through AEM Consoles": [
          "AEM Consoles",
          "AEM Navigator Extension"
        ],
        "AEM Project Setup": [
          "Creating an AEM project",
          "AEM Project Modules",
          "Import Project into Eclipse",
          "Debugging Core Bundle Issue"
        ],
        "Component and its Layers": [
          "Authoring Basics",
          "What is a Component?",
          "Creating a Component",
          "Layer 1 - Dialog and its concepts",
          "Dialog Resource Types",
          "Layer 2 - Sightly(HTL) and its concepts",
          "Sightly(HTL) Block Statements",
          "Layer 3 - Clientlibs Part One",
          "Layer 3 - Clientlibs Part Two",
          "Sling Resolution Concept"
        ],
        "Backing up your Work": [
          "Backing up your work - Package Manager and Visual Studio Connector"
        ],
        "Lab Exercise - 1": [
          "Lab Exercise - 1"
        ],
        "Sling Models and JUnit in AEM.": [
          "Layer 4 - Sling Model",
          "Sling Model Annotations",
          "JUnit and its importance in AEM",
          "Layer 5 - Creating a JUnit for a Sling Model Part One",
          "Layer 5 - Creating a JUnit for a Sling Model Part Two",
          "Lab Excercise - 2",
          "Code Reference - Github Repository Link"
        ],
        "Multifield Component": [
          "Creating a Multifield Component",
          "Sling Models for Multifield Component",
          "JUnit for Multifield Component",
          "Lab Exercise - 3"
        ]
      },
      "requirements": [
        "Basics of Java",
        "Basics of Javascript",
        "Basics of HTML",
        "Basics of CSS"
      ],
      "description": "Entering Adobe Experience Manager can be challenging as it involves grappling with numerous concepts, some of which may not be immediately relevant.\nFrom personal experience, navigating the breadth of AEM can feel directionless, with a lack of structured learning resources.\nConsequently, I took it upon myself to construct a meticulously curated course outline, focusing on essential concepts crucial for budding AEM developers.\nInitially designed to aid newcomers within my organization, the overwhelmingly positive impact it had on individuals prompted me to extend its availability by sharing it on Udemy.\n\n\nWhy this course?\nThe way I have crafted this course is by taking into consideration the most important concepts a developer would need to get into AEM development.\nThe direction and structure of this course is what makes it different and is meant to instill a lot of confidence for beginners in AEM development.\nMy assurance to you is that I will be there every step of the way to help you out throughout this course. Any question that you have can be posted in the course or you can message me directly. I will keep this course as updated as possible with continuous improvements.\nThe course structure is as follows:-\n\n\nUnderstanding AEM and AEM as a cloud service architecture\nComplete AEM setup including JDK and Maven\nBuilding an AEM project from the scratch and deploying to AEM\nLearning some authoring basics\nUnderstanding component and its most layers such as dialogs, sightly and clientlibs.\nUnderstanding Sling Resolution Concept with examples\nCreating Sling Models for components\nUnderstanding the importance of JUnit in AEM\nCreating a JUnit test environment and running test classes for your sling models\nTemplate and its concepts\nThree lab exercises to put all the concepts into use\nYou’ll learn AEM by doing, not watching.\nThe best way to learn a concept is to actually work on it. Taking that into consideration this course is made as interactive as possible with most of the course videos being hands on followed by lab exercises to test and reinforce what you’ve learned.\nPrerequisites of this course\nBasic knowledge of Java, HTML, JS and CSS\nAEM as a cloud sdk or jar file\nVersion of AEM\nThe latest version of AEM is used that is AEM as a cloud service\n\n\nWithout further ado lets begin our learning!\nCheers,\nNimith",
      "target_audience": [
        "Beginners who have never worked on AEM",
        "Good for intermediates as well",
        "Great for anyone who wants to get into AEM development"
      ]
    },
    {
      "title": "HTML5 - From Basics to Advanced level",
      "url": "https://www.udemy.com/course/html-basic-to-advanced/",
      "bio": "A beginner's guide for HTML5. Learn all concepts of HTML5 (with hands-on assignments and projects.)",
      "objectives": [
        "Learn to create simple web pages using HTML5",
        "Learn the basics tags of HTML",
        "To create Tables in HTML",
        "To create customizable forms and add form validation in HTML",
        "To include multimedia(audio,video, images) in your web page",
        "To create your own vector graphics using SVG",
        "4 projects to test your knowledge"
      ],
      "course_content": {
        "HTML Introduction": [
          "HTML - Introduction",
          "HTML - Code Editor Setup",
          "HTML - Structure of an HTML Document"
        ],
        "HTML Basics": [
          "HTML - Adding Heading in a Web page",
          "HTML - Adding Paragraph in a Web page",
          "HTML - Adding Images in a Web page",
          "HTML - Creating Ordered and Unordered Lists",
          "HTML - Adding Styles and Formatting HTML Elements",
          "HTML - Block and Inline Display Values",
          "HTML - Adding group styles using Class attribute",
          "HTML - Adding Hyperlinks in a Web page",
          "HTML - Using links to connect Web pages",
          "HTML - Uniquely Identify HTML Element by using ID attribute",
          "HTML - Mini-Project 1: Favorite Foods Web page",
          "HTML - Mini-Project 1: Solution"
        ],
        "New Features in HTML5": [
          "HTML - What makes HTML5 Better?",
          "HTML - New Elements & Attributes in HTML5",
          "HTML - Design Page Structure Using Semantic Elements",
          "HTML - New Semantic Elements: <details> and <summary>"
        ],
        "HTML Tables": [
          "HTML - Introduction to Tables",
          "HTML - Span table rows and columns",
          "HTML - Design layouts using Tables",
          "HTML Tables - Practice Problem 1",
          "HTML Tables - Practice Problem 1: Solution"
        ],
        "HTML Forms": [
          "HTML - Introduction to Forms",
          "HTML - Form Input Types",
          "HTML - Adding Styles to Forms",
          "HTML - Form Methods: GET and POST",
          "HTML - New Form Elements",
          "HTML - New Form Input Types",
          "HTML - New Form Input Attributes",
          "HTML - Form Validation",
          "HTML - Forms Practice Problem 1",
          "HTML - Forms Practice Problem 1 - Solution"
        ],
        "Embedding Multimedia": [
          "HTML - Adding Videos in a Webpage",
          "HTML - Adding Audio in a Webpage",
          "HTML - The <embed> element",
          "HTML - Embed YouTube Videos in a Web page"
        ],
        "Vector Graphics": [
          "HTML - Introduction to SVG",
          "HTML - Create circle using SVG",
          "HTML - Create a rectangle using SVG"
        ],
        "Final Project": [
          "HTML - Final Project"
        ]
      },
      "requirements": [
        "None. This course is for absolute beginners."
      ],
      "description": "UPDATE [01-Jan-2024]:  New Content Added - HTML5\n20 NEW videos added.\nNew Sections on:\nForms\nEmbedding Multimedia\nVector Graphics\nAnd a Final Project!\n\n\nAre you a beginner? Do you want to learn web development but do not have any idea where to start?\nIf yes, then this is THE perfect course for you. In the HTML course, you will learn all the concepts of HTML5, starting from its history to its modern structure. We will cover all the tags which are most widely used in the world of web development. Simultaneously, we will show you some of the best practices of code-writing in HTML5.\nHTML is short for 'HyperText Markup Language', which means HTML is only used to create a structure of the web page. But without some styling, no assignment or project will look good. Thus, we will cover some portion of the CSS required to create simple web pages.\nThis HTML course will be beneficial for all who are looking to start their career in the web development field and aspire to become a Frontend or Full-stack web developer. This HTML course will be the first step towards your goal to become a web developer. To continue this journey, we would recommend you complete the other languages and skills like CSS, JavaScript, ES6, React.\n\nCheck out our profile to find related courses that are designed just like this.\n\n\nPS: More lectures will be uploaded soon.\n\nWho's teaching you in this course?\nI am a Computer Science graduate highly rated instructor with a rating of 4.3 and more than 200k students on Udemy, I have been part of the corporate circle since my college days. In my early days, I was part of a startup team delivering production grid android apps. Currently, I am a lead developer at EdYoda. I’m responsible for the entire front-end development & integration with the back end. React, Python, Django is my areas of expertise. I have been delivering corporate training for Android, React, JavaScript, Python & Django. I have eyes for details & that makes me suited for delivering a finished product. I’m a fitness freak & working out is the favorite thing to do in my spare time.\nI want everyone to enjoy the learning process and I have shared my knowledge that will be helpful for you.\n\n\nWhy learn HTML?\nHTML is at the Core of the Internet. Learning HTML and CSS allows you to build your own websites, gives you a skill which you can use to improve work at your current Job, and also opens up an opportunity to transition into a Career in tech and :\n1. HTML is Easy to Learn and Use\n2. HTML is Free\n3. HTML is supported by all Browsers\n4. HTML is Basic of all Programming Languages\nand many more.\n\nGet started with the skill.\n\nEnroll now!! see you in class.\n\nHappy learning\nTeam Edyoda",
      "target_audience": [
        "Beginners who are new to Web Development",
        "Freshers who want to learn HTML5 from scratch",
        "Web Developers who wish to brush up their knowledge of HTML5"
      ]
    },
    {
      "title": "Learn CSS - For Beginners",
      "url": "https://www.udemy.com/course/learn-css-for-beginners/",
      "bio": "Learn to Work with Cascading Style Sheets",
      "objectives": [
        "Parts of a CSS Rule",
        "CSS DIVS",
        "CSS Selectors, Classes, Spans",
        "CSS Text Properties",
        "CSS Display & Position Properties",
        "CSS Backgrounds",
        "CSS Positioning (Static, Relative, Absolute, Fixed, Float)",
        "Styling Links",
        "CSS Tables"
      ],
      "course_content": {
        "CSS Development": [
          "Introduction to CSS",
          "Parts of a CSS Rule",
          "Types of CSS Rules",
          "CSS - Color Names and Codes",
          "CSS Classes and Spans",
          "CSS Divisions - DIVs",
          "CSS IDs",
          "CSS Margins",
          "CSS Padding",
          "CSS Text Properties",
          "CSS Font Properties",
          "CSS Borders",
          "CSS Backgrounds",
          "CSS Transparency",
          "CSS Text on Top of Images",
          "CSS Width and Height Properties",
          "CSS Display Properties",
          "CSS Static Positioning",
          "CSS Relative Positioning",
          "CSS Absolute Positioning",
          "CSS Fixed Positioning",
          "CSS Float Property",
          "CSS Clear Property",
          "CSS Z-Index",
          "CSS Styling Links",
          "CSS Tables",
          "CSS Project - Introduction",
          "CSS Project - CSS Rules",
          "CSS Project - Navigation Rules",
          "CSS Project - Responsive CSS",
          "CSS Project - Page Elements"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Course: Learn CSS - For Beginners\nLearn to Work with Cascading Style Sheets\nStudents learn to harness the true power of front-end development using CSS (Cascading Style Sheets). Through comprehensive, hands-on exercises, students will develop stylish, responsive web layouts using CSS properties and style definitions.\nWe start with basic concepts such as the parts of a CSS rule and working with Classes, Divisions and IDs. Next we explore an intensive collection of style definition, from working with text, backgrounds and transparency, right to CSS positioning, link styling, and popular layout development techniques.\nStudents will have the opportunity to work on several projects to master the limitless potential of this powerful language.\nWhat you'll learn\nParts of a CSS Rule\nCSS DIVS\nCSS Selectors, Classes, Spans\nCSS Text Properties\nCSS Display & Position Properties\nCSS Backgrounds\nCSS Positioning (Static, Relative, Absolute, Fixed, Float)\nStyling Links\nCSS Tables\nKey Concepts:\nIntro to CSS\nParts of a CSS Rule\nTypes of CSS Rules\nCSS - Color Names and Codes\nCSS Classes and Spans\nCSS Divisions - DIVs\nCSS IDs\nCSS Margins\nCSS Padding\nCSS Font Properties\nCSS Borders\nCSS Backgrounds\nCSS Transparency\nCSS Text on Top of Images\nCSS Width and Height Properties\nCSS Display Properties\nCSS Static Positioning\nCSS Relative Positioning\nCSS Absolute Positioning\nCSS Fixed Positioning\nCSS Float Property\nCSS Clear Property\nCSS Z-Index\nCSS Styling Links\nCSS Tables\nCSS Project - Introduction\nCSS Project - CSS Rules\nCSS Project - Navigation Rules\nCSS Project - Responsive CSS\nCSS Project - Page Elements",
      "target_audience": [
        "Students who want to learn how to Develop Web Pages using CSS (Cascading Style Sheets)"
      ]
    },
    {
      "title": "Docker for Developers and DevOps",
      "url": "https://www.udemy.com/course/docker-for-developers/",
      "bio": "Use Docker to streamline your developer workflow and build out a awesome CI/CD pipeline",
      "objectives": [
        "Write Dockerfiles",
        "Work with the Docker Toolbox",
        "Work with the Docker Machine",
        "Use Docker Compose to bring up multiple containers",
        "Work with Docker Kinematic",
        "Push images to Docker Hub",
        "Pull images from a Docker Registery",
        "Push stacks of servers to Docker Hub"
      ],
      "course_content": {
        "Course Overview": [
          "Course Overview",
          "Using The Exercise Files"
        ],
        "Why Use Docker": [
          "Introduction",
          "What is Docker?",
          "Docker Benefits for Developers",
          "Docker Tools",
          "Docker in Action",
          "Summary"
        ],
        "Setting Up Your Development Environment": [
          "Introduction",
          "Installing Docker Toolbox on Windows",
          "Installing Docker Toolbox on Mac",
          "Getting Started with Docker Kitematic",
          "Docker in Action",
          "Summary"
        ],
        "** Docker 1.3 ** Installation and Updates - Docker Native For Mac/Windows/Server": [
          "Introduction",
          "Docker for Windows",
          "Docker for Windows Beta - Native windows containers",
          "Docker For Mac",
          "Installing Docker on Windows Server 2016",
          "Installing Docker on Linux"
        ],
        "Using Docker Machine and Docker Client": [
          "Introduction",
          "Getting Started with Docker Machine",
          "Docker Machine In Action Mac",
          "Docker Machine In Action Windows",
          "Getting Started With Docker Client - Mac",
          "Docker Client In Action - Windows",
          "Docker Commands Review",
          "Summary"
        ],
        "Adding Your Source Code into a Container": [
          "Introduction",
          "The Layered File System",
          "Containers and Volumes",
          "Source Code. Volumes, and Containers",
          "DEMO: Add your source code to a node.js container.",
          "DEMO: Adding Source Code to a ASP.Net Application",
          "Removing Containers and Volumes",
          "Summary"
        ],
        "Building Custom Images with Dockerfile": [
          "Introduction",
          "Getting Started With Dockerfile",
          "DEMO: How to Build a custom Node.JS Docker File",
          "DEMO: Build a custom Node.JS image and Container",
          "DEMO: Building a custom Docker file for asp.net and dotnet core",
          "DEMO: Build a custom dotnet core image",
          "Publishing am Image to Docker Hub",
          "Summary"
        ],
        "Communicating Between Docker Containers": [
          "Introduction",
          "Getting Started with Container Linking",
          "Linking Containers By Name",
          "Linking a Node.js Container with a MongoDB cotainer",
          "Getting Started with Container Networks",
          "Demo: Container Networks In Action",
          "Linking Multiple Containers",
          "Summary"
        ],
        "Managing Containers with Docker Compose": [
          "Introduction",
          "Getting Started With Docker Compose",
          "Getting Familiar with the docker-compose.yml file",
          "Docker Compose Commands",
          "Demo: Docker Compose in Action- Mac",
          "Demo: Docker Compose In Action - Windows",
          "Setting Up You Development Environmental Services",
          "Creating a custom docker-compose.yml",
          "Managing Development Environmental Services",
          "Summary"
        ],
        "Running You Containers In The Cloud": [
          "Introduction",
          "Getting Started With Docker Cloud",
          "Linking To A Cloud Provider",
          "Deploying a Node in Docker Hub",
          "Creating a Stack in Docker Cloud",
          "Managing your stacks in Docker Cloud",
          "Summary"
        ]
      },
      "requirements": [
        "Students are not required to know any additional material"
      ],
      "description": "Hello,\n\n\nWhether or not you’re a Developer, anyone who  works with code or servers will boost their productivity with Docker's open app-building platform. In this course you will learn how to use the Docker products including:\n\n1) Docker Toolbox\n2) Docker Client\n3) Docker Machine\n4) Docker Compose\n4) Kitematic\n5) Docker Cloud\nIn addition, this course will cover how to work with images and containers, how to get your project running, and how to push it to the cloud, among other important lessons.\nWe first review what Docker is and why it is important.  We then walk through a step-by-step guide for both Windows and Mac to install all the required components you are going to need for the class.\nWith your computer set up, we dive in the Docker Toolbox, the Docker Machine and Docker Client commands, and you'll quickly appreciate  how all these components help you in your development environment.\nNext, you'll learn to work with images, as well as Docker Containers, and how to link and manage them. After that, you'll discover how to get a fully-functional development environment up and running, both locally and in the cloud! By the end of this course, you'll be able to increase your productivity and create lightweight apps that run identically, no matter the environment.",
      "target_audience": [
        "Developers looking to increase their productivity",
        "Developers looking to understand how Docker works",
        "Beginning and advanced Docker users looking to improve their skills",
        "Network admins looking to break into the world of Docker development"
      ]
    },
    {
      "title": "Asp.Net MVC 5 - Ultimate Guide - In depth & Sample Project",
      "url": "https://www.udemy.com/course/complete-aspnet-mvc-5-and-aspnet-core-mvc-course-indepth/",
      "bio": "Asp.Net Mvc, Asp.Net Core Mvc, Repository Pattern, Web Api, Asp.Net Identity, Entity Framework",
      "objectives": [
        "Confidently speak about MVC Architecture",
        "Crack Asp .Net Mvc job interviews easier",
        "Solve most common bugs and issues in Asp .Net Mvc applications",
        "Working with Razor view engine, code like Pro",
        "Secure Angular applications using the most-recommended - Asp .Net Identity",
        "Interact with server using AJAX and build RESTful Services using Web API",
        "Create real-world apps using Asp .Net Mvc 5",
        "Create Asp .Net Mvc App Folder Structure with industry best practices like a Pro"
      ],
      "course_content": {
        "Introduction & Basics of Asp.Net Mvc (Theory only)": [
          "Course Introduction",
          "Intro to ASP.NET MVC & Understanding MVC Architecture",
          "Intro to Controllers",
          "Intro to Action Methods",
          "Section Cheat Sheet (PPT)"
        ],
        "Additional Basics of Asp.Net Mvc (Theory only)": [
          "Where to Start Practical",
          "Where to download the Source Code",
          "Where to Download Course Material",
          "Asp.Net Mvc (vs) Asp.Net Web Forms",
          "Versions of Asp.Net Mvc",
          "Folder Structure of MVC App",
          "NuGet Packages of ASP.NET MVC",
          "Section Cheat Sheet (PPT)"
        ],
        "Getting Started [Practical Starts Here]": [
          "Installing Visual Studio",
          "Creating First MVC App - Part 1",
          "Creating First MVC App - Part 2"
        ],
        "ActionResult": [
          "Intro to ActionResult",
          "ContentResult",
          "FileResult",
          "RedirectResult",
          "RedirectToRouteResult",
          "Section Cheat Sheet (PPT)",
          "ActionResult"
        ],
        "Razor View Engine": [
          "Intro to View Engines",
          "Razor Expressions",
          "Razor Code Blocks",
          "Razor If",
          "Razor For",
          "Razor Foreach",
          "Section Cheat Sheet (PPT)",
          "Razor"
        ],
        "HTTP": [
          "HTTP, HTTP Status Codes, HTTP Methods, HTTP Headers",
          "Request Object",
          "Response Object",
          "Section Cheat Sheet (PPT)"
        ],
        "Shared Views": [
          "Working with Shared Views",
          "Passing Data Dynamically to Shared View",
          "Section Cheat Sheet (PPT)"
        ],
        "Layout Views & Partial Views": [
          "Creating Layout Views",
          "Sharing Data from View to Layout View",
          "Creating SideBar in Layout View",
          "Sections in Layout Views",
          "_ViewStart.cshtml",
          "Multiple Layout Views",
          "Partial Views",
          "Section Cheat Sheet (PPT)"
        ],
        "Conventional URL Routing": [
          "Intro to URL Routing",
          "Understanding Default Routing",
          "ID Parameter",
          "ID as String Parameter",
          "Resolving Conflicts Between Routes",
          "Route Constraints",
          "Section Cheat Sheet (PPT)"
        ],
        "Attribute Routing": [
          "Introduction to Attribute Routing",
          "Attribute Routing Example",
          "Section Cheat Sheet (PPT)"
        ]
      },
      "requirements": [
        "Good enough at C#.NET OOP concepts such as Classes, Objects, Inheritance, Interfaces, Async/await and Lambda Expressions",
        "Basic Knowledge of HTML, CSS, JavaScript, jQuery",
        "Bootstrap knowledge is must in order to understand UI part of this course",
        "Basic knowledge of design patterns",
        "Ado .Net"
      ],
      "description": "Asp .Net MVC 5 - Ultimate Guide - Indepth & Sample Project\nTHE BEST SELLING Asp .Net MVC COURSE ON UDEMY - OVER 320 REVIEWS - 5 STARS!\n\n\nLEARN these HOT TOPICS in Asp .Net Mvc 5:\nControllers and Action Methods\nUnderstand different types of ActionResult\nMaster the Razor View Engine and use it like a Pro\nRead model collections to produce grids\nHandle HTTP request and HTTP response headers\nCreate Layout views (for master pages)\nHandle different issues of URL routing\nEnable the NEW Attribute routing\nInteract with database using EntityFramework DbFirst Approach and CodeFirst Approach\nUpdate database using CodeFirst Migrations, in case of CodeFirst Approach\nCreate and use HTML Helpers for development of various Forms with all Validations\nCreate User Authentication and Security using Asp .Net Identity\nCreate and apply various types of Filters to Controllers and Action Methods\nHandle Cross-Site Request Forgery (CSRF)\nHandle exceptions with real-time best practices\nCreate N-Tier architecture with Service Layer and Repository Layer\nShare data using ViewBag, TempData and ViewData\nCreate REST-API End Points using Asp .NET Web API\nREAL-TIME PROJECTS\nA mini project, \"Products Management\", where the admin can create categories, brands and products with REST API.\n\n\n\n\nPOTENTIAL BENEFITS OF THIS COURSE\nBy the end of this course, you will create all of the source code for a complete Asp .Net Mvc real-time project, with all features like page navigation with routing, CRUD operations with real databases, User registration and login with Asp .Net Identity, handle other aspects such as filters, layout views, validations, exception handling.\nYou will type in every line of code with me in the videos ... all from scratch.\nI explain every line of asp .net mvc code that we create. So this isn't a copy/paste exercise, you will have a full understanding of the code.\nI am a RESPONSIVE INSTRUCTOR. post your questions and I will RESPOND in 24 hours, ASAP.\nAll source code is available for download\nPDF's of all lectures are available for download.\nEnglish captions are available.\n\n\n\n\nSample of the reviews:\nI had first purchased this course around 3 yrs back. I found the content to be quite good, but suggested a few improvements in the delivery. I revisited the course to refresh my skills a few months back and found that Harsha had covered up on most of the areas of improvement which I had noticed earlier. The content and delivery is even more refined now, Great course for serious learners. No distractions and ever focused. Content is great and organized very well. Though it's lengthy, covering even a part of this course will give you years of experience in the subject. The experience and advanced skill level of Harsha shows throughout. I never was able to finish the whole course, but half way through itself I had developed the required confidence. GREAT EFFORT HARSHA. And most importantly Harsha is all ears to your doubts and questions. So I am happy that he guided me with timely advice whenever I reached out to him via Udemy's platform. - Adil Azeez\n★★★★★\nI decided to give a 5-star rating because towards the end of the course, the Teacher presents an example of a professional level project where best practices are applied in ASP .NET MVC programming. As far as I'm concerned, this made me completely change my mind in how to deal with a new MVC project. Thank you so much Harsha !!! - Roberto Faelli\n★★★★★\nThis is the best course for learning ASP .NET MVC out there. Hands down!. - Anurag Anand\n★★★★★\nI feel proud to have such knowledge-full person as instructor. Everything is so good. - Mitul Shah\n★★★★★\ngo for it!! one of the best courses available for ASP .NET MVC. never felt so confident before. An in depth explanation has been provided for each and every topic. It is comprehensive and also engaging. - Nikilesh S.V. Srinivas\n★★★★★\nthank you sir Harsha for providing a very creative lectures. i have see a lot of lectures on mvc but i not understand properly and this lectures is really very helpful for beginners. - S Qammer Abbas\n★★★★★\nThis is an incredible course, i have a lot of experience with web forms and always wanted to move to MVC but didn't have the confidence to do, but this course answer all my questions about MVC, it explains everything how it works, all the functionalities and in the end you create a project with everything learned. It's a lot o content that make you really understand how asp .net MVC works, i recommend to everyone in Udemy. - Marcos Paulo de Melo Canova\n★★★★★\nI have been trying to learn MVC Asp dot net for 3 years. I attended many courses unfortunately no course has been explained me so well to understand MVC. I highly recommend this course if you want to learn MVC from A-Z and start making your next application in MVC. I am very happy to taken this course, and I am also taking another course of Harsh Angular JS. My Best Wishes to this instructor for making such a nice course. 3 Cheers! - imtiaz Iqbal\n\n\n\n\nNo Risk – Money-Back Guarantee\nFinally, there is no risk. You can preview first few lectures of the course for free. Once you purchase the course, if for some reason you are not happy with the course, Udemy offers a 30-day money back guarantee.\nSo you have nothing to lose, sign up for this course and learn how to build Angular Projects from scratch!\n\n\nKey Points about this Course:\nWe don't use the ready-made project template called \"MVC\" in Visual Studio, but we develop (create) everything from the scratch with \"Empty\" project template; so that you will be able to understand each and every aspect of Asp .Net Mvc, clearly, without confusion.\nAuthentication is shown with Asp .Net Identity development from scratch\nDatabase connections are shown with SQL Server\nAll the concepts are progressively integrated into a sample mini project called \"Product Manager\", which includes all essential features that a real-time project should have.\nAll the concepts explained in both theoretically and practically.\nWe use Bootstrap from the beginning of the course.\nWe use Windows O/S, Visual Studio 2017 / 2019, C#, Entity Framework, Bootstrap.\n\n\nThis course is offered by Web Academy by Harsha Vardhan. Any watermark stating \"Harsha Web University\" is from our old branding and does not represent an academic institution. This course is for educational purposes only and is not affiliated with any university or degree-granting institution.",
      "target_audience": [
        "Anyone who wants to learn MVC",
        "Both beginners and experienced MVC developers"
      ]
    },
    {
      "title": "Regular Expressions for Beginners - Universal",
      "url": "https://www.udemy.com/course/regular-expressions-for-beginners-universal/",
      "bio": "Learn to use Regular Expressions (Regex) in all programming languages and tools the easy way with Edwin Diaz",
      "objectives": [
        "At the end of this course students will know how to use Regular Expressions",
        "At the end of this course students will be able to use Regular Expressions in any programming language",
        "At the the of this course students will be able to understand Regex syntax when they see it"
      ],
      "course_content": {
        "My First Section": [
          "Introduction",
          "Reference files",
          "Tools",
          "What are regular expressions",
          "Summary 1"
        ],
        "Characters": [
          "Literal Characters",
          "Metacharacters",
          "Escaping",
          "More characters",
          "Summary 2"
        ],
        "Sets": [
          "Ranges",
          "Negation",
          "Shorthands",
          "Summary 3"
        ],
        "Repetition": [
          "Quantifiers",
          "Controlling repetition",
          "Lazy / reluctant quantifier",
          "Summary 4"
        ],
        "Grouping": [
          "Grouping",
          "Alternation",
          "Nesting with alternation",
          "Summary 5"
        ],
        "Anchors and boundaries": [
          "Anchors",
          "Word boundaries",
          "Summary 6"
        ],
        "Backreferencing, assertions and lookaheads": [
          "Backreferences / Capturing",
          "Non-capturing group",
          "Positive and negative assertions",
          "Positive and negative lookahead",
          "Summary 7"
        ],
        "Unicode - Multi Language Symbol Support": [
          "Intro",
          "Some examples"
        ],
        "Regular Expressions Examples": [
          "Postal code / zip codes",
          "Password Validation",
          "Dates",
          "Conclusion"
        ]
      },
      "requirements": [
        "Student should be familiar with programming concepts",
        "Students should have an internet connection",
        "Willingness to follow through with the lectures until the end"
      ],
      "description": "What this course is?\nThis course is universal, meaning that the regular expression material you learn here will be applicable in most if not all regular expression engines.\nOf course there will be some variations when we are implementing regular expressions in different engines, let's say PHP over Javascript, but the core fundamentals and how you do regular expression stays the same everywhere.\nRegular expressions are also called Regex, Regexp or Regexes, so we will be probably be using this vocabulary since it's easier to pronounce and is what we commonly use in the programming community.\nWe will learn how to implement regular expressions in Javascript and PHP but these lectures are done for demonstration on how Regexes are used in programming languages.\nWho this course is for?\nNew developers that want to learn regular expressions.\nFrustrated developers who had issues learning it before.\nAny developer who is serious about their programming career.\nSome information about the course structure!\nWe will start slow with the most basic regular expression functionality, like searching and matching, learning what each of the symbols do and how to use them to do what we need.\nAfter we learn the most basic things, we will start with more complex operations and real worlds solutions. I always try keep the lectures short so that the material is easy to digest.\nAt the end of every section we are going to have some practice code so that we can re-enforce everything for that section.\nSee you inside, let's do this!",
      "target_audience": [
        "Any developer or programmer that wants to create more powerful applications needs to take this course",
        "Students looking for an easy way to learn regular expressions should take this course",
        "Students who had a hard time learning Regular Expressions before should take this course"
      ]
    },
    {
      "title": "The HTML5 Course: Basic to Advanced",
      "url": "https://www.udemy.com/course/interactive-html-course/",
      "bio": "Learn HTML5: Interactive way, step by step and easy to follow. Great for Absolute Beginners!!",
      "objectives": [
        "Will be proficient on HTML5 from Basic to Advanced",
        "Will be able to create amazing site using HTML5",
        "Will be able to work with Audio and Video in HTML5",
        "Hands on experience on Data Input and Buttons",
        "Hands on experience on Absolute and Relative Links",
        "Hands on experience on Tags and Lists",
        "Basics and Advanced Concepts on CSS",
        "Basics and Advanced Concepts of jQuery"
      ],
      "course_content": {},
      "requirements": [
        "No prior technical knowledge required"
      ],
      "description": "Our students testimonials regarding this course --\n\"Enjoyable, easy to learn and concepts are cleared to the point\" -- Shivam Agarwal\n\"A helpful and interesting introduction to HTML5 for complete beginners such as myself. The course contained useful information with references to websites, that could assist in the building of your own website.\" -- Ian Walker\n\"Great for Beginner\" -- Timilehin A. Omotoyinbo\n\"I find this course helpful help me better to understand the basic of HTML 5.\" -- Dejan Atanasovski\n\"very extensive and clearly presented.\" -- Thando Mtshali\n\"Yep. IT perfectly suits my expectation. Good course actually. Well done instructor and thank you very much for this wonderful HTML course.\" -- Praveen Kumar\n\"Great explanations for everything and easy to follow along!\" -- Lori robinson\nBy completion this course, you will be able to read and write front end web development code using HTML5. This course  gives you hands on and practical experience on detailed HTML5. Contents of this tutorial #\nIntroduction to HTML\nMaking your first HTML page\nTools to create HTML files\nParagraph Tags\nBreak Tags\nHeader Tags\nBold and Italic Tags\nOrdered and unordered Lists\nAdding an iFrame\nAdding an iFrame: Part 2\nWhat is possible with a form using on HTML knowledge\nDefining the form\nText fields and text areas\nRadio buttons and check buttons\nData input and buttons\nProper file structure\nCode commenting\nMeta tags",
      "target_audience": [
        "Who wanna learn HTML5",
        "Who wanna create beautiful site using HTML5",
        "Who wanna learn CSS3",
        "Who wanna learn jQuery"
      ]
    },
    {
      "title": "Python eCommerce | Build a Django eCommerce Web Application",
      "url": "https://www.udemy.com/course/python-ecommerce-build-a-django-ecommerce-web-application/",
      "bio": "Launch your business by learning to build your own eCommerce app step-by-step.",
      "objectives": [
        "Learn the ins and outs of Python's popular library Django",
        "Django version 1.11",
        "Payment Integration using Stripe",
        "Email Marketing Integration using Mailchimp",
        "Going Live using the host Heroku",
        "Adding a custom domain and implement HTTPs (using Let's Encrypt)",
        "Learn Bootstrap Version 4 basics (including Django Integration)",
        "jQuery Fast Track Section (learn the basics)",
        "Build a REST API",
        "Build custom analytics",
        "Create a custom user model",
        "Guest Checkout",
        "Integrate Email for notifications",
        "Learning how to use Signals in Django",
        "Build an internal Search Engine",
        "Learn AJAX and Asynchronous Programing with Django and Javascript (jQuery)",
        "Digital item sales and downloads"
      ],
      "course_content": {},
      "requirements": [
        "Python Experience is Recommended (check out our 30 Days of Python Course)",
        "A laptop or PC made after 2009 (probably)",
        "Mac, Linux, or Windows 8 & Above"
      ],
      "description": "What used to take a big team of people can now be accomplished by you and you alone. It's all thanks to the massive improvements to what programming languages can do. Python is the perfect beginner's starting point because it's simple to understand while being powerful enough for experts to build self-driving cars and AI systems.\nThis course leverages Python to build a fully functioning eCommerce website and application using the Django framework.\nWhy Django and why now?\nDjango is built for speed. Both in functionality and in development time.\nSome of the top tech companies are build on Django: Instagram and Pinterest to name a couple.\nDjango is written in Python and therefore it helps you further master Python.\nHuge support from developers around the world. Run into an issue with something in python or Django? A quick google search will likely yield an answer (if not, I'll try to help you out too)\nPython is the easiest to start with AND it's made for the pros (such as building Artificial Intelligence)\nWhy eCommerce? Why not social networking?\nI do have course called Tweetme that covers building twitter-like service. That course will show you how to create a social network step-by-step. I do encourage you to take that course but I'll say this course should be taken first for a key reason...\nValidation. Proving any project is worth your effort and time can be very challenging. Proving that a social network is viable is also VERY VERY challenging. eCommerce, on the other hand, it's very clear if your project is working: it's either making sales or it's not.\nHere's the thing. I want you to build a super successful project and change your life as a result of that project. I believe the only way you can do that is by committing yourself to working through projects from start to finish. This project is the result of everything I've ever done and learned in programming. I show you step-by-step to help you learn the context of how all of this is used. Along the way, I'll explain the WHY behind the HOW.\nIt's an amazingly exciting time to get into coding/programming/software development/technology! I hope you join me.\nThank you,\nJustin",
      "target_audience": [
        "Anyone who's ready to build their very own eCommerce web app",
        "Anyone who wants to learn how to build a real, comprehensive project.",
        "Entrepreneurs looking to learn the skills needed to build an online business",
        "Anyone who wants to learn Django and/or advance their Python Knowledge",
        "Anyone who wants to improve their Django skills"
      ]
    },
    {
      "title": "Django 2.2 & Python | The Ultimate Web Development Bootcamp",
      "url": "https://www.udemy.com/course/the-ultimate-beginners-guide-to-django-django-2-python-web-dev-website/",
      "bio": "Build three complete websites, learn back and front-end web development, and publish your site online with DigitalOcean",
      "objectives": [
        "Build any website you want",
        "Create a Product Hunt clone",
        "Understand how using frameworks like Django will save you a ton of time in web development",
        "Create your own personal portfolio site to showcase your projects to potential employers",
        "Build fully functional websites for your startup or business",
        "Improve your web development and coding resume",
        "Publish your website online with DigitalOcean (a popular web hosting provider)",
        "Create beautifully styled websites using Bootstrap (a front-end framework that simplifies web design)",
        "Be able to connect Django to databases like SQLite and Postgres to help store and track data",
        "Understand Django basics like Function and Class Based Views, URL routing, Models, Gunicorn and much more!"
      ],
      "course_content": {},
      "requirements": [
        "You will need a computer and an interest in learning Django!",
        "Some experience with coding in any language is a plus, but not required"
      ],
      "description": "Have you ever wanted to create a Web application but didn't know where to start? Have you previously tried to learn Django but got fed up with incomplete YouTube videos and poorly written tutorials? Or are you looking to move your code from Django 1 to Django 2?\nTHEN THIS IS THE COURSE FOR YOU!\nIn my Django course, I will walk you through the Django web framework from beginning to end! I'm a self-taught programmer so I know what it feels like to start from scratch. I care about your learning, but even more importantly... I care about you!\nWhat is Django?\nDjango is an open-source web framework that is written in Python. It was created about twelve years ago, but in April 2019 Django 2.2 was released with a whole new set of features and capabilities!\nDjango is an amazing framework for web developers because it provides the infrastructure required for database-driven websites that have user authentication, content administration, contact forms, file uploads, and more. Instead of creating all of these features from scratch, you can use the Django framework and utilize these components that are already built, and focus your time on developing your web app instead.\nIf you're going to be working with Python, especially for web applications or web design, you'll want to learn the Django framework. It will save you a ton of time!\n\nContents and Overview\nI believe we learn best by doing. So, throughout this course you'll be presented with coding quizzes and challenges in order for you to test what you just learned. This format will allow you to actually learn Django and not just follow along like a robot ;)\nWe will use Python in this course, so if you have never used Python before, we will start with a python refresher to get you up to speed (no other python experience required).\nWe will then dive into making three complete websites:\n1 - Word-Counting Website: A simple website to count the most frequently used words in a piece of text. You will learn how to:\nInstall Django\nCreate a new project\nWork with Django's URL routing\nSubmit and handle HTML form data\n2 - Personal Portfolio: Create your own portfolio to show to potential employers showing off your resume, previous projects, and a fully functional blog. You will learn how to:\nAdd apps to your project\nWork with databases including SQLite and Postgres\nAccess the admin panel\nCreate super users\nCreate virtual environments\nMake a responsive website with Bootstrap 4\nWork with static and media files\n3 - Product Hunt Clone: Make a simplified version of the awesome website to share new tech products. You will learn how to:\nWork with the authentication system (sign up, login, logout)\nReuse templates\nCreate model relationships\nAdd icons via Iconic\n\n\nI will also walk you through Git, which is an awesome tool for developers that allows you to create multiple versions of your code. I'll explain why this is useful and help you understand why you should use it.\nAdditionally, I will show you how to take the projects that you made in this course and publish them live on the web through a Virtual Private Server. Like I said, I will take you from the very beginning to the very end!\nCourse material is regularly refreshed to include all of the newest updates and information, and since you’re granted lifetime access upon registering, you can rely on this course to keep your Django skills on the cutting edge. Additionally, I have made this course downloadable, so you can work through the class offline, making it as convenient as possible for you! Most instructors won't allow this, but I want you to be able to enjoy this course in whichever way is best for you :)\n\nDon't waste your time scouring the internet and trying to piece together how to learn Django on your own. Invest in yourself, and allow me to teach you Django while having fun.\nDon't take my word for it. See what my other students are saying!\n\n\"Amazing course to get into Django and web development! Nick is really engaging and enthusiastic and a joy to learn from!! He explains concepts clearly and teaches in ways that allow the student to easily recall the information.\" - Evv Erb\n\"I now work as a developer creating internal projects for our support team. Thanks!\" - Johnathan\n\"Truly understands the concept of starting from the beginning. Great teacher and presenter.\" - Earl McAndrew\n\"I really loved the course. By going through the course, I actually made my own website and deployed it on a server.\" - Mrinal Shrivastava\n\"After buying 3 courses about django in Udemy. This is the only one I'm picking something up. Recommended.\" - Ruben\n\"Amazing teacher, very good and clear explanations very nice and helpful real life examples and projects\" - Itay Galea\n\"Nick really goes the extra mile to ensuring a fantastic learning experience from beginning to end. I would recommend this course to anyone looking to get their python apps online quick and easy. You just became my favorite instructor :)\" - Nur Roberts\nFeel free to take a free preview of this course to see if it's a good fit for you. I am so confident that you will love my course, that I even offer a 100% 30-day money-back guarantee. You have nothing to lose, so come join me and let's get started!",
      "target_audience": [
        "Anyone looking for a great beginner's guide to Django",
        "Python developers that want to learn web development with Django"
      ]
    },
    {
      "title": "Crack the Code: Mastering the OWASP Top 10 version 2021-2025",
      "url": "https://www.udemy.com/course/introduction-to-the-owasp-top-10-2021/",
      "bio": "From Theory to Practice: Real-World Tactics for Securing Modern Web Applications",
      "objectives": [
        "Some of the best protection strategies that help avoid each OWASP Top 10 risk from materializing",
        "The main challenges that cause each OWASP Top 10 risk",
        "Examples of good and bad code for each OWASP Top 10 risk using pseudocode",
        "Definition of each of the OWASP Top 10 risk",
        "What are the key information security concepts required to understand each OWASP Top 10 risk",
        "What are the OWASP Top 10 risks and how this list gets periodically updated",
        "What is the OWASP Foundation and how you can be part of this open-source community"
      ],
      "course_content": {
        "Introduction to the OWASP Top 10 - 2021": [
          "Introduction",
          "Making of the OWASP Top 10 – 2021",
          "Risk A1: Broken Access Control",
          "Access Control Practice Test",
          "Risk A2: Cryptographic Failures",
          "Advanced Encryption Standard (AES) Security",
          "Risk A3: Injection",
          "Many Forms of Injection",
          "Risk A4: Insecure Design",
          "Insecure Design Practice Test",
          "Risk A5: Security Misconfiguration",
          "Misconfiguration in Application Security",
          "Risk A6: Vulnerable and Outdated Components",
          "Vulnerable & Outdated Components Quiz",
          "Risk A7: Authentication and Identification Failures",
          "Authentication and Identification Security Quiz",
          "Risk A8: Software and Integrity Failures",
          "Integrity Failures in Application Security",
          "Risk A9: Security Logging and Monitoring Failures",
          "Security Logging in Application Security",
          "Risk A10: Server-Side Request Forgery",
          "Server-Side Request Forgery Quiz",
          "Summary: What We Learned"
        ]
      },
      "requirements": [
        "No programming experience needed you will learn everything you need to know",
        "Curiosity on web application security risks"
      ],
      "description": "Welcome to this beginner course on the OWASP Top 10, as it was last updated in 2021 almost beginning of 2022. This course has no technical prerequisites, it is truly meant for everyone. Whether you are a risk manager, an auditor, a cybersecurity professional, or maybe you are a software developer or simply curious on application security and looking for an introduction to the OWASP Top 10: This course is for you!\nIn this course you will learn a little bit about the OWASP Foundation and how you can be part of this opensource community. We are going to learn what are the OWASP Top 10 risks of 2021 and how this list of risks gets periodically updated.\nFor each of the OWASP Top 10 risks, we are going to look at the key information security concepts, so that you better understand the definition of each risk. Then we are going to – together – define each risk – and we are going to do this in layman’s terms, so that you really understand each risk.\nWe are also going to look at the main challenges that developers and others face that cause each risk. Finally, we are going to give examples of good and bad code using pseudocode and we are going to conclude with some of the best protection practices to help you and your team avoid each risk from materializing.",
      "target_audience": [
        "This course has no technical prerequisites, it is truly meant for everyone",
        "Beginner web application and API developers",
        "Risk managers and auditor looking to understand the OWASP Top 10 risks",
        "Cybersecurity professionals looking for an introduction to the OWASP Top 10"
      ]
    },
    {
      "title": "Django with React | An Ecommerce Website",
      "url": "https://www.udemy.com/course/django-with-react-an-ecommerce-website/",
      "bio": "Build an eCommerce platform from the ground up with React, Redux, Django & Postgres",
      "objectives": [
        "Build an Ecommerce website using Django with React",
        "Full featured shopping cart with PayPal & credit/debit payments",
        "Product rating & review system",
        "An actual real-world project built in a linear and progressive manner",
        "Admin area to manage customers, products & orders",
        "Product search, carousel, pagination & more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "ProShop Demo & Prerequisites",
          "Resources & Environment",
          "A Message From Brad Traversy"
        ],
        "Starting The Front End": [
          "React Setup",
          "Reach-Bootstrap Setup, Header & Footer Components",
          "HomeScreen Product Listing",
          "Rating Component",
          "Implementing React Router",
          "Product Details Screen"
        ],
        "Serving & Fetching Data From Django": [
          "Frontend/Backend Workflow",
          "Building The Backend",
          "Fetching Data",
          "Database Setup & Admin Panel",
          "Modeling Our Data",
          "Product Image Field",
          "Static Files",
          "Serializing Data"
        ],
        "Implementing Redux For State Management": [
          "An Overview of Redux",
          "Create Redux Store",
          "Product List Reducer & Action",
          "Bringing Redux Intro Home Screen",
          "Message & Loader Component",
          "Product Details Reducer & Action"
        ],
        "Adding To Shopping Cart": [
          "Qty Select & Add To Cart",
          "Cart Reducer & Action",
          "Add To Cart Functionality",
          "Cart Screen",
          "Remove Items From Cart"
        ],
        "Backend User Authentication": [
          "JSON Web Tokens Overview",
          "Postman Overview",
          "JSON Web Token Installation & Setup",
          "JWT Customization",
          "User Serializer",
          "Protected Routes",
          "Register User",
          "Login With Email",
          "URL's & Views Cleanup"
        ],
        "Front End User Authentication": [
          "User Login Reducer & Action",
          "User Login Screen & Functionality",
          "User In Navbar & Logout",
          "User Register Reducer, Action & Screen",
          "Update Profile Endpoint",
          "Profile Screen & Get User Details",
          "Update User Profile",
          "User Details Bug Fix"
        ],
        "Checkout Process (Part 1)": [
          "Shipping Screen & Save Address",
          "Checkout Steps Component",
          "Payment Screen & Save Payment Method",
          "Place Order Screen",
          "Order View & URL",
          "Create Order"
        ],
        "Checkout Process (Part 2)": [
          "Get Order By Id Endpoint",
          "Order Details Reducer & Action",
          "Order Screen",
          "Update To Paid Endpoint",
          "Order Pay Reducer & Action",
          "PayPal Payments",
          "Orders In Profile Page"
        ],
        "Admin Screen (Part 1)": [
          "User List Reducer, Action & Screen",
          "Admin User Delete",
          "Get User By ID & Update User Endpoints",
          "User Edit Screen & Get User Details",
          "Update User Functionality"
        ]
      },
      "requirements": [
        "Basic understanding of Django and React",
        "Basic HTML & CSS Skills",
        "Basic JavaScript Knowlege"
      ],
      "description": "In this course, we will build a completely customized eCommerce / shopping cart application from scratch using Django & REACT with the following functionality...\nFull featured shopping cart\nProduct reviews and ratings\nTop products carousel\nProduct pagination\nProduct search feature\nUser profile with orders\nAdmin product management\nAdmin user management\nAdmin Order details page\nMark orders as delivered option\nCheckout process (shipping, payment method, etc)\nPayPal / credit card integration\n\n\nThis is not a documentation-type course. This is a jump in and get your hands dirty course where by the end, you have an actual real-world project to use and put on your portfolio. You will learn the following by completing this course..\n\n\nReact with Functional Components & Hooks\nReact router\nReact-Bootstrap UI library\nHow to structure components\nComponent level state & props\nManaging global state with Redux (Actions & Reducers)\nUsing Redux state in components (useDispatch & useSelector)\nCreating an extensive back end with Express\nJWT authentication (JSON web tokens)\nCustom error handler\nIntegrating the PayPal API\nProject deployment\nMuch more!\n\n\nThis project is a collaboration with Brad Traversy where we will be taking his original MEARN Stack ecommerce course and building it out with a Django backend instead of Node, JS & Express. Brad & I decided it would be fun to remake the exact same project with a Django backend/API and connect it to the same React frontend/design.\n\n\nMy hope is that you learn how not to only build out this application but add on your own features to it. We learn best by building & customizing our own projects.",
      "target_audience": [
        "Django & or React JS developers looking to enhance there skills"
      ]
    },
    {
      "title": "The Complete Sass & SCSS Course: From Beginner to Advanced",
      "url": "https://www.udemy.com/course/sasscourse/",
      "bio": "No more cluttered CSS! Realize clean designs lightning-fast and without frustration using Sass & SCSS.",
      "objectives": [
        "Write professional Sass code and generate CSS code from it.",
        "Realize designs much faster with less frustration.",
        "Use variables to make designs more flexible and avoid repetitive code.",
        "Use mixins to reuse existing solutions and built upon them without re-inventing the wheel",
        "Use functions and operators to calculate flexible dimensions, colors and more.",
        "Import fonts and existing Sass files into new designs to reuse them.",
        "Use Sublime Text 3 confidently to write Sass code swiftly."
      ],
      "course_content": {
        "Introduction - Welcome To The Complete SASS & SCSS Course!": [
          "Introduction: Welcome To The Complete SASS & SCSS Course!",
          "Introduction Continued: Here is What You Will Learn In Our SASS & SCSS Course!",
          "How To Follow Along and Use This Course"
        ],
        "Sass Overview": [
          "What Is a Preprocessor?",
          "Preprocessors",
          "Sass or SCSS?",
          "Sass vs. SCSS"
        ],
        "Setup": [
          "Setting Up Sublime Text 3",
          "Installing Sass / SCSS",
          "A Quick Test",
          "Setting Up The Project Structure"
        ],
        "Variables": [
          "Variables in Sass",
          "Using Variables Correctly",
          "Variables"
        ],
        "Partials": [
          "Partials",
          "Partials"
        ],
        "Mixins": [
          "Mixins in Sass",
          "Mixins",
          "Mixins with Arguments",
          "Mixins with Arguments",
          "Passing Content Into Mixins",
          "Mixins with Content Blocks"
        ],
        "Imports": [
          "Imports in Sass",
          "Imports",
          "Practice Activity: A Mixin to Import Fonts"
        ],
        "Media Queries": [
          "Nested Media Queries in Sass",
          "Nested Media Queries",
          "Practice Activity: Mixins & Media Queries"
        ],
        "Operators": [
          "Basic Arithmetic & The Sass Shell",
          "Color Arithmetic",
          "Arithmetic in Sass"
        ],
        "Functions": [
          "What Are Functions?",
          "Built-in Functions",
          "Creating Your Own Functions",
          "Sass Functions"
        ]
      },
      "requirements": [
        "We will cover all setup required.",
        "You need NO previous knowledge with Sass or Bootstrap.",
        "You should know basic HTML & CSS.",
        "You need basic computer skills to install and run applications."
      ],
      "description": "Welcome To The Complete Sass & SCSS Course: From Beginner To Advanced!\n⇉ Watch the promo video to see How You Can Begin Learning How To use Sass / SCSS to create more flexible designs in a shorter amount of time!\n⇉ This Course is Complete! You receive over 4+ hours of video content & 30+ lectures!\n\n\n⇉ Join Over 950,000+ Students Who Have Enrolled In My Udemy Courses This Year!\n⇉ 7,500+ Five Star Reviews on our courses prove Students Who Enrolling Are Getting Real Results!\nThen this course is for you! Click \"Take This Course Now\" For Instant Life-Time Access!\n__________________________________________________________________________\nUpdated 2016: Added 1h of brand new content on Sass Frameworks as requested by students:\nthe Susy toolkit to create custom grid systems,\nthe Breakpoint framework to create responsive mobile-first designs more easily,\nthe Compass framework which facilitates many typical design tasks.\n\n\nPower up your website design skills with Sass & SCSS -- the powerful CSS preprocessor!\n\nThis course is the complete masterclass for Sass & SCSS development. It covers all you need to know about this awesome technology including:\nHow to use Sass / SCSS to create more flexible designs in less time and generate CSS code from them\nHow to use variables to store colors, sizes, fonts and more to avoid repetition and make your designs more flexible and reusable\nHow to perform calculations right inside your Sass & SCSS code to create responsive and flexible layouts\nHow to use mixins and imports to reuse your existing designs and finish new projects in no time\nHow to use inheritance in Sass to avoid duplicating code and the nasty bugs that come with it\nHow you can use Sass to write scaleable CSS code even for big projects\n\n\nYou will also learn how to use Sublime Text 3, one of the most popular lightweight text editors out there, confidently and write your code with lightning speed.\n\nDuring the course, you will create useful code snippets in Sass that you can use in future projects to double your development speed -- and you will have all the tools you need to create more such snippets to enhance your productivity even further and make clients happy!\nYou can test what you learned in several quizzes and by coding along while we create a library of powerful code snippets.\n__________________________________________________________________________\nWith the right mindset, understanding, and application of the teachings in this course, you will instantly begin to move towards Mastering Sass & SCSS!\nWhen we learn something new, I add it to the course - at no additional cost to you! This is a course that will continue to add more and more to every aspect of your life.\nIn addition to the Udemy 30-day money back guarantee, you have my personal guarantee that you will love what you learn in this course. If you ever have any questions please feel free to message us directly and we will do our best to get back to you as soon as possible!\n__________________________________________________________________________\nWhat I can't do in this Course..\nI can't guarantee your success – this course does take work on your part. But You Can Do It!\nI am also not responsible for your actions. You are responsible for 100% of the decisions and actions you make while using this course.\n__________________________________________________________________________\nThis course will not remain this price forever! It's time to take action!\nClick the \"take this course\" button at the top right now!\n...every hour you delay is costing you money...\nSee you in the course!\nSincerely,\nJoe Parys & Peter Sommerhoff",
      "target_audience": [
        "You want to skyrocket your productivity when writing CSS code.",
        "You want to keep up with current web design trends.",
        "You want to write scaleable CSS code.",
        "You want to avoid cluttering your code with repetitive selectors.",
        "You want to make your designs much more flexible and easily create different variants of your beautiful designs.",
        "You don't want to start from scratch in every project but have a flexible way to reuse existing designs to finish projects fast.",
        "You want to build upon your Bootstrap knowledge and complement it with Sass to finish beautiful designs more effectively."
      ]
    },
    {
      "title": "NodeJS Tutorial and Projects Course",
      "url": "https://www.udemy.com/course/nodejs-tutorial-and-projects-course/",
      "bio": "Learn Node.js by building real-world applications with Node JS, Express, MongoDB.",
      "objectives": [
        "Make Great Projects Node and Express"
      ],
      "course_content": {
        "Introduction": [
          "What is Node.js",
          "Course Requirements",
          "Course Structure",
          "Text Editor",
          "Video Blur Fix",
          "Course Review",
          "Discord Channel"
        ],
        "Install": [
          "Browser vs Server",
          "Install Node.js"
        ],
        "Node Tutorial": [
          "REPL",
          "CLI",
          "Source Code",
          "Globals",
          "Modules Setup",
          "First Module",
          "Alternative Syntax",
          "Mind Grenade",
          "Built-in Modules Intro",
          "OS - Module",
          "PATH - Module",
          "FS - Module (sync)",
          "FS - Module (async)",
          "Sync vs Async",
          "HTTP Intro",
          "HTTP - Module (setup)",
          "HTTP- Module (more features)",
          "NPM Info",
          "NPM Command",
          "First Packages and package.json",
          "Share Code on Github",
          "Nodemon",
          "Uninstall Package",
          "Global Install",
          "package-lock.json",
          "Important Topics - Intro",
          "Event Loop - Info",
          "Event Loopt - Slides",
          "Event Loop - Code Examples",
          "Async Patterns - Blocking Code",
          "Async Patterns - Setup Promises",
          "Async Patterns - Refactor to Async",
          "Async Patterns - Node's Native Option",
          "Events Info",
          "Events Emitter - Code Example",
          "Events Emitter - Additional Info",
          "Events Emitter - HTTP Module Example",
          "Streams Intro",
          "Streams - Read File",
          "Streams - Additional Info",
          "Streams - HTTP Example",
          "End Of Module"
        ],
        "Express": [
          "HTTP Request/Response Cycle",
          "HTTP Messages",
          "Starter Project Info",
          "Starter Project Install",
          "Starter Overview",
          "HTTP - Basics",
          "HTTP - Headers",
          "HTTP - Request Object",
          "HTTP - HTML File",
          "HTTP - App Example",
          "Express Info",
          "Express Basics",
          "Express - App Example",
          "Express - All Static",
          "API VS SSR",
          "JSON - Basics",
          "Params, Query String - Setup",
          "Params",
          "Params - Extra Info",
          "Query String",
          "Additional Params and Query String Info",
          "Middleware - Setup",
          "APP.USE",
          "Multiple Middleware Functions",
          "Additional Middleware Info",
          "Methods - GET",
          "Methods - POST (Setup)",
          "Methods - POST (Form Example)",
          "Methods - POST (Javascript Example)",
          "Install Postman",
          "Methods - PUT",
          "Methods - DELETE",
          "Express Router - Setup",
          "Express Router - Controllers"
        ],
        "Project Intro and Setup": [
          "Intro",
          "Setup",
          "Intstall"
        ],
        "Task Manager API": [
          "Intro",
          "Setup",
          "Basic Express Server",
          "General Routes",
          "Route Structure and Details",
          "getAllTasks",
          "All Routes",
          "Postman Setup",
          "REST",
          "MongoDB Intro",
          "Atlas Setup",
          "DB, Network Access and Connection String",
          "Additional Info",
          "MongoDB Overview",
          "CRUD - GUI Example",
          "Mongoose Info",
          "Connect To DB",
          "Refactor Connect",
          "ENV VARS",
          "First Schema and Model",
          "Create Task",
          "Schema Info",
          "Basic Validation",
          "TRY/CATCH Block",
          "getAllTasks Controller",
          "getSingleTask",
          "Two Errors",
          "Delete Task",
          "Update Task",
          "Add Front-End",
          "PUT VS PATCH",
          "Response Types",
          "NOT FOUND",
          "Async Wrapper",
          "Custom Error Handler",
          "Custom Error Class",
          "PORT Variable",
          "Outro"
        ],
        "Store API": [
          "Intro",
          "Setup",
          "Basic Express App",
          "Connect To DB",
          "Router",
          "Postman Setup",
          "EXPRESS-ASYNC-ERRORS",
          "Product Model",
          "Populate DB",
          "Basic Find",
          "Query Params",
          "Mongoose V6 Update",
          "Refactor to QueryObject",
          "Company",
          "Name",
          "Sort - General Setup",
          "Sort - getAllProducts Implementation",
          "Select Option",
          "Skip and Limit - General Info",
          "Pagination",
          "Numeric Filters - Setup",
          "Numeric Filters - Regex",
          "Numeric Filters - Complete",
          "Outro"
        ],
        "JWT - Basics": [
          "Intro",
          "Setup",
          "Controllers",
          "Postman Setup",
          "Validate Username and Password",
          "JWT - Overview",
          "JWT - Structure",
          "JSONWEBTOKEN Package",
          "Sign JWT",
          "Bearer Token - Overview",
          "Send Bearer Token",
          "Check Auth Header",
          "Verify Token",
          "Auth Middleware Setup",
          "Auth Middleware Complete",
          "More Error Classes",
          "Status Codes",
          "More Refactor - Complete App"
        ],
        "Jobs API": [
          "Intro",
          "Setup",
          "Controllers",
          "Routes",
          "Database Connection",
          "User Schema",
          "Create User - Basic Setup",
          "Error Checking - Controller Example",
          "Hashing Password Info",
          "Hash User Password",
          "Mongoose Middleware",
          "Generate Token - Controller",
          "Generate Token - Instance Method",
          "JWT_SECRET and JWT_LIFETIME",
          "Login Controller Setup",
          "Compare Password",
          "Auth Middleware - Setup",
          "Auth Middleware - Testing",
          "Alternative Code",
          "Job Model",
          "Create Job Route",
          "Get All Jobs",
          "Set Token Dynamically in Postman",
          "Get Single Job",
          "Update Job",
          "Remove Job",
          "Duplicate Error",
          "Custom Error",
          "Validation Error",
          "Cast Error",
          "Security Info and Packages",
          "Security Setup",
          "Additional Info",
          "Heroku Update !!!",
          "Heroku Info",
          "Deploy to Heroku",
          "Swagger UI Info",
          "Clone Existing Heroku Project",
          "Export Postman Docs",
          "APIMATIC Info",
          "APIMATIC Setup",
          "Swagger UI Editor",
          "Add Swagger UI",
          "Render Signup",
          "Github Repo",
          "Render Deployment"
        ],
        "Jobster API (Extra Project)": [
          "Intro",
          "Setup",
          "Spring Cleaning",
          "Client Folder",
          "Setup Front-End",
          "Modify User Model",
          "Modify Register and Login",
          "Create Test User",
          "Update User - Setup",
          "Update User - Complete",
          "Password \"Gotcha\"",
          "Complete Jobs CRUD Functionality",
          "Fake Data - Mockaroo",
          "Populate Database",
          "Search Functionality - Intro",
          "Search Input",
          "Status and JobType",
          "Sort",
          "Pagination",
          "Check For Test User in Auth Middleware",
          "Restrict CRUD to Test User",
          "API Limiter",
          "Stats Intro",
          "ShowStats Controller",
          "Setup Status Aggregation Pipeline",
          "Refactor Status Data",
          "Setup Monthly Applications Aggregation Pipeline",
          "Refactor Monthly Applications Data",
          "Deployment"
        ]
      },
      "requirements": [
        "Basic Knowledge of HTML, CSS, JS (ES6) is Required."
      ],
      "description": "Welcome to NodeJS Tutorial and Projects Course.\nI guess let’s start by answering the most pressing question first. What is a NodeJS? And even though there are plenty of good answers out there the one that I like the most is this one - \"NodeJS is an environment to run Javascript outside of the Browser\". NodeJS was created in 2009 and it's built on top of Chrome's V8 Javascript Engine. As you are probably aware of, every browser has an engine, a tool that compiles our code down to machine code and Chrome uses one by the name of V8. Since the moment it was created, Node has evolved tremendously, and while there are many things to like about Node, some of the main ones are - large community, since that tremendously saves time on feature development, as well as the fact that with the help of Node, it's never been easier to build Full-Stack Apps, since both Front-End And Back-End are built in one language, and you guessed that language is our beloved Javascript.\nDuring the course we will cover  following main technologies - NodeJS, ExpressJS, MongoDB, Mongoose, JWT and many smaller ones as well.\nCourse consists of\n- Node Tutorial\n- Express Tutorial\n- Projects\n- Task Manager API\n- Store API\n- JWT Basics\n- Jobs API\n- File Upload\n- Send Email\n- Stripe Payment\n- E-Commerce API\n- Email Workflow",
      "target_audience": [
        "Everyone who wants to learn Node, Express and MongoDB"
      ]
    },
    {
      "title": "1 Hour HTML",
      "url": "https://www.udemy.com/course/1-hour-html/",
      "bio": "Learn how to code in HTML in 1 hour. This class is set up for complete beginners!",
      "objectives": [
        "Learn the basics of programming",
        "Learn HTML",
        "Give you a platform for furthur development"
      ],
      "course_content": {
        "Let's learn some HTML": [
          "Introduction to the course",
          "2. Course requirements and format",
          "3. What is JSBIn",
          "4. Setting up the HTML Document",
          "5. Header and paragraph tags",
          "6. Style",
          "7. More than one style",
          "8. Bold, Italics, underline and tags within tags",
          "9. More Tags",
          "10. Setting up a link",
          "11. Adding an image",
          "12. Adding a link to the image",
          "13. Lists",
          "14. Tables",
          "15. Playing around with styles",
          "16. Forms",
          "17. Radio, checkboxes and password",
          "18. Submit buttons",
          "19. Script tags and javascript"
        ],
        "Congratulations you are finished!": [
          "20 Course conclusion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "An internet connection",
        "An up to date web browser"
      ],
      "description": "Have you ever wanted to learn to code but don't know where to start? Learning how to code can get you a better job and lead to a better future. This course starts you off with the basic coding language of HTML. This is a very condensed 1 hour tutorial that will show you how to code in HTML. Enroll to begin your journey to be a web development master.  Take this 1 hour course as the absolute first course you take in coding. It's short and to the point. You won't regret it. HTML is the building block of the web and other markup languages. This is the foundational course you need to have in your library.\n\n\nThe best part is that this is for complete beginners! Coding is a fantastic career to get into and this is the first course you should take. All web developers start with HTML and it is by far the easiest language to learn.\n\n\nJust think of all of the things you can do in 1 hour and imagine learning a whole new skill. That's why these 1 hour lessons are so valuable. Take a look at the reviews, they speak for themselves.\n\n\nWhat are you waiting for, enroll today.",
      "target_audience": [
        "Complete beginners",
        "People who want to become web developers"
      ]
    },
    {
      "title": "Build Dynamic Web Apps with React & Firebase",
      "url": "https://www.udemy.com/course/build-web-apps-with-react-firebase/",
      "bio": "Learn React from the ground up to make dynamic websites (includes Context, Hooks, Reducers, Routing, Auth, Databases)",
      "objectives": [
        "Learn how to create modern & dynamic React websites from the ground up",
        "Learn about Components, Props, Hooks, Context, State, Reducers & the React Router",
        "Learn how to implement a database, authentication & file uploads with React & Firebase",
        "Create & deploy fully fledged user-based React websites"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Welcome to the Course",
          "React at a Glance",
          "What You Should Already Know",
          "Environment Setup",
          "Using the Course Files",
          "Extra Resources & Tutorials"
        ],
        "React Basics": [
          "Using React with a CDN",
          "Making a React Component",
          "JSX & Templates",
          "Template Expressions & Variables",
          "Click Events & Event Handlers"
        ],
        "Using Create-React-App": [
          "Making a React Site (create-react-app)",
          "Project Structure Walkthrough",
          "Running the Application",
          "Using Images",
          "Using Stylesheets"
        ],
        "Intro to State & useState": [
          "Why We Need State",
          "Using the useState Hook",
          "How State & Rendering Works",
          "Outputting Lists",
          "Using the Previous State",
          "Conditional Templates",
          "useState Limitations"
        ],
        "Components & Props": [
          "Using Mutliple Components",
          "Creating a Title Component",
          "Intro to Props",
          "React Fragments",
          "Children Prop (Making a Modal Component)",
          "Functions as Props",
          "CHALLENGE - Showing the Modal",
          "Portals",
          "CHALLENGE - Reusable Event List Component",
          "Class Components Overview"
        ],
        "Styling React Applications": [
          "Using Global Stylesheets",
          "Component Stylesheets",
          "Using Inline Styles",
          "Dynamic Inline Styles",
          "Conditional CSS Classes",
          "CSS Modules"
        ],
        "User Input & Events": [
          "Forms & Labels in React",
          "The onChange Event",
          "Controlled Inputs",
          "Submitting Forms (onSubmit)",
          "Adding Events to the Event List",
          "Using the useRef Hook",
          "Select Boxes"
        ],
        "Fetching Data & useEffect": [
          "New Project & JSON Server",
          "Why We Need useEffect",
          "Fetching Data with useEffect",
          "The useEffect Dependency Array",
          "useCallback for Function Dependencies",
          "Creating a Custom Fetch Hook",
          "Adding a Loading/Pending State",
          "Handling Errors",
          "Why We Need a Cleanup Function",
          "Aborting Fetch Requests",
          "useEffect Gotcha - Infinite Loops"
        ],
        "PROJECT BUILD - Memory Game": [
          "Project Preview & Setup",
          "Setting up & Shuffling Cards",
          "Creating a Card Grid",
          "CHALLENGE - Creating a Card Component",
          "Making Card Choices",
          "CHALLENGE - Comparing Choices",
          "Adding a 'matched' Property to Cards",
          "Flipping Cards",
          "Flipping Animation (CSS)",
          "Making Cards \"disabled\"",
          "Finishing Touches"
        ],
        "The React Router": [
          "Multi-Page React Sites",
          "React Router Setup",
          "Switch & Exact Match",
          "Links & Nav Links",
          "Fetching Data",
          "Route Parameters",
          "The useParams Hook",
          "Programmatic Redirects",
          "Redirect Component",
          "Query Parameters"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript, HTML & CSS"
      ],
      "description": "React is a hugely popular front-end library and React developers are always in high demand in the web dev job market. In this course you'll learn how to use React from the ground-up to create dynamic & interactive websites, and by the time you finish you'll be in a great position to succeed in a job as a React developer. You'll also have 4 full React projects under your belt too, which you can customize and use in your portfolio!\nThroughout the course you'll learn exactly what React is and why it's such a popular choice to make interactive & dynamic websites. You'll learn how to set up a React website from scratch, how to create React components, how to use state to manage component data & how to work with interactive events such as click events & form submissions.\nYou'll also get hands-on practise with the React Router (which is used in React to create website with \"multiple pages\") and you'll see how these are actually known as Single Page Applications (or SPA's for short).\nWe'll dive into React Hooks such as useState, useEffect, useParams & useHistory and use them to help us create 4 full React projects from scratch - a memory game, a recipe website, a finance tracker & a project management application.\nYou'll also learn some more avanced topics such as the React Context API to handle global state & reducers (including the useReducer hook) to help manage more complex state.\nOnce you've mastered React, we'll take our websites to the next level by integrating them with Firebase - a backend as a service. You'll learn how to add services such as a real-time database & authentication into your React sites as well as how to allow end-users to upload files from their computers with the help of Firebase Storage. Finally, I'll teach you how to build & deploy your React sites to the web using Firebase Hosting.\nBy the end of the course you'll have a solid understanding of React & be able to make your own production-ready websites!",
      "target_audience": [
        "Beginner developers wanting to learn a front-end framework like React",
        "Beginner React developers wanting to further their React skills & knowledge",
        "Intermediate & advanced React developers wanting to learn how to integrate back-end services like authentication & databases",
        "Developers who have used other frameworks (like Vue) & want to switch to React"
      ]
    },
    {
      "title": "Accelerated ES6 JavaScript Training",
      "url": "https://www.udemy.com/course/es6-bootcamp-next-generation-javascript/",
      "bio": "Learn and Use the Future of JavaScript - Today!",
      "objectives": [
        "Understand and Use the new Features and Concepts introduced with ES6",
        "Get an Overview over the Language Additions and Changes",
        "Confidently apply the new Syntax, new APIs and other new Features in Web Applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Join our Online Learning Community",
          "JavaScript Languages - ES6 vs ES5",
          "Course Format",
          "ES6 Compatibility with Browsers",
          "Using ES6 Today"
        ],
        "Syntax Changes & Additions": [
          "Let & Block Scope",
          "Constants with \"const\"",
          "Hoisting in ES6",
          "(Fat) Arrow Functions",
          "(Fat) Arrow Functions and the \"this\" Keyword",
          "Functions and Default Parameters",
          "Object Literal Extensions",
          "The Rest Operator",
          "The Spread Operator",
          "The for-of Loop",
          "Template Literals",
          "Destructuring - Arrays",
          "Destructuring - Objects",
          "Destructuring - Summary",
          "Wrap Up",
          "Module Resources"
        ],
        "Modules & Classes": [
          "Introduction",
          "Alternative Plunker Setup",
          "Modules Setup",
          "Modules Basics",
          "Import & Export Syntax",
          "Modules - Strict Mode and Global Scope",
          "Class Basics",
          "Classes & Prototypes",
          "Inheritance",
          "Inheritance & Prototypes",
          "Static Methods",
          "Classes & Modules",
          "Getters & Setters",
          "Extending Built-in Objects",
          "Extendable Built-in Objects",
          "Wrap Up",
          "Module Resources"
        ],
        "Symbols": [
          "Introduction",
          "Symbols Basics",
          "Shared Symbols",
          "Advantages of (unique) IDs / Symbols",
          "Well-Known Symbols",
          "Module Resources"
        ],
        "Iterators & Generators": [
          "Introduction",
          "Iterator Basics",
          "Iterators in Action",
          "Creating a Custom, Iterateable Object",
          "Generators Basics",
          "Generators in Action",
          "Controlling Iterators with throw and return",
          "Module Resources"
        ],
        "Promises": [
          "Introduction",
          "Creating & Resolving Promises",
          "Rejecting Promises",
          "Chaining Promises",
          "Catching Errors",
          "Built-in Methods - All and Race",
          "Wrap Up",
          "Module Resources"
        ],
        "Extensions of Built-in Objects": [
          "Introduction",
          "The Object",
          "The Math Object",
          "Strings",
          "The Number Object",
          "Arrays (1/2)",
          "Arrays (2/2)",
          "Wrap Up",
          "Module Resources"
        ],
        "Maps & Sets": [
          "Introduction",
          "Maps - Creation & Adding Items",
          "Maps - Managing Items",
          "Maps - Looping through Maps",
          "Maps - Wrap Up",
          "The WeakMap",
          "Sets - Creation and Adding Items",
          "Sets - Managing Items",
          "Sets - Looping through Sets",
          "Sets - Wrap Up",
          "The WeakSet",
          "Module Resources"
        ],
        "The Reflect API": [
          "Introduction",
          "Creating Objects with Reflect.construct()",
          "Calling Functions with Reflect.apply()",
          "Reflect and Prototypes",
          "Reflect.construct(), apply() and Prototypes Interaction",
          "Accessing Properties with Reflect",
          "Analyzing Objects with Reflect.ownKeys()",
          "Creating & Deleting Properties with Reflect",
          "Preventing Object Extensions & Wrap Up",
          "Module Resources"
        ],
        "The Proxy API": [
          "Basics",
          "Traps in Action",
          "Proxies and Reflect",
          "Using Proxies as Prototypes",
          "Proxies as Proxies",
          "Wrapping Functions",
          "Revocable Proxies",
          "Wrap Up",
          "Module Resources"
        ]
      },
      "requirements": [
        "Basic to advanced JavaScript knowledge or resources on ES5 JavaScript follow along, are required",
        "Basic Web Development Skills (HTML, CSS, JavaScript) are assumed",
        "Advanced JavaScript Knowledge is a Plus"
      ],
      "description": "Learn modern JavaScript today!\nKnowing modern JavaScript, ES6 (ECMAScript 6), is extremely important in the world of JavaScript! ES6 adds tons of new features, methods, objects and helpers and the earlier you feel confident using them, the better!\nJavaScript is the most important programming language in the web and it's constantly evolving. This course introduces you to the biggest \"feature update\" in the last couple of years: ES6 - which added a lot of new syntax features and improvements.\nGet the \"All-In-One\" package today!\nThis course follows a hands-on, example-driven approach to show and explain all the important features added to JavaScript. This includes important syntax changes and additions like let, const, rest & spread operators and continues with Promises, the Reflect API, the Proxy API, Maps & Sets, tons of new methods and functions and much more!\nAt the end of the course, we'll even build a complete project, using many of the new Features shown throughout the Course!\nBenefit from my knowledge as both a freelance web developer and a top-rated instructor with many years of experience.\nAs a freelance web developer, using JavaScript is my day-to-day work and therefore I always found it annoying the ES6 Resources are scattered out all over the web. I created this Course to share my knowledge on ES6 with you!\nI also love passing my knowledge to other people and my various, top-rated courses as well as my successful Academind YouTube channel are the best proof of that.",
      "target_audience": [
        "Students who have experience with \"current-generation\" JavaScript (ES5) and know the basics of the language",
        "Students also taking my JavaScript Bootcamp course to have a nice follow-up on it",
        "Everyone interested in the new Features and Additions, ES6 brings to JavaScript"
      ]
    },
    {
      "title": "AngularJS 1.0 Masterclass - Deep Dive & Understand AngularJS",
      "url": "https://www.udemy.com/course/angularjs-masterclass/",
      "bio": "Understand Core Concepts, Create Custom Directives, Custom Services, Routing and Hands On Using Modularized Approach.",
      "objectives": [
        "Create Medium to Complex Web Applications Using AngularJS",
        "No Faffing, All Lectures are Packed with Information",
        "You will have understanding of All the Core Concepts of AngularJS",
        "You will know why angularjs is so popular and why you should start using it",
        "Dont just learn Angularjs But understand it with JavaScript, HTML, Design Pattern and Clean Code concept",
        "You will know mostly used directives and filters of AngularJS",
        "You will know how Dependency Injection, two way data binding, scope to scope communication works",
        "You will know when to use $apply and $watch methods of scope",
        "You will know how to handle business logic in controller and how controller inheritance works",
        "You will know how to use AngularJS built in services and how to create your own services to encapsulate single responsibilities or business logic",
        "Server side interaction using Mongo Lab API and how to use promises",
        "You will know how to Create Single Page Applications",
        "You will know how to Create Custom Directives & Filters",
        "Awesome discounts on all of my upcoming courses",
        "Get Hands on By Creating An Application Using Modularized Approach",
        "Complimentary Contents for Free"
      ],
      "course_content": {
        "Introduction": [
          "Whats Inside This Course",
          "What You Should Know, Before Taking This Course",
          "How to Take This Course",
          "Softwares To Be Installed",
          "Course Material - All Source Code"
        ],
        "Why AngularJS": [
          "\"THE PROBLEM\"... and How AngularJS Solves \"THE PROBLEM\""
        ],
        "AngularJS Core Concepts: Get Your ToolBox Filled with Tools": [
          "JavaScript Specials: Modules Can Help You Remain Organized",
          "Angular Modules: One Stop Shop for All the Components",
          "JavaScript Specials: IIFE",
          "Moving our First Module to IIFE",
          "HTML Specials: Now you can decorate me with Custom Attributes",
          "Connecting Module and HTML: I am Peter Parker, I wanna be a Spiderman",
          "JavaScript Specials: Problems with addition of two numbers in JavaScript",
          "Design Pattern Specials: MVC can make your weekend more enjoyable",
          "Directives: I am HTML, I am good at Presentations",
          "Controllers: I am JavaScript, I can Handle the Business Logic",
          "Models: Not so Old, We are POJO",
          "Pattern Specials: Dependency Injection can help reduce your emotional attachment",
          "My Name is $scope and I have been Gifted to Controller by the Secret Santa",
          "JavaScript Specials: Data Binding in Classical Template Systems",
          "Angular Data Binding: Continous Updates, Model is a Single Source of Truth",
          "Pattern Specials: SRP to handle one task at one place",
          "Services: What can I do for you Sir!",
          "Filters: Please give me data and not the WATER",
          "AngularJS Core Concepts"
        ],
        "Directives & Filters for Presentation": [
          "Programming Specials: Imperative vs. Declarative",
          "Binding Directives: One Way Binding Directives",
          "AngularJS Specials: Multiple ways of applying Directives",
          "Binding Directives: Two Way Binding Directives",
          "Template Directives: Give me Collection, I will give you Table",
          "Template Directives: Views Abstraction using ng-include Directive",
          "Template Directives: Switching Elements using ng-switch Directive",
          "Template Directives: Hiding Unprocessed Inline Template Binding Expressions",
          "Element Directives: Showing, Hiding and Conditionally Removing Elements",
          "Element Directives: Manage State & Enhance Elements",
          "Style Directives: Manage Classes & CSS",
          "Events Directives: Manage User Interaction",
          "Formatting Filters",
          "Array Transforming Filters"
        ],
        "Scope for Data and Controllers for Business Logic": [
          "AngularJS Specials: Bootstrapping of AngularJS Applications",
          "Organizing Controllers: One for Small and Many for Big Applications",
          "Scope Communication: Pub-Sub Model Using $rootScope",
          "Controller Inheritance - How Properties Work",
          "Controller Inheritance - How Methods Work",
          "Explicitly Updating Scope: Using $apply & $watch"
        ],
        "AngularJS Services & Custom Services to Encapsulate Responsibilities": [
          "AJAX Specials: Server Side Interaction Using Pure JavaScript",
          "Meet $http Service",
          "MongoLab Specials: Creating a Database and Tables",
          "CRUD Using $http and MongoLab - Part 1",
          "CRUD Using $http and MongoLab - Part 2",
          "Design Pattern Specials: The Singleton Design Pattern",
          "Custom Services to Encapsulate Responsibilities",
          "$q Service: Promises Are Made to be Kept"
        ],
        "Single Page Applications": [
          "Single Page Applications, What are They and Why We Need Them",
          "SPA Specials: Story of HASH & Your Own Mini-SPA",
          "$location Service: Knows Everything About Browser URL",
          "Planning The Shell and Partials of The Application",
          "$routeProvider Service: Configuring The Routes and Controllers",
          "$routeParams Service: Getting Passed Information From URL"
        ],
        "Presentation using Custom Directives & Custom Filters": [
          "Domain Specific Language: Your Own Custom Elements",
          "Component Directive",
          "Component Directive: Dynamic Binding Using Parent Scope",
          "Component Directive: Directives Can Have Other Directives As Well",
          "Component Directive: Taking Template Out of Directive Definition",
          "Component Directive: Handling User Interaction in Directives Controller",
          "The Misunderstood Concept of Directives Scope Made Understood",
          "OOB Directive: Use \"=\" Symbol to Pass Objects",
          "OOB Directive: Use \"@\" Symbol to Pass String Values",
          "OOB Directive: Use \"&\" Symbol to Call the Function on Parent Scope",
          "Custom Filter - Because We Need Our Own Data Transformation"
        ],
        "Presentation using Custom Directives - 102": [
          "Link Function - Handle DOM Access, Manipulation & Events",
          "Bootstrapping Services: $parse, $interpolate & $compile",
          "Compile Function - Auto Compile Using Compile Function",
          "Transclusion - Injecting HTML Parts as a Reference"
        ],
        "Hands On - Lets Make an App Using Modularized Approach": [
          "The Requirement",
          "Analysis & Design",
          "Folder Structure",
          "Application Layout - 101",
          "Application Layout - 102",
          "First Directive of Application",
          "First Service of Application",
          "Render Data Using First Service",
          "Render Data Using Second Service",
          "Render Data Using Third Service",
          "The Chart Directive",
          "Code Refactoring"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS and Javascript",
        "How to use a text editor",
        "Basic knowledge of programming"
      ],
      "description": "[COURSE UPDATED on 30 April 2015]\nWhy AngularJS?\nAngularJS is the most popular JavaScript framework out there in the market backed by Google. AngularJS helps you in creating complex web applications in less time. It's gonna add value to your resume and even help in getting good salary job.\nWhy You Should Take This Course?\nThis course is gonna help you make complex web application in AngularJS. This course will not only help you learn AngularJS, but to understand it, as it covers lot of JavaScript, HTML, Clean Coding, Design Pattern concepts, which you should understand to know better about AngularJS. This course uses AngularJS Version 1.3.\nWhat's Inside This Course?\nWhy You Should Know AngularJS?\nAngularJS Core Concepts along with JavaScript, HTML, Design Patterns & Clean Code Concepts.\nUsing Directives & Filters to Make Views\nHow to Keep Data in Scope & Business Logic in Controllers\nAngularJS Built in Services Which Includes Server Side Interaction Using Mongo Lab API & Creating Your Own Custom Services\nCreate Single Page Application Using Routing\nCreate Custom Directives & Custom Filters\nHands on With Practical Application\nAnd More Contents to Come…\nExercise Files:\nThis course contains all the exercise files, divided into two folders, one as starting folder and other one as completed folder.",
      "target_audience": [
        "Anyone who is in Web Development profile",
        "Web Site Designers can also add value to there resume",
        "Developer knowing jQuery, Backbone or Ember can also get benefits"
      ]
    },
    {
      "title": "Angular Testing Masterclass (Angular 20)",
      "url": "https://www.udemy.com/course/angular-testing-course/",
      "bio": "A complete guide to Angular 19 Unit Testing and End to End (E2E) Testing, including Testing best practices and CI",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Testing Fundamentals",
        "Angular Unit Testing Best Practices",
        "Angular E2E Testing with Cypress",
        "Angular Component and Service Testing",
        "Asynchronous Angular Testing with fakeAsync and Async",
        "Continuous Integration with Travis CI"
      ],
      "course_content": {
        "Course Kickoff - Development Environment Setup": [
          "Angular Testing Course - Helicopter View",
          "IMPORTANT - Recommended Software Versions",
          "Angular Testing Course - Development Environment Setup",
          "The Typescript Jumpstart Ebook",
          "Quick Introduction to Jasmine - Test Suites and Specifications",
          "Step-by-Step Implementation of our First Jasmine Specification",
          "Unit Testing with Jasmine - Introduction to Jasmine Spies",
          "Structuring Angular Unit Tests - Test Setup using beforeEach",
          "IMPORTANT: Use TestBed.inject() instead of TestBed.get()",
          "Using Dependency Injection in Angular Testing - The Angular TestBed",
          "Angular Unit Testing Best Practices and commonly used Test Utilities"
        ],
        "Angular Service Testing In Depth": [
          "Testing Angular HTTP Services - Test Setup with the HttpClientTestingModule",
          "Angular HTTP Service Testing - Step-by-Step Implementation",
          "Preventing Unintended HTTP Requests using the HTTP Testing Controller",
          "Testing Angular HTTP Data Modification Services",
          "Angular HTTP Services - Testing Error Handling",
          "Angular HTTP Testing - Checking HTTP Request Parameters"
        ],
        "Angular Component Testing In Depth": [
          "WARNING (Read This)",
          "Introduction to Angular Component Testing - Presentational Components",
          "Angular Component Testing - Test Setup with the async Test Utility",
          "Angular Component Testing - DOM Interaction",
          "Angular Test Debugging - How to Trigger Change Detection?",
          "Angular Component Testing - Course Card List Test Suite Conclusion",
          "Testing Angular Smart or Container Components - Test Setup",
          "Mocking Observable-based Services - Testing the Home Component",
          "Container Component Test Suite - The Home Component",
          "Simulating User DOM Interaction in Angular Unit Tests"
        ],
        "Asynchronous Angular Testing In Depth": [
          "Introduction to Asynchronous Angular Testing - Understanding Jasmine done()",
          "Understanding Asynchronous Testing - a Simple Example",
          "Understanding the Angular fakeAsync Testing Zone",
          "Testing Promised-based code - Introduction to Microtasks",
          "Testing Promise-based code with fakeAsync - Understanding flushMicrotasks",
          "Testing Asynchronous Code with fakeAsync - Full Example",
          "Using fakeAsync to test Asynchronous Observables",
          "fakeAsync in Practice - Fixing the Home component tests",
          "IMPORTANT - async() renamed to waitForAsync()",
          "Understanding the Angular waitForAsync() Test Zone"
        ],
        "Angular E2E (End to End) Testing with Cypress": [
          "Angular (E2E) End to End Testing - Getting Started with Cypress",
          "Angular E2E (End To End Test) Hello World with Cypress",
          "How to Mock an HTTP Backend using Cypress",
          "Simulating User Interaction in Cypress End to End Tests"
        ],
        "Preparing an Angular Application for Continuous Integration (CI)": [
          "Angular CLI Code Coverage and Deployment in Production Mode",
          "Preparing an Angular Application for Continuous Integration (CI)",
          "Running Cypress E2E Tests using Travis CI"
        ],
        "Conclusion": [
          "Bonus Lecture (Updated October 2025)",
          "Angular Testing Course - Conclusions and Key Takeaways"
        ]
      },
      "requirements": [
        "No prior knowledge of Testing is needed",
        "Prior knowledge of Angular is important"
      ],
      "description": "This Course in a Nutshell\nThis video course, complete with a running Github repository is a complete step-by-step guide to Angular Testing in general. We are going to take a small sample application that is already completed, but that has no tests yet.\nWe are then going to discuss the best approach to test each part of the application, and we are going to write the tests step-by-step, explaining every decision along the way.\nWe are going to start by writing Unit Tests for the multiple parts of the application, and then on a later stage, we are going to learn how to perform End to End (E2E) tests.\nMore than talking about how to test, this course will also cover when to test and why, as well as all sorts of testing best practices.\nCourse Overview\nStarting from scratch, we are going to introduce behavior-driven testing concepts, by quickly introducing the main concepts and utilities of the Jasmine Testing framework.\nWe are then going to introduce some testing best practices, and we are going to talk about mocks and Jasmine spies. We will then introduce some of the Angular Testing utilities such as the Angular TestBed, which we will be using to test a couple of simple Angular services.\nWe are then going to move on to test a more complex Angular service and talk about Angular HTTP request mocking, after which we will cover the testing of Angular components.\nWe are going to learn how to test Angular components with and without the DOM, what parts of the component to test, and we are going to cover in detail asynchronous tests using the fakeAsync and async utilities.\nWe will cover how to test several types of typical Angular components, such as for example presentational components and smart or container components, and we will learn how to mock Angular Observable-based services.\nAfter unit testing the multiple components of our application, we are going to then create a test suite of End to End tests using Cypress.\nOnce we have the tests written for our application, we are then going to deploy them to Travis CI, and make sure that the tests are triggered with every commit\nAt the end the course, we are going to generate a test coverage report, and discuss some of the metrics\nTable of Contents\nThis course will go over the following topics:\nIntroduction to the Jasmine testing framework\nIntroduction to Jasmine spies\nUnit Testing of simple Angular Services\nJasmine testing best practices\nIntroduction to Angular testing utilities\nTesting of complex Angular services\nMocking of Angular HTTP requests\nUnit Testing of Angular Components\nAsynchronous Angular Testing with fakeAsync and async\nMocking of Observable-based Services\nUnit Testing of Presentational Components\nUnit Testing of Smart or Container Components\nSimulation of user interaction in unit tests\nEnd to End Angular Testing with Cypress\nContinuous Integration with Travis CI\nAngular CLI Test Coverage Reports\nWhat Will You Learn In this Course?\nWith this course, you will feel comfortable writing Angular tests for multiple types of services and components. You will know not only the multiple Jasmine and Angular testing utilities available, but you will also know when to use them and why\nYou will be familiar with Angular testing best practices, and you will know how to write useful tests that don't take a lot of time to write and that contribute a lot for the long term health of your project\nHave a look at the course free lessons, and please enjoy the course",
      "target_audience": [
        "Angular Developers, looking for a detailed guide to Angular Unit Testing and End to End Testing"
      ]
    },
    {
      "title": "Angular interview questions with answers",
      "url": "https://www.udemy.com/course/angular-interview-questions-answers/",
      "bio": "Angular interview questions with answers",
      "objectives": [
        "How to answer basic questions around directives, CLI,Component , Modules, Decorator,Annotations, Types of Bindings and SPA.",
        "Tackling Advanced interview questions around routing,Lazy Loading, Services & Dependency Injection .",
        "To the point answers around ViewChild,ViewChildren,ContentChild , ContentChildren & Content projection.",
        "Giving crystal clear answers on constructor vs ngonInit() and Angular component life cycle.",
        "Simple lucid answers to Http calls, Routing , Pipes ,Error handling questions and different ways of passing data and in what scenarios to use them.",
        "Tricky questions of RxJs like observable , observer , operators, promise vs rxjs, importance of subscribe and understanding push/pull/reactive/imperative.",
        "Dedicated chapter on validation covering Template driven,reactive forms,When to use what,Composite& Dynamic validations , Custom & inbuilt validators."
      ],
      "course_content": {},
      "requirements": [
        "Javascript and Angular basics is needed. If you have not done Angular please check out my Angular step by step course on Udemy."
      ],
      "description": "Knowing Angular and still not able to crack interviews , then you are at the right place. :-)\n\nThis course focuses on revising most asked interview questions around Angular.  Interview is all about expressing your answers in a precise and proper way. You can have tons of knowledge , you must have done tons of coding but cracking interview is a different ball game.\nThis course is revision course where i have focused on what kind of questions are asked and how to answer them in a elaborate way. Please note this course does not teach Angular , if you want to learn Angular please check my Learn Angular step by step video series.\nBelow are the questions covered in this course, Happy learning , Happy job hunting.\n\n\n25 Interview Questions on Angular basic concepts - Part 1.\nQuestion 1 :- Whats the use  of Angular ?\nQuestion 2 :- What are directives in Angular  ?\nQuestion 3 :- Explain the different types of Angular directives  ?\nQuestion 4 :- Explain the importance of NPM and Node_Modules folder ?\nQuestion 5 :- Explain the importance of Package.json file in Angular ?\nQuestion 6 :- What is typescript and why do we need it ?\nQuestion 7 :- Explain importance of Angular CLI ?\nQuestion 8 :- Explain the importance of Component and Modules ?\nQuestion 9 :- What is a decorator in Angular ?\nQuestion 10 :- What are Annotation or MetaData ?\nQuestion 11 :- What is a template ?\nQuestion 12 :- Explain the four types of Data bindings in Angular ?\nQuestion 13 :- Explain architecture of Angular ?\nQuestion 14 :- What is SPA in Angular ?\nQuestion 15 :- How to implement SPA in Angular ?\nQuestion 16 :- How to implement routing in Angular ?\nQuestion 17 :- Explain Lazy Loading ?\nQuestion 18 :- How to implement Lazy Loading in Angular ?\nQuestion 19 :- Define Services ?\nQuestion 20 :- What is Dependency Injection ?\nQuestion 21 :- How to implement Dependency Injection ?\nQuestion 23 :- Whats the benefit of Dependency Injection ?\nQuestion 24 :- Differentiate between ng serve and ng build ?\nQuestion 25 :- Explain the --prod parameter in ng build ?\nCovered 6 Important questions on ViewChild and ViewChildren in Angular - Part 2.\nQuestion 26 :- Explain ViewChild and ViewChildren ?\nQuestion 27 :- Why do we need Template reference variables ?\nQuestion 28 :- What is ContentProjection ?\nQuestion 29 :- Explain Content projection Slot ?\nQuestion 30 :- What is ContentChild and ContentChildren?\nQuestion 31 :- ViewChild vs ViewChildren vs ContentChild vs ContentChildren ?\nQuestions around Angular component lifecycle - Part 3.\nQuestion 32 :- Explain the importance of Component life cycle ?\nQuestion 33 :- Explain events and sequence of component life cycle ?\nQuestion 34 :- constructor vs ngOnInit() ?\nTricky Interview questions on HTTP calls, Emitters & Routing - Part 4.\nQuestion 35 :- How to make HTTP calls using Angular ?\nQuestion 36 :- What is the need of Subscribe function ?\nQuestion 37 :- How to handle errors when HTTP fails ?\nQuestion 38 :- How to pass data between components ?\nQuestion 39 :- What are input , output and event emitters ?\nQuestion 40 :- How to pass data during routing ?\nQuestion 41 :- Is it a good practice to pass data using services ?\nQuestions on Angular Pipes - Part 5.\nQuestion 42 :- What is the need of Angular Pipes ?\nQuestion 43 :- Can you name some built-in Angular pipes ?\nQuestion 44 :- How to create Custom pipes in Angular ?\nTen important questions on RxJS (Reactive Extensions for JavaScript) - Part 6\nQuestion 45 :- What is the fullform of RxJS ?\nQuestion 46 :- What is the purpose of RxJS ?\nQuestion 47 :- What are Observables and Observers ?\nQuestion 48 :- Explain the use of Subscribe with sample code ?\nQuestion 49 :- How to unsubscriber in RxJS ?\nQuestion 50 :- Explain the concept of operators with sample code?\nQuestion 51 :- How to install RxJS ?\nQuestion 52 :- Differntiate between promise and RxJS ?\nQuestion 53 :- In Angular where have you used RxJS?\nQuestion 54 :- Which operators have used from RxJS ?\nQuestion 55 :- What is the Push/Reactive vs Pull/Imperative?\nEssential questions around Interceptors - Part 7.\nQuestion 56 :- What are Interceptors in Angular?\nQuestion 57 :- How to implement Interceptors?\nQuestion 58 :- Give some use of Interceptors?\nQuestion 59 :- Can we provide multi-Interceptors?\n13 Important Interview Questions on Angular Validations - Part 8\nQuestion 60 :- What are two ways of doing validation in Angular?\nQuestion 61 :- Template driven forms VS Reactive Forms?\nQuestion 62 :- In what situations you will use what?\nQuestion 63 :- Explain template reference variables ?\nQuestion 64 :- How do we implement Template driven forms?\nQuestion 65 :- How do we implement Reactive forms ?\nQuestion 66 :- How can we implement composite validations?\nQuestion 67 :- How to create dynamic validation ?\nQuestion 68 :- How to check if overall validation and specific validations are good ?\nQuestion 69 :- Can you talk about some inbuilt validators ?\nQuestion 70:- How can you create your own custom validator ?\nQuestion 71:- Can we implement angular validators with out FORM tag ?\nQuestion 72:- What is [ngModelOptions]=\"{standalone: true}\" ?",
      "target_audience": [
        "Students who are looking to crack Angular Interviews.",
        "Students who know Angular but not able to crack Angular interviews.",
        "For last minute revision before going to Angular Interviews."
      ]
    },
    {
      "title": "HTML5 Mastery—Build Superior Websites & Mobile Apps NEW",
      "url": "https://www.udemy.com/course/html5-mastery-mobile-apps-websites/",
      "bio": "Easily build 25 websites and apps (including Virtual Reality, iPhone and Android apps) with HTML5, CSS, & JavaScript",
      "objectives": [
        "Master HTML5 Web and App Development from beginner-level to expert",
        "Create your own mobile web apps with hardware and offline access",
        "Explore the newest HTML5 techniques for mobile-devices",
        "Discover the worlds of Virtual Reality (VR) and social networks with HTML5",
        "Reach a wider global audience creating Installed Progressive Web Apps"
      ],
      "course_content": {},
      "requirements": [
        "Before taking this course you should know how to browse the Web on the computer and on your mobile device.",
        "In this course, I will help you install the necessary software on your computer. It will be helpful if you are comfortable with installing your own software.",
        "The ideal student would be passionate about learning new technologies and diving into hands-on projects."
      ],
      "description": "If you want to build cool stuff and are looking for a workshop-intensive experience to help you start on the path to becoming a web designer, web developer, or full-stack engineer, then this course is for you. This course introduces you to a solid foundation in HTML5, CSS3, and JavaScript before quickly ramping up your skillset to work with the most current technologies applied in today's market. In over 25 projects, learn how to create your own websites and mobile apps while working with GPS, Voice Recognition, Camera, Offline, VR metaverse and 360 experiences, and many more features.\nIn this course, you will:\nLearn the basics of HTML5, CSS, and JavaScript APIs\nCode and publish your apps with cloud-based databases and storage for free\nMaximize your phone's hardware, including GPS, Voice Recognition, and the camera for your apps\nBuild your own Progressive Web Apps with an Installed Icon and offline immediate access\nPublish your PWAs in the Google Play Store for Android and AppStore for iPhone and iPad, create desktop apps\nUse social networks and sharing sites for embedding and sharing viral content\nCreate websites, apps, and VR experiences while coding your own projects\nIntegrate your work with Facebook, Twitter, Instagram, WhatsApp, Snapchat, YouTube, and Google Maps\n\n\nA Unique HTML5 Course Using Only Cutting Edge Mobile-First Techniques\nThe challenge with learning HTML5 today is that most courses focus only on theory and cover every tag without seeing the big picture. However, in my course, you will code HTML, CSS, and JavaScript in more than 25 real-world projects that you can adapt to your needs, creating infinite combinations for your ideas, customers, or company. Additionally, you will have access to more than 50 exercises with working files, images and code ready to use and publish with your own content or services. In a special deal just for students in this course, I also provide a free service where you’ll be able to test your HTML5 code in your mobile phone without setting up any server or special configuration. You will be able to install a mobile app on your phone in just a few minutes!\nWork alongside me on over 50 exercises and 25 real-world projects where you will build:\nAn Instagram-like Social Photo Sharing Network\nA Yelp-like Business Locator using Geolocation and Maps\nA Pokemon-Go-like Game with an Offline Installed Icon on Android and iPhone\nA QR Code Reader, a Gravity Game, and Your Personal Activity Screen Launcher\nAn E-commerce Site with a Shopping Cart\nYour Personal Portfolio Website\nA 360 viewer and a VR experience for Oculus, Daydream, Cardboard, and Hololens\nA Restaurant Menu App, a Hands-free Cooking App for Phones and Tablets, and a Blog\n\n\nThis course will cover topics that aren’t found in other HTML5 courses out there.  Learn with me as I discuss the components a successful HTML5 solution must have, including mobile optimizations, integration with social networks and native apps, offline access for poor cellular connections, database access, installed icons on iOS and Android and much more.\nWhy Learn from Me\nIn this course, you’ll only focus on Web and mobile solutions that are optimized for the best possible conversion and reach. That’s because I've been teaching these technologies for more than 20 years while creating real-world apps and websites for small and big companies around the world. I specialize in Mobile HTML5, Swift, Kotlin, iOS and Android development, Progressive Web Apps, and Web Performance, and I’ve led professional training sessions for companies such as Apple, PayPal, LinkedIn, Cisco, Intel, and HP. I’ve spent years distilling the knowledge I’ve written about in my published books, which are available in more than 13 translations in 100 countries.\nTeaching people technical concepts is my life’s work, and I’ve uniquely designed this course so that you’ll create apps using only what’s important to actually know—not what the outdated books say and not covering legacy techniques that nobody uses anymore. You’ll get up and running with HTML5 in just a few hours, and you will be able to create and test your own apps on your mobile phone in the first few minutes of the course.\nWhen you finish this course, you will receive a verifiable certificate of completion and peace of mind knowing that you have mastered the most cutting-edge HTML5 techniques through hands-on learning and real-world projects.\nJoin me on this adventure today!  I’ll see you inside the course.",
      "target_audience": [
        "People who are interested in publishing their own websites and mobile apps",
        "People interested in hands-on learning and writing their own solutions",
        "Designers who have not worked with the Web for more than 5 years",
        "This course is best suited for beginner-level students interested in the latest developments in HTML, CSS, and Javascript. Advanced-level web designers or developers creating their own web apps today will not be suited for this course."
      ]
    },
    {
      "title": "PHP From Scratch | Beginner To Advanced",
      "url": "https://www.udemy.com/course/php-from-scratch-course/",
      "bio": "Learn PHP fundamentals then build a job listing website from the ground up, using a Laravel-like infrastructure",
      "objectives": [
        "Learn the fundamentals of PHP programming",
        "Learning modules for data types, functions, loops, OOP, databases and more",
        "Build a job listing website from the ground up without using any frameworks or libraries",
        "Create a custom Laravel-like router that takes params & middleware",
        "Learn to utilize namespaces and PSR-4 Autoloading",
        "Build an authentication system using sessions",
        "Great precursor if you plan on learning Laravel"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "What Is PHP?",
          "Setup PHP - MacOS",
          "Setup PHP - Windows",
          "Text Editor Setup",
          "PHP Sandbox Setup"
        ],
        "Data Types, Variables & Built-in Functions": [
          "PHP Tags, Printing & Comments",
          "Variables",
          "Data Types",
          "String Concatenation",
          "Type Casting & Juggling",
          "Variables Challenge",
          "Arithmetic Operators & Functions",
          "String Functions",
          "Dates & Times"
        ],
        "Arrays & Iteration": [
          "Intro To Arrays",
          "Array Functions",
          "Associative Arrays",
          "Multi-Dimensional Arrays",
          "Array Challenges",
          "Basic Loops",
          "Nested Loops",
          "Looping Through Arrays",
          "Multi-Dimensional Array Iteration",
          "Array & Loop Challenges"
        ],
        "Control Structures & Conditionals": [
          "If Statements",
          "Conditional HTML Output",
          "Comparison & Logical Operators",
          "Conditionals In Loops - break & continue",
          "Activity: Dynamic Job Listings",
          "FizzBuzz Challenge",
          "Switch Statements",
          "Ternary Operator",
          "Null Coalescing Operator",
          "Names Challenge"
        ],
        "Functions": [
          "Functions & Return Values",
          "Parameters & Arguments",
          "Global & Local Scope",
          "Constants",
          "Optional Type Declarations",
          "Activity: Job Listings Helper Functions",
          "Average Salary Challenge",
          "Anonymous Functions & Closures",
          "Callback Functions",
          "Arrow Functions",
          "Format Salary Refactor Challenge",
          "More Function Challenges"
        ],
        "Object Oriented Programming (OOP)": [
          "OOP Overview",
          "Creating a Class",
          "Access Modifiers, Getters & Setters",
          "Inheritence",
          "Static Members & Methods",
          "OOP Challenges",
          "Abstract Classes",
          "Interfaces"
        ],
        "Superglobals": [
          "Overview Of Superglobals",
          "$_SERVER - Get Server Information",
          "Environment Variables & $GLOBALS",
          "$_GET - Data From Query Params",
          "$_POST - Data From Forms",
          "$_REQUEST - Superglobal",
          "$_FILES - Uploading Files",
          "Message Alert Challenge",
          "$_SESSION - Creating a Session",
          "$_COOKIE - Working With Cookies"
        ],
        "Database Integration & PDO": [
          "An Intro To Databases",
          "MySQL Setup - MacOS",
          "MySQL Setup - Windows",
          "MySQL Shell & Making Queries",
          "MySQL Workbench & Database Setup",
          "Database Users & Privileges",
          "Connect With PDO",
          "Fetch Multiple Records",
          "Fetch Single Record",
          "Create Form & Insert Record",
          "Delete Records",
          "Edit Form & Update Records"
        ],
        "Workopia Project Start & Custom Routing": [
          "Project Intro",
          "Project Repo Link",
          "UI Theme Files",
          "Folder Setup",
          "Home View & Set Document Root",
          "Git Setup & Commit",
          "Split UI Into Partials",
          "Inspect Helper Functions",
          "Create a VERY Basic Router",
          "Create Views",
          "Separate Router Files",
          "Router Refactor To Class"
        ],
        "Database Class, Fetch & Display Listings": [
          "Section Intro",
          "Project Database Setup - MySQL Workbench",
          "Database Class & Connection",
          "Query Method & Fetch Listings",
          "Pass Data To View",
          "Single Listing & Named Params",
          "Single Listing Display"
        ]
      },
      "requirements": [
        "You only need to know the basics of HTML"
      ],
      "description": "This course is broken up into two parts. First, we have seven learning modules to learn the fundamentals of PHP programming, including:\n\n\nData Types & Variables\nArrays & Iteration\nControl Structures & Conditionals\nFunctions & Scope\nObject Oriented Programming\nSuperglobals ($_GET, $_POST, $_SESSION, $_COOKIES, etc)\nDatabase Integration & PDO\nAfter that, we go for a hands-on approach and build a job listing website. We build this from the ground up without any framework or libraries. These sections will teach you how to structure a vanilla PHP project and is a great precursor to learning Laravel or another framework.\n\n\nHere is what we will do in the project videos:\n\n\nWe will create a custom Laravel-like router. We will refactor this a bunch of times to keep adding features like accepting HTTP methods, params and middleware.\nWe will structure our project into two main folders, which will be called Framework and App. Framework will be the core that includes classes like Router, Database, Validation, and Session. App will include our controllers and views.\nWe will create CRUD operations for job listings.\nWe will implement an authentication and authorization system as well as protect routes using custom middleware.\nWe will add a search feature to search/filter listings by keywords and/or location\nWe will learn to validate and sanitize data as well as use prepared statements with PDO to protect against SQL injection attacks.\nIf you are a beginner, I suggest taking the course from the beginning and go through all of the learning modules. If you are more experienced and know the fundamentals, you can jump right into the project.",
      "target_audience": [
        "Beginners as well as experienced developers that want to learn how to structure a PHP project with no frameworks"
      ]
    },
    {
      "title": "Git a Web Developer Job: Mastering the Modern Workflow",
      "url": "https://www.udemy.com/course/git-a-web-developer-job-mastering-the-modern-workflow/",
      "bio": "Learn Git, GitHub, Node.js, NPM, Object-oriented JavaScript, ES6, webpack, Netlify, BEM and Job Interview Tips",
      "objectives": [
        "Build websites using the modern skills, tools, and best-practices that companies are looking for in developers.",
        "Write organized, well structured JavaScript and CSS that other developers can easily understand.",
        "Confidently apply for web developer jobs knowing you can jump into a dev team and immediately contribute to projects."
      ],
      "course_content": {
        "Welcome!": [
          "Course Overview"
        ],
        "Git Essentials": [
          "What is Git?",
          "See Git in Action",
          "Important Note About Text Editing Software",
          "Quick Note For Mac Users",
          "Git Your Hands Dirty",
          "Setup Your GitHub"
        ],
        "Intro to Node.js & NPM": [
          "The Need for Automation and Organization",
          "A Quick Note",
          "Node.js Introduction",
          "NPM Introduction",
          "Important Note About Package Versions To Save You Frustration"
        ],
        "Webpack Essentials": [
          "Webpack Introduction",
          "Setup Your Text Editor To Understand PostCSS Syntax",
          "CSS With Webpack",
          "Important Note"
        ],
        "CSS Architecture": [
          "CSS File Architecture",
          "What is BEM?",
          "Complete Two Blocks"
        ],
        "Quick Webpack Timeout": [
          "Webpack Dev Server"
        ],
        "Mobile-first Essentials": [
          "What does \"Mobile-first\" Mean?",
          "Responsive Images",
          "Tips for Testing Responsive Images"
        ],
        "Let's Build!": [
          "Creating Reusable Blocks",
          "Headline Block",
          "Column Layout Block",
          "Attention to Detail (Part 1)",
          "Attention to Detail (Part 2)"
        ],
        "Git Timeout": [
          "Git Branches"
        ],
        "Building \"Our Features\" Section": [
          "Styling Our Features (Part 1)",
          "Styling Our Features (Part 2)"
        ]
      },
      "requirements": [
        "You'll need a basic understanding of HTML and CSS. Do you know how to use HTML to create a paragraph element? Do you know how to use CSS to make that paragraph orange?",
        "All software we'll use is 100% free, and we'll use 100% free web hosting through the GitHub and Netlify services",
        "I recommend a modern text editor: Visual Studio Code is free and excellent (Google it).",
        "Access to your own computer or laptop (not a public computer like in a library) as we'll be installing various tools on our computers throughout the course. Windows or Mac OS are great. Everything will work on Linux as well, but I don't walk through any Linux-specific instructions."
      ],
      "description": "This course was updated in June of 2023 to match the demands and trends of the industry.\nYou already understand the basics of HTML and CSS, but you don’t necessarily feel qualified for the web developer jobs you want. In this course we’ll bridge that gap by building a mobile-first responsive website, together, step-by-step. Along the way we’ll learn the modern skill-set that companies are looking for in developers.\nI know what companies are looking for because as a senior developer I’ve been on the hiring side of job interviews. Every time we passed on a candidate I’d think to myself “It would be nice if we could point them towards a course that taught the exact skill set we’re looking for.”\nI couldn’t find a course like that - so I built this one.\nBy the end of this course you’ll be able to build sites using the modern skills, tools, and best-practices that companies need in developers.\nTake your developer career to the next level by:\nLearning Git, GitHub, and command-line basics to collaborate with other developers and deploy your sites live up onto the web.\nLeveraging Node.js tools like NPM and webpack to save time by automating tasks.\nEnhancing your CSS knowledge with techniques (BEM & PostCSS) to keep your styles super-organized and manageable even on larger sites.\nSpeeding up your sites with the mobile-first performance philosophy.\nUnderstanding JavaScript basics like Object-oriented Programming, and how to write well-structured code using the ES6 module pattern (Babel & webpack).\nUsing the Netlify service to not only host your website but also learn the very basics of cloud (or AWS Lambda) functions.\nDiscovering tips to get more job interviews, do well in interviews, and continually progress in your career (avoid burnout & stagnation).\n\nThis course may be brand new, but this isn’t my first time teaching. I’ve led trainings for Fortune 500 companies, and I’ve already helped over 7,000 people on Udemy and received the following feedback:\n\n\"Brad definitely has some of the best techniques to embed the lesson into your mind… hands down these are the best tutorials I have had the opportunity to view.\"\n\n\"Presentation is concise without being tedious… you honestly feel that you have a thorough understanding of the subject.\"\n\n\"…[Brad] explained the process. Not memorize this or that, he explained the process. If you're looking to take a course to understand the foundations of creating websites, look no further.\"\n\nI've been teaching for the better part of a decade and I consider this course my magnum opus. This is the course I wish I could have taken several years ago.\nBecome highly valuable and relevant to the companies that are hiring web developers; in one convenient place alongside one instructor. If you're ready to begin your transformation - I'll see you on the inside!",
      "target_audience": [
        "You'll benefit from this course if you're looking to bridge the gap between what you currently know (HTML & CSS) and what hiring companies want you to know."
      ]
    },
    {
      "title": "Starting with Quarkus",
      "url": "https://www.udemy.com/course/quarkus-starting-with-quarkus/",
      "bio": "Start using Quarkus: the Supersonic Subatomic Java toolkit",
      "objectives": [
        "Understand the Quarkus ecosystem, where it comes from, its performance benefits",
        "Bootstrap a REST application with Quarkus",
        "Test it with JUnit and RestAssured",
        "Use injection with CDI",
        "Configure the application and Quarkus itself",
        "Use the dev/test/prod Quarkus profiles",
        "Package a Quarkus application in several JAR formats",
        "Generate a native binary thanks to GraalVM",
        "Build and execute a Docker container out of the application"
      ],
      "course_content": {
        "Starting with Quarkus": [
          "Course Overview",
          "What Will You Build in This Course?",
          "Next"
        ],
        "Understanding Quarkus": [
          "Lesson Overview",
          "What Is Quarkus?",
          "Supersonic and Subatomic",
          "Main Purpose Solved by Quarkus",
          "Next"
        ],
        "Getting Started": [
          "Lesson Overview",
          "Checking up the Development Environment",
          "Activity: Checking up the Development Environment",
          "Bootstrapping the Application",
          "Activity: Bootstrapping the Application",
          "Developer Joy",
          "Activity: First Hands on Quarkus",
          "Next"
        ],
        "Developing the Application": [
          "Lesson Overview",
          "Exposing the Book REST Endpoint",
          "Activity: Exposing the Book REST Endpoint",
          "Injecting a Bean",
          "Activity: Injecting a Bean",
          "Next"
        ],
        "Testing the Application": [
          "Lesson Overview",
          "Testing the Book REST Endpoint",
          "Activity: Testing the Book REST Endpoint",
          "Next"
        ],
        "Configuring the Application": [
          "Lesson Overview",
          "Injecting Configuration",
          "Activity: Injecting Configuration",
          "Configuring Quarkus",
          "Activity: Configuring Quarkus",
          "Adding Profiles",
          "Activity: Adding Profiles",
          "Next"
        ],
        "Packaging the Application": [
          "Lesson Overview",
          "Building Executable JARs",
          "Activity: Building Executable JARs",
          "Building Native Executables",
          "Activity: Building Native Executables",
          "Testing Native Executables",
          "Activity: Testing Native Executables",
          "Next"
        ],
        "Executing the Application": [
          "Lesson Overview",
          "Containerizing Executable JARs",
          "Activity: Containerizing Executable JARs",
          "Containerizing Linux Native Executables",
          "Activity: Containerizing Linux Native Executables",
          "Next"
        ],
        "Revisiting the Application": [
          "Revisiting the Application",
          "Congratulations!",
          "Next"
        ],
        "What’s Next?": [
          "Quarkus References",
          "Author References",
          "Bye Bye"
        ]
      },
      "requirements": [
        "A recent Windows / Mac / Linux machine",
        "Knowledge of the Java language and the Java ecosystem (Maven, JUnit, GraalVM)",
        "Basic knowledge of RESTful Web Services",
        "Basic knowledge of Docker"
      ],
      "description": "This course is for Java developers who want to discover Quarkus. It’s a mixture of slides and code so you can “Understand and Practice” at the same time. This way, you learn the theory, and then put it into practice by developing an application step by step.\nIn this course you will go through an entire development cycle. After introducing Quarkus, you will make sure your development environment is set up, and you will go from bootstrapping a Quarkus application, to running it as a Docker container. The different steps you’ll go through are:\nUnderstand Quarkus,\nCheck your development environment,\nGet your hands on Quarkus,\nExpose a REST endpoint using JAX-RS,\nInject beans with CDI,\nTest the REST endpoint with JUnit and RESTAssured,\nConfigure the application with MicroProfile Configuration\nConfigure Quarkus,\nAdd profiles to the configuration,\nBuild executable JARs\nBuild a native executable and a Linux executable with GraalVM,\nCheck the performances of a Quarkus application,\nContainerize the application with Docker and execute it.\nAt the end of the course you’ll get a good understanding of Quarkus. You will be able to bootstrap, develop, package and execute a REST application, but most important, take Quarkus to your next project.\nGood luck for the course, and please reach out if you need any help or if you have any request: I’m here to help!",
      "target_audience": [
        "Java developers curious about Quarkus",
        "Back-end Java developers willing to move their application to the cloud",
        "Spring or Java EE developers who need to compare their toolkit with Quarkus"
      ]
    },
    {
      "title": "The Complete Salesforce Development Course - 2024 Updates",
      "url": "https://www.udemy.com/course/salesforce-development/",
      "bio": "Master Salesforce Development with Apex and Lightning. The only course you need, now with Winter '25 Release Updates",
      "objectives": [
        "You will become better than 90% Salesforce Developer out there",
        "Web Application Development Architecture",
        "Salesforce Full-Stack Development",
        "Apex Programming Fundamentals",
        "Apex Development",
        "Lightning Component Development",
        "Writing Triggers in Apex",
        "Async Apex - Batch Apex, Queueable Apex, Schedule Apex, Future Methods",
        "SOQL (Salesforce Object Query Language)",
        "Database Manipulation (DML)",
        "Apex Unit Testing",
        "Exception Handling in Apex",
        "60+ Challenges",
        "2 Boss Level Projects",
        "Code Bulkification",
        "Order Of Execution in Salesforce",
        "Salesforce Apex Governor Limits",
        "Salesforce Lightning Design System (SLDS)",
        "Object-Oriented Programming System",
        "Helpful for Salesforce Platform Developer 1",
        "Helpful for Salesforce Platform Developer 2",
        "Quarterly Release Updates"
      ],
      "course_content": {
        "Course Overview": [
          "What You'll Get in This Course",
          "Bookmark the Course Resources",
          "How to Get the Most Out of the Course"
        ],
        "Web Application Fundamentals": [
          "Web Application Architecture",
          "Web Technologies",
          "Salesforce Technologies"
        ],
        "Before Development": [
          "Your Questions",
          "Declarative Tools in Salesforce",
          "Create Salesforce Dev Org",
          "Code Editors for Salesforce Development"
        ],
        "Apex Fundamentals": [
          "Hello World - Your First Ever Apex Code",
          "Variables and Heap",
          "Primitive Data Types",
          "String Class Methods",
          "Escape Character",
          "Adding Comments in Your Code",
          "List Datatype - Collections in Apex",
          "Set Datatype - Collections in Apex",
          "Map Datatype - Collections in Apex",
          "Challenge 1 - Variables and Datatype",
          "Challenge Solution - Variables and Datatype",
          "Constants in Apex",
          "Expressions and Operators - Intro",
          "Operators",
          "Challenge 2 - Operators",
          "Challenge Solution - Operators",
          "[New] Safe Navigation Operator",
          "[New] Null Coalescing Operator",
          "Datatype Conversion"
        ],
        "Control Flow Statements": [
          "If-Else Statement",
          "Switch-When Statement",
          "Challenge 3 - Conditional Statement",
          "Challenge Solution - Conditional Statements",
          "The Story of If-Else vs Switch-When",
          "Loops In Apex - Do-While Loop",
          "Challenge 4 - Do-While Loop",
          "Challenge Solution - Do-While Loop",
          "While Loop",
          "Challenge 5 - While Loop",
          "Challenge Solution - While Loop",
          "For Loop",
          "Challenge 6 - For Loop",
          "Challenge Solution - For Loop",
          "Break Statement - Breaking a Loop",
          "Continue Statement - Skipping Loop Iteration",
          "List Iteration For Loops",
          "You Are a Developer"
        ],
        "Apex Classes and Methods": [
          "OOPS in Apex",
          "Apex Class - Hello World Program (Again :) )",
          "Access Modifiers",
          "Apex Methods",
          "Apex Methods and Access Modifiers Practical",
          "Parameterized Methods",
          "Polymorphic Methods",
          "Static Keyword",
          "Apex Naming Conventions",
          "Improve Previous Code with Apex Methods",
          "Challenge 7 - Apex Methods",
          "Challenge Solution - Apex Methods",
          "Class Constructor",
          "Initialization Blocks",
          "Apex Class Lifecycle",
          "Inner Apex Class Or Wrapper Class"
        ],
        "Apex Testing - Part 1": [
          "Annotations",
          "Introduction to Apex Testing",
          "Write Your First Test Class",
          "Assert Statements",
          "Challenge 8 - Apex Tests",
          "Challenge 8 Solution",
          "Whats Next in Test Classes",
          "[New] New Assertion Methods in Assert Class"
        ],
        "Salesforce Object Query Language": [
          "Salesforce Objects and Fields Overview",
          "Understand SOQL",
          "WHERE Clause, AND and OR Operators",
          "IN and LIKE Operators",
          "ORDER BY Clause",
          "LIMIT and OFFSET",
          "SOQL Operators",
          "Date Literals",
          "Challenge 9 - SOQL",
          "Challenge 9 Solution",
          "Relationship Queries Overview",
          "Parent to Child Relationship Queries",
          "Child to Parent Relationship Queries",
          "Challenge 10 - SOQL",
          "Challenge 10 Solution",
          "SOQL in Apex",
          "SOQL Relationships in Apex",
          "SOQL Bind Variables",
          "Dynamic SOQL Queries",
          "[New] SOQL Bind Variables with Key Value Pair Map",
          "[New] 5 Level Deep Parent to Child Queries"
        ],
        "SObject and DML": [
          "DML Overview",
          "Insert Operation",
          "DML Logs Discussion",
          "Database Methods vs DML Statements",
          "Update Operation",
          "Delete and Undelete Operations",
          "SObject Overview",
          "Get Fields with SObject",
          "Get Parent Object using SOjbect",
          "Get Child SObjects using SObject",
          "Create New SObject Record",
          "Challenge 11 - DML",
          "Challenge 11 Solution"
        ],
        "Exception Handling": [
          "What is an Exception",
          "Try, Catch and Finally",
          "Exception Methods",
          "4. Throw a Custom Exception"
        ]
      },
      "requirements": [
        "Salesforce Admin knowledge (preferred, but not required)",
        "Passion for technology",
        "Eagerness to learn",
        "Ambition to become the best"
      ],
      "description": "\"The only thing standing between you and your goal is the story you keep telling yourself as to why you can't achieve it.\" – The Wolf of Wall Street\n\n\"The Complete Salesforce Development\", a course designed for all who aspire to become a Salesforce Developer.\n\n\nWhether you're new to programming and feeling overwhelmed, take this course. If you're an experienced pro looking to level up,  take this course. If you're a student, recent grad, Salesforce admin, or IT professional, take this course.  This is:\n\n\n\"ONE COURSE TO RULE THEM ALL\"\n\n\nThe course is designed for all experience levels. You will start from ground 0 and in no time, you will summit the very peak of Salesforce Development.\nYou will learn all the nasty backend stuff (Apex Development) and all the cool frontend stuff (Lightning Development).\nWhile climbing the Salesforce Development peak, you will face many challenges (60+ Challenges) and real-time projects to help you build that muscle memory and make you a proficient Salesforce Developer.\n\n\nThis course is designed to make you better than 90% of experienced Salesforce Developers. Bold claim? Absolutely, but I stand by it, backed by my teaching experience and the success stories of my students. Here’s how your journey will unfold:\n\n\nCrawl – We’ll start with the basics: Web Application Fundamentals. You’ll learn how the web works, what applications are, and the difference between frontend and backend. This foundation sets you up for everything that follows.\n\n\nWalk – Next, we dive into Salesforce Apex Development. From variables and data types to more complex topics, we’ll build your skills step by step. Each lesson is paired with challenges to hone your problem-solving abilities.\n\n\nRun – Now, you're picking up speed, reaching the level of experienced Salesforce developers. You’ll master advanced topics like Apex Triggers, Lightning Component Development, and Salesforce Async Apex. Most developers stop short of these skills, but NOT YOU.\n\n\nFly – Finally, it’s time to soar ahead of the competition. How? With the boss-level challenges in this course! As a Salesforce Developer with experience from Salesforce, Google, and Amazon, I’ve wrestled with these challenges myself. I can confidently say that 90% of Salesforce Developers won’t nail these problems on their first try. Feeling intimidated? Don’t worry—every concept and challenge comes with detailed, step-by-step solutions to guide you through.\n\n\nGet ready to transform your Salesforce skills and leave most developers in the dust!\n\n\nIt's impossible to capture everything this course offers in just a few words, but here are some major highlights:\nWeb Application Architecture\nApex Programming Fundamentals\nSalesforce Lightning Fundamentals\nAdvanced/Dynamic Apex Development\nApex Triggers\nAsync Apex Development\nApex Unit Testing / Apex Tests\nSalesforce Lightning Development (Aura Framework) with 2 big Projects\nSOQL - Salesforce Object Query Language\nDatabase Manipulation in Salesforce\nException Handling in Apex\nCode Bulkification in Salesforce\nOrder Of Execution in Salesforce\nSalesforce Apex Governor Limits\nObject-Oriented Programming System\nDifferent Tools to Write Salesforce Code\nSalesforce Lightning Design System (SLDS)\nQuarterly Release Updates\n15+ Projects\nBonus Crash Courses to Interview Preparations and Rapid Learning\n\n\nThe course can be very helpful for Platform Developer I and Platform Developer II aspirants as well, as 90% of the topics on these exams are covered in the course.\n\n\nYou can also opt for this course if you want to learn Apex Development or Salesforce Lightning Development, the course has it all.\n\n\nThis course is offered by SFDCFacts Academy, renowned for top-quality Salesforce content, and taught by Manish Choudhari, an Amazon Senior Software Engineer and ex-Google, ex-Salesforce professional. With over 100k students worldwide and multiple \"Bestseller\" and \"Highest Rated\" courses on Udemy, you're in expert hands!",
      "target_audience": [
        "All Salesforce Development Aspirants",
        "Salesforce Admins & Developers",
        "Fresh Grads",
        "Salesforce Platform Developer 1 Certification Aspirant",
        "Salesforce Platform Developer 2 Certification Aspirant"
      ]
    },
    {
      "title": "Build Enterprise Applications with Angular 2 (and Angular 4)",
      "url": "https://www.udemy.com/course/angular2-advanced/",
      "bio": "Firebase, Authentication, Ionic, Integration with ASP.NET Core, Performance Optimization, Redux and Unit Testing",
      "objectives": [
        "Build real-time apps with Angular and Firebase",
        "Build mobile apps with Angular and Ionic",
        "Implement authentication and authorization using Auth0 and JSON Web Tokens (JWT)",
        "Integrate your Angular apps with ASP.NET Core",
        "Implement the Redux architecture in your Angular apps",
        "Unit test your Angular apps"
      ],
      "course_content": {
        "Building Real-time Apps with Firebase and AngularFire": [
          "Welcome",
          "Introduction",
          "What is Firebase?",
          "Creating an Angular 2 Project",
          "Adding Firebase",
          "Working with a Firebase Database",
          "Rendering a List",
          "Async Pipe",
          "Rendering an Object",
          "Adding an Object",
          "Updating an Object",
          "Removing an Object"
        ],
        "Firebase: Advanced Topics": [
          "Introduction",
          "A Complex Structure",
          "Joining",
          "A More Complex Join",
          "Checking for Existence of an Object",
          "Sorting",
          "Filtering",
          "Indexes",
          "Limiting",
          "Multiple Updates"
        ],
        "Firebase: Authentication": [
          "Introduction",
          "Firebase Authentication",
          "Implementing Facebook Login",
          "Working with the Current User",
          "Requesting Additional Facebook Permissions",
          "Calling Facebook Graph API",
          "User Profiles",
          "Email/Password Authentication",
          "Authorization",
          "Working with Security Rules",
          "Additional Resources"
        ],
        "Authentication Using Auth0": [
          "Introduction",
          "Architecture",
          "Looking inside a JWT",
          "Auth0",
          "Creating a Service",
          "Using the Service",
          "Getting the User's Profile",
          "Updating the User's Profile",
          "Adding Additional Signup Fields",
          "Securing API Endpoints",
          "Calling Secured APIs"
        ],
        "Building Mobile Apps with Ionic2 and Angular2": [
          "Introduction",
          "What is Ionic?",
          "Building Your First Ionic App",
          "Deploying to an Android Device",
          "Deploying to an iOS Device",
          "Components",
          "Lists",
          "Adding a New Page",
          "Navigation",
          "Modals",
          "Icons",
          "Inputs",
          "Buttons"
        ],
        "Ionic: Beyond the Basics": [
          "Introduction",
          "Platform Service",
          "Plugins",
          "App Version",
          "Contacts",
          "Camera",
          "Geolocation",
          "Google Maps",
          "Theming Ionic Apps",
          "Overriding Ionic SASS Variables",
          "Custom CSS",
          "Page-specific Styles",
          "Icon and Splash Screen"
        ],
        "Integration with ASP.NET MVC/Core": [
          "Introduction",
          "Architecture",
          "Creating a New ASP.NET Core Project",
          "A Common Error",
          "Project Structure",
          "Angular Universal and Server-side Pre-rendering",
          "Hosting Environment",
          "Adding 3rd-party Libraries",
          "A Real-world Example",
          "Server-side Implementation",
          "Client-side Implementation",
          "Authentication",
          "Deployment",
          "Additional Reading"
        ],
        "Change Detection in Angular": [
          "Introduction",
          "Overview of Change Detection",
          "Change Detection in Action",
          "Change Detection Strategies",
          "Value Types and Reference Types",
          "Default Change Detection Strategy",
          "OnPush Change Detection Strategy",
          "Immutable.js",
          "Profiling"
        ],
        "Redux": [
          "Introduction",
          "What is Redux",
          "Building Blocks of Redux",
          "Pure Functions",
          "Installing Redux",
          "Working with Actions",
          "The Select Decorator",
          "Avoiding State Mutation",
          "Using Immutable.js",
          "Exercise",
          "Redux DevTools",
          "Calling Backend APIs",
          "Refactoring Fat Case Statements",
          "Dealing with Complex Domains"
        ],
        "Unit Testing Angular Apps": [
          "Introduction",
          "What is Automated Testing?",
          "Types of Tests",
          "Unit Testing Fundamentals",
          "Working with Strings and Arrays",
          "Set Up and Tear Down",
          "Working with Forms",
          "Working with Event Emitters",
          "Working with Spies",
          "Interaction Testing",
          "Working with Confirmation Boxes",
          "Limitations of Unit Tests",
          "Code Coverage",
          "Exercises"
        ]
      },
      "requirements": [
        "Familiarity with fundamentals of Angular 2 is essential."
      ],
      "description": "So, have you mastered the fundamentals of Angular 2 (and higher) and are hungry for more? You've come to the right place.\n\nIn this course, Mosh, author of ten five-star Udemy courses with more than 40,000 students around the world, introduces you to key concepts and popular frameworks in Angular eco-system that are used in building enterprise applications.\n\n\nBy the end of watching this course, you'll be able to\nBuild real-time apps with Angular and Firebase\nBuild mobile apps with Angular and Ionic 2\nIntegrate your Angular apps with ASP.NET MVC/Core\nImplement authentication and authorization using Auth0 and JSON Web Tokens (JWT)\nImplement the Redux architecture in your Angular apps\nOptimize the rendering performance of your Angular apps\nWrite unit tests to catch more bugs before releasing your apps\nAnd more...\n\n\nPREREQUISITES\nIn order to take this course, you should have at least 3 months experience developing applications with Angular (2 or higher). If you need to strengthen your Angular fundamentals, you can watch Mosh's Angular course for beginners:\nAngular 2 with TypeScript for Beginners\n\n\nIf you've taken any of Mosh's courses before, you know what you get. He is very passionate, clear and concise in his teaching. You learn the cutting-edge stuff from an industry expert who doesn't waste a single minute of your precious time.\n\n\nSo, if you're looking for an advanced Angular course with\nA passionate coder and instructor who knows his craft\nPerfect structure\nBalanced mix of theory and practice\nClear, concise and bite-sized videos\nWorld-class production\nDon't look further. Enrol in the course now and get started.\n\n\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you feel like you haven't gained the confidence to build real-world apps with Angular, ask for a full refund within 30 days. All your money back, no questions asked.\n\n\n\n\nABOUT YOUR INSTRUCTOR\nMosh (Moshfegh) Hamedani is a software engineer with 15 years of professional experience, mainly in building web-based applications. He is the author of ten 5-star Udemy courses with more than 40,000 students around the world. He is passionate, pragmatic and motivational in his teaching.\n\n\n\n\nDO YOU WANT TO TAKE YOUR ANGULAR SKILLS TO THE NEXT LEVEL?\nEnrol in the course now and get started.",
      "target_audience": [
        "Web developers who would like to take their Angular skills to the advanced level"
      ]
    },
    {
      "title": "PHP for Beginners: How to Build an Ecommerce Store",
      "url": "https://www.udemy.com/course/php-for-beginners-how-to-build-an-ecommerce-store/",
      "bio": "PHP Ecommerce: in this course you will learn how to make full Ecommerce websites to build your own home business.",
      "objectives": [
        "Building a Full E-commerce Store: How to create a complete, functional e-commerce store from scratch using PHP.",
        "PHP Best Practices: Advanced PHP techniques, including function-based development, clean code structure, and security best practices for robust applications.",
        "Payment Gateway Integration: How to integrate PayPal and Stripe APIs for secure payment processing, and handle transactions seamlessly in your e-commerce store.",
        "Database Management: How to use MySQL databases to store, retrieve, and manage product, customer, and order data efficiently.",
        "Admin Dashboard Development: How to create an admin dashboard for order tracking, sales reporting, and managing product inventory.",
        "Deploying Your Web Application: Steps to upload and host your finished e-commerce store on a live web server, making it accessible to users.",
        "Optimizing User Experience: Building a smooth, user-friendly interface that enhances customer experience while shopping online.",
        "Practical, Real-World Projects: Hands-on coding and project-building that simulates real-world web development, helping students apply what they learn in practi"
      ],
      "course_content": {
        "Setting Up Some Things!": [
          "Introduction",
          "Udemy Walk Through and Video Quality",
          "Windows OS - PHP Development setup",
          "MAC OS - PHP Upgrade and my setup",
          "Ubuntu OS PHP Development Setup part 1",
          "Ubuntu OS PHP Development Setup part 2 - finished",
          "Displaying Errors part 1",
          "Displaying Errors part 2",
          "Displaying Errors part 3",
          "Editors I recommend",
          "Course Exercise FIles"
        ],
        "E-commerce System - FRONT- END": [
          "Downloading Assets",
          "Defining Paths with Constants",
          "Defining Paths and Database Connection with Constants",
          "Creating Database and Testing",
          "Making Index.php Parts Modular",
          "Slider and Navs Snippet Creation",
          "Creating the Category Table",
          "Displaying Dynamic Categories",
          "Useful Custom Helper Functions"
        ],
        "Product Function": [
          "Important notice regarding placeholder url!",
          "Creating the Products Table and Data Insertion",
          "Starting the Get Product Function",
          "Display Products",
          "Product Button Link to Single Product Page",
          "Category Page and Funcion",
          "Single Product Page Setup",
          "Displaying Dynamic Data in Single Product Page - CHALLENGE",
          "New Column and Data Insertion - SOLUTION",
          "Displaying Products in Category Page",
          "Displaying Products in SHOP Page"
        ],
        "USER": [
          "Login Page and User Table Creation",
          "Login Page Setup and Function Part 1",
          "Login Page Function Complete and Session Helper Message Function"
        ],
        "CONTACT PAGE": [
          "Contact Page Setup",
          "Sending Messages"
        ],
        "SHOPPING CART": [
          "Setting Up Quantity and Procedure Explanation",
          "Removing the function that destroys sessions",
          "Creating the CART page and the Add Product Session Code Part 1",
          "Session destroy - (Edwin from the future)",
          "Add Product Session Code Part 2",
          "Add Product Session Code Part 3- Limiting with quantity",
          "Remove and Delete Items from cart",
          "Testing our Remove and Delete Functions",
          "CART - function part 1",
          "CART - function part 2",
          "CART - function part 3",
          "CART - function part 4",
          "CART - function part 5",
          "CART - function part 6 - getting total",
          "Cart Unsetting Values"
        ],
        "Paypal API for Payment Processing": [
          "Introduction to the Developer Paypal Site - Updated",
          "Auto Return Setting in PayPal - Updated",
          "Paypal form Explanation - Updated",
          "Creating PHP form code",
          "Submitting Info to Paypal",
          "Fixing product total for paypal",
          "Thank you Page Part 1",
          "Thank you Page and Creating Orders Table Part 2",
          "Session Destroy And Paypal Button Functionality",
          "Improving Paypal Button and more"
        ],
        "BACK END: ADMIN": [
          "Making admin Index.php Reusable",
          "Including Admin Content based on Condition",
          "Including Orders Page",
          "Fixing Page Problem and Moving Pages - CHALLENGE",
          "Setting up the rest of the pages - SOLUTION",
          "Admin Security Code",
          "Moving Cart Pages and Setting up New Paths"
        ],
        "Reports Functionality": [
          "Insert New Column in the Orders table - CHALLENGE",
          "Creating a Reports Table and Testing in Thank you page",
          "Inserting data into reports with PHP and testing",
          "Pulling Last order and Insert it in reports -testing",
          "Function report finished"
        ],
        "Orders in Admin": [
          "Displaying Orders",
          "Deleting Orders"
        ]
      },
      "requirements": [
        "Basic Understanding of PHP: Learners should have a fundamental knowledge of PHP, including syntax, variables, and simple functions. Prior experience with PHP is helpful but not required.",
        "Familiarity with HTML/CSS: A basic understanding of front-end technologies such as HTML and CSS will be beneficial for integrating the e-commerce store’s user interface with back-end PHP code.",
        "Basic Knowledge of Databases: Having an understanding of how databases work (e.g., MySQL) will help when working with product data, customer information, and order management in the course.",
        "A Computer with Internet Access: You’ll need a computer with an internet connection to access course materials, set up a local development environment, and follow along with hands-on coding.",
        "A Code Editor: Any text editor or integrated development environment (IDE) for writing PHP code (e.g., Visual Studio Code, Sublime Text, or PHPStorm).",
        "Willingness to Learn: No advanced experience is necessary, but a desire to improve your PHP skills and build real-world projects is key to succeeding in this course."
      ],
      "description": "Hands-On Real-World Project Included!\n\nMaster Essential E-commerce Development Skills\nAfter the success of my initial PHP course for beginners, I'm thrilled to introduce an advanced course that will take your PHP expertise to new heights. Whether you're aiming to expand your web development skills or delve into the growing world of e-commerce, this course is packed with all the necessary techniques and tools to enhance your PHP knowledge.\nWhat You’ll Learn\nIn this course, you will build a fully functional e-commerce store using PHP, integrating both PayPal and Stripe APIs for secure payment processing. You’ll also learn how to manage and display transaction data, which will allow you to generate detailed sales reports and track orders from the admin dashboard.\nCourse Highlights\nAdvanced PHP Techniques: Dive deeper into function-based development, explore improved code structures, and implement best security practices to create robust applications.\nSeamless Payment Integration: Connect your e-commerce store with PayPal and Stripe, ensuring smooth and secure payment processing.\nData Management & Sales Reporting: Learn to retrieve, manage, and display critical sales and transaction data in a well-organized admin panel.\nDeploy Your Project Live: You'll also be guided on how to upload your fully developed application to a live server, preparing it for real-world use.\nMaximize Your Earnings with E-commerce Skills\nUpon completing this course, you'll have the capability to build fully functional, professional-grade e-commerce websites—skills that are in high demand. Many businesses are willing to pay premium prices for custom-built e-commerce stores, and this course will give you the knowledge and experience to provide that level of quality.\nWhy Enroll in This Course?\nIf you’ve already completed my earlier PHP courses, this one will take your skills to the next level. You’ll learn new PHP techniques, build more secure and maintainable applications, and gain the confidence to tackle larger, more complex web projects.\nElevate Your PHP Skills:\nCreate advanced PHP applications faster and more efficiently\nOpen doors to new career opportunities in web development\nIncrease your potential for higher-paying freelance work\nGet Started Today!\nDon’t wait to take your PHP and e-commerce development skills to the next level. Enroll now and start building your career as a web developer with the expertise to handle complex e-commerce projects!",
      "target_audience": [
        "Beginners in PHP and Web Development: Those just starting out and looking to gain foundational skills in PHP and e-commerce.",
        "Self-Taught Developers: Individuals who have learned PHP on their own but want to formalize their knowledge and improve their coding techniques.",
        "Web Developers Transitioning to E-commerce: Developers with experience in general web development looking to expand into e-commerce applications.",
        "Freelancers and Independent Developers: Developers seeking to increase their skill set and offer professional e-commerce solutions to clients.",
        "Aspiring Full-Stack Developers: Those aiming to become proficient in both front-end and back-end web development, with a focus on building functional e-commerce stores.",
        "Back-End Developers: Developers who want to strengthen their understanding of PHP and learn how to integrate secure payment processing into their applications.",
        "Business Owners or Entrepreneurs: Individuals who want to build their own e-commerce platforms without needing to rely on external developers.",
        "Students or Tech Enthusiasts: Anyone with an interest in learning PHP and e-commerce development to advance their knowledge and career opportunities."
      ]
    },
    {
      "title": "Spring Boot Course: Learn Spring Boot & Build Web APIs",
      "url": "https://www.udemy.com/course/the-complete-spring-boot-development-bootcamp/",
      "bio": "Java Web Development: MVC, Beans, React (Full Stack), REST, Testing, OpenAPI, Spring Data JPA, SQL, Spring Security, JWT",
      "objectives": [
        "Launch an HTTP Server",
        "Model View Controller",
        "Field Validation",
        "Beans and Dependency Injection",
        "Unit Testing Business Logic.",
        "Integration Testing the Request – Response Lifecycle.",
        "REST API",
        "Exception Handling",
        "OpenAPI Documentation",
        "Spring Data JPA (SQL Database)",
        "Spring Security (Basic)",
        "Spring Security (JWT)"
      ],
      "course_content": {
        "Module 1: Spring Boot Fundamentals": [
          "Introduction",
          "Join the Community",
          "Discover More Valuable Content"
        ],
        "Spring Boot + Docker": [
          "Spring Boot + Docker"
        ],
        "Required Installations": [
          "Required Installation: Java 17 (Mac)",
          "Required Installation: Java 17 (Windows)",
          "Installing Maven",
          "Recommended Installation: Maven (Mac)",
          "Connecting Maven to Java 17 (Mac)",
          "Recommended Installation: Maven (Windows)"
        ],
        "Launching a Spring Boot Application": [
          "Roadmap",
          "Downloading Visual Studio Code",
          "Turn on Auto Save",
          "Creating a Spring Boot Project",
          "Breaking Down a Spring Boot Project",
          "Running a Spring Boot Application",
          "Running a Spring Boot App (Summary)",
          "mvn vs. mvnw (Summary)",
          "The Client-Server Model",
          "Launching an HTTP Server",
          "Workbook and Challenges",
          "Workbook 1: Client-Server Communication",
          "Workbook 2: Extra Practice",
          "Workbook 3: Running Your Spring Boot Application as a JAR",
          "Maven Dependencies",
          "Spring Boot DevTools Dependency"
        ],
        "Model View Controller": [
          "Roadmap",
          "Starter Project",
          "The MVC Design",
          "The Controller",
          "The View",
          "Backend vs Front end",
          "The Model",
          "Thymeleaf: Combining Model and View",
          "Finalizing the Backend"
        ],
        "Challenge": [
          "Challenge",
          "Solution"
        ],
        "Field Validation": [
          "Roadmap",
          "Starter Project",
          "Spring Boot Projects: Load First, Create Later",
          "Field Validation",
          "Custom Constraints",
          "Cross Field Validation"
        ],
        "Three Layer Codebase": [
          "Three Layer Architecture",
          "Starter Project",
          "Spring Boot Projects: Load First, Create Later",
          "Repository",
          "Service"
        ]
      },
      "requirements": [
        "Java",
        "Object-Oriented Programming"
      ],
      "description": "Spring Boot is the best Java framework for developing web applications. It favors convention over configuration, making it super easy to develop stand-alone, production-grade web services and APIs.\nBecome a Java Web Developer and Build Powerful APIs!\nThe Spring Boot Development Bootcamp offers support for Visual Studio Code and IntelliJ. The curriculum is as follows:\nSetting up a Spring Boot Project: Create a Spring Boot Project using best practices.\nModel View Controller: Build a Web application that adheres to the Model View Controller design.\nField Validation: Validate fields prior to form submission to prevent the storage of invalid data.\nThree-Layer Codebase: Refactor your code to make sure it's clean and scalable.\nBean and Dependency Injection: Loosely couple your code using beans.\nTesting a Spring Boot Web Application: Write unit and integration tests to verify that your application is behaving correctly.\nReact: Connect your Spring Boot application to a React Front-end.\nREST API: Develop a REST API that can process GET / POST / PUT / DELETE operations.\nOpenAPI: Document your application using the OpenAPI specification.\nException Handling: Make your API resilient by throwing and handling unchecked exceptions inside @ControllerAdvice.\nSpring Data JPA (SQL): Develop a REST API that interacts with an SQL database. Define relational tables that contain @OneToMany and @ManyToMany relationships.\nSpring Boot Security: Secure your application through Basic as well as Token-based Authentication (JWT).\nThis is the most interactive web development course online. Every section is packed with coding exercises.\nWe're excited to have you on board. See you in class!",
      "target_audience": [
        "If you want to transition into Web Development (Backend).",
        "If you want to build Sophisticated and Resilient Web APIs.",
        "If you want to secure your Web API using modern techniques.",
        "If you want to learn best practices from a Senior Developer."
      ]
    },
    {
      "title": "HTML, CSS, & JavaScript - Certification Course for Beginners",
      "url": "https://www.udemy.com/course/html-css-javascript-certification-course-for-beginners/",
      "bio": "A Comprehensive Guide for Beginners interested in learning HTML, CSS, & JavaScript to Build Interactive Web Pages.",
      "objectives": [
        "Design and build well-structured webpages using HTML",
        "Implement semantic markup for improved accessibility and SEO",
        "Create visually appealing websites with CSS styling",
        "Apply consistent designs across multiple webpages using external stylesheets",
        "Develop responsive layouts that adapt to various devices and screen sizes",
        "Customize typography and fonts to enhance readability and aesthetics",
        "Add interactive elements to websites using JavaScript",
        "Write efficient and clean JavaScript code using best practices",
        "Leverage conditional logic and loops for dynamic content generation",
        "Handle user input and events to create engaging user experiences",
        "Manipulate the DOM to update webpages dynamically",
        "Validate forms and ensure accurate user input",
        "Utilize JavaScript libraries and frameworks to streamline development",
        "Optimize website performance for faster load times and smoother experiences",
        "Debug and resolve common HTML, CSS, and JavaScript issues",
        "Collaborate effectively with other web developers using industry-standard tools and practices",
        "Develop a foundational understanding of web development concepts for further study",
        "Create a portfolio of completed projects to showcase web development skills to potential employers or clients"
      ],
      "course_content": {
        "HTML Section": [
          "Introduction to HTML",
          "Basic Structure of a Web Page",
          "HTML Head Tags",
          "<head></head> Tag Quiz",
          "HTML Body Tag",
          "<body></body> Tag Quiz",
          "HTML Paragraph Spacing",
          "<p></p> Tag Quiz",
          "HTML Line Breaks",
          "<br> Tag Quiz",
          "HTML Non-Breaking Space",
          "HTML Header Tags",
          "HTML Text Formatting and Decoration",
          "HTML Inline Text Formatting",
          "HTML Unordered Lists",
          "<ul></ul> Tag Quiz",
          "HTML Ordered Lists",
          "HTML Image Insertion",
          "HTML Embedding Videos",
          "HTML Absolute vs. Relative File Referencing",
          "HTML Link Creation",
          "HTML Anchor Tags",
          "HTML Tables",
          "HTML Nested Tables",
          "HTML Merging Cells",
          "HTML Text Wrapping",
          "HTML Table Background Image",
          "HTML Table Cell Alignment",
          "HTML - Introduction to Forms",
          "HTML Form Tags and Attributes",
          "HTML Forms - Post vs. Get",
          "HTML Forms - Input Text Fields",
          "HTML Forms - Select Menus",
          "HTML Forms - Check Boxes and Radio Buttons",
          "HTML Forms - Text Areas and Buttons",
          "HTML Iframes",
          "HTML Project - Introduction",
          "HTML Project - Header",
          "HTML Project - Callout",
          "HTML Project - Image Insertion",
          "HTML Project - Text Insertion",
          "HTML Project - Links and Form",
          "HTML Project - Tabular Data",
          "HTML Project - Footer"
        ],
        "CSS Section": [
          "Introduction to CSS",
          "Parts of a CSS Rule",
          "Types of CSS Rules",
          "CSS - Color Names and Codes",
          "CSS Classes and Spans",
          "CSS Divisions - DIVs",
          "CSS IDs",
          "CSS Margins",
          "CSS Padding",
          "CSS Text Properties",
          "CSS Font Properties",
          "CSS Borders",
          "CSS Backgrounds",
          "CSS Transparency",
          "CSS Text on Top of Images",
          "CSS Width and Height Properties",
          "CSS Display Properties",
          "CSS Static Positioning",
          "CSS Relative Positioning",
          "CSS Absolute Positioning",
          "CSS Fixed Positioning",
          "CSS Float Property",
          "CSS Clear Property",
          "CSS Z-Index",
          "CSS Styling Links",
          "CSS Tables",
          "CSS Project - Introduction",
          "CSS Project - CSS Rules",
          "CSS Project - Navigation Rules",
          "CSS Project - Responsive CSS",
          "CSS Project - Page Elements"
        ],
        "Document Object Model (DOM)": [
          "DOM Introduction",
          "DOM Manipulation"
        ],
        "JavaScript Section": [
          "JavaScript - Introduction",
          "JavaScript Placement",
          "External JavaScript",
          "JavaScript Output",
          "JavaScript InnerHTML",
          "JavaScript Commenting",
          "JavaScript Constants",
          "JavaScript Variables Introduction",
          "JavaScript Assignment Operator",
          "JavaScript Arithmetic Operations",
          "JavaScript Arithmetic Operations Continued",
          "JavaScript Operator Precedence",
          "JavaScript Data Types",
          "JavaScript Objects",
          "JavaScript Object Output",
          "JavaScript Strings",
          "JavaScript String Length",
          "JavaScript Special Characters",
          "JavaScript Random Numbers",
          "JavaScript Min and Max Function",
          "JavaScript Math Round Function",
          "JavaScript Arrays",
          "JavaScript Array Attributes",
          "JavaScript Arrays - Pop - Push - Shift - Unshift",
          "JavaScript Changing and Deleting Elements",
          "JavaScript Splicing an Array",
          "JavaScript Sorting an Array",
          "JavaScript Joining Arrays",
          "JavaScript Conditional Statements",
          "JavaScript Comparisons",
          "JavaScript Booleans",
          "JavaScript For Loops",
          "JavaScript For-In Loop",
          "JavaScript While Loops",
          "JavaScript Do-While Loop",
          "JavaScript Break and Continue",
          "JavaScript Functions",
          "JavaScript Events",
          "JavaScript Project 1 - BG Color Changer",
          "JavaScript Project 2 - Photo Gallery",
          "JavaScript Project 2 - Completion"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Have you ever wondered how the webpages you visit daily come to life? How does a seemingly simple combination of text and images create an interactive and dynamic user experience? The answer lies in the trinity of web development: HTML, CSS, and JavaScript. Together, these three technologies form the backbone of modern web design and development, enabling the creation of engaging, accessible, and responsive websites.\n\nIn this introductory course, we will delve into the essentials of HTML, CSS, and JavaScript to provide a solid foundation for aspiring web developers. By the end of this course, you will have a strong understanding of these technologies and be well-equipped to embark on your journey in web development.\n\nHTML: The Structure of the Web\n\nHTML, or HyperText Markup Language, is the cornerstone of any webpage. At its core, HTML provides the basic structure and content of a webpage. It uses a system of tags and attributes to define elements like headings, paragraphs, links, images, and more. These tags act as containers for content, allowing developers to create a meaningful and organized layout for their webpages.\nAs you begin your study of HTML, you will learn about the key elements that make up the structure of a webpage. These include the doctype declaration, the html element, head and body elements, and a variety of content-specific tags. You will also explore semantic HTML, which emphasizes the use of meaningful tags to convey the purpose and structure of content, ultimately making the web more accessible and search-engine friendly.\n\nCSS: Styling the Web\n\nWhile HTML provides the foundation of a webpage, CSS (Cascading Style Sheets) brings it to life with style and flair. CSS is a stylesheet language that allows developers to control the visual presentation of HTML elements, including colors, fonts, layout, and even animations. By separating content (HTML) from presentation (CSS), developers can create consistent and maintainable designs across multiple webpages.\n\nThroughout this course, you will explore various CSS properties and selectors that allow you to target and style specific HTML elements. We will cover topics such as the box model, positioning, typography, and responsive design principles. You will learn how to create external stylesheets, enabling you to easily apply consistent styles to multiple webpages. Ultimately, you will gain an understanding of how to create visually appealing and accessible web designs.\n\nJavaScript: Interactivity and Dynamic Content\n\nThe final piece of the web development puzzle is JavaScript, a powerful and versatile programming language. JavaScript breathes life into your webpages by enabling interactivity, dynamic content, and real-time updates. With JavaScript, you can create responsive user interfaces, validate user input, and even build complete web applications.\n\nIn this section of the course, you will learn the fundamentals of JavaScript, including variables, data types, functions, and control structures. You will explore the Document Object Model (DOM), a programming interface that allows JavaScript to interact with and manipulate HTML and CSS. Additionally, you will gain insight into key concepts such as event handling, asynchronous programming, and AJAX.\n\nBy understanding how JavaScript interacts with HTML and CSS, you will have the ability to create dynamic and engaging web experiences that respond to user input and adapt to different devices and screen sizes.\n\nPutting It All Together\n\nAs you progress through this course, you will work on various hands-on projects that will help solidify your understanding of HTML, CSS, and JavaScript. These projects will challenge you to apply the concepts you have learned, allowing you to create functional and visually appealing webpages.\n\nBy the end of this foundational course, you will be well-prepared to tackle more advanced web development topics, such as responsive design, accessibility, performance optimization, and even server-side programming. With a strong foundation in HTML, CSS, and JavaScript, the possibilities are endless as you continue to explore and expand your web development skills.\n\nThe skills you acquire in this course will open doors to a wide range of opportunities, whether you're interested in pursuing a career in web development, enhancing your current profession, or simply exploring a new hobby. With dedication and practice, you can become a proficient web developer, capable of creating modern, engaging, and accessible websites that cater to the ever-evolving digital landscape.\n\nIn summary, this course will provide you with a comprehensive introduction to the essential building blocks of web development: HTML for content and structure, CSS for presentation and styling, and JavaScript for interactivity and dynamic content. Together, these technologies empower you to create captivating web experiences that delight users and achieve your digital objectives.\n\nSo, are you ready to begin your journey into the world of web development? Let's get started and lay the foundations for your success in the exciting and rapidly evolving digital realm.",
      "target_audience": [
        "Aspiring web developers seeking a solid foundation in HTML, CSS, and JavaScript",
        "Graphic and UI/UX designers looking to expand their skillset into web development",
        "Entrepreneurs aiming to build and maintain their own websites or online stores",
        "Bloggers and content creators seeking to customize their website designs and layouts",
        "Marketing professionals interested in understanding web development for better digital campaigns",
        "Software developers transitioning into web development or expanding their existing programming knowledge",
        "Educators and instructors aiming to teach web development to students",
        "Hobbyists and tech enthusiasts looking to explore web development as a creative outlet or potential career path"
      ]
    },
    {
      "title": "ANGULAR and ASP.NET Core REST API - Real World Application",
      "url": "https://www.udemy.com/course/real-world-app-angular-aspnet-core-web-api-and-sql/",
      "bio": "Create Full Stack Web Applications with Angular, ASP.NET Core Web API, Entity Framework Core, C# REST API, JWT Token",
      "objectives": [
        "Learn and Create Full-Stack Web Applications with Angular and ASPNET Core Web API",
        "Build scalable C# Web APIs using ASPNET Core",
        "Learn how to create and use components in Angular",
        "Learn Angular routing and Angular Services",
        "Learn how to create an ASPNET Core web api from scratch and build CRUD operations in it using HTTP Web Methods like GET, POST, PUT, DELETE",
        "Authentication and Authorization using JSON web Tokens (JWT Tokens)",
        "Learn and use Entity Framework Core along with the ASPNET Core Web API to persist and retrieve data from SQL Server database",
        "Learn to upload an Image File from Angular UI application to the ASPNET Core Web API",
        "Implement Dependency Injection in ASPNET Core Web API and also in the Angular application",
        "Use Swagger and Postman to test your API data",
        "Learn the Best Practices along with every tutorial to make your app clean, generic and re-usable",
        "You will get the confidence to build a complete app from scratch on your own",
        "Create an DOTNET Core API and consume it from the Angular application",
        "Role based Authorization",
        "Angular Auth Guards, Interceptors etc",
        "RxJs Observables, Subjects and Subscriptions"
      ],
      "course_content": {
        "Introduction and Development Setup": [
          "Introduction To The Course",
          "Prerequisites",
          "Setting Up Development Environment",
          "Install .NET SDK and .NET Runtime",
          "Download and Install Visual Studio 2022",
          "Download and Install SQL Server (Local Instance) and SQL Server Management Stu",
          "Install Visual Studio Code",
          "Visual Studio Code Extensions",
          "Download and Install NodeJs",
          "Install Angular CLI",
          "Getting Help",
          "COMPLETE SOURCE CODE - GITHUB LINK"
        ],
        "Building API using ASP.NET Core and Visual Studio": [
          "Create New Web API",
          "Understand Files and Folder Structure - ASPNET Web API",
          "Understand REST and HTTP Verbs",
          "Routing In ASP.NET Core Web API",
          "Understand Our Project and Domain Models",
          "Create Domain Models",
          "Install Nuget Packages For Entity Framework Core",
          "Create DbContext Class",
          "Adding ConnectionString To The Database In Appsettings.Json",
          "Understanding Dependency Injection & Injecting DbContext Into Our Application",
          "Run EF Core Migrations",
          "Create New Controller (CategoriesController)",
          "DTOs and Domain Models",
          "Create POST Categories Action Method",
          "Repository Pattern and Benefits",
          "Change POST Category Action Method To Use Repository"
        ],
        "Create UI Application Using Angular CLI": [
          "Important Version Check",
          "Create Angular Project",
          "Understand Files and Folders",
          "Clean Angular Project And Import Bootstrap CDN",
          "Create Navbar Component",
          "Create Categories List Component and Angular Routing",
          "Create Add Category Component and Routing",
          "Create Angular Services",
          "Enable CORS",
          "Unsubscribe from Observables"
        ],
        "Get All Categories - API and UI": [
          "What's in this section",
          "Create API GET method to GET all categories, and TEST",
          "Create UI Service method to GET all categories",
          "Create Environment Files",
          "Use Get All Categories Service In Component",
          "Using Async Pipe To Subscribe to Observables"
        ],
        "EDIT/UPDATE Category By Id - API and UI": [
          "What's in this section",
          "API - Create GET API method to get category by Id and Test",
          "UI - Create UI component Edit-Category Component and pass route parameters",
          "UI - Create Service Method and Display Single Category",
          "API - Update Category Action Method (HTTPPUT)",
          "UI - Create Update Category Service Method and Connect to Edit Category Componen"
        ],
        "DELETE Category By Id - API and UI": [
          "What's in this section",
          "API - Delete Category By Id (HTTP DELETE)",
          "UI - Delete Category Service Method"
        ],
        "Add New BlogPost (Feature) - API and UI": [
          "What's in this section",
          "UI - Create BlogPost List Component and Routing",
          "UI - Create BlogPost Add Component and Routing",
          "UI - Submit Add BlogPost Form",
          "API - Add Blog Post Functionality (HTTP POST)",
          "UI - Create BlogPost Service",
          "UI - Form Submission To Create BlogPost"
        ],
        "Get All BlogPosts - API and UI": [
          "What's in this section",
          "Seeding Some Blogs",
          "API - Get All BlogPosts (HTTP GET)",
          "UI - Get All BlogPosts"
        ],
        "Live Markdown Preview & Image Preview": [
          "What's in this section",
          "UI - Live Markdown Preview",
          "UI - Image Preview"
        ],
        "Relationships in Entity Framework Core (Categories and BlogPosts)": [
          "What's in this section",
          "API - Change Domain Models and Add EF Core Relationships",
          "API - Change AddBlogPost Action Method - Accept Categories",
          "API - Change GetAll BlogPosts Action Method - Return Categories",
          "UI - Display Categories In BlogPost List Component",
          "UI - Display Categories MultiSelect Dropdown and Capture Categories",
          "UI - Submit Categories - Add BlogPost"
        ]
      },
      "requirements": [
        "Hello world experience in ASPNET Core and Angular",
        "Understand the basic concepts of HTML, CSS and Typescript",
        "A passion to build amazing full stack applications"
      ],
      "description": "*****\nThis course has been re-recorded from scratch to the latest versions of Angular and ASP.NET Core\n*****\n\n\nA Comprehensive Course on Angular and ASP.NET Core Web API where you will learn and master your Angular and ASP.NET Core skills and be excellent at making full stack web applications using the Angular and ASP.NET Core Web APIs.\n\n\nIn this course, we will use Angular 16 to create our Single Page Web Application and we will use C# and .NET 7 to develop a REST API using ASPNET Core.\n\n\nWhy do you need this course?\nFull-Stack web development is in great demand and what better technologies to choose from? We have the best technologies Angular and ASP.NET Core from Google and Microsoft. These are great technologies that pair really well and are adopted by big tech giants across the world.\nThis course helps you understand full-stack web development using Angular and ASP.NET Core Web APIs as you have never thought of.\nConcentrating on the practical aspect of web development, You will learn and master ASP.NET Core Web API and Angular Web development skills and with the help of this course and the knowledge you will acquire in this course, you will be able to implement that in your projects and your organization as well.\n\n\nKnow me more\nI am Sameer, a professional software developer with over 15 years of industry experience. I love to educate myself and others and that's why I started with my youtube channel where I have a loving audience. I create content for software developers like you so that I can share my knowledge.\n\n\nMoney Back Guarantee\nI Guarantee you that after finishing this course, you will be confident enough to create web applications using Angular and ASP.NET Core Web API on your own.\nYou will feel confident at work or creating your own projects.\nIf you want to create functional, generic, clean, and usable websites using Angular and clean scalable web apis using dotnet core, then this is the course for you.\nIf still, you are unable to get benefit from this course (we will be sad to see you go!), there is a \"30-day money back guaranteed by Udemy\".\n\n\nIn this course, you will learn and implement:\nLearn And Create Your First Angular single page application (SPA)\nLearn and Create your first ASP.NET Core Web API using RESTful principles in C#\nCreate a fully functional, highly scalable blog application\n\n\nIn Angular you will learn and develop:\nAngular CLI\nAngular Components\nAngular Routing\nAngular Services\nHTTP calls\nCORS\nUse Bootstrap CSS in Angular applications\nCreate reusable components\nCRUD operations (Create Read Update Delete)\nAngular Forms\nLive Markdown Preview\nMarkdown to HTML\nAngular Form Elements\nAuthentication and Authorization\nJWT Tokens and Storage\nCookie Services\nLocal Storage\nInterceptors\nAuth/Route Guards\nImage Upload in Angular applications\nModels and Interfaces\n\n\nIn our ASP.NET Core Web API, you will learn and develop:\nCreate ASPNET Core APIs from scratch using C#\nCreate endpoints and action methods\nCRUD operations in ASP.NET Core (Create Read Update Delete)\nInstall and Use Entity Framework Core to connect to SQL Server database\nUnderstand and implement Entity framework core relationships\nDomain-Driven Design Patterns (DDD)\nRepository Pattern in ASP.NET Core\nDomain Modelling\nEntity Framework Code First Approach\nSQL Server\nSeeding the Database\nHTTP Web Methods\nAuthentication and Authorization\nJWT Tokens\nRole Based Authorization\nImage Upload in ASP.NET Core Web API\nWrite Clean, Re-Usable Code",
      "target_audience": [
        "Beginner to Intermediate Developer with knowledge in ASPNET Core and ANGULAR"
      ]
    },
    {
      "title": "Bootstrap 4 From Scratch With 5 Projects",
      "url": "https://www.udemy.com/course/bootstrap-4-from-scratch-with-5-projects/",
      "bio": "Master Bootstrap 4 and build 5 real world themes while learning HTML5 semantics & CSS3",
      "objectives": [
        "Learn and create amazing high quality Bootstrap 4 themes and UIs from scratch",
        "Learn the Bootstrap 4 utilities, classes, components & JS widgets using a custom sandbox environment",
        "Learn semantic HTML5 & modern CSS3 techniques",
        "Learn to compile Sass in the easiest way possible using a GUI"
      ],
      "course_content": {
        "Intro & Getting Started": [
          "Welcome To The Course",
          "What Is Bootstrap & Why Use It?",
          "What's New In Bootstrap 4?",
          "Initial Environment Setup",
          "Bootstrap Sandbox Setup"
        ],
        "Typography & Utilities": [
          "Section Introduction",
          "Headings & Basic Typography",
          "Text Alignment & Display",
          "Floats & Fixed Positions",
          "Colors & Background",
          "Margin & Padding Spacing",
          "Sizing & Borders",
          "CSS Breakpoints"
        ],
        "CSS Components": [
          "Section Intro",
          "Buttons & Button Groups",
          "Navbar & Navs",
          "List Groups & Badges",
          "Forms & Input",
          "Input Groups",
          "Alerts & Progress Bars",
          "Tables & Pagination",
          "Working With Cards",
          "Media Objects",
          "Jumbotron"
        ],
        "Grid System & Flexbox": [
          "Section Introduction",
          "Grid System",
          "Grid Alignment",
          "Flexbox Classes",
          "Auto Margin, Wrap & Ordering"
        ],
        "JavaScript Widgets": [
          "Section Introduction",
          "Carousel Slider",
          "Collapse & Accordion",
          "Tooltips",
          "Popovers",
          "Modals",
          "ScrollSpy & Smooth Scolling"
        ],
        "Simple Theme Boiler Plate Setup": [
          "Creating The Boiler"
        ],
        "Project 1 - LoopLab Social Theme": [
          "Project Intro",
          "Setup & Navbar",
          "Home Section Area",
          "Explore Section Area",
          "Create & Share Section Areas",
          "Footer, Contact Modal & Menu Smooth Scroll"
        ],
        "Project 2 - Mizuxe Book Theme": [
          "Project Intro",
          "Setting Up Sass With Koala",
          "Custom Navbar & Logo",
          "Showcase & Primary Color Change",
          "Newsletter & Boxes",
          "About Section With Accordion",
          "Authors Area",
          "Contact & Footer"
        ],
        "Project 3 - Glozzom Multi Page Theme": [
          "Project Intro",
          "Showcase With Carousel",
          "Home Icons, Heading & Info Sections",
          "Video Section With Autoplay Modal",
          "Photo Gallery & Newsletter",
          "Page Header & About Section",
          "Icon Boxes & Testimonial Slider",
          "Services Page With FAQ Accordion",
          "Blog Page With Cards",
          "Contact & Staff Sections"
        ],
        "Project 4 - Blogen Admin UI": [
          "Project Intro",
          "Navbar & Main Header",
          "Add Buttons & Modals",
          "Finishing The Dashboard",
          "Resource Table Pages",
          "Details & Settings Pages",
          "Profile & Login Page"
        ]
      },
      "requirements": [
        "You should have basic knowledge of HTML & CSS",
        "You do NOT need to know any Bootstrap 3"
      ],
      "description": "This course will literally take you from knowing nothing about Bootstrap 3 or 4 to learning all of the utilities, components, widgets and grids and building real world themes and websites. You do NOT need to know Bootstrap 3 for this course. Even if you already know Bootstrap 4, skip the learning sections and head right for section 6 to create the simple boiler theme and start the projects. Everything is completely modular!\nCustom Bootstrap Sandbox\n\nI have created a completely custom HTML learning environment for the first few sections of this course. Each lecture has an html page associated with it and has a start state. As we move along through the lectures, you code along with me learning all that Bootstrap 4 offers including helpers/utilities, components, widgets, flexbox and more.\n5 Real Projects/Themes\nWe will create 5 real world themes including. These projects are completely open source and you are free to use them anywhere.\nLoopLap - A social UI Theme\nMizuxe - A Book/Product Showcase Theme (Sass Project)\nBlogen - A blog admin area UI\nGlozzom - A multi page theme with a carousel and some 3rd party scripts\nPortfoligrid - A portfolio theme using the grid, flexbox and the collapse widget",
      "target_audience": [
        "Anyone that wants to learn & master Bootstrap 4.1.x and build real world themes"
      ]
    },
    {
      "title": "The Complete 2020 Fullstack Web Developer Course",
      "url": "https://www.udemy.com/course/thecompletewebdeveloper/",
      "bio": "Learn HTML5, CSS3, JavaScript, Python, Wagtail CMS, PHP & MySQL from scratch!",
      "objectives": [
        "Updated for 2020",
        "Learn HTML5, CSS3, Vanilla JS (ES6+), Python, Wagtail CMS, PHP and MySQL all from scratch",
        "Learn Python from beginner to advanced",
        "Learn JavaScript (ES6+)",
        "Wagtail Pythons top Content Management System (Like WordPress, but better)",
        "Get a free CSS3 eBook",
        "Lots of projects, big and small!",
        "Learn Git and Github",
        "Create a portfolio page and launch it",
        "Learn JavaScript from scratch",
        "Learn PHP for server code execution",
        "Learn MySQL for saving data (databases)",
        "Build a Login/Registration/Members-only website, just like Facebook",
        "How to get a job as a web developer",
        "Learn the LAMP Stack: Linux, Apache, PHP and MySQL"
      ],
      "course_content": {},
      "requirements": [
        "Must be willing to learn.",
        "Must be able to put in 10 minutes per day (that's all it takes!)",
        "Must have a computer, editor and browser (I'll help you get setup with those)"
      ],
      "description": "***\nThe Complete FULL STACK Web Developer Course\n—\nThe first \"Complete Web Developer Course\" on Udemy!! See why other teachers used the same course name!\nThis course is for Windows, MacOS and Linux users!\nOver 66 hours of video\nFull lifetime access\nCertificate of completion\nSource code included\n***\n\n\nYou're probably on this page because you want to learn web development. Not just one little piece, but ALL of it.\nOr maybe you’re coding already but you want to make BETTER websites?\nI was in your shoes once and THIS is the course I WISH I HAD.\nWelcome to The Complete Fullstack Web Developer Course\nThis was the first \"Complete Web Development\" course on Udemy. It's extremely comprehensive and I explain EVERYTHING you need to know, step by step. There's a reason why there are so many \"Complete Web Development\" courses on Udemy today -- they took what worked and made spin off courses.\nJoin over 80,000 other students in this massive course!\nThis course is designed for every skill level. Whether you're just learning web development today, or you're already a Python Pro, there's lots to learn for everybody!\nDesign, develop and launch several websites!\nYou will develop several projects, a portfolio page for free on GitHub, and lastly an entire website. And I'll teach you how to deploy all of it.\nSkip to the part you want to learn\nThis course was designed for you to either watch in order, or to skip around section-by-section. Maybe you already know JavaScript and don't want to watch it — that's OK! Skip to the next section on APIs, or work on the projects that come after it.\nHere's what you'll learn, in this order:\nHTML/HTML5\nThis is the code that 100% of all websites use\nCSS/CSS3\nThis is what makes websites look nice with colours, shapes and more.\nProject: Create a Portfolio Page\nUsing HTML and CSS you'll create a nice looking portfolio page\nProject: Create an 8-Bit Style Website\nUsing more HTML and CSS you'll get even more practice creating a retro-style website\nJavaScript\nThis is what creates interactions and the \"fun\" parts of a website. This section comes with 6 primary projects and a handful of mini-projects. This includes modern JavaScript, too!\nProject: Create a Modal by Hand\nUsing HTML, CSS and JavaScript you'll create an internal page popup that looks nice and asks a user to accept or decline the page\nProject: Create a Hand Made Calculator\nContinue practising your HMTL, CSS and JavaScript skills by creating a nice looking and fully functional web-based calculator\nGit\nGit and GitHub are core pillars behind collaboration between you and other developers. This is a VITAL skill in modern coding.\nProject: Launch your Website using GitHub Pages\nGitHub offers a free static site (html/css/js only) service. In about 45 minutes you can launch all your previous work from this course onto the internet.\nAPIs\nLearn how APIs and RESTful APIs work. API's make the world go round. It's how online services talk to other online services\nPython\nThe worlds 3rd most popular coding language, and the hottest language you can learn this year. You'll go from beginner to advanced!\nProject: Image Detection Application\nUsing Python you'll create an image detection application where you can identify objects inside an image\nWagtail CMS\nWagtail CMS is the top content management system for Python. I'm part of the core Wagtail development team so you know you're getting top notch education.\nHow To Get A Job As A Web Developer\nNearing the end of this course I will teach you tips, tricks and secrets for landing a web development job\nLegacy Course:\nThis course was originally launched in 2012. In this \"legacy\" course you'll learn:\nHTML\nCSS\nJavaScript\nPHP\nMySQL Databases\nProject: Create a Login & Registration System from Scratch\nI've left no stone unturned. You really learn it ALL.\nIn one course, in one place you can learn it all. Whether that's on your phone, tablet, TV or computer.. you can learn anywhere!\n...\nWhat people have said:\n“This course has everything, it is very very interactive. If you have always wanted to build an online project, this is the perfect course for you. Thanks Mr. Kalob.” -Adebanjo Adesuyi\n“Outstanding. I have a number of HTML courses and this one is by far the best. Clear explanations, and in depth (The course is over 18 hours!). Kalob is a talented instructor.” -Brad Gonsalves\n...\nOver 80,000 students have taken this course. Don’t be the one to get left behind!\nGet started today and join the thousands of students who have taken my course and changed their lives by: making more money, making better websites, building their dream website and completely changed industries (became web developers!)\nNot sure if this course is for you? Try it out and if you don't like it within the first 30 days, simply request a refund. No questions asked, and you get to keep all the source code, e-books, and more as a thank you for trying this course.\nAre you ready to open your world and become an in-demand full-stack web developer?\nHere is what else you'll get:\nA free 180+ page CSS Masterclass E-book\nDownload all the available source code (most of it is open source already)\nJoin a free coding community with over 53,000 members\nA dedicated Python-only coding group\n24/7 support from me, Kalob Taulien\nTaught by\nHello! I'm Kalob. I've been developing websites since 1999.\nI'm passionate about education and sharing my knowledge with people like you. I love it so much I've started creating MORE courses and I've dedicated a lot of my life to free coaching and building e-learning platforms.\nYou wouldn't believe the FREEDOM I've had since I officially changed careers and started making websites, professionally. I've lived in Ireland, , worked in the US, Mexico and the UK, and helped build companies around the world.\nAnd guess what? Everywhere I go I can work because all I need is a laptop and internet.\nAnd I want that for you! Wouldn't it be nice to travel the world and not have to worry about paying your bills? Professional web developers can do that.\n...\nOh, and here's the best part. There are TOO MANY web development jobs and not enough web developers.\nSo click the green \"Buy Now\" button and fast track your career to FREEDOM.",
      "target_audience": [
        "Anyone who wants to learn to code",
        "Anyone who wants to build websites",
        "Anybody who wants to learn how to create Python or PHP based websites",
        "Anyone who wants to start their own business or become a freelancer",
        "Anyone who wants to change careers and get into web development"
      ]
    },
    {
      "title": "JavaScript, Bootstrap, & PHP - Certification for Beginners",
      "url": "https://www.udemy.com/course/javascript-bootstrap-php-certification-for-beginners/",
      "bio": "A Comprehensive Guide for Beginners interested in learning JavaScript, Bootstrap, & PHP",
      "objectives": [
        "Master Client-Side and Server-Side Interactivity using JavaScript, Bootstrap, & PHP",
        "Learn to create mobile responsive webpages using Bootstrap",
        "Learn to create client and server-side validated input forms",
        "Learn to interact with a MySQL Database using PHP"
      ],
      "course_content": {
        "JavaScript Section": [
          "JavaScript - Introduction",
          "JavaScript Placement",
          "External JavaScript",
          "JavaScript Output",
          "JavaScript InnerHTML",
          "JavaScript Commenting",
          "JavaScript Constants",
          "JavaScript Variables Introduction",
          "JavaScript Assignment Operator",
          "JavaScript Arithmetic Operations",
          "JavaScript Arithmetic Operations Continued",
          "JavaScript Operator Precedence",
          "JavaScript Data Types",
          "JavaScript Objects",
          "JavaScript Object Output",
          "JavaScript Strings",
          "JavaScript String Length",
          "JavaScript Special Characters",
          "JavaScript Random Numbers",
          "JavaScript Min and Max Function",
          "JavaScript Math Round Function",
          "JavaScript Arrays",
          "JavaScript Array Attributes",
          "JavaScript Arrays - Pop - Push - Shift - Unshift",
          "JavaScript Changing and Deleting Elements",
          "JavaScript Splicing an Array",
          "JavaScript Sorting an Array",
          "JavaScript Joining Arrays",
          "JavaScript Conditional Statements",
          "JavaScript Comparisons",
          "JavaScript Booleans",
          "JavaScript For Loops",
          "JavaScript For-In Loop",
          "JavaScript While Loops",
          "JavaScript Do-While Loop",
          "JavaScript Break and Continue",
          "JavaScript Functions",
          "JavaScript Events",
          "JavaScript Project 1 - BG Color Changer",
          "JavaScript Project 2 - Photo Gallery",
          "JavaScript Project 2 - Completion"
        ],
        "Bootstrap Section": [
          "Introduction to Bootstrap",
          "Embedding Bootstrap",
          "Bootstrap - Basic Page Structure",
          "Bootstrap Grid System",
          "Bootstrap Three Column Layouts",
          "Bootstrap Typography",
          "Bootstrap Tables",
          "Bootstrap Styling Images",
          "Bootstrap Jumbotron",
          "Bootstrap Wells",
          "Bootstrap Alerts",
          "Bootstrap Buttons",
          "Bootstrap Button Groups",
          "Bootstrap Justified Button Groups",
          "Bootstrap Glyphicons",
          "Bootstrap Badges and Labels",
          "Bootstrap Progress Bars",
          "Bootstrap Pagination",
          "Bootstrap Pager Pagination",
          "Bootstrap List Groups",
          "Bootstrap Panels",
          "Bootstrap Dropdown Menus",
          "Bootstrap Collapsibles",
          "Bootstrap Collapse Panel",
          "Bootstrap Collapse List Group",
          "Bootstrap Accordian",
          "Bootstrap Tab Menus",
          "Bootstrap Pill Menus",
          "Bootstrap Dynamic Tabs and Pills",
          "Bootstrap Navigation Bar",
          "Bootstrap Collapsible Navigation Bar",
          "Bootstrap Forms - Vertical and Inline",
          "Bootstrap Inputs",
          "Bootstrap Form Control States",
          "Bootstrap Input Sizing",
          "Bootstrap Carousel",
          "Bootstrap Modal",
          "Bootstrap Tooltip",
          "Bootstrap Popover",
          "Bootstrap Scrollspy",
          "Bootstrap Project - Themes Intro",
          "Bootstrap Project - File Overview",
          "Bootstrap Project - Script Overview",
          "Bootstrap Project - Script Overview Continued"
        ],
        "PHP Section": [
          "PHP Introduction",
          "PHP Preparation",
          "PHP File Test",
          "PHP Syntax",
          "PHP Variables",
          "PHP Variable Scope",
          "PHP Global Keyword",
          "PHP Static Keyword",
          "PHP Echo vs Print",
          "PHP Data Types",
          "PHP Objects",
          "PHP Strings",
          "PHP Constants",
          "PHP Operators",
          "PHP Conditional Statements",
          "PHP ElseIf Statement",
          "PHP Switch Statement",
          "PHP While Loops",
          "PHP For Loops",
          "PHP Functions",
          "PHP Functions Continued",
          "PHP Arrays",
          "PHP Multidimensional Arrays",
          "PHP Sorting Arrays",
          "PHP Superglobal Variables",
          "PHP Forms Introduction",
          "PHP POST vs GET Basics",
          "PHP Form Output and Validation",
          "PHP Form Required Fields",
          "PHP Validation Continued"
        ]
      },
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Welcome to the JavaScript, Bootstrap, & PHP - Certification Course for Beginners.\nThis course offers an excellent introduction into three of the most widely used programming languages available for both front-end and back-end development.\nStudents will start with adding client-side interactivity to web pages using JavaScript. JavaScript is a powerful language that can be used to add numerous functions to web pages, ranging from form validation to animated objects. By using the Document Object Model, students will manipulate individual html and css elements using JS.\nThe JavaScript section will include a number of key concepts including:\nJavaScript output\nVariable declarations\nArithmetic operators\nObjects\nStrings\nMath functions\nArrays\nConditional statements\nLoops\nFunctions and events\n+ Much More\nIn addition to JavaScript, students will also learn how to create responsive web page layouts using the popular - Bootstrap library. Bootstrap is widely known as the most popular CSS Framework for developing mobile-first websites. It is a completely open-source framework which contains both CSS and JavaScript based design templates for typography, forms, buttons, navigation and other interface components.\nThe Bootstrap section of the course will cover the following key concepts:\nTypography\nTables\nImages\nJumbotrons\nWells\nAlerts\nButtons\nGlyphicons\nProgress Bars\nLayouts\nModals\ncarousels\nPopovers\nDrop-Down Menus\nForms\n+ Much More\nLastly, students will explore adding dynamic server-side functionality to web pages using PHP. PHP is another widely adopted open-source programming language. With PHP, developers can integrated databases into their web development projects and really take their skills to new dimensions.\n\nThe PHP section of the course will cover the following key concepts:\nVariable Declaration\nData Output\nWorking with Objects\nConditional Statements\nLoops\nFunctions\nArrays\nForm Validation\n+ Much More",
      "target_audience": [
        "Students interested in learning JavaScript, Bootstrap, or PHP",
        "Students interested in coding client-side web page interactivity using JavaScript",
        "Students interested in coding server-side interactivity using PHP"
      ]
    },
    {
      "title": "MERN Stack Front To Back: Full Stack React, Redux & Node.js",
      "url": "https://www.udemy.com/course/mern-stack-front-to-back/",
      "bio": "Build and deploy a social network with Node.js, Express, React, Redux & MongoDB. Fully updated April 2019",
      "objectives": [
        "Build a full stack social network app with React, Redux, Node, Express & MongoDB",
        "Create an extensive backend API with Express",
        "Use Stateless JWT authentication practices",
        "Integrate React with an Express backend in an elegant way",
        "React Hooks, Async/Await & modern practices",
        "Use Redux for state management",
        "Deploy to Heroku with a postbuild script"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "A Look At The Course Project",
          "Environment & Setup",
          "Link To Project Files"
        ],
        "Express & MongoDB Setup": [
          "MongoDB Atlas Setup",
          "Install Dependencies & Basic Express Setup",
          "Connecting To MongoDB With Mongoose",
          "Route Files With Express Router"
        ],
        "User API Routes & JWT Authentication": [
          "Creating The User Model",
          "Request & Body Validation",
          "User Registration",
          "Implementing JWT",
          "Custom Auth Middleware & JWT Verify",
          "User Authentication / Login Route"
        ],
        "Profile API Routes": [
          "Creating The Profile Model",
          "Get Current User Profile",
          "Create & Update Profile Routes",
          "Get All Profiles & Profile By User ID",
          "Delete Profile & User",
          "Add Profile Experience",
          "Delete Profile Experience",
          "Add & Delete Profile Education",
          "Get Github Repos For Profile"
        ],
        "Post API Routes": [
          "Creating The Post Model",
          "Add Post Route",
          "Get & Delete Post Routes",
          "Post Like & Unlike Routes",
          "Add & Remove Comment Routes"
        ],
        "Getting Started With React & The Frontend": [
          "A Look At The The UI / Theme",
          "Link To Theme Building Series On YouTube",
          "React & Concurrently Setup",
          "Clean Up & Initial Components",
          "React Router Setup",
          "Register Form & useState Hook",
          "Request Example & Login Form"
        ],
        "Redux Setup & Alerts": [
          "The Gist Of Redux",
          "Creating a Redux Store",
          "Alert Reducer, Action & Types",
          "Alert Component & Action Call"
        ],
        "React User Authentication": [
          "Auth Reducer & Register Action",
          "Load User & Set Auth Token",
          "User Login",
          "Logout & Navbar Links"
        ],
        "Dashboard & Profile Management": [
          "Protected Route For Dashboard",
          "Profile Reducer & Get Current Profile",
          "Starting On The Dashboard",
          "CreateProfile Component",
          "Create Profile Action",
          "Edit Profile",
          "Add Education & Experiences",
          "List Education & Experiences",
          "Delete Education, Experiences & Account"
        ],
        "Profile DIsplay": [
          "Finish Profile Actions & Reducer",
          "Display Profiles",
          "Addressing The Console Warnings",
          "Starting On The Profile",
          "ProfileTop & ProfileAbout Components",
          "Profile Experience & Education Display",
          "Displaying Github Repos",
          "Profile State Issue & Fix"
        ]
      },
      "requirements": [
        "A good understanding of JavaScript & ES6 Fundamentals",
        "React & Node Basics"
      ],
      "description": "Welcome to \"MERN Stack Front To Back\". In this course, we will build an in-depth full-stack social network application using Node.js, Express, React, Redux and MongoDB along with ES6+. We will start with a blank text editor and end with a deployed full-stack application. This course includes...\n\n\nBuilding an extensive backend API with Node.js & Express\nProtecting routes/endpoints with JWT (JSON Web Tokens)\nExtensive API testing with Postman\nIntegrating React with our backend in an elegant way, creating a great workflow\nBuilding our frontend to work with the API\nUsing Redux for app state management\nCreating reducers and actions for our resources\nCreating many container components that integrate with Redux\nTesting with the Redux Chrome extension\nCreating a build script, securing our keys and deploy to Heroku using Git\n\n\nUPDATE: The entire course was updated to use React Hooks, Async/Await and better overall code.\nThis is NOT an \"Intro to React\" or \"Intro to Node\" course. It is a practical hands-on course for building an app using the incredible MERN stack. I do try and explain everything as I go so it is possible to follow without React/Node experience but it is recommended that you know at least the basics first.\n\n\nThis is a project-based course, which means the entire course is building one large project. The project is called DevConnector and allows users to register and login to create a profile. They can add a resume of jobs and education and link all of their social networks.",
      "target_audience": [
        "Anyone that wants to learn how to build and deploy a full stack MERN application"
      ]
    },
    {
      "title": "Build a Social Network from Scratch: JavaScript PHP + MySQL",
      "url": "https://www.udemy.com/course/make-a-social-media-website/",
      "bio": "Learn JavaScript, PHP and MySQL by building the ultimate social network website from scratch! The complete guide!",
      "objectives": [
        "Create a full scale social networking website like Facebook or Twitter, including features such as newsfeeds, profiles, friend system, chat system, trending posts and much more!",
        "Program proficiently in PHP, HTML and CSS",
        "Program using an OO (Object Oriented) approach",
        "Know how to easily use MySQL databases with your website",
        "Understand how to register domain names and put your new site on the web!"
      ],
      "course_content": {},
      "requirements": [
        "A computer (I am using a Mac)",
        "A text editor to program in (I use Sublime Text 2)"
      ],
      "description": "Join over 5,000 students and be a part of this Udemy rated BEST SELLING course!\nDo you want to become an expert in JavaScript, PHP and MySQL?\nDo you want to build a social network just like Facebook?\nIf so, you’re in the right place! This course will guide you step by step in creating your own social network COMPLETELY from scratch.\nWe’re talking the kind of website that will amaze anybody that sees it. The kind of website that will get you hired in no time!\nWhy let me teach you?\nI work as a Software Engineer at Microsoft where I build products used by millions of people all over the world! I want to take the skills I’ve gained through years of working with some of the best developers in the world and transfer them directly to you!\nI’ve taught thousands of students here on Udemy and created some of the most popular development courses on Udemy!\nOkay so what’s the course about?\nI will personally guide you, step by step, in creating your own social network site just like Facebook complete with:\nStatus posts\nNewsfeeds\nUser profiles\nChat/messaging systems\nFriend systems\nAnd much more\nWhether you are a complete beginner* or an experienced programmer, this course will be massively beneficial to you.\nWhy should I take the course?\nIn the programming world, the “big 4” often consists of Google, Microsoft, Facebook and Amazon. To get a job at any of these companies, you absolutely MUST know the essentials: HTML, CSS, PHP, JQuery, JavaScript and MySQL.\nIf you take this course, you will have nothing to worry about because we use all of these skills extensively!\nSupport:\nBy enrolling in this course, you will have the COMPLETE support of a Microsoft Software Engineer (me). I'm always ready to answer any question you may have. Programming issues, errors, feature requests, general programming advice - it doesn't matter, I'm always happy to help! I always aim to respond to questions within a few hours and it's also worth noting that I've answered EVERY SINGLE question asked so far.\n\nFuture course discounts:\nBy enrolling in this course, you will get access to ALL of my current and future courses for the lowest possible discount we as instructors are capable of offering on Udemy - FOREVER.\n\nProject portfolio:\nThe site you create in this course will be the highlight of your project portfolio! Any potential employer who see's this project on your resume will want to hear all about it. The reason? They know that a project like this means you're familiar with the wide range of technical skills they need their employees to know.\n\nFun!\nFinally, this project is a lot of fun and I know you'll have a great time implementing your own unique ideas as well as the ones we implement together. What are you waiting for?",
      "target_audience": [
        "In this course you will use HTML, CSS, PHP, MySQL, JavaScript and JQuery. Although we will use all of these skills, no prior experience with them is needed. Of course, you may pick things up a little faster if you have used them before, but at the start of the course, things are explained in ways that target people who have never used the skill before. Because this course appeals to beginners as well as as experienced users, it may seem a little slow paced at the start especially if you have prior programming experience. Bare with it though because it does pick up. If you are an experienced programmer, you may not learn much about the skills but you may learn how to structure a social media website. Some of the techniques and methods used are not the most efficient way to do things (e.g. we use procedural MySQLI statements), but in my opinion, they are the easiest to teach in a short amount of time and easiest to pick up having never used the skills before. Feel free to swap bits of code with your preferred methods."
      ]
    },
    {
      "title": "A Beginners Guide to Advanced JavaScript & ES6 - ES2017",
      "url": "https://www.udemy.com/course/advanced-javascript-course/",
      "bio": "Learn tough topics like: 'this', scope, 'new' , hoisting, ES6, & More! Take your JS knowledge to the next level!",
      "objectives": [
        "Understand complex aspects of JavaScript",
        "Know and Use ES2015 (ES6), ES2016, and ES2017",
        "Impress interviewers with your JavaScript knowledge",
        "Know what ECMAScript Is",
        "Teach others developers advanced JavaScript"
      ],
      "course_content": {
        "Course Overview and Introduction": [
          "Setting up your workspace",
          "Where to get help",
          "Welcome"
        ],
        "JavaScript Data Types, Operators, and Quirks": [
          "JavaScript Data Types (video)",
          "JavaScript Data Types (article)",
          "Type Coercion (video)",
          "Type Coercion (article)",
          "== vs === (video)",
          "== vs === (article)",
          "Falsy Values (video)",
          "Falsy Values (article)",
          "Null vs Undefined (video)",
          "Null vs Undefined (article)",
          "Operators (video)",
          "Operator Precedence (video)",
          "Logical AND, OR, NOT (video)",
          "Logical AND, OR, NOT (article)",
          "Short Circuit Evaluation (video)",
          "Short Circuit Evaluation (article)",
          "Functions, invocation, return (video)",
          "Functions, invocation, return (article)",
          "WTF JS? 8 Funky Equations (video)",
          "WTF JS? 8 Funky Equations (article)"
        ],
        "JavaScript Scope and Execution": [
          "What is scope? (video)",
          "What is Scope? (article)",
          "Automatic Global Scope (video)",
          "Variable Hoisting (video)",
          "Variable Hoisting (article)",
          "Let & Const (video)",
          "Let & Const (article)"
        ],
        "this, new, prototypes, and arrow functions": [
          "The Keyword 'this' (video)",
          "The Global Object",
          "Declared Object",
          "The 'new' keyword - part 1",
          "The 'new' Keyword - part 2",
          "Prototypes",
          "The 'new' Keyword & Prototypes (article)",
          "Call, Bind, Apply (video)",
          "Arrow Functions (video)",
          "Arrow Functions (article)",
          "The Keyword 'this' Massive Recap (article)"
        ],
        "Tougher Concepts": [
          "Recursion (video)",
          "Recursion (article)",
          "Closures (video)",
          "Closures (article)",
          "IIFE (video)",
          "IIFE (article)",
          "Callbacks (video)",
          "Callbacks (article)",
          "Promises (video)",
          "Promises (article)"
        ],
        "What is ECMAScript?": [
          "Introduction to ES (video)",
          "Introduction to ES (article)"
        ],
        "ES 2015": [
          "Concepts Already Covered in this Course",
          "Default Parameters",
          "Spread and Rest Paramaters",
          "Template Literals",
          "Array.keys, values, and entries",
          "Object Property Shorthand",
          "Object Method Properties",
          "Destructuring - Array Matching"
        ],
        "ES 2016": [
          "Array Includes",
          "Exponentiation Operator"
        ],
        "ES 2017": [
          "Object.keys, values, entries (video)",
          "Object.keys, values, entries (article)",
          "String Padding (video)",
          "String Padding (article)",
          "Trailing Commas (video)",
          "Trailing Commas (article)",
          "Async/Await (video)",
          "Async/Await (article)"
        ],
        "Bonus Articles": [
          "Regular Expressions in JavaScript (article)"
        ]
      },
      "requirements": [
        "Basic JavaScript Knowledge (arrays, objects, loops, and functions)"
      ],
      "description": "Are you ready to finally understand JavaScript?\nDo any of these words confuse you: recursion, scope, hoisting, the keyword this, or ES6?\nJavaScript is the worlds most popular language and if you want to be hired as a JavaScript Developer, these are concepts you have to know and understand.\nAs a self-taught developer myself, I know first hand just how difficult it can be to learn to code online. I break down every concept in an easy to understand way so you walk away completely understanding each topic.\nThe problem with every course I find is that they're either a video course or a text based course. Video lectures are great for learning concepts, but can be difficult to skim through later when you're trying to remember what you learned. Because of this, this course includes video lectures AND written articles. Nearly every video is accompanied with a written article so you can reinforce your learning, and have an easy way to skim through and study the tougher concepts.\nThis Course Covers:\nThe latest and greatest in JavaScript:\nES 2015 (ES6), ES 2016, and ES 2017\nThe keyword 'this' and how it works\nThe 'new' keyword\n== vs ===\nOperators and Operator Precedence\nScopes\nVar, let, and const\nRecursion\nClosures\nCallbacks\nAnd much, much more!\nBest of all, this course is constantly updated with new material! I upload new walkthroughs each month so you can stay on top of the latest and greatest in JavaScript!\nLastly, I want you to succeed in this course. I'm available every step of the way if you run into problems or questions! The student Q&A section of the course makes it really easy for me to answer your questions and provide deeper knowledge as issues come up.\nWhat are you waiting for? Take your JavaScript knowledge to the next level and sign up for this course today!",
      "target_audience": [
        "Anyone who wants to get better at JavaScript and finally understand the tougher topics!",
        "Anyone who has struggled to understand 'this', 'new', and arrow functions",
        "Anyone who wants to learn ES2015, ES2016, and ES2017"
      ]
    },
    {
      "title": "Meteor and React for Realtime Apps",
      "url": "https://www.udemy.com/course/meteor-react-tutorial/",
      "bio": "Master the fundamentals of Meteor and React with this tutorial as you develop secure, dynamic apps",
      "objectives": [
        "Create interactive web apps amazingly fast",
        "Build amazing single page applications with Meteor and React JS",
        "Master fundamental concepts behind structuring Meteor applications",
        "Learn the true purpose of Meteor in a modern application",
        "Be the engineer who explains how Meteor works to everyone else, because you know the fundamentals so well",
        "Build and prototype interesting personal projects in a weekend"
      ],
      "course_content": {
        "The Basics of Any Meteor App": [
          "One Quick Item...",
          "Link to All Code For This Course",
          "Installing Meteor",
          "Purpose of Meteor Projects",
          "Project Dependencies",
          "React vs Meteor",
          "What is Meteor, Again?"
        ],
        "A React Primer": [
          "Getting Something on the Screen",
          "Importing React",
          "Building a React Component",
          "Meteor Startup",
          "Project Overview and Challenges",
          "Export Statements",
          "Nesting Component",
          "Working with Dummy Data",
          "Building a List of Images",
          "Communication with Props",
          "Adding CSS in Components",
          "Key Props",
          "Image API Endpoint",
          "AJAX with Axios",
          "Class Based Components",
          "Loading Data with Lifecycle Methods",
          "State in Components",
          "Implementing State",
          "Recap on State",
          "Passing Images as Props",
          "Filtering Out Albums",
          "Image Description",
          "Upvotes and Downvotes",
          "Implementing Image Score",
          "Wrapup"
        ],
        "On to Meteor!": [
          "Directory Introduction",
          "Challenges in this App",
          "App Boilerplate",
          "MongoDB Collections",
          "Creating MongoDB Collections",
          "Generating Data with Faker",
          "Get Data with Collection Queries",
          "Inserting Records into Collections",
          "Reading Server Console Logs",
          "Boilerplate for Employee List",
          "Publications and Subscriptions",
          "Publications with Cursors",
          "Creating a Container",
          "Publication and Subscription Review",
          "Employee Detail Scaffolding",
          "Styling Employee Details",
          "More Styling and Bug Fixes",
          "Flexbox Styling",
          "Click Handlers",
          "Updating Subscriptions",
          "Refactoring from Functions to Classes",
          "Fetching More Users"
        ],
        "Getting More Complex - Meteor Methods": [
          "Project Overview",
          "Problems to Solve",
          "Redirecting Short Links",
          "Boilerplate Setup",
          "Header Component Warmup",
          "Links Collection",
          "Link Create Component",
          "Form Submit and Refs",
          "The Insecure Package",
          "Handling Data Securely",
          "Safely Changing Data with Meteor Methods",
          "Validating URLs",
          "Graceful Error Handling",
          "Generating Unique Tokens for URLs",
          "A Publication for Links",
          "Link List Table",
          "Intercepting Requests with Meteor Middleware",
          "Finding Tokens in URLs",
          "Redirecting Users to Long Links",
          "Redirecting Users to Long Links Continued",
          "Updating Mongo Records",
          "Wrapup"
        ],
        "Full Stack Development - Workspaces": [
          "Workspace Collaborator Overview",
          "Project Challenges",
          "Outlining Component Definitions",
          "Bootstrapping an App",
          "Scaffolding a Header",
          "Authentication UI",
          "Authenication UI Continued",
          "Bins Collection",
          "Insert Bins Method",
          "Create Bin Button",
          "Accessing Bins with Publications",
          "Claiming Bins with Subscriptions",
          "Rendering a List of Bins",
          "Removing a Bin",
          "Routing with React Router",
          "More on React Router",
          "Default Components with IndexRoutes",
          "Accessing the URL with Route Params",
          "Navigation with Link Tags",
          "Programmatic Navigation",
          "Just the Right Bin",
          "Just the Right Bin Continued",
          "Bin Editor",
          "Markdown Editor",
          "Capturing Change Events",
          "Update Meteor Method",
          "Markdown Viewer",
          "Translating Markdown to HTML",
          "Sharing Bins",
          "Bin Sharing Form",
          "Meteor Method for Sharing",
          "Rendering Shared Addresses",
          "Shared Bins Publication",
          "Share Subscriptions",
          "Markbin Review",
          "RallyCoding"
        ]
      },
      "requirements": [
        "You'll need a Mac or PC"
      ],
      "description": "This is the tutorial you've been looking for to master building dynamic web apps with Meteor JS, with all the most important topics covered in great depth!\nAuthentication?  Covered.  Routing?  Of course!  Security? We got it.\n\nMeteor JS can get you a position in web development or help you build that personal project you've been dreaming of.  Meteor is the ultimate framework for developer productivity; it is bar-none the fastest technology you can use to make fast and interactive web apps in just a few hours.\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build interesting apps with Meteor and React.\nWe'll start by mastering the fundamentals of React, including JSX, “props\", “state\", and eventing. Source code is provided for each lecture, so you will always stay up-to-date with the course pacing. After an introduction to React, we'll dive right in to Meteor, covering topics like Collections, Meteor Methods, Subscriptions, and Publications.\nIf you are new to Meteor or React, or if you've been working to learn it but sometimes feel like you still don't quite 'get it', this is the course for you! To learn Meteor you have to understand it.\nLearn how to secure Meteor applications with enterprise-grade security.  Don't let your data leak!\nSet up user authentication and permissions using Meteor's built-in auth system.\nUse React to render your Meteor data; master the process of breaking down a complex component into many smaller, interchangeable components\nGrasp the difference between \"props\" and \"state\" and when to use each\nDevelop complex applications that scale in complexity by mastering Meteor\nI've built the course that I would have wanted to take when I was learning Meteor. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "Programmers looking to learn Meteor",
        "Engineers who have researched Meteor but have had trouble mastering some concepts",
        "Web developers who are looking to build a full-stack web application",
        "Entrepreneurs who want to make their own apps without relying on others"
      ]
    },
    {
      "title": "RxJS 7 and Observables: Introduction",
      "url": "https://www.udemy.com/course/rxjs-and-observables/",
      "bio": "Learn how Observables work and behave in an easy to understand step-by-step way!",
      "objectives": [
        "By completing this course you will understand how Observables work, behave and how to use them.",
        "You will learn the basics (and much, much more) of RxJS in a slow step-by-step manner.",
        "You will have a good understanding of the Observables and other key RxJS topics, such as: Subscriptions, Observers, Operators, Subjects",
        "After you finish this course, you will be able to understand other, more advanced articles, videos and docs available on the Internet.",
        "You will have a great set of tools to start your RxJS journey."
      ],
      "course_content": {
        "Getting Started": [
          "Course Introduction",
          "RxJS Overview",
          "Quick Start",
          "Optional: Using your own IDE",
          "Course Plan",
          "Learning Tips"
        ],
        "Observable - how does it work?": [
          "Module Introduction",
          "Array vs Stream",
          "Observable, Subscription, Observer - Key Elements",
          "Warm-up Observable - Observable, Observer, Subscription",
          "Warm-up Observable - Multiple Subscriptions",
          "Observable Basics",
          "Marbles Introduction",
          "Marbles - Next, Error, Complete",
          "Marbles - Notification Types Summary",
          "Marbles - Incorrect Scenarios",
          "Marbles - Appearance",
          "Marbles - Game",
          "Marbles - Docs",
          "Marble Diagrams and Notification Types",
          "Module Summary"
        ],
        "Exercises: Observable, Observer and Subscription": [
          "Module Introduction",
          "Subscription Lifecycle",
          "Execution Timing - Empty Observable",
          "Synchronous Emission - Next Notification",
          "Asynchronous Emission - More Next Notifications",
          "Teardown - Complete Notification",
          "Error Notification",
          "Full Observer",
          "Order",
          "Cancellation - Unsubscribe",
          "Module Summary",
          "Subscription Lifecycle"
        ],
        "Types of Observable": [
          "Module Introduction",
          "Cold Observable",
          "Hot Observable",
          "Hot vs Cold - Comparison",
          "Module Summary",
          "Hot vs Cold"
        ],
        "Creation Functions": [
          "Module Introduction",
          "of - How Creation Functions work",
          "from",
          "Creation Functions - of, from",
          "fromEvent",
          "timer",
          "interval",
          "Creation Functions - fromEvent, timer, interval",
          "Important note about the API and ajax() creation function",
          "forkJoin - Handle multiple HTTP calls",
          "forkJoin - Error Scenario",
          "combineLatest - Reacting to multiple input changes",
          "Creation Functions - forkJoin, combineLatest",
          "Module Summary"
        ],
        "Pipeable Operators": [
          "Module Introduction",
          "Operator Stacking",
          "Importing Operators",
          "filter",
          "map",
          "tap",
          "Learn More: tap",
          "debounceTime",
          "catchError",
          "Pipeable Operators",
          "Flattening Operators",
          "Flattening Operators - Static Example",
          "Flattening Operators - Dynamic HTTP Request",
          "Flattening Operators - Error Handling - First Solution",
          "Flattening Operators - Error Handling - Second Solution",
          "Flattening Operators - Concurrency - concatMap",
          "Flattening Operators - switchMap",
          "Flattening Operators - mergeMap",
          "Flattening Operators - Side by Side Comparison",
          "Pipeable Operators - Flattening Operators",
          "Module Summary"
        ],
        "Subjects": [
          "Module Introduction",
          "Multicasting",
          "Subject vs Observable vs Observer",
          "Subject in Action",
          "BehaviorSubject - Concept",
          "BehaviorSubject in Action",
          "Module Summary",
          "Subjects"
        ],
        "Course Summary": [
          "Course Summary",
          "Congratulations & Further Steps"
        ]
      },
      "requirements": [
        "No RxJS knowledge needed!",
        "No TypeScript knowledge needed",
        "JavaScript is required",
        "Functional programming experience is nice to have - understanding of JavaScript's array operators (.map, .filter, etc.) is helpful"
      ],
      "description": "Have you joined a project which uses the Observables and RxJS and have no idea how to use it?\nAre you already using RxJS and Observables and its behavior keeps surprising you?\nDo you want to learn a new tool to conveniently handle asynchronous code?\n\nIf you responded YES to any of the above questions, then this might be a great course for you! RxJS is known to have a steep learning curve. There are many courses, articles, docs on the Internet which are great and cover a lot of complex RxJS scenarios, however I've noticed that it is difficult to start going and make first steps. Also, many experienced RxJS users still make some basic mistakes from time to time as they don't understand the mechanics of the Observables well.\nThis course will help you enter the world of RxJS in a slow step-by-step way. It might even help more advanced RxJS users fill the missing gaps in their understanding of the Observables and RxJS.\n\nThe objective of this course is to give you a great set of tools to start your RxJS journey!\nYou will learn here the core concepts of RxJS, such as:\nObservables\nSubscriptions\nObservers\nCreation Functions\nPipeable Operators\nSubjects\nThe first sections of this course will present the basics of the Observables and RxJS in a slow and detailed way. We'll have a look at the idea of streams and reactive programming to understand how the data comes to us when using the Observables. I'll show you what kind of sources can we find in the world of Observables. You'll learn how can we execute an Observable by making Subscriptions, and how can we react to the notifications emitted by providing Observers. We'll use Marble Diagrams to present things in an easy to understand graphical way. There will also be a plenty of coding sections explaining each feature.\nAfter we get the theory behind the Observables clarified, we'll move towards more practical uses of RxJS.\nWe'll use Creation Functions to easily create Observable from various sources like: arrays, DOM events, HTTP requests, timers, intervals and combining multiple Observables together. We'll use the Pipeable Operators to create more complex Observables.\nFinally, we'll learn about the Subjects, which are a special type of Observable which allow us to conveniently emit a value to all Observers.\n\nAfter you finish this course, you'll be able to start using the Observables and other RxJS tools in your apps and understand the articles, videos and docs on the Internet, so you can continue your RxJS journey.\n\nLet's get started!\n\n\n\nThis course uses OpenMoji emojis and icons in some of the videos (CC BY-SA 4.0 license)\nPromo music: Royalty Free Music from Bensound",
      "target_audience": [
        "For those, who have just started working on a project which uses RxJS and Observables and have not used RxJS previously.",
        "For those, who already use Observables and RxJS, but it keeps surpising them and want to understand it better.",
        "For those, who find other courses and resources too complicated and who look for a slower, more detailed introduction into RxJS and Observables.",
        "For those, who look for more advanced tools for handling asynchronous code."
      ]
    },
    {
      "title": "Shopify Theme Development: Online Store 3.0 + TailwindCSS",
      "url": "https://www.udemy.com/course/shopify-theme-development-tailwindcss/",
      "bio": "Learn how to create Shopify themes for Online Store 3.0 (JSON Templates) using Shopify CLI, Liquid, & TailwindCSS",
      "objectives": [
        "Learn about the new Online Store 3.0 and the new theme architecture of Shopify",
        "Shopify Theme Development",
        "Liquid Programming (Tags, Objects, & Filters)",
        "How to use TailwindCSS in Shopify Theme Development",
        "Create Shopify themes using Shopify CLI",
        "Create an advanced product page w/ product carousels on mobile, variant selectors, and more!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Before We Get Started",
          "What is Online Store 2.0?",
          "What is Shopify Liquid?"
        ],
        "Setting up your partners account": [
          "Creating Shopify Partners Account",
          "Creating Development Stores"
        ],
        "Installing Local Development Tools For Shopify CLI": [
          "Read before you continue!",
          "Installing VSCode in MacOS",
          "Installing NodeJS",
          "Installing Shopify CLI on Windows",
          "Installing Shopify CLI on MacOS"
        ],
        "Getting Started": [
          "Creating The Shopify Theme Project using Shopify CLI",
          "Connecting local Shopify themes to online stores with Shopify CLI",
          "Installing TailwindCSS to Shopify theme projects",
          "Fixing Shopify CLI errors with .shopifyignore"
        ],
        "Creating The Responsive Navigational Bar": [
          "The Navigational Bar (Creating the menu links)",
          "The Dropdown Menus (Creating sublinks)",
          "The Mobile Menu (Creating mobile menu window)",
          "Learning how to customize the header with Section Schema",
          "How to hide/show customer login & register links"
        ],
        "Shopify Theme Project Management": [
          "Using GitHub integration with Shopify"
        ],
        "JSON Templates": [
          "READ! THIS IS ABOUT THE FOLLOWING LESSONS!",
          "[404]: Learning about JSON Templates",
          "[404]: Settings Schema",
          "[404]: Designing The 404 Page",
          "[Article]: Creating Blog Posts",
          "[Article]: Liquid To JSON Template",
          "[Article]: Settings Schema",
          "[Article]: Designing The Article Page",
          "[Article]: Comments Section",
          "[Article]: Search Engine Optimization (SEO) #1",
          "[Article]: Search Engine Optimization (SEO) #2",
          "[Blog]: Liquid To JSON Template",
          "[Blog]: Setting Schema",
          "[Blog]: Designing The Blog Page",
          "[Blog]: Paginations",
          "[Cart]: Liquid To JSON Template",
          "[Cart]: Making a Working Cart Page",
          "[Cart]: Making a Test Order for Development Stores",
          "[Cart]: Schema Blocks",
          "[Collection]: Liquid To JSON Template",
          "[Collection] - Designing The Collection Page",
          "[Collection] - Creating The Product Card Snippet File",
          "[Collection] - Creating Schema Settings",
          "[Collection] - Creating That Zoom Effect on Hover",
          "[Index] - Liquid To JSON Template",
          "[Index] - Featured Collection",
          "[List Collections] - Creating a Working List Collections Page",
          "[Page] - Liquid To JSON Template",
          "[Page] - Rendering The Page Content",
          "[Page] - Designing The Page",
          "[Custom Section] - Contact Form",
          "[Page] - Contact Page",
          "[Product] - Liquid To JSON Template",
          "[Product] - Creating The Necessary Products For Testing",
          "[Product] - Rendering The Product Medias",
          "[Product] - Creating Product Media Carousels",
          "[Product] - Creating The Product Form",
          "Let's Fix Our Code",
          "[Product] - Creating Schema Blocks for the Product Form",
          "[Product] - The JavaScript Side of Product Template",
          "[Search] - Creating The Search Bar",
          "[Search] - Rendering Products in Search Results"
        ],
        "Customers": [
          "[Customer] - Login Page",
          "[Customer] - Registration Page",
          "[Customer] - Testing Forgot Your Password Form",
          "[Customer] - Reset Password Form",
          "[Customer] - Guest Login",
          "[Customer] - Account Page",
          "[Customer] - Order Page #1",
          "[Customer] - Order Page #2",
          "[Customer] - Order Page #3",
          "[Customer] - Addresses Page (Creating the interface)",
          "[Customer] - Addresses Page (Creating The New Address Modal)",
          "[Customer] - Addresses Page (JavaScript Side of Customer Address Form)",
          "[Customer] - Addresses Page (Creating The Edit Address Modal)",
          "[Customer] - Addresses Page (Set as default address)",
          "[Customer] - Addresses Page (Deleting addresses)",
          "[Customer] - Activate Account Page"
        ],
        "Shopify CLI, Theme Check, AlpineJS": [
          "Fixing AlpineJS Blipping Issue",
          "Fixing Shopify CLI Errors",
          "Using Theme Check",
          "Fixing SwiperJS error and the media size"
        ],
        "Learning about 3D Models in Shopify themes": [
          "Using 3D Models in Shopify",
          "What is Model Viewer?",
          "Setting up the product model custom element",
          "Setting up the product model modal window",
          "Creating JavaScript of <product-model> custom element",
          "Writing the CSS style of the Model Viewer to maximize its size",
          "Using the Model Viewer UI Feature of Shopify"
        ]
      },
      "requirements": [
        "You must know HTML, CSS, & JavaScript",
        "You must know how to use Node or npm",
        "You must know your way around Shopify"
      ],
      "description": "Shopify just recently updated their Shopify online experience and now they call it \"Online Store 3.0\".\n\nWith this update, Shopify merchants can now customize their entire online store using sections & blocks. This opened a lot of doors not just for Shopify app developers but also for Shopify theme developers because now, you can add cool sections and blocks to the most commonly used pages like products page, collections page, blog page, etc.\n\nIf you're a Shopify theme developer and you don't know yet how to create a Shopify theme for Online Store 2.0, then this is the best time to learn because Shopify is now accepting Shopify themes to be listed on their Shopify Theme Store!\n\nThis means you can make money by selling your Shopify themes! So are you interested to learn more?\n\n\nIn this course, we’re going to learn how to create a Shopify theme for Online Store 2.0 using Shopify CLI with the help of TailwindCSS to design a cool online store.\n\n\nIn this course you will learn:\nHow to set up your development store\nUsing TailwindCSS to design a Shopify theme\nOnline Store 2.0 (JSON Templates)\nShopify CLI\nSchema Settings\nSearch Engine Optimization (SEO) for pages like articles, products, etc.\nLiquid language (Referencing asset files, loops, conditional statements, Shopify objects, filters, and many more)\nCustomer pages\n\n\nFrequently Asked Questions\n\n\nQ: Is this course beginner-friendly?\nA: If you're new to Shopify theme development, YES. However, if you're entirely new to Web Development, then this course is NOT for you since I won't be explaining how HTML works, how CSS utilities works, what is JavaScript, etc. If you're entirely new to web development, I suggest learning it first before taking this course.\n\n\nQ: What operating system are we required to use?\nA: I have used MacOS in this course, so if you want to use a different OS, you can do that. However, make sure that you know your way around your system since yours is going to be different from mine (e.g. Terminal/Powershell/Shell)\n\n\nIf you think you’re ready to start, signup now, and let’s create the best Shopify theme together!",
      "target_audience": [
        "Beginner to Intermediate \"Shopify developers\" NOT web developers",
        "Students who wants to learn how to create Shopify themes using Shopify CLI",
        "Shopify merchants who wants to learn about Shopify themes",
        "Web Developers who wants to learn about Shopify theme architecture"
      ]
    },
    {
      "title": "The Ultimate Bootstrap Guide - Bootstrap 5 from Scratch",
      "url": "https://www.udemy.com/course/the-complete-bootstrap-5-course-for-beginners-step-by-step/",
      "bio": "A step-by-step course on Bootstrap 5 layouts, forms, components, and helpers with advanced features of Bootstrap 5.",
      "objectives": [
        "Learn how to use Bootstrap 5 from scratch by following over 200 structured lessons covering every key component and layout feature step by step.",
        "Understand Bootstrap’s responsive grid system, breakpoints, and container behaviors to build fully mobile-friendly, flexible web layouts.",
        "Build a complete employee management dashboard using Bootstrap 5’s grid, cards, tables, and utility classes for real-world layout experience.",
        "Create a modern blog template using Bootstrap 5’s typography, spacing, and media object utilities to structure clean content-driven designs.",
        "Design a fully responsive multi-page professional website template with navbar, hero sections, forms, footers, and interactive elements.",
        "Master Bootstrap’s components like buttons, alerts, modals, carousels, accordions, badges, and navbars using hands-on project examples.",
        "Learn how to use Bootstrap’s JavaScript plugins to add dropdowns, collapsible menus, offcanvas navigation, and other dynamic UI behaviors.",
        "Work with utility-first classes for spacing, colors, alignment, shadows, borders, and responsive visibility without writing custom CSS.",
        "Gain confidence reading and applying the official Bootstrap 5 documentation, knowing when and how to use each class and component.",
        "Build professional-looking UIs faster by combining reusable Bootstrap patterns with solid layout techniques learned through real projects."
      ],
      "course_content": {
        "Getting Started with Bootstrap 5": [
          "Introduction to Bootstrap 5",
          "What you will need",
          "Hello World",
          "Bootstrap 5 Document Structure",
          "Section 1: Quiz"
        ],
        "Layouts in Bootstrap 5": [
          "Breakpoints in Bootstrap 5",
          "Containers",
          "Grid",
          "Grid Coding Exercise",
          "Grid Options",
          "Nesting Rows and Columns",
          "Nesting Rows and Columns Coding Exercise",
          "Column Vertical Alignment",
          "Align Items Center Coding Exercise",
          "Column Horizontal Alignment",
          "Column Horizonal Alignment Exercise",
          "Column Wrapping and Column Breaks",
          "Column Break Coding Exercise",
          "Reordering and Offsetting Columns",
          "Column Ordering Coding Exercise",
          "Move a column with Offset method Coding Exercise",
          "Margin Utilities",
          "Margin Utilities Coding Exercise",
          "Gutters",
          "Horizontal Gutters",
          "Vertical Gutters",
          "Horizontal and Vertical Gutters",
          "Section 2: Quiz"
        ],
        "Contents in Bootstrap 5": [
          "Typography",
          "Inline Text Elements",
          "Abbreviations and Blockquotes",
          "Working with Lists",
          "Images in Bootstrap",
          "Tables in Bootstrap",
          "Table Alignment, Nesting and Anatomy",
          "Figures in Bootstrap",
          "Section 3: Quiz"
        ],
        "Forms in Bootstrap 5": [
          "Forms in Bootstrap",
          "Form Control",
          "Checks and Radios",
          "Range",
          "Input Groups",
          "Floating Labels",
          "Form Layout",
          "Horizontal Forms",
          "Auto Sizing Forms",
          "Inline Forms",
          "Form Validation",
          "Section 4: Quiz"
        ],
        "Components in Bootstrap 5": [
          "Accordions",
          "Alerts",
          "Dismissing Alerts",
          "Badges",
          "Breadcrumb",
          "Buttons",
          "Button Group",
          "Button Toolbar",
          "Button Group Alteration",
          "Card",
          "Card Sizing",
          "Card Navigation",
          "Card Images",
          "Card Styles",
          "Carousel",
          "Carousel Controls",
          "Carousel Indicators",
          "Carousel Caption",
          "Carousel Fade Effect",
          "Carousel Timing",
          "Disable Carousel Touch Swiping",
          "Carousel Dark Variant",
          "(Bootstrap 5.3 Update) Deprecation of Carousel Dark & The New Method",
          "Close Button",
          "(Bootstrap 5.3 Update) Deprecation of \"btn-close-white\" & The New Method",
          "Collapse",
          "Horizontal Collapse",
          "Multiple Targets",
          "Dropdowns",
          "Split Button",
          "Dropdown Sizing",
          "Dark Dropdowns",
          "(Bootstrap 5.3 Update) Deprecation of Dark Dropdowns & The New Method",
          "Dropdown Directions",
          "Dropup and Dropdown Alignment",
          "Menu Items",
          "Menu Alignment",
          "Dropdown Alignment Options",
          "Menu Contents",
          "Dropdown Forms",
          "Dropdown Options",
          "Dropdown Auto Close",
          "List Group",
          "List Group Links and Buttons",
          "List Group Flush",
          "Numbered List",
          "Horizontal List Groups",
          "Contextual List Group Classes",
          "List Group with Badges",
          "List Group with Custom Content",
          "List Group Checkboxes and Radios",
          "List Group JavaScript Tabs",
          "Modals",
          "Static Backdrop",
          "Scrolling Long Content",
          "Vertically Centered",
          "Modal Tooltips and Popovers",
          "Using Grid System In Modal",
          "Varying Modal Content",
          "Toggle Between Modals",
          "Optional Modal Sizes",
          "Navbar",
          "(Bootstrap 5.3 Update) The All New \"bg-body-tertiary\"",
          "Navigation Links",
          "Navbar Dropdown",
          "Navbar Nested Dropdown",
          "Navbar Forms",
          "Navbar Input Group",
          "Navbar Plain Text",
          "Navbar Colors",
          "(Bootstrap 5.3 Update) The Navbar Dark-Mode",
          "(Bootstrap 5.3 Update) The New Navbar Color",
          "Navbar Containers",
          "Navbar Placement",
          "Navbar Scrolling",
          "Off Canvas Navbar",
          "Navs and Tabs",
          "Nav Flex Utilities",
          "Nav Tabs and Pills with Dropdown",
          "Tabs and Pills Behaviors",
          "Offcanvas In-Depth",
          "(Bootstrap 5.3 Update) Offcanvas Dark-Mode",
          "Offcanvas Scrolling",
          "Offcanvas Placement",
          "Pagination",
          "Placeholders",
          "Popovers In-Depth",
          "Popover Direction",
          "Custom Popovers",
          "Dismiss on Next Click",
          "Enable Popover On Hover",
          "Progress Bars",
          "Progress Bar Height and Background",
          "Stripes And Animation",
          "(Bootstrap 5.3 Update) The New Progress Bar",
          "(Bootstrap 5.3 Update) Progress Bar Height",
          "(Bootstrap 5.3 Update) Labels and Backgrounds in Progress Bars",
          "(Bootstrap 5.3 Update) Multiple Stacked Progress Bars",
          "(Bootstrap 5.3 Update) Stripped and Animated Progress Bars",
          "Scrollspy",
          "Spinners",
          "Growing Spinner",
          "Spinner Alignment",
          "Spinner Sizes",
          "Spinner In Buttons",
          "Toasts",
          "Toast Alignment",
          "Tooltips In-Depth",
          "Custom Tooltip",
          "Tooltip Directions",
          "Html in Tooltip",
          "Tooltip On Disabled Elements",
          "Section 5: Quiz"
        ],
        "Helpers in Bootstrap 5": [
          "Clearfix",
          "Colors and Background",
          "Colored Links",
          "(Bootstrap 5.3 Update) Link Utilities",
          "(Bootstrap 5.3 Update) Focus Rings",
          "(Bootstrap 5.3 Update) Icon Links",
          "Ratios",
          "Positions",
          "Stacks",
          "Visually Hidden",
          "Stretched Link",
          "Text Truncate",
          "Vertical Rule",
          "Section 6: Quiz"
        ],
        "Utilities in Bootstrap 5": [
          "Backgrounds",
          "(Bootstrap 5.3 Update) Additional Background Colors",
          "Background Gradients",
          "Background Opacity",
          "Borders",
          "Border Color",
          "Border Opacity",
          "Border Width",
          "Border Radius",
          "Rounded Border Sizes",
          "Text Colors",
          "Text Opacity",
          "Display Inline and Block",
          "Hiding Elements",
          "Display In Print",
          "Flex",
          "Flex Direction",
          "Flex Justify Content",
          "Flex Align Items",
          "Flex Align Self",
          "Flex Fill",
          "Flex Grow And Shrink",
          "Flex Auto Margins",
          "Flex With Align Items",
          "Flex Wrap",
          "Flex Order",
          "Flex Align Content",
          "Flex Media Object",
          "Responsive Float",
          "Interactions",
          "(Bootstrap 5.3 Update) Link Opacity",
          "(Bootstrap 5.3 Update) Link Underlines",
          "(Bootstrap 5.3 Update) Colored Links",
          "(Bootstrap 5.3 Update) Object Fit",
          "(Bootstrap 5.3 Update) Responsive Object Fit",
          "Opacity",
          "Overflow",
          "Position",
          "Position Center Elements",
          "Position Center Elements Within Edges",
          "Position Examples Part 1",
          "Position Example Part 2",
          "Shadow",
          "Sizing",
          "Spacing",
          "Gap",
          "Text Alignment",
          "Text Wrap",
          "Text Break",
          "Text Transform",
          "Font Size",
          "Font Weights And Italics",
          "Line Height",
          "Monoscope",
          "Reset Color",
          "Text Decoration",
          "Vertical Alignment",
          "Visibility",
          "(Bootstrap 5.3 Update) The Z-Index",
          "Bootstrap Icons",
          "Section 7: Quiz"
        ],
        "Project 1: EMS Web with Bootstrap 5": [
          "Introduction to EMS2.0 Application Project",
          "Creating the Login Page",
          "Creating Dash Nav and Brand Logo",
          "Creating the Navbar Toggler",
          "Creating Navbar Items",
          "Creating Form Fields for Navbar",
          "Creating Cards for Dashboard",
          "Creating Employees List Page",
          "Creating Employees Page Sidebar",
          "Creating Employees List Table",
          "Creating Add Employee Modal",
          "Creating Add Employee Modal Form",
          "Creating Details Modal for Employee List",
          "Creating Edit Details for Employee List",
          "Creating Delete Modal for Employees List",
          "Creating Jobs List Page",
          "Updating the Job List Page",
          "Creating Job List Table",
          "Creating Add Job Modal",
          "Creating Details Modal for Job",
          "Creating Edit Details for Job Modal",
          "Creating Delete Modal for Job List"
        ],
        "Project 2: Blog App with Bootstrap 5": [
          "Blog Project Introduction",
          "What's required for Template Building",
          "Creating the index file",
          "Creating the Navbar and brand logo",
          "Creating Navbar Toggler",
          "Creating Navbar Items",
          "Creating the search field",
          "Creating the home banner",
          "Creating the subscribe modal",
          "Creating Home Posts Section",
          "Creating Blog Footer",
          "Adding Custom Effects to Navbar",
          "Creating Default Page Header",
          "Creating Post Loop for Default Page",
          "Creating Sidebar Subscribe Form",
          "Creating Categories and Archive Widgets",
          "Creating Page and Post Content Area",
          "Creating Comment Form for Posts",
          "Creating the Search Page",
          "Linking Everything Together"
        ],
        "Project 3: Real-World Education Project": [
          "Introduction to Project",
          "Setting up Project Folder",
          "Creating Navbar and Brand",
          "Creating Navbar Toggler",
          "Creating Nav Items",
          "Creating Navbar Search Field",
          "Creating Navbar Sign-up and Login Buttons",
          "Creating the Banner Text",
          "Adding Banner Image",
          "Creating Site Feature Set",
          "Creating Course Loop Header",
          "Creating Course Loop Filter",
          "Creating Course Loop List Header",
          "Creating Single Course List Item",
          "Creating Duplicates of Course Items",
          "Creating Home Page Content",
          "Adding Home Content Image",
          "Creating Subscribe Area",
          "Creating Main Footer",
          "Creating Footer Address",
          "Creating Link Items for Footer",
          "Creating Social Icons",
          "Creating Copyright Info",
          "Creating Sticky Footer",
          "Creating About Page Header",
          "Creating About Content Section",
          "Creating the courses page",
          "Creating Single Course page and Breadcrumb",
          "Creating Course Header Description and Meta Data",
          "Creating Course Meta Data",
          "Adding Icons to Course Meta Data",
          "Adding Course Buttons",
          "Creating Single Course Image",
          "Creating Single Course Contents",
          "Creating FAQ Header",
          "Creating FAQ List",
          "Creating Post Question Form",
          "Creating Blog Page and Header",
          "Creating Blog Posts List",
          "Creating Blog Sidebar",
          "Creating Subscribe Modal",
          "Creating the subscribe form",
          "Creating Single Post Page",
          "Creating Contact Page Header",
          "Creating Contact Page Cards",
          "Creating Contact Modal",
          "Linking Everything Together"
        ]
      },
      "requirements": [
        "You should have a basic understanding of HTML and CSS — you don’t need to be advanced, just comfortable writing simple web pages.",
        "A code editor like VS Code or Sublime Text is recommended — we’ll write real HTML and apply Bootstrap classes throughout the course.",
        "You should know how to open a web browser, save a file, and navigate folders — if you’ve built a static page before, you’re ready to begin.",
        "No JavaScript knowledge is needed — we’ll use Bootstrap’s built-in JS features like modals and dropdowns with zero scripting required.",
        "You don’t need to install anything complex — we use Bootstrap via CDN links and keep the setup process simple and browser-based.",
        "No prior experience with frameworks or libraries is necessary — this course walks you through everything step by step, project by project.",
        "Internet access is required to follow along with live examples, Bootstrap documentation, and downloading resources when needed.",
        "Just bring your curiosity and consistency — this course is long, structured, and packed with value, but we’ll move step by step together."
      ],
      "description": "Learn Bootstrap 5 the Right Way — Build Real Responsive UI Projects\nHey there! If you’re ready to speed up your front-end workflow and stop writing endless CSS from scratch — you’re in the right place.\nThis is a complete Bootstrap 5 course for beginners, packed with 200+ lessons and built around real projects. Whether you're a student, self-learner, or part of a professional dev team — this course will teach you how to use Bootstrap properly, one layout at a time.\n--\nWhy Learn Bootstrap 5?\nBootstrap is the most popular front-end framework in the world — and for good reason. It helps you build mobile-friendly, professional-looking websites without reinventing the wheel.\nBut to really use Bootstrap well, you need more than just a cheat sheet. You need real structure, real practice, and real UI builds.\nThat’s what this course delivers.\n--\nWhat You’ll Build Inside This Course\nOver 200+ lectures, you’ll learn every key component, utility, and layout technique — and apply them in real-world projects, including:\nA responsive Employee Management Dashboard with tables, cards, and charts\nA clean and flexible Blog Template with media objects and custom sections\nA fully designed Multi-page Professional Website Template with navbars, hero sections, contact forms, and more\nAlong the way, you’ll master Bootstrap’s grid system, breakpoints, forms, modals, offcanvas, navs, and dozens of other layout tools — all with a focus on real usability.\n--\nBy the End, You’ll Be Able To:\nBuild fully responsive websites without writing custom CSS\nWork faster by reusing Bootstrap’s utility classes and components\nStructure layouts the right way using containers, rows, and columns\nCreate stunning templates for dashboards, blogs, portfolios, and more\nUnderstand and confidently use the full Bootstrap 5 documentation\n--\nYou don’t need any design tools. No JavaScript. No frameworks.\nJust you, your browser, and Bootstrap 5 — taught in the most practical way possible.\nJoin now, and let’s start building beautiful, responsive web designs — fast, and clean.",
      "target_audience": [
        "Beginners who want to build responsive websites from scratch using Bootstrap 5 without writing complex CSS or JavaScript.",
        "Frontend learners who know HTML and CSS and now want to move faster by using Bootstrap’s layout system, components, and utilities.",
        "Web developers looking to build real-world projects with Bootstrap 5 and understand how to use the full framework effectively.",
        "Professionals or students who want to create clean, responsive dashboards, templates, and websites without relying on page builders.",
        "Teams in corporate or enterprise environments who need to learn Bootstrap 5 to rapidly prototype and build consistent UIs.",
        "Self-taught coders who’ve seen Bootstrap classes in projects but never learned how the framework works from top to bottom.",
        "Designers or UI enthusiasts who want to convert layouts into real, working web pages using Bootstrap’s grid, components, and spacing system.",
        "Anyone preparing for frontend jobs or freelance work who wants to confidently build templates and production-ready UI using Bootstrap 5."
      ]
    },
    {
      "title": "Angular Front To Back",
      "url": "https://www.udemy.com/course/angular-4-front-to-back/",
      "bio": "Master Angular 5 from the basics to building an advanced application with Firebase's Firestore as well as authentication",
      "objectives": [
        "Build amazing single page applications using Angular 5+",
        "Master Angular concepts",
        "Understand the file and folder structure of an Angular application",
        "Build a client management application with authentication and Firebase's Firestore",
        "Integrate Bootstrap 4 into Angular projects"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To The Course",
          "Project Files & Questions",
          "What Is Angular?",
          "Angular Versions Explained"
        ],
        "Setup & File Structure": [
          "Sandbox App Overview",
          "Environment Setup",
          "Using Angular CLI",
          "Angular File Structure",
          "An Intro To TypeScript"
        ],
        "Diving Into Components": [
          "Components Explained",
          "Creating A Component",
          "Properties & Methods",
          "String Interpolation",
          "Using Types",
          "Cleanup & Interfaces",
          "Generating Components & OnInit"
        ],
        "Template Syntax": [
          "Loops With ngFor",
          "Conditionals With ngIf",
          "Adding Bootstrap",
          "Property Binding",
          "Class Binding & ngClass",
          "Style Binding & ngStyle",
          "Pipes & ngNonBindable",
          "Component & Template Clean Up"
        ],
        "Events & Forms": [
          "Mouse Events & Manipulating State",
          "Toggling Values With An Event",
          "Keyboard & Input Events",
          "ngModel & 2 Way Data Binding",
          "Component Clean Up",
          "Template Driven Forms - Validation",
          "Template Driven Forms - Submission"
        ],
        "Services, HTTP, Input & Output": [
          "What Is a Service?",
          "Creating a Service",
          "Working With Observables",
          "HTTP Client Setup & GET Request",
          "HTTP Client POST Request",
          "Event Emitter & Output",
          "Input & Edit State",
          "HTTP Client PUT Request",
          "HTTP Client DELETE Request"
        ],
        "Angular Router": [
          "Angular Router Overview",
          "Create App Routing Module",
          "Creating & Mapping Routes",
          "Linking To Routes",
          "Params & ActivatedRoute",
          "Not Found Component"
        ],
        "DevLogger Project": [
          "DevLogger Intro & Demo",
          "Components & Bootstrap Setup",
          "Building The UI",
          "Logs Component & Service",
          "Observables & Component Communication",
          "Add, Update & Delete Logs",
          "Finishing Up The State & UX",
          "Implementing Local Storage",
          "Build & Deploy To Github Pages"
        ],
        "Client Panel Project - Part 1": [
          "Client Panel Intro & Demo",
          "Firebase Firestore & App Setup",
          "Generate Components & Setup Navbar",
          "Routing Module Setup",
          "AngularFire2 Setup & Client Service",
          "Clients & Dashboard Component",
          "Add Client Form & Validation",
          "Add Client To Firestore",
          "Client Details Component"
        ],
        "Client Panel Project - Part 2": [
          "Client Balance Update",
          "Edit & Delete Clients",
          "Login Authentication",
          "Logout & Nav Links",
          "Auth Guard For Routes",
          "User Registration",
          "Settings Service & Register Guard",
          "Adding The Settings Page",
          "Deploy To Firebase Hosting"
        ]
      },
      "requirements": [
        "You should have a basic understanding of HTML and JavaScript"
      ],
      "description": "This course was crafted to benefit absolutely any level of developer. We will start from scratch and learn how to create a development environment for Angular 5+, Setup Angular CLI and learn all of the fundamentals. We start by building a sandbox application to look at all of the main Angular concepts as well as building a logging application, then move to a much more advanced client management system with authentication and data storing with Firebase's new Firestore platform.\nHere are some of the things you will learn about in this course:\nWhat is Angular?\nDev Environment Setup Including Node.js, Visual Studio Code & Git Bash\nAngular CLI Setup & Build\nFile Structure & Dependency Examination\nTypeScript Intro\nComponents\nModules & NgModule\nData Binding & String Interpolation\nTypes & Interfaces\nTemplate Syntax\nngIf & ngFor Conditional Directives\nngFor & Loops\nProperty Binding, ngClass & ngStyle\nPipes\nEvents & Forms\nngModel & 2 Way Binding\nServices\nObservables & Http\nAngular Router\nFirebase, Firestore & AngularFire2\nFlash Messaging\nMuch More!!",
      "target_audience": [
        "Anyone that wants to learn Angular 5+"
      ]
    },
    {
      "title": "Learn Nodejs by building 12 projects",
      "url": "https://www.udemy.com/course/learn-nodejs-by-building-10-projects/",
      "bio": "Become an Expert Nodejs Developer While Building Real World Applications",
      "objectives": [
        "Create applications using Nodejs",
        "Build Scalable and lightweight web applications",
        "Learn the use of technologies such as Cassandra and MongoDB",
        "Understand the coding principles behind practical web applications",
        "Use the Express Framework to build web applications",
        "Learn the concepts of network programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Simple Web Server": [
          "Project Intro",
          "Installing Node,js",
          "NPM Intro & Basic HTTP Server",
          "Serving HTML Pages",
          "Basic Website",
          "Quiz Time"
        ],
        "Basic Express Website": [
          "Project Intro",
          "Express Setup",
          "Page Routes & Views",
          "Nodemailer Contact Form",
          "Quiz Time"
        ],
        "User Login System": [
          "Project Intro",
          "Getting Started With MongoDB Part A",
          "Getting Started With MongoDB Part B",
          "App & Middleware Setup",
          "Views & Layout",
          "Register Form & Validation",
          "Models & User Registration",
          "Password Hashing with BCrypt",
          "Passport Login Authentication",
          "Logout & Access Control",
          "Quiz Time"
        ],
        "Node Blog System": [
          "Project Intro",
          "App & Module Setup",
          "Custom Layout Template",
          "Homepage Posts Display",
          "Add Posts",
          "Text Editor & Add Categories",
          "Truncate Text & Categories View",
          "Single Post & Comments",
          "Quiz Time"
        ],
        "Bookstore": [
          "Project Intro",
          "Kraken Setup & Foundation",
          "Routes & Views - Part A",
          "Routes & Views - Part B",
          "Database & Models - Part A",
          "Database & Models - Part B",
          "Admin CRUD - List & Add Books",
          "Admin CRUD - Edit & Delete Books",
          "Shopping Cart - Part A",
          "Shopping Cart - Part B",
          "Quiz Time"
        ],
        "ChatIO": [
          "Project Intro",
          "ChatIO User Interface",
          "Sending Chat Messages",
          "User Functionality",
          "Deploying an App With Heroku",
          "Quiz Time"
        ],
        "FindaDoc Directory": [
          "Project Intro",
          "Cassandra Install & Setup",
          "FindaDoc User Interface",
          "Express Setup",
          "Express Layout",
          "Fetch Doctors From Cassandra",
          "Add & Search Doctors",
          "Quiz Time"
        ],
        "Portfolio App": [
          "Project Intro",
          "MySQL & App Setup",
          "Add Projects",
          "Display Projects",
          "Edit & Delete Projects",
          "Quiz Time"
        ],
        "eLearning System": [
          "Project Intro",
          "App & Kickstart Setup",
          "Fetching Classes - Part A",
          "Fetching Classes - Part B",
          "Registering Users",
          "Logging In Users",
          "Instructor & Student Classes",
          "Class Lessons",
          "Quiz Time"
        ]
      },
      "requirements": [
        "Student should know Basic HTML and Front End Programming",
        "Should have basic knowledge of JavaScript"
      ],
      "description": "Update March 31, 2016: Course updated for latest software versions and project code updated to reflect new changes in the node ecosystem. Two more projects added in the course as per user demand. Happy learning..\nNodejs is open source cross platform environment for creating server side and network applications. It is built on the Chrome's JavaScript Runtime and can be used to build large scale web applications to quick time. It uses non blocken I/O and even driven model to allow creation of lightweight and highly scalable  web applications. Our training program emphasizes on practical application of this amazing technology and will teach you nodejs development using real world application development.\nYou will learn about JavaScript Server programming, Node and NPM modules, the use of other associated technologies and frameworks while building the  twelve projects. The technologies covered in the course includes HTML/CSS Frontend technologies, Nodejs NPM, NoSQL database, Column Databases, Database ORM, Express Framework, Asynchronous programming, Karken layer, Drywall user management, Bcrypt encryption, Socket IO and REST APIs\nProject 1:  Simple Web Server\nProject 2: Basic Express Website\nProject 3: User Login System\nProject 4: Node Blog Systems\nProject 5: BookStore\nProject 6: Chat IO\nProject 7: Doctor Directory\nProject 8: Portfolio App\nProject 9: Elearning System\nProject 10: Recipe Book\nJoin us and be have the first mover advantage in this amazing emerging technology and learn to build the next generation apps.",
      "target_audience": [
        "Programmers who want to learn server side JavaScript Programming in Nodejs will find the course extremely helpful"
      ]
    },
    {
      "title": "ArcPy for Python Developers using ArcGIS Pro",
      "url": "https://www.udemy.com/course/arcpy-for-python-developers/",
      "bio": "GIS is hot - take your python skills to new levels and greatly increase your career options.",
      "objectives": [
        "Learn to write GIS applications using Python tools and applications for ArcGIS.",
        "Become highly skilled in using ArcPy/Python with ArcGIS Pro.",
        "Be able to apply for GIS, Geospatial, or Spatial Developer job positions.",
        "Be a Python developer who specializes in ArcPy, which is in demand to GIS projects undertaken by different industries."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Introduction to ArcPy, ArcGIS Pro and Spatial Data",
          "Quiz for Section 1"
        ],
        "ArcGIS Pro, Python and Data Setup": [
          "ArcGIS Pro Licensing Options",
          "Checking Setup for ArcGIS Pro and Python/IDLE/ArcPy",
          "Downloading Natural Earth Data",
          "Deleting Data for Section Resetting"
        ],
        "Python Interfaces for ArcGIS Pro": [
          "Using Python Window of ArcGIS Pro",
          "Using a Python IDE (IDLE)",
          "Writing a Simple Python Script Tool",
          "Using Python Functions",
          "Using Python Parser for Labeling",
          "Using Python Parser for Calculating Fields",
          "Using Python Parser for Calculating Values in ModelBuilder",
          "Using ArcGIS Notebooks"
        ],
        "ArcPy Documentation for ArcGIS Pro": [
          "ArcGIS Pro Help Overview",
          "ArcGIS Pro Tool Reference",
          "ArcGIS Pro Python Reference"
        ],
        "Using Geoprocessing Tools to Automate Workflows": [
          "Creating Project for Geoprocessing Framework Section",
          "Workflow Using Tool Dialogs",
          "Workflow Using Geoprocessing History",
          "Workflow Using Python IDE",
          "Workflow Using Python Script Tool with Pick List",
          "Workflow Using Python Toolbox Tool",
          "Workflow Using Model Tool"
        ],
        "Setting the Geoprocessing Environment for ArcPy": [
          "Using Environment Setting to Overwrite Output",
          "Using Environment Setting to Set Current Workspace",
          "Using Environment Setting to Set Extent for Geoprocessing"
        ],
        "Performing GIS Inventory": [
          "ArcGIS Pro End User View of Data",
          "Listing Workspaces, Feature Datasets and Feature Classes",
          "Listing Tables and Fields",
          "Describing Data Using arcpy.Describe() to Create Describe Objects",
          "Describing Data Using arcpy.da,Describe() to Create Dictionaries",
          "Walking Data Using arcpy.da.Walk() to Create Lists"
        ],
        "Working with Geometries": [
          "Creating Fishnet Feature Classes for Testing",
          "Copying Geometry Objects from Feature Class",
          "Creating Point and MultiPoint Geometry Objects from Scratch",
          "Creating Singlepart and Multipart Polyline and Polygon Geometry Objects",
          "Working with Geometry Methods"
        ],
        "Working with Cursors from Data Access Module (arcpy.da)": [
          "Using arcpy.da.SearchCursor() to Iterate Features and Rows",
          "Using arcpy.da.SearchCursor() to read Geometries via SHAPE@ tokens",
          "Using arcpy.da.SearchCursor() to create Python Lists and Sets",
          "Using arcpy.da.SearchCursor() to create Python Dictionaries",
          "Using arcpy.da.UpdateCursor() to Perform Edits",
          "Using arcpy.da.InsertCursor() to Create a Table",
          "Using arcpy.da.InsertCursor() to Insert a Geometry into a Feature Class",
          "Using arcpy.da.InsertCursor() to create a Table-like Feature Class"
        ],
        "Using Mapping Module (arcpy.mp) from Python Window of ArcGIS Pro": [
          "Working with ArcGISProject, Map and Layer Classes in ArcGIS Pro",
          "Working with Layout and MapFrame Classes in ArcGIS Pro",
          "Zooming Using Camera and Extent Classes in ArcGIS Pro"
        ]
      },
      "requirements": [
        "A computer which meets the minimum ArcGIS Pro 2.2 system requirements and has the ability to run the software.",
        "Basic skills and knowledge in Python.",
        "Basic Level (or higher) of ArcGIS Desktop license with no extensions. This will allow ArcGIS Pro and ArcMap to run and also permits downloading of ArcTutor data.",
        "Knowledge of ArcGIS Pro or ArcMap is an advantage but not required.",
        "Note: Free 21 day-trial of software is available - see details inside course."
      ],
      "description": "The global Geographic Information System (GIS) market is expected to by worth over ten billion dollars by 2023, and is growing at a huge rate.\nDevelopers who are skilled with appropriate GIS software are already in high demand and the demand is growing.\nAt the GIS Stack Exchange - the spatial library for Python - the most questions asked are for ArcPy, which provides a Python API to Esri’s flagship product ArcGIS Desktop and its two main applications (ArcGIS Pro and ArcMap).\nConsequently, there has never been a better time for Python developers to add ArcPy skills to their repertoire.\nThis course is primarily designed to introduce Python developers to the ArcPy classes and functions for working with ArcGIS Pro.  It will also introduce them to many aspects of the ArcGIS Pro GUI, so that they are well placed to understand the requirements of the end users for the applications that they write.\nWhile relatively little Python experience is needed to undertake the course, the Python classes and functions used may be easier to understand if you have already undertaken introductory Python training - such as the Learn Programming Academy’s Python Masterclass.\nThe course is also suitable for ArcGIS Pro end users who wish to learn ArcPy, but they may need to embark on a steep Python learning curve, if they have minimal skills in that language.\nMost sections of this course can be taken in any order.  You just need to download the data, and check that you have ArcGIS Pro and your Python IDE working first.\nNOTE: Paid software is required to take this course.\nThe course requires only a Basic level license of ArcGIS Desktop (which includes ArcGIS Pro), and no extension products need to be licensed in order to complete all exercises.\nIf you do not have an ArcGIS Desktop license, then for about $100-150 per annum it is possible to use an Advanced level license and many of the extension products for non-commercial purposes (like taking this course!), via Esri’s ArcGIS for Personal Use program (details inside the course).\nIt is also possible to undertake a 21-day free trial of ArcGIS Pro (details also inside the course).\nThe recommendation is to take the 21-day free trial to get started.\nThis course starts by examining the various places that Python code can be used within the ArcGIS Pro application, and how Python code can be written using a Python IDE to interact with ArcGIS Pro as either a standalone script or a Python script tool.\nYou will then be taken on a tour of the most commonly used ArcPy functions and classes for geoprocessing, followed by tours of its modules for data access and mapping.\nThe scenarios chosen, to illustrate how each function and class is used, are derived from the presenter’s experience working with ArcPy and Python for almost 10 years, and with Esri software for 30 years.\nYour instructor, Graeme Browning has been using the Esri software on a daily basis for over 30 years, 8 years of which he has spent using ArcPy. Graeme has also spent 18 years  with Esri UK and Esri Australia working in different roles from Senior GIS Analyst to Technical Director.\nHe is also ranked in GIS Stack Exchange as the all-time, worldwide:\n#1 user of ArcPy\n#1 user of ArcGIS Desktop\n#2 user of ArcGIS Pro\n#5 user of all GIS products\nGraeme has also received the Esri High Achievement Award by Jack Dangermond (President).\nHe has already developed nearly 20 one-day courses and half-day workshops for instructor-led delivery and along with that, nearly 20 eLearning video courses.\nSo if you're looking for the perfect instructor to teach you the best practices in learning ArcPy for Python, Graeme is the best one there is!\nKey Topics to be covered are :\nUsing ArcPy and Python in multiple interfaces within and alongside ArcGIS Pro\nPython window\nPython IDE (e.g. IDLE)\nPython Script Tools\nPython Toolbox Tools\nPython Parser for Field Calculating and Labeling\nUsing ArcPy Modules, Classes and Functions\nWorking with the search, update and insert cursors of ArcPy’s Data Access Module (arcpy.da)\nPerforming GIS Inventory by Listing Data, Describing Data and Walking System Folders and Spatial Datasets\nUsing the Mapping module for map automation using project, map, layer, layout, map frame, extent, camera, spatial reference, text, graphics, legends, scale bars, north arrows, pictures and many other object classes\nWorking with Map Series to meet simple through to complex Map Book requirements\nFinding your way around ArcGIS Pro’s very extensive ArcPy/Python documentation\nWorking with Point, Line and Polygon Geometries\nSetting the Geoprocessing Environment\nGetting and Setting Parameters for Python Script Tools\nCreating test data\nExporting map layouts to PDF\n\n\nEnrolling in this course is the best decision you can make!\nThe course focuses on teaching ArcPy in-depth from the basics through to advanced\nIt’s 3-4 times the length of any other ArcPy course, and designed to accommodate many more lectures and challenges on not just ArcGIS Pro, but also ArcMap\nPlus, it teaches ArcPy for ArcGIS Pro which was only released in 2015, while other ArcPy courses typically use only the older ArcMap! You are getting the most up to date learning!\nBy the end of this course, you will have the necessary skills needed to become an expert in ArcPy using ArcGIS Pro and apply it to your own programs such as Map Automation and Geoprocessing.\nThe ideal student would be someone with a basic knowledge of Python who is eager to improve their skills and take them to the next level by learning ArcPy using ArcGIS pro.\nThe sooner you sign up for this course, the sooner you will have the skills and knowledge that would put you among the list of in demand Python developers!\nSign up today and get started!",
      "target_audience": [
        "This course is suitable for developers with some basic Python language exposure who want to enhance their skills by learning about ArcPy using ArcGIS Pro."
      ]
    },
    {
      "title": "The Complete Angular Course: Beginner to Advanced",
      "url": "https://www.udemy.com/course/the-complete-angular-master-class/",
      "bio": "The most comprehensive Angular 4 (Angular 2+) course. Build a real e-commerce app with Angular, Firebase and Bootstrap 4",
      "objectives": [
        "Establish yourself as a skilled professional developer",
        "Build real-world Angular applications on your own",
        "Troubleshoot common Angular errors",
        "Master the best practices",
        "Write clean and elegant code like a professional developer"
      ],
      "course_content": {},
      "requirements": [
        "Basic familiarity with HTML, CSS and JavaScript",
        "NO knowledge of Angular 1 or Angular 2 is required"
      ],
      "description": "Angular is one of the most popular frameworks for building client apps with HTML, CSS and TypeScript. If you want to establish yourself as a front-end or a full-stack developer, you need to learn Angular.\n\n\nIf you've been confused or frustrated jumping from one Angular 4 tutorial to another, you've come to the right place. In this course, Mosh, author of several best-selling courses on Udemy, takes you on a fun and pragmatic journey to master Angular 4.\n\n\nBy the end of watching this course, you'll be able to:\nBuild real client apps with Angular on your own\nTroubleshoot common compile-time and run-time errors\nWrite clean and maintainable code like a professional\nApply best practices when building Angular apps\n\n\n\n\nRight from the beginning, you'll jump in and build your first Angular app within minutes. Say goodbye to boring tutorials and courses with rambling instructors and useless theories!\n\n\nAngular 2+ has been written in TypeScript. So, in section 2, you'll learn the fundamentals of TypeScript and object-oriented programming to better understand and appreciate this powerful framework.\n\n\nOver the next 8 hours, you'll learn the essentials of building client apps with Angular:\nDisplaying data and handling events\nBuilding re-usable components\nManipulating the DOM using directives\nFormatting data using pipes\nBuilding template-driven and reactive forms\nConsuming HTTP services\nHandling HTTP errors properly\nUsing Reactive Extensions and observables\nAdding routing and navigation\nImplementing authentication and authorization using JSON Web Tokens (JWT)\nDeploying your applications to GitHub Pages, Firebase and Heroku\n\n\nSo, if you're a busy developer with limited time and want to quickly learn how to build and deploy client apps with Angular, you can stop here.\n\n\nIf you're more adventurous and want to learn more, there is far more content for you! Over the following sections, you'll learn about more advanced topics:\nBuilding real-time, server-less apps with Firebase\nAnimating DOM elements using Angular animations\nBuilding beautiful UIs using Angular Material\nImplementing the Redux architecture\nWriting unit and integration tests\n\n\nAll that covers just over 21 hours of high-quality content. This is equivalent to a book with more than a thousand pages! But the kind of book that every line is worth reading, not a book that you want to skim! If you have taken any of Mosh's courses before, you know he is very clear and concise in his teaching and doesn't waste a single minute of your precious time!\n\n\nFinally, at the end of the course, you'll build and deploy a real-time e-commerce application with Angular 4, Firebase 4 and Bootstrap 4. This application exhibits patterns that you see in a lot of real-world applications:\nMaster/detail\nCRUD operations\nForms with custom validation\nSearching, sorting and pagination\nAuthentication and authorization\nAnd a lot more!\n\n\nYou'll see how Mosh creates a brand new Angular project with Angular CLI and builds this application from A to Z, step-by-step. No copy/pasting! These 8.5 hours are packed with tips that you can only learn from a seasoned developer.\n\n\nYou'll learn how to apply best practices, refactor your code and produce high quality code like a professional developer. You'll learn about Mosh's design decisions along the way and why he chooses a certain approach. What he shares with you comes from his 17 years of experience as a professional software developer.\n\n\nYou're not going to get this information in other Angular courses out there!\n\n\n\n\nAnd on top of all these, you'll get:\nClosed-captions generated by a human, not a computer! Currently only the first few sections have closed-captions but new captions are being added every week.\nOffline access: if you are traveling or have a slow connection, you can download the videos and watch them offline.\nDownloadable source code\n\n\n\n\nPREREQUISITES\nYou don't need familiarity with TypeScript or any previous versions of Angular. You're going to learn both TypeScript and Angular from scratch in this course.\n\n\n\n\nWHAT OTHER STUDENTS WHO HAVE TAKEN THIS COURSE SAY:\n\"Absolutely amazing Angular course. Mosh not only introduces key concepts behind Angular, but also pays attention to coding style and good practices. Additionally, course is contstantly enhanced and updated. Also, student questions are answered by Tim - Mosh's teaching assistant. Awesome!\" -Calvis\n\n\n\"I am amazed of how dedicated you are in providing updates and more contents to this course. This kind of value is what define a great course and made me feel that the money is well spent. Keep it up! Furthermore, lessons are arranged and planned really carefully. This made the learning experience more seamless and exciting. Thanks Mosh!\" -Rashid Razak\n\n\n\"This is another excellent course from the wonderful author Mosh. Thank you Mosh for your awesome course on Angular. Inspite of being a Pluralsight subscriber for the last 3 years, I have subscribed 10 out of 16 courses so far Mosh has produced in Udemy. Also I have viewed 3 of his courses in Pluralsight. That is how I got introduced to this brilliant author. This speaks about the quality of his content. Once again Thank you Mosh for all your efforts. Hope to see a Design Patterns course from you soon.\" -Dhanasekar Murugesan\n\n\n\n\"Fantastic course, well laid out, good speed, and explains the why behind everything he does, shedding light on what's under the hood. Also, Mosh has a very practical and elegant coding style worth emulating.\" -Mack O'Meara\n\n\n\"This is the second course I've taken with Mosh as the instructor and I've signed up for another. The quality of the audio, video, and content shows Mosh invests his time and money to create great and valuable videos. The material is relevant, up-to-date, and provides the student with the ability to succeed in the subject matter (in this case Angular). My expectations were exceeded again. I'll be taking more courses with Mosh!\" -John\n\n\n\n\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you are not happy for any reasons, contact Udemy for a full refund within the first 30 days of your enrolment. All your money back, no questions asked.\n\n\n\n\nABOUT YOUR INSTRUCTOR\nMosh (Moshfegh) Hamedani is a software engineer with 17 years of professional experience. He is the author of several best selling Udemy courses with more than 120,000 students in 192 countries. He has a Master of Science in Network Systems and Bachelor of Science in Software Engineering. His students describe him as passionate, pragmatic and motivational in his teaching.\n\n\n\n\nSo, what are you waiting for? Don't waste your time jumping from one tutorial to another. Enroll in the course and you'll build your first Angular app in less than 10 minutes!",
      "target_audience": [
        "Developers who want to upgrade their skills and get better job opportunities",
        "Front-end developers who want to stay up-to-date with the latest technology",
        "Back-end developers who want to learn front-end development and become full-stack developers",
        "Hobbyist developers who are passionate about working with new frameworks"
      ]
    },
    {
      "title": "JavaScript: Understanding the Weird Parts",
      "url": "https://www.udemy.com/course/understand-javascript/",
      "bio": "The advanced JavaScript course for everyone! Scope, closures, prototypes, 'this', build your own framework, and more.",
      "objectives": [
        "Grasp how JavaScript works and it's fundamental concepts",
        "Write solid, good JavaScript code",
        "Understand advanced concepts such as promises, async/await, closures, prototypal inheritance, IIFEs, classes, and much more.",
        "Drastically improve your ability to debug problems in JavaScript.",
        "Avoid common pitfalls and mistakes other JavaScript coders make",
        "Understand the source code of popular JavaScript frameworks",
        "Build your own JavaScript framework or library"
      ],
      "course_content": {},
      "requirements": [
        "Basic Javascript knowledge (variables, loops, and basic functions - that's all the course expects you to know!)",
        "A browser and text editor"
      ],
      "description": "JavaScript is the language that modern developers need to know, and know well. Truly knowing JavaScript will get you a job, and enable you to build quality web and server applications.\nOver the past decade, tens of thousands of developers count this course as the course they always go back to year after year -- the one that finally helped them grasp JavaScript and move to the next level in their web development career. Many students are now senior developers, business owners, managers, and educators!\nIn this course you will gain a deep understanding of JavaScript, learn how JavaScript works under the hood, and how that knowledge helps you avoid common pitfalls and drastically improve your ability to debug problems. You will find clarity in the parts that others, even experienced coders, may find weird, odd, and at times incomprehensible. You'll learn the beauty and deceptive power of this language that is at the forefront of modern software development today.\nThis is the original course that taught web developers the concepts of the execution context and execution stack, critical concepts to mentally grasp how JavaScript works and how you code in it.\nThis course will cover such advanced concepts as objects and object literals, function expressions, function objects, prototypical inheritance, functional programming, scope chains, block scoping, classes, immediately invoked function expressions (IIFEs), call, apply, bind, promises, async, await and more.\nWe'll take a deep dive into the source code of popular frameworks to see how you can use your understanding of JavaScript to learn (and borrow) from other's good code.\nFinally, you'll learn the foundations of how to build your own JavaScript framework or library.\n\nWhat you'll learn in this course will make you a better JavaScript developer, and improve your abilities in React, Node.js, Next.js, Angular, Vue, MongoDB, and all other Javascript-based technologies!\nLearn to love JavaScript, and code in it well.\nNote: In this course you'll also get downloadable source code. You will often be provided with 'starter' code, giving you the base for you to start writing your code, and 'finished' code to compare your code to.",
      "target_audience": [
        "Those with basic JavaScript skills who wish to improve",
        "Experienced coders coming from other programming languages",
        "New and experienced JavaScript coders who want to deepen their understanding of the language",
        "Anyone who has found concepts just as object prototypes, closures, and other advanced concepts difficult to learn",
        "Those who have suffered surprising errors while writing JavaScript, and want to learn why and how to avoid them",
        "Those interested in building their own frameworks, or being better able to learn from the source code of other well-known frameworks and libraries"
      ]
    },
    {
      "title": "Learn SAP OData Services Developments in 2 Hours",
      "url": "https://www.udemy.com/course/learn-sap-odata-services-developments-in-2-hours/",
      "bio": "Create, Debug, Test and Analyze Your First Custom SAP OData Service",
      "objectives": [
        "Get Good Insight of SAP OData Netweaver Gateway Concepts (useful for Functional Consultants)",
        "Step-by-step creation of an OData Service",
        "Learn about CRUD Operations in OData Service",
        "Learn how to Register and Test a new Custom OData Service",
        "Learn to Debug, Analyze and Troubleshoot an OData Service",
        "Updated 10 New Lectures in Jan 2024 - Includes $expand, Deep Insert, $batch, CDS Based OData, e-Tags"
      ],
      "course_content": {},
      "requirements": [
        "Prior knowledge of any programming language would be helpful",
        "SAP ABAP knowledge would be helpful"
      ],
      "description": "This course would give a good understanding of the confusing terminologies like Stateless, RESTful, Client-Server Architecture, ODBC of Web etc. After the theories, participants would have hands on practical session. They would create a custom OData Service, Test, Debug and Analyze it. By the end of this course, the participants would be independent SAP OData Developer.\nCourse Goals\n•Introduce the participants to SAP OData & Netweaver Gateway\n•Provide deeper technical insight\n•Create & Test OData Service\n\n\nHigh-level Agenda\n•Part 1 – Theory and Commonly used Terminologies in SAP Netweaver Gateway\n•Part 2 – Hands on Practical, Create Odata Service, Test, Debug and Analyze",
      "target_audience": [
        "SAP ABAP Developers",
        "SAP Functional Consultants",
        "SAP End Users"
      ]
    },
    {
      "title": "Complete ASP NET MVC Web Development - Newbie to Ninja!",
      "url": "https://www.udemy.com/course/better-web-development-pro-techniques-for-success/",
      "bio": "Quickly Learn Web Development with ASP NET MVC and C#. From absolute basics to ninja! Learn C# and MVC like a Pro",
      "objectives": [
        "Learn Object Orientated Programming",
        "Learn What MVC is and how to use it",
        "Learn the patterns and techniques of experienced enterprise developers",
        "Learn the patterns the tops paid developers use",
        "Create cleaner code that is easier to manage and re-use",
        "Write code with Less bugs - meaning you work faster and build a BETTER reputation",
        "Build Code EASIER, by splitting it up in to manageable chunks",
        "Make Code more FLEXIBLE, using abstraction and interfaces",
        "Easily Re-Use existing code in multiple projects"
      ],
      "course_content": {
        "Introduction": [
          "Welcome and overview",
          "Get the software",
          "Visual Studio 2019 Update",
          "Installing SQL"
        ],
        "C# Primer": [
          "Introduction",
          "Obligatory Hello World Project",
          "Structure of a C# Project",
          "Variables",
          "Variable Types",
          "User Defined Types",
          "Values Versus Reference Types",
          "Arrays And Collections",
          "LINQ",
          "Program Flow Introduction",
          "Program Flow - IfThenElse",
          "Program Flow - Getting Loopy",
          "Program Flow - Switch",
          "Debugging"
        ],
        "Object Orientated Programming (OOP)": [
          "Object Orientated Programming Overview",
          "OOP & Classes - Basic Walkthrough",
          "More on Classes",
          "Classes & Libraries",
          "Encapsulation, Inheritance & Polymorphism (Not as scary as it sounds!)",
          "Access Modifiers",
          "FREE BONUS BOOK! - ASP.NET, C# and Object Orientated Programming Primer",
          "OOP Project Files",
          "OOP"
        ],
        "SOLID Principles": [
          "Introduction",
          "Single Responsibility Principle",
          "Open / Closed Principle",
          "Liskov Substitution Principle",
          "Interface Segregation Principle",
          "Dependency Inversion Principle",
          "BONUS MATERIAL - SOLID Reference",
          "How SOLID are you?"
        ],
        "MVC Primer": [
          "Introduction",
          "Hello World",
          "Anatomy and an MVC Website",
          "Controllers Part 1",
          "Controllers Part 2",
          "Views",
          "Models",
          "Posting Data",
          "Scaffolding - Model Lists",
          "Scaffolding - Posting Models",
          "Scaffolding - Viewing and Editing",
          "Scaffolding - Deleting",
          "Model Validation",
          "Partial Views",
          "MVC Quiz"
        ],
        "ASP.NET Security": [
          "ASP.NET Security - Getting Started",
          "Code Walkthrough",
          "Extending ASP.NET Security"
        ],
        "Source Control": [
          "Introduction To Source Control",
          "Getting a Git Account",
          "Creating and Managing Repositories",
          "Committing Code and Using Repositories",
          "Branching and Merging"
        ],
        "Real World Development": [
          "Introduction",
          "Using the Code Samples",
          "GitHub Integration",
          "Solution Setup",
          "Managing NuGet Packages",
          "Product Models & Storage",
          "Product Management UI",
          "Grouping Products - Part 1",
          "Grouping Products - Part 2",
          "Don't Repeat Yourself",
          "Dependency Inversion / Injection",
          "Microsoft Unity",
          "Entity Framework",
          "SQL Repositories",
          "Adding Product Images",
          "Product Listings",
          "Product Filtering"
        ],
        "Building The Shopping Cart": [
          "Introduction",
          "Building the Basket Model",
          "Creating the Basket Service",
          "Creating The Basket Service - Part 2",
          "The Basket UI"
        ],
        "Unit Testing": [
          "Introduction",
          "Creating Mocks Part 1",
          "Creating Mocks Part 2",
          "Basket Tests Part 1",
          "Basket Tests Part 2"
        ]
      },
      "requirements": [
        "Determination and desire to better yourself in order to become a great web developer",
        "Hard-working attitude and able to see the end goal of becoming a professional developer",
        "Visual Studio 2017 installed (Community is fine). Understanding of HTML & CSS"
      ],
      "description": "Do you dream of becoming a professional web developer? Well this is the resource for you! Learn how to program and build robust Websites using the latest technologies with this easy-to-follow, comprehensive course.\nI'll teach you step by step from the absolute basics to the more advanced patterns used by seasoned professionals. You will become an expert ASP NET MVC C# Web Developer, take your career to the next level and learn how the top developers can demand bigger salaries!\nFreelance & contract developers can make upwards of $500 a day, and the demand is increasing each year. Completing this course will open your eyes to a new world of potential earnings.\nWhether you are completely new to software development, or have already learnt the basics, my course will walk you through everything you need to know to become world class.\nHere's what some students have been saying:\n'A very good course on MVC, after taking some MVC courses here in Udemy, I subscribed this one, helps me to gain more clarity inside the MVC process'\n'I now see what I've been missing! This is certainly one of the best courses I've watched/read about ASP NET!'\n'I've run through a through a few tutorials and blog posts whilst learning MVC, and I never knew about the ideas discussed in this course, or thought they were beyond be ay my beginner level.'\nDo you want to learn how professional developers build best in class websites using ASP NET MVC?\nSenior developers can earn in excess of $100k a year- one of the key differences they demonstrate is the ability to quickly write extensible code and get involved in the architecture process. This course will teach you how enterprise class developers create 'Best in Class' software, and how these principals will help you create software easier, faster and be less prone to bugs.\nI will teach you the basics of software development, move onto Object Orientated Programming (OOP) and introduce the 7 SOLID Principles and modern day patterns that adhere to them such as Dependency Injection, MVC, Abstraction and Inheritance.\nThrough this course you will implement:\nAn ASP NET MVC e-commerce site.\nObject Orientated Programming (OOP)\nLayered Architecture\nRepository Pattern\nEntity Framework\nGenerics\nDependency Injection\nModulular Development\nUnit Testing\nPartial Views\nAnd more!\nAnd of course, being part of Udemy you get:\nFREE lifetime access to this course\nALL future lectures and upgrades (of which there will be many!) included for free\nUdemy's Unconditional 30 day money back guarantee - so there's NO risk",
      "target_audience": [
        "This course is aimed at people wanting to learn how to program in C# to build websites. Basic programming skills (such as loops etc) are assumed but the course is comprehensive and will take your skill set from newbie to ninja!"
      ]
    },
    {
      "title": "Creating a Responsive HTML Email",
      "url": "https://www.udemy.com/course/creating-responsive-html-email/",
      "bio": "Create attractive, responsive, HTML Emails, that work in over 30 combinations of the most commonly used email clients.",
      "objectives": [
        "Learn to create an HTML Email layout compatible with a wide range of email clients",
        "Discover techniques to design elements that will \"gracefully degrade\" in older email clients without losing the design integrity",
        "Add CSS to your HTML Email to take advantage of newer email clients and varying screen sizes"
      ],
      "course_content": {
        "Introduction and Set-up Files": [
          "About this course.",
          "What's included in the exercise files.",
          "Setting expectations for you and your clients.",
          "Beginning the project."
        ],
        "Creating the Graphics": [
          "Creating the Banner and Background Graphics.",
          "Creating content graphics for multiple screen sizes."
        ],
        "Creating the HTML Email": [
          "Creating the Base HTML Structure.",
          "Formatting and styling the logo row.",
          "Formatting and styling the headline row.",
          "Formatting and styling the content row.",
          "Formatting and styling the promos row.",
          "Formatting and styling the callouts row.",
          "Formatting and styling the footer row."
        ],
        "Creating Buttons with HTML and CSS": [
          "Converting links to buttons with CSS.",
          "Creating a call-to-action button."
        ],
        "Adding CSS to the Email": [
          "Adding the media queries for medium and small screens.",
          "Switching the headline and banner for smaller screen sizes.",
          "Adjusting the layout for content and footer for smaller screens.",
          "Adjusting the promos for smaller screens.",
          "Adjusting the promos for callouts for medium screens.",
          "Adjusting the promos for callouts for small screens."
        ],
        "Pushing the Envelope": [
          "Setting custom inbox preview text.",
          "Adding animation to your email.",
          "Using web fonts in your email.",
          "Adding HTML5 video into your email",
          "Encoding and embedding base64 images",
          "Using High Definition (Retina) graphics in your HTML Email"
        ],
        "Validation and Testing": [
          "Validating the code of you HTML email.",
          "Testing your HTML email with an online service.",
          "Suggested adjustments for Yahoo! Mail.",
          "Suggested adjustments for Blackberry 5 OS.",
          "Suggested adjustments for Lotus Notes 6.5, 7, and 8.5."
        ],
        "Where to go from here": [
          "Where to go from here.",
          "Recommendations for alternate layouts"
        ]
      },
      "requirements": [
        "A modern web browser, capable or viewing responsive design",
        "An HTML/code editor (free or commercial)",
        "Willingness to do some coding",
        "A little bit of patience"
      ],
      "description": "Did you know that over 46% of email is now read on mobile devices?\nDesigning HTML email can be quite challenging, considering the limited capabilities of many email clients (readers). In contrast, most new email readers supports many of the latest trends in web design. What to do?\nEnter Responsive HTML Email. This course will show you how to design and construct an HTML email design that will render properly in such email readers and Outlook 2003 and Gmail, all the way through modern Android, Apple, and Windows phones. We will also explore online tools and services that will help you test your campaigns. Learn what is possible with HTML email.\nRunning Time: 88 minutes",
      "target_audience": [
        "Designers, marketers, or anyone tasked with creating HTML Emails across a range of screens and devices."
      ]
    },
    {
      "title": "CSS And JavaScript Complete Course For Beginners",
      "url": "https://www.udemy.com/course/css-and-javascript-complete-course-for-beginners/",
      "bio": "Learn Complete CSS And JavaScript Programming Language In-depth With CSS And JavaScript Complete Course For Beginners",
      "objectives": [
        "Introduction to CSS And JavaScript concepts",
        "Theory And Practical demonstrations of CSS concepts",
        "Write CSS Scripts And Understanding Concepts",
        "Practically Getting Started With CSS Styles, CSS 2D Transform, CSS 3D Transform",
        "Getting Started With Javascript Variables,Values and Data Types, Operators and Operands",
        "Write JavaScript scripts and Gain knowledge in regard to general javaScript programming concepts",
        "Introduction And Use of JavaScript Variables, JavaScript Arrays, JavaScript Objects",
        "Introduction And Use Of Conditional Statements In JavaScript"
      ],
      "course_content": {
        "CSS Complete Course": [
          "Introduction To CSS",
          "CSS Inclusion In HTML",
          "CSS Fonts",
          "CSS Basic Syntax",
          "CSS Text",
          "CSS Links",
          "CSS Layers",
          "CSS Lists",
          "CSS Animation",
          "CSS 2D Transform",
          "CSS 3D Transform",
          "CSS Colors 1",
          "CSS Colors 2",
          "CSS Cursors",
          "CSS Borders",
          "CSS Padding",
          "CSS Positioning",
          "CSS Dimensions",
          "CSS Rounded Corners",
          "CSS Visibility",
          "CSS Scrollbars",
          "CSS Selectors",
          "CSS Gradient",
          "CSS Images",
          "CSS Background"
        ],
        "JavaScript Complete Course": [
          "JavaScript Introduction",
          "JavaScript Operators",
          "JavaScript Array",
          "JavaScript Conditional Statements",
          "JavaScript Variables",
          "JavaScript Comparison Operators",
          "JavaScript for Loop",
          "JavaScript Iteration Statement",
          "Javascript Do..while loop",
          "JavaScript Cookies",
          "JavaScript Functions",
          "JavaScript Error Handling",
          "JavaScript Events",
          "JavaScript While Loop",
          "JavaScript Page Redirect",
          "JavaScript Loop Control Statements",
          "JavaScript Logical Operators",
          "JavaScript Switch Statement",
          "JavaScript Objects",
          "JavaScript If Else Statement",
          "JavaScript Animation"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge",
        "Basic HTML Knowledge"
      ],
      "description": "Learn CSS And Javascript Complete Course For Beginners\nSection 1- CSS Course with basics and advanced concepts of CSS\nEver wonder how the latest website designs are made? Cascading Style Sheets (CSS) are the main coding files used to layout a website and its design. CSS 3 is the latest in styling standards, and it brings several new properties and declarations you can use to make your website design more easily created. CSS is currently the only standard in website design that plugs directly into your HTML, even the latest HTML 5 standards. With CSS 3 and HTML 5, you can create the latest interactive pages for your website viewers.\nThis course shows you how to create CSS classes from a beginner's level. It starts off with basic HTML declarations, properties, values, and how to include a CSS style sheet with your HTML code. For those of you who are new to CSS and HTML, we show you step-by-step how to create a CSS file and include it in your HTML code, even if you use a cloud server for your hosting.\nWe show you how to position your elements, layout your elements relative to your documents, and style your HTML using predefined CSS values. We introduce you to the common CSS styling that you'll need when you start off designing your pages. If you want to get to know CSS and website design, this course is meant for you, and it can be used by anyone who hasn't even seen one line of CSS code yet. We focus on the latest CSS 3 and HTML 5 standards, so you get the latest when coding your website pages instead of focusing on older code.\nThere are no prerequisites. Anyone Can join this course. It is recommended though that individual have some basic computer programming knowledge.\n\n\nCourse Topics\n\n\nIntroduction to CSS\nInclusion Of CSS In HTML\nCSS Syntax\nCSS Styling Text\nCSS Page Backgrounds\nCSS 2D Transform\nCSS 3D Transform\nCSS Animation\nAnd More....\n\n\nSection 2- Learn Javascript Programming Language\nThe course is created with thorough, extensive, but easy-to-follow content that you’ll easily understand and absorb.\nThe course starts with the basics, including JavaScript fundamentals, programming, and user interaction.\n\n\nThe curriculum is going to be very hands-on as we walk you from start to finish to become a professional Javascript developer. We will start from the very beginning by teaching you Javascript basics and programming fundamentals, and then execute into real-life practice and be ready for the real world.\n\n\nWhile Javascript is complicated for beginners to learn, it is widely used in many web development areas.\nThis course gets you started with an introduction to JavaScript. It assumes that you're new to the language, so it gets you started with basic functionality such as creating functions, creating variables, and calling these lines of code from your standard HTML pages. It talks about events and triggers for custom event handling. It talks about pattern matching, searching for text within a page, flow control, and the document object model (DOM). We start off with the basics and move on to more complex functionality such as arrays and objects. We then discuss how to script common elements with JavaScript such as forms and tables. At the very end, we discuss major libraries such as Ajax, which allows you to make asynchronous calls to server-side scripts without reloading the web page in the server.\nMaster the fundamentals of writing Javascript scripts\nLearn core Javascript scripting elements such as variables and Objects\nDiscover how to work with lists and sequence data\nWrite Javascript functions to facilitate code reuse\nUse Javascript to read and write files\nMake their code robust by handling errors and exceptions properly\nSearch text using regular expressions\nThe topics covered in this course are:\n* Javascript Course Contents:\nJavascript Introduction\nJavascript Array\nJavascript Variables\nJavascript Functions\nJavascript Objects\nJavascript Control Statements\nJavascript Cookies\nJavascript Loop statements\nJavascript Data Structures\nJavascript Error Handling\nJavascript Regular Expressions\nSee you inside the course\n\nThank you see you inside the course",
      "target_audience": [
        "For People New to CSS And JavaScript",
        "For People Who want to learn CSS And JavaScript Fundamentals and later Transition into Web Designing",
        "For People New to Web Designing"
      ]
    },
    {
      "title": "Learn Bootstrap By Building Projects - Includes Bootstrap 4",
      "url": "https://www.udemy.com/course/learn-bootstrap-development-by-building-10-projects/",
      "bio": "Master Responsive Web Development Using Bootstrap 3 and Bootstrap 4 While Building Real Life projects",
      "objectives": [
        "Build Responsive Websites",
        "Understand the use of Bootstrap Components",
        "Master the best practices for HTML, CSS and JS development"
      ],
      "course_content": {
        "Introduction Section": [
          "Intro",
          "Who is this Course for",
          "How to Succeed",
          "Advantages and Disadvantages",
          "What this Course will Cover",
          "Html Review",
          "Css Review"
        ],
        "Bootstrap 101": [
          "Framework vs Library",
          "Reading Documentations",
          "Getting Started",
          "Quiz 1"
        ],
        "SCSS + Gulp": [
          "Sass-Intorduction",
          "Gulp-Intorduction",
          "Installing-Sass-Windows",
          "Installing-nodejs-and-npm",
          "Starting out with gulp and sass",
          "Testing with Browsersync",
          "Sass Porject Structure",
          "Variables and Nesting",
          "BEM",
          "Extends Mixins and Includes",
          "Functions and Operators",
          "LAB1 Problem",
          "LAB1 Solution",
          "LAB2 Problem",
          "LAB2 Solution",
          "Quiz 2"
        ],
        "Grid and Flexbox": [
          "Flexbox",
          "Installing with NPM",
          "Adding Custom Bootstrap to Project",
          "Container and Breakpoints",
          "Grid Options",
          "Equally width Columns",
          "Gutters and Alignment",
          "What to stay away from in Bootstrap Grid",
          "Nesting and Sass",
          "Lab Problem",
          "Lab Solution",
          "Quiz 3"
        ],
        "Typography": [
          "Typography",
          "RFS",
          "RFS in Action",
          "Vertical Rhythm Updated",
          "Quiz 4"
        ],
        "Code Images and Figures": [
          "Code",
          "Images and Figures",
          "Table Syntax",
          "Bootstrap Tables",
          "Bootstrap Responsive Tables",
          "None Bootstrap Responsive Tables",
          "Lab Problem",
          "Lab Solution",
          "Quiz 5"
        ],
        "Components I Alerts, Badges, Breadcrumbs and Toasts": [
          "Node Modules",
          "Building JavaScript",
          "Util.js",
          "Alerts",
          "Bootstrap Colors",
          "Close Alerts",
          ".JavaScript Alerts",
          "Badges",
          "Breadcrumb",
          "Lab Problem",
          "Lab Solution",
          "Quiz 6"
        ],
        "Components 2 Buttons, Button Groups and Pagination": [
          "Buttons",
          "Overriding Bootstrap",
          "Button State",
          "Button Group",
          "Pagination",
          "Quiz 7"
        ],
        "Components 3 Cards": [
          "Card",
          "Media object",
          "List Group",
          "Lab Problem",
          "Lab Solution",
          "Quiz 8"
        ],
        "Components 4 Carousel, Collapse and Dropdown": [
          "Carousel",
          "Carousel JavaScript",
          "Collapse",
          "Dropdown",
          "Dropdown JavaScript",
          "Jumbotron",
          "Lab Problem",
          "Lab Solution",
          "Quiz 9"
        ]
      },
      "requirements": [
        "Students should have fair understanding of HTML, CSS and JS for this course."
      ],
      "description": "Bootstrap is the world's most popular mobile ready web development framework for HTML, CSS and JavaScript. Bootstrap is for you if you want to quickly build a super cool website which work across devices and browsers. It is easy to learn and super powerful. We have recently included new projects from Bootstrap 4 beta in addition to Bootstrap 3 which is the stable version of Bootstrap.\nWe have bought together all the best practices of building bootstrap sites into an unique project based course which will teach you all the nuances of web development while building real world bootstrap projects. The projects cover generic development process and are diverse enough to cover a very wide variety of websites. The projects covered in the course are\nBootstrap 3 Projects\nPhoto App Sales Website : A simple project to get you started. It will help you quickly master the basic bootstrap structures and you will be quickly up and running on your first bootstrap website.\nPortfolio Resume using SASS - Learn to use SASS along with Bootstrap for this next project. Learn about Grid Systems, List Styling and Progress Bar Components in this course.\nSocial Network Template - This will be a fairly complex project with multiple bootstrap components. You will learn about Nested grids, Button Groups, Gallery plugin and Responsive Media Queries.\nAgency Landing page - This project develops a landing page using LESS. LESS is a CSS preprocessor. You will also learn Jumbotron showcase,Scroll Down Effect and Font Awesome Icons.\nPhoto Gallery - You will learn to create a Photo gallery display using components such as Grid UI and Tab Widget. You will also learn the use of Bootstrap Image Carousel and Photo Lightbox Jquery Plugin.\nCMS Admin Template - Learn to build an Admin template for a content management system. You will learn the use of Bootstrap Table Classes,Glyphicons, Breadcrums and Button Groups\nWeb hosting Company Website - This project will teach you Bootstrap Components such as Bootswatch UI tools, Content carousel, Stack icons and stylish fonts.\nE-commerce Template - Learn to build a front end of an E-commerce website. Learn components such as Tab Widget, Product Grid and Custom header.\nBusiness Bootstrap Theme - Learn to use animation in your website with animate css. Also learn to optimize your site for mobile with this amazing project.\nBlog Website - Learn to build the front end of the blog with components such as Dropdown menu, Contact form, Carousel Thumbnails & Grid View.\nBootstrap 4\nWhats New in Bootstrap 4 - Get to know everything thats new in Bootstrap\nHello World Project - Build a complete project template\nComplete Website Project - A complete website built using latest Bootstrap 4 features\nMore Bootstrap 4 projects will be added soon.\nWith all this projects under your back you can build almost anything with Bootstrap. So click that Enroll button and see you on the other side.",
      "target_audience": [
        "Students who want to build responsive websites using bootstrap and have basic knowledge of HTML and CSS should find this course extremely helpful"
      ]
    },
    {
      "title": "Mastering SharePoint Framework SPFx Development",
      "url": "https://www.udemy.com/course/sharepointframeworkspfxdevelopment/",
      "bio": "Learn How to Develop SPFx Solutions using React & NoJS Frameworks From Scratch Step By Step",
      "objectives": [
        "Learn How to Develop SharePoint Framework (SPFx) web Parts",
        "Learn How to Set Up Develop Environment for SPFx Solutions Development",
        "Learn How to work with Modern SharePoint Online",
        "Learn How to Create SPFx Web Parts in different ways",
        "Learn How to Create Multiple Web Parts in a Single SPFx Solution",
        "Learn How to Connect to SharePoint Online From SPFx Web Parts",
        "Learn How to work with various PropertyPane Controls",
        "Learn How to make REST API calls using SPHttpClient",
        "Learn How to perform CRUD Operations using NoJavaScript Framework",
        "Learn How to perform CRUD Operations using sp-pnp-js Library",
        "Learn How to create Site Columns,Site Content Types,List Instances from SPFx Web Part",
        "Learn How to Create Libraries and Consume Libraries from SPFx Web Part",
        "Learn How to work with various SPFx Extensions",
        "Learn How to develop SPFx web Parts using React Framework",
        "Learn How to invoke Anonymous REST API's from SPFx Web Part",
        "Learn How to work with External Libraries from SPFx Web Part",
        "Learn How to work with MSGraph API using React Framework",
        "Learn How to use Office UI Fabric React Controls in SPFx Web Part",
        "Learn How to perform CRUD Operations using React Framework",
        "Learn How to develop Provider and Consumer Web Parts",
        "Learn How to develop Single Page Applications (SPA)",
        "Learn How to perform logging and debuggging",
        "Learn How to implement Localization Support for SPFx Web Part",
        "Learn How to create Custom Tabs for Microsoft Teams",
        "Learn How to deploy SPFx solutions to Office 365 CDN and Azure CDN",
        "Learn How to develop Custom Gulp Tasks"
      ],
      "course_content": {
        "Big Picture of SPFx": [
          "Course Introduction",
          "Introduction To SPFx",
          "Installing Visual Studio Code",
          "Creating An App Catalog",
          "Creating a Site Collection based App Catalog",
          "Creating a Site Collection",
          "Setting Up Development Environment for SPFx 1.18.2",
          "SPFx Version 1.10.x and 1.12.x - Complete Course Exercise Files",
          "Important Note : Course Exercise Files",
          "SPFx Version 1.14.0 - Complete Course Exercise Files",
          "SPFx Version 1.18.2 - Complete Course Exercise Files",
          "ESLint Fixes in SPFx 1.18.2 Version"
        ],
        "Working with SharePoint Client Side Web Parts": [
          "Devloping a Simple SharePoint Client Side Web Part using SPFx 1.18.2",
          "Hosted Work Bench Vs Local Work Bench Issue",
          "Developing a Simple SharePoint Client Side Web Part - Approach 2",
          "Creating Multiple Web Parts as part of Single Solution",
          "Understanding Web Part Project Folders Structure",
          "Understanding SkipFeatureDeployment Option Practically",
          "Developing a Web Part To Read Site Properties",
          "Accessing Culture Info Details Using a Web Part",
          "Get List of Lists Of A SharePoint Site"
        ],
        "Working With Property Pane": [
          "Overview of Property Panes",
          "Working with TextBoxes",
          "Assign Default Values using JSON File",
          "Working with onInit Function",
          "Disabling Reactive Changes"
        ],
        "Working with Property Pane Various Controls": [
          "Working with PropertyPaneToggle",
          "Working with PropertyPaneSlider",
          "Working with PropertyPaneChoiceGroup",
          "Working with PropertyPaneChoiceWithImages",
          "Working with PropertyPaneDropDown",
          "Working with PropertyPaneCheckBox",
          "Working with PropertyPaneLink",
          "Working with Multiple Groups",
          "Working with Multiple Pages",
          "Modifying Default Icon"
        ],
        "Working with SPHttpClient": [
          "Create a New List using SPHttpClient",
          "Create a New Site using SPHttpClient"
        ],
        "CRUD Operations with NoJavaScriptFramework": [
          "Inserting Records Into a List",
          "Reading the details of a Single Record",
          "Updating a Record Of a List",
          "Reading all records of a List"
        ],
        "CRUD Operations with sp-pnp-js Library": [
          "Inserting Records Into a List",
          "Reading the details of a Single Record",
          "Updating a Record Of a List",
          "Reading all records of a List",
          "Deleting a Record of a List",
          "Important Note : Using sp-pnp-js Library on Production Environment"
        ],
        "Creating SharePoint Artefacts": [
          "Creating Site Columns,Site Content Types,Lists through Code",
          "Learn How to Version features and Upgrade Features"
        ],
        "Working with Library": [
          "Creating a Library",
          "Test Library locally",
          "Deploy Library to SharePoint Online and Test",
          "Setting Full Width layout"
        ],
        "Working with Spfx Extensions": [
          "Creating an ApplicationCustomizer Extension - Demo 1",
          "Creating an ApplicationCustomizer Extension - Demo 2",
          "Creating FieldCustomizer Extension",
          "Creating Field Customizer Extension Using React",
          "Creating CommandSet Extension",
          "Performing BulkUpdate using ListView CommandSet Extension"
        ]
      },
      "requirements": [
        "Visual Studio Code Editor, NodeJS",
        "Basic Knowledge of TypeScript, React will be an added advantage."
      ],
      "description": "SharePoint Framework is a new development model to extend the Modern SharePoint User Interface. The development scenario has shifted from the server-side to the client-side development involving various open source tooling and modern toolchain.\nThis course aims to equip you with enough knowledge of the SharePoint Framework in conjunction with skills to use  tools such as Node.js, npm, Yeoman, Gulp, TypeScript,React Framework & Office UI Fabric React controls.\nThis course provides developers with a thorough knowledge in developing SPFx Solutions using React Framework as well as NoJavaScript Framework.\nIn this course by development expert Kameswara Sarma Uppuluri, you'll learn essential concepts that you need to know to build SPFx solutions from scratch.\nThis course provides step-by-step walk-throughs and demos that you're encouraged to practice along with to enhance the learning process.\nThis course is broken down into 21 Modules with each module providing source code so that you can follow along with Kameswara Sarma Uppuluri.",
      "target_audience": [
        "This course is beneficial for those people who want to learn SharePoint Framework Development from scratch or who are already involved in developing solutions using earlier versions of SharePoint like 2007,2010,2013,2016,2019."
      ]
    },
    {
      "title": "Asynchronous JavaScript",
      "url": "https://www.udemy.com/course/asynchronous-javascript/",
      "bio": "Become an expert in Asynchronous JavaScript, Callbacks, Promises, Async/Await, Generators & The Event Loop",
      "objectives": [
        "Ace any asynchronous JavaScript interview question",
        "Spend less time chasing down bugs in asynchronous code",
        "Write fast performant JavaScript applications",
        "Understand complex JavaScript concepts"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Agenda",
          "How to get the course code?",
          "How to install node and which node to install?",
          "How to get setup with Visual Studio Code?",
          "Whats V8 vs Chrome vs Node?"
        ],
        "Understanding Asynchronous vs Synchronous": [
          "Introduction",
          "What is Asynchronous?",
          "Blocking vs Non-Blocking",
          "Multi-Threaded Programming",
          "Event Driven Programming"
        ],
        "Asynchronous Patterns": [
          "Introduction"
        ],
        "Asynchronous Patterns - Callbacks": [
          "IMPORTANT PLEASE READ",
          "Callbacks - Quiz #1",
          "Callbacks - Handling Errors",
          "Callbacks - Quiz #2",
          "Callbacks - Callback Hell",
          "Callbacks - Quiz #3"
        ],
        "Asynchronous Patterns - Promises": [
          "Promises - Basics",
          "Promises - Quiz #1",
          "Promises - Chaining",
          "Promises - Quiz #3",
          "Promises - Returning Promises",
          "Promises - Quiz #4",
          "Promises - Error Handling",
          "Promises - Quiz #5",
          "Promises - Finally",
          "Promises - All",
          "Promises - Race",
          "Promises - Quiz #6",
          "Promises - Quiz #7"
        ],
        "Asynchronous Patterns - Async/Await": [
          "Async/Await - Basics",
          "Async/Await - Quiz #1",
          "Async/Await - No Await",
          "Async/Await - Async Iterators",
          "Async/Await - Quiz #2",
          "Async/Await - Warning"
        ],
        "Asynchronous Patterns - Generators": [
          "Generators - Understanding Generators",
          "Generators - Using yield to communicate",
          "Generators - Async Generators",
          "Generators - Quiz #1"
        ],
        "Event Loops": [
          "Introduction",
          "Node Event Loop",
          "Node Event Loop Example",
          "Node Event Loop Live Demo",
          "Node Event Loop Quiz #1",
          "Node Event Loop Quiz #2",
          "Chrome Event Loop"
        ],
        "Summary": [
          "Closing Words",
          "Feedback Form",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Be familiar with `git` and be able to `git clone` repositories from github",
        "At least a basic level of Javascript, you must have written an app or two already.",
        "Doesn't need to be an expert in Node but must know what it is and be comfortable running JavaScript in Node"
      ],
      "description": "Do you know what's wrong with this code? Can you fix it without moving the last variable up the page?\n############################################\n\nfunction doAsyncTask(cb) {\ncb();\n}\n\ndoAsyncTask( () => console.log(message) );\n\nconst message = \"Hello I am a teapot\";\n############################################\n\nIf you're not certain then this Asynchronous JavaScript course is perfect for you.\n\nWhat\nUnderstanding the asynchronous nature of Javascript is key to mastering the language.\nThis course is designed to take someone with a beginner level knowledge of async programming and turn them into an expert.\nWe do this by starting off very simple, explaining the core concepts.\nThen step by step adding in layers of knowledge, punctuated by quizzes and coding challenges to cement and your knowledge before moving onto the next section.\nWhy\nI promise you'll end this course an expert in asynchronous programming in JavaScript, with knowledge most other experts don't even have.\nYou'll ace any JavaScript interview questions related to asynchronous code.\nYou'll spend less time chasing down bugs in async code.\nYou'll amaze your colleagues and friends with your level of knowledge and expertise in async programming.\nHow\nI will explain what async and sync code really is, the advantages and disadvantages of each.\nWe'll cover in-depth the various asynchronous patterns in JavaScript including Callbacks, Promises, Async/Await and even Generators with plenty of exercises to practice what you've learnt.\nIn the end we'll go deep into the event architecture itself,  you'll know how async code is actually implemented in these applications.\nWho\nThe ideal student for this course is someone with at least a basic level of Javascript, you must have written a few apps already.\nYou'll also need some familiarity with node and be comfortable on the command line.\nBut everything else I will explain from first principles.",
      "target_audience": [
        "Anyone who is a little confused with asynchronous code",
        "Anyone who wants to know what the differences are between Callbacks, Promises, Async/Await and Generators",
        "Anyone who is interested in writing fast performant code in Node or Browsers.",
        "Anyone who wants to know what setImmediate really does?",
        "Anyone who wants to know when requestAnimationFrame is run?"
      ]
    },
    {
      "title": "Vue JS Essentials with Vuex and Vue Router",
      "url": "https://www.udemy.com/course/vue-js-course/",
      "bio": "Have limited time to learn Vue, Vuex, and Vue Router? Take this course and learn Vue in 11 hours!",
      "objectives": [
        "Understand how to create interesting Vue applications",
        "Use Vuex to manage and update data stored in application state",
        "Navigate users between pages using Vue Router",
        "Authenticate users with an advanced OAuth2 flow",
        "Build beautiful drag and drop image upload",
        "Style content intelligently using CSS Grids"
      ],
      "course_content": {
        "An Introduction to Vue": [
          "How to Get Help",
          "Course Resources",
          "Join Our Community!",
          "Our First Vue App",
          "App Overview",
          "A Codepen Starter",
          "Vue Templates and Instances",
          "Creating the Template",
          "Linking Templates and Instances",
          "Step by Step Implementation",
          "Defining Instance Methods",
          "Defining Vue Directives",
          "Retrieving Event Information",
          "Imperative vs Declarative Programming",
          "Declarative Apps with the Vue API",
          "Data, Computed, and Methods",
          "Updated Data Values",
          "Computed Properties",
          "Review from Start to Finish",
          "Template Placement",
          "Referencing Data in the Template",
          "Expressions in Templates",
          "Rendering with String Templates",
          "Exercise Solution",
          "JS Expressions in Templates",
          "Exercise Solution"
        ],
        "Moving on with Vue CLI": [
          "App Overview",
          "App Challenges",
          "Generating a New Project",
          "Why Use Vue CLI?",
          "Project Walkthrough",
          "Vue Files",
          "Behind the Scenes of Vue Files",
          "Vue Components vs Vue Instances"
        ],
        "Writing Effective Vue Apps": [
          "Starting from Scratch",
          "The App Component",
          "Another Way of Specifying Content",
          "Multiple Ways of DOM Attachment",
          "Making the SearchBar",
          "Nesting Components",
          "Event Directives",
          "Shorthand Event Syntax",
          "Data Sharing Between Components",
          "Communication with Props and Events",
          "Emitting Events",
          "Listening for Custom Events",
          "Youtube API Signup",
          "Searching Youtube",
          "Investigating Video Responses",
          "Rendering a List of Videos",
          "Updating Data Causes Rerenders",
          "Data in Components vs Instances",
          "Updating Data",
          "Communicating from Parent to Child",
          "Prop Validation",
          "Separate List Components",
          "Lists with V-For",
          "Handling Props with V-For",
          "Keys with V-For",
          "Including Bootstrap Styling",
          "Styling the Search Bar",
          "Styling the Video List",
          "Thumbnail Image Reference",
          "Thumbnail By Computed Property",
          "More List Item Styling",
          "Handling Nested Clicks",
          "Event Handling in the VideoList",
          "Receiving Events in the App",
          "Passing Props to the Video Detail",
          "Updating Data",
          "The V-If Directive",
          "Referencing Video Title and Description",
          "Crafting the Embed URL",
          "Responsive Embeds",
          "Two Column Layout",
          "App Review",
          "Events and Methods",
          "Exercise Solution",
          "Component Data",
          "Exercise Solution",
          "Events, Data, and Directives"
        ],
        "Handling State with Vuex": [
          "App Overview",
          "App Challenges",
          "Additional Dependencies",
          "A Bit of Boilerplate",
          "Building the Header",
          "Including Semantic UI",
          "Styling the Header",
          "Imgur Overview"
        ],
        "Authentication in Vue with OAuth2": [
          "OAuth Overview",
          "Imgur API Signup",
          "Handling App Logic",
          "Vuex Introduction",
          "Vuex Modules",
          "Connecting Vuex to Vue",
          "Initial Auth Module Design",
          "Auth Module Mutations",
          "Auth Module State and Getters",
          "Updating State Values",
          "Logging Out with Actions",
          "Separate API Helpers",
          "Forming the OAuth2 URL",
          "Initiating the Login Flow",
          "Wiring in the Auth Module",
          "Initial OAuth Request",
          "Extracting the Access Token"
        ],
        "Navigation with Vue Router": [
          "Wiring up Vue Router",
          "Browser vs Hash Routers",
          "Component Insertion Point",
          "Component Lifecycle Methods",
          "Calling Actions",
          "Parsing the Access Token",
          "Data in Components with MapGetters",
          "The V-Else Directive",
          "Persisting Login State",
          "Button Styling",
          "Logging Out Users",
          "Automatic Component Updates",
          "Clearing LocalStorage Tokens",
          "Programmatic Navigation",
          "Additional Route Config",
          "Navigation with Router-Link"
        ],
        "Design of Vuex Modules": [
          "Image Module Deisgn",
          "Module Implementation",
          "Fetch Images API Documentation",
          "Fetching Images",
          "Communicating Across Modules",
          "Testing Images Reponse",
          "Image Upload via Imgur",
          "Committing Images to State",
          "Mapping the Images Getter",
          "Listing Images"
        ],
        "Handling Image Upload": [
          "Image Upload Overview",
          "Upload Form HTML",
          "Styling the Upload Form",
          "The Upload Images Action",
          "File Change Event",
          "Accepting Multiple Image Files",
          "The Path to Upload",
          "Attaching Images with FormData",
          "Concurrent Uploads",
          "Layout with CSS Grid",
          "Hide Images on Logout",
          "Expanding the App"
        ]
      },
      "requirements": [
        "Basic knowledge of Javascript"
      ],
      "description": "State management with Vuex? Yep.  Drag and drop image upload? Covered!  Authentication with OAuth2?   Its here!\nIf you're looking to learn Vue, Vuex, and Vue Router in record time you're in the right place!  I built this course to help you understand Vue in a fraction of the time that other courses requires.  You'll find absolutely no filler content here, only direct, accurate, and concise explanations of exactly how Vue works.\nVue is an extremely popular front end Javascript framework made for developing dynamic and interactive web apps.  Vue has grown tremendously in popularity in the last few years, and is poised to overtake even React and Angular as the king of all web frameworks.  The secret of Vue is its simplicity - a little bit of knowledge of how Vue works goes a long way!  To help you master Vue, I built this course specifically tailored to be completed in the smallest amount of time possible.  No time is spent with unnecessary or unimportant topics, only the most relevant information is presented.\nIn just 11 hours, you can become a master of Vue!\nVue can be used by itself, but it gets even better when used with Vuex and Vue Router as well.  Vuex is a state management framework, which is used to fetch, store, and move data around your application.  In this course, you'll get a deep understanding of how Vuex works and how it works so well with Vue by getting plenty of practice fetching data, storing it, and then retrieving it for use inside of a Vue application.  Vue Router is used to navigate users around to different pages in a single page application.  Vue Router is incredibly simple to get started with - you'll master its inner workings after I show you one simple example.\n\nThroughout this course, you'll get practical experience with the following:\nProducing dynamic, responsive applications using Vue\nUpload images to a remote server using drag and drop image upload\nLog users into your app using OAuth2 Authentication\nUse a cutting edge project boilerplate with Vue CLI\nReduce the amount of code you write using Template Directives\nCommunicate between components using Props and Events\nUpdate Vue components using reactive data properties\nProgamatically navigate users around your application using Vue Router\nModel application data using the powerful Vuex framework\nPersist information stored in your app using Local Storage\nDevelop a master-level understanding of the differences between imperative and declarative programming\nLearn how Vue gives developers multiple tools to accomplish task, and know which the best is for you\nAll of these topics are communicated with the utmost respect for your learning time.  Every section has been written and re-written to be as concise as possible.  If you want to learn Vue as fast as possible then look no further!  Sign up today and master Vue!",
      "target_audience": [
        "Engineers looking to harness the power of Vue",
        "Beginners learning about web development"
      ]
    },
    {
      "title": "Backend Master Class [Golang + Postgres + Kubernetes + gRPC]",
      "url": "https://www.udemy.com/course/backend-master-class-golang-postgresql-kubernetes/",
      "bio": "Learn everything about backend web development: Golang, Postgres, Redis, Gin, gRPC, Docker, Kubernetes, AWS, CI/CD",
      "objectives": [
        "Design database schema using DBML and automatically generate SQL code from it",
        "Deeply understand the DB isolation levels, transactions and how to avoid deadlock",
        "Automatically generate Golang code to interact with the database",
        "Develop a RESTful backend web service using the Gin framework",
        "Secure the APIs with user authentication, JWT and PASETO",
        "Write stronger test set with high coverage using interfaces and mocking",
        "Build a minimal Docker image for deployment and use Docker-compose for development",
        "Set up Github Action to automatically build and deploy the app to AWS Kubernetes cluster",
        "Register a domain and config Kubernetes ingress to route traffic to the web service",
        "Enable automatic issue & renew TLS certificate for the domain with Let's Encrypt",
        "Take your web service to the next level with gRPC and gRPC gateway",
        "Run background workers to process tasks asynchronously with Redis and Asynq"
      ],
      "course_content": {
        "Working with database [Postgres + SQLC]": [
          "Design DB schema and generate SQL code with dbdiagram.io",
          "Setup development environment on Windows: WSL2, Go, VSCode, Docker, Make, Sqlc",
          "Setup development environment on MacOS: Install Go and Visual Studio Code",
          "Use Docker + Postgres + TablePlus to create DB schema",
          "How to write & run database migration in Golang",
          "Generate CRUD Golang code from SQL | Compare db/sql, gorm, sqlx & sqlc",
          "Write SQL queries for transfers and entries table and generate Go code",
          "Write unit tests for database CRUD with random data in Golang",
          "Configure the right sql_package in your sqlc.yaml file",
          "A clean way to implement database transaction in Golang",
          "DB transaction lock & How to handle deadlock in Golang",
          "How to avoid deadlock in DB transaction? Queries order matters!",
          "Deeply understand transaction isolation levels & read phenomena",
          "Setup Github Actions for Golang + Postgres to run automated tests"
        ],
        "Building RESTful HTTP JSON API [Gin + JWT + PASETO]": [
          "Implement RESTful HTTP API in Go using Gin",
          "Load config from file & environment variables in Go with Viper",
          "Mock DB for testing HTTP API in Go and achieve 100% coverage",
          "Implement transfer money API with a custom params validator",
          "Add users table with unique & foreign key constraints in PostgreSQL",
          "How to handle DB errors in Golang correctly",
          "How to securely store passwords? Hash password in Go with Bcrypt!",
          "How to write stronger unit tests with a custom gomock matcher",
          "Why PASETO is better than JWT for token-based authentication?",
          "How to create and verify JWT & PASETO token in Golang",
          "Implement login user API that returns PASETO or JWT access token in Go",
          "Implement authentication middleware and authorization rules in Golang using Gin"
        ],
        "Deploying the application to production [Docker + Kubernetes + AWS]": [
          "How to build a small Golang Docker image with a multistage Dockerfile",
          "How to use docker network to connect 2 stand-alone containers",
          "How to write docker-compose file and control service start-up orders",
          "How to create a free-tier AWS account",
          "Auto build & push docker image to AWS ECR with Github Actions",
          "How to create a production database on AWS RDS",
          "Store & retrieve production secrets with AWS secrets manager",
          "Kubernetes architecture & How to create an EKS cluster on AWS",
          "How to use kubectl & k9s to connect to a kubernetes cluster on AWS EKS",
          "How to deploy a web app to Kubernetes cluster on AWS EKS",
          "Register a domain & set up A-record using Route53",
          "How to use Ingress to route traffics to different services in Kubernetes",
          "Auto issue & renew TLS certificates with cert-manager and Let's Encrypt",
          "Automatic deploy to Kubernetes with Github Action"
        ],
        "Advanced Backend Topics [Sessions + gRPC]": [
          "How to manage user session with refresh token",
          "Generate DB documentation page and schema SQL dump from DBML",
          "Introduction to gRPC",
          "Define gRPC API and generate Go code with protobuf",
          "How to run a golang gRPC server and call its API",
          "Implement gRPC API to create and login users in Go",
          "gRPC Gateway: write code once, serve both gRPC & HTTP requests",
          "How to extract information from gRPC metadata",
          "Automatic generate & serve swagger documentation from Go server",
          "Embed static front-end files inside Golang backend server's binary",
          "Validate gRPC parameters and send human/machine friendly response",
          "Run DB migrations directly inside Golang code",
          "Partial update DB record with SQLC nullable arguments",
          "Build gRPC update API with optional parameters",
          "Add authorization to protect gRPC API",
          "Write structured logs for gRPC APIs",
          "How to write HTTP logger middleware in Go"
        ],
        "Asynchronous processing with background workers [Asynq + Redis]": [
          "Implement background worker with Redis task queue",
          "Integrate async worker to Go web server",
          "Send async tasks to Redis within a DB transaction",
          "How to handle errors and print logs for Async workers",
          "Some delay might be good for your async tasks",
          "How to send email in Go via Gmail",
          "How to skip test in Go and config test flag in vscode",
          "Email verification feature: design DB and send email",
          "Implement email verification API in Go",
          "Unit test gRPC API with mock DB & Redis",
          "How to test a gRPC API that requires authentication"
        ],
        "Improve the stability and security of the server [PGX + RBAC + CORS]": [
          "Upgrade and config sqlc with version 2 syntax",
          "Switch DB driver from lib/pq to pgx",
          "How to properly handle DB errors with pgx driver",
          "Docker compose: port + volume mapping",
          "How to install & use binary packages in Go",
          "Implement role-based access control (RBAC) in Go",
          "Grant AWS EKS cluster access to Postgres and Redis using security group",
          "Deploy gRPC + HTTP server to AWS EKS cluster",
          "Don't lose money on AWS",
          "Graceful shutdown gRPC/HTTP servers and async worker",
          "Go 1.22 fixed the most common for-loop trap",
          "How to setup CORS policy in Go",
          "Upgrade golang JWT package to the latest version (v5)",
          "Hey, it's not the end yet!",
          "What's next?"
        ]
      },
      "requirements": [
        "Only basic programming skill is needed",
        "If you're new to Go, I suggest learning its syntax first on the \"Tour of Go\" website"
      ],
      "description": "In this course, you will learn step-by-step how to design, develop and deploy a backend web service from scratch. I believe the best way to learn programming is to build a real application. Therefore, throughout the course, you will learn how to build a backend web service for a simple bank. It will provide APIs for the frontend to do the following things:\nCreate and manage bank accounts.\nRecord all balance changes to each of the accounts.\nPerform a money transfer between 2 accounts.\nThe programming language we will use to develop the service is Golang, but the course is not just about coding in Go. You will learn a lot of different topics regarding backend web development. They are presented in 6 sections:\nIn the 1st section, you will learn deeply about how to design the database, generate codes to talk to the DB in a consistent and reliable way using transactions, understand the DB isolation levels, and how to use it correctly in production. Besides the database, you will also learn how to use docker for local development, how to use Git to manage your codes, and how to use GitHub Action to run unit tests automatically.\nIn the 2nd section, you will learn how to build a set of RESTful HTTP APIs using Gin - one of the most popular Golang frameworks for building web services. This includes everything from loading app configs, mocking DB for more robust unit tests, handling errors, authenticating users, and securing the APIs with JWT and PASETO access tokens.\nIn the 3rd section, you will learn how to build your app with Docker and deploy it to a production Kubernetes cluster on AWS. The lectures are very detailed with a step-by-step guide, from how to build a minimal docker image, set up a free-tier AWS account, create a production database, store and retrieve production secrets, create a Kubernetes cluster with EKS, use GitHub Action to automatically build and deploy the image to the EKS cluster, buy a domain name and route the traffics to the service, secure the connection with HTTPS and auto-renew TLS certificate from Let's Encrypt.\nIn the 4th section, we will discuss several advanced backend topics such as managing user sessions, building gRPC APIs, using gRPC gateway to serve both gRPC and HTTP requests at the same time, embedding Swagger documentation as part of the backend service, partially updating a record using optional parameters, and writing structured logger HTTP middlewares and gRPC interceptors.\nThen the 5th section will introduce you to asynchronous processing in Golang using background workers and Redis as its message queue. We'll also learn how to create and send emails to users via Gmail SMTP server. Along the way, we'll learn more about writing unit tests for our gRPC services that might involve mocking multiple dependencies at once.\nThe final section 6th concludes the course with lectures about how to improve the stability and security of the server. We'll keep updating dependency packages to the latest version, use Cookies to make the refresh token more secure, and learn how to gracefully shut down the server to protect the processing resources. As this part is still a work in progress, we will keep making and uploading new videos about new topics in the future. So please come back here to check them out from time to time.\nThis course is designed with a lot of details, so that everyone, even those with very little programming experience can understand and do it by themselves. I firmly believe that after the course, you will be able to work much more confidently and effectively on your projects.",
      "target_audience": [
        "Anyone who wants to learn about backend web service development using Golang, Postgres, Docker & Kubernetes",
        "The course is designed so that even a beginner with very basic programming skills can understand",
        "But I'm sure even developers with more experienced (intermediate level) can still learn something new"
      ]
    },
    {
      "title": "NgRx (with NgRx Data) - The Complete Guide (Angular 20)",
      "url": "https://www.udemy.com/course/ngrx-course/",
      "bio": "Learn the modern NgRx Ecosystem, including NgRx Data, Store, Effects, Router Store, NgRx Entity, and DevTools",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Become familiar with the centralized store pattern, and how to use it in Angular",
        "Know when to use a centralized store solution and why",
        "Learn how to use NgRx Data to handle entity data with minimal code",
        "Learn In-depth NgRx Store, understand in detail all core store patterns, including Reducers and Actions",
        "Learn in detail NgRx Effects, learn when to use a side-effect",
        "Learn in detail NgRx Entity, when to use and why, learn what are the benefits",
        "Transform step-by-step an existing Angular plain application, and turn it into a store based application",
        "Learn to implement common functionality in NgRx, such as Authentication or Entity Pagination",
        "Learn NgRx in-depth in a fun and practical way, by implementing real use cases"
      ],
      "course_content": {
        "Introduction": [
          "NgRx (with NgRx Data) - Helicopter View",
          "IMPORTANT - Recommended Software Versions",
          "NgRx The Complete Guide - Development Environment Setup",
          "The Typescript Jumpstart Ebook",
          "What is NgRx, Why State Management and what are the benefits?",
          "Installing NgRx and the NgRx DevTools"
        ],
        "NgRx Key Concepts - Actions and Reducers": [
          "Configuring an NgRx Feature Module using NgRx Schematics",
          "The Store Service API - Implementing the Login Screen",
          "Defining NgRx Actions using Action Creators",
          "Grouping Actions Together with Action Types",
          "NgRx Reducers - Step-by-Step Implementation",
          "Key Concepts Summary - NgRx Actions and Reducers In Action"
        ],
        "NgRx Key Concepts - Selectors and Effects": [
          "How to Query the Store Data - An Example",
          "NgRx Selectors - An In-Depth Explanation",
          "NgRx Feature Selectors - a Simple Explanation",
          "Implementing User Logout (Practice Lesson )",
          "Implementing a Router Authentication Guard (Practice Lesson)",
          "Introduction to NgRx Effects - What is a Side Effect?",
          "Understanding NgRx Effects - A Simple Example",
          "NgRx Effects - Step-by-Step Implementation",
          "Implementing the Logout Effect (Practice Lesson)"
        ],
        "NgRx Development Tools In Depth": [
          "Setting up NgRx Router Store and the Time-Travelling Debugger",
          "NgRx Runtime Checks - How do they work?",
          "NgRx Metareducers - Step-by-Step Implementation"
        ],
        "NgRx Entity In Depth": [
          "NgRx Entity - Section Kickoff",
          "NgRx Feature Design - Defining Actions First",
          "Loading NgRx Entity Data using a Router Resolver",
          "NgRx Effects - Fetching Data From the Backend",
          "Understanding the NgRx Entity Format",
          "Implementing Reducers Using the NgRx Entity Adapter",
          "NgRx Entity Selectors - Refactoring the Home Component",
          "Entity Adapter Configuration - Understanding sortComparer and selectId",
          "NgRx Data Fetching Solution - How to Load Data Only If Needed",
          "Optimistically Editing Entity Data - The Edit Course Dialog",
          "Optimistic Data Editing - Reducer Implementation and Demo",
          "Optimistic Data Editing - Saving Data in the background with an Effect"
        ],
        "NgRx Data In Depth": [
          "Why NgRx Data? New Section Introduction",
          "Setting Up NgRx Data in a Lazy Loaded Module",
          "How Does NgRx Data Work? Transparent Fetching Data In Action",
          "NgRx Custom Data Service - Fetching Data From the Backend",
          "Controlling Data Loading with the NgRx Data loaded flag",
          "Querying Store Data with NgRx Data and the entities$ Observable",
          "NgRx Data CRUD - Why use Optimistic Updates?",
          "NgRx Data CRUD - Why Pessimistic Data Creation?",
          "NgRx Data CRUD - Optimistic Delete Implementation",
          "Setting Up a new Entity - The Lesson Entity",
          "Implementing the Course Component Using NgRx Data",
          "Lessons Pagination using NgRx Data",
          "Switching an NgRx Application to OnPush Change Detection"
        ],
        "Course Conclusion": [
          "Bonus Lecture (Updated October 2025)",
          "Angular NgRx Course Conclusion"
        ]
      },
      "requirements": [
        "Just a little bit of Angular and Typescript"
      ],
      "description": "This course is a complete guide to the new NgRx Ecosystem, including NgRx Data, Store, Effects, Router Store, NgRx Entity, and DevTools, and comes with a running Github repo\nThis Course in a Nutshell\nState management is the number one topic to know when it comes to frontend architecture design choices. Why choose to do state management in a single page application, when to do it and why, what are the benefits, and what are tradeoffs?\nThese are all critical questions that we will address in this course, as we give you an extended guided tour of the NgRx Ecosystem.\nThe most popular state management library in the Angular space is NgRx, and for good reasons. The latest release of NgRx is probably one of the most important releases in the whole Angular ecosystem recently. Although backward compatible, it contains so much new functionality that it's almost a brand new state management library.\nUnder the hood, the core concepts of Actions, Reducers, Effects, Entities, and Selectors remain the same, but we have now a brand new API for managing these concepts in a much less verbose way. Also, we have the inclusion of NgRx Data, which is a new and very powerful way of managing Entity Data.\nActually, NgRx Data is a powerful abstraction layer on top of NgRx, that allows us to add state management to large parts of our application without having to write much code at all!\nCourse Overview\nIn this course, we are going to take a small existing application that is built without any state management. We are going to understand what are the consequences of not doing state management by identifying some problems that the application has in its initial form.\nThen we are going to start refactoring the application, and we are going to add state management to the application multiple screens step-by-step. We are going to start with the Authentication features of the application, and then we are going to move on to the entity data management part.\nWe are going to explain at length all the key concepts of NgRx: Actions, Reducers, Effects, and Selectors, and we are going to explain in detail the Store architecture itself and understand its benefits.\nThroughout the course we are going to introduce step-by-step and explain in detail the NgRx Store module, NgRx Effects, we are going to cover in detail NgRx Entity and the Entity format, we are going to install and do a guided tour of the NgRx Dev Tools, the NgRx Router Store, and the time-travelling debugger.\nWe are also going to learn how to make the most out of NgRx Data, and learn how to customize it in order to manage entity data with minimal application code. We will cover NgRx while keeping in mind best practices like good Action hygiene.\nTable of Contents\nThis course covers the following topics:\nIntroduction to State Management\nThe Store Architecture In Detail\nNgRx Key Concepts\nActions and Action Creators\nReducers\nNgRx Effects\nSelectors\nAdding Authentication to an NgRx Application\nNgRx Entity and the Entity Format\nNgRx DevTools\nNgRx Time Travelling Debugger\nNgRx Runtime checks and Store Immutability\nNgRx Router Store\nNgRx Data and Entity State Management\nNgRx Best Practices\nWhat Will You Learn In this Course?\nAt the end of this course, you will feel comfortable with the notions of state management and the centralized store solution in general\nYou will feel comfortable designing new Applications using NgRx, using a simple methodology and you will know in-depth the complete Ngrx library ecosystem: including the Ngrx Store, Effects, Entity, and NgRx Data libraries\nYou will know how to quickly scaffold parts of the solution using Ngrx Schematics, and how to set up the Ngrx DevTools from scratch, including the router integration",
      "target_audience": [
        "Angular Developers looking to learn in-depth the modern NgRx Ecosystem, including Ngrx Store, Effects, Router Store, Ngrx Entity, DevTools and Schematics!"
      ]
    },
    {
      "title": "Learn and Understand AngularJS",
      "url": "https://www.udemy.com/course/learn-angularjs/",
      "bio": "Master AngularJS and the Javascript concepts behind it, design custom directives, and build a single page application.",
      "objectives": [
        "Learn fundamental Javascript concepts that power AngularJS.",
        "Write quicker, better AngularJS code by discovering how AngularJS itself is built.",
        "Become fluent in AngularJS terminology, such as dependency injection, services, directives, transclusion, and more.",
        "Realize the power of dependency injection, and how AngularJS accomplishes it.",
        "Design custom directives and save time and energy with easily reusable components.",
        "Understand what a Single Page Application (SPA) is, and how they work.",
        "Build a Single Page Application (SPA) in AngularJS.",
        "Be the coder that explains AngularJS to everyone else, because you understand it better than anyone else.",
        "Get new free lectures during 2015, keep up with the development of AngularJS 2.0, and get a MASSIVE discount on a future AngularJS 2.0 course in 2016!"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Big Words and AngularJS",
          "Watching this Course in High Definition"
        ],
        "Model, View, Whatever...": [
          "The Problem(s) AngularJS is Trying to Solve",
          "Model, View, Whatever…",
          "HTML Aside: Custom Attributes",
          "Javascript Aside: The Global Namespace",
          "Downloading Source Code for This Course",
          "Modules, Apps, and Controllers"
        ],
        "Services and Dependency Injection": [
          "Javascript Aside: Dependency Injection",
          "The Scope Service",
          "Javascript Aside: Functions and Strings",
          "How Does Angular Do Dependency Injection?",
          "Getting Other Services",
          "Javascript Aside: Arrays and Functions",
          "Dependency Injection and Minification"
        ],
        "Data Binding and Directives": [
          "Scope and Interpolation",
          "Directives and Two Way Data Binding",
          "Javascript Aside: The Event Loop",
          "Watchers and the Digest Loop",
          "Common Directives",
          "Common Directives (Part 2)",
          "Javascript Aside: The XMLHTTPRequest Object",
          "External Data and $http"
        ],
        "Single Page Applications": [
          "Angular Aside: Multiple Controllers, Multiple Views",
          "HTML and Javascript Aside: Single Page Apps and the Hash",
          "Routing, Templates, and Controllers",
          "Routing Templates and Controller (Part 2)"
        ],
        "Custom Services": [
          "Javascript Aside: Singletons",
          "Creating a Service"
        ],
        "Custom Directives": [
          "HTML Aside: Reusable Components",
          "Javascript and Angular Aside: Variable Names and Normalization",
          "Angular and Normalized Attribute Names",
          "Creating a Directive",
          "Templates",
          "Scope (@, =, and other obtuse symbols)",
          "Scope (@, =, and other obtuse symbols) (Part 2)",
          "Scope (@, =, and other obtuse symbols) (Part 3)",
          "Repeated Directives",
          "Understanding 'Compile'",
          "Understanding 'Link'",
          "Understanding Transclusion"
        ],
        "Let's Build an App (in record time!)": [
          "A Weather Forecast SPA",
          "A Custom Service",
          "A Note Regarding API Usage",
          "Binding Data (Part 1)",
          "Binding Data (Part 2)",
          "A Custom Directive",
          "A Side Note"
        ],
        "BONUS Lectures": [
          "Improving our SPA's UX With ng-submit",
          "Designing Services in Large AngularJS Applications",
          "Nested Controllers, Clean Code, and 'Controller as' (an alternative to $scope)"
        ],
        "Getting Ready for AngularJS 2.0 in 2016": [
          "Update #1 - ES6, AtScript, and more",
          "Update #1 - Links"
        ]
      },
      "requirements": [
        "A browser and a text editor",
        "Basic HTML and Javascript knowledge"
      ],
      "description": "Includes information on the next version - AngularJS 2.0!\nKnowing AngularJS can get you a job or improve the one you have. It's a skill that will put you more in demand in the modern web development industry, and make your web software life easier, that's why it's so popular and backed by Google.\nThis course will get you up and running quickly, and teach you the core knowledge you need to deeply understand and build AngularJS applications - and we'll build a single page application along the way.\nWe'll design custom services, build custom directives, understand two-way binding, design a weather forecast app as a single page application, and lots more. Both starter and finished source code is provided as we go.\nReviews\n\"Best course I have ever seen\" \"Best intro to AngularJS on Udemy\" \"A fresh way of teaching AngularJS\" \"One of the best courses on Udemy that i took if not the best\" \"Best teacher I have had on the internet by far\" \"I...have taken lots of angular courses and I think this is the best one so far\" \"The best teaching style I've seen so far\"\nIf you are new to AngularJS, or if you've been working to learn it but sometimes feel like you still don't quite 'get it', this is the AngularJS course for you! To learn AngularJS you have to understand it.\nI've built the course that I would have wanted to take when I was learning AngularJS. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.\nIn this course you will:\nLearn how AngularJS works, covering subjects like directives, dependency injection, two way data binding, the digest loop, watchers, and more.\nLearn fundamental Javascript and HTML principles that are used by AngularJS, such as custom attributes, loosely typed arrays, the hash, and the event loop.\nCode custom services.\nDesign custom directives, understanding concepts like compile, link, and scope.\nBuild a single page application using AngularJS.\nKeep up with the latest on the next version of AngularJS 2.0!\nAngularJS doesn't have to be hard to learn. The biggest mistake most coding tutorials make is expecting someone to learn simply by imitating others' code. Real world situations are never exactly like the tutorial.\nI believe the best way to learn is to understand how a tool works and what it does for you, look at examples, and then try it yourself. That's how this course is built, with the goal to help you both learn and understand AngularJS.\nNote: In this course you'll also get downloadable source code. You will often be provided with 'starter' code, giving you the base for you to start writing your code, and 'finished' code to compare your code to.",
      "target_audience": [
        "Web developers and designers looking to learn AngularJS",
        "Those who have researched AngularJS but still find it hard to understand",
        "Developers and designers who have used jQuery but are tired of doing everything manually"
      ]
    },
    {
      "title": "Devtools Pro: Beginner to Expert w/ Chrome Developer Tools",
      "url": "https://www.udemy.com/course/master-google-chrome-developer-tools/",
      "bio": "The Complete 2017 Guide to Building Beautiful, Fast, and Bug Free Web Applications with Google Chrome DevTools",
      "objectives": [
        "Modify live webpages and test out new ideas quickly",
        "Quickly build and test scripts live without ever refreshing the browser",
        "Diagnose and fix problems with existing code",
        "Optimize loading, memory and performance issues"
      ],
      "course_content": {
        "A Tour of the Developer Tools": [
          "Introduction and Syllabus",
          "Three ways to open Chrome Developer Tools",
          "Console Commands and Multiline Statements",
          "Sources, Network, and Other Panels",
          "Inspect and Style a Page Live",
          "How to View Your Changes"
        ],
        "Setting Up a Local Server": [
          "Static Python SimpleServer",
          "Windows Server Setup"
        ],
        "Snippets & Alternate Ways to Understand Your Changes": [
          "Introducing Snippets",
          "Applying Changes",
          "CSS History",
          "Experimental Chrome Features & Workspaces"
        ],
        "GUI Style Editors": [
          "The Various Style Editors",
          "Animations Editor"
        ],
        "Basic Javascript Debugging": [
          "Using the Debugger in the Sources Panel",
          "Keyboard Shortcuts for Debugging",
          "The Call Stack"
        ],
        "Navigating & Applications Tab": [
          "Finding Stuff",
          "Cookies and Local Storage with the Application Tab"
        ],
        "Console API & Shortcuts": [
          "Console Multiline and Asserts",
          "Miscellaneous Console Functions",
          "Console Profile & Dollar Shortcuts",
          "Console Styling"
        ],
        "Breakpoints": [
          "Types of Breakpoints",
          "Line of Code Breakpoints",
          "Conditional Breakpoints",
          "DOM and Network Breakpoints",
          "Event and Exception Breakpoints"
        ],
        "Network, Page Speed and Security": [
          "Downloading From Codepen.io",
          "The Network Panel",
          "Hacking Reservations on Yelp",
          "Improve page load speed with Audits & Lighthouse",
          "Security and HTTPS with NGrok"
        ],
        "Client Side Performance Monitoring": [
          "Introducing a Client Performance Example",
          "Task Manager, FPS meter, and Rendering Tab",
          "Performance / Timeline Tab",
          "Detecting Memory Leaks"
        ]
      },
      "requirements": [
        "You have basic knowledge of HTML, CSS and/or Javascript"
      ],
      "description": "Do you want to become an expert web developer?\nI've worked with tons of different platforms from PC to Playstation, and nothing beats the power of Google Chrome Developer Tools. Let's take advantage of that.\nThis course is the comprehensive guide to DevTools. We start with simple styling examples, and use tools like the colorpicker and box shadow editor to design our pages. But we move quickly to advanced topics like using the Audits panel to understand slow page performance, and the memory panel to understand why our app might be leaking memory.\nTestimonials:\nI learned a lot of things I didn't know about although I've used Devtools for many years. -Bernard Niset\nMy first Udemy course, but I enjoyed it thoroughly. I have some prior experience with chrome dev tools, but there were still some tips I will be taking with me from this course - Stephen Wong\nThe instructor is clear and concise and the course is loaded with information. There are even some valuable nuggets for experienced developers! - Tom Fitch\nHere's a sample of what you'll be able to achieve after taking this class:\nAdd advanced styling with built-in editors like the animations panel and the transitions editor.\nUsing six different breakpoint techniques, you'll be able to understand and debug any piece of javascript code.\nAnalyze network calls, and even hack the dinner reservation system on Yelp.\nSpeed up your page load speeds with Audits and Lighthouse to make your site blazingly fast.\nProfile and fix rendering, CPU and memory bottlenecks.\nEvery minute of this course provides valuable information and there is minimal repetition and typing. The course was built in 2017 with a prerelease version of Chrome and even demonstrates the use of experimental features such as Workspaces 2.0.\nFor the beginners, I start slow, but work quickly towards advanced usage, and for the experts, I've made sure to sprinkle in original techniques to improve your web pages that can't be found anywhere else.",
      "target_audience": [
        "Anyone with an interest in taking their web development skills to the next level.",
        "Developers / Programmers / Software Engineers",
        "UI/UX Designers",
        "Artists",
        "Project / Product Managers"
      ]
    },
    {
      "title": "Git and GitHub - The Complete Guide [2024]",
      "url": "https://www.udemy.com/course/git-and-github-the-complete-guide/",
      "bio": "Learn the fundamentals of Git and GitHub as we will learn Git and GitHub in under 4 hours with real world exposure.",
      "objectives": [
        "Developers looking to get up and running with Git and GitHub",
        "Learn Git fundamentals",
        "Learn GitHub fundamentals",
        "Use GitHub with Visual Studio Editor"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Course Rating",
          "Free PowerPoint Slides",
          "Why do we need version control?",
          "Distributed vs Central Version Control System",
          "Installing Git",
          "Create GitHub account",
          "Configure Git on local"
        ],
        "Git fundamentals": [
          "Git Init",
          "Demo - Git Init",
          "Setup Visual Studio Code",
          "Git Clone",
          "Git Stage",
          "Git Commit",
          "Demo - First git commit",
          "Demo - Git commit (more options)",
          "Demo - Git Log",
          "Git Push",
          "Demo - Push Files to GitHub Repository",
          "Demo - Playing with user config and more commits",
          "Git Pull",
          "Demo - Pull changes from GitHub to Local",
          "Git Fetch",
          "Git Basic Flow",
          "Git Sync",
          "Quiz Time"
        ],
        "Git Fundamentals - Branches": [
          "What is head?",
          "Branch and Merge",
          "Branch's and Flow",
          "Demo - Create First Branch",
          "Demo - Delete and Rename Branch",
          "Demo - Merge Branch",
          "Demo - Create and Checkout Branch",
          "Demo - Switch Command",
          "Merge Conflicts",
          "Demo - Merge Conflicts",
          "What is Fast forward?",
          "Quiz time"
        ],
        "GitHub Fundamentals": [
          "Setup New Repository",
          "Modify last commit (danger)",
          "Git Checkout",
          "What is Detached Head?",
          "Git Restore",
          "Git Reset",
          "Git Revert",
          "Git Ignore",
          "Demo - Git Ignore",
          "Last Resort",
          "Quiz time"
        ],
        "GitHub Fundamentals - Part 2": [
          "Git Tags",
          "Demo - Git Tags",
          "Demo - Git Fetch",
          "Git Stash",
          "Demo - Git Stash",
          "Pull Request in GitHub",
          "Merge Conflict in GitHub",
          "Forking Project",
          "Collaborate to Open Source Project",
          "Quiz time"
        ],
        "GitHub and Visual Studio": [
          "Create Git repository",
          "Main tabs in visual studio",
          "Clone Project",
          "Commit and Push Changes",
          "Pull and Fetch Changes",
          "Stash",
          "Create Branch",
          "Merge Conflicts",
          "Clean up",
          "Pull Requests",
          "View and compare commits",
          "File History"
        ],
        "Bonus - .NET MVC Course": [
          ".NET MVC Free Content"
        ],
        "Introduction (.NET MVC)": [
          "Introduction",
          "Dot Net Core Roadmap",
          ".NET 8 Tools",
          "Project Resources",
          "Prerequisites",
          "What is dependency injection?",
          "Course Overview",
          "Create Project",
          "Project File",
          "Launch Settings",
          "wwwroot and appsettings",
          "Program File",
          "MVC Architecture",
          "Routing Overview",
          "Routing in Action",
          "Default Views"
        ],
        "Category": [
          "Category Model",
          "2 Data Annotations",
          "3 1 Nuget Packages for Entity Framework Core",
          "3 Connection String",
          "4 Setup ApplicationDbContext",
          "5 Create Database",
          "6 Create Category Table",
          "7 Add Category Controller",
          "8 Add Category Link in Header",
          "8 Seed Category Table",
          "10 Get all Categories",
          "11 Hot Reload",
          "12 Display all Categories",
          "13 Bootswatch Theme and Bootstrap Icons",
          "14 Design Category List Page",
          "15 Create Category UI",
          "16 Input Tag Helpers",
          "17 Create Category",
          "18 Server Side Validations",
          "19 Custom Validations",
          "20 Asp Validation Summary",
          "21 Client Side Validation",
          "22 Edit and Delete Buttons",
          "23 Get Category Details to Edit",
          "24 Update Category",
          "25 Update Category in Action",
          "26 Get and Post Action for Delete Category",
          "27 Delete Category in Action",
          "28 TempData",
          "29 Partial Views",
          "30 Toastr Notification"
        ]
      },
      "requirements": [
        "No prior knowledge of Git or GitHub are needed",
        "Create a GitHub account ( we will do that in the course)"
      ],
      "description": "Source control is essential for any developer in todays world. One term that you hear when anyone talks about source control is Git.\nIn todays world where time is limited, this course will teach you basics of Git and most commonly used commands that you will use 95% of the time! The only regret after taking course will be why did you not take this course sooner!\nGitHub is the most commonly used service when it comes to source control and we will be exploring that and later on we will see how we can manage GitHub using the UI provided by Visual Studio Editor.\n\n\nWhy this course?\nThere are many courses which will walk you through Git and Github, but this course has focus on core fundamentals which are critical in todays programming world. We will not waste time on items that developers use extremely rarely! We would rather learn everything that developers would use 95% of the time, in 4 hours!\nThis course is always updated when there are new changes and finally this course will show real world use case using Visual Studio UI GitHub editor as well.  So not only you will learn fundamentals using command line but also using UI of Visual Studio.\nThis course is designed in a way that you can master Git over a weekend or less!",
      "target_audience": [
        "Developers looking to get up and running with Git and GitHub in 4 hours!"
      ]
    },
    {
      "title": "Salesforce Developer Training with real-time project Part 1",
      "url": "https://www.udemy.com/course/salesforce-apex-rest-webservice-with-custom-app-development/",
      "bio": "Salesforce Development: Learn apex, Visualforce and REST Webservices with this real-time project",
      "objectives": [
        "Integrate Salesforce application with external applications",
        "Create there own custom application using APEX",
        "Expose there apex methods as SOAP webservices",
        "Able to answer any interview questions related to APex and webservices",
        "Create controller extension,Trigger, Apex Class, Apex Test class,Custom controller, Restful webservices and SOAP webservices"
      ],
      "course_content": {
        "Introduction to the course": [
          "Introduction to the course",
          "Connect with me On LinkedIn",
          "Subscribe to my YouTube Channel",
          "Post a Review on the course"
        ],
        "Salesforce Conference Management Application from scratch": [
          "Overview of the Conference Management App",
          "Creating a Developer's Account",
          "Review update from udemy",
          "Create Session and Speaker object with custom fields for Conference Mngmt App",
          "Salesforce APIs- What are these and When to use them?",
          "What is a junction Object in salesforce and why we need in our Conference App",
          "Create the Session_Speaker Junction Object",
          "How to create a junction object in salesforce??",
          "Creating tabs for Session and Speaker object",
          "How to configure the Lookup Dialog and related list elements for session object?",
          "What is Apex and why we need Apex??",
          "Create an Apex class to send email to the speaker enrolled to a session",
          "WHat are SOQL statements in APEX and how to write SOQL statements??",
          "Executing SOQL statements to retrieve data from Session and Speakerobject",
          "Difference between DML statements and Database methods,when to choose which one?",
          "Creating a trigger to send Email and check for Double booking in our Application",
          "Test class to test the double booking for the session Speaker object",
          "Creating custom visualforce page for Speaker object",
          "Uploading the Speaker Photo using controller extension"
        ],
        "Using JavaScript in Visualforce Pages": [
          "Creating the Hotel object to store the info about different conference hotels",
          "Use the google Map Api to display the hotel location on the Map"
        ],
        "REST Web Services": [
          "Introduction about the Rest web services",
          "What is JSON and XML ??",
          "What is workbench and how to use workbench??",
          "Get the code from Github",
          "Get the Cases associated with the Account using GET request",
          "Delete the cases which are in Closed status using @HttpDelete",
          "Create a new Account object using @httpPost method",
          "Assignment 1: Creating a REST resource for Contact sObject with Get and POST",
          "Update the existing Case object using the @HttpPatch annotation",
          "RESTful Quiz"
        ],
        "Complex Rest API Call related to Account object": [
          "Rest ApI call to retrieve the Account by Id",
          "How to wrap the response back to the client along with Http Status code.",
          "Search the Account by Account Name",
          "Difference between @httpPost and @HttpPut method",
          "Send the Account object in the request",
          "Creating a list of Accounts in Salesforce databases using @HttpPost",
          "Creating list of contacts associated with the Account object",
          "Assignment",
          "How to Write a Test Class in Apex ?",
          "Assignment",
          "How to Create a Trigger, Apex class and Test Class ???",
          "Exposing Apex Methods as SOAP Web Services"
        ],
        "Interview Question And Answers": [
          "Interview Question And Answers"
        ]
      },
      "requirements": [
        "They should have basic understanding of Object oriented concepts",
        "Basic of Salesforce platform"
      ],
      "description": "Salesforce Developer Training with Real-Time Project – Master Web Services & Build a Complete Application\nStruggling to Understand Web Services in Salesforce? Tired of Theory-Heavy Courses with No Real-World Application?\nMany aspiring Salesforce developers learn about REST and SOAP web services through static presentations and documentation, only to find themselves lost when it comes to actually implementing them in real-world applications. Without hands-on experience, it’s hard to truly understand how things work in a live Salesforce environment.\nBut what if you could go beyond theory and actually build a real-world Salesforce application from start to finish?\nImagine not just learning web services, but actually integrating them into a fully functional Salesforce project—one that you can showcase on your resume and discuss in interviews with confidence.\nThis course gives you that opportunity.\nWhy This Course?\nUnlike other courses that focus only on theory, this course is designed to give you real-world development experience by guiding you through the process of building a real-time Salesforce application.\nComplete Web Services Training – Master both REST and SOAP APIs in Salesforce with step-by-step guidance.\nHands-On Project – Build a fully functional real-time Salesforce application that you can showcase on your resume.\nResume & Interview Boost – Gain the skills that hiring managers look for and be ready to confidently talk about real-world development in interviews.\nBeyond PowerPoint – No more passive learning—write code, solve real problems, and build actual applications.\nIndustry-Relevant Skills – Learn how real-world Salesforce applications are built, rather than just memorizing concepts.\nWho Is This Course For?\nAspiring Salesforce Developers looking for hands-on experience\nSalesforce Admins who want to transition into development\nDevelopers from other backgrounds wanting to master Salesforce integration\nAnyone preparing for Salesforce technical interviews\nWhat You’ll Achieve\nBy the end of this course, you will:\nBuild a complete real-time Salesforce application from scratch\nMaster REST and SOAP web services in Salesforce\nUnderstand integration best practices and how to handle real-world challenges\nEnhance your resume with a project that proves your skills\nGain confidence to apply for Salesforce development roles and clear technical interviews\nBefore vs. After – Your Transformation\nBefore this course, you may feel overwhelmed by web services, unsure of how to apply what you’ve learned, and lack real-world experience.\nAfter this course, you will have hands-on development experience, a real-world project to showcase, and the confidence to tackle Salesforce development challenges in any professional setting.\nThis isn’t just a course—it’s your career accelerator.\nAre you ready to go beyond theory and build real-world Salesforce applications?\nEnroll Now & Start Your Journey to Becoming a Skilled Salesforce Developer",
      "target_audience": [
        "This course is for Salesforce Admin, Developers who want to dive deep into Salesforce world",
        "Anyone who want to learn about start and finish of real time application",
        "Anyone who wants to add a new salesforce project to their resume"
      ]
    },
    {
      "title": "Java Spring Boot E-Commerce Ultimate Course",
      "url": "https://www.udemy.com/course/spring-boot-e-commerce-ultimate/",
      "bio": "Become Job-ready Java Spring Developer: Learn to Build Real-world Shopping Website with Java and Spring framework",
      "objectives": [
        "Develop a complete shopping website using Java, Spring Boot, Thymeleaf, Bootstrap, jQuery and MySQL database",
        "Code the Admin application for managing users, categories, brands, products, customers, orders, sales report...",
        "Code the Shopping application allowing customers to browse products and place orders",
        "Code shopping cart features and payment via PayPal and credit cards",
        "Learn how to use Spring Data JPA with Hibernate for the data access layer",
        "Learn how to use Spring Security for authentication and role-based authorization",
        "Learn how to use Thymeleaf template engine for creating dynamic view pages",
        "Learn how to use Bootstrap and jQuery for creating responsive, mobile-friendly web pages",
        "Learn how to use Spring RESTful Webservices in conjunction with jQuery on the client side",
        "Learn how to use PayPal Checkout API for payment integration",
        "Learn how to use JUnit, Spring Test, AssertJ and Mockito for unit tests and integration tests",
        "Learn how to deploy the application on Heroku cloud platform with file upload on Amazon S3",
        "Learn how to use Google Chart for drawing charts in sales report",
        "Learn how to use Spring OAuth for single sign on with Facebook and Google",
        "Learn how to use Spring Mail for sending emails for customer registration and place order confirmation",
        "Upgrade Code to use Spring Boot 3.2.0",
        "Upgrade Code to use Spring Security 6.2.0"
      ],
      "course_content": {},
      "requirements": [
        "Beginner Java knowledge",
        "Know fundamentals of Java web development with Servlet, Spring and Hibernate frameworks",
        "Know basic web development with HTML, Javascript, Bootstrap and jQuery",
        "Know core database concepts with MySQL"
      ],
      "description": "NOTES: This course has been updated to Java 21, Spring Boot 3.2.0 and Spring Security 6.2.0.\n\n\nWelcome to \"Java Spring Boot E-Commerce Ultimate Course\" instructed by me, Nam Ha Minh - a certified Java developer who have been programming with Java technologies for more than 19 years.\nI'm very glad that you have found the most sophisticated and comprehensive course ever on web development with Java, Spring framework, Spring Boot and related technologies. Let me explain why this course is perfect for those who want to master practical, job-ready programming skills needed to be a professional Java developer and pursuit a career in software development.\n\n\n\"Really wonderful course for learn how to develop complete web application with Java Spring Boot and to get good ECommerce domain knowledge. Glad I found this course\" - said student Arunkumar.\n\n\nBy learning this course, you will gain Full-stack development experience in programming a real-life shopping web application using the latest technologies such as Java, Spring Boot, Hibernate, Thymeleaf, Bootstrap, jQuery, HTML, RESTful Webservices... putting all these pieces together for building professional applications beloved by the end users, and bring revenue to businesses.\nThe modules you will learn to build in the Admin application are: Users, Categories, Brands, Products, Customers, Shipping, Orders, Sales Report, Reviews, Questions, Settings.\nThe modules you will learn to build in the Shopping application are: categories listing, product details, search products, shopping cart, checkout, manage orders, tracking orders, customer registration.\nYou also learn how to deploy the e-commerce webapp on Heroku cloud platform, with user's uploaded files stored on Amazon S3 server.\n\n\n\"This is one of the best, if not the best course on Udemy. Nam is a great teacher and won't hesitate to share his enormous knowledge. Highly recommended!\" - student Damjan Bozhinoski\n\n\nYou will be a master of the following technologies by the end of this course:\n- Spring framework development with Spring Boot\n- Spring Data JPA and Hibernate framework\n- Spring Security for authentication and authorization\n- Spring OAuth for social login with Facebook and Google\n- Spring Mail for sending customer registration confirmation and order confirmation\n- PayPal Checkout API for capturing payment from customer\n- Google Chart API for drawing charts of sales report\n- JUnit, AssertJ and Mockito in unit testing\n- Spring RESTful Webservices\n- Bootstrap 4, HTML5 and jQuery 3\n- Amazon S3 APIs\n- Deployment on Heroku (AWS)\nBy completing this course, I'm sure that you will gain practical, hands-on programming experience and become a professional Java web developer. Also with job-ready skills earned, I'm sure that you will land on a development job which you deserve - like many students shared with me before. Below are some of them:\n\"I just wanted to let you know that I got the job and one of the reasons is you.\" - student Rajesh Kumar\n\n\n\"I just want to say thank you. Your Spring Boot tutorial is just amazing. I was struggling to find a developer job 4 months ago, so I decided to enroll your course on Udemy. After I finished the course, now I got a job. I want to share the happiness with you. I couldn't do it without you. Thank you so much!\" - student Johnny Liang.",
      "target_audience": [
        "Java developers who want to master Spring framework and Spring Boot",
        "beginner Java developers who want to learn using Spring framework for developing real-life applications",
        "those who want to learn programming a complete ecommerce web application",
        "those who want to become professional Java and Spring developers",
        "those who want to pursuit a job in software development"
      ]
    },
    {
      "title": "React, NodeJS, Express & MongoDB - The MERN Fullstack Guide",
      "url": "https://www.udemy.com/course/react-nodejs-express-mongodb-the-mern-fullstack-guide/",
      "bio": "Build fullstack React.js applications with Node.js, Express.js & MongoDB (MERN) with this project-focused course.",
      "objectives": [
        "Learn how to connect ReactJS with NodeJS, Express & MongoDB",
        "Build an entire project from scratch!",
        "Refresh the basics about ReactJS, NodeJS, Express and MongoDB",
        "Learn how to implement Authentication & Authorization",
        "Add File Upload to ReactJS + Node/ Express Applications"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge about ReactJS is required",
        "ReactJS Hooks knowledge is recommended",
        "Basic knowledge about Node, Express and MongoDB is recommended but not a must-have",
        "NO expert React knowledge or MERN knowledge is required"
      ],
      "description": "We built the bestselling React course on Udemy - this course now allows you to take your React knowledge to the next level and build fullstack web apps based on React, NodeJS, MongoDB and Express!\nBuilding fullstack applications (i.e. frontend + backend) with the MERN stack is very popular - in this course, you will learn it from scratch at the example of a complete project!\nMERN stands for MongoDB, Express.js, React.js and Node.js - and combined, these four technologies allow you to build amazing web applications.\nIn this course, we'll build an entire project and you will learn how these different technologies work together step by step. We'll first have a look at all the individual building blocks, so that we then can also combine them all into one amazing application by the end of the course.\nThis course also doesn't stop after the basics - instead, you'll also learn how to add file upload, authentication, authorization and how to deploy your application in different ways to different hosting services.\nThis course is taught by two instructors - Max (React.js, Node/ Express) and Manuel (MongoDB) who have years of experience of working with these technologies and teaching them to other people. We took and combined our experiences to deliver you the best possible MERN stack course you can find out there.\nIn detail, this course offers:\nBrief refreshers on the core technologies (React, Node, Express, MongoDB)\nProject sections for each technology where the theoretic knowledge is applied\nDetailed theory about the MERN stack and the different ways of combining the technologies\nA complete course project where all the technologies come together into one application\nFile (image) upload in both React.js (sending the file) and Node/ Express (receiving the file)\nUser authentication (signup + login)\nUser authorization (controlling access to certain resources)\nDetailed deployment instructions - including different ways of deploying the application\nTons of quizzes and extra resources!\nBy the end of this course, you'll feel comfortable building your own MERN stack applications and you can build up on all the knowledge taught throughout this course to dive into your own projects and use-cases.\nWhat are the requirements for taking this course?\nNO prior MERN stack knowledge is required\nBasic React.js knowledge is strongly recommended - a refresher is provided as part of the course but this course is NOT meant to teach React from the ground up\nBasic Node + Express knowledge is recommended but not a must-have\nAs always, this course comes with a 30-day money-back guarantee.\nWe'd love to dive into this course together with you!",
      "target_audience": [
        "Developers who got basic React knowledge and now want to build a fullstack app",
        "Advanced React developers who are interested in connecting React apps to Node/ Express",
        "Node/ Express developers who want to learn how to add a modern frontend to their backend"
      ]
    },
    {
      "title": "Introduction to Web Accessibility WCAG 2.2",
      "url": "https://www.udemy.com/course/introduction-to-web-accessibility-wcag21/",
      "bio": "Learn web accessibility and apply best practice WCAG 2.2 accessibility patterns and techniques to your websites",
      "objectives": [
        "Master the fundamentals of WCAG 2.2, including the 3 levels of conformance, the POUR concepts and sufficient techniques",
        "Create solid document hierarchies with HTML5 landmark regions, headings, logical tab order sequences and semantic elements",
        "Build accessible content with descriptive images, understand how to determine accessible colours and layout tabular data with datatables",
        "Create accessible forms that include error and validation patterns using best practice WCAG 2.1 techniques",
        "Gain confidence and understanding of what it means to build an accessible website"
      ],
      "course_content": {
        "Welcome To The Course": [
          "Introduction",
          "Course Outline",
          "Course Preparation"
        ],
        "Web Accessibility Overview": [
          "Introduction To Web Accessibility",
          "The WCAG 2.1 Principles",
          "The POUR Principles",
          "POUR Principles Links",
          "The 3 Levels Of Conformance",
          "The 3 Levels Of Conformance Links",
          "How To Assess Web Accessibility",
          "How To Assess Web Accessibility Links",
          "Types Of Sufficient Techniques",
          "Recap What Is Web Accessibility",
          "Key Takeaways For Web Accessibility"
        ],
        "Building The Structure Of A Page": [
          "Why Page Structure Is Important",
          "Create Descriptive Page Titles",
          "Create Descriptive Page Titles Link",
          "Recap Create Descriptive Page Titles",
          "Set The Page Language",
          "Set The Page Language Links",
          "Recap Set The Page Language",
          "Bypass Repeating Content",
          "Bypass Repeating Content Link",
          "Recap Bypass Repeating Content",
          "Create Logical Headings",
          "Recap Create Logical Headings",
          "Add HTML5 Landmark Regions",
          "Recap Add HTML5 Landmark Regions",
          "Avoid An Artificial Tabindex",
          "Recap Avoid An Artificial Tabindex",
          "Key Takeaways For Building The Structure Of A Page",
          "Activity Building The Page Structure"
        ],
        "Adding Page Level Content": [
          "What Is Page Level Content",
          "Choose Accessible Colours",
          "Recap Choose Accessible Colours",
          "Decorative & Descriptive Images",
          "Recap Decorative & Descriptive Images",
          "Use Semantic Elements",
          "Recap Use Semantic Elements",
          "Add Keyboard And Mouse Focus",
          "Recap Add Keyboard And Mouse Focus",
          "Write Clear Link Text",
          "Recap Write Clear Link Text",
          "Group Related Links",
          "Recap Group Related Links",
          "Use Datatables For Tabular Data",
          "Recap Use Datatables For Tabular Data",
          "Key Takeaways For Adding Page Level Content",
          "Activity Adding Page Level Content"
        ],
        "Structuring A Web Form": [
          "Why Is Structuring A Web Form Important",
          "Navigation In A Form",
          "Add Labels To Controls",
          "Recap Add Labels To Controls",
          "Identify Data Formats",
          "Recap Identify Data Formats",
          "Highlight Required Input",
          "Recap Highlight Required Input",
          "Group Related Controls",
          "Recap Group Related Controls",
          "Handle Errors",
          "Use Inline Errors",
          "Recap Use Inline Errors",
          "Suggest Corrections",
          "Recap Suggest Corrections",
          "Use A Validation Summary",
          "Recap Use A Validation Summary",
          "Key Takeaways For Structuring a Web Form",
          "Activity Structuring a Web Form"
        ],
        "Conclusion": [
          "Recap Of What You Have Learnt",
          "Be Involved In The Conversation Online",
          "External Twitter Links",
          "Books To Get About Accessibility",
          "Books To Get About Accessibility Links",
          "Websites And Blogs To Read More About Accessibility",
          "Websites And Blogs To Read More About Accessibility Links",
          "Reach Out To Me",
          "Reach Out To Me Links",
          "Feedback Survey And Teacher Evaluation",
          "Feedback Survey And Teacher Evaluation Link"
        ]
      },
      "requirements": [
        "You need to be comfortable with writing HTML and CSS in a text editor",
        "A mobile phone screen may be fine for viewing this course, but you'll want something larger for the hands on exercises",
        "You will need either a desktop or laptop computer",
        "We recommend using Google Chrome or Mozilla Firefox and ensure they're up-to-date but Microsoft Edge is acceptable as well",
        "This course is hands-on and interactive, you need to be willing to do the lecture quizzes and end of module activities"
      ],
      "description": "Note. Our course material is continually evolving. This course will be updated for free throughout 2025 and is the one stop shop for everything you need to begin building accessible websites. This is the best online web accessibility course available at a very affordable price.\n\n\nOctober 2025 update The questions are being updated to make them a bit tougher and more thought-provoking not just what you remember, but how you apply it. Expect more \"why\" and \"how\" questions that make you think whilst learning.\n\n\nThis course is designed to teach you the fundamentals of web accessibility and how to apply those techniques to websites that you create. The modules are organised into categories grouping accessibility techniques to the relevant parts of a web page.\nEach lecture explains one accessibility concept only and after every lecture there is a quiz to complete followed by the end of module activity applying all you've learnt onto a demo website. Most lectures are approximately 5 minutes long with no lecture being over 10 minutes in length.\nYou will learn:\nAn overview of web accessibility guidelines and WCAG 2.2\nBuild the structure of a page using a skeleton of accessibility support\nCreate content in an accessible way\nImprove the structure of web forms using accessibility best practice error handling and validation patterns\nApply accessibility techniques to a demo website hosted on GitHub\nThis course gives you practical reusable patterns and best practice accessibility examples to apply to your projects. Web accessibility is fast becoming a required skill when developing for the web. The accessibility guidelines can be difficult to understand and challenging to apply. It's often left up to developers to try and do their best making content accessible by attempting to read and understand very complex technical guidelines.\nEmployers are looking for developers with an edge, web accessibility is that edge. Understanding how people with disabilities navigate a website and how you can make the experience better will set you apart from other developers. If you work in website or software development, UX or UI design in any frontend or backend technology this course is for you.\nWeb accessibility is more important than ever with more and more services are moving online. Unless these services are accessible the web can become a huge barrier for people with disabilities rather than a great opportunity to help with independent living.",
      "target_audience": [
        "Developers who want to get hands-on and really understand and become familiar with web accessibility and common accessibility patterns for the websites and web applications they build.",
        "UI designers who need to understand the accessibility constraints for building web UI's.",
        "Software architects and business analysts who want to build in accessibility requirements early in the decision making process."
      ]
    },
    {
      "title": "Build Responsive Website Using HTML5, CSS3, JS And Bootstrap",
      "url": "https://www.udemy.com/course/build-responsive-website-using-html5-css3-js-and-bootstrap/",
      "bio": "Learn HTML5, CSS3, JavaScript, jQuery and Bootstrap framework by building a modern looking responsive website.",
      "objectives": [
        "At the end of this course, You will have a great skills set like HTML5, CSS3, JavaScript, JQuery and Bootstrap Framwork.",
        "You will learn about web design guidelines which you can apply to real world web projects.",
        "You will see, the complete web development process from start to finish project.",
        "You will be able to build modern looking website which will look great on all the small & wide screens.",
        "You will learn about media queries and will be able to make website perfect for responsive design.",
        "You will get complete code for real responsive website"
      ],
      "course_content": {
        "Introduction To Course": [
          "Welcome & Getting Started!",
          "View Project Demo",
          "IMPORTANT NOTES!",
          "Download Resources File"
        ],
        "Web Design Guidelines": [
          "What is Web Design?",
          "What is Wireframing?",
          "What is UI & UX?",
          "Web Typogrphy",
          "Web Colors",
          "Icons for Web",
          "Images for Web",
          "Whitespacing for Web Design",
          "Getting Inspiration for Web Design",
          "Web Design Quiz",
          "Conclusion To Web Design Guidelines"
        ],
        "Getting Started With HTML": [
          "Choosing Code Editor",
          "What Is HTML?",
          "Basic HTML Structure",
          "Coding Small Business Page With HTML5",
          "Download Code",
          "HTML Quiz",
          "Conclusion To Getting Started With HTML"
        ],
        "Styling With CSS": [
          "Google Chrome Developer Tools",
          "What is CSS?",
          "CSS Box Model",
          "Class & ID Selectors",
          "Add CSS To Small Business Page",
          "Download Code",
          "CSS Quiz",
          "Conclusion To Styling With CSS"
        ],
        "Working With JavaScript & JQuery": [
          "Basic JavaScript",
          "Getting Sarted With JQuery",
          "Download Code",
          "JavaScript & JQuery Quiz",
          "Conclusion to Working With JavaScript & jQuery"
        ],
        "Bootstrap Responsive Framework": [
          "Bootstrap Framework Version",
          "What Is Bootstrap Framework?",
          "Bootstrap Grid System",
          "Add Bootstrap Framework To Small Business Page",
          "Download Code",
          "Bootstrap Framework Quiz",
          "Conclusion To Bootstrap Responsive Framework"
        ],
        "Building Real Responsive Website": [
          "Introudction To Build Responsive Website",
          "Important Note Before You Go Ahead",
          "Setting Up Project Folder",
          "Building Header - Part 01",
          "Building Header - Part 02",
          "Building About Us - Part 01",
          "Building About Us - Part 02",
          "Building Testimonials - Part 01",
          "Building Testimonials - Part 02",
          "Building Features - Part 01",
          "Building Features - Part 02",
          "Building Purchase Now - Part 01",
          "Building Purchase Now - Part 02",
          "Building Screens",
          "Building Counter - Part 01",
          "Building Counter - Part 02",
          "Building Download Now - Part 01",
          "Building Download Now - Part 02",
          "Building Contact Us - Part 01",
          "Building Contact Us - Part 02",
          "Building Footer"
        ],
        "Adding JavaScript & JQuery Effects": [
          "Building Navigation - Part 01",
          "Building Navigation - Part 02",
          "Building Navigation - Part 03",
          "Add Auto Padding To Header",
          "Add Slider To Screens",
          "Add Counters",
          "Add Animation - Part 01",
          "Add Animation - Part 02"
        ],
        "Make Website Perfect For Responsive Layout": [
          "Media Queries & Making Website Perfect For Responsive Layout"
        ],
        "Optimization, Validation And Testing of Website": [
          "Markup Validation",
          "Images Optimization",
          "Add Basic SEO",
          "Cross Browser Testing"
        ]
      },
      "requirements": [
        "A Text Editor"
      ],
      "description": "*** Over 98,000+ Students Are Already Taking This course ***\n*** BEST REVIEWED course on Udemy ***\nAre looking to learn Web Design & Web Development Skills? Then this is the RIGHT course For you! The very first things you need to learn HTML5, CSS3, JavaScript and JQuery to become a Web Developer and off-course some Web Design Guidelines.  This course will exactly teach you all these New Skills to become a good Web Developer. This course also teach how to use Bootstrap Framework which is the most Popular Responsive Framework on the internet. In this course, you will also learn Web Design Guidelines, which you can apply to Real World Websites.\nThis course will first give basic understanding of HTML5, CSS3, JavaScript, JQuery and Bootstrap Framework then by combining all these skills, you will  Build a Modern Looking Responsive Website which will look Great on all the Small and Wide Screens.\nStudent's Reviews:\nExcellent, excellent course! You can follow through the whole process of modern website creation! From wireframing and user experience design, through important technologies (like HTML5, CSS3, Bootstrap, Javascript, jQuery) to some SEO, you will learn a lot! I enrolled into this course, because I already knew some HTML and CSS, but have never put together a whole site. I've got practical advice and the guidance I was looking for. Thanks! - Peter\nAlmost Perfect explanation about html css js and boostrap and responsive design with different layouts am enjoying this course and waiting for more courses!!  Thank you Author - Imran Sufi\nEnroll now and I'll see you inside the classroom!",
      "target_audience": [
        "This course is for anyone who want to learn web design and web development skills. This course will teach you some web design guideline and you will learn HTML5, CSS3, JS, jQuery & Bootstrap at ground level."
      ]
    },
    {
      "title": "Hello React - React Training for JavaScript Beginners",
      "url": "https://www.udemy.com/course/hello-react/",
      "bio": "The Simplest Way to Learn React for Beginners - Line by Line with No Steps Skipped",
      "objectives": [
        "Know the fundamentals of ReactJS",
        "Unidirectional Dataflow in React",
        "JSX",
        "ES6 Classes",
        "Functional Components",
        "State",
        "Props",
        "Map",
        "Filter",
        "JavaScript",
        "Ajax Requests",
        "Lifecycle Methods"
      ],
      "course_content": {
        "React Environment": [
          "Getting Started From Scratch",
          "Course Code",
          "Challenge - Using JSX",
          "Code Refactor",
          "Get Out of Tutorial Hell",
          "Rendering One Element",
          "Outputting Multiple Elements",
          "Babel and React",
          "How to Land Your First Developer Job"
        ],
        "Components in React": [
          "Creating Stateless Functional Components",
          "Stateless Functional Components Practice",
          "Creating Class Components",
          "Class Components Practice",
          "Dealing with Time Management and Impostor Syndrome"
        ],
        "Styling in React": [
          "Styling Stateless Functional Components",
          "Styling within Component",
          "Styling Class Components"
        ],
        "Capstone Project - FriendLy": [
          "Building Your First Complex Component",
          "Setting Up the Project",
          "Building Our Components",
          "Styling Our Components Part One",
          "Styling Our Components Part Two"
        ],
        "JavaScript Review - Objects": [
          "Object Literal Notation",
          "Object Literal Notation Lab",
          "Accessing Values with Dot and Bracket Notation",
          "Accessing Values with Dot and Bracket Notation Lab"
        ],
        "Section 5: Props": [
          "Props part 1 - Stateless Functional Component",
          "Props part 2 - Class Components",
          "Props part 3 - Color Spectrum Refactor",
          "Codepen Challenges",
          "Codepen challenge 1",
          "Codepen challenge 2",
          "Codepen challenge 3",
          "Codepen challenge 4",
          "Codepen challenge 5",
          "Capstone Project - Image Links",
          "Props Project"
        ],
        "Functional Programming": [
          "Functional Programming - Filter",
          "Filter Lab",
          "Map",
          "Map Lab"
        ],
        "Iterating Through Lists": [
          "Iterating Through Lists",
          "Iterating Through Lists part 2",
          "Filter and Map Method on an Array",
          "Rendering Two Filtered and Transformed Lists to the DOM",
          "Codepen challenge 1",
          "Codepen challenge 2",
          "Color Spectrum Refactor"
        ],
        "Capstone Project One - Refactor": [
          "FriendLy App Refactor with Map Method",
          "FriendLy - Filter and Map Two Lists to the DOM"
        ],
        "Bonus": [
          "Further React Learning"
        ]
      },
      "requirements": [
        "Atom text editor or another of your choice",
        "At least six months using HTML/CSS/JavaScript"
      ],
      "description": "Welcome to Hello React. This is aimed towards those who are new to JavaScript development and while you may not have mastered JavaScript you want to learn more about using the React library. React has a steep learning curve for new developers. If you have found yourself quickly overwhelmed by the React Docs or other React tutorials then this is the course for you. This isn't the only React course you should take but it should be your first.\nIf you are an experienced developer. This course is too easy for you. Please don't take it. This course is for people who are new to programming. This isn't for experienced coders changing from one coding language to another or for experienced JavaScript developers looking to pick up a new framework.\nHere is what I will provide for you:\nA React course you can actually finish. A React course you can actually understand. A React course that moves step by step with no steps skipped.\nReviews. Lot's of reviews.\nChallenges. Lot's of challenges.\nMini-projects. Lot's of mini-projects.\nThis course assumes a light knowledge of HTML, CSS and JavaScript. However, if you have been using any of those technologies for at least a couple months you will be in good shape for this course.\nTo steal the words from Zoolander. This is a React course for \"those who don't code good.\"\nHere is why this course stands out:\nThis will be the slowest moving React course you will find.\nThis will focus on the basic fundamentals that could be of great help in future React courses you might take or understanding the React Docs.\nThis is not a \"zero to hero\" course. Those don't really work. This is a \"zero to 20mph\" kind of course.\nI will take for granted as little as possible in teaching sections and reinforcing what we have learned.\nThis isn't a code along course alone. Through lots of challenges and repetition you will be able to take everything we learn and build with it. You won't wide up with an elaborate project for your portfolio that you don't understand.\nI will filter through and synthesize large and complex React concepts and break them down to a practical beginner level.\nWe will build slow, but you will understand what we are doing.\nWe aren't going to build one big app but many smaller applications where you learn key concepts.\nRepetition, Repetition, Repetition. We will repeat things a lot.\nMy first attempt to learn React was when I had been coding for just about six months. I bought several books and paid for several online subscriptions but those resources quickly reached a level that I found myself just typing in the code I was seeing without any comprehension in regards to what was going on or how I could replicate this myself.\nEven the docs went over my head and so did many of the use cases. I spent hours and hours trying to sort through material that would allow me to get a hold of concepts at my level. I couldn't, so I gave up.\nI want to spare you the hours and hours of research you might invest only to hit constant dead ends and have material presented to you with too much assumed knowledge.\nThat's why I created this course for you!\nIt's time to say \"Hello World\" in React!",
      "target_audience": [
        "New developers",
        "Those who are newer to development trying to overcome the steep learning curve of React"
      ]
    },
    {
      "title": "CSS, Bootstrap ,JavaScript, Web Development Course",
      "url": "https://www.udemy.com/course/css-bootstrap-javascript-web-development-course/",
      "bio": "Learn Web Development Complete Course, CSS, Bootstrap And JavaScript complete Web development Stack course 2022",
      "objectives": [
        "Introduction to Web development with learning CSS And Bootstrap JavaScript Programming Language",
        "Write CSS Scripts And Understanding Concepts,Practically Getting Started With CSS Styles, CSS 2D Transform, CSS 3D Transform",
        "Bootstrap Crash course,Introduction to bootstrap concepts",
        "Bootstrap Grid system,Forms, Badges And Alerts",
        "Getting Started With Javascript Variables,Values and Data Types, Operators and Operands",
        "Write JavaScript scripts and Gain knowledge in regard to general javaScript programming concepts",
        "Introduction And Use of JavaScript Variables, JavaScript Arrays, JavaScript Objects"
      ],
      "course_content": {
        "Introduction": [
          "CSS IN HTML",
          "CSS Introduction",
          "CSS Basic Syntax",
          "CSS Fonts",
          "CSS Text",
          "CSS Links",
          "CSS Layers",
          "CSS Lists",
          "CSS Animation",
          "CSS 2D Transform",
          "CSS 3D Transform",
          "CSS Color Introduction",
          "CSS Colors 2",
          "CSS Cursors",
          "CSS Padding",
          "CSS Positioning",
          "CSS Dimensions",
          "CSS Rounded Corners",
          "CSS Visibility",
          "CSS Scrollbars",
          "CSS Selectors",
          "CSS Background",
          "CSS Gradient",
          "CSS Images",
          "CSS Borders"
        ],
        "Bootstrap Course": [
          "Bootstrap Environment Setup",
          "Bootstrap Forms",
          "Bootstrap Badges",
          "Bootstrap Alerts",
          "Bootstrap Breadcrumb",
          "Bootstrap Button Groups",
          "Bootstrap Buttons",
          "Bootstrap List Groups",
          "Bootstrap Labels",
          "Bootstrap Grid System"
        ],
        "JavaScript Complete Course": [
          "JavaScript Introduction",
          "JavaScript Array",
          "JavaScript Variables",
          "JavaScript Conditional Statement Introduction",
          "JavaScript If Else Statement.",
          "JavaScript Iteration Statements",
          "JavaScript for Loop",
          "JavaScript While Loop",
          "JavaScript Do..while loop",
          "JavaScript Loop Control Statements",
          "JavaScript Switch Statement",
          "JavaScript Operators",
          "JavaScript Logical Operators",
          "JavaScript Comparison Operators",
          "JavaScript Functions",
          "JavaScript Events",
          "JavaScript Error Handling",
          "JavaScript Cookies",
          "JavaScript Animation",
          "JavaScript Objects",
          "JavaScript Page Redirect."
        ]
      },
      "requirements": [
        "Basic Computer Knowledge",
        "Basic HTML Knowledge"
      ],
      "description": "Learn CSS and Bootstrap and Javascript Web Development stack all in one complete course\nsection 1- CSS course with basics and advanced concepts of CSS\never wonder how the latest website designs are made? Cascading Style Sheets (CSS) are the main coding files used to layout a website and its design. CSS 3 is the latest in styling standards, and it brings several new properties and declarations you can use to make your website design more easily created. CSS is currently the only standard in website design that plugs directly into your HTML, even the latest HTML 5 standards. With CSS 3 and HTML 5, you can create the latest interactive pages for your website viewers.\nthis course shows you how to create CSS classes from a beginner's level. It starts off with basic HTML declarations, properties, values, and how to include a CSS style sheet with your HTML code. For those of you who are new to CSS and HTML, we show you step-by-step how to create a CSS file and include it in your HTML code, even if you use a cloud server for your hosting.\nwe show you how to position your elements, layout your elements relative to your documents, and style your HTML using predefined CSS values. We introduce you to the common CSS styling that you'll need when you start off designing your pages. If you want to get to know CSS and website design, this course is meant for you, and it can be used by anyone who hasn't even seen one line of CSS code yet. We focus on the latest CSS 3 and HTML 5 standards, so you get the latest when coding your website pages instead of focusing on older code.\nthere are no prerequisites. Anyone Can join this course. It is recommended though that individuals have some basic computer programming knowledge.\n\n\nCourse Topics\n\n\nIntroduction to CSS\ninclusion Of CSS In HTML\nCSS syntax\nCSS styling Text\nCSS page backgrounds\nCSS 2D transform\nCSS 3D transform\nCSS animation\nand more....\n\n\n\n\nSection 2- Learn bootstrap in a crash course\n\n\nbootstrap grid system\nbootstrap alerts\nbootstrap badges\nbootstrap forms\nbootstrap breadcrumb\nbootstrap  labels\nand more...\n\n\nSection 3- learn javascript programming language\nThe course is created with thorough, extensive, but easy-to-follow content that you’ll easily understand and absorb.\nThe course starts with the basics, including JavaScript fundamentals, programming, and user interaction.\n\n\nthe curriculum is going to be very hands-on as we walk you from start to finish to become a professional Javascript developer. We will start from the very beginning by teaching you Javascript basics and programming fundamentals, and then execute into real-life practice and be ready for the real world.\n\n\nwhile Javascript is complicated for beginners to learn, it is widely used in many web development areas.\nthis course gets you started with an introduction to JavaScript. It assumes that you're new to the language, so it gets you started with basic functionality such as creating functions, creating variables, and calling these lines of code from your standard HTML pages. It talks about events and triggers for custom event handling. It talks about pattern matching, searching for text within a page, flow control, and the document object model (DOM). We start off with the basics and move on to more complex functionality such as arrays and objects. We then discuss how to script common elements with JavaScript such as forms and tables. At the very end, we discuss major libraries such as Ajax, which allows you to make asynchronous calls to server-side scripts without reloading the web page in the server.\nMaster the fundamentals of writing Javascript scripts\nLearn core Javascript scripting elements such as variables and Objects\nDiscover how to work with lists and sequence data\nWrite Javascript functions to facilitate code reuse\nUse Javascript to read and write files\nMake their code robust by handling errors and exceptions properly\nSearch text using regular expressions\nThe topics covered in this course are:\n* javascript course contents:\nJavascript introduction\nJavascript array\nJavascript variables\nJavascript functions\nJavascript objects\nJavascript control statements\nJavascript cookies\nJavascript loop statements\nJavascript data structures\nJavascript error handling\nJavascript regular expressions",
      "target_audience": [
        "Beginner Full Stack Developers",
        "Beginner Web Developer"
      ]
    },
    {
      "title": "Asp.Net Core 10 (.NET 10) | True Ultimate Guide",
      "url": "https://www.udemy.com/course/asp-net-core-true-ultimate-guide-real-project/",
      "bio": "ASP .NET Core | Asp.Net Core Projects | Bootcamp | Advanced | Interview Questions | Web API | MVC | SOLID Principles",
      "objectives": [
        "Confidently speak about most of the basic, intermediate and advanced concepts of Asp .Net Core",
        "Crack Asp .Net Core job interviews easier",
        "Strong Foundation of MVC Architecture Pattern and root level concepts of Asp .Net Core",
        "Add two profile projects to your profile and increase chances of getting a better job",
        "Learn professional developer best practices",
        "Become equivalent to Senior-level Asp .Net Core developer with Repository Pattern, SOLID Principles, Clean Architecture, Serilog",
        "Get Instructor-Support to your questions within 24 hours; max 48 hours"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Asp.Net Core",
          "WebForms [vs] Asp.Net Mvc [vs] Asp.Net Core",
          "Section Cheat Sheet (PPT)",
          "Section 1 Interview Questions",
          "Where to download the Source Code",
          "How to download Notes",
          "New features of Asp.Net Core 10",
          "What if I'm interested in Web API only?",
          "Projects in this Course",
          "How to watch videos effectively (Best study method)?"
        ],
        "Getting Started [MVC and Web API]": [
          "Setup Environment",
          "Create First Asp.Net Core App",
          "Kestrel and Other Servers",
          "launchSettings.json",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 2 Interview Questions"
        ],
        "HTTP [MVC and Web API]": [
          "Introduction to HTTP",
          "HTTP Response",
          "HTTP Status Codes",
          "HTTP Response Headers",
          "HTTP Request",
          "Query String",
          "HTTP Request Headers",
          "Postman",
          "HTTP Get vs Post - Part 1",
          "HTTP Get vs Post - Part 2",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 3 Interview Questions",
          "Math app though HTTP GET"
        ],
        "Middleware [MVC and Web API]": [
          "Intro to Middleware",
          "Run",
          "Middleware Chain",
          "Custom Middleware Class",
          "Custom Middleware Extensions",
          "Custom Conventional Middleware Class",
          "The Right Order of Middleware",
          "UseWhen",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 4 Interview Questions",
          "Login using Middleware"
        ],
        "Routing [MVC and Web API]": [
          "Intro to Routing",
          "Map, MapGet, MapPost",
          "Route Parameters",
          "Default Parameters",
          "Optional Parameters",
          "Route Constraints - Part 1",
          "Route Constraints - Part 2",
          "Route Constraints - Part 3",
          "Custom Route Constraint Class",
          "EndPoint Selection Order",
          "WebRoot and UseStaticFiles",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 5 Interview Questions",
          "Countries app using Routing"
        ],
        "Controllers & IActionResult [MVC and Web API]": [
          "Creating Controllers",
          "Multiple Action Methods",
          "Takeouts about Controllers",
          "ContentResult",
          "JsonResult",
          "File Results",
          "IActionResult",
          "Status Code Results",
          "Redirect Results - Part 1",
          "Redirect Results - Part 2",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 6 Interview Questions",
          "Bank app using Controllers"
        ],
        "Model Binding and Validations [MVC and Web API]": [
          "Overview of Model Binding",
          "Query String vs Route Data",
          "FromQuery and FromRoute",
          "Model Class",
          "form-urlencoded and form-data",
          "Introduction to Model Validations",
          "Model State",
          "All Model Validations - Part 1",
          "All Model Validations - Part 2",
          "Custom Validation",
          "Custom Validation with Multiple Properties",
          "IValidatableObject",
          "Bind and BindNever",
          "Custom Model Binders",
          "Model Binder Providers",
          "Collection Binding",
          "FromHeader",
          "FromBody",
          "Input Formatters",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 7 Interview Questions",
          "e-Commerce Orders App"
        ],
        "Razor Views [MVC]": [
          "MVC Architecture Pattern",
          "Views",
          "Code Blocks and Expressions",
          "If",
          "Switch",
          "Foreach",
          "for",
          "Literal",
          "Local Functions",
          "Html.Raw",
          "ViewData - Part 1",
          "ViewData - Part 2",
          "ViewBag",
          "Strongly Typed Views - Part 1",
          "Strongly Typed Views - Part 2",
          "Strongly Typed Views with Multiple Models",
          "_ViewImports.cshtml",
          "Shared Views",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 8 Interview Questions",
          "Weather App"
        ],
        "Layout Views [MVC]": [
          "Creating Layout Views - Part 1",
          "Creating Layout Views - Part 2",
          "Layout View for Multiple Views",
          "ViewData in Layout Views",
          "_ViewStart.cshtml",
          "Dynamic Layout Views",
          "Layout Views Sections",
          "Nested Layout Views",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 9 Interview Questions",
          "Weather App with Layout Views"
        ],
        "Partial Views [MVC]": [
          "Creating Partial Views",
          "Partial Views with ViewData",
          "Strongly Typed Partial Views",
          "PartialViewResult",
          "Notes",
          "Section Cheat Sheet (PPT)",
          "Section 10 Interview Questions",
          "Weather App with Partial Views"
        ]
      },
      "requirements": [
        "At least intermediate (or better) level knowledge of all C# key concepts including OOP, Interfaces, Lambda Expressions, Collections etc.",
        "At least intermediate (or better) level knowledge of Web development - HTML, CSS, JavaScript, Angular",
        "SQL, ADO .NET (basics)"
      ],
      "description": "THE REAL ULTIMATE GUIDE TO ASP.NET CORE 9 DEVELOPMENT\nThis is the only course you need to learn the complete coding and testing skills that a professional Asp .Net Core developer needs.\nThis is the most-comprehensive course on Asp .Net Core ever available on Udemy, which starts you from beginner to mastery in Asp .Net Core development.\n\n\nSTUDENTS FEEDBACK - over 250 students - 5 star rated:\n1. \"This course is by far the best deal I've seen in a very long time. The instructor is not exaggerating when he describes it as the 'True Ultimate Guide'. Just about everything one needs to know as a developer is included, and then some: each one of the sections on Entity Framework, Unit Testing and Identity/Authorization could have been sold as separate courses but they're included here at no additional cost, truly amazing. Of course, none of that would be of any value if the content was not instructional, but that's not the case here: the instructor is quite knowledgeable, and all the explanations are concise and to the point. The pace is quick on easy topics but slower and very detailed on the more difficult ones.\" - Zamkam\n\n\n2. \"This course is beyond the expectation. As a person who has read Microsoft documentation, and watched a lot of videos, and also read so many books about ASP.NET, I am confident to tell you to join this course not only 100% but, 1500%. What I found awesome about this course: - The order, in which the concepts are thought is magical. - The detail and the information in the content of the course are unbelievably wonderful. - The course got updated with wonderful stuff. By using this course, we would not need more than 1 year in a company to become a senior developer I believe. Thank you very very much Harsha for this wonderful course. Please add as much as content you can in your C# and ASP.NET course, because the way you teach is a miracle.\" - Hamed Homaee\n\n\n3. \"Excellent explanation, good fonts, good pace, so - brilliant course! And yes, finally - it's COMPLETE guide! Not just 10 hours or even less. Thank you for that kind of work!\" -- Valera Znak\n\n\n4. \"Highly Recommended! This course is well-organized, easy to follow and covers a wide range of topics. The instructor takes time to thoroughly explain each topic and provide examples to help illustrate their points, which is incredibly helpful in gaining a deeper understanding of ASP.NET Core.\" -- Nisarg Gami\n\n\n5. \"This course is pretty amazing. The concepts are been taught in such a way that it becomes easier for anyone to understand them clearly and quickly. Also, the assignments and interview questions help a lot in testing our knowledge and giving us good exposure to attending a real interview exam. The assignment question helps us in implementing our learning by solving the questions.\" -- Pushkar Sharad Kaswankar\n\n\n6. \"I was waiting for this type of course from a long years. I can say this is a best course for beginner to learn asp.net core also for experience people finally it's complete package of .net core course\" - Dheeraj Ambippi\n\n\n7. \"Everything is meticulously prepared. It's nice to have cheat sheet.\" -- Ekrem Kangal\n\n\n8. \"The best course for ASP.NET CORE so far. Thanks for the pieces of information you put together in this course. He explained every concept in DotNet Core. Kudos to the author!\" -- Johnbull Vitowanu\n\n\n9. \"Hi Mister Harsha! First of all, this is a great course. I am impressed with the coverage of the topics, the interview questions, the assignments, and the answers to those assignments. I know that it takes a lot of your time, effort, and patience to do this. Could you please tell me how you were able to achieve this. I mean, how do you always feel motivated, and how do you keep up this kind of energy.\" - Pushpa MH\n\n\n\n\nTop reasons - why should you opt this course over the other courses\nThe course is facilitated (instructed) by the lead instructor - Mr. Harsha Vardhan, one of the most popular trainer for in-person training programs with top IT companies in India.\nThis course is up-to-date with .NET 7 to 9 and promised to keep it up-to-date for future releases of .NET and Asp .Net Core.\nThe course is constantly updated with new content on newer topics, new projects determined by the students - that's you!\nYou will build your portfolio project (a Stocks Trading Platform) through guidance provided by the Instructor (also, source code is provided to help you to rescue you in case if you stuck somewhere and to check quality of your code).\nMany developers may feel challenged when they need to face technical interviews. To address this problem, we've included a comprehensive set of interview questions to test yourself before facing any technical interview on Asp .Net Core.\nCoding is not the game of listening and following someone. You will have proper understanding of the subject only when you apply it on a meaningful application. So essential coding exercises (assignments) are provided in each section. So you will try each of them - and get instructor's source code and help when you stuck somewhere or become clue-less at certain point.\nThe definitions, best practices, diagrams presented in the course videos, are provided as 'Section cheat sheet' at the end of respective section. So you can use it as a moment of reference & revision, to recollect and apply what have you learnt from that section.\nAdvanced concepts such as xUnit, Moq, Serilog, Fluent Assertions, Repository Pattern, Clean Architecture, SOLID Principles, Unit testing and Integration testing, Asp .Net Core Identity are presented in the course, along with a promise to keep it up to date. So it's a future-proof course.\nProfessional developer best practices are included and explained in respective sections wherever necessary.\nAll topics are explained from scratch. So you need not worry about your prior knowledge / experience in Asp .Net Core. The only main prerequisites of this course are - C# and HTML.\nEven, you need not much worry about advanced topics of C#; because brush-up lectures on the key concepts of C# such as Extension Methods, LINQ, Nullable reference types etc., are included as a extra section in this course.\nTeaching methodology: Picture first - visualize and define everything before jumping into a new topic.\nLag-free and straight-to-the-point explanation\nEnglish captions are available for all lectures.\n\n\nDoes this course include Web API (RESTful Services)?\nYes\n\n\nWhat is the application are we going to build for my portfolio?\nA \"Stock Trading\" App.\nWith live chart and price updates on the selected stock.\nA search page to search for desired stock.\nPlace buy or sell order\nA dashboard to see order history of buy orders and sell orders\nA login / register page where the new users can sign-up and existing users can sign-in.\n\n\nWhat if I get stuck while learning?\nYou can drop a question in the Q&A, and the instructor or the teaching assistant will answer your questions within 24-hours - max within 48-hours.\n\n\nWhat if I don’t like the course?\nThat will likely not happen. But, if it does, you are covered by the Udemy 30-day money-back guarantee, so you can quickly return the course. No questions asked.\n\n\nThis course is offered by Web Academy by Harsha Vardhan. Any watermark or name stating \"Harsha Web University\" is from our old branding and does not represent an academic institution. This course is for educational purposes only and is not affiliated with any university or degree-granting institution.",
      "target_audience": [
        "Freshers / experienced developers who wants to become senior-level .NET developer with stronger and extensive topics of Asp .Net Core"
      ]
    },
    {
      "title": "Full Stack Web Development with C# OOP, MS SQL & ASP.NET MVC",
      "url": "https://www.udemy.com/course/full-stack-web-development-with-c-oop-ms-sql-aspnet-mvc/",
      "bio": "Web development with C#, ASP.NET MVC, MS SQL, C# OOP. All gathered for full stack web development in one course!",
      "objectives": [
        "Apply the OOP concepts using C#",
        "How to apply each subject on real C# projects",
        "You will have an infrastructure to learn programming languages like Java or Python in a very short time",
        "What objects, classes, fields, properties, methods and constructors are in detail",
        "How to make a professional project with 3 tier architecture and LINQ",
        "Using of N- tier Architecture , Design Patterns and Entity framework together",
        "How to Create Personnel Tracking systems algorithm",
        "Start learning from scratch and learn about every MS SQL Server topic with examples",
        "Learn SQL basics with SSMS (SQL Server Management Studio)",
        "U se SQL commands to filter, sort and manipulate strings, dates numerical data from different sources",
        "You will also learn SQL transactions and transaction commands",
        "How to create your own function",
        "Learn MVC with hands-on examples",
        "Build secure web applications with ASP .NET MVC and C#",
        "How to apply each subject on real projects",
        "Understand the MVC architectural pattern",
        "Using of Data Transfer Objects as ViewBag, ViewData, TempData",
        "Understand how to use the database-first approach with using Entity Framework",
        "Create real-world projects using Asp .Net MVC and Entity Framework",
        "How to make a professional web project with 4 tier architecture and Entity Framework",
        "How to Change your Projects Front Pages Easily",
        "How to Handled errors and exceptions in your apps",
        "How to use coding techniques to make efficient development",
        "By the end of this course you will be in a position to build any professional web application with all details using MVC and Entity Framework",
        "Whether you’re using C# in conjunction with Xamarin Forms to build cross-platform apps, or designing a new video game in Unity with C#",
        "Even though C# is a language that’s relatively easy to learn and maintain, it isn’t just for beginners.",
        "OAK Academy features features a host of top-rated OOP courses tailored for specific languages, like Java, C#.",
        "Object-oriented programming (OOP) is a computer programming paradigm where a software application is developed by modeling real world objects into software.",
        "SQL isn’t just for software engineers and system administrators. SQL also helps business analysts gain important insights into new marketplaces",
        "SQL is a special-purpose programming language used for the interaction and manipulation of data in relational databases.",
        "ASP. NET MVC is an excellent tool for creating membership websites and fast web applications.",
        "ASP. NET MVC is a highly-testable web application framework that uses a model-view-controller pattern."
      ],
      "course_content": {
        "What You Will Learn in C# For Complete Beginners Section": [
          "Here is the C# Section Program",
          "No experience on C#? Don`t Worry!",
          "C# .NET Framework",
          "Project Files and Course Documents",
          "FAQ regarding C#"
        ],
        "Set Up Visual Studio": [
          "Development Environments",
          "How To Install Visual Studion On Windows?",
          "How To Install Visual Studion On Mac?",
          "How To Install Visual Studio On Windows?"
        ],
        "Console Environment for C#": [
          "What is Console App?",
          "Functions Used in Console Environment to Write and Read",
          "Read & Readline"
        ],
        "Variables in C#": [
          "What Is Variables in C# ?",
          "Type Conversions in Variables"
        ],
        "Windows Form": [
          "Introduction to Windows Form",
          "Review Necessary Windows",
          "Review Form Properties in c# for beginners"
        ],
        "Review Objects in Toolbox": [
          "Using MessageBox",
          "Button",
          "Label",
          "Textbox in c#",
          "Groupbox in C#",
          "Radiobutton",
          "Checbox in c sharp",
          "Combobox in c sharp programming",
          "Datetimepicker in c sharp for beginners",
          "Switch and Data Transfer Between Forms in C#"
        ],
        "Operators in c sharp from scratch": [
          "Using Operators"
        ],
        "Before Starting Know-How": [
          "Using Comment Line",
          "Using Region",
          "Naming Conventions in oak academy c#",
          "Using Breakpoint",
          "Keyboard Shortcuts in Visual Studio"
        ],
        "Condition Controls": [
          "If -Else Statement",
          "Switch Case Statement"
        ],
        "Loops": [
          "While DoWhile",
          "For Loop",
          "Jump Statements",
          "c# coding Quiz"
        ]
      },
      "requirements": [
        "Desire to learn C# OOP, MS SQL and ASP. NET MVC",
        "A Windows or Mac for installing all the free software and tools needed to practice",
        "Basic C# Knowledge",
        "Visual Studio 2019",
        "SQL Server Management Studio",
        "No Prior Database OR SQL experience is required.",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Desire to learn C# Web Development",
        "Desire to learn Full Stack C#",
        "Desire to learn C# Web"
      ],
      "description": "Hello there,\nWelcome to Full Stack Web Development with C# OOP, MS SQL & ASP.NET MVC course.\nWeb development with C#, ASP.NET MVC, MS SQL, C# OOP. All gathered for full stack web development in one course!\n\nWhether you’re using C# in conjunction with Xamarin Forms to build cross-platform apps, or designing a new video game in Unity with C#, Udemy has a course for you. Udemy hosts top-rated courses on everything from the fundamentals of C# programming to more advanced topics like databases and asynchronous programming.\n\nEven though C# is a language that’s relatively easy to learn and maintain, it isn’t just for beginners. Its scalability and large support community make C# the language of choice for Microsoft app developers and video game developers working with the Unity Engine. Like C++ and Java, C# is a high-level object-oriented programming language. It is generally more efficient than Java and has useful features such as operator overloading. C# is based on C++ but has several advantages over this older language: it is type-safe, more comprehensively object-oriented, and the syntax has been simplified in several important ways. Most importantly, C# interoperates exceptionally well with other languages on the .NET platform. For this reason, C# is a better choice for building applications for .NET.\n\nMost programmers will choose to learn the object oriented programming paradigm in a specific language. That’s why Udemy features a host of top-rated OOP courses tailored for specific languages, like Java, C#, and Python.\n\nObject-oriented programming (OOP) is a computer programming paradigm where a software application is developed by modeling real world objects into software modules called classes. Consider a simple point of sale system that keeps record of products purchased from whole-sale dealers and the products sold to the customer. An object-oriented language would implement these requirements by creating a Product class, a Customer class, a Dealer class and an Order class. All of these classes would interact together to deliver the required functionality where each class would be concerned with storing its own data and performing its own functions. This is the basic idea of object-oriented programming or also called OOP.\n\nSQL isn’t just for software engineers and system administrators. SQL also helps business analysts gain important insights into new marketplaces and make more informed strategic decisions. SQL instructors on Udemy have experience with all levels and applications of SQL programming.\nSQL is a special-purpose programming language used for the interaction and manipulation of data in relational databases. In DZone’s 2019 Guide to Databases, 98% of developer survey respondents said their organizations use relational databases regularly, which frequently rely on SQL to query the data. With Udemy courses on SQL, you can learn one of the most in-demand skills for professions ranging from product managers to marketers to software engineers.\n\nASP.NET MVC is an excellent tool for creating membership websites and fast web applications. But its use isn’t limited to those areas. Regardless of how you intended to deploy ASP.NET MVC, Udemy has a course to help you learn it.\n\nASP.NET MVC is a highly-testable web application framework that uses a model-view-controller pattern. ASP.NET MVC combines existing ASP.NET features with the popular MVC pattern, making the software suitable for managing complex web applications that are controlled by large teams of developers.\nDo you want to build web apps, mobile apps,  games\nor\nDo you want to succeed with clean coding, agile, and design patterns?\nIf your answer is Yes then you have to master Web Development. And you are definitely at the right place.\nC# Object-oriented programming is the foundation of many current application development approaches. Interfaces and principles of object-oriented programming are crucial. During my course, you will learn everything, from A to Z, about C# Object-Oriented Programming on real C# projects.\nIn this course, we use interactive programming techniques; which means we will be building applications together, and furthermore there will be lots of work to be done, of course, followed by answers. You will also learn tips and tricks regarding beautiful and efficient coding techniques.\nSQL is the standard language for Relation Database System. All relational database management systems like SQL Server, MySQL, MS Access, Oracle, Sybase, and others use SQL as the standard database language. SQL is used to communicate with a database.\nIn this course, you will make an excellent introduction to SQL with MS Management Studio which allows to manage database and retrieve data from the database with a graphical interface.\nYou will also learn MVC so you will need basic C# knowledge to get the most efficient from this training. But of course, I will explain all codes in detail.\n\nYou will start learning MVC from scratch and you will examine all concepts one by one with real-world projects. Then together we will make a dynamic web project with 4 tier architecture page by page.\nYou will also learn to use ready-made templates with our project. When you finished the project, you will be learning how to use GitHub with Visual Studio and how to publish a project on the web. Besides that, you will learn how to make an Android App from a web site with a web view.\nThat`s why you are at a great place to start with OOP with C#\nWhat you will learn?\nApplying the OOP concepts using C#\nHow to apply each subject on real projects\nYou will have an infrastructure to learn programming languages like Java or Python in a very short time\nN- tier Architecture\nHow to make a professional project with 3 tier architecture and LINQ\nSolid Principles\nUsing of Abstract Factory , Observer and Facade Design Patterns\nUsing of Entity Framework\nUsing of N- tier architecture, design patterns, and Entity framework together\nHow to develop professional apps\nHow to Create Personnel Tracking systems algorithm\nHow to Create Stock Tracking systems algorithm\nHow to use facade design pattern on a real app\nUsing basic SQL commands\nUsing Folder and File Operations\nHow to Delegate methods and use events\nHow to Handled errors and exceptions in your apps\nHow to use coding techniques to make efficient development\nHow to install and setup these requirements.\nYou will learn the basics of SQL such as data, database, DBMS or SSMS, SQL, tables, and so on.\nDatabase normalization,\nManipulating data,\nRetrieving data from the database with different scenarios,\nYou will also learn SQL transactions and transaction commands,\nSchema and schema objects and\nUser privileges, permission commands, and roles.\nHow to apply each subject on real projects\nUnderstand the MVC architectural pattern\nUsing of MVC Concepts with all details\nUsing of Partial, Begin Form, Json\nUsing of Data Transfer Objects as ViewBag, ViewData, TempData\nUsing of ready-made templates\nCreate real-world projects using Asp .Net MVC and Entity Framework\nUnderstand how to use the database-first approach with using Entity Framework\nUse Entity Framework to SQL Operations\nN- tier Architecture\nHow to Separate projects parts\nHow to Create Dynamic web project algorithm\nHow to make a professional web project with 4 tier architecture and Entity Framework\nHow to Change your Projects Front Pages Easily\nUsing of basic SQL commands\nUsing Triggers\nMake Log Operations\nHow to Handled errors and exceptions in your apps\nHow to use coding techniques to make efficient development\nHow to Make SEO Operations for google\nHow to Get feedback like message or comment\nHave a basic understanding of working with GitHub\nHow to Publish a web Project\nHow to Make an Android APK from a web site\nBy the end of this course, you will be in a position to build any professional web application with all details using MVC and Entity Framework\nFull stack web development\nC# Web\nC#\nC# MVC\nC# Web Development\nASP.NET MVC\nFull Stack C#\nASP:NET\nC# Full Stack\nC# .NET\n.NET Ful Stack\nFull Stack .NET\nC# ASP.NET\nasp.net c#\nweb development c#\nfull stack web development c#\nc# oop\nfull stack net\nc# mvc\nfull stack web development with c#\nfull stack .net developer\nc# sql\nc# asp\nmvc c#\nc# full course\nmssql\nc# asp.net mvc\nc# fullstack\n.net mvc\n.net sql\nfull stack web development .net\nweb development with c#\nasp.net sql\n.net full course\nfull stack .net\nFAQ Regarding C#, MS SQL\nWhat is C# ?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its .NET initiative. The .NET framework and .NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL. C# is open-source and was designed to be simple yet modern, flexible yet powerful and versatile yet easy to learn and program with. Many programming languages in the past were designed for specific purposes. C# was developed with business and enterprise needs in mind. By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages. That includes generics, var types.\nWhat are the advantages of c# over C++ ?\nThanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C, an older but widely used language, and C++ became the de-facto language for building applications for Windows as well as infrastructure and low-level applications. Visual Basic was for business applications. What C# does is combine the rapid development capabilities of VB with the power of C++. C# also has many new data types, type-safety, to ensure you do not unknowingly reuse initialized variables. It uses a simplified syntax, a huge improvement over the complex coding often required in C++. C# also removes memory management issues thanks to .NET’s garbage collection scheme. You do not have to reference items for garbage collection; the system can reclaim that memory as required.\nWhy use encapsulation in C# ?\nEncapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members so that they are treated as a single object. It is a means to prevent the user of a given class from manipulating program objects in ways that were not intended by the designer or developer. Encapsulation hides how a program operates without affecting how it works while still allowing users to service requests for functionality and add or modify internal data or methods to meet changing needs. For example, suppose you have an object called “Patient” that contains patient-related data. In that case, you can use encapsulation to provision patient-specific data to those who need it without exposing all patient data. In addition to information hiding, you can use encapsulation in C# to improve your code's reusability.\nWhat is C# used for?\nC# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications and game development. In web application development, you can build dynamic websites and apps using .NET or another open-source platform of your choice. Also, since Microsoft created C# for Microsoft, C# is a popular language for building Windows applications. There are rich resources and a vibrant C# community that can support and documentation for applications and programs specific to Microsoft platform architectures, making it easier than ever to develop applications in this space. Finally, C# is a popular language to use in game-building, especially with Unity, a game engine that runs on C++ and C#.\nWhat is a constructor? What is a destructor?\nTo understand constructors and destructors, we need to understand methods. A method is a block of code that contains a series of statements. Programs run by executing methods. A constructor is a special method of a class that is automatically called whenever an instance of a given class is created. A constructor contains the instructions that execute when an object is created. Developers use it to assign specific initial values to the data members of the same class. In C#, you will get a compile-time error if you try to read from an uninitialized variable. You must first initialize your variables by giving them an initial value, which is what the constructor does. On the other hand, destructors are methods used to destroy instances of a class when they are no longer needed. Destructors are called implicitly by the garbage collector in .NET\nHow do I learn C#?\nAs is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on. There are many resources available for all of the above, including real-time compiler applications that will show you the output of your code as you type it. However, it is best to plan ahead, and you should have an outline of what you need to learn before beginning your journey. The first thing to learn about is what C# is, how and where it is used, and why it was developed. From there, you can learn about data types, variables, keywords, and functions. Once you’ve grasped the basics, you can move on to learning about conditional tests and operators, functions, arguments, object orientation, arrays, strings, classes, methods, structs, debugging, and exception handling.\nWhat is SQL and how is it used?\nSQL stands for Structured Query Language. It is a language used to manage data in a relational database. It allows you to query, manipulate, and define the data in a relational database. It has become a standard language, which means that the language the database uses will be based on SQL despite which relational database you use. This makes it a very versatile language and an important skill to have if you work with databases or data. The language closely resembles English, making it easy for English-speakers to learn and read at a glance, even for a beginner. Statements consist of clauses, identifiers, operators, and constants. Together, you can create statements such as “SELECT customer_name FROM Purchase_Table WHERE order_number = 253”. The resulting statement is structured so a computer can read, yet also easy for English-speakers with little programming\nWhat job use sql?\nMany career paths benefit from understanding SQL. Almost any industry that uses data can benefit from someone that specializes in relational databases. Some jobs specifically focus on working with a database, such as a Database Manager or Database Developer role. However, more and more jobs that do not solely concentrate on database maintenance require knowledge of SQL. Mostly all websites and applications use a database, so various developer positions require knowledge of SQL. Similarly, careers that involve working with data require skills in SQL. These careers can include Data Scientists, Database Developer, DB Admins, Business Analysts, Data Analysts, Big Data Experts, and Big Data Architects. Occupations that involve a database are growing. As the amount of data we collect increases, careers around the management, analysis.\nWhat is sql injection?\nSQL injection is a common hacking technique. It uses SQL commands to manipulate a database. It can occur when an application has been poorly developed and allows a user to insert information directly into a database. For example, if you ask a user to submit their name, a hacker can type in a SQL command instead. If that command directly executes against the database of the application an injection attack has occurred. For a database, a command is a command and it cannot determine whether a command is from a valid user or not. Because this is a common threat, it is easy to prevent. A golden rule of database management is to never input user data directly into the database. Many programming languages will have a function that checks for SQL injections. So, it is pretty easy to guard yourself against an SQL injection attack.\nHow long does it take to learn SQL?\nYou should expect to learn the basics of the language in less than a month, or even as little as 2 weeks, if you are dedicated. But to be comfortable and perform non-trivial operations, it takes a few months to get your bearings in SQL. Because SQL is close to the English language, it is not very difficult to read, write, and understand if you're familiar with the English language. Even if you have no programming background, you should be able to learn SQL quickly. It does take a lot of practice to become a good SQL developer. Reading and writing SQL is just one component of being a SQL programmer. It is even more important to know how to structure data and manage relationships between tables. You need a deep understanding of relational databases to create a data structure that will work well with the type of data you have gathered.\nWhat is the best SQL certification?\nYou don’t need a certification to get a job working with SQL, but it can help you stand out in the crowd. The certification you choose will depend on your career goals. If you know that you will be working with a specific database, working on a certification for that specific area could give you an advantage. Most of the SQL language is cross-compatible across all relational database platforms so if you have done enough practice in one of them, learning for another one will be fairly quick and easy.\nWhat is the best way to learn SQL?\nBecause SQL is so similar to the English language, it is pretty easy to learn on your own. You can learn it quickly by going through online tutorials that teach the syntax and keywords in the language. But, to get good at SQL, you will want to practice and work with data regularly. Therefore, some people may find it easier to learn by following a tutorial, taking a course, or getting a certification. These methods often provide structured exercises and/or assignments, which allow you to practice the skills you are learning. This type of experience will help you to progress faster.\nWhat is a relational database?\nA relational database is a type of database that stores data that is organized in structures called tables and these tables are related to one another through defined relationships. Each table has columns and rows. Columns represent attributes and define a structure to the data. Each row is a record of information stored in the table. The relationships between tables are defined by assigning certain columns as foreign and primary keys. For example, a vehicle table might contain the VIN number as a primary key since that uniquely identifies each record of information about a car. There may be another table in the database called dealerships. The data can be structured in such a way that each car belongs to some dealership. The relationship between these 2 tables can be organized by having the dealership’s key in the vehicles table.\nWhat are the most common forms of SQL and how do they differ?\nThere are many forms of SQL, but PostgreSQL, Microsoft SQL, and MySQL are the three most widely used. Although each of these forms is an implementation of SQL, their standards were set by different organizations. PostgreSQL and MySQL are both open-source platforms maintained by a wide community of developers, while Microsoft develops Microsoft SQL. Syntactically, they can differ regarding whether they require case sensitivity, whether they use single quotes or double quotes, and what functions they support. As an example, Microsoft SQL server uses GETDATE(), MySQL uses CURDATE(), and PostgreSQL uses CURRENT_DATE(). They also differ in languages supported; MySQL supports languages that PostgreSQL and Microsoft SQL don't, such as Haskell and Ruby. As Microsoft SQL is proprietary, it costs money to license\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned instructors' expertise.\nThis course starts with very basics.  You will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\n\nAre you ready to dive in now to my Full Stack Web Development with C# OOP, MS SQL & ASP.NET MVC course\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Anyone who wants to improve their C# OOP, MS SQL & ASP. NET MVC programming skills",
        "Anyone who wants to build OOP object oriented and / or windows forms applications",
        "Anyone who is interested in developing MS SQL software with a design pattern",
        "Anyone who wants to understand the elements of full-stack software development",
        "Anyone who wants to start learning SQL Server Basics",
        "Anyone who wants to better understand how databases work",
        "Anyone who plans a career in Microsoft SQL Server database",
        "People who wants to learn MVC",
        "Anyone who wants to develop .NET applications",
        "Students who want to make a professional web project",
        "People who want to apply N- tier architecture in a project",
        "Anyone who want to learn a web backend to use in mobile programming"
      ]
    },
    {
      "title": "Learn PHP - For Beginners",
      "url": "https://www.udemy.com/course/learn-php-for-beginners-n/",
      "bio": "Learn to create dynamic web applications using PHP",
      "objectives": [
        "PHP Syntax",
        "PHP Variables",
        "PHP Global vs. Static Keywords",
        "PHP Data Types",
        "PHP Objects",
        "PHP Strings",
        "PHP Constants",
        "PHP Conditional Statements & Operators",
        "PHP Loops, Arrays, Multidimensional Arrays",
        "PHP Superglobal Variables",
        "PHP Forms with Validation"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills"
      ],
      "description": "Course: Learn PHP - For Beginners\nLearn to create dynamic web applications using PHP\nStudents learn to integrate client-server communication into web pages to create dynamic functionality using PHP.\nWe start with the fundamentals, including PHP syntax and variable declaration. The course transitions into working with objects, arithmetic operators, conditional statements, loops, functions and arrays.\nStudents will also learn to utilize server side form validation techniques to maintain data integrity.\nWhat you'll learn - Overview:\nPHP Syntax\nPHP Variables\nPHP Global vs. Static Keywords\nPHP Data Types\nPHP Objects\nPHP Strings\nPHP Constants\nPHP Conditional Statements & Operators\nPHP Loops, Arrays, Multidimensional Arrays\nPHP Superglobal Variables\nPHP Forms with Validation\nKey Concepts:\nPHP Introduction\nPHP Preparation\nPHP File Test\nPHP Syntax\nPHP Variables\nPHP Variable Scope\nPHP Global Keyword\nPHP Static Keyword\nPHP Echo - Print\nPHP Data Types\nPHP Objects\nPHP Strings\nPHP Constants\nPHP Operators\nPHP Conditional Statements\nPHP ElseIf Statement\nPHP Switch Statement\nPHP While Loops\nPHP For Loops\nPHP Functions\nPHP Functions Continued\nPHP Arrays\nPHP Multidimensional Arrays\nPHP Sorting Arrays\nPHP Superglobal Variables\nPHP Forms Introduction\nPHP POST vs GET Basics\nPHP Form Output and Validation\nPHP Form Required Fields\nPHP Validation Continued\nYour Instructor:\n\nYouAccel is a leading provider in online training, offering courses across numerous industries from IT and Development to Business, Marketing, Design, and Productivity.\nThe e-learning experience provided by YouAccel is Dynamic. Each course is streamed in High Definition with corresponding assignments, quizzes, and exams that are delivered and graded electronically. All YouAccel courses are taught by certified educators that have numerous years of work experience in the field for which they provide instruction.\nThe courses can be taken at one's own pace and are offered at several levels including beginner, intermediate and advanced. Online courses are also compatible with any mobile device for the ultimate in convenience.",
      "target_audience": [
        "Beginner Web Developers that want to Learn PHP"
      ]
    },
    {
      "title": "Build Websites from Scratch with HTML & CSS",
      "url": "https://www.udemy.com/course/build-website-scratch/",
      "bio": "Learn Web Development Essentials and Become a Web Developer From Scratch in this Complete HTML & CSS Beginner's Course",
      "objectives": [
        "By the end of this course, you will have a basic & thorough understanding of HTML & CSS",
        "Upon completion, you will have coded a handful of useful HTML & CSS examples",
        "In the last section of this course, you focus on building a beautiful, semantic, HTML & CSS web page",
        "By the end of this course, you will have impressed yourself, and will be able to hit the ground running with your newly acquired skillset",
        "Start building beautiful websites by hand",
        "Build a portfolio website, so you can highlight your best web work",
        "Get the ball rolling for a career in web design",
        "Begin your career as a web developer"
      ],
      "course_content": {},
      "requirements": [
        "Internet Connection",
        "Willingness to Learn",
        "A Text Editor (Free Resources Provided)"
      ],
      "description": "Do you want to learn how to build websites from scratch?\nWith this online course—from one of Udemy's top web design instructors, Brad Hussey—you will learn HTML & CSS by building beautiful, modern and responsive websites! You will have a strong foundation in web development that will enable you to start creating any website you can imagine.\nBy the end of this course, you will be competent in HTML & CSS and be able to create your own professional-grade website from scratch – no prior experience required! You will also have the skillset necessary to continue learning about web development and advancing your career.\nSign up for this online course today and start building your very own websites!\n- - -\nWhat is HTML & CSS?\nHTML and CSS are the two most important languages for a new web developer to learn. They are also the easiest. If you’ve always wanted to build webpages, but were intimidated by the code, this course will help you learn your first two languages quickly and easily.\nTaking a step-by-step approach, this course will have you learning by doing, building several mini-websites from scratch.\nLearn the Two Most Important Languages to Web Design Quickly and Easily.\nHTML Foundations\nParent/Child Structure\nCSS Foundations\nID Selectors\nCoding and Styling\nWhat Web Pages are Built Of\nEvery webpage that you see on the internet is built using code. There are many different programming languages that can make your website do various things, but the two most important to learn are HTML and CSS. In fact, even people who plan on allowing someone else to build their website should have a basic grasp of both languages. This way you can tweak things behind the scenes, or change some of your formatting without having to always rely on others.\nContents and Overview\nThis course of more than 77 lectures and 8 hours of content gives you a basic, yet thorough understanding of both HTML and CSS. The course focuses on having you begin writing code right away so you can learn through doing, and build your own completely functional HTML and CSS webpage at the end.\nYou’ll begin by learning what HTML and CSS are, so you can get an understanding of what it is that they do. During the course you’ll build several mini-websites that take what it is that you’ve learned and apply it to real world exercises to help cement the skills.\nEveryone from aspiring web designers to bloggers, programmers to business owners, company employees and tech hobbyists can benefit from learning some HTML and CSS! Learn to build your own dynamic and beautiful websites or manage the website that you already have.\nIf you plan on becoming a web programmer or a web designer yourself, HTML and CSS are the first two languages you’ll need to succeed. In fact HTML is required for anyone that wants to get into web development from any angle. Learning it simultaneously with CSS allows you to hit the ground running with page design.",
      "target_audience": [
        "Total Beginners",
        "Web Design Students",
        "Web Design Beginners",
        "Computer Programmers",
        "Bloggers",
        "Aspiring Web Designers",
        "People who desire a new career path"
      ]
    },
    {
      "title": "[NEW] Master Spring Boot 3 & Spring Framework 6 with Java",
      "url": "https://www.udemy.com/course/spring-boot-and-spring-framework-tutorial-for-beginners/",
      "bio": "Become Java Spring Boot Full Stack Developer. Learn Spring Framework, Spring Boot, Spring Data, Docker & AWS",
      "objectives": [
        "You will learn to build a Web Application, REST API and Full Stack Application with Spring Boot and Spring Frameworks",
        "You will Master Fundamentals of Spring Framework from Zero, no previous experience required",
        "You will Learn Spring Framework the MODERN WAY - The way Real Projects use it!",
        "You will learn the magic of Spring Boot - Auto Configuration, Spring Initializr and Starter Projects",
        "You will Learn the Best Practices in Developing Awesome Java Spring Applications from an Expert with 20 Years of Programming Experience",
        "You will learn to use a wide variety of Spring Boot Starter Projects - Spring Boot Web, Spring Boot Data JPA",
        "You will Acquire ALL the SKILLS to demonstrate an EXPERTISE with Spring Framework in Your Job Interviews",
        "You will Develop a REAL-TIME project with React and Spring Boot from SCRATCH",
        "You will Become the go to guy for Fixing Java Spring Framework problems in Your Project",
        "You will Understand the LATEST frameworks and technologies, including Spring Boot, Maven, Eclipse, JUnit and Mockito."
      ],
      "course_content": {},
      "requirements": [
        "You have some programming experience with Java",
        "You need ZERO experience with Spring or Spring Boot Frameworks",
        "You have an attitude to learn while having fun :)",
        "This course requires you to download Docker Desktop. An alternative to Docker Desktop is Podman Desktop. If you are a Udemy Business user, please check with your employer before downloading software."
      ],
      "description": "Do you want to become a Java Spring Boot Full Stack React & Cloud Developer?\nThis is the ONLY COURSE you need!\n\n\nWHAT LEARNERS ARE SAYING\n5 STARS - Nice course, helped me understand spring from basics.\n5 STARS - Absolute Amazing course. Ranga's way of teaching is quite unique and the course covers topics ranging from beginner level to advance level.\n5 STARS - Fantastic course. It is helping me to advance in my career. Explained each and everything in very simple language.\n5 STARS - Best course ever\n5 STARS - The best Spring Boot Security Course ever!\n5 STARS - Excellent!\n\n\nYou are doing a course where you learn the fundamentals Java frameworks:\n#1: Spring Framework\n#2: Spring Boot\n#3: JPA and Hibernate.\n\n\nYou also learn to build:\n#1: Web application with Spring and Spring Boot\n#2:  An Amazing REST API with Spring Boot\n#3:  Full stack application with Spring, Spring Boot, React and Spring Security\n\n\nIn addition, you also learn\n#1: Docker\n#2: Maven\n#3: Gradle\n#4: Spring AOP and\n#5: Spring Security\n\n\nYou deploy the applications you build to AWS!\n\n\nThis is THE COURSE you need to learn everything you need to know about building real world Java applications and deploying them to the cloud using Spring and Spring Boot Frameworks.\n\n\nNOTE: This course requires you to download Docker Desktop. An alternative to Docker Desktop is Podman Desktop. If you are a Udemy Business user, please check with your employer before downloading software.\n\n\nI'm Ranga Karanam. I'm the founder of in28minutes and creator of some of the worlds most popular courses on Cloud and DevOps. I'm certified on multiple clouds - Azure, GCP and AWS and I've helped a MILLION learners around the world acquire new tech skills. Rest assured you are in good hands.\n\n\nSpring and Spring Boot Frameworks are the No 1 frameworks for building enterprise apps in the Java world. In this course, you will learn Spring and Spring Boot from ZERO.\nI'm a great believer that the best way to learn is by doing and we designed this course to be hands-on.\nYou will build a web application, a REST API and full stack application using Spring, Spring Boot, JPA, Hibernate, React, Spring Security, Maven and Gradle.\nYou will learn to containerise applications using Docker. You will learn to deploy these applications to AWS.\nBy the end of the course, you will know everything you would need to become a great Spring and Spring Boot Developer.\n\n\nAre you ready to become an expert on Spring and Spring Boot?\nDo you want to join 1 MILLION learners having Amazing Learning Experiences with in28Minutes?\nLook No Further!",
      "target_audience": [
        "You are beginner Java programmer looking to learn Spring and Spring Boot Frameworks",
        "You are beginner Java programmer looking to build web application, REST API or a Full Stack Application"
      ]
    },
    {
      "title": "AJAX Development",
      "url": "https://www.udemy.com/course/ajax-development/",
      "bio": "Create Elegant, Powerful Web and Mobile Applications Using AJAX.",
      "objectives": [
        "Understand the basics of Ajax interactions",
        "To Understand and use the XMLHttpRequest() object in Javascript",
        "To Update the Browser Window's HTML content dynamically through the DOM",
        "To Dynamically Create and Send Parameterized Queries to a Server",
        "To Monitor Server Response for Process Completion",
        "To Display Server Response in Plain Text",
        "To Receive and Process XML Objects in the DOM",
        "To Receive and Parse JSON Objects in the DOM",
        "To Understand the Role of a Web Server in Ajax"
      ],
      "course_content": {
        "What is AJAX?": [
          "Ajax’ified’ Web Sites",
          "Dynamic content placement",
          "The XMLHTTP Request Object",
          "Making AJAX Requests",
          "Parameterized AJAX Requests",
          "Chapter 1 Lab Exercise"
        ],
        "AJAX and XML": [
          "Receiving XML Data",
          "Displaying XML Data in a Table",
          "Manipulating XML Data in the DOM",
          "Chapter 2 Lab Exercises"
        ],
        "AJAX and JSON": [
          "What is JSON?",
          "Displaying JSON Data",
          "Building a JSON Object for Server Consumption",
          "Chapter 3 Lab Exercises"
        ],
        "XSLT": [
          "Creating an XSLT Stylesheet",
          "XSLT Elements",
          "Chapter 4 Lab Exercises"
        ],
        "AJAX with the jQuery Framework": [
          "Using AJAX with jQuery",
          "Using AJAX with JSON",
          "Chapter 5 Lab Exercises"
        ],
        "AJAX and PHP": [
          "Using PHP with XML Data",
          "Using PHP with JSON Data"
        ]
      },
      "requirements": [
        "Mac, PC or Linux",
        "Text Editor"
      ],
      "description": "You’ve learned a little Javascript,  but you still look at websites with slick, smooth and elegant user interfaces and want to know how web developers create that. The answer is simple: Ajax.  You’ve probably heard of it, but you’ve always wondered “What is Ajax”? Ajax is simply Asynchronous Javascript and XML. By taking our Ajax course, you can make pages on your web application respond quickly, and with a minimum of screen refreshes.\n\n\nWith our Ajax course and a little Javascript knowledge you can use Ajax to take database information and store, alter, sort and conditionally format it all on the client side.  This minimizes the load on your server and makes your applications respond quickly and without reloading the HTML page.  Ajax communicates with the server behind the scenes while your user continues to use your web site, accessing the information they want. Our course will show you numerous Ajax examples and help you become proficient in using Ajax.\n\nIn our Ajax course, master trainer Mark Lassoff takes you through the basics of Ajax right to advanced topics like parsing JSON responses from web services.  Our Ajax course is recommended for all web developers who want to improve their client side skills, and make professional, fast and responsive web applications.",
      "target_audience": [
        "Web Developers",
        "Mobile Developers using the HTML5 Stack",
        "Programming Students",
        "Software Developers",
        "Anyone interested in improving web site performance",
        "People with some Javascript Experience or those who have completed an Introductory Javascript course"
      ]
    },
    {
      "title": "Java Message Service - JMS Fundamentals",
      "url": "https://www.udemy.com/course/java-message-service-jms-fundamentals/",
      "bio": "Master the fundamentals of Java Messaging in Simple Steps",
      "objectives": [
        "Learn what messaging is and its advantages",
        "Understand the two different types of messaging",
        "Look at the anatomy of a JMS message",
        "Use JMS 1.X and 2.x APIs and learn the differences",
        "Use the JMS API to Implement point to point messaging",
        "Implement request-reply scenario",
        "Use the JMS API to Implement Publish-Subscribe messaging",
        "Work with durable and sharable subscribers",
        "Filter the message using properties and message headers",
        "See load balancing in action",
        "Learn asynchronous processing of messaging using Listeners",
        "Acknowledge message through different message acknowledgement modes",
        "Use JMS transactions to ensure message delivery",
        "Learn how to use JMS API in the Java EE context",
        "Deploy your JMS applications on a application server",
        "Use Spring Support for JMS",
        "All in simple steps"
      ],
      "course_content": {
        "Start Here": [
          "Course and Instructor Introduction",
          "Private Course Feedback Link",
          "How to make the best of this course"
        ],
        "Messaging Basics": [
          "What is messaging",
          "Why Messaging",
          "What is JMS",
          "The two messaging models",
          "Apache ActiveMQ Artemis",
          "Download the completed projects",
          "Slides Used In the Course",
          "Assignment Solutions",
          "Basics"
        ],
        "Software Setup": [
          "Install Java 8 or Higher",
          "Install Spring Tool Suite",
          "Install Apache ActiveMQ Artemis",
          "Create the Messaging Broker"
        ],
        "Messaging in Action": [
          "JMS 1.X API",
          "Create the project",
          "Configure JNDI properties",
          "Write a message to the Queue",
          "Consume a message from the Queue",
          "P2P in action",
          "Summary So Far",
          "Publish Subscribe in action",
          "Use QueueBrowser",
          "JMS 2.X",
          "JMS 2.0 is Cool",
          "Messaging in Action"
        ],
        "Anatomy of a JMS Message": [
          "Introduction",
          "Prioritize Messages",
          "Default Priority",
          "Request Reply Messaging",
          "Use replyTo JMS Header",
          "When to use replyTo header?",
          "Use MessageId and CorrelationId Headers",
          "Set message expiry",
          "Access Expired Message",
          "Delay the message delivery",
          "Add custom message properties",
          "Message Types",
          "Message types in action",
          "Create Object Message",
          "JMS 2.x makes it simple",
          "Anatomy of a JMS Message"
        ],
        "P2P Messaging": [
          "When to use Point to Point",
          "Usecase",
          "Create the project",
          "Create the model class",
          "Create the clinical app and send a message",
          "Asynchronous Processing",
          "Receive Patient Data",
          "Check Eligibility and Send Reply",
          "Process the response",
          "Testing",
          "Load Balancing in action",
          "P2P Messaging",
          "Messaging in Action"
        ],
        "Pub- Sub Messaging": [
          "When to use pub-sub",
          "Usecase",
          "Create the project",
          "Create the EventPublisher",
          "Create the Subscribers",
          "Pub Sub in action",
          "Durable Subscriptions",
          "Durable Subscriptions in action",
          "Shared Subscriptions in action",
          "Pub Sub messaging",
          "Pub Sub in action"
        ],
        "Filter the messages": [
          "Introduction",
          "Create the project and model",
          "Create the Claim Producer and Consumer",
          "Fliters in action",
          "Use other operators",
          "Filter by header",
          "Filters",
          "Filters"
        ],
        "Guaranteed Messaging": [
          "Introduction",
          "Create the project",
          "Use AUTO_ACKNOWLEDGE",
          "DUPS_OK_ACKNOWLEDGE AND CLIENT_ACKNOWLEDGE",
          "Use CLIENT_ACKNOWLEDGE and DUPS_OK_ACKNOWLEDGE",
          "JMS Transactions",
          "JMS Transactions in action",
          "Transactions on the consumer side",
          "Guaranteed Messaging",
          "Guaranteed Messaging"
        ],
        "Security": [
          "Introduction",
          "Create Users and Roles",
          "Configure Security",
          "Security in action"
        ]
      },
      "requirements": [
        "Spring Tool Suite",
        "Knowledge of java"
      ],
      "description": "Sample of the reviews:\nWhat a wonderful course by Bharat. He has explained every topic of JMS starting for basics and taking the journey to fully mastering the concepts using various quizzes and coding assignments. Totally recommend this course. Thanks a lot, for this course. You are a true mentor. - Amit Kumar\nYes. 110%. Bharath always delivers high-quality, succinct courses, with hands-on programming. - Maurice McFarlane\nVery good overview of the Topic with enough detail that a developer can grasp the essentials quickly and make use of them immediately. Very well thought-out and presented. - Richard Kowalsky\n---\nDo you have the knowledge of Java  want to master Java Messaging Service then this course is for you.If you are an experienced Java EE developer who wants to fill in any gaps in your knowledge of Messaging and know how messaging can be used to develop loosely coupled ,scalable and reliable applications then this course is for you too.You will explore both point-to-point and publish/subscribe models of messaging. You will also explore how synchronous and asynchronous messaging is accomplished. While the JMS API provides fundamental messaging support, you also explore Enterprise JavaBean's Message Driven Bean (MDB).\nJMS makes it super easy to create interoperable applications that communicate with each other using messaging. You will start this course by learning what Messaging is ,what JMS is and how to use the JMS API .You will be working hands on one feature at a time .You will\n\n\nLearn what messaging is and its advantages\n\n\nUnderstand the two different types of messaging\n\n\nLook at the anatomy of a JMS message\nUse JMS 1.X and 2.x APIs and learn the differences\n\n\nUse the JMS API to Implement point to point messaging\n\n\nImplement request-reply scenario\n\n\nUse the JMS API to Implement Publish-Subscribe messaging\n\n\nWork with durable and sharable subscribers\n\n\nFilter the message using properties and message headers\n\n\nSee load balancing in action\n\n\nLearn asynchronous processing of messaging using Listeners\n\n\nAcknowledge message through different message acknowledgement modes\n\n\nUse JMS transactions to ensure message delivery\n\n\nLearn how to use JMS API in the Java EE context\n\n\nDeploy your JMS applications on a application server\n\n\nAll in simple steps",
      "target_audience": [
        "Java Developers who want to master JMS",
        "Java EE Developers who want to use Java Messaging Services",
        "Students with Java background"
      ]
    },
    {
      "title": "Frontend web developer Modern HTML CSS JavaScript",
      "url": "https://www.udemy.com/course/web-design-html-css-js/",
      "bio": "Quick Starting guide for Web design covering all the modern coding syntax for HTML CSS and JavaScript and JavaScript DOM",
      "objectives": [
        "How to create web pages with HTML and CSS",
        "Create interactive web content with JavaScript",
        "Basics of coding JavaScript",
        "Bring your web pages to life with Code",
        "Modern Responsive WebSites",
        "Interactive and Dynamic Web Pages"
      ],
      "course_content": {
        "Introduction to modern web design and development with HTML CSS and JavaScript": [
          "Introduction to getting started with course and HTML code",
          "Getting Started with WebDesign Create your web environment start coding",
          "Source Code Books, Code Snippets and Downloadable PDFs about Web Development",
          "How to Create Your First html Page HTML coding beginners",
          "What is an HTML element how HTML works HTML samples",
          "Start with HTML Headings Common Tags HTML",
          "Create HTML Self Closing Tags how they work",
          "Setting Element Attributes in HTML code",
          "How to create links HTML hyperlinks HTML Links anchor Tag",
          "Adding images to HTML pages HTML Images",
          "HTML lists adding content lists with HTML Lists UL OL DL.",
          "What are HTML Tables and how to use tables to present readable content",
          "HTML5 new Semantic Elements meaning in the element tag name",
          "How to create a simple HTML webpage WebPage HTML",
          "HTML online Create a GitHub Page Create your first webpage on GitPages"
        ],
        "CSS style your web pages with Cascading Style Sheets": [
          "Introduction to getting started with CSS",
          "Resource Guide and Source Code",
          "Adding Styling to your HTML with CSS code for beginners",
          "Styling Overview Get Styling with CSS",
          "Colors Background and Font Color with CSS update HTML element colors",
          "What is the CSS Box Model - Box Model Border Padding Margin",
          "Text options with CSS code setting properties and value to transform text and te",
          "Adding Fonts and Font Styles to your web page elements with CSS",
          "Link States Pseudo-Classes setting different states with CSS",
          "How to set Display Properties for page elements CSS styling code examples inline",
          "CSS Position static relative fixed absolute sticky examples",
          "CSS Float setting floats in CSS setting left right and none clearing floats",
          "More Useful CSS Properties zindex outline overflow maxwidth and more",
          "CSS Combinators to select elements from your HTML page options and examples",
          "Examples of common CSS Pseudo Elements firstLetter firstLine after adding conten",
          "How to create a simple CSS styled website Responsive Website CSS Float",
          "Creating a Responsive Website with CSS Flexbox setup 3 column designsite example",
          "How to create a fully responsive website with CSS Grid Modern web design CSS"
        ],
        "JavaScript Getting Started with JavaScript": [
          "Introduction to coding JavaScript making pages interactive",
          "JavaScript source code and resource guide",
          "Getting Started with JavaScript introduction to JavaScript code with examples",
          "How to setup your LiveServer local web design setup for http local pages",
          "JavaScript Variables Let and Const and how to assign values to variables declare",
          "what are JavaScript data types and how to set datatypes basic data types strings",
          "JavaScript Objects and Arrays for storing multiple values in the same variable",
          "Examples of operators in JavaScript code how operators work",
          "What JavaScript functions are how to pass arguments into a function and return",
          "JavaScript Conditions applying logic in code in JavaScript example",
          "Adding loops in your JavaScript code with examples of loop methods"
        ],
        "JavaScript and the DOM Document Object Model (DOM)": [
          "Introduction to JavaScript DOM with coding examples",
          "Resource and Source Code Guide",
          "Introduction to the DOM and the DOM tree with JavaScript",
          "Element Selection from webpages with JavaScript code examples",
          "JavaScript Element Manipulation DOM select and update your page elements with co",
          "How to set Styling attributes with JavaScript code - update web page elements",
          "DOM and Form Elements getting values from input fields with JavaScript code",
          "DOM Element Event Listeners create interactive web pages with JavaScript",
          "How to add event listeners to your web page elements with JavaScript code",
          "Setting page events listen for DOM content loaded and keyup and keydown events",
          "How to create page elements with JavaScript code",
          "Update element position and move page elements with JavaScript code",
          "How to add animation to your webpage elements using JavaScript requestAnimation"
        ],
        "How to create a modern website from scratch Responsive web design": [
          "Source Code and Resource Guide for this section",
          "HTML structure Tags",
          "Create an HTML Page",
          "Use CSS to design a responsive NavBar for the website",
          "Add Google Fonts select from web fonts CSS web design",
          "How to style main web page content create columns",
          "How to add columns to web page footer CSS web design lesson",
          "Add JavaScript for navbar functions"
        ],
        "JavaScript Coding Examples answers to Q&A and useful code with JavaScript": [
          "Learn more about Arrow function expressions",
          "Source code Arrow function expressions code examples",
          "JavaScript Array Method Every Compare Array Contents",
          "Source Code Array Every Method return Boolean condition result",
          "How to add values from an array together for loop examples",
          "Source Code How to add values from an array together for loop examples",
          "JavaScript DOM welcome Message",
          "Source Code Welcome message JavaScript DOM code example",
          "JavaScript Closure simple Example",
          "JavaScript Closure with Values",
          "JavaScript Closure explained",
          "JSON and JavaScript",
          "Making a request xHR vs Fetch",
          "JavaScript Image Gallery Dynamic and element selection"
        ],
        "Advanced JavaScript Exercises": [
          "Custom Map Function",
          "Implementing a simple promise",
          "Deep Cloning and Object",
          "Custom Debounce Method"
        ],
        "Web Design and Development Helpful Videos and lessons": [
          "Learn GitHub how to setup a GitPage update from local drive",
          "JavaScript coding exercise",
          "Learning Guides and resources PDF guides"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "Basic internet skills",
        "How to install and setup applications"
      ],
      "description": "Web Design for Beginners Modern HTML CSS JavaScript coding\nLearn how to\nHow to create web pages with HTML and CSS\nCreate interactive web content with JavaScript\nBasics of coding JavaScript\nBring your web pages to life with Code\nModern Responsive WebSites\nInteractive and Dynamic Web Pages\nAre you curious about creating websites, this course is the perfect place to start.\nEnroll now to get instant access to:\n9+ hours of premium lessons\n16 page downloadable workbook HTML source code, tips, resources and challenges\n32 page downloadable workbook CSS includes source code, tips, resources and challenges\n10 + 17 page downloadable workbooks JavaScript includes source code, tips, resources and challenges\nPremium instructor support to help you learn\nLifetime access to course updates\nLearn all the core fundamentals of modern web design, covering all the commonly used syntax for HTML and CSS. This course is designed to get you started quickly and easily with creating web pages.\nCourse covers all the essentials so that you can begin quickly on your journey to create amazing looking websites. Add JavaScript to make your web pages come to life.\nCovering the core concepts of JavaScript so that you can try the code and get familiar with what it does. Using JavaScript you can access the HTML DOM in the browser which allows you to interact and manipulate web page content. JavaScript creates the interactive and dynamic content seen today in all major modern web pages.\nExplore how you can start coding quickly and focus on designing your webpages, loaded with source code and examples.\nEach section comes with a PDF guide that includes useful section resources, and source code from the lessons so that you can try the code for yourself.\nLearn HTML - how to create an HTML file and structure your HTML code in a modern format ready to be styled. Lessons of this section cover how to get started with coding and creating web pages.\nSetup your Editor and create HTML files\nDebug your code\nHTML tags for page structure\nWhat makes up an HTML element\nWhat are Self closing Tags\nHow to use Element Attributes\nLinking pages together with Hyperlinks\nAdding Images to your web page\nLists and Tables for readable content\nSemantic Page elements\nHow to create a simple webpage\nGo live with a Github page and your HTML site\nLearning HTML covers the following code.\nEditor and setup to write HTML - create an html file\nAnatomy of an HTML element - opening tag, content, element, closing tag\n4 must add tags for HTML pages html, head, title, body\nComments in Code\nCreate a basic template\nIntroduction to common HTML tags <h1><p><div><span>\nSelf closing tags <hr><br>\nTag attributes (id, style, class)\n<a> anchor tag hyperlinks connecting pages\n<img> add images- self closing tags\nLists <li> <ol> <ul>\ntables <table><tr><td> <th>\nHTML semantic elements <nav><header><section><article><aside><footer>\nLearn CSS\nWhat CSS is and how you can style your web pages with Cascading Style Sheets. HTML provides structure for your webpage, CSS allows you to style your page. Design the page with your style, setup page layouts, add colors, fonts, and more. Present your web pages as you want them to look, independent of the HTML you can make your web content look and style as you imagine it should.\nExplore how to add CSS to your HTML page\nHow to add colors to page element backgrounds and text\nWhat the box model is and how you can apply borders, margins, and padding to any page element.\nStyle the text, update the font and customize your text output.\nUpdate you links, adding Pseudo classes to your page elements\nHow to apply display properties, position and floats to set up your page layout.\nReally useful CSS properties explored\nCSS combinators for selection of elements.\nHow to build a responsive webpage with CSS float, CSS grid and CSS flexbox.\nUse CSS  Cascading Style Sheets common syntax covered in this section.\nGoogle Chrome Dev Tools\nAdding Styling to HTML tags style <style> link to CSS file\nCSS rule CSS Syntax (Selector) (Declaration) {Property:value}\nElement Selection by tag name, id, class\nComments in Code\nColors - Color types named colors HEX RGB RGBA\nBackground - color - image - repeat - attachment - position - background shorthand\nBox Model - Borders - Margins - Padding - Height and Width\nText - text-align text-decoration text-transform\nFonts - font-style Google Fonts\nLink states - a:link a:visited a:hover a:active\nDisplay Properties - inline - none - block\nPosition : static relative fixed absolute sticky\nFloat and clear left right and none\nCSS combinators for selection - space child selector >\nPseudo-classes - :hover, :first-child, last-child, :nth-child(2)\nPseudo-Elements - ::first-line , ::first-letter, ::after\nWeb Design Floats - Responsive design\nCSS Grid - display: grid; grid-template-areas:\nCSS Flexbox - axis row and column\nLearn JavaScript Basics\nJavaScript code runs your browser as your html page loads. Adding JavaScript to your code can improve the user experience of the web page. Go from a static webpage to an interactive one with JavaScript. This section will cover the basics of getting started with JavaScript and the code syntax to write JavaScript code. JavaScript is a set of instructions you can add in your code to let the browser know what to do next.\nVariables are at the heart of coding\nThe different data types of JavaScript and how JavaScript can set the data type.\nThe power of Objects and Arrays and how you can use them to store multiple values in one variable.\nOperators to provide calculations within your code\nFunctions to run predefined blocks of code as needed.\nConditions for logic within your code\nLoops to save time and iterate over blocks of code\nLearn JavaScript to make your webpages more interactive.\nJavaScript Introduction alert prompt\nVariables Let and Const\nOperators\nArrays and Objects\nData Types\nFunctions\nConditions\nLoops Do While, For, While, for each\nLearn JavaScript DOM\nJavaScript and the DOM\nDocument Object Model (DOM) is a programming interface for HTML documents, that is the logical structure of a page and how the page content can be accessed and manipulated.  Bring your web pages to life with JavaScript and connect to the web page elements.  Create fully interactive content that responds to the user.  Create Dynamic web page content that can change without page refresh and present new elements and updated content to the user.  Improve your web users experience with JavaScript and the DOM.\nWhat is the DOM Document Object Model\nHow to select elements from your webpage with JavaScript\nManipulate and change your page elements with JavaScript\nHow to set styling attributes for elements\nMake them interactive with Event listeners\nDOM events and Page events with JavaScript\nHow to create elements with code and add them to your webpage\nMoving elements and animation of elements.\nElement Selection\nDOM tree\nMultiple Elements selection\nElement Manipulation\nAdding event listeners\nInput Values\nCreate Elements\nAnimation\nElement Movement\nWindow events\nDocument Events\nKeyboard Events\nTracking key presses",
      "target_audience": [
        "Beginner to web design",
        "Anyone who wants to learn more about coding",
        "Anyone curious to learn HTML CSS and JavaScript",
        "Anyone who wants a quick and easy way to start coding",
        "Anyone who wants to create websites"
      ]
    },
    {
      "title": "Complete Web Developer Course HTML CSS JavaScript PHP jQuery",
      "url": "https://www.udemy.com/course/learn-web-development-complete-step-by-step-guide-to-success/",
      "bio": "Complete web developer Guide to websites working with HTML, CSS, JavaScript, PHP, Bootstrap, JQuery, MySQL and more",
      "objectives": [
        "create websites",
        "know how to use HTML",
        "know how to use CSS",
        "know how to use JavaScript",
        "developer websites and applications online",
        "how to use jquery",
        "how to use PHP",
        "what bootstrap is and how to setup sites with it"
      ],
      "course_content": {
        "How to Get on the web": [
          "About this course what you will learn",
          "Checklist to becoming a web developer",
          "Web editors",
          "Web Servers Local Machines",
          "Web development web server resources",
          "web development resource guide",
          "Planning your Website requirements",
          "web development and hosting",
          "Web development hosting and CMS",
          "Picking and finding the best Domain Names",
          "Step 1 getting started online",
          "Step1 - Getting started online",
          "Getting started online why have a domain",
          "First Steps to Getting online claim your spot on the internet",
          "Web file transfer to server FTP apps",
          "Web development FTP software list",
          "Web Databases phpmyadmin mySQL",
          "Version control file sharing Git",
          "website planning and design",
          "Web development Course Resources",
          "Web Developer getting social",
          "Getting social resources"
        ],
        "HTML Essential Training": [
          "Step 2 Learn HTML and CSS",
          "Step 2 - Coding HTML CSS",
          "HTML course Introduction",
          "HTML Basics",
          "HTML paragraph element",
          "HTML Titles SEO",
          "Intro To HTML Code Sample basic page",
          "HTML Headings",
          "Intro To HTML Code Sample headings",
          "HTML div span document structure",
          "Intro To HTML Code Sample using divs and spans",
          "HTML Hyperlinks",
          "HTML adding Images",
          "HTML wrapping an image with a hyperlink",
          "Intro To HTML Code Sample wrap hyperlink",
          "HTML how to use ordered Lists",
          "Intro To HTML Code Sample Lists",
          "HTML working with unordered lists",
          "HTML nice readable code comments",
          "HTML introduction to styling",
          "HTML and JavaScript",
          "HTML forms",
          "HTML Course Source Code of project",
          "Source Code"
        ],
        "CSS Essential Training": [
          "CSS course introduction",
          "HTML adding CSS",
          "CSS using IDs to select elements",
          "CSS spans and divs Classes",
          "Using CSS",
          "CSS working with backgrounds",
          "CSS selecting the right elements",
          "CSS hyperlinks and navigation",
          "CSS box model",
          "css box model shorthand",
          "CSS nesting selections",
          "CSS Combinations",
          "CSS and HTML source code",
          "CSS positions"
        ],
        "Create a website with HTML and CSS": [
          "Resources for this Section",
          "Make a Webite from scratch HTML meta tags",
          "Source Code",
          "Make a Website Let's get coding",
          "Make a Website create navigation hyperlinks",
          "More about HTML learning about adding content and paragraphs and",
          "index source 2",
          "Add styling here comes the CSS",
          "CSS navigation bar design",
          "CSS box model",
          "Hyperlinks hover and more CSS",
          "Web Template updates CSS",
          "Make a Website make it responsive",
          "Make a Website forms",
          "Source HTML index",
          "Source CSS style",
          "Step 3 Building a portfolio",
          "Step 3 - Build a portfolio"
        ],
        "JavaScript Essential Training": [
          "JavaScript introduction to coding JavaScript",
          "JavaScript Integers",
          "JavaScript Strings",
          "JavaScript Data Types Boolean",
          "JavaScript Example 1",
          "JavaScript output to console",
          "JavaScript working with Variables",
          "JavaScript introduction to the DOM",
          "JavaScript Example 2",
          "JavaScript introduction to using functions",
          "JavaScript example 3",
          "JavaScript functions expanded",
          "JavaScript global vs local variables",
          "JavaScript example 4",
          "JavaScript Comparison Operators",
          "JavaScript complex operators",
          "Rock paper Scissors source code",
          "JavaScript setup an array",
          "JavaScript working with arrays",
          "JavaScript example 6 arrays",
          "JavaScript create an object",
          "JavaScript example 7 objects",
          "JavaScript Loops",
          "JavaScript example 8 loops",
          "JavaScript Concatenate strings",
          "JavaScript working with JavaScript Methods",
          "JavaScript example 9 source file",
          "JavaScript Create interactive Game",
          "JavaScript example 10 Source code"
        ],
        "Learn jQuery": [
          "jQuery Course introduction",
          "jQuery Cheatsheet",
          "jQuery and the DOM",
          "What is jQuery",
          "setup jquery on your web page",
          "Setup jQuery",
          "Javascript vs jQuery",
          "jQuery source setup",
          "jQuery Selectors",
          "jQuery CSS selectors to help identify HTML elements",
          "jQuery source selectors",
          "jQuery loop all items",
          "jQuery source multiple selections",
          "jQuery selector alternating row colors",
          "jQuery events",
          "jQuery source Events",
          "jQuery mulitple event handling",
          "jQuery multiple event handling",
          "jQuery navigation menu update class on change",
          "jQuery updated css for nav menu",
          "jQuery Navigation Menu CSS",
          "jQuery Manipulating CSS",
          "jQuery css code 1",
          "jQuery CSS changes",
          "jQuery css code 2",
          "jQuery attributes",
          "jQuery checkboxes and fields",
          "jQuery attr and prop val",
          "jQuery html and text",
          "jQuery DOM Manipulation Methods",
          "jQuery before after source",
          "jQuery Traversing the DOM last and first elements",
          "jQuery Traversing resource",
          "jQuery using find",
          "jQuery find content from iframe update elements",
          "jQuery tree traversal",
          "Traversing source code",
          "jQuery effects Hide Show",
          "jQuery animation effects",
          "jQuery animation options",
          "jQuery sliding effects",
          "jQuery fading effects",
          "HTML source Effects",
          "JS source Effects",
          "jQuery AJAX load",
          "jQuery AJAX getJSON",
          "jQuery AJAX POST data return server output",
          "jQuery AJAX parseJSON",
          "JSON file source",
          "jQuery Challenge",
          "Challenge Solution",
          "Main JS source File"
        ],
        "Bootstrap HTML, CSS, and JS framework for developing responsive sites": [
          "Step 4 Knowing the three essential technologies of the web",
          "Step 4 - Make money as a front end developer",
          "Bootstrap course intro to Bootstrap",
          "Bootstrap online resources Quick websites",
          "Bootstrap Resources",
          "Bootstrap themes fast setup",
          "Bootstrap free themes online",
          "Bootstrap adding bootstrap to your site",
          "Bootstrap setup",
          "Bootstrap introduction to the grid",
          "Bootstrap Columns Grid Advanced",
          "Bootstrap Grid explained",
          "Bootstrap Typography HTML5 Code defaults",
          "bootstrap tables",
          "bootstrap table source",
          "Bootstrap Forms and Buttons",
          "bootstrap sample form code",
          "Buttons and button makers",
          "Bootstrap Nav Navbar and navigation",
          "Source Code NavBar",
          "bootstrap starter template",
          "Bootstrap Components Glyphicons",
          "Bootstrap Components and more",
          "Bootstrap resources from course",
          "Bootstrap JavaScript",
          "Bootstrap website in 5 minutes",
          "Bootstrap Course Resources",
          "Bootstrap 4 Beta Version"
        ],
        "Learning PHP": [
          "Step 5 Dynamic Databases Constructor Languages LAMP",
          "Step 5 - Back-end Web development Databases",
          "PHP setup local host for server side scripting",
          "PHP setup config install",
          "PHP information",
          "PHP Outputting content",
          "PHP server variables comments",
          "PHP errors and syntax",
          "PHP variables output variables quotes and more",
          "PHP Types Variables and Quotes",
          "PHP operators",
          "PHP operators source code",
          "PHP variable type conversion operators",
          "PHP conditional statements else if",
          "PHP if else switch statements",
          "PHP switch statement",
          "SourceCode Statements",
          "PHP loops do while",
          "PHP Loop examples",
          "PHP loops",
          "SourceCode Do while",
          "PHP learning about arrays",
          "PHP adding to array",
          "PHP array functions",
          "SourceCode Arrays",
          "PHP arrays",
          "PHP Challenge recreate alternating row colors",
          "Challenge 1 HTML",
          "PHP solution alternating colors code snippet",
          "Challenge 1 Solution code",
          "PHP Functions Random color generator",
          "Functions Random Background Source Code",
          "PHP Functions Arguments Global Values",
          "Functions Source Code",
          "PHP include require once",
          "PHP require include source code",
          "PHP setting cookies",
          "PHP using sessions",
          "PHP Challenge 2 Count users visits",
          "PHP Challenge 2 Solution",
          "PHP challenge 2 solution code",
          "PHP and HTML web templates",
          "PHP website template"
        ],
        "Learning about MySQL PHP PHPmyadmin": [
          "Getting started with MySQL",
          "MySQL options",
          "mySQL Course Resources",
          "MySQL PHPmyadmin create a table",
          "MYSQL connect to database",
          "MYSQL connect Object Oriented Method",
          "MYSQL Source",
          "MYSQL create a database with PHP",
          "MYSQL DROP database",
          "MYSQL Source 2",
          "MYSQL Create Table Datatypes",
          "MYSQL Source 3",
          "mySQL DataTypes",
          "MYSQl Object vs Procedural Connections",
          "MySQL Insert Data",
          "MySQL Fetch Array Select",
          "MYSQL Source 4",
          "MySQL Insert array list data",
          "MySQL selectors wildcards and LIKE",
          "MYSQL Source 5",
          "MySQL Sort order",
          "MySQL joining tables",
          "MYSQL Source 8",
          "MySQL DELETE records",
          "MySQL UPDATE table",
          "MySQL GROUPING rows",
          "MYSQL Source 6",
          "MySQL COUNTING ROWs",
          "MySQL clean avoid sql injections",
          "MYSQL Source 9"
        ],
        "Wordpress CMS setup install": [
          "Wordpress Tutorial Download Server setup",
          "Wordpress Tutorial Complete install in under 5 minutes",
          "Wordpress install notes",
          "Wordpress Tutorial keeping up to date dashboard",
          "Wordpress Tutorial getting to know the dashboard",
          "Wordpress Tutorial Plugins Backup and more",
          "Wordpress Tutorial Settings Pinglists custom URLs",
          "Wordpress Tutorial Customizing settings",
          "Wordpress Useful links",
          "Wordpress Tutorial creating a post",
          "Wordpress Tutorial posting options",
          "Wordpress Tutorial editing and updating posts",
          "Wordpress Tutorial comments",
          "Wordpress Tutorial create pages",
          "Wordpress Tutorial custom page structure",
          "Wordpress Tutorial adding a theme",
          "Wordpress Tutorial widgets customize page theme",
          "Wordpress Tutorial working with menus",
          "Wordpress Tutorial Appearance Editor PHP code",
          "Wordpress Tutorial working with plugins",
          "Ultimate plugins for wordpress",
          "Wordpress Tutorial Tools",
          "Wordpress Tutorial user control"
        ]
      },
      "requirements": [
        "No pre-knowledge required",
        "a computer",
        "desire to learn"
      ],
      "description": "The Premier Web development Course. EVERYTHING web creation.\nRegular content updates and new material. One stop place to learn web development!\nDid you know that you can make an extra income online by learning the skills presented in this course! Whether you want to earn extra income, change your career or want to launch your own web business this is the course for you. You can begin to earn money online by while you're learning and practicing web development.\nWe teach you the skills you need to succeed.\nEverything you need to know to create your own websites and web applications, easy to follow complete course. Creating websites give you freedom to express you creativity, launch a business and a whole lot more.\nI've been a web developer for over 14 years, and I wanted to create a course that has it all, answers all of your questions about starting off and gives you the base to launch your own successful web creations.\nThis course is designed to have important information to everyone of all levels, we include source code, practice exercises, challenges, quizzes, resources, examples, samples and everything else in between. I want you to be able to take this course and gain a solid understanding of how to create your own websites. This course is designed to be effective at teaching and stressing the important aspects and common goals to create websites.\nThis course is designed to equip you with the knowledge to proceed with your own goals.\nWe are also planning on having regular updates, if you find something isn't covered or you want more information let me know and I will help. I'm committed to creating a premier course that is designed to help.\nWe cover everything in an easy to follow format.\nHTML\n\nCSS\n\nJavaScript\n\nJQuery\n\nBootstrap\n\nPHP\nWe have a full 30 day money back guarantee. Content is designed to be effective and clear.\nWe walk you through step by step with detailed explanations of code and more.\n\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons and code samples\ncode snippets\nLinks to top resources to save time\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions\nEveryone and anyone can benefit from this course.",
      "target_audience": [
        "course is for anyone who wants to create web content",
        "anyone who wants to expand their knowledge about web development",
        "anyone who wants to earn an income creating websites",
        "anyone who wants to create their own web business"
      ]
    },
    {
      "title": "A 18 Hour SQL/SQL Server 2014/Visual Studio 2017 Course",
      "url": "https://www.udemy.com/course/learnsqlwithsqlserver2014/",
      "bio": "Learn SQL, SQL Server, SSMS, ASP.NET, Visual Studio, C#, HTML and More!",
      "objectives": [
        "Learn SQL",
        "Learn SQL Server",
        "Learn the Basics of Microsoft Visual Studio 2017 Community",
        "Learn the Basics of Microsoft ASP.NET with SQL Server",
        "Learn Enough C# To Connect to Databases",
        "Learn Enough JQuery to Make Database Controls Interctive (jQuery is used on the bottom of the course)",
        "Learn the Fundamentals of SQL Server Administration",
        "Learn how to work with built in functions",
        "Learn how to write joins",
        "Learn how to make web pages for collecting and storing information",
        "Learn how to format data in web pages and tables",
        "Learn how to represent queries with pictures for easier understanding",
        "Learn how to use program flow control features like if/else and more",
        "Learn how to write stored procedures",
        "Learn how to write user defined functions",
        "Learn how to write views and triggers",
        "Learn how to use the SQL Server debugger",
        "Learn how to create, save, commit and roll back transactions",
        "Learn how to create users, database roles, logins, and work with securables",
        "Learn how to backup, restore, attach and detach databases",
        "Learn how to import data into SQL Server from other programs",
        "Learn how to bring tables into first, second and third normal form",
        "Learn how to work with XML in SQL Server and ASP.NET Controls",
        "Learn how to use and save Table variables",
        "Learn how to create and use Common Table Expressions",
        "Learn how to work with string functions like char, and substring",
        "Learn how to use the Lag/Lead Functions and the Over Clause",
        "Learn how to work with date functions like Datename, Datepart, getDate and more",
        "Learn how to build dynamic theme switching with JQuery",
        "Learn how to build dashboard with C#/CSS/HTML/SQL and JQuery",
        "Learn how to perform data validation",
        "Learn how to print to printers, PDF's, Google Drive, and the Cloud",
        "Build a web based data entry system with C#/SQL, CSS and VS",
        "Understand how to use begin/end/go and ;",
        "Learn how to build a web interface layout that can be dragged, dropped and saved between page loads"
      ],
      "course_content": {
        "Introduction: Get the Needed Software": [
          "Get SQL Server 2014 Express",
          "Get Microsoft Visual Studio",
          "Configure the Layout of Panels in the Management Studio and Visual Studio"
        ],
        "Querying Basics": [
          "Create a Table and Write a Simple Query and Display the Results",
          "Simple Queries",
          "Write a Query with a Where Restriction",
          "Adding a Simple Where Restriction",
          "Write a Query with a Where and an Order By",
          "Order By Clauses",
          "Filtering with Where and Between",
          "Using Between",
          "Aliasing Columns",
          "Aliasing Columns",
          "Aliasing Computed Columns",
          "Computed Values",
          "Use The Query Designer",
          "Query Designer",
          "Make an ASP.NET Web Page with SQL Server",
          "ASP.NET Pages",
          "Summarize Blocks of Records with Group By",
          "Group By",
          "Having Clause",
          "Having Clause",
          "Select Into",
          "Select Into",
          "Add Multiple Parameters to an ASP.NET Page",
          "Multiple Parameters"
        ],
        "Table Manipulation": [
          "Table Creation and Data Insertion",
          "Table creation and Data Insertion",
          "Updating Records",
          "Update Records",
          "ASP.NET Page with Updating and Deleting",
          "Updating, Deleting and Inserting Through Web Pages",
          "1st Normal Form",
          "First Normal Form",
          "Second Normal Form",
          "Second Normal Form",
          "Third Normal Form"
        ],
        "Table Joins": [
          "Inner Join",
          "Inner Joins with Editor Window and Where Statements",
          "Inner Joins",
          "Left Join",
          "Left Joins with Editor and Where Statement",
          "Left Joins",
          "Right Join",
          "Right Joins with Query Editor and Filtering Conditions",
          "Right Joins",
          "Full Joins with The Query Editor",
          "Full Joins"
        ],
        "Build an ASP.NET Page With Multiple Tables and Controls": [
          "Connect Gridview to Tables with C#",
          "Create a Query Editor with C#"
        ],
        "Create an XML Powered ASP.NET Page": [
          "Create a Table Suited For XML Output",
          "Create a Page With a Control That Connects to the XML Table",
          "XML Tables"
        ],
        "Using SQL Server Functions and Operators": [
          "In Logical Operator",
          "Where with Like",
          "Like, And and In",
          "Scalar Functions",
          "Scalar Functions",
          "Aggregate Functions",
          "Aggregating Functions",
          "Summarzing Records with Over",
          "Over Statement"
        ],
        "Subqueries": [
          "Subqueries in Select Clauses",
          "Subqueries in Selects",
          "Subqueries in From"
        ],
        "Stored Procedures and Programming Constructs": [
          "Write and Execute a Simple Stored Procedure",
          "Simple Stored Procedures",
          "Part 1: Write a Parametrized Procedure",
          "Part 2: Asp.NET Page Powered by Parametrized Store Procedure",
          "Procedures with Parameters",
          "Add IF/Else Blocks",
          "If/Else Blocks",
          "Case and When Statements with Functions",
          "Case and When",
          "While Blocks, Variables",
          "While, Variables",
          "Stored Procedures with Output Parameters",
          "Try/Catch Error Handling",
          "Try/Catch",
          "Comparing Values Between Records with the Lag Function",
          "Common Table Expressions",
          "Using the Lead Function with Grouped Data and CTE's",
          "Lead and Lag Functions",
          "CTE with Inner Join and Aggregating Functions and CSV Files",
          "Nesting Functions and Pivoting Tables",
          "Nesting Functions and Pivoting Tables"
        ],
        "User Defined Functions": [
          "Scalar Valued Functions",
          "User Defined Scalar Functions",
          "Table valued Functions",
          "Table valued functions",
          "Table Variables",
          "Table Variables",
          "ASP.NET/SQL Server/LINQ"
        ]
      },
      "requirements": [
        "Ability to download and install SQL Server 2014 (100% Free)",
        "Ability to download and install Visual Studio 2017",
        "The SQL begins at the beginner level and progresses through more advanced lessons.",
        "The C# begins at the intermediate level.",
        "If you use previous versions of SQL Server, like 2008 or 2012, you will have problems with the files used. It's best to use 2014 and up."
      ],
      "description": "Who Should Join:\n\n1. Friends, please take the time to review the curriculum carefully before buying so you can see exactly whether this is the right course for you. Please kindly refrain from enrolling until this very important step is complete.\n2. Please watch the free preview videos so you can see whether the presentation style works for you. Please remember  I am just one person, and I make my videos often after I have been working for many hours already.\n3. You are interested in real coding.\n4. You enjoy detailed explanations at an introductory level. Please answer the questions in the quizzes based on the course content, and not external knowledge you might already have. This is very important in order for the quizzes to work correctly.\nVery important note: this course is a general overview of many topics, so not every topic can be explored in great depth and at         every level of subtlety.\n5. You can take videos that are 13 minutes on average.\n6. You enjoy seeing how different technologies interact.\n7. You understand that most of the SQL is done in the Microsoft Management Studio, and not Visual Studio.\n9. You're NOT looking for fancy graphics, a talking head, or entertainment.\n9. You're looking for practical, carefully explained examples, where the code is written line by line.\n10. I made all the code in a fairly big font to be sure it's easy to see.\n11. If you use SQL Server versions below 2014, some of the code will not work. You must use versions 2014 and above.\n\n12. This course uses ASP.NET and C# and not MVC.\n13. You understand this is a beginners course, and therefore everything is developed over a period of 18 hours, but by the end, assuming you complete the course, you will have many powerful, practical skills.\n14. I don't have an intense amount of energy in my videos because they are made after I've been at work for many hours already.\nMajor benefits of the course:\n1) Learn query writing by using the Microsoft Management Studio\n2) Learn how to create database connected web pages using SQL and ASP.NET controls\n4) Get PDF's that depict difficult concepts in pictures for improved understanding\n5) Get 210 quiz questions so you can feel confident you're making true progress.\n6) Learn the basics of database connecting code using Microsoft's  premier  programming language: C#\n7) Get exposure to modern SQL language features like Lag/Lead\n8) Build a dashboard system with SQL Server, ASP Web Forms, C# and JQuery (bottom of course)\nGiven the number of videos, PDF's, variety of teaching methods, quizzes, and a project that is designed to give you a feeling of what to expect in the real world, we're confident this is by far the best deal on this site. Join today, and learn truly valuable skills.\njQuery and related marks are trademarks of the JS Foundation, and this course is not affiliated with or endorsed by the JS Foundation.\n\nParts of promo background licensed from Presenter Media . com",
      "target_audience": [
        "This course is for those who appreciate fine levels of detail.",
        "This course is intended for SQL Server novices",
        "This course is intended for ASP.NET novices",
        "This course is intended for Visual Studio novices",
        "This course is intended for those who are intermediate or above in C#",
        "This course is NOT for those who want to be entertained.",
        "This course is NOT for those who want 5 minutes videos."
      ]
    },
    {
      "title": "Python for beginners",
      "url": "https://www.udemy.com/course/python-core-and-advanced/",
      "bio": "Master the fundamentals of Python while working on various usecases in easy steps",
      "objectives": [
        "Master the Features of Python Language",
        "Install Python Virtual Machine and the Eclipse IDE(PyDev)",
        "Execute your first python program",
        "Learn various simple types as well as collection types",
        "Define logic using conditional statements ,looping constructs",
        "Use the different types of operators",
        "See the input and output functions in action",
        "Pass Command line arguments",
        "Create and use functions , Lambdas Decorators and Generators",
        "Learn what Object Oriented Programming is the four OOPs principles",
        "Implement inheritance, abstraction, polymorphism and encapsulation",
        "Understand interfaces, their importance, and their uses",
        "Use abstract classes and interfaces to implement abstraction",
        "Handle Exceptions",
        "Read and Write files using the Files API",
        "Do pattern matching using Regular expressions",
        "Deal with data and time",
        "All in simple steps"
      ],
      "course_content": {
        "Introduction": [
          "Course and Instructor Introduction",
          "Private Course Feedback Link",
          "How to make the best of this course",
          "Download Slides",
          "Download Theory Notes",
          "What is Python?",
          "Why Python?",
          "Basics"
        ],
        "Software Setup and First Python Script": [
          "Introduction",
          "Install Python",
          "Install PyCharm",
          "Download the completed projects and Assignments",
          "First Python Program",
          "Comments",
          "Python Indentation"
        ],
        "Datatypes": [
          "Introduction",
          "Numeric Types",
          "Complex , Binary and Hexadecimal Types",
          "Boolean Types",
          "Type Conversion Functions",
          "Identifiers",
          "Datatypes",
          "Datatypes"
        ],
        "Sequence Types": [
          "Introduction",
          "Create a string",
          "Slicing a string",
          "Steps in slicing",
          "Strip the spaces",
          "Few more string methods",
          "Data Types",
          "Create a list",
          "Adding and removing list elements",
          "Few more list functions",
          "Tuple",
          "Use a Tuple",
          "List to Tuple",
          "List vs Tuple",
          "Set Type",
          "Frozen Set",
          "List and Set",
          "Tuple",
          "range type",
          "bytes and bytearray",
          "Dictionary",
          "Dictionary",
          "Immutability",
          "Datatypes Patient Usecase",
          "Map of Lists Usecase",
          "Sequence Types"
        ],
        "Special Types": [
          "None type",
          "Escape chars",
          "Constants",
          "del keyword",
          "Data Types Summary",
          "Special Types"
        ],
        "Operators and Operands": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Logical Operators",
          "Operators BMI Usecase",
          "Operators and Operands"
        ],
        "Input and Output functions": [
          "Introduction",
          "print",
          "print and string formatting",
          "input",
          "reading multiple inputs",
          "Grocery Checkout System",
          "Input and Output functions",
          "Input and Output Functions"
        ],
        "More Programs": [
          "Reverse a String",
          "Reverse using split and join",
          "Reverse the words in a string",
          "Reverse the characters in the words",
          "Remove Duplicate Chars",
          "Count the characters",
          "Print Right Angled Triangle",
          "Print Pyramid Pattern",
          "Find substrings in a given string"
        ],
        "Flow Control Statements": [
          "Introduction",
          "If Else Syntax",
          "Find even or odd number",
          "IF Else Ladder",
          "Handle Zero",
          "If-Else Ladder",
          "While Syntax",
          "Display numbers from 1 to 20",
          "Odd numbers between given numbers",
          "For Syntax",
          "using for loop",
          "product of numbers in a list",
          "multiplication table of a given number",
          "break",
          "continue",
          "assert",
          "More Programs - Remove Duplicates in List",
          "More Programs - Count Vowels in a word",
          "More Programs - Handle employee Details",
          "Flow Control Statements",
          "Loops",
          "Input and Output functions"
        ]
      },
      "requirements": [
        "Internet Connection"
      ],
      "description": "Sample of the reviews:\nBharath truly knows how to teach, how to educate, and how to make you understand the meaning of his courses. Quite frankly, this guy is really good. You won't regret it! -- Didier K. Nzimbi\nAs a beginner from non IT background, i learnt lot from this course and build a confidence to proceed in python coding and definitely recommending to pursue this course -- Mahesh Dedge\n\nGreat course in Python, Bharath is the best instructor in Udemy, I like his way he teaches and how he structures his course. I come from a Java background and no prior experience with Python, which will be important for me to do with my AI project -- Bruno Militzer\n\n----\n\nWhether you are a College student learning the fundamentals of Python or a Data Science expert using python to analyze your data or a Web Developer using python frameworks like DJango or a Experienced python developer who wants to fill in the gaps , this course will help you accomplish your goals.\nMaster the Features of Python Language\nInstall Python Virtual Machine and the Eclipse IDE(PyDev)\nor Install PyCharm Community Edition\nExecute your first python program\nLearn various simple types as well as collection types lists , sets , maps and tuples\nWork on various Usecases to apply you Python knowledge\nDefine logic using conditional statements ,looping constructs\nUse the different types of operators\nSee the input and output functions in action\nPass Command line arguments\nCreate and use functions , Lambdas Decorators and Generators\nLearn what Object Oriented Programming is the four OOPs principles\nImplement inheritance, abstraction, polymorphism and encapsulation\nUnderstand interfaces, their importance, and their uses\nUse abstract classes and interfaces to implement abstraction\nSpawn of multiple threads\nHandle Exceptions\nRead and Write files using the Files API\nDo pattern matching using Regular expressions\nDeal with data and time\nWork with databases\nConnect with MySql and Postgresql\nMaster the fundamentals of Unit Testing and Virtual Environments\nAll in simple steps\nWhat are the requirements?\nPython,PyCharm Community Edition or Eclipse IDE(Installation is covered in easy setup section)",
      "target_audience": [
        "Any student who wants to learn python in depth",
        "Developers who are getting started with Python",
        "Big Data professionals who want to learn pythons quickly and in depth",
        "Experienced developers who want to fill in any gaps in their knowledge"
      ]
    },
    {
      "title": "Modern React with Redux",
      "url": "https://www.udemy.com/course/react-redux/",
      "bio": "Master React and Redux. Apply modern design patterns to build apps with React Router, TailwindCSS, Context, and Hooks!",
      "objectives": [
        "Create dynamic web apps using the latest in web technology",
        "Acquire the programming skills needed to obtain a software engineering job",
        "Practice your skills with many large projects, exercises, and quizzes",
        "Implement client-side navigation and routing using React Router for seamless multi-page user experiences",
        "Leverage the power of TypeScript with React for safer coding practices and reducing runtime errors",
        "Master form handling techniques, including robust validation patterns to improve user input experience",
        "Get a deep dive into state management with Redux and the Redux Toolkit to manage complex app states effortlessly",
        "Gain proficiency in handling API requests and managing data flow in your applications",
        "Enhance application performance with immutable state management using Immer",
        "Develop dynamic and responsive data tables to display, sort, and filter large datasets efficiently",
        "Streamline your development process by integrating TailwindCSS for rapid UI development"
      ],
      "course_content": {
        "Let's Dive In!": [
          "How to Get Help",
          "Join Our Community!",
          "Course Resources",
          "Let's Build an App!",
          "Critical Questions",
          "Core Concepts",
          "A Few More Critical Questions",
          "Node Setup",
          "Starter Project Files",
          "Working with a React Project"
        ],
        "Creating Content with JSX": [
          "Showing Basic Content",
          "What is JSX?",
          "Printing JavaScript Variables in JSX",
          "Shorthand JS Expressions",
          "Showing Javascript Values in JSX",
          "Exercise Overview",
          "Quick Practice with JSX",
          "Exercise Solution",
          "Typical Component Layouts",
          "Customizing Elements with Props",
          "Converting HTML to JSX",
          "Applying Styling in JSX",
          "More on JSX",
          "Practice JSX Conversion",
          "Exercise Solution",
          "Extracting Components",
          "Module Systems Overview",
          "Imports and Exports",
          "Cheatsheet for JSX"
        ],
        "Building with Reusable Components": [
          "Starter Project Files",
          "Project Overview",
          "Creating Core Components",
          "Introducing the Props System",
          "Picturing the Movement of Data",
          "Adding Props",
          "Using Argument Destructuring",
          "Practice with Props",
          "Exercise Solution",
          "The React Developer Tools",
          "The Most Common Props Mistake",
          "Communicating With Props",
          "Images for the App",
          "Including Images",
          "Handling Image Accessibility",
          "Review on how CSS Works",
          "Adding CSS Libraries with NPM",
          "A Big Pile of HTML!",
          "Last Bit of Styling"
        ],
        "State: How to Change Your App": [
          "Starter Project Files",
          "App Overview",
          "Initial App Setup",
          "Introducing the Event System",
          "Events in Detail",
          "Variations on Event Handlers",
          "Quiz on Events",
          "Exercise with Events",
          "Exercise Solution",
          "Introducing the State System",
          "More on State",
          "Understanding the Re-Rendering Process",
          "Got These Five Points?",
          "Why Array Destructuring?",
          "Back to the App",
          "Picking a Random Element",
          "List Building in React",
          "Images for the App",
          "Loading and Showing SVGs",
          "Increasing Image Size",
          "Adding Custom CSS",
          "Finalizing Styling",
          "App Wrapup and Review"
        ],
        "Using an API with React": [
          "Starter Project Files",
          "App Overview",
          "Project Setup",
          "The Path Forward",
          "Overview of HTTP Requests",
          "Note About the Unsplash API",
          "Understanding the API",
          "Making an HTTP Request",
          "[Optional] Using Async:Await",
          "Data Fetching Cleanup",
          "Thinking About Data Flow",
          "Child to Parent Communication",
          "Implementing Child to Parent Communication",
          "Upward Communication",
          "Handling Form Submission",
          "Handling Input Elements",
          "[Optional] OK But Why?",
          "Creating a Controlled Input",
          "Exercise Solution",
          "Running the Search",
          "Reminder on Async:Await",
          "Communicating the List of Images Down",
          "Building a List of Images",
          "Handling List Updates",
          "Notes on Keys",
          "Displaying Images",
          "A Touch of Styling",
          "App Wrapup"
        ],
        "How to Handle Forms": [
          "Starter Project Files",
          "App Overview",
          "Initial Setup",
          "State Location",
          "Reminder on Event Handlers",
          "Extra CSS",
          "Receiving New Titles",
          "Adding Styling",
          "Updating State",
          "Don't Mutate That State!",
          "State Updates - Cheat Sheet",
          "[Optional] Adding Elements to the Start or End",
          "Adding Elements",
          "[Optional] Exercise Solution",
          "[Optional] Inserting Elements",
          "Inserting Elements",
          "[Optional] Exercise Solution",
          "[Optional] Removing Elements",
          "Removing Elements",
          "[Optional] Exercise Solution",
          "[Optional] Modifying Elements",
          "[Super Optional] Why the Special Syntax?",
          "Modifying Elements",
          "[Optional] Exercise Solution",
          "[Optional] Adding, Changing, or Removing Object Properties",
          "Cheatsheet for State Changes",
          "Adding a Book, For Real!",
          "Generating Random ID's",
          "Displaying the List",
          "Deleting Records",
          "Toggling Form Display",
          "Default Form Values",
          "Updating the Title",
          "Closing the Form on Submit",
          "A Better Solution!",
          "Collapsing Two Handlers into One",
          "Adding Images"
        ],
        "Data Persistence with API Requests": [
          "Adding Data Persistence",
          "JSON Server Issues and Required Version",
          "Server Setup",
          "What Just Happened?",
          "How the API Works",
          "Introducing the REST Client",
          "ECONNREFUSED 127.0.0.1:3001 Errors in VSCode",
          "Using the REST Client",
          "Creating a New Record",
          "Fetching a List of Records",
          "Introducing useEffect",
          "useEffect in Action",
          "More on useEffect",
          "When Does it Run?",
          "Updating a Record",
          "Thinking About Updates",
          "Deleting a Record"
        ],
        "Communication Using the Context System": [
          "Introducing Context",
          "Context in Action",
          "Changing Context Values",
          "More on Changing Context",
          "Application vs Component State",
          "Refactoring to Use Context",
          "Refactoring the App",
          "Quick Note",
          "Reminder on Sharing with Context",
          "Props and Context Together",
          "Last Bit of Refactoring",
          "A Small Taste of Reusable Hooks"
        ],
        "Deeper Dive into Hooks!": [
          "Return to useEffect",
          "Quick Note",
          "Understanding the Issue",
          "Applying the Fix",
          "ESLint is Good, but be Careful!",
          "Stable References with useCallback",
          "Fixing Bugs with useCallback",
          "Fixing UseEffect Bugs",
          "useEffect Cleanup Functions",
          "The Purpose of Cleanup Functions"
        ],
        "Custom Navigation and Routing Systems": [
          "Starter Project Files",
          "Project Overview",
          "Project Setup",
          "Some Button Theory",
          "Underlying Elements",
          "The Children Prop",
          "Props Design",
          "Validating Props with PropTypes",
          "PropTypes in Action",
          "Introducing TailwindCSS",
          "Required Tailwind Configuration",
          "How to use Tailwind",
          "Review on Styling",
          "The ClassNames Library",
          "Building Some Variations",
          "text-white Overriding Other Colors",
          "Finalizing the Variations",
          "Using Icons in React Projects",
          "Issues with Event Handlers",
          "Passing Props Through",
          "Handling the Special ClassName Case",
          "Exclusive Props with TypeScript instead of PropTypes"
        ]
      },
      "requirements": [
        "A Mac or Windows Computer"
      ],
      "description": "Congratulations! You've found the most popular, most complete, and most up-to-date resource online for learning React and Redux!\nThousands of other engineers have learned React and Redux, and you can too. This course uses a time-tested, battle-proven method to make sure you understand exactly how React and Redux work, and will get you a new job working as a software engineer or help you build that app you've always been dreaming about.\nThe difference between this course and all the others: you will understand the design patterns used by top companies to build massively popular web apps.\nReact is the most popular Javascript library, and the job market is still hotter than ever. Companies large and small can't hire engineers who understand React and Redux fast enough, and salaries for engineers are at an all-time high. It's a great time to learn React!\n___________________\nWhat will you build?\nThis course features hundreds of videos with hundreds of custom diagrams to help you understand how React and Redux work. No prior experience with either is necessary. Through tireless, patient explanations and many interesting practical examples, you'll learn the fundamentals of building dynamic and live web apps using React.\nEach topic included in this course is added incrementally, to make sure that you have a solid foundation of knowledge. You'll find plenty of discussion added in to help you understand exactly when and where to use each feature of React and Redux.\nAdding to your experience, the course shows modern techniques and tools, equipping you with the latest skills needed for the dynamic web development landscape. You’ll get hands-on experience with cutting-edge features like Context API for state management, TailwindCSS for styling, React Router for navigation, and Typescript to add type safety to your React apps. This holistic approach ensures not only do you learn React and Redux but also the surrounding ecosystem that makes modern web development efficient and enjoyable.\nPractical projects are at the heart of this learning experience. By integrating APIs, managing app state with Redux, and using React Hooks for component lifecycle management, you’ll have the opportunity to build applications that are both complex and high-performing. These projects are designed to simulate real-world web development scenarios, preparing you for the challenges that professional developers face daily.\nMy guarantee to you: there is no other course online that teaches more features of React and Redux Toolkit. This is the most comprehensive resource there is.\n\n\nBelow is a partial list of the topics you'll find in this course:\nMaster the fundamental features of React, including JSX, state, and props\nFrom square one, understand how to build reusable components\nDive into the source code of Redux to understand how it works behind the scenes\nTest your knowledge and hone your skills with numerous coding exercises\nUse popular styling libraries to build beautiful apps\nSee different methods of building UI's through composition of components\nIntegrate Redux Toolkit for efficient state management\nLeverage React Hooks for more intuitive component logic\nManage app-wide state with the Context API for simpler global state\nStyle components with TailwindCSS for rapid UI development\nUtilize TypeScript with React for safer and more predictable code\nImplement navigation within your app with React Router\nUtilize Redux with forms for consistent state updates and user experience\nLearn to use portals for rendering components outside the DOM hierarchy\nDevelop and interact with APIs for data-driven applications\nMaster the implementation of data tables to handle and display large sets of data\nGet to grips with Immer for writing reducers with ease\nBesides just React and Redux, you'll pick up countless other tidbits of knowledge, including design techniques, popular design patterns, and repeatable steps to build new components.\nThis is the course I wanted to take when I first learned React: complete, up-to-date, and clear.",
      "target_audience": [
        "Programmers looking to learn React",
        "Engineers who have researched React but have had trouble mastering some concepts"
      ]
    },
    {
      "title": "Django Core | A Reference Guide to Core Django Concepts",
      "url": "https://www.udemy.com/course/django-core/",
      "bio": "Dive in deep to the core concepts behind the power Django framework written in Python. Using Django 1.10 with Python 3",
      "objectives": [
        "Django Models",
        "Model Instance Methods & Properties",
        "Model-level field validation",
        "Django Forms and Formsets",
        "Form validation",
        "Model Form",
        "Function Based Views (FBVs)",
        "Class Based Views (CBVs)",
        "CRUD in Django Views (Create Retrieve Update Delete List)",
        "Django Templates",
        "Django translation",
        "Deploying Django on a Live Server| Heroku, Webfaction, Linode, Digital Ocean",
        "Celery + Redis for asynchronous tasks and scheduled tasks",
        "and much more!",
        "Requirements are Python 2.7 or 3.3 and Django 1.8 & up",
        "We use Python 3 and Django 1.10 in this one"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installation & Recommended Setup",
          "How to use this course"
        ],
        "Django Views": [
          "Introduction",
          "Install & First View",
          "Http Response & Http Response Redirect",
          "CRUD & Views",
          "Template Rendering",
          "Understanding Context",
          "User Context & Login Required Decorator",
          "Detail View",
          "Create View",
          "Update View",
          "Delete View",
          "Combining Crud in 1 View",
          "Search in List View & Q Lookups",
          "Thank you and next steps"
        ],
        "Django Models Unleashed - Updated & Expanded": [
          "Welcome",
          "What drives the need for Django Models?",
          "Base Django Project",
          "Your First Model Class",
          "Basics of Django Model Field Types",
          "Migrate your Django Model",
          "Make Changes to Models",
          "Delete a Field",
          "Delete Migrations & Squash Migrations",
          "Save Data via Django-managed Python Shell",
          "Model Field Validation",
          "Model Field Validation - Overriding the Save Method",
          "Model Field Validation - The Clean Method",
          "Model Field Choices",
          "Model Field Choices - Advanced Options",
          "DateField & DateTimeField",
          "Base Abstract Model",
          "Model Meta Options",
          "Bulk Create",
          "Custom Model Managers & QuerySet Filters",
          "Django SlugField & Model Signals Basics",
          "Fixtures for Loading & Unloading Data",
          "Basics of Foreign Keys",
          "Testing our Model",
          "Thank you and next steps"
        ],
        "Django Models Unleashed - Original Version": [
          "Introduction",
          "Documentation & Version",
          "Start Blank Project",
          "App, First Model, & Makemigrations",
          "Boolean Field, Null, & Default Values",
          "CharField & TextField",
          "Render Model in Admin",
          "Django Field Choices",
          "Object Unicode Name",
          "Built-in Validation",
          "Custom Field Validation",
          "Overriding the Save Method",
          "Using Signals with Models",
          "Error Messages & Help Text",
          "Timestamp & DateTimeField",
          "Instance Methods & Properties",
          "Model Managers",
          "Custom QuerySet Methods",
          "Models in the Python Shell",
          "Thank you!"
        ],
        "Django Class Based Views Unleashed": [
          "Welcome to Django Class Based Views Unleashed",
          "Base Django Project",
          "Function Based View & Base Class View",
          "TemplateView",
          "Django Basic RedirectView",
          "Product Model Class",
          "ListView & DetailView",
          "Get Context Data",
          "Proxy Model to Grasp Template Context",
          "Create a Basic Mixin",
          "Recreate a ListView",
          "Recreate a DetailView via Mixins",
          "RedirectView Based on Model instance",
          "Login Required Mixin & Decorator",
          "Django Model Form",
          "CreateView",
          "View with FormMixin",
          "UpdateView the Hard Way",
          "UpdateView & DeleteView",
          "Thank you & next steps"
        ],
        "Understanding Class Based Views - Original Version": [
          "Welcome",
          "Requirements & Recommendations",
          "Intro & Template View",
          "Customize Template View",
          "Base View and Mixins",
          "Login Required Decorator & Custom Mixin",
          "DetailView",
          "ListView",
          "CreateView",
          "UpdateView",
          "Delete View",
          "Handling Exceptions with Objects",
          "Django Messages in a CBV",
          "Using a FormMixin in a CBV",
          "Next Steps"
        ],
        "Forms & Formsets": [
          "Introduction",
          "Requirements & Suggestions",
          "Basic Overview",
          "An HTML Form",
          "Your First Django Form",
          "Render the Form",
          "Form Fields",
          "Collecting Data via HTML Form",
          "Collecting Data via Django Form",
          "Basic Form Validation",
          "Initial Form Data",
          "Form Field Label & Widgets",
          "Model Form",
          "Override the Save Method in Model Form",
          "Adjusting Model Form Data in a View",
          "Custom Error Messages",
          "Rendering Form Errors in a View",
          "Rendering Fields Manually within a Template",
          "Reusable Form Template Snippet",
          "Django Formsets",
          "Model Formsets",
          "ModelForm and QuerySets in Model Formsets",
          "Dynamic New Form in Formsets with jQuery",
          "Next Steps"
        ],
        "Django Templates": [
          "Setup Project",
          "Introduction",
          "Template Filters",
          "For Loops & Cycle",
          "Inheritance",
          "Include with Variables",
          "Override App Templates",
          "Thank you and next steps"
        ],
        "Django Translation": [
          "Introduction",
          "Setup gettext using Homebrew",
          "Translate a String in a View",
          "Manually Activate Translation by Language",
          "Django Translation in Template",
          "Thank you"
        ],
        "Django User Model Unleashed": [
          "Welcome",
          "Requirements",
          "Extend User Model",
          "Custom User Model",
          "Extending the Custom User Model",
          "Register User",
          "User Login & Authentication",
          "User Logout",
          "User Login with Username or Email",
          "Inactive User",
          "Activation Keys",
          "Thank you and next steps"
        ]
      },
      "requirements": [
        "Try Django 1.8 & Up (suggested course is Try Django 1.9 as it has Try Django 1.8 too)",
        "Python knowledge is a plus (30 Days of Python is a suggested course)"
      ],
      "description": "Our philosophy is teaching individuals how to code by going through step by step projects. This drives the majority of our content with one exception: the Django Core course.\nIn this course, we go in-depth into various Django concepts to provide a comprehensive guide to topics that include:\nDjango Models\nModel Instance Methods & Properties\nModel-level field validation\nHow models map to databases and Primary Keys\nDjango Forms and Formsets\nRelating Data with Foreign Keys in Django\nHandling Subdomains with Django Hosts\nForm validation\nModel Form\nFunction Based Views (FBVs)\nClass Based Views (CBVs)\nCRUD in Django Views (Create Retrieve Update Delete List)\nDjango Templates\nTemplate Inheritance\nTemplate shortcuts & Filters\nDjango translation\nand much more!\nWe built this for students looking for a in-depth look at the above concepts. We encourage you to have some experience with Django such as our Try Django series (1.8 & Up) which is available on Udemy.",
      "target_audience": [
        "Requirements are Python 2.7 or 3.3 and Django 1.8 & up",
        "We use Python 3 and Django 1.10 in this one",
        "Anyone looking to learn more about Django",
        "Any student looking to build robust cutting edge web applications",
        "Python Users",
        "Django beginners with some experience, like doing our Try Django (1.8 & up Series)"
      ]
    },
    {
      "title": "Javascript - From Beginner to Pro-Build real world JS apps",
      "url": "https://www.udemy.com/course/javascript-from-beginner-to-pro-best-course/",
      "bio": "Master JavaScript with the most complete JavaScript course on market! 1st step to learn JS - React, Angular or Vue JS",
      "objectives": [
        "You will go all the way from JavaScript beginner to advanced JavaScript developer.",
        "You will gain a deep and true understanding of how JavaScript works behind the scenes.",
        "You will be able to debug your code and understand other developer's code.",
        "You will understand and use complex features like the 'this' keyword, function constructors, prototype, inheritance, first-class functions, closures, and more.",
        "You will learn how to organize and structure your code using modules and functions. Because coding is not just writing code, it's also thinking about your code!",
        "Take the w3 Schools, Upwork or Freelancer Javascript certification"
      ],
      "course_content": {
        "Introduction to Javascript": [
          "Welcome",
          "Let's understand our IDE (Development Tool) - Sublime Text",
          "Let's understand our IDE (Development Tool) - JSBIN",
          "What can Javascript do? - a preview to the super powers!",
          "Where to put Javascript?"
        ],
        "Javascript Language Basics": [
          "How to see the output?",
          "Syntax",
          "Comments",
          "Statements",
          "Variables",
          "Declaring (Creating) JavaScript Variables",
          "Use a single var keyword to create three variables with the following values",
          "Display the sum of 5 + 10, using two variables x and y.",
          "Operators",
          "Display the difference of 10 - 5, using two variables x and y.",
          "Use the Multiplication (*) operator to display multiplication of 2 numbers",
          "Display the result of 10 / 5, using two variables x and y.",
          "Find the remainder when 15 is divided by 9, using two variables x and y.",
          "Use the += operator to add a value of 5 to the variable x.",
          "Use the -= operator to subtract a value of 5 from the variable x.",
          "Use the *= operator to multiply the variable x with 5.",
          "Use the /= operator to divide the variable x with 5.",
          "Use the %= operator to assign a remainder of 10 / 3 to the variable x.",
          "Using += operator to concatenate String",
          "Data Types",
          "Functions",
          "Call the function.",
          "Figure out what is wrong with the function - fix it and run it as it should!",
          "Use the function to display the product of 5 * 5.",
          "Use the function to display \"Hello John\".",
          "Define a function named \"myFunction\", and make it display \"Hello World!\" in the <p> element.",
          "Objects",
          "Display \"John\" by extracting information from the person object.",
          "Add the following property and value to the person object: country: USA",
          "Create an object called person with name = John, age = 50. Then, access the object to display \"John",
          "Scope",
          "Events",
          "The <p> element should do something when someone clicks on it. Try to fix it!",
          "When the button is clicked, trigger myFunction() with an event."
        ],
        "Data Types": [
          "Strings",
          "Assign the string \"Hello World!\" to the variable txt.",
          "Use the length property to display the length of the txt variable's value.",
          "The string below is broken - use escape characters to display the text correctly.",
          "String Methods - Part 1",
          "String Methods - Part 2",
          "Display the position of the first occurrence of \"World\" in the variable txt.",
          "Use the slice() method to display only \"Banana,Kiwi\".",
          "Use the replace() method to replace \"World\" with \"Universe\".",
          "Convert the value of txt to lower case.",
          "Convert the value of txt to upper case.",
          "Use the concat() method to join the two strings: str1 and str2.",
          "Numbers",
          "Create a variable called myNumber, assign the value 50 to it, and display it.",
          "The value of z should be 11. Find out what's wrong and fix it.",
          "Number Methods",
          "Math Object",
          "Use the random() method to display a random number.",
          "Fix the code to display the number with the highest value.",
          "Round \"7.3\" to the nearest integer, and display it.",
          "Display the square root of \"9\".",
          "Math.random()",
          "Dates",
          "Create a Date object to display the date and time for 1st January, 2017.",
          "Date Formats",
          "Date Methods",
          "Arrays",
          "Create an array named cars, assign the values \"Saab\", \"Volvo\" and \"BMW\" to it, and display it.",
          "Display the \"Volvo\" item of the cars array.",
          "Change the first item of cars to \"Opel\" by referring to the index number,and display the whole array",
          "Use the length property to display the number of array items in cars.",
          "Use the length property to add a new item to cars: Mercedes.",
          "Array Methods",
          "Use the pop() method to remove the last item from the fruits array.",
          "Use the push() method to add a new item to fruits: Kiwi.",
          "Use the splice() method to remove \"Orange\" and \"Apple\" from fruits.",
          "Use the concat() method to concatenate girls and boys.",
          "Sorting Arrays",
          "Use the sort() method to sort the array alphabetically.",
          "Booleans"
        ],
        "Objects": [
          "Objects and the 'this' keyword",
          "Object Property",
          "Object Methods",
          "Object Prototype",
          "Response to Question: Pass by Value v/s Pass by Reference"
        ],
        "Comparison & Logical Operators": [
          "Comparison Operators",
          "Choose the correct comparison operator to display \"true\", when: 5 is less than 7.",
          "Choose the correct comparison operator to display \"true\", when: 10 is greater than 7.",
          "Choose the correct comparison operator to display \"true\", when: 10 is equal to 10.",
          "Choose the correct comparison operator to display \"true\", when: 10 is NOT equal to 8.",
          "Logical Operators"
        ],
        "Conditional Statements": [
          "If...Else Statements",
          "Use the if statement to output some text if 5 is greater than 2.",
          "1. Write an if statement with the following condition: 10 is greater than 5. 2.",
          "Change the value of the variable firstName to make the if statement run.",
          "Add an else statement to display \"You're not John!\".",
          "Write an if/else statement with the following condition",
          "The if/else statement does not work. Try to fix it.",
          "Switch Statement",
          "Switch - The switch statement is missing a case for \"Apple\".",
          "Switch - The switch statement is missing a default case.",
          "Switch - The switch statement does not work. Try to fix it."
        ],
        "Loops": [
          "For Loop",
          "For Loop - In the for loop, change num1 to 0 and num2 to 10 and run the code.",
          "For Loop - Make the loop start counting from 5 instead of 0:",
          "Make the loop start counting from 5. Count up to (including) 50, and count only every fifth number.",
          "For loop - Make the loop start counting downwards from 10 and stop at 1.",
          "For Loop - Inside the for loop!",
          "For Loop - In this exercise, you are going to create a for loop from scratch",
          "While Loop",
          "While Loop - Inside the <script> element; change num1 to 0 and num2 to 10 and run the code.",
          "While Loop - Make the loop start counting from 5 instead of 0:",
          "Make the loop start counting from 5. Count up to (including) 50, and count only every fifth number.",
          "While Loop - Make the loop start counting downwards from 10 and stop at 1.",
          "Do/While - The do/while loop should output 0 1 2 3 4. Try to fix it!",
          "Break and Continue"
        ],
        "Understanding the DOM - Document Object Model": [
          "DOM - Overview",
          "DOM - Properties and Methods",
          "DOM Elements",
          "DOM - CSS and Animation",
          "Use the innerHTML property to change the content of the <p> element to \"New text!\".",
          "Use the HTML DOM to set the text color of <p> to \"red\".",
          "Use the HTML DOM to add a yellow background color to <p>.",
          "Use the HTML DOM to center-align the text of <p>.",
          "Use the HTML DOM to change the text size of <p> to 40 pixels.",
          "Use the HTML DOM to hide the <p> element.",
          "DOM Events",
          "DOM - Event Listeners"
        ],
        "Type Conversion & Regular Expressions": [
          "Type Conversion - Part 1",
          "Type Conversion - Part 2",
          "Regular Expressions"
        ],
        "Errors and Debugging": [
          "Errors - Part 1",
          "Errors - Part 2",
          "Debugging"
        ]
      },
      "requirements": [
        "No coding experience is needed to take this course! We will start from the basics",
        "All you need to get started with JavaScript is a computer, a browser (most of the exercises are on JSBIN) and a text editor. We will set these up in the course.",
        "A basic understanding of HTML and CSS is a plus, but it's not a must!",
        "Also, wherever there is anything related to HTML/CSS, We will cover needed details in those sections. If you still have a question,you can ask it in the Q&A section."
      ],
      "description": "*** Brand New Course Updated in Septemper 2017 ***\n\n*** More than 38,000 students. Students from over 167 countries. 5 star ratings and you can see what other students have to say in the review section. Stop Thinking! Take the course Now! ***\n⭐⭐⭐⭐⭐\nVery thorough lectures on the basics of Javascript. The instructor is very knowledgable on this subject and is quick to respond to any questions asked. A great place to start if you are new to the world of Javascript.\n-- Jason Arnold\n⭐⭐⭐⭐⭐\nEnjoyed the course very much. The coding exercises were great. Having exercises to work on and figure out makes learning so much more interesting. The lectures were excellent and the lecture materials were very helpful. The instructor was responsive in the Q&A and all the course material worked like a charm. I would definitely take another course by this instructor. Thanks for a great experience.\n-- Leann Ukena\nAce JavaScript with the most entire JavaScript course available!\n\nWould you like to learn the number #1 programming dialect that powers the web?\n\nIs it accurate to say that you are sick of squandering your time and cash on irregular youtube videos or JavaScript courses that are either excessively basic, or excessively troublesome, making it impossible, making it impossible to take after?\n\nOn the other hand do you battle to profoundly comprehend and utilize JavaScript in genuine projects?\n\nIn the event that your answer is a major YES... At that point this is precisely the course you are searching for!\n\nKeep in mind -\n\nThere is no development without reiteration!\n\nSo what is the Javascript - From Beginner to Pro course about?\n\nThis is a really total JavaScript course, that goes route past what other JavaScript courses out there show you.\n\nI will take you from an entire JavaScript amateur to a propelled developer. You won't simply learn the JavaScript dialect itself, you will likewise learn how to program. The most effective method to take care of issues. Step by step instructions to structure and sort out code utilizing basic JavaScript designs.\n\nAccompanied me on a trip with the objective of genuinely comprehension the JavaScript dialect. What's more, I clarify everything in transit with awesome detail!\n\nYou will learn \"why\" something works in JavaScript, not simply \"how\". Since in the present day JavaScript universe of today, you require more than simply knowing how something functions. You have to troubleshoot code, you have to comprehend code, you should have the capacity to consider code.\n\nThus, before the end of the course, you will be a fit JavaScript developer, ready to compose, comprehend and investigate JavaScript code utilizing all the capable components the dialect offers to us.\n\n...\n\nHere is precisely what we cover in this Javascript - From Beginner to Pro course:\n\n• All the JavaScript and programming basics: things like factors, information sorts, boolean rationale, if/else proclamations, circles, capacities, objects, exhibits, and that's just the beginning.\n\n• Everything you have to know keeping in mind the end goal to pick up a profound comprehension of how JavaScript functions off camera: execution settings, lifting, checking, the \"this\" catchphrase, and then some.\n\n• How to make JavaScript code associate with webpages: DOM control. Learn how to choose and change webpage components, make new components and handle DOM occasions.\n\n• Complex JavaScript components, for example, work constructors, prototypal legacy, top notch capacities, terminations, the predicament and apply strategies, and then some.\n\n• Learn how to sort out and structure your code utilizing modules and capacities, how to make information security and epitome, and why that is so critical.\n\n• What's new in the most cutting edge variant of JavaScript: new components of ES6/ES2015.\n\n...\n\nWe should now see whether this course is for you. It's a flawless fit if...\n\nUnderstudy #1: You need to pick up a profound comprehension of the most well known programming dialect on the planet: JavaScript.\n\nUnderstudy #2: You have taken other JavaScript courses yet: 1) still don't generally comprehend JavaScript, or 2) still don't feel certain to code genuine applications. This course is ideal for you!\n\nUnderstudy #3: You are keen on utilizing famous libraries/systems like React/React-Native, Angular or Node.js.\n\nUnderstudy #4: You need to begin with programming by and large: JavaScript is an incredible dialect to learn how to code.\n\n...\n\nPresently it's your swing to choose. This is the thing that you get:\n\n• Lifetime access to my HD quality videos. No month to month membership. Learn at your own particular pace, at whatever point you need.\n\n• All videos are downloadable. Learn wherever you need, even without a web association!\n\n• Downloadable starter code and last code for every segment.\n\n• My own support in the course Q&A.\n\nSounds extraordinary? At that point begin learning today by tapping the \"Take this course\" catch at this moment, and go along with me in the main JavaScript course that you will ever require!\n\n...\n\nWhat are the prerequisites?\n\nNo coding knowledge is important to take this course! I take you from novice to master!\n\nAll you have to begin with JavaScript is a PC, a program (the vast majority of the illustrations are on JSBIN) and a content tool. We will set these up in the course.\n\nAn essential comprehension of HTML and CSS is an or more, yet it's not an unquestionable requirement!\n\nWhat am I going to get from this Javascript - From Beginner to Pro course?\n\nLifetime access to my HD quality videos. No month to month membership. Learn at your own particular pace, at whatever point you need.\n\nYou will go the distance from JavaScript learner to cutting edge JavaScript developer.\n\nYou will pick up a profound and genuine comprehension of how JavaScript functions in the background.\n\nYou will have the capacity to investigate your code and comprehend other developer's code.\n\nYou will comprehend and utilize complex components like the \"this\" catchphrase, work constructors, prototypal legacy, top of the line capacities, terminations, and the sky is the limit from there.\n\nYou will learn how to arrange and structure your code utilizing modules and capacities. Since coding is not simply composing code, it's additionally contemplating your code!\n\nYou will get comfortable with the new components of ES6/ES2015.\n\nYou will get my own support in the Q&A.\n\nWhat is the intended interest group?\n\nYou ought to take this course now on the off chance that you need to pick up a profound comprehension of the most prominent programming dialect on the planet: JavaScript.\n\nYou ought to take this course now in the event that you have taken other JavaScript courses however: 1) still don't generally comprehend JavaScript, or 2) still don't feel certain to code true applications. This course is ideal for you!\n\nYou ought to take this course now in case you're keen on utilizing mainstream libraries/structures like React, Angular or Node.js.\n\nYou ought to take this course now in the event that you need to begin with programming as a rule: JavaScript is an incredible dialect to learn how to code.\n\nYou ought to take this course now in the event that you need to plan for a meeting on Javascript. This course will help you get up to speed quicker than most different articles/videos you will discover on the web.\n\nTry not to take this course in the event that you simply need to utilize JavaScript yet would prefer not to know how it really functions. Believe me, I have been there!\n\nWhat are the necessities?\n\nNo coding knowledge is expected to take this course! We will begin from the nuts and bolts\n\nAll you have to begin with JavaScript is a PC, a program (the vast majority of the activities are on JSBIN) and a content tool. We will set these up in the course.\n\nAn essential comprehension of HTML and CSS is an or more, yet it's not an unquestionable requirement!\n\nAdditionally, wherever there is anything identified with HTML/CSS, We will cover required subtle elements in those areas. On the off chance that regardless you have a question,you can ask it in the Q&A segment.\n\nWhat am I going to get from this Javascript - From Beginner to Pro course?\n\nYou will go the distance from JavaScript learner to cutting edge JavaScript developer.\n\nYou will pick up a profound and genuine comprehension of how JavaScript functions in the background.\n\nYou will have the capacity to investigate your code and comprehend other developer's code.\n\nYou will comprehend and utilize complex elements like the \"this\" watchword, work constructors, model, legacy, top of the line capacities, terminations, and that's only the tip of the iceberg.\n\nYou will learn how to arrange and structure your code utilizing modules and capacities. Since coding is not simply composing code, it's likewise considering your code!\n\nYou will get comfortable with the new components of ES6/ES2015.\n\nTake the w3 Schools, Upwork or Freelancer Javascript affirmation",
      "target_audience": [
        "You should take this course now if you want to gain a deep understanding of the most popular programming language in the world: JavaScript.",
        "You should take this course now if you have taken other JavaScript courses but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real-world apps. This course is perfect for you!",
        "You should take this course now if you're interested in using popular libraries/frameworks like React, Angular or Node.js.",
        "You should take this course now if you want to get started with programming in general: JavaScript is a great language to learn how to code.",
        "You should take this course now if you have to prepare for an interview on Javascript. This course will help you get up to speed faster than most other articles/videos you will find on the internet."
      ]
    },
    {
      "title": "Master ASP.NET Core Identity: Authentication & Authorization",
      "url": "https://www.udemy.com/course/complete-guide-to-aspnet-core-identity/",
      "bio": "(Updated to use .NET 10) Authentication and Authorization with ASP.NET Core Identity Inside Out",
      "objectives": [
        "What are Identities, Claims, and Principal (Security Context)",
        "Cookie Authentication for Web App",
        "JWT Token Authentication for Web APIs / REST APIs",
        "Authentication and Authorization handlers",
        "Policy based Authorization",
        "Create and Handle Custom Authorization Policy",
        "ASPNET Core Identity Configuration",
        "Use Identity to cover all typical scenarios including: User Registration, User Login, Logout, Email confirmation, Roles vs Claims and User Profile page.",
        "MFA with Email",
        "MFA with Authentication App",
        "Social Media login with Facebook"
      ],
      "course_content": {},
      "requirements": [
        "Intermediate Level of C# or at least 6 months of experience.",
        "Intermediate Level of ASPNET Core or at least 6 months of experience.",
        "Basic HTML.",
        "You should know OOP and the concept of interface in C#.",
        "You are interested in learning this topic and you are eager to learn."
      ],
      "description": "The course is updated to use .NET 10\n\n\nAuthentication and Authorization are vital components of modern web app and web API development. ASP.NET Core Identity provides a complete solution to achieve this purpose. While it may seem easy to scaffold a solution with a few clicks, truly adapting it to your specific project requirements demands a deep understanding of how ASP.NET Core Identity works from the inside out.\n\n\nWith 5 sections and about 7 hours of high-quality content created by Frank Liu - a senior software developer with over 20 years of experience in .NET development - this course will empower you with comprehensive knowledge and practical skills.\n\n\nWhy Choose This Course:\nClear and logical explanations with diagrams: Gain a solid theoretical understanding of ASP.NET Core authentication and authorization through visually engaging diagrams, providing you with a deeper comprehension of the subject matter.\nIn-depth exploration: Secure your web app and web APIs without relying solely on ASP.NET Core Identity, understanding what lies beneath the surface.\nASP.NET Core Identity mastery: Learn not only how to code with ASP.NET Core Identity but also comprehend the reasons behind its workings.\nMulti-Factor Authentication (MFA): Master MFA essentials in ASP.NET Core, starting with Email MFA and progressing to the use of the Authenticator App.\nExternal Authentication Providers: Discover how to integrate social media login with Facebook as an external authentication provider into ASP.NET Core apps.\n\n\nYou will learn the following topics in depth:\nSection #1: ASP.NET Core Authentication and Authorization UNDER the HOOD.\nYou will start with a solid understanding of the theory of ASP.NET Core authentication and authorization first and then you will be learning to secure your web app without using ASP.NET Identity, so that you know what is under the hood. This builds a strong foundation for you.\n\n\nSection #2: Securing ASP.NET Core Web APIs\nSame idea with the previous section, but here we are securing Web APIs.\n\n\nSection #3: ASP.NET Core Identity In Depth\nNow we are getting into ASP.NET Core Identity. Here you will not only learn how to code with ASP.NET Core Identity, but you will learn all the reasons behind the working of Identity with the knowledge you have just learned in the previous sections.\n\n\nSection #4: MFA in ASP.NET Core Identity\nMFA is a must when you work with a public facing website. Hence, this section is very important. After the in-depth explanation of the concept, you will start with a simpler Email MFA scenario, then moving on to the Authenticator App MFA case.\n\n\nSection #5: Integrate External Authentication Providers into ASP.NET Core apps\nLots of applications (public facing or not) want to use external social media to manage the user login, so that the applications can focus on the business logic. This section takes Facebook Login as an example and walks you through the steps of using an external authentication provider.\n\n\nYou will master the following technical skills:\nWhat are Identities, Claims, and Principal (Security Context) in ASP.NET Core.\nCookie Authentication for ASP.NET Core Web App.\nASP.NET Core Authentication and Authorization handlers\nPolicy based Authorization in ASP.NET Core web apps.\nCreate Custom Policies in ASP.NET Core web apps.\nJWT Token Authentication for ASP.NET Core Web APIs / REST APIs.\nASP.NET Core Identity Configuration\nUse ASP.NET Core Identity to implement all typical scenarios including: User Registration, User Login, Logout, Email confirmation, Roles vs Claims and User Profile page.\nIntegrate MFA with Email into ASP.NET Core apps.\nIntegrate MFA with Authentication App into ASP.NET Core apps.\nIntegrate Social Media login with Facebook into ASP.NET Core apps.\n\n\nWhat you will need:\nIntermediate Level of C# or at least 6 months of experience.\nIntermediate Level of ASP.NET Core or at least 6 months of experience.\nBasic HTML.\nYou should know OOP and the concept of interface in C#.\nYou are interested in learning this topic.\nYou are eager to learn.\n\n\nWho this course is for:\nASP .NET Core Developers\nAPI Developers\nMobile Application Developers\nC# or VB NET Developers\n\n\nEnroll now to become an expert in authentication, authorization, and ASP.NET Core Identity, and take your web API development skills to the next level! Experience the power of clear explanations complemented by visually engaging diagrams, ensuring you gain a comprehensive understanding of the subject matter. Don't miss the opportunity to learn from an experienced instructor and excel in your career development.",
      "target_audience": [
        "ASP .NET Core Developers",
        "API Developers",
        "Mobile Application Developers"
      ]
    },
    {
      "title": "The Essential Web Developer Course - Build 12 Websites",
      "url": "https://www.udemy.com/course/the-essential-web-developer-course/",
      "bio": "From an absolute beginner, to a certified Web developer, this course will teach you the ABCs of Web development.",
      "objectives": [
        "Develop interactive & responsive Websites using HTML, CSS, Javascript, jQuery, PHP, and MySQL."
      ],
      "course_content": {
        "Getting Started as a Web Developer": [
          "Join The Essential Web Developer Facebook Group",
          "Introduction to this Course"
        ],
        "HTML": [
          "An Overview of an HTML Page and its Elements",
          "Opening & Closing HTML Tags",
          "Header Tags: <head>",
          "Body Tags: <body>",
          "Structuring an HTML Webpage for the First Time",
          "HTML Structure (Source Code)",
          "Traditional Old-School HTML Development Method v. Today's Method",
          "Your First HTML Page",
          "Your First HTML Page (Source Code)",
          "Styling Text in HTML",
          "Styling Text (Source Code)",
          "Formatting Text",
          "Formatting Text (Source Code)",
          "Working with Lists",
          "Working with Lists (Source Code)",
          "Create an Unordered List in HTML",
          "Working with Images",
          "Working with Images (Source Code)",
          "Create an HTML Title Tag",
          "Creating Your First Links",
          "Creating Your First Links (Source Code)",
          "Working with Forms",
          "Working with Forms (Source Code)",
          "HTML Reference Guide"
        ],
        "CSS": [
          "Introduction to CSS",
          "Introduction to CSS (Source Code)",
          "Inline CSS",
          "Inline CSS (Source Code)",
          "Internal CSS",
          "Internal CSS (Source Code)",
          "External CSS",
          "External CSS (Source Code)",
          "Classes & IDs",
          "Classes & IDs (Source Code)",
          "Working with DIVs",
          "Working with DIVs (Source Code)",
          "CSS Combinators",
          "CSS Combinators (Source Code)",
          "Floating Elements",
          "Floating Elements (Source Code)",
          "Padding",
          "Padding (Source Code)",
          "Margins",
          "Margins (Source Code)",
          "Positioning",
          "Positioning (Source Code)",
          "Challenge: Simple Website Design with DIVs",
          "Challenge: Simple Website Design with DIVs (Source Code)",
          "Borders",
          "Borders (Source Code)",
          "Working with Fonts",
          "Working with Fonts (Source Code)",
          "Aligning Text",
          "Aligning Text (Source Code)",
          "Styling Links",
          "Styling Links (Source Code)",
          "CNN Test Website Design Project (Part 1)",
          "CNN Test Website Design Project (Part 2)",
          "CNN Test Website Design Project (Part 3)",
          "CNN Test Website Design Project (Part 4)",
          "CNN Test Website Design Project (Source Code)"
        ],
        "Javascript": [
          "Introduction to Javascript",
          "Introduction to Javascript (Source Code)",
          "Using Buttons",
          "Using Buttons (Source Code)",
          "Syntax",
          "Syntax (Source Code)",
          "Commenting",
          "Commenting (Source Code)",
          "Styling",
          "Styling (Source Code)",
          "Input Values",
          "Input Values (Source Code)",
          "Operators",
          "Operators (Source Code)",
          "Data Types",
          "Data Types (Source Code)",
          "Arrays",
          "Arrays (Source Code)",
          "If Statements",
          "If Statements (Source Code)",
          "Challenge: Color Guessing Game!",
          "Challenge: Color Guessing Game Answer",
          "Challenge: Color Guessing Game Answer (Source Code)",
          "For Loops",
          "For Loops (Source Code)",
          "While Loops",
          "While Loops (Source Code)",
          "Functions",
          "Functions (Source Code)",
          "Intervals & Timeouts",
          "Intervals & Timeouts (Source Code)",
          "Challenge: Intervals Timer",
          "Challenge: Intervals Timer Answer",
          "Challenge: Intervals Timer Answer (Source Code)"
        ],
        "Bootstrap": [
          "Introduction",
          "Hello World!",
          "Hello World (Source Code)",
          "Bootstrap Grid System",
          "Bootstrap Grid System (Source Code)",
          "Navigation",
          "Navigation (Source Code)",
          "Forms",
          "Forms (Source Code)",
          "Tables",
          "Tables (Source Code)",
          "Glyphicons",
          "Glyphicons (Source Code)",
          "Components",
          "Components (Source Code)",
          "Modals",
          "Modals (Source Code)"
        ],
        "jQuery": [
          "Introduction",
          "Installing jQuery",
          "Selectors & Methods",
          "Selectors & Methods (Source Code)",
          "Event Listening",
          "Event Listening (Source Code)",
          "Writing Cleaner Code",
          "Writing Cleaner Code (Source Code)",
          "DOM Traversal",
          "DOM Traversal (Source Code)",
          "Project: Tab Panel Project",
          "Project: Tab Panel Answer",
          "Project: Tab Panel Answer (Source Code)"
        ],
        "Wordpress": [
          "Introduction to Wordpress",
          "Wordpress Installation",
          "The Wordpress Dashboard",
          "Basic Setup of Wordpress",
          "Building a Wordpress Blog",
          "Creating a Wordpress Online Shop"
        ],
        "PHP": [
          "Introduction",
          "Hello World",
          "Hello World (Source Code)",
          "Error Reporting",
          "Error Reporting (Source Code)",
          "Variables",
          "Variables (Source Code)",
          "Arrays",
          "Arrays (Source Code)",
          "For Loops",
          "For Loops (Source Code)",
          "While Loops",
          "While Loops (Source Code)",
          "Sending Email",
          "Sending Email (Source Code)",
          "\"GET\" Variables",
          "\"GET\" Variables (Source Code)",
          "Filtering Inputs",
          "Filtering Inputs (Source Code)",
          "Building a Contact Form in PHP",
          "Building a Contact Form in PHP (Source Code)",
          "Challenge: Sending Mail with Contact Form",
          "Challenge: Sending Mail with Contact Form (Source Code)",
          "Working with Cookies",
          "Working with Cookies (Source Code)",
          "Working with Sessions",
          "Working with Sessions (PHP)"
        ],
        "MySQL": [
          "What is MySQL?",
          "Setting Up Your First Database",
          "Using phpMyAdmin to Create a Database Table",
          "Connect to MySQL Database with PHP",
          "Connect to MySQL with PHP (Source Code)",
          "Inserting Data into a Table",
          "Inserting Data into a Table (Source Code)",
          "Edit Database Record",
          "Edit Database Record (Source Code)",
          "Retrieving Data from a Table",
          "Retrieving Data from a Table (Source Code)",
          "Delete Records from a Table",
          "Using Hash Algorithms to Insert Admin",
          "Using Hash Algorithms to Insert Admin (Source Code)",
          "Project: Building a Database Application - Part 1",
          "Project: Building a Database Application - Part 1 (Source Code)",
          "Project: Building a Database Application - Part 2",
          "Project: Building a Database Application - Part 2 (Source Code)"
        ],
        "Marketing Your Services": [
          "Marketing Your Services"
        ]
      },
      "requirements": [
        "No prior skill or knowledge is required."
      ],
      "description": "Ready to go from a complete beginner to an advanced Web developer in the matter of weeks? Want to earn more money or quit your full time job, becoming a seasoned Web developer in the process?\nWhatever your reasons for wanting to learn Web development, you've most certainly uncovered a gem hidden in a sea of online courses.\nThis is by far THE MOST comprehensive and exhaustive Web development course available online anywhere.\n\nIn this course, you will learn the skills required to become a professional Web developer from the ground up. I'm so confident that you will be 100% satisfied with your experience, that I'm offering a complete 30-day money back guarantee!\nIf you're tired of trying to sift through online tutorials and YouTube videos to gain the skills required to become a Web developer, then you've come to the right place.\nSo, what's included?\nYou get instant access to well-thought-out and comprehensive sections with detailed lectures that walk you through ever step of the way. You'll learn to become a professional coder from a seasoned Web developer with dozens of best-selling books in the technology and online-marketing field.\nCombining my experience as a professional blogger who occasionally blogs for the Huffington Post and Engadget, best-selling author with dozens of popular technology and self-development books, and my experience as a software engineer and developer, you'll learn difficult tasks presented in a clear, crisp and easy-to-follow manner.\nYou'll find my teaching style both highly informative and simple to understand, allowing you to move nearly effortlessly through difficult concepts and tasks.\nThis is by far the best course that you can embark in if you're serious about becoming a Web developer today. I will absolutely guarantee that you will be completely satisfied with this course and am offering a complete 30-day money back guarantee.\nIf you're ready to become a fully-fledged, confident and capable Web developer, earning thousands of extra cash income every month, then you've come to the right place.\n\n\nHere's what you get with The Essential Web Developer Course:\nInstant and unfettered lifetime access to over 30 hours of crystal-clear and highly-engaging video tutorials that will walk you through every step of the way as you build a basic understanding of technologies such as HTML, CSS, and JavaScript.\nUpon learning the basics, I'll show you in-depth just how to develop responsive and interactive database-driven Websites using technologies such as PHP, MySQL, jQuery, and Bootstrap.\nAccess to an online forum where you can pose and present questions and get help walking through some of the more common problems faced by first-time developers who are just getting started.\nOnce you've mastered it all, you'll learn how to market your services so that you can generate thousands of extra income every month from the comfort of your own home as a seasoned Web developer.\n\n\nRegardless of your age, you can learn to code and become a professional Web developer. I will absolutely guarantee that every single person, young or old will benefit from this course, and follow along with the painstakingly clear and concise videos, lessons, and challenges that you'll find herein.\nPlus, you'll get access to me! I'm a professional and accomplished blogger, a seasoned Web developer, and founder of several successful startups. I know just what it takes to build responsive and dyanmic code, and you'll learn just how to do that in this course!\nDon't wait another moment. Sign up right now.\nStop wasting your time trying to sift through YouTube videos and read blogs that will just leave you more confused. I will teach you how to do it every step of the way!\nScroll up and click the button to get started TODAY.",
      "target_audience": [
        "This course is perfect no matter what your skill level. Anyone can take this course and go from a complete beginner to an advanced Web developer in the matter of weeks."
      ]
    },
    {
      "title": "Complete NodeJS Developer (GraphQL, MongoDB, + more)",
      "url": "https://www.udemy.com/course/complete-nodejs-developer-zero-to-mastery/",
      "bio": "Learn from real NodeJS experts! Includes REALLY Advanced NodeJS. Express, GraphQL, REST, MongoDB, SQL, MERN + much more",
      "objectives": [
        "Build enterprise level Node applications and deploy to the cloud (AWS)",
        "Learn to build secure and performant, large scale applications like a senior backend developer",
        "Lead NodeJS projects by making good architecture decisions and helping others on your team",
        "Using NodeJS, build production grade apps including REST APIs and GraphQL APIs",
        "Work with real life data and SpaceX API to build a NASA launch system, discover new planets that may contain life + other projects",
        "Authentication, File I/O, Databases (SQL, MongoDB), Express Framework, Sockets, plus many other important topics a backend developer should know",
        "Build a MERN (MongoDb, Express, React, Node) fullstack app and deploy to production",
        "Load balancing, Monitoring, CI/CD, and Zero Downtime Deployment",
        "Become the top 10% Node Developer. Learn REALLY advanced topics!",
        "Focus on security best practices throughout the course so you can be confident with your deployments",
        "Master the latest ecosystem of a Backend NodeJS Developer from scratch"
      ],
      "course_content": {},
      "requirements": [
        "Just basic JavaScript knowledge",
        "You DO NOT need any prior experience with NodeJS!",
        "You DO NOT need any prior Backend Development knowledge!"
      ],
      "description": "Just released with all new NodeJS best practices and trends! Join a live online community of over 900,000+ developers and a course taught by industry experts that have actually worked both in Silicon Valley and Toronto with NodeJS.\n\nUsing the latest version of Node, this course is focused on efficiency and turning you into a Back End or Fullstack developer. Never spend time on confusing, out of date, incomplete tutorials anymore! Graduates of Andrei’s courses are now working at Google, Tesla, Amazon, Apple, IBM, JP Morgan, Facebook, + other top tech companies for a reason.\nWe guarantee you this is the most comprehensive online resource on NodeJS. This project based course will introduce you to all of the modern toolchain of a Node JS developer. Along the way, we will build a massive NASA Space launch application using NodeJS, Express Framework, RESTful APIs, GraphQL, and much more! This is going to be a Fullstack MERN app. We will also build many other mini projects along the way so you feel confident deploying any NodeJS project to production in the future by yourself!\n\n\nAll code is going to be provided step by step and even if you don’t like to code along, you will get access to all the code from the projects we build so anyone signed up for the course will have their own project to put on their portfolio right away.\n\n\nThe curriculum is going to be very hands on as we walk you from start to finish of releasing a professional (performant and secure) NodeJS project all the way into production. We will start from the very beginning by teaching you Node basics and then going into advanced topics so you can make good decisions on architecture and tools on any of your future NodeJS projects. The goal is to turn you into a senior backend developer!\n\n\nHere is what the course will cover:\n\n1. Foundations\nFocus on Node internals\nLibuv, threads, processes, event loop\nAsynchronous programming\nNode vs PHP vs Python\nObserver Design Pattern\nEvent Emitters\n\n\n2. Module System\nThe require Function\nCreating Your Own Modules\nCommonJS vs ECMAScript (ES6) modules\nModule Caching\nUsing index.js\n\n\n3. Package Management\nNPM: The Node Package Manager\nCreating Your Own Packages\nPackage And the NPM Registry\nThird Party Modules\nThe node_modules Folder\nSemantic Versioning\npackage-lock json And Versioning\nVulnerabilities in Dependencies\n\n\n4. File I/O: Planets Project\nExploring Exoplanets With Node\nExploring Kepler Space Telescope Data\nWorking With Streams\nStreaming Large Data Files\nParsing Our Planets Data\nWorking With CSV Files\nFinding Habitable Planets\n\n\n5. Web Servers\nWhat is a Web Server?\nHTTP Responses and Requests\nHTTP APIs and Routing, Parameterized URLs\nSame Origin Policy, CORS\nRequests and Responses as Streams\n\n\n6. ExpressJS\nExpress vs NextJS vs Koa\nRoute Parameters\nModel View Controller (MVC) pattern\nPostman and Insomnia\nDevelopment Dependencies\nMiddleware\nLogging Middleware Example / Writing Our Own Middleware\nPOST Requests in Express\nMVC In Express\nExpress Routers\nRESTful APIs\nCRUD\nSending Files\nServing Websites With Node\nTemplating Engines\n\n\n7. NodeJS NASA Project\nArchitecture diagrams on LucidChart\nGET, POST, DELETE routes.\nServing ReactJS Applications in Express\nCORS middleware\nModels vs Controllers vs Routers\nLoading Data On Startup\nAutomating Full Stack Applications With NPM\nServing React Front End (in Production)\nLogging Requests with Morgan\nServing Applications With Client Side Routing\nBuilding A Data Access Layer\nIntegrating with Frontend, Top Down Approach, Bottom Up Approach\nUpdating Our Architecture\n\n\n8. Testing APIs\nUnit tests vs API tests vs UI tests\nTesting Node APIs with Jest and Supertest\n\n\n9. Improving Node Performance\nExample app which blocks event loop + real life blocking functions\nNode Cluster Module theory + in action\nClustering in the real world\nLoad balancing\nPM2 theory + in action\nManaging Live Clusters with PM2\nZero Downtime Restarts\nImproving Performance of NASA Project\nStateless APIs\nNode Worker Threads\n\n\n10. Databases\nUsing MongoDB to add persistence to NASA Project\nBig focus on NoSQL vs SQL, PostgreSQL vs MongoDB, when to use both including Trends, Object-Relational Mismatch, ACID, References, Schemas. Schema-less vs Schemas\nMongoDB Atlas\nHorizontally Scaling Databases\nMongoose\nMongoose Models vs MVC Models\nObjectIDs in MongoDB\nPagination\nChoosing A Database For Our NASA API\n\n\n11. Working With REST APIs\nDemonstrate integrating with a REST API by working with SpaceX API\nVersioning REST APIs\nRunning Search Queries\nSpaceX Launch Data\nMapping API Data to Our Database\nUsing Paginated APIs\nAdding Pagination To Our API\n\n\n12. Authentication\nFocus on Security first principles with JWT, cookies, CSRF\nServers with HTTPS and SSL / TLS\nHelmetJS\nWorking With Auth0\n\n\n13. Deployment and CI/CD\nFocus on building out a simple CI pipeline for NASA Project on GitHub\nWhat is CI vs CD?\nAutomated tests\nDynamic configuration with secrets\n\n\n14. Node Production and the Cloud (AWS)\nDeploy to production with Docker to Amazon EC2\nVirtual Machines\nServerless vs Containers\nDocker files\nManaging Docker Containers and Images\nWorking With SSH\nProduction Deployment with PM2 and Mongo Atlas\n\n\n15. GraphQL\nGraphQL vs REST\nBuilding a GraphQL API\n\n\n16. Sockets (WebSockets, Socket io)\nSockets overview\nSockets vs polling\nWebSockets (vs Socket io)\nSocket io Client and Server APIs\nBroadcasting Events\nBuild out Full Stack Multiplayer Pong with Sockets\nImplementing Pong Game Logic\nUsing Socket io With Express.js\nNamespaces and Rooms\n\n\n17-20.  Bonus Sections on Deno, Advanced Asynchronous JavaScript, SQL, and TypeScript!\n\n\nThis course is not about making you just code along without understanding the principles so that when you are done with the course you don’t know what to do other than watch another tutorial. No! This course will push you and challenge you to go from an absolute beginner in NodeJS to someone that is in the top 10% of NodeJS backend developers.\n\nWe guarantee you this is the most comprehensive online course on NodeJS! Have a look at the course outline video to see all the topics we are going to cover, all the projects we’re going to build, and all the techniques you’re going to learn to become a top Node developer!\n\nSee you inside!",
      "target_audience": [
        "Students who are interested in going beyond a normal \"beginner\" tutorial",
        "Programmers who want to learn the most in demand skills of a backend developer",
        "Developers that want to be in the top 10% of NodeJS developers",
        "Students who want to gain experience working on scalable large scale applications",
        "Bootcamp or online tutorial graduates that want to go beyond the basics",
        "Any backend developer who wants to learn NodeJS",
        "Web developers and Front End Developers who want to get into the backend development world or become Fullstack Developers"
      ]
    },
    {
      "title": "The Complete Full-Stack JavaScript Course",
      "url": "https://www.udemy.com/course/full-stack-javascript/",
      "bio": "Learn full-stack web development using JavaScript (ReactJS, NodeJS, LoopbackJS, Redux and Material-UI)!",
      "objectives": [
        "Full-stack JavaScript",
        "ReactJS",
        "NodeJS",
        "Rest API with LoopbackJS",
        "Redux",
        "Material-UI",
        "Socket Programming"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Welcome to the course!",
          "Environment setup",
          "Anatomy of a React project",
          "Section 1 Quiz"
        ],
        "Getting Started with ReactJS": [
          "Writing a React component",
          "React life-cycle",
          "The React state",
          "Understanding component props and re-rendering",
          "Importing CSS into React components",
          "Coding a calculator part 1",
          "Coding a calculator part 2"
        ],
        "Building a ReactJS Website": [
          "React website setup",
          "Component children",
          "React routing",
          "Route parameters and HTML slicing part 1",
          "Route parameters and HTML slicing part 2",
          "Services and portfolio pages part 1",
          "Services and portfolio pages part 2",
          "Working with forms in React part 1",
          "Working with forms in React part 2",
          "Using Formik",
          "Yup form validation schemas"
        ],
        "Rest API with LoopbackJS": [
          "Setup of REST API using LoopbackJS",
          "Creating models",
          "Model observers",
          "Model relations",
          "ESLINT",
          "Subclassing access tokens",
          "Persisting data using MongoDB",
          "Creating data",
          "Updating data",
          "Finding model instances part 1",
          "Finding model instances part 2",
          "Deleting model instances",
          "Creating post collection",
          "Roles and rolemapping",
          "Applying access control to our post model",
          "Adding an editor role",
          "Creating a category model",
          "File storage and collection part 1",
          "File storage and collection part 2",
          "Custom remote methods and file uploads part 1",
          "Custom remote methods and file uploads part 2",
          "Creating login route",
          "Adding a login form"
        ],
        "Redux and Material-UI": [
          "Wrapping components",
          "Dispatching actions",
          "Creating a store and reducer",
          "Integrating remote API calls",
          "Applying middleware",
          "Material-UI intro",
          "Drawer and CSS",
          "Drawer collapsing and animations",
          "Icons, lists and links",
          "Main content class",
          "Persisting reducers using localStorage",
          "Basic tables",
          "Fetching posts and users from our API",
          "Fab buttons",
          "Setting up Redux, Material-UI and Formik for our add post page",
          "Material-UI forms with Formik",
          "Flex display and connecting our post form to our database via Redux part 1",
          "Flex display and connecting our post form to our database via Redux part 2",
          "Editing existing posts",
          "Uploading post images part 1",
          "Uploading post images part 2",
          "Integrating Quill as a content editor",
          "Loading posts on the front-end part 1",
          "Loading posts on the front-end part 2",
          "Loading more posts on demand",
          "Single post page",
          "Registering new accounts",
          "Posting comments and adding relations and ACLs to our API part 1",
          "Posting comments and adding relations and ACLs to our API part 2",
          "Deploying React apps with NGINX",
          "Deploying our API using PM2 and NGINX part 1",
          "Deploying our API using PM2 and NGINX part 2",
          "Deploying our API using PM2 and NGINX part 3"
        ],
        "WebSocket Chat Application": [
          "Creating a chat app",
          "Creating our chat store",
          "WebSocket connections",
          "Sending socket messages",
          "Creating signup and login forms",
          "Writing account based logic part 1",
          "Writing account based logic part 2",
          "Using auth tokens",
          "Styling the messenger",
          "Tracking logged in users",
          "Search functionality",
          "Creating new threads and sending to relevant clients",
          "Connecting on page load if already logged in",
          "Get threads on page load",
          "Disconnecting socket sessions",
          "Adding messages and sending to relevant clients",
          "Rendering messages client-side",
          "Rendering messages with user information",
          "Ejecting a React application"
        ]
      },
      "requirements": [
        "A basic understanding of HTML, CSS and JavaScript."
      ],
      "description": "If you would like to master JavaScript and get a job as a full-stack web developer, you are going to LOVE this course! Learn full-stack JavaScript development with over 24 hours of HD video tutorials covering ReactJS, NodeJS, LoopbackJS, Redux, Material-UI and socket programming! This course was designed to provide students with hands-on coding experience. We will begin by programming a calculator using React, and finish the course by coding an advanced chat application using WebSockets. A working knowledge of HTML, CSS and JavaScript will be helpful when taking this course.\n\n\n3 Coding Projects in the course:\n• Calculator Application - We will go over the basics of what React is, how to create components and how to work within the React life-cycle.\n• Weblog - We will build a feature rich blog app using React and LoopbackJS. We will begin to explore the full-stack elements of JavaScript by coding our own REST API, and see how the front and back-end can communicate with each other.\n• Chat Application - We will explore socket programming. With a WebSocket you can keep clients connected on the server side. We will program a chat app where you can create a user account, add other users and then message back and forth with them.\n\n\nTopics covered in the course:\n• ReactJS\n• NodeJS\n• LoopbackJS\n• Redux\n• Material-UI\n• Socket Programming\n• API Development\n• Full-Stack JavaScript\n\n\nStill not sold? Check out a few of the awesome reviews this course has received from customers:\n• \"Exactly what I was searching for! Very easy and well explained tutorials to follow along with!“\n• \"I have been struggling to learn Reactjs for some time now but this course just opened a window for me. Thank you so much!“\n• \"I took this course when I knew nothing about React, I only knew ES6. This course helped me to get up and running with React. Thank you!\"",
      "target_audience": [
        "Web development students interested in mastering JavaScript."
      ]
    },
    {
      "title": "Learn MySQL - For Beginners",
      "url": "https://www.udemy.com/course/learn-mysql-for-beginners/",
      "bio": "Learn to Create Database Driven Web Applications using MySQL",
      "objectives": [
        "MySQL Database Administration",
        "PhpMyAdmin Fundamentals",
        "MySQL Security and Root Superuser",
        "Create Tables",
        "Creating Users",
        "Modifying Database Privileges",
        "Modifying & Deleting Tables",
        "Modifying & Deleting Databases",
        "SQL Fundamentals",
        "SQL Statements in PhpMyAdmin",
        "Database Connections",
        "MySQL Import & Export Data",
        "Updating Data in MySQL DB"
      ],
      "course_content": {
        "MySQL Database Integration": [
          "Introduction to Databases",
          "Introduction PhpMyAdmin",
          "PhpMyAdmin Interface Overview",
          "MySQL Security and Root Superuser",
          "MySQL Creating a Database and Table",
          "MySQL Creating a New User",
          "MySQL Database and Table Specific Privileges",
          "MySQL Modifying and Deleting a Table",
          "MySQL Modifying and Deleting a Database",
          "Introduction to SQL",
          "SQL Statements in PhpMyAdmin",
          "Connect to MySQL Database using PHP",
          "MySQL Database - Import Data",
          "SQL Select",
          "SQL Distinct Keyword",
          "SQL Where Clause",
          "SQL And Operator",
          "SQL Or Operator",
          "SQL Order By",
          "MySQL Insert Into",
          "MySQL Get Last ID",
          "MySQL Insert Multiple Records",
          "MySQL Prepared Statements",
          "MySQL Delete Records",
          "PHP Header Function",
          "PHP Isset",
          "MySQL Update Records"
        ]
      },
      "requirements": [
        "Basic knowledge of PHP",
        "Basic Computer Skills"
      ],
      "description": "Course: Learn MySQL - For Beginners\nLearn to Create Database Driven Web Applications using MySQL\nStudents learn to integrate and administer MySQL databases as part of PHP web application development.\nThe course begins with an in-depth look into PhpMyAdmin to create, delete and modify databases. We also explore security considerations and user privileges.\nNext, students learn to build connections to existing databases in PHP, and execute commands using several essential SQL statements.\nWhat you'll learn - Overview:\nMySQL Database Administration\nPhpMyAdmin Fundamentals\nMySQL Security and Root Superuser\nCreate Tables\nCreating Users\nModifying Database Privileges\nModifying & Deleting Tables\nModifying & Deleting Databases\nSQL Fundamentals\nSQL Statements in PhpMyAdmin\nDatabase Connections\nMySQL Import & Export Data\nUpdating Data in MySQL DB\nKey Concepts:\nIntroduction to Databases\nIntro to PhpMyAdmin\nPhpMyAdmin Interface Overview\nMySQL Security and Root Superuser\nMySQL Creating a Database and Table\nMySQL Creating a New User\nMySQL Database and Table Specific Privileges\nMySQL Modifying and Deleting a Database\nIntroduction to SQL\nSQL Statements in PhpMyAdmin\nConnect to MySQL Database using PHP\nMySQL Database - Import Data\nSQL Select\nSQL Distinct Keyword\nSQL Where Clause\nSQL And Operator\nSQL Or Operator\nSQL Order By\nMySQL Insert Into\nMySQL Get Last ID\nMySQL Prepared Statements\nMySQL Delete Records\nPHP Header Function\nPHP Isset\nMySQL Update Records\nYour Instructor:\n\nYouAccel is a leading provider in online training, offering courses across numerous industries from IT and Development to Business, Marketing, Design, and Productivity.\nThe courses can be taken at one's own pace and are offered at several levels including beginner, intermediate and advanced. Online courses are also compatible with any mobile device for the ultimate in convenience.",
      "target_audience": [
        "Beginner Web Developers Interested in Learning to Create & Administer a MySQL Database using PHP",
        "Students interested in learning Structured Query Language (SQL)",
        "Students interested in Learning how to use PhpMyAdmin for Database Administration"
      ]
    },
    {
      "title": "React JS- Complete Guide for Frontend Web Development",
      "url": "https://www.udemy.com/course/react-js-a-complete-guide-for-frontend-web-development/",
      "bio": "Become an expert React JS Developer. Learn HTML, CSS, JavaScript, ES6, React JS and jQuery.",
      "objectives": [
        "Learn to create basic web pages using HTML5",
        "Learn to style and add animations to bring those basic web pages to life using CSS3",
        "Learn the Javascript language from basic to advanced along with the Next Gen JS - ES6",
        "Learn to create responsive and interactive web pages using Javascript and jQuery",
        "Create user-friendly, beautiful, light and fast websites using React JS",
        "Become an expert front end developer using ReactJs"
      ],
      "course_content": {
        "HTML5 - Basics to Advanced": [
          "HTML - Introduction",
          "HTML - Code Editor Setup",
          "HTML - Structure of an HTML Document",
          "HTML - Adding Heading in a Webpage",
          "HTML - Adding Paragraph in a Webpage",
          "HTML - Adding Images in Web Pages",
          "HTML - Creating Ordered and Unordered Lists",
          "HTML - Adding Styles and Formatting HTML Elements",
          "HTML - Block and Inline Display Values",
          "HTML - Adding group styles using Class attribute",
          "HTML - Adding HyperLinks in Webpages",
          "HTML - Using links to connect Webpages",
          "HTML - Uniquely Identify HTML Element by using ID attribute",
          "HTML - Mini-Project 1: Favorite Foods Webpage",
          "HTML - Mini-Project 1: Solution",
          "HTML - What makes HTML5 Better?",
          "HTML - New Elements & Attributes in HTML5",
          "HTML - Design Page Structure Using Semantic Elements",
          "HTML - New Semantic Elements: <details> and <summary>",
          "HTML - Introduction to Tables",
          "HTML - Span table rows and columns",
          "HTML - Design layouts using Tables",
          "HTML Tables - Practice Problem 1",
          "HTML Tables - Practice Problem 1: Solution",
          "HTML - Introduction to Forms",
          "HTML - Form Input Types",
          "HTML - Adding Styles to Forms",
          "HTML - Form Methods: GET and POST",
          "HTML - New Form Elements",
          "HTML - New Form Input Types",
          "HTML - New Form Input Attributes",
          "HTML - Form Validation",
          "HTML - Forms Practice Problem 1",
          "HTML - Forms Practice Problem 1 - Solution",
          "HTML - Adding Videos in a Webpage",
          "HTML - Adding Audio in a Webpage",
          "HTML - The <embed> element",
          "HTML - Embed Youtube Videos in a Webpage",
          "HTML - Introduction to SVG",
          "HTML - Create circle using SVG",
          "HTML - Create a rectangle using SVG",
          "HTML - Final Project"
        ],
        "CSS3 - Basics to Advanced": [
          "CSS - Introduction",
          "CSS - How to use CSS?",
          "CSS - Styling Text",
          "CSS - Adding Borders",
          "CSS - Margin and Padding",
          "CSS - Styling Lists",
          "CSS - Styling Links",
          "CSS - Styling Buttons",
          "CSS - Adding Icons",
          "CSS - Working with Display Values",
          "CSS - Display value: Inline-Block",
          "CSS - Positioning HTML Elements Part-1",
          "CSS - Positioning HTML Elements Part-2",
          "CSS - Handling Content Overflow",
          "CSS - Floating HTML Elements",
          "CSS - Box Model",
          "CSS - Box Sizing",
          "CSS - Adding Shadows",
          "CSS - Combinators Part-1",
          "CSS - Combinators Part-2",
          "CSS - Pseudo Classes Part-1",
          "CSS - Pseudo Classes Part-2",
          "CSS - Pseudo Elements",
          "CSS - Adding Backgrounds",
          "CSS - Gradients",
          "CSS - Handling Text Overflow",
          "CSS - Practice Problem-1: Create Google.com Look-Alike",
          "CSS - Practice Problem-1: Create Google.com Look-Alike Solution",
          "CSS - Introduction to Responsive Web Design",
          "CSS - Viewport",
          "CSS - Dynamic Size",
          "CSS - Introduction to Media Queries",
          "CSS - Responsive Webpage Design using Media Queries",
          "CSS - Flex Layout",
          "CSS - Flex Container Properties",
          "CSS - Align Flex Items",
          "CSS - Flex Item Properties",
          "CSS - Design Topbar using Flex",
          "CSS - Responsive Grid using Flex",
          "CSS - Transform Property",
          "CSS - Align Elements using Transform Property",
          "CSS - Transition Property",
          "CSS - Animation Property",
          "CSS - Flying Rocket Animation using Animation Property",
          "CSS - Introduction to Grid Layout",
          "CSS - Grid Container Properties",
          "CSS - Grid Item Properties",
          "CSS - Final Project Problem Statement"
        ],
        "Javascript - Basics to Advanced": [
          "JavaScript - Introduction",
          "JavaScript - Introduction to Variables, Operators and Expressions",
          "JavaScript - Variables",
          "JavaScript - Numbers",
          "JavaScript - In-Built Number Functions",
          "JavaScript - Strings",
          "JavaScript - In-Built String Functions Part-1",
          "JavaScript - In-Built String Functions Part-2",
          "JavaScript - Null and Undefined Values",
          "JavaScript - Conditional Statement: If-else",
          "JavaScript - Conditional Statement: Switch",
          "JavaScript - Arithmetic Operators",
          "JavaScript - Assignment Operators",
          "JavaScript - Comparison and Logical Operators",
          "JavaScript - Implicit Type Coercion",
          "JavaScript - Explicit Type Coercion",
          "JavaScript - Objects",
          "JavaScript - Arrays Part 1",
          "JavaScript - Arrays Part 2",
          "JavaScript - Introduction to Loops",
          "JavaScript - While Loop",
          "JavaScript - For Loops",
          "JavaScript - Functions",
          "JavaScript - Function Arguments",
          "JavaScript - Scope and Environment",
          "JavaScript - Variable Hoisting",
          "JavaScript - Function Hoisting",
          "JavaScript - Introduction to DOM",
          "JavaScript - Select HTML Elements",
          "JavaScript - Query Selectors",
          "JavaScript - Update HTML Elements",
          "JavaScript - Updating Styles",
          "JavaScript - Intro to Events",
          "JavaScript - Add and Remove Classes from HTML Elements",
          "JavaScript - Getting Styles",
          "JavaScript - Form Events",
          "JavaScript - Keyboard Events",
          "JavaScript - Mouse Events",
          "JavaScript - Create HTML Elements - Part 1",
          "JavaScript - Create HTML Elements - Part 2",
          "JavaScript- Update and Delete HTML Elements",
          "JavaScript - Introduction to Browser Object Model",
          "JavaScript - Screen and Navigator Object",
          "JavaScript - History and Location Object",
          "JavaScript - Mini-Project 1: Smartwatch Showcase",
          "JavaScript - Mini-Project 2: Calculator App",
          "JavaScript - Introduction to Regular Expressions",
          "JavaScript - Meta-characters and Character Classes",
          "JavaScript - Regex Quantifiers",
          "JavaScript - Using Regex inside JavaScript",
          "JavaScript - Regex Groups",
          "JavaScript - Form Validation using Regex",
          "JavaScript - Introduction to Object Oriented Programming",
          "JavaScript - The \"this\" Keyword",
          "JavaScript - Constructor Functions",
          "JavaScript - Inheritance and Prototype Chain",
          "JavaScript - Prototype Implementation",
          "JavaScript - Understanding Frontend and Backend",
          "JavaScript - HTTP Request and Response",
          "JavaScript - Introduction to JSON",
          "JavaScript - Introduction to AJAX",
          "JavaScript - Handling HTTP Response",
          "JavaScript - Working with HTTP Response Data",
          "JavaScript - Making HTTP Post Requests"
        ],
        "jQuery": [
          "jQuery - Introduction",
          "jQuery - Selectors and Filters",
          "jQuery - Add/Update HTML Elements",
          "jQuery - Add/Update Styles",
          "jQuery - Handling HTML Events",
          "jQuery - Making AJAX Calls"
        ],
        "Modern Javascript (ES6) For React": [
          "ES6 - Introduction",
          "ES6 - Variable Creation using \"let\" and \"const\"",
          "ES6 - Template Strings",
          "ES6 - Arrow Functions",
          "ES6 - Rest Operator",
          "ES6 - Spread Operator",
          "ES6 - Destructuring",
          "ES6 - Array Functions: map()",
          "ES6 - Arrow Functions: reduce()",
          "ES6 - Arrow Functions: filter()",
          "ES6 - Arrow Functions: find() and findIndex()",
          "ES6 - Introduction to Classes",
          "ES6 - Inheritance in ES6",
          "ES6 - Callbacks and Promises",
          "ES6 - Working with Promises",
          "ES6 - Chaining Promises"
        ],
        "React JS": [
          "ReactJS - Introduction",
          "ReactJS - Understanding SPAs and MPAs",
          "ReactJS - Creating our First React App",
          "ReactJS - Project Structure created by CRA",
          "ReactJS - Introduction to JSX",
          "ReactJS - JSX Behind the Scenes",
          "ReactJS - Adding Styles to React Elements",
          "ReactJS - Create React Elements Dynamically",
          "ReactJS - Creating our First React Component",
          "ReactJS - Passing Data to Components using Props",
          "ReactJS - Import and Export of Modules",
          "ReactJS - Introduction to CSS Modules",
          "ReactJS - Creating Mobile Responsive Components",
          "ReactJS - Stateful vs Stateless Components",
          "ReactJS - Creating Class-based Components",
          "ReactJS - More about setState() Method",
          "ReactJS - Passing Props to Class-based Components",
          "ReactJS - Passing Function as Props",
          "ReactJS - Practice Problem: Product Details Page",
          "ReactJS - Practice Problem: Product Details Page [Solution] - Part 1",
          "ReactJS - Practice Problem: Product Details Page [Solution] - Part 2",
          "ReactJS - Practice Problem: Product Details Page [Solution] - Part 3",
          "ReactJS - render() method - Behind the scenes",
          "ReactJS - Component Lifecycle - Creation",
          "ReactJS - Component Lifecycle - Updation",
          "ReactJS - shouldComponentUpdate() Lifecycle Method"
        ]
      },
      "requirements": [
        "Should have basic knowledge of operating Computer"
      ],
      "description": "What's this course about?\nThis course is a complete guide to become an expert front-end web developer. It contains all the tools and technologies that you should be proficient in work as a React Developer.\nWe will go through the journey of learning HTML5, CSS3, Javascript, ES6, jQuery, and React JS.\n\nEach of these course modules has a project which you can work on.\n\nAlong with the project problem statement video, you will also find the solution video for that project. It is advised to first try working on the project by yourself.\n\nOnce you have completed working on it,  you can see the solution video to know what are the best practices and the most optimized way to complete it.\n\nAs you keep on creating new projects, start adding them to your GitHub repository so that by the end of the course you will be having a place to showcase all your work.\n\nYou will definitely enjoy the journey while completing the course!\n\nWho's teaching you in this course?\nI am a Computer Science graduate highly rated instructor with a rating of 4.3 and more than 200k students on Udemy, I have been part of the corporate circle since his college days. In his early days, I was part of a startup team delivering production grid android apps. Currently, I am a lead developer at EdYoda. I’m responsible for the entire front-end development & integration with the back-end. React, Python, Django is my areas of expertise. I have been delivering corporate training for Android, React, Javascript, Python & Django. I have eyes for details & that makes him suited for delivering a finished product. I’m a fitness freak & working out is his favorite thing to do in his spare time.\n\nI want everyone should enjoy learning and I have shared my knowledge that gonna be helpful for React developers.\n\nWhy ReactJs?\nYou know Companies Worldwide Require React JS Developers.\nReact.js is one of the most demanding frameworks in the market;31.3% of worldwide specialists are currently utilizing ReactJs. Some of the world’s top tech teams use the tool to design scalable, easy-to-maintain solutions — Netflix, PayPal, eBay, Airbnb, and more. Why are businesses so interested in React.js implementation? Here are the benefits of adopting the framework:\nIncreased app development speed. The framework accepts HTML code input and has excellent subcomponent rendering support. Development teams can benefit from JSX as well — it’s an extension with a range of shortcuts that cuts the amount of code writing time.\nImproved code stability. React.js reduces the impact of change in the code file since the changes in parent components don’t affect the children. Such a data binding approach facilitates software testing and helps ensure stable app performance after update deployments.\nSEO-friendliness. React.js deals with the inability of search engine crawlers to process JS-heavy pages. Even a beginner with an entry-level react developer salary can deploy React on a server and use the virtual DOM to view the code as a regular web page in a browser.\nRobust toolkit. React.js has a wide range of debugging and interface design tools.\nStrong user community and an affordable remote react developer salary. Since a large number of teams are deploying the framework, the tool is regularly updated. There’s no shortage of user-generated content either — you can find dozens of helpful React tutorials and case studies to make the most out of the framework.\nAsking for a Senior react developer salary. It’s one of the most in-demand frameworks at the moment — that’s why business owners are willing to find professionals with a moderate mid-level react developer salary within and beyond their home regions.\n\nEnroll now!! see you in class.\n\nHappy learning\nTeam Edyoda",
      "target_audience": [
        "Beginners who want to learn Web Development from scratch",
        "Freshers who want to become a React Frontend Developer",
        "Programmers who want to learn Javascript language",
        "Developers who want to learn React JS"
      ]
    },
    {
      "title": "Node.js, Express, MongoDB & More: The Complete Bootcamp",
      "url": "https://www.udemy.com/course/nodejs-express-mongodb-bootcamp/",
      "bio": "Master Node by building a real-world RESTful API and web app (with authentication, Node.js security, payments & more)",
      "objectives": [
        "Master the entire modern back-end stack: Node, Express, MongoDB and Mongoose (MongoDB JS driver)",
        "Build a complete, beautiful & real-world application from start to finish (API and server-side rendered website)",
        "Build a fast, scalable, feature-rich RESTful API (includes filters, sorts, pagination, and much more)",
        "Learn how Node really works behind the scenes: event loop, blocking vs non-blocking code, streams, modules, etc.",
        "CRUD operations with MongoDB and Mongoose",
        "Deep dive into mongoose (including all advanced features)",
        "How to work with data in NoSQL databases (including geospatial data)",
        "Advanced authentication and authorization (including password reset)",
        "Security: encryption, sanitization, rate limiting, etc.",
        "Server-side website rendering with Pug templates",
        "Credit card payments with Stripe",
        "Sending emails & uploading files",
        "Deploy the final application to production (including a Git crash-course)",
        "Downloadable videos, code and design assets for projects"
      ],
      "course_content": {
        "Welcome, Welcome, Welcome!": [
          "Course Structure and Projects",
          "READ BEFORE YOU START!",
          "Let's Install Node.js"
        ],
        "Introduction to Node.js and NPM": [
          "Section Intro",
          "What Is Node.js and Why Use It?",
          "Running Javascript Outside the Browser",
          "Using Modules 1: Core Modules",
          "Reading and Writing Files",
          "Blocking and Non-Blocking: Asynchronous Nature of Node.js",
          "Reading and Writing Files Asynchronously",
          "Creating a Simple Web Server",
          "Routing",
          "Building a (Very) Simple API",
          "HTML Templating: Building the Templates",
          "HTML Templating: Filling the Templates",
          "Parsing Variables from URLs",
          "Using Modules 2: Our Own Modules",
          "Introduction to NPM and the package.json File",
          "Types of Packages and Installs",
          "Using Modules 3: 3rd Party Modules",
          "Package Versioning and Updating",
          "Setting up Prettier in VS Code",
          "Recap and What's Next"
        ],
        "Introduction to Back-End Web Development": [
          "Section Intro",
          "An Overview of How the Web Works",
          "HTTP in Action",
          "Front-End vs. Back-End Web Development",
          "Static vs Dynamic vs API"
        ],
        "How Node.js Works: A Look Behind the Scenes": [
          "Section Intro",
          "Node, V8, Libuv and C++",
          "Processes, Threads and the Thread Pool",
          "The Node.js Event Loop",
          "The Event Loop in Practice",
          "Events and Event-Driven Architecture",
          "Events in Practice",
          "Introduction to Streams",
          "Streams in Practice",
          "How Requiring Modules Really Works",
          "Requiring Modules in Practice"
        ],
        "[Optional] Asynchronous JavaScript: Promises and Async/Await": [
          "Section Intro",
          "The Problem with Callbacks: Callback Hell",
          "From Callback Hell to Promises",
          "Building Promises",
          "Consuming Promises with Async/Await",
          "Returning Values from Async Functions",
          "Waiting for Multiple Promises Simultaneously"
        ],
        "Express: Let's Start Building the Natours API!": [
          "Section Intro",
          "What is Express?",
          "Installing Postman",
          "Setting up Express and Basic Routing",
          "APIs and RESTful API Design",
          "Starting Our API: Handling GET Requests",
          "Handling POST Requests",
          "Responding to URL Parameters",
          "Handling PATCH Requests",
          "Handling DELETE Requests",
          "Refactoring Our Routes",
          "Middleware and the Request-Response Cycle",
          "Creating Our Own Middleware",
          "Using 3rd-Party Middleware",
          "Implementing the \"Users\" Routes",
          "Creating and Mounting Multiple Routers",
          "A Better File Structure",
          "Param Middleware",
          "Chaining Multiple Middleware Functions",
          "Serving Static Files",
          "Environment Variables",
          "Setting up ESLint + Prettier in VS Code"
        ],
        "Introduction to MongoDB": [
          "Section Intro",
          "What is MongoDB?",
          "No Need to Install MongoDB Locally",
          "[OPTIONAL] Installing MongoDB on macOS",
          "[OPTIONAL] Installing MongoDB on Windows",
          "[OPTIONAL] Creating a Local Database",
          "[OPTIONAL] CRUD: Creating Documents",
          "[OPTIONAL] CRUD: Querying (Reading) Documents",
          "[OPTIONAL] CRUD: Updating Documents",
          "[OPTIONAL] CRUD: Deleting Documents",
          "Using Compass App for CRUD Operations",
          "Creating a Hosted Database with Atlas",
          "Connecting to Our Hosted Database"
        ],
        "Using MongoDB with Mongoose": [
          "Section Intro",
          "Connecting Our Database with the Express App",
          "What Is Mongoose?",
          "Creating a Simple Tour Model",
          "Creating Documents and Testing the Model",
          "Intro to Back-End Architecture: MVC, Types of Logic, and More",
          "Refactoring for MVC",
          "Another Way of Creating Documents",
          "Reading Documents",
          "Updating Documents",
          "Deleting Documents",
          "Modelling the Tours",
          "Importing Development Data",
          "Making the API Better: Filtering",
          "Making the API Better: Advanced Filtering",
          "Making the API Better: Sorting",
          "Making the API Better: Limiting Fields",
          "Making the API Better: Pagination",
          "Making the API Better: Aliasing",
          "Refactoring API Features",
          "Aggregation Pipeline: Matching and Grouping",
          "Aggregation Pipeline: Unwinding and Projecting",
          "Virtual Properties",
          "Document Middleware",
          "Query Middleware",
          "Aggregation Middleware",
          "Data Validation: Built-In Validators",
          "Data Validation: Custom Validators"
        ],
        "Error Handling with Express": [
          "Section Intro",
          "Debugging Node.js with ndb",
          "Handling Unhandled Routes",
          "An Overview of Error Handling",
          "Implementing a Global Error Handling Middleware",
          "Better Errors and Refactoring",
          "Catching Errors in Async Functions",
          "Adding 404 Not Found Errors",
          "Errors During Development vs Production",
          "Handling Invalid Database IDs",
          "Handling Duplicate Database Fields",
          "Handling Mongoose Validation Errors",
          "Errors Outside Express: Unhandled Rejections",
          "Catching Uncaught Exceptions"
        ],
        "Authentication, Authorization and Security": [
          "Section Intro",
          "Modelling Users",
          "Creating New Users",
          "Managing Passwords",
          "How Authentication with JWT Works",
          "Signing up Users",
          "Logging in Users",
          "Protecting Tour Routes - Part 1",
          "Protecting Tour Routes - Part 2",
          "Advanced Postman Setup",
          "Authorization: User Roles and Permissions",
          "Password Reset Functionality: Reset Token",
          "Sending Emails with Nodemailer",
          "Password Reset Functionality: Setting New Password",
          "Updating the Current User: Password",
          "Updating the Current User: Data",
          "Deleting the Current User",
          "Security Best Practices",
          "Sending JWT via Cookie",
          "Implementing Rate Limiting",
          "Setting Security HTTP Headers",
          "Data Sanitization",
          "Preventing Parameter Pollution"
        ]
      },
      "requirements": [
        "Absolutely NO understanding of Node or back-end development is required! I take you from beginner to advanced developer!",
        "Basic understanding of JavaScript is required (the course contains a section about asynchronous JavaScript with promises and async/await in case you need to get up to speed)",
        "Basic understanding of HTML is a plus (only for final part of the course), but NOT a must",
        "Any computer and OS will work — Windows, macOS or Linux"
      ],
      "description": "Do you want to build fast and powerful back-end applications with JavaScript? Would you like to become a more complete and in-demand developer?\nThen Node.js is the hot technology for you to learn right now, and you came to the right place to do it!\nWelcome to the Complete Node.js, Express, and MongoDB Bootcamp, your fast track to modern back-end development.\nThis course is the perfect all-in-one package that will take you from a complete beginner to an advanced, highly-skilled Node.js developer.\nLike all my other courses, this one is completely project-based! And not just any project: it's a complete, beautiful, and feature-rich application, containing both a RESTful API and a server-side rendered website. It's the most fantastic and complete project that you will find in any Node.js course on the internet!\nBy building this huge project, you will learn all the skills that you need in order to plan, build, and deploy your own modern back-end applications with Node.js and related technologies.\n(If you feel like exploring the project, you can do so at www[.]natours[.]dev. And this is only a small part of the project! Log in with \"laura@example.com\" and password \"test1234\")\n\n\nAfter finishing this course, you will:\n1) Be building your own fast, scalable, and powerful Node.js RESTful APIs or web applications;\n2) Truly understand how Node.js works behind the scenes;\n3) Be able to work with NoSQL data and model data in real-world situations (a hugely important skill);\n4) Know how modern back-end development works, and how all the different technologies fit together (hard to understand from scattered tutorials and videos);\n5) Have experience in professionally used tools and libraries like Express, Mongoose, Stripe, Sendgrid, Atlas, Compass, Git, Heroku, and many more;\n6) Have built a complete application, which is a perfect starting point for your own applications in the future.\nPlease note that this course is NOT for absolute web development beginners, so you should already be familiar with basic JavaScript. NO back-end experience required though!\n\n\nIt's an absolutely full-packed, deep-dive course with over 40 hours of content!\nSince this is the \"Complete Node.js Bootcamp\", the course is crammed with tons of different technologies, techniques, and tools, so that you walk away from the course as a complete Node.js developer.\nThat's why the course turned out to be over 40 hours long. But if that sounds like too much for you, don't worry, there are videos or entire sections that you can safely skip.\nHere is exactly what you're gonna learn:\nFundamentals of Node.js, core modules, and NPM (Node Package Manager)\nHow Node.js works behind the scenes: event loop, blocking vs non-blocking code, event-driven architecture, streams, modules, etc.\nFundamentals of Express (Node.js framework): routing, middleware, sending responses, etc.\nRESTful API design and development with advanced features: filtering, sorting, aliasing, pagination\nServer-side website rendering (HTML) with Pug templates\nCRUD operations with MongoDB database locally and on the Atlas platform (in the cloud)\nAdvanced MongoDB: geospatial queries, aggregation pipeline, and operators\nFundamentals of Mongoose (MongoDB JS driver): Data models, CRUD operations, data validation, and middleware\nAdvanced Mongoose features: modeling geospatial data, populates, virtual populates, indexes, etc.\nUsing the MVC (Model-View-Controller) architecture\nHow to work with data in NoSQL databases\nAdvanced data modelling: relationships between data, embedding, referencing, and more\nComplete modern authentication with JWT: user sign up, log in, password reset, secure cookies, etc.\nAuthorization (user roles)\nSecurity: best practices, encryption, sanitization, rate limiting, etc.\nAccepting credit card payments with Stripe: Complete integration on the back-end and front-end\nUploading files and image processing\nSending emails with Mailtrap and Sendgrid\nAdvanced error handling workflows\nDeploying Node.js application to production with Heroku\nGit and GitHub crash course\nAnd so much more!\n\n\nWhy should you learn Node.js and take this course?\nIf you want to learn Node.js and modern back-end development, then there is no doubt that this course is for you!\nIt's the biggest Node.js course on the internet, it has by far the most complete course project, and offers the most in-depth explanations of all topics included.\nAnd even if you already know some Node.js, you should still take this course, because it contains subjects that are not covered anywhere else, or not in the same depth!\nBut maybe you're not yet convinced that Node.js really is the right technology for you to learn right now?\nWell, first, Node.js will allow you to use your JavaScript skills to build applications on the back-end. That itself is a huge gain, which makes your full-stack development process so much easier and faster.\nPlus, popularity and opportunities for Node.js are off the charts. It's a modern, proven, and reliable technology, used by tech giants (and 6-figure-salary-paying companies) like Netflix, PayPal, Uber, and many more.\nNode.js really is what you should invest your time in, instead of outdated technology like PHP.\nIn summary, if you already know JavaScript, learning Node is the logical next step for you! It will make you a better, more versatile, and more complete developer, which will ultimately boost your opportunities in the job market!\nAnd I created this course to help you do exactly that! It really is the course I wish I had when I was first learning back-end development with Node.js and all related technologies.\n\n\nAnd this is what you get by signing up today:\nLifetime access to 40+ hours of HD quality videos. No monthly subscription. Learn at your own pace, whenever you want;\nFriendly and fast support in the course Q&A whenever you have questions or get stuck;\nEnglish closed captions (not the auto-generated ones provided by Udemy);\nCourse slides in PDF format;\nDownloadable assets, starter code, and final code for each section;\nLots of small challenges are included in the videos so you can track your progress.\n\n\nAnd now, I hope to welcome you as a new student in my course! So click that \"Enroll\" button right now, and join me in this adventure today!\nBut if you're not 100% sure yet, just go ahead and watch the promo video to take a look at the course project. I promise you will be amazed :)\nSee you in the course!",
      "target_audience": [
        "Take this course if you want to build amazingly fast and scalable back-end applications using the JavaScript skills you already have. Node is the perfect tool for you!",
        "Take this course if you're a front-end developer looking to go into back-end development using the most complete course on the market.",
        "Take this course if you have taken other Node courses but: 1) still don't feel confident to code real-world apps, or 2) still feel like you need more back-end skills. This course is perfect for you!",
        "Take this course if you're an experienced Node developer who wants to add new skills missing in other courses: How Node works behind the scenes, advanced data modelling, geospatial data, complete and secure authentication, stripe payments, and more."
      ]
    },
    {
      "title": "Complete web development course",
      "url": "https://www.udemy.com/course/web-dev-master/",
      "bio": "Only web development course that you will need. Covers HTML, CSS, Tailwind, Node, React, MongoDB, Prisma, Deployment etc",
      "objectives": [
        "Become a full stack developer",
        "Master of Javascript ecosystem",
        "Build any project for your company or for freelance projects",
        "Full stack with MERN, GIT and many advance topics"
      ],
      "course_content": {},
      "requirements": [
        "Just a laptop with good internet connection",
        "A strong will to complete this course"
      ],
      "description": "Introducing the ultimate web development course that’s built for everyone, from beginners to aspiring professionals!\nWith over 15 years of industry experience and a successful YouTube channel with millions of students, I’ve crafted this comprehensive, up-to-date course designed to take you from zero to hero in web development. This is your one-stop shop for mastering the skills needed to become a professional software engineer.\nWhat makes this course stand out? You only need to purchase it once, and you’ll receive lifetime updates with new content regularly added to ensure you’re always learning the latest in web technologies.\nThis course is a perfect blend of all the essential tools and techniques you’ll need to build modern, scalable web applications and deploy them like a pro. We cover every angle—from the foundational basics to advanced deployment on custom VPS setups—leaving no stone unturned.\nA Breakdown of What You'll Learn:\nPhase 0: Introduction to Web Development\nStart your journey by understanding what web development is, the various career paths it offers, including freelancing opportunities, and how you can grow in this field.\nPhase 1: The Foundations\nThis phase covers the core of web development:\nHTML\nCSS\nTailwind CSS\nJavaScript\nHands-on JavaScript Projects\nPhase 2: Modern Backend Development\nWe dive into cutting-edge backend technologies:\nNode.js, Express, Mongoose\nPrisma, Drizzle, PostgreSQL, NeonDB\nBuild your own authentication system\nCreate APIs and even your own open-source project!\nPhase 3: Frontend Mastery with React\nBecome a pro at frontend development by learning:\nReact fundamentals\nAPI handling\nState management with Redux, Toolkit, and Zustand\nPhase 4: Full-Stack Projects & AI\nIn the final phase, you’ll combine everything you've learned to build full-stack applications. Plus, you’ll get a sneak peek into AI and machine learning:\nExplore TensorFlow.js\nExperiment with Langchain for AI-driven web apps\nWhether you're a complete beginner or someone with some experience, you can jump into any phase that fits your needs or follow the entire course step by step.\nThis course is more than just a learning experience—it's a career upgrade. Join now and start your journey to becoming a highly skilled web developer!",
      "target_audience": [
        "Complete beginners who wants to learn web development",
        "Intermediate to advance user who wants to take things to next level",
        "someone who wants to understand under the hood details",
        "People who understand that web development is no magic and requires efforts to learn it"
      ]
    },
    {
      "title": "Learn Azure step by step.",
      "url": "https://www.udemy.com/course/learn-azure/",
      "bio": "This course teaches Azure step by step from the perspective of C# developers.",
      "objectives": [
        "Developers should be able to develop apps and webapplication using Azure services."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Lab 2:- SQL Server on Azure ( DTU & EDTU)",
          "Lab 3 :- Azure Functions.",
          "Lab 4:- Azure storage (Blobs,Table,File and Queue).",
          "Lab 5:- Azure Cosmos DB.",
          "Lab 6: - Microservices & Azure Fabric in 90 Minutes.",
          "Lab 7 :- Azure tables, Partition and Row keys.",
          "Lab 8: - Block blobs, Append blobs & Page blobs.",
          "Lab 9 :- Azure Queues , visibility timeouts ,Peek & De-Queue.",
          "Lab 10 :- Cloud services vs App services.",
          "Lab 11 :- WebJob and background processing.",
          "Lab 12 : - Azure DevOps using Azure Pipeline.",
          "Lab 13 - Microservices using Docker and Azure.",
          "Lab 14 - Azure Virtual Network(VNET) and Network Security Groups(NSG).",
          "Lab 15 - Function Apps and Serverless Concept.",
          "Lab 16 :- Azure Logic Apps."
        ]
      },
      "requirements": [
        "Knowledge of visual studio and C#",
        "Good internet connection."
      ],
      "description": "Following are the labs covered in 8 hours.\nLab 1:- Azure,Cloud,SAAS,PAAS and IAAS.\nLab 2:- SQL Server on Azure ( DTU & EDTU)\nLab 3 :- Azure Functions.\nLab 4:- Azure storage (Blobs,Table,File and Queue).\nLab 5:- Azure Cosmos DB.\nLab 6: - Microservices & Azure Fabric in 90 Minutes.\nLab 7 :- Azure tables, Partition and Row keys.\nLab 8: - Block blobs, Append blobs & Page blobs.\nLab 9 :- Azure Queues , visibility timeouts ,Peek & De-Queue.\nLab 10 :- App services and Cloud services\nLab 11 :- WebJob and background processing.\nLab 12 : - Azure DevOps using Azure Pipeline.\nLab 13 - Microservices using Docker and Azure.\nLab 14 - Azure Virtual Network(VNET) and Network Security Groups(NSG).",
      "target_audience": [
        "C# developers who want to use Azure as platform.",
        "Developers who want to get familiar with Azure platform."
      ]
    },
    {
      "title": "Build a Microservices app with .Net and NextJS from scratch",
      "url": "https://www.udemy.com/course/build-a-microservices-app-with-dotnet-and-nextjs-from-scratch/",
      "bio": "How to build a microservices based app using .Net, NextJS, IdentityServer, RabbitMQ running on Docker and Kubernetes",
      "objectives": [
        "To build an application with .Net using Microservices architecture",
        "To build a client app for the application using NextJS",
        "To use RabbitMQ for Service bus communications",
        "To install and use IdentityServer in the Microservices app",
        "To be able to test the projects using Unit and Integration testing with XUnit",
        "To publish the Microservices app to Docker compose",
        "To publish the Microservices app to Kubernetes cluster both locally and on the internet"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course pre-requisites",
          "Setting up the developer environment",
          "Course assets and source code",
          "VS Code troubleshooting and tips",
          "Microservices - the big picture"
        ],
        "Section 2 - Creating the first microservice": [
          "Introduction to section 2",
          "Creating the first micro service",
          "Reviewing and simplifying the project",
          "Adding the entity classes",
          "Adding the Database context class",
          "Adding a Postgres database server",
          "Creating seed data",
          "Shaping the data to return",
          "Adding an API controller",
          "Adding a postman collection",
          "Adding the create auction endpoint",
          "Adding the update auction endpoint",
          "Adding the delete auction endpoint",
          "Saving changes into source control",
          "Summary"
        ],
        "Section 3 - Creating a Search microservice": [
          "Introduction to Section 3",
          "Creating the second micro services",
          "Adding the MongoDb server",
          "Adding the Item model",
          "Adding seed data",
          "Adding a search controller",
          "Paginating the results",
          "Adding filtering and ordering",
          "Synchronous messaging",
          "Adding Http communication to get the data",
          "Making our Http communication resilient",
          "Summary of Section 3"
        ],
        "RabbitMQ": [
          "Introduction to Section 4",
          "What is RabbitMQ",
          "Installing RabbitMQ",
          "Adding and configuring mass transit",
          "Adding the contracts",
          "Adding a consumer to consume a message from the Service bus",
          "Publishing the Auction Created event to the bus",
          "What could go wrong?",
          "Adding a message outbox",
          "Using message retries",
          "Consuming fault queues",
          "Challenge: Adding the update and delete consumers",
          "Challenge solution",
          "Summary of section 4"
        ],
        "Identity Server": [
          "Introduction to Section 5",
          "OAuth and OpenIDConnect",
          "Creating the Identity Server project",
          "Reviewing and configuring our new project",
          "Seeding data and adding a migration",
          "Reviewing the login page in identity server",
          "Adding a register page",
          "Adding a register page part 2",
          "Adding a register page part 3",
          "Adding client credentials to allow clients to request a token",
          "Adding a custom profile service to identity server",
          "Configuring auth on the resource server",
          "Configuring the auth endpoints on the resource server",
          "Summary of section 5"
        ],
        "Adding a Gateway Service": [
          "Introduction to Section 6",
          "Adding the Gateway service",
          "Adding the Reverse Proxy configuration",
          "Adding authentication to the Gateway config",
          "Testing our Gateway service in Postman",
          "Adding the remaining contracts we need",
          "Adding the remaining consumers to the Auction Service",
          "Adding the remaining consumers in the Search Service",
          "Adding a new client to the Identity service configuration",
          "Summary of Section 6"
        ],
        "Dockerizing our application": [
          "Introduction to Section 7",
          "Creating a docker account",
          "Dockerizing the Auction Service",
          "Updating our docker compose file for the Auction Service container",
          "Dockerising the Search service",
          "Dockerising the Identity Service",
          "Debugging a .Net service in a docker container",
          "Dockerising the Gateway Service",
          "Adding heathchecks in the Docker compose file",
          "Testing our docker containers",
          "Summary of Section 7"
        ],
        "Adding the client side application": [
          "Introduction to Section 8",
          "Creating the NextJS project",
          "Reviewing and simplifying the NextJS Project",
          "Creating a nav bar",
          "Fetching data from the API",
          "Adding an Auction Card component",
          "Styling the auction cards",
          "Adding a countdown timer to the auction card",
          "Adding loading to the images",
          "Adding types to the project",
          "Adding pagination to our list",
          "Using server functions in client components",
          "Adding a set page size option",
          "Using Zustand for state management",
          "Refactoring our code to use the zustand state",
          "Adding a search bar",
          "Adding the search functionality",
          "Adding a reset to the search function",
          "Adding the sorting functionality",
          "Adding the filtering functionality",
          "Adding a component to display when zero results",
          "Summary of section 8"
        ],
        "Client side identity with NextAuth (AuthJS)": [
          "Introduction to Section 9",
          "Before we begin",
          "Installing Next Auth into our client app",
          "Adding the login functionality",
          "Getting the session details in the client",
          "Populating the session data",
          "Populating the User actions dropdown",
          "Protecting routes",
          "Testing API authentication",
          "Getting the access token to use to authenticate to our resource server",
          "Summary of Section 9"
        ],
        "CRUD operations in the client app": [
          "Introduction to Section 10",
          "Routing in NextJS",
          "Getting the auctions won",
          "Creating an Auction form",
          "Creating an Auction form part 2",
          "Creating a reusable text input",
          "Creating the auction form part 3",
          "Creating a reusable date input",
          "Creating a fetch wrapper",
          "Adding the create auction server action",
          "Adding react hot toast to display notifications if something goes wrong",
          "Adding the auction details page content",
          "Adding the edit auction page",
          "Adding the delete auction functionality",
          "Summary of section 10"
        ]
      },
      "requirements": [
        "Some coding experience is required to participate in this course",
        "Windows, Mac or Linux computer that is capable of running Docker"
      ],
      "description": "*** Course has now been updated for .Net 8, NextJS 14 and Next-Auth v8***\nMicroservices is the latest 'buzzword' and hot topic in the web development industry at the moment and nowadays having microservices as part of your skillset is becoming more and more essential.  This course aims to teach you how to build a microservices based app using .Net for the backend services and Next.js for the client app.   We start from nothing and build up the app until we have a completed app that we can publish to a Kubernetes cluster on the internet.\nHere are some of the things that are covered in this course:\nCreating several backend services using .Net that provide functionality for the app\nService to service communication using RabbitMQ and gRPC\nUsing IdentityServer as the identity provider.\nCreating a gateway using Microsoft YARP\nBuilding a client side app with Next.js using the new App Router functionality (since Next.js 13.4)\nUsing SignalR for push notifications to the client app\nDockerizing our different services\nCI/CD workflows using GitHub actions\nAdding ingress controllers\nPublishing the app locally using docker compose\nThe goals of the main part of this course is to build this app and be able to run and publish everything locally without having to sign up or pay for any cloud services.   Once you have completed the main part of the course there are 3 optional Appendixes that cover:\nUnit and integration testing\nPublishing locally to Kubernetes\nPublishing the app to a Kubernetes cluster on the internet\nTools you need for this course\nIn this course all the lessons are demonstrated using Visual Studio Code, a free (and fantastic) cross platform code editor.   You can of course use any code editor you like and any Operating system you like... as long as it's Windows, Linux or Mac.  Please ensure that your computer can run Docker as this is a requirement for this course (please see the pre-requisite lesson available as a preview to confirm this).\n\nIs this course for you?\nThis course is very practical, about 90%+ of the lessons will involve you coding along with me on this project.  If you are the type of person who gets the most out of learning by doing, then this course is definitely for you.\n\nOn this course we will build an example Auction Application with several services that we will use to provide its functionality.   For the client side of things we are using Next.js to take advantage of its client side and server side capabilities which is an excellent fit for what we are building.  All you will need to get started is a computer with your favourite operating system that is capable of running Docker, and a passion for learning how to build a microservies based application using .Net and Next.js.",
      "target_audience": [
        "Those who would like to learn how to build an app with Microservice architecture using .Net"
      ]
    },
    {
      "title": "Spring & Spring Boot Interview Guide",
      "url": "https://www.udemy.com/course/spring-interview-questions-and-answers/",
      "bio": "Spring & Spring Boot Interview Guide with 200+ Questions & Answers. With REST API, JPA, Hibernate and Spring Data JPA.",
      "objectives": [
        "You will learn to answer 200 interview questions on Spring, Spring Boot and Spring MVC",
        "You will learn to answer questions on basics of JPA, Spring Data, Spring Data JPA, Spring AOP",
        "You will learn to answer questions on RESTful Web Services and SOAP Web Services with Spring & Spring Boot",
        "You will learn to answer questions on basics of Spring Framework - IOC, Application Context, Dependency Injection, Scope and Component Scan",
        "You will learn about Spring Annotations - @Component, @Service, @Repository, @Controller, @Autowired, @Primary, @Qualifier, @Configuration",
        "You will understand basic features of Spring Boot - Starters, Auto Configuration, Actuator and Externalized Configuration",
        "You will be introduced to the Best Practices in using Spring and Spring Boot",
        "You will be introduced to the approaches to handle validation errors with Spring MVC and Spring REST",
        "You will be introduced to the approaches for Versioning, Content Negotiation with RESTful Services",
        "You will understand the best practices in documenting your RESTful Services with Swagger"
      ],
      "course_content": {
        "Introduction": [
          "001-Preview To Spring Interview Guide",
          "Congratulations",
          "One Thing You Should Do",
          "002-Introduction To Our Github Repository",
          "003-Setting up the Course Presentation",
          "004-Overview of Spring Interview Guide",
          "DO NOT SKIP: Join in28minutes Learning Community"
        ],
        "Spring Framework": [
          "101-Basics of Spring Framework",
          "102-Spring Application Context and IOC Container",
          "103-Spring - Component Scan",
          "104-@Controller, @Component, @Repository, and @Service Annotations",
          "105-Scope of a Bean",
          "106-Setter and Constructor Injection",
          "107-Spring Application Contexts - XML and Java Configuration",
          "108-Spring and Autowiring",
          "109-Debugging with Spring Framework. @Primary and @Qualifier",
          "110-CDI(Contexts and Dependency Injection) and Spring",
          "111-Spring Major Versions and New Features",
          "112-Spring Modules",
          "113-Spring Projects",
          "114-Spring Design Patterns, BOM and Annotations",
          "115-Big Picture of Spring Framework",
          "How to be Productive - 3 Tips"
        ],
        "Spring MVC": [
          "201-Web Application Architectures - Model 1, Model 2 and Front Controller",
          "202-Spring MVC High Level Flow",
          "203-Dispatcher Servlet and Configuration",
          "204-Form Backing Object, Form Tags, Validation and Binding Result",
          "205-Path Variable, Model and Session Attributes",
          "206-Date Format Binding",
          "207-Exception Handling and Controller Advice",
          "208-Why is Spring MVC Popular?"
        ],
        "Spring Boot": [
          "301-Spring Boot - Goals and Features",
          "302-Spring Boot vs Spring vs Spring MVC",
          "303-@SpringBootApplication",
          "304-Introduction to Auto Configuration",
          "305-Embedded Servers - Tomcat, Jetty and Undertow",
          "306-Introduction to Starter Projects",
          "307-Starter Parent and Dependency Management",
          "308-Creating Spring Projects with Spring Initializr",
          "309-Configuration with Application Properties",
          "310-Custom Application Configuration with @ConfigurationProperties",
          "311-Spring Boot Profiles",
          "312-Monitoring your application with Spring Boot Actuator",
          "313-Do things at application startup with CommandLineRunner",
          "How to stay relevant"
        ],
        "Spring Data, Spring JDBC and JPA": [
          "401-Spring JDBC - JdbcTemplate and RowMapper",
          "402-JPA, Hibernate - Entity and Entity Manager",
          "403-JPA Relationships - One to One, One to Many, Many to Many",
          "404-JPA Configuration - Data Source, persistence.xml and Entity Manager Factory",
          "405-Spring Data - Need, Overview and Repository"
        ],
        "Unit and Integration Testing": [
          "501-Unit Testing with Mockito",
          "502-Unit Testing Controllers with Mock MVC Framework",
          "503-Integration Testing with Spring Boot"
        ],
        "AOP": [
          "601-Introduction to Spring AOP",
          "602-AOP Basics - Aspect, Pointcut, Advice and Weaving"
        ],
        "SOAP Web Services": [
          "701-What is a Web Service?",
          "702-SOAP Web Service - SOAP Envelope, Header and Body",
          "703-SOAP Request Examples - SOAP Header",
          "704-WSDL - an overview",
          "705-Contract First Approach and XSD",
          "706-JAXB and Configuration with Spring Web Services",
          "707-Writing an Endpoint with Spring Web Services",
          "708-MessageDispatcherServlet and configuration",
          "709-Generating a WSDL with Spring Web Services",
          "710-Error Handling for SOAP Web Services",
          "Technology Change is an Opportunity"
        ],
        "RESTful Web Services": [
          "801-What is REST?",
          "802-Best Practices of RESTful Services",
          "803-GET Resource method with Spring REST",
          "804-POST Resource method with Spring REST and ResponseEntity",
          "805-Implementing HATEOAS for RESTful Web Services",
          "806-Documenting RESTful web services with Swagger",
          "807-Content Negotiation and Representation of a Resource",
          "808-Exception Handling and Validation for RESTFul Web Services",
          "809-Versioning for RESTful Web Services"
        ],
        "Congratulations": [
          "Bonus Lecture",
          "We Want to Congratulate You!",
          "901-Conclusion To Spring Interview Guide"
        ]
      },
      "requirements": [
        "We use Eclipse as the IDE to demonstrate code examples",
        "You should have programming experience with Java and Spring"
      ],
      "description": "How about Quickly Revising all the Important Spring and Spring Boot Concepts in about 6 Hours before an interview?\nSpring ?   Yes.    Spring Boot ? Included.    Spring MVC ?  Yes.    Spring REST ? Yes.   Spring AOP ? Yes.\nSpring JDBC? Included.            Spring Data JPA? Yes.  Of Course.         Hibernate? Yes.\nWeb Services? Yes.                   SOAP? Yes. Of Course                              REST API? Absolutely!\n\n\nWHAT OUR LEARNERS ARE SAYING:\n5 STARS - It is a short and sweet for Spring Framework review course. It will refresh most of the topic at Spring & Spring Boot. It is the course who want to refresh their knowledge at Spring framework in short-period.\n5 STARS - Best course to refresh the spring concepts and syntax in short time to prepare the interviews.\n5 STARS - Very good course expaining details of the Spring Framework. The widely discussed topics Spring (Framework, MVC, Boot, Data, JDBC, JPA), Unit and Integration Testing, etc. will help everyone to understand these not-so-easy issues in a deeper way.\n5 STARS - A well Crafted Course. Thanks to Ranga Karanam!\n\n\nCOURSE OVERVIEW:\nSpring Framework is the Most Popular Java Framework ever. It continues to evolve with changing architectures. Spring Boot is one of the most popular Spring projects. Spring Boot is the most used Java framework to develop RESTful Services and Microservices.\nPreparing for Spring Interview is tricky. There are a wide range of Spring Modules and Spring Projects you would need to recollect and be prepared to answer questions on. You would need to get a Good Understanding of the new features of Spring and have a Firm Grasp of the concepts you implemented in your projects.\nThis course helps you prepare for Spring Interview with code examples covering 200+ Spring Interview Questions and Answers on Spring, Spring Boot, Spring MVC, Spring JDBC, JPA, AOP, RESTful Services and SOAP Web Services.\n\n\nCOURSE HIGHLIGHTS:\n\n\nSpring\nWhat is Loose Coupling?\nWhat is a Dependency?\nWhat is IOC (Inversion of Control)?\nWhat is Dependency Injection?\nCan you give few examples of Dependency Injection?\nWhat is Auto Wiring?\nWhat are the important roles of an IOC Container?\nWhat are Bean Factory and Application Context?\nCan you compare Bean Factory with Application Context?\nHow do you create an application context with Spring?\nHow does Spring know where to search for Components or Beans?\nWhat is a Component Scan?\nHow do you define a component scan in XML and Java Configurations?\nHow is it done with Spring Boot?\nWhat does @Component signify?\nWhat does @Autowired signify?\nWhat’s the difference Between @Controller, @Component, @Repository, and @Service Annotations in Spring?\nWhat is the default scope of a bean?\nAre Spring beans thread safe?\nWhat are the other scopes available?\nHow is Spring’s singleton bean different from Gang of Four Singleton Pattern?\nWhat are the different types of dependency injections?\nWhat is setter injection?\nWhat is constructor injection?\nHow do you choose between setter and constructor injections?\nWhat are the different options available to create Application Contexts for Spring?\nWhat is the difference between XML and Java Configurations for Spring?\nHow do you choose between XML and Java Configurations for Spring?\nHow does Spring do Autowiring?\nWhat are the different kinds of matching used by Spring for Autowiring?\nHow do you debug problems with Spring Framework?\nHow do you solve NoUniqueBeanDefinitionException?\nHow do you solve NoSuchBeanDefinitionException?\nWhat is @Primary?\nWhat is @Qualifier?\nWhat is CDI (Contexts and Dependency Injection)?\nDoes Spring Support CDI?\nWould you recommed to use CDI or Spring Annotations?\nWhat are the major features in different versions of Spring?\nWhat are new features in Spring Framework 4.0?\nWhat are new features in Spring Framework 5.0?\nWhat are important Spring Modules?\nWhat are important Spring Projects?\nWhat is the simplest way of ensuring that we are using single version of all Spring related dependencies?\nName some of the design patterns used in Spring Framework?\nWhat do you think about Spring Framework?\nWhy is Spring Popular?\nCan you give a big picture of the Spring Framework?\nSpring MVC\nWhat is Model 1 architecture?\nWhat is Model 2 architecture?\nWhat is Model 2 Front Controller architecture?\nCan you show an example controller method in Spring MVC?\nCan you explain a simple flow in Spring MVC?\nWhat is a ViewResolver?\nWhat is Model?\nWhat is ModelAndView?\nWhat is a RequestMapping?\nWhat is Dispatcher Servlet?\nHow do you set up Dispatcher Servlet?\nWhat is a form backing object?\nHow is validation done using Spring MVC?\nWhat is BindingResult?\nHow do you map validation results to your view?\nWhat are Spring Form Tags?\nWhat is a Path Variable?\nWhat is a Model Attribute?\nWhat is a Session Attribute?\nWhat is a init binder?\nHow do you set default date format with Spring?\nWhy is Spring MVC so popular?\nSpring Boot\nWhat is Spring Boot?\nWhat are the important Goals of Spring Boot?\nWhat are the important Features of Spring Boot?\nCompare Spring Boot vs Spring?\nCompare Spring Boot vs Spring MVC?\nWhat is the importance of @SpringBootApplication?\nWhat is Auto Configuration?\nHow can we find more information about Auto Configuration?\nWhat is an embedded server? Why is it important?\nWhat is the default embedded server with Spring Boot?\nWhat are the other embedded servers supported by Spring Boot?\nWhat are Starter Projects?\nCan you give examples of important starter projects?\nWhat is Starter Parent?\nWhat are the different things that are defined in Starter Parent?\nHow does Spring Boot enforce common dependency management for all its Starter projects?\nWhat is Spring Initializr?\nWhat is application.properties?\nWhat are some of the important things that can customized in application.properties?\nHow do you externalize configuration using Spring Boot?\nHow can you add custom application properties using Spring Boot?\nWhat is @ConfigurationProperties?\nWhat is a profile?\nHow do you define beans for a specific profile?\nHow do you create application configuration for a specific profile?\nHow do you have different configuration for different environments?\nWhat is Spring Boot Actuator?\nHow do you monitor web services using Spring Boot Actuator?\nHow do you find more information about your application envrionment using Spring Boot?\nWhat is a CommandLineRunner?\nDatabase Connectivity - JDBC, Spring JDBC & JPA\nWhat is Spring JDBC? How is different from JDBC?\nWhat is a JdbcTemplate?\nWhat is a RowMapper?\nWhat is JPA?\nWhat is Hibernate?\nHow do you define an entity in JPA?\nWhat is an Entity Manager?\nWhat is a Persistence Context?\nHow do you map relationships in JPA?\nWhat are the different types of relationships in JPA?\nHow do you define One to One Mapping in JPA?\nHow do you define One to Many Mapping in JPA?\nHow do you define Many to Many Mapping in JPA?\nHow do you define a datasource in a Spring Context?\nWhat is the use of persistence.xml\nHow do you configure Entity Manager Factory and Transaction Manager?\nHow do you define transaction management for Spring – Hibernate integration?\nSpring Data\nWhat is Spring Data?\nWhat is the need for Spring Data?\nWhat is Spring Data JPA?\nWhat is a CrudRepository?\nWhat is a PagingAndSortingRepository?\nUnit Testing\nHow does Spring Framework Make Unit Testing Easy?\nWhat is Mockito?\nWhat is your favorite mocking framework?\nHow do you do mock data with Mockito?\nWhat are the different mocking annotations that you worked with?\nWhat is MockMvc?\nWhat is @WebMvcTest?\nWhat is @MockBean?\nHow do you write a unit test with MockMVC?\nWhat is JSONAssert?\nHow do you write an integration test with Spring Boot?\nWhat is @SpringBootTest?\nWhat is @LocalServerPort?\nWhat is TestRestTemplate?\nAOP\nWhat are cross cutting concerns?\nHow do you implement cross cutting concerns in a web application?\nIf you would want to log every request to a web application, what are the options you can think of?\nIf you would want to track performance of every request, what options can you think of?\nWhat is an Aspect and Pointcut in AOP?\nWhat are the different types of AOP advices?\nWhat is weaving?\nCompare Spring AOP vs AspectJ?\nSOAP Web Services\nWhat is a Web Service?\nWhat is SOAP Web Service?\nWhat is SOAP?\nWaht is a SOAP Envelope?\nWhat is SOAP Header and SOAP Body?\nCan you give an example of SOAP Request and SOAP Response?\nWhat is a SOAP Header? What kind of information is sent in a SOAP Header?\nCan you give an example of a SOAP Header with Authentication information?\nWhat is WSDL (Web Service Definition Language)?\nWhat are the different parts of a WSDL?\nWhat is Contract First Approach?\nWhat is an XSD?\nCan you give an example of an XSD?\nWhat is JAXB?\nHow do you configure a JAXB Plugin?\nWhat is an Endpoint?\nCan you show an example endpoint written with Spring Web Services?\nWhat is a MessageDispatcherServlet?\nHow do you configure a MessageDispatcherServlet?\nHow do you generate a WSDL using Spring Web Services?\nHow do you implement error handling for SOAP Web Services?\nWhat is a SOAP Fault?\nRESTful Web Services\nWhat is REST?\nWhat are the key concepts in designing RESTful API?\nWhat are the Best Practices of RESTful Services?\nCan you show the code for an example Get Resource method with Spring REST?\nWhat happens when we return a bean from a Request Mapping Method?\nWhat is GetMapping and what are the related methods available in Spring MVC?\nCan you show the code for an example Post Resource method with Spring REST?\nWhat is the appropriate HTTP Response Status for successful execution of a Resource Creation?\nWhy do we use ResponseEntity in a RESTful Service?\nWhat is HATEOAS?\nCan you give an Example Response for HATEOAS?\nHow do we implement it using Spring?\nHow do you document RESTful web services?\nCan you give a brief idea about Swagger Documentation?\nHow do you automate generation of Swagger Documentation from RESTful Web Services?\nHow do you add custom information to Swagger Documentation generated from RESTful Web Services?\nWhat is Swagger-UI?\nWhat is \"Representation\" of a Resource?\nWhat is Content Negotiation?\nWhich HTTP Header is used for Content Negotiation?\nHow do we implement it using Spring Boot?\nHow do you add XML support to your RESTful Services built with Spring Boot?\nHow do you implement Exception Handling for RESTFul Web Services?\nWhat are the best practices related to Exception Handling with respect to RESTful Web Services?\nWhat are the different error status that you would return in RESTful Web Services?\nHow would you implement them using Spring Boot?\nWhat HTTP Response Status do you return for validation errors?\nHow do you handle Validation Errors with RESTful Web Services?\nWhy do we need Versioning for RESTful Web Services?\nWhat are the versioning options that are available?\nHow do you implement Versioning for RESTful Web Services?\nStart Learning Now. Hit the Enroll Button!",
      "target_audience": [
        "You are learning Java",
        "You are learning Spring",
        "You want to attend Java & Spring Interviews",
        "You want to add more depth to your Spring Knowledge"
      ]
    },
    {
      "title": "Python and Flask Bootcamp: Create Websites using Flask!",
      "url": "https://www.udemy.com/course/python-and-flask-bootcamp-create-websites-using-flask/",
      "bio": "Create awesome websites using the powerful Flask framework for Python!",
      "objectives": [
        "Learn basic HTML to create templates",
        "Learn basic CSS to style your webpages",
        "Understand Python, including Functions, Decorators, and Object Oriented Programming",
        "Use Flask to create basic landing pages",
        "Use WTForms to accept user inputs from a Flask Application",
        "Use Flask and SQLAlchemy as an ORM for a SQL database",
        "Use blueprints to structure larger Flask Applications",
        "Create a fully functioning Social Network Site with Flask",
        "Enable User Authentication and Authorization with Flask",
        "Understand OAuth with Flask Applications",
        "Create simple REST APIs with Flask",
        "Accept Payments with Stripe and Flask"
      ],
      "course_content": {
        "Course Overview, Installs, and Setup": [
          "Course Overview -- DO NOT SKIP THIS LECTURE",
          "FAQ - Frequently Asked Questions",
          "Course Curriculum",
          "Installing and Setup",
          "How a Flask Website Works"
        ],
        "HTML Crash Course": [
          "HTML Basics Overview",
          "HTML Basic Structure",
          "HTML Basic Tagging",
          "HTML Lists",
          "Divs and Spans with HTML",
          "HTML Attributes",
          "HTML Assessment Exercise One",
          "HTML Assessment Exercise Solution",
          "Forms Basics",
          "Forms Labels",
          "Forms Selections",
          "HTML Assessment Exercise Two",
          "HTML Assessment Exercise Two - Solution"
        ],
        "CSS Crash Course": [
          "Introduction to CSS",
          "CSS Part One - Basic Tag Styling",
          "CSS Part Two - Backgrounds and Borders",
          "CSS Part Three - Classes and Ids",
          "CSS Part Four - Inspecting Elements in the Browser",
          "CSS Part Five - Fonts",
          "CSS Crash Course - Assessment Exercise",
          "CSS Crash Course - Assessment Exercise Solutions"
        ],
        "Boostrap 4 Crash Course": [
          "Bootstrap 4 Overview",
          "Bootstrap Part One - Buttons",
          "Bootstrap Part Two - Forms",
          "Bootstrap Part Three - Navbar",
          "Bootstrap Project Overview",
          "Boostrap Project Solutions"
        ],
        "Python - Level One": [
          "Python Basics Overview",
          "Python Data Types",
          "Numbers and Variables",
          "Strings",
          "Lists",
          "Dictionaries",
          "Tuples, Sets, and Booleans",
          "Basics Exercise",
          "Basics Exercise - Solutions",
          "Comparison and Logical Operators",
          "If Elif and Else Statements in Python",
          "While Loops and For Loops in Python",
          "Functions in Python Part One",
          "Functions in Python Part Two",
          "Hints and Help for Function Tasks",
          "Function Exercises",
          "Function Exercise Solutions"
        ],
        "Python Level Two": [
          "Introduction to Python Level Two",
          "Nested Statements and Scope",
          "Object Oriented Programming - Part One",
          "Object Oriented Programming - Part Two",
          "Object Oriented Programming - Part Three",
          "OOP Project Overview",
          "OOP Project Solution",
          "Decorators Overview",
          "Pip Install and PyPi",
          "Modules and Packages",
          "__name__ and \"__main__\""
        ],
        "Flask Basics": [
          "Virtual Environments",
          "Flask Basics",
          "Basic Routes",
          "Flask Dynamic Routing",
          "Debug Mode",
          "Flask Routing Exercise",
          "Flask Routing Exercise - Solution"
        ],
        "Templates": [
          "Template Basics",
          "Template Variables",
          "Template Control Flow",
          "Template Inheritance",
          "url_for help Function",
          "Template Forms",
          "Flask Template Exercise",
          "Flask Template Exercise - Solutions"
        ],
        "Forms with Flask": [
          "Flask Form Basics",
          "Forms Fields Part One",
          "Forms Fields Part Two",
          "Flash Alerts",
          "Forms Project Exercise Code Along"
        ],
        "SQL Databases with Flask": [
          "Python and Databases",
          "Flask and Databases Part One",
          "Flask and Databases Part Two",
          "Flask Migrate",
          "Flask Relationships - Part One",
          "Flask Relationships - Part Two",
          "Databases in Views - Part One",
          "Databases in Views - Part Two",
          "Databases in Views - Part Three",
          "Database Project Overview",
          "Database Project Solutions"
        ]
      },
      "requirements": [
        "Permissions to download Python on to your computer (basic Admin permissions)"
      ],
      "description": "Welcome to the best online resource for learning how to create websites with Python and Flask!\nI'm Jose Portilla and I've created this course to help you develop a true understanding of the ins and outs of creating amazing websites with the latest technologies in Python and Flask! I teach over 500,000 students online and I'm happy to get the chance to help others learn the amazing power of programming!\nThis course will be your complete definitive guide for developing fully functional websites with the Flask web framework. We'll start with crash courses in the basic front end technologies for HTML, CSS, and Boostrap 4. Once you have a good understanding of the basics of these front end technologies, we'll begin our journey with Python and Flask. The course includes a complete Python refresher that starts with the very basics and quickly takes you through the advanced features, including functions, decorators, object oriented programming, and more!\nOnce we understand HTML, CSS, Bootstrap 4, and Python we're ready to tackle Flask and learn about all the amazing features it has! We'll create basic landing pages with Flask and Python, then show you how to connect templates to Flask do you can connect your Flask Application to HTML, CSS, and Bootstrap based templates. We'll also cover how to use the Jinja template engine to directly connect your flask application to your front end files to customize your websites.\nThen we'll learn how to create forms to accept user information, how to save that information to a SQL database, and relay it back to the user.\nThis course includes a fully complete Social Network project that includes, User Logins, Followers, Authentication, Blueprints, Templates, SQL Databases, and more!\nIn this course we'll cover everything you need to know, including:\nCrash Course on HTML\nCrash Course on CSS\nCrash Course on Bootstrap 4\nComplete Overview of Python 3\nUtilizing Flask Basics\nCreating Templates with Flask and Jinja\nCreating Forms with Flask and WTForms\nCreating Databases with SQL and connecting them to Flask\nStructuring Large Flask Applications with Blueprints\nCreating User Login, Registration, and Authentication\nCreating Full Applications, including a Social Network Project\nREST APIs with Flask\nAccepting Payments with Stripe\nand much more!\nSo what are you waiting for? Sign up today and begin your journey to creating amazing websites with the power of programming with Flask and Python!\nI will see you inside the course!",
      "target_audience": [
        "Anyone wanting to create websites with Flask"
      ]
    },
    {
      "title": "CSS Complete Course For Beginners",
      "url": "https://www.udemy.com/course/css-complete-course-for-beginners/",
      "bio": "Learn CSS With CSS Theory And Practical",
      "objectives": [
        "Introduction to CSS concepts",
        "Theory And Practical demonstrations of CSS concepts",
        "Write CSS Scripts And Understanding Concepts",
        "Practically Getting Started With CSS Styles, CSS 2D Transform, CSS 3D Transform",
        "Introduction To CSS Background And CSS Animation",
        "Introduction To CSS Inclusion In HTML"
      ],
      "course_content": {
        "CSS Complete Course": [
          "Introduction To CSS",
          "CSS Inclusion In HTML",
          "CSS Basic Syntax",
          "CSS Links",
          "CSS Text",
          "CSS Colors 1",
          "CSS Colors 2",
          "CSS Background",
          "CSS Images",
          "CSS Layers",
          "CSS Fonts",
          "CSS Lists",
          "CSS Borders",
          "CSS Padding",
          "CSS Positioning",
          "CSS Dimensions",
          "CSS Rounded Corners",
          "CSS Cursors",
          "CSS Visibility",
          "CSS Selectors",
          "CSS Scrollbars",
          "CSS Gradient",
          "CSS 2D Transform",
          "CSS 3D Transform",
          "CSS Animation"
        ]
      },
      "requirements": [
        "Basic Computer Knowledge",
        "Basic HTML Knowledge"
      ],
      "description": "Learn CSS Complete Course\nCSS Course with basics and advanced concepts of CSS\nEver wonder how the latest website designs are made? Cascading Style Sheets (CSS) are the main coding files used to layout a website and its design. CSS 3 is the latest in styling standards, and it brings several new properties and declarations you can use to make your website design more easily created. CSS is currently the only standard in website design that plugs directly into your HTML, even the latest HTML 5 standards. With CSS 3 and HTML 5, you can create the latest interactive pages for your website viewers.\nThis course shows you how to create CSS classes from a beginner's level. It starts off with basic HTML declarations, properties, values, and how to include a CSS style sheet with your HTML code. For those of you who are new to CSS and HTML, we show you step-by-step how to create a CSS file and include it in your HTML code, even if you use a cloud server for your hosting.\nWe show you how to position your elements, layout your elements relative to your documents, and style your HTML using predefined CSS values. We introduce you to the common CSS styling that you'll need when you start off designing your pages. If you want to get to know CSS and website design, this course is meant for you, and it can be used by anyone who hasn't even seen one line of CSS code yet. We focus on the latest CSS 3 and HTML 5 standards, so you get the latest when coding your website pages instead of focusing on older code.\nThere are no prerequisites. Anyone Can join this course. It is recommended though that individual have some basic computer programming knowledge.\n\n\nCourse Topics\n\n\nIntroduction to CSS\nInclusion Of CSS In HTML\nCSS Syntax\nCSS Styling Text\nCSS Page Backgrounds\nCSS 2D Transform\nCSS 3D Transform\nCSS Animation\n\nThank you see you inside the course",
      "target_audience": [
        "For People New to CSS",
        "For CSS Beginners",
        "For People Who want to learn CSS Fundamentals and later Transition into Web Designing"
      ]
    },
    {
      "title": "Creating Accessible Websites",
      "url": "https://www.udemy.com/course/creating-accessible-websites/",
      "bio": "Achieve WCAG compliance by learning accessibility testing, WAI-ARIA, and website optimization for screen readers",
      "objectives": [
        "Creating accessible websites",
        "Working with WAI-ARIA",
        "Designing color blind friendly pages",
        "Creating interfaces that can be accessed with the keyboard",
        "Achieving WCAG compliance"
      ],
      "course_content": {},
      "requirements": [
        "HTML",
        "CSS",
        "JS"
      ],
      "description": "This course has professional captions (subtitles) for all lectures.\n\n\nSuccessful web developers come in all shapes and sizes, but an understanding and respect for all of the different people they're developing for is crucial. If you want to jump from a \"good\" to a \"great\" web developer, you must know web accessibility!\n\n\nThis course is your practical, step-by-step guide to creating accessible websites and web interfaces. At the end of this course, you will be able to make your portfolio accessible and offer your clients a website upgrade that adheres to web accessibility standards! In addition, since all government websites must be accessible, you will have the skills to work in that field and gain access to a greater amount and variety of clients!\n\n\nWe will start with the basics--WAI-ARIA, color accessibility, the tabindex, HTML semantics, etc--and then make a real life website accessible step by step.\n\n\nAre you ready to begin your journey into web accessibility? Start here!\n\n\nStudents are encouraged to contact the instructor with any guideline questions for fully fledged help and course support.",
      "target_audience": [
        "Freelancers",
        "Web Studios",
        "Any web developer interested in web accessibility",
        "Web/front-end developers who want to improve their skills",
        "Developers/web studios who want to stand out from their competition"
      ]
    },
    {
      "title": "Learn Responsive Web Development from Scratch",
      "url": "https://www.udemy.com/course/learn-responsive-web-development-from-scratch/",
      "bio": "A Comprehensive Course on Responsive Web Design and Twitter Bootstrap 3",
      "objectives": [
        "Master Responsive Web Design Strategies",
        "Learn the tools and tips for Responsive Web Design",
        "Master Twitter Bootstrap 3",
        "Create projects to enhance conceptual learning"
      ],
      "course_content": {
        "Introduction To Building Responsive Websites": [
          "Introduction"
        ],
        "Building Responsive Websites - Part A": [
          "Part A Intro",
          "What is Responsive Design",
          "Strategies in Responsive Design",
          "Tools of the Trade - Part A",
          "Tools of the Trade - Part B",
          "Project Overview",
          "HTML Structure and Content",
          "Create a Fluid Layout",
          "CSS Rules for All Screens",
          "CSS Rules for Mobile Screens",
          "CSS Transitions"
        ],
        "Building with Twitter Bootstrap": [
          "Introduction to Bootstrap",
          "What is Twitter Bootstrap",
          "Getting Started With Bootstrap",
          "Base Markup & CSS",
          "Navbar & Dropdowns",
          "Jumbotron",
          "Rows, Grids & Media Objects",
          "List Groups & Glyphicons",
          "Forms, Tooltips & Popovers",
          "Modals & Tabs",
          "Carousel & Collapse",
          "Wrap Up",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Any PC with a net connection"
      ],
      "description": "With smartphone revolution and explosion of tablet sales worldwide it is important that your websites are geared towards different screens and resolutions. Responsive web design is the most important attribute of modern web development. Eduonix brings to you the most comprehensive course on the responsive web design. This unique course covers not only strategies tools tips and tricks for generic web design in HTMl5 and CSS3 but also covers Twitter Bootstrap 3 the cool framework for creating responsive websites in detail.\n\nOur project based learning will teach you the concepts while working on projects which implement the concepts covered in the lectures. This is a must learn course for any serious web developer. This two part course will teach you everything you need to build responsive websites.",
      "target_audience": [
        "Anyone with basic knowledge of HTML"
      ]
    },
    {
      "title": "ASP.NET CORE WEB API | The Complete Guide",
      "url": "https://www.udemy.com/course/the-complete-guide-to-aspnet-web-api/",
      "bio": "Learn to build fast and secure web applications with .NET Core Web API - The highest rated course with 30,000+ students!",
      "objectives": [
        "Build a complete .NET Core back-end with Web API, Entity Framework Core & SQL Database",
        "Utilize all three types of relationships in your database: one-to-one, one-to-many, many-to-many",
        "Seed data with code-first migrations programmatically",
        "Implement [HttpGet], [HttpPost], [HttpPut] and [HttpDelete] methods to work with simple or relational data",
        "Test your Web API with Swagger and Postman",
        "Different Web API versioning methods",
        "The default action return types & create your custom return type",
        "Server side Sorting, Filtering and Paging",
        "AspNet Core Web API Logging with Serilog",
        "Unit Testing API Endpoints and Services",
        "Token-based authentication and authorization"
      ],
      "course_content": {
        "Before You Get Started": [
          "Using This Course with Any .NET Version: A Quick Guide"
        ],
        "Getting Started with ASP.NET Core Web API": [
          "Getting Started",
          "Installing Asp.Net Core SDK and Runtime",
          "New Web API project with Visual Studio",
          "Default Asp.Net Core Project Files",
          "Testing the Web API Project with Postman and Swagger",
          "Summary",
          "Quiz: Basics of ASP.NET Core Web API"
        ],
        "Building Your First Asp.Net Core API": [
          "Getting Started",
          "Adding the Book Model",
          "Adding Your EF Core DB Context",
          "Adding Your First EF Core Migration",
          "Seeding Your Database With Data",
          "Adding Your First Web API Controller",
          "Adding a New Book [HttpPost]",
          "Listing All Books [HttpGet]",
          "Updating an Existing Book [HttpPut]",
          "Deleting an Existing Book [HttpDelete]",
          "Summary",
          "Quiz: Build Your First Asp.Net Core Web API"
        ],
        "Working with Relational Data using Entity Framework": [
          "Getting Started with Relational Data Management",
          "One-to-Many Relationships in Entity Framework Core",
          "Many-to-Many Relationships in Entity Framework Core",
          "Adding Author and Publisher Services to Web API",
          "Adding Relational Data With [HttpPost]",
          "Getting Authors of a Book with [HttpGet]",
          "Getting Books of an Author with [HttpGet]",
          "Getting Books of a Publisher including Authors",
          "Deleting Relational Data With Entity Framework Core",
          "Summary",
          "Quiz: Managing Relational Data in ASP.NET Core with Entity Framework",
          "Responses and status codes",
          "HTTP Response Status Codes",
          "Try-Catch-Finally block",
          "Throwing custom exceptions",
          "Global error handling",
          "Custom global error handling",
          "Summary of Error and Exception Handling",
          "Quiz: Error and Exception Handling in ASP.NET Core"
        ],
        "Controller Action Return Types": [
          "Introduction to Controller Action Return Types",
          "Specific Type",
          "IActionResult",
          "ActionResult<Type>",
          "Custom Return Type",
          "Summary of Controller Action Return Types",
          "Quiz: Controller Action Return Types"
        ],
        "Sorting, Filtering and Paging": [
          "Introduction",
          "Adding Server Side Sorting",
          "Adding Server Side Filtering",
          "Adding Server Side Paging",
          "Summary",
          "Quiz: Sorting, Filtering, and Paging"
        ],
        "Web API Versioning": [
          "Getting Started",
          "Setting up Versioning in .NET Web API",
          "Query String-Based versioning in Web API",
          "URL Based Versioning",
          "HTTP Header-Based Versioning",
          "HTTP Media Type-Based Versioning",
          "Summary",
          "Quiz: Web API Versioning"
        ],
        "Web API Logging with Serilog": [
          "Introduction to Logging",
          "The What, Why and How of Logging",
          "Setting up Serilog in Web API",
          "Logging to a File using Serilog",
          "Adding a new Log table using EFCore migrations",
          "Logging to an SQL Table using Serilog",
          "Retreiving all logs from the database",
          "Summary of Logging",
          "Quiz: Logging in ASP.NET Core with Serilog"
        ],
        "Unit Testing Web APIs using NUnit": [
          "Introduction to Unit Testing",
          "Choosing a Unit Testing Framework",
          "Setting up Unit Testing Environment",
          "Setting Up Unit Testing In-Memory DB",
          "Unit Testing GetAllPublishers in PublishersService",
          "Challenge: Unit Testing GetPublisherById in PublishersService",
          "Solution: Unit Testing GetPublisherById in PublishersService",
          "Unit Testing AddPublisher in PublishersService",
          "Unit Testing GetPublisherData method in PublishersService",
          "Unit Testing DeletePublisherById method in PublishersService",
          "Challenge: Set Up Unit Testing in a Controller",
          "Solution: Set Up Unit Testing in a Controller",
          "Unit Testing HttpGet(\"get-all-publishers\")] in PublishersController",
          "Challenge: Unit Testing [HttpGet(\"get-publisher-by-id/{id}\")]",
          "Solution: Unit Testing [HttpGet(\"get-publisher-by-id/{id}\")]",
          "Unit Testing [HttpPost(\"add-publisher\")] in PublishersController",
          "Unit Testing [HttpDelete(\"delete-publisher-by-id/{id}\")] in PublishersController",
          "Summary of Unit Testing",
          "Quiz - Unit Testing Web APIs using NUnit"
        ],
        "Securing Web APIs": [
          "Introduction of Token Based Authentication",
          "Authentication vs Authorization",
          "Traditional vs Token Based Authentication",
          "Adding Identity Tables using Entity Framework",
          "Configuring JWT in Startup.cs",
          "Setting up Authentication Controller",
          "Registering a New User",
          "Generating an Access & Refresh Token",
          "Logging In and Authorizing Users",
          "Refreshing Tokens",
          "Adding Role-based Authentication",
          "Summary of Token Based Authentication"
        ]
      },
      "requirements": [
        "Basic understanding of C# is preferred, but not required"
      ],
      "description": "A Web API is an application programming interface for the Web. With Web API, you get access to entire features of HTTP like URIs, request/response headers, content formatting, etc.\n\nThis course will teach you all you need to know to build personal or commercial applications using Asp.Net Core Web API as your development framework. You will start from just Visual Studio and build your app from the ground up.\nAs data storage, you will use an SQL database and Entity Framework will be used to interact with your data. You will also learn how to update database schema using Entity Framework migrations, how to add data to the database, get data from the database, update data in the database and also delete data from the database.\nYou will not only learn about the default features or capabilities that Asp.Net Core Web API has to offer, but you will also create your custom implementations like for example a custom Web API return type.\nYou will learn all these, step by step with hands-on practice. You will also have a lot of quizzes that will help to improve your knowledge of Web API.\n\nSome of the topics that this course covers are:\nIntroduction to Web API\nBuilding your first Asp.Net Core API\nWorking with relational data\nController Action return types\nSorting, Filtering, and Paging\nAsp.Net Core Web API Versioning\nUnit Testing\nand much more...\n\n\nYou can find the source code of this course on my Github account: @etrupja/complete-guide-to-aspnetcore-web-api",
      "target_audience": [
        "Any developer curious about .NET Core Web APIs"
      ]
    },
    {
      "title": "The Complete Elixir and Phoenix Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-elixir-and-phoenix-bootcamp-and-tutorial/",
      "bio": "Master Functional Programming techniques with Elixir and Phoenix while learning to build compelling web applications!",
      "objectives": [
        "Think with a Functional Programming mindset",
        "Use Phoenix to build compelling and FAST web apps",
        "Understand common Elixir syntax and design patterns",
        "Master the OAuth flow with Phoenix for authentication",
        "Learn the hidden secrets of Phoenix"
      ],
      "course_content": {
        "An Elixir Warmup": [
          "How to Get Help",
          "Course Resources",
          "Join Our Community!",
          "Installing Elixir",
          "Project Outline",
          "Generating a Project",
          "Elixir Modules and Methods",
          "Lists and Strings",
          "Object Oriented vs Functional Programming",
          "Method Arguments",
          "The Enum Module",
          "Immutability in Elixir",
          "Searching a List",
          "Comprehensions Over Lists",
          "Not Everything Works the First Time",
          "Solving Nested Arrays",
          "Importance of Index with Tuples"
        ],
        "Elixir's Amazing Pattern Matching": [
          "Pattern Matching",
          "Elixir's Relationship with Erlang",
          "Saving a Deck",
          "Pattern Matching Continued",
          "Pattern Matching in Case Statements",
          "The Pipe Operator",
          "The Pipe Operator Continued",
          "Module Documentation"
        ],
        "Testing and Documentation": [
          "Writing and Generating Documentation",
          "Creating Function Docs",
          "Introduction to Testing",
          "Amazingly Productive Doctests",
          "Writing Effective Doctests",
          "Case Tests"
        ],
        "A Few Side Topics": [
          "Introduction to Maps",
          "Updating Values in a Map",
          "Keyword Lists"
        ],
        "Image Manipulation with Elixir": [
          "Project Overview",
          "Identicon Generation Process",
          "Identicon Generation Process Continued",
          "The Main Pipeline",
          "Hashing a String",
          "The Purpose of the Hex List"
        ],
        "Structs - Elixir's Data Modeling Tool": [
          "Modeling Data with Structs",
          "Pattern Matching Structs",
          "Updating Structs",
          "Building the Grid",
          "Mirroring a Row",
          "Mapping with Custom Functions",
          "Grid Structure",
          "Giving an Identicon Shape",
          "Planning Image Creation",
          "Creating the Pixel Map",
          "Drawing Rectangles"
        ],
        "On to Phoenix": [
          "Quick Note About Phoenix",
          "Phoenix Installation",
          "Postgres Setup on OSX",
          "What is Phoenix?",
          "App Overview",
          "Into Phoenix We Go",
          "Server Side Templating",
          "Templates vs Layouts"
        ],
        "MVC in Phoenix": [
          "Phoenix's MVC Model",
          "Exploring the Router and Controller",
          "Views vs Templates",
          "The Model Layer in Phoenix",
          "Migration Files",
          "A Game Plan for Creating Topics",
          "Routing to the Topic Controller",
          "Setting Up the Topic Controller",
          "Code Reuse with Import, Alias, and Use",
          "Phoenix's Code Sharing Model",
          "Phoenix's Conn Struct",
          "A Phoenix Approach to Forms"
        ],
        "Models in Phoenix": [
          "The Topic Model",
          "Model Changesets and Validations",
          "More on Changesets",
          "Generating Changesets for the Form",
          "New Topic Form",
          "Phoenix Template Syntax",
          "Handling Form Submissions",
          "A Quick Review and Breather"
        ],
        "Working with Postgres": [
          "Introduction to the Repo Module",
          "Handling Failed Form Submissions",
          "Styling with CSS in Phoenix",
          "Breaking Restful Conventions Safely",
          "Using the Repo Module for Queries",
          "Building Lists in EEX Templates",
          "Redirects in the Controller",
          "Generating Anchors with Link Tags",
          "Router Wildcards",
          "Setting up the Edit Form",
          "Defining the Update Route",
          "Editing a Topic",
          "Linking to the Edit Topic Form",
          "The Resources Helper",
          "Deleting a Topic",
          "Wrapping up TopicController"
        ]
      },
      "requirements": [
        "Basic understanding of another programming language - Javascript, Ruby, C#, PHP, or similar"
      ],
      "description": "Elixir and Phoenix are two of the hottest technologies of 2017.\nFunctional Programming? You will learn it.  Phoenix with OAuth? Its here.  Postgres for data storage? Of course! Websockets too!\nThis course will get you up and running with Elixir and Phoenix quickly, and teach you the core knowledge you need to deeply understand and build amazingly fast web applications.\nWe'll start by mastering the fundamentals of functional programming with Elixir, including functions, modules, and the fantastic 'pipe' operator.  You'll learn how FP differs from classic object oriented programming with a variety of different practical examples.  Once you have a solid understanding of Elixir, we'll discuss how to build amazingly fast applications with the Phoenix Framework with an in-depth app.  Source code is provided for each lecture, so you will always stay up-to-date with the course pacing.\nIf you are new to Elixir, or if you've been working to learn it but sometimes feel like you still don't quite 'get it', this is the Elixir course for you! To learn Elixir and Phoenix you have to understand them.\nLearn how to use Elixir's built-in library to clean up your code\nMaster the differences between functional and object oriented programming\nGrasp all of the different pieces of syntax in common Elixir programs\nBuild interesting and challenging projects that have practical uses\nDevelop a web app using Phoenix that can be expanded in a variety of different ways\nGo behind the scenes of Phoenix and learn how the internals work\nMaster the OAuth flow by authenticating users with the Github Public OAuth service\nPractice working with databases by integrating Postgres into your app\nI've built the course that I would have wanted to take when I was learning Elixir and Phoenix. A course that explains the concepts and how they're implemented in the best order for you to learn and deeply understand them.",
      "target_audience": [
        "This course is for anyone looking to learn Elixir and Phoenix"
      ]
    },
    {
      "title": "The Complete JavaScript Course 2025: From Zero to Expert!",
      "url": "https://www.udemy.com/course/the-complete-javascript-course/",
      "bio": "The modern JavaScript course for everyone! Master JavaScript with projects, challenges and theory. Many courses in one!",
      "objectives": [
        "Become an advanced, confident, and modern JavaScript developer from scratch",
        "Build 6 beautiful real-world projects for your portfolio (not boring toy apps)",
        "Become job-ready by understanding how JavaScript really works behind the scenes",
        "How to think and work like a developer: problem-solving, researching, workflows",
        "JavaScript fundamentals: variables, if/else, operators, boolean logic, functions, arrays, objects, loops, strings, etc.",
        "Modern ES6+ from the beginning: arrow functions, destructuring, spread operator, optional chaining (ES2020), etc.",
        "Modern OOP: Classes, constructors, prototypal inheritance, encapsulation, etc.",
        "Complex concepts like the 'this' keyword, higher-order functions, closures, etc.",
        "Asynchronous JavaScript: Event loop, promises, async/await, AJAX calls and APIs",
        "How to architect your code using flowcharts and common patterns",
        "Modern tools for 2022 and beyond: NPM, Parcel, Babel and ES6 modules",
        "Practice your skills with 50+ challenges and assignments (solutions included)",
        "Get fast and friendly support in the Q&A area",
        "Course pathways: design your unique learning path according to your goals!"
      ],
      "course_content": {},
      "requirements": [
        "No coding experience is necessary to take this course! I take you from beginner to expert!",
        "Any computer and OS will work — Windows, macOS or Linux. We will set up your text editor the course.",
        "A basic understanding of HTML and CSS is a plus, but not a must! The course includes an HTML and CSS crash course."
      ],
      "description": "The #1 bestselling JavaScript course on Udemy!\nJust updated with ES2024 and ES2025!\n\"Really, really well made course. Super in-depth, with great challenges and projects that will solidify your Javascript understanding. I found the lectures were paced perfectly -- Jonas doesn't skip over anything that might be useful to a JS developer\" — Carson Bartholomew\n\n\nJavaScript is the most popular programming language in the world. It powers the entire modern web. It provides millions of high-paying jobs all over the world.\nThat's why you want to learn JavaScript too. And you came to the right place!\n\n\nWhy is this the right JavaScript course for you?\nThis is the most complete and in-depth JavaScript course on Udemy (and maybe the entire internet!). It's an all-in-one package that will take you from the very fundamentals of JavaScript, all the way to building modern and complex applications.\nYou will learn modern JavaScript from the very beginning, step-by-step. I will guide you through practical and fun code examples, important theory about how JavaScript works behind the scenes, and beautiful and complete projects.\nYou will become ready to continue learning advanced front-end frameworks like React, Vue, Angular, or Svelte.\nYou will also learn how to think like a developer, how to plan application features, how to architect your code, how to debug code, and a lot of other real-world skills that you will need in your developer job.\nAnd unlike other courses, this one actually contains beginner, intermediate, advanced, and even expert topics, so you don't have to buy any other course in order to master JavaScript from the ground up!\nBut... You don't have to go into all these topics. This is a huge course, because, after all, it's \"The Complete JavaScript Course\". In fact, it's like many courses in one! But you can become an excellent developer by watching only parts of the course. That's why I built this course in a very modular way, and designed pathways that will take you through the course faster.\nBy the end of the course, you will have the knowledge and confidence that you need in order to ace your job interviews and become a professional developer.\n\n\nWhy am I the right JavaScript teacher for you?\nMy name is Jonas, I'm an experienced web developer and designer, and one of Udemy's top instructors. I have been teaching this bestselling course since 2016 to over 850,000 developers, always listening to feedback and understanding exactly how students actually learn.\nI know how students learn JavaScript and what they need in order to master it. And with that knowledge, I designed the ideal course curriculum. It's a unique blend of real-world projects, deep explanations, theory lectures, and challenges, that will take you from zero to an expert and confident JavaScript developer in just a couple of weeks.\n\n\nSo what exactly is covered in the course?\nBuild 5 beautiful real-world projects for your portfolio! In these projects, you will learn how to plan and architect your applications using flowcharts and common JavaScript patterns\nMaster the JavaScript fundamentals: variables, if/else, operators, boolean logic, functions, arrays, objects, loops, strings, and more\nLearn modern JavaScript (ES6+) from the beginning: arrow functions, destructuring, spread operator, default arguments, optional chaining, and more\nHow JavaScript works behind the scenes: engines, the call stack, hoisting, scoping, the 'this' keyword, reference values, and more.\nDeep dive into functions: arrow functions, first-class and higher-order functions, bind, and closures.\nDeep dive into object-oriented programming: prototypal inheritance, constructor functions (ES5), classes (ES6), encapsulation, abstraction, inheritance, and polymorphism. [This is like a small standalone course]\nDeep dive into asynchronous JavaScript: the event loop, promises, async/await, and error handling. You will use these to access data from third-party APIs with AJAX calls. [This is like a small standalone course]\nLearn modern tools that are used by professional web developers: NPM, Parcel, Babel, and ES6 modules\nCheck out the course curriculum for an even more detailed overview of the content :)\n\n\nThis is what's also included in the package:\nUp-to-date HD-quality videos, that are easy to search and reference (great for Udemy Business learners)\nProfessional English captions (not the auto-generated ones)\nDownloadable starter code and final code for each section\nDownloadable slides for 40+ theory videos\n25+ coding challenges and 25+ assignments to practice your new skills\n\n\nDoes any of these look like you? If so, then start this adventure today, and join me and 850,000+ other developers in the only JavaScript course that you will ever need!",
      "target_audience": [
        "Take this course if you want to gain a true and deep understanding of JavaScript",
        "Take this course if you have been trying to learn JavaScript but: 1) still don't really understand JavaScript, or 2) still don't feel confident to code real apps",
        "Take this course if you're interested in using a library/framework like React, Angular, Vue or Node in the future",
        "Take this course if you already know JavaScript and are looking for an advanced course. This course includes expert topics!",
        "Take this course if you want to get started with programming: JavaScript is a great first language!"
      ]
    },
    {
      "title": "Architect SaaS Applications - Unique Challenges & Solutions",
      "url": "https://www.udemy.com/course/architect-saas-applications-unique-challenges-solutions/",
      "bio": "Intro to SaaS, scalability, multi-tenancy, provisioning, security, APIs, management, maintenance",
      "objectives": [
        "Architect Scalable SaaS applications",
        "Implement multi-tenancy models",
        "Design SaaS management and monitoring frameworks"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview & Expectations",
          "Introduction to SaaS",
          "SaaS Elements",
          "SaaS vs IaaS vs PaaS",
          "Architecting SaaS - Challenges",
          "@Review - SaaS Basics"
        ],
        "Course Use Cases - An Introduction": [
          "Introduction to the Use Cases",
          "ITS - Functionality",
          "ITS - Functional Architecture",
          "LCS - Functionality",
          "LCS - Functional Architecture",
          "Use Case Process for the Course"
        ],
        "Multi-tenancy Architecture": [
          "Intro to Multi-tenancy",
          "Tenant Resource Allocation",
          "Architecting Resource Allocation",
          "Tenant Context Awareness",
          "Intro to Tenant State",
          "Architecting Stateless Services",
          "Architecting Stateful Services",
          "@Review - Multi-tenancy architecture",
          "<Practice/> - ITS Use Case - Multi-tenancy",
          "<Practice/> - LCS Use Case - Multi-tenancy"
        ],
        "Data Services Architecture": [
          "Intro to SaaS Data",
          "Database Partitioning",
          "Real time Cache",
          "Machine Logs",
          "Inter-component messaging",
          "Multi-component Messaging",
          "<Practice/> - ITS Use Case - Data Services",
          "<Practice/> - LCS Use Case - Data Services"
        ],
        "Provisioning Architecture": [
          "Intro to SaaS Provisioning",
          "Templates and Automation",
          "Custom & API based Provisioning",
          "Change Propagation",
          "Local Cache",
          "<Practice/> - ITS Use Case - Provisioning",
          "<Practice/> - LCS Use Case - Provisioning"
        ],
        "Monitoring and Upgrades - Architecture": [
          "Service Levels",
          "Types of failures",
          "Architecting SaaS monitoring",
          "Upgrades in SaaS",
          "Architect for Upgrades",
          "<Practice/> - ITS Use Case - Monitoring and Upgrades",
          "<Practice/> - LCS Use Case - Monitoring and Upgrades"
        ],
        "Security and Integrations - Architecture": [
          "Security in SaaS",
          "Architect for Security",
          "Intro to SaaS Integrations",
          "Architecting Integrations",
          "<Practice/> Integrating ITS and LCS Use Cases"
        ],
        "Conclusion": [
          "Closing Remarks"
        ]
      },
      "requirements": [
        "Software Development Experience",
        "Software Architecture"
      ],
      "description": "Are you a software professional who is intrigued by the term “Software-as-a-Service”? Have you thought about how Google, Microsoft, Salesforce and others build and manage these applications? Do you yearn to learn about the unique challenges in architecting and building these applications and how to solve them? If you are like countless other professionals who think so, you have come to the right place. This course unveils the principles, patterns and practices on which SaaS applications are architected and empowers you build some of your own.\nYou will learn about the unique challenges of SaaS – scalability, multi-tenancy, monitoring and integrations.  You will become familiar with various options and understand their strength, shortcomings and uses. You will take up two use cases and build SaaS architectures for them throughout the course.\nThis course is intended for experienced software developers and software architects who are new to SaaS. If also helps students for IT to gain insight and understanding about SaaS. This is an architecture course. There is NO detailed design or source code that is discussed in this course.",
      "target_audience": [
        "Software Developers",
        "Software Architects",
        "New to SaaS"
      ]
    },
    {
      "title": "Angular Security Masterclass (with FREE E-Book)",
      "url": "https://www.udemy.com/course/angular-security/",
      "bio": "Practical Guide to Angular Security - Add Authentication / Authorization (from scratch) to an Angular / Node App",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Get a solid foundation in Web Security Fundamentals",
        "Perform the attacks yourself manually, in order to fully understand them",
        "Understand and Defend an Application against common security attacks, such as Dictionary Attacks, Cross-Site Request Forgery, etc.",
        "Understand JWT in-depth, including the multiple signature types",
        "Design and Implement Application Authentication and Authorization from scratch",
        "Know how to add Authentication to an Angular Application using JWTs (and traditional Server Sessions)",
        "Know how to add RBAC (Role based Access control) Authorization to an Angular application"
      ],
      "course_content": {
        "Introduction": [
          "Angular Security Course Helicopter View",
          "IMPORTANT",
          "The Typescript Jumpstart Ebook",
          "Installing Git, Node, NPM and Choosing an IDE",
          "Installing The Lessons Code - Learn Why Its Essential To Use NPM 5",
          "How To Run Node In TypeScript With Hot Reloading",
          "Guided Tour Of The Sample Application"
        ],
        "Sign Up Service - Initial Client and Server-Side Implementation": [
          "Client Side Authentication Service - API Design",
          "Client Authentication Service - Design and Implementation",
          "The New Angular HTTP Client - Doing a POST Call To The Server",
          "User Sign Up Server-Side Implementation in Express"
        ],
        "Password Storage - Hashing and Salting": [
          "Introduction To Cryptographic Hashes - A Running Demo",
          "Some Interesting Properties Of Hashing Functions - Validating Passwords",
          "Learn Offline Dictionary Attacks - Why Use Cryptographic Salting?",
          "Password Key Derivation Functions and The Node Crypto Module",
          "Using the Argon 2 Hashing Function In Our Sign Up Backend Service",
          "How To Implement a Password Policy",
          "Displaying Client-Side Password Validation Errors - What's Next?"
        ],
        "User Session Management": [
          "Switch Branches And User Session Management Section Introduction",
          "Node Util Promisify - How to Convert Callback Based APIs to Promise-based",
          "Introduction To Node Async Await - Creating a User Session Id",
          "Modeling a User Session - Classes Or Interfaces?",
          "Browser Cookies - How To Use Them For User Session Management",
          "Attack Scenario - User Identity Theft Attack Using A Third-Party Server",
          "How To Better Protect The Session Id Using HTTP Only Cookies",
          "HTTPS Secure Cookies - Running the Angular CLI in HTTPS Mode",
          "Client-Side User Session Management - Retrieve User Data From Session",
          "An Ancient Vulnerability - JSON Hijacking, Securing REST Endpoint",
          "Implementing Logout - Destroying The User Session",
          "User Login - Step-by-Step Implementation",
          "Finish Login Functionality and Section Conclusion"
        ],
        "Introduction To JSON Web Tokens": [
          "JSON Web Tokens - Section Introduction",
          "Creating Your First JWT - What Does It Look Like?",
          "JSON Web Tokens In a Nutshell",
          "JSON Web Tokens In Detail - The Header and the Payload",
          "JWT Signature With HS256 - How Does It Work? Learn What is an HMAC Code",
          "JWT Signature With RS256 - Learn The Advantages Compared to HS256",
          "Creating a JWT User Session - Setting Subject and Expiration"
        ],
        "JWT In Practice - Step-by-Step Authentication With JSON Web Tokens": [
          "User Sign Up With JWT - Learn How To Combine Cookies and JWTs",
          "Server-Side User Identification Via a Custom Express Middleware",
          "User Retrieval Express Middleware - Error Handling With Async Await",
          "Finishing The Implementation Of User Identification Middleware",
          "Backend JWT-based Security Using an Express Middleware",
          "JWT-based Authentication - Section Conclusion and What's Next"
        ],
        "CSRF - Cross Site Request Forgery": [
          "Understanding CSRF - Step-by-Step Attack Simulation",
          "CSRF In Detail - Understanding Attack Limitations",
          "Implementing the CSRF Double Submit Cookie Defense - Server Implementation",
          "How To Defense Our Application Against CSRF - Client And Server Defenses"
        ],
        "JWT-based Authentication With Auth0": [
          "Auth0 Section Introduction - Using JWTs to Delegate Authentication To 3rd Party",
          "Integrating a 3rd Party Authentication Provider - Auth0",
          "Setting Up an Auth0 Externally Hosted Login Page",
          "How does Auth0 Authentication Work? Logging In a User",
          "Receiving The Auth0 JWT at Application Startup with parseHash",
          "Storing the Auth0 JWT In Local Storage",
          "Adapting the UI To the User Login Status",
          "Angular HTTP Interceptor - Build an Authentication Interceptor",
          "JWT Authentication with express-jwt and JSON Web Key Set - Backend Design",
          "Auth0 JWT-based Authentication - Backend Implementation",
          "User Sign Up -Requesting Permission to Use Users Email",
          "User Signup and User Preferences - Frontend Implementation",
          "User Signup and User Profile - Server-Side Implementation",
          "Section Summary - The Main Benefit of JWTs"
        ],
        "RBAC Role-Based Authorization": [
          "RBAC Role-Based Authorization - Section Introduction",
          "Setting Up The RBAC Solution - Adding Roles to our JWT",
          "Angular RBAC Authorization - Solution Overview",
          "Backend Express Authorization Route - Design Overview",
          "Backend Express Authorization Route - Implementation and Demo",
          "The Admin Login As User Backend Service",
          "UI RBAC Authorization With The rbacAllow Structural Directive",
          "The rbacAllow Structural Directive - Final Implementation and Demo",
          "Authorization Router Guard - Initial Implementation",
          "Authorization Router Guard Completed - Configuring a Factory Provider"
        ],
        "Conclusion": [
          "Bonus Lecture (Updated October 2025)",
          "Conclusion and Key Takeaways"
        ]
      },
      "requirements": [
        "Just some previous knowledge of Angular and Typescript"
      ],
      "description": "The course is an Web Application Security Fundamentals Course, where the application will use the Angular/Node stack.\nAll the server code is in Typescript, but the security concepts explained in it are applicable to other technology stacks.\nThis course includes an auxiliary Ebook - The Typescript Jumpstart Ebook\n\nWe will use several MIT licensed Angular and Node packages from Auth0 (that you could use in your application), and we will also include a demo of how to use Auth0 for doing Application User Management.\nIts important to realize that this is NOT an Auth0 specific course. Auth0 will be the source of a couple of open source packages we will use, and will be doing a quick demo of it to show how JWT makes it simple to delegate authentication to a third-party system, which could be developed in-house as well.\nSecurity - A Fundamental Step in a Software Development Career\nSecurity is probably the number one advanced topic that Software Developers are expected to master when going forward in their software development careers.\nSecurity knowledge is hard to come by but its essential for advancing to more senior software development positions, like for example Application Architect or similar.\nLearning Web Security Fundamentals, knowing how to design an application for security, and knowing how to recognize and fix security issues is an essential skill for a senior developer.\nBut the problem is that security knowledge is orthogonal to most other topics and it typically takes years to learn.\nThe good news is that once you have it, Security knowledge has a much longer shelf live than most software development knowledge in general.\nMost of the vulnerabilities and fixes that you will learn in this course were useful 10 years ago, and will (very likely) still be useful 10 years from now - Angular and Node are just an example of one stack, to make the course examples more practical.\nSecurity is seen as something really hard to master - this is actually not the case! Application Security is much more approachable than you might think, depending on how you learn it.\nWhat Is The Best Way To Learn Security in a Fun and Practical Way?\nHere is what we will do: we are going to take the skeleton of a running application that has no security yet, and we are going to secure the application step-by-step.\nUsing a couple of MIT packages from Auth0 (that you would be able to use in any project), we are going to implement the Sign-Up and Login functionality from scratch, and because security cannot be enforced only at the client-side, we will implement both the frontend in Angular and the backend in Node.\nAs we secure the application, and we are going to periodically attack the application many times during the course, to prove that the vulnerabilities are real!!\nBy doing so, we will learn along the way the fundamentals of Authentication and Authorization, we will become familiar with common vulnerabilities like Dictionary Attacks, CSRF and others, and we will get familiar with commonly used cryptographic tools like Hashing, Salting, JWT, password storage recommendations and more.\nPlease don't be intimidated by these concepts: The focus in this course will not be on the internals of each of the cryptographic tools that we will use, but instead on understanding on a high-level what problems do these tools solve, when to use each and why.\nWe will also learn how to design our application for security, and we will learn how in many situations application design is ou best defense.\nCourse Overview\nWe will start at the beginning: we will see the proper way of doing User Management and Sign Up: we will learn how to store passwords in a database, and we will introduce cryptographic hashes in an approachable way.\nOnce we have the Sign-Up functionality in place, we will implement Login and understand the need for a temporary identity token. Our first implementation will be stateful login, where the token is kept at the server level.\nAnd at this point we could think we have authentication in place, but we decide to prepare our application for scalability, so we decide to try a JWT (JSON Web Tokens) based approach, because we know that this is what services like Firebase and Auth0 use.\nWe will use a couple of Auth0 packages to quickly refactor our Login to be JWT based, and learn the advantages of using JWT, and some potential disadvantages as well.\nWe will then see how its also possible to do Authentication using a third-party JWT-based service like Auth0, effectively removing all authentication logic from both our codebase and our database, and delegating it to a third-party service.\nNote that this Auth0-specific part is only a small part of the course, and its main goal is to show how its possible at an enterprise level to delegate authentication to a centralized service, whithout having to introduce direct communication between applications and the centralized authentication service.\nThis means that if you can't use Auth0 at your company, you can apply the same design principles and design a JWT-solution that delegates authentication to a centralized server behind the firewall.\nWe will then cover how to do UI-level role-based functionality in Angular using the Angular Router, and a custom directive for showing or hiding certain parts of the UI depending on the role of the user. We will learn why the Router cannot enforce actual security.\nWe will also talk about server-side Authorization, and we will implement a commonly needed security-related Admin Level functionality: The Login As User service, that allows an admin to login as any user, to investigate a problem report. We can see why we would need to secure this functionality!\nAt the end of all these vulnerabilities and security fixes, we will have a well secured application and we will have learned a ton of security-related concepts along the way in a fun and practical way!\nWhat Will you Learn In this Course?\nWith this course, you will have a rock-solid foundation on Web Application Security Fundamentals, and you will have gained the practical experience of applying those concepts by defending an application from a series of security attacks. You will have done so by actually performing many of the attacks!\nYou will have learned these concepts in the context of an Angular/Node application, but these concepts are applicable to any other technology stack.\nYou will learn what built-in mechanisms does Angular provide to defend against security problems, and what vulnerabilities it does NOT defend against and why.\nYou will be familiar with best practices for password storage, custom authentication service design and implementation, you will know the essentials about cryptographic hashes, be familiar with JWT and several commonly used open source Auth0 packages.\nYou will be familiar with the following security vulnerabilities: Dictionary attacks, identity token highjacking techniques, the browser same-origin policy, how to combine cookies with JWTs and why, Cross--Site Request Forgery or CSRF, common design vulnerabilities, and more.\nYou will know common practical solutions for securing both enterprise and public internet applications, such as how to use JWT to delegate authentication to a centralized service, which could be Auth0 or a in-house developed service that follows similar principles.\nYou will know how to implement UI-level authorization and use client-side constructs like Router guards to implement it and even build your own authorization-related UI directives.\nYou will also learn about server side authorization, and how to implement a commonly needed backend service that is only accessible to Admins - Login As User.\nWhat Will You Be Able to do at the End Of This Course?\nThis course could help you take your development career to a more senior level, where the knowledge about web application security is essential and a key differentiating factor.\nIf you are a private internet business owner or thinking of launching your own platform, this course will contain most of what you need in practice to secure your own online platform in a robust and effective way.\nWith this course, you will have the knowledge necessary for evaluating many third-party security-related solutions, and you will know where to look for vulnerabilities in your application.\nYou will be able to understand most application-level vulnerability reports that come out of security audits done by third party companies, and you will be able to understand and fix the most commonly reported problems.",
      "target_audience": [
        "Angular Developers looking to learn in-depth Web Application Security in the specific context of an Angular Application"
      ]
    },
    {
      "title": "Angular Advanced MasterClass & FREE E-Book",
      "url": "https://www.udemy.com/course/angular-advanced-masterclass/",
      "bio": "Build Your Own Library, Learn Advanced Angular Features",
      "objectives": [
        "Code in Github repository with downloadable ZIP files per section",
        "Learn the most advanced features of Angular",
        "learn how to how to build open source Angular libraries",
        "Component API Design",
        "Component Styling best practices",
        "Templates and Template Outlets, ng-content, ng-container, style isolation and customization",
        "AOT, global events, debugging with the CLI, @ViewChildren, @ContentChildren",
        "Light DOM vs Shadow DOM, @HostBinding, @HostListener, dynamic components",
        "Directives, handling keyboard events, testing, animations and more"
      ],
      "course_content": {
        "Course Overview and Development Environment Setup": [
          "Angular Advanced Course - Helicopter View",
          "Recommended Software Versions",
          "The Typescript Jumpstart Ebook",
          "Installing Node, NPM, Git, IDE - An Alternative Webstorm Version",
          "Installing The Lessons Code - Learn About Git Remote vs Local Branches",
          "Installing Yarn and CLI, Setting Up a Development Server"
        ],
        "Our First Angular Library - The Font Awesome And Material Design Input Boxes": [
          "How to Make The Most Of the Q&A Section",
          "Demo of Our First Library - Font Awesome And Google Material Icons Input",
          "Beginning The Implementation Of The Font Awesome Input Box",
          "Angular Component Styling - Watch Style Isolation In Action",
          "Learn An Angular CSS Extension Feature - The Host Pseudo Selector",
          "Component Styling Best Practices - Ensure Solid Styles For Multiple Widget Sizes",
          "Component API Design - Simpler and More Reusable Components With ng-content",
          "Understanding ng-content and Style Isolation - Learn The Deep Style Modifier",
          "ViewChild / @ContentChild Configuration in Angular 8",
          "The ContentChild Decorator, How Does It Work ? Component Design Best Practices",
          "ContentChild, Directives and HostListener - Implementing the Input Focus Feature",
          "Implementing The input Focus Functionality - The HostBinding Decorator"
        ],
        "Styling Angular Components - Best Practices": [
          "Separating Structural Styles From Theme Styles - Making Components Themeable",
          "How To Create An Alternative Component Theme And Ship It With The Library",
          "Creating an Alternative Component Theme, See the CLI Sass Support In Action",
          "Angular Style Isolation - Emulated View Encapsulation - Learn How It Works",
          "Learn 2 More Alternative Ways of Handling CSS in Angular Applications",
          "Setting Up A Library Module, Confirming AOT is Supported",
          "Angular Component Testing Overview",
          "The Angular CLI Testing Infrastructure - Running Our First Test",
          "Adding Tests the Font Awesome Input - How to Test a Component",
          "Angular Component Testing - Producing a More Readable Test Report",
          "How To Debug Angular Tests"
        ],
        "How to Publish An Angular Library": [
          "How To Publish A Library To a Private Enterprise NPM Repository",
          "Material Design Input Box - Consolidation Exercise",
          "Material Design Input Box - Consolidation Exercise Solution",
          "Introduction To The Angular Library Quickstart Seed Repository",
          "Learn The Main Benefits of Using The Angular Package Format",
          "Review And Publication Of An Angular Library In the Angular Package Format",
          "Final Library Publication Step - Test The Library With Different Consumers"
        ],
        "Writing a Tab Container Component": [
          "Angular Library Demo - A Tab Container With Configurable Look And Feel",
          "Switching To a New Branch - Reviewing the Tab Container Starting Point",
          "Angular Component Styling - Commonly Needed Sass Features",
          "Implementing The Tab Panel Component - Initial Version Up And Running",
          "Using the Angular Template and Styling Features To Simplify Our HTML and CSS",
          "Content Projection With @ContentChildren and The AfterContentInit Lifecycle Hook",
          "The Tab Container Component - See The Initial Implementation Up And Running",
          "Angular Advanced Features - ng-template , ng-container, ngTemplateOutlet",
          "Learn Angular Template References And Input Template Partials",
          "Testing The Tab Container Component",
          "Angular Component Testing - How To Simulate User interaction"
        ],
        "Modal Component and Structural Directives": [
          "Modal Component and Structural Directives - Section Introduction",
          "How To Implement a Modal Component - Reviewing The HTML and CSS",
          "Implementing a Modal Component - The First Version Up And Running",
          "Configurable Angular Components - Content Projection and Input Templates",
          "Structural Directives - How Do They Work ? Understanding Their Syntax",
          "Step-By-Step Implementation of a Structural Directive - Learn ViewContainerRef",
          "Running Into A Design Issue While Implementing The Modal Close Functionality",
          "Implementing A General Communication Mechanism For Directive Interaction",
          "Angular Global Keyboard Handling With EventManager",
          "Learn Angular Multi-Slot Content Projection",
          "Completing the Authentication Dialog - Learn How To Use ng-template Inputs",
          "Preventing Memory Leaks",
          "Implementing The Modal Tests, What's Next ?"
        ],
        "Advanced Keyboard Handling - The Input Mask Directive": [
          "The Input Mask Directive - Switching Branches",
          "The Input Mask Directive That We Are About To Build",
          "Input Mask Directive Skeleton - Learn ElementRef and Native Element Interaction",
          "Implementing The Mask PlaceHolder Using The Reduce Functional Operator",
          "HostListener Method Arguments - Blocking Default Keyboard Behavior",
          "Overwritting the Current Cursor Position",
          "Implementing The Input Mask Cursor Navigation Functionality",
          "Digit Validation - Function Types and Polymorphic Programming Without Class",
          "Digit Validation - Avoiding Writing Special Code For Null And Undefined",
          "Input Mask - Implementing The Delete and Backspace Behavior",
          "Finishing The Input Mask - The Select DOM Event and Enabling Text Copy"
        ],
        "Final Example - Payment Widget Modal With Animations": [
          "All Together - Demo Of the Payment Widgets Modal",
          "Angular Animations - Fade In and Fade Out Animations",
          "Angular Animations - How To Define a Transition and an Animation Trigger",
          "Angular Animation Parameters and Animation Lifecycle Hooks"
        ],
        "Conclusions and Bonus Lesson": [
          "Bonus Lecture (Updated October 2025)",
          "Conclusions and Key Points"
        ]
      },
      "requirements": [
        "Basic knowledge of Angular",
        "Typescript"
      ],
      "description": "Would You Like to Build Your Own Open Source Library?\nProbably all of us developers have thought at some point in time to build our own library and contribute to the overall open source community. The goal of this course is to give you all the tools necessary for you to be able to do your own open source Angular Library.\nWe will build a series of small open source libraries of progressively increasing difficulty, and we will learn a large number of Angular advanced features in a very fun and practical way.\nWhat Is The Best Way To Learn Advanced Angular Features?\nThe best way to learn Angular and its most advanced features is to simply take and use it to build something very concrete, like for example an application or a library - and do it in a step-by-step way, as there is no replacement for that experience.\nIn order to understand a technology, we really need to build something non-trivial with it - blog posts and docs will only get us so far.\nThis is of course very time-consuming to do without any help because we will have to learn everything by ourselves along the way as we build something, gluing together an endless number of blog posts, documentation and Stackoverflow answers.\nSo because of this, in order to really dive deep into Angular we will be using it to build a series of small reusable libraries. The goal is to create a practice scenario, and learn the advanced features of Angular in their original use cases, where they make the most sense and so are easier to learn.\nWhat Libraries Will We Build In This Course?\nWe will be building the following libraries, and learn how to publish them on NPM using the Angular Package Format: We will start by doing a Font Awesome customizable Input Box and learn the advantages of designing our components using content projection over a more input/output based design. At this stage we will also introduce the Angular Testing ecosystem.\nThen we will progressively increase the difficulty of each library: we will build a dynamic tab container that allows to receive a template as a component input, effectively allowing to override parts of the component template while keeping a default look and feel for the component.\nWe will then build a reusable dynamic modal component with customizable content. This component have its contents configurable via either content projection or an input template, and will introduce the notion of Structural Directives.\nWe will also learn how directives and components of a given module can interact in a transparent way, independently of the place where they are used in the template, using a shared library service. We will then build a Input mask directive, where we will cover some advanced keyboard handling behavior.\nAt the end of the course, we are going to take all the components and directives that we built in previous sections, and we are going to build one larger example using them: A Payment Modal Widget!\nWe will then introduce the Angular Animations module, and use it to animate the modal widget, we will see how to define animations that can be reused across components.\nWhat Will you Learn In this Course?\nWe will learn how to create an AOT compatible library in the Angular Package Format, how to define a library module, how to isolate the styles of a component but still make them customizable, how to design components and directives to make them easier to maintain - making them customizable while at the same time giving the components great default behavior.\nWe will cover all of the more advanced features of Angular, including Component API Design, Component Styling best practices, Templates and Template Outlets, ng-content, ng-container, style isolation and customization, AOT, global events, debugging with the CLI, @ViewChildren, @ContentChildren, Light DOM vs Shadow DOM, @HostBinding, @HostListener, dynamic components, directives, handling keyboard events, testing, animations and more (this is a non-extensive list).\nBut more than presenting the features in isolation, we will use them in real use cases which will make the features much easier to learn.\nWhat Will You Be Able to do at the End Of This Course?\nBy the end of this course you will know many of the most advanced features of Angular, but most of all you will know when to use them and why. You will know how to build open source Angular libraries, and know how to make them available to the open source community on NPM.\nWith this advanced course, you will have a rock-solid foundation on Angular: you will very likely be able to tackle the more advanced Angular development tasks that you will come across in your day to day job or personal projects.\n\n\nHave a look at the course free lessons below, and please enjoy the course!",
      "target_audience": [
        "Software Developers looking to dive deeper into Angular",
        "Software Developers looking to learn how to publish an open-source Angular library"
      ]
    }
  ]
}